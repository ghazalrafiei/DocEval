['text':' synchronize the worker node parameters with the root node','line_number':51,'multiline':False]
['text':' TODO: there are many improvements that can be done to this implementation','line_number':104,'multiline':False]
['text':' distribute the compute graph into slices across the MPI nodes','line_number':126,'multiline':False]
['text':'','line_number':127,'multiline':False]
['text':' the main node (0) processes the last layers + the remainder of the compute graph','line_number':128,'multiline':False]
['text':' and is responsible to pass the input tokens to the first node (1)','line_number':129,'multiline':False]
['text':'','line_number':130,'multiline':False]
['text':' node 1:   [(  0) * n_per_node, (  1) * n_per_node)','line_number':131,'multiline':False]
['text':' node 2:   [(  1) * n_per_node, (  2) * n_per_node)','line_number':132,'multiline':False]
['text':' ...','line_number':133,'multiline':False]
['text':' node n-1: [(n-2) * n_per_node, (n-1) * n_per_node)','line_number':134,'multiline':False]
['text':' node 0:   [(n-1) * n_per_node,            n_nodes)','line_number':135,'multiline':False]
['text':'','line_number':136,'multiline':False]
['text':' the first node (1) receives the input tokens from the main node (0)','line_number':139,'multiline':False]
['text':' recv input data for each node into the "inp0" tensor (i.e. the first node in the compute graph)','line_number':142,'multiline':False]
['text':' node 0 sends the input tokens to node 1','line_number':146,'multiline':False]
['text':' recv the output data from the last node','line_number':149,'multiline':False]
['text':' attach the input data to all nodes that need it','line_number':175,'multiline':False]
['text':' TODO: not great - should be able to do this without modifying the compute graph (see next TODO below)','line_number':176,'multiline':False]
['text':' TODO: instead of rearranging the nodes, we should be able to execute a subset of the compute graph','line_number':186,'multiline':False]
['text':' the first node performs the "get_rows" operation, the rest of the nodes get the data from the previous node','line_number':192,'multiline':False]
['text':'fprintf(stderr, "%s: node %d: processing %d nodes [%d, %d)\n", __func__, mpi_rank, gf->n_nodes, il0, il1);','line_number':199,'multiline':False]
['text':' send the output data to the next node','line_number':212,'multiline':False]
