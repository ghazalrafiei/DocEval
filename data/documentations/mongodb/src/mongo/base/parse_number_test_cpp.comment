['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':' for str::stream()!','line_number':45,'multiline':False]
['text':'
 * The PARSE_TEST macro will generate boilerplate code to enable applying the same function to
 * multiple types.
 * NumberType is a template parameter representing a type the test is supposed to pass for.
 * After writing a PARSE_TEST, there is an object with the name passed in as the parameter. This
 * should be passed to the apply function along with a list of types to apply to the function.
 ','line_number':103,'multiline':True]
['text':' no octals for double','line_number':118,'multiline':False]
['text':' Max + 1','line_number':245,'multiline':False]
['text':' Min - 1 (equivalent to -(Max + 2))','line_number':249,'multiline':False]
['text':' since the largest inferred base is 16, next non-number character will be g','line_number':327,'multiline':False]
['text':' These both have one too many hex digits and will overflow the multiply. The second overflows','line_number':453,'multiline':False]
['text':' such that the truncated result is still greater than either input and can catch overly','line_number':454,'multiline':False]
['text':' simplistic overflow checks.','line_number':455,'multiline':False]
['text':' 2**64 exactly. This will overflow the add.','line_number':459,'multiline':False]
['text':' Too large when down-converting.','line_number':463,'multiline':False]
['text':' Too large when down-converting.','line_number':467,'multiline':False]
['text':' Parse hexadecimal representations of a double.  Hex literals not supported by MSVC, and','line_number':483,'multiline':False]
['text':' not parseable by the Windows SDK libc or the Solaris libc in the mode we build.','line_number':484,'multiline':False]
['text':' See SERVER-14131.','line_number':485,'multiline':False]
['text':' Parse hexadecimal representations of a double.  Hex literals not supported by MSVC, and','line_number':539,'multiline':False]
['text':' not parseable by the Windows SDK libc or the Solaris libc in the mode we build.','line_number':540,'multiline':False]
['text':' See SERVER-14131.','line_number':541,'multiline':False]
['text':' namespace','line_number':549,'multiline':False]
['text':' namespace mongo','line_number':550,'multiline':False]
