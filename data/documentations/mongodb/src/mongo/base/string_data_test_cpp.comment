['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':' IWYU pragma: keep','line_number':43,'multiline':False]
['text':' Try some constexpr initializations','line_number':98,'multiline':False]
['text':' Try all possibly-relevent `pos` arguments.','line_number':190,'multiline':False]
['text':' All expectations should be consistent with std::string::find.','line_number':192,'multiline':False]
['text':' Try all possibly-relevent `pos` arguments.','line_number':222,'multiline':False]
['text':' All expectations should be consistent with std::string::find.','line_number':224,'multiline':False]
['text':' All expectations should be consistent with std::string::rfind.','line_number':285,'multiline':False]
['text':' Try all possibly-relevent `pos` arguments.','line_number':291,'multiline':False]
['text':' this is to verify we match std::string','line_number':299,'multiline':False]
['text':' [12] is number of args to substr','line_number':309,'multiline':False]
['text':' make sure we don't blow past the end of the StringData','line_number':332,'multiline':False]
['text':' ASSERT(StringData("").endsWith(""));','line_number':368,'multiline':False]
['text':' ASSERT(StringData("abcde").endsWith(""));','line_number':370,'multiline':False]
['text':' ASSERT_EQ(expected.os.str(), actual.os.str()) << location;','line_number':479,'multiline':False]
['text':' namespace','line_number':494,'multiline':False]
['text':' namespace mongo','line_number':495,'multiline':False]
