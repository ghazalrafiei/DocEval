['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':' IWYU pragma: keep','line_number':43,'multiline':False]
['text':' IWYU pragma: no_include "boost/system/detail/error_code.hpp"','line_number':47,'multiline':False]
['text':' IWYU pragma: keep','line_number':65,'multiline':False]
['text':' IWYU pragma: keep','line_number':76,'multiline':False]
['text':'*
 * These utilities are thread safe but do not provide mutually exclusive access to resources
 * identified by the caller.  Dependent filesystem paths should not be accessed by different
 * threads.
 ','line_number':92,'multiline':True]
['text':' Filesystem errors cause us to just skip that entry, entirely.','line_number':133,'multiline':False]
['text':'* Set process wide current working directory. ','line_number':157,'multiline':True]
['text':' will throw on filesystem error','line_number':214,'multiline':False]
['text':' Set the position using the given offset.','line_number':246,'multiline':False]
['text':' Offset is past EOF.','line_number':249,'multiline':False]
['text':' Before opening 'dest', check if we need to resize the file to fit in the contents.','line_number':265,'multiline':False]
['text':' Boost bug 12495 (https://svn.boost.org/trac/boost/ticket/12495):','line_number':310,'multiline':False]
['text':' create_directories crashes on empty string. We expect mkdir("") to','line_number':311,'multiline':False]
['text':' fail on the OS level anyway, so catch it here instead.','line_number':312,'multiline':False]
['text':'*
 * @param args - [ source, destination ]
 * copies directory 'source' to 'destination'. Errors if the 'destination' file already exists.
 ','line_number':328,'multiline':True]
['text':'*
 * @param args - [ source, destination ]
 * copies file 'source' to 'destination'. Errors if the 'destination' file already exists.
 ','line_number':359,'multiline':True]
['text':' Parse the arguments.','line_number':376,'multiline':False]
['text':' Limit the capability to writing only new, regular files in existing directories.','line_number':395,'multiline':False]
['text':'*
 * Writes an array of bson objects one after another. The format is readable by the `bsondump` tool.
 ','line_number':435,'multiline':True]
['text':' HOST_NAME_MAX is usually 255','line_number':482,'multiline':False]
['text':'*
 * Dumps BSON data as a Hex-formatted string
 ','line_number':546,'multiline':True]
['text':' The name of the file to dump is provided as a string in the first','line_number':553,'multiline':False]
['text':' field of the 'a' object. Other arguments in the BSONObj are','line_number':554,'multiline':False]
['text':' ignored. The void* argument is unused.','line_number':555,'multiline':False]
['text':' Open the file for reading in binary mode.','line_number':561,'multiline':False]
['text':' Consume the contents of the file into a std::string, or bail out','line_number':569,'multiline':False]
['text':' if there is more data in the file or stream than we can handle.','line_number':570,'multiline':False]
['text':' Check that the size of the data can fit into the BSON shape','line_number':577,'multiline':False]
['text':' { "" : [ ... ] }, which has 12 bytes of overhead.','line_number':578,'multiline':False]
['text':' Construct our return shape','line_number':585,'multiline':False]
['text':' Walk the data we read out of the file and interpret it as a series','line_number':589,'multiline':False]
['text':' of contiguous BSON objects. Validate the BSON objects we find and insert','line_number':590,'multiline':False]
['text':' them into the results array.','line_number':591,'multiline':False]
['text':' Record the amount of valid data ahead of us before','line_number':595,'multiline':False]
['text':' advancing the cursor so we can use it as an argument to','line_number':596,'multiline':False]
['text':' validate below. It would be nice and proper to use','line_number':597,'multiline':False]
['text':' Validated<BSONObj> for all of this instead, but','line_number':598,'multiline':False]
['text':' unfortunately the BSONObj specialization of Validated','line_number':599,'multiline':False]
['text':' depends on a server parameter, so we do it manually.','line_number':600,'multiline':False]
['text':' namespace','line_number':639,'multiline':False]
['text':' namespace shell_utils','line_number':666,'multiline':False]
['text':' namespace mongo','line_number':667,'multiline':False]
