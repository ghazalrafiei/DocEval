['text':'*
 * Returns a port number that has not been given out to any other caller from the same mongo shell.
 ','line_number':65,'multiline':True]
['text':'*
 * Resets the range of ports which have already been given out to callers of allocatePort().
 *
 * This function can be used to allow a test to allocate a large number of ports as part of starting
 * many MongoDB deployments without worrying about hitting the configured maximum. Callers of this
 * function should take care to ensure MongoDB deployments started earlier have been terminated and
 * won't be reused.
 ','line_number':70,'multiline':True]
['text':' Defer initializing these variables until the first call, as TestData attributes may be','line_number':85,'multiline':False]
['text':' initialized as part of the --eval argument (e.g. by resmoke.py), which will not be evaluated','line_number':86,'multiline':False]
['text':' until after this has loaded.','line_number':87,'multiline':False]
['text':' The default port was chosen in an attempt to have a large number of unassigned ports that','line_number':92,'multiline':False]
['text':' are also outside the ephemeral port range.','line_number':93,'multiline':False]
['text':' If no port override specified, just passthrough connect string.','line_number':119,'multiline':False]
['text':' Strip port numbers from connect string.','line_number':122,'multiline':False]
['text':' Convert function into call-string','line_number':139,'multiline':False]
['text':' do nothing','line_number':147,'multiline':False]
['text':' Returns a function that when called waits for the parallel shell to exit and returns the exit','line_number':168,'multiline':False]
['text':' code of the process. By default an error is thrown if the parallel shell exits with a nonzero','line_number':169,'multiline':False]
['text':' exit code.','line_number':170,'multiline':False]
['text':'*
 * Returns a list of 'numPorts' port numbers that have not been given out to any other caller from
 * the same mongo shell.
 ','line_number':191,'multiline':True]
