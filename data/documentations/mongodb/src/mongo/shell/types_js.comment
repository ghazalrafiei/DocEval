['text':' Date and time types','line_number':1,'multiline':False]
['text':' Resmoke overrides `toString` to throw an error to prevent accidental operator','line_number':16,'multiline':False]
['text':' comparisons, e.g: >, -, etc...','line_number':17,'multiline':False]
['text':' If this === Date.prototype or this is a Date instance created from','line_number':40,'multiline':False]
['text':' Object.create(Date.prototype), then the [[DateValue]] internal slot won't be set and will','line_number':41,'multiline':False]
['text':' lead to a TypeError. We instead treat it as though the [[DateValue]] internal slot is NaN','line_number':42,'multiline':False]
['text':' in order to be consistent with the ES5 behavior in MongoDB 3.2 and earlier.','line_number':43,'multiline':False]
['text':' // print a non-UTC time','line_number':65,'multiline':False]
['text':' var ofsmin = this.getTimezoneOffset();','line_number':66,'multiline':False]
['text':' if (ofsmin != 0){','line_number':67,'multiline':False]
['text':'     ofs = ofsmin > 0 ? '-' : '+'; // This is correct','line_number':68,'multiline':False]
['text':'     ofs += (ofsmin/60).zeroPad(2)','line_number':69,'multiline':False]
['text':'     ofs += (ofsmin%60).zeroPad(2)','line_number':70,'multiline':False]
['text':' }','line_number':71,'multiline':False]
['text':' eslint-disable-next-line','line_number':76,'multiline':False]
['text':' hours','line_number':106,'multiline':False]
['text':' mins','line_number':107,'multiline':False]
['text':' if ahead subtract','line_number':108,'multiline':False]
['text':' If we are outside the range 0000-01-01T00:00:00.000Z - 9999-12-31T23:59:59.999Z, abort with','line_number':114,'multiline':False]
['text':' error.','line_number':115,'multiline':False]
['text':' Regular Expression','line_number':125,'multiline':False]
['text':' Array','line_number':132,'multiline':False]
['text':' add to indent if we are pretty','line_number':199,'multiline':False]
['text':' remove from indent if we are pretty','line_number':210,'multiline':False]
['text':' Object','line_number':275,'multiline':False]
['text':' convert ObjectId properly','line_number':280,'multiline':False]
['text':' convert NumberLong properly','line_number':282,'multiline':False]
['text':' convert Date properly','line_number':284,'multiline':False]
['text':' String','line_number':310,'multiline':False]
['text':' always provide ltrim and rtrim for backwards compatibility','line_number':327,'multiline':False]
['text':' Polyfill taken from','line_number':339,'multiline':False]
['text':' https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes','line_number':340,'multiline':False]
['text':' Returns a copy padded with the provided character _chr_ so it becomes (at least) _length_','line_number':348,'multiline':False]
['text':' characters long.','line_number':349,'multiline':False]
['text':' No truncation is performed if the string is already longer than _length_.','line_number':350,'multiline':False]
['text':' @param length minimum length of the returned string','line_number':351,'multiline':False]
['text':' @param right if falsy add leading whitespace, otherwise add trailing whitespace','line_number':352,'multiline':False]
['text':' @param chr character to be used for padding, defaults to whitespace','line_number':353,'multiline':False]
['text':' @return the padded string','line_number':354,'multiline':False]
['text':' Number','line_number':369,'multiline':False]
['text':' NumberLong','line_number':378,'multiline':False]
['text':' NumberInt','line_number':387,'multiline':False]
['text':' NumberDecimal','line_number':396,'multiline':False]
['text':' ObjectId','line_number':411,'multiline':False]
['text':' Creates an ObjectId from a Date.','line_number':437,'multiline':False]
['text':' Based on solution discussed here:','line_number':438,'multiline':False]
['text':'     http://stackoverflow.com/questions/8749971/can-i-query-mongodb-objectid-by-date','line_number':439,'multiline':False]
['text':' Extract Date from input.','line_number':447,'multiline':False]
['text':' If input is a string, assume ISO date string and','line_number':448,'multiline':False]
['text':' create a Date from the string.','line_number':449,'multiline':False]
['text':' Convert date object to seconds since Unix epoch.','line_number':456,'multiline':False]
['text':' Generate hex timestamp with padding.','line_number':459,'multiline':False]
['text':' Create an ObjectId with hex timestamp.','line_number':462,'multiline':False]
['text':' DBPointer','line_number':468,'multiline':False]
['text':' DBRef','line_number':495,'multiline':False]
['text':' BinData','line_number':533,'multiline':False]
['text':' Map','line_number':549,'multiline':False]
['text':' eslint-disable-next-line','line_number':551,'multiline':False]
['text':' Free Functions','line_number':622,'multiline':False]
['text':' toString not callable','line_number':692,'multiline':False]
['text':' push one level of indent','line_number':702,'multiline':False]
['text':' skip internal DB types to avoid issues with interceptors','line_number':719,'multiline':False]
['text':' pop one level of indent','line_number':736,'multiline':False]
['text':' This function returns true even if the argument is an array.  See SERVER-14220.','line_number':757,'multiline':False]
