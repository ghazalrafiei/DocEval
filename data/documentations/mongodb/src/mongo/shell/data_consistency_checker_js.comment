['text':'*
     * OO wrapper around the response of db.getCollectionInfos() to avoid calling it multiple times.
     * This class stores information about all collections but its methods typically apply to a
     * single collection, so a collName is typically required to be passed in as a parameter.
     ','line_number':2,'multiline':True]
['text':' Special listCollections filter to prevent reloading the view catalog.','line_number':8,'multiline':False]
['text':'*
     * Do additional filtering to narrow down collections that have names in collNames.
     ','line_number':27,'multiline':True]
['text':'*
     * Get names for the clustered collections.
     ','line_number':34,'multiline':True]
['text':' Extract basic collection info.','line_number':50,'multiline':False]
['text':' Return true if collInfo & collStats can be retrieved for conn.','line_number':92,'multiline':False]
['text':'*
         * This function serves as a wrapper for the various comparison functions we use in the data
         * consistency checker. In particular, through
         * 'TestData.ignoreFieldOrderForDataConsistency', it becomes possible to ignore field
         * ordering when comparing documents (i.e. the documents {a: 1, b: 2} and {b: 2, a: 1} will
         * be equal when field ordering is ignored). This is useful for versions of MongoDB that
         * don't support field ordering like 4.2.
         * @param a The first document
         * @param b The second document
         * @param checkType Whether to ignore differences in types when comparing documents. For
         *     example, NumberLong(1) and NumberInt(1) are equal when types are ignored.
         * @returns a boolean when checkType is true and an integer otherwise.
         ','line_number':125,'multiline':True]
['text':' When the bsonCompareFunction is invoked with checkType, a boolean return value is','line_number':140,'multiline':False]
['text':' expected. For that reason we compare the unordered compare result with 0.','line_number':141,'multiline':False]
['text':' The same document was found from both cursor1 and cursor2 so we just move','line_number':167,'multiline':False]
['text':' on to the next document for both cursors.','line_number':168,'multiline':False]
['text':' checkType ','line_number':175,'multiline':True]
['text':' The documents have the same _id but have different contents.','line_number':177,'multiline':False]
['text':' The cursor1's next document has a smaller _id than the cursor2's next','line_number':182,'multiline':False]
['text':' document. Since we are iterating the documents in ascending order by their','line_number':183,'multiline':False]
['text':' _id, we'll never see a document with 'doc1._id' from cursor2.','line_number':184,'multiline':False]
['text':' The cursor1's next document has a larger _id than the cursor2's next','line_number':188,'multiline':False]
['text':' document. Since we are iterating the documents in ascending order by their','line_number':189,'multiline':False]
['text':' _id, we'll never see a document with 'doc2._id' from cursor1.','line_number':190,'multiline':False]
['text':' We've exhausted cursor2 already, so everything remaining from cursor1 must be','line_number':197,'multiline':False]
['text':' missing from cursor2.','line_number':198,'multiline':False]
['text':' We've exhausted cursor1 already, so everything remaining from cursor2 must be','line_number':203,'multiline':False]
['text':' missing from cursor1.','line_number':204,'multiline':False]
['text':' Like getDiff, but for index specs from listIndexes.  Index specs may not be in the','line_number':211,'multiline':False]
['text':' same order on different nodes, and their primary key is "name", not "_id".','line_number':212,'multiline':False]
['text':' checkType ','line_number':229,'multiline':True]
['text':' Since listIndexes does not accept readAtClusterTime, we can only use this in the','line_number':245,'multiline':False]
['text':' foreground dbchecks, not background ones.','line_number':246,'multiline':False]
['text':' We only ever expect cases where the 'invalidated' fields are mismatched.','line_number':319,'multiline':False]
['text':' Although rare, the 'config.image_collection' table can be inconsistent after','line_number':451,'multiline':False]
['text':' an initial sync or after a restart (see SERVER-60048). Dump the collection','line_number':452,'multiline':False]
['text':' diff anyways for more visibility as a sanity check.','line_number':453,'multiline':False]
['text':'','line_number':454,'multiline':False]
['text':' 'config.system.preimages' can potentially be inconsistent via hashes,','line_number':455,'multiline':False]
['text':' there's a special process that verifies them with','line_number':456,'multiline':False]
['text':' ReplSetTest.checkPreImageCollection so it is safe to ignore failures here.','line_number':457,'multiline':False]
['text':' Ignore the 'flags' collection option as it was removed in 4.2','line_number':482,'multiline':False]
['text':' Ignore the 'ns' field in the 'idIndex' field as 'ns' was removed','line_number':486,'multiline':False]
['text':' from index specs in 4.4.','line_number':487,'multiline':False]
['text':' If the servers are using encryption and they specify an encryption option','line_number':495,'multiline':False]
['text':' in versions <7.2 this is stored on the primary but not the secondary.','line_number':496,'multiline':False]
['text':' This is not an actual failure since the data is correct on all nodes. We','line_number':497,'multiline':False]
['text':' can safely ignore this element in the configString.','line_number':498,'multiline':False]
['text':' Treats each array as a set and returns true if the contents match. Assumes','line_number':527,'multiline':False]
['text':' the contents of each array are unique.','line_number':528,'multiline':False]
['text':' The map is empty when both sets match.','line_number':551,'multiline':False]
['text':' Returns true if we should skip comparing the index count between the source and the','line_number':560,'multiline':False]
['text':' syncing node for a clustered collection. 6.1 added clustered indexes into collStat','line_number':561,'multiline':False]
['text':' output. There will be a difference in the nindex count between versions before and','line_number':562,'multiline':False]
['text':' after 6.1. So, skip comparing across 6.1 for clustered collections.','line_number':563,'multiline':False]
['text':' If both versions are before 6.1 or both are 6.1 onwards, we are good.','line_number':568,'multiline':False]
['text':' Skip if this is a clustered collection','line_number':576,'multiline':False]
['text':' Check that the following collection stats are the same between the source and syncing','line_number':587,'multiline':False]
['text':' nodes:','line_number':588,'multiline':False]
['text':'  capped','line_number':589,'multiline':False]
['text':'  nindexes, except on nodes with buildIndexes: false','line_number':590,'multiline':False]
['text':'  ns','line_number':591,'multiline':False]
['text':' Provide hint on where to look within stats.','line_number':604,'multiline':False]
['text':' The hashes for the whole database should match.','line_number':655,'multiline':False]
['text':' We only expect database hash mismatches on the config db, where','line_number':660,'multiline':False]
['text':' config.image_collection and config.system.preimages are expected to have','line_number':661,'multiline':False]
['text':' inconsistencies in certain scenarios.','line_number':662,'multiline':False]
