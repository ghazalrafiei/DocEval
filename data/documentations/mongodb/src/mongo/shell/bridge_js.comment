['text':'*
 * Wrapper around a mongobridge process. Construction of a MongoBridge instance will start a new
 * mongobridge process that listens on 'options.port' and forwards messages to 'options.dest'.
 *
 * @param {Object} options
 * @param {string} options.dest - The host:port to forward messages to.
 * @param {string} [options.hostName=localhost] - The hostname to specify when connecting to the
 * mongobridge process.
 * @param {number} [options.port=allocatePort()] - The port number the mongobridge should listen on.
 *
 * @returns {Proxy} Acts as a typical connection object to options.hostName:options.port that has
 * additional functions exposed to shape network traffic from other processes.
 ','line_number':1,'multiline':True]
['text':' The connection used by a test for running commands against the mongod or mongos process.','line_number':31,'multiline':False]
['text':' copy the enableTestCommands field from TestData since this can be','line_number':34,'multiline':False]
['text':' changed in the middle of a test. This is the same value that','line_number':35,'multiline':False]
['text':' will ultimately be used by MongoRunner, and determines if','line_number':36,'multiline':False]
['text':' *From commands can be used during the lifetime of the MongoBridge','line_number':37,'multiline':False]
['text':' instance.','line_number':38,'multiline':False]
['text':' A separate (hidden) connection for configuring the mongobridge process.','line_number':41,'multiline':False]
['text':' Start the mongobridge on port 'this.port' routing network traffic to 'this.dest'.','line_number':44,'multiline':False]
['text':' Append any command line arguments that are optional for mongobridge.','line_number':52,'multiline':False]
['text':'*
     * Initializes the mongo shell's connections to the mongobridge process. Throws an error if the
     * mongobridge process stopped running or if a connection cannot be made.
     *
     * The mongod or mongos process corresponding to this mongobridge process may need to connect to
     * itself through the mongobridge process, e.g. when running the _isSelf command. This means
     * the mongobridge process needs to be running prior to the other process. However, to avoid
     * spurious failures during situations where the mongod or mongos process is not ready to accept
     * connections, connections to the mongobridge process should only be made after the other
     * process is known to be reachable:
     *
     *     var bridge = new MongoBridge(...);
     *     var conn = MongoRunner.runMongoXX(...);
     *     assert.neq(null, conn);
     *     bridge.connectToBridge();
     ','line_number':72,'multiline':True]
['text':' The MongoRunner.runMongoXX() functions define a 'name' property on the returned','line_number':105,'multiline':False]
['text':' connection object that is equivalent to its 'host' property. Certain functions in','line_number':106,'multiline':False]
['text':' ReplSetTest and ShardingTest use the 'name' property instead of the 'host' property, so','line_number':107,'multiline':False]
['text':' we define it here for consistency.','line_number':108,'multiline':False]
['text':'*
     * Terminates the mongobridge process.
     ','line_number':122,'multiline':True]
['text':' Throws an error if 'obj' is not a MongoBridge instance.','line_number':129,'multiline':False]
['text':' Runs a command intended to configure the mongobridge.','line_number':136,'multiline':False]
['text':' The wire version of this mongobridge is detected as the wire version of the corresponding','line_number':138,'multiline':False]
['text':' mongod or mongos process because the message is simply forwarded to that process.','line_number':139,'multiline':False]
['text':' Create a new Object with 'cmdName' as the first key and $forBridge=true.','line_number':140,'multiline':False]
['text':'*
     * Allows communication between 'this.dest' and the 'dest' of each of the 'bridges'.
     *
     * Configures 'this' bridge to accept new connections from the 'dest' of each of the 'bridges'.
     * Additionally configures each of the 'bridges' to accept new connections from 'this.dest'.
     *
     * @param {(MongoBridge|MongoBridge[])} bridges
     ','line_number':151,'multiline':True]
['text':'*
     * Disallows communication between 'this.dest' and the 'dest' of each of the 'bridges'.
     *
     * Configures 'this' bridge to close existing connections and reject new connections from the
     * 'dest' of each of the 'bridges'. Additionally configures each of the 'bridges' to close
     * existing connections and reject new connections from 'this.dest'.
     *
     * @param {(MongoBridge|MongoBridge[])} bridges
     ','line_number':169,'multiline':True]
['text':' All *From functions require that test commands be enabled on the mongod','line_number':188,'multiline':False]
['text':' instance (which populates the hostInfo field).','line_number':189,'multiline':False]
['text':'*
     * Configures 'this' bridge to accept new connections from the 'dest' of each of the 'bridges'.
     *
     * @param {(MongoBridge|MongoBridge[])} bridges
     ','line_number':198,'multiline':True]
['text':'*
     * Configures 'this' bridge to close existing connections and reject new connections from the
     * 'dest' of each of the 'bridges'.
     *
     * @param {(MongoBridge|MongoBridge[])} bridges
     ','line_number':218,'multiline':True]
['text':'*
     * Configures 'this' bridge to delay forwarding requests from the 'dest' of each of the
     * 'bridges' to 'this.dest' by the specified amount.
     *
     * @param {(MongoBridge|MongoBridge[])} bridges
     * @param {number} delay - The delay to apply in milliseconds.
     ','line_number':239,'multiline':True]
['text':'*
     * Configures 'this' bridge to uniformly discard requests from the 'dest' of each of the
     * 'bridges' to 'this.dest' with probability 'lossProbability'.
     *
     * @param {(MongoBridge|MongoBridge[])} bridges
     * @param {number} lossProbability
     ','line_number':265,'multiline':True]
['text':' Use a Proxy to "extend" the underlying connection object. The C++ functions, e.g.','line_number':291,'multiline':False]
['text':' runCommand(), require that they are called on the Mongo instance itself and so typical','line_number':292,'multiline':False]
['text':' prototypical inheritance isn't possible.','line_number':293,'multiline':False]
['text':' If the property is defined on the MongoBridge instance itself, then','line_number':296,'multiline':False]
['text':' return it.','line_number':297,'multiline':False]
['text':' Otherwise, get the value of the property from the Mongo instance.','line_number':298,'multiline':False]
['text':' Delegate setting the value of any property to the Mongo instance so','line_number':310,'multiline':False]
['text':' that it can be','line_number':311,'multiline':False]
['text':' accessed in functions acting on the Mongo instance directly instead of','line_number':312,'multiline':False]
['text':' this Proxy.','line_number':313,'multiline':False]
['text':' For example, the "slaveOk" property needs to be set on the Mongo','line_number':314,'multiline':False]
['text':' instance in order','line_number':315,'multiline':False]
['text':' for the query options bit to be set correctly.','line_number':316,'multiline':False]
['text':' The number of ports that ReplSetTest and ShardingTest should stagger the port number of the','line_number':323,'multiline':False]
['text':' mongobridge process and its corresponding mongod/mongos process by. The resulting port number of','line_number':324,'multiline':False]
['text':' the mongod/mongos process is MongoBridge#port + MongoBridge.kBridgeOffset.','line_number':325,'multiline':False]
