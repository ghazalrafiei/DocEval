['text':' eval if msg is a function','line_number':2,'multiline':False]
['text':' Sort doc/obj fields and return new sorted obj','line_number':28,'multiline':False]
['text':' Helper to sort the elements of the array','line_number':30,'multiline':False]
['text':' not a container we can sort','line_number':41,'multiline':False]
['text':' if it an array, sort the elements','line_number':45,'multiline':False]
['text':' Sort recursively for Arrays and Objects (including bson ones)','line_number':59,'multiline':False]
['text':'
 * This function transforms a given function, 'func', into a function 'safeFunc',
 * where 'safeFunc' matches the behavior of 'func', except that it returns false
 * in any instance where 'func' throws an exception. 'safeFunc' also prints
 * message 'excMsg' upon catching such a thrown exception.
 ','line_number':75,'multiline':True]
['text':' Wrapping the helper function in an IIFE to avoid polluting the global namespace.','line_number':94,'multiline':False]
['text':'*
     * Throws if 'actualDoc' object is not equal to 'expectedDoc' object. The order of fields
     * (properties) within objects is disregarded.
     * Throws if object representation in BSON exceeds 16793600 bytes.
     ','line_number':184,'multiline':True]
['text':'*
     * Throws if the elements of the two given sets are not the same. Use only for primitive
     * (non-object) set element types.
     ','line_number':202,'multiline':True]
['text':'*
     * Throws if the two arrays do not have the same members, in any order. By default, nested
     * arrays must have the same order to be considered equal.
     *
     * Optionally accepts a compareFn to compare values instead of using docEq.
     ','line_number':225,'multiline':True]
['text':' Keep a set of which indices we've already used to avoid double counting values.','line_number':242,'multiline':False]
['text':' Sort both inputs in case either is a document. Note: by default this does not','line_number':247,'multiline':False]
['text':' sort any nested arrays.','line_number':248,'multiline':False]
['text':'
     * Calls a function 'func' at repeated intervals until either func() returns true
     * or more than 'timeout' milliseconds have elapsed. Throws an exception with
     * message 'msg' after timing out.
     ','line_number':333,'multiline':True]
['text':'
     * Calls a function 'func' at repeated intervals until either func() returns true without
     * throwing an exception or more than 'timeout' milliseconds have elapsed. Throws an exception
     * with message 'msg' after timing out.
     ','line_number':387,'multiline':True]
['text':' No TestData means not running from resmoke. Non-resmoke tests usually don't trace','line_number':396,'multiline':False]
['text':' exceptions.','line_number':397,'multiline':False]
['text':' Turns off printing the JavaScript stacktrace in doassert() to avoid','line_number':402,'multiline':False]
['text':' generating an overwhelming amount of log messages when handling transient','line_number':403,'multiline':False]
['text':' errors.','line_number':404,'multiline':False]
['text':' Restore it's value to original value.','line_number':410,'multiline':False]
['text':'
     * Calls the given function 'func' repeatedly at time intervals specified by
     * 'intervalMS' (milliseconds) until either func() returns true or the number of
     * attempted function calls is equal to 'num_attempts'. Throws an exception with
     * message 'msg' after all attempts are used up. If no 'intervalMS' argument is passed,
     * it defaults to 0.
     ','line_number':419,'multiline':True]
['text':' Used up all attempts','line_number':438,'multiline':False]
['text':'
     * Calls the given function 'func' repeatedly at time intervals specified by
     * 'intervalMS' (milliseconds) until either func() returns true without throwing
     * an exception or the number of attempted function calls is equal to 'num_attempts'.
     * Throws an exception with message 'msg' after all attempts are used up. If no 'intervalMS'
     * argument is passed, it defaults to 0.
     ','line_number':451,'multiline':True]
['text':'*
     * Runs the given command on the 'admin' database of the provided node. Asserts that the command
     * worked but allows network errors to occur.
     *
     * Returns the response if the command succeeded, or undefined if the command failed, *even* if
     * the failure was due to a network error.
     ','line_number':464,'multiline':True]
['text':' Ignore errors due to connection failures.','line_number':477,'multiline':False]
['text':'ms','line_number':486,'multiline':True]
['text':' Use .apply() instead of calling the function directly with explicit arguments to','line_number':572,'multiline':False]
['text':' preserve the length of the `arguments` object.','line_number':573,'multiline':False]
['text':' Remove the 'code' parameter, and any undefined parameters, from the list of arguments.','line_number':587,'multiline':False]
['text':' Use .apply() to preserve the length of the 'arguments' object.','line_number':588,'multiline':False]
['text':' Use .apply() instead of calling the function directly with explicit arguments to','line_number':605,'multiline':False]
['text':' preserve the length of the `arguments` object.','line_number':606,'multiline':False]
['text':' A write command response may have ok:1 but write errors.','line_number':643,'multiline':False]
['text':' Returns whether res is a type which may have write errors (not command errors).','line_number':655,'multiline':False]
['text':' These types imply that the write command succeeded.','line_number':656,'multiline':False]
['text':' Concurrency suites see a lot of LockTimeouts when running concurrent transactions.','line_number':690,'multiline':False]
['text':' However, they will also abort transactions and continue running rather than fail the','line_number':691,'multiline':False]
['text':' test, so we don't want to run the hang analyzer when the error has a','line_number':692,'multiline':False]
['text':' TransientTransactionError error label.','line_number':693,'multiline':False]
['text':' If the hang analyzer is run, then we shouldn't try to run it again.','line_number':706,'multiline':False]
['text':' Keep this as a function so we don't call tojson if not necessary.','line_number':718,'multiline':False]
['text':' These can only contain write errors, not command errors.','line_number':731,'multiline':False]
['text':' A WriteCommandError implies ok:0.','line_number':736,'multiline':False]
['text':' Error objects may have a `code` property added (e.g.','line_number':737,'multiline':False]
['text':' DBCollection.prototype.mapReduce) without a `ok` property.','line_number':738,'multiline':False]
['text':' Handle raw command responses or cases like MapReduceResult which extend command','line_number':741,'multiline':False]
['text':' response.','line_number':742,'multiline':False]
['text':' CRUD api functions return plain js objects with an acknowledged property.','line_number':751,'multiline':False]
['text':' no-op.','line_number':752,'multiline':False]
['text':' Keep this as a function so we don't call tojson if not necessary.','line_number':771,'multiline':False]
['text':' These can only contain write errors, not command errors.','line_number':786,'multiline':False]
['text':' A WriteCommandError implies ok:0.','line_number':789,'multiline':False]
['text':' Error objects may have a `code` property added (e.g.','line_number':790,'multiline':False]
['text':' DBCollection.prototype.mapReduce) without a `ok` property.','line_number':791,'multiline':False]
['text':' Handle raw command responses or cases like MapReduceResult which extend command','line_number':798,'multiline':False]
['text':' response.','line_number':799,'multiline':False]
['text':' CRUD api functions return plain js objects with an acknowledged property.','line_number':820,'multiline':False]
['text':' First check if the command worked.','line_number':833,'multiline':False]
['text':' If the command did not work, assert it failed with one of the specified codes.','line_number':836,'multiline':False]
['text':' expectedCode can be an array of possible codes.','line_number':862,'multiline':False]
['text':' Can only happen with bulk inserts','line_number':877,'multiline':False]
['text':' If expectedCode is an array then this asserts that the found code is one of the codes in','line_number':904,'multiline':False]
['text':' the expectedCode array.','line_number':905,'multiline':False]
['text':' Can only happen with bulk inserts','line_number':923,'multiline':False]
['text':' Save every write error code.','line_number':925,'multiline':False]
['text':' Can only happen with bulk inserts','line_number':933,'multiline':False]
['text':' No-op since we're expecting an error','line_number':934,'multiline':False]
['text':' This treats 'places' as digits past the decimal point.','line_number':1062,'multiline':False]
['text':' This treats 'places' as significant figures.','line_number':1068,'multiline':False]
['text':'*
     * Asserts if the times in millis are not withing delta milliseconds, in either direction.
     * Default Delta: 1 second
     ','line_number':1079,'multiline':True]
