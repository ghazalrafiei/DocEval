['text':'*
 *    Copyright (C) 2023-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':'*
 * The driver class implements the threading logic to have a number of readers and writers
 * consistently acquiring tickets and performing read and write operations under the ticket.
 * Currently all operations are performed with 'kNormal' priority. The driver uses a
 * 'MockWorkloadCharacteristics' instance to determine appropriate latencies for read and write
 * operations at the current concurrency levels, and simply 'sleeps' (using the queue) for those
 * desired latencies instead of performing real work. This should result in ticket holder throughput
 * of approximately that targeted by the workload characteristics.
 ','line_number':41,'multiline':True]
['text':'*
     * Initializes 'numReaders' read and 'numWriters' write actor threads, which immediately begin
     * filing work with the 'EventQueue'.
     ','line_number':56,'multiline':True]
['text':'*
     * Resizes to 'numReaders' read and 'numWriters' write actor threads.
     ','line_number':66,'multiline':True]
['text':'*
     * Stops and joins actor threads.
     ','line_number':71,'multiline':True]
['text':'*
     * Reports optimal and allocated read and write ticket counts, e.g.
     * {
     *   read: { optimal: 10, allocated: 5 }
     *   write: { optimal: 10, allocated:  5 }
     * }
     ','line_number':76,'multiline':True]
['text':' The values stored in each of these variables refers to the maximum index of the respective','line_number':107,'multiline':False]
['text':' type of worker that should be active and running at the moment. I.e. a value of -1 means no','line_number':108,'multiline':False]
['text':' active workers, while 4 means 5 active workers.','line_number':109,'multiline':False]
['text':' namespace mongo::workload_simulation','line_number':114,'multiline':False]
