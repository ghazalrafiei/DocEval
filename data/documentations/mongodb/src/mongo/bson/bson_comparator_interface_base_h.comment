['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':'*
 * Base class for the BSONObj and BSONElement comparator interfaces.
 ','line_number':53,'multiline':True]
['text':'*
     * Set of rules used in the comparison of BSON Objects and Elements.
     ','line_number':65,'multiline':True]
['text':' Set this bit to consider the field name in element comparisons.','line_number':69,'multiline':False]
['text':' if (kConsiderFieldName = 0) --> 'a: 1' == 'b: 1'','line_number':70,'multiline':False]
['text':' if (kConsiderFieldName = 1) --> 'a: 1' != 'b: 1'','line_number':71,'multiline':False]
['text':' Set this bit to ignore the element order in BSON Object comparisons. This field will','line_number':74,'multiline':False]
['text':' remain set/unset for nested objects.','line_number':75,'multiline':False]
['text':'','line_number':76,'multiline':False]
['text':' e.g. if kIgnoreFieldOrder == 1, then the following objects are considered equal:','line_number':77,'multiline':False]
['text':'','line_number':78,'multiline':False]
['text':' obj1: {','line_number':79,'multiline':False]
['text':'     a: {','line_number':80,'multiline':False]
['text':'         b: 1,','line_number':81,'multiline':False]
['text':'         c: 1','line_number':82,'multiline':False]
['text':'     },','line_number':83,'multiline':False]
['text':'     d: 1','line_number':84,'multiline':False]
['text':' }','line_number':85,'multiline':False]
['text':'','line_number':86,'multiline':False]
['text':' obj2: {','line_number':87,'multiline':False]
['text':'     d: 1,','line_number':88,'multiline':False]
['text':'     a: {','line_number':89,'multiline':False]
['text':'         c: 1,','line_number':90,'multiline':False]
['text':'         b: 1,','line_number':91,'multiline':False]
['text':'     },','line_number':92,'multiline':False]
['text':' }','line_number':93,'multiline':False]
['text':'*
     * A deferred comparison between two objects of type T, which can be converted into a boolean
     * via the evaluate() method.
     ','line_number':98,'multiline':True]
['text':'*
     * Functor compatible for use with ordered STL containers.
     ','line_number':120,'multiline':True]
['text':'*
     * Functor compatible for use with unordered STL containers.
     ','line_number':136,'multiline':True]
['text':'*
     * Function object for hashing with respect to this comparator. Compatible with the hash concept
     * from std::hash.
     ','line_number':151,'multiline':True]
['text':'*
     * Compares two BSONObj/BSONElement objects. Returns <0, 0, >0 if 'lhs' < 'rhs', 'lhs' == 'rhs',
     * or 'lhs' > 'rhs' respectively.
     ','line_number':179,'multiline':True]
['text':'*
     * Produces a hash for a BSONObj or BSONElement in such a way that respects this comparator.
     *
     * The hash function is subject to change. Do not use in cases where hashes need to be
     * consistent across versions.
     ','line_number':185,'multiline':True]
['text':'*
     * Produces a hash for a BSONObj or BSONElement in such a way that respects this comparator. The
     * resulting hash is combined with 'seed', allowing the caller to create a composite hash out of
     * several BSONObj/BSONElement objects.
     *
     * The hash function is subject to change. Do not use in cases where hashes need to be
     * consistent across versions.
     ','line_number':197,'multiline':True]
['text':'*
     * Evaluates a deferred comparison object generated by invocation of one of the BSONObj operator
     * overloads for relops.
     ','line_number':207,'multiline':True]
['text':'*
     * Returns a function object which computes whether one BSONObj is less than another under this
     * comparator. This comparator must outlive the returned function object.
     ','line_number':231,'multiline':True]
['text':'*
     * Returns a function object which computes whether one BSONObj is equal to another under this
     * comparator. This comparator must outlive the returned function object.
     ','line_number':241,'multiline':True]
['text':'*
     * Hashes 'objToHash', respecting the equivalence classes given by 'stringComparator'.
     *
     * Helper intended for use by subclasses.
     ','line_number':285,'multiline':True]
['text':'*
     * Hashes 'elemToHash', respecting the equivalence classes given by 'stringComparator'.
     *
     * Helper intended for use by subclasses.
     ','line_number':295,'multiline':True]
['text':' namespace mongo','line_number':306,'multiline':False]
