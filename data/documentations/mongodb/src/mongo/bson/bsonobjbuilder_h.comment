['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':' warning: 'this' : used in base member initializer list','line_number':67,'multiline':False]
['text':'*
 * CRTP Base class for BSONObj builder classes. Do not use this directly.
 *
 * Template arguments:
 * -Derived: The Derived class
 * -B: The buffer builder to use. See BufBuilder for an example.
 *
 * If adding a new subclass of this, an explicit template instantiation must be added in the cpp
 * file. Derived classes also must implement a destructor which calls the base class _destruct()
 * method.
 ','line_number':71,'multiline':True]
['text':'* @param initsize this is just a hint as to the final size of the object ','line_number':90,'multiline':True]
['text':' Skip over space for the object length. The length is filled in by _done.','line_number':92,'multiline':False]
['text':' Reserve space for the EOO byte. This means _done() can't fail.','line_number':95,'multiline':False]
['text':'* @param baseBuilder construct a BSONObjBuilder using an existing BufBuilder
     *  This is for more efficient adding of subobjects/arrays. See docs for subobjStart for
     *  example.
     ','line_number':99,'multiline':True]
['text':' Skip over space for the object length, which is filled in by _done. We don't need a','line_number':104,'multiline':False]
['text':' holder since we are a sub-builder, and some parent builder has already made the','line_number':105,'multiline':False]
['text':' reservation.','line_number':106,'multiline':False]
['text':' Reserve space for the EOO byte. This means _done() can't fail.','line_number':109,'multiline':False]
['text':' Tag for a special overload of BSONObjBuilder that allows the user to continue','line_number':113,'multiline':False]
['text':' building in to an existing BufBuilder that has already been built in to. Use with caution.','line_number':114,'multiline':False]
['text':' get rid of the previous EOO.','line_number':120,'multiline':False]
['text':' Reserve space for our EOO.','line_number':121,'multiline':False]
['text':' See the comments in the first constructor for details.','line_number':127,'multiline':False]
['text':' Reserve space for the EOO byte. This means _done() can't fail.','line_number':130,'multiline':False]
['text':' Move constructible, but not assignable due to reference member.','line_number':134,'multiline':False]
['text':'*
     * The start offset of the object being built by this builder within its buffer.
     * Needed for the object-resuming constructor.
     ','line_number':144,'multiline':True]
['text':'* add all the fields from the object specified to this object ','line_number':152,'multiline':True]
['text':'* add all the fields from the object specified to this object if they don't exist already ','line_number':155,'multiline':True]
['text':'* append element to the object we are building ','line_number':158,'multiline':True]
['text':' do not append eoo, that would corrupt us. the builder auto appends when done() is called.','line_number':160,'multiline':False]
['text':'* append an element but with a new name ','line_number':166,'multiline':True]
['text':' do not append eoo, that would corrupt us. the builder auto appends when done() is called.','line_number':168,'multiline':False]
['text':'* add a subobject as a member ','line_number':176,'multiline':True]
['text':'* add a subobject as a member ','line_number':184,'multiline':True]
['text':'* add header for a new subobject and return bufbuilder for writing to
     *  the subobject's body
     *
     *  example:
     *
     *  BSONObjBuilder b;
     *  BSONObjBuilder sub (b.subobjStart("fieldName"));
     *  // use sub
     *  sub.done()
     *  // use b and convert to object
     ','line_number':199,'multiline':True]
['text':'* add a subobject as a member with type Array.  Thus arr object should have "0", "1", ...
        style fields in it.
    ','line_number':216,'multiline':True]
['text':'* add header for a new subarray and return bufbuilder for writing to
        the subarray's body ','line_number':230,'multiline':True]
['text':'* Append a boolean element ','line_number':238,'multiline':True]
['text':'* Append elements that have the BSONObjAppendFormat trait ','line_number':246,'multiline':True]
['text':'*
     * appendNumber is a series of method for appending the smallest sensible type
     * mostly for JS
     ','line_number':267,'multiline':True]
['text':'* Append a BSON Object ID (OID type).
        @deprecated Generally, it is preferred to use the append append(name, oid)
        method for this.
    ','line_number':296,'multiline':True]
['text':'*
    Append a BSON Object ID.
    @param fieldName Field name, e.g., "_id".
    @returns the builder object
    ','line_number':316,'multiline':True]
['text':'*
    Generate and assign an object id for the _id field.
    _id should be the first element in the object for good performance.
    ','line_number':328,'multiline':True]
['text':'* Append a time_t date.
        @param dt a C-style 32 bit date value, that is
        the number of seconds since January 1, 1970, 00:00:00 GMT
    ','line_number':336,'multiline':True]
['text':'* Append a date.
        @param dt a Java-style 64 bit date value, that is
        the number of milliseconds since January 1, 1970, 00:00:00 GMT
    ','line_number':346,'multiline':True]
['text':'* Append a regular expression value
        @param regex the regular expression pattern
        @param regex options such as "i" or "g"
    ','line_number':355,'multiline':True]
['text':'* Append a string element.
        @param sz size includes terminating null character ','line_number':384,'multiline':True]
['text':'* Append a string element ','line_number':394,'multiline':True]
['text':'* Append a string element ','line_number':398,'multiline':True]
['text':'* Append a Null element to the object ','line_number':419,'multiline':True]
['text':' Append an element that is less than all other keys.','line_number':427,'multiline':False]
['text':' Append an element that is greater than all other keys.','line_number':433,'multiline':False]
['text':' Append a Timestamp field -- will be updated to next server Timestamp','line_number':440,'multiline':False]
['text':'*
     * To store a Timestamp in BSON, use this function.
     * This captures both the secs and inc fields.
     ','line_number':445,'multiline':True]
['text':'
    Append an element of the deprecated DBRef type.
    @deprecated
    ','line_number':451,'multiline':True]
['text':'* Append a binary data element
        @param fieldName name of the field
        @param len length of the binary data in bytes
        @param subtype subtype information for the data. @see enum BinDataType in bsontypes.h.
               Use BinDataGeneral if you don't care about the type.
        @param data the byte array
    ','line_number':469,'multiline':True]
['text':'*
    Subtype 2 is deprecated.
    Append a BSON bindata bytearray element.
    @param data a byte array
    @param len the length of data
    ','line_number':490,'multiline':True]
['text':'* Append to the BSON object a field of type CodeWScope.  This is a javascript code
        fragment accompanied by some scope that goes with it.
    ','line_number':507,'multiline':True]
['text':' helper function -- see Query::where() for primary way to do this. ','line_number':531,'multiline':True]
['text':'*
       these are the min/max when comparing, not strict min/max elements for a given type
    ','line_number':536,'multiline':True]
['text':'* Append an array of values. ','line_number':542,'multiline':True]
['text':'* Append a set of values. ','line_number':549,'multiline':True]
['text':'*
     * Append a map of values as a sub-object.
     * Note: the keys of the map should be StringData-compatible (i.e. strings).
     ','line_number':553,'multiline':True]
['text':'* Append a range of values between two iterators. ','line_number':569,'multiline':True]
['text':'*
     * Resets this BSONObjBulder to an empty state. All previously added fields are lost.  If this
     * BSONObjBuilderBase is using an externally provided BufBuilder, this method does not affect
     * the bytes before the start of this object.
     *
     * Invalid to call if done() has already been called in order to finalize the BSONObj.
     ','line_number':573,'multiline':True]
['text':' Reset the position the next write will go to right after our size reservation.','line_number':583,'multiline':False]
['text':'* Fetch the object we have built.
        BSONObjBuilderBase still frees the object when the builder goes out of
        scope -- very important to keep in mind.  Use obj() if you
        would like the BSONObj to last longer than the builder.
    ','line_number':587,'multiline':True]
['text':' Like 'done' above, but does not construct a BSONObj to return to the caller.','line_number':597,'multiline':False]
['text':'* Peek at what is in the builder, but leave the builder ready for more appends.
        The returned object is only valid until the next modification or destruction of the builder.
        Intended use case: append a field if not already there.
    ','line_number':602,'multiline':True]
['text':' None of the code which resets this builder to the not-done state is expected to throw.','line_number':609,'multiline':False]
['text':' If it does, that would be a violation of our expectations.','line_number':610,'multiline':False]
['text':' Immediately after the buffer for the ephemeral space created by the call to `_done()`','line_number':612,'multiline':False]
['text':' is ready, reset our state to not-done.','line_number':613,'multiline':False]
['text':' next append should overwrite the EOO','line_number':616,'multiline':False]
['text':' Rereserve room for the real EOO','line_number':617,'multiline':False]
['text':'* Make it look as if "done" has been called, so that our destructor is a no-op. Do
     *  this if you know that you don't care about the contents of the builder you are
     *  destroying.
     *
     *  Note that it is invalid to call any method other than the destructor after invoking
     *  this method.
     ','line_number':623,'multiline':True]
['text':'* @return true if we are using our own bufbuilder, and not an alternate that was given to us
     * in our constructor ','line_number':638,'multiline':True]
['text':' Initializes the builder without allocating any space. Only used by subclasses.','line_number':659,'multiline':False]
['text':' Intentionally non-virtual.','line_number':663,'multiline':False]
['text':' It is the derived class's responsibility to ensure that done() is called.','line_number':665,'multiline':False]
['text':' Prevents adding EOO from failing.','line_number':675,'multiline':False]
['text':' Only set `_doneCalled` to true when all functions which could throw haven't thrown.','line_number':684,'multiline':False]
['text':' If 'done' has not already been called, and we have a reference to an owning','line_number':690,'multiline':False]
['text':' BufBuilder but do not own it ourselves, then we must call _done to write in the','line_number':691,'multiline':False]
['text':' length. Otherwise, we own this memory and its lifetime ends with us, therefore','line_number':692,'multiline':False]
['text':' we can elide the write.','line_number':693,'multiline':False]
['text':' Must be called by derived class destructors.','line_number':697,'multiline':False]
['text':' The following forward declaration exists to enable the extern','line_number':712,'multiline':False]
['text':' declaration, which must come before the use of the matching','line_number':713,'multiline':False]
['text':' instantiation of the base class of BSONObjBuilder. Do not remove or','line_number':714,'multiline':False]
['text':' re-order these lines w.r.t BSONObjBuilderBase or BSONObjBuilder','line_number':715,'multiline':False]
['text':' without being sure that you are not undoing the advantages of the','line_number':716,'multiline':False]
['text':' extern template declaration.','line_number':717,'multiline':False]
['text':' BSONObjBuilder needs this forward declared in order to declare the','line_number':722,'multiline':False]
['text':' ArrayBuilder typedef. This forward declaration is also required to','line_number':723,'multiline':False]
['text':' allow one of the extern template declarations for','line_number':724,'multiline':False]
['text':' BSONArrayBuilderBase below.','line_number':725,'multiline':False]
['text':'*
 * "Standard" class used for constructing BSONObj on the fly. Stores the BSON in a refcounted
 * buffer.
 ','line_number':728,'multiline':True]
['text':'*
     * Creates a new BSONObjBuilder prefixed with the fields in 'prefix'.
     *
     * If prefix is an rvalue referring to the only view of the underlying BSON buffer, it will be
     * able to avoid copying and will just reuse the buffer. Therefore, you should try to std::move
     * into this constructor where possible.
     ','line_number':751,'multiline':True]
['text':' If prefix wasn't owned or we don't have exclusive access to it, we must copy.','line_number':759,'multiline':False]
['text':' Make sure we won't need to realloc().','line_number':761,'multiline':False]
['text':' Skip over size bytes (see first constructor).','line_number':762,'multiline':False]
['text':' Reserve room for our EOO byte.','line_number':763,'multiline':False]
['text':' Position right before prefix's EOO byte.','line_number':773,'multiline':False]
['text':' Reserve room for our EOO byte.','line_number':774,'multiline':False]
['text':'*
     * destructive
     * The returned BSONObj will free the buffer when it is finished.
     * @return owned BSONObj
     ','line_number':783,'multiline':True]
['text':'* Stream oriented way to add field names and values. ','line_number':796,'multiline':True]
['text':'* Stream oriented way to add field names and values. ','line_number':813,'multiline':True]
['text':' Compile-time "virtual" methods called by the base class.','line_number':831,'multiline':False]
['text':' The following forward declaration exists to enable the extern','line_number':843,'multiline':False]
['text':' declaration, which must come before the use of the matching','line_number':844,'multiline':False]
['text':' instantiation of the base class of UniqueBSONObjBuilder. Do not','line_number':845,'multiline':False]
['text':' remove or re-order these lines w.r.t BSONObjBuilderBase or','line_number':846,'multiline':False]
['text':' UniqueBSONObjBuilder without being sure that you are not undoing','line_number':847,'multiline':False]
['text':' the advantages of the extern template declaration.','line_number':848,'multiline':False]
['text':' UniqueBSONObjBuilder needs this forward declared in order to','line_number':852,'multiline':False]
['text':' declare the ArrayBuilder typedef. This forward declaration is also','line_number':853,'multiline':False]
['text':' required to allow one of the extern template declarations for','line_number':854,'multiline':False]
['text':' BSONArrayBuilderBase below.','line_number':855,'multiline':False]
['text':'*
 * Alternative to BSONObjBuilder which uses a non-refcounted buffer (UniqueBuffer) instead of a
 * refcounted buffer (SharedBuffer).
 *
 * This should only be used when you care about having direct ownership over the BSONObj's
 * underlying memory.
 ','line_number':858,'multiline':True]
['text':'*
     * Creates a new UniqueBSONObjBuilder prefixed with the fields in 'prefix'.
     ','line_number':874,'multiline':True]
['text':' Make sure we won't need to realloc().','line_number':878,'multiline':False]
['text':' Skip over size bytes (see first constructor).','line_number':879,'multiline':False]
['text':' Reserve room for our EOO byte.','line_number':880,'multiline':False]
['text':'*
     * destructive
     * The returned BSONObj will free the buffer when it is finished.
     ','line_number':892,'multiline':True]
['text':' Compile-time "virtual" which must be provided to satisfy the base class.','line_number':905,'multiline':False]
['text':' Intentionally left empty.','line_number':907,'multiline':False]
['text':' Intentionally left empty.','line_number':911,'multiline':False]
['text':'*
 * Base class for building BSON arrays. Similar to BSONObjBuilderBase.
 ','line_number':915,'multiline':True]
['text':' These two just use next position','line_number':989,'multiline':False]
['text':'*
     * destructive - ownership moves to returned BSONArray
     * @return owned BSONArray
     ','line_number':1060,'multiline':True]
['text':' The following extern template declaration must come after the','line_number':1079,'multiline':False]
['text':' forward declaration of BSONArrayBuilder above, and before the use','line_number':1080,'multiline':False]
['text':' of the matching instantiation of the base class of','line_number':1081,'multiline':False]
['text':' BSONArrayBuilder. Do not remove or re-order these lines w.r.t','line_number':1082,'multiline':False]
['text':' BSONArrayBuilderBase or BSONArrayBuilder without being sure that','line_number':1083,'multiline':False]
['text':' you are not undoing the advantages of the extern template','line_number':1084,'multiline':False]
['text':' declaration.','line_number':1085,'multiline':False]
['text':'*
 * "Standard" class used for building BSON arrays.
 ','line_number':1088,'multiline':True]
['text':' The following extern template declaration must come after the','line_number':1100,'multiline':False]
['text':' forward delaration of UniqueBSONArrayBuilder above, and before the','line_number':1101,'multiline':False]
['text':' use of the matching instantiation of the base class of','line_number':1102,'multiline':False]
['text':' UniqueBSONArrayBuilder. Do not remove or re-order these lines w.r.t','line_number':1103,'multiline':False]
['text':' BSONArrayBuilderBase or UniqueBSONArrayBuilder without being sure','line_number':1104,'multiline':False]
['text':' that you are not undoing the advantages of the extern template','line_number':1105,'multiline':False]
['text':' declaration.','line_number':1106,'multiline':False]
['text':'*
 * Alternative to BSONArrayBuilder. This class is analogous to UniqueBSONObjBuilder.
 ','line_number':1109,'multiline':True]
['text':' namespace mongo','line_number':1245,'multiline':False]
