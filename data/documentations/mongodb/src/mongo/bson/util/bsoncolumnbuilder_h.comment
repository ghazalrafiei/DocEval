['text':'*
 *    Copyright (C) 2021-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':'*
 * Class to build BSON Subtype 7 (Column) binaries.
 ','line_number':54,'multiline':True]
['text':'*
     * Appends a BSONElement to this BSONColumnBuilder.
     *
     * Value will be stored delta compressed if possible and uncompressed otherwise.
     *
     * The field name will be ignored.
     *
     * EOO is treated as 'skip'.
     *
     * Throws InvalidBSONType if MinKey or MaxKey is appended.
     ','line_number':62,'multiline':True]
['text':'*
     * Appends a BSONObj to this BSONColumnBuilder.
     *
     * Like appending a BSONElement of type Object.
     ','line_number':75,'multiline':True]
['text':'*
     * Appends a BSONArray to this BSONColumnBuilder.
     *
     * Like appending a BSONElement of type Array.
     ','line_number':82,'multiline':True]
['text':'*
     * Appends an index skip to this BSONColumnBuilder.
     ','line_number':89,'multiline':True]
['text':'*
     * Returns a BSON Column binary and leaves the BSONColumnBuilder in a state where it is allowed
     * to continue append data to it. Less efficient than 'finalize'. Anchor is the point in the
     * returned binary that will not change when more data is appended to the BSONColumnBuilder.
     *
     * The BSONColumnBuilder must remain in scope for the returned buffer to be valid. Any call to
     * 'append' or 'skip' will invalidate the returned buffer.
     ','line_number':94,'multiline':True]
['text':'*
     * Finalizes the BSON Column and returns the BinData binary. Further data append is not allowed.
     *
     * The BSONColumnBuilder must remain in scope for the pointer to be valid.
     ','line_number':104,'multiline':True]
['text':'*
     * Detaches the buffer associated with this BSONColumnBuilder. Allows the memory to be reused
     * for building another BSONColumn.
     ','line_number':111,'multiline':True]
['text':'*
     * Returns the number of interleaved start control bytes this BSONColumnBuilder has written.
     ','line_number':117,'multiline':True]
['text':'*
     * Deconstructed BSONElement without type and fieldname in the contigous buffer.
     ','line_number':125,'multiline':True]
['text':' Performs binary memory compare','line_number':136,'multiline':False]
['text':'*
     * State for encoding scalar BSONElement as BSONColumn using delta or delta-of-delta
     * compression. When compressing Objects one Encoding state is used per sub-field within the
     * object to compress.
     ','line_number':144,'multiline':True]
['text':' Initializes this encoding state. Must be called after construction and move.','line_number':152,'multiline':False]
['text':' Helper to append doubles to this Column builder. Returns true if append was successful','line_number':165,'multiline':False]
['text':' and false if the value needs to be stored uncompressed.','line_number':166,'multiline':False]
['text':' Tries to rescale current pending values + one additional value into a new','line_number':169,'multiline':False]
['text':' Simple8bBuilder. Returns the new Simple8bBuilder if rescaling was possible and none','line_number':170,'multiline':False]
['text':' otherwise.','line_number':171,'multiline':False]
['text':'*
         * Copyable memory buffer
         ','line_number':177,'multiline':True]
['text':' Storage for the previously appended BSONElement','line_number':194,'multiline':False]
['text':' This is only used for types that use delta of delta.','line_number':197,'multiline':False]
['text':' Simple-8b builder for storing compressed deltas','line_number':200,'multiline':False]
['text':' Chose whether to use 128 or 64 Simple-8b builder','line_number':204,'multiline':False]
['text':' Offset to last Simple-8b control byte','line_number':207,'multiline':False]
['text':' Additional variables needed for previous state','line_number':210,'multiline':False]
['text':'*
     * Internal mode this BSONColumnBuilder is in.
     ','line_number':220,'multiline':True]
['text':' Regular mode without interleaving. Appended elements are treated as scalars.','line_number':224,'multiline':False]
['text':' Interleaved mode where the reference object is being determined. New sub fields are','line_number':226,'multiline':False]
['text':' attempted to be merged in to the existing reference object candidate.','line_number':227,'multiline':False]
['text':' Interleaved mode with a fixed reference object. Any incompatible sub fields in appended','line_number':229,'multiline':False]
['text':' objects must exit interleaved mode.','line_number':230,'multiline':False]
['text':'*
     * Internal state of the BSONColumnBuilder. Can be copied to restore a previous state after
     * finalize.
     ','line_number':234,'multiline':True]
['text':' Encoding state for kRegular mode','line_number':241,'multiline':False]
['text':' Encoding states when in sub-object compression mode. There should be one encoding state','line_number':259,'multiline':False]
['text':' per scalar field in '_referenceSubObj'.','line_number':260,'multiline':False]
['text':' Reference object that is used to match object hierarchy to encoding states. Appending','line_number':263,'multiline':False]
['text':' objects for sub-object compression need to check their hierarchy against this object.','line_number':264,'multiline':False]
['text':' Buffered BSONObj when determining reference object. Will be compressed when this is','line_number':268,'multiline':False]
['text':' complete and we transition into kSubObjAppending.','line_number':269,'multiline':False]
['text':' Helper to flatten Object to compress to match _subobjStates','line_number':272,'multiline':False]
['text':' Append helper for appending a BSONObj','line_number':276,'multiline':False]
['text':' Append Object for sub-object compression when in mode kSubObjAppending','line_number':279,'multiline':False]
['text':' Transition into kSubObjDeterminingReference mode','line_number':282,'multiline':False]
['text':' Transition from kSubObjDeterminingReference into kSubObjAppending','line_number':285,'multiline':False]
['text':' Transition from kSubObjDeterminingReference or kSubObjAppending back into kRegular.','line_number':288,'multiline':False]
['text':' Buffer for the BSON Column binary','line_number':293,'multiline':False]
['text':' namespace mongo','line_number':301,'multiline':False]
