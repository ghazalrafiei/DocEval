['text':'*
 *    Copyright (C) 2020-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':'*
     * Sets up the task executor as well as a TopologyListenerMock for each unit test.
     ','line_number':84,'multiline':True]
['text':'*
     * Sets up a SingleServerDiscoveryMonitor that starts sending "hello" to the server.
     ','line_number':143,'multiline':True]
['text':' Ensure that the clock has not advanced since setUp() and _startDate is representative of','line_number':159,'multiline':False]
['text':' when the first "hello" request was sent.','line_number':160,'multiline':False]
['text':' Ensure that the clock has not advanced since setUp() and _startDate is representative','line_number':172,'multiline':False]
['text':' of when the first "hello" request was sent.','line_number':173,'multiline':False]
['text':'*
     * Checks that an "hello" request has been sent to some server and schedules a response. If
     * assertHostCheck is true, asserts that the "hello" was sent to the server at hostAndPort.
     ','line_number':178,'multiline':True]
['text':' Operations can happen inline with advanceTime(), so log before and after the call.','line_number':214,'multiline':False]
['text':'*
     * Checks that exactly one successful "hello" occurs within a time interval of
     * heartbeatFrequency.
     ','line_number':224,'multiline':True]
['text':' There should only be one "hello" response queued up.','line_number':246,'multiline':False]
['text':'*
     * Confirms no more "hello" requests are sent between elapsed() and deadline. Confirms no more
     * "hello" responses are received between elapsed() and deadline when hostAndPort is specified.
     ','line_number':251,'multiline':True]
['text':'*
     * Waits up to timeoutMS for the next "hello" request to go out. Causes the test to fail if
     * timeoutMS time passes and no request is ready.
     *
     * NOTE: The time between each "hello" request is the heartbeatFrequency compounded by response
     * time.
     ','line_number':266,'multiline':True]
['text':'*
 * Checks that a SingleServerDiscoveryMonitor sends "hello" requests at least heartbeatFrequency
 * apart.
 ','line_number':295,'multiline':True]
['text':' hasPrimary = ','line_number':301,'multiline':True]
['text':' dollarPrefixHosts = ','line_number':301,'multiline':True]
['text':' A "hello" command fails if it takes as long or longer than timeoutMS.','line_number':308,'multiline':False]
['text':'*
 * Confirms that a SingleServerDiscoveryMonitor reports to the TopologyListener when a "hello"
 * command generates an error.
 ','line_number':325,'multiline':True]
['text':' hasPrimary = ','line_number':331,'multiline':True]
['text':' dollarPrefixHosts = ','line_number':331,'multiline':True]
['text':' Kill the server before starting up the SingleServerDiscoveryMonitor.','line_number':333,'multiline':False]
['text':' Advance time in small increments to ensure we stop before another "hello" is sent.','line_number':348,'multiline':False]
['text':' hasPrimary = ','line_number':359,'multiline':True]
['text':' dollarPrefixHosts = ','line_number':359,'multiline':True]
['text':' Start up the ServerDiscoveryMonitor to monitor host0 only.','line_number':365,'multiline':False]
['text':' Start monitoring host1.','line_number':376,'multiline':False]
['text':' Ensure expedited checking is disabled for the SingleServerDiscoveryMonitor corresponding to','line_number':384,'multiline':False]
['text':' host1 as well.','line_number':385,'multiline':False]
['text':' Confirm host0 and host1 are monitored.','line_number':388,'multiline':False]
['text':' hasPrimary = ','line_number':397,'multiline':True]
['text':' dollarPrefixHosts = ','line_number':397,'multiline':True]
['text':' Start up the ServerDiscoveryMonitor to monitor both hosts.','line_number':404,'multiline':False]
['text':' Confirm that both hosts are monitored.','line_number':413,'multiline':False]
['text':' Remove host1 from the TopologyDescription to stop monitoring it.','line_number':430,'multiline':False]
['text':' Confirm the next "hello" request is sent to host0 and not host1.','line_number':443,'multiline':False]
['text':' hasPrimary = ','line_number':449,'multiline':True]
['text':' dollarPrefixHosts = ','line_number':449,'multiline':True]
['text':' After the ServerDiscoveryMonitor shuts down, the TopologyListener may have responses until','line_number':463,'multiline':False]
['text':' heartbeatFrequency has passed, but none of them should indicate Status::OK.','line_number':464,'multiline':False]
['text':' Drain any requests already scheduled.','line_number':468,'multiline':False]
['text':'*
 * Tests that the ServerDiscoveryMonitor waits until SdamConfiguration::kMinHeartbeatFrequency has
 * passed since the last "hello" was received if requestImmediateCheck() is called before enough
 * time has passed.
 ','line_number':485,'multiline':True]
['text':' hasPrimary = ','line_number':492,'multiline':True]
['text':' dollarPrefixHosts = ','line_number':492,'multiline':True]
['text':' Start up the ServerDiscoveryMonitor to monitor host0 only.','line_number':496,'multiline':False]
['text':' Ensure the server is not in expedited mode *before* requestImmediateCheck().','line_number':502,'multiline':False]
['text':' Check that there is only one "hello" request at time t=0 up until','line_number':505,'multiline':False]
['text':' timeAdvanceFromFirstHello.','line_number':506,'multiline':False]
['text':' It's been less than SdamConfiguration::kMinHeartbeatFrequency since the last "hello" was','line_number':512,'multiline':False]
['text':' received. The next "hello" should be sent SdamConfiguration::kMinHeartbeatFrequency since','line_number':513,'multiline':False]
['text':' the last "hello" was received rather than immediately.','line_number':514,'multiline':False]
['text':' Confirm expedited requests continue since there is no primary.','line_number':524,'multiline':False]
['text':'*
 * Tests that if more than SdamConfiguration::kMinHeartbeatFrequency has passed since the last
 * "hello" response was received, the ServerDiscoveryMonitor sends an "hello" immediately after
 * requestImmediateCheck() is called.
 ','line_number':529,'multiline':True]
['text':' hasPrimary = ','line_number':536,'multiline':True]
['text':' dollarPrefixHosts = ','line_number':536,'multiline':True]
['text':' Start up the ServerDiscoveryMonitor to monitor host0 only.','line_number':540,'multiline':False]
['text':' Ensure the server is not in expedited mode *before* requestImmediateCheck().','line_number':546,'multiline':False]
['text':' No less than SdamConfiguration::kMinHeartbeatFrequency must pass before','line_number':549,'multiline':False]
['text':' requestImmediateCheck() is called in order to ensure the server reschedules for an immediate','line_number':550,'multiline':False]
['text':' check.','line_number':551,'multiline':False]
['text':' Confirm expedited requests continue since there is no primary.','line_number':558,'multiline':False]
['text':' namespace','line_number':563,'multiline':False]
['text':' namespace mongo','line_number':564,'multiline':False]
