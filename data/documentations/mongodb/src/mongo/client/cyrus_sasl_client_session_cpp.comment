['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':'
 * Allocator functions to be used by the SASL library, if the client
 * doesn't initialize the library for us.
 ','line_number':59,'multiline':True]
['text':' Version 2.1.26 is the first version to use size_t in the allocator signatures','line_number':64,'multiline':False]
['text':'
 * Mutex functions to be used by the SASL library, if the client doesn't initialize the library
 * for us.
 ','line_number':89,'multiline':True]
['text':'*
 * Configures the SASL library to use allocator and mutex functions we specify,
 * unless the client application has previously initialized the SASL library.
 ','line_number':112,'multiline':True]
['text':' do nothing','line_number':123,'multiline':False]
['text':'*
 * Initializes the client half of the SASL library, but is effectively a no-op if the client
 * application has already done it.
 *
 * If a client wishes to override this initialization but keep the allocator and mutex
 * initialization, it should implement a MONGO_INITIALIZER_GENERAL with
 * CyrusSaslAllocatorsAndMutexes as a prerequisite and CyrusSaslClientContext as a
 * dependent.  If it wishes to override both, it should implement a MONGO_INITIALIZER_GENERAL
 * with CyrusSaslAllocatorsAndMutexes and CyrusSaslClientContext as dependents, or
 * initialize the library before calling mongo::runGlobalInitializersOrDie().
 ','line_number':126,'multiline':True]
['text':' context ','line_number':141,'multiline':True]
['text':' If the client application has previously called sasl_client_init(), the callbacks passed','line_number':144,'multiline':False]
['text':' in here are ignored.','line_number':145,'multiline':False]
['text':'','line_number':146,'multiline':False]
['text':' TODO: Call sasl_client_done() at shutdown when we have a story for orderly shutdown.','line_number':147,'multiline':False]
['text':'*
 * Callback registered on the sasl_conn_t underlying a CyrusSaslClientSession to allow the Cyrus
 * SASL library to query for the authentication id and other simple string configuration parameters.
 *
 * Note that in Mongo, the authentication and authorization ids (authid and authzid) are always
 * the same.  These correspond to SASL_CB_AUTHNAME and SASL_CB_USER.
 ','line_number':158,'multiline':True]
['text':'*
 * Callback registered on the sasl_conn_t underlying a CyrusSaslClientSession to allow
 * the Cyrus SASL library to query for the password data.
 ','line_number':193,'multiline':True]
['text':' namespace','line_number':221,'multiline':False]
['text':' The parameterPassword is stored as a sasl_secret_t,  while other','line_number':240,'multiline':False]
['text':' parameters are stored directly.  This facilitates memory ownership management for','line_number':241,'multiline':False]
['text':' getPasswordAsSecret().','line_number':242,'multiline':False]
['text':' See comment in setParameter() about the special storage of parameterPassword.','line_number':252,'multiline':False]
['text':' namespace mongo','line_number':314,'multiline':False]
