['text':'*
 *    Copyright (C) 2020-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':'*
 * Replica set monitor implementation backed by the classes in the mongo::sdam namespace.
 *
 * All methods perform the required synchronization to allow callers from multiple threads.
 ','line_number':85,'multiline':True]
['text':'*
         * Tries to mark the query as done and resolve its promise with an error status, and returns
         * whether or not it was able to do so.
         ','line_number':191,'multiline':True]
['text':'*
         * Tries to mark the query as done and resolve its promise with a successful result, and
         * returns whether or not it was able to do so.
         ','line_number':205,'multiline':True]
['text':' Used to compute latency.','line_number':226,'multiline':False]
['text':' Information collected from the primary ServerDescription to be published via the','line_number':236,'multiline':False]
['text':' ReplicaSetChangeNotifier','line_number':237,'multiline':False]
['text':' Removes the query pointed to by iter and returns an iterator to the next item in the list.','line_number':251,'multiline':False]
['text':' Removes the given query from the list, if it is there.','line_number':255,'multiline':False]
['text':' Incoming Events','line_number':269,'multiline':False]
['text':' Get a pointer to the current primary's ServerDescription','line_number':292,'multiline':False]
['text':' To ensure a consistent view of the Topology either _currentPrimary or _currentTopology should','line_number':293,'multiline':False]
['text':' be called (not both) since the topology can change between the function invocations.','line_number':294,'multiline':False]
['text':' Get the current TopologyDescription','line_number':297,'multiline':False]
['text':' Note that most functions will want to save the result of this function once per computation','line_number':298,'multiline':False]
['text':' so that we are operating on a consistent read-only view of the topology.','line_number':299,'multiline':False]
['text':' Try to satisfy the outstanding queries for this instance with the given topology information.','line_number':308,'multiline':False]
['text':' Take action on error for the given host.','line_number':311,'multiline':False]
['text':' This object will be registered as a TopologyListener if there are','line_number':330,'multiline':False]
['text':' any outstanding queries for this RSM instance.','line_number':331,'multiline':False]
['text':' namespace mongo','line_number':351,'multiline':False]
