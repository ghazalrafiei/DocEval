['text':'*
 *    Copyright (C) 2019-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':'*
 * This is the interface that allows one to select a server to satisfy a DB operation given a
 * TopologyDescription and a ReadPreferenceSetting.
 ','line_number':52,'multiline':True]
['text':'*
     * Finds a list of candidate servers according to the ReadPreferenceSetting.
     ','line_number':58,'multiline':True]
['text':'*
     * Select a single server according to the ReadPreference and latency of the
     * ServerDescription(s). The server is selected randomly from those that match the criteria.
     ','line_number':66,'multiline':True]
['text':' remove servers that do not match the TagSet','line_number':93,'multiline':False]
['text':' staleness for a ServerDescription is defined here:','line_number':106,'multiline':False]
['text':' https://github.com/mongodb/specifications/blob/master/source/server-selection/server-selection.rst#maxstalenessseconds','line_number':107,'multiline':False]
['text':' (S.lastUpdateTime - S.lastWriteDate) - (P.lastUpdateTime - P.lastWriteDate) +','line_number':118,'multiline':False]
['text':' heartbeatFrequencyMS','line_number':119,'multiline':False]
['text':' topologyType == kReplicaSetWithPrimary implies the validity of the primary server','line_number':121,'multiline':False]
['text':' description.','line_number':122,'multiline':False]
['text':'  SMax.lastWriteDate - S.lastWriteDate + heartbeatFrequencyMS','line_number':138,'multiline':False]
['text':' identify secondary with max last write date.','line_number':141,'multiline':False]
['text':' Not a replica set','line_number':158,'multiline':False]
['text':' A SelectionFilter is a higher order function used to filter out servers from the current','line_number':176,'multiline':False]
['text':' Topology. It's return value is used as input to the TopologyDescription::findServers','line_number':177,'multiline':False]
['text':' function, and is a function that takes a ServerDescriptionPtr and returns a bool indicating','line_number':178,'multiline':False]
['text':' whether to keep this server or not based on the ReadPreference, server type, and recency','line_number':179,'multiline':False]
['text':' metrics of the server.','line_number':180,'multiline':False]
['text':' This is used to filter out servers based on their current latency measurements.','line_number':220,'multiline':False]
['text':' remove servers not in the latency window in-place.','line_number':232,'multiline':False]
['text':' namespace mongo::sdam','line_number':239,'multiline':False]
