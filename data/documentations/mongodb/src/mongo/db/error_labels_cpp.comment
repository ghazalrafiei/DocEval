['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':' namespace','line_number':67,'multiline':False]
['text':' Note that we only apply the TransientTransactionError label if the "autocommit" field is','line_number':70,'multiline':False]
['text':' present in the session options. When present, "autocommit" will always be false, so we','line_number':71,'multiline':False]
['text':' don't check its value. There is no point in returning TransientTransactionError label if','line_number':72,'multiline':False]
['text':' we have already tried to abort it. An error code for which isTransientTransactionError()','line_number':73,'multiline':False]
['text':' is true indicates a transaction failure with no persistent side effects.','line_number':74,'multiline':False]
['text':' Do not return RetryableWriteError labels to internal clients (e.g. mongos).','line_number':81,'multiline':False]
['text':' Return with RetryableWriteError label on retryable error codes for retryable writes or','line_number':95,'multiline':False]
['text':' transactions commit/abort.','line_number':96,'multiline':False]
['text':' mongos should not attach RetryableWriteError label to retryable errors thrown by the','line_number':107,'multiline':False]
['text':' config server or targeted shards.','line_number':108,'multiline':False]
['text':' Determine whether this operation is a candidate for the ResumableChangeStreamError label.','line_number':121,'multiline':False]
['text':' If the command or exception is not relevant, bail out early.','line_number':129,'multiline':False]
['text':' We should always have a valid opCtx at this point.','line_number':134,'multiline':False]
['text':' Get the full command object from CurOp. If this is a getMore, get the original command.','line_number':137,'multiline':False]
['text':' Get the namespace string from CurOp. We will need it to build the LiteParsedPipeline.','line_number':141,'multiline':False]
['text':' Do enough parsing to confirm that this is a well-formed pipeline with a $changeStream.','line_number':149,'multiline':False]
['text':' If the pipeline parsed successfully and is a $changeStream, add the label.','line_number':161,'multiline':False]
['text':' Last OpTimes are unknown or not usable for determining whether or not a write was','line_number':170,'multiline':False]
['text':' attempted.','line_number':171,'multiline':False]
['text':' PLEASE CONSULT DRIVERS BEFORE ADDING NEW ERROR LABELS.','line_number':178,'multiline':False]
['text':' In the rare case where RetryableWriteError and TransientTransactionError are not','line_number':185,'multiline':False]
['text':' mutually exclusive, only append the TransientTransactionError label so users know to','line_number':186,'multiline':False]
['text':' retry the entire transaction.','line_number':187,'multiline':False]
['text':' The NoWritesPerformed error label is only relevant for retryable writes so that','line_number':191,'multiline':False]
['text':' drivers can determine what error to return when faced with multiple errors (see','line_number':192,'multiline':False]
['text':' SERVER-66479 and DRIVERS-2327).','line_number':193,'multiline':False]
['text':' Change streams cannot run in a transaction, and cannot be a retryable write. Since these','line_number':199,'multiline':False]
['text':' labels are only added in the event that we are executing the associated operation, we do','line_number':200,'multiline':False]
['text':' not add a ResumableChangeStreamError label if either of them is set.','line_number':201,'multiline':False]
['text':' This command was failed by a failCommand failpoint. Thus, we return the errorLabels','line_number':223,'multiline':False]
['text':' specified in the failpoint to supress any other error labels that would otherwise be','line_number':224,'multiline':False]
['text':' returned by the ErrorLabelBuilder.','line_number':225,'multiline':False]
['text':' InternalTransactionNotSupported is a retryable write error. This allows a retryable','line_number':252,'multiline':False]
['text':' WouldChangeOwningShard update or findAndModify statement that fails to execute using an','line_number':253,'multiline':False]
['text':' internal transaction during downgrade to be retried by the drivers; the retry would use','line_number':254,'multiline':False]
['text':' the legacy way of handling WouldChangeOwningShard errors which does not require an','line_number':255,'multiline':False]
['text':' internal transaction. Don't label InternalTransactionNotSupported as a transient','line_number':256,'multiline':False]
['text':' transaction error since otherwise the transaction API would retry the internal','line_number':257,'multiline':False]
['text':' transaction until it exhausts the maximum number of retries before returning an error to','line_number':258,'multiline':False]
['text':' the drivers.','line_number':259,'multiline':False]
['text':' On NoSuchTransaction it's safe to retry the whole transaction only if the data cannot be','line_number':282,'multiline':False]
['text':' rolled back.','line_number':283,'multiline':False]
['text':' namespace mongo','line_number':292,'multiline':False]
