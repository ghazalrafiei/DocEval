['text':'*
 *    Copyright (C) 2023-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':' Container for samples of pre-images keyed by their 'nsUUID'.','line_number':86,'multiline':False]
['text':' It's possible concurrent inserts have occurred since the initial point sampling','line_number':104,'multiline':False]
['text':' to establish the number of NsUUIDs.','line_number':105,'multiline':False]
['text':' Iterates over each 'nsUUID' captured by the pre-images in 'rs', and populates the 'samplesMap' to','line_number':111,'multiline':False]
['text':' include the 'RecordIdAndWallTime' for the most recent pre-image inserted for each 'nsUUID'.','line_number':112,'multiline':False]
['text':'* forward *','line_number':116,'multiline':True]
['text':' A forward 'seekNear' will return the previous entry if one does not match exactly. This','line_number':124,'multiline':False]
['text':' should ensure that the 'record's id is greater than the 'maxRecordIdForCurrentNsUUID' and','line_number':125,'multiline':False]
['text':' no less than the initial record for 'currentNsUUID'.','line_number':126,'multiline':False]
['text':' Returns a map of NsUUID to corresponding samples from the 'preImagesCollectionPtr'.','line_number':155,'multiline':False]
['text':'','line_number':156,'multiline':False]
['text':' Guarantees:','line_number':157,'multiline':False]
['text':'  (1) The result will contain at least 1 sample per 'nsUUID' in the pre-images collection.','line_number':158,'multiline':False]
['text':'  (2) For each 'nsUUID', the samples will be ordered as they appear in the underlying pre-images','line_number':159,'multiline':False]
['text':'  collection.','line_number':160,'multiline':False]
['text':' First, try to obtain 1 sample per 'nsUUID'.','line_number':163,'multiline':False]
['text':' This really shouldn't happen unless the collection is empty and the size storer was','line_number':180,'multiline':False]
['text':' really off on its collection size estimate.','line_number':181,'multiline':False]
['text':' Each 'PreImagesTruncateMarkersPerNsUUID' accounts for a set of "whole truncate markers" as well','line_number':208,'multiline':False]
['text':' as the leftover bytes and records not yet captured in a "whole" truncate marker (aka a partial','line_number':209,'multiline':False]
['text':' marker).','line_number':210,'multiline':False]
['text':'','line_number':211,'multiline':False]
['text':' The 'initialEstimates' specifies the estimated number of samples needed to generate a whole','line_number':212,'multiline':False]
['text':' marker.','line_number':213,'multiline':False]
['text':'','line_number':214,'multiline':False]
['text':' Given a set of samples for each 'nsUUID', returns a map with 'PreImagesTruncateMarkersPerNsUUID'','line_number':215,'multiline':False]
['text':' for each 'nsUUID'. The created 'PreImagesTruncateMarkersPerNsUUID's will only generate whole','line_number':216,'multiline':False]
['text':' markers. All partial markers will be empty in the result.','line_number':217,'multiline':False]
['text':' The 'numRecords' and 'dataSize' are both retrieved by the SizeStorer, which','line_number':259,'multiline':False]
['text':' can be incorrect after startup. If the records/ bytes accounted for were retrieved via','line_number':260,'multiline':False]
['text':' scanning, its completely possible they are more accurate than the metrics reported. If','line_number':261,'multiline':False]
['text':' they were retrieved from sampling, this scenario should be investigated further.','line_number':262,'multiline':False]
['text':'','line_number':263,'multiline':False]
['text':' Early exit if there are no more bytes / records to distribute across partial markers.','line_number':264,'multiline':False]
['text':' Arbitrarily append the remaining records and bytes to one of the marker sets.','line_number':288,'multiline':False]
['text':' Number of bytes and records accounted for by truncate markers.','line_number':322,'multiline':False]
['text':' Step 1: perform a forward scan of the collection. This could take a while for larger','line_number':328,'multiline':False]
['text':' collections.','line_number':329,'multiline':False]
['text':' Step 2: See if there are records unaccounted for in the initial markers. This can happen if','line_number':353,'multiline':False]
['text':' there are concurrent inserts into a given 'nsUUID' after the segment was scanned.','line_number':354,'multiline':False]
['text':'/////////////////////////////////////////////////////////////','line_number':371,'multiline':False]
['text':'','line_number':372,'multiline':False]
['text':'  PHASE 1: Gather ordered sample points across the 'nsUUIDs' captured in the pre-images','line_number':373,'multiline':False]
['text':'  collection.','line_number':374,'multiline':False]
['text':'','line_number':375,'multiline':False]
['text':'','line_number':376,'multiline':False]
['text':'  {nsUUID: <ordered samples, at least 1 per nsUUID>}','line_number':377,'multiline':False]
['text':'','line_number':378,'multiline':False]
['text':'/////////////////////////////////////////////////////////////','line_number':379,'multiline':False]
['text':' Given the distribution of pre-images to 'nsUUID', the number of samples collected cannot','line_number':383,'multiline':False]
['text':' effectively represent the pre-images collection. Default to scanning instead.','line_number':384,'multiline':False]
['text':'//////////////////////////////////////////////////////////////','line_number':393,'multiline':False]
['text':'','line_number':394,'multiline':False]
['text':'  Phase 2: Create the whole truncate markers from the samples generated according to the','line_number':395,'multiline':False]
['text':'  'initialEstimates'.','line_number':396,'multiline':False]
['text':'','line_number':397,'multiline':False]
['text':'//////////////////////////////////////////////////////////////','line_number':398,'multiline':False]
['text':'//////////////////////////////////////////////////////////////','line_number':404,'multiline':False]
['text':'','line_number':405,'multiline':False]
['text':'  Phase 3: Update 'tenantTruncateMarkers' partial markers with the remaining bytes and records','line_number':406,'multiline':False]
['text':'  not accounted for in the 'wholeMarkersCreated' and distribute them across the 'nsUUID's.','line_number':407,'multiline':False]
['text':'','line_number':408,'multiline':False]
['text':'//////////////////////////////////////////////////////////////','line_number':409,'multiline':False]
['text':' Guarantee: Individual truncate markers and metrics for each 'nsUUID' may not be accurate, but','line_number':417,'multiline':False]
['text':' cumulatively, the total 'dataSize' and 'numRecords' captured by the set of','line_number':418,'multiline':False]
['text':' 'TenantTruncateMarkers' should reflect the actual 'dataSize' and 'numRecords' reported by the','line_number':419,'multiline':False]
['text':' SizeStorer.','line_number':420,'multiline':False]
['text':' The creationMethod returned is the initial creationMethod to try. However, there is no','line_number':430,'multiline':False]
['text':' guarantee at this point initialisation won't default to another creation method later in the','line_number':431,'multiline':False]
['text':' initalisation process.','line_number':432,'multiline':False]
['text':' Default to scanning since 'dataSize' and 'numRecords' could be incorrect.','line_number':444,'multiline':False]
['text':' Use the collection's average record size to estimate the number of records in','line_number':448,'multiline':False]
['text':' each marker, and thus estimate the combined size of the records.','line_number':449,'multiline':False]
['text':' Performs a ranged truncate over each expired marker in 'truncateMarkersForNss'. Updates the','line_number':469,'multiline':False]
['text':' "Output" parameters to communicate the respective docs deleted, bytes deleted, and and maximum','line_number':470,'multiline':False]
['text':' wall time of documents deleted to the caller.','line_number':471,'multiline':False]
['text':' The truncate marker contains pre-images part of a data range not yet consistent','line_number':485,'multiline':False]
['text':' (i.e. there could be oplog holes or partially applied ranges of the oplog in the','line_number':486,'multiline':False]
['text':' range).','line_number':487,'multiline':False]
['text':' Truncate ranges must be consistent data - no record within a truncate range should be written','line_number':514,'multiline':False]
['text':' after the truncate. Otherwise, the data viewed by an open change stream could be corrupted,','line_number':515,'multiline':False]
['text':' only seeing part of the range post truncate. The node can either be a secondary or primary at','line_number':516,'multiline':False]
['text':' this point. Restrictions must be in place to ensure consistent ranges in both scenarios.','line_number':517,'multiline':False]
['text':'      - Primaries can't truncate past the 'allDurable' Timestamp. 'allDurable'','line_number':518,'multiline':False]
['text':'      guarantees out-of-order writes on the primary don't leave oplog holes.','line_number':519,'multiline':False]
['text':'','line_number':520,'multiline':False]
['text':'      - Secondaries can't truncate past the 'lastApplied' timestamp. Within an oplog batch,','line_number':521,'multiline':False]
['text':'      entries are applied out of order, thus truncate markers may be created before the entire','line_number':522,'multiline':False]
['text':'      batch is finished.','line_number':523,'multiline':False]
['text':'      The 'allDurable' Timestamp is not sufficient given it is computed from within WT, which','line_number':524,'multiline':False]
['text':'      won't always know there are entries with opTime < 'allDurable' which have yet to enter','line_number':525,'multiline':False]
['text':'      the storage engine during secondary oplog application.','line_number':526,'multiline':False]
['text':'','line_number':527,'multiline':False]
['text':' Returns the maximum 'ts' a pre-image is allowed to have in order to be safely truncated.','line_number':528,'multiline':False]
['text':' Dumps the contents of 'installedTruncateMarkersSnapshot' and 'highestRecordIdAndWallTimeSamples'.','line_number':536,'multiline':False]
['text':' If there is an 'nsUUID' reported in the 'installedTruncateMarkers' with no corresponding entry in','line_number':537,'multiline':False]
['text':' 'highestSampledRecords', something went wrong during initialization.','line_number':538,'multiline':False]
['text':' namespace','line_number':568,'multiline':False]
['text':' All pre-images with 'ts' <= 'maxTSEligibleForTruncate' are candidates for truncation.','line_number':593,'multiline':False]
['text':' However, pre-images with 'ts' > 'maxTSEligibleForTruncate' are unsafe to truncate, as there','line_number':594,'multiline':False]
['text':' may be oplog holes or inconsistent data prior to it.','line_number':595,'multiline':False]
['text':' Compute the value once, as it requires making an additional call into the storage engine.','line_number':596,'multiline':False]
['text':' Best effort for removing all expired pre-images from 'nsUUID'. If there is a partial','line_number':616,'multiline':False]
['text':' marker which can be made into an expired marker, try to remove the new marker as well.','line_number':617,'multiline':False]
['text':' If the source collection doesn't exist and there's no more data to erase we can safely','line_number':636,'multiline':False]
['text':' remove the markers. Perform a final truncate to remove all elements just in case.','line_number':637,'multiline':False]
['text':' There are 2 possible scenarios here:','line_number':685,'multiline':False]
['text':'  (1) The 'tenantTruncateMarkers' was created, but isn't done with','line_number':686,'multiline':False]
['text':'  initialisation. In this case, the truncate markers created for 'nsUUID' may or','line_number':687,'multiline':False]
['text':'  may not be overwritten in the initialisation process. This is okay, lazy','line_number':688,'multiline':False]
['text':'  initialisation is performed by the remover thread to avoid blocking writes on','line_number':689,'multiline':False]
['text':'  startup and is strictly best effort.','line_number':690,'multiline':False]
['text':'','line_number':691,'multiline':False]
['text':'  (2) Pre-images were either recently enabled on 'nsUUID' or 'nsUUID' was just','line_number':692,'multiline':False]
['text':'  created. Either way, the first pre-images enabled insert to call','line_number':693,'multiline':False]
['text':'  'getOrEmplace()' creates the truncate markers for the 'nsUUID'. Any following','line_number':694,'multiline':False]
['text':'  calls to 'getOrEmplace()' return a pointer to the existing truncate markers.','line_number':695,'multiline':False]
['text':' (A) Register the 'tenantId' in the '_tenantMap' so inserts for namespaces created between (A)','line_number':714,'multiline':False]
['text':' and (C) are tracked in 'tenantMapEntry'.','line_number':715,'multiline':False]
['text':' (B) Generate the initial set of truncate markers for the tenant.','line_number':718,'multiline':False]
['text':' (C) Install the generated truncate markers into the 'tenantMapEntry'.','line_number':722,'multiline':False]
['text':' Critical section where no other threads can modify the 'tenantMapEntry'.','line_number':725,'multiline':False]
['text':' Add this 'nsUUID' which was not present in (B)'s snapshot and was intercepted','line_number':729,'multiline':False]
['text':' between (A) and (C).','line_number':730,'multiline':False]
['text':' Overwrite truncate markers created in 'tenantMapEntryPlaceHolder' whose','line_number':742,'multiline':False]
['text':' nsUUIDs are already accounted for in 'generatedTruncateMarkers' - as','line_number':743,'multiline':False]
['text':' 'generatedTruncateMarkers' account for all the pre-images pre-dating the short','line_number':744,'multiline':False]
['text':' generation period.','line_number':745,'multiline':False]
['text':'','line_number':746,'multiline':False]
['text':' Merging two sets of truncate markers would create unnecessary complexity in the best','line_number':747,'multiline':False]
['text':' effort process.','line_number':748,'multiline':False]
['text':' (D) Finalize the truncate markers by ensuring they have up-to-date highest RecordId and wall','line_number':752,'multiline':False]
['text':' times.','line_number':753,'multiline':False]
['text':' We must refresh the snapshot and update the highest seen RecordId and wall time for each','line_number':756,'multiline':False]
['text':' nsUUID to ensure all inserts concurrent with marker generation are eventually truncated.','line_number':757,'multiline':False]
['text':' Example:','line_number':758,'multiline':False]
['text':'      (i) SnapshotA is used to create 'generatedTruncateMarkers'.','line_number':759,'multiline':False]
['text':'      (ii) PreImage100 is inserted into  NsUUID1 - the insert isn't visible','line_number':760,'multiline':False]
['text':'      in SnapshotA.','line_number':761,'multiline':False]
['text':'      (iii) There aren't any other inserts into NsUUID1. The highest wall time and RecordId','line_number':762,'multiline':False]
['text':'      for NsUUID1 MUST be updated so the markers track PreImage100, and know to eventually','line_number':763,'multiline':False]
['text':'      truncate it.','line_number':764,'multiline':False]
['text':' At this point, truncation could not possible occur yet, so the lastRecordIdAndWallTimes','line_number':772,'multiline':False]
['text':' is expected to always contain an entry for the 'nsUUID'.','line_number':773,'multiline':False]
['text':' Pre-images inserted on the nsUUID won't be removed until either a new pre-image for','line_number':776,'multiline':False]
['text':' the nsUUID is inserted or the server is restarted. This should only be possible if','line_number':777,'multiline':False]
['text':' there were no pre-images for the nsUUID before the snapshot used to sample the','line_number':778,'multiline':False]
['text':' highest RecordId and wall time.','line_number':779,'multiline':False]
['text':' namespace mongo','line_number':798,'multiline':False]
