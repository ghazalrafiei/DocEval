['text':'*
 *    Copyright (C) 2022-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':'*
 * Metadata associated with a particular change collection that is used by the purging job.
 ','line_number':60,'multiline':True]
['text':' The wall time in milliseconds of the first document of the change collection.','line_number':64,'multiline':False]
['text':' Current maximum record id present in the change collection.','line_number':67,'multiline':False]
['text':'*
 * Manages the creation, deletion and insertion lifecycle of the change collection.
 ','line_number':71,'multiline':True]
['text':'*
     * Statistics of the change collection purging job.
     ','line_number':76,'multiline':True]
['text':'*
         * Total number of deletion passes completed by the purging job.
         ','line_number':80,'multiline':True]
['text':'*
         * Cumulative number of change collections documents deleted by the purging job.
         ','line_number':85,'multiline':True]
['text':'*
         * Cumulative size in bytes of all deleted documents from all change collections by the
         * purging job.
         ','line_number':90,'multiline':True]
['text':'*
         * Cumulative number of change collections scanned by the purging job.
         ','line_number':96,'multiline':True]
['text':'*
         * Cumulative number of milliseconds elapsed since the first pass by the purging job.
         ','line_number':101,'multiline':True]
['text':'*
         * Maximum wall time in milliseconds from the first document of each change collection.
         ','line_number':106,'multiline':True]
['text':'*
         * Serializes the purging job statistics to the BSON object.
         ','line_number':111,'multiline':True]
['text':'*
     * Creates an instance of the class using the service-context.
     ','line_number':121,'multiline':True]
['text':'*
     * Gets the instance of the class using the service context.
     ','line_number':126,'multiline':True]
['text':'*
     * Gets the instance of the class using the operation context.
     ','line_number':131,'multiline':True]
['text':'*
     * Creates a change collection for the specified tenant, if it doesn't exist.
     ','line_number':136,'multiline':True]
['text':'*
     * Deletes the change collection for the specified tenant, if it already exist.
     ','line_number':141,'multiline':True]
['text':'*
     * Inserts documents to change collections. The parameter 'oplogRecords' is a vector of
     * oplog records and the parameter 'oplogTimestamps' is a vector for respective timestamp
     * for each oplog record.
     *
     * The method fetches the tenant-id from the oplog entry, performs necessary modification to
     * the document and then write to the tenant's change collection at the specified oplog
     * timestamp.
     *
     * Failure in insertion to any change collection will result in a fatal exception and will
     * bring down the node.
     ','line_number':146,'multiline':True]
['text':'*
     * Change Collection Writer. After acquiring ChangeCollectionsWriter the user should trigger
     * acquisition of the locks by calling 'acquireLocks()' before the first write in the Write
     * Unit of Work. Then the write of documents to change collections can be triggered by
     * calling 'write()'.
     ','line_number':164,'multiline':True]
['text':'*
         * Constructs a writer from a range ['beginOplogEntries', 'endOplogEntries') of oplog
         * entries.
         ','line_number':173,'multiline':True]
['text':'*
         * Acquires locks needed to write documents to change collections.
         ','line_number':189,'multiline':True]
['text':'*
         * Writes documents to change collections.
         ','line_number':194,'multiline':True]
['text':'*
     * Returns a change collection writer that can insert change collection entries into
     * respective change collections. The entries are constructed from a range
     * ['beginOplogEntries', 'endOplogEntries') of oplog entries.
     ','line_number':205,'multiline':True]
['text':'*
     * Scans the provided change collection and returns its metadata that will be used by the
     * purging job to perform deletion on it. The method returns 'boost::none' if the collection
     * is empty.
     ','line_number':220,'multiline':True]
['text':'*
     * Removes documents from a change collection whose wall time is less than the
     * 'expirationTime'. Returns the number of documents deleted. The 'maxRecordIdBound' is the
     * maximum record id bound that will not be included in the collection scan.
     *
     * The removal process is performed with a collection scan + batch delete.
     ','line_number':229,'multiline':True]
['text':'*
     * Removes documents from a change collection which have expired given their wall time and the
     * configured 'expireAfterSeconds'.
     *
     * The removal process is performed with a series of range truncate calls to the record
     * store. Some documents might survive this process as deletion happens in chunks and we can
     * only delete a chunk if we guarantee it is fully expired, and does not contain holes.
     ','line_number':242,'multiline':True]
['text':'*
     * Verifies the change collection idenfitifed by 'dbAndUUID' still exists, and truncates data
     * ranges for expired markers. 'numRecordsDeletedAccum' is incremented with the number of
     * truncated records. Will throw NamespaceNotFound if the collection does no longer exist.
     ','line_number':254,'multiline':True]
['text':'*
     * Removes documents from a change collection which have expired given their wall time and the
     * configured 'expireAfterSeconds'.
     *
     * The removal process is performed with a series of range truncate calls to the record
     * store. Some documents might survive this process as deletion happens in chunks and we can
     * only delete a chunk if we guarantee it is fully expired, and does not contain holes.
     ','line_number':264,'multiline':True]
['text':' Change collections purging job stats.','line_number':275,'multiline':False]
['text':' namespace mongo','line_number':280,'multiline':False]
