['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':'*
 * Scans over a collection, starting at the RecordId provided in params and continuing until
 * there are no more records in the collection.
 *
 * Preconditions: Valid RecordId.
 ','line_number':60,'multiline':True]
['text':'*
     * If the member (with id memberID) passes our filter, set *out to memberID and return that
     * ADVANCED.  Otherwise, free memberID and return NEED_TIME.
     ','line_number':104,'multiline':True]
['text':'*
     * Sets '_latestOplogEntryTimestamp' to the current read timestamp, if available. This is
     * equivalent to the latest visible timestamp in the oplog.
     ','line_number':110,'multiline':True]
['text':'*
     * Extracts the timestamp from the 'ts' field of 'record', and sets '_latestOplogEntryTimestamp'
     * to that time if it isn't already greater. Throws an exception if the 'ts' field cannot be
     * extracted.
     ','line_number':116,'multiline':True]
['text':'*
     * Asserts that the minimum timestamp in the query filter has not already fallen off the oplog.
     ','line_number':123,'multiline':True]
['text':' WorkingSet is not owned by us.','line_number':128,'multiline':False]
['text':' The filter is not owned by us.','line_number':131,'multiline':False]
['text':' Null if nothing has been returned from _cursor yet.','line_number':138,'multiline':False]
['text':' If _params.shouldTrackLatestOplogTimestamp is set and the collection is the oplog or a change','line_number':140,'multiline':False]
['text':' collection, this is the latest timestamp seen by the collection scan. For change collections,','line_number':141,'multiline':False]
['text':' on EOF we advance this timestamp to the latest timestamp in the global oplog.','line_number':142,'multiline':False]
['text':' Stats','line_number':147,'multiline':False]
['text':' namespace mongo','line_number':151,'multiline':False]
