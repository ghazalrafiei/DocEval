['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':'*
 * A AddFieldsProjectionExecutor represents a projection execution tree for the $addFields stage.
 *
 * This class is mostly a wrapper around an InclusionNode tree. It contains logic to parse a
 * specification object into the corresponding InclusionNode tree, but defers most execution logic
 * to the underlying tree. In this way it is similar to InclusionProjectionExecutor, but it differs
 * by not applying inclusions before adding computed fields, thus keeping all existing fields.
 ','line_number':61,'multiline':True]
['text':'*
     * TODO SERVER-25510: The ProjectionExecutor _id and array-recursion policies are not
     * applicable to the $addFields "projection" stage. We make them non-configurable here.
     ','line_number':71,'multiline':True]
['text':'*
     * Creates the data needed to perform an AddFields.
     * Verifies that there are no conflicting paths in the specification.
     ','line_number':89,'multiline':True]
['text':'*
     * Create a projection that binds an expression to a top-level field.
     *
     * 'fieldPath' must be a top-level field name (exactly one element; no dots).
     ','line_number':96,'multiline':True]
['text':'*
     * Parses the addFields specification given by 'spec', populating internal data structures.
     ','line_number':114,'multiline':True]
['text':'*
     * Optimizes any computed expressions.
     ','line_number':124,'multiline':True]
['text':'*
     * Add the specified fields to 'inputDoc'.
     *
     * Replaced fields will remain in their original place in the document, while new added fields
     * will be added to the end of the document in the order in which they were specified to the
     * $addFields stage.
     *
     * Arrays will be traversed, with any dotted/nested computed fields applied to each element in
     * the array. For example, setting "a.0": "hello" will add a field "0" to every object
     * in the array "a". If there is an element in "a" that is not an object, it will be replaced
     * with {"0": "hello"}. See SERVER-25200 for more details.
     ','line_number':151,'multiline':True]
['text':'*
     * Attempts to parse 'objSpec' as an expression like {$add: [...]}. Adds a computed field to
     * '_root' and returns true if it was successfully parsed as an expression. Returns false if it
     * was not an expression specification.
     *
     * Throws an error if it was determined to be an expression specification, but failed to parse
     * as a valid expression.
     ','line_number':177,'multiline':True]
['text':'*
     * Traverses 'subObj' and parses each field. Creates nodes along the 'pathToObj' when an
     * expression/terminal path is found.
     ','line_number':189,'multiline':True]
['text':' The InclusionNode tree does most of the execution work once constructed.','line_number':197,'multiline':False]
['text':' namespace mongo::projection_executor','line_number':200,'multiline':False]
