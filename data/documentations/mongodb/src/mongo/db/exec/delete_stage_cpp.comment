['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':'*
 * Returns true if we should throw a WriteConflictException in order to retry the operation in
 * the case of a conflict. Returns false if we should skip the document and keep going.
 ','line_number':73,'multiline':True]
['text':' When we're doing a findAndModify with a sort, the sort will have a limit of 1, so it will not','line_number':78,'multiline':False]
['text':' produce any more results even if there is another matching document. Throw a WCE here so that','line_number':79,'multiline':False]
['text':' these operations get another chance to find a matching document. The findAndModify command','line_number':80,'multiline':False]
['text':' should automatically retry if it gets a WCE.','line_number':81,'multiline':False]
['text':' namespace','line_number':85,'multiline':False]
['text':' It is possible that after a delete was executed, a WriteConflictException occurred','line_number':122,'multiline':False]
['text':' and prevented us from returning ADVANCED with the old version of the document.','line_number':123,'multiline':False]
['text':' We should only get here if we were trying to return something before.','line_number':125,'multiline':False]
['text':' Either retry the last WSM we worked on or get a new one from our child.','line_number':136,'multiline':False]
['text':' We advanced, or are retrying, and id is set to the WSM to work on.','line_number':163,'multiline':False]
['text':' We want to free this member when we return, unless we need to retry deleting or returning it.','line_number':166,'multiline':False]
['text':' It's safe to have a reference instead of a copy here due to the member pointer only being','line_number':170,'multiline':False]
['text':' invalidated if the memberFreer ScopeGuard activates. This will only be the case if the','line_number':171,'multiline':False]
['text':' document is deleted successfully and thus the existing RecordId becomes invalid.','line_number':172,'multiline':False]
['text':' Deletes can't have projections. This means that covering analysis will always add','line_number':174,'multiline':False]
['text':' a fetch. We should always get fetched data, and never just key data.','line_number':175,'multiline':False]
['text':' Ensure the document still exists and matches the predicate.','line_number':178,'multiline':False]
['text':' yieldHandler','line_number':190,'multiline':False]
['text':' There was a problem trying to detect if the document still','line_number':191,'multiline':False]
['text':' exists, so retry.','line_number':192,'multiline':False]
['text':' Either the document has already been deleted, or it has been updated such that it no','line_number':202,'multiline':False]
['text':' longer matches the predicate.','line_number':203,'multiline':False]
['text':' Keep this member around so we can retry deleting it.','line_number':218,'multiline':False]
['text':' Ensure that the BSONObj underlying the WSM is owned because saveState() is','line_number':229,'multiline':False]
['text':' allowed to free the memory the BSONObj points to. The BSONObj will be needed','line_number':230,'multiline':False]
['text':' later when it is passed to collection_internal::deleteDocument(). Note that the call to','line_number':231,'multiline':False]
['text':' makeObjOwnedIfNeeded() will leave the WSM in the RID_AND_OBJ state in case we need to retry','line_number':232,'multiline':False]
['text':' deleting it.','line_number':233,'multiline':False]
['text':' yieldHandler','line_number':247,'multiline':False]
['text':' Do the write, unless this is an explain.','line_number':255,'multiline':False]
['text':' yieldHandler','line_number':281,'multiline':False]
['text':' Keep this member around so we can retry deleting it.','line_number':282,'multiline':False]
['text':' If the placement version is IGNORED and we encountered a critical section, then','line_number':291,'multiline':False]
['text':' yield, wait for the critical section to finish and then we'll resume the write','line_number':292,'multiline':False]
['text':' from the point we had left. We do this to prevent large multi-writes from','line_number':293,'multiline':False]
['text':' repeatedly failing due to StaleConfig and exhausting the mongos retry attempts.','line_number':294,'multiline':False]
['text':' Keep this member around so we can retry deleting it.','line_number':296,'multiline':False]
['text':' After deleting the document, the RecordId associated with this member is invalid.','line_number':307,'multiline':False]
['text':' Remove the 'recordId' from the WorkingSetMember before returning it.','line_number':308,'multiline':False]
['text':' As restoreState may restore (recreate) cursors, cursors are tied to the transaction in which','line_number':313,'multiline':False]
['text':' they are created, and a WriteUnitOfWork is a transaction, make sure to restore the state','line_number':314,'multiline':False]
['text':' outside of the WriteUnitOfWork.','line_number':315,'multiline':False]
['text':' yieldHandler','line_number':325,'multiline':False]
['text':' Note we don't need to retry anything in this case since the delete already was','line_number':326,'multiline':False]
['text':' committed. However, we still need to return the deleted document (if it was','line_number':327,'multiline':False]
['text':' requested).','line_number':328,'multiline':False]
['text':' member->obj should refer to the deleted document.','line_number':330,'multiline':False]
['text':' Keep this member around so that we can return it on the next work() call.','line_number':334,'multiline':False]
['text':' If this stage is already exhausted it won't use its children stages anymore and','line_number':343,'multiline':False]
['text':' therefore it's okay if we failed to restore them. Avoid requesting a yield to the','line_number':344,'multiline':False]
['text':' plan executor. Restoring from yield could fail due to a sharding placement change.','line_number':345,'multiline':False]
['text':' Throwing a StaleConfig error is undesirable after an "delete one" operation has','line_number':346,'multiline':False]
['text':' already performed a write because the router would retry. Unset _idReturning as we'll','line_number':347,'multiline':False]
['text':' return the document in this stage iteration.','line_number':348,'multiline':False]
['text':'','line_number':349,'multiline':False]
['text':' If this plan is part of a larger encompassing WUOW it would be illegal to skip','line_number':350,'multiline':False]
['text':' returning NEED_YIELD, so we don't skip it. In this case, such as multi-doc','line_number':351,'multiline':False]
['text':' transactions, this is okay as the PlanExecutor is not allowed to auto-yield.','line_number':352,'multiline':False]
['text':' member->obj should refer to the deleted document.','line_number':360,'multiline':False]
['text':' Keep this member around so we can return it.','line_number':363,'multiline':False]
['text':' Single deletes never yield after having already deleted one document. Otherwise restore could','line_number':379,'multiline':False]
['text':' fail (e.g. due to a sharding placement change) and we'd fail to report in the response the','line_number':380,'multiline':False]
['text':' already deleted documents.','line_number':381,'multiline':False]
['text':' namespace mongo','line_number':407,'multiline':False]
