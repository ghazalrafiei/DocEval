['text':'*
 *    Copyright (C) 2020-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':' An identifier for the node, or zero if the idenfier was not provided. Useful for displaying','line_number':60,'multiline':False]
['text':' debug output such as explain.','line_number':61,'multiline':False]
['text':'','line_number':62,'multiline':False]
['text':' These identifiers are not necessarily unique. For example, they can be used by code','line_number':63,'multiline':False]
['text':' constructing the SBE plan to construct groups of nodes with the same id, e.g. if a group of','line_number':64,'multiline':False]
['text':' PlanStages corresponds to an MQL operation specified by the user.','line_number':65,'multiline':False]
['text':' Time elapsed while working inside this stage.','line_number':68,'multiline':False]
['text':'','line_number':69,'multiline':False]
['text':' The field must be populated when running explain or when running with the profiler on. It','line_number':70,'multiline':False]
['text':' must also be populated when multi planning, in order to gather stats stored in the plan','line_number':71,'multiline':False]
['text':' cache.  This struct includes the execution time and its precision/unit.','line_number':72,'multiline':False]
['text':' Struct to hold relevant stats for ColumnCursor and ParentPathCursor','line_number':106,'multiline':False]
['text':' Note: `includeInOutput` field is only relevant for ColumnCursor','line_number':107,'multiline':False]
['text':' Occasionally column scan might need to read records from the corresponding row store. It','line_number':134,'multiline':False]
['text':' might either fetch a record by its id, or scan a few consecutive records from the current','line_number':135,'multiline':False]
['text':' cursor's position ('numRowStoreScans' counts the total number of scanned records).','line_number':136,'multiline':False]
['text':' Lists holding all of the stats of current struct's cursors. These stats objects are owned','line_number':140,'multiline':False]
['text':' here, and referred to by the cursor execution objects.','line_number':141,'multiline':False]
['text':' The number of times that the entire hash table was spilled.','line_number':334,'multiline':False]
['text':' The number of individual records spilled to disk.','line_number':336,'multiline':False]
['text':' An estimate, in bytes, of the size of the final spill table after all spill events have taken','line_number':338,'multiline':False]
['text':' place.','line_number':339,'multiline':False]
['text':' Whether the window buffer was spilled.','line_number':392,'multiline':False]
['text':' The number of times that the entire window buffer was spilled.','line_number':394,'multiline':False]
['text':' The number of individual records spilled to disk.','line_number':396,'multiline':False]
['text':' An estimate, in bytes, of the size of the final spill table after all spill events have taken','line_number':398,'multiline':False]
['text':' place.','line_number':399,'multiline':False]
['text':'*
 * Visitor for calculating the number of storage reads during plan execution.
 ','line_number':403,'multiline':True]
['text':' To avoid overloaded-virtual warnings.','line_number':407,'multiline':False]
['text':'*
 * Calculates the total number of physical reads in the given plan stats tree. If a stage can do
 * a physical read (e.g. COLLSCAN or IXSCAN), then its 'numReads' stats is added to the total.
 ','line_number':441,'multiline':True]
['text':'*
 * Accumulates the summary of all execution statistics by walking over the specific-stats of stages.
 ','line_number':447,'multiline':True]
['text':' namespace mongo::sbe','line_number':451,'multiline':False]
