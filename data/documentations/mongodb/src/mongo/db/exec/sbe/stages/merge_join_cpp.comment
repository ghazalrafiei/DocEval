['text':'*
 *    Copyright (C) 2021-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':'*
 * Returns a materialized row with values owned by the caller.
 ','line_number':48,'multiline':True]
['text':'*
 * Returns a materialized row shallow non-owning view. The materialized row values are valid only
 * until the contents of the slots change (usually as a result of calling getNext()).
 ','line_number':63,'multiline':True]
['text':' namespace','line_number':77,'multiline':False]
['text':' Keys from the outer side should point to the keys in the current '_bufferKey' row, since','line_number':131,'multiline':False]
['text':' that is the where we point whichever key that we are using to attempt the join and we','line_number':132,'multiline':False]
['text':' want to make those outer keys accessible to the stage above.','line_number':133,'multiline':False]
['text':' Keys from the inner side should point to the same accessors as for the outer side keys','line_number':146,'multiline':False]
['text':' for same reason as the outer keys, since we attempt to join on whatever the '_bufferKey'','line_number':147,'multiline':False]
['text':' is and make inner keys also accessible to the stage above.','line_number':148,'multiline':False]
['text':' Start with an initially empty buffer.','line_number':192,'multiline':False]
['text':' First append rows from the outer side into the buffer such that can join them with the inner','line_number':205,'multiline':False]
['text':' later, but only if have a valid row read from outer, i.e. this is not true during the first','line_number':206,'multiline':False]
['text':' time getNext() is called on the stage.','line_number':207,'multiline':False]
['text':' Get the next row, which may or may not have the same key as the one currently','line_number':210,'multiline':False]
['text':' buffering for.','line_number':211,'multiline':False]
['text':' At this point have run out of rows from the outer, but may still need to go','line_number':214,'multiline':False]
['text':' through the inner and yield some rows in case the keys match, so do not return','line_number':215,'multiline':False]
['text':' EOF but mark outer as done and fallthrough to try joining with inner.','line_number':216,'multiline':False]
['text':' Advance to the next row in the buffer of outer projects, since we must have already','line_number':228,'multiline':False]
['text':' produced a row earlier with whichever project in the current position of the iterator.','line_number':229,'multiline':False]
['text':' At this point have populated the buffer with some rows that have the same key, and','line_number':233,'multiline':False]
['text':' '_currentOuterKey' is advanced one row further to the row on outer with a different key or','line_number':234,'multiline':False]
['text':' this is the first time getNext() has been called so in that case skip over to the part where','line_number':235,'multiline':False]
['text':' looking for equal outer and inner rows.','line_number':236,'multiline':False]
['text':' Go through the inner side, and for each row where the key is equal to the buffer key,','line_number':238,'multiline':False]
['text':' iterate all rows in the buffer and yield rows. The requirement is to stop when the row','line_number':239,'multiline':False]
['text':' coming from the inner has a different key then the buffer key, i.e. then the situation is','line_number':240,'multiline':False]
['text':' that both outer and inner have advanced to new rows that may or may not be equal, so then','line_number':241,'multiline':False]
['text':' proceed to look for an equal outer and inner row.','line_number':242,'multiline':False]
['text':' If the iterator is not at the end of the buffer, that means we have advanced the','line_number':247,'multiline':False]
['text':' iterator to a new row in the buffer from outer that is still a valid row.','line_number':248,'multiline':False]
['text':' Fix the inner side row (key and project) by making a deep copy.','line_number':250,'multiline':False]
['text':' Since iterated over all of the elements in the buffer and are currently','line_number':256,'multiline':False]
['text':' pointing to the end of the buffer, need to reset the buffer to the beginning','line_number':257,'multiline':False]
['text':' and call getNext() on the inner child in order to get the next row from the','line_number':258,'multiline':False]
['text':' inner, which may or may not have the same key as the key for the outer rows','line_number':259,'multiline':False]
['text':' that are being joined currently.','line_number':260,'multiline':False]
['text':' Having called getNext() on the inner enough times such that the row coming from','line_number':269,'multiline':False]
['text':' the inner now has a different key then the one being joined with in the buffer,','line_number':270,'multiline':False]
['text':' now done doing the joins and can clear the buffer, reset the iterator and since','line_number':271,'multiline':False]
['text':' '_currentInnerKey' has already been updated to the new inner key, break out of','line_number':272,'multiline':False]
['text':' the loop.','line_number':273,'multiline':False]
['text':' It is possible that all rows from outer were exhausted earlier and may have been joined with','line_number':282,'multiline':False]
['text':' some from the inner while the keys matched, but now even though may have more on the inner','line_number':283,'multiline':False]
['text':' with different keys, need to return EOF.','line_number':284,'multiline':False]
['text':' At this point outer and inner keys are not equal or getNext() has not been called on either','line_number':288,'multiline':False]
['text':' outer or inner, so loop and get rows from both outer and inner until get an equal pair.','line_number':289,'multiline':False]
['text':' Now that outer is equal to inner, before advancing need to make sure to populate the buffer','line_number':309,'multiline':False]
['text':' with the row from the outer.','line_number':310,'multiline':False]
['text':' Now also need to fix the single row from inner.','line_number':313,'multiline':False]
['text':' Set the key for the buffer here since whatever further rows will be appended to buffer from','line_number':317,'multiline':False]
['text':' outer (if any) will have the same key. Currently '_outerKeyAccessors' is a view-only shallow','line_number':318,'multiline':False]
['text':' copy, so we need to materialize the row this time getting a deep copy.','line_number':319,'multiline':False]
['text':' We only have to save shallow non-owning materialized rows.','line_number':339,'multiline':False]
['text':' namespace sbe','line_number':447,'multiline':False]
['text':' namespace mongo','line_number':448,'multiline':False]
