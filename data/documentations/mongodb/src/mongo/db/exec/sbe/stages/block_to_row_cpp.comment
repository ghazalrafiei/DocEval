['text':'*
 *    Copyright (C) 2023-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':' The underlying buffer for blocks has been updated after getNext() on the child, so we need to','line_number':127,'multiline':False]
['text':' prepare deblocking the new blocks.','line_number':128,'multiline':False]
['text':' Extract the value in the bitmap slot into a selectivity vector, to determine which indexes','line_number':132,'multiline':False]
['text':' should get passed along and which should be filtered out.','line_number':133,'multiline':False]
['text':' Apply the selectivity vector here, only taking the values which are included.','line_number':166,'multiline':False]
['text':' We may produce multiple (potentially x1000) results for a block, so we need to check for','line_number':196,'multiline':False]
['text':' interrupts so that we don't hold the lock on the underlying collection for too long.','line_number':197,'multiline':False]
['text':' Returns once we find a non empty block with a value to return. Otherwise we need to get new','line_number':204,'multiline':False]
['text':' blocks from our child.','line_number':205,'multiline':False]
['text':' We're about to call getNext() on our child and replace any state we hold in','line_number':207,'multiline':False]
['text':' _deblockedValueRuns. If we happen to yield during this call, don't bother copying our','line_number':208,'multiline':False]
['text':' current state since we're going to replace it in prepareDeblock() anyway.','line_number':209,'multiline':False]
['text':' Got new blocks from our child, so we need to start from the beginning of the blocks.','line_number':216,'multiline':False]
['text':' Current set of blocks have no results that we're interested in, move on to the next set','line_number':225,'multiline':False]
['text':' of blocks.','line_number':226,'multiline':False]
['text':' Copy the values which have not yet been returned, starting at _curIdx.','line_number':240,'multiline':False]
['text':' namespace mongo::sbe','line_number':298,'multiline':False]
