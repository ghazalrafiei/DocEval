['text':'*
 *    Copyright (C) 2023-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':' If the ColumnOp function is monotonic and the block is dense, we can try to map the whole','line_number':82,'multiline':False]
['text':' bucket to a MonoBlock instead of mapping each value iteratively.','line_number':83,'multiline':False]
['text':' The min and max didn't exist or didn't map to the same value so we need to process the whole','line_number':98,'multiline':False]
['text':' block.','line_number':99,'multiline':False]
['text':'*
 * Defines equivalence of two Value's. Should only be used for NumberInt32, NumberInt64, and Date.
 ','line_number':154,'multiline':True]
['text':' flat_hash_map does not use three way comparsion, so this equality comparison is','line_number':165,'multiline':False]
['text':' sufficient.','line_number':166,'multiline':False]
['text':' Should not be used for DoubleBlocks since hashValue has special handling of NaN's that differs','line_number':171,'multiline':False]
['text':' from naively using absl::Hash<double>.','line_number':172,'multiline':False]
['text':' We make Nothing the first token and initialize 'idxs' to all zeroes. This means that Nothing','line_number':187,'multiline':False]
['text':' is our "default" value, and we only have to set values in idxes for non-Nothings.','line_number':188,'multiline':False]
['text':' First token is always Nothing for non-dense blocks.','line_number':202,'multiline':False]
['text':' namespace mongo::sbe::value','line_number':263,'multiline':False]
