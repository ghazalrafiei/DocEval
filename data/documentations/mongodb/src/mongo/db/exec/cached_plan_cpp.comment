['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':' static','line_number':71,'multiline':False]
['text':' Adds the amount of time taken by pickBestPlan() to executionTime. There's lots of execution','line_number':90,'multiline':False]
['text':' work that happens here, so this is needed for the time accounting to make sense.','line_number':91,'multiline':False]
['text':' During plan selection, the list of indices we are using to plan must remain stable, so the','line_number':94,'multiline':False]
['text':' query will die during yield recovery if any index has been dropped. However, once plan','line_number':95,'multiline':False]
['text':' selection completes successfully, we no longer need all indices to stick around. The selected','line_number':96,'multiline':False]
['text':' plan should safely die on yield recovery if it is using the dropped index.','line_number':97,'multiline':False]
['text':'','line_number':98,'multiline':False]
['text':' Dismiss the requirement that no indices can be dropped when this method returns.','line_number':99,'multiline':False]
['text':' If we work this many times during the trial period, then we will replan the','line_number':102,'multiline':False]
['text':' query from scratch.','line_number':103,'multiline':False]
['text':' The trial period ends without replanning if the cached plan produces this many results.','line_number':107,'multiline':False]
['text':' Might need to yield between calls to work due to the timer elapsing.','line_number':111,'multiline':False]
['text':' The plan failed by hitting the limit we impose on memory consumption. It's possible','line_number':122,'multiline':False]
['text':' that a different plan is less resource-intensive, so we fall back to replanning the','line_number':123,'multiline':False]
['text':' whole query. We neither evict the existing cache entry nor cache the result of','line_number':124,'multiline':False]
['text':' replanning.','line_number':125,'multiline':False]
['text':' Save result for later.','line_number':141,'multiline':False]
['text':' Ensure that the BSONObj underlying the WorkingSetMember is owned in case we yield.','line_number':143,'multiline':False]
['text':' Once a plan returns enough results, stop working. There is no need to replan.','line_number':148,'multiline':False]
['text':' Cached plan hit EOF quickly enough. No need to replan.','line_number':153,'multiline':False]
['text':' Run-time plan selection occurs before a WriteUnitOfWork is opened and it's not','line_number':158,'multiline':False]
['text':' subject to TemporarilyUnavailableException's.','line_number':159,'multiline':False]
['text':' If we're here, the trial period took more than 'maxWorksBeforeReplan' work cycles. This','line_number':178,'multiline':False]
['text':' plan is taking too long, so we replan from scratch.','line_number':179,'multiline':False]
['text':' These are the conditions which can cause us to yield:','line_number':200,'multiline':False]
['text':'   1) The yield policy's timer elapsed, or','line_number':201,'multiline':False]
['text':'   2) some stage requested a yield, or','line_number':202,'multiline':False]
['text':'   3) we need to yield and retry due to a WriteConflictException.','line_number':203,'multiline':False]
['text':' In all cases, the actual yielding happens here.','line_number':204,'multiline':False]
['text':' Here's where we yield.','line_number':206,'multiline':False]
['text':' We're going to start over with a new plan. Clear out info from our old plan.','line_number':214,'multiline':False]
['text':' Deactivate the current cache entry.','line_number':225,'multiline':False]
['text':' Use the query planning module to plan the whole query.','line_number':231,'multiline':False]
['text':' Only one possible plan. Build the stages from the solution.','line_number':241,'multiline':False]
['text':' Many solutions. Create a MultiPlanStage to pick the best, update the cache,','line_number':260,'multiline':False]
['text':' and so on. The working set will be shared by all candidate plans.','line_number':261,'multiline':False]
['text':' Delegate to the MultiPlanStage's plan selection facility.','line_number':276,'multiline':False]
['text':' First exhaust any results buffered during the trial period.','line_number':302,'multiline':False]
['text':' Nothing left in trial period buffer.','line_number':309,'multiline':False]
['text':' namespace mongo','line_number':327,'multiline':False]
