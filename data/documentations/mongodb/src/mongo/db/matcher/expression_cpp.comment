['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':'*
 * Enabling the disableMatchExpressionOptimization fail point will stop match expressions from
 * being optimized.
 ','line_number':48,'multiline':True]
['text':'*
 * Comparator for MatchExpression nodes.  Returns an integer less than, equal to, or greater
 * than zero if 'lhs' is less than, equal to, or greater than 'rhs', respectively.
 *
 * Sorts by:
 * 1) operator type (MatchExpression::MatchType)
 * 2) path name (MatchExpression::path())
 * 3) sort order of children
 * 4) number of children (MatchExpression::numChildren())
 *
 * The third item is needed to ensure that match expression trees which should have the same
 * cache key always sort the same way. If you're wondering when the tuple (operator type, path
 * name) could ever be equal, consider this query:
 *
 * {$and:[{$or:[{a:1},{a:2}]},{$or:[{a:1},{b:2}]}]}
 *
 * The two OR nodes would compare as equal in this case were it not for tuple item #3 (sort
 * order of children).
 ','line_number':55,'multiline':True]
['text':' They're equal!','line_number':101,'multiline':False]
['text':'*
 * Return true if the expression is trivially simple:
 * - has no children
 * - has one child without children
 * - rewritten simple $expr: contains one $expr and one simple simple expression without children.
 ','line_number':109,'multiline':True]
['text':' In the case of the rewritten simple $expr of the two nodes will be Internal','line_number':122,'multiline':False]
['text':' Expression Comparison node.','line_number':123,'multiline':False]
['text':' namespace','line_number':133,'multiline':False]
['text':' static','line_number':138,'multiline':False]
['text':' If the disableMatchExpressionOptimization failpoint is enabled, optimizations are skipped','line_number':141,'multiline':False]
['text':' and the expression is left unmodified.','line_number':142,'multiline':False]
['text':'applyQuineMcCluskey','line_number':158,'multiline':True]
['text':' static','line_number':171,'multiline':False]
['text':' static','line_number':183,'multiline':False]
['text':' static','line_number':191,'multiline':False]
['text':' If the caller provided a non-null 'parameterized' argument, set this output.','line_number':202,'multiline':False]
['text':' static','line_number':210,'multiline':False]
['text':' namespace mongo','line_number':271,'multiline':False]
