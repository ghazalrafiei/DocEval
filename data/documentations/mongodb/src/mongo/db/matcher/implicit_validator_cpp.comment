['text':'*
 *    Copyright (C) 2022-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':'
 * Converts the list of encrypted field paths into a tree where each node
 * (except the root) represents a field path component. Each leaf node
 * contains the expected BSON type of the field value before encryption.
 *
 * ex. [{"a.b.c", "string"}, {"a.x.y", "int"}] =>
 *  {a: {b: {c: {bsonType: 2 }}, x: {y: {bsonType: 16}}}}
 ','line_number':68,'multiline':True]
['text':' the rest of the path forms a new branch; append nodes until the last part','line_number':91,'multiline':False]
['text':' another field with the same prefix already exists in the tree.','line_number':101,'multiline':False]
['text':' make sure that the nodes in common are not leaves','line_number':102,'multiline':False]
['text':' leaf node expression:','line_number':156,'multiline':False]
['text':' { $and : [','line_number':157,'multiline':False]
['text':'     { <node.name> : { $_internalSchemaBinDataFLE2EncryptedType : <node.type> } },','line_number':158,'multiline':False]
['text':' ]}','line_number':159,'multiline':False]
['text':' { $and : [','line_number':171,'multiline':False]
['text':'     { $or : [','line_number':172,'multiline':False]
['text':'         { <subnode.name> : { $not : { $exists: true } } },','line_number':173,'multiline':False]
['text':'         <recursion_result(subnode)>,','line_number':174,'multiline':False]
['text':'     ]},','line_number':175,'multiline':False]
['text':'     ... /* for each subnode */','line_number':176,'multiline':False]
['text':' ]}','line_number':177,'multiline':False]
['text':' if top-level, wrap the "and" expression with an outer "and" annotated with $and.','line_number':195,'multiline':False]
['text':' otherwise, create the following and expression:','line_number':203,'multiline':False]
['text':' { $and : [','line_number':204,'multiline':False]
['text':'     { $or : [','line_number':205,'multiline':False]
['text':'         { <node.name> : { $not : { $_internalSchemaType: "object" } } },','line_number':206,'multiline':False]
['text':'         { <node.name> : { $_internalSchemaObjectMatch : <subschema> } },','line_number':207,'multiline':False]
['text':'     ]},','line_number':208,'multiline':False]
['text':'     { <node.name> : { $not : { $_internalSchemaType: "array" } } },','line_number':209,'multiline':False]
['text':' ]}','line_number':210,'multiline':False]
['text':' where <subschema> = $and from above loop','line_number':211,'multiline':False]
['text':' The first clause fails to match if the node is an object that does not satisfy the','line_number':212,'multiline':False]
['text':' subschema. The second disallows arrays along the encrypted field path.','line_number':213,'multiline':False]
['text':' ignoreError ','line_number':218,'multiline':True]
['text':' namespace','line_number':222,'multiline':False]
['text':' toplevel ','line_number':234,'multiline':True]
['text':' namespace mongo','line_number':239,'multiline':False]
