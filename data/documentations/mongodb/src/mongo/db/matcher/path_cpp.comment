['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':' -----','line_number':42,'multiline':False]
['text':' ------','line_number':55,'multiline':False]
['text':' ------','line_number':78,'multiline':False]
['text':' Reset optional, keep memory around in case we need to instantiate a subIterator again.','line_number':108,'multiline':False]
['text':' Reset optional, keep memory around in case we need to instantiate a subIterator again.','line_number':122,'multiline':False]
['text':' While we still are still finding arrays along the path, keep traversing deeper.','line_number':177,'multiline':False]
['text':' Reset optional, keep memory around in case we need to instantiate a subIterator again.','line_number':182,'multiline':False]
['text':' If the subcursor doesn't have more, see if the current element is an array offset','line_number':185,'multiline':False]
['text':' match (see comment in BSONElementIterator::more() for an example).  If it is indeed','line_number':186,'multiline':False]
['text':' an array offset match, create a new subcursor and examine it.','line_number':187,'multiline':False]
['text':' Our path terminates at the array offset.  _next should point at the current','line_number':190,'multiline':False]
['text':' array element. _next._arrayOffset should be EOO, since this is not an implicit','line_number':191,'multiline':False]
['text':' array traversal.','line_number':192,'multiline':False]
['text':' If we're here, we must be able to traverse nonleaf arrays.','line_number':203,'multiline':False]
['text':' Set _arrayIterationState._current to EOO. This is not an implicit array traversal, so','line_number':208,'multiline':False]
['text':' we should not override the array offset of the subcursor with the current array','line_number':209,'multiline':False]
['text':' offset.','line_number':210,'multiline':False]
['text':' It's an array.','line_number':238,'multiline':False]
['text':' Don't allow traversing the array.','line_number':244,'multiline':False]
['text':' Return the leaf array.','line_number':255,'multiline':False]
['text':' We're traversing an array.  Look at each array element.','line_number':268,'multiline':False]
['text':' Our path terminates at this array.  _next should point at the current array','line_number':273,'multiline':False]
['text':' element.','line_number':274,'multiline':False]
['text':' Our path does not terminate at this array; there's a subpath left over.  Inspect','line_number':279,'multiline':False]
['text':' the current array element to see if it could match the subpath.','line_number':280,'multiline':False]
['text':' The current array element is a subdocument.  See if the subdocument generates','line_number':283,'multiline':False]
['text':' any elements matching the remaining subpath.','line_number':284,'multiline':False]
['text':' The path we're traversing has an array offset component, and the current','line_number':295,'multiline':False]
['text':' array element corresponds to the offset we're looking for (for example: our','line_number':296,'multiline':False]
['text':' path has a ".0" component, and we're looking at the first element of the','line_number':297,'multiline':False]
['text':' array, so we should look inside this element).','line_number':298,'multiline':False]
['text':' Our path terminates at the array offset.  _next should point at the','line_number':301,'multiline':False]
['text':' current array element. _next._arrayOffset should be EOO, since this is not an','line_number':302,'multiline':False]
['text':' implicit array traversal.','line_number':303,'multiline':False]
['text':' Handled above.','line_number':308,'multiline':False]
['text':' The current array element is itself an array.  See if the nested array','line_number':310,'multiline':False]
['text':' has any elements matching the remaining.','line_number':311,'multiline':False]
['text':' Set _arrayIterationState._current to EOO. This is not an implicit array','line_number':325,'multiline':False]
['text':' traversal, so we should not override the array offset of the subcursor with','line_number':326,'multiline':False]
['text':' the current array offset.','line_number':327,'multiline':False]
['text':' All array elements have been iterated over. If the leaf array behavior is to omit the','line_number':341,'multiline':False]
['text':' array from the results, then we indicate that there are no more items.','line_number':342,'multiline':False]
['text':' Leaf array behavior is kTraverse, therefore return the array we iterated over as the last','line_number':347,'multiline':False]
['text':' item.','line_number':348,'multiline':False]
['text':' Use our array offset if we have one, otherwise copy our subcursor's.  This has the','line_number':360,'multiline':False]
['text':' effect of preferring the outermost array offset, in the case where we are implicitly','line_number':361,'multiline':False]
['text':' traversing nested arrays and have multiple candidate array offsets.  For example,','line_number':362,'multiline':False]
['text':' when we use the path "a.b" to generate elements from the document {a: [{b: [1, 2]}]},','line_number':363,'multiline':False]
['text':' the element with a value of 2 should be returned with an array offset of 0.','line_number':364,'multiline':False]
['text':' namespace mongo','line_number':382,'multiline':False]
