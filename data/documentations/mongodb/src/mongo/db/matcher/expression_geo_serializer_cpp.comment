['text':'*
 *    Copyright (C) 2023-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':' Legacy $geoNear, $nearSphere, and $near require at minimum 2 coordinates to be','line_number':57,'multiline':False]
['text':' re-parseable, so the representative value is [1, 1].','line_number':58,'multiline':False]
['text':' $center and $centerSphere requires a pair of coordinates and a radius to be','line_number':61,'multiline':False]
['text':' re-parseable, so the representative value is [[1, 1],1].','line_number':62,'multiline':False]
['text':' $box requires two pairs of coordinates to be re-parseable, so the','line_number':65,'multiline':False]
['text':' representative value is [[1, 1],[1,1]].','line_number':66,'multiline':False]
['text':' $polygon requires three pairs of coordinates to be re-parseable, so the representative','line_number':69,'multiline':False]
['text':' value is [[0,0],[0,1],[1,1]].','line_number':70,'multiline':False]
['text':' Polygon requires four pairs of coordinates in a closed loop wrapped in an array to be','line_number':89,'multiline':False]
['text':' re-parseable, so the representative value is [[[0,0],[0,1],[1,1],[0,0]]].','line_number':90,'multiline':False]
['text':' MultiPolygon requires four pairs of coordinates in a closed loop wrapped in 2 arrays to','line_number':96,'multiline':False]
['text':' be re-parseable, so the representative value is [[[[0,0],[0,1],[1,1],[0,0]]]].','line_number':97,'multiline':False]
['text':' Point requires a pair of coordinates to be re-parseable, so the representative','line_number':103,'multiline':False]
['text':' value is [1,1].','line_number':104,'multiline':False]
['text':' MultiPoint requires a pair of coordinates wrapped in an array to be re-parseable, so the','line_number':107,'multiline':False]
['text':' representative value is [[1,1]].','line_number':108,'multiline':False]
['text':' LineString requires two pairs of coordinates to be re-parseable, so the representative','line_number':111,'multiline':False]
['text':' value is [[0,0],[1,1]].','line_number':112,'multiline':False]
['text':' 'crs' is always an object.','line_number':122,'multiline':False]
['text':' 'crs' is required to have a 'type' field with the value 'name'.','line_number':124,'multiline':False]
['text':' Additionally, it is required to have an object properties field','line_number':125,'multiline':False]
['text':' with a single 'name' field.','line_number':126,'multiline':False]
['text':' The CRS "type" and "properties.name" fields must be preserved for','line_number':140,'multiline':False]
['text':' kToRepresentativeParseableValue serialization policy so the query','line_number':141,'multiline':False]
['text':' shape can be re-parsed (and will be preserved for kUnchanged policy','line_number':142,'multiline':False]
['text':' as well).','line_number':143,'multiline':False]
['text':' 'crs' can be present if users want to use STRICT_SPHERE coordinate','line_number':171,'multiline':False]
['text':' system.','line_number':172,'multiline':False]
['text':' namespace','line_number':177,'multiline':False]
['text':' Legacy GeoNear query.','line_number':185,'multiline':False]
['text':' In a legacy GeoNear query, the value associated with the first field ($near or','line_number':189,'multiline':False]
['text':' $geoNear) is an array where the first two array elements represent the x and y','line_number':190,'multiline':False]
['text':' coordinates respectively. An optional third array element denotes the $maxDistance.','line_number':191,'multiline':False]
['text':' Alternatively, a legacy query can have a $maxDistance suboperator to make it more','line_number':192,'multiline':False]
['text':' explicit. None of these values are enums so it is fine to treat them as literals','line_number':193,'multiline':False]
['text':' during redaction.','line_number':194,'multiline':False]
['text':' Non-legacy geo expressions have embedded objects that have to be traversed.','line_number':200,'multiline':False]
['text':' Typically, geo expressions have a single embedded object under the top-level geo','line_number':206,'multiline':False]
['text':' operator, but there is an exception for syntax that allows geoJSON coordinates','line_number':207,'multiline':False]
['text':' without specifying $geometry (e.g., {$nearSphere: {type: 'Point', coordinates:','line_number':208,'multiline':False]
['text':' [1,2]}}). We're iterating outer_it and appending extra literals to handle','line_number':209,'multiline':False]
['text':' $minDistance and $maxDistance fields that could be included outside the primary geo','line_number':210,'multiline':False]
['text':' object in those edge cases (e.g., {$nearSphere: {type: 'Point', coordinates: [1,2]},','line_number':211,'multiline':False]
['text':' $minDistance: 10}).','line_number':212,'multiline':False]
['text':' This would be like {$geometry: [0, 0]} which must be a point.','line_number':224,'multiline':False]
['text':' This handles an edge-case where syntax allows geoJSON coordinates without','line_number':238,'multiline':False]
['text':' specifying $geometry; e.g., {$nearSphere: {type: 'Point', coordinates:','line_number':239,'multiline':False]
['text':' [1,2]}}.','line_number':240,'multiline':False]
['text':' appendGeometrySubObj handles all fields in this subObj, so we break out of','line_number':243,'multiline':False]
['text':' the inner loop to avoid duplicating fields.','line_number':244,'multiline':False]
['text':' namespace mongo','line_number':254,'multiline':False]
