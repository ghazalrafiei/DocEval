['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':' IWYU pragma: keep','line_number':39,'multiline':False]
['text':' IWYU pragma: keep','line_number':55,'multiline':False]
['text':' IWYU pragma: keep','line_number':67,'multiline':False]
['text':' IWYU pragma: keep','line_number':295,'multiline':False]
['text':' TODO SERVER-78730: add support for load-balanced connections.','line_number':332,'multiline':False]
['text':' OpDebug ','line_number':379,'multiline':True]
['text':' Important:','line_number':485,'multiline':False]
['text':' _initAndListen among its other tasks initializes the storage subsystem.','line_number':486,'multiline':False]
['text':' File Copy Based Initial Sync will restart the storage subsystem and may need to repeat some','line_number':487,'multiline':False]
['text':' of the initialization steps within.  If you add or change any of these steps, make sure','line_number':488,'multiline':False]
['text':' any necessary changes are also made to File Copy Based Initial Sync.','line_number':489,'multiline':False]
['text':' TODO(SERVER-74659): Please revisit if this thread could be made killable.','line_number':493,'multiline':False]
['text':' Set up the periodic runner for background job execution. This is required to be running','line_number':540,'multiline':False]
['text':' before both the storage engine or the transport layer are initialized.','line_number':541,'multiline':False]
['text':' When starting the server with --queryableBackupMode or --recoverFromOplogAsStandalone, we are','line_number':549,'multiline':False]
['text':' in read-only mode and don't allow user-originating operations to perform writes','line_number':550,'multiline':False]
['text':' If a crash occurred during file-copy based initial sync, we may need to finish or clean up.','line_number':583,'multiline':False]
['text':' Creating the operation context before initializing the storage engine allows the storage','line_number':591,'multiline':False]
['text':' engine initialization to make use of the lock manager. As the storage engine is not yet','line_number':592,'multiline':False]
['text':' initialized, a noop recovery unit is used until the initialization is complete.','line_number':593,'multiline':False]
['text':' Warn if we detect configurations for multiple registered storage engines in the same','line_number':618,'multiline':False]
['text':' configuration file/environment.','line_number':619,'multiline':False]
['text':' Ignore if field name under "storage" matches current storage engine.','line_number':624,'multiline':False]
['text':' Warn if field name matches non-active registered storage engine.','line_number':629,'multiline':False]
['text':' Disallow running a storage engine that doesn't support capped collections with --profile','line_number':639,'multiline':False]
['text':' If we are on standalone, load cluster parameters from disk. If we are replicated, this is not','line_number':682,'multiline':False]
['text':' a concern as the cluster parameter initializer runs automatically.','line_number':683,'multiline':False]
['text':' Ensure FCV document exists and is initialized in-memory. Fatally asserts if there is an','line_number':694,'multiline':False]
['text':' error.','line_number':695,'multiline':False]
['text':' TODO (SERVER-74847): Remove this function call once we remove testing around downgrading from','line_number':698,'multiline':False]
['text':' latest to last continuous.','line_number':699,'multiline':False]
['text':' Notify the storage engine that startup is completed before repair exits below, as repair sets','line_number':713,'multiline':False]
['text':' the upgrade flag to true.','line_number':714,'multiline':False]
['text':' Change stream collections can exist, even on a standalone, provided the standalone used','line_number':731,'multiline':False]
['text':' to be part of a replica set. Ensure the change stream collections on startup contain','line_number':732,'multiline':False]
['text':' consistent data.','line_number':733,'multiline':False]
['text':'','line_number':734,'multiline':False]
['text':' This is here because repair will shutdown the node as it implies --upgrade as well. The','line_number':735,'multiline':False]
['text':' branch below will exit the server.','line_number':736,'multiline':False]
['text':' Start up health log writer thread.','line_number':746,'multiline':False]
['text':' This is for security on certain platforms (nonce generation)','line_number':762,'multiline':False]
['text':' NOLINT','line_number':763,'multiline':False]
['text':' Try creating the indexes if we become primary.  If we do not become primary,','line_number':772,'multiline':False]
['text':' the master will create the indexes and we will replicate them.','line_number':773,'multiline':False]
['text':' SERVER-14090: Verify that auth schema version is schemaVersion26Final.','line_number':779,'multiline':False]
['text':' If authSchemaValidation is disabled and server is running without auth,','line_number':808,'multiline':False]
['text':' warn the user and continue startup without authSchema metadata checks.','line_number':809,'multiline':False]
['text':' A config shard initializes sharding awareness after setting up its config server','line_number':832,'multiline':False]
['text':' state.','line_number':833,'multiline':False]
['text':' This function will take the global lock.','line_number':835,'multiline':False]
['text':' Perform replication recovery for queryable backup mode if needed.','line_number':855,'multiline':False]
['text':' TODO: SERVER-82965 We shouldn't need to read the doc multiple times once we are','line_number':894,'multiline':False]
['text':' in sharding only development since config servers can always create it themselves.','line_number':895,'multiline':False]
['text':' This function will take the global lock.','line_number':898,'multiline':False]
['text':' Sharding is always ready when there is at least one shard at startup (either the','line_number':902,'multiline':False]
['text':' config shard or a dedicated shard server).','line_number':903,'multiline':False]
['text':' TODO SERVER-83135: Replace this 'else if' with an 'if' once we support','line_number':907,'multiline':False]
['text':' config shard + embedded router.','line_number':908,'multiline':False]
['text':' Router role should use SEPMongos','line_number':911,'multiline':False]
['text':' TODO: SERVER-82965 We shouldn't need to read the doc multiple times','line_number':915,'multiline':False]
['text':' This function will take the global lock.','line_number':918,'multiline':False]
['text':' On a dedicated shard server, ShardingReady is always set because there is guaranteed','line_number':923,'multiline':False]
['text':' to be at least one shard in the sharded cluster (either the config shard or a','line_number':924,'multiline':False]
['text':' dedicated shard server).','line_number':925,'multiline':False]
['text':' If this is a mongod in a standalone replica set or a shardsvr replica set that has','line_number':932,'multiline':False]
['text':' not initialized its sharding identity, start up the cluster time keys manager with a','line_number':933,'multiline':False]
['text':' local/direct keys client. The keys client must use local read concern if the storage','line_number':934,'multiline':False]
['text':' engine can't support majority read concern. If this is a mongod in a configsvr or','line_number':935,'multiline':False]
['text':' shardsvr replica set that has initialized its sharding identity, the keys manager is','line_number':936,'multiline':False]
['text':' by design initialized separately with a sharded keys client when the sharding state','line_number':937,'multiline':False]
['text':' is initialized.','line_number':938,'multiline':False]
['text':' 'getOldestActiveTimestamp', which is called in the background by the checkpoint thread,','line_number':968,'multiline':False]
['text':' requires a read on 'config.transactions' at the stableTimestamp. If this read occurs','line_number':969,'multiline':False]
['text':' while applying prepared transactions at the end of replication recovery, it's possible to','line_number':970,'multiline':False]
['text':' prepare a transaction at timestamp earlier than the stableTimestamp. This will result in','line_number':971,'multiline':False]
['text':' a WiredTiger invariant. Register the callback after the call to 'startup' to ensure we've','line_number':972,'multiline':False]
['text':' finished applying prepared transactions.','line_number':973,'multiline':False]
['text':' Start up a background task to periodically check for and kill expired transactions; and a','line_number':1034,'multiline':False]
['text':' background task to periodically check for and decrease cache pressure by decreasing the','line_number':1035,'multiline':False]
['text':' target size setting for the storage engine's window of available snapshots.','line_number':1036,'multiline':False]
['text':'','line_number':1037,'multiline':False]
['text':' Only do this on storage engines supporting snapshot reads, which hold resources we wish to','line_number':1038,'multiline':False]
['text':' release periodically in order to avoid storage cache pressure build up.','line_number':1039,'multiline':False]
['text':' Shutdown has already started before initialization is complete. Wait for the','line_number':1045,'multiline':False]
['text':' shutdown task to complete and return.','line_number':1046,'multiline':False]
['text':' Change stream collections can exist, even on a standalone, provided the standalone used to be','line_number':1060,'multiline':False]
['text':' part of a replica set. Ensure the change stream collections on startup contain consistent','line_number':1061,'multiline':False]
['text':' data.','line_number':1062,'multiline':False]
['text':' If not in standalone mode, start background tasks to:','line_number':1072,'multiline':False]
['text':'  * Periodically remove expired pre-images from the 'system.preimages'','line_number':1073,'multiline':False]
['text':'  * Periodically remove expired documents from change collections','line_number':1074,'multiline':False]
['text':' Set up the logical session cache','line_number':1109,'multiline':False]
['text':' Startup options are written to the audit log at the end of startup so that cluster server','line_number':1132,'multiline':False]
['text':' parameters are guaranteed to have been initialized from disk at this point.','line_number':1133,'multiline':False]
['text':' MessageServer::run will return when exit code closes its socket and we don't need the','line_number':1141,'multiline':False]
['text':' operation context anymore','line_number':1142,'multiline':False]
['text':'*
 * Read the pid file from the dbpath for the process ID used by this instance of the server.
 * Use that process number to kill the running server.
 *
 * Equivalent to: `kill -SIGTERM $(cat $DBPATH/mongod.lock)`
 *
 * Performs additional checks to make sure the PID as read is reasonable (>= 1)
 * and can be found in the /proc filesystem.
 ','line_number':1228,'multiline':True]
['text':' Wait for process to terminate.','line_number':1276,'multiline':False]
['text':' File empty.','line_number':1280,'multiline':False]
['text':' File does not exist.','line_number':1284,'multiline':False]
['text':' __linux__','line_number':1292,'multiline':False]
['text':'
 * This function should contain the startup "actions" that we take based on the startup config.
 * It is intended to separate the actions from "storage" and "validation" of our startup
 * configuration.
 ','line_number':1294,'multiline':True]
['text':' The "command" option is deprecated.  For backward compatibility, still support the "run"','line_number':1300,'multiline':False]
['text':' and "dbppath" command.  The "run" command is the same as just running mongod, so just','line_number':1301,'multiline':False]
['text':' falls through.','line_number':1302,'multiline':False]
['text':' _WIN32','line_number':1330,'multiline':False]
['text':' Only create a ReplicaSetNodeExecutor if sharding is disabled and replication is enabled.','line_number':1431,'multiline':False]
['text':' Note that sharding sets up its own executors for scheduling work to remote nodes.','line_number':1432,'multiline':False]
['text':' Register primary-only services here so that the services are started up when the replication','line_number':1453,'multiline':False]
['text':' coordinator starts up.','line_number':1454,'multiline':False]
['text':' The featureCompatibilityVersion behavior defaults to the downgrade behavior while the','line_number':1537,'multiline':False]
['text':' in-memory version is unset.','line_number':1538,'multiline':False]
['text':' Stash the ShutdownContext as a ServiceContext decoration. The main purpose of this is to keep the','line_number':1562,'multiline':False]
['text':' OperationContext alive until the process calls exit, to avoid releasing the global lock.','line_number':1563,'multiline':False]
['text':' NOTE: This function may be called at any time after registerShutdownTask is called below. It','line_number':1581,'multiline':False]
['text':' must not depend on the prior execution of mongo initializers or the existence of threads.','line_number':1582,'multiline':False]
['text':' Before doing anything else, ensure fsync is inactive or make it release its GlobalRead lock.','line_number':1600,'multiline':False]
['text':' If we don't have shutdownArgs, we're shutting down from a signal, or other clean shutdown','line_number':1619,'multiline':False]
['text':' path.','line_number':1620,'multiline':False]
['text':'','line_number':1621,'multiline':False]
['text':' In that case, do a default step down, still shutting down if stepDown fails.','line_number':1622,'multiline':False]
['text':' The operation context used for shutdown must be created after starting terminal shutdown on','line_number':1626,'multiline':False]
['text':' the replication coordinator. This is because terminal shutdown might involve waiting for all','line_number':1627,'multiline':False]
['text':' opCtx's to be destroyed if FCBIS is swapping the storage engine.','line_number':1628,'multiline':False]
['text':' Store previous client, to be restored when function scope ends.','line_number':1636,'multiline':False]
['text':' The new client and opCtx are stashed in the ServiceContext, will survive past this','line_number':1648,'multiline':False]
['text':' function and are never destructed. This is required to avoid releasing the global lock until','line_number':1649,'multiline':False]
['text':' the process calls exit().','line_number':1650,'multiline':False]
['text':' stepDown should never return an error during force shutdown.','line_number':1674,'multiline':False]
['text':' Join the logical session cache before the transport layer.','line_number':1736,'multiline':False]
['text':' Inform the TransportLayers to stop accepting new connections.','line_number':1753,'multiline':False]
['text':' Shut down the global dbclient pool so callers stop waiting for connections.','line_number':1759,'multiline':False]
['text':' Inform Flow Control to stop gating writes on ticket admission. This must be done before the','line_number':1769,'multiline':False]
['text':' Periodic Runner is shut down (see SERVER-41751).','line_number':1770,'multiline':False]
['text':' This can wait a long time while we drain the secondary's apply queue, especially if','line_number':1804,'multiline':False]
['text':' it is building an index.','line_number':1805,'multiline':False]
['text':' Terminate the index consistency check.','line_number':1811,'multiline':False]
['text':' Acquire the RSTL in mode X. First we enqueue the lock request, then kill all operations,','line_number':1826,'multiline':False]
['text':' destroy all stashed transaction resources in order to release locks, and finally wait','line_number':1827,'multiline':False]
['text':' until the lock request is granted.','line_number':1828,'multiline':False]
['text':' Kill all operations except FTDC to continue gathering metrics. This makes all newly','line_number':1835,'multiline':False]
['text':' created opCtx to be immediately interrupted. After this point, the opCtx will have been','line_number':1836,'multiline':False]
['text':' marked as killed and will not be usable other than to kill all transactions directly','line_number':1837,'multiline':False]
['text':' below.','line_number':1838,'multiline':False]
['text':' Clear tenant migration access blockers after killing all operation contexts to ensure','line_number':1856,'multiline':False]
['text':' that no operation context cancellation token continuation holds the last reference to','line_number':1857,'multiline':False]
['text':' the TenantMigrationAccessBlockerExecutor.','line_number':1858,'multiline':False]
['text':' Destroy all stashed transaction resources, in order to release locks.','line_number':1869,'multiline':False]
['text':' Release the rstl before waiting for the index build threads to join as index build','line_number':1888,'multiline':False]
['text':' reacquires rstl in uninterruptible lock guard to finish their cleanup process.','line_number':1889,'multiline':False]
['text':' Shuts down the thread pool and waits for index builds to finish.','line_number':1892,'multiline':False]
['text':' Depends on setKillAllOperations() above to interrupt the index build operations.','line_number':1893,'multiline':False]
['text':' Validator shutdown must be called after setKillAllOperations is called. Otherwise, this can','line_number':1931,'multiline':False]
['text':' deadlock.','line_number':1932,'multiline':False]
['text':' The migrationutil executor must be shut down before shutting down the CatalogCacheLoader and','line_number':1942,'multiline':False]
['text':' the ExecutorPool. Otherwise, it may try to schedule work on those components and fail.','line_number':1943,'multiline':False]
['text':' The CatalogCache must be shuted down before shutting down the CatalogCacheLoader as the','line_number':1968,'multiline':False]
['text':' CatalogCache may try to schedule work on CatalogCacheLoader and fail.','line_number':1969,'multiline':False]
['text':' Finish shutting down the TransportLayers','line_number':1981,'multiline':False]
['text':' We should always be able to acquire the global lock at shutdown.','line_number':2017,'multiline':False]
['text':'','line_number':2018,'multiline':False]
['text':' For a Windows service, dbexit does not call exit(), so we must leak the lock outside','line_number':2019,'multiline':False]
['text':' of this function to prevent any operations from running that need a lock.','line_number':2020,'multiline':False]
['text':'','line_number':2021,'multiline':False]
['text':' Global storage engine may not be started in all cases before we exit','line_number':2025,'multiline':False]
['text':' We wait for the oplog cap maintainer thread to stop. This has to be done after the engine','line_number':2035,'multiline':False]
['text':' has been closed since the thread will only die once all references to the oplog have been','line_number':2036,'multiline':False]
['text':' deleted and we're performing a shutdown.','line_number':2037,'multiline':False]
['text':' We drop the scope cache because leak sanitizer can't see across the','line_number':2045,'multiline':False]
['text':' thread we use for proxying MozJS requests. Dropping the cache cleans up','line_number':2046,'multiline':False]
['text':' the memory and makes leak sanitizer happy.','line_number':2047,'multiline':False]
['text':' Shutdown Full-Time Data Capture','line_number':2051,'multiline':False]
['text':' SessionKiller relies on the network stack being cleanly shutdown which only occurs under','line_number':2068,'multiline':False]
['text':' sanitizers','line_number':2069,'multiline':False]
['text':' namespace','line_number':2085,'multiline':False]
['text':' NOLINT','line_number':2096,'multiline':False]
['text':' Create the durable history registry prior to calling the `setUp*` methods. They may','line_number':2131,'multiline':False]
['text':' depend on it existing at this point.','line_number':2132,'multiline':False]
['text':' Attempt to rotate the audit log pre-emptively on startup to avoid any potential conflicts','line_number':2140,'multiline':False]
['text':' with existing log state. If this rotation fails, then exit nicely with failure','line_number':2141,'multiline':False]
['text':' There is no single-threaded guarantee beyond this point.','line_number':2168,'multiline':False]
['text':' Per SERVER-7434, startSignalProcessingThread must run after any forks (i.e.','line_number':2172,'multiline':False]
['text':' initialize_server_global_state::forkServerOrDie) and before the creation of any other threads','line_number':2173,'multiline':False]
['text':' exits directly and so never reaches here either.','line_number':2188,'multiline':False]
['text':' namespace mongo','line_number':2201,'multiline':False]
