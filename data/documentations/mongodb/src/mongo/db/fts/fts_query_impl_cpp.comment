['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':' Build a space delimited list of words to have the FtsTokenizer tokenize','line_number':59,'multiline':False]
['text':' don't add term','line_number':76,'multiline':False]
['text':' A negation should only continue until the next whitespace character. For example,','line_number':78,'multiline':False]
['text':' "-foo" should negate "foo", "- foo" should not negate "foo", and "-foo-bar"','line_number':79,'multiline':False]
['text':' should negate both "foo" and "bar".','line_number':80,'multiline':False]
['text':' phrases can be negated, and terms not in phrases can be negated.','line_number':97,'multiline':False]
['text':' terms in phrases can not be negated.','line_number':98,'multiline':False]
['text':' end of a phrase','line_number':103,'multiline':False]
['text':' Do not reset 'inNegation' here, since a negation should continue until the','line_number':113,'multiline':False]
['text':' next whitespace character. For example, '-"foo bar"-"baz quux"' should negate','line_number':114,'multiline':False]
['text':' both the phrase "foo bar" and the phrase "baz quux".','line_number':115,'multiline':False]
['text':' start of a phrase','line_number':119,'multiline':False]
['text':' A "-" should only be treated as a negation if there is no whitespace between','line_number':121,'multiline':False]
['text':' the "-" and the start of the phrase.','line_number':122,'multiline':False]
['text':' First, get all the terms for indexing, ie, lower cased words','line_number':161,'multiline':False]
['text':' If we are case-insensitive, we can also used this for positive, and negative terms','line_number':162,'multiline':False]
['text':' Some terms may be expanded into multiple words in some non-English languages','line_number':163,'multiline':False]
['text':' Compute the string corresponding to 'token' that will be used for the matcher.','line_number':171,'multiline':False]
['text':' For case and diacritic insensitive queries, this is the same string as 'boundsTerm'','line_number':172,'multiline':False]
['text':' computed above.','line_number':173,'multiline':False]
['text':' If we want case-sensitivity or diacritic sensitivity, get the correct token.','line_number':194,'multiline':False]
['text':' namespace fts','line_number':237,'multiline':False]
['text':' namespace mongo','line_number':238,'multiline':False]
