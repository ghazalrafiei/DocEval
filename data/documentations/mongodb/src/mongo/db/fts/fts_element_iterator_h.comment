['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':'*
 *  Encapsulates data fields returned by FTSElementIterator
 ','line_number':45,'multiline':True]
['text':'*
 *  Iterator pattern for walking through text-indexed fields of a
 *  BSON document.
 *
 *  Example usage:
 *      FTSSpec spec( FTSSpec::fixSpec( indexSpec ) );
 *      FTSElementIterator it( spec, obj );
 *      while ( it.more() ) {
 *          FTSIteratorValue val = it.next();
 *          std::cout << val._text << '[' << val._language.str()
 *                                 << ',' << val._weight << ']' << std::endl;
 *      }
 *
 ','line_number':64,'multiline':True]
['text':'*
     *  Iterator constructor
     *
     *  Note: Caller must ensure that the constructed FTSElementIterator
     *          does >not< outlive either spec or obj.
     *
     *  @arg spec  text index specifier
     *  @arg obj   document that the iterator will traverse
     ','line_number':80,'multiline':True]
['text':'*
     *  Iterator interface: returns false iff there are no further text-indexable fields.
     ','line_number':91,'multiline':True]
['text':'*
     *  Iterator interface: advances to the next text-indexable field.
     ','line_number':96,'multiline':True]
['text':'*
     *  Iterator frame needed for iterative implementation of
     *  recursive sub-documents.
     ','line_number':101,'multiline':True]
['text':'*
     *  Helper method:
     *      returns false iff all FTSIteratorFrames on _frameStack are exhausted.
     ','line_number':125,'multiline':True]
['text':'*
     *  Helper method:
     *      advances to the next text-indexable field, possibly pushing frames as
     *      needed for recursive sub-documents.
     ','line_number':131,'multiline':True]
['text':'*
     *  Stack used by iterative implementation of recursive sub-document traversal.
     ','line_number':138,'multiline':True]
['text':'*
     *  Current frame, not yet pushed to stack.
     ','line_number':143,'multiline':True]
['text':'*
     *  Constructor input parameter: text index specification.
     ','line_number':148,'multiline':True]
['text':'*
     *  Current iterator return value, computed by 'more()', returned by 'next()'.
     ','line_number':153,'multiline':True]
['text':' namespace fts','line_number':159,'multiline':False]
['text':' namespace mongo','line_number':160,'multiline':False]
