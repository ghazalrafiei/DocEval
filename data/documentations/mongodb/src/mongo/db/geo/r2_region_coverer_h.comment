['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':' By default, the covering uses at most 8 cells at any level.','line_number':50,'multiline':False]
['text':' = 8;','line_number':51,'multiline':False]
['text':' Set the minimum and maximum cell level to be used.  The default is to use','line_number':57,'multiline':False]
['text':' all cell levels.  Requires: max_level() >= min_level().','line_number':58,'multiline':False]
['text':' Sets the maximum desired number of cells in the approximation (defaults','line_number':68,'multiline':False]
['text':' to kDefaultMaxCells).','line_number':69,'multiline':False]
['text':'','line_number':70,'multiline':False]
['text':' For any setting of max_cells(), an arbitrary number of cells may be','line_number':71,'multiline':False]
['text':' returned if min_level() is too high for the region being approximated.','line_number':72,'multiline':False]
['text':'','line_number':73,'multiline':False]
['text':' TODO(sz): accuracy experiments similar to S2RegionCoverer.','line_number':74,'multiline':False]
['text':' Cell should not be expanded further.','line_number':87,'multiline':False]
['text':' Number of children that intersect the region.','line_number':88,'multiline':False]
['text':' If the cell intersects the given region, return a new candidate with no','line_number':92,'multiline':False]
['text':' children, otherwise return NULL.  Also marks the candidate as "terminal"','line_number':93,'multiline':False]
['text':' if it should not be expanded further.','line_number':94,'multiline':False]
['text':' Process a candidate by either adding it to the result_ vector or','line_number':97,'multiline':False]
['text':' expanding its children and inserting it into the priority queue.','line_number':98,'multiline':False]
['text':' Passing an argument of NULL does nothing.','line_number':99,'multiline':False]
['text':' Free the memory associated with a candidate.','line_number':102,'multiline':False]
['text':' Populate the children of "candidate" by expanding from the given cell.','line_number':105,'multiline':False]
['text':' Returns the number of children that were marked "terminal".','line_number':106,'multiline':False]
['text':' Computes a set of initial candidates that cover the given region.','line_number':109,'multiline':False]
['text':' min / max level as unsigned so as to be consistent with GeoHash','line_number':113,'multiline':False]
['text':' Save the copy of pointer temporarily to avoid passing this parameter internally.','line_number':118,'multiline':False]
['text':' Only valid for the duration of a single getCovering() call.','line_number':119,'multiline':False]
['text':' We keep the candidates that may intersect with this region in a priority queue.','line_number':122,'multiline':False]
['text':' Priority queue owns candidate pointers.','line_number':127,'multiline':False]
['text':' An R2CellUnion is a region consisting of cells of various sizes.','line_number':132,'multiline':False]
['text':' Returns true if the cell union contains the given cell id.','line_number':136,'multiline':False]
['text':' Return true if the cell union intersects the given cell id.','line_number':138,'multiline':False]
['text':' Direct access to the underlying vector.','line_number':142,'multiline':False]
['text':' Swaps _cellIds with the given vector of cellIds.','line_number':147,'multiline':False]
['text':' Adds the cells to _cellIds and calls normalize().','line_number':150,'multiline':False]
['text':' Subtracts cellUnion from *this','line_number':153,'multiline':False]
['text':' Normalizes the cell union by discarding cells that are contained by other','line_number':157,'multiline':False]
['text':' cells, replacing groups of 4 child cells by their parent cell whenever','line_number':158,'multiline':False]
['text':' possible, and sorting all the cell ids in increasing order.  Returns true','line_number':159,'multiline':False]
['text':' if the number of cells was reduced.','line_number':160,'multiline':False]
['text':' namespace mongo ','line_number':165,'multiline':True]
