['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':' Helper to build a vector of S2Point','line_number':55,'multiline':False]
['text':' Syntax sugar for PointBuilder, which can be used to construct','line_number':85,'multiline':False]
['text':' - vector<S2Point> pointVec()','line_number':86,'multiline':False]
['text':' - S2Loop* loop()','line_number':87,'multiline':False]
['text':' - vector<S2Loop*>* loopVec()','line_number':88,'multiline':False]
['text':'','line_number':89,'multiline':False]
['text':' e.g. points() << LatLng(10.0, 10.0) << LatLng(10.0, -10.0) << LatLng(0.0, 0.0))','line_number':90,'multiline':False]
['text':' A 20x20 square centered at [0,0]','line_number':94,'multiline':False]
['text':' A 10x10 square centered at [0,0]','line_number':98,'multiline':False]
['text':' A 20x20 square centered at [0,20]','line_number':107,'multiline':False]
['text':' A 30x30 square centered at [0,0] with a 20X20 hole','line_number':118,'multiline':False]
['text':' A 16X16 square centered at [0,0]','line_number':127,'multiline':False]
['text':' A big polygon bigger than the hole.','line_number':135,'multiline':False]
['text':' A 30x30 square centered at [0,0] with a 20X20 hole and 10X10 shell','line_number':144,'multiline':False]
['text':' Border','line_number':146,'multiline':False]
['text':' Hole','line_number':149,'multiline':False]
['text':' Shell','line_number':152,'multiline':False]
['text':' A 16X16 square centered at [0,0] containing the shell','line_number':157,'multiline':False]
['text':' Try a big polygon bigger than the hole.','line_number':164,'multiline':False]
['text':' Try a big polygon smaller than the shell.','line_number':171,'multiline':False]
['text':' Everything *not* in a 20x20 square centered at [0,0]','line_number':180,'multiline':False]
['text':' A 10x10 square centered at [0,0]','line_number':185,'multiline':False]
['text':' A 10x10 square centered at [0,20], contained by bigPoly20Comp','line_number':193,'multiline':False]
['text':' A 30x30 square centered at [0,0], so that bigPoly20Comp contains its complement entirely,','line_number':201,'multiline':False]
['text':' which is not allowed by S2.','line_number':202,'multiline':False]
['text':' Everything *not* in a 20x20 square centered at [0,0]','line_number':211,'multiline':False]
['text':' A 10x10 square centered at [10,10] (partial overlap)','line_number':216,'multiline':False]
['text':' A 30x30 square centered at [0,0] with a 20X20 hole','line_number':225,'multiline':False]
['text':' 1. BigPolygon doesn't touch holePoly','line_number':234,'multiline':False]
['text':' Everything *not* in a 40x40 square centered at [0,0]','line_number':235,'multiline':False]
['text':' 2. BigPolygon intersects holePoly','line_number':243,'multiline':False]
['text':' Everything *not* in a 24X24 square centered at [0,0]','line_number':244,'multiline':False]
['text':' 3. BigPolygon contains holePoly','line_number':252,'multiline':False]
['text':' Everything *not* in a 16X16 square centered at [0,0]','line_number':253,'multiline':False]
['text':' 4. BigPolygon contains the right half of holePoly','line_number':261,'multiline':False]
['text':' Everything *not* in a 40x40 square centered at [0,20]','line_number':262,'multiline':False]
['text':' A 30x30 square centered at [0,0] with a 20X20 hole and 10X10 shell','line_number':273,'multiline':False]
['text':' Border','line_number':275,'multiline':False]
['text':' Hole','line_number':278,'multiline':False]
['text':' Shell','line_number':281,'multiline':False]
['text':' 1. BigPolygon doesn't touch shellPoly','line_number':286,'multiline':False]
['text':' Everything *not* in a 40x40 square centered at [0,0]','line_number':287,'multiline':False]
['text':' 2. BigPolygon intersects shellPoly','line_number':295,'multiline':False]
['text':' Everything *not* in a 24X24 square centered at [0,0]','line_number':296,'multiline':False]
['text':' 3. BigPolygon contains shellPoly's outer ring','line_number':304,'multiline':False]
['text':' Everything *not* in a 16X16 square centered at [0,0]','line_number':305,'multiline':False]
['text':' 4. BigPolygon contains the right half of shellPoly','line_number':313,'multiline':False]
['text':' Everything *not* in a 40x40 square centered at [0,20]','line_number':314,'multiline':False]
['text':' 5. BigPolygon contain shellPoly (CW)','line_number':323,'multiline':False]
['text':' A 20x20 square centered at [0,0] (CCW)','line_number':332,'multiline':False]
['text':' Everything *not* in a 20x20 square centered at [0,0] (CW)','line_number':336,'multiline':False]
['text':' A 20x20 square centered at [0,0]','line_number':345,'multiline':False]
['text':' A 10x10 line circling [0,0]','line_number':349,'multiline':False]
['text':' Line segment disjoint from big polygon','line_number':357,'multiline':False]
['text':' Line segment intersects big polygon','line_number':362,'multiline':False]
['text':' A 20x20 square centered at [0,0]','line_number':369,'multiline':False]
['text':' A 10x10 line circling [0,0]','line_number':374,'multiline':False]
['text':' Line segment (0, 0) -> (0, 15)','line_number':382,'multiline':False]
['text':' A 10x10 line circling [0,0]','line_number':387,'multiline':False]
['text':' Everything *not* in a 20x20 square centered at [0,0] (CW winding)','line_number':395,'multiline':False]
['text':' A 10x10 line circling [0,0]','line_number':399,'multiline':False]
['text':' Square 10 degrees from the north pole [90,0]','line_number':409,'multiline':False]
['text':' Square 5 degrees from the north pole [90, 0]','line_number':413,'multiline':False]
['text':' Square 10 degrees from the north pole [90,0]','line_number':424,'multiline':False]
['text':' Square 5 degrees from the north pole [90, 0] with a concentric hole 1 degree from the','line_number':428,'multiline':False]
['text':' north pole','line_number':429,'multiline':False]
['text':' Square 10 degrees from the north pole [90,0]','line_number':443,'multiline':False]
['text':' 5-degree square with 1-degree-wide concentric hole, centered on [80.0, 0.0]','line_number':447,'multiline':False]
['text':' Edge cases','line_number':460,'multiline':False]
['text':'','line_number':461,'multiline':False]
['text':' No promise in terms of points on border - they may be inside or outside the big polygon.','line_number':462,'multiline':False]
['text':' But we need to ensure the result is consistent:','line_number':463,'multiline':False]
['text':' 1. If a polygon/line is contained by a big polygon, they must intersect with each other.','line_number':464,'multiline':False]
['text':' 2. Relation doesn't change as long as the touch point doesn't change, no matter the big','line_number':465,'multiline':False]
['text':'    polygon is larger or less then a hemisphere.','line_number':466,'multiline':False]
['text':' 3. Relations for big polygons less than a hemisphere are consistent with ordinary (simple)','line_number':467,'multiline':False]
['text':'    polygon results.','line_number':468,'multiline':False]
['text':' Contain() => Intersects()','line_number':474,'multiline':False]
['text':' Relation doesn't change','line_number':481,'multiline':False]
['text':' Polygon shares big polygon's edge (disjoint)','line_number':486,'multiline':False]
['text':' Big polygon smaller than a hemisphere.','line_number':488,'multiline':False]
['text':' Vertex point and collinear point','line_number':493,'multiline':False]
['text':' Polygon shares one edge','line_number':497,'multiline':False]
['text':' Polygon shares a segment of one edge','line_number':500,'multiline':False]
['text':' Line','line_number':504,'multiline':False]
['text':' Line share a segment of one edge','line_number':507,'multiline':False]
['text':' Big polygon larger than a hemisphere.','line_number':511,'multiline':False]
['text':' Check the complement of big polygon','line_number':525,'multiline':False]
['text':' Polygon/line shares big polygon's edge (contained by big polygon)','line_number':539,'multiline':False]
['text':' Big polygon smaller than a hemisphere.','line_number':541,'multiline':False]
['text':' Polygon','line_number':546,'multiline':False]
['text':' Polygon shares a segment of one edge','line_number':549,'multiline':False]
['text':' Line','line_number':552,'multiline':False]
['text':' Line shares a segment of one edge','line_number':555,'multiline':False]
['text':' Big polygon larger than a hemisphere.','line_number':559,'multiline':False]
['text':' Check the complement of big polygon','line_number':571,'multiline':False]
['text':' namespace','line_number':582,'multiline':False]
