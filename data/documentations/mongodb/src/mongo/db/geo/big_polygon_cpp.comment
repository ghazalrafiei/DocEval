['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':' Caller should ensure loop is valid.','line_number':56,'multiline':False]
['text':' Polygon border is the same as the loop','line_number':77,'multiline':False]
['text':' Polygon border is the complement of the loop','line_number':81,'multiline':False]
['text':'','line_number':82,'multiline':False]
['text':' Return true iff big polygon's complement (polyBorder) doesn't intersect with polygon.','line_number':83,'multiline':False]
['text':' We don't guarantee whether the points on border are contained or not.','line_number':84,'multiline':False]
['text':'','line_number':89,'multiline':False]
['text':' A line is contained within a loop if the result of subtracting the loop from the line is','line_number':90,'multiline':False]
['text':' nothing.','line_number':91,'multiline':False]
['text':'','line_number':92,'multiline':False]
['text':' Also, a line is contained within a loop if the result of clipping the line to the','line_number':93,'multiline':False]
['text':' complement of the loop is nothing.','line_number':94,'multiline':False]
['text':'','line_number':95,'multiline':False]
['text':' If we can't subtract the loop itself using S2, we clip (intersect) to the inverse.  Every','line_number':96,'multiline':False]
['text':' point in S2 is contained in exactly one of these loops.','line_number':97,'multiline':False]
['text':'','line_number':98,'multiline':False]
['text':' TODO: Polygon borders are actually kind of weird, and this is somewhat inconsistent with','line_number':99,'multiline':False]
['text':' Intersects().  A point might Intersect() a boundary exactly, but not be Contain()ed','line_number':100,'multiline':False]
['text':' within the Polygon.  Think the right thing to do here is custom intersection functions.','line_number':101,'multiline':False]
['text':'','line_number':102,'multiline':False]
['text':' Polygon border is the same as the loop','line_number':108,'multiline':False]
['text':' Polygon border is the complement of the loop','line_number':114,'multiline':False]
['text':' If the loop area is at most 2*Pi, treat it as a simple Polygon.','line_number':127,'multiline':False]
['text':' The loop area is greater than 2*Pi, so it intersects a polygon (even with holes) if it','line_number':133,'multiline':False]
['text':' intersects any of the top-level polygon loops, since any valid polygon is less than','line_number':134,'multiline':False]
['text':' a hemisphere.','line_number':135,'multiline':False]
['text':'','line_number':136,'multiline':False]
['text':' Intersecting a polygon hole requires that the loop must have intersected the containing','line_number':137,'multiline':False]
['text':' loop - topology ftw.','line_number':138,'multiline':False]
['text':'','line_number':139,'multiline':False]
['text':' Another approach is to check polyBorder doesn't contain polygon, but the following','line_number':140,'multiline':False]
['text':' approach is cheaper.','line_number':141,'multiline':False]
['text':' Iterate over all the top-level polygon loops','line_number':143,'multiline':False]
['text':'','line_number':154,'multiline':False]
['text':' A loop intersects a line if line intersects the loop border or, if it doesn't, either','line_number':155,'multiline':False]
['text':' line is contained in the loop, or line is disjoint with the loop. So checking any','line_number':156,'multiline':False]
['text':' vertex of the line is sufficient.','line_number':157,'multiline':False]
['text':'','line_number':158,'multiline':False]
['text':' TODO: Make a general Polygon/Line relation tester which uses S2 primitives','line_number':159,'multiline':False]
['text':'','line_number':160,'multiline':False]
['text':' Any loop in polygon should be than a hemisphere (2*Pi).','line_number':179,'multiline':False]
['text':' vertex() maps "numVertices" to 0 internally, so we don't have to deal with','line_number':195,'multiline':False]
['text':' the index out of range.','line_number':196,'multiline':False]
['text':' namespace mongo','line_number':240,'multiline':False]
