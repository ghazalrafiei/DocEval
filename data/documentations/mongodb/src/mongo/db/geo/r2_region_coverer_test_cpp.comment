['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':' IWYU pragma: no_include "ext/alloc_traits.h"','line_number':33,'multiline':False]
['text':' IWYU pragma: keep','line_number':42,'multiline':False]
['text':' "windows.h" has another Polygon for Windows GDI.','line_number':67,'multiline':False]
['text':' Returns an integral number in [lower, upper]','line_number':83,'multiline':False]
['text':'','line_number':90,'multiline':False]
['text':' GeoHash','line_number':91,'multiline':False]
['text':'','line_number':92,'multiline':False]
['text':' Full plane -> 4 quadrants','line_number':96,'multiline':False]
['text':' (x, y) : (0, 0)','line_number':99,'multiline':False]
['text':' (x, y) : (0, 1)','line_number':100,'multiline':False]
['text':' (x, y) : (1, 0)','line_number':101,'multiline':False]
['text':' (x, y) : (1, 1)','line_number':102,'multiline':False]
['text':' Small cell: 0...11XX -> 0...11[0-3]','line_number':104,'multiline':False]
['text':' (x, y) : (0, 0)','line_number':108,'multiline':False]
['text':' (x, y) : (0, 1)','line_number':109,'multiline':False]
['text':' (x, y) : (1, 0)','line_number':110,'multiline':False]
['text':' (x, y) : (1, 1)','line_number':111,'multiline':False]
['text':' Smallest cell at finest level cannot subdivide','line_number':113,'multiline':False]
['text':' An arbitrary random cell','line_number':126,'multiline':False]
['text':' GeoHash contains itself','line_number':127,'multiline':False]
['text':' Entire plane contains everything','line_number':130,'multiline':False]
['text':' Positive cases','line_number':134,'multiline':False]
['text':' Negative cases','line_number':141,'multiline':False]
['text':'','line_number':148,'multiline':False]
['text':' R2RegionCoverer','line_number':149,'multiline':False]
['text':'','line_number':150,'multiline':False]
['text':' Plane boundary, x: [0.0, 100.0], y: [0.0, 100.0]','line_number':152,'multiline':False]
['text':'*
 * Test region which mimics the region of a geohash cell.
 * NOTE: Technically this is not 100% correct, since geohash cells are inclusive on lower and
 * exclusive on upper edges.  For now, this region is just exclusive on all edges.
 * TODO: Create an explicit HashCell which correctly encapsulates this behavior, push to the
 * R2Region interface.
 ','line_number':165,'multiline':True]
['text':' Make outer edges exclusive','line_number':187,'multiline':False]
['text':' Test random cell ids at all levels.','line_number':205,'multiline':False]
['text':' Since the unhashed box is expanded by the error 8Mu, we need to shrink it.','line_number':212,'multiline':False]
['text':' Random double in [0, 1)','line_number':224,'multiline':False]
['text':' Check the given region is covered by the covering completely.','line_number':231,'multiline':False]
['text':' cellId is used internally.','line_number':232,'multiline':False]
['text':' The covering may or may not contain this disjoint cell, we don't care.','line_number':239,'multiline':False]
['text':' If the covering contains this id, that's fine.','line_number':243,'multiline':False]
['text':' The covering doesn't contain this cell, so the region shouldn't contain this cell.','line_number':247,'multiline':False]
['text':' The region intersects with this cell. So the covering should intersect with it too.','line_number':254,'multiline':False]
['text':' We need to go deeper until a leaf. When we reach a leaf, it must be caught above','line_number':255,'multiline':False]
['text':'   - disjoint with the region, we don't care.','line_number':256,'multiline':False]
['text':'   - intersected with the region, contained in the covering.','line_number':257,'multiline':False]
['text':' We can guarantee the disjoint/intersection test is exact, since it's a circle.','line_number':258,'multiline':False]
['text':' Not a leaf','line_number':260,'multiline':False]
['text':' Keep track of how many cells have the same coverer.minLevel() ancestor.','line_number':270,'multiline':False]
['text':' Check covering's minLevel and maxLevel.','line_number':272,'multiline':False]
['text':' If the covering has more than the requested number of cells, then check','line_number':280,'multiline':False]
['text':' that the cell count cannot be reduced by using the parent of some cell.','line_number':281,'multiline':False]
['text':' Generate a circle within [0, MAXBOUND]','line_number':293,'multiline':False]
['text':' Format: { $center : [ [-74, 40.74], 10 ] }','line_number':297,'multiline':False]
['text':' Test the covering for arbitrary random circle.','line_number':309,'multiline':False]
['text':' Using R2BoxRegion, the disjoint with circle gives poor results around the corner,','line_number':318,'multiline':False]
['text':' so many small cells are considered as intersected in the priority queue, which is','line_number':319,'multiline':False]
['text':' very slow for larger minLevel (smaller cell). So we limit minLevels in [0, 6].','line_number':320,'multiline':False]
['text':' Test the covering for very small circles, since the above test doesn't cover finest cells.','line_number':334,'multiline':False]
['text':' [1, 20]','line_number':340,'multiline':False]
['text':' 100 * 2 ^ -32 ~= 2.3E-8 (cell edge length)','line_number':348,'multiline':False]
['text':'','line_number':359,'multiline':False]
['text':' Shape Intersection','line_number':360,'multiline':False]
['text':'','line_number':361,'multiline':False]
['text':'
     *    E     |D
     *  A___B   |C   G
     *    F
     ','line_number':363,'multiline':True]
['text':'
     * Basic disjoint
     *   / |
     *  /  |
     ','line_number':371,'multiline':True]
['text':' commutative','line_number':377,'multiline':False]
['text':'
     * Basic disjoint (axis aligned)
     *     |
     * ___ |
     ','line_number':379,'multiline':True]
['text':' commutative','line_number':385,'multiline':False]
['text':'
     * Basic intersection
     * \/
     * /\
     ','line_number':387,'multiline':True]
['text':' commutative','line_number':393,'multiline':False]
['text':'
     * Basic intersection (axis aligned)
     *  _|_
     *   |
     ','line_number':395,'multiline':True]
['text':' commutative','line_number':401,'multiline':False]
['text':'
     * One vertex on the line
     *        \
     *  ____   \
     ','line_number':403,'multiline':True]
['text':' commutative','line_number':409,'multiline':False]
['text':'
     * One vertex on the segment
     *    \
     *  ___\___
     ','line_number':411,'multiline':True]
['text':' commutative','line_number':417,'multiline':False]
['text':'
     * Two segments share one vertex
     *    /
     *   /____
     ','line_number':419,'multiline':True]
['text':' commutative','line_number':425,'multiline':False]
['text':'
     * Intersected segments on the same line
     * A___B===C---G
     ','line_number':427,'multiline':True]
['text':' commutative','line_number':432,'multiline':False]
['text':'
     * Disjoint segments on the same line
     * A___B   C---G
     ','line_number':434,'multiline':True]
['text':' commutative','line_number':439,'multiline':False]
['text':'
     * Segments on the same line share one vertex.
     *        /D
     *       /B
     *     F/
     ','line_number':441,'multiline':True]
['text':' commutative','line_number':448,'multiline':False]
['text':' axis aligned','line_number':449,'multiline':False]
['text':' commutative','line_number':451,'multiline':False]
['text':' Convex polygon (triangle)','line_number':455,'multiline':False]
['text':'
     * Disjoint, bounds disjoint
     *        /|
     *       / |  []
     *      /__|
     ','line_number':457,'multiline':True]
['text':'
     * Disjoint, bounds intersect
     *     [] /|
     *       / |
     *      /__|
     ','line_number':475,'multiline':True]
['text':'
     * Intersect on one polygon vertex
     *      _____
     *     |     |
     *     |_ /|_|
     *       / |
     *      /__|
     ','line_number':486,'multiline':True]
['text':'
     * Box contains polygon
     *   __________
     *  |          |
     *  |     /|   |
     *  |    / |   |
     *  |   /__|   |
     *  |__________|
     ','line_number':499,'multiline':True]
['text':'
     * Polygon contains box
     *        /|
     *       / |
     *      /  |
     *     / []|
     *    /____|
     ','line_number':513,'multiline':True]
['text':'
     * Intersect, but no vertex is contained by the other shape.
     *    ___ /|_
     *   |   / | |
     *   |  /  | |
     *   |_/___|_|
     *    /____|
     ','line_number':526,'multiline':True]
['text':' Concave polygon','line_number':539,'multiline':False]
['text':'
     * (0,4)
     * |\
     * | \(1,1)
     * |  `.
     * |____`. (4,0)
     * (0,0)
     ','line_number':541,'multiline':True]
['text':'
     * Disjoint
     * |\
     * | \
     * |  `.
     * |____`.
     *   []
     ','line_number':556,'multiline':True]
['text':'
     * Disjoint, bounds intersect
     * |\
     * | \[]
     * |  `.
     * |____`.
     ','line_number':569,'multiline':True]
['text':'
     * Intersect, one box vertex is contained by the polygon.
     *  |\
     *  |+\+ (1.5, 1.5)
     *  |+-`.
     *  |____`.
     ','line_number':581,'multiline':True]
['text':'
     * Intersect, no vertex is contained by the other shape.
     *  |\
     * +| \--+
     * ||  `.|
     * ||____`.
     * +-----+
     ','line_number':593,'multiline':True]
['text':' Disjoint, out of outer circle','line_number':611,'multiline':False]
['text':' Box contains outer circle','line_number':616,'multiline':False]
['text':' Box intersects with the outer circle, but not the inner circle','line_number':621,'multiline':False]
['text':' Box is contained by the annulus','line_number':626,'multiline':False]
['text':' Box is contained by the outer circle and intersects with the inner circle','line_number':631,'multiline':False]
['text':' Box intersects with both outer and inner circle','line_number':636,'multiline':False]
['text':' Box is inside the inner circle','line_number':641,'multiline':False]
['text':' Box contains the inner circle, but intersects with the outer circle','line_number':646,'multiline':False]
['text':'','line_number':651,'multiline':False]
['text':' Annulus contains both inner and outer circles as boundaries.','line_number':652,'multiline':False]
['text':'','line_number':653,'multiline':False]
['text':' Box only touches the outer boundary','line_number':655,'multiline':False]
['text':' Lower left touches boundary','line_number':656,'multiline':False]
['text':' Upper right touches boundary','line_number':659,'multiline':False]
['text':' Box is contained by the annulus touching the outer boundary','line_number':663,'multiline':False]
['text':' Box is contained by the annulus touching the inner boundary','line_number':668,'multiline':False]
['text':' Box only touches the inner boundary at (-0.6, 0.8)','line_number':673,'multiline':False]
['text':' This function generates an unnormalized and a normalized GeoHash vector to create','line_number':688,'multiline':False]
['text':' a random R2CellUnion.','line_number':689,'multiline':False]
['text':' If selected is true, the region covered by GeoHash id will be covered by the cells','line_number':690,'multiline':False]
['text':' in unnormalized and normalized.','line_number':691,'multiline':False]
['text':' This is a leaf cell and cannot be subdivided further, so it must be added.','line_number':693,'multiline':False]
['text':' If the parent cell was not selected, this cell will be selected with a probability','line_number':699,'multiline':False]
['text':' proportional to its level, so smaller cells are more likely to be selected.','line_number':700,'multiline':False]
['text':' If this cell is selected, we can either add it or another set of cells that','line_number':706,'multiline':False]
['text':' cover the same region.','line_number':707,'multiline':False]
['text':' Add all the children of this cell if it was selected, but not added.','line_number':714,'multiline':False]
['text':' Randomly add other children cells.','line_number':715,'multiline':False]
['text':' Make sure not to include all 4 children if not selected to ensure that the','line_number':716,'multiline':False]
['text':' normalized union is correct.','line_number':717,'multiline':False]
['text':' If selected, recurse on 4/12 = 1/3 child to add overlapping cells to the','line_number':722,'multiline':False]
['text':' normalized vector.','line_number':723,'multiline':False]
['text':' If not selected, recurse on 4 * 2/7 = 8/7 child.','line_number':724,'multiline':False]
['text':' Initialize with unnormalized input','line_number':743,'multiline':False]
['text':' Check to make sure the cells in cellUnion equal the expected cells','line_number':747,'multiline':False]
['text':' Breadth first check of the child cells to make sure that each one is contained','line_number':762,'multiline':False]
['text':' in cellUnion','line_number':763,'multiline':False]
['text':' An R2CellUnion should contain all of its children.','line_number':784,'multiline':False]
['text':' An R2CellUnion should contain every cell that is contained by one of its member cells','line_number':800,'multiline':False]
['text':' Naive implementation of intersects to test correctness','line_number':812,'multiline':False]
['text':' Two cells will only intersect if one contains the other','line_number':815,'multiline':False]
['text':' An R2CellUnion should intersect with every cell it contains.','line_number':824,'multiline':False]
['text':' An R2CellUnion should intersect with every cell that contains a member of the union.','line_number':846,'multiline':False]
['text':' It should also intersect with cells it contains','line_number':847,'multiline':False]
['text':' Check that the output of intersects matches that of the naive implementation','line_number':854,'multiline':False]
['text':' Initialize the two cell unions','line_number':864,'multiline':False]
['text':' Compute the differences x - y and y - x','line_number':869,'multiline':False]
['text':' Check that x contains x - y and y contains y - x','line_number':876,'multiline':False]
['text':' Check that y doesn't intersect x - y and x doesn't intersect y - x','line_number':877,'multiline':False]
['text':' Check that y - x doesn't intersect with x - y','line_number':878,'multiline':False]
['text':' Check that x - y + y contains x U y and y - x + x contains x U y','line_number':898,'multiline':False]
['text':' Check that x U y contains both x - y + y and y - x + x','line_number':899,'multiline':False]
['text':' Test with two unions that contain each other','line_number':926,'multiline':False]
['text':' Test with random unions','line_number':928,'multiline':False]
['text':' normalize()','line_number':940,'multiline':False]
['text':' contains() and intersects()','line_number':944,'multiline':False]
['text':' getDifference()','line_number':950,'multiline':False]
['text':' namespace','line_number':977,'multiline':False]
