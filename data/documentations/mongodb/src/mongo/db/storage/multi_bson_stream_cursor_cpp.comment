['text':'*
 *    Copyright (C) 2022-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':'*
 * Expands '_buffer' by a multiple of two of its current size that is large enough to contain two
 * objects of size 'bsonSize'. Copies the contents of the old buffer to position 0 of the new buffer
 * and updates bookkeeping. This can never expand the buffer larger than (2 * BSONObjMaxUserSize).
 ','line_number':53,'multiline':True]
['text':'*
 * Returns the next record from the current stream or boost::none if exhausted or error.
 ','line_number':77,'multiline':True]
['text':' size of the next BSON object','line_number':81,'multiline':False]
['text':' number of bytes just read','line_number':82,'multiline':False]
['text':' number of remainder bytes to read for either size field or object body','line_number':83,'multiline':False]
['text':' number of unconsumed bytes in '_buffer'','line_number':84,'multiline':False]
['text':' The while loop enables dynamically expanding the buffer as needed. If the buffer ever reaches','line_number':86,'multiline':False]
['text':' (2 * BSONObjMaxUserSize) bytes it will not need to expand any more.','line_number':87,'multiline':False]
['text':' There are four cases, but for performance they are not fully independent in code:','line_number':89,'multiline':False]
['text':'   1. Next full object (size and data) is already in the buffer.','line_number':90,'multiline':False]
['text':'   2. Next size is in the buffer but not all of the next object.','line_number':91,'multiline':False]
['text':'   3. Next size is only partly present in the buffer.','line_number':92,'multiline':False]
['text':'   4. No part of the next object is in the buffer. Reset buffer and read a big block.','line_number':93,'multiline':False]
['text':' Cases 1-3','line_number':95,'multiline':False]
['text':' Cases 3: get the rest of size. This collapses case 3 into case 2.','line_number':96,'multiline':False]
['text':' Cases 2-3: get the rest of the object. This collapses cases 2-3 into case 1.','line_number':110,'multiline':False]
['text':' 'remBytes' will fit','line_number':113,'multiline':False]
['text':' Not used again: availBytes += readBytes;','line_number':121,'multiline':False]
['text':' Case 4: availBytes == 0; do a block read','line_number':127,'multiline':False]
['text':' EOF: okay here as the pipe ended at an object boundary','line_number':130,'multiline':False]
['text':' Not used again: availBytes += _bufEnd;','line_number':137,'multiline':False]
['text':' got all the bytes we requested','line_number':141,'multiline':False]
['text':' reaching here means we have the whole object in '_buffer' now','line_number':149,'multiline':False]
['text':' All cases are now collapsed to Case 1: the full object is in the buffer at '_bufBegin'.','line_number':152,'multiline':False]
['text':' 'recordData.data' includes the size in the first four bytes.','line_number':153,'multiline':False]
['text':'*
 * Returns an input stream for a named pipe mapped from 'url'.
 *
 * While creating an input stream, it strips off the file protocol part from the 'url'.
 ','line_number':162,'multiline':True]
['text':'*
 * Returns the next record from the vector of streams or boost::none if exhausted or error.
 * '_streamReader' is initialized to the first stream, if there is one, in the constructor.
 ','line_number':179,'multiline':True]
['text':' namespace mongo','line_number':196,'multiline':False]
