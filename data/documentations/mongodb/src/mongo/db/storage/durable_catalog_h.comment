['text':'*
 *    Copyright (C) 2019-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':'*
 * An interface to modify the on-disk catalog metadata.
 ','line_number':70,'multiline':True]
['text':'*
     * `Entry` ties together the common identifiers of a single `_mdb_catalog` document.
     ','line_number':82,'multiline':True]
['text':'*
     *  Allows featureDocuments to be checked with older versions.
     ','line_number':105,'multiline':True]
['text':' Indexes and collections are candidates for dropping when the storage engine's metadata','line_number':117,'multiline':False]
['text':' does not align with the catalog metadata.','line_number':118,'multiline':False]
['text':' Internal idents prefixed "internal-" should not be considered collections, because','line_number':133,'multiline':False]
['text':' they are not eligible for orphan recovery through repair.','line_number':134,'multiline':False]
['text':'*
     * Scans the persisted catalog until an entry is found matching 'nss'.
     ','line_number':143,'multiline':True]
['text':'*
     * Scans the persisted catalog until an entry is found matching 'uuid'.
     ','line_number':149,'multiline':True]
['text':'*
     * Get a raw catalog entry for catalogId as BSON.
     ','line_number':163,'multiline':True]
['text':'*
     * Parses the catalog entry object at `catalogId` to common types. Returns boost::none if it
     * doesn't exist or if the entry is the feature document.
     ','line_number':170,'multiline':True]
['text':'*
     * Updates the catalog entry for the collection 'nss' with the fields specified in 'md'. If
     * 'md.indexes' contains a new index entry, then this method generates a new index ident and
     * adds it to the catalog entry.
     ','line_number':177,'multiline':True]
['text':'*
     * Create an entry in the catalog for an orphaned collection found in the
     * storage engine. Return the generated ns of the collection.
     * Note that this function does not recreate the _id index on the for non-clustered collections
     * because it does not have access to index catalog.
     ','line_number':192,'multiline':True]
['text':'*
     * Generate an internal ident name.
     ','line_number':204,'multiline':True]
['text':'*
     * Generates a new unique identifier for a new "thing".
     * @param nss - the containing namespace
     * @param kind - what this "thing" is, likely collection or index
     *
     * Warning: It's only unique as far as we know without checking every file on disk, but it is
     * possible that this ident collides with an existing one.
     ','line_number':211,'multiline':True]
['text':'*
     * Generate an internal resumable index build ident name.
     ','line_number':221,'multiline':True]
['text':'*
     * On success, returns the RecordId which identifies the new record store in the durable catalog
     * in addition to ownership of the new RecordStore.
     ','line_number':228,'multiline':True]
['text':'*
     * Import a collection by inserting the given metadata into the durable catalog and instructing
     * the storage engine to import the corresponding idents. The metadata object should be a valid
     * catalog entry and contain the following fields:
     * "md": A document representing the BSONCollectionCatalogEntry::MetaData of the collection.
     * "idxIdent": A document containing {<index_name>: <index_ident>} pairs for all indexes.
     * "nss": NamespaceString of the collection being imported.
     * "ident": Ident of the collection file.
     *
     * On success, returns an ImportResult structure containing the RecordId which identifies the
     * new record store in the durable catalog, ownership of the new RecordStore and the UUID of the
     * collection imported.
     *
     * The collection must be locked in MODE_X when calling this function.
     ','line_number':244,'multiline':True]
['text':'*
     * Deletes the persisted collection catalog entry identified by 'catalogId'.
     *
     * Expects (invariants) that all of the index catalog entries have been removed already via
     * removeIndex.
     ','line_number':278,'multiline':True]
['text':'*
     * Drops the provided ident and recreates it as empty for use in resuming an index build.
     ','line_number':286,'multiline':True]
['text':'*
     * Returns true if the index identified by 'indexName' is multikey, and returns false otherwise.
     *
     * If the 'multikeyPaths' pointer is non-null, then it must point to an empty vector. If this
     * index type supports tracking path-level multikey information in the catalog, then this
     * function sets 'multikeyPaths' as the path components that cause this index to be multikey.
     *
     * In particular, if this function returns false and the index supports tracking path-level
     * multikey information, then 'multikeyPaths' is initialized as a vector with size equal to the
     * number of elements in the index key pattern of empty sets.
     ','line_number':301,'multiline':True]
['text':'*
     * Helper which constructs a DurableCatalogEntry given 'catalogId' and 'obj'.
     ','line_number':354,'multiline':True]
['text':'*
     * The '_randLock' must be passed in.
     ','line_number':360,'multiline':True]
['text':' not owned','line_number':365,'multiline':False]
['text':' Protects '_rand' and '_next'.','line_number':369,'multiline':False]
['text':' namespace mongo','line_number':380,'multiline':False]
