['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':' always illegal','line_number':94,'multiline':False]
['text':' success cases','line_number':115,'multiline':False]
['text':' Make sure all are visible.','line_number':121,'multiline':False]
['text':' Forward cursor seeks','line_number':124,'multiline':False]
['text':' Reverse cursor seeks','line_number':165,'multiline':False]
['text':' forward ','line_number':170,'multiline':True]
['text':' forward ','line_number':180,'multiline':True]
['text':' forward ','line_number':190,'multiline':True]
['text':' forward ','line_number':200,'multiline':True]
['text':' inclusive ','line_number':210,'multiline':True]
['text':' aboutToDelete callback ','line_number':211,'multiline':True]
['text':' no-op','line_number':211,'multiline':False]
['text':' inclusive ','line_number':227,'multiline':True]
['text':' aboutToDelete callback ','line_number':228,'multiline':True]
['text':' deletes 2,2','line_number':228,'multiline':False]
['text':' inclusive ','line_number':244,'multiline':True]
['text':' aboutToDelete callback ','line_number':245,'multiline':True]
['text':' deletes 1,2','line_number':245,'multiline':False]
['text':' deletes 1,1 and leaves collection empty','line_number':260,'multiline':False]
['text':' RecordId's are inserted out-of-order.','line_number':280,'multiline':False]
['text':' Regular record stores don't use timestamps for their RecordId, so expect the first','line_number':313,'multiline':False]
['text':' auto-incrementing RecordId to be 1.','line_number':314,'multiline':False]
['text':'*
 * Stringifies the current 'record', as well as any more records in the 'cursor'. Additionally adds
 * the latest oplog visibitility timestamp (this is the current oplog read timestamp, but may not
 * have been the timestamp used by the cursor).
 ','line_number':318,'multiline':True]
['text':' first insert a document','line_number':353,'multiline':False]
['text':' Make sure it is visible.','line_number':362,'multiline':False]
['text':' now we insert 2 docs, but commit the 2nd one first.','line_number':385,'multiline':False]
['text':' we make sure we can't find the 2nd until the first is committed.','line_number':386,'multiline':False]
['text':' do not commit yet','line_number':397,'multiline':False]
['text':' create 2nd doc','line_number':400,'multiline':False]
['text':' Other operations should not be able to see 2nd doc until w1 commits.','line_number':410,'multiline':False]
['text':' now all 3 docs should be visible','line_number':453,'multiline':False]
['text':' Rollback the last two oplog entries, then insert entries with older optimes and ensure that','line_number':467,'multiline':False]
['text':' the visibility rules aren't violated. See SERVER-21645','line_number':468,'multiline':False]
['text':' inclusive ','line_number':473,'multiline':True]
['text':' aboutToDelete callback ','line_number':473,'multiline':True]
['text':' Now we insert 2 docs with timestamps earlier than before, but commit the 2nd one first.','line_number':479,'multiline':False]
['text':' We make sure we can't find the 2nd until the first is committed.','line_number':480,'multiline':False]
['text':' do not commit yet','line_number':492,'multiline':False]
['text':' create 2nd doc','line_number':495,'multiline':False]
['text':' Other operations should not be able to see 2nd doc until w1 commits.','line_number':505,'multiline':False]
['text':' now all 3 docs should be visible','line_number':548,'multiline':False]
['text':' insert a document','line_number':569,'multiline':False]
['text':' We must have a "ts" field with a timestamp.','line_number':574,'multiline':False]
['text':' However, the insert is not timestamped in standalone mode.','line_number':577,'multiline':False]
['text':' RecordId should be extracted from 'ts' field when inserting into oplog namespace','line_number':584,'multiline':False]
['text':' verify that we can read it','line_number':591,'multiline':False]
['text':' namespace','line_number':611,'multiline':False]
['text':' namespace mongo','line_number':612,'multiline':False]
