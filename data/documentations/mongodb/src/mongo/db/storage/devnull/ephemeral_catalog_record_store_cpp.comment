['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':' Works for both removes and updates','line_number':62,'multiline':False]
['text':' not implemented','line_number':150,'multiline':False]
['text':' Capped iterators die on invalidation rather than advancing.','line_number':172,'multiline':False]
['text':' Location to restore() to. Null means EOF.','line_number':188,'multiline':False]
['text':' The reverse_iterator will point to the preceding element, so increment the base','line_number':223,'multiline':False]
['text':' iterator to make it point past the found element.','line_number':224,'multiline':False]
['text':' not implemented','line_number':233,'multiline':False]
['text':' Note: upper_bound returns the first entry > _savedId and reverse_iterators','line_number':252,'multiline':False]
['text':' dereference to the element before their base iterator. This combine to make this','line_number':253,'multiline':False]
['text':' dereference to the first element <= _savedId which is what we want here.','line_number':254,'multiline':False]
['text':' Capped iterators die on invalidation rather than advancing.','line_number':258,'multiline':False]
['text':' Location to restore() to. Null means EOF.','line_number':270,'multiline':False]
['text':'','line_number':276,'multiline':False]
['text':' RecordStore','line_number':277,'multiline':False]
['text':'','line_number':278,'multiline':False]
['text':' TODO SERVER-78731 We should remove `ns` in the line above.','line_number':288,'multiline':False]
['text':' NOTE : The static_cast here assumes that `dataInOut`, which is a void pointer, contains a','line_number':289,'multiline':False]
['text':' NamespaceString object. As of now, DevNullKVEngine constructs a EphemeralForTestRecordStore','line_number':290,'multiline':False]
['text':' by passing `_catalogInfo` to this method.','line_number':291,'multiline':False]
['text':' takes ownership','line_number':293,'multiline':False]
['text':' Since the 'targetOffset' is referring to the location in the new record, we need to subtract','line_number':467,'multiline':False]
['text':' the accumulated change of size by the damages to get the offset in the old record.','line_number':468,'multiline':False]
['text':' First copies all bytes before the damage from the old record.','line_number':473,'multiline':False]
['text':' Bytes between the current location in the oldRecord and the start of the damage.','line_number':474,'multiline':False]
['text':' Then copies from the damage source according to the damage event info.','line_number':478,'multiline':False]
['text':' Moves after the current damaged area in the old record. Updates the size difference due','line_number':483,'multiline':False]
['text':' to the current damage. Increases the current size in the new record.','line_number':484,'multiline':False]
['text':' Copies the rest of the old record.','line_number':489,'multiline':False]
['text':' Unlike other changes, TruncateChange mutates _data on construction to perform the','line_number':505,'multiline':False]
['text':' truncate','line_number':506,'multiline':False]
['text':' Unlike other changes, TruncateChange mutates _data on construction to perform the','line_number':517,'multiline':False]
['text':' truncate.','line_number':518,'multiline':False]
['text':' Note: not making use of extraInfo or infoLevel since we don't have extents','line_number':549,'multiline':False]
['text':' namespace mongo','line_number':559,'multiline':False]
