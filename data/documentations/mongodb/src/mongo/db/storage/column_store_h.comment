['text':'*
 *    Copyright (C) 2022-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':'*
 * An owned representation of a column-store index entry cell.
 ','line_number':56,'multiline':True]
['text':'*
 * This is a base class for column store index storage access, similar to RecordStore and
 * SortedDataInterface.
 *
 * Whereas RecordStore maps RecordId to RecordData and SDI maps KeyString to RecordId, ColumnStore
 * stores tuples of Path, RecordId and Value in a separate format.
 ','line_number':73,'multiline':True]
['text':'*
     * Wrapper around a regular storage cursor to return results only for a specific data column in
     * a column store index. Only returns documents matching the path specified in the constructor.
     * Considers non-path matching documents EOF and returns boost::none.
     ','line_number':91,'multiline':True]
['text':'*
     * This reserved "path" is used for keeping track of all RecordIds in the collection. Cells at
     * this path should always have an empty CellView to ensure the most compact representation for
     * this subtree.
     * This is not a valid real path because it can never appear in valid UTF-8 data.
     ','line_number':166,'multiline':True]
['text':' RowId equivalent of a null RecordId','line_number':174,'multiline':False]
['text':' This is really just a namespace','line_number':177,'multiline':False]
['text':' Have room for 12 new types.','line_number':180,'multiline':False]
['text':' no-value types','line_number':182,'multiline':False]
['text':' Bool (value encoded in this byte)','line_number':187,'multiline':False]
['text':' Empty Object and Array (value encoded in this byte)','line_number':191,'multiline':False]
['text':' 12 bytes follow','line_number':195,'multiline':False]
['text':' 16 bytes follow (newUUID subtype)','line_number':196,'multiline':False]
['text':' Gap from 0x29 - 0x2f (room for more simple types and more encodings of Decimal128)','line_number':198,'multiline':False]
['text':' 16 bytes follow','line_number':200,'multiline':False]
['text':' NumberDouble','line_number':202,'multiline':False]
['text':' 8 bytes follow','line_number':203,'multiline':False]
['text':' 4 bytes follow (when float(x) == x)','line_number':204,'multiline':False]
['text':' 0x33 and 0x34 are reserved for bfloat16 (truncated single) and IEEE754 float16.','line_number':205,'multiline':False]
['text':' 1 bytes follow (when int8_t(x) == x)','line_number':206,'multiline':False]
['text':' NumberDouble when (100 * x) can safely be represented as an integer','line_number':208,'multiline':False]
['text':' 1 byte follows','line_number':209,'multiline':False]
['text':' 2 bytes follow','line_number':210,'multiline':False]
['text':' 4 bytes follow','line_number':211,'multiline':False]
['text':' NumberInt (N bytes follow)','line_number':213,'multiline':False]
['text':' NumberLong (N bytes follow)','line_number':218,'multiline':False]
['text':' These encode small Int and Long directly in this byte','line_number':224,'multiline':False]
['text':' String (N - kStringSizeMin bytes follow)','line_number':230,'multiline':False]
['text':' Gap from 0xc1 - 0xcf','line_number':234,'multiline':False]
['text':' Bytes here or above indicate prefix data before the data. Any byte below this is the','line_number':236,'multiline':False]
['text':' start of data. Prefix data is all optional, but when present, must be in this order:','line_number':237,'multiline':False]
['text':'   - kSubPathsMarker','line_number':238,'multiline':False]
['text':'   - kSparseMarker','line_number':239,'multiline':False]
['text':'   - kDoubleNestedArraysMarker','line_number':240,'multiline':False]
['text':'   - kArrInfoSizeXXX','line_number':241,'multiline':False]
['text':' Directly encode number of bytes at end of cell','line_number':245,'multiline':False]
['text':' Note that this means 1 byte stored','line_number':246,'multiline':False]
['text':' N bytes of ArrInfo at end of Cell.','line_number':249,'multiline':False]
['text':' Gap from 0xf0 - 0xfb','line_number':255,'multiline':False]
['text':' Rest is helpers to make these constants easier to use.','line_number':262,'multiline':False]
['text':' 21','line_number':266,'multiline':False]
['text':' value is encoded as uint8_t(kTinyTypeZero + value)','line_number':270,'multiline':False]
['text':' Never encode 0','line_number':284,'multiline':False]
['text':' 29','line_number':285,'multiline':False]
['text':' size is encoded as uint8_t(kArrInfoZero + size)','line_number':287,'multiline':False]
['text':'','line_number':297,'multiline':False]
['text':' CRUD','line_number':298,'multiline':False]
['text':'','line_number':299,'multiline':False]
['text':' next possible path (\0 is not allowed)','line_number':316,'multiline':False]
['text':'','line_number':323,'multiline':False]
['text':' Whole ColumnStore ops','line_number':324,'multiline':False]
['text':'','line_number':325,'multiline':False]
['text':'*
     * If the range [*itPtr, end) begins with a number, returns it and positions *itPtr after the
     * last byte of number. If there is no number, returns 0 (which is typically encoded by omitting
     * an optional number) and does not reposition *itPtr.
     ','line_number':339,'multiline':True]
['text':' Use local to allow compiler to assume it doesn't point to itself.','line_number':346,'multiline':False]
['text':' noop first pass.','line_number':349,'multiline':False]
['text':'*
     * Returns the parent path for the given path, if there is one.
     ','line_number':363,'multiline':True]
['text':'*
     * The Cursor class is for raw access to the index. Except for unusual use cases (e.g., index
     * validation) you'll want to use CursorForPath instead.
     ','line_number':383,'multiline':True]
['text':'
 * Array info reader based on a string representation of arrayInfo. Allows for reading/peeking of
 * individual components.
 ','line_number':413,'multiline':True]
['text':' Reaching the end of the array info means an unlimited number of '|'s.','line_number':423,'multiline':False]
['text':' Reaching the end of the array info means an unlimited number of '|'s.','line_number':431,'multiline':False]
['text':'
     * Returns whether more explicit components are yet to be consumed. Since array info logically
     * ends with an infinite stream of |, this function indicates whether there are more components
     * which are physically present to be read, not including the infinite sequence of |.
     ','line_number':445,'multiline':True]
['text':' rawData() is 1-past-end of range starting with firstValuePtr.','line_number':464,'multiline':False]
['text':' See column_keygen::UnencodedCellView for a description of each of these flags.','line_number':467,'multiline':False]
['text':' Unowned','line_number':489,'multiline':False]
['text':'*
     * Construct a cursor that can iterate the values in a column store cell. Requires a
     * 'ValueEncoder' that understands the binary format of cell data.
     *
     * Note: the 'ValueEncoder' is stored as an unowned pointer. The referenced encoder must stay
     * valid for the lifetime of the returned cursor.
     ','line_number':492,'multiline':True]
['text':' 'depthWithinDirectlyNestedArraysOnPath' represents nestedness of arrays along the','line_number':526,'multiline':False]
['text':' path. That is, only arrays that are elements of other arrays are considered to be','line_number':527,'multiline':False]
['text':' nested.','line_number':528,'multiline':False]
['text':' Examples (considering path "x.y.z"):','line_number':529,'multiline':False]
['text':' 1. {x: {y: {z: 42}}} -- 'depthWithinDirectlyNestedArraysOnPath' of 42 is 0.','line_number':530,'multiline':False]
['text':' 2. {x: [{y: [{z: [42]}]}]} -- 'depthWithinDirectlyNestedArraysOnPath' of 42 is 0.','line_number':531,'multiline':False]
['text':' 3. {x: {y: {z: [[42]]}}} -- 'depthWithinDirectlyNestedArraysOnPath' of 42 is 0.','line_number':532,'multiline':False]
['text':' 4. {x: [[{y: {z: 42}}]]} -- 'depthWithinDirectlyNestedArraysOnPath' of 42 is 1.','line_number':533,'multiline':False]
['text':' 5. {x: [[[{y: [[{z: 42}]]}]]]} -- 'depthWithinDirectlyNestedArraysOnPath' of 42 is 3.','line_number':534,'multiline':False]
['text':' 'depthAtLeaf' represents nestedness of arrays at the leaf of the path, regardless of','line_number':537,'multiline':False]
['text':' the array structure along the path. Examples (considering path "x.y.z"):','line_number':538,'multiline':False]
['text':' 1. {x: {y: {z: 42}}} -- 'depthAtLeaf' of "42" is 0.','line_number':539,'multiline':False]
['text':' 2. {x: [[[[[{y: [[[{z: [42]}]]]}]]]]]} -- 'depthAtLeaf' of "42" is 1.','line_number':540,'multiline':False]
['text':' When 'isObject' is "true" the 'value' should be ignored. The cursor will return a','line_number':543,'multiline':False]
['text':' single "object" value for a range of objects.','line_number':544,'multiline':False]
['text':'*
         * Returns the next value with its array-nestedness level.
         ','line_number':547,'multiline':True]
['text':' The expected most common case: implicit tail of values at the same depths.','line_number':551,'multiline':False]
['text':' isObject ','line_number':558,'multiline':True]
['text':' The next expected most common case: a range of values at the same depths.','line_number':566,'multiline':False]
['text':' An end of a range means we have to check for structural changes and update depths.','line_number':575,'multiline':False]
['text':' A '[' can be followed by a number if there are objects in the array,','line_number':579,'multiline':False]
['text':' that should be retrieved from other paths when reconstructing the','line_number':580,'multiline':False]
['text':' record. We can ignore them as they don't contribute to the values.','line_number':581,'multiline':False]
['text':' We consider as nested only the arrays that are elements of other','line_number':600,'multiline':False]
['text':' arrays. When there is an array of objects and some of the fields of','line_number':601,'multiline':False]
['text':' these objects are arrays, the latter aren't nested.','line_number':602,'multiline':False]
['text':' Closing an array implicitly closes all objects on the path between it','line_number':619,'multiline':False]
['text':' and the previous array.','line_number':620,'multiline':False]
['text':' Indicates elements in arrays that are objects with sibling paths. These','line_number':628,'multiline':False]
['text':' objects don't contribute to the cell's values, so we can ignore them.','line_number':629,'multiline':False]
['text':' For example, for path "a.b" in','line_number':630,'multiline':False]
['text':' {a: [{b:41}, {c:100}, {c:100}, {b:[{c:100}, 51]}]}','line_number':631,'multiline':False]
['text':'     [  |     +2                {  [o','line_number':632,'multiline':False]
['text':' and the values are 41 and 51','line_number':633,'multiline':False]
['text':' Indicates the start of a nested object inside the cell. We don't need','line_number':638,'multiline':False]
['text':' to track this info because the nested objects don't contribute to the','line_number':639,'multiline':False]
['text':' values in the cell.','line_number':640,'multiline':False]
['text':' isObject ','line_number':645,'multiline':True]
['text':' Start consuming the implicit tail range.','line_number':651,'multiline':False]
['text':' Used to compute the corresponding fields in `CellValueWithMetadata`.','line_number':666,'multiline':False]
['text':' Cells with a single sub-object don't have any values and have empty array info, so we','line_number':673,'multiline':False]
['text':' have to track their state separately.','line_number':674,'multiline':False]
['text':' This block handles all prefix bytes, and leaves `it` pointing at the first elem.','line_number':687,'multiline':False]
['text':' The first two comparisons are technically not needed, but optimize for common cases of no','line_number':688,'multiline':False]
['text':' prefix bytes, and an array info size with no other flag bytes.','line_number':689,'multiline':False]
['text':' This flag is special and should only appear by itself.','line_number':695,'multiline':False]
['text':' Next byte must be either an array info size or a value.','line_number':712,'multiline':False]
['text':' Consume size-kind byte.','line_number':718,'multiline':False]
['text':' Reminder: beginning of arrInfo is end of values.','line_number':746,'multiline':False]
['text':' The lack of any values implies that there must be sub paths.','line_number':747,'multiline':False]
['text':' We need the dispatch byte back.','line_number':764,'multiline':False]
['text':' field name size including nul byte','line_number':766,'multiline':False]
['text':' don't know total element size','line_number':767,'multiline':False]
['text':' Whole value encoded in byte.','line_number':782,'multiline':False]
['text':' Size and type encoded in byte, value follows.','line_number':797,'multiline':False]
['text':' namespace mongo','line_number':884,'multiline':False]
