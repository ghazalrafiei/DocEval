['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':' IWYU pragma: no_include "boost/system/detail/error_code.hpp"','line_number':38,'multiline':False]
['text':' IWYU pragma: keep','line_number':43,'multiline':False]
['text':' Faitfhully simulate being in replica set mode for timestamping tests which requires','line_number':92,'multiline':False]
['text':' parity for journaling settings.','line_number':93,'multiline':False]
['text':' Use a small journal for testing to account for the unlikely event that the underlying','line_number':129,'multiline':False]
['text':' filesystem does not support fast allocation of a file of zeros.','line_number':130,'multiline':False]
['text':' repair ','line_number':171,'multiline':True]
['text':' Dropping a collection might fail if we haven't checkpointed the data.','line_number':214,'multiline':False]
['text':' Move the data file out of the way so the ident can be dropped. This not permitted on Windows','line_number':217,'multiline':False]
['text':' because the file cannot be moved while it is open. The implementation for orphan recovery is','line_number':218,'multiline':False]
['text':' also not implemented on Windows for this reason.','line_number':219,'multiline':False]
['text':' The data file is moved back in place so that it becomes an "orphan" of the storage','line_number':226,'multiline':False]
['text':' engine and the restoration process can be tested.','line_number':227,'multiline':False]
['text':' Dropping a collection might fail if we haven't checkpointed the data','line_number':269,'multiline':False]
['text':' The ident may not get immediately dropped, so ensure it is completely gone.','line_number':279,'multiline':False]
['text':' Create an empty data file. The subsequent call to recreate the collection will fail because','line_number':284,'multiline':False]
['text':' it is unsalvageable.','line_number':285,'multiline':False]
['text':' This should recreate an empty data file successfully and move the old one to a name that ends','line_number':292,'multiline':False]
['text':' in ".corrupt".','line_number':293,'multiline':False]
['text':' To diagnose any intermittent failures, maximize logging from WiredTigerKVEngine and friends.','line_number':309,'multiline':False]
['text':' Set syncdelay before starting the checkpoint thread, otherwise it can observe the default','line_number':313,'multiline':False]
['text':' checkpoint frequency of 60 seconds, causing the test to fail due to a 10 second timeout.','line_number':314,'multiline':False]
['text':' If the test fails we want to ensure the checkpoint thread shuts down to avoid accessing the','line_number':320,'multiline':False]
['text':' storage engine during shutdown.','line_number':321,'multiline':False]
['text':' The initial data timestamp has to be set to take stable checkpoints. The first stable','line_number':327,'multiline':False]
['text':' timestamp greater than this will also trigger a checkpoint. The following loop of the','line_number':328,'multiline':False]
['text':' CheckpointThread will observe the new `syncdelay` value.','line_number':329,'multiline':False]
['text':' Simulate the callback that queries config.transactions for the oldest active transaction.','line_number':332,'multiline':False]
['text':' A method that will poll the WiredTigerKVEngine until it sees the amount of oplog necessary','line_number':346,'multiline':False]
['text':' for crash recovery exceeds the input.','line_number':347,'multiline':False]
['text':' If the current oplog needed for rollback does not exceed the requested pinned out, we','line_number':349,'multiline':False]
['text':' cannot expect the CheckpointThread to eventually publish a sufficient crash recovery','line_number':350,'multiline':False]
['text':' value.','line_number':351,'multiline':False]
['text':' Do 100 iterations that sleep for 100 milliseconds between polls. This will wait for up','line_number':357,'multiline':False]
['text':' to 10 seconds to observe an asynchronous update that iterates once per second.','line_number':358,'multiline':False]
['text':' Await a new checkpoint. Oplog needed for rollback does not advance.','line_number':397,'multiline':False]
['text':' TODO SERVER-51595: to re-enable this test on Windows.','line_number':408,'multiline':False]
['text':' Because the underlying file was not removed, it will be renamed out of the way by WiredTiger','line_number':430,'multiline':False]
['text':' when creating a new table with the same ident.','line_number':431,'multiline':False]
['text':' WiredTiger drops files asynchronously.','line_number':441,'multiline':False]
['text':' Initialize the oldest timestamp.','line_number':456,'multiline':False]
['text':' Assert that advancing the oldest timestamp still succeeds.','line_number':460,'multiline':False]
['text':' Error if there's a request to pin the oldest timestamp earlier than what it is already set','line_number':464,'multiline':False]
['text':' as. This error case is not exercised in this test.','line_number':465,'multiline':False]
['text':' Pin the oldest timestamp to "3".','line_number':467,'multiline':False]
['text':' Assert that the pinning method returns the same timestamp as was requested.','line_number':470,'multiline':False]
['text':' Assert that pinning the oldest timestamp does not advance it.','line_number':472,'multiline':False]
['text':' Attempt to advance the oldest timestamp to "5".','line_number':475,'multiline':False]
['text':' Observe the oldest timestamp was pinned at the requested "3".','line_number':477,'multiline':False]
['text':' Unpin the oldest timestamp. Assert that unpinning does not advance the oldest timestamp.','line_number':480,'multiline':False]
['text':' Now advancing the oldest timestamp to "5" succeeds.','line_number':484,'multiline':False]
['text':'*
 * Demonstrate that multiple actors can request different pins of the oldest timestamp. The minimum
 * of all active requests will be obeyed.
 ','line_number':489,'multiline':True]
['text':' Error if there's a request to pin the oldest timestamp earlier than what it is already set','line_number':500,'multiline':False]
['text':' as. This error case is not exercised in this test.','line_number':501,'multiline':False]
['text':' Have "A" pin the timestamp to "1".','line_number':503,'multiline':False]
['text':' Have "B" pin the timestamp to "2".','line_number':509,'multiline':False]
['text':' Advancing the oldest timestamp to "5" will only succeed in advancing it to "1".','line_number':515,'multiline':False]
['text':' After unpinning "A" at "1", advancing the oldest timestamp will be pinned to "2".','line_number':519,'multiline':False]
['text':' Unpinning "B" at "2" allows the oldest timestamp to advance freely.','line_number':524,'multiline':False]
['text':'*
 * Test error cases where a request to pin the oldest timestamp uses a value that's too early
 * relative to the current oldest timestamp.
 ','line_number':530,'multiline':True]
['text':' The false value means using this variable will cause the method to fail on error.','line_number':542,'multiline':False]
['text':' When rounding on error, the pin will succeed, but the return value will be the current oldest','line_number':545,'multiline':False]
['text':' timestamp instead of the requested value.','line_number':546,'multiline':False]
['text':' Using "fail on error" will result in a not-OK return value.','line_number':552,'multiline':False]
['text':' Initializing this value to silence Coverity warning. Doesn't matter what value','line_number':559,'multiline':False]
['text':' _startupVersion is set to since shouldDowngrade() & getDowngradeString() only look at','line_number':560,'multiline':False]
['text':' _startupVersion when FCV is uninitialized. This test initializes FCV via setVersion().','line_number':561,'multiline':False]
['text':' (Generic FCV reference): When FCV is kLatest, no downgrade is necessary.','line_number':564,'multiline':False]
['text':'hasRecoveryTimestamp=','line_number':566,'multiline':True]
['text':' (Generic FCV reference): When FCV is kLastContinuous or kLastLTS, a downgrade may be needed.','line_number':569,'multiline':False]
['text':'hasRecoveryTimestamp=','line_number':571,'multiline':True]
['text':'hasRecoveryTimestamp=','line_number':575,'multiline':True]
['text':' (Generic FCV reference): While we're in a semi-downgraded state, we shouldn't try downgrading','line_number':578,'multiline':False]
['text':' the WiredTiger compatibility version.','line_number':579,'multiline':False]
['text':'hasRecoveryTimestamp=','line_number':582,'multiline':True]
['text':'hasRecoveryTimestamp=','line_number':587,'multiline':True]
['text':' Perform each test in their own limited scope in order to establish different','line_number':592,'multiline':False]
['text':' severity levels.','line_number':593,'multiline':False]
['text':' Set the WiredTiger Checkpoint LOGV2 component severity to the Log level.','line_number':597,'multiline':False]
['text':' Perform a checkpoint. The goal here is create some activity in WiredTiger in order','line_number':603,'multiline':False]
['text':' to generate verbose messages (we don't really care about the checkpoint itself).','line_number':604,'multiline':False]
['text':' In this initial case, we don't expect to capture any debug checkpoint messages. The','line_number':608,'multiline':False]
['text':' base severity for the checkpoint component should be at Log().','line_number':609,'multiline':False]
['text':' Set the WiredTiger Checkpoint LOGV2 component severity to the Debug(2) level.','line_number':622,'multiline':False]
['text':' Perform another checkpoint.','line_number':629,'multiline':False]
['text':' This time we expect to detect WiredTiger checkpoint Debug() messages.','line_number':634,'multiline':False]
['text':' Get a session. This will open a transaction.','line_number':652,'multiline':False]
['text':' WT will return EBUSY due to the open transaction.','line_number':656,'multiline':False]
['text':' Close the open transaction.','line_number':664,'multiline':False]
['text':' WT will no longer return EBUSY.','line_number':667,'multiline':False]
['text':' namespace','line_number':679,'multiline':False]
['text':' namespace mongo','line_number':680,'multiline':False]
