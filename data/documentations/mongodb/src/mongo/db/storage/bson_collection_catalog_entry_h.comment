['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':'*
 * This is a helper class for any storage engine that wants to store catalog information
 * as BSON. It is totally optional to use this.
 ','line_number':51,'multiline':True]
['text':'*
     * Incremented when breaking changes are made to the index build procedure so that other servers
     * know whether or not to resume or discard unfinished index builds.
     ','line_number':57,'multiline':True]
['text':' ------ for implementors','line_number':67,'multiline':False]
['text':' We need to hold the multikey mutex when copying, someone else might be modifying this','line_number':77,'multiline':False]
['text':' No need to hold mutex on move, there are no concurrent readers while we're moving','line_number':88,'multiline':False]
['text':' the instance.','line_number':89,'multiline':False]
['text':'*
         * An index is considered present if it has a non-empty 'spec'.
         * Invalid indexes by this definition include default constructed instances and
         * and structs zeroed out due to index drops.
         ','line_number':94,'multiline':True]
['text':' No need to hold mutex on move, there are no concurrent readers while we're moving','line_number':110,'multiline':False]
['text':' the instance.','line_number':111,'multiline':False]
['text':' If initialized, a two-phase index build is in progress.','line_number':134,'multiline':False]
['text':' If non-empty, 'multikeyPaths' is a vector with size equal to the number of elements in','line_number':137,'multiline':False]
['text':' the index key pattern. Each element in the vector is an ordered set of positions','line_number':138,'multiline':False]
['text':' (starting at 0) into the corresponding indexed field that represent what prefixes of the','line_number':139,'multiline':False]
['text':' indexed field cause the index to be multikey.','line_number':140,'multiline':False]
['text':' multikeyMutex must be held when accessing multikey or multikeyPaths','line_number':141,'multiline':False]
['text':'*
         * If we have exclusive access to this MetaData (holding a unique copy). We don't need to
         * hold mutexes when reading internal data.
         ','line_number':151,'multiline':True]
['text':'*
         * Returns number of valid indexes.
         ','line_number':157,'multiline':True]
['text':'*
         * Inserts information about an index into the MetaData.
         ','line_number':164,'multiline':True]
['text':'*
         * Removes information about an index from the MetaData. Returns true if an index
         * called name existed and was deleted, and false otherwise.
         ','line_number':169,'multiline':True]
['text':' May include empty instances which represent indexes already dropped.','line_number':177,'multiline':False]
['text':' Time-series collections created in versions 5.1 and earlier are allowed to contain','line_number':180,'multiline':False]
['text':' measurements with arbitrarily mixed schema in the buckets. When upgrading from these','line_number':181,'multiline':False]
['text':' earlier versions and setting FCV to 5.2 and up, this flag will be set to true by default','line_number':182,'multiline':False]
['text':' for existing time-series collections. To set the flag to false, all of the buckets need','line_number':183,'multiline':False]
['text':' to be checked for mixed-schema data. Newly created time-series collections in FCV 5.2 and','line_number':184,'multiline':False]
['text':' up will have this flag set to false by default. This will be boost::none if this catalog','line_number':185,'multiline':False]
['text':' entry is not representing a time-series collection or if FCV < 5.2.','line_number':186,'multiline':False]
['text':' The flag will be set to false at the time of time-series collection creation if FCV','line_number':189,'multiline':False]
['text':' >= 7.1. For any other collection type and earlier versions the flag will be boost::none.','line_number':190,'multiline':False]
['text':' Thus, if the field is absent, we assume the time-series bucketing parameters have','line_number':191,'multiline':False]
['text':' changed. If a subsequent collMod operation changes either 'bucketRoundingSeconds' or','line_number':192,'multiline':False]
['text':' 'bucketMaxSpanSeconds', we set the flag to true.','line_number':193,'multiline':False]
['text':' namespace mongo','line_number':197,'multiline':False]
