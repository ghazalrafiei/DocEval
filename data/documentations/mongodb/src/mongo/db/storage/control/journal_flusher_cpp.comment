['text':'*
 *    Copyright (C) 2020-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':' IWYU pragma: no_include "cxxabi.h"','line_number':33,'multiline':False]
['text':' namespace','line_number':71,'multiline':False]
['text':' The thread must not run and access the service context to create an opCtx while unit test','line_number':98,'multiline':False]
['text':' infrastructure is still being set up and expects sole access to the service context (there is','line_number':99,'multiline':False]
['text':' no conurrency control on the service context during this phase).','line_number':100,'multiline':False]
['text':' Initialize the thread's opCtx.','line_number':108,'multiline':False]
['text':' Updates to a non-replicated collection, oplogTruncateAfterPoint, are made by this thread.','line_number':111,'multiline':False]
['text':' As this operation is critical for data durability we mark it as having Immediate priority','line_number':112,'multiline':False]
['text':' to skip ticket and flow control.','line_number':113,'multiline':False]
['text':' Signal the waiters that a round completed.','line_number':124,'multiline':False]
['text':' Release snapshot before we start the next round.','line_number':127,'multiline':False]
['text':' Reset opCtx if we get an error.','line_number':131,'multiline':False]
['text':' Can be caused by killOp or stepdown.','line_number':137,'multiline':False]
['text':' When this thread is interrupted it will immediately restart the journal flush','line_number':139,'multiline':False]
['text':' without sending errors to waiting callers. The opCtx error should already be','line_number':140,'multiline':False]
['text':' cleared of the interrupt by the ON_BLOCK_EXIT handling above.','line_number':141,'multiline':False]
['text':' We want to log errors for debugability.','line_number':149,'multiline':False]
['text':' Signal the waiters that the fsync was interrupted.','line_number':155,'multiline':False]
['text':' Wait until either journalCommitIntervalMs passes or an immediate journal flush is','line_number':159,'multiline':False]
['text':' requested (or shutdown). If _disablePeriodicFlushes is set, then the thread will not','line_number':160,'multiline':False]
['text':' wake up until a journal flush is externally requested.','line_number':161,'multiline':False]
['text':' This is not an ideal solution for the failpoint usage because turning the failpoint','line_number':170,'multiline':False]
['text':' off at this point in the code would leave this thread sleeping until explicitly','line_number':171,'multiline':False]
['text':' pinged by an async thread to flush the journal.','line_number':172,'multiline':False]
['text':' Take the next promise as current and reset the next promise.','line_number':206,'multiline':False]
['text':' Throws on error if the flusher thread is shutdown.','line_number':266,'multiline':False]
['text':' namespace mongo','line_number':270,'multiline':False]
