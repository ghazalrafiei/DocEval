['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':' IWYU pragma: no_include "cxxabi.h"','line_number':30,'multiline':False]
['text':' Update version as breaking changes are introduced into the index build procedure.','line_number':110,'multiline':False]
['text':'ts=','line_number':174,'multiline':True]
['text':' Make sure we have a valid IndexSpec for the type requested','line_number':189,'multiline':False]
['text':' Rollback WUOW.','line_number':463,'multiline':False]
['text':' Rollback WUOW.','line_number':592,'multiline':False]
['text':'
         * This test verifies that we can set multikey on two threads concurrently with the
         * following interleaving that do not cause a WCE from the storage engine:
         *
         * T1: open storage snapshot
         *
         * T1: set multikey paths to {first}
         *
         * T1: commit
         *
         * T2: open storage snapshot
         *
         * T2: set multikey paths to {second}
         *
         * T2: commit
         *
         * T1: onCommit handler
         *
         * T2: onCommit handler
         *
         ','line_number':609,'multiline':True]
['text':' Start a thread that will set multikey paths to 'first'. It will commit the change to the','line_number':638,'multiline':False]
['text':' storage engine but block before running the onCommit handler that updates the in-memory','line_number':639,'multiline':False]
['text':' state in the Collection instance.','line_number':640,'multiline':False]
['text':' Register a onCommit that will block until the main thread has committed its multikey','line_number':654,'multiline':False]
['text':' write. This onCommit handler is registered before any writes and will thus be','line_number':655,'multiline':False]
['text':' performed first, blocking all other onCommit handlers.','line_number':656,'multiline':False]
['text':' Let the main thread now we have committed to the storage engine','line_number':662,'multiline':False]
['text':' Wait until the main thread has committed its multikey write','line_number':666,'multiline':False]
['text':' Set the index to multikey with 'first' as paths.','line_number':670,'multiline':False]
['text':' Wait for the thread above to commit its multikey write to the storage engine','line_number':676,'multiline':False]
['text':' Set the index to multikey with 'second' as paths. This will not cause a WCE as the write','line_number':682,'multiline':False]
['text':' in the thread is fully committed to the storage engine.','line_number':683,'multiline':False]
['text':' First confirm that we can observe the multikey write set by the other thread.','line_number':686,'multiline':False]
['text':' Then perform our own multikey write.','line_number':692,'multiline':False]
['text':' Notify the thread that our multikey write is committed','line_number':699,'multiline':False]
['text':' Verify that our Collection instance has 'expected' as multikey paths for this index','line_number':707,'multiline':False]
['text':' Verify that the durable catalog has 'expected' as multikey paths for this index','line_number':715,'multiline':False]
['text':' Set a new rand so that it does not collide upon import.','line_number':795,'multiline':False]
['text':' Import should fail with empty metadata.','line_number':799,'multiline':False]
['text':' Import should fail with missing "md" field.','line_number':807,'multiline':False]
['text':' Import should fail with missing "ident" field.','line_number':816,'multiline':False]
['text':' Import should success with validate inputs.','line_number':824,'multiline':False]
['text':' Validate the catalog entry for the imported collection.','line_number':835,'multiline':False]
['text':' Test that a collection UUID is generated for import.','line_number':842,'multiline':False]
['text':' Substitute in the generated UUID and check that the rest of fields in the catalog entry','line_number':844,'multiline':False]
['text':' match.','line_number':845,'multiline':False]
['text':' Since there was not a collision, the rand should not have changed.','line_number':851,'multiline':False]
['text':' Import should fail if the namespace already exists.','line_number':858,'multiline':False]
['text':' Check that a newly created collection doesn't use 'rand' as the suffix in the ident.','line_number':893,'multiline':False]
['text':' (Generic FCV reference): This FCV reference should exist across LTS binary versions.','line_number':904,'multiline':False]
['text':'timeField=','line_number':925,'multiline':True]
['text':'*
     * Create some collections for which to scan.
     ','line_number':973,'multiline':True]
['text':'timeField=','line_number':985,'multiline':True]
['text':'*
     * Fetch catalog entries by namespace by scanning the mdb catalog.
     ','line_number':991,'multiline':True]
['text':' Need a read lock for DurableCatalog::getMetaData() calls.','line_number':995,'multiline':False]
['text':' namespace','line_number':1035,'multiline':False]
['text':' namespace mongo','line_number':1036,'multiline':False]
