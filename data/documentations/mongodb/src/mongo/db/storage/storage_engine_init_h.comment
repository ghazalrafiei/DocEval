['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':'*
 * Valid flags to pass to initializeStorageEngine. Used as a bitfield.
 ','line_number':45,'multiline':True]
['text':' Used by reinitialzeStorageEngine only.','line_number':51,'multiline':False]
['text':'*
 * Initializes the storage engine on "service".
 * The optional parameter `startupTimeElapsedBuilder` is for adding time elapsed of tasks done in
 * this function into one single builder that records the time elapsed during startup. Its default
 * value is nullptr because we only want to time this function when it is called during startup.
 ','line_number':64,'multiline':True]
['text':'*
 * Shuts down storage engine cleanly and releases any locks on mongod.lock.
 ','line_number':75,'multiline':True]
['text':'*
 * Changes the storage engine for the given service by shutting down the old one and starting
 * up a new one.  Kills all opCtxs on the service context which have a storage recovery unit,
 * except the one passed in which has its recovery unit replaced.
 *
 * Changes to the configuration (e.g. to storageGlobalParams.dbpath) which need to happen while
 * no storage engine is active may be made in the changeConfigurationCallback.  At that point the
 * opCtx will have a no op recovery unit and any access to storage is not allowed.
 ','line_number':80,'multiline':True]
['text':'*
 * Registers a storage engine onto the given "service".
 ','line_number':94,'multiline':True]
['text':'*
 * Returns true if "name" refers to a registered storage engine.
 ','line_number':100,'multiline':True]
['text':'*
 * Returns an unowned pointer to the factory for the named storage engine, or nullptr.
 *
 * NOTE: Exposed only for use in legacy testing scenarios.
 ','line_number':105,'multiline':True]
['text':'
 * Extracts the storageEngine bson from the CollectionOptions provided.  Loops through each
 * provided storageEngine and asks the matching registered storage engine if the
 * collection/index options are valid.  Returns an error if the collection/index options are
 * invalid.
 * If no matching registered storage engine is found, return an error.
 * Validation function 'func' must be either:
 * - &StorageEngine::Factory::validateCollectionStorageOptions; or
 * - &StorageEngine::Factory::validateIndexStorageOptions
 ','line_number':112,'multiline':True]
['text':'
 * Appends a the list of available storage engines to a BSONObjBuilder for reporting purposes.
 ','line_number':127,'multiline':True]
['text':' namespace mongo','line_number':132,'multiline':False]
