['text':'*
 *    Copyright (C) 2019-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':' For ease of testing, create a sample on every call.','line_number':67,'multiline':False]
['text':' Create a sample entry for every five operations. This better simulates reality than the','line_number':86,'multiline':False]
['text':' testing value of one. The timestamp is incremented by one for each operation.','line_number':87,'multiline':False]
['text':' The first operation will not yet generate a sample.','line_number':95,'multiline':False]
['text':' Adding four more entries will generate a new sample.','line_number':99,'multiline':False]
['text':' Adding five operations in one call will generate a new sample. However, the sampling','line_number':104,'multiline':False]
['text':' structure will now have the state:','line_number':105,'multiline':False]
['text':'','line_number':106,'multiline':False]
['text':' TS: 5 -> 5 operations','line_number':107,'multiline':False]
['text':' TS: 6 -> 10 operations','line_number':108,'multiline':False]
['text':'','line_number':109,'multiline':False]
['text':' In a perfect world, operation 10 would be represented at timestamp 10.','line_number':110,'multiline':False]
['text':' Adding nine operations in one call will generate a third sample. Following that with sampling','line_number':115,'multiline':False]
['text':' a single operation does not* create a fourth sample. A full five operations must come in to','line_number':116,'multiline':False]
['text':' create the next sample.','line_number':117,'multiline':False]
['text':' This test asserts the timestamps in the sample deque. The requirements of those values in','line_number':129,'multiline':False]
['text':' practice are very relaxed. It may make sense to remove this testing if the sampling algorithm','line_number':130,'multiline':False]
['text':' becomes more sophisticated.','line_number':131,'multiline':False]
['text':' Create 10 samples from times 0->9.','line_number':142,'multiline':False]
['text':' Trim all samples smaller than five. This should leave half of the samples.','line_number':150,'multiline':False]
['text':' Attempt to trim the remaining samples. Flow control will leave the last two samples alone for','line_number':154,'multiline':False]
['text':' calculating other metrics.','line_number':155,'multiline':False]
['text':' While operation timestamps are generated in order by replication, they are not given to flow','line_number':161,'multiline':False]
['text':' control in order. This helps prevent unnecessary lock contention. Because flow control is','line_number':162,'multiline':False]
['text':' resilient to noisy data, it's acceptable to drop data to keep the deque in sorted order (a','line_number':163,'multiline':False]
['text':' requirement for searching).','line_number':164,'multiline':False]
['text':' Create 100 samples from times 0->99.','line_number':180,'multiline':False]
['text':' Create 100 samples. Grab the global IX lock once for the first sample, twice for the second,','line_number':195,'multiline':False]
['text':' etc...','line_number':196,'multiline':False]
['text':' Need two points to make a line.','line_number':204,'multiline':False]
['text':' Construct a state where the majority point lag is at the threshold with the sustainer node','line_number':218,'multiline':False]
['text':' processing 1,000 operations per second. The primary in that case will shoot for 95%','line_number':219,'multiline':False]
['text':' (gFlowControlFudgeFactor) of 1,000. Given an input 2.0 locksPerOp, the number of tickets','line_number':220,'multiline':False]
['text':' returned should be 950 * 2 = 1900.','line_number':221,'multiline':False]
['text':'','line_number':222,'multiline':False]
['text':' There's no dependency on gFlowControlDecayConstant in this test because we set the majority','line_number':223,'multiline':False]
['text':' point lag to the lag threshold.','line_number':224,'multiline':False]
['text':' Constructs a member data instance with an optime at term 1, timestamp `ts`. The wallclock','line_number':227,'multiline':False]
['text':' times are not initialized.','line_number':228,'multiline':False]
['text':' In the previous observation, all nodes are applied up through 1000.','line_number':235,'multiline':False]
['text':' In the current observation, the secondaries are at 2000 while the primary is at 3000.','line_number':241,'multiline':False]
['text':' Construct samples where Timestamp X maps to operation number X.','line_number':247,'multiline':False]
['text':' Irrelevant to this call.','line_number':252,'multiline':False]
['text':' Use a mock and failpoint to avoid having to setup an entire replication topology. Isolate the','line_number':268,'multiline':False]
['text':' `disableDeadline` behavior.','line_number':269,'multiline':False]
['text':' Sanity check the failpoint is working.','line_number':273,'multiline':False]
['text':' When getting tickets prior to the deadline, `kMaxTickets` should be returned.','line_number':280,'multiline':False]
['text':' After the deadline passes, the override should take effect.','line_number':282,'multiline':False]
['text':' namespace mongo','line_number':285,'multiline':False]
