['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':' Check that disabling auth checks works','line_number':163,'multiline':False]
['text':' Check that you can't authorize a user that doesn't exist.','line_number':173,'multiline':False]
['text':' Add a user with readWrite and dbAdmin on the test DB','line_number':178,'multiline':False]
['text':' Add an admin user with readWriteAnyDatabase','line_number':190,'multiline':False]
['text':' Verify we recorded the all the auth checks correctly','line_number':222,'multiline':False]
['text':' Verify against a smaller contract that verifyContract fails','line_number':235,'multiline':False]
['text':' Add a user with doubled-up readWrite and single dbAdmin on the test DB','line_number':245,'multiline':False]
['text':' Add a readWrite user','line_number':341,'multiline':False]
['text':' Change the user to be read-only','line_number':352,'multiline':False]
['text':' Make sure that invalidating the user causes the session to reload its privileges.','line_number':358,'multiline':False]
['text':' Refreshes cached data for invalid users','line_number':360,'multiline':False]
['text':' Delete the user.','line_number':368,'multiline':False]
['text':' Make sure that invalidating the user causes the session to reload its privileges.','line_number':371,'multiline':False]
['text':' Refreshes cached data for invalid users','line_number':373,'multiline':False]
['text':' Add a readWrite user','line_number':383,'multiline':False]
['text':' Change the user to be read-only','line_number':394,'multiline':False]
['text':' Even though the user's privileges have been reduced, since we've configured user','line_number':401,'multiline':False]
['text':' document lookup to fail, the authz session should continue to use its known out-of-date','line_number':402,'multiline':False]
['text':' privilege data.','line_number':403,'multiline':False]
['text':' Refreshes cached data for invalid users','line_number':405,'multiline':False]
['text':' Once we configure document lookup to succeed again, authorization checks should','line_number':411,'multiline':False]
['text':' observe the new values.','line_number':412,'multiline':False]
['text':' Refreshes cached data for invalid users','line_number':414,'multiline':False]
['text':' The empty RestrictionEnvironment will cause addAndAuthorizeUser to fail.','line_number':472,'multiline':False]
['text':' A clientSource from the 192.168.0.0/24 block will succeed in connecting to a server','line_number':476,'multiline':False]
['text':' listening on 192.168.0.2.','line_number':477,'multiline':False]
['text':' A client connecting from the explicitly allowlisted addresses can connect to a','line_number':481,'multiline':False]
['text':' server listening on 192.168.0.2','line_number':482,'multiline':False]
['text':' A client from either of these sources must connect to the server via the serverAddress','line_number':485,'multiline':False]
['text':' expressed in the restriction.','line_number':486,'multiline':False]
['text':' A client outside of these two sources cannot connect to the server.','line_number':492,'multiline':False]
['text':' An IPv6 client from the correct address may use the IPv6 restriction to connect to the','line_number':497,'multiline':False]
['text':' server.','line_number':498,'multiline':False]
['text':' A localhost client can connect to a localhost server, using the second addressRestriction','line_number':503,'multiline':False]
['text':' Silly case','line_number':506,'multiline':False]
['text':' Silly case','line_number':507,'multiline':False]
['text':' We only have find on the aggregation namespace.','line_number':862,'multiline':False]
['text':' We have insert but not remove on the $out namespace.','line_number':871,'multiline':False]
['text':' We have remove but not insert on the $out namespace.','line_number':877,'multiline':False]
['text':' bypassDocValidation','line_number':907,'multiline':True]
['text':' bypassDocValidation','line_number':932,'multiline':True]
['text':' bypassDocValidation','line_number':958,'multiline':True]
['text':' Recursively adds nested $lookup stages to 'pipelineBob', building a pipeline with','line_number':1069,'multiline':False]
['text':' 'levelsToGo' deep $lookup stages.','line_number':1070,'multiline':False]
['text':' checkAuthForAggregate() should succeed for an aggregate command that has a deeply nested','line_number':1089,'multiline':False]
['text':' $lookup sub-pipeline chain. Each nested $lookup stage adds 3 to the depth of the command','line_number':1090,'multiline':False]
['text':' object. We set 'maxLookupDepth' depth to allow for a command object that is at or just','line_number':1091,'multiline':False]
['text':' under max BSONDepth.','line_number':1092,'multiline':False]
['text':' apiStrict ','line_number':1106,'multiline':True]
['text':' We only have find on the aggregation namespace.','line_number':1166,'multiline':False]
['text':' We have find on the $lookup namespace but not on the $graphLookup namespace.','line_number':1177,'multiline':False]
['text':' We have find on the $graphLookup namespace but not on the $lookup namespace.','line_number':1183,'multiline':False]
['text':' With no privileges, there is no authorization to list collections','line_number':1264,'multiline':False]
['text':' The listCollections privilege authorizes the list collections command on the named database','line_number':1272,'multiline':False]
['text':' only.','line_number':1273,'multiline':False]
['text':' "test" DB is okay.','line_number':1277,'multiline':False]
['text':' "other" DB is not.','line_number':1280,'multiline':False]
['text':' Any privilege on a DB implies authorization to list one's own collections.','line_number':1286,'multiline':False]
['text':' Just own collections is okay.','line_number':1289,'multiline':False]
['text':' All collections is not.','line_number':1293,'multiline':False]
['text':' If we have a collection privilege, we have actions on that collection','line_number':1305,'multiline':False]
['text':' If we have a database privilege, we have actions on that database and all collections it','line_number':1313,'multiline':False]
['text':' contains','line_number':1314,'multiline':False]
['text':' If we have a privilege on anyNormalResource, we have actions on all databases and all','line_number':1323,'multiline':False]
['text':' collections they contain','line_number':1324,'multiline':False]
['text':' Strings require no privileges','line_number':1339,'multiline':False]
['text':' UUIDs cannot be parsed with default privileges','line_number':1342,'multiline':False]
['text':' Element must be either a string, or a UUID','line_number':1345,'multiline':False]
['text':' The useUUID privilege allows UUIDs to be parsed','line_number':1350,'multiline':False]
['text':' Verify we recorded the all the auth checks correctly','line_number':1360,'multiline':False]
['text':' Add a user without the restore role and ensure we can't bypass','line_number':1376,'multiline':False]
['text':' Add a user with restore role on admin db and ensure we can bypass','line_number':1391,'multiline':False]
['text':' Remove that user by logging out of the admin db and ensure we can't bypass anymore','line_number':1408,'multiline':False]
['text':' Add a user with the root role, which should confer restore role for cluster resource, and','line_number':1412,'multiline':False]
['text':' ensure we can bypass','line_number':1413,'multiline':False]
['text':' Remove non-privileged user by logging out of test db and ensure we can still bypass','line_number':1430,'multiline':False]
['text':' Remove privileged user by logging out of admin db and ensure we cannot bypass','line_number':1434,'multiline':False]
['text':' Create and authorize valid user with invalid expiration.','line_number':1440,'multiline':False]
['text':' Create and authorize valid user with no expiration.','line_number':1448,'multiline':False]
['text':' Assert that moving the clock forward has no impact on a session without expiration time.','line_number':1453,'multiline':False]
['text':' Assert that logout occurs normally.','line_number':1458,'multiline':False]
['text':' User with tenant ID #1 with basic read/write privileges on "test" should be able to write to','line_number':1484,'multiline':False]
['text':' tenant ID #1's test collection, and no others.','line_number':1485,'multiline':False]
['text':' User with tenant ID #2 with readWriteAny should be able to write to any of tenant ID #2's','line_number':1499,'multiline':False]
['text':' normal collections, and no others.','line_number':1500,'multiline':False]
['text':' User with no tenant ID with basic read/write privileges on "test" should be able to write to','line_number':1514,'multiline':False]
['text':' the no-tenant test collection, and no others.','line_number':1515,'multiline':False]
['text':' User with no tenant ID with root should be able to write to any tenant's normal','line_number':1526,'multiline':False]
['text':' collections, because boost::none acts as "any tenant" for privileges which don't specify a','line_number':1527,'multiline':False]
['text':' namespace/DB, and root has the useTenant privilege.','line_number':1528,'multiline':False]
['text':' User with no tenant ID with readWriteAnyDatabase should be able to write to normal','line_number':1539,'multiline':False]
['text':' collections with no tenant ID, because readWriteAnyDatabase lacks the useTenant privilege and','line_number':1540,'multiline':False]
['text':' thus can't read/write to other tenants' databases.','line_number':1541,'multiline':False]
['text':' User with tenant ID 2 with __system privileges should be able to write to any of tenant 2's','line_number':1554,'multiline':False]
['text':' collections, including system collections.','line_number':1555,'multiline':False]
['text':' User with no tenant ID with __system privileges should be able to write to any tenant's','line_number':1569,'multiline':False]
['text':' collections.','line_number':1570,'multiline':False]
['text':' Tests authorization session flow from unauthenticated to active to expired to active (reauth)','line_number':1583,'multiline':False]
['text':' to expired to logged out.','line_number':1584,'multiline':False]
['text':' Create and authorize a user with a valid expiration time set in the future.','line_number':1586,'multiline':False]
['text':' Assert that advancing the clock by 30 minutes does not trigger expiration.','line_number':1592,'multiline':False]
['text':' Refreshes session's authentication state based on expiration.','line_number':1596,'multiline':False]
['text':' Assert that the session is now expired and subsequently is no longer authenticated or','line_number':1599,'multiline':False]
['text':' authorized to do anything after fast-forwarding the clock source.','line_number':1600,'multiline':False]
['text':' Refreshes session's authentication state based on expiration.','line_number':1603,'multiline':False]
['text':' Authorize the same user again to simulate re-login.','line_number':1606,'multiline':False]
['text':' Expire the user again, this time by setting clock to the exact expiration time boundary.','line_number':1611,'multiline':False]
['text':' Assert that a different user cannot log in on the expired connection.','line_number':1616,'multiline':False]
['text':' Check that explicit logout from an expired connection works as expected.','line_number':1620,'multiline':False]
['text':' Tests authorization flow from unauthenticated to active (via token) to unauthenticated to','line_number':1634,'multiline':False]
['text':' active (via stateful connection) to unauthenticated.','line_number':1635,'multiline':False]
['text':' Create and authorize a security token user.','line_number':1638,'multiline':False]
['text':' Actual expiration used by AuthorizationSession will be the minimum of','line_number':1647,'multiline':False]
['text':' the token's known expiraiton time and the expiration time passed in.','line_number':1648,'multiline':False]
['text':' Reset for next test.','line_number':1656,'multiline':False]
['text':' Uses token's expiration','line_number':1662,'multiline':False]
['text':' Longer expiration does not override token.','line_number':1663,'multiline':False]
['text':' Shorter expiration does.','line_number':1664,'multiline':False]
['text':' Perform authentication checks.','line_number':1671,'multiline':False]
['text':' Assert that the session is authenticated and authorized as expected.','line_number':1676,'multiline':False]
['text':' Since user has a tenantId, we expect it should only have access to its own collections.','line_number':1679,'multiline':False]
['text':' Assert that another user can't be authorized while the security token is auth'd.','line_number':1683,'multiline':False]
['text':' Check that starting a new request without the security token decoration results in token','line_number':1687,'multiline':False]
['text':' user logout.','line_number':1688,'multiline':False]
['text':' Assert that a connection-based user with an expiration policy can be authorized after','line_number':1693,'multiline':False]
['text':' token logout.','line_number':1694,'multiline':False]
['text':' Check that logout proceeds normally.','line_number':1702,'multiline':False]
['text':' Create a new validated tenancy scope for the readWriteAny tenant user.','line_number':1708,'multiline':False]
['text':' Ensure that even though it has the readWriteAny role, this user only has privileges on','line_number':1717,'multiline':False]
['text':' collections with matching tenant ID.','line_number':1718,'multiline':False]
['text':' Check that starting a new request without the security token decoration results in token','line_number':1724,'multiline':False]
['text':' user logout.','line_number':1725,'multiline':False]
['text':' tenantId ','line_number':1779,'multiline':True]
['text':' tenantId ','line_number':1782,'multiline':True]
['text':' tenantId ','line_number':1785,'multiline':True]
['text':' If we have a system_buckets exact priv','line_number':1791,'multiline':False]
['text':' If we have an any system_buckets priv','line_number':1815,'multiline':False]
['text':' If we have a system_buckets in a db priv','line_number':1840,'multiline':False]
['text':' If we have a system_buckets for a coll in any db priv','line_number':1866,'multiline':False]
['text':' If we have a system.buckets collection privilege, we have actions on that collection','line_number':1891,'multiline':False]
['text':' If we have any buckets in a database privilege, we have actions on that database and all','line_number':1899,'multiline':False]
['text':' system.buckets collections it contains','line_number':1900,'multiline':False]
['text':' If we have a privilege on any systems buckets in any db, we have actions on all databases and','line_number':1912,'multiline':False]
['text':' system.buckets.<coll> they contain','line_number':1913,'multiline':False]
['text':' If we have readAnyDatabase, make sure we can read system.buckets anywhere','line_number':1923,'multiline':False]
['text':' If we have readAnyDatabase, make sure we can read and write system.buckets anywhere','line_number':1933,'multiline':False]
['text':' If we have readAnyDatabase, make sure we can do admin stuff on system.buckets anywhere','line_number':1943,'multiline':False]
['text':' If we have readAnyDatabase, make sure we can do restore stuff on system.buckets anywhere','line_number':1954,'multiline':False]
['text':' If we have readAnyDatabase, make sure we can do restore stuff on system.buckets anywhere','line_number':1964,'multiline':False]
['text':' If we have clusterMonitor, make sure the following actions are authorized o any system','line_number':1974,'multiline':False]
['text':' bucket: collStats, dbStats, getDatabaseVersion, getShardVersion and indexStats.','line_number':1975,'multiline':False]
['text':' namespace','line_number':2011,'multiline':False]
['text':' namespace mongo','line_number':2012,'multiline':False]
