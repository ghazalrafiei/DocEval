['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':'*
 * Common implementation of AuthzManagerExternalState for systems where role
 * and user information are stored locally.
 ','line_number':61,'multiline':True]
['text':'*
     * Finds a document matching "query" in "collectionName", and store a shared-ownership
     * copy into "result".
     *
     * Returns Status::OK() on success.  If no match is found, returns
     * ErrorCodes::NoMatchingDocument.  Other errors returned as appropriate.
     ','line_number':107,'multiline':True]
['text':'*
     * Checks for the existance of a document matching "query" in "collectionName".
     ','line_number':119,'multiline':True]
['text':'*
     * Finds all documents matching "filter" in "collectionName".  For each document returned,
     * calls the function resultProcessor on it.
     ','line_number':126,'multiline':True]
['text':'*
     * Ensures a consistent logically valid view of the data across users and roles collections.
     *
     * If running with lock-free enabled, a storage snapshot is opened that subsequent reads will
     * all use for a consistent point-in-time data view.
     *
     * Otherwise, a MODE_S lock is taken on the roles collection to ensure no role changes are made
     * across reading first the users collection and then the roles collection. This ensures an
     * 'atomic' view of the roles and users collection data.
     *
     * The locks, or lock-free consistent data view, prevent the possibility of having permissions
     * available which are logically invalid. This is how reads/writes across two collections are
     * made 'atomic'.
     ','line_number':146,'multiline':True]
['text':'*
     * Set an auto-releasing shared lock on the roles database.
     * This allows us to maintain a consistent state during user acquisiiton.
     *
     * virtual to allow Mock to not lock anything.
     ','line_number':172,'multiline':True]
['text':'*
     * Once *any* privilege document is observed we cache the state forever,
     * even if these collections are emptied/dropped.
     * This ensures that the only way to recover localHostAuthBypass is to
     * is to clear that in-memory cache by restarting the server.
     ','line_number':181,'multiline':True]
['text':' namespace mongo','line_number':190,'multiline':False]
