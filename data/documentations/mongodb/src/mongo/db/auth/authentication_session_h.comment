['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':'*
 * Type representing an ongoing authentication session.
 ','line_number':67,'multiline':True]
['text':'*
     * This enum enumerates the various steps that need access to the AuthenticationSession.
     ','line_number':75,'multiline':True]
['text':'*
     * This guard creates and destroys the session as appropriate for the currentStep.
     ','line_number':89,'multiline':True]
['text':'*
     * Gets the authentication session for the given "client".
     *
     * This function always returns a valid pointer.
     ','line_number':108,'multiline':True]
['text':'*
     * Return an identifer of the type of session, so that a caller can safely cast it and
     * extract the type-specific data stored within.
     *
     * If a mechanism has not already been set, this may return nullptr.
     ','line_number':118,'multiline':True]
['text':'*
     * This returns true if the session started with StepType::kSpeculativeSaslStart or
     * StepType::kSpeculativeAuthenticate.
     ','line_number':128,'multiline':True]
['text':'*
     * This returns the mechanism name for this session.
     ','line_number':136,'multiline':True]
['text':'*
     * This returns the user portion of the UserName which may be an empty StringData.
     ','line_number':143,'multiline':True]
['text':'*
     * This returns the database portion of the UserName which may be an empty StringData.
     ','line_number':150,'multiline':True]
['text':'*
     * This returns the last processed step of this session.
     ','line_number':157,'multiline':True]
['text':'*
     * Set the mechanism name for this session.
     *
     * If the mechanism name is not recognized, this will throw.
     ','line_number':164,'multiline':True]
['text':'*
     * Update the database for this session.
     *
     * The database will be validated against the current database for this session.
     ','line_number':171,'multiline':True]
['text':' isMechX509 ','line_number':177,'multiline':True]
['text':'*
     * Update the user name for this session.
     *
     * The user name will be validated against the current user name for this session.
     ','line_number':180,'multiline':True]
['text':'*
     * Set the last user name used with `saslSupportedMechs` for this session.
     *
     * This user name does no emit an exception when it conflicts, but it does create an audit
     * entry.
     ','line_number':187,'multiline':True]
['text':'*
     * Mark the session as a cluster member.
     *
     * This is used for x509 authentication since it lacks a mechanism in the traditional sense.
     ','line_number':195,'multiline':True]
['text':'*
     * Set the mechanism for the session.
     *
     * This function is only valid to invoke when there is no current mechanism.
     ','line_number':202,'multiline':True]
['text':'*
     * Mark the session as succssfully authenticated.
     ','line_number':209,'multiline':True]
['text':'*
     * Mark the session as unable to authenticate.
     ','line_number':214,'multiline':True]
['text':'*
     * Returns the metrics recorder for this Authentication Session.
     * The session retains ownership of this pointer.
     ','line_number':219,'multiline':True]
['text':'*
     * This function invokes a functor with a StepGuard on the stack and observes any exceptions
     * emitted.
     ','line_number':227,'multiline':True]
['text':' If speculative authentication failed, then we do not want to mark the session as','line_number':242,'multiline':False]
['text':' failed in order to allow the session to persist into another authentication','line_number':243,'multiline':False]
['text':' attempt. If we ran into an exception for another reason, mark the session as failed.','line_number':244,'multiline':False]
['text':'*
     * Convert a StepType to a constant string.
     ','line_number':256,'multiline':True]
['text':' The user name can be provided in advance by saslSupportedMechs.','line_number':292,'multiline':False]
['text':' The user name can be provided partially by the command namespace or in full by a client','line_number':298,'multiline':False]
['text':' certificate. If we have a authN mechanism, we use its principal name instead.','line_number':299,'multiline':False]
['text':' namespace mongo','line_number':305,'multiline':False]
