['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':' There should be a ConflictPlaceHolderNode along the "a.b" path.','line_number':111,'multiline':False]
['text':' There should be a RenameNode along the "c.d" path.','line_number':118,'multiline':False]
['text':'*
 * Used to test if the fields in an input UpdateObjectNode match an expected set of fields.
 ','line_number':1129,'multiline':True]
['text':' There are no expected fields that aren't in the UpdateInternalNode. There is no way to check','line_number':1140,'multiline':False]
['text':' if UpdateInternalNodes contains any fields that are not in the expected set, because the','line_number':1141,'multiline':False]
['text':' UpdateInternalNodes API does not expose its list of child fields in any way other than','line_number':1142,'multiline':False]
['text':' getChild().','line_number':1143,'multiline':False]
['text':'*
 * The leading zero case is interesting, because if we try to look up an array element by the index
 * string, a leading zero will cause the lookup to fail. That is, even if 'element' is an array,
 * element["02"] will not find the element with subscript 2.
 ','line_number':2487,'multiline':True]
['text':'*
 * This test mimics a failure we saw in SERVER-29762. The failure occurred when the 'a.10' update
   (which was applied first) padded the empty array to have 10 elements, but the new padding
   elements did not have field names to match their array indexes. As a result, the 'a.2' update
   failed.
 ','line_number':2517,'multiline':True]
['text':'*
 * This test, RenameUpwardFails, and RenameDownwardFails mirror similar tests in
 * rename_node_test.cpp. They exist to make sure that UpdateObjectNode::parseAndMerge() does not
 * observe a conflict between the RenameNode and the dummy ConflictPlaceHolderNode (generating an
 * "Update created a conflict" error message that does not really apply to these cases) before it
 * observes the more specific errors in RenameNode::init().
 ','line_number':2756,'multiline':True]
['text':' namespace','line_number':2863,'multiline':False]
['text':' namespace mongo','line_number':2864,'multiline':False]
