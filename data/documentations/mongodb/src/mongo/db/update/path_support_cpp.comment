['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':' unnamed namespace','line_number':78,'multiline':False]
['text':' If root is empty or the prefix is so, there's no point in looking for a prefix.','line_number':84,'multiline':False]
['text':' Loop through prefix's parts. At each iteration, check that the part ('curr') exists','line_number':90,'multiline':False]
['text':' in 'root' and that the type of the previous part ('prev') allows for children.','line_number':91,'multiline':False]
['text':' If prefix wants to reach 'curr' by applying a non-numeric index to an array','line_number':98,'multiline':False]
['text':' 'prev', or if 'curr' wants to traverse a leaf 'prev', then we'd be in a','line_number':99,'multiline':False]
['text':' non-viable path (see definition on the header file).','line_number':100,'multiline':False]
['text':' If we couldn't find the next field part of the prefix in the document or if the','line_number':121,'multiline':False]
['text':' field part we're in constitutes a non-viable path, we can stop looking.','line_number':122,'multiline':False]
['text':' We broke out of the loop because one of four things happened. (a) 'prefix' and','line_number':128,'multiline':False]
['text':' 'root' have nothing in common, (b) 'prefix' is not viable in 'root', (c) not all the','line_number':129,'multiline':False]
['text':' parts in 'prefix' exist in 'root', or (d) all parts do. In each case, we need to','line_number':130,'multiline':False]
['text':' figure out what index and Element pointer to return.','line_number':131,'multiline':False]
['text':' Sanity check that 'idxField' is an actual part.','line_number':165,'multiline':False]
['text':' If we are creating children under an array and a numeric index is next, then perhaps','line_number':173,'multiline':False]
['text':' we need padding.','line_number':174,'multiline':False]
['text':' If there is a next field, that would be an array element. We'd like to mark that','line_number':190,'multiline':False]
['text':' field because we create array elements differently than we do regular objects.','line_number':191,'multiline':False]
['text':' Create all the remaining parts but the last one.','line_number':197,'multiline':False]
['text':' If this field is an array element, we wrap it in an object (because array','line_number':204,'multiline':False]
['text':' elements are wraped in { "N": <element> } objects.','line_number':205,'multiline':False]
['text':' TODO pass empty StringData to makeElementObject, when that's supported.','line_number':207,'multiline':False]
['text':' it's an array ','line_number':208,'multiline':True]
['text':' Attach the last element. Here again, if we're in a field that is an array element,','line_number':237,'multiline':False]
['text':' we wrap it in an object first.','line_number':238,'multiline':False]
['text':' TODO pass empty StringData to makeElementObject, when that's supported.','line_number':240,'multiline':False]
['text':' it's an array ','line_number':241,'multiline':True]
['text':' Get the existing parents of this path','line_number':279,'multiline':False]
['text':' TODO: All this is pretty awkward, why not return the position immediately after the','line_number':282,'multiline':False]
['text':' consumed path or use a signed sentinel?  Why is it a special case when we've consumed the','line_number':283,'multiline':False]
['text':' whole path?','line_number':284,'multiline':False]
['text':' Inc the path by one *unless* we matched nothing','line_number':289,'multiline':False]
['text':' The full path exists already in the document, so just set a value','line_number':298,'multiline':False]
['text':' Construct the rest of the path we need with empty documents and set the value','line_number':301,'multiline':False]
['text':' We may have an equality match to an object at a higher point in the pattern path, check','line_number':312,'multiline':False]
['text':' all path prefixes for equality matches','line_number':313,'multiline':False]
['text':' ex: path: 'a.b', query : { 'a' : { b : <value> } }','line_number':314,'multiline':False]
['text':' ex: path: 'a.b.c', query : { 'a.b' : { c : <value> } }','line_number':315,'multiline':False]
['text':' "" element is *not* a parent of anyone but itself','line_number':317,'multiline':False]
['text':'*
 * Helper function to check if the current equality match paths conflict with a new path.
 ','line_number':334,'multiline':True]
['text':' Extract equality matches','line_number':363,'multiline':False]
['text':' Found a conflicting path that is not a prefix','line_number':372,'multiline':False]
['text':' Ignore if this path is unrelated to the full paths','line_number':377,'multiline':False]
['text':' Further explore $and matches','line_number':390,'multiline':False]
['text':' namespace pathsupport','line_number':425,'multiline':False]
['text':' namespace mongo','line_number':426,'multiline':False]
