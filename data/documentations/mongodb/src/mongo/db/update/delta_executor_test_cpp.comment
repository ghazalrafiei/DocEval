['text':'*
 *    Copyright (C) 2020-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':'*
 * Return a bitmask where each bit indicates whether the matching position in the indexData
 * argument is for an index that has been affected by the modification described by the logEntry
 * argument. E.g., a return value of 0 means "no indexes are affected", a return value of 1 (2^0)
 * means that the index whose UpdateIndexData descriptor is placed in the first position of the
 * indexData argument is affected by the changes, a return value of 2 (2^1) points to the second
 * entry in the indexData vector, a return value of 3 (1+2) indicates that both first and second
 * entry in the idnexDaa vector are affected by the modification.
 ','line_number':53,'multiline':True]
['text':' When a path in the diff is a prefix of index path.','line_number':79,'multiline':False]
['text':' When a path in the diff is same as index path.','line_number':90,'multiline':False]
['text':' When the index path is a prefix of a path in the diff.','line_number':101,'multiline':False]
['text':' With common parent, but path diverges.','line_number':112,'multiline':False]
['text':' When a path in the diff is a prefix of index path.','line_number':132,'multiline':False]
['text':' When a path in the diff is same as index path.','line_number':143,'multiline':False]
['text':' When the index path is a prefix of a path in the diff.','line_number':154,'multiline':False]
['text':' With common parent, but path diverges.','line_number':165,'multiline':False]
['text':' 'UpdateIndexData' will canonicalize the path and remove all numeric components. So the '2'','line_number':181,'multiline':False]
['text':' and '33' components should not matter.','line_number':182,'multiline':False]
['text':' When a path in the diff is a prefix of index path.','line_number':186,'multiline':False]
['text':' When a path in the diff is same as index path.','line_number':197,'multiline':False]
['text':' When the index path is a prefix of a path in the diff.','line_number':208,'multiline':False]
['text':' With common parent, but path diverges.','line_number':219,'multiline':False]
['text':' Insert numeric fields at the top level, which means they are guaranteed to be object key','line_number':238,'multiline':False]
['text':' names (rather than possibly being indices of an array).','line_number':239,'multiline':False]
['text':' Insert numeric fields not at the top level, which means they may possibly be indices of an','line_number':269,'multiline':False]
['text':' array.','line_number':270,'multiline':False]
['text':' Numeric components will be ignored, so they should not matter.','line_number':298,'multiline':False]
['text':' Test resize.','line_number':302,'multiline':False]
['text':' When the index path is a prefix of a path in the diff and also involves numeric','line_number':313,'multiline':False]
['text':' components along the way. The numeric components should always be ignored.','line_number':314,'multiline':False]
['text':' When inserting a sub-object into array, and the sub-object diverges from the index path.','line_number':325,'multiline':False]
['text':' When a common array path element is updated, but the paths diverge at the last element.','line_number':336,'multiline':False]
['text':' 'UpdateIndexData' will canonicalize the path and remove all numeric components. So the '9'','line_number':353,'multiline':False]
['text':' and '10' components should not matter.','line_number':354,'multiline':False]
['text':' Test resize.','line_number':358,'multiline':False]
['text':' Updating a sub-array element.','line_number':369,'multiline':False]
['text':' Updating an array element.','line_number':380,'multiline':False]
['text':' namespace','line_number':392,'multiline':False]
['text':' namespace mongo','line_number':393,'multiline':False]
