['text':'*
 *    Copyright (C) 2020-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':'*
 * Given a FieldRef, creates a RuntimeUpdatePath based on it, assuming that every numeric component
 * is an array index.
 ','line_number':53,'multiline':True]
['text':'*
 * Given a FieldRef, creates a RuntimeUpdatePath based on it, assuming that every component is a
 * field name.
 ','line_number':69,'multiline':True]
['text':' Element is an array. Modifying a sub-element of mmb::Element does not store the data','line_number':82,'multiline':False]
['text':' serialized. So we need to call Element::writeToArray() in those cases to serialize the array.','line_number':83,'multiline':False]
['text':' We explicity modify the sub-element so that this logic can be tested.','line_number':84,'multiline':False]
['text':' Element is an obj. Modifying a sub-element of mmb::Element does not store the data','line_number':91,'multiline':False]
['text':' serialized. So we need to call Element::writeChildren() in those cases to serialize the','line_number':92,'multiline':False]
['text':' object. We explicity modify the sub-element so that this logic can be tested.','line_number':93,'multiline':False]
['text':' Element is a scalar.','line_number':97,'multiline':False]
['text':' Element is an obj. Modifying a sub-element of mmb::Element does not store the data','line_number':119,'multiline':False]
['text':' serialized. So we need to call Element::writeChildren() in those cases to serialize the','line_number':120,'multiline':False]
['text':' object. We explicity modify the sub-element so that this logic can be tested.','line_number':121,'multiline':False]
['text':' Element is an array.','line_number':125,'multiline':False]
['text':' Element is a scalar.','line_number':129,'multiline':False]
['text':' idxOfFirstNewComponent (unused)','line_number':167,'multiline':False]
['text':' Test where only a 'root' object exists and logCreateField() needs to create sub-objects','line_number':179,'multiline':False]
['text':' recursively.','line_number':180,'multiline':False]
['text':' Element is an obj.','line_number':279,'multiline':False]
['text':' The order of the update of array elements need not be maintained by the caller.','line_number':286,'multiline':False]
['text':' namespace','line_number':336,'multiline':False]
['text':' namespace mongo::v2_log_builder','line_number':337,'multiline':False]
