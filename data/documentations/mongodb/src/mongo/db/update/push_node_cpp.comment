['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':'*
 * std::abs(LLONG_MIN) results in undefined behavior on 2's complement systems because the
 * absolute value of LLONG_MIN cannot be represented in a 'long long'.
 *
 * If the input is LLONG_MIN, will return std::abs(LLONG_MIN + 1).
 ','line_number':65,'multiline':True]
['text':' namespace','line_number':75,'multiline':False]
['text':' Parse $each.','line_number':105,'multiline':False]
['text':' We already checked for a $each clause.','line_number':107,'multiline':False]
['text':' Parse (optional) $slice.','line_number':120,'multiline':False]
['text':' Parse (optional) $sort.','line_number':135,'multiline':False]
['text':' Parse (optional) $position.','line_number':163,'multiline':False]
['text':' No $each clause. We treat the value of $push as the element to add to the array.','line_number':178,'multiline':False]
['text':' This serialization function always produces $each regardless of whether the input','line_number':190,'multiline':False]
['text':' contained it.','line_number':191,'multiline':False]
['text':' The sort pattern is stored in a dummy enclosing object that we must unwrap.','line_number':201,'multiline':False]
['text':' We assume that no array has more than std::numerical_limits<long long>::max() elements.','line_number':223,'multiline':False]
['text':' We insert the first element of 'valuesToPush' at the location requested in the 'position'','line_number':226,'multiline':False]
['text':' variable.','line_number':227,'multiline':False]
['text':' We insert all the rest of the elements after the one we just','line_number':249,'multiline':False]
['text':' inserted.','line_number':250,'multiline':False]
['text':'','line_number':251,'multiline':False]
['text':' TODO: The use of std::accumulate here is maybe questionable','line_number':252,'multiline':False]
['text':' given that we are ignoring the return value. MSVC flagged this,','line_number':253,'multiline':False]
['text':' and we worked around by tagging the result as unused.','line_number':254,'multiline':False]
['text':' We can only hit this error if we are updating an existing path.','line_number':272,'multiline':False]
['text':' A negative value in '_slice' trims the array down to abs(_slice) but removes','line_number':296,'multiline':False]
['text':' entries from the front of the array instead of the back.','line_number':297,'multiline':False]
['text':' This update only modified the array by appending entries to the end. Rather than writing','line_number':324,'multiline':False]
['text':' out the entire contents of the array, we create oplog entries for the newly appended','line_number':325,'multiline':False]
['text':' elements.','line_number':326,'multiline':False]
['text':' We have to copy the field ref provided in order to use RuntimeUpdatePathTempAppend.','line_number':330,'multiline':False]
['text':' namespace mongo','line_number':355,'multiline':False]
