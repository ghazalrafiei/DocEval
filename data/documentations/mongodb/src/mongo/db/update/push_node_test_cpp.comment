['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':' Now with a collator.','line_number':682,'multiline':False]
['text':' Some of the below tests apply multiple different update modifiers. This special check function','line_number':696,'multiline':False]
['text':' prints out the modifier when it observes a failure, which will help with diagnosis.','line_number':697,'multiline':False]
['text':' Check succeeded.','line_number':703,'multiline':False]
['text':' We repeat the same test for several different values of $slice.','line_number':718,'multiline':False]
['text':' We repeat the same test with for several different values of $slice.','line_number':749,'multiline':False]
['text':' In this test, we apply','line_number':776,'multiline':False]
['text':'   {$push: {a: {$each: [{a: 2, b: 1}, {a: 1, b: 1}], $slice: N, $sort: {a: I, b: J}}}} AND','line_number':777,'multiline':False]
['text':'   {$push: {a: {$each: [{a: 2, b: 1}, {a: 1, b: 1}], $slice: N, $sort: {b: J, a: I}}}}','line_number':778,'multiline':False]
['text':' for every N in [-5, 5], I in {-1, 1}, and J in {-1, 1}.','line_number':779,'multiline':False]
['text':' Each application is to the test document {a: [{a: 2, b: 3}, {a: 3, b: 1}]}.','line_number':780,'multiline':False]
['text':' These nested loops compute all of the modifiers we want to test, as well as what the result','line_number':795,'multiline':False]
['text':' of their applications should be.','line_number':796,'multiline':False]
['text':' Once we've generated testDataList, we actually apply and verify all the modifiers.','line_number':856,'multiline':False]
['text':' namespace','line_number':1087,'multiline':False]
['text':' namespace mongo','line_number':1088,'multiline':False]
