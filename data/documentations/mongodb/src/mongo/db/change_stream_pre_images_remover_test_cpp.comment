['text':'*
 *    Copyright (C) 2023-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':'* tenantId *','line_number':138,'multiline':True]
['text':'* tenantId *','line_number':148,'multiline':True]
['text':'* tenantId *','line_number':160,'multiline':True]
['text':' namespace','line_number':163,'multiline':False]
['text':' All truncate markers require a creation method. Unless specifically testing the creation','line_number':170,'multiline':False]
['text':' method, the creation method is arbitrary and should not impact post-initialisation behavior.','line_number':171,'multiline':False]
['text':' Advance the clock to generate valid Timestamp objects. Timestamp objects in this test are','line_number':176,'multiline':False]
['text':' generated with the walltime, and Timestamp uses the higher 32 bits of a Date_t as the','line_number':177,'multiline':False]
['text':' secs part. Timestamps which have secs == 0 are considered null.','line_number':178,'multiline':False]
['text':' Populates the pre-images collection with 'numRecords'. Generates pre-images with Timestamps 1','line_number':194,'multiline':False]
['text':' millisecond apart starting at 'startOperationTime'.','line_number':195,'multiline':False]
['text':' Inserts a pre-image into the pre-images collection. The pre-image inserted has a 'ts' of','line_number':231,'multiline':False]
['text':' 'preImageTS', and an 'operationTime' of either (1) 'preImageOperationTime', when explicitly','line_number':232,'multiline':False]
['text':' specified, or (2) a 'Date_t' derived from the 'preImageTS'.','line_number':233,'multiline':False]
['text':' Set up OpObserver so that the test will append actual oplog entries to the oplog using','line_number':303,'multiline':False]
['text':' repl::logOp().','line_number':304,'multiline':False]
['text':' Forces the 'lastApplied' Timestamp to be 'targetTimestamp'. The ReplicationCoordinator keeps','line_number':317,'multiline':False]
['text':' track of OpTimeAndWallTime for 'lastApplied'. This method exclusively changes the','line_number':318,'multiline':False]
['text':' 'opTime.timestamp', but not the other values (term, wallTime, etc) associated with','line_number':319,'multiline':False]
['text':' 'lastApplied'.','line_number':320,'multiline':False]
['text':' Verify the Timestamp is set accordingly.','line_number':329,'multiline':False]
['text':' A 'boost::none' tenantId implies a single tenant environment.','line_number':334,'multiline':False]
['text':' When 'expireAfterSeconds' is off, defaults to comparing the 'lastRecord's Timestamp of oldest','line_number':340,'multiline':False]
['text':' marker with the Timestamp of the ealiest oplog entry.','line_number':341,'multiline':False]
['text':'','line_number':342,'multiline':False]
['text':' When 'expireAfterSeconds' is on, defaults to comparing the 'lastRecord's wallTime with','line_number':343,'multiline':False]
['text':' the current time - 'expireAfterSeconds',  which is already tested as a part of the','line_number':344,'multiline':False]
['text':' ChangeStreamPreImageExpirationPolicyTest.','line_number':345,'multiline':False]
['text':' With no explicit 'expireAfterSeconds', excess markers are determined by whether the Timestamp','line_number':349,'multiline':False]
['text':' of the 'lastRecord' in the oldest marker is greater than the Timestamp of the earliest oplog','line_number':350,'multiline':False]
['text':' entry.','line_number':351,'multiline':False]
['text':' Ensure that the generated Timestamp associated with the lastRecord of the marker is less than','line_number':358,'multiline':False]
['text':' the earliest oplog entry Timestamp.','line_number':359,'multiline':False]
['text':' tenantId ','line_number':370,'multiline':True]
['text':' With no explicit 'expireAfterSeconds', excess markers are determined by whether the Timestamp','line_number':383,'multiline':False]
['text':' of the 'lastRecord' in the oldest marker is greater than the Timestamp of the earliest oplog','line_number':384,'multiline':False]
['text':' entry.','line_number':385,'multiline':False]
['text':' Ensure that the generated Timestamp associated with the lastRecord of the marker is less than','line_number':392,'multiline':False]
['text':' the earliest oplog entry Timestamp.','line_number':393,'multiline':False]
['text':' tenantId ','line_number':404,'multiline':True]
['text':' Basic case.','line_number':453,'multiline':False]
['text':' Min Timestamp.','line_number':465,'multiline':False]
['text':' Max Timestamp','line_number':477,'multiline':False]
['text':' Extra large 'applyOpsIndex'.','line_number':489,'multiline':False]
['text':'','line_number':490,'multiline':False]
['text':' Parsing a RecordId with an underlying KeyString representation into BSON discards type bits.','line_number':491,'multiline':False]
['text':' Since the 'applyOpsIndex' is the only field in 'ChangeStreamPreImageId' that requires type','line_number':492,'multiline':False]
['text':' bits to generate the original value from KeyString, ensure different numeric values of','line_number':493,'multiline':False]
['text':' 'applyOpsIndex' don't impact the Timestamp retrieval.','line_number':494,'multiline':False]
['text':' Extra large 'applyOpsIndex' with Timestamp::max().','line_number':506,'multiline':False]
['text':' TODO SERVER-70591: Remove this test as the feature flag will be removed.','line_number':519,'multiline':False]
['text':' Verify that expiration works as expected.','line_number':530,'multiline':False]
['text':' Assert that internal scans do not occur in the old collection scan approach.','line_number':536,'multiline':False]
['text':' Verify that expiration works as expected.','line_number':555,'multiline':False]
['text':' Assert that internal scans still occur while the collection exists.','line_number':561,'multiline':False]
['text':' Assert that internal scans don't occur if the collection is dropped and no more documents','line_number':567,'multiline':False]
['text':' exist.','line_number':568,'multiline':False]
['text':' One more scan occurs after the drop verifying there's no more data and it is safe to ignore','line_number':574,'multiline':False]
['text':' in the future.','line_number':575,'multiline':False]
['text':' Advance the clock to align with the most recent pre-image inserted.','line_number':594,'multiline':False]
['text':' Move the clock further ahead to simulate startup with a collection of expired pre-images.','line_number':597,'multiline':False]
['text':' Advance the clock to align with the most recent pre-image inserted.','line_number':634,'multiline':False]
['text':' Insert a pre-image that would be expired by truncate given its 'ts' is greater than','line_number':639,'multiline':False]
['text':' the 'allDurable'. Force the 'operationTime' so the pre-image is expired by it's','line_number':640,'multiline':False]
['text':' 'operationTime'.','line_number':641,'multiline':False]
['text':' Pre-images eligible for truncation must have timestamps less than both the 'allDurable' and','line_number':644,'multiline':False]
['text':' 'lastApplied' timestamps. In this test case, demonstrate that the 'allDurable' timestamp is','line_number':645,'multiline':False]
['text':' respected even if the most recent pre-image 'ts' is less than the 'lastApplied'.','line_number':646,'multiline':False]
['text':' Force all pre-images to be expired by 'operationTime'.','line_number':649,'multiline':False]
['text':' namespace mongo','line_number':659,'multiline':False]
