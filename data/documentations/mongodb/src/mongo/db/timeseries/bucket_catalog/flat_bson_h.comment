['text':'*
 *    Copyright (C) 2021-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':'*
 * Stores a BSON hierarchy in a flat contigous memory structure. Optimized for fast traversal
 * in lock-step of a BSONObj with the same internal field order. It does this at the expense of
 * insert performance which should be a rare operation when adding measurements to a timeseries
 * bucket. Usually we need to traverse the FlatBSONStore structure to check if we need to update any
 * values, or to check for compatibility with an incoming measurement.
 *
 * Provides search capability when field order is not what was expected and contains a fallback to
 * map lookup when linear search does not find elements within a constant search threshold.
 ','line_number':52,'multiline':True]
['text':'*
     * Element data type
     ','line_number':65,'multiline':True]
['text':'*
     * Stored data for an Element
     ','line_number':75,'multiline':True]
['text':'*
         * DataType stored by this Data
         ','line_number':82,'multiline':True]
['text':'*
         * Flag to indicate if this FlatBSON::Data was updated since last clear.
         ','line_number':87,'multiline':True]
['text':'*
         * Clear update flag.
         ','line_number':92,'multiline':True]
['text':'*
         * Value stored by this Data. Only valid to call if type is kValue.
         ','line_number':97,'multiline':True]
['text':'*
         * Sets the type of this Data.
         ','line_number':102,'multiline':True]
['text':'*
     * Internal storage type to manage iterator offsets needed to implement a tree structure in a
     * flat buffer.
     ','line_number':120,'multiline':True]
['text':' Iterator offset to the entry after the last subelement','line_number':126,'multiline':False]
['text':' Iterator offset to the parent entry','line_number':128,'multiline':False]
['text':' Data bearing element, exposed through public interfaces','line_number':130,'multiline':False]
['text':' Map for faster searches. Contain mapping from field name to iterator offset to','line_number':132,'multiline':False]
['text':' subelement. Only instantiated when we've depleted our allowed linear search depth.','line_number':133,'multiline':False]
['text':'*
     * Forward iterator over subelements in an Obj.
     ','line_number':138,'multiline':True]
['text':'*
     * Forward iterator over subelements in an ObjView.
     ','line_number':165,'multiline':True]
['text':'*
     * Represents an 'Object' within the FlatBSONStore. Analogous BSONObj for BSON. Provides
     * iteration, insertion and search capability for subelements.
     ','line_number':193,'multiline':True]
['text':'*
         * Copying an Obj copies the internal position. It is not allowed to copy to an Obj owned by
         * a different FlatBSONStore.
         ','line_number':202,'multiline':True]
['text':'*
         * Access to the element containing user-data such as field names and stored values.
         ','line_number':208,'multiline':True]
['text':'*
         * Creates an Obj to the parent of this Obj.
         ','line_number':214,'multiline':True]
['text':'*
         * Creates an Obj for a subelement of this Obj.
         ','line_number':219,'multiline':True]
['text':'*
         * Returns the iterator position of this Obj.
         ','line_number':224,'multiline':True]
['text':'*
         * Searches this Obj for the subelement with the provided fieldName. Performs linear search
         * from start to end with a maximum search threshold. When the maximum search threshold is
         * reached this Object will perform all subsequent searches using a map lookup.
         *
         * The returned Iterator may be outside of the range [start, last).
         * If the element is not found 'last' is returned.
         ','line_number':229,'multiline':True]
['text':'*
         * As above but last = end()
         ','line_number':239,'multiline':True]
['text':'*
         * Insert a new element before the position 'pos'. Invalidates all previously returned
         * Iterators and Obj. This Obj remain valid.
         *
         * Returns an iterator to the newly inserted element together with the end iterator for this
         * Obj.
         ','line_number':244,'multiline':True]
['text':'*
         * Iteration for subelements of this Obj.
         ','line_number':253,'multiline':True]
['text':'*
     * Access to the root Obj for this store.
     ','line_number':270,'multiline':True]
['text':'*
     * Calculate and return the cumulative memory usage of all entries.
     ','line_number':277,'multiline':True]
['text':'*
 * Manages updating and extracting values in a FlatBSONStore.
 ','line_number':286,'multiline':True]
['text':'*
     * Updates the stored fields provided by 'doc', ignoring the 'metaField' field.
     ','line_number':295,'multiline':True]
['text':' Helper for update() above to provide recursion of FlatBSONStore element together with a','line_number':305,'multiline':False]
['text':' BSONElement','line_number':306,'multiline':False]
['text':' Helper to search and compare field names between FlatBSONStore::Obj and BSONObj.','line_number':315,'multiline':False]
['text':'*
     * Appends the BSONObj represented by the FlatBSONStore to the builder.
     ','line_number':322,'multiline':True]
['text':'*
     * Appends updates, if any, to the builder. Returns whether any updates were appended.
     ','line_number':334,'multiline':True]
['text':'*
     * Clears the '_updated' flag on this Iterator and all its subelements.
     ','line_number':342,'multiline':True]
['text':'*
 * Buffer value for a Data of type kValue, storing a full BSONElement value.
 ','line_number':357,'multiline':True]
['text':'*
 * Base class for an element stored in a FlatBSONStore.
 ','line_number':371,'multiline':True]
['text':'*
     * Field name component
     ','line_number':376,'multiline':True]
['text':'*
     * Returns true if this Element is only used for Array storage. Array field names are not
     * used and may be claimed by an Object.
     ','line_number':383,'multiline':True]
['text':'*
 * Element representing both the min and max values for a given field path across all measurements
 * in a bucket.
 ','line_number':400,'multiline':True]
['text':'*
     * Min data component access
     ','line_number':413,'multiline':True]
['text':'*
     * Max data component access
     ','line_number':419,'multiline':True]
['text':'*
 * Manages Min and Max values for timeseries measurements within a bucket.
 ','line_number':432,'multiline':True]
['text':'*
     * Returns the full min/max object.
     ','line_number':439,'multiline':True]
['text':'*
     * Returns the updates since the previous time this function or the min/max functions were
     * called in the format for an update op.
     ','line_number':445,'multiline':True]
['text':'*
     * Generates and returns a MinMax object from the passed in min and max documents.
     ','line_number':452,'multiline':True]
['text':'*
     * Helper for the recursive internal functions to access the min data component.
     ','line_number':472,'multiline':True]
['text':'*
     * Helper for the recursive internal functions to access the max data component.
     ','line_number':484,'multiline':True]
['text':'*
 * Buffer value for a Data of type kValue, storing just the BSONElement type.
 ','line_number':497,'multiline':True]
['text':'*
 * Element representing schema type for a given field path for all measurements in a bucket.
 ','line_number':513,'multiline':True]
['text':'*
     * Schema data component access
     ','line_number':522,'multiline':True]
['text':'*
 * Manages schema data for timeseries measurements within a bucket.
 ','line_number':534,'multiline':True]
['text':'*
     * Generates and returns a Schema object from the passed in min and max documents.
     ','line_number':541,'multiline':True]
['text':'*
     * Helper for the recursive internal functions to access the type data component.
     ','line_number':561,'multiline':True]
['text':' namespace mongo::timeseries::bucket_catalog','line_number':574,'multiline':False]
