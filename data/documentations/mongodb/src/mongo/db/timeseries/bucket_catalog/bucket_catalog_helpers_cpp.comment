['text':'*
 *    Copyright (C) 2022-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':'*
 * Generates a match filter used to identify suitable buckets for reopening, represented by:
 *
 * {$and:
 *       [{"control.version":1}, // Only when gTimeseriesAlwaysUseCompressedBuckets is disabled.
 *       {$or: [{"control.closed":{$exists:false}},
 *              {"control.closed":false}]
 *       },
 *       {"meta":<metaValue>},
 *       {$and: [{"control.min.time":{$lte:<measurementTs>}},
 *               {"control.min.time":{$gt:<measurementTs - maxSpanSeconds>}}]
 *       },
         {"data.<timeField>.<timeseriesBucketMaxCount - 1>":{$exists:false}}]
 * }
 ','line_number':85,'multiline':True]
['text':' The bucket must be uncompressed.','line_number':108,'multiline':False]
['text':' The bucket cannot be closed (aka open for new measurements).','line_number':112,'multiline':False]
['text':' The measurement meta field must match the bucket 'meta' field. If the field is not specified','line_number':117,'multiline':False]
['text':' we can only insert into buckets which also do not have a meta field.','line_number':118,'multiline':False]
['text':' (minimumTs <= measurementTs) && (minimumTs + maxSpanSeconds > measurementTs)','line_number':128,'multiline':False]
['text':' If the "data.<timeField>.<timeseriesBucketMaxCount - 1>" field exists, it means the bucket is','line_number':134,'multiline':False]
['text':' full and we do not want to insert future measurements into it.','line_number':135,'multiline':False]
['text':' namespace','line_number':148,'multiline':False]
['text':' Stage 1: Match stage with suitable bucket requirements.','line_number':159,'multiline':False]
['text':' Stage 2: Add an observable field for the bucket document size.','line_number':164,'multiline':False]
['text':' Stage 3: Restrict bucket documents exceeding the max bucket size.','line_number':168,'multiline':False]
['text':' Stage 4: Unset the document size field.','line_number':171,'multiline':False]
['text':' Stage 5: Restrict the aggregation to one document.','line_number':175,'multiline':False]
['text':' Iterate the document once, checking for both fields.','line_number':232,'multiline':False]
['text':' Ensure we have the view namespace, as that's what the BucketCatalog operates on.','line_number':268,'multiline':False]
['text':' First notify the BucketCatalog that we intend to start a direct write, so we can conflict','line_number':272,'multiline':False]
['text':' with any already-prepared operation, and also block bucket reopening if it's enabled.','line_number':273,'multiline':False]
['text':' Then register callbacks so we can let the BucketCatalog know that we are done with our direct','line_number':277,'multiline':False]
['text':' write after the actual write takes place (or is abandoned), and allow reopening.','line_number':278,'multiline':False]
['text':' namespace mongo::timeseries::bucket_catalog','line_number':291,'multiline':False]
