['text':'*
 *    Copyright (C) 2020-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':' IWYU pragma: no_include <bits/types/clockid_t.h>','line_number':31,'multiline':False]
['text':' defined(__linux__)','line_number':42,'multiline':False]
['text':' Reads the thread timer, and throws with `InternalError` if that fails.','line_number':68,'multiline':False]
['text':' Returns the elapsed time since the creation of the current thread.','line_number':99,'multiline':False]
['text':' Holds the value returned by `_getThreadTime()` at the time of starting/resuming the timer.','line_number':102,'multiline':False]
['text':' Abort the process as the timer cannot account for the elapsed time. This path is only','line_number':165,'multiline':False]
['text':' reachable if the platform supports CPU time measurement at startup, but returns an error','line_number':166,'multiline':False]
['text':' for a subsequent attempt to get thread-specific CPU consumption.','line_number':167,'multiline':False]
['text':' Set of timers created by this OperationContext.','line_number':171,'multiline':False]
['text':' namespace','line_number':175,'multiline':False]
['text':' Checks for time support on POSIX platforms. In particular, it checks for support in presence','line_number':178,'multiline':False]
['text':' of SMP systems.','line_number':179,'multiline':False]
['text':' Unable to collect the CPU time for the current thread.','line_number':188,'multiline':False]
['text':' not defined(__linux__)','line_number':209,'multiline':False]
['text':' defined(__linux__)','line_number':219,'multiline':False]
['text':' It is possible for an OperationCPUTimer to outlive the OperationCPUTimers container that is','line_number':227,'multiline':False]
['text':' decorated on the OperationContext. For example, a Timer can be owned by an OperationContext','line_number':228,'multiline':False]
['text':' decoration, and may be destructed after the Timers container, an order which we cannot','line_number':229,'multiline':False]
['text':' control. Therefore we must ensure the weak_ptr we hold is still valid.','line_number':230,'multiline':False]
['text':' namespace mongo','line_number':260,'multiline':False]
