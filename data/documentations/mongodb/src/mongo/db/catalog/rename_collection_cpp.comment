['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':' From a replicated to an unreplicated collection or vice versa.','line_number':113,'multiline':False]
['text':' The generated unique collection name is only guaranteed to exist if the database is','line_number':199,'multiline':False]
['text':' exclusively locked.','line_number':200,'multiline':False]
['text':' No logOp necessary because the entire renameCollection command is one logOp.','line_number':245,'multiline':False]
['text':' We have to override the provided 'dropTarget' setting for idempotency reasons to','line_number':252,'multiline':False]
['text':' avoid unintentionally removing a collection on a secondary with the same name as','line_number':253,'multiline':False]
['text':' the target.','line_number':254,'multiline':False]
['text':' Target collection exists - drop it.','line_number':275,'multiline':False]
['text':' 'renameOpTime' must be null because a valid 'renameOpTimeFromApplyOps' implies','line_number':301,'multiline':False]
['text':' replicated writes are not enabled.','line_number':302,'multiline':False]
['text':' No logOp necessary because the entire renameCollection command is one logOp.','line_number':315,'multiline':False]
['text':' To prevent deadlock, always lock system.views collection in the end because concurrent','line_number':344,'multiline':False]
['text':' view-related operations always lock system.views in the end.','line_number':345,'multiline':False]
['text':' To prevent deadlock, always lock source and target in ascending resourceId order.','line_number':349,'multiline':False]
['text':' targetExistsAllowed ','line_number':366,'multiline':True]
['text':' targetExistsAllowed ','line_number':397,'multiline':True]
['text':' During initial sync, it is possible that the collection already','line_number':422,'multiline':False]
['text':' got renamed to the target, so there is not much left to do other','line_number':423,'multiline':False]
['text':' than drop the dropTarget. See SERVER-40861 for more details.','line_number':424,'multiline':False]
['text':' We need to rename the targetColl to a temporary name.','line_number':440,'multiline':False]
['text':' When reapplying oplog entries (such as in the case of initial sync) we need','line_number':449,'multiline':False]
['text':' to identify the collection to drop by UUID, as otherwise we might end up','line_number':450,'multiline':False]
['text':' dropping the wrong collection.','line_number':451,'multiline':False]
['text':' Refer to txnCmdAllowlist in commands.cpp.','line_number':499,'multiline':False]
['text':' Lock the DB using MODE_IX to ensure we have the global lock in that mode, as to prevent','line_number':513,'multiline':False]
['text':' upgrade from MODE_IS to MODE_IX, which caused deadlock on systems not supporting Database','line_number':514,'multiline':False]
['text':' locking and should be avoided in general.','line_number':515,'multiline':False]
['text':' Check if the target namespace exists and if dropTarget is true.','line_number':558,'multiline':False]
['text':' Return a non-OK status if target exists and dropTarget is not true or if the collection','line_number':559,'multiline':False]
['text':' is sharded.','line_number':560,'multiline':False]
['text':' Create a temporary collection in the target database. It will be removed if we fail to','line_number':579,'multiline':False]
['text':' copy the collection, or on restart, so there is no need to replicate these writes.','line_number':580,'multiline':False]
['text':' The generated unique collection name is only guaranteed to exist if the database is','line_number':585,'multiline':False]
['text':' exclusively locked.','line_number':586,'multiline':False]
['text':' Note that this temporary collection name is used by MongoMirror and thus must not be changed','line_number':590,'multiline':False]
['text':' without consultation.','line_number':591,'multiline':False]
['text':' Renaming across databases will result in a new UUID.','line_number':607,'multiline':False]
['text':' Dismissed on success','line_number':622,'multiline':False]
['text':' Ignoring failure case when dropping the temporary collection during cleanup because','line_number':635,'multiline':False]
['text':' the rename operation has already failed for another reason.','line_number':636,'multiline':False]
['text':' Copy the index descriptions from the source collection.','line_number':646,'multiline':False]
['text':' Create indexes using the index specs on the empty temporary collection that was just created.','line_number':661,'multiline':False]
['text':' Since each index build is possibly replicated to downstream nodes, each createIndex oplog','line_number':662,'multiline':False]
['text':' entry must have a distinct timestamp to support correct rollback operation. This is achieved','line_number':663,'multiline':False]
['text':' by writing the createIndexes oplog entry *before* creating the index. Using','line_number':664,'multiline':False]
['text':' IndexCatalog::createIndexOnEmptyCollection() for the index creation allows us to add and','line_number':665,'multiline':False]
['text':' commit the index within a single WriteUnitOfWork and avoids the possibility of seeing the','line_number':666,'multiline':False]
['text':' index in an unfinished state. For more information on assigning timestamps to multiple index','line_number':667,'multiline':False]
['text':' builds, please see SERVER-35780 and SERVER-35070.','line_number':668,'multiline':False]
['text':' Copy over all the data from source collection to temporary collection. For this we can','line_number':691,'multiline':False]
['text':' drop the exclusive database lock on the target and grab an intent lock on the temporary','line_number':692,'multiline':False]
['text':' collection.','line_number':693,'multiline':False]
['text':' Cursor is left one past the end of the batch inside writeConflictRetry.','line_number':716,'multiline':False]
['text':' Always reposition cursor in case it gets a WCE midway through.','line_number':719,'multiline':False]
['text':' Inserts to indexed capped collections cannot be batched.','line_number':723,'multiline':False]
['text':' Otherwise, CollectionImpl::_insertDocuments() will fail with','line_number':724,'multiline':False]
['text':' OperationCannotBeBatched. See SERVER-21512.','line_number':725,'multiline':False]
['text':' fromMigrate ','line_number':749,'multiline':True]
['text':' Used to make sure that a WCE can be handled by this logic without data loss.','line_number':754,'multiline':False]
['text':' Time to yield; make a safe copy of the current record before releasing our','line_number':763,'multiline':False]
['text':' cursor.','line_number':764,'multiline':False]
['text':' When this exits via success or WCE, we need to restore the cursor.','line_number':769,'multiline':False]
['text':' Getting here means we successfully built the target copy. We now do the final','line_number':783,'multiline':False]
['text':' in-place rename and remove the source collection.','line_number':784,'multiline':False]
['text':' namespace','line_number':796,'multiline':False]
['text':' Check target collection options match expected.','line_number':806,'multiline':False]
['text':' Check target collection indexes match expected.','line_number':814,'multiline':False]
['text':' We do not include the UUID field in the options comparison. It is ok if the target collection','line_number':825,'multiline':False]
['text':' was dropped and recreated, as long as the new target collection has the same options and','line_number':826,'multiline':False]
['text':' indexes as the original one did. This is mainly to support concurrent $out to the same','line_number':827,'multiline':False]
['text':' collection.','line_number':828,'multiline':False]
['text':' A valid 'renameOpTime' is not allowed when writes are replicated.','line_number':988,'multiline':False]
['text':' TODO: not needed once we are no longer parsing for prefixed tenantIds','line_number':1003,'multiline':False]
['text':' For idempotency reasons, update the `sourceNss` with the namespace found in the collection','line_number':1008,'multiline':False]
['text':' catalog for the UUID if it's provided. It's possible this rename was already applied and the','line_number':1009,'multiline':False]
['text':' `sourceNss` no longer exists.','line_number':1010,'multiline':False]
['text':' The rename has already been performed.','line_number':1017,'multiline':False]
['text':' Check that the target namespace is in the correct form, "database.collection".','line_number':1032,'multiline':False]
['text':' Take strong database and collection locks in order to avoid upgrading later.','line_number':1045,'multiline':False]
['text':' Downgrade renameCollection to dropCollection.','line_number':1062,'multiline':False]
['text':' If the UUID we're targeting already exists, rename from there no matter what.','line_number':1098,'multiline':False]
['text':' namespace mongo','line_number':1116,'multiline':False]
