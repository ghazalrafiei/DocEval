['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':' TTL indexes with 'expireAfterSeconds' are repaired with this duration, which is chosen to be','line_number':58,'multiline':False]
['text':' the largest possible value for the 'safeInt' type that can be returned in the listIndexes','line_number':59,'multiline':False]
['text':' response.','line_number':60,'multiline':False]
['text':'*
 * Describe which field names are considered valid options when creating an index. If the set
 * associated with the field name is empty, the option is always valid, otherwise it will be allowed
 * only when creating the set of index types listed in the set.
 ','line_number':64,'multiline':True]
['text':' Index creation under legacy writeMode can result in an index spec with an _id field.','line_number':99,'multiline':False]
['text':' TODO SERVER-76108: Field names are not validated to match index type. This was used for the','line_number':101,'multiline':False]
['text':' removed 'geoHaystack' index type, but users could have set it for other index types as well.','line_number':102,'multiline':False]
['text':' We need to keep allowing it until FCV upgrade is implemented to clean this up.','line_number':103,'multiline':False]
['text':'*
 * Checks if the key is valid for building an index according to the validation rules for the given
 * index version.
 ','line_number':106,'multiline':True]
['text':'*
 * Validates the index specification 'indexSpec' and returns an equivalent index specification that
 * has any missing attributes filled in. If the index specification is malformed, then an error
 * status is returned.
 ','line_number':112,'multiline':True]
['text':'*
 * Returns a new index spec with any unknown field names removed from 'indexSpec'.
 ','line_number':119,'multiline':True]
['text':'*
 * Returns a new index spec with boolean values in correct types and unknown field names removed.
 ','line_number':124,'multiline':True]
['text':'*
 * Performs additional validation for _id index specifications. This should be called after
 * validateIndexSpec().
 ','line_number':132,'multiline':True]
['text':'*
 * Confirms that 'indexSpec' contains only valid field names. Returns an error if an unexpected
 * field name is found.
 ','line_number':138,'multiline':True]
['text':'*
 * Validates the 'collation' field in the index specification 'indexSpec' and fills in the full
 * collation spec. If 'collation' is missing, fills it in with the spec for 'defaultCollator'.
 * Returns the index specification with 'collation' filled in.
 ','line_number':144,'multiline':True]
['text':'*
 * Validates the the 'expireAfterSeconds' value for a TTL index or clustered collection.
 ','line_number':153,'multiline':True]
['text':'*
 * Returns true if 'indexSpec' refers to a TTL index.
 ','line_number':165,'multiline':True]
['text':'*
 * Validates the key pattern and the 'expireAfterSeconds' duration in the index specification
 * 'indexSpec' for a TTL index. Returns success if 'indexSpec' does not refer to a TTL index.
 ','line_number':170,'multiline':True]
['text':'*
 * Returns whether an index is allowed in API version 1.
 ','line_number':176,'multiline':True]
['text':'*
 * Parses the index specifications from 'indexSpecObj', validates them, and returns equivalent index
 * specifications that have any missing attributes filled in. If any index specification is
 * malformed, then an error status is returned.
 ','line_number':181,'multiline':True]
['text':'*
 * Optional filtering function to adjust allowed index field names at startup.
 * Set it in a MONGO_INITIALIZER with 'FilterAllowedIndexFieldNames' as a dependant.
 ','line_number':188,'multiline':True]
['text':' namespace index_key_validate','line_number':195,'multiline':False]
['text':' namespace mongo','line_number':196,'multiline':False]
