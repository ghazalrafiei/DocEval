['text':'*
 *    Copyright (C) 2019-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':'*
 * Cursor wrapper class that creates a cursor internally and throttles record fetching according to
 * the DataThrottle instance passed into its constructor.
 ','line_number':55,'multiline':True]
['text':'*
 * Cursor wrapper class that creates a cursor internally and throttles record fetching according to
 * the DataThrottle instance passed into its constructor.
 ','line_number':90,'multiline':True]
['text':'*
 * Throttles the amount of data processed within a unit of time. Puts the thread to sleep via an
 * opCtx -- so it is interruptible -- whenever the data limit set by the 'maxValidateMBperSec'
 * server parameter is exceeded before the time unit is done.
 ','line_number':136,'multiline':True]
['text':'*
     * If throttling is not enabled by calling turnThrottlingOff(), or if
     * 'maxValidateMBperSec' == 0, then this is a no-op.
     *
     * When the accumulated number of bytes processed in each second reaches or exceeds the limit
     * set by the 'maxValidateMBperSec' server parameter, the throttle mechanism gets engaged to
     * wait for the remainder of that second by putting the thread to sleep.
     *
     * In addition to throttling, while the thread is waiting, its operation context remains
     * interruptible.
     ','line_number':152,'multiline':True]
['text':' Point-in-time (milliseconds) when tracking for the current second has started.','line_number':170,'multiline':False]
['text':' Number of bytes processed in the current second being tracked by '_startMillis'. This will','line_number':173,'multiline':False]
['text':' contain the number of bytes processed between '_startMillis' and '_startMillis + 999'.','line_number':174,'multiline':False]
['text':' Whether the throttle should be active.','line_number':180,'multiline':False]
['text':' Will return the rate to throttle, 0 means turn off throttling.','line_number':183,'multiline':False]
['text':' namespace mongo','line_number':187,'multiline':False]
