['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':'*
 * The default partitioning policy: If using a numeric built-in type, will use the lower bits of a
 * number to decide which partition to assign it to. If using any other type T, you must define
 * partitionOf(const T&, std::size_t) or specialize this template.
 ','line_number':91,'multiline':True]
['text':' namespace partitioned_detail','line_number':126,'multiline':False]
['text':'*
 * A templated class used to partition an associative container like a set or a map to increase
 * scalability. `AssociativeContainer` is a type like a std::map or std::set that meets the
 * requirements of either the AssociativeContainer or UnorderedAssociativeContainer concept.
 * `nPartitions` determines how many partitions to make. `Partitioner` can be provided to customize
 * how the partition of each entry is computed.
 ','line_number':128,'multiline':True]
['text':' Used to create an iterator representing the end of the partitioned structure.','line_number':139,'multiline':False]
['text':'*
     * Used to protect access to all partitions of this partitioned associative structure. For
     * example, may be used to empty each partition in the structure, or to provide a snapshotted
     * count of the number of entries across all partitions.
     ','line_number':147,'multiline':True]
['text':'*
         * Acquires locks for all partitions. The lifetime of this `All` object must be shorter than
         * that of `partitionedContainer`.
         ','line_number':154,'multiline':True]
['text':'*
         * Returns an iterator at the start of the partitions.
         ','line_number':163,'multiline':True]
['text':'*
         * Returns an iterator at the end of the partitions.
         ','line_number':170,'multiline':True]
['text':'*
         * Returns an iterator at the start of the partitions.
         ','line_number':177,'multiline':True]
['text':'*
         * Returns an iterator at the end of the partitions.
         ','line_number':184,'multiline':True]
['text':'*
         * Returns the number of elements in all partitions, summed together.
         ','line_number':191,'multiline':True]
['text':'*
         * Returns true if each partition is empty.
         ','line_number':202,'multiline':True]
['text':'*
         * Returns the number of entries with the given key.
         ','line_number':211,'multiline':True]
['text':'*
         * Empties each container within each partition.
         ','line_number':219,'multiline':True]
['text':'*
         * Inserts `value` into its designated partition.
         ','line_number':228,'multiline':True]
['text':'*
         * Erases one entry from the partitioned structure, returns the number of entries removed.
         ','line_number':237,'multiline':True]
['text':'*
     * Used to protect access to a single partition of a Partitioned. For example, can be used to do
     * a series of reads and/or modifications to a single entry without interference from other
     * threads.
     ','line_number':253,'multiline':True]
['text':'*
         * Returns a pointer to the structure in this partition.
         ','line_number':260,'multiline':True]
['text':'*
         * Returns a reference to the structure in this partition.
         ','line_number':267,'multiline':True]
['text':'*
         * Acquires locks for the ith partition.  `partitionedAssociativeContainer` must outlive
         * this GuardedPartition. If a single thread needs access to multiple partitions, it must
         * use GuardedAssociativeContainer, or acquire them in ascending order.
         ','line_number':277,'multiline':True]
['text':'*
     * Constructs a partitioned version of AssociativeContainer, with `nPartitions` partitions.
     ','line_number':292,'multiline':True]
['text':'*
     * Constructs a partitioned AssociativeContainer with `nPartitions` copies of container.
     ','line_number':298,'multiline':True]
['text':'*
     * Returns true if each partition is empty. Locks the all partitions to perform this check, but
     * insertions can occur as soon as this method returns.
     ','line_number':313,'multiline':True]
['text':'*
     * Returns the number of elements in all partitions, summed together.  Locks all partitions to
     * do this computation, but the size can change as soon as this method returns.
     ','line_number':324,'multiline':True]
['text':'*
     * Returns the number of entries with the given key. Acquires locks for only the partition
     * determined by that key.
     ','line_number':337,'multiline':True]
['text':'*
     * Empties all partitions.
     ','line_number':346,'multiline':True]
['text':'*
     * Inserts a single value into the partitioned structure. Locks a single partition determined by
     * the value itself. Will not lock any partitions besides the one inserted into.
     ','line_number':354,'multiline':True]
['text':'*
     * Erases one entry from the partitioned structure. Locks only the partition given by the key.
     * Returns the number of entries removed.
     ','line_number':364,'multiline':True]
['text':' These two vectors parallel each other, but we keep them separate so that we can return an','line_number':391,'multiline':False]
['text':' iterator over `_partitions` from within All.','line_number':392,'multiline':False]
['text':' namespace mongo','line_number':396,'multiline':False]
