['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':'*
 * Registry of opened databases.
 ','line_number':46,'multiline':True]
['text':' Operation Context binding.','line_number':51,'multiline':False]
['text':'*
     * Retrieves an already opened database or returns nullptr.
     *
     * The caller must hold the database lock in MODE_IS.
     ','line_number':60,'multiline':True]
['text':'*
     * Checks if a database exists without holding a database-level lock. This class' internal mutex
     * provides concurrency protection around looking up the db name of 'dbName'.
     ','line_number':67,'multiline':True]
['text':'*
     * Retrieves a database reference if it is already opened, or opens it if it hasn't been
     * opened/created yet.
     *
     * The caller must hold the database lock in MODE_IX.
     *
     * @param justCreated Returns whether the database was newly created (true) or it already
     *          existed (false). Can be NULL if this information is not necessary.
     ','line_number':73,'multiline':True]
['text':'*
     * Physically drops the specified opened database and removes it from the server's metadata. It
     * doesn't notify the replication subsystem or do any other consistency checks, so it should
     * not be used directly from user commands.
     *
     * The caller must hold the database lock in MODE_X and ensure no index builds are in progress
     * on the database.
     ','line_number':86,'multiline':True]
['text':'*
     * Closes the specified database.
     *
     * The caller must hold the database lock in MODE_X. No background jobs must be in progress on
     * the database when this function is called.
     ','line_number':96,'multiline':True]
['text':'*
     * Closes all opened databases.
     *
     * The caller must hold the global lock in MODE_X and ensure no index builds are in progress on
     * the databases. Will uassert if any background jobs are running when this function is called.
     ','line_number':104,'multiline':True]
['text':'*
     * Returns the name of the database with conflicting casing if one exists.
     ','line_number':112,'multiline':True]
['text':'*
     * Returns all the database names (including those which are empty).
     *
     * Unlike CollectionCatalog::getAllDbNames(), this returns databases that are empty.
     ','line_number':118,'multiline':True]
['text':' namespace mongo','line_number':126,'multiline':False]
