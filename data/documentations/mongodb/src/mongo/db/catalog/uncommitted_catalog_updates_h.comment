['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':'*
 * Decoration on Snapshot to store cloned Collections until they are committed or rolled back.
 ','line_number':53,'multiline':True]
['text':' Created collection instance','line_number':60,'multiline':False]
['text':' Writable clone','line_number':62,'multiline':False]
['text':' Marker to indicate that the namespace has been renamed','line_number':64,'multiline':False]
['text':' Dropped collection instance','line_number':66,'multiline':False]
['text':' Recreated collection after drop','line_number':68,'multiline':False]
['text':' Replaced views for a particular database','line_number':70,'multiline':False]
['text':' Add a view resource','line_number':72,'multiline':False]
['text':' Remove a view resource','line_number':74,'multiline':False]
['text':' Dropped index instance','line_number':76,'multiline':False]
['text':' Type of action this entry has stored. Members below may or may not be set depending on','line_number':87,'multiline':False]
['text':' this member.','line_number':88,'multiline':False]
['text':' Storage for the actual collection.','line_number':91,'multiline':False]
['text':' Set for actions kWritableCollection, kCreatedCollection, kRecreatedCollection and nullptr','line_number':92,'multiline':False]
['text':' otherwise.','line_number':93,'multiline':False]
['text':' Store namespace separately to handle rename and drop without making writable first.','line_number':96,'multiline':False]
['text':' Set for all actions.','line_number':97,'multiline':False]
['text':' External uuid when not accessible via collection.','line_number':100,'multiline':False]
['text':' Set for actions kDroppedCollection, kRecreatedCollection. boost::none otherwise.','line_number':101,'multiline':False]
['text':' New namespace this collection has been renamed to.','line_number':104,'multiline':False]
['text':' Set for action kRenamedCollection. Default constructed otherwise.','line_number':105,'multiline':False]
['text':' New set of view information for a database.','line_number':108,'multiline':False]
['text':' Set for action kReplacedViewsForDatabase, boost::none otherwise.','line_number':109,'multiline':False]
['text':' Storage for the actual index entry.','line_number':112,'multiline':False]
['text':' Set for action kDroppedIndex and nullptr otherwise.','line_number':113,'multiline':False]
['text':' Whether the collection or index entry is drop pending.','line_number':116,'multiline':False]
['text':' Set for actions kDroppedCollection and kDroppedIndex, boost::none otherwise.','line_number':117,'multiline':False]
['text':' True if the collection is currently being managed in this transaction.','line_number':122,'multiline':False]
['text':' Storage for the actual collection.','line_number':125,'multiline':False]
['text':' Set for actions kWritableCollection, kCreatedCollection, and kRecreatedCollection.','line_number':126,'multiline':False]
['text':' True if the collection was created during this transaction for the first time.','line_number':129,'multiline':False]
['text':'*
     * Determine if an entry is associated with a collection action (as opposed to a view action).
     ','line_number':136,'multiline':True]
['text':'*
     * Determine if an entry uses two-phase commit to write into the CollectionCatalog.
     * kCreatedCollection is also committed using two-phase commit but using a separate system and
     * is excluded from this list. kDroppedIndex is covered by kWritableCollection as a writable
     * collection must be used to drop an index.
     ','line_number':147,'multiline':True]
['text':'*
     * Lookup of Collection by UUID describing whether this namespace is managed, a managed
     * Collection pointer (may be returned as nullptr, which indicates a drop), and if it was
     * created in this transaction.
     ','line_number':161,'multiline':True]
['text':'*
     * Lookup of Collection by Namestring describing whether this namespace is managed, a managed
     * Collection pointer (may be returned as nullptr, which indicates a drop), and if it was
     * created in this transaction.
     ','line_number':169,'multiline':True]
['text':'*
     * Add collection to entries and register RecoveryUnit preCommitHook to throw a
     * `WriteConflictException` if there is a NamespaceString conflict in the catalog.
     ','line_number':179,'multiline':True]
['text':'*
     * Wraps 'createCollection' and does not register a preCommitHook in order to defer committing a
     * collection after a collection drop.
     ','line_number':185,'multiline':True]
['text':'*
     * Manage the lifetime of uncommitted writable collection.
     ','line_number':191,'multiline':True]
['text':'*
     * Manage an uncommitted rename, pointer must have made writable first and should exist in entry
     * list.
     ','line_number':196,'multiline':True]
['text':'*
     * Manages an uncommitted index entry drop.
     ','line_number':202,'multiline':True]
['text':'*
     * Manage an uncommitted collection drop.
     ','line_number':209,'multiline':True]
['text':'*
     * Replace the ViewsForDatabase instance assocated with database `dbName` with `vfdb`. This is
     * the primary low-level write method to alter any information about the views associated with a
     * given database.
     ','line_number':214,'multiline':True]
['text':'*
     * Adds a ResourceID associated with a view namespace, and registers a preCommitHook to do
     * conflict-checking on the view namespace.
     ','line_number':221,'multiline':True]
['text':'*
     * Removes the ResourceID associated with a view namespace.
     ','line_number':227,'multiline':True]
['text':'*
     * Returns all entries without releasing them.
     ','line_number':232,'multiline':True]
['text':'*
     * Releases all entries, needs to be done when WriteUnitOfWork commits or rolls back.
     ','line_number':237,'multiline':True]
['text':'*
     * The catalog needs to ignore external view changes for its own modifications. This method
     * should be used by DDL operations to prevent op observers from triggering additional catalog
     * operations.
     ','line_number':242,'multiline':True]
['text':'*
     * The catalog needs to ignore external view changes for its own modifications. This method can
     * be used by methods called by op observers (e.g. 'CollectionCatalog::reload()') to distinguish
     * between an external write to 'system.views' and one initiated through the proper view DDL
     * operations.
     ','line_number':249,'multiline':True]
['text':'*
     * Checks if there is an entry with the nss `nss` and the
     * 'kCreatedCollection'/'kRecreatedCollection' action type.
     ','line_number':257,'multiline':True]
['text':'*
     * Flag to check of callbacks with the RecoveryUnit has been registered for this instance.
     ','line_number':267,'multiline':True]
['text':'*
     * Mark that callbacks with the RecoveryUnit has been registered for this instance.
     ','line_number':274,'multiline':True]
['text':'*
     * Flag to check if precommit has executed successfully and all uncommitted collections have
     * been registered as pending commit
     ','line_number':282,'multiline':True]
['text':'*
     * Mark that precommit has executed successfully and all uncommitted collections have
     * been registered as pending commit
     ','line_number':290,'multiline':True]
['text':'*
     * Adds a created or recreated collection to the entries vector and registers rollback handlers
     * (in addition to a preCommitHook for newly created collections).
     ','line_number':302,'multiline':True]
['text':'*
     * Store entries in vector, we will do linear search to find what we're looking for but it will
     * be very few entries so it should be fine.
     ','line_number':310,'multiline':True]
['text':'*
 * Decoration on Snapshot to store Collections instantiated from durable catalog data. Lifetime tied
 * to Snapshot lifetime.
 ','line_number':322,'multiline':True]
['text':'*
     * Lookup collection instance by namespace.
     *
     * May return nullptr which indicates that the namespace does not exist in the snapshot.
     *
     * Returns boost::none if this namespace is unknown to OpenedCollections.
     ','line_number':330,'multiline':True]
['text':'*
     * Lookup collection instance by UUID.
     *
     * May return nullptr which indicates that the UUID does not exist in the snapshot.
     *
     * Returns boost::none if this UUID is unknown to OpenedCollections.
     ','line_number':340,'multiline':True]
['text':'*
     * Stores a Collection instance. Lifetime of instance will be tied to lifetime of opened storage
     * snapshot.
     *
     * Collection instance may be nullptr to indicate that the namespace and/or UUID does not exist
     * in the snapshot.
     ','line_number':349,'multiline':True]
['text':' TODO(SERVER-78226): Replace `nss` and `uuid` with a type which can express "nss and uuid"','line_number':363,'multiline':False]
['text':' Static storage for one entry. The expected common case is that only a single collection will','line_number':368,'multiline':False]
['text':' be needed so we optimize for that.','line_number':369,'multiline':False]
['text':' namespace mongo','line_number':373,'multiline':False]
