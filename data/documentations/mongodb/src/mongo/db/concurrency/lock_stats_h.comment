['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':'*
 * Abstraction for manipulating the lock statistics, operating on either AtomicWord<long long> or
 * int64_t, which the rest of the code in this file refers to as CounterType.
 ','line_number':44,'multiline':True]
['text':'*
 * Counts numAcquisitions, numWaits and combinedWaitTimeMicros values.
 *
 * Additionally supports appending or subtracting other LockStatCounters' values to or from its own;
 * and can reset its own values to 0.
 ','line_number':79,'multiline':True]
['text':' The lock statistics we track.','line_number':107,'multiline':False]
['text':'*
 * Templatized lock statistics management class, which can be specialized with atomic integers
 * for the global stats and with regular integers for the per-locker stats.
 *
 * CounterType allows the code to operate on both int64_t and AtomicWord<long long>
 ','line_number':115,'multiline':True]
['text':' Declare the type for the lock counters bundle','line_number':124,'multiline':False]
['text':' Append global lock stats.','line_number':155,'multiline':False]
['text':' Append all non-global, non-oplog lock stats.','line_number':163,'multiline':False]
['text':' Append the oplog stats','line_number':172,'multiline':False]
['text':' Necessary for the append call, which accepts argument of type different than our','line_number':210,'multiline':False]
['text':' template parameter.','line_number':211,'multiline':False]
['text':' Keep the per-mode lock stats next to each other in case we want to do fancy operations','line_number':216,'multiline':False]
['text':' such as atomic operations on 128-bit values.','line_number':217,'multiline':False]
['text':' For the global resource, split the lock stats per ID since each one should be reported','line_number':228,'multiline':False]
['text':' separately. For the remaining resources, split the lock stats per resource type. Special-case','line_number':229,'multiline':False]
['text':' the oplog so we can collect more detailed stats for it.','line_number':230,'multiline':False]
['text':'*
 * Reports instance-wide locking statistics, which can then be converted to BSON or logged.
 ','line_number':240,'multiline':True]
['text':'*
 * Currently used for testing only.
 ','line_number':245,'multiline':True]
['text':' namespace mongo','line_number':250,'multiline':False]
