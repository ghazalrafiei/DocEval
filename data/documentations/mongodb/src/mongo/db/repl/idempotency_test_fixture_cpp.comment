['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':'*
 * Compares BSON objects (BSONObj) in two sets of BSON objects (BSONObjSet) to see if the two
 * sets are equivalent.
 *
 * Two sets are equivalent if and only if their sizes are the same and all of their elements
 * that share the same index position are also equivalent in value.
 ','line_number':73,'multiline':True]
['text':' thisIt and otherIt cannot possibly be out of sync in terms of progression through','line_number':88,'multiline':False]
['text':' their respective sets because we ensured earlier that their sizes are equal and we','line_number':89,'multiline':False]
['text':' increment both by 1 on each iteration. We can avoid checking both iterator positions and','line_number':90,'multiline':False]
['text':' only check one (thisIt).','line_number':91,'multiline':False]
['text':' Since these are ordered sets, we expect that in the case of equivalent index specs,','line_number':93,'multiline':False]
['text':' each copy will be in the same order in both sets, therefore each loop step should be','line_number':94,'multiline':False]
['text':' true.','line_number':95,'multiline':False]
['text':'*
 * Returns a std::string representation of the CollectionState struct of which this is a member
 * function. Returns out its representation in the form:
 *
 * Collection options: {...}; Index options: [...]; MD5 hash: <md5 digest string>
 ','line_number':105,'multiline':True]
['text':' Be more explicit about CollectionState structs without a supplied MD5 hash string.','line_number':133,'multiline':False]
['text':' Since collection options uses deferred comparison, we opt to binary compare its BSON','line_number':153,'multiline':False]
['text':' representations.','line_number':154,'multiline':False]
['text':' Since the end state after each iteration is expected to be the same as the start state,','line_number':193,'multiline':False]
['text':' we don't drop and re-create the collections. Dropping and re-creating the collections','line_number':194,'multiline':False]
['text':' won't work either because we don't have ways to wait until second-phase drop to','line_number':195,'multiline':False]
['text':' completely finish.','line_number':196,'multiline':False]
['text':' o2 ','line_number':272,'multiline':True]
['text':' sessionInfo ','line_number':273,'multiline':True]
['text':' wallClockTime -- required but not checked ','line_number':274,'multiline':True]
['text':' uuid ','line_number':276,'multiline':True]
['text':' o2 ','line_number':326,'multiline':True]
['text':' sessionInfo ','line_number':327,'multiline':True]
['text':' wallClockTime -- required but not checked ','line_number':328,'multiline':True]
['text':' uuid ','line_number':330,'multiline':True]
['text':' Skip local database.','line_number':367,'multiline':False]
['text':' Allow in-progress indexes to complete before validating collection contents.','line_number':392,'multiline':False]
['text':' Return a mostly default initialized CollectionState struct with exists set to false','line_number':401,'multiline':False]
['text':' to indicate an unfound Collection (or a view).','line_number':402,'multiline':False]
['text':'additionalOptions=','line_number':416,'multiline':True]
['text':'logDiagnostics=','line_number':419,'multiline':True]
['text':' namespace repl','line_number':470,'multiline':False]
['text':' namespace mongo','line_number':471,'multiline':False]
