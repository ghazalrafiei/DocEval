['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':'*
 * Algorithm for testing the ScatterGatherRunner, which will finish running when finish() is
 * called, or upon receiving responses from two nodes. Creates a three requests algorithm
 * simulating running an algorithm against three other nodes.
 ','line_number':69,'multiline':True]
['text':'*
 * ScatterGatherTest base class which sets up the TaskExecutor and NetworkInterfaceMock.
 ','line_number':118,'multiline':True]
['text':' Used to run a ScatterGatherRunner in a separate thread, to avoid blocking test execution.','line_number':130,'multiline':False]
['text':' Could block if _sgr has not finished','line_number':138,'multiline':False]
['text':' Simple onCompletion function which will toggle a bool, so that we can check the logs to','line_number':159,'multiline':False]
['text':' ensure the onCompletion function ran when expected.','line_number':160,'multiline':False]
['text':' Confirm that running via start() will finish and run the onComplete function once sufficient','line_number':172,'multiline':False]
['text':' responses have been received.','line_number':173,'multiline':False]
['text':' Confirm that deleting both the ScatterGatherTestAlgorithm and ScatterGatherRunner while','line_number':174,'multiline':False]
['text':' scheduled callbacks still exist will not be unsafe (ASAN builder) after the algorithm has','line_number':175,'multiline':False]
['text':' completed.','line_number':176,'multiline':False]
['text':' Get and process the response from the first node immediately.','line_number':233,'multiline':False]
['text':' Cancel the runner so following responses won't change the result. All pending requests','line_number':273,'multiline':False]
['text':' are cancelled.','line_number':274,'multiline':False]
['text':' Run the event that gets signaled by cancellation.','line_number':277,'multiline':False]
['text':' It's safe to advance the clock to process the scheduled response.','line_number':284,'multiline':False]
['text':' Confirm that shutting the TaskExecutor down before calling run() will cause run()','line_number':290,'multiline':False]
['text':' to return ErrorCodes::ShutdownInProgress.','line_number':291,'multiline':False]
['text':' Confirm that shutting the TaskExecutor down after calling run(), but before run()','line_number':301,'multiline':False]
['text':' finishes will cause run() to return Status::OK().','line_number':302,'multiline':False]
['text':' need to wait for the scatter-gather to be scheduled in the executor','line_number':308,'multiline':False]
['text':' Black hole all requests before shutdown, so that scheduleRemoteCommand will succeed.','line_number':311,'multiline':False]
['text':' Confirm that shutting the TaskExecutor down before calling start() will cause start()','line_number':323,'multiline':False]
['text':' to return ErrorCodes::ShutdownInProgress and should not run onCompletion().','line_number':324,'multiline':False]
['text':' Confirm that shutting the TaskExecutor down after calling start() will cause start()','line_number':336,'multiline':False]
['text':' to return Status::OK and should not run onCompletion().','line_number':337,'multiline':False]
['text':' Confirm that responses are not processed once sufficient responses have been received.','line_number':352,'multiline':False]
['text':' the third resposne should not be processed, so the count should not increment','line_number':385,'multiline':False]
['text':' Confirm that scatter-gather runner passes CallbackCanceled error to the algorithm','line_number':391,'multiline':False]
['text':' and that the algorithm processes the response correctly.','line_number':392,'multiline':False]
['text':' We don't schedule a response from one node to make sure the response with the','line_number':418,'multiline':False]
['text':' CallbackCanceled error is needed to get the sufficient number of responses.','line_number':419,'multiline':False]
['text':' The response with the CallbackCanceled error should count as a response to the algorithm.','line_number':427,'multiline':False]
['text':' Confirm that starting with sufficient responses received will immediate complete.','line_number':433,'multiline':False]
['text':' set hasReceivedSufficientResponses to return true before the run starts','line_number':436,'multiline':False]
['text':' Wait until callback finishes.','line_number':445,'multiline':False]
['text':' TODO Enable this test once we have a way to test for invariants.','line_number':454,'multiline':False]
['text':' This test ensures we do not process more responses than we've scheduled callbacks for.','line_number':456,'multiline':False]
['text':' 0','line_number':496,'multiline':False]
['text':' Confirm that running via run() will finish once sufficient responses have been received.','line_number':498,'multiline':False]
['text':' namespace','line_number':526,'multiline':False]
['text':' namespace repl','line_number':527,'multiline':False]
['text':' namespace mongo','line_number':528,'multiline':False]
