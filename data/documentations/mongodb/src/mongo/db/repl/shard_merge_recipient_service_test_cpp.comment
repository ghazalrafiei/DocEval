['text':'*
 *    Copyright (C) 2020-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':' IWYU pragma: keep','line_number':32,'multiline':False]
['text':' IWYU pragma: keep','line_number':52,'multiline':False]
['text':' optime','line_number':146,'multiline':False]
['text':' opType','line_number':147,'multiline':False]
['text':' namespace','line_number':148,'multiline':False]
['text':' uuid','line_number':149,'multiline':False]
['text':' fromMigrate','line_number':150,'multiline':False]
['text':' checkExistenceForDiffInsert','line_number':151,'multiline':False]
['text':' version','line_number':152,'multiline':False]
['text':' o','line_number':153,'multiline':False]
['text':' o2','line_number':154,'multiline':False]
['text':' sessionInfo','line_number':155,'multiline':False]
['text':' upsert','line_number':156,'multiline':False]
['text':' wall clock time','line_number':157,'multiline':False]
['text':' statement ids','line_number':158,'multiline':False]
['text':' optime of previous write within same transaction','line_number':159,'multiline':False]
['text':' pre-image optime','line_number':160,'multiline':False]
['text':' post-image optime','line_number':161,'multiline':False]
['text':' ShardId of resharding recipient','line_number':162,'multiline':False]
['text':' _id','line_number':163,'multiline':False]
['text':' needsRetryImage','line_number':164,'multiline':False]
['text':' namespace','line_number':167,'multiline':False]
['text':'*
 * Mock OpObserver that tracks storage events.
 ','line_number':169,'multiline':True]
['text':' Need real (non-mock) storage for the oplog buffer.','line_number':225,'multiline':False]
['text':' The DropPendingCollectionReaper is required to drop the oplog buffer collection.','line_number':228,'multiline':False]
['text':' Set up OpObserver so that repl::logOp() will store the oplog entry's optime in','line_number':234,'multiline':False]
['text':' ReplClientInfo.','line_number':235,'multiline':False]
['text':' Add OpObserver needed by subclasses.','line_number':246,'multiline':False]
['text':' Fake replSet just for creating consistent URI for monitor','line_number':255,'multiline':False]
['text':' hasPrimary ','line_number':257,'multiline':True]
['text':' dollarPrefixHosts ','line_number':257,'multiline':True]
['text':' Automatically mark the state doc garbage collectable after data sync completion.','line_number':266,'multiline':False]
['text':' MockReplicaSet uses custom connection string which does not support auth.','line_number':274,'multiline':False]
['text':' Set the sslMode to allowSSL to avoid validation error.','line_number':278,'multiline':False]
['text':' Skipped unless tested explicitly, as we will not receive an FCV document from the donor','line_number':280,'multiline':False]
['text':' in these unittests without (unsightly) intervention.','line_number':281,'multiline':False]
['text':' Skip fetching retryable writes, as we will test this logic entirely in integration','line_number':285,'multiline':False]
['text':' tests.','line_number':286,'multiline':False]
['text':' Skip fetching committed transactions, as we will test this logic entirely in integration','line_number':291,'multiline':False]
['text':' tests.','line_number':292,'multiline':False]
['text':' setup mock networking that will be use to mock the backup cursor traffic.','line_number':297,'multiline':False]
['text':' Setup mock donor replica set.','line_number':310,'multiline':False]
['text':' hasPrimary ','line_number':312,'multiline':True]
['text':' dollarPrefixHosts ','line_number':312,'multiline':True]
['text':' Unset the sslMode.','line_number':324,'multiline':False]
['text':' Clearing the connection pool is necessary when doing tests which use the','line_number':334,'multiline':False]
['text':' ReplicaSetMonitor.  See src/mongo/dbtests/mock/mock_replica_set.h for details.','line_number':335,'multiline':False]
['text':' Advance term','line_number':351,'multiline':False]
['text':' Empty last batch.','line_number':401,'multiline':False]
['text':' First batch.','line_number':412,'multiline':False]
['text':' Read the most up to date data.','line_number':520,'multiline':False]
['text':'filter','line_number':548,'multiline':True]
['text':' The MockRemoteDBService does not actually implement the database, so to make our','line_number':556,'multiline':False]
['text':' find work correctly we must make sure there's only one document to find.','line_number':557,'multiline':False]
['text':' namespace ','line_number':563,'multiline':True]
['text':' uuid ','line_number':564,'multiline':True]
['text':' o ','line_number':565,'multiline':True]
['text':' o2 ','line_number':566,'multiline':True]
['text':' Accessors to class private members','line_number':576,'multiline':False]
['text':'*
 * This class adds the TenantMigrationRecipientOpObserver to the main test fixture class. The
 * OpObserver uses the TenantFileImporter, which is a ReplicaSetAwareService that creates its own
 * worker thread when a state document is inserted. We need to ensure the ReplicaSetAwareService
 * shutdown procedure is executed in order to properly clean up and join the worker thread.
 ','line_number':633,'multiline':True]
['text':' Test that access blocker exists.','line_number':673,'multiline':False]
['text':' Verify that backup cursor alive signal is sent every kBackupCursorKeepAliveIntervalMillis.','line_number':914,'multiline':False]
['text':' Set startGarbageCollect to true to simulate the case where 'recipientForgetMigration' is','line_number':938,'multiline':False]
['text':' received before 'recipientSyncData'.','line_number':939,'multiline':False]
['text':' namespace repl','line_number':1144,'multiline':False]
['text':' namespace mongo','line_number':1145,'multiline':False]
