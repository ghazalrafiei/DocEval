['text':'*
 *    Copyright (C) 2020-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':' IWYU pragma: no_include "ext/alloc_traits.h"','line_number':32,'multiline':False]
['text':'*
 * Mock OpObserver that tracks storage events.
 ','line_number':81,'multiline':True]
['text':' Need real (non-mock) storage for the test.','line_number':155,'multiline':False]
['text':' Register mock observer.','line_number':158,'multiline':False]
['text':' step up','line_number':165,'multiline':False]
['text':' Owned by service context opObserverRegistry','line_number':219,'multiline':False]
['text':' On a negative count, the CollectionCloner should use a zero count.','line_number':242,'multiline':False]
['text':' Run the cloner in a separate thread.','line_number':315,'multiline':False]
['text':' Wait for the failpoint to be reached','line_number':320,'multiline':False]
['text':' Finish test','line_number':324,'multiline':False]
['text':' Run the cloner in a separate thread.','line_number':340,'multiline':False]
['text':' Wait for the failpoint to be reached','line_number':345,'multiline':False]
['text':' Finish test','line_number':349,'multiline':False]
['text':' Run the cloner in a separate thread.','line_number':394,'multiline':False]
['text':' Wait for the failpoint to be reached','line_number':401,'multiline':False]
['text':' Set up data for preliminary stages','line_number':412,'multiline':False]
['text':' Set up documents to be returned from upstream node.','line_number':418,'multiline':False]
['text':' Set up data for preliminary stages.','line_number':438,'multiline':False]
['text':' Set up documents to be returned from upstream node. It should take 3 batches to clone the','line_number':444,'multiline':False]
['text':' documents.','line_number':445,'multiline':False]
['text':' Set up data for preliminary stages','line_number':466,'multiline':False]
['text':' Set up documents to be returned from upstream node.','line_number':472,'multiline':False]
['text':' Set up data for preliminary stages','line_number':492,'multiline':False]
['text':' Set up documents to be returned from upstream node.','line_number':498,'multiline':False]
['text':' Enable failpoint to make collection inserts to fail.','line_number':505,'multiline':False]
['text':' Run the cloner in a separate thread.','line_number':509,'multiline':False]
['text':' Set up data for preliminary stages','line_number':519,'multiline':False]
['text':' Set up documents to be returned from upstream node.','line_number':531,'multiline':False]
['text':' Run the cloner in a separate thread.','line_number':538,'multiline':False]
['text':' Wait until we get to the query stage.','line_number':544,'multiline':False]
['text':' Bring the server down.','line_number':547,'multiline':False]
['text':' Let us begin with the query stage.','line_number':550,'multiline':False]
['text':' On NamespaceNotFound, the TenantCollectionCloner should exit without doing anything.','line_number':556,'multiline':False]
['text':' The tenant collection cloner pre-stage makes a remote call to collStats to store in-progress','line_number':559,'multiline':False]
['text':' metrics.','line_number':560,'multiline':False]
['text':' NamespaceNotFound is treated the same as no indexes.','line_number':566,'multiline':False]
['text':' We expect the collection to *not* be created.','line_number':574,'multiline':False]
['text':' Set up data for preliminary stages.','line_number':583,'multiline':False]
['text':' majority read after listIndexes','line_number':587,'multiline':False]
['text':' Set up before-stage failpoint.','line_number':589,'multiline':False]
['text':' Set up documents to be returned from upstream node.','line_number':594,'multiline':False]
['text':' Run the cloner in a separate thread. The cloner should detect the drop at the beginning','line_number':601,'multiline':False]
['text':' of the query stage and exit normally, without copying over any documents.','line_number':602,'multiline':False]
['text':' Wait until we get to the query stage.','line_number':609,'multiline':False]
['text':' Verify we've made no progress yet.','line_number':612,'multiline':False]
['text':' Despite the name, this will also trigger on the initial batch.','line_number':616,'multiline':False]
['text':' Proceed with the query stage.','line_number':620,'multiline':False]
['text':' Set up data for preliminary stages.','line_number':627,'multiline':False]
['text':' majority read after listIndexes','line_number':631,'multiline':False]
['text':' Set up after-first-batch failpoint.','line_number':633,'multiline':False]
['text':' Set up documents to be returned from upstream node.','line_number':638,'multiline':False]
['text':' Run the cloner in a separate thread. The cloner should detect the drop on the second query','line_number':648,'multiline':False]
['text':' batch and exit normally.','line_number':649,'multiline':False]
['text':' We cloned two documents before we registered the drop.','line_number':653,'multiline':False]
['text':' Wait until we get to the query stage.','line_number':657,'multiline':False]
['text':' Verify we've processed exactly one batch.','line_number':660,'multiline':False]
['text':' Trigger drop before second batch.','line_number':664,'multiline':False]
['text':' Proceed with the query stage.','line_number':668,'multiline':False]
['text':' We receive a QueryPlanKilled error, then a NamespaceNotFound error, indicating that the','line_number':674,'multiline':False]
['text':' collection no longer exists in the database.','line_number':675,'multiline':False]
['text':' Set up data for preliminary stages.','line_number':677,'multiline':False]
['text':' Set up failpoints.','line_number':680,'multiline':False]
['text':' Wait until we get to the 'checkIfDonorCollectionIsEmpty' stage.','line_number':701,'multiline':False]
['text':' Despite the name, this will also trigger on the initial batch.','line_number':704,'multiline':False]
['text':' Proceed with the 'checkIfDonorCollectionIsEmpty' stage.','line_number':708,'multiline':False]
['text':' Follow-up the QueryPlanKilled error with a NamespaceNotFound.','line_number':712,'multiline':False]
['text':' We receive a QueryPlanKilled error, then a NamespaceNotFound error, indicating that the','line_number':721,'multiline':False]
['text':' collection no longer exists in the database.','line_number':722,'multiline':False]
['text':' Set up data for preliminary stages.','line_number':724,'multiline':False]
['text':' majority read after listIndexes','line_number':728,'multiline':False]
['text':' Set up failpoints.','line_number':730,'multiline':False]
['text':' Set up documents to be returned from upstream node.','line_number':738,'multiline':False]
['text':' Run the cloner in a separate thread. The cloner should detect the drop at the beginning','line_number':746,'multiline':False]
['text':' of the query stage and exit normally, without copying over any documents.','line_number':747,'multiline':False]
['text':' Wait until we get to the query stage.','line_number':754,'multiline':False]
['text':' Verify we've made no progress yet.','line_number':757,'multiline':False]
['text':' Despite the name, this will also trigger on the initial batch.','line_number':761,'multiline':False]
['text':' Proceed with the query stage.','line_number':765,'multiline':False]
['text':' Follow-up the QueryPlanKilled error with a NamespaceNotFound.','line_number':769,'multiline':False]
['text':' We receive a QueryPlanKilled error, then a NamespaceNotFound error, indicating that the','line_number':778,'multiline':False]
['text':' collection no longer exists in the database.','line_number':779,'multiline':False]
['text':' Set up data for preliminary stages.','line_number':781,'multiline':False]
['text':' majority read after listIndexes','line_number':785,'multiline':False]
['text':' Set up failpoints.','line_number':787,'multiline':False]
['text':' Set up documents to be returned from upstream node.','line_number':795,'multiline':False]
['text':' Run the cloner in a separate thread. The cloner should detect the drop during the query','line_number':803,'multiline':False]
['text':' stage. It will have copied over some documents before that.','line_number':804,'multiline':False]
['text':' Wait for us to process the first batch.','line_number':811,'multiline':False]
['text':' Verify we've only managed to store one batch.','line_number':814,'multiline':False]
['text':' This will cause the next batch to fail once (transiently).','line_number':818,'multiline':False]
['text':' Follow-up the previous error with NamespaceNotFound.','line_number':825,'multiline':False]
['text':' Simulate that the collection already exists with no data and no secondary index.','line_number':838,'multiline':False]
['text':' We should create the missing secondary indexes on the empty collection.','line_number':856,'multiline':False]
['text':' Simulate that the collection already exists with no data and some secondary indexes.','line_number':871,'multiline':False]
['text':' An index that has been dropped on the donor.','line_number':875,'multiline':False]
['text':' We should create the other missing secondary indexes on the empty collection.','line_number':894,'multiline':False]
['text':' Simulate that the collection already exists with no data and all matching secondary indexes.','line_number':906,'multiline':False]
['text':' We shouldn't need to create any secondary index.','line_number':925,'multiline':False]
['text':' Simulate that the collection already exists with some data.','line_number':933,'multiline':False]
['text':' We shouldn't need to create any secondary index.','line_number':957,'multiline':False]
['text':' Test that we have updated the stats.','line_number':959,'multiline':False]
['text':' Simulate that the namespace already exists under a different uuid.','line_number':967,'multiline':False]
['text':' A different uuid.','line_number':969,'multiline':False]
['text':' majority read after listIndexes','line_number':975,'multiline':False]
['text':' Test that the cloner correctly skips cloning this collection as it must have been dropped and','line_number':983,'multiline':False]
['text':' re-created on the donor. And the drop and the re-create will be covered by the oplog','line_number':984,'multiline':False]
['text':' application phase.','line_number':985,'multiline':False]
['text':' Simulate that the collection already exists under a different name with no index and no data.','line_number':997,'multiline':False]
['text':' Set up documents to be returned from upstream node.','line_number':1012,'multiline':False]
['text':' We should re-create the secondary indexes using the old ns.','line_number':1023,'multiline':False]
['text':' We should insert documents into the old ns.','line_number':1030,'multiline':False]
['text':' This test checks the condition where documents are inserted on the donor after the listIndexes','line_number':1035,'multiline':False]
['text':' call is made on the recipient, but before the query is done.  In that case we should skip the','line_number':1036,'multiline':False]
['text':' the query and never see the documents.','line_number':1037,'multiline':False]
['text':' Set up data for preliminary stages','line_number':1039,'multiline':False]
['text':' Set up documents to be returned from upstream node.','line_number':1059,'multiline':False]
['text':' Continue and finish. Final status is checked in the thread.','line_number':1063,'multiline':False]
['text':' namespace repl','line_number':1074,'multiline':False]
['text':' namespace mongo','line_number':1075,'multiline':False]
