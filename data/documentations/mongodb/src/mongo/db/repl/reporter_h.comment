['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':'*
 * Once scheduled, the reporter will periodically send the current replication progress, obtained
 * by invoking "_prepareReplSetUpdatePositionCommandFn", to its sync source until it encounters
 * an error.
 *
 * If the sync source cannot accept the current format (used by server versions 3.2.4 and above) of
 * the "replSetUpdatePosition" command, the reporter will not abort and instead downgrade the format
 * of the command it will send upstream.
 *
 * While the reporter is active, it will be in one of three states:
 * 1) triggered and waiting to send command to sync source as soon as possible.
 * 2) waiting for command response from sync source.
 * 3) waiting for at least "_keepAliveInterval" ms before sending command to sync source.
 *
 * Calling trigger() while the reporter is in state 1 or 2 will cause the reporter to immediately
 * send a new command upon receiving a successful command response.
 *
 * Calling trigger() while it is in state 3 sends a command upstream and cancels the current
 * keep alive timeout, resetting the keep alive schedule.
 ','line_number':51,'multiline':True]
['text':'*
     * Prepares a BSONObj describing an invocation of the replSetUpdatePosition command that can
     * be sent to this node's sync source to update it about our progress in replication.
     *
     * The returned status indicates whether or not the command was created.
     ','line_number':76,'multiline':True]
['text':'*
     * Returns sync target.
     ','line_number':92,'multiline':True]
['text':'*
     * Returns an informational string.
     ','line_number':97,'multiline':True]
['text':'*
     * Returns keep alive interval.
     * Reporter will periodically send replication status to sync source every "_keepAliveInterval"
     * until an error occurs.
     ','line_number':102,'multiline':True]
['text':'*
     * Returns true if a remote command has been scheduled (but not completed)
     * with the executor.
     ','line_number':109,'multiline':True]
['text':'*
     * Returns true if new data is available while a remote command is in progress.
     * The reporter will schedule a subsequent remote update immediately upon successful
     * completion of the previous command instead of when the keep alive callback runs.
     ','line_number':115,'multiline':True]
['text':'*
     * Cancels both scheduled and active remote command requests.
     * Returns immediately if the Reporter is not active.
     ','line_number':122,'multiline':True]
['text':'*
     * Waits until Reporter is inactive and returns reporter status.
     ','line_number':128,'multiline':True]
['text':'*
     * Signals to the Reporter that there is new information to be sent to the "_target" server.
     * Returns the _status, indicating any error the Reporter has encountered.
     ','line_number':133,'multiline':True]
['text':' ================== Test support API ===================','line_number':139,'multiline':False]
['text':'*
     * Returns scheduled time of keep alive timeout handler.
     ','line_number':141,'multiline':True]
['text':'*
     * Returns true if reporter is active.
     ','line_number':148,'multiline':True]
['text':'*
     * Prepares remote command to be run by the executor.
     ','line_number':153,'multiline':True]
['text':'*
     * Schedules remote command to be run by the executor with the given network timeout.
     ','line_number':158,'multiline':True]
['text':'*
     * Callback for processing response from remote command.
     ','line_number':163,'multiline':True]
['text':'*
     * Callback for preparing and sending remote command.
     ','line_number':168,'multiline':True]
['text':'*
     * Signals end of Reporter work and notifies waiters.
     ','line_number':174,'multiline':True]
['text':' Not owned by us.','line_number':179,'multiline':False]
['text':' Prepares update command object.','line_number':182,'multiline':False]
['text':' Host to whom the Reporter sends updates.','line_number':185,'multiline':False]
['text':' Reporter will send updates every "_keepAliveInterval" ms until the reporter is canceled or','line_number':188,'multiline':False]
['text':' encounters an error.','line_number':189,'multiline':False]
['text':' The network timeout used when sending an updatePosition command to our sync source.','line_number':192,'multiline':False]
['text':' Protects member data of this Reporter declared below.','line_number':195,'multiline':False]
['text':' Stores the most recent Status returned from the executor.','line_number':200,'multiline':False]
['text':' _isWaitingToSendReporter is true when Reporter is scheduled to be run by the executor and','line_number':203,'multiline':False]
['text':' subsequent updates have come in.','line_number':204,'multiline':False]
['text':' Callback handle to the scheduled remote command.','line_number':207,'multiline':False]
['text':' Callback handle to the scheduled task for preparing and sending the remote command.','line_number':210,'multiline':False]
['text':' Keep alive timeout callback will not run before this time.','line_number':213,'multiline':False]
['text':' If this date is Date_t(), the callback is either unscheduled or canceled.','line_number':214,'multiline':False]
['text':' Used for testing only.','line_number':215,'multiline':False]
['text':' namespace repl','line_number':219,'multiline':False]
['text':' namespace mongo','line_number':220,'multiline':False]
