['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':' IWYU pragma: no_include "ext/alloc_traits.h"','line_number':32,'multiline':False]
['text':'*
 * Checks that the priorities of all the arbiters in the configuration are 0.  If they were 1,
 * they should have been set to 0 in MemberConfig::initialize().  Otherwise, they are illegal.
 ','line_number':71,'multiline':True]
['text':'*
 * Checks that a configuration has no member with a "newlyAdded" field.  Such configurations are
 * valid for startup and reconfig but not for initiating a new replica set.
 ','line_number':88,'multiline':True]
['text':'*
 * Compares two initialized and validated replica set configurations and checks to see if the
 * transition from 'oldConfig' to 'newConfig' adds or removes at most 1 voting node.
 *
 * Assumes that the member id uniquely identifies a logical replica set node. We use the set of
 * member ids in the old and new config to determine the safety of the single node change.
 ','line_number':107,'multiline':True]
['text':' Add MemberId of voting nodes from each config into respective sets.','line_number':115,'multiline':False]
['text':'','line_number':124,'multiline':False]
['text':' The symmetric difference between the id sets of each config is the set of ids that are','line_number':125,'multiline':False]
['text':' present in either set but not in their intersection. A set X can be transformed into set Y','line_number':126,'multiline':False]
['text':' with 1 addition or removal operation if and only if their symmetric difference is equal to 1.','line_number':127,'multiline':False]
['text':' If the symmetric difference is 1, there are two possibilities:','line_number':128,'multiline':False]
['text':'','line_number':129,'multiline':False]
['text':' (1) There is exactly 1 element e in Y that does not appear in X. In this case we can','line_number':130,'multiline':False]
['text':' transform X to Y by adding the element e to X.','line_number':131,'multiline':False]
['text':'','line_number':132,'multiline':False]
['text':' (2) There is exactly 1 element in X that does not appear in Y. In this case we can transform','line_number':133,'multiline':False]
['text':' X to Y by removing the element e from X.','line_number':134,'multiline':False]
['text':'','line_number':135,'multiline':False]
['text':' The symmetric difference can't be larger than the union of both sets.','line_number':137,'multiline':False]
['text':'*
 * Compares two initialized and validated replica set configurations, and checks to
 * see if "newConfig" is a legal successor configuration to "oldConfig".
 *
 * Returns Status::OK() if "newConfig" may replace "oldConfig", or an indicative error
 * otherwise.
 *
 * The checks performed by this test are necessary, but may not be sufficient for
 * ensuring that "newConfig" is a legal successor to "oldConfig".  For example,
 * a legal reconfiguration must typically be executed on a node that is currently
 * primary under "oldConfig" and is electable under "newConfig".  Such checks that
 * require knowledge of which node is executing the configuration are out of scope
 * for this function.
 *
 * When "force" is true, skips config version check, since the version is guaranteed
 * to be valid either by "force" reconfig command or by internal use.
 ','line_number':151,'multiline':True]
['text':'','line_number':208,'multiline':False]
['text':' For every member config mNew in newConfig, if there exists member config mOld','line_number':209,'multiline':False]
['text':' in oldConfig such that mNew.getHostAndPort() == mOld.getHostAndPort(), it is required','line_number':210,'multiline':False]
['text':' that mNew.getId() == mOld.getId().','line_number':211,'multiline':False]
['text':'','line_number':212,'multiline':False]
['text':' Also, one may not use reconfig to change the value of the buildIndexes or','line_number':213,'multiline':False]
['text':' arbiterOnly flags.','line_number':214,'multiline':False]
['text':'','line_number':215,'multiline':False]
['text':' At this point, the _id and host fields are equal, so we're looking at the old and','line_number':238,'multiline':False]
['text':' new configurations for the same member node.','line_number':239,'multiline':False]
['text':' Skip the following check. This parameter can only be set to false in tests.','line_number':263,'multiline':False]
['text':' Use 'getBaseNumVotes()' since a node may be newly added at this point,','line_number':270,'multiline':False]
['text':' which would indicate that it temporarily has 'votes: 0'.','line_number':271,'multiline':False]
['text':' An overlap between an election and write quorum is guaranteed to exist if the number of','line_number':279,'multiline':False]
['text':' writable voting members is greater than or equal to the majority of voters. This is because','line_number':280,'multiline':False]
['text':' at least one writable voting member will be a part of the majority in any election. This','line_number':281,'multiline':False]
['text':' overlap is important so that if a candidate node that has not replicated recently committed','line_number':282,'multiline':False]
['text':' writes decides to run for election, the writable voting member participating in the election','line_number':283,'multiline':False]
['text':' will not vote for the candidate. As a result, the candidate cannot successfully become the','line_number':284,'multiline':False]
['text':' primary.','line_number':285,'multiline':False]
['text':' Use 'getBasePriority()' since newly added nodes also temporarily have 'priority: 0'.','line_number':291,'multiline':False]
['text':' If the aforementioned overlap doesn't exist, and we have a PSA set where the secondary can','line_number':294,'multiline':False]
['text':' run for election, there is a risk that the secondary will not have replicated recent majority','line_number':295,'multiline':False]
['text':' committed writes, but will be elected primary with the help of the arbiter. To prevent this','line_number':296,'multiline':False]
['text':' from happening,, we fail the reconfig and refer the user to the appropriate next steps.','line_number':297,'multiline':False]
['text':' namespace','line_number':311,'multiline':False]
['text':'*
 * Checks if the node with the given config index is electable, returning a useful
 * status message if not.
 ','line_number':313,'multiline':True]
['text':' Compare the two config objects ignoring the 'version' and 'term' fields.','line_number':334,'multiline':False]
['text':' No self-hosts were found using the fastpath; check with the slow path.','line_number':354,'multiline':False]
['text':' For non-force reconfigs, verify that the reconfig only adds or removes a single node.','line_number':509,'multiline':False]
['text':' This ensures that all quorums of the new config overlap with all quorums of the old','line_number':510,'multiline':False]
['text':' config.','line_number':511,'multiline':False]
['text':' namespace repl','line_number':555,'multiline':False]
['text':' namespace mongo','line_number':556,'multiline':False]
