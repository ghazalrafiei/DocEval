['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':' Set up mongod.','line_number':80,'multiline':False]
['text':' Set up ReplicationCoordinator and create oplog.','line_number':86,'multiline':False]
['text':' Ensure that we are primary.','line_number':90,'multiline':False]
['text':'*
 * Assert that oplog only has a single entry and return that oplog entry.
 ','line_number':95,'multiline':True]
['text':' Write to the oplog.','line_number':116,'multiline':False]
['text':' Ensure that msg fields were properly added to the oplog entry.','line_number':133,'multiline':False]
['text':' Ensure that the msg optime returned is the same as the last optime in the ReplClientInfo.','line_number':143,'multiline':False]
['text':'*
 * Checks optime and namespace in oplog entry.
 ','line_number':147,'multiline':True]
['text':'*
 * Test function that schedules two concurrent logOp() tasks using a thread pool.
 * Checks the state of the oplog collection against the optimes returned from logOp().
 * Before returning, updates 'opTimeNssMap' with the optimes from logOp() and 'oplogEntries' with
 * the contents of the oplog collection.
 ','line_number':161,'multiline':True]
['text':' Run 2 concurrent logOp() requests using the thread pool.','line_number':175,'multiline':False]
['text':' Run 2 concurrent logOp() requests using the thread pool.','line_number':184,'multiline':False]
['text':' Use a barrier with a thread count of 3 to ensure both logOp() tasks are complete before this','line_number':185,'multiline':False]
['text':' test thread can proceed with shutting the thread pool down.','line_number':186,'multiline':False]
['text':' Shut thread pool down.','line_number':203,'multiline':False]
['text':' Read oplog entries from the oplog collection starting with the entry with the most recent','line_number':207,'multiline':False]
['text':' optime.','line_number':208,'multiline':False]
['text':' Reverse 'oplogEntries' because we inserted the oplog entries in descending order by optime.','line_number':220,'multiline':False]
['text':' Look up namespaces and their respective optimes (returned by logOp()) in the map.','line_number':223,'multiline':False]
['text':'*
 * Inserts noop oplog entry with embedded namespace string.
 * Inserts optime/namespace pair into map while holding a lock on the mutex.
 * Returns optime of generated oplog entry.
 ','line_number':228,'multiline':True]
['text':' It is okay for multiple threads to maintain uncommitted WUOWs upon returning from','line_number':270,'multiline':False]
['text':' logOp() because each thread will hold an implicit MODE_IX lock on the oplog','line_number':271,'multiline':False]
['text':' collection.','line_number':272,'multiline':False]
['text':' It is okay for multiple threads to maintain uncommitted WUOWs upon returning from','line_number':301,'multiline':False]
['text':' logOp() because each thread will hold an implicit MODE_IX lock on the oplog','line_number':302,'multiline':False]
['text':' collection.','line_number':303,'multiline':False]
['text':' Revert the first logOp() call and confirm that there are no holes in the','line_number':306,'multiline':False]
['text':' oplog after committing the oplog entry with the more recent optime.','line_number':307,'multiline':False]
['text':' Abort WUOW by returning early. The oplog entry for this task should not','line_number':315,'multiline':False]
['text':' be present in the oplog.','line_number':316,'multiline':False]
['text':' It is okay for multiple threads to maintain uncommitted WUOWs upon returning from','line_number':347,'multiline':False]
['text':' logOp() because each thread will hold an implicit MODE_IX lock on the oplog','line_number':348,'multiline':False]
['text':' collection.','line_number':349,'multiline':False]
['text':' Revert the last logOp() call and confirm that there are no holes in the','line_number':352,'multiline':False]
['text':' oplog after committing the oplog entry with the earlier optime.','line_number':353,'multiline':False]
['text':' Abort WUOW by returning early. The oplog entry for this task should not','line_number':361,'multiline':False]
['text':' be present in the oplog.','line_number':362,'multiline':False]
['text':' Write to the oplog.','line_number':386,'multiline':False]
['text':' Ensure that msg fields were properly added to the oplog entry.','line_number':403,'multiline':False]
['text':' namespace','line_number':415,'multiline':False]
['text':' namespace repl','line_number':416,'multiline':False]
['text':' namespace mongo','line_number':417,'multiline':False]
