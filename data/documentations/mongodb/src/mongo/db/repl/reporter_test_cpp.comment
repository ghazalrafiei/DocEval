['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':' Our last known OpTime that this secondary has applied and journaled to.','line_number':113,'multiline':False]
['text':' Our last known OpTime that this secondary has applied, whether journaled or unjournaled.','line_number':115,'multiline':False]
['text':'*
     * Schedules network response and instructs network interface to process response.
     * Returns command object in the network request.
     ','line_number':127,'multiline':True]
['text':' Executor may still invoke reporter's callback before shutting down.','line_number':195,'multiline':False]
['text':' append an unknown field.','line_number':258,'multiline':False]
['text':' The serialized object should be the same as the original except for the unknown field.','line_number':278,'multiline':False]
['text':' null PrepareReplSetUpdatePositionCommandFn','line_number':292,'multiline':False]
['text':' null TaskExecutor','line_number':300,'multiline':False]
['text':' null PrepareReplSetUpdatePositionCommandFn','line_number':309,'multiline':False]
['text':' empty HostAndPort','line_number':318,'multiline':False]
['text':' zero keep alive interval.','line_number':327,'multiline':False]
['text':' negative keep alive interval.','line_number':336,'multiline':False]
['text':' Create a new test Reporter so we can configure the update position timeout.','line_number':377,'multiline':False]
['text':' Schedule a response to the updatePosition command at a time that exceeds the timeout. Then','line_number':391,'multiline':False]
['text':' make sure the reporter shut down due to a remote command timeout.','line_number':392,'multiline':False]
['text':' Reporter should have shut down.','line_number':402,'multiline':False]
['text':' If an error is returned, it should be recorded in the Reporter and not run again.','line_number':408,'multiline':False]
['text':' Schedule while we are already scheduled, it should set "isWaitingToSendReport", then','line_number':428,'multiline':False]
['text':' automatically','line_number':429,'multiline':False]
['text':' schedule itself after finishing.','line_number':430,'multiline':False]
['text':' Second trigger (first time in setUp).','line_number':434,'multiline':False]
['text':' Schedule multiple times while we are already scheduled, it should set "isWaitingToSendReport",','line_number':450,'multiline':False]
['text':' then automatically schedule itself after finishing, but not a third time since the latter','line_number':451,'multiline':False]
['text':' two will contain the same batch of updates.','line_number':452,'multiline':False]
['text':' Second trigger (first time in setUp).','line_number':456,'multiline':False]
['text':' Third trigger.','line_number':461,'multiline':False]
['text':' This will cause command preparation to fail for the subsequent request.','line_number':532,'multiline':False]
['text':' Any error status other than ShutdownInProgress will cause the reporter to fassert.','line_number':614,'multiline':False]
['text':' Run callback to prepare command and attempt to send command to sync source.','line_number':625,'multiline':False]
['text':' '_keepAliveTimeoutWhen' is reset by trigger() not by the canceled callback.','line_number':688,'multiline':False]
['text':' A new keep alive timeout should be scheduled.','line_number':696,'multiline':False]
['text':' '_keepAliveTimeoutWhen' is reset by trigger() not by the canceled callback.','line_number':718,'multiline':False]
['text':' Executor should invoke reporter callback with a ErrorCodes::CallbackCanceled status.','line_number':731,'multiline':False]
['text':' namespace','line_number':739,'multiline':False]
