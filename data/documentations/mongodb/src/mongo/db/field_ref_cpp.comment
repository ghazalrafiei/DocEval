['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':' IWYU pragma: no_include "ext/alloc_traits.h"','line_number':35,'multiline':False]
['text':' We guarantee that accesses through getPart() will be valid while 'this' is. So we','line_number':58,'multiline':False]
['text':' keep a copy in a local sting.','line_number':59,'multiline':False]
['text':' Separate the field parts using '.' as a delimiter.','line_number':66,'multiline':False]
['text':' If cur != beg then we advanced cur in the loop above, so we have a real sequence','line_number':76,'multiline':False]
['text':' of characters to add as a new part. Otherwise, we may be parsing something odd,','line_number':77,'multiline':False]
['text':' like "..", and we need to add an empty StringData piece to represent the "part"','line_number':78,'multiline':False]
['text':' in-between the dots. This also handles the case where 'beg' and 'cur' are both','line_number':79,'multiline':False]
['text':' at 'end', which can happen if we are parsing anything with a terminal "."','line_number':80,'multiline':False]
['text':' character. In that case, we still need to add an empty part, but we will break','line_number':81,'multiline':False]
['text':' out of the loop below since we will not execute the guarded 'continue' and will','line_number':82,'multiline':False]
['text':' instead reach the break statement.','line_number':83,'multiline':False]
['text':' Reserve some space in the string. We know we will have, at minimum, a character for','line_number':153,'multiline':False]
['text':' each component we are writing, and a dot for each component, less one. We don't want','line_number':154,'multiline':False]
['text':' to reserve more, since we don't want to forfeit the SSO if it is applicable.','line_number':155,'multiline':False]
['text':' Concatenate the fields to a new string','line_number':158,'multiline':False]
['text':' Make the new string our contents','line_number':166,'multiline':False]
['text':' Before we reserialize, it's possible that _cachedSize != _size because parts were added or','line_number':169,'multiline':False]
['text':' removed. This reserialization process reconciles the components in our cached string','line_number':170,'multiline':False]
['text':' (_dotted) with the modified path.','line_number':171,'multiline':False]
['text':' Fixup the parts to refer to the new string','line_number':174,'multiline':False]
['text':' There is one case where we expect to see the "where" iterator to be at "end" here: we','line_number':181,'multiline':False]
['text':' are at the last part of the FieldRef and that part is the empty string. In that case, we','line_number':182,'multiline':False]
['text':' need to make sure we do not dereference the "where" iterator.','line_number':183,'multiline':False]
['text':' skip over '.' unless we are at the end.','line_number':192,'multiline':False]
['text':' Drop any replacements','line_number':199,'multiline':False]
['text':' boost::container::small_vector already checks that the index `i` is in bounds, so we don't','line_number':204,'multiline':False]
['text':' bother checking here. If we change '_parts' to a different container implementation','line_number':205,'multiline':False]
['text':' that no longer performs a bounds check, we should add one here.','line_number':206,'multiline':False]
['text':' Can't be a prefix if the size is equal to or larger.','line_number':220,'multiline':False]
['text':' Empty FieldRef is not a prefix of anything.','line_number':225,'multiline':False]
['text':' Fast-path if we want the whole thing','line_number':310,'multiline':False]
['text':' correct for '.'','line_number':316,'multiline':False]
['text':' correct for last '.'','line_number':322,'multiline':False]
['text':' make sure next thing is a dot','line_number':341,'multiline':False]
['text':' namespace mongo','line_number':385,'multiline':False]
