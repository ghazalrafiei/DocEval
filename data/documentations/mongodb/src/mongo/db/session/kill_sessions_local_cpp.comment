['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':'*
 * Shortcut method shared by the various forms of session kill below. Every session kill operation
 * consists of the following stages:
 *  1) Select the sessions to kill, based on their lsid or owning user account (achieved through the
 *     'matcher') and further refining that list through the 'filterFn'.
 *  2) If any of the selected sessions are currently checked out, interrupt the owning operation
 *     context with 'reason' as the code.
 *  3) Finish killing the selected and interrupted sessions through the 'killSessionFn'.
 ','line_number':63,'multiline':True]
['text':' TODO (SERVER-33850): Rename KillAllSessionsByPattern and','line_number':89,'multiline':False]
['text':' ScopedKillAllSessionsByPatternImpersonator to not refer to session kill','line_number':90,'multiline':False]
['text':' namespace','line_number':99,'multiline':False]
['text':' This is the same test as in the filter, but we must check again now','line_number':113,'multiline':False]
['text':' that the session is checked out.','line_number':114,'multiline':False]
['text':' If the transaction is aborted here, it means it was aborted after','line_number':146,'multiline':False]
['text':' the filter.  The most likely reason for this is that the transaction','line_number':147,'multiline':False]
['text':' was active and the session kill aborted it.  We still want to log','line_number':148,'multiline':False]
['text':' that as aborted due to transactionLifetimeLimitSessions.','line_number':149,'multiline':False]
['text':' Filter for sessions that have a prepared transaction.','line_number':187,'multiline':False]
['text':' We're holding the RSTL, so the transaction shouldn't be otherwise','line_number':191,'multiline':False]
['text':' affected.','line_number':192,'multiline':False]
['text':' Abort the prepared transaction and invalidate the session it is','line_number':194,'multiline':False]
['text':' associated with.','line_number':195,'multiline':False]
['text':' Create a new opCtx because we need an empty locker to refresh the locks.','line_number':202,'multiline':False]
['text':' Scan the sessions again to get the list of all sessions with prepared transaction','line_number':210,'multiline':False]
['text':' to yield their locks.','line_number':211,'multiline':False]
['text':' Yield locks for prepared transactions. When scanning and killing','line_number':223,'multiline':False]
['text':' operations, all prepared transactions are included in the list. Even','line_number':224,'multiline':False]
['text':' though new sessions may be created after the scan, none of them can','line_number':225,'multiline':False]
['text':' become prepared during stepdown, since the RSTL has been enqueued,','line_number':226,'multiline':False]
['text':' preventing any new writes.','line_number':227,'multiline':False]
['text':' It is illegal to invalidate the sessions if the operation has a session checked out.','line_number':242,'multiline':False]
['text':' namespace mongo','line_number':263,'multiline':False]
