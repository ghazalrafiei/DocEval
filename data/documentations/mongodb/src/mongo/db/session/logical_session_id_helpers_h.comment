['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':'*
 * Get the currently logged in user's UID digest.
 ','line_number':50,'multiline':True]
['text':'*
 * Get a user digest for a specific user/db identifier.
 ','line_number':55,'multiline':True]
['text':'*
 * Returns if the given session is a parent session, ie only has fields that could have come from an
 * external client.
 ','line_number':60,'multiline':True]
['text':'*
 * Returns if the given session is a child session, ie it was created on behalf of an operation that
 * already had a session.
 ','line_number':66,'multiline':True]
['text':'*
 * Returns the parent session id for the given session id if there is one.
 ','line_number':72,'multiline':True]
['text':'*
 * Returns the upconverted parent session id for the given session id if there is one.
 * Otherwise, returns the session id itself.
 ','line_number':77,'multiline':True]
['text':'*
 * Returns true if the session with the given session id is an internal session for internal
 * transactions for retryable writes.
 ','line_number':83,'multiline':True]
['text':'*
 * Returns true if the txnRetryCounter is still the default value, meaning that for the relevant
 * internal transaction, no retries have occurred.
 ','line_number':89,'multiline':True]
['text':'*
 * Returns true if the session with the given session id is an internal session for internal
 * transactions for non-retryable writes (i.e. writes in a session without a transaction number).
 ','line_number':95,'multiline':True]
['text':'*
 * Helpers to make internal sessions.
 ','line_number':101,'multiline':True]
['text':'*
 * Factory functions to generate logical session records.
 ','line_number':108,'multiline':True]
['text':'*
 * We recommend acquiring a system session through the session pool. It can be acquired through this
 * method InternalSessionPool::acquireSystemSession().
 ','line_number':116,'multiline':True]
['text':'*
 * Factory functions to make logical session records. The overloads that
 * take an OperationContext should be used when possible, as they will also set the
 * user information on the record.
 ','line_number':122,'multiline':True]
['text':' namespace logical_session_id_helpers','line_number':142,'multiline':False]
['text':' namespace mongo','line_number':143,'multiline':False]
