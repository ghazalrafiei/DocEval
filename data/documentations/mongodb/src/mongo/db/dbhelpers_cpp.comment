['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':' fetch a single object from collection ns that matches query
   set your db SavedContext first
','line_number':112,'multiline':True]
['text':' extractAndAttachPipelineStages ','line_number':143,'multiline':True]
['text':' A collection clustered on _id implicitly has an _id index but no explicit','line_number':176,'multiline':False]
['text':' IndexDescriptor tied to it.','line_number':177,'multiline':False]
['text':' There is no explicit IndexDescriptor for _id on a collection clustered by _id. However,','line_number':213,'multiline':False]
['text':' the RecordId can be constructed directly from the input.','line_number':214,'multiline':False]
['text':' Acquires necessary locks to read the collection with the given namespace. If this is an oplog','line_number':225,'multiline':False]
['text':' read, use AutoGetOplog for simplified locking.','line_number':226,'multiline':False]
['text':' Simplify locking rules for oplog collection.','line_number':233,'multiline':False]
['text':' Non-yielding collection scans from InternalPlanner will never error.','line_number':256,'multiline':False]
['text':' Non-yielding collection scans from InternalPlanner will never error.','line_number':281,'multiline':False]
['text':' Use an UnreplicatedWritesBlock to avoid generating an oplog entry for this no-op update.','line_number':404,'multiline':False]
['text':' The update is being used to generated write conflicts and isn't modifying the data itself, so','line_number':405,'multiline':False]
['text':' secondaries don't need to know about it. Also set CollectionUpdateArgs::update to an empty','line_number':406,'multiline':False]
['text':' BSONObj because that's a second way OpObserverImpl::onUpdate() detects and ignores no-op','line_number':407,'multiline':False]
['text':' updates.','line_number':408,'multiline':False]
['text':' indexesAffected ','line_number':419,'multiline':True]
['text':' opDebug ','line_number':420,'multiline':True]
['text':' namespace mongo','line_number':426,'multiline':False]
