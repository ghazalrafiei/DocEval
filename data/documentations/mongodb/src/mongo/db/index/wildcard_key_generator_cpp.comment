['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':' If the user does not specify any projection, then we default to a projection of {_id: 0} in order','line_number':64,'multiline':False]
['text':' to prevent the _id field from being indexed, since it already has its own dedicated index.','line_number':65,'multiline':False]
['text':' If the enclosing object is an array, then the current element's fieldname is the array index, so','line_number':68,'multiline':False]
['text':' we omit this when computing the full path. Otherwise, the full path is the pathPrefix plus the','line_number':69,'multiline':False]
['text':' element's fieldname.','line_number':70,'multiline':False]
['text':' If the enclosing object is not an array, then the final path component should be its field name.','line_number':77,'multiline':False]
['text':' Verify that this is the case and then pop it off the FieldRef.','line_number':78,'multiline':False]
['text':' Append pre-extracted elements to 'keyString'. This function is used for compound wildcard index','line_number':86,'multiline':False]
['text':' keys generation.','line_number':87,'multiline':False]
['text':' Append 'MinKey' to 'keyString'. Multikey path keys use 'MinKey' for non-wildcard fields.','line_number':102,'multiline':False]
['text':'*
 * A helper class for generating all the various types of keys for a wildcard index.
 *
 * This class stores a bunch of references to avoid copying. Because of this, users should be
 * careful to ensure this object does not outlive any of them.
 ','line_number':110,'multiline':True]
['text':' Traverses every path of the post-projection document, adding keys to the set as it goes.','line_number':139,'multiline':False]
['text':' Helper functions to format the entry appropriately before adding it to the key/path tracker.','line_number':143,'multiline':False]
['text':' Helper to check whether the element is a nested array, and conditionally add it to 'keys'.','line_number':148,'multiline':False]
['text':' If the element's fieldName contains a ".", fast-path skip it because it's not queryable.','line_number':169,'multiline':False]
['text':' Append the element's fieldname to the path, if the enclosing object is not an array.','line_number':173,'multiline':False]
['text':' If this is a nested array, we don't descend it but instead index it as a value.','line_number':178,'multiline':False]
['text':' Add an entry for the multi-key path, and then fall through to BSONType::Object.','line_number':183,'multiline':False]
['text':' Remove the element's fieldname from the path, if it was pushed onto it earlier.','line_number':199,'multiline':False]
['text':' Wildcard keys are of the form { "": "path.to.field", "": <collation-aware value> }.','line_number':205,'multiline':False]
['text':' Multikey paths are denoted by a key of the form { "": 1, "": "path.to.array" }. The argument','line_number':234,'multiline':False]
['text':' 'multikeyPaths' may be nullptr if the access method is being used in an operation which does','line_number':235,'multiline':False]
['text':' not require multikey path generation.','line_number':236,'multiline':False]
['text':' If this element is an array whose parent is also an array, index it as a value.','line_number':260,'multiline':False]
['text':' In keeping with the behaviour of regular indexes, an empty object is indexed as-is while','line_number':271,'multiline':False]
['text':' empty arrays are indexed as 'undefined'.','line_number':272,'multiline':False]
['text':' namespace','line_number':278,'multiline':False]
['text':' The _keyPattern is either {..., "$**": 1, ..} for all paths or','line_number':289,'multiline':False]
['text':' {.., "path.$**": 1, ...} for a single subtree. If we are indexing a single subtree','line_number':290,'multiline':False]
['text':' then we will project just that path.','line_number':291,'multiline':False]
['text':' If we're indexing a single subtree, we can't also specify a path projection.','line_number':298,'multiline':False]
['text':' Construct a dummy ExpressionContext for ProjectionExecutor. It's OK to set the','line_number':307,'multiline':False]
['text':' ExpressionContext's OperationContext and CollatorInterface to 'nullptr' and the namespace','line_number':308,'multiline':False]
['text':' string to '' here; since we ban computed fields from the projection, the ExpressionContext','line_number':309,'multiline':False]
['text':' will never be used.','line_number':310,'multiline':False]
['text':' We should initialize BtreeKeyGenerators if 'keyPattern' is compound.','line_number':349,'multiline':False]
['text':' isSparse ','line_number':353,'multiline':True]
['text':' isSparse ','line_number':360,'multiline':True]
['text':' Extract elements for regular fields if this is a compound wildcard index.','line_number':381,'multiline':False]
['text':' multikeyPaths is allowed to be nullptr','line_number':392,'multiline':False]
['text':' If no key is generated for this index at this point, that means the document doesn't have any','line_number':411,'multiline':False]
['text':' field that is indexed by the wildcard field. We should still add index keys for this','line_number':412,'multiline':False]
['text':' document if the document has any regular field of a compound wildcad index. For example,','line_number':413,'multiline':False]
['text':' a document {a: 1} should still be indexed by this compound wildcard index {a:1, "b.$**": 1}.','line_number':414,'multiline':False]
['text':' In this case, we generate an index key {'': 1, '': MinKey, '': MinKey} for this document.','line_number':415,'multiline':False]
['text':' We use 'MinKey' for both the '$_path' field and the wildcard field similar to what we','line_number':423,'multiline':False]
['text':' use in multikey-path index keys.','line_number':424,'multiline':False]
['text':' namespace mongo','line_number':441,'multiline':False]
