['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':'*
 * OperationContextGroup maintains a collection of operation contexts so that they may all be killed
 * on a common event (typically stepdown).  Its public member functions serialize access to private
 * data members.
 ','line_number':44,'multiline':True]
['text':'*
     * Makes an OperationContext on `client` and returns a Context object to track it.  On
     * destruction of the returned Context, the OperationContext is destroyed and its corresponding
     * entry in *this is erased.  If *this has been interrupted already, the new context will be
     * interrupted immediately.
     ','line_number':65,'multiline':True]
['text':'*
     * Takes ownership of the OperationContext from `ctx`, and returns a Context object to track it.
     * On destruction of the Context, its entry in *this is erased and its corresponding
     * OperationContext is destroyed. If *this has been interrupted already, `ctx` will be
     * interrupted immediately.
     ','line_number':73,'multiline':True]
['text':'*
     * Moves the OperationContext of `ctx` from its current OperationContextGroup into *this.
     * Do this to protect an OperationContext from being interrupted along with the rest of its
     * group, or to expose `ctx` to this->interrupt().  Taking from a Context already in *this is
     * equivalent to moving from `ctx`. Taking a moved-from Context yields another moved-from
     * Context.
     ','line_number':81,'multiline':True]
['text':'
     * Interrupts all the OperationContexts maintained in *this.
     ','line_number':90,'multiline':True]
['text':'*
     * Reports whether the group has any OperationContexts.  This must be true before the destructor
     * is called.  Its usefulness is typically limited to invariants.
     ','line_number':95,'multiline':True]
['text':' class OperationContextGroup','line_number':107,'multiline':False]
['text':'*
 * Context tracks one OperationContext*, and on destruction unregisters and destroys the associated
 * OperationContext.  May be used as if it were an OperationContext*.
 *
 * The lifetime of an OperationContextGroup::Context object must not exceed that of its
 * OperationContextGroup, unless it has been moved from, taken from (see
 * OperationContextGroup::take), or discarded.
 ','line_number':109,'multiline':True]
['text':'*
     * Returns a pointer to the tracked OperationContext, or nullptr if *this has been moved from.
     ','line_number':131,'multiline':True]
['text':'*
     * These enable treating a Context as if it were an OperationContext*.
     ','line_number':138,'multiline':True]
['text':' because op-> will not use the conversion','line_number':145,'multiline':False]
['text':'*
     * Destroys and unregisters the corresponding OperationContext.  After this operation, *this is
     * an xvalue, and can only be destroyed.
     ','line_number':150,'multiline':True]
['text':' class OperationContextGroup::Context','line_number':165,'multiline':False]
['text':' namespace mongo','line_number':167,'multiline':False]
