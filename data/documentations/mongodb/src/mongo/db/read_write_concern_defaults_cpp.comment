['text':'*
 *    Copyright (C) 2019-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':' Intentionally empty, since construction happens through different code paths depending on','line_number':73,'multiline':False]
['text':' the binary','line_number':74,'multiline':False]
['text':' namespace','line_number':78,'multiline':False]
['text':' If the setDefaultRWConcern command tries to unset the global default write concern when it','line_number':160,'multiline':False]
['text':' has already been set, throw an error.','line_number':161,'multiline':False]
['text':' wc->usedDefaultConstructedWC indicates that the defaultWriteConcern given in the','line_number':162,'multiline':False]
['text':' setDefaultRWConcern command was empty (i.e. {defaultWriteConcern: {}})','line_number':163,'multiline':False]
['text':' If current->getDefaultWriteConcern exists, that means the global default write concern has','line_number':164,'multiline':False]
['text':' already been set.','line_number':165,'multiline':False]
['text':' The affected document wasn't the read write concern defaults document.','line_number':183,'multiline':False]
['text':' Note this will throw if the document can't be parsed. In the case of a delete, there will be','line_number':187,'multiline':False]
['text':' no new defaults document and the RWConcern will be default constructed, which matches the','line_number':188,'multiline':False]
['text':' behavior when lookup discovers a non-existent defaults document.','line_number':189,'multiline':False]
['text':' Use the new defaults if they have a higher epoch, if there are no defaults in the cache,','line_number':220,'multiline':False]
['text':' or if the found defaults have no epoch, meaning there are no defaults in config.settings.','line_number':221,'multiline':False]
['text':' Log only if we updated the read- or write-concern defaults themselves.','line_number':231,'multiline':False]
['text':' Since CWRWC is ok with continuing to use a value well after it has been invalidated','line_number':249,'multiline':False]
['text':' (since RWC defaults apply for the lifetime of the op/cursor), we don't need to check','line_number':250,'multiline':False]
['text':' defaultsValue.isValid() here, and we don't need to return the Handle, since callers don't','line_number':251,'multiline':False]
['text':' need to check defaultsValue.isValid() later, either.  Just dereference it to get the','line_number':252,'multiline':False]
['text':' underlying contents.','line_number':253,'multiline':False]
['text':' Only overwrite the default read concern and its source if it has already been set on mongos.','line_number':263,'multiline':False]
['text':' If the config hasn't yet been loaded on the node, the default will be w:1, since we have no','line_number':274,'multiline':False]
['text':' way of calculating the implicit default. This means that after we have loaded our config,','line_number':275,'multiline':False]
['text':' nodes could change their implicit write concern default. This is safe since we shouldn't be','line_number':276,'multiline':False]
['text':' accepting writes that need a write concern before we have loaded our config.','line_number':277,'multiline':False]
['text':' This prevents overriding the default write concern and its source on mongos if it has','line_number':278,'multiline':False]
['text':' already been set through the config server.','line_number':279,'multiline':False]
['text':' cacheSize ','line_number':373,'multiline':True]
['text':' namespace mongo','line_number':380,'multiline':False]
