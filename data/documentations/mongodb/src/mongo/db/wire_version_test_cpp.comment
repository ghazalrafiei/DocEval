['text':'*
 *    Copyright (C) 2021-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':' MongoDB 2.4 and earlier do not have maxWireVersion/minWireVersion in their 'isMaster'','line_number':67,'multiline':False]
['text':' replies. The absence of a wire version is interpreted as the min and max wire versions both','line_number':68,'multiline':False]
['text':' being 0.','line_number':69,'multiline':False]
['text':' Min, max FCV version pairs representing valid WireVersion ranges for variable binary','line_number':104,'multiline':False]
['text':' versions used to communicate with the MongoD 'latest' binary version.','line_number':105,'multiline':False]
['text':' MongoD 'latest' binary','line_number':107,'multiline':False]
['text':' upgraded FCV','line_number':109,'multiline':False]
['text':' downgraded 'last-cont' FCV','line_number':111,'multiline':False]
['text':' downgraded 'last-lts' FCV','line_number':113,'multiline':False]
['text':' MongoS binary versions','line_number':116,'multiline':False]
['text':' 'latest' binary','line_number':118,'multiline':False]
['text':' 'last-cont' binary','line_number':120,'multiline':False]
['text':' 'last-lts' binary','line_number':122,'multiline':False]
['text':'
     * Test communication between:
     * MongoD 'latest' binary version <-> MongoD 'latest' binary version
     * 'latest' should always be able to communicate to 'latest' regardless of FCV.
     ','line_number':125,'multiline':True]
['text':' We don't need to test when FCV != 'latest' && client FCV != server FCV because we','line_number':133,'multiline':False]
['text':' don't expect users to be in this state when following our recommended','line_number':134,'multiline':False]
['text':' upgrade/downgrade procedure.','line_number':135,'multiline':False]
['text':'
     * Test communication between:
     * MongoD 'latest' binary version <-> 'last-cont' binary version with 'last-cont' FCV
     ','line_number':149,'multiline':True]
['text':' 'latest' binary with 'latest' FCV  -> 'last-cont' binary with 'last-cont' FCV','line_number':154,'multiline':False]
['text':' 'latest' binary with 'last-cont' FCV  -> 'last-cont' binary with 'last-cont' FCV','line_number':161,'multiline':False]
['text':' 'last-cont' binary with 'last-cont' FCV -> 'latest' binary with 'latest' FCV','line_number':168,'multiline':False]
['text':' 'last-cont' binary with 'last-cont' FCV -> 'latest' binary with 'last-cont' FCV','line_number':175,'multiline':False]
['text':'
     * Test communication between:
     * MongoD 'latest' binary version <-> 'last-lts' binary version with 'last-lts' FCV
     ','line_number':182,'multiline':True]
['text':' 'latest' binary with 'latest' FCV  -> 'last-lts' binary with 'last-lts' FCV','line_number':187,'multiline':False]
['text':' 'latest' binary with 'last-cont' FCV  -> 'last-lts' binary with 'last-lts' FCV','line_number':194,'multiline':False]
['text':' 'latest' binary with 'last-lts' FCV  -> 'last-lts' binary with 'last-lts' FCV','line_number':203,'multiline':False]
['text':' 'last-lts' binary with 'last-lts' FCV -> 'latest' binary with 'latest' FCV','line_number':210,'multiline':False]
['text':' 'last-lts' binary with 'last-lts' FCV -> 'latest' binary with 'last-lts' FCV','line_number':217,'multiline':False]
['text':'
     * Test communication between:
     * variable MongoS binary version -> MongoD 'latest' binary version
     * Note that it is disallowed for MongoS to communicate with a lower binary server.
     ','line_number':224,'multiline':True]
['text':' MongoS 'latest' binary can communicate with all FCV versions.','line_number':232,'multiline':False]
['text':' MongoS 'last-cont' binary can only communicate with MongoD downgraded 'last-cont' and','line_number':233,'multiline':False]
['text':' 'last-lts' FCV.','line_number':234,'multiline':False]
['text':' MongoS 'last-lts' binary can only communicate with MongoD downgraded 'last-lts' FCV.','line_number':235,'multiline':False]
['text':' A mongos is unable to communicate with a fully upgraded cluster with a higher wire version.','line_number':259,'multiline':False]
['text':' Server is fully upgraded to the latest wire version.','line_number':261,'multiline':False]
['text':' The client (this mongos server) only has the previous wire version.','line_number':268,'multiline':False]
['text':' namespace','line_number':275,'multiline':False]
['text':' namespace mongo','line_number':276,'multiline':False]
