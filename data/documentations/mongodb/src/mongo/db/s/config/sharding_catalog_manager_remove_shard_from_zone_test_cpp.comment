['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':' Shard A should still be in zone 'z'.','line_number':88,'multiline':False]
['text':' Shard B should not be in zone 'z'.','line_number':97,'multiline':False]
['text':' Insert a chunk range document referring to a different zone','line_number':118,'multiline':False]
['text':' Shard A should not be in zone 'z'.','line_number':130,'multiline':False]
['text':' Shard B should not be in zone 'z'.','line_number':138,'multiline':False]
['text':' Shard A should still be in zone 'z'.','line_number':171,'multiline':False]
['text':' Shard B should not be in zone 'z'.','line_number':181,'multiline':False]
['text':' Shard A should still be in zone 'z'.','line_number':202,'multiline':False]
['text':' Shard A should still be in zone 'z'.','line_number':228,'multiline':False]
['text':' Shard B should not be in zone 'z'.','line_number':237,'multiline':False]
['text':'
// TODO: This test fails while an OpObserver is present, since the insert of the invalid shard
// doc fails.
TEST_F(RemoveShardFromZoneTest, RemoveZoneFromShardShouldErrorIfShardDocIsMalformed) {
    // Note: invalid because tags is in string instead of array.
    BSONObj invalidShardDoc(BSON("_id"
                                 << "a"
                                 << "host"
                                 << "a:1"
                                 << "tags"
                                 << "z"));

    insertToConfigCollection(
        operationContext(), NamespaceString::kConfigsvrShardsNamespace, invalidShardDoc);


    auto status =
ShardingCatalogManager::get(operationContext())->removeShardFromZone(operationContext(), "a", "z");
    ASSERT_EQ(ErrorCodes::TypeMismatch, status);
}
','line_number':247,'multiline':True]
['text':' unnamed namespace','line_number':268,'multiline':False]
['text':' namespace mongo','line_number':269,'multiline':False]
