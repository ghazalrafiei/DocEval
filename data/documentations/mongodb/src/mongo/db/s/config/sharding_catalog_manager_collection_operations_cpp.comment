['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':' This is a best-effort attempt to refresh the shard 'shardEntry'. Fire and forget an','line_number':144,'multiline':False]
['text':' asynchronous '_flushRoutingTableCacheUpdates' request.','line_number':145,'multiline':False]
['text':' Returns the pipeline updates to be used for updating a refined collection's chunk and tag','line_number':156,'multiline':False]
['text':' documents.','line_number':157,'multiline':False]
['text':'','line_number':158,'multiline':False]
['text':' The chunk updates:','line_number':159,'multiline':False]
['text':' [{$set: {','line_number':160,'multiline':False]
['text':'    min: {$arrayToObject: {$concatArrays: [','line_number':161,'multiline':False]
['text':'      {$objectToArray: "$min"},','line_number':162,'multiline':False]
['text':'      {$literal: [{k: <new_sk_suffix_1>, v: MinKey}, ...]},','line_number':163,'multiline':False]
['text':'    ]}},','line_number':164,'multiline':False]
['text':'    max: {$let: {','line_number':165,'multiline':False]
['text':'      vars: {maxAsArray: {$objectToArray: "$max"}},','line_number':166,'multiline':False]
['text':'      in: {','line_number':167,'multiline':False]
['text':'        {$arrayToObject: {$concatArrays: [','line_number':168,'multiline':False]
['text':'          "$$maxAsArray",','line_number':169,'multiline':False]
['text':'          {$cond: {','line_number':170,'multiline':False]
['text':'            if: {$allElementsTrue: [{$map: {','line_number':171,'multiline':False]
['text':'              input: "$$maxAsArray",','line_number':172,'multiline':False]
['text':'              in: {$eq: [{$type: "$$this.v"}, "maxKey"]},','line_number':173,'multiline':False]
['text':'            }}]},','line_number':174,'multiline':False]
['text':'            then: {$literal: [{k: <new_sk_suffix_1>, v: MaxKey}, ...]},','line_number':175,'multiline':False]
['text':'            else: {$literal: [{k: <new_sk_suffix_1>, v: MinKey}, ...]},','line_number':176,'multiline':False]
['text':'          }}','line_number':177,'multiline':False]
['text':'        ]}}','line_number':178,'multiline':False]
['text':'      }','line_number':179,'multiline':False]
['text':'    }}','line_number':180,'multiline':False]
['text':'  }},','line_number':181,'multiline':False]
['text':'  {$unset: "jumbo"}]','line_number':182,'multiline':False]
['text':'','line_number':183,'multiline':False]
['text':' The tag update:','line_number':184,'multiline':False]
['text':' [{$set: {','line_number':185,'multiline':False]
['text':'    min: {$arrayToObject: {$concatArrays: [','line_number':186,'multiline':False]
['text':'      {$objectToArray: "$min"},','line_number':187,'multiline':False]
['text':'      {$literal: [{k: <new_sk_suffix_1>, v: MinKey}, ...]},','line_number':188,'multiline':False]
['text':'    ]}},','line_number':189,'multiline':False]
['text':'    max: {$let: {','line_number':190,'multiline':False]
['text':'      vars: {maxAsArray: {$objectToArray: "$max"}},','line_number':191,'multiline':False]
['text':'      in: {','line_number':192,'multiline':False]
['text':'        {$arrayToObject: {$concatArrays: [','line_number':193,'multiline':False]
['text':'          "$$maxAsArray",','line_number':194,'multiline':False]
['text':'          {$cond: {','line_number':195,'multiline':False]
['text':'            if: {$allElementsTrue: [{$map: {','line_number':196,'multiline':False]
['text':'              input: "$$maxAsArray",','line_number':197,'multiline':False]
['text':'              in: {$eq: [{$type: "$$this.v"}, "maxKey"]},','line_number':198,'multiline':False]
['text':'            }}]},','line_number':199,'multiline':False]
['text':'            then: {$literal: [{k: <new_sk_suffix_1>, v: MaxKey}, ...]},','line_number':200,'multiline':False]
['text':'            else: {$literal: [{k: <new_sk_suffix_1>, v: MinKey}, ...]},','line_number':201,'multiline':False]
['text':'          }}','line_number':202,'multiline':False]
['text':'        ]}}','line_number':203,'multiline':False]
['text':'      }','line_number':204,'multiline':False]
['text':'    }}','line_number':205,'multiline':False]
['text':'  }}]','line_number':206,'multiline':False]
['text':' Make the $literal objects used in the $set below to add new fields to the boundaries of the','line_number':209,'multiline':False]
['text':' existing chunks and tags that may include "." characters.','line_number':210,'multiline':False]
['text':'','line_number':211,'multiline':False]
['text':' Example: oldKeyDoc = {a: 1}','line_number':212,'multiline':False]
['text':'          newKeyDoc = {a: 1, b: 1, "c.d": 1}','line_number':213,'multiline':False]
['text':'          literalMinObject = {$literal: [{k: "b", v: MinKey}, {k: "c.d", v: MinKey}]}','line_number':214,'multiline':False]
['text':'          literalMaxObject = {$literal: [{k: "b", v: MaxKey}, {k: "c.d", v: MaxKey}]}','line_number':215,'multiline':False]
['text':' Both the chunks and tags updates share the base of this $set modifier.','line_number':226,'multiline':False]
['text':' The chunk updates change the min and max fields and unset the jumbo field.','line_number':254,'multiline':False]
['text':' The tag updates only change the min and max fields.','line_number':259,'multiline':False]
['text':' TODO SERVER-79064: Remove once 8.0 becomes last LTS','line_number':287,'multiline':False]
['text':' inFilter ','line_number':296,'multiline':True]
['text':' Update the config.collections entry for the given namespace.','line_number':302,'multiline':False]
['text':' upsert ','line_number':308,'multiline':True]
['text':' multi ','line_number':309,'multiline':True]
['text':' upsert ','line_number':331,'multiline':True]
['text':' useMultiUpdate ','line_number':332,'multiline':True]
['text':' upsert ','line_number':355,'multiline':True]
['text':' useMultiUpdate ','line_number':356,'multiline':True]
['text':' namespace','line_number':381,'multiline':False]
['text':' Take _kChunkOpLock in exclusive mode to prevent concurrent chunk modifications and generate','line_number':390,'multiline':False]
['text':' strictly monotonously increasing collection placement versions','line_number':391,'multiline':False]
['text':' Idempotency check: if the shard key is already the one requested, there is nothing to do','line_number':395,'multiline':False]
['text':' except waiting for majority, in case the write haven't been majority written.','line_number':396,'multiline':False]
['text':' In order to proceed, the timestamp must match.','line_number':408,'multiline':False]
['text':' The transaction API will use the write concern on the opCtx, which will have the default','line_number':414,'multiline':False]
['text':' sharding wTimeout of 60 seconds. Refining a shard key may involve writing many more','line_number':415,'multiline':False]
['text':' documents than a normal operation, so we override the write concern to not use a','line_number':416,'multiline':False]
['text':' wTimeout, matching the behavior before the API was introduced.','line_number':417,'multiline':False]
['text':' Mark opCtx as interruptible to ensure that all reads and writes to the metadata collections','line_number':432,'multiline':False]
['text':' under the exclusive _kChunkOpLock happen on the same term.','line_number':433,'multiline':False]
['text':' Take _kChunkOpLock in exclusive mode to prevent concurrent chunk modifications and generate','line_number':436,'multiline':False]
['text':' strictly monotonously increasing collection placement versions','line_number':437,'multiline':False]
['text':' The transaction API will use the write concern on the opCtx, which will have the default','line_number':462,'multiline':False]
['text':' sharding wTimeout of 60 seconds. Refining a shard key may involve writing many more','line_number':463,'multiline':False]
['text':' documents than a normal operation, so we override the write concern to not use a','line_number':464,'multiline':False]
['text':' wTimeout, matching the behavior before the API was introduced.','line_number':465,'multiline':False]
['text':' Trigger refreshes on each shard containing chunks in the namespace 'nss'. Since this isn't','line_number':485,'multiline':False]
['text':' necessary for correctness, all refreshes are best-effort.','line_number':486,'multiline':False]
['text':' No-op in case no supported parameter has been specified.','line_number':507,'multiline':False]
['text':' This allows not breaking backwards compatibility as command','line_number':508,'multiline':False]
['text':' options may be added/removed over time.','line_number':509,'multiline':False]
['text':' utility lambda to log the change','line_number':513,'multiline':False]
['text':' Logic to reset the 'maxChunkSizeBytes' field to its default value','line_number':565,'multiline':False]
['text':' Take _kChunkOpLock in exclusive mode to prevent concurrent chunk splits, merges, and','line_number':585,'multiline':False]
['text':' migrations','line_number':586,'multiline':False]
['text':' update ','line_number':600,'multiline':True]
['text':' upsert ','line_number':601,'multiline':True]
['text':' multi ','line_number':602,'multiline':True]
['text':' Now any migrations that change the list of shards will see the results of the transaction','line_number':612,'multiline':False]
['text':' during refresh, so it is safe to release the chunk lock.','line_number':613,'multiline':False]
['text':' Take _kChunkOpLock in exclusive mode to prevent concurrent updates of the collection','line_number':638,'multiline':False]
['text':' placement version.','line_number':639,'multiline':False]
['text':' query ','line_number':687,'multiline':True]
['text':' update ','line_number':688,'multiline':True]
['text':' upsert ','line_number':689,'multiline':True]
['text':' multi ','line_number':690,'multiline':True]
['text':' Bump the chunk version for shards.','line_number':693,'multiline':False]
['text':' namespace mongo','line_number':702,'multiline':False]
