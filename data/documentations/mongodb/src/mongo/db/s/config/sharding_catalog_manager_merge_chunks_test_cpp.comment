['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':' IWYU pragma: no_include "ext/alloc_traits.h"','line_number':35,'multiline':False]
['text':' Construct chunk to be merged','line_number':131,'multiline':False]
['text':' set histories','line_number':135,'multiline':False]
['text':' set boundaries','line_number':141,'multiline':False]
['text':' first chunk boundaries','line_number':145,'multiline':False]
['text':' second chunk boundaries','line_number':148,'multiline':False]
['text':' Check for increment on mergedChunk's minor version','line_number':171,'multiline':False]
['text':' There should be exactly one chunk left in the collection','line_number':190,'multiline':False]
['text':' MergedChunk should have range [chunkMin, chunkMax]','line_number':193,'multiline':False]
['text':' Check that the shard placement version returned by the merge matches the CSRS one','line_number':199,'multiline':False]
['text':' Make sure history is there','line_number':202,'multiline':False]
['text':' Construct chunks to be merged','line_number':220,'multiline':False]
['text':' set histories','line_number':226,'multiline':False]
['text':' first chunk boundaries','line_number':238,'multiline':False]
['text':' second chunk boundaries','line_number':241,'multiline':False]
['text':' third chunk boundaries','line_number':244,'multiline':False]
['text':' There should be exactly one chunk left in the collection','line_number':272,'multiline':False]
['text':' MergedChunk should have range [chunkMin, chunkMax]','line_number':275,'multiline':False]
['text':' Check for increment on mergedChunk's minor version','line_number':282,'multiline':False]
['text':' Make sure history is there','line_number':287,'multiline':False]
['text':' Construct chunk to be merged','line_number':308,'multiline':False]
['text':' set histories','line_number':312,'multiline':False]
['text':' first chunk boundaries','line_number':321,'multiline':False]
['text':' second chunk boundaries','line_number':324,'multiline':False]
['text':' Record chunk boundaries for passing into commitChunksMerge','line_number':328,'multiline':False]
['text':' Set up other chunk with competing version','line_number':331,'multiline':False]
['text':' There should be exactly two chunks left in the collection: one merged, one competing','line_number':361,'multiline':False]
['text':' MergedChunk should have range [chunkMin, chunkMax]','line_number':364,'multiline':False]
['text':' Check for minor increment on collection placement version','line_number':371,'multiline':False]
['text':' Make sure history is there','line_number':376,'multiline':False]
['text':' Construct chunk to be merged','line_number':396,'multiline':False]
['text':' set histories','line_number':400,'multiline':False]
['text':' first chunk boundaries','line_number':409,'multiline':False]
['text':' second chunk boundaries','line_number':412,'multiline':False]
['text':' Record chunk boundaries for passing into commitChunksMerge','line_number':416,'multiline':False]
['text':' Set up unmerged chunk','line_number':420,'multiline':False]
['text':' There should be exactly two chunks left in the collection: one merged, one untouched','line_number':448,'multiline':False]
['text':' MergedChunk should have range [chunkMin, chunkMax]','line_number':451,'multiline':False]
['text':' Check for increment on mergedChunk's minor version','line_number':458,'multiline':False]
['text':' OtherChunk should have been left alone','line_number':463,'multiline':False]
['text':' Construct chunk to be merged','line_number':481,'multiline':False]
['text':' set history','line_number':484,'multiline':False]
['text':' first chunk boundaries','line_number':493,'multiline':False]
['text':' Record chunk boundaries for passing into commitChunksMerge','line_number':499,'multiline':False]
['text':' Construct chunk to be merged','line_number':528,'multiline':False]
['text':' set histories','line_number':531,'multiline':False]
['text':' first chunk boundaries','line_number':540,'multiline':False]
['text':' Record chunk baoundaries for passing into commitChunksMerge','line_number':546,'multiline':False]
['text':' Construct chunk range to be merged','line_number':567,'multiline':False]
['text':' Store a chunk that matches the range that will be requested','line_number':572,'multiline':False]
['text':' Verify that no change to config.chunks happened.','line_number':597,'multiline':False]
['text':' There should be exactly one chunk left in the collection','line_number':610,'multiline':False]
['text':' MergedChunk should have range [chunkMin, chunkMax]','line_number':613,'multiline':False]
['text':' set histories','line_number':642,'multiline':False]
['text':' first chunk boundaries','line_number':650,'multiline':False]
['text':' second chunk boundaries','line_number':653,'multiline':False]
['text':' third chunk boundaries','line_number':656,'multiline':False]
['text':' Record chunk boundaries for passing into commitChunksMerge','line_number':662,'multiline':False]
['text':' There should be exactly one chunk left in the collection','line_number':686,'multiline':False]
['text':' MergedChunk should have range [chunkMin, chunkMax]','line_number':689,'multiline':False]
['text':' Check for increment on mergedChunk's minor version','line_number':696,'multiline':False]
['text':' Make sure history is there','line_number':701,'multiline':False]
['text':' Returns `numBounds` random split points sampled from the following list:
     *  - [MinKey, 0, 1, 2, ..., `_maxNumChunks - 1`, MaxKey]
     ','line_number':730,'multiline':True]
['text':' Setup sharded collection randomly spreading chunks across shards ','line_number':749,'multiline':True]
['text':' Generate chunk with the provided parameters and increase current collection placement','line_number':753,'multiline':False]
['text':' version','line_number':754,'multiline':False]
['text':' When `onCurrentShardSince` is set to "Timestamp(0, 1)", the chunk is mergeable','line_number':764,'multiline':False]
['text':' because the snapshot window passed. When it is set to "max", the chunk is not','line_number':765,'multiline':False]
['text':' mergeable because the snapshot window did not pass','line_number':766,'multiline':False]
['text':' Rarely create a jumbo chunk (not mergeable)','line_number':771,'multiline':False]
['text':' minimum 1 chunks, maximum 20 chunks','line_number':777,'multiline':False]
['text':' Make sure the whole shard key space is covered, potentially replacing first/last','line_number':781,'multiline':False]
['text':' bounds','line_number':782,'multiline':False]
['text':' Randomly setup minimum 0 zones, maximum 3 zones ','line_number':805,'multiline':True]
['text':' minimum 0 zones, maximum 3 zones','line_number':807,'multiline':False]
['text':' Create random zones on the same portion of shard key space covered by chunks generation','line_number':812,'multiline':False]
['text':' 2 bounds per zone','line_number':814,'multiline':False]
['text':' Get routing table for the collection under testing ','line_number':823,'multiline':True]
['text':'
     * Return a vector of zones (and no-zones) overlapping with the current chunk (or with the whole
     * shard key space when min/max not specified)
     ','line_number':842,'multiline':True]
['text':' Account for no-zone: two contiguous chunks could be partially overlapping with the','line_number':877,'multiline':False]
['text':' same zone, that does not necessarily means they need to merged.','line_number':878,'multiline':False]
['text':'','line_number':879,'multiline':False]
['text':' Example:','line_number':880,'multiline':False]
['text':' - ZONE: [4, 7)','line_number':881,'multiline':False]
['text':' -- Chunk 0: [3, 5)','line_number':882,'multiline':False]
['text':' -- Chunk 1: [5, 8)','line_number':883,'multiline':False]
['text':'','line_number':884,'multiline':False]
['text':' They will not be merged because the balancer will consider the following (no-)zones:','line_number':885,'multiline':False]
['text':' [MinKey, 4), [4, 7), [7,MaxKey)','line_number':886,'multiline':False]
['text':' Chunks with the following carachteristics are not mergeable:','line_number':911,'multiline':False]
['text':' - Jumbo chunks','line_number':912,'multiline':False]
['text':' - Chunks with `onCurrentShardSince` higher than "now + snapshot window"','line_number':913,'multiline':False]
['text':' - Contiguous chunks belonging to the same shard but falling into different zones','line_number':914,'multiline':False]
['text':' So it is expected for them to potentially have a contiguous chunk on the same shard.','line_number':915,'multiline':False]
['text':' Chunks belong to different shards','line_number':921,'multiline':False]
['text':' Chunks belong to the same shard, make sure they fall into different zones','line_number':924,'multiline':False]
['text':' Check that the merged routing table is compatible the original one','line_number':959,'multiline':False]
['text':' Make sure all chunks have been checked (loop analyzed all chunks)','line_number':974,'multiline':False]
['text':' Calculate chunks that are in the merged routing table but aren't in the original one','line_number':996,'multiline':False]
['text':' Merged max minor version = original max minor version + number of merges','line_number':1013,'multiline':False]
['text':' Sort `chunksDiff` by minor version and check all intermediate versions are properly set','line_number':1017,'multiline':False]
['text':' Calculate chunks that are in the merged routing table but aren't in the original one','line_number':1037,'multiline':False]
['text':'
 * Generate random routing tables covering all potential unit test cases (over multiple executions):
 * - Only one chunk [no merge possible]
 * - Multiple chunks:
 * --- None contiguous on same shard(s) [no merge possible]
 * --- Some contiguous on same shard(s) [some merges possible]
 *
 * Then make sure that:
 * - The routing table before merges is compatible with the routing table after merges
 * - There are no contiguous chunks on the same shard(s)
 * - The minor versions on chunks have been increased accordingly to the number of merges
 ','line_number':1107,'multiline':True]
['text':' Log zones and original/merged routing tables only in case of error','line_number':1140,'multiline':False]
['text':' namespace','line_number':1155,'multiline':False]
['text':' namespace mongo','line_number':1156,'multiline':False]
