['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':'*
     * Generates a list of initial chunks to be created during a shardCollection operation.
     ','line_number':69,'multiline':True]
['text':'*
     * Returns split points to use for creating chunks in cases where the shard key contains a
     * hashed field. For new collections which use hashed shard keys, we can can pre-split the range
     * of possible hashes into a large number of chunks, and distribute them evenly at creation
     * time. In the case where the shard key is compound hashed, the 'prefix' object specifies the
     * non-hashed prefix to be prepended to each hashed splitpoint. If no such prefix exists, this
     * will be an empty BSONObj. It is an error to pass a 'prefix' object which is not consistent
     * with the given ShardKeyPattern.
     ','line_number':83,'multiline':True]
['text':'*
     * Produces the initial chunks that need to be written for an *empty* collection which is being
     * sharded based on a set of 'splitPoints' and 'numContiguousChunksPerShard'.
     *
     * NOTE: The function performs some basic validation of the input parameters, but there is no
     * checking whether the collection contains any data or not.
     *
     * Chunks are assigned to a shard in a round-robin fashion, numContiguousChunksPerShard (k)
     * chunks at a time. For example, the first k chunks are assigned to the first available shard,
     * and the next k chunks are assigned to the second available shard and so on.
     * numContiguousChunksPerShard should only be > 1 when we do not pre-split the range
     * into larger chunks and then split the resulting chunks on the destination shards,
     * thus should be equal the number of final split points + 1 divided
     * by the number of initial split points + 1. It serves to preserve the ordering/contigousness
     * of chunks when split by shardSvrShardCollection.
     ','line_number':96,'multiline':True]
['text':'*
 * Default optimization strategy where we create a single chunk on the primary shard.
 ','line_number':121,'multiline':True]
['text':'*
 * Create a single chunk on a specified shard.
 ','line_number':131,'multiline':True]
['text':'*
 * Split point building strategy to be used when the appropriate splitpoints can be trivially
 * deduced from the shard key.
 ','line_number':146,'multiline':True]
['text':'*
     * Constructor used when generating split points for a hashed-prefix shard key.
     ','line_number':152,'multiline':True]
['text':' TODO SERVER-82611: get rid of the `numInitialChunks` argument.','line_number':159,'multiline':False]
['text':' The `numInitialChunks` parameter was deprecated in SERVER-74747 and should not be used.','line_number':160,'multiline':False]
['text':' Helpers for unit testing.','line_number':167,'multiline':False]
['text':'*
 * Abstract base class for all split policies which depend upon zones having already been defined at
 * the moment the collection is sharded.
 ','line_number':181,'multiline':True]
['text':'*
     * Records the splitpoints and chunk distribution among shards within a particular tag range.
     ','line_number':187,'multiline':True]
['text':'*
     * Returns the split points to be used for generating chunks within a given tag.
     ','line_number':203,'multiline':True]
['text':'*
 * In this strategy we directly generate a single chunk for each tag range.
 ','line_number':223,'multiline':True]
['text':'*
 * Split point building strategy to be used when 'presplitHashedZones' flag is set. This policy is
 * only relevant when the zones are set up before sharding and the shard key is hashed. In this
 * case, we generate one chunk per tag range and then further split each of these using the hashed
 * field of the shard key.
 ','line_number':240,'multiline':True]
['text':' TODO SERVER-82611: get rid of the `numInitialChunks` argument.','line_number':254,'multiline':False]
['text':' The `numInitialChunks` parameter was deprecated in SERVER-74747 and should not be used.','line_number':255,'multiline':False]
['text':'*
     * Validates that each of tags are set up correctly so that the tags can be split further.
     ','line_number':261,'multiline':True]
['text':'*
 * Split point building strategy for resharding.
 ','line_number':269,'multiline':True]
['text':' Interface to faciliate testing','line_number':276,'multiline':False]
['text':' Provides documents from a real Pipeline','line_number':284,'multiline':False]
['text':'*
     * Creates a new SamplingBasedSplitPolicy. Note that it should not outlive the operation
     * context used to create it.
     ','line_number':299,'multiline':True]
['text':'*
     * Generates the initial split points and returns them in ascending shard key order. Does not
     * include MinKey or MaxKey.
     ','line_number':316,'multiline':True]
['text':'*
     * Creates the aggregation pipeline BSON to get documents for sampling from shards.
     ','line_number':328,'multiline':True]
['text':'*
     * Append split points based from the samples taken from the collection.
     ','line_number':353,'multiline':True]
['text':' If provided, only pick shard that is in this vector.','line_number':364,'multiline':False]
['text':'*
     * Given a splitPoint, create chunks from _shardDistribution until passing the splitPoint.
     ','line_number':383,'multiline':True]
['text':'*
     * Check the chunks created from command parameter "zones" and "shardDistribution" are
     * satisfying the existing zone mapping rules in config.
     ','line_number':393,'multiline':True]
['text':' namespace mongo','line_number':404,'multiline':False]
