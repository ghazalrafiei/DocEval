['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':' Overhead to prevent mods buffers from being too large','line_number':90,'multiline':False]
['text':'*
 * Used to commit work for LogOpForSharding. Used to keep track of changes in documents that are
 * part of a chunk being migrated.
 ','line_number':93,'multiline':True]
['text':'*
 * Used to keep track of inserts that can be potentially added as xferMods of a migration.
 ','line_number':117,'multiline':True]
['text':'*
 * Used to keep track of updates that can be potentially added as xferMods of a migration.
 ','line_number':134,'multiline':True]
['text':'*
 * Used to keep track of deletes that can be potentially added as xferMods of a migration.
 ','line_number':155,'multiline':True]
['text':'*
 * This class is responsible for producing chunk documents to be moved from donor to a recipient
 * shard and its methods represent cloning stages. Its lifetime is owned and controlled by a single
 * migration source manager which registers it for notifications from the replication subsystem
 * before calling startClone.
 *
 * Unless explicitly indicated, the methods on this class are not thread-safe.
 *
 * The pattern of using this interface is such that one thread instantiates it and registers it so
 * it begins receiving notifications from the replication subsystem through the
 * on[insert/update/delete]Op methods. It is up to the creator to decide how these methods end up
 * being called, but currently this is done through the CollectionShardingState. The creator then
 * kicks off the cloning as soon as possible by calling startClone.
 ','line_number':172,'multiline':True]
['text':'*
     * Blocking method, which prepares the object for serving as a source for migrations and tells
     * the recipient shard to start cloning. Before calling this method, this chunk cloner must be
     * registered for notifications from the replication subsystem (not checked here).
     *
     * NOTE: Must be called without any locks and must succeed, before any other methods are called
     * (except for cancelClone and [insert/update/delete]Op).
     ','line_number':199,'multiline':True]
['text':'*
     * Blocking method, which uses some custom selected logic for deciding whether it is appropriate
     * for the donor shard to enter critical section.
     *
     * If it returns a successful status, the caller must as soon as possible stop writes (by
     * entering critical section). On failure it may return any error. Known errors are:
     *  ExceededTimeLimit - if the maxTimeToWait was exceeded
     *
     * NOTE: Must be called without any locks.
     ','line_number':212,'multiline':True]
['text':'*
     * Tell the recipient shard to commit the documents it has cloned so far. Must be called only
     * when it has been ensured that there will be no more changes happening to documents on the
     * donor shard. If this is not observed, the recipient might miss changes and thus lose data.
     *
     * This must only be called once and no more methods on the cloner must be used afterwards
     * regardless of whether it succeeds or not.
     *
     * Returns statistics about the move. These are informational only and should not be
     * interpreted by the caller for any means other than reporting.
     *
     * NOTE: Must be called without any locks.
     ','line_number':225,'multiline':True]
['text':'*
     * Tells the recipient to abort the clone and cleanup any unused data. This method's
     * implementation should be idempotent and never throw.
     *
     * NOTE: Must be called without any locks.
     ','line_number':240,'multiline':True]
['text':'*
     * Notifies this cloner that an insert happened to the collection, which it owns. It is up to
     * the cloner's implementation to decide what to do with this information and it is valid for
     * the implementation to ignore it.
     *
     * NOTE: Must be called with at least IX lock held on the collection.
     ','line_number':248,'multiline':True]
['text':'*
     * Notifies this cloner that an update happened to the collection, which it owns. It is up to
     * the cloner's implementation to decide what to do with this information and it is valid for
     * the implementation to ignore it.
     *
     * NOTE: Must be called with at least IX lock held on the collection.
     ','line_number':259,'multiline':True]
['text':'*
     * Notifies this cloner that a delede happened to the collection, which it owns. It is up to the
     * cloner's implementation to decide what to do with this information and it is valid for the
     * implementation to ignore it.
     *
     * NOTE: Must be called with at least IX lock held on the collection.
     ','line_number':270,'multiline':True]
['text':'*
     * Returns the migration session id associated with this cloner, so stale sessions can be
     * disambiguated.
     ','line_number':281,'multiline':True]
['text':'*
     * Returns the rollback ID recorded at the beginning of session migration. If the underlying
     * SessionCatalogMigrationSource does not exist, that means this node is running as a standalone
     * and doesn't support retryable writes, so we return boost::none.
     ','line_number':290,'multiline':True]
['text':'*
     * Called by the recipient shard. Used to estimate how many more bytes of clone data are
     * remaining in the chunk cloner.
     ','line_number':302,'multiline':True]
['text':'*
     * Called by the recipient shard. Populates the passed BSONArrayBuilder with a set of documents,
     * which are part of the initial clone sequence. Assumes that there is only one active caller
     * to this method at a time (otherwise, it can cause corruption/crash).
     *
     * Returns OK status on success. If there were documents returned in the result argument, this
     * method should be called more times until the result is empty. If it returns failure, it is
     * not safe to call more methods on this class other than cancelClone.
     *
     * This method will return early if too much time is spent fetching the documents in order to
     * give a chance to the caller to perform some form of yielding. It does not free or acquire any
     * locks on its own.
     *
     * NOTE: Must be called with the collection lock held in at least IS mode.
     ','line_number':308,'multiline':True]
['text':'*
     * Called by the recipient shard. Transfers the accummulated local mods from source to
     * destination. Must not be called before all cloned objects have been fetched through calls to
     * nextCloneBatch.
     *
     * NOTE: Must be called with the collection lock held in at least IS mode.
     ','line_number':327,'multiline':True]
['text':'*
     * Appends to 'arrBuilder' oplog entries which wrote to the currently migrated chunk and contain
     * session information.
     *
     * If this function returns a valid OpTime, this means that the oplog appended are not
     * guaranteed to be majority committed and the caller has to wait for the returned opTime to be
     * majority committed before returning them to the donor shard.
     *
     * If the underlying SessionCatalogMigrationSource does not exist, that means this node is
     * running as a standalone and doesn't support retryable writes, so we return boost::none.
     *
     * This waiting is necessary because session migration is only allowed to send out committed
     * entries, as opposed to chunk migration, which can send out uncommitted documents. With chunk
     * migration, the uncommitted documents will not be visibile until the end of the migration
     * commits, which means that if it fails, they won't be visible, whereas session oplog entries
     * take effect immediately since they are appended to the chain.
     ','line_number':336,'multiline':True]
['text':'*
     * Returns a notification that can be used to wait for new oplog that needs to be migrated.
     * If the value in the notification returns true, it means that there are no more new batches
     * that needs to be fetched because the migration has already entered the critical section or
     * aborted.
     *
     * Returns nullptr if there is no session migration associated with this migration.
     ','line_number':356,'multiline':True]
['text':'*
     * Returns the number of session oplog entries that were not found but not sent to the
     * destination shard.
     ','line_number':380,'multiline':True]
['text':'*
     * Returns the number of session oplog entries that need to be sent to the destination shard.
     ','line_number':386,'multiline':True]
['text':'*
     * This is responsible for all the logic revolving around handling documents that needs to be
     * cloned.
     *
     * This class is multithread-safe.
     ','line_number':397,'multiline':True]
['text':'*
         * Simple container that increments the given counter when this is constructed and
         * decrements it when it is destroyed. User of this class is responsible for holding
         * necessary mutexes when counter is being modified.
         ','line_number':405,'multiline':True]
['text':'*
         * Container for a document that can be added to the nextCloneBatch call. As long as
         * instances of this object exist, it will prevent getNextDoc from prematurely returning
         * an empty response (which means there are no more docs left to clone).
         *
         * This assumes that _mutex is not being held when it is destroyed.
         ','line_number':422,'multiline':True]
['text':'*
         * A variant of the DocumentInFlightWhileNotInLock where the _mutex should be held while it
         * has a document contained within it.
         ','line_number':444,'multiline':True]
['text':'*
             * Releases the contained document. Can only be called once for the entire lifetime
             * of this object.
             ','line_number':456,'multiline':True]
['text':'*
         * Overwrites the list of record ids to clone.
         ','line_number':469,'multiline':True]
['text':'*
         * Returns a document to clone. If there are no more documents left to clone,
         * DocumentInFlightWhileNotInLock::getDoc will return boost::none.
         *
         * numRecordsNoLonger exists is an optional parameter that can be used to track
         * the number of recordIds encountered that refers to a document that no longer
         * exists.
         ','line_number':474,'multiline':True]
['text':'*
         * Put back a document previously obtained from this CloneList instance to the overflow
         * pool.
         ','line_number':486,'multiline':True]
['text':'*
         * Returns true if there are more documents to clone.
         ','line_number':492,'multiline':True]
['text':'*
         * Returns the size of the populated record ids.
         ','line_number':497,'multiline':True]
['text':'*
         * Increments the counter for inProgressReads.
         ','line_number':503,'multiline':True]
['text':'*
         * Decrements the counter for inProgressReads.
         ','line_number':508,'multiline':True]
['text':' This iterator is a pointer into the _recordIds set.  It allows concurrent access to','line_number':517,'multiline':False]
['text':' the _recordIds set by allowing threads servicing _migrateClone requests to do the','line_number':518,'multiline':False]
['text':' following:','line_number':519,'multiline':False]
['text':'   1.  Acquire mutex "_mutex" above.','line_number':520,'multiline':False]
['text':'   2.  Copy *_recordIdsIter into its local stack frame.','line_number':521,'multiline':False]
['text':'   3.  Increment _recordIdsIter','line_number':522,'multiline':False]
['text':'   4.  Unlock "_mutex."','line_number':523,'multiline':False]
['text':'   5.  Do the I/O to fetch the document corresponding to this record Id.','line_number':524,'multiline':False]
['text':'','line_number':525,'multiline':False]
['text':' The purpose of this algorithm, is to allow different threads to concurrently start I/O','line_number':526,'multiline':False]
['text':' jobs in order to more fully saturate the disk.','line_number':527,'multiline':False]
['text':'','line_number':528,'multiline':False]
['text':' One issue with this algorithm, is that only 16MB worth of documents can be returned in','line_number':529,'multiline':False]
['text':' response to a _migrateClone request.  But, the thread does not know the size of a','line_number':530,'multiline':False]
['text':' document until it does the I/O.  At which point, if the document does not fit in the','line_number':531,'multiline':False]
['text':' response to _migrateClone request the document must be made available to a different','line_number':532,'multiline':False]
['text':' thread servicing a _migrateClone request. To solve this problem, the thread adds the','line_number':533,'multiline':False]
['text':' document to the below _overflowDocs deque.','line_number':534,'multiline':False]
['text':' This deque stores all documents that must be sent to the destination, but could not fit','line_number':537,'multiline':False]
['text':' in the response to a particular _migrateClone request.','line_number':538,'multiline':False]
['text':' This integer represents how many documents are being "held" by threads servicing','line_number':541,'multiline':False]
['text':' _migrateClone requests. Any document that is "held" by a thread may be added to the','line_number':542,'multiline':False]
['text':' _overflowDocs deque if it doesn't fit in the response to a _migrateClone request.','line_number':543,'multiline':False]
['text':' This integer is necessary because it gives us a condition on when all documents to be','line_number':544,'multiline':False]
['text':' sent to the destination have been exhausted.','line_number':545,'multiline':False]
['text':'','line_number':546,'multiline':False]
['text':' If (_recordIdsIter == _recordIds.end() && _overflowDocs.empty() &&','line_number':547,'multiline':False]
['text':'     _inProgressReads == 0) then all documents have been returned to the destination.','line_number':548,'multiline':False]
['text':' This condition variable allows us to wait on the following condition:','line_number':551,'multiline':False]
['text':'   Either we're done and the above condition is satisfied, or there is some document to','line_number':552,'multiline':False]
['text':'   return.','line_number':553,'multiline':False]
['text':' Represents the states in which the cloner can be','line_number':557,'multiline':False]
['text':'*
     * Idempotent method, which cleans up any previously initialized state. It is safe to be called
     * at any time, but no methods should be called after it.
     ','line_number':560,'multiline':True]
['text':'*
     * Synchronously invokes the recipient shard with the specified command and either returns the
     * command response (if succeeded) or the status, if the command failed.
     ','line_number':566,'multiline':True]
['text':'*
     * Get the recordIds that belong to the chunk migrated and sort them in _cloneRecordIds (to
     * avoid seeking disk later).
     *
     * Returns OK or any error status otherwise.
     ','line_number':585,'multiline':True]
['text':'*
     * Adds the OpTime to the list of OpTimes for oplog entries that we should consider migrating as
     * part of session migration.
     ','line_number':593,'multiline':True]
['text':'
     * Appends the relevant document changes to the appropriate internal data structures (known
     * colloquially as the 'transfer mods queue'). These structures track document changes that are
     * part of a part of a chunk being migrated. In doing so, this the method also removes the
     * corresponding operation track request from the operation track requests queue.
     ','line_number':605,'multiline':True]
['text':'*
     * Adds an operation to the outstanding operation track requests. Returns false if the cloner
     * is no longer accepting new operation track requests.
     ','line_number':613,'multiline':True]
['text':'*
     * Called to indicate a request to track an operation must be filled. The operations in
     * question indicate a change to a document in the chunk being cloned. Increments a counter
     * residing inside the MigrationChunkClonerSource class.
     *
     * There should always be a one to one match from the number of calls to this function to the
     * number of calls to the corresponding decrement* function.
     *
     * NOTE: This funtion invariants that we are currently accepting new operation track requests.
     * It is up to callers of this function to make sure that will always be the case.
     ','line_number':619,'multiline':True]
['text':'*
     * Called once a request to track an operation has been filled. The operations in question
     * indicate a change to a document in the chunk being cloned. Decrements a counter residing
     * inside the MigrationChunkClonerSource class.
     *
     * There should always be a one to one match from the number of calls to this function to the
     * number of calls to the corresponding increment* function.
     ','line_number':632,'multiline':True]
['text':'*
     * Waits for all outstanding operation track requests to be fulfilled before returning from this
     * function. Should only be used in the cleanup for this class. Should use a lock wrapped
     * around this class's mutex.
     ','line_number':642,'multiline':True]
['text':'*
     * Sends _recvChunkStatus to the recipient shard until it receives 'steady' from the recipient,
     * an error has occurred, or a timeout is hit.
     ','line_number':649,'multiline':True]
['text':'*
     * Inspects the pre and post image document keys and determines which xferMods bucket to
     * add a new entry. Returns false if neither pre or post image document keys fall into
     * the chunk boundaries being migrated.
     ','line_number':655,'multiline':True]
['text':'*
     * Defer processing of update ops into xferMods entries to when nextModsBatch is called.
     ','line_number':662,'multiline':True]
['text':'*
     * Converts all deferred update ops captured by the op observer into xferMods entries.
     ','line_number':667,'multiline':True]
['text':' The original move range request','line_number':672,'multiline':False]
['text':' The write concern associated with the move range','line_number':675,'multiline':False]
['text':' The shard key associated with the namespace','line_number':678,'multiline':False]
['text':' The migration session id','line_number':681,'multiline':False]
['text':' The resolved connection string of the donor shard','line_number':684,'multiline':False]
['text':' The resolved primary of the recipient shard','line_number':687,'multiline':False]
['text':' Protects the entries below','line_number':692,'multiline':False]
['text':' The current state of the cloner','line_number':695,'multiline':False]
['text':' The estimated average object size during the clone phase. Used for buffer size','line_number':703,'multiline':False]
['text':' pre-allocation (initial clone).','line_number':704,'multiline':False]
['text':' The estimated average object _id size during the clone phase.','line_number':707,'multiline':False]
['text':' Represents all of the requested but not yet fulfilled operations to be tracked, with regards','line_number':710,'multiline':False]
['text':' to the chunk being cloned.','line_number':711,'multiline':False]
['text':' Signals to any waiters once all unresolved operation tracking requests have completed.','line_number':714,'multiline':False]
['text':' Indicates whether new requests to track an operation are accepted.','line_number':717,'multiline':False]
['text':' List of _id of documents that were modified that must be re-cloned (xfer mods)','line_number':720,'multiline':False]
['text':' Amount of upsert xfer mods that have not yet reached the recipient.','line_number':723,'multiline':False]
['text':' List of _id of documents that were deleted during clone that should be deleted later (xfer','line_number':726,'multiline':False]
['text':' mods)','line_number':727,'multiline':False]
['text':' Amount of delete xfer mods that have not yet reached the recipient.','line_number':730,'multiline':False]
['text':' Amount of ops that are yet to be converted to update/delete xferMods.','line_number':733,'multiline':False]
['text':' Stores document keys of document that needs to be examined if we need to put in to xferMods','line_number':736,'multiline':False]
['text':' list later.','line_number':737,'multiline':False]
['text':' Total bytes in _reload + _deleted (xfer mods)','line_number':740,'multiline':False]
['text':' False if the move chunk request specified ForceJumbo::kDoNotForce, true otherwise.','line_number':743,'multiline':False]
['text':' Plan executor for collection scan used to clone docs.','line_number':746,'multiline':False]
['text':' The current state of 'clonerExec'.','line_number':749,'multiline':False]
['text':' Number docs in jumbo chunk cloned so far','line_number':752,'multiline':False]
['text':' Set only once its discovered a chunk is jumbo','line_number':756,'multiline':False]
['text':'*
 * Appends to the builder the list of documents either deleted or modified during migration.
 * Entries appended to the builder are removed from the list.
 * Returns the total size of the documents that were appended + initialSize.
 ','line_number':763,'multiline':True]
['text':' namespace mongo','line_number':773,'multiline':False]
