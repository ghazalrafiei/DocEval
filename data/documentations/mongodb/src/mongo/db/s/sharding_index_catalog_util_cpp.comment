['text':'*
 *    Copyright (C) 2020-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':' The config server may be a shard, so only add if it isn't already in shardsAndConfigsvr.','line_number':82,'multiline':False]
['text':'*
 * Function with an stable vector of shardId's (meaning, migrations will be serialized with this
 * function call) that should perform catalog updates.
 ','line_number':96,'multiline':True]
['text':'*
 * Helper function to generalize the index catalog modification protocol. With this function when
 * callback is called, we have the following guarantees:
 *
 * 1. All migrations will be cancelled, will not be able to commit and will no new migration will
 * start for userCollectionNss.
 * 2. osi will contain a valid sessionID and transaction number, even after a stepdown.
 * 3. There won't be any writes for userCollectionNss because the critical section will be taken
 * cluster-wide.
 *
 * After the execution of this function, the migrations will be enabled again, unless the function
 * failed due to a step-down. In which case, this function should be called again on stepUp after
 * the node is in steady-state. osi will contain the latest txnNumber used.
 *
 * Any work done by callback must be resumable and idempotent.
 ','line_number':102,'multiline':True]
['text':' Stop migrations so the cluster is in a steady state.','line_number':127,'multiline':False]
['text':' Get an up to date shard distribution.','line_number':130,'multiline':False]
['text':' If this is not the first execution (as in, there was a stepdown) advance the','line_number':142,'multiline':False]
['text':' txnNumber for this lsid, so requests with older txnNumbers can no longer execute.','line_number':143,'multiline':False]
['text':' Block writes in all shards that holds data for the user collection.','line_number':149,'multiline':False]
['text':' Perform the index modification.','line_number':162,'multiline':False]
['text':' Release the critical section in all the shards.','line_number':165,'multiline':False]
['text':' Resume migrations after committing.','line_number':174,'multiline':False]
['text':' namespace','line_number':177,'multiline':False]
['text':' Now commit the change in the config server.','line_number':221,'multiline':False]
['text':' Remove the index in the config server.','line_number':257,'multiline':False]
['text':' Ensure the index is dropped in every shard.','line_number':283,'multiline':False]
['text':' namespace sharding_index_catalog_util','line_number':299,'multiline':False]
['text':' namespace mongo','line_number':301,'multiline':False]
