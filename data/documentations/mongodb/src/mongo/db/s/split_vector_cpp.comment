['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':'
 * Reshuffle fields according to the shard key pattern.
 ','line_number':77,'multiline':True]
['text':' Note: It is correct to hydrate the indexKey 'key' with 'keyPattern', because the index key','line_number':81,'multiline':False]
['text':' pattern is a prefix of 'keyPattern'.','line_number':82,'multiline':False]
['text':' namespace','line_number':87,'multiline':False]
['text':' Always have a default value for maxChunkObjects','line_number':101,'multiline':False]
['text':' Allow multiKey based on the invariant that shard keys must be single-valued. Therefore,','line_number':110,'multiline':False]
['text':' any multi-key index prefixed by shard key cannot be multikey over the shard key fields.','line_number':111,'multiline':False]
['text':'requireSingleKey=','line_number':115,'multiline':True]
['text':' extend min to get (min, MinKey, MinKey, ....)','line_number':121,'multiline':False]
['text':' if max not specified, make it (MaxKey, Maxkey, MaxKey...)','line_number':126,'multiline':False]
['text':' otherwise make it (max,MinKey,MinKey...) so that bound is non-inclusive','line_number':129,'multiline':False]
['text':' Get the size estimate for this namespace','line_number':133,'multiline':False]
['text':' Now that we have the size estimate, go over the remaining parameters and apply any','line_number':137,'multiline':False]
['text':' maximum size restrictions specified there.','line_number':138,'multiline':False]
['text':' Forcing a split is equivalent to having maxChunkSizeBytes be the size of the current','line_number':140,'multiline':False]
['text':' chunk, i.e., the logic below will split that chunk in half','line_number':141,'multiline':False]
['text':' If the collection is empty, cannot use split with find or bounds option.','line_number':147,'multiline':False]
['text':' If there's not enough data for more than one chunk, no point continuing.','line_number':153,'multiline':False]
['text':' We'll use the average object size and number of object to find approximately how many','line_number':165,'multiline':False]
['text':' keys each chunk should have. We'll split at half the maxChunkSizeBytes or','line_number':166,'multiline':False]
['text':' maxChunkObjects, if provided.','line_number':167,'multiline':False]
['text':'','line_number':181,'multiline':False]
['text':' Traverse the index and add the keyCount-th key to the result vector. If that key','line_number':182,'multiline':False]
['text':' appeared in the vector before, we omit it. The invariant here is that all the','line_number':183,'multiline':False]
['text':' instances of a given key value live in the same chunk.','line_number':184,'multiline':False]
['text':'','line_number':185,'multiline':False]
['text':' Get the final key in the range, and see if it's the same as the first key.','line_number':206,'multiline':False]
['text':' Range contains only documents with a single key value.  So we cannot possibly find a','line_number':226,'multiline':False]
['text':' split point, and there is no need to scan any further.','line_number':227,'multiline':False]
['text':' Use every 'keyCount'-th key as a split point. We add the initial key as a sentinel,','line_number':239,'multiline':False]
['text':' to be removed at the end. If a key appears more times than entries allowed on a','line_number':240,'multiline':False]
['text':' chunk, we issue a warning and split on the following key.','line_number':241,'multiline':False]
['text':' Do not use this split key if it is the same of the previous split point.','line_number':257,'multiline':False]
['text':' Keep trying until we get at least one split point that isn't','line_number':264,'multiline':False]
['text':' above the max object user size.','line_number':265,'multiline':False]
['text':' Stop if we have enough split points.','line_number':289,'multiline':False]
['text':'','line_number':307,'multiline':False]
['text':' If we're forcing a split at the halfway point, then the first pass was just','line_number':308,'multiline':False]
['text':' to count the keys, and we still need a second pass.','line_number':309,'multiline':False]
['text':'','line_number':310,'multiline':False]
['text':'','line_number':331,'multiline':False]
['text':' Format the result and issue any warnings about the data we gathered while traversing the','line_number':332,'multiline':False]
['text':' index','line_number':333,'multiline':False]
['text':'','line_number':334,'multiline':False]
['text':' Warn for keys that are more numerous than maxChunkSizeBytes allows.','line_number':336,'multiline':False]
['text':' Remove the sentinel at the beginning before returning','line_number':344,'multiline':False]
['text':' namespace mongo','line_number':362,'multiline':False]
