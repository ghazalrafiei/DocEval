['text':'*
 *    Copyright (C) 2023-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':' IWYU pragma: keep','line_number':37,'multiline':False]
['text':' Reusing the ConfigServerTestFixture for benchmarking.','line_number':76,'multiline':False]
['text':' _doTest has empty implementation to honor the abstract class, but it is not used in the benchmark','line_number':77,'multiline':False]
['text':' framework.','line_number':78,'multiline':False]
['text':' Generate and insert the entries into the config.shards collection
     * Given the desired number of shards n, generates a vector of n ShardType objects (in BSON
     * format) according to the following template,  Given the i-th element :
     *  - shard_id : shard<i>
     *  - host : localhost:3000<i>
     *  - state : always 1 (kShardAware)
     ','line_number':112,'multiline':True]
['text':' store it locally for later use','line_number':122,'multiline':False]
['text':' Generate and insert the entries into the config.database collection
     * Given the desired number of db n, generates a vector of n DatabaseType objects (in BSON
     * format) according to the following template,  Given the i-th element :
     *  - dbName : db<i>
     *  - primaryShard :  shard<i>
     *  - databaseVersion : always DatabaseVersion::makeFixed()
     ','line_number':128,'multiline':True]
['text':'
     * Generates N chunks for a collection on a given shard
     ','line_number':148,'multiline':True]
['text':' Ensure that the vector clock is able to return an up-to-date config time to both the','line_number':169,'multiline':False]
['text':' ShardingCatalogManager and this test.','line_number':170,'multiline':False]
['text':' namespace','line_number':199,'multiline':False]
['text':' 10 databases','line_number':212,'multiline':False]
['text':' nChunksPerCollection, nCollections, nShards','line_number':225,'multiline':False]
['text':' namespace mongo','line_number':238,'multiline':False]
