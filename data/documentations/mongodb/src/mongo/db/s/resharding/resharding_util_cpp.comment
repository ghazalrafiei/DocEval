['text':'*
 *    Copyright (C) 2020-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':'*
 * Given a constant rate of time per unit of work:
 *    totalTime / totalWork == elapsedTime / elapsedWork
 * Solve for remaining time.
 *    remainingTime := totalTime - elapsedTime
 *                  == (totalWork * (elapsedTime / elapsedWork)) - elapsedTime
 *                  == elapsedTime * (totalWork / elapsedWork - 1)
 ','line_number':85,'multiline':True]
['text':' namespace','line_number':98,'multiline':False]
['text':' The provided originalError either meets the size constraints or has already been','line_number':109,'multiline':False]
['text':' truncated (and is just slightly larger than 2000 bytes to avoid complicating the','line_number':110,'multiline':False]
['text':' truncation math).','line_number':111,'multiline':False]
['text':' ReshardCollectionAborted has special internal handling. It should always have a short, fixed','line_number':115,'multiline':False]
['text':' error message so it never exceeds the size limit and requires truncation and error code','line_number':116,'multiline':False]
['text':' substitution.','line_number':117,'multiline':False]
['text':' Check for global minKey and maxKey','line_number':178,'multiline':False]
['text':' The node receiving the query verifies continuity of oplog entries (i.e: that the recipient','line_number':287,'multiline':False]
['text':' hasn't fallen off the oplog). This stage provides the input timestamp that the donor uses for','line_number':288,'multiline':False]
['text':' verification.','line_number':289,'multiline':False]
['text':' Only capture CRUD operations relevant for the `destinedRecipient`.','line_number':295,'multiline':False]
['text':' Capture all commands. One cannot determine if a command is relevant to the','line_number':299,'multiline':False]
['text':' `destinedRecipient` until after oplog chaining via `prevOpTime` is resolved.','line_number':300,'multiline':False]
['text':' Emits transaction entries chronologically.','line_number':311,'multiline':False]
['text':' includeCommitTransactionTimestamp ','line_number':313,'multiline':True]
['text':' Converts oplog entries with kNeedsRetryImageFieldName into the old style pair of','line_number':315,'multiline':False]
['text':' update/delete oplog and pre/post image no-op oplog.','line_number':316,'multiline':False]
['text':' includeCommitTransactionTimestamp ','line_number':318,'multiline':True]
['text':' Adds _id to all events in the stream.','line_number':320,'multiline':False]
['text':' Filter out applyOps entries which do not contain any relevant operations.','line_number':323,'multiline':False]
['text':' Now that the chained oplog entries are adjacent with an annotated `ReshardingDonorOplogId`,','line_number':336,'multiline':False]
['text':' the pipeline can prune anything earlier than the resume time.','line_number':337,'multiline':False]
['text':' Filter out anything inside of an `applyOps` specifically destined for another shard. This','line_number':341,'multiline':False]
['text':' ensures zone restrictions are obeyed. Data will never be sent to a shard that it isn't meant','line_number':342,'multiline':False]
['text':' to end up on.','line_number':343,'multiline':False]
['text':' All fetched oplogEntries must be applied. Some of them already have been.','line_number':427,'multiline':False]
['text':' Until the time to apply batches of oplog entries is measured, we assume that applying all','line_number':431,'multiline':False]
['text':' of them will take as long as copying did.','line_number':432,'multiline':False]
['text':' Check all shardKeyRanges have min/max or none of them has min/max.','line_number':461,'multiline':False]
['text':' If the shardDistribution contains min/max, validate whether they are continuous and complete.','line_number':474,'multiline':False]
['text':' namespace resharding','line_number':511,'multiline':False]
['text':' namespace mongo','line_number':512,'multiline':False]
