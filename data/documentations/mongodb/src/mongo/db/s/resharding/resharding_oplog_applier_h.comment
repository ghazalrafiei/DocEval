['text':'*
 *    Copyright (C) 2020-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':'*
 * Applies oplog entries from a specific donor for resharding.
 *
 * @param sourceId combines the resharding run's UUID with the donor ShardId.
 * @param allStashNss are the namespaces of the stash collections. There is one stash collection for
 *                    each donor. This ReshardingOplogApplier will write documents as necessary to
 *                    the stash collection at `myStashIdx` and may need to read and delete documents
 *                    from any of the other stash collections.
 * @param myStashIdx -- see above.
 *
 * This is not thread safe.
 ','line_number':65,'multiline':True]
['text':'*
     * Schedules work to repeatedly apply batches of oplog entries from a donor shard.
     *
     * Returns a future that becomes ready when either:
     *   (a) all documents have been applied, or
     *   (b) the cancellation token was canceled due to a stepdown or abort.
     ','line_number':106,'multiline':True]
['text':'*
     * Setup the worker threads to apply the ops in the current buffer in parallel. Waits for all
     * worker threads to finish (even when some of them finished early due to an error).
     ','line_number':129,'multiline':True]
['text':'*
     * Records the progress made by this applier to storage.
     ','line_number':137,'multiline':True]
['text':' Identifier for the oplog source.','line_number':144,'multiline':False]
['text':' Buffer for the current batch of oplog entries to apply.','line_number':153,'multiline':False]
['text':' Buffer for internally generated oplog entries that needs to be processed for this batch.','line_number':156,'multiline':False]
['text':' The source of the oplog entries to be applied.','line_number':160,'multiline':False]
['text':' namespace mongo','line_number':164,'multiline':False]
