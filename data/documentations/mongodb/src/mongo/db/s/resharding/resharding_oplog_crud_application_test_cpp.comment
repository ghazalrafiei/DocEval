['text':'*
 *    Copyright (C) 2021-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':' Initialize sharding components as a shard server.','line_number':132,'multiline':False]
['text':' OpObserverImpl is required for timestamping the writes from','line_number':162,'multiline':False]
['text':' ReshardingOplogApplicationRules.','line_number':163,'multiline':False]
['text':' These are unused by ReshardingOplogApplicationRules but required by IDL parsing.','line_number':236,'multiline':False]
['text':' These are unused by ReshardingOplogApplicationRules but required by IDL parsing.','line_number':250,'multiline':False]
['text':' These are unused by ReshardingOplogApplicationRules but required by IDL parsing.','line_number':263,'multiline':False]
['text':' unsplittable ','line_number':346,'multiline':True]
['text':' defaultCollator ','line_number':347,'multiline':True]
['text':' unique ','line_number':348,'multiline':True]
['text':' timeseriesFields ','line_number':351,'multiline':True]
['text':' reshardingFields ','line_number':352,'multiline':True]
['text':' allowMigrations ','line_number':353,'multiline':True]
['text':' clusterTime ','line_number':358,'multiline':True]
['text':' Create three chunks, two that are owned by this donor shard and one owned by some other','line_number':362,'multiline':False]
['text':' shard. The chunk for {sk: null} is owned by this donor shard to allow test cases to omit','line_number':363,'multiline':False]
['text':' the shard key field when it isn't relevant.','line_number':364,'multiline':False]
['text':' This case tests applying rule #2 described in','line_number':430,'multiline':False]
['text':' ReshardingOplogApplicationRules::_applyInsert_inlock.','line_number':431,'multiline':False]
['text':' This case tests applying rule #3 described in','line_number':449,'multiline':False]
['text':' ReshardingOplogApplicationRules::_applyInsert_inlock.','line_number':450,'multiline':False]
['text':'','line_number':451,'multiline':False]
['text':' Make sure a document with {_id: 0} exists in the output collection before applying an insert','line_number':452,'multiline':False]
['text':' with the same _id. This donor shard owns these documents under the original shard key (it','line_number':453,'multiline':False]
['text':' owns the range {sk: 0} -> {sk: maxKey}).','line_number':454,'multiline':False]
['text':' We should have replaced the existing document in the output collection.','line_number':469,'multiline':False]
['text':' This case tests applying rules #1 and #4 described in','line_number':479,'multiline':False]
['text':' ReshardingOplogApplicationRules::_applyInsert_inlock.','line_number':480,'multiline':False]
['text':'','line_number':481,'multiline':False]
['text':' Make sure a document with {_id: 0} exists in the output collection before applying inserts','line_number':482,'multiline':False]
['text':' with the same _id. This donor shard does not own the document {_id: 0, sk: -1} under the','line_number':483,'multiline':False]
['text':' original shard key, so we should apply rule #4 and insert the document into the stash','line_number':484,'multiline':False]
['text':' collection.','line_number':485,'multiline':False]
['text':' The output collection should still hold the document {_id: 0, sk: -1}, and the document with','line_number':500,'multiline':False]
['text':' {_id: 0, sk: 2} should have been inserted into the stash collection.','line_number':501,'multiline':False]
['text':' The output collection should still hold the document {_id: 0, sk: 1}. We should have applied','line_number':515,'multiline':False]
['text':' rule #1 and turned the last insert op into a replacement update on the stash collection, so','line_number':516,'multiline':False]
['text':' the document {_id: 0, sk: 3} should now exist in the stash collection.','line_number':517,'multiline':False]
['text':' This case tests applying rule #1 described in','line_number':527,'multiline':False]
['text':' ReshardingOplogApplicationRules::_applyUpdate_inlock.','line_number':528,'multiline':False]
['text':'','line_number':529,'multiline':False]
['text':' Insert a document {_id: 0} in the output collection before applying the insert of document','line_number':530,'multiline':False]
['text':' with {_id: 0}. This will force the document {_id: 0, sk: 2} to be inserted to the stash','line_number':531,'multiline':False]
['text':' collection for this donor shard.','line_number':532,'multiline':False]
['text':' We should have applied rule #1 and updated the document with {_id: 0} in the stash collection','line_number':554,'multiline':False]
['text':' for this donor to now have the new field 'x'. And the output collection should remain','line_number':555,'multiline':False]
['text':' unchanged.','line_number':556,'multiline':False]
['text':' This case tests applying rules #2 and #3 described in','line_number':567,'multiline':False]
['text':' ReshardingOplogApplicationRules::_applyUpdate_inlock.','line_number':568,'multiline':False]
['text':'','line_number':569,'multiline':False]
['text':' Make sure a document with {_id: 0} exists in the output collection that does not belong to','line_number':570,'multiline':False]
['text':' this donor shard before applying the updates.','line_number':571,'multiline':False]
['text':' The document {_id: 0, sk: -1} that exists in the output collection does not belong to this','line_number':590,'multiline':False]
['text':' donor shard, so we should have applied rule #3 and done nothing and the document should still','line_number':591,'multiline':False]
['text':' be in the output collection.','line_number':592,'multiline':False]
['text':' There does not exist a document with {_id: 2} in the output collection, so we should have','line_number':610,'multiline':False]
['text':' applied rule #2 and done nothing.','line_number':611,'multiline':False]
['text':' This case tests applying rule #4 described in','line_number':621,'multiline':False]
['text':' ReshardingOplogApplicationRules::_applyUpdate_inlock.','line_number':622,'multiline':False]
['text':' We should have updated both documents in the output collection to include the new field "x".','line_number':651,'multiline':False]
['text':' This case tests applying rule #1 described in','line_number':664,'multiline':False]
['text':' ReshardingOplogApplicationRules::_applyDelete_inlock.','line_number':665,'multiline':False]
['text':'','line_number':666,'multiline':False]
['text':' Insert a document {_id: 0} in the output collection before applying the insert of document','line_number':667,'multiline':False]
['text':' with {_id: 0}. This will force the document {_id: 0, sk: 1} to be inserted to the stash','line_number':668,'multiline':False]
['text':' collection for this donor shard.','line_number':669,'multiline':False]
['text':' We should have applied rule #1 and deleted the document with {_id: 0} from the stash','line_number':687,'multiline':False]
['text':' collection for this donor. And the output collection should remain unchanged.','line_number':688,'multiline':False]
['text':' This case tests applying rules #2 and #3 described in','line_number':698,'multiline':False]
['text':' ReshardingOplogApplicationRules::_applyDelete_inlock.','line_number':699,'multiline':False]
['text':'','line_number':700,'multiline':False]
['text':' Make sure a document with {_id: 0} exists in the output collection that does not belong to','line_number':701,'multiline':False]
['text':' this donor shard before applying the deletes.','line_number':702,'multiline':False]
['text':' The document {_id: 0, sk: -1} that exists in the output collection does not belong to this','line_number':717,'multiline':False]
['text':' donor shard, so we should have applied rule #3 and done nothing and the document should still','line_number':718,'multiline':False]
['text':' be in the output collection.','line_number':719,'multiline':False]
['text':' There does not exist a document with {_id: 2} in the output collection, so we should have','line_number':733,'multiline':False]
['text':' applied rule #2 and done nothing.','line_number':734,'multiline':False]
['text':' This case tests applying rule #4 described in','line_number':744,'multiline':False]
['text':' ReshardingOplogApplicationRules::_applyDelete_inlock.','line_number':745,'multiline':False]
['text':' None of the stash collections have documents with _id == [op _id], so we should not have','line_number':768,'multiline':False]
['text':' found any documents to insert into the output collection with either {_id: 1} or {_id: 2}.','line_number':769,'multiline':False]
['text':' Assert that the delete on the output collection was run in a transaction by looking in the','line_number':777,'multiline':False]
['text':' oplog for an applyOps entry with a "d" op on the output collection.','line_number':778,'multiline':False]
['text':' This case tests applying rule #4 described in','line_number':795,'multiline':False]
['text':' ReshardingOplogApplicationRules::_applyDelete_inlock.','line_number':796,'multiline':False]
['text':'','line_number':797,'multiline':False]
['text':' Make sure a document with {_id: 0} exists in the stash collection for the other donor shard.','line_number':798,'multiline':False]
['text':' The stash collection for this donor shard is empty.','line_number':799,'multiline':False]
['text':' opDebug ','line_number':812,'multiline':True]
['text':' We should have applied rule #4 and deleted the document that was in the output collection','line_number':828,'multiline':False]
['text':' {_id: 0, sk: 2}, deleted the document with the same _id {_id: 0, sk: -3} in the other donor','line_number':829,'multiline':False]
['text':' shard's stash collection and inserted this document into the output collection.','line_number':830,'multiline':False]
['text':' Assert that the delete on the output collection was run in a transaction by looking in the','line_number':838,'multiline':False]
['text':' oplog for an applyOps entry with the following ops:','line_number':839,'multiline':False]
['text':'   (1) op="d" on the output collection,','line_number':840,'multiline':False]
['text':'   (2) op="d" on the other stash namespace, and','line_number':841,'multiline':False]
['text':'   (3) op="i" on the output collection.','line_number':842,'multiline':False]
['text':' namespace','line_number':869,'multiline':False]
['text':' namespace mongo','line_number':870,'multiline':False]
