['text':'*
 *    Copyright (C) 2021-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':' IWYU pragma: no_include "ext/alloc_traits.h"','line_number':36,'multiline':False]
['text':' autocommit ','line_number':140,'multiline':True]
['text':' startTransaction ','line_number':140,'multiline':True]
['text':' autocommit ','line_number':174,'multiline':True]
['text':' startTransaction ','line_number':174,'multiline':True]
['text':' autocommit ','line_number':191,'multiline':True]
['text':' startTransaction ','line_number':191,'multiline':True]
['text':' The transaction machinery cannot store an empty locker.','line_number':195,'multiline':False]
['text':' autocommit ','line_number':224,'multiline':True]
['text':' startTransaction ','line_number':224,'multiline':True]
['text':' These are unused by ReshardingOplogSessionApplication but required by IDL parsing.','line_number':245,'multiline':False]
['text':' These are unused by ReshardingOplogSessionApplication but required by IDL parsing.','line_number':275,'multiline':False]
['text':' Use AbortTransactionOplogObject rather than CommitTransactionOplogObject to avoid needing','line_number':285,'multiline':False]
['text':' to deal with the commitTimestamp value. Both are treated the same way by','line_number':286,'multiline':False]
['text':' ReshardingOplogSessionApplication anyway.','line_number':287,'multiline':False]
['text':' These are unused by ReshardingOplogSessionApplication but required by IDL parsing.','line_number':296,'multiline':False]
['text':' The oplog entry must have o2 and fromMigrate set or SessionUpdateTracker will ignore it.','line_number':350,'multiline':False]
['text':' Verify secondaries during replication's oplog application would generate an identical','line_number':366,'multiline':False]
['text':' SessionTxnRecord update from the oplog entry.','line_number':367,'multiline':False]
['text':' The oplog entries generated by ReshardingTxnCloner are always op='n' and are therefore','line_number':372,'multiline':False]
['text':' buffered by SessionUpdateTracker rather than flushed immediately.','line_number':373,'multiline':False]
['text':' autocommit ','line_number':396,'multiline':True]
['text':' startTransaction ','line_number':396,'multiline':True]
['text':' Used for pre/post image oplog entry lookup.','line_number':405,'multiline':False]
['text':' Make two in progress transactions so the one started by resharding must block.','line_number':763,'multiline':False]
['text':' needsRetryImage ','line_number':871,'multiline':True]
['text':' preImageOpTime ','line_number':872,'multiline':True]
['text':' needsRetryImage ','line_number':918,'multiline':True]
['text':' needsRetryImage ','line_number':967,'multiline':True]
['text':' preImageOpTime ','line_number':968,'multiline':True]
['text':' postImageOpTime ','line_number':969,'multiline':True]
['text':' needsRetryImage ','line_number':1015,'multiline':True]
['text':' preImageOpTime ','line_number':1016,'multiline':True]
['text':' Resharding converts oplog with retry image to old style no-op oplog pairs in normal cases. But','line_number':1044,'multiline':False]
['text':' if it was not able to extract the document from the image collection, it will return the oplog','line_number':1045,'multiline':False]
['text':' entry as is. This is how resharding oplog application can encounter oplog with needsRetryImage.','line_number':1046,'multiline':False]
['text':' 'makeFinishTxnOp' returns an abortTransaction oplog entry.','line_number':1303,'multiline':False]
['text':' namespace','line_number':1352,'multiline':False]
['text':' namespace mongo','line_number':1353,'multiline':False]
