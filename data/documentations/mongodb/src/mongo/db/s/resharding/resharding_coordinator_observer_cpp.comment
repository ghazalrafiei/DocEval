['text':'*
 *    Copyright (C) 2020-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':'*
 * Retrieves the participants corresponding to the expectedState type.
 ','line_number':55,'multiline':True]
['text':'*
 * Returns true if all participants are in a state greater than or equal to the expectedState.
 * Returns false if the participants list is empty.
 ','line_number':69,'multiline':True]
['text':'*
 * Returns whether or not all relevant shards have completed their transitions into the
 * expectedState. If they have, ensures the promise is fulfilled.
 ','line_number':89,'multiline':True]
['text':' Ensure promise is not fulfilled twice.','line_number':99,'multiline':False]
['text':'*
 * Appends context regarding the source of the abortReason.
 ','line_number':112,'multiline':True]
['text':'*
 * If neither the coordinator nor participants have encountered an unrecoverable error, returns
 * boost::none.
 *
 * Otherwise, returns the abortReason reported by either the coordinator or one of the participants.
 ','line_number':123,'multiline':True]
['text':' Note: the absence of context specifying which shard the abortReason originates from','line_number':132,'multiline':False]
['text':' implies the abortReason originates from the coordinator.','line_number':133,'multiline':False]
['text':' namespace','line_number':151,'multiline':False]
['text':' Don't exit early since the coordinator waits for all participants to report state 'done'.','line_number':169,'multiline':False]
['text':' namespace mongo','line_number':276,'multiline':False]
