['text':'*
 *    Copyright (C) 2023-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':'
 * Emit a warning log containing information about the given inconsistency
 ','line_number':81,'multiline':True]
['text':' Please do not change the error code of this log message if not strictly necessary.','line_number':85,'multiline':False]
['text':' Automated log ingestion system relies on this specific log message to monitor cluster.','line_number':86,'multiline':False]
['text':' inconsistencies','line_number':87,'multiline':False]
['text':' Check that the collection has an index that supports the shard key. If so, check that','line_number':101,'multiline':False]
['text':' exists an index that supports the shard key and is not multikey. We allow users to drop','line_number':102,'multiline':False]
['text':' hashed shard key indexes, and therefore we don't require hashed shard keys to have a','line_number':103,'multiline':False]
['text':' supporting index. (Ignore FCV check) Note that the feature flag ignores FCV. If this node','line_number':104,'multiline':False]
['text':' is the primary of the replica set shard, it will handle the missing hashed shard key','line_number':105,'multiline':False]
['text':' index regardless of FCV, so we skip reporting it as an inconsistency.','line_number':106,'multiline':False]
['text':'requireSingleKey','line_number':111,'multiline':True]
['text':' Shards that do not own any chunks do not participate in the creation of new indexes, so they','line_number':120,'multiline':False]
['text':' could potentially miss any indexes created after they no longer own chunks. Thus we first','line_number':121,'multiline':False]
['text':' perform a check optimistically without taking collection lock, if missing indexes are found','line_number':122,'multiline':False]
['text':' we check under the collection lock if this shard currently own any chunk and re-execute again','line_number':123,'multiline':False]
['text':' the checks under the lock to ensure stability of the ShardVersion.','line_number':124,'multiline':False]
['text':' No index inconsistencies found','line_number':128,'multiline':False]
['text':' Pessimistic check under collection lock to serialize with chunk migration commit.','line_number':132,'multiline':False]
['text':' The collection is tracked by the config server in the sharding catalog. This shard has','line_number':152,'multiline':False]
['text':' the collection locally but it is missing the routing informations','line_number':153,'multiline':False]
['text':' namespace','line_number':173,'multiline':False]
['text':' Every inconsistency encountered need to be logged with the same format','line_number':206,'multiline':False]
['text':' to allow log injestion systems to correctly detect them.','line_number':207,'multiline':False]
['text':' whether returned BSON must be owned ','line_number':224,'multiline':True]
['text':' If we can't fit this result inside the current batch, then we stash it for','line_number':244,'multiline':False]
['text':' later.','line_number':245,'multiline':False]
['text':' cursorId ','line_number':264,'multiline':True]
['text':' Record the cursorID in CurOp.','line_number':283,'multiline':False]
['text':' Case where we have found a collection in the sharding catalog that it is not in the','line_number':309,'multiline':False]
['text':' local catalog.','line_number':310,'multiline':False]
['text':' Case where we have found same collection in the catalog client than in the local','line_number':314,'multiline':False]
['text':' catalog.','line_number':315,'multiline':False]
['text':' Check that local collection has the same UUID as the one in the catalog client.','line_number':317,'multiline':False]
['text':' Case where we have found a local collection that is not in the sharding catalog.','line_number':335,'multiline':False]
['text':' TODO SERVER-59957 use function introduced in this ticket to decide if a namespace','line_number':338,'multiline':False]
['text':' should be ignored and stop using isNamepsaceAlwaysUntracked().','line_number':339,'multiline':False]
['text':' Case where we have found more local collections than in the sharding catalog. It is a','line_number':350,'multiline':False]
['text':' hidden unsharded collection inconsistency if we are not the db primary shard.','line_number':351,'multiline':False]
['text':' TODO SERVER-59957 use function introduced in this ticket to decide if a namespace','line_number':354,'multiline':False]
['text':' should be ignored and stop using isNamepsaceAlwaysUntracked().','line_number':355,'multiline':False]
['text':' Skip the first iteration as we need to compare the current chunk with the previous one.','line_number':387,'multiline':False]
['text':' Check if the first and last chunk have MinKey and MaxKey respectively','line_number':416,'multiline':False]
['text':' Skip the first iteration as we need to compare the current zone with the previous one.','line_number':453,'multiline':False]
['text':' As the zones are sorted by minKey, we can check if the previous zone maxKey is less than','line_number':465,'multiline':False]
['text':' the current zone minKey.','line_number':466,'multiline':False]
['text':' namespace metadata_consistency_util','line_number':497,'multiline':False]
['text':' namespace mongo','line_number':498,'multiline':False]
