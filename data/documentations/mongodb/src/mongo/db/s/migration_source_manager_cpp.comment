['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':' Wait at most this much time for the recipient to catch up sufficiently so critical section can be','line_number':117,'multiline':False]
['text':' entered','line_number':118,'multiline':False]
['text':'
 * Calculates the max or min bound perform split+move in case the chunk in question is splittable.
 * If the chunk is not splittable, returns the bound of the existing chunk for the max or min.Finds
 * a max bound if needMaxBound is true and a min bound if forward is false.
 ','line_number':125,'multiline':True]
['text':'*
 * If `max` is the max bound of some chunk, returns that chunk. Otherwise, returns the chunk that
 * contains the key `max`.
 ','line_number':146,'multiline':True]
['text':' namespace','line_number':177,'multiline':False]
['text':' Total number of steps','line_number':211,'multiline':False]
['text':' Make sure the latest placement version is recovered as of the time of the invocation of the','line_number':223,'multiline':False]
['text':' command.','line_number':224,'multiline':False]
['text':' Complete any unfinished migration pending recovery','line_number':229,'multiline':False]
['text':' Since the moveChunk command is holding the ActiveMigrationRegistry and we just drained','line_number':233,'multiline':False]
['text':' all migrations pending recovery, now there cannot be any document in','line_number':234,'multiline':False]
['text':' config.migrationCoordinators.','line_number':235,'multiline':False]
['text':' Snapshot the committed metadata from the time the migration starts','line_number':241,'multiline':False]
['text':' TODO (SERVER-71444): Fix to be interruptible or document exception.','line_number':243,'multiline':False]
['text':' NOLINT.','line_number':244,'multiline':False]
['text':' Atomically (still under the CSR lock held above) check whether migrations are allowed and','line_number':254,'multiline':False]
['text':' register the MigrationSourceManager on the CSR. This ensures that interruption due to the','line_number':255,'multiline':False]
['text':' change of allowMigrations to false will properly serialise and not allow any new MSMs to','line_number':256,'multiline':False]
['text':' be running after the change.','line_number':257,'multiline':False]
['text':' Compute the max or min bound in case only one is set (moveRange)','line_number':268,'multiline':False]
['text':' needMaxBound ','line_number':280,'multiline':True]
['text':' needMaxBound ','line_number':294,'multiline':True]
['text':' Having the metadata manager registered on the collection sharding state is what indicates','line_number':372,'multiline':False]
['text':' that a chunk on that collection is being migrated to the OpObservers. With an active','line_number':373,'multiline':False]
['text':' migration, write operations require the cloner to be present in order to track changes to','line_number':374,'multiline':False]
['text':' the chunk which needs to be transmitted to the recipient.','line_number':375,'multiline':False]
['text':' Block until the cloner deems it appropriate to enter the critical section.','line_number':420,'multiline':False]
['text':' Check that there are no chunks on the recepient shard. Write an oplog event for change','line_number':439,'multiline':False]
['text':' streams if this is the first migration to the recipient.','line_number':440,'multiline':False]
['text':' Wait for the above 'migrateChunkToNewShard' oplog message to be majority acknowledged.','line_number':445,'multiline':False]
['text':' Persist a signal to secondaries that we've entered the critical section. This is will cause','line_number':462,'multiline':False]
['text':' secondaries to refresh their routing table when next accessed, which will block behind the','line_number':463,'multiline':False]
['text':' critical section. This ensures causal consistency by preventing a stale mongos with a cluster','line_number':464,'multiline':False]
['text':' time inclusive of the migration config commit update from accessing secondary data.','line_number':465,'multiline':False]
['text':' Note: this write must occur after the critSec flag is set, to ensure the secondary refresh','line_number':466,'multiline':False]
['text':' will stall behind the flag.','line_number':467,'multiline':False]
['text':'upsert','line_number':474,'multiline':True]
['text':' Tell the recipient shard to fetch the latest changes.','line_number':493,'multiline':False]
['text':' If we have chunks left on the FROM shard, bump the version of one of them as well. This will','line_number':519,'multiline':False]
['text':' change the local collection major version, which indicates to other processes that the chunk','line_number':520,'multiline':False]
['text':' metadata has changed and they should refresh.','line_number':521,'multiline':False]
['text':' Read operations must begin to wait on the critical section just before we send the commit','line_number':539,'multiline':False]
['text':' operation to the config server','line_number':540,'multiline':False]
['text':' TODO (SERVER-71444): Fix to be interruptible or document exception.','line_number':565,'multiline':False]
['text':' NOLINT.','line_number':566,'multiline':False]
['text':' Asynchronously tell the recipient to release its critical section','line_number':577,'multiline':False]
['text':' TODO (SERVER-71444): Fix to be interruptible or document exception.','line_number':604,'multiline':False]
['text':' NOLINT.','line_number':605,'multiline':False]
['text':' Best-effort recover of the chunk version.','line_number':612,'multiline':False]
['text':' Migration succeeded','line_number':617,'multiline':False]
['text':' Check if there are no chunks left on donor shard. Write an oplog event for change streams if','line_number':620,'multiline':False]
['text':' the last chunk migrated off the donor.','line_number':621,'multiline':False]
['text':' If the migration has succeeded, clear the BucketCatalog so that the buckets that got migrated','line_number':633,'multiline':False]
['text':' out are no longer updatable.','line_number':634,'multiline':False]
['text':' Exit the critical section and ensure that all the necessary state is fully persisted before','line_number':653,'multiline':False]
['text':' scheduling orphan cleanup.','line_number':654,'multiline':False]
['text':' TODO (SERVER-71444): Fix to be interruptible or document exception.','line_number':719,'multiline':False]
['text':' NOLINT.','line_number':720,'multiline':False]
['text':' Unregister from the collection's sharding state and exit the migration critical section.','line_number':760,'multiline':False]
['text':' TODO (SERVER-71444): Fix to be interruptible or document exception.','line_number':761,'multiline':False]
['text':' NOLINT.','line_number':762,'multiline':False]
['text':' The cleanup operations below are potentially blocking or acquire other locks, so perform them','line_number':788,'multiline':False]
['text':' outside of the collection X lock','line_number':789,'multiline':False]
['text':' Wait for the updates to the cache of the routing table to be fully written to','line_number':812,'multiline':False]
['text':' disk. This way, we ensure that all nodes from a shard which donated a chunk will','line_number':813,'multiline':False]
['text':' always be at the placement version of the last migration it performed.','line_number':814,'multiline':False]
['text':'','line_number':815,'multiline':False]
['text':' If the metadata is not persisted before clearing the 'inMigration' flag below, it','line_number':816,'multiline':False]
['text':' is possible that the persisted metadata is rolled back after step down, but the','line_number':817,'multiline':False]
['text':' write which cleared the 'inMigration' flag is not, a secondary node will report','line_number':818,'multiline':False]
['text':' itself at an older placement version.','line_number':819,'multiline':False]
['text':' This can be called on an exception path after the OperationContext has been','line_number':823,'multiline':False]
['text':' interrupted, so use a new OperationContext. Note, it's valid to call','line_number':824,'multiline':False]
['text':' getServiceContext on an interrupted OperationContext.','line_number':825,'multiline':False]
['text':' Something went really wrong when completing the migration just unset the metadata and let','line_number':837,'multiline':False]
['text':' the next op to recover.','line_number':838,'multiline':False]
['text':' TODO (SERVER-71444): Fix to be interruptible or document exception.','line_number':839,'multiline':False]
['text':' NOLINT.','line_number':840,'multiline':False]
['text':' TODO (SERVER-71444): Fix to be interruptible or document exception.','line_number':877,'multiline':False]
['text':' NOLINT.','line_number':878,'multiline':False]
['text':' namespace mongo','line_number':885,'multiline':False]
