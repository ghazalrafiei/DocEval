['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':'*
 * This class serves as a bootstrap and shutdown for the sharding subsystem and also controls the
 * persisted cluster identity. The default ShardingEnvironmentInitFunc instantiates all the sharding
 * services, attaches them to the same service context to which it itself is attached and puts the
 * ShardingState in the initialized state.
 ','line_number':50,'multiline':True]
['text':'*
     * Returns the shard identity document for this shard if it exists. This method
     * will also take into account the --overrideShardIdentity startup parameter
     ','line_number':70,'multiline':True]
['text':'*
     * Initializes the sharding state of this server from the shard identity document argument and
     * sets secondary or primary state information on the catalog cache loader.
     *
     * NOTE: This must be called under at least Global IX lock in order for the replica set member
     * state to be stable (primary/secondary).
     ','line_number':76,'multiline':True]
['text':'*
     * Updates the config server field of the shardIdentity document with the given connection
     * string.
     ','line_number':88,'multiline':True]
['text':'*
     * For testing only. Mock the initialization method used by initializeFromConfigConnString and
     * initializeFromShardIdentity after all checks are performed.
     ','line_number':95,'multiline':True]
['text':'*
     * Installs a listener for RSM change notifications.
     ','line_number':103,'multiline':True]
['text':' Virtual methods coming from the ReplicaSetAwareService','line_number':112,'multiline':False]
['text':' This mutex ensures that only one thread at a time executes the sharding','line_number':129,'multiline':False]
['text':' initialization/teardown sequence','line_number':130,'multiline':False]
['text':' Function for initializing the sharding environment components (i.e. everything on the Grid)','line_number':134,'multiline':False]
['text':'*
 * Initialize the sharding components of this server. This can be used on both shard and config
 * servers.
 *
 * NOTE: This does not initialize ShardingState, which should only be done for shard servers.
 ','line_number':140,'multiline':True]
['text':'*
 * Initialize the sharding components for a config server, if they haven't already been set up.
 ','line_number':149,'multiline':True]
['text':'*
 * Helper method to initialize sharding awareness from the shard identity document if it can be
 * found and load global sharding settings awareness was initialized. See
 * ShardingInitializationMongoD::initializeShardingAwarenessIfNeeded() above for more details.
 * The optional parameter `startupTimeElapsedBuilder` is for adding time elapsed of tasks done in
 * this function into one single builder that records the time elapsed during startup. Its default
 * value is nullptr because we only want to time this function when it is called during startup.
 ','line_number':156,'multiline':True]
['text':' namespace mongo','line_number':169,'multiline':False]
