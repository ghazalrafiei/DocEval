['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':' namespace','line_number':64,'multiline':False]
['text':' The method requires the requesting operation to be interruptible','line_number':81,'multiline':False]
['text':' This wait is to hold back additional lock requests while there is already one in progress','line_number':85,'multiline':False]
['text':' Setting flag before condvar returns to block new migrations from starting. (Favoring writers)','line_number':89,'multiline':False]
['text':' Wait for any ongoing chunk modifications to complete','line_number':95,'multiline':False]
['text':' lock() may be called while the node is still completing its draining mode; if so, reject the','line_number':100,'multiline':False]
['text':' request with a retriable error and allow the draining mode to invoke registerReceiveChunk()','line_number':101,'multiline':False]
['text':' as part of its recovery sequence.','line_number':102,'multiline':False]
['text':' The state of the MigrationSourceManager or the MigrationDestinationManager could change','line_number':243,'multiline':False]
['text':' between taking and releasing the mutex above and then taking the collection lock here, but','line_number':244,'multiline':False]
['text':' that's fine because it isn't important to return information on a migration that just ended','line_number':245,'multiline':False]
['text':' or started. This is just best effort and desireable for reporting, and then diagnosing,','line_number':246,'multiline':False]
['text':' migrations that are stuck.','line_number':247,'multiline':False]
['text':' Lock the collection so nothing changes while we're getting the migration report.','line_number':249,'multiline':False]
['text':' If this is a newly started migration the outcome must have been set by the holder','line_number':323,'multiline':False]
['text':' namespace mongo','line_number':401,'multiline':False]
