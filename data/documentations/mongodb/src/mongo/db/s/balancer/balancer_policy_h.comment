['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':' May be optional in case of moveRange','line_number':105,'multiline':False]
['text':' Set only in case of data-size aware balancing','line_number':110,'multiline':False]
['text':'*
 * Describes a chunk which needs to be split, because it violates the balancer policy.
 ','line_number':122,'multiline':True]
['text':' Use ShardVersion for CRUD targeting since datasize is considered a CRUD operation, not a DDL','line_number':188,'multiline':False]
['text':' operation.','line_number':189,'multiline':False]
['text':'
 * Keeps track of info needed for data size aware balancing.
 ','line_number':216,'multiline':True]
['text':'*
 * Keeps track of zones for a collection.
 ','line_number':228,'multiline':True]
['text':'*
     * Appends the specified range to the set of ranges tracked for this collection and checks if
     * it overlaps with existing ranges.
     ','line_number':236,'multiline':True]
['text':'*
     * Returns all zones added so far.
     ','line_number':242,'multiline':True]
['text':'*
     * Using the set of zones added so far, returns what zone corresponds to the specified chunk.
     * Returns an empty string if the chunk doesn't fall into any zone.
     ','line_number':249,'multiline':True]
['text':'*
     * Returns all zone ranges defined.
     ','line_number':255,'multiline':True]
['text':'*
     * Retrieves the collection zones from the catalog client
     ','line_number':262,'multiline':True]
['text':' Map of zone max key to the zone description','line_number':270,'multiline':False]
['text':' Set of all zones defined for this collection','line_number':273,'multiline':False]
['text':'*
 * This class constitutes a cache of the chunk distribution across the entire cluster along with the
 * zone boundaries imposed on it. This information is stored in format, which makes it efficient to
 * query utilization statististics and to decide what to balance.
 ','line_number':279,'multiline':True]
['text':'*
     * Returns the namespace for which this balance status applies.
     ','line_number':293,'multiline':True]
['text':'*
     * Returns number of chunks in the specified shard.
     ','line_number':300,'multiline':True]
['text':'*
     * Returns all chunks for the specified shard.
     ','line_number':305,'multiline':True]
['text':'*
     * Returns all zone ranges defined for the collection.
     ','line_number':310,'multiline':True]
['text':'*
     * Returns all zones defined for the collection.
     ','line_number':317,'multiline':True]
['text':'*
     * Direct access to zone info
     ','line_number':324,'multiline':True]
['text':'*
     * Using the set of zones defined for the collection, returns what zone corresponds to the
     * specified chunk. If the chunk doesn't fall into any zone returns the empty string.
     ','line_number':331,'multiline':True]
['text':' Namespace for which this distribution applies','line_number':338,'multiline':False]
['text':' Map of what chunks are owned by each shard','line_number':341,'multiline':False]
['text':' Info for zones.','line_number':344,'multiline':False]
['text':'*
     * Determines whether a shard with the specified utilization statistics would be able to accept
     * a chunk with the specified zone. According to the policy a shard cannot accept chunks if its
     * size is maxed out and if the chunk's zone conflicts with the zone of the shard.
     ','line_number':350,'multiline':True]
['text':'*
     * Returns a suggested set of chunks or ranges to move within a collection's shards, given the
     * specified state of the shards (draining, max size reached, etc) and the number of chunks or
     * data size for that collection. If the policy doesn't recommend anything to move, it returns
     * an empty vector. The entries in the vector do are all for separate source/destination shards
     * and as such do not need to be done serially and can be scheduled in parallel.
     *
     * The balancing logic calculates the optimum number of chunks per shard for each zone and if
     * any of the shards have chunks, which are sufficiently higher than this number, suggests
     * moving chunks to shards, which are under this number.
     *
     * The availableShards parameter is in/out and it contains the set of shards, which haven't
     * been used for migrations yet. Used so we don't return multiple conflicting migrations for the
     * same shard.
     ','line_number':358,'multiline':True]
['text':'*
     * Using the specified distribution information, returns a suggested better location for the
     * specified chunk if one is available.
     ','line_number':380,'multiline':True]
['text':'
     * Only considers shards with the specified zone, all shards in case the zone is empty.
     * Returns a tuple <ShardID, amount of data in bytes> referring the shard with less data.
     ','line_number':391,'multiline':True]
['text':'*
     * Only considers shards with the specified zone, all shards in case the zone is empty.
     * Returns a tuple <ShardID, amount of data in bytes> referring the shard with more data.
     ','line_number':402,'multiline':True]
['text':'*
     * Selects one range for the specified zone (if appropriate) to be moved in order to bring the
     * deviation of the collection data size closer to even across all shards in the specified
     * zone. Takes into account and updates the shards, which haven't been used for migrations yet.
     *
     * Returns true if a migration was suggested, false otherwise. This method is intented to be
     * called multiple times until all posible migrations for a zone have been selected.
     ','line_number':413,'multiline':True]
['text':' namespace mongo','line_number':432,'multiline':False]
