['text':'*
 *    Copyright (C) 2022-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':' IWYU pragma: keep','line_number':43,'multiline':False]
['text':'*
 * Represents a tree of paths with attached properties. For example adding "a.b" and "a.c" results
 * in a root node "a" with two children "b" and "c". By setting appropriate properties we can create
 * a path tree for a $project expression:
 *   Field "a" * Keep "a"
 *      |
 *      Traverse
 *        |
 *        Obj * Keep "b", "c"
 ','line_number':49,'multiline':True]
['text':' Child paths are potentially dotted field paths.','line_number':71,'multiline':False]
['text':'*
     * Adds 'fieldPath' as a projected field, creating FieldMapEntries for each element along the
     * path as necessary, and applying 'fn' to each created FieldMapEntry.
     ','line_number':82,'multiline':True]
['text':'*
     * Produce an ABT representing all fields integrated so far under a single EvalPath. For
     * example, assuming "a.b" and "a.c" were integrated as fields in an inclusion projection, an
     * output may look like:
     *  EvalPath
     *  |                        |
     *  Field "a" * Keep "a"     Variable[rootProjName]
     *      |
     *      Traverse
     *        |
     *        Obj * Keep "b", "c"
     *
     * Returns boost::none when no fields have been integrated so far.
     ','line_number':90,'multiline':True]
['text':' Maps from potentially dotted field path to FieldMapEntry.','line_number':112,'multiline':False]
['text':' namespace mongo::optimizer','line_number':116,'multiline':False]
