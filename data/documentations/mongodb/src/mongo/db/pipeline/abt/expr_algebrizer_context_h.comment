['text':'*
 *    Copyright (C) 2022-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':' IWYU pragma: keep','line_number':41,'multiline':False]
['text':'*
     * Push an ABT onto the stack. Optionally perform a check on the type of the ABT based on
     * 'assertExprSort' and 'assertPathSort'
     ','line_number':56,'multiline':True]
['text':'
     * Pop the most recent ABT from the stack. Asserts if there is no node in the stack.
     ','line_number':67,'multiline':True]
['text':'
     * Asserts if there are not at least 'arity' nodes in the stack.
     ','line_number':72,'multiline':True]
['text':'*
     * Returns a unique projection. It will be prefixed by 'uniqueIdPrefix'.
     ','line_number':84,'multiline':True]
['text':'*
     * Returns whether the current $elemMatch should consider its path for translation. This
     * function assumes that 'enterElemMatch' has been called before visiting the current
     * expression.
     ','line_number':105,'multiline':True]
['text':'*
     * Returns true if the current expression should consider its path for translation based on
     * whether it's contained within an ElemMatchObjectExpression.
     ','line_number':116,'multiline':True]
['text':' The name of the input projection on which the top-level expression will be evaluated.','line_number':129,'multiline':False]
['text':' Used to vend out unique strings for projection names.','line_number':133,'multiline':False]
['text':' Used to track the parts of the expression tree that have so far been translated to ABT.','line_number':136,'multiline':False]
['text':' Maintained as a stack so parent expressions can easily compose the ABTs representing their','line_number':137,'multiline':False]
['text':' child expressions.','line_number':138,'multiline':False]
['text':' Used to track expressions contained under an $elemMatch. Each entry is either an','line_number':141,'multiline':False]
['text':' ELEM_MATCH_OBJECT or ELEM_MATCH_VALUE.','line_number':142,'multiline':False]
['text':' namespace mongo::optimizer','line_number':148,'multiline':False]
