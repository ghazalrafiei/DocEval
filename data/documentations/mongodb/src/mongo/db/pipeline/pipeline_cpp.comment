['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':' IWYU pragma: no_include "ext/alloc_traits.h"','line_number':38,'multiline':False]
['text':' Given a serialized document source, appends execution stats 'nReturned' and','line_number':86,'multiline':False]
['text':' 'executionTimeMillisEstimate' to it.','line_number':87,'multiline':False]
['text':'*
 * Performs validation checking specific to top-level pipelines. Throws an assertion if the
 * pipeline is invalid.
 ','line_number':100,'multiline':True]
['text':' Verify that the specified namespace is valid for the initial stage of this pipeline.','line_number':105,'multiline':False]
['text':' The $mergeCursors stage can take {aggregate: 1} or a normal namespace. Aside from this,','line_number':119,'multiline':False]
['text':' {aggregate: 1} is only valid for collectionless sources, and vice-versa.','line_number':120,'multiline':False]
['text':' If the first stage is a $changeStream stage, then all stages in the pipeline must be','line_number':135,'multiline':False]
['text':' either $changeStream stages or allowlisted as being able to run in a change stream.','line_number':136,'multiline':False]
['text':' Record whether any of the stages in the pipeline is a $changeStreamSplitLargeEvent.','line_number':138,'multiline':False]
['text':' Check whether any stages must only be run in a change stream pipeline.','line_number':145,'multiline':False]
['text':' Check whether this is a change stream split stage.','line_number':150,'multiline':False]
['text':' Verify that usage of $searchMeta and $search is legal. Note that on mongos, we defer this','line_number':164,'multiline':False]
['text':' check until after we've established cursors on the shards to resolve any views.','line_number':165,'multiline':False]
['text':' namespace','line_number':172,'multiline':False]
['text':' Before parsing the pipeline, make sure it's not so long that it will make us run out of','line_number':221,'multiline':False]
['text':' memory.','line_number':222,'multiline':False]
['text':' First call the top level validator, unless this is a $facet','line_number':237,'multiline':False]
['text':' (nested) pipeline. Then call the context-specific validator if one','line_number':238,'multiline':False]
['text':' is provided.','line_number':239,'multiline':False]
['text':' Next run through the common validation rules that apply to every pipeline.','line_number':247,'multiline':False]
['text':' Keep track of stages which can only appear once.','line_number':304,'multiline':False]
['text':' Verify that all stages adhere to their PositionRequirement constraints.','line_number':311,'multiline':False]
['text':' TODO SERVER-73790: use PositionRequirement::kCustom to validate $match.','line_number':318,'multiline':False]
['text':' If the stage has a special requirement about its position, validate it.','line_number':330,'multiline':False]
['text':' Verify that we are not attempting to run a mongoS-only stage on mongoD.','line_number':335,'multiline':False]
['text':' Verify that a stage which can only appear once doesn't appear more than that.','line_number':346,'multiline':False]
['text':' If the disablePipelineOptimization failpoint is enabled, the pipeline won't be optimized.','line_number':360,'multiline':False]
['text':' Once we have reached our final number of stages, optimize each individually.','line_number':378,'multiline':False]
['text':' Check for a null operation context to make sure that all children detached correctly.','line_number':420,'multiline':False]
['text':' All sources in a pipeline must share its expression context. Subpipelines may have a','line_number':436,'multiline':False]
['text':' different expression context, but must point to the same operation context. Let the','line_number':437,'multiline':False]
['text':' sources validate this themselves since they don't all have the same subpipelines, etc.','line_number':438,'multiline':False]
['text':' Make sure all stages are connected, in case we are being disposed via an error path and','line_number':454,'multiline':False]
['text':' were not stitched at the time of the error.','line_number':455,'multiline':False]
['text':' If this pipeline is capable of splitting before the mongoS-only stage, then the pipeline','line_number':528,'multiline':False]
['text':' as a whole is not required to run on mongoS.','line_number':529,'multiline':False]
['text':' If a mongoS-only stage occurs before a splittable stage, or if the pipeline is already','line_number':536,'multiline':False]
['text':' split, this entire pipeline must run on mongoS.','line_number':537,'multiline':False]
['text':' Chain together all the stages.','line_number':591,'multiline':False]
['text':' Append execution stats to the serialized stage if the specified verbosity is','line_number':619,'multiline':False]
['text':' 'executionStats' or 'allPlansExecution'.','line_number':620,'multiline':False]
['text':' If 'unavailableMetadata' was not specified, we assume all metadata is available. This allows','line_number':659,'multiline':False]
['text':' us to call 'deps.setNeedsMetadata()' without throwing.','line_number':660,'multiline':False]
['text':' We don't know anything about this stage, so we have to assume it depends on','line_number':674,'multiline':False]
['text':' everything. We may still know something about our dependencies if an earlier stage','line_number':675,'multiline':False]
['text':' returned EXHAUSTIVE_FIELDS or EXHAUSTIVE_META.','line_number':676,'multiline':False]
['text':' If we ever saw an unsupported stage, don't bother continuing to track field and metadata','line_number':680,'multiline':False]
['text':' deps: we already have to assume the pipeline depends on everything.','line_number':681,'multiline':False]
['text':' If a field was generated within the pipeline, we don't need to count it as a','line_number':684,'multiline':False]
['text':' dependency of the pipeline as a whole when it is used in later stages.','line_number':685,'multiline':False]
['text':' Check if this stage modifies any fields that we should track for use by later stages.','line_number':694,'multiline':False]
['text':' Fields which are part of exclusion projections should not be marked as generated,','line_number':695,'multiline':False]
['text':' despite them being modified.','line_number':696,'multiline':False]
['text':' don't know all fields we need','line_number':719,'multiline':False]
['text':' There is a text score available. If we are the first half of a split pipeline, then we','line_number':722,'multiline':False]
['text':' have to assume future stages might depend on the textScore (unless we've encountered a','line_number':723,'multiline':False]
['text':' stage that doesn't preserve metadata).','line_number':724,'multiline':False]
['text':' There is no text score available, so we don't need to ask for it.','line_number':729,'multiline':False]
['text':' If nothing prevents this stage from running on mongoS, continue to the next stage.','line_number':755,'multiline':False]
['text':' Otherwise, return an error with an explanation.','line_number':760,'multiline':False]
['text':' After parsing the pipeline to detect if $$USER_ROLES is referenced, set the value of','line_number':860,'multiline':False]
['text':' $$USER_ROLES for the pipeline.','line_number':861,'multiline':False]
['text':' If readConcern is set on opts and aggRequest, assert they are equal.','line_number':875,'multiline':False]
['text':' We must create a new SourceContainer representing the subsection of the pipeline we wish to','line_number':904,'multiline':False]
['text':' optimize, since otherwise calls to optimizeAt() will overrun these limits.','line_number':905,'multiline':False]
['text':' Update subpipeline's ExpressionContext with the resolved namespace.','line_number':938,'multiline':False]
['text':' When we get a resolved pipeline back, we may not yet have its namespaces available in the','line_number':946,'multiline':False]
['text':' expression context, e.g. if the view's pipeline contains a $lookup on another collection.','line_number':947,'multiline':False]
['text':' namespace mongo','line_number':959,'multiline':False]
