['text':'*
 *    Copyright (C) 2021-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':'*
 * An internal stage used as part of the change streams infrastructure to listen for an event
 * signaling that a new shard now has potentially matching data. For example, this stage will
 * detect if a collection is being watched and a chunk for that collection migrates to a shard for
 * the first time. When this event is detected, this stage will establish a new cursor on that
 * shard and add it to the cursors being merged.
 ','line_number':60,'multiline':True]
['text':'*
     * Creates a new stage which will establish a new cursor and add it to the cursors being merged
     * by 'mergeCursorsStage' whenever a new shard is detected by a change stream.
     ','line_number':73,'multiline':True]
['text':' This stage neither modifies nor renames any field.','line_number':89,'multiline':False]
['text':'*
     * Establish the new cursors and tell the RouterStageMerge about them.
     ','line_number':104,'multiline':True]
['text':'*
     * Open the cursors on the new shards.
     ','line_number':109,'multiline':True]
['text':'*
     * Updates the $changeStream stage in the '_originalAggregateCommand' to reflect the start time
     * for the newly-added shard(s), then generates the final command object to be run on those
     * shards.
     ','line_number':114,'multiline':True]
['text':'*
     * Given the '_originalAggregateCommand' and a resume token, returns a new BSON object with the
     * same command except with the addition of a resumeAfter option containing the resume token.
     * If there was a previous resumeAfter option, it will be removed.
     ','line_number':121,'multiline':True]
['text':' namespace mongo','line_number':131,'multiline':False]
