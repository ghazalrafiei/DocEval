['text':'*
 *    Copyright (C) 2020-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':' $_internalUnpackBucket's doOptimizeAt optimizes the end of the pipeline before attempting to','line_number':232,'multiline':False]
['text':' perform predicate mapping. We will mimic this behavior here to take advantage of the','line_number':233,'multiline':False]
['text':' existing $expr rewrite optimizations.','line_number':234,'multiline':False]
['text':' $_internalUnpackBucket's doOptimizeAt optimizes the end of the pipeline before attempting to','line_number':259,'multiline':False]
['text':' perform predicate mapping. We will mimic this behavior here to take advantage of the','line_number':260,'multiline':False]
['text':' existing $expr rewrite optimizations.','line_number':261,'multiline':False]
['text':' $_internalUnpackBucket's doOptimizeAt optimizes the end of the pipeline before attempting to','line_number':286,'multiline':False]
['text':' perform predicate mapping. We will mimic this behavior here to take advantage of the','line_number':287,'multiline':False]
['text':' existing $expr rewrite optimizations.','line_number':288,'multiline':False]
['text':' $_internalUnpackBucket's doOptimizeAt optimizes the end of the pipeline before attempting to','line_number':313,'multiline':False]
['text':' perform predicate mapping. We will mimic this behavior here to take advantage of the','line_number':314,'multiline':False]
['text':' existing $expr rewrite optimizations.','line_number':315,'multiline':False]
['text':' $_internalUnpackBucket's doOptimizeAt optimizes the end of the pipeline before attempting to','line_number':340,'multiline':False]
['text':' perform predicate mapping. We will mimic this behavior here to take advantage of the','line_number':341,'multiline':False]
['text':' existing $expr rewrite optimizations.','line_number':342,'multiline':False]
['text':' When a predicate can't be pushed down, it's the same as pushing down a trivially-true','line_number':528,'multiline':False]
['text':' predicate. So when any child of an $or can't be pushed down, we could generate something like','line_number':529,'multiline':False]
['text':' {$or: [ ... {$alwaysTrue: {}}, ... ]}, but then we might as well not push down the whole $or.','line_number':530,'multiline':False]
['text':' To get the optimized $match from the pipeline, we have to serialize with explain.','line_number':591,'multiline':False]
['text':' Meta predicates are mapped to the meta field, not the control min/max fields.','line_number':712,'multiline':False]
['text':' Meta predicates are mapped to the meta field, not the control min/max fields.','line_number':732,'multiline':False]
['text':' $_internalUnpackBucket's doOptimizeAt optimizes the end of the pipeline before','line_number':788,'multiline':False]
['text':' attempting to perform predicate mapping. We will mimic this behavior here to take','line_number':789,'multiline':False]
['text':' advantage of the existing $expr rewrite optimizations.','line_number':790,'multiline':False]
['text':' As ObjectId holds time at a second granularity, the rewrite value used for a $lt/$lte','line_number':815,'multiline':False]
['text':' predicate on _id may be rounded up by a second to missing results due to trunacted','line_number':816,'multiline':False]
['text':' milliseconds.','line_number':817,'multiline':False]
['text':' $_internalUnpackBucket's doOptimizeAt optimizes the end of the pipeline before','line_number':846,'multiline':False]
['text':' attempting to perform predicate mapping. We will mimic this behavior here to take','line_number':847,'multiline':False]
['text':' advantage of the existing $expr rewrite optimizations.','line_number':848,'multiline':False]
['text':' $_internalUnpackBucket's doOptimizeAt optimizes the end of the pipeline before','line_number':895,'multiline':False]
['text':' attempting to perform predicate mapping. We will mimic this behavior here to take','line_number':896,'multiline':False]
['text':' advantage of the existing $expr rewrite optimizations.','line_number':897,'multiline':False]
['text':' $_internalUnpackBucket's doOptimizeAt optimizes the end of the pipeline before','line_number':956,'multiline':False]
['text':' attempting to perform predicate mapping. We will mimic this behavior here to take','line_number':957,'multiline':False]
['text':' advantage of the existing $expr rewrite optimizations.','line_number':958,'multiline':False]
['text':' $_internalUnpackBucket's doOptimizeAt optimizes the end of the pipeline before','line_number':1006,'multiline':False]
['text':' attempting to perform predicate mapping. We will mimic this behavior here to take','line_number':1007,'multiline':False]
['text':' advantage of the existing $expr rewrite optimizations.','line_number':1008,'multiline':False]
['text':' Validate 'rewriteProvidesExactMatchPredicate' is true when the predicate aligns with the','line_number':1185,'multiline':False]
['text':' bucket boundary.','line_number':1186,'multiline':False]
['text':' Validate 'rewriteProvidesExactMatchPredicate' is false when the predicate does not align with','line_number':1205,'multiline':False]
['text':' the bucket boundary.','line_number':1206,'multiline':False]
['text':' Validate 'rewriteProvidesExactMatchPredicate' is false when the predicate is before 1970.','line_number':1225,'multiline':False]
['text':' date before 1970.','line_number':1227,'multiline':False]
['text':' Validate 'rewriteProvidesExactMatchPredicate' is false when the buckets are not fixed, even','line_number':1244,'multiline':False]
['text':' if the bucket boundaries align.','line_number':1245,'multiline':False]
['text':' namespace','line_number':1265,'multiline':False]
['text':' namespace mongo','line_number':1266,'multiline':False]
