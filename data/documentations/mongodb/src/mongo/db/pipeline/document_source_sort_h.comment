['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':' unused','line_number':85,'multiline':False]
['text':' A $sort does not modify any paths.','line_number':114,'multiline':False]
['text':' Can't swap with a $match if a limit has been absorbed, as $match can't swap with $limit.','line_number':129,'multiline':False]
['text':'*
     * Returns the sort key pattern.
     ','line_number':150,'multiline':True]
['text':'*
     * Parses a $sort stage from the user-supplied BSON.
     ','line_number':157,'multiline':True]
['text':'*
     * Creates a $sort stage. If maxMemoryUsageBytes is boost::none, then it will actually use the
     * value of 'internalQueryMaxBlockingSortMemoryUsageBytes'.
     ','line_number':163,'multiline':True]
['text':'*
     * Convenience to create a $sort stage from BSON with no limit and the default memory limit.
     ','line_number':173,'multiline':True]
['text':'*
     * Parse a stage that uses BoundedSorter.
     ','line_number':187,'multiline':True]
['text':'*
     * Returns the the limit, if a subsequent $limit stage has been coalesced with this $sort stage.
     * Otherwise, returns boost::none.
     ','line_number':193,'multiline':True]
['text':'*
     * Loads a document to be sorted. This can be used to sort a stream of documents that are not
     * coming from another DocumentSource. Once all documents have been added, the caller must call
     * loadingDone() before using getNext() to receive the documents in sorted order.
     ','line_number':199,'multiline':True]
['text':'*
     * Signals to the sort stage that there will be no more input documents. It is an error to call
     * loadDocument() once this method returns.
     ','line_number':206,'multiline':True]
['text':'*
     * Returns true if the sorter used disk while satisfying the query and false otherwise.
     ','line_number':212,'multiline':True]
['text':'*
     * Attempts to absorb a subsequent $limit stage so that it can perform a top-k sort.
     ','line_number':239,'multiline':True]
['text':' Should call serializeToArray instead.','line_number':252,'multiline':False]
['text':'*
     * Before returning anything, we have to consume all input and sort it. This method consumes all
     * input and prepares the sorted stream '_output'.
     *
     * This method may not be able to finish populating the sorter in a single call if 'pSource'
     * returns a DocumentSource::GetNextResult::kPauseExecution, so it returns the last
     * GetNextResult encountered, which may be either kEOF or kPauseExecution.
     ','line_number':255,'multiline':True]
['text':'*
     * Returns the sort key for 'doc', as well as the document that should be entered into the
     * sorter to eventually be returned. If we will need to later merge the sorted results with
     * other results, this method adds the sort key as metadata onto 'doc' to speed up the merge
     * later.
     ','line_number':265,'multiline':True]
['text':'*
     * Returns the time value used to sort 'doc', as well as the document that should be entered
     * into the sorter to eventually be returned. If we will need to later merge the sorted results
     * with other results, this method adds the full sort key as metadata onto 'doc' to speed up the
     * merge later.
     ','line_number':273,'multiline':True]
['text':'*
     * Peeks at the next document in the input. The next document is cached in _timeSorterNextDoc
     * to support peeking without advancing.
     ','line_number':281,'multiline':True]
['text':'*
     * Peeks at the next document in the input, but ignores documents whose partition key differs
     * from the current partition key (if there is one).
     ','line_number':287,'multiline':True]
['text':'*
     * Gets the next document from the input. Caller must call timeSorterPeek() first, and it's
     * only valid to call timeSorterGetNext() if peek returned kAdvanced.
     ','line_number':293,'multiline':True]
['text':' The next document that will be returned by timeSorterGetNext().','line_number':308,'multiline':False]
['text':' timeSorterPeek() fills it in, and timeSorterGetNext() empties it.','line_number':309,'multiline':False]
['text':' The current partition key.','line_number':311,'multiline':False]
['text':' If _timeSorterNextDoc has a document then this represents the partition key of','line_number':312,'multiline':False]
['text':' that document.','line_number':313,'multiline':False]
['text':' If _timeSorterNextDoc is empty then this represents the partition key of','line_number':314,'multiline':False]
['text':' the document last returned by timeSorterGetNext().','line_number':315,'multiline':False]
['text':' Used in timeSorterPeek() to avoid calling getNext() on an exhausted pSource.','line_number':317,'multiline':False]
['text':' namespace mongo','line_number':323,'multiline':False]
