['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':'*
 * Returns the routing information for the namespace set on the passed ExpressionContext. Also
 * verifies that the ExpressionContext's UUID, if present, matches that of the routing table entry.
 ','line_number':88,'multiline':True]
['text':' Additionally check that the ExpressionContext's UUID matches the collection routing info.','line_number':96,'multiline':False]
['text':' Retrieve the collation from the index, or default to the simple collation.','line_number':110,'multiline':False]
['text':' SERVER-5335: The _id index does not report to be unique, but in fact is unique.','line_number':117,'multiline':False]
['text':' namespace','line_number':126,'multiline':False]
['text':' On mongos we can't have local cursors.','line_number':138,'multiline':False]
['text':' On mongos we can't have local cursors.','line_number':154,'multiline':False]
['text':' We don't want to serialize and send a MergeCursors stage to the shards.','line_number':171,'multiline':False]
['text':' Create the find command to be dispatched to the shard(s) in order to return the post-image.','line_number':188,'multiline':False]
['text':' Verify that the collection exists, with the correct UUID.','line_number':212,'multiline':False]
['text':' Finalize the 'find' command object based on the routing table information.','line_number':215,'multiline':False]
['text':' Find by UUID and shard versioning do not work together (SERVER-31946).  In','line_number':217,'multiline':False]
['text':' the sharded case we've already checked the UUID, so find by namespace is','line_number':218,'multiline':False]
['text':' safe.  In the unlikely case that the collection has been deleted and a new','line_number':219,'multiline':False]
['text':' collection with the same name created through a different mongos or the','line_number':220,'multiline':False]
['text':' collection had its shard key refined, the shard version will be detected as','line_number':221,'multiline':False]
['text':' stale, as shard versions contain an 'epoch' field unique to the collection.','line_number':222,'multiline':False]
['text':' Build the versioned requests to be dispatched to the shards. Typically, only a','line_number':227,'multiline':False]
['text':' single shard will be targeted here; however, in certain cases where only the _id','line_number':228,'multiline':False]
['text':' is present, we may need to scatter-gather the query to all shards in order to','line_number':229,'multiline':False]
['text':' find the document.','line_number':230,'multiline':False]
['text':'letParameters','line_number':238,'multiline':True]
['text':'runtimeConstants','line_number':239,'multiline':True]
['text':' Dispatch the requests. The 'establishCursors' method conveniently prepares the','line_number':241,'multiline':False]
['text':' result into a vector of cursor responses for us.','line_number':242,'multiline':False]
['text':' Iterate all shard results and build a single composite batch. We also enforce the','line_number':252,'multiline':False]
['text':' requirement that only a single document should have been returned from across the','line_number':253,'multiline':False]
['text':' cluster.','line_number':254,'multiline':False]
['text':' We should have at most 1 result, and the cursor should be exhausted.','line_number':260,'multiline':False]
['text':' If it's an unsharded collection which has been deleted and re-created, we may get a','line_number':275,'multiline':False]
['text':' NamespaceNotFound error when looking up by UUID.','line_number':276,'multiline':False]
['text':' sessionIsActive ','line_number':305,'multiline':True]
['text':' If the user is listing only their own ops, we use makeSessionFilterForAuthenticatedUsers','line_number':320,'multiline':False]
['text':' to create a pattern that will match against all authenticated usernames for the current','line_number':321,'multiline':False]
['text':' client. If the user is listing ops for all users, we create an empty pattern;','line_number':322,'multiline':False]
['text':' constructing an instance of SessionKiller::Matcher with this empty pattern will return','line_number':323,'multiline':False]
['text':' all sessions.','line_number':324,'multiline':False]
['text':' sessionIsActive ','line_number':332,'multiline':True]
['text':' Get a list of indexes from a shard with correct indexes for the namespace. For an unsharded','line_number':374,'multiline':False]
['text':' collection, this is the current primary shard for the database, and for a sharded collection,','line_number':375,'multiline':False]
['text':' this is any shard that currently owns at least one chunk. This helper sends database and/or','line_number':376,'multiline':False]
['text':' shard versions to ensure this router is not stale, but will not automatically retry if either','line_number':377,'multiline':False]
['text':' version is stale.','line_number':378,'multiline':False]
['text':' If the namespace does not exist, then the field paths *must* be _id only.','line_number':383,'multiline':False]
['text':' If the user supplies the 'fields' array, we don't need to attach a ChunkVersion for','line_number':411,'multiline':False]
['text':' the shards since we are not at risk of 'guessing' the wrong shard key.','line_number':412,'multiline':False]
['text':' In case there are multiple shards which will perform this stage in parallel, we need to','line_number':416,'multiline':False]
['text':' figure out and attach the collection's shard version to ensure each shard is talking','line_number':417,'multiline':False]
['text':' about the same version of the collection. This mongos will coordinate that. We force a','line_number':418,'multiline':False]
['text':' catalog refresh to do so because there is no shard versioning protocol on this namespace','line_number':419,'multiline':False]
['text':' and so we otherwise could not be sure this node is (or will become) at all recent. We','line_number':420,'multiline':False]
['text':' will also figure out and attach the 'joinFields' to send to the shards.','line_number':421,'multiline':False]
['text':' There are edge cases when the collection could be dropped or re-created during or near','line_number':423,'multiline':False]
['text':' the time of the operation (for example, during aggregation). This is okay - we are mostly','line_number':424,'multiline':False]
['text':' paranoid that this mongos is very stale and want to prevent returning an error if the','line_number':425,'multiline':False]
['text':' collection was dropped a long time ago. Because of this, we are okay with piggy-backing','line_number':426,'multiline':False]
['text':' off another thread's request to refresh the cache, simply waiting for that request to','line_number':427,'multiline':False]
['text':' return instead of forcing another refresh.','line_number':428,'multiline':False]
['text':' namespace mongo','line_number':441,'multiline':False]
