['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':' Make sure we can reparse the serialized BSON.','line_number':404,'multiline':False]
['text':' We always serialize the default let variables as {new: "$$ROOT"} if omitted.','line_number':763,'multiline':False]
['text':' Test the behaviour of 'let' serialization for each whenNotMatched mode.','line_number':779,'multiline':False]
['text':' For {whenNotMatched:insert}, we always attach the 'new' document even if the user has','line_number':809,'multiline':False]
['text':' already specified a set of variables. This is because a {whenNotMatched: insert} merge','line_number':810,'multiline':False]
['text':' generates an upsert, and if no documents in the target collection match the query we must','line_number':811,'multiline':False]
['text':' insert the original document. For other 'whenNotMatched' modes, we do not serialize the','line_number':812,'multiline':False]
['text':' new document, since neither 'fail' nor 'discard' can result in an upsert.','line_number':813,'multiline':False]
['text':' The user's variables should be serialized in all cases.','line_number':817,'multiline':False]
['text':' This test verifies that when the 'let' argument is specified as 'null', the default 'new'','line_number':853,'multiline':False]
['text':' variable is still available. This is not a desirable behaviour but rather a limitation in the','line_number':854,'multiline':False]
['text':' IDL parser which cannot differentiate between an optional field specified explicitly as 'null',','line_number':855,'multiline':False]
['text':' or not specified at all. In both cases it will treat the field like it wasn't specified. So,','line_number':856,'multiline':False]
['text':' this test ensures that we're aware of this limitation. Once the limitation is addressed in','line_number':857,'multiline':False]
['text':' SERVER-41272, this test should be updated to accordingly.','line_number':858,'multiline':False]
['text':' NOLINT','line_number':908,'multiline':False]
['text':' Pass collection name as a string.','line_number':990,'multiline':False]
['text':' Pass collection name as a db + coll object.','line_number':1014,'multiline':False]
['text':' Pass collection name as a db + coll object.','line_number':1037,'multiline':False]
['text':' Pass collection name as a string.','line_number':1060,'multiline':False]
['text':' Assert the tenantId is not included in the serialized namespace.','line_number':1068,'multiline':False]
['text':' Pass collection name as a coll object.','line_number':1089,'multiline':False]
['text':' Pass collection name as a db + coll object.','line_number':1117,'multiline':False]
['text':' We're expecting a prefix given gFeatureFlagRequireTenantId is false.','line_number':1145,'multiline':False]
['text':' Pass collection name as a db + coll object.','line_number':1148,'multiline':False]
['text':' namespace','line_number':1206,'multiline':False]
['text':' namespace mongo','line_number':1207,'multiline':False]
