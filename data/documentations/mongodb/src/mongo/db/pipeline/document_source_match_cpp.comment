['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':' IWYU pragma: no_include "boost/container/detail/std_fwd.hpp"','line_number':31,'multiline':False]
['text':' enableSimplification ','line_number':129,'multiline':True]
['text':' The user facing error should have been generated earlier.','line_number':135,'multiline':False]
['text':' For performance reasons, a streaming stage must not keep references to documents across','line_number':144,'multiline':False]
['text':' calls to getNext(). Such stages must retrieve a result from their child and then release','line_number':145,'multiline':False]
['text':' it (or return it) before asking for another result. Failing to do so can result in extra','line_number':146,'multiline':False]
['text':' work, since the Document/Value library must copy data on write when that data has a','line_number':147,'multiline':False]
['text':' refcount above one.','line_number':148,'multiline':False]
['text':' Since a text search must use an index, it must be the first stage in the pipeline. We cannot','line_number':165,'multiline':False]
['text':' combine a non-text stage with a text stage, as that may turn an invalid pipeline into a','line_number':166,'multiline':False]
['text':' valid one, unbeknownst to the user.','line_number':167,'multiline':False]
['text':' Text queries are not allowed anywhere except as the first stage. This is checked before','line_number':169,'multiline':False]
['text':' optimization.','line_number':170,'multiline':False]
['text':' Merge 'nextMatch' into this stage.','line_number':173,'multiline':False]
['text':' Erase 'nextMatch'.','line_number':176,'multiline':False]
['text':' This block contains the functions that make up the implementation of','line_number':185,'multiline':False]
['text':' DocumentSourceMatch::redactSafePortion(). They will only be called after','line_number':186,'multiline':False]
['text':' the Match expression has been successfully parsed so they can assume that','line_number':187,'multiline':False]
['text':' input is well formed.','line_number':188,'multiline':False]
['text':' Can't have numeric elements in the dotted path since redacting elements from an array','line_number':196,'multiline':False]
['text':' would change the indexes.','line_number':197,'multiline':False]
['text':' Currently a parse error.','line_number':216,'multiline':False]
['text':' mutually recursive with next function','line_number':221,'multiline':False]
['text':' Returns the redact-safe portion of an "inner" match expression. This is the layer like','line_number':223,'multiline':False]
['text':' {$gt: 5} which does not include the field name. Returns an empty document if none of the','line_number':224,'multiline':False]
['text':' expression can safely be promoted in front of a $redact.','line_number':225,'multiline':False]
['text':' These are always ok','line_number':238,'multiline':False]
['text':' These are ok if the type of the rhs is allowed in comparisons','line_number':250,'multiline':False]
['text':' $in must be all-or-nothing (like $or). Can't include subset of elements.','line_number':260,'multiline':False]
['text':' $all can include subset of elements (like $and).','line_number':277,'multiline':False]
['text':' NOTE this currently doesn't allow {$all: [{$elemMatch: {...}}]}','line_number':280,'multiline':False]
['text':' These are never allowed','line_number':306,'multiline':False]
['text':' Returns the redact-safe portion of an "outer" match expression. This is the layer like','line_number':339,'multiline':False]
['text':' {fieldName: {...}} which does include the field name. Returns an empty document if none of','line_number':340,'multiline':False]
['text':' the expression can safely be promoted in front of a $redact.','line_number':341,'multiline':False]
['text':' $or must be all-or-nothing (line $in). Can't include subset of elements.','line_number':348,'multiline':False]
['text':' $and can include subset of elements (like $all).','line_number':362,'multiline':False]
['text':' exact matches on arrays are never allowed','line_number':381,'multiline':False]
['text':' can't look for missing fields','line_number':383,'multiline':False]
['text':' Currently a parse error.','line_number':385,'multiline':False]
['text':' All other types are ok to pass through','line_number':395,'multiline':False]
['text':' namespace','line_number':403,'multiline':False]
['text':' If 'pred' is an $and, add its children directly to the new top-level $and to avoid','line_number':431,'multiline':False]
['text':' nesting $and's. Otherwise, add 'pred' itself as a child.','line_number':432,'multiline':False]
['text':' The entire $match depends on 'fields'. It cannot be split or moved, so we return this','line_number':468,'multiline':False]
['text':' stage without modification as the second stage in the pair.','line_number':469,'multiline':False]
['text':' This $match is entirely independent of 'fields' and there were no renames to apply. In','line_number':475,'multiline':False]
['text':' this case, the current stage can swap with its predecessor without modification. We','line_number':476,'multiline':False]
['text':' simply return this as the first stage in the pair.','line_number':477,'multiline':False]
['text':' If we're here, then either:','line_number':482,'multiline':False]
['text':'  - this stage has split into two, or','line_number':483,'multiline':False]
['text':'  - this stage can swap with its predecessor, but potentially had renames applied.','line_number':484,'multiline':False]
['text':'','line_number':485,'multiline':False]
['text':' In any of these cases, we have created new expression(s). A MatchExpression requires that it','line_number':486,'multiline':False]
['text':' is outlived by the BSONObj it is parsed from. But since the MatchExpressions were modified,','line_number':487,'multiline':False]
['text':' the corresponding BSONObj may not exist. Therefore, we take each of these expressions,','line_number':488,'multiline':False]
['text':' serialize them, and then re-parse them, constructing new BSON that is owned by the','line_number':489,'multiline':False]
['text':' DocumentSourceMatch.','line_number':490,'multiline':False]
['text':' Cannot call this method on a $match including a $elemMatch.','line_number':506,'multiline':False]
['text':' Only leaf and array match expressions have a path.','line_number':509,'multiline':False]
['text':' Attempt to move some or all of this $match before this stage.','line_number':535,'multiline':False]
['text':' We don't know what paths this stage might modify, so refrain from swapping.','line_number':539,'multiline':False]
['text':' This stage modifies all paths, so cannot be swapped with a $match at all.','line_number':542,'multiline':False]
['text':' Get all field or variable dependencies.','line_number':589,'multiline':False]
['text':' A $text aggregation field should return EXHAUSTIVE_FIELDS, since we don't necessarily','line_number':593,'multiline':False]
['text':' know what field it will be searching without examining indices.','line_number':594,'multiline':False]
['text':' namespace mongo','line_number':607,'multiline':False]
