['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':'
     * The default or "preferred" token version generated by this version of the server.
     ','line_number':51,'multiline':True]
['text':'*
     * Flag to indicate if the resume token is from an invalidate notification.
     ','line_number':56,'multiline':True]
['text':'*
     * Flag to indicate the type of resume token we are generating.
     ','line_number':64,'multiline':True]
['text':' Token refers to a point in time, not an event.','line_number':68,'multiline':False]
['text':' Token refers to an actual event in the stream.','line_number':69,'multiline':False]
['text':' This constructor should only be directly called by unit tests.','line_number':80,'multiline':False]
['text':' When a resume token references an operation in a transaction, the 'clusterTime' stores the','line_number':104,'multiline':False]
['text':' commit time of the transaction, and the 'txnOpIndex' field  stores the index of the operation','line_number':105,'multiline':False]
['text':' within its transaction. Operations that are not in a transaction always have a value of 0 for','line_number':106,'multiline':False]
['text':' this field.','line_number':107,'multiline':False]
['text':' Flag to indicate that this resume token is from an "invalidate" entry. This will not be set','line_number':109,'multiline':False]
['text':' on a token from a command that *would* invalidate a change stream, but rather the invalidate','line_number':110,'multiline':False]
['text':' notification itself.','line_number':111,'multiline':False]
['text':' The eventIdentifier can be either be a document key for CRUD operations, or a more','line_number':115,'multiline':False]
['text':' descriptive operation details for non-CRUD operations.','line_number':116,'multiline':False]
['text':' Index of the current fragment, for oversized events that have been split.','line_number':119,'multiline':False]
['text':' This private constructor should only ever be used internally or by the ResumeToken class.','line_number':123,'multiline':False]
['text':'*
 * A token passed in by the user to indicate where in the oplog we should start for $changeStream.
 * This token has the following format:
 *   {
 *     _data: String, A hex encoding of the binary generated by keystring encoding the clusterTime,
 *            version, txnOpIndex, UUID, then documentKey in that order.
 *     _typeBits: BinData - The keystring type bits used for deserialization.
 *   }
 *   The _data field data is encoded such that string comparisons provide the correct ordering of
 *   tokens. Unlike the BinData, this can be sorted correctly using a MongoDB sort. BinData
 *   unfortunately orders by the length of the data first, then by the contents.
 *
 *   As an optimization, the _typeBits field may be missing and should not affect token comparison.
 ','line_number':131,'multiline':True]
['text':'*
     * Parse a resume token from a BSON object; used as an interface to the IDL parser.
     ','line_number':150,'multiline':True]
['text':'*
     * Generate a high-water-mark token for 'clusterTime', with no UUID or documentKey.
     ','line_number':159,'multiline':True]
['text':'*
     * Returns true if the given token data represents a valid high-water-mark resume token; that
     * is, it does not refer to a specific operation, but instead specifies a clusterTime after
     * which the stream should resume.
     ','line_number':164,'multiline':True]
['text':'*
     * The default no-argument constructor is required by the IDL for types used as non-optional
     * fields.
     ','line_number':171,'multiline':True]
['text':'*
     * Parses 'resumeValue' into a ResumeToken using the hex-encoded string format.
     ','line_number':177,'multiline':True]
['text':'*
     * Convenience method to represent the ResumeToken as a Document.
     * Provides support for specifying SerializationOptions, as this method is used to service the
     * toBSON().
     ','line_number':182,'multiline':True]
['text':'*
     * Serialization to BSONObj. Provides support for specifying SerializationOptions,
     * as ResumeToken requires a "query_shape: custom" specification in its IDL uses.
     ','line_number':189,'multiline':True]
['text':' Helper function for makeHighWaterMarkToken and isHighWaterMarkToken.','line_number':211,'multiline':False]
['text':' This is the hex-encoded string encoding all the pieces of the resume token.','line_number':216,'multiline':False]
['text':' Since we are using a KeyString encoding, we might lose some information about what the','line_number':219,'multiline':False]
['text':' original types of the serialized values were. For example, the integer 2 and the double 2.0','line_number':220,'multiline':False]
['text':' will generate the same KeyString. We keep the type bits around so we can deserialize without','line_number':221,'multiline':False]
['text':' losing information.','line_number':222,'multiline':False]
['text':' namespace mongo','line_number':225,'multiline':False]
