['text':'*
 *    Copyright (C) 2022-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':' For certain types, such as dropDatabase, the collection name may be empty and should be','line_number':94,'multiline':False]
['text':' omitted. We never report the NamespaceString's tenantId in change stream events.','line_number':95,'multiline':False]
['text':' We set the resume token as the document's sort key in both the sharded and non-sharded cases,','line_number':104,'multiline':False]
['text':' since we will subsequently rely upon it to generate a correct postBatchResumeToken.','line_number':105,'multiline':False]
['text':' The lsid and txnNumber may be missing if this is a batched write.','line_number':116,'multiline':False]
['text':' We are careful here not to overwrite existing lsid or txnNumber fields with MISSING.','line_number':122,'multiline':False]
['text':' namespace','line_number':131,'multiline':False]
['text':' Determine whether the user requested a point-in-time pre-image, which will affect this','line_number':137,'multiline':False]
['text':' stage's output.','line_number':138,'multiline':False]
['text':' Determine whether the user requested a point-in-time post-image, which will affect this','line_number':142,'multiline':False]
['text':' stage's output.','line_number':143,'multiline':False]
['text':' Resolve the potentially-absent Value arguments to the expected resume token types.','line_number':155,'multiline':False]
['text':' If we have a resume token, we need to match the version with which it was generated until we','line_number':160,'multiline':False]
['text':' have surpassed all events against which it may have been compared in the original stream, at','line_number':161,'multiline':False]
['text':' which point we can begin generating tokens with our default version.','line_number':162,'multiline':False]
['text':' Construct and return the final resume token.','line_number':167,'multiline':False]
['text':' Extract the fields we need.','line_number':199,'multiline':False]
['text':' Non-replace updates have the _id in field "o2".','line_number':209,'multiline':False]
['text':' For oplog entries written on an older version of the server (before 5.3), the','line_number':223,'multiline':False]
['text':' documentKey may be missing. This is an unlikely scenario to encounter on a post 6.0','line_number':224,'multiline':False]
['text':' node. We just default to _id as the only document key field for this case.','line_number':225,'multiline':False]
['text':' The version of oplog entry format. 1 or missing value indicates the old format. 2','line_number':237,'multiline':False]
['text':' indicates the delta oplog entry.','line_number':238,'multiline':False]
['text':' Parsing the delta oplog entry.','line_number':242,'multiline':False]
['text':' This is not a replacement op, and we did not see a valid update version number.','line_number':267,'multiline':False]
['text':' Add update modification for post-image computation.','line_number':276,'multiline':False]
['text':' The "o.drop" field will contain the actual collection name.','line_number':289,'multiline':False]
['text':' The "o.renameCollection" field contains the namespace of the original collection.','line_number':294,'multiline':False]
['text':' The "to" field contains the target namespace for the rename.','line_number':297,'multiline':False]
['text':' The 'to' field predates the 'operationDescription' field which was added in 5.3.','line_number':302,'multiline':False]
['text':' We keep the top-level 'to' field for backwards-compatibility.','line_number':303,'multiline':False]
['text':' Include full details of the rename in 'operationDescription'.','line_number':306,'multiline':False]
['text':' Extract the database name from the namespace field and leave the collection name','line_number':315,'multiline':False]
['text':' empty.','line_number':316,'multiline':False]
['text':' Wrap the index spec in an "indexes" array for consistency with commitIndexBuild.','line_number':325,'multiline':False]
['text':' Wrap the index spec in an "indexes" array for consistency with createIndexes','line_number':336,'multiline':False]
['text':' and commitIndexBuild.','line_number':337,'multiline':False]
['text':' We should never see an unknown command.','line_number':350,'multiline':False]
['text':' Make sure the result doesn't have a document key.','line_number':354,'multiline':False]
['text':' Check whether this is a shardCollection oplog entry.','line_number':361,'multiline':False]
['text':' Check if this is a migration of the last chunk off a shard.','line_number':368,'multiline':False]
['text':' Check whether this is a refineCollectionShardKey oplog entry.','line_number':376,'multiline':False]
['text':' Check whether this is a reshardCollection oplog entry.','line_number':384,'multiline':False]
['text':' We should never see an unknown noop entry.','line_number':423,'multiline':False]
['text':' UUID should always be present except for a known set of types.','line_number':431,'multiline':False]
['text':' Extract the 'txnOpIndex' and 'applyOpsIndex' fields. These will be missing unless we are','line_number':436,'multiline':False]
['text':' unwinding a transaction.','line_number':437,'multiline':False]
['text':' Add some additional fields only relevant to transactions.','line_number':442,'multiline':False]
['text':' Generate the resume token. Note that only 'ts' is always guaranteed to be present.','line_number':447,'multiline':False]
['text':' Note: If the UUID is a missing value (which can be true for events like 'dropDatabase'),','line_number':456,'multiline':False]
['text':' 'addField' will not add anything to the document.','line_number':457,'multiline':False]
['text':' Add the post-image, pre-image id, namespace, documentKey and other fields as appropriate.','line_number':465,'multiline':False]
['text':' Determine whether the preImageId should be included, for eligible operations. Note that we','line_number':468,'multiline':False]
['text':' will include preImageId even if the user requested a post-image but no pre-image, because the','line_number':469,'multiline':False]
['text':' pre-image is required to compute the post-image.','line_number':470,'multiline':False]
['text':' Set 'kPreImageIdField' to the 'ChangeStreamPreImageId'. The DSCSAddPreImage stage','line_number':477,'multiline':False]
['text':' will use the id in order to fetch the pre-image from the pre-images collection.','line_number':478,'multiline':False]
['text':' If needed, add the 'ns' field to the change stream document, based on the final value of nss.','line_number':486,'multiline':False]
['text':' The event may have a documentKey OR an operationDescription, but not both. We already','line_number':491,'multiline':False]
['text':' validated this while creating the resume token.','line_number':492,'multiline':False]
['text':' Note that the update description field might be the 'missing' value, in which case it will','line_number':498,'multiline':False]
['text':' not be serialized.','line_number':499,'multiline':False]
['text':' For a 'modify' event we add the state before modification if appropriate.','line_number':505,'multiline':False]
['text':' To be able to generate a 'modify' event, we need the collMod of a view definition to','line_number':544,'multiline':False]
['text':' always log the update as replacement.','line_number':545,'multiline':False]
['text':' We shouldn't see an op other than insert, update or delete.','line_number':557,'multiline':False]
['text':' The 'o._id' is the full namespace string of the view.','line_number':576,'multiline':False]
['text':' The nss from the entry is only used here determine which type of transformation to use. This','line_number':596,'multiline':False]
['text':' is not dependent on the tenantId, so it is safe to ignore the tenantId in the oplog entry.','line_number':597,'multiline':False]
['text':' It is useful to avoid extracting the tenantId because we must make this determination for','line_number':598,'multiline':False]
['text':' every change stream event, and the check should therefore be as optimized as possible.','line_number':599,'multiline':False]
['text':' namespace mongo','line_number':609,'multiline':False]
