['text':'*
 *    Copyright (C) 2019-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':' Builds a string representation of stages leading up to the current stage. This is done by','line_number':194,'multiline':False]
['text':' concatenating a character representing the current stage to the string from the previous','line_number':195,'multiline':False]
['text':' stage. In addition, lookup and facet append a string containing each of the off-the-end','line_number':196,'multiline':False]
['text':' strings from their sub-pipelines.','line_number':197,'multiline':False]
['text':' The stack holds one element for each branch of the tree.','line_number':337,'multiline':False]
['text':' Verifies that we walk each branch from leaf upwards towards the root when invoking the zip()','line_number':339,'multiline':False]
['text':' function, since we will throw if the top of the stack (which is the branch being actively','line_number':340,'multiline':False]
['text':' walked) has a typeid which does not match the typeid of the previous stage.','line_number':341,'multiline':False]
['text':' namespace','line_number':434,'multiline':False]
['text':' namespace mongo','line_number':435,'multiline':False]
