['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':'*
 * The $bucketAuto stage takes a user-specified number of buckets and automatically determines
 * boundaries such that the values are approximately equally distributed between those buckets.
 ','line_number':66,'multiline':True]
['text':'*
     * The $bucketAuto stage must be run on the merging shard.
     ','line_number':93,'multiline':True]
['text':' {shardsStage, mergingStage, sortPattern}','line_number':97,'multiline':False]
['text':'*
     * Convenience method to create a $bucketAuto stage.
     *
     * If 'accumulationStatements' is the empty vector, it will be filled in with the statement
     * 'count: {$sum: 1}'.
     ','line_number':103,'multiline':True]
['text':'*
     * Parses a $bucketAuto stage from the user-supplied BSON.
     ','line_number':117,'multiline':True]
['text':'*
     * Returns the groupBy expression. The mutable getter can be used to alter
     * the expression, but should not be used after execution has begun.
     ','line_number':123,'multiline':True]
['text':'*
     * Returns the AccumulationStatements. The mutable getter can be used to alter
     * the expression, but should not be used after execution has begun.
     ','line_number':129,'multiline':True]
['text':' struct for holding information about a bucket.','line_number':148,'multiline':False]
['text':'*
     * Consumes all of the documents from the source in the pipeline and sorts them by their
     * 'groupBy' value. This method might not be able to finish populating the sorter in a single
     * call if 'pSource' returns a DocumentSource::GetNextResult::kPauseExecution, so this returns
     * the last GetNextResult encountered, which may be either kEOF or kPauseExecution.
     ','line_number':166,'multiline':True]
['text':'*
     * Computes the 'groupBy' expression value for 'doc'.
     ','line_number':176,'multiline':True]
['text':'*
     * Returns the next bucket if exists. boost::none if none exist.
     ','line_number':181,'multiline':True]
['text':'*
     * Adds the document in 'entry' to 'bucket' by updating the accumulators in 'bucket'.
     ','line_number':188,'multiline':True]
['text':'*
     * Makes a document using the information from bucket. This is what is returned when getNext()
     * is called.
     ','line_number':193,'multiline':True]
['text':' namespace mongo','line_number':213,'multiline':False]
