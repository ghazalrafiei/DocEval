['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':' IWYU pragma: keep','line_number':83,'multiline':False]
['text':' For $graphLookup and $lookup, we have to populate the resolvedNamespaces so that the','line_number':161,'multiline':False]
['text':' operations will be able to have a resolved view definition.','line_number':162,'multiline':False]
['text':' If any child of the $or is dependent on the 'asField', then the $match cannot be moved above','line_number':1476,'multiline':False]
['text':' the $lookup, and if any child of the $or is independent of the 'asField', then the $match','line_number':1477,'multiline':False]
['text':' cannot be absorbed by the $lookup.','line_number':1478,'multiline':False]
['text':' The 'a.b' path is a modified one by $unwind and $elemMatch is dependent on it and so we can't','line_number':1766,'multiline':False]
['text':' swap $elemMatch in this case.','line_number':1767,'multiline':False]
['text':' The 'a.b' path is a modified one by $project and $elemMatch is dependent on it and so we can't','line_number':1780,'multiline':False]
['text':' swap $elemMatch in this case.','line_number':1781,'multiline':False]
['text':' The 'a.b' path is a modified one by $project and $elemMatch is dependent on it and so we can't','line_number':1795,'multiline':False]
['text':' swap $elemMatch in this case.','line_number':1796,'multiline':False]
['text':' The 'a.b' path is a modified one by $project and $elemMatch is dependent on it and so we can't','line_number':1810,'multiline':False]
['text':' swap $elemMatch in this case.','line_number':1811,'multiline':False]
['text':' The $project simply renames 'a.b' & 'a.c' to 'd.e' & 'd.f' and the $match with $elemMatch on','line_number':2426,'multiline':False]
['text':' the leaf value can be swapped with $project.','line_number':2427,'multiline':False]
['text':' TODO SERVER-74298 The $match can be swapped with $project after renaming.','line_number':2459,'multiline':False]
['text':' The $project simply renames 'a.b' & 'a.c' to 'd.e' & 'd.f' but the dependency tracker reports','line_number':2462,'multiline':False]
['text':' the 'd' for $elemMatch as a modified dependency and so $match cannot be swapped with','line_number':2463,'multiline':False]
['text':' $project.','line_number':2464,'multiline':False]
['text':' TODO SERVER-74298 The $match can be swapped with $project after renaming.','line_number':2507,'multiline':False]
['text':' The $project simply renames 'a.b' & 'a.c' to 'd.e' & 'd.f' but the dependency tracker reports','line_number':2509,'multiline':False]
['text':' the 'd' for $eq as a modified dependency and so $match cannot be swapped with $project.','line_number':2510,'multiline':False]
['text':' Descriptive test. The following internal match expression *could* participate in pipeline','line_number':2703,'multiline':False]
['text':' optimizations, but it currently does not.','line_number':2704,'multiline':False]
['text':' Descriptive test. The following internal match expression *could* participate in pipeline','line_number':2743,'multiline':False]
['text':' optimizations, but it currently does not.','line_number':2744,'multiline':False]
['text':' Descriptive test. The following internal match expression *could* participate in pipeline','line_number':2762,'multiline':False]
['text':' optimizations, but it currently does not.','line_number':2763,'multiline':False]
['text':' Descriptive test. The following internal match expression *could* participate in pipeline','line_number':2781,'multiline':False]
['text':' optimizations, but it currently does not.','line_number':2782,'multiline':False]
['text':' Descriptive test. The following internal match expression *could* participate in pipeline','line_number':2863,'multiline':False]
['text':' optimizations, but it currently does not.','line_number':2864,'multiline':False]
['text':' Descriptive test. The following internal match expression *could* participate in pipeline','line_number':2900,'multiline':False]
['text':' optimizations, but it currently does not.','line_number':2901,'multiline':False]
['text':' Descriptive test. The following internal match expression can participate in pipeline','line_number':2919,'multiline':False]
['text':' optimizations.','line_number':2920,'multiline':False]
['text':' We enable the 'showExpandedEvents' flag to avoid injecting an additional $match stage which','line_number':3112,'multiline':False]
['text':' filters out newly added events.','line_number':3113,'multiline':False]
['text':' Make sure the change lookup is at the end.','line_number':3120,'multiline':False]
['text':' Make sure the $match stage has swapped before the change look up.','line_number':3129,'multiline':False]
['text':' We enable the 'showExpandedEvents' flag to avoid injecting an additional $match stage which','line_number':3143,'multiline':False]
['text':' filters out newly added events.','line_number':3144,'multiline':False]
['text':' Make sure the change lookup is at the end.','line_number':3151,'multiline':False]
['text':' Make sure the $match stage stays at the end.','line_number':3159,'multiline':False]
['text':' We enable the 'showExpandedEvents' flag to avoid injecting an additional $match stage which','line_number':3172,'multiline':False]
['text':' filters out newly added events.','line_number':3173,'multiline':False]
['text':' Make sure the pre-image lookup is at the end.','line_number':3180,'multiline':False]
['text':' Make sure the $match stage has swapped before the change look up.','line_number':3189,'multiline':False]
['text':' We enable the 'showExpandedEvents' flag to avoid injecting an additional $match stage which','line_number':3203,'multiline':False]
['text':' filters out newly added events.','line_number':3204,'multiline':False]
['text':' Make sure the pre-image lookup is at the end.','line_number':3211,'multiline':False]
['text':' Make sure the $match stage stays at the end.','line_number':3220,'multiline':False]
['text':' Test that the $match can get pulled forward through other stages.','line_number':3381,'multiline':False]
['text':' Test that the $match can get pulled forward from after the $unionWith to inside, then to the','line_number':3408,'multiline':False]
['text':' beginning of a $unionWith subpipeline.','line_number':3409,'multiline':False]
['text':' Test an inclusion projection.','line_number':3522,'multiline':False]
['text':' Test a $set.','line_number':3534,'multiline':False]
['text':' Test that if someone uses $unionWith to query one logical collection from four physical','line_number':3548,'multiline':False]
['text':' collections then the query and projection can get pushed down to next to each collection','line_number':3549,'multiline':False]
['text':' access.','line_number':3550,'multiline':False]
['text':' Merge the pipelines','line_number':3618,'multiline':False]
['text':' namespace Local','line_number':3699,'multiline':False]
['text':'*
 * Stub process interface used to allow accessing the CatalogCache for those tests which involve
 * selecting a specific shard merger.
 ','line_number':3703,'multiline':True]
['text':' Allows tests to override the default resolvedNamespaces.','line_number':3726,'multiline':False]
['text':' For $graphLookup and $lookup, we have to populate the resolvedNamespaces so that the','line_number':3753,'multiline':False]
['text':' operations will be able to have a resolved view definition.','line_number':3754,'multiline':False]
['text':' Test that we can both split the pipeline and reassemble it into its original form.','line_number':3758,'multiline':False]
['text':'inputPipeJson','line_number':3785,'multiline':True]
['text':'shardPipeJson','line_number':3785,'multiline':True]
['text':'mergePipeJson','line_number':3785,'multiline':True]
['text':' Since each shard has an identical copy of config.cache.chunks.* namespaces, $lookup from','line_number':3789,'multiline':False]
['text':' config.cache.chunks.* should run on each shard in parallel.','line_number':3790,'multiline':False]
['text':'shardPipeJson','line_number':3813,'multiline':True]
['text':'shardPipeJson','line_number':3822,'multiline':True]
['text':'inputPipeJson','line_number':3854,'multiline':True]
['text':'shardPipeJson','line_number':3855,'multiline':True]
['text':'mergePipeJson','line_number':3856,'multiline':True]
['text':'inputPipeJson','line_number':3860,'multiline':True]
['text':'shardPipeJson','line_number':3861,'multiline':True]
['text':'mergePipeJson','line_number':3862,'multiline':True]
['text':'inputPipeJson','line_number':3866,'multiline':True]
['text':'shardPipeJson','line_number':3867,'multiline':True]
['text':'mergePipeJson','line_number':3868,'multiline':True]
['text':'inputPipeJson','line_number':3872,'multiline':True]
['text':'shardPipeJson','line_number':3873,'multiline':True]
['text':'mergePipeJson','line_number':3874,'multiline':True]
['text':' namespace moveFinalUnwindFromShardsToMerger','line_number':3877,'multiline':False]
['text':'*
 * The $skip stage splits the pipeline into a shard pipeline and merge pipeline. Because the $limit
 * stage in the merge pipeline creates an upper bound on how many documents are necessary from any
 * of the shards, we can add a $limit to the shard pipeline to prevent it from sending more
 * documents than necessary. See the comment for propagateDocLimitToShard in
 * sharded_agg_helpers.cpp and the explanation in SERVER-36881.
 ','line_number':3881,'multiline':True]
['text':'inputPipeJson','line_number':3890,'multiline':True]
['text':'shardPipeJson','line_number':3891,'multiline':True]
['text':'mergePipeJson','line_number':3892,'multiline':True]
['text':'*
 * When computing an upper bound on how many documents we need from each shard, make sure to count
 * all $skip stages in any pipeline that has more than one.
 ','line_number':3895,'multiline':True]
['text':'inputPipeJson','line_number':3900,'multiline':True]
['text':'shardPipeJson','line_number':3901,'multiline':True]
['text':'mergePipeJson','line_number':3902,'multiline':True]
['text':'*
 * A $limit stage splits the pipeline with the $limit in place on both the shard and merge
 * pipelines. Make sure that the propagateDocLimitToShards() optimization does not add another
 * $limit to the shard pipeline.
 ','line_number':3905,'multiline':True]
['text':'inputPipeJson','line_number':3911,'multiline':True]
['text':'shardPipeJson','line_number':3912,'multiline':True]
['text':'mergePipeJson','line_number':3913,'multiline':True]
['text':'*
 * The addition of an $addFields stage between the $skip and $limit stages does not prevent us from
 * propagating the limit to the shards.
 ','line_number':3916,'multiline':True]
['text':'inputPipeJson','line_number':3921,'multiline':True]
['text':'shardPipeJson','line_number':3922,'multiline':True]
['text':'mergePipeJson','line_number':3923,'multiline':True]
['text':'*
 * The addition of a $group stage between the $skip and $limit stages _does_ prevent us from
 * propagating the limit to the shards. The merger will need to see all the documents from each
 * shard before it can apply the $limit.
 ','line_number':3926,'multiline':True]
['text':'inputPipeJson','line_number':3932,'multiline':True]
['text':'shardPipeJson','line_number':3933,'multiline':True]
['text':'mergePipeJson','line_number':3934,'multiline':True]
['text':'*
 * The addition of a $match stage between the $skip and $limit stages also prevents us from
 * propagating the limit to the shards. We don't know in advance how many documents will pass the
 * filter in the second $match, so we also don't know how many documents we'll need from the shards.
 ','line_number':3937,'multiline':True]
['text':'inputPipeJson','line_number':3944,'multiline':True]
['text':'shardPipeJson','line_number':3945,'multiline':True]
['text':'mergePipeJson','line_number':3946,'multiline':True]
['text':' namespace propagateDocLimitToShards','line_number':3948,'multiline':False]
['text':' These tests use $limit to split the pipelines between shards and merger as it is','line_number':3951,'multiline':False]
['text':' always a split point and neutral in terms of needed fields.','line_number':3952,'multiline':False]
['text':'inputPipeJson','line_number':3954,'multiline':True]
['text':'shardPipeJson','line_number':3955,'multiline':True]
['text':'mergePipeJson','line_number':3956,'multiline':True]
['text':'inputPipeJson','line_number':3960,'multiline':True]
['text':'shardPipeJson','line_number':3961,'multiline':True]
['text':'mergePipeJson','line_number':3962,'multiline':True]
['text':'inputPipeJson','line_number':3966,'multiline':True]
['text':'shardPipeJson','line_number':3967,'multiline':True]
['text':'mergePipeJson','line_number':3968,'multiline':True]
['text':'shardPipeJson','line_number':3976,'multiline':True]
['text':'mergePipeJson','line_number':3977,'multiline':True]
['text':' No new project should be added. This test reflects current behavior where the','line_number':3980,'multiline':False]
['text':' 'a' field is still sent because it is explicitly asked for, even though it','line_number':3981,'multiline':False]
['text':' isn't actually needed. If this changes in the future, this test will need to','line_number':3982,'multiline':False]
['text':' change.','line_number':3983,'multiline':False]
['text':'shardPipeJson','line_number':3989,'multiline':True]
['text':'mergePipeJson','line_number':3990,'multiline':True]
['text':'inputPipeJson','line_number':4018,'multiline':True]
['text':'shardPipeJson','line_number':4019,'multiline':True]
['text':'mergePipeJson','line_number':4020,'multiline':True]
['text':'inputPipeJson','line_number':4026,'multiline':True]
['text':'shardPipeJson','line_number':4027,'multiline':True]
['text':'mergePipeJson','line_number':4028,'multiline':True]
['text':'inputPipeJson','line_number':4034,'multiline':True]
['text':'shardPipeJson','line_number':4035,'multiline':True]
['text':'mergePipeJson','line_number':4036,'multiline':True]
['text':'inputPipeJson','line_number':4042,'multiline':True]
['text':'shardPipeJson','line_number':4044,'multiline':True]
['text':'mergePipeJson','line_number':4045,'multiline':True]
['text':' namespace limitFieldsSentFromShardsToMerger','line_number':4048,'multiline':False]
['text':'inputPipeJson','line_number':4055,'multiline':True]
['text':'shardPipeJson','line_number':4056,'multiline':True]
['text':'mergePipeJson','line_number':4058,'multiline':True]
['text':'inputPipeJson','line_number':4064,'multiline':True]
['text':'shardPipeJson','line_number':4065,'multiline':True]
['text':'mergePipeJson','line_number':4067,'multiline':True]
['text':'inputPipeJson','line_number':4073,'multiline':True]
['text':'shardPipeJson','line_number':4074,'multiline':True]
['text':'mergePipeJson','line_number':4076,'multiline':True]
['text':'inputPipeJson','line_number':4082,'multiline':True]
['text':'shardPipeJson','line_number':4083,'multiline':True]
['text':'mergePipeJson','line_number':4085,'multiline':True]
['text':' namespace coalesceLookUpAndUnwind','line_number':4088,'multiline':False]
['text':' defaultCollator ','line_number':4125,'multiline':True]
['text':' unique ','line_number':4126,'multiline':True]
['text':' timeseriesFields ','line_number':4129,'multiline':True]
['text':' reshardingFields ','line_number':4130,'multiline':True]
['text':'inputPipeJson','line_number':4150,'multiline':True]
['text':'needsPrimaryShardMerger','line_number':4153,'multiline':True]
['text':'inputPipeJson','line_number':4159,'multiline':True]
['text':'shardPipeJson','line_number':4160,'multiline':True]
['text':'mergePipeJson','line_number':4161,'multiline':True]
['text':'needsPrimaryShardMerger','line_number':4162,'multiline':True]
['text':'inputPipeJson','line_number':4175,'multiline':True]
['text':'shardPipeJson','line_number':4176,'multiline':True]
['text':'mergePipeJson','line_number':4178,'multiline':True]
['text':'needsPrimaryShardMerger','line_number':4179,'multiline':True]
['text':'needsSpecificShardMerger','line_number':4180,'multiline':True]
['text':'unsplittable','line_number':4184,'multiline':True]
['text':'unsplittable','line_number':4188,'multiline':True]
['text':'inputPipeJson','line_number':4192,'multiline':True]
['text':'shardPipeJson','line_number':4193,'multiline':True]
['text':'mergePipeJson','line_number':4194,'multiline':True]
['text':'needsPrimaryShardMerger','line_number':4195,'multiline':True]
['text':' unsplittable ','line_number':4208,'multiline':True]
['text':' defaultCollator ','line_number':4209,'multiline':True]
['text':' unique ','line_number':4210,'multiline':True]
['text':' timeseriesFields ','line_number':4213,'multiline':True]
['text':' reshardingFields ','line_number':4214,'multiline':True]
['text':' allowMigrations ','line_number':4215,'multiline':True]
['text':' inputPipeJson ','line_number':4226,'multiline':True]
['text':' shardPipeJson ','line_number':4228,'multiline':True]
['text':' mergePipeJson ','line_number':4229,'multiline':True]
['text':' needsPrimaryShardMerger ','line_number':4231,'multiline':True]
['text':' needsSpecificShardMerger ','line_number':4232,'multiline':True]
['text':' unsplittable ','line_number':4245,'multiline':True]
['text':' defaultCollator ','line_number':4246,'multiline':True]
['text':' unique ','line_number':4247,'multiline':True]
['text':' timeseriesFields ','line_number':4250,'multiline':True]
['text':' reshardingFields ','line_number':4251,'multiline':True]
['text':' allowMigrations ','line_number':4252,'multiline':True]
['text':' inputPipeJson ','line_number':4263,'multiline':True]
['text':' shardPipeJson ','line_number':4265,'multiline':True]
['text':' mergePipeJson ','line_number':4266,'multiline':True]
['text':' needsPrimaryShardMerger ','line_number':4268,'multiline':True]
['text':' needsSpecificShardMerger ','line_number':4269,'multiline':True]
['text':' namespace needsPrimaryShardMerger','line_number':4272,'multiline':False]
['text':' Like a DocumentSourceMock, but must run on mongoS and can be used anywhere in the pipeline.','line_number':4276,'multiline':False]
['text':' Overrides DocumentSourceMock's required position.','line_number':4283,'multiline':False]
['text':' The entire pipeline must run on mongoS, but $sort cannot do so when 'allowDiskUse' is true.','line_number':4330,'multiline':False]
['text':' We don't need to run the entire pipeline on mongoS because we can split at','line_number':4347,'multiline':False]
['text':' $_internalSplitPipeline.','line_number':4348,'multiline':False]
['text':' Calling 'requiredToRunOnMongos' on the shard pipeline will hit an invariant.','line_number':4357,'multiline':False]
['text':'*
 * For the purposes of this test, assume every collection is unsharded. Stages may ask this during
 * setup. For example, to compute its constraints, the $merge stage needs to know if the output
 * collection is sharded.
 ','line_number':4361,'multiline':True]
['text':' We don't need to run the entire pipeline on mongoS because we can split at','line_number':4388,'multiline':False]
['text':' $_internalSplitPipeline.','line_number':4389,'multiline':False]
['text':' The merge pipeline must run on mongoS, but $out needs to run on  the primary shard.','line_number':4394,'multiline':False]
['text':' The 'runOnMongoS' stage comes before any splitpoint, so this entire pipeline must run on','line_number':4411,'multiline':False]
['text':' mongoS. However, the pipeline *cannot* run on mongoS and *must* split at','line_number':4412,'multiline':False]
['text':' $_internalSplitPipeline due to the latter's 'anyShard' requirement. The mongoS stage would','line_number':4413,'multiline':False]
['text':' end up on the shard side of this split, and so it asserts.','line_number':4414,'multiline':False]
['text':' The 'runOnMongoS' stage is before the splitpoint, so this entire pipeline must run on mongoS.','line_number':4430,'multiline':False]
['text':' In this case, the splitpoint is itself eligible to run on mongoS, and so we are able to','line_number':4431,'multiline':False]
['text':' return true.','line_number':4432,'multiline':False]
['text':' namespace mustRunOnMongoS','line_number':4436,'multiline':False]
['text':' Like a DocumentSourceMock, but has a deferrable merge sort.','line_number':4440,'multiline':False]
['text':' This is just to test splitting logic, doGetNext should not be called.','line_number':4483,'multiline':False]
['text':' Verify that we've split the pipeline at the SplitPipeline stage, not on the deferred sort.','line_number':4521,'multiline':False]
['text':' Verify the sort is correct.','line_number':4525,'multiline':False]
['text':' Verify that we've split the pipeline at the non-deferred sort.','line_number':4545,'multiline':False]
['text':' Verify the sort is correct.','line_number':4549,'multiline':False]
['text':' Verify that we've split the pipeline at the stage that can't be swapped.','line_number':4568,'multiline':False]
['text':' Verify the sort is correct.','line_number':4572,'multiline':False]
['text':' namespace DeferredSort','line_number':4576,'multiline':False]
['text':' namespace Sharded','line_number':4577,'multiline':False]
['text':' namespace Optimizations','line_number':4578,'multiline':False]
['text':' Contains test cases for validation done on pipeline creation.','line_number':4606,'multiline':False]
['text':' Pipeline::create({collectionlessSource}, ctx),','line_number':4675,'multiline':False]
['text':' Make a pipeline with a legal $match, and then an illegal mock stage, and verify that pipeline','line_number':4744,'multiline':False]
['text':' creation fails with the expected error code.','line_number':4745,'multiline':False]
['text':' namespace pipeline_validate','line_number':4764,'multiline':False]
['text':'','line_number':4782,'multiline':False]
['text':' Some dummy DocumentSources with different dependencies.','line_number':4783,'multiline':False]
['text':'','line_number':4784,'multiline':False]
['text':' Like a DocumentSourceMock, but can be used anywhere in the pipeline.','line_number':4786,'multiline':False]
['text':' Overrides DocumentSourceMock's required position.','line_number':4793,'multiline':False]
['text':' The inputs did not have a text score available, so we should not require a text score.','line_number':4886,'multiline':False]
['text':' Now in the other order.','line_number':4889,'multiline':False]
['text':' 'needsOnlyB' claims to know all its field dependencies, so we shouldn't add any from','line_number':4928,'multiline':False]
['text':' 'needsASeeNext'.','line_number':4929,'multiline':False]
['text':' When needsMerge is true, the consumer might implicitly use textScore, if it's available.','line_number':4954,'multiline':False]
['text':' When needsMerge is false, if no stage explicitly uses textScore then we know it isn't needed.','line_number':4965,'multiline':False]
['text':' 'stripsTextScore' claims that no further stage will need metadata information, so we','line_number':4986,'multiline':False]
['text':' shouldn't have the text score as a dependency.','line_number':4987,'multiline':False]
['text':' b, c, and e are generated within the pipeline so we should not request any of them. a and d','line_number':5039,'multiline':False]
['text':' are non-generated dependencies.','line_number':5040,'multiline':False]
['text':' 'a', 'b', and 'c' are generated within the pipeline so we should not request any of them.','line_number':5057,'multiline':False]
['text':' 'aa' and 'd.b' are non-generated dependencies.','line_number':5058,'multiline':False]
['text':' 'a' is both consumed by and modified within the same stage in the pipeline, so we need to','line_number':5075,'multiline':False]
['text':' request it.','line_number':5076,'multiline':False]
['text':' namespace Dependencies','line_number':5080,'multiline':False]
['text':' Tracking renames backwards.','line_number':5088,'multiline':False]
['text':' Tracking renames forwards.','line_number':5099,'multiline':False]
['text':'*
     * Returns a description which communicate that this stage modifies nothing.
     ','line_number':5120,'multiline':True]
['text':' Tracking renames backwards.','line_number':5131,'multiline':False]
['text':' Tracking renames forwards.','line_number':5144,'multiline':False]
['text':' Tracking renames backwards.','line_number':5157,'multiline':False]
['text':' Tracking renames forwards.','line_number':5172,'multiline':False]
['text':'*
     * Returns a description which communicate that this stage modifies nothing.
     ','line_number':5197,'multiline':True]
['text':' Backwards case.','line_number':5212,'multiline':False]
['text':' Forwards case.','line_number':5219,'multiline':False]
['text':' Tracking backwards.','line_number':5246,'multiline':False]
['text':' Tracking forwards.','line_number':5255,'multiline':False]
['text':' Tracking backwards.','line_number':5264,'multiline':False]
['text':' Tracking forwards.','line_number':5274,'multiline':False]
['text':' This is strange; the mock stage reports to essentially duplicate the "a" field into "b".','line_number':5285,'multiline':False]
['text':' Because of this, both "b" and "a" should map to "a".','line_number':5286,'multiline':False]
['text':' Same strangeness as above, but in the forwards direction.','line_number':5296,'multiline':False]
['text':' Tracking backwards.','line_number':5312,'multiline':False]
['text':' Tracking forwards.','line_number':5321,'multiline':False]
['text':' Tracking backwards.','line_number':5331,'multiline':False]
['text':' Tracking forwards.','line_number':5341,'multiline':False]
['text':' Tracking backwards.','line_number':5368,'multiline':False]
['text':' Tracking forwards.','line_number':5381,'multiline':False]
['text':' Tracking backwards.','line_number':5411,'multiline':False]
['text':' Tracking forwards.','line_number':5424,'multiline':False]
['text':' namespace','line_number':5606,'multiline':False]
['text':' namespace mongo','line_number':5607,'multiline':False]
