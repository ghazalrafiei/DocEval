['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':'*
 * Queries separate collection for equality matches with documents in the pipeline collection.
 * Adds matching documents to a new array field in the input document.
 ','line_number':82,'multiline':True]
['text':'*
         * Lookup from a sharded collection may not be allowed.
         ','line_number':117,'multiline':True]
['text':' We do not recurse on, nor insert '_foreignNss' in the event that this $lookup has','line_number':146,'multiline':False]
['text':' a subpipeline as such $lookup stages are not eligible for pushdown.','line_number':147,'multiline':False]
['text':'*
     * Copy constructor used for clone().
     ','line_number':161,'multiline':True]
['text':'*
     * Returns the 'as' path, and possibly fields modified by an absorbed $unwind.
     ','line_number':172,'multiline':True]
['text':'*
     * Reports the StageConstraints of this $lookup instance. A $lookup constructed with pipeline
     * syntax will inherit certain constraints from the stages in its pipeline.
     ','line_number':177,'multiline':True]
['text':'*
     * Builds the BSONObj used to query the foreign collection and wraps it in a $match.
     ','line_number':215,'multiline':True]
['text':'*
     * Helper to absorb an $unwind stage. Only used for testing this special behavior.
     ','line_number':223,'multiline':True]
['text':'*
     * "as" field must be present in all types of $lookup queries.
     ','line_number':247,'multiline':True]
['text':'*
     * Returns a non-executable pipeline which can be useful for introspection. In this pipeline,
     * all view definitions are resolved. This pipeline is present in both the sub-pipeline version
     * of $lookup and the simpler 'localField/foreignField' version, but because it is not tied to
     * any document to look up it is missing variable definitions for the former type and the $match
     * stage which will be added to enforce the join criteria for the latter.
     ','line_number':258,'multiline':True]
['text':'*
     * Attempts to combine with a subsequent $unwind stage, setting the internal '_unwindSrc'
     * field.
     ','line_number':315,'multiline':True]
['text':'*
     * Target constructor. Handles common-field initialization for the syntax-specific delegating
     * constructors.
     ','line_number':323,'multiline':True]
['text':'*
     * Constructor used for a $lookup stage specified using the {from: ..., localField: ...,
     * foreignField: ..., as: ...} syntax.
     ','line_number':331,'multiline':True]
['text':'*
     * Constructor used for a $lookup stage specified using the pipeline syntax {from: ...,
     * pipeline: [...], as: ...} or using both the localField/foreignField syntax and pipeline
     * syntax: {from: ..., localField: ..., foreignField: ..., pipeline: [...], as: ...}
     ','line_number':342,'multiline':True]
['text':'*
     * Should not be called; use serializeToArray instead.
     ','line_number':355,'multiline':True]
['text':'*
     * Resolves let defined variables against 'localDoc' and stores the results in 'variables'.
     ','line_number':365,'multiline':True]
['text':'*
     * Builds a parsed pipeline for introspection (e.g. constraints, dependencies). Any sub-$lookup
     * pipelines will be built recursively.
     ','line_number':370,'multiline':True]
['text':'*
     * Builds the $lookup pipeline using the resolved view definition for a sharded foreign view and
     * updates the '_resolvedPipeline', as well as '_fieldMatchPipelineIdx' in the case of a
     * 'foreign' join.
     ','line_number':376,'multiline':True]
['text':'*
     * Builds the $lookup pipeline and resolves any variables using the passed 'inputDoc', adding a
     * cursor and/or cache source as appropriate.
     ','line_number':385,'multiline':True]
['text':'*
     * Reinitialize the cache with a new max size. May only be called if this DSLookup was created
     * with pipeline syntax only, the cache has not been frozen or abandoned, and no data has been
     * added to it.
     ','line_number':391,'multiline':True]
['text':'*
     * Method to add a DocumentSourceSequentialDocumentCache stage and optimize the pipeline to
     * move the cache to its final position.
     ','line_number':402,'multiline':True]
['text':'*
     * Given a mutable document, appends execution stats such as 'totalDocsExamined',
     * 'totalKeysExamined', 'collectionScans', 'indexesUsed', etc. to it.
     ','line_number':408,'multiline':True]
['text':'*
     * Returns true if we are not in a transaction.
     ','line_number':414,'multiline':True]
['text':'*
     * Checks conditions necessary for SBE compatibility and sets '_sbeCompatibility' flag. Note:
     * when optimizing the pipeline the flag might be modified.
     ','line_number':419,'multiline':True]
['text':' For use when $lookup is specified with localField/foreignField syntax.','line_number':432,'multiline':False]
['text':' Indicates the index in '_resolvedPipeline' where the local/foreignField $match resides.','line_number':435,'multiline':False]
['text':' Holds 'let' defined variables defined both in this stage and in parent pipelines. These are','line_number':438,'multiline':False]
['text':' copied to the '_fromExpCtx' ExpressionContext's 'variables' and 'variablesParseState' for use','line_number':439,'multiline':False]
['text':' in foreign pipeline execution.','line_number':440,'multiline':False]
['text':' Caches documents returned by the non-correlated prefix of the $lookup pipeline during the','line_number':444,'multiline':False]
['text':' first iteration, up to a specified size limit in bytes. If this limit is not exceeded by the','line_number':445,'multiline':False]
['text':' time we hit EOF, subsequent iterations of the pipeline will draw from the cache rather than','line_number':446,'multiline':False]
['text':' from a cursor source.','line_number':447,'multiline':False]
['text':' The ExpressionContext used when performing aggregation pipelines against the '_resolvedNs'','line_number':450,'multiline':False]
['text':' namespace.','line_number':451,'multiline':False]
['text':' When a `_internalCollation` has been specified on a $lookup stage, we will set that collation','line_number':454,'multiline':False]
['text':' on `_fromExpCtx`. An explicit simple collation however is represented in the same way as the','line_number':455,'multiline':False]
['text':' default binary collation. We need to differentiate between the two to avoid serializing the','line_number':456,'multiline':False]
['text':' collation when not set explicitly.','line_number':457,'multiline':False]
['text':' Can this $lookup be pushed down into SBE?','line_number':460,'multiline':False]
['text':' The aggregation pipeline to perform against the '_resolvedNs' namespace. Referenced view','line_number':463,'multiline':False]
['text':' namespaces have been resolved.','line_number':464,'multiline':False]
['text':' The aggregation pipeline defined with the user request, prior to optimization and view','line_number':466,'multiline':False]
['text':' resolution. If the user did not define a pipeline this will be 'boost::none'.','line_number':467,'multiline':False]
['text':' A pipeline parsed from _resolvedPipeline at creation time, intended to support introspective','line_number':469,'multiline':False]
['text':' functions. If sub-$lookup stages are present, their pipelines are constructed recursively.','line_number':470,'multiline':False]
['text':' The following members are used to hold onto state across getNext() calls when '_unwindSrc' is','line_number':478,'multiline':False]
['text':' not null.','line_number':479,'multiline':False]
['text':' namespace mongo','line_number':486,'multiline':False]
