['text':'*
 *    Copyright (C) 2023-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':' A descriptor for a merge strategy. Holds a merge strategy function and a set of actions the','line_number':50,'multiline':False]
['text':' client should be authorized to perform in order to be able to execute a merge operation using','line_number':51,'multiline':False]
['text':' this merge strategy. Additionally holds a 'BatchedCommandGenerator' that will initialize a','line_number':52,'multiline':False]
['text':' BatchedWriteRequest for executing the batch write. If a 'BatchTransform' function is','line_number':53,'multiline':False]
['text':' provided, it will be called when constructing a batch object to transform updates.','line_number':54,'multiline':False]
['text':' A function encapsulating a merge strategy for the $merge stage based on the pair of','line_number':61,'multiline':False]
['text':' whenMatched/whenNotMatched modes.','line_number':62,'multiline':False]
['text':' A function object that will be invoked to generate a BatchedCommandRequest.','line_number':71,'multiline':False]
['text':'*
 * This class is used by the aggregation framework and streams enterprise module
 * to perform the document processing needed for $merge.
 ','line_number':107,'multiline':True]
['text':'*
     * If 'collectionPlacementVersion' is provided then processing will stop with an error if the
     * collection's epoch changes during the course of execution. This is used as a mechanism to
     * prevent the shard key from changing.
     ','line_number':113,'multiline':True]
['text':'*
     * Creates an UpdateModification object from the given 'doc' to be used with the batched update.
     ','line_number':150,'multiline':True]
['text':'*
     * Resolves 'let' defined variables against the 'doc' and stores the results in the returned
     * BSON.
     ','line_number':159,'multiline':True]
['text':' When we resolve 'let' variables, an empty BSON object or boost::none won't make any','line_number':164,'multiline':False]
['text':' difference at the end-point (in the PipelineExecutor), as in both cases we will end up','line_number':165,'multiline':False]
['text':' with the update pipeline ExpressionContext not being populated with any variables, so we','line_number':166,'multiline':False]
['text':' are not making a distinction between these two cases here.','line_number':167,'multiline':False]
['text':' A merge descriptor contains a merge strategy function describing how to merge two','line_number':183,'multiline':False]
['text':' collections, as well as some other metadata needed to perform the merge operation. This is','line_number':184,'multiline':False]
['text':' a reference to an element in a static const map 'mergeStrategyDescriptors', which owns the','line_number':185,'multiline':False]
['text':' descriptor.','line_number':186,'multiline':False]
['text':' Holds 'let' variables defined in this stage. These variables are propagated to the','line_number':189,'multiline':False]
['text':' ExpressionContext of the pipeline update for use in the inner pipeline execution. The key','line_number':190,'multiline':False]
['text':' of the map is a variable name as defined in the $merge spec 'let' argument, and the value is','line_number':191,'multiline':False]
['text':' a parsed Expression, defining how the variable value must be evaluated.','line_number':192,'multiline':False]
['text':' A custom pipeline to compute a new version of merging documents.','line_number':196,'multiline':False]
['text':' namespace mongo','line_number':202,'multiline':False]
