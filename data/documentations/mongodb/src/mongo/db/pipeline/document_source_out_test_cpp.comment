['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':'*
 * For the purpsoses of this test, assume every collection is unsharded. Stages may ask this during
 * setup. For example, to compute its constraints, the $out stage needs to know if the output
 * collection is sharded.
 ','line_number':61,'multiline':True]
['text':'*
     * For the purposes of these tests, pretend each collection is unsharded and has a document key
     * of just "_id".
     ','line_number':72,'multiline':True]
['text':' Pretend it always matches for our tests here.','line_number':84,'multiline':False]
['text':' Make sure we can reparse the serialized BSON.','line_number':128,'multiline':False]
['text':' NOLINT','line_number':143,'multiline':False]
['text':' NOLINT','line_number':168,'multiline':False]
['text':' The tenantId for the outputNs should be the same as that on the expCtx despite outputting','line_number':205,'multiline':False]
['text':' into different dbs.','line_number':206,'multiline':False]
['text':' TODO SERVER-77000: update this test once the serialize function has been updated to use','line_number':234,'multiline':False]
['text':' DatabaseNameUtil::serialize() instead.  We need to set the serialization context objs on the','line_number':235,'multiline':False]
['text':' expCtx, and manipulate before calling outSource->serialize().','line_number':236,'multiline':False]
['text':' Assert the tenantId is not included in the serialized namespace.','line_number':237,'multiline':False]
['text':' TODO SERVER-77000: uncomment the below','line_number':243,'multiline':False]
['text':' expCtx->serializationCtxt.setPrefixState(true);','line_number':244,'multiline':False]
['text':' expCtx->serializationCtxt.setTenantIdSource(false);','line_number':245,'multiline':False]
['text':' std::string targetDb = str::stream()','line_number':246,'multiline':False]
['text':'     << expCtx->ns.tenantId()->toString() << "_" << expCtx->ns.dbName().toString_forTest();','line_number':247,'multiline':False]
['text':' serialized = outSource->serialize().getDocument();','line_number':248,'multiline':False]
['text':' expectedDoc = Document{{"coll", targetColl}, {"db", targetDb}};','line_number':249,'multiline':False]
['text':' ASSERT_DOCUMENT_EQ(serialized["$out"].getDocument(), expectedDoc);','line_number':250,'multiline':False]
['text':' The tenantId for the outputNs should be the same as that on the expCtx despite outputting','line_number':252,'multiline':False]
['text':' into different dbs.','line_number':253,'multiline':False]
['text':' Assert the tenantId is not included in the serialized namespace.','line_number':263,'multiline':False]
['text':' namespace','line_number':269,'multiline':False]
['text':' namespace mongo','line_number':270,'multiline':False]
