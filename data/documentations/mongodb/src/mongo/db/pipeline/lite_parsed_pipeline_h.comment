['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':' IWYU pragma: no_include "ext/alloc_traits.h"','line_number':34,'multiline':False]
['text':'*
 * A semi-parsed version of a Pipeline, parsed just enough to determine information like what
 * foreign collections are involved.
 ','line_number':54,'multiline':True]
['text':'*
     * Constructs a LiteParsedPipeline from the raw BSON stages given in 'request'.
     *
     * May throw a AssertionException if there is an invalid stage specification, although full
     * validation happens later, during Pipeline construction.
     ','line_number':60,'multiline':True]
['text':'*
     * Returns all foreign namespaces referenced by stages within this pipeline, if any.
     ','line_number':76,'multiline':True]
['text':'*
     * Returns a vector of the foreign collections(s) referenced by this stage that potentially will
     * be involved in query execution, if any. For example, consider the pipeline:
     *
     * [{$lookup: {from: "bar", localField: "a", foreignField: "b", as: "output"}},
     *  {$unionWith: {coll: "foo", pipeline: [...]}}].
     *
     * Here, "foo" is not considered a foreign execution namespace because "$unionWith" cannot be
     * pushed down into the execution subsystem underneath the leading cursor stage, while "bar"
     * is considered one because "$lookup" can be pushed down in certain cases.
     ','line_number':89,'multiline':True]
['text':'*
     * Returns a list of the priviliges required for this pipeline.
     ','line_number':108,'multiline':True]
['text':'*
     * Returns true if the pipeline begins with a $collStats stage.
     ','line_number':121,'multiline':True]
['text':'*
     * Returns true if the pipeline begins with a $indexStats stage.
     ','line_number':128,'multiline':True]
['text':'*
     * Returns true if the desugared pipeline begins with a $queue stage.
     ','line_number':135,'multiline':True]
['text':'*
     * Returns true if the pipeline has a $changeStream stage.
     ','line_number':142,'multiline':True]
['text':'*
     * Returns true if any of the stages in this pipeline require knowledge of the collection
     * default collation to be successfully parsed, false otherwise. Note that this only applies to
     * top level stages and does not account for subpipelines.
     * TODO SERVER-81991: Delete this function once all unsharded collections are tracked in the
     * sharding catalog as unsplittable along with their collation.
     ','line_number':150,'multiline':True]
['text':'*
     * Returns an error Status if at least one of the stages does not allow the involved namespace
     * 'nss' to be sharded, otherwise returns Status::OK().
     ','line_number':164,'multiline':True]
['text':'*
     * Verifies that this pipeline is allowed to run with the specified read concern level.
     ','line_number':179,'multiline':True]
['text':'*
     * Checks that all of the stages in this pipeline are allowed to run with the specified read
     * concern level. Does not do any pipeline global checks.
     ','line_number':187,'multiline':True]
['text':'*
     * Verifies that this pipeline is allowed to run in a multi-document transaction. This ensures
     * that each stage is compatible, and throws a UserException if not. This should only be called
     * if the caller has determined the current operation is part of a transaction.
     ','line_number':194,'multiline':True]
['text':'*
     * Verifies that this pipeline is allowed to run with the read concern from the provided opCtx.
     * Used only when asserting is the desired behavior, otherwise use supportsReadConcern instead.
     ','line_number':202,'multiline':True]
['text':'*
     * Perform checks that verify that the LitePipe is valid. Note that this function must be called
     * before forwarding an aggregation command on an unsharded collection, in order to verify that
     * the involved namespaces are allowed to be sharded.
     ','line_number':209,'multiline':True]
['text':'*
     * Returns true if the first stage in the pipeline does not require an input source.
     ','line_number':219,'multiline':True]
['text':'*
     * Increments global stage counters corresponding to the stages in this lite parsed pipeline.
     ','line_number':226,'multiline':True]
['text':'*
     * Verifies that the pipeline contains valid stages. Optionally calls
     * 'validatePipelineStagesforAPIVersion' with 'opCtx'.
     ','line_number':231,'multiline':True]
['text':' namespace mongo','line_number':241,'multiline':False]
