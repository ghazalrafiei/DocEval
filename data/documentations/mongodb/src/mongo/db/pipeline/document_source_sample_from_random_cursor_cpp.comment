['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':' IWYU pragma: no_include "boost/math/special_functions/detail/erf_inv.hpp"','line_number':34,'multiline':False]
['text':' IWYU pragma: no_include "boost/math/special_functions/detail/lanczos_sse2.hpp"','line_number':35,'multiline':False]
['text':'*
 * Select a random value drawn according to the distribution Beta(alpha=1, beta=N). The kth smallest
 * value of a sample of size N from a Uniform(0, 1) distribution has a Beta(k, N + 1 - k)
 * distribution, so the return value represents the smallest value from such a sample. This is also
 * the expected distance between the values drawn from a uniform distribution, which is how it is
 * being used here.
 ','line_number':81,'multiline':True]
['text':' namespace','line_number':93,'multiline':False]
['text':' Assign it a random value to enable merging by random value, attempting to avoid bias in that','line_number':104,'multiline':False]
['text':' process.','line_number':105,'multiline':False]
['text':' This stage will be merged by sorting results according to this random metadata field, but','line_number':112,'multiline':False]
['text':' the merging logic expects to sort by the sort key metadata.','line_number':113,'multiline':False]
['text':' We may get duplicate documents back from the random cursor, and should not return duplicate','line_number':121,'multiline':False]
['text':' documents, so keep trying until we get a new one.','line_number':122,'multiline':False]
['text':' Try again with the next document.','line_number':145,'multiline':False]
['text':' Our input should be a random cursor, which should never','line_number':148,'multiline':False]
['text':' result in kPauseExecution.','line_number':149,'multiline':False]
['text':' namespace mongo','line_number':181,'multiline':False]
