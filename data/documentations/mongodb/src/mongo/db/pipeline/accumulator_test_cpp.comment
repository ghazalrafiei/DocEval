['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':' IWYU pragma: keep','line_number':63,'multiline':False]
['text':'*
 * Takes a list of pairs of arguments and expected results, and creates an AccumulatorState using
 * the provided lambda. It then asserts that for the given AccumulatorState the input returns
 * the expected results.
 ','line_number':83,'multiline':True]
['text':' Asserts that result equals expected result when not sharded.','line_number':96,'multiline':False]
['text':' Asserts that result equals expected result when all input is on one shard.','line_number':107,'multiline':False]
['text':' Asserts that result equals expected result when each input is on a separate shard.','line_number':121,'multiline':False]
['text':'*
 * Takes the name of an AccumulatorState as its template argument and a list of pairs of arguments
 * and expected results as its second argument, and asserts that for the given AccumulatorState the
 * arguments evaluate to the expected results.
 ','line_number':140,'multiline':True]
['text':' No documents evaluated.','line_number':167,'multiline':False]
['text':' One int value is converted to double.','line_number':170,'multiline':False]
['text':' One long value is converted to double.','line_number':172,'multiline':False]
['text':' One double value.','line_number':174,'multiline':False]
['text':' Averaging two ints.','line_number':177,'multiline':False]
['text':' Averaging two longs.','line_number':179,'multiline':False]
['text':' Averaging two doubles.','line_number':181,'multiline':False]
['text':' The average of an int and a double is a double.','line_number':184,'multiline':False]
['text':' The average of a long and a double is a double.','line_number':186,'multiline':False]
['text':' The average of an int and a long is a double.','line_number':188,'multiline':False]
['text':' Averaging an int, long, and double.','line_number':190,'multiline':False]
['text':' Unlike $sum, two ints do not overflow in the 'total' portion of the average.','line_number':193,'multiline':False]
['text':' Two longs do overflow in the 'total' portion of the average.','line_number':196,'multiline':False]
['text':' Averaging two decimals.','line_number':200,'multiline':False]
['text':' Averaging two longs and a decimal results in an accurate decimal result.','line_number':205,'multiline':False]
['text':' Averaging a double and a decimal','line_number':211,'multiline':False]
['text':' No documents evaluated.','line_number':221,'multiline':False]
['text':' The accumulator evaluates one document and retains its value.','line_number':224,'multiline':False]
['text':' The accumulator evaluates one document with the field missing, returns missing value.','line_number':226,'multiline':False]
['text':' The accumulator evaluates two documents and retains the value in the first.','line_number':229,'multiline':False]
['text':' The accumulator evaluates two documents and retains the missing value in the first.','line_number':231,'multiline':False]
['text':' Basic test involving no values.','line_number':242,'multiline':False]
['text':' Basic test: testing 1 value.','line_number':244,'multiline':False]
['text':' Basic test involving 2 values.','line_number':246,'multiline':False]
['text':' Test that processes more than 'n' total values.','line_number':249,'multiline':False]
['text':' Null and missing values should NOT be ignored (missing gets upconverted to null).','line_number':253,'multiline':False]
['text':' Testing mixed types.','line_number':257,'multiline':False]
['text':' Testing duplicate values.','line_number':261,'multiline':False]
['text':' skipMerging ','line_number':268,'multiline':True]
['text':' Additional test partition where N = 1.','line_number':271,'multiline':False]
['text':' Basic test involving no values.','line_number':276,'multiline':False]
['text':' Basic test: testing 1 value.','line_number':278,'multiline':False]
['text':' Basic test involving 2 values.','line_number':280,'multiline':False]
['text':' Test that processes more than 'n' total values.','line_number':283,'multiline':False]
['text':' skipMerging ','line_number':287,'multiline':True]
['text':' No documents evaluated.','line_number':295,'multiline':False]
['text':' The accumulator evaluates one document and retains its value.','line_number':298,'multiline':False]
['text':' The accumulator evaluates one document with the field missing, returns missing value.','line_number':300,'multiline':False]
['text':' The accumulator evaluates two documents and retains the value in the last.','line_number':303,'multiline':False]
['text':' The accumulator evaluates two documents and retains the missing value in the last.','line_number':305,'multiline':False]
['text':' Basic test involving no values.','line_number':315,'multiline':False]
['text':' Basic test: testing 1 value.','line_number':317,'multiline':False]
['text':' Basic test involving 2 values.','line_number':319,'multiline':False]
['text':' Test that processes more than 'n' total values.','line_number':322,'multiline':False]
['text':' Null and missing values should NOT be ignored (missing gets upconverted to null).','line_number':326,'multiline':False]
['text':' Testing mixed types.','line_number':348,'multiline':False]
['text':' Testing duplicate values.','line_number':352,'multiline':False]
['text':' skipMerging ','line_number':359,'multiline':True]
['text':' Additional test partition where N = 1.','line_number':362,'multiline':False]
['text':' Basic test involving no values.','line_number':367,'multiline':False]
['text':' Basic test: testing 1 value.','line_number':369,'multiline':False]
['text':' Basic test involving 2 values.','line_number':371,'multiline':False]
['text':' Test that processes more than 'n' total values.','line_number':374,'multiline':False]
['text':' skipMerging ','line_number':378,'multiline':True]
['text':' No documents evaluated.','line_number':386,'multiline':False]
['text':' The accumulator evaluates one document and retains its value.','line_number':389,'multiline':False]
['text':' The accumulator evaluates one document with the field missing and returns null.','line_number':391,'multiline':False]
['text':' The accumulator evaluates two documents and retains the minimum value.','line_number':394,'multiline':False]
['text':' The accumulator evaluates two documents and ignores the missing value.','line_number':396,'multiline':False]
['text':' Basic tests.','line_number':415,'multiline':False]
['text':' 3 or fewer values results in those values being returned.','line_number':423,'multiline':False]
['text':' Ties are broken arbitrarily.','line_number':428,'multiline':False]
['text':' Null/missing cases (missing and null both get ignored).','line_number':432,'multiline':False]
['text':'skipMerging','line_number':438,'multiline':True]
['text':' skipMerging ','line_number':452,'multiline':True]
['text':' Basic tests.','line_number':462,'multiline':False]
['text':' 3 or fewer values results in those values being returned.','line_number':470,'multiline':False]
['text':' Ties are broken arbitrarily.','line_number':475,'multiline':False]
['text':' Null/missing cases (missing and null both get ignored).','line_number':479,'multiline':False]
['text':'skipMerging','line_number':485,'multiline':True]
['text':' skipMerging ','line_number':499,'multiline':True]
['text':' No documents evaluated.','line_number':507,'multiline':False]
['text':' The accumulator evaluates one document and retains its value.','line_number':510,'multiline':False]
['text':' The accumulator evaluates one document with the field missing and returns null.','line_number':512,'multiline':False]
['text':' The accumulator evaluates two documents and retains the maximum value.','line_number':515,'multiline':False]
['text':' The accumulator evaluates two documents and ignores the missing value.','line_number':517,'multiline':False]
['text':' No documents evaluated.','line_number':534,'multiline':False]
['text':' An int.','line_number':537,'multiline':False]
['text':' A long.','line_number':539,'multiline':False]
['text':' A double.','line_number':541,'multiline':False]
['text':' A long that cannot be expressed as an int.','line_number':544,'multiline':False]
['text':' A non integer valued double.','line_number':546,'multiline':False]
['text':' A nan double.','line_number':548,'multiline':False]
['text':' Two ints are summed.','line_number':551,'multiline':False]
['text':' An int and a long.','line_number':553,'multiline':False]
['text':' Two longs.','line_number':555,'multiline':False]
['text':' An int and a double.','line_number':557,'multiline':False]
['text':' A long and a double.','line_number':559,'multiline':False]
['text':' Two doubles.','line_number':561,'multiline':False]
['text':' An int, a long, and a double.','line_number':563,'multiline':False]
['text':' Two decimals.','line_number':565,'multiline':False]
['text':' Two longs and a decimal.','line_number':567,'multiline':False]
['text':' A double and a decimal.','line_number':569,'multiline':False]
['text':' An int, long, double and decimal.','line_number':571,'multiline':False]
['text':' A negative value is summed.','line_number':575,'multiline':False]
['text':' A long and a negative int are summed.','line_number':577,'multiline':False]
['text':' Two ints do not overflow.','line_number':580,'multiline':False]
['text':' Two negative ints do not overflow.','line_number':582,'multiline':False]
['text':' An int and a long do not trigger an int overflow.','line_number':585,'multiline':False]
['text':' An int and a double do not trigger an int overflow.','line_number':588,'multiline':False]
['text':' An int and a long overflow into a double.','line_number':591,'multiline':False]
['text':' Two longs overflow into a double.','line_number':594,'multiline':False]
['text':' A long and a double do not trigger a long overflow.','line_number':597,'multiline':False]
['text':' Two doubles overflow to infinity.','line_number':600,'multiline':False]
['text':' Two large integers do not overflow if a double is added later.','line_number':603,'multiline':False]
['text':' An int and a NaN double.','line_number':610,'multiline':False]
['text':' Null values are ignored.','line_number':613,'multiline':False]
['text':' Missing values are ignored.','line_number':615,'multiline':False]
['text':' Basic tests.','line_number':695,'multiline':False]
['text':' 3 or fewer values results in those values being returned.','line_number':707,'multiline':False]
['text':' Ties are broken arbitrarily.','line_number':712,'multiline':False]
['text':' Null/missing cases (missing and null are NOT ignored, but missing is converted to null).','line_number':721,'multiline':False]
['text':' Output values different than sortBy.','line_number':728,'multiline':False]
['text':' All 10s encountered once map is full.','line_number':735,'multiline':False]
['text':' All 10s encountered before map is full.','line_number':743,'multiline':False]
['text':' All 10s encountered when the map is full.','line_number':751,'multiline':False]
['text':' topN descending will return same results, but in reverse order.','line_number':774,'multiline':False]
['text':' All 10s encountered once map is full.','line_number':782,'multiline':False]
['text':' All 10s encountered before map is full.','line_number':790,'multiline':False]
['text':' All 10s encountered when the map is full.','line_number':798,'multiline':False]
['text':' Basic tests.','line_number':833,'multiline':False]
['text':' 3 or fewer values results in those values being returned.','line_number':845,'multiline':False]
['text':' Ties are broken arbitrarily.','line_number':850,'multiline':False]
['text':' Null/missing cases (missing and null are NOT ignored, but missing is upconverted to','line_number':859,'multiline':False]
['text':' null).','line_number':860,'multiline':False]
['text':' Output values different than sortBy.','line_number':874,'multiline':False]
['text':' One 1 encountered once map is full.','line_number':881,'multiline':False]
['text':' All 1s encountered before map is full.','line_number':889,'multiline':False]
['text':' All 1s encountered when the map is full.','line_number':897,'multiline':False]
['text':' topN ascending will return same results, but in reverse order.','line_number':919,'multiline':False]
['text':' One 10 encountered once map is full.','line_number':927,'multiline':False]
['text':' All 10s encountered before map is full.','line_number':935,'multiline':False]
['text':' All 10s encountered when the map is full.','line_number':943,'multiline':False]
['text':' Basic tests.','line_number':981,'multiline':False]
['text':' 3 or fewer values results in those values being returned.','line_number':986,'multiline':False]
['text':' Ties are broken arbitrarily.','line_number':991,'multiline':False]
['text':' Null/missing cases (missing and null are NOT ignored, but missing is upconverted to','line_number':995,'multiline':False]
['text':' null).','line_number':996,'multiline':False]
['text':' topN ascending will return same results, but in reverse order.','line_number':1017,'multiline':False]
['text':' Utility to test the single counterparts of the topN/bottomN accumulators.','line_number':1093,'multiline':False]
['text':' Unpack for single versions.','line_number':1096,'multiline':False]
['text':' n = 1 single = true should return 1 non array value.','line_number':1101,'multiline':False]
['text':' When n = 1, bottomN over ascending sort is the same as topN over descending sort.','line_number':1129,'multiline':False]
['text':' n = 1 single = false should return a 1 elem array.','line_number':1138,'multiline':False]
['text':' When n = 1, bottomN over descending sort is the same as topN over ascending sort.','line_number':1171,'multiline':False]
['text':' n = 1 single = false should return a 1 elem array.','line_number':1181,'multiline':False]
['text':' n = 1 single = false should return a 1 elem array.','line_number':1198,'multiline':False]
['text':' isRemovable ','line_number':1222,'multiline':True]
['text':' Assumes init() already called.','line_number':1252,'multiline':False]
['text':' Test accumulator {$topN: {n: 3, output: "$output", sortBy: {sortKey: 1}}}','line_number':1275,'multiline':False]
['text':' Basic remove test.','line_number':1278,'multiline':False]
['text':' 1, 1','line_number':1283,'multiline':False]
['text':' Add some elements with equal keys.','line_number':1286,'multiline':False]
['text':' 4, 5 not shown.','line_number':1291,'multiline':False]
['text':' 2, 2','line_number':1293,'multiline':False]
['text':' 5 not shown.','line_number':1294,'multiline':False]
['text':' Add value back but its at the end of the queue so it's not included in results.','line_number':1296,'multiline':False]
['text':' 2, 5 not shown.','line_number':1298,'multiline':False]
['text':' 2, 3','line_number':1300,'multiline':False]
['text':' 5 not shown.','line_number':1301,'multiline':False]
['text':' 2, 4','line_number':1303,'multiline':False]
['text':' Add value after and then pop front value.','line_number':1306,'multiline':False]
['text':' 6 not shown.','line_number':1308,'multiline':False]
['text':' 3, 5','line_number':1310,'multiline':False]
['text':' 1, 1','line_number':1312,'multiline':False]
['text':' 2, 2','line_number':1314,'multiline':False]
['text':' Cleared.','line_number':1316,'multiline':False]
['text':' Test accumulator {$topN: {n: 3, output: "$output", sortBy: {sortKey: 1}}}','line_number':1321,'multiline':False]
['text':' Mostly round robin insert and remove.','line_number':1324,'multiline':False]
['text':' 1: [1, 2, 3], 2: [4, 5, 6], 3: [7, 8, 9]','line_number':1335,'multiline':False]
['text':' 1: [2, 3], 2: [4, 5, 6], 3: [7, 8, 9]','line_number':1338,'multiline':False]
['text':' 1: [3], 2: [4, 5, 6], 3: [7, 8, 9]','line_number':1341,'multiline':False]
['text':' 1: [3], 2: [5, 6], 3: [7, 8, 9]','line_number':1344,'multiline':False]
['text':' 1: [3], 2: [5, 6], 3: [8, 9]','line_number':1347,'multiline':False]
['text':' 2: [5, 6], 3: [8, 9]','line_number':1350,'multiline':False]
['text':' 2: [6], 3: [8, 9]','line_number':1353,'multiline':False]
['text':' 2: [6], 3: [9]','line_number':1356,'multiline':False]
['text':' Test accumulator {$topN: {n: 3, output: "$output", sortBy: {sortKey: 1}}}','line_number':1361,'multiline':False]
['text':' Test accumulator {$topN: {n: 3, output: "$output", sortBy: {sortKey: 1}}}','line_number':1379,'multiline':False]
['text':' Test accumulator {$bottomN: {n: 3, output: "$output", sortBy: {sortKey: 1}}}','line_number':1387,'multiline':False]
['text':' Mostly round robin insert and remove.','line_number':1390,'multiline':False]
['text':' 1: [7, 8, 9], 2: [4, 5, 6], 3: [1, 2, 3]','line_number':1401,'multiline':False]
['text':' 1: [7, 8, 9], 2: [4, 5, 6], 3: [2, 3]','line_number':1404,'multiline':False]
['text':' 1: [7, 8, 9], 2: [4, 5, 6], 3: [3]','line_number':1407,'multiline':False]
['text':' 1: [7, 8, 9], 2: [5, 6], 3: [3]','line_number':1410,'multiline':False]
['text':' 1: [8, 9], 2: [5, 6], 3: [3]','line_number':1413,'multiline':False]
['text':' 1: [8, 9], 2: [5, 6]','line_number':1416,'multiline':False]
['text':' 1: [8, 9], 2: [6]','line_number':1419,'multiline':False]
['text':' 2: [9], 3: [6]','line_number':1422,'multiline':False]
['text':' 2: [9]','line_number':1425,'multiline':False]
['text':' Empty.','line_number':1427,'multiline':False]
['text':' Test accumulator {$bottomN: {n: 3, output: "$output", sortBy: {sortKey: 1}}}','line_number':1432,'multiline':False]
['text':' Mostly round robin insert and remove.','line_number':1435,'multiline':False]
['text':' 3: [7, 8, 9], 2: [4, 5, 6], 1: [1, 2, 3]','line_number':1446,'multiline':False]
['text':' 3: [7, 8, 9], 2: [4, 5, 6], 1: [2, 3]','line_number':1449,'multiline':False]
['text':' 3: [7, 8, 9], 2: [4, 5, 6], 1: [3]','line_number':1452,'multiline':False]
['text':' 3: [7, 8, 9], 2: [5, 6], 1: [3]','line_number':1455,'multiline':False]
['text':' 3: [8, 9], 2: [5, 6], 1: [3]','line_number':1458,'multiline':False]
['text':' 3: [8, 9], 2: [5, 6]','line_number':1461,'multiline':False]
['text':' 3: [8, 9], 2: [6]','line_number':1464,'multiline':False]
['text':' 2: [9], 3: [6]','line_number':1467,'multiline':False]
['text':' 2: [9]','line_number':1470,'multiline':False]
['text':' Empty.','line_number':1472,'multiline':False]
['text':' Test accumulator {$bottomN: {n: 3, output: "$output", sortBy: {sortKey: 1}}}','line_number':1477,'multiline':False]
['text':' Test accumulator {$bottomN: {n: 3, output: "$output", sortBy: {sortKey: 1}}}','line_number':1490,'multiline':False]
['text':' Test accumulator {$bottomN: {n: 3, output: "$output", sortBy: {sortKey: 1}}}','line_number':1508,'multiline':False]
['text':' Test accumulator {$top: {output: "$output", sortBy: {sortKey: 1}}}','line_number':1515,'multiline':False]
['text':' Mostly round robin insert and remove.','line_number':1518,'multiline':False]
['text':' 1: [1, 2, 3], 2: [4, 5, 6], 3: [7, 8, 9]','line_number':1529,'multiline':False]
['text':' 1: [2, 3], 2: [4, 5, 6], 3: [7, 8, 9]','line_number':1532,'multiline':False]
['text':' 1: [3], 2: [4, 5, 6], 3: [7, 8, 9]','line_number':1535,'multiline':False]
['text':' 1: [3], 2: [5, 6], 3: [7, 8, 9]','line_number':1538,'multiline':False]
['text':' 1: [3], 2: [5, 6], 3: [8, 9]','line_number':1541,'multiline':False]
['text':' 2: [5, 6], 3: [8, 9]','line_number':1544,'multiline':False]
['text':' 2: [6], 3: [8, 9]','line_number':1547,'multiline':False]
['text':' 2: [6], 3: [9]','line_number':1550,'multiline':False]
['text':' 2: [9]','line_number':1553,'multiline':False]
['text':' Test accumulator {$top: {output: "$output", sortBy: {sortKey: 1}}}','line_number':1560,'multiline':False]
['text':' Test accumulator {$top: {output: "$output", sortBy: {sortKey: 1}}}','line_number':1573,'multiline':False]
['text':' Test accumulator {$bottom: {output: "$output", sortBy: {sortKey: 1}}}','line_number':1580,'multiline':False]
['text':' Mostly round robin insert and remove.','line_number':1583,'multiline':False]
['text':' 1: [7, 8, 9], 2: [4, 5, 6], 3: [1, 2, 3]','line_number':1594,'multiline':False]
['text':' 1: [7, 8, 9], 2: [4, 5, 6], 3: [2, 3]','line_number':1597,'multiline':False]
['text':' 1: [7, 8, 9], 2: [4, 5, 6], 3: [3]','line_number':1600,'multiline':False]
['text':' 1: [7, 8, 9], 2: [5, 6], 3: [3]','line_number':1603,'multiline':False]
['text':' 1: [8, 9], 2: [5, 6], 3: [3]','line_number':1606,'multiline':False]
['text':' 1: [8, 9], 2: [5, 6]','line_number':1609,'multiline':False]
['text':' 1: [8, 9], 2: [6]','line_number':1612,'multiline':False]
['text':' 2: [9], 3: [6]','line_number':1615,'multiline':False]
['text':' 2: [9]','line_number':1618,'multiline':False]
['text':' Empty.','line_number':1620,'multiline':False]
['text':' Test accumulator {$bottom: {output: "$output", sortBy: {sortKey: 1}}}','line_number':1625,'multiline':False]
['text':' Concurrent add/delete.','line_number':1628,'multiline':False]
['text':' Test accumulator {$bottom: {output: "$output", sortBy: {sortKey: 1}}}','line_number':1638,'multiline':False]
['text':' Document number is correct.','line_number':1648,'multiline':False]
['text':' Ties don't increment','line_number':1652,'multiline':False]
['text':' Ties skip next value correctly.','line_number':1654,'multiline':False]
['text':' Expected results with empty values.','line_number':1658,'multiline':False]
['text':' rank can't be merged ','line_number':1663,'multiline':True]
['text':' Document number is correct.','line_number':1671,'multiline':False]
['text':' Ties don't increment','line_number':1675,'multiline':False]
['text':' Ties don't skip values.','line_number':1677,'multiline':False]
['text':' denseRank can't be merged ','line_number':1683,'multiline':True]
['text':' Document number is correct.','line_number':1691,'multiline':False]
['text':' Ties increment','line_number':1695,'multiline':False]
['text':' denseRank can't be merged ','line_number':1702,'multiline':True]
['text':' ------------------------- AccumulatorCorvariance(Samp/Pop) -------------------------- ','line_number':1737,'multiline':True]
['text':' Calculate covariance using the offline algorithm.','line_number':1739,'multiline':False]
['text':' Edge cases return 0 though 'input' should not be empty. Empty input is tested elsewhere.','line_number':1741,'multiline':False]
['text':' Test the accumulator-output covariance (using an online algorithm:','line_number':1765,'multiline':False]
['text':' https://en.wikipedia.org/wiki/Algorithms_for_calculating_variance#Online) is equal to the','line_number':1766,'multiline':False]
['text':' covariance calculated based on the offline algorithm (cov(x,y) = Σ((xi-avg(x))*(yi-avg(y)))/n)).','line_number':1767,'multiline':False]
['text':' If 'result' is given, the covariance should also be tested against the given result.','line_number':1768,'multiline':False]
['text':' The sample covariance of variables of single value should be undefined.','line_number':1790,'multiline':False]
['text':' This is actually an "undefined" case because NaN/Inf is not counted.','line_number':1795,'multiline':False]
['text':' Covariance accumulator can't be merged ','line_number':1820,'multiline':True]
['text':' Covariance accumulator can't be merged ','line_number':1830,'multiline':True]
['text':' Some doubles as input.','line_number':1836,'multiline':False]
['text':' Test both offline and online corvariance algorithm with a given result.','line_number':1843,'multiline':False]
['text':' Some doubles as input.','line_number':1850,'multiline':False]
['text':' Test both offline and online corvariance algorithm with a given result.','line_number':1857,'multiline':False]
['text':' Some randomly generated variables as input.','line_number':1882,'multiline':False]
['text':' NOLINT','line_number':1926,'multiline':False]
['text':' NOLINT','line_number':1947,'multiline':False]
['text':' NOLINT','line_number':1962,'multiline':False]
['text':' NOLINT','line_number':1969,'multiline':False]
['text':' NOLINT','line_number':1976,'multiline':False]
['text':' NOLINT','line_number':1985,'multiline':False]
['text':' NOLINT','line_number':1993,'multiline':False]
['text':' NOLINT','line_number':2002,'multiline':False]
['text':' NOLINT','line_number':2017,'multiline':False]
['text':' NOLINT','line_number':2043,'multiline':False]
['text':' NOLINT','line_number':2053,'multiline':False]
['text':' NOLINT','line_number':2064,'multiline':False]
['text':' ------------------------- AccumulatorMergeObjects -------------------------- ','line_number':2069,'multiline':True]
['text':' namespace AccumulatorTests','line_number':2121,'multiline':False]
