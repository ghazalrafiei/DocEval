['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':'*
 * Custom comparator that orders fieldpath strings by path prefix first, then by field.
 * This ensures that a parent field is ordered directly before its children.
 ','line_number':44,'multiline':True]
['text':' Returns true if the lhs value should sort before the rhs, false otherwise. ','line_number':51,'multiline':True]
['text':'*
 * Set of field paths strings.  When iterated over, a parent path is seen directly before its
 * children (or descendants, more generally).  Eg., "a", "a.a", "a.b", "a-plus", "b".
 ','line_number':55,'multiline':True]
['text':'*
 * This struct allows components in an agg pipeline to report what they need from their input.
 ','line_number':61,'multiline':True]
['text':'*
     * Used by aggregation stages to report whether or not dependency resolution is complete, or
     * must continue to the next stage.
     ','line_number':65,'multiline':True]
['text':' The full object and all metadata may be required.','line_number':70,'multiline':False]
['text':' Later stages could need either fields or metadata. For example, a $limit stage will pass','line_number':73,'multiline':False]
['text':' through all fields, and they may or may not be needed by future stages.','line_number':74,'multiline':False]
['text':' Later stages won't need more fields from input. For example, an inclusion projection like','line_number':77,'multiline':False]
['text':' {_id: 1, a: 1} will only output two fields, so future stages cannot possibly depend on','line_number':78,'multiline':False]
['text':' any other fields.','line_number':79,'multiline':False]
['text':' Later stages won't need more metadata from input. For example, a $group stage will group','line_number':82,'multiline':False]
['text':' documents together, discarding their text score and sort keys.','line_number':83,'multiline':False]
['text':' Later stages won't need either fields or metadata.','line_number':86,'multiline':False]
['text':'*
     * Represents a state where all geo metadata is available.
     ','line_number':90,'multiline':True]
['text':'*
     * Represents a state where all metadata is available.
     ','line_number':96,'multiline':True]
['text':'*
     * Represents a state where only text score metadata is available.
     ','line_number':102,'multiline':True]
['text':'*
     * By default, certain metadata is unavailable to the pipeline, unless explicitly specified
     * that it is available. This state represents all metadata which is not available by default.
     ','line_number':108,'multiline':True]
['text':'*
     * Represents a state where no metadata is available.
     ','line_number':116,'multiline':True]
['text':'*
     * Return the set of dependencies with descendant paths removed.
     * For example ["a.b", "a.b.f", "c"] --> ["a.b", "c"].
     *
     * TruncateToRootLevel::yes requires all dependencies to be top-level.
     * The example above would return ["a", "c"]
     ','line_number':126,'multiline':True]
['text':'*
     * Returns a projection object covering the non-metadata dependencies tracked by this class,
     * or empty BSONObj if the entire document is required. By default, the resulting project
     * will include the full, dotted field names of the dependencies. If 'truncationBehavior' is
     * set to TruncateToRootLevel::yes, the project will contain only the root-level field
     * names.
     ','line_number':136,'multiline':True]
['text':'*
     * Returns 'true' if there is no dependency on the input documents or metadata.
     *
     * Note: this method does not say anything about dependencies on variables, or on a random
     * generator.
     ','line_number':146,'multiline':True]
['text':'*
     * Returns a value with bits set indicating the types of metadata not available to the
     * pipeline.
     ','line_number':156,'multiline':True]
['text':'*
     * Sets whether or not metadata 'type' is required. Throws if 'required' is true but that
     * metadata is not available to the pipeline.
     *
     * Except for MetadataType::SORT_KEY, once 'type' is required, it cannot be unset.
     ','line_number':164,'multiline':True]
['text':'*
     * Returns true if the DepsTracker requires that metadata of type 'type' is present.
     ','line_number':172,'multiline':True]
['text':'*
     * Returns true if there exists a type of metadata required by the DepsTracker.
     ','line_number':179,'multiline':True]
['text':'*
     * Return all of the metadata dependencies.
     ','line_number':186,'multiline':True]
['text':'*
     * Request that all metadata in the given QueryMetadataBitSet be added as dependencies. Throws a
     * UserException if any of the requested metadata fields have been marked as unavailable.
     ','line_number':196,'multiline':True]
['text':'*
     * Return names of needed fields in dotted notation.  A custom comparator orders the fields
     * such that a parent is immediately before its children.
     ','line_number':208,'multiline':True]
['text':' If true, ignore 'fields'; the whole document is needed.','line_number':214,'multiline':False]
['text':' The output of some operators (such as $sample and $rand) depends on a source of fresh random','line_number':216,'multiline':False]
['text':' numbers. During execution this dependency is implicit, but during optimize() we need to know','line_number':217,'multiline':False]
['text':' about this dependency to decide whether it's ok to cache or reevaluate an operator.','line_number':218,'multiline':False]
['text':' Represents all metadata not available to the pipeline.','line_number':222,'multiline':False]
['text':' Represents which metadata is used by the pipeline. This is populated while performing','line_number':225,'multiline':False]
['text':' dependency analysis.','line_number':226,'multiline':False]
['text':' namespace mongo','line_number':230,'multiline':False]
