['text':'*
 *    Copyright (C) 2023-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':'*
 * Shared base class for implementing $percentile and $median window functions.
 ','line_number':38,'multiline':True]
['text':' Only add numeric values.','line_number':44,'multiline':False]
['text':' Only numeric values were added, so only numeric values need to be removed.','line_number':53,'multiline':False]
['text':' resetting _memUsageTracker is the responsibility of the derived classes.','line_number':68,'multiline':False]
['text':' Calculate the rank.','line_number':76,'multiline':False]
['text':' boost::container::flat_multiset stores the values in ascending order, so we don't need to','line_number':80,'multiline':False]
['text':' sort them before finding the value at index 'rank'.','line_number':81,'multiline':False]
['text':' boost::container::flat_multiset has random-access iterators, so std::advance has an','line_number':82,'multiline':False]
['text':' expected runtime of O(1).','line_number':83,'multiline':False]
['text':' Holds all the values in the window in ascending order.','line_number':89,'multiline':False]
['text':' A boost::container::flat_multiset stores elements in a contiguous array, so iterating through','line_number':90,'multiline':False]
['text':' the set is faster than iterating through a std::multiset which stores its elements typically','line_number':91,'multiline':False]
['text':' as a binary search tree. Thus, using a boost::container::flat_multiset significantly improved','line_number':92,'multiline':False]
['text':' performance.','line_number':93,'multiline':False]
['text':' p ','line_number':150,'multiline':True]
['text':' namespace mongo','line_number':159,'multiline':False]
