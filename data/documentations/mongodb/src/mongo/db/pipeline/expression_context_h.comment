['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':' Not implemented in SBE.','line_number':90,'multiline':False]
['text':' Implemented in SBE but behind the featureFlagSbeFull flag.','line_number':92,'multiline':False]
['text':' Implemented in SBE and enabled by default.','line_number':94,'multiline':False]
['text':'*
     * An RAII type that will temporarily change the ExpressionContext's collator. Resets the
     * collator to the previous value upon destruction.
     ','line_number':111,'multiline':True]
['text':'*
         * Resets the collator on '_expCtx' to the original collator present at the time this
         * CollatorStash was constructed.
         ','line_number':117,'multiline':True]
['text':'*
         * Temporarily changes the collator on 'expCtx' to be 'newCollator'. The collator will be
         * set back to the original value when this CollatorStash is deleted.
         *
         * This constructor is private, all CollatorStashes should be created by calling
         * ExpressionContext::temporarilyChangeCollator().
         ','line_number':124,'multiline':True]
['text':'*
     * The structure ExpressionCounters encapsulates counters for match, aggregate, and other
     * expression types as seen in end-user queries.
     ','line_number':140,'multiline':True]
['text':'*
     * Constructs an ExpressionContext to be used for find command parsing and evaluation.
     ','line_number':151,'multiline':True]
['text':'*
     * Constructs an ExpressionContext to be used for Pipeline parsing and evaluation.
     * 'resolvedNamespaces' maps collection names (not full namespaces) to ResolvedNamespaces.
     ','line_number':167,'multiline':True]
['text':'*
     * Constructs an ExpressionContext to be used for Pipeline parsing and evaluation. This version
     * requires finer-grained parameters but does not require an AggregateCommandRequest.
     * 'resolvedNamespaces' maps collection names (not full namespaces) to ResolvedNamespaces.
     ','line_number':180,'multiline':True]
['text':'*
     * Constructs an ExpressionContext suitable for use outside of the aggregation system, including
     * for MatchExpression parsing and executing pipeline-style operations in the Update system.
     *
     * If 'collator' is null, the simple collator will be used.
     ','line_number':202,'multiline':True]
['text':'*
     * Constructs a blank ExpressionContext suitable for creating Query Shapes, but it could be
     * applied to other use cases as well.
     *
     * The process for creating a Query Shape sometimes requires re-parsing the BSON into a proper
     * AST, and for that you need an ExpressionContext.
     *
     * Note: this is meant for introspection and is not suitable for using to execute queries -
     * since it does not contain for example a collation argument or a real MongoProcessInterface
     * for execution.
     ','line_number':217,'multiline':True]
['text':'*
     * Used by a pipeline to check for interrupts so that killOp() works. Throws a UserAssertion if
     * this aggregation pipeline has been interrupted.
     ','line_number':233,'multiline':True]
['text':'*
     * Returns true if this is a collectionless aggregation on the specified database.
     ','line_number':243,'multiline':True]
['text':'*
     * Returns true if this is a collectionless aggregation on the 'admin' database.
     ','line_number':250,'multiline':True]
['text':'*
     * Returns true if this aggregation is running on a single, specific namespace.
     ','line_number':257,'multiline':True]
['text':'*
     * Whether to track timing information and "work" counts in the agg layer.
     ','line_number':272,'multiline':True]
['text':'*
     * Returns the BSON spec for the ExpressionContext's collator, or the simple collator spec if
     * the collator is null.
     *
     * The ExpressionContext is always set up with the fully-resolved collation. So even though
     * SERVER-24433 describes an ambiguity between a null collator, here we can say confidently that
     * null must mean simple since we have already handled "absence of a collator" before creating
     * the ExpressionContext.
     ','line_number':279,'multiline':True]
['text':'*
     * Sets '_collator' and resets 'documentComparator' and 'valueComparator'.
     *
     * Use with caution - '_collator' is used in the context of a Pipeline, and it is illegal
     * to change the collation once a Pipeline has been parsed with this ExpressionContext.
     ','line_number':296,'multiline':True]
['text':' Document/Value comparisons must be aware of the collation.','line_number':305,'multiline':False]
['text':'*
     * Temporarily resets the collator to be 'newCollator'. Returns a CollatorStash which will reset
     * the collator back to the old value upon destruction.
     ','line_number':319,'multiline':True]
['text':'*
     * Returns an ExpressionContext that is identical to 'this' that can be used to execute a
     * separate aggregation pipeline on 'ns' with the optional 'uuid' and an updated collator.
     ','line_number':326,'multiline':True]
['text':'*
     * Returns an ExpressionContext that is identical to 'this' except for the 'subPipelineDepth'
     * and 'needsMerge' fields.
     ','line_number':335,'multiline':True]
['text':' The original expCtx might have been attached to an aggregation pipeline running on the','line_number':347,'multiline':False]
['text':' shards. We must reset 'needsMerge' in order to get fully merged results for the','line_number':348,'multiline':False]
['text':' subpipeline.','line_number':349,'multiline':False]
['text':'*
     * Returns the ResolvedNamespace corresponding to 'nss'. It is an error to call this method on a
     * namespace not involved in the pipeline.
     ','line_number':354,'multiline':True]
['text':'*
     * Returns true if there are no namespaces in the query other than the namespace the query was
     * issued against. eg if there is no $out, $lookup ect. If namespaces have not yet been resolved
     * then it will also return false.
     ','line_number':366,'multiline':True]
['text':'*
     * Returns true if the tailableMode indicates a tailable
     * query.
     ','line_number':375,'multiline':True]
['text':'*
     * Convenience call that returns true if the tailableMode indicates a tailable and awaitData
     * query.
     ','line_number':384,'multiline':True]
['text':'*
     * Returns true if the pipeline is eligible for query sampling for the purpose of shard key
     * selection metrics.
     ','line_number':392,'multiline':True]
['text':'*
     * Retrieves the Javascript Scope for the current thread or creates a new one if it has not been
     * created yet. Initializes the Scope with the 'jsScope' variables from the runtimeConstants.
     * Loads the Scope with the functions stored in system.js if the expression isn't executed on
     * mongos and is called from a MapReduce command or `forceLoadOfStoredProcedures` is true.
     *
     * Returns a JsExec and a boolean indicating whether the Scope was created as part of this call.
     ','line_number':419,'multiline':True]
['text':' Stored procedures are only loaded for the $where expression and MapReduce command.','line_number':440,'multiline':False]
['text':'*
     * Create optional internal expression counters and start counting.
     ','line_number':458,'multiline':True]
['text':'*
     * Increment the counter for the match expression with a given name.
     ','line_number':463,'multiline':True]
['text':'*
     * Increment the counter for the aggregate expression with a given name.
     ','line_number':468,'multiline':True]
['text':'*
     * Increment the counter for the $group accumulator expression with a given name.
     ','line_number':473,'multiline':True]
['text':'*
     * Increment the counter for the $setWindowFields accumulator expression with a given name.
     ','line_number':478,'multiline':True]
['text':'*
     * Merge expression counters from the current expression context into the global maps
     * and stop counting.
     ','line_number':483,'multiline':True]
['text':'*
     * Sets the value of the $$USER_ROLES system variable.
     ','line_number':493,'multiline':True]
['text':'*
     * Record that we have seen the given system variable in the query.
     ','line_number':498,'multiline':True]
['text':'*
     * Returns true if the given system variable is referenced in the query and false otherwise.
     ','line_number':508,'multiline':True]
['text':'*
     * Throws if the provided feature flag is not enabled in the current FCV or
     * 'maxFeatureCompatibilityVersion' if set. Will do nothing if the feature flag is enabled
     * or boost::none.
     ','line_number':519,'multiline':True]
['text':' The explain verbosity requested by the user, or boost::none if no explain was requested.','line_number':527,'multiline':False]
['text':' If known, the UUID of the execution namespace for this aggregation command.','line_number':542,'multiline':False]
['text':' TODO(SERVER-78226): Replace `ns` and `uuid` with a type which can express "nss and uuid".','line_number':543,'multiline':False]
['text':' Defaults to empty to prevent external sorting in mongos.','line_number':546,'multiline':False]
['text':' When set restricts the global JavaScript heap size limit for any Scope returned by','line_number':550,'multiline':False]
['text':' getJsExecWithScope(). This limit is ignored if larger than the global limit dictated by the','line_number':551,'multiline':False]
['text':' 'jsHeapLimitMB' server parameter.','line_number':552,'multiline':False]
['text':' An interface for accessing information or performing operations that have different','line_number':555,'multiline':False]
['text':' implementations on mongod and mongos, or that only make sense on one of the two.','line_number':556,'multiline':False]
['text':' Additionally, putting some of this functionality behind an interface prevents aggregation','line_number':557,'multiline':False]
['text':' libraries from having large numbers of dependencies. This pointer is always non-null.','line_number':558,'multiline':False]
['text':' For a changeStream aggregation, this is the starting postBatchResumeToken. Empty otherwise.','line_number':568,'multiline':False]
['text':' Tracks the depth of nested aggregation sub-pipelines. Used to enforce depth limits.','line_number':571,'multiline':False]
['text':' True if this 'ExpressionContext' object is for the inner side of a $lookup or $graphLookup.','line_number':574,'multiline':False]
['text':' True if this 'ExpressionContext' object is for the inner side of a $unionWith.','line_number':577,'multiline':False]
['text':' If set, this will disallow use of features introduced in versions above the provided version.','line_number':580,'multiline':False]
['text':' True if this ExpressionContext is used to parse a view definition pipeline.','line_number':583,'multiline':False]
['text':' True if this ExpressionContext is being used to parse an update pipeline.','line_number':586,'multiline':False]
['text':' True if this ExpressionContext is used to parse a collection validator expression.','line_number':589,'multiline':False]
['text':' Indicates where there is any chance this operation will be profiled. Must be set at','line_number':592,'multiline':False]
['text':' construction.','line_number':593,'multiline':False]
['text':' The lowest SBE compatibility level of all expressions which use this expression context.','line_number':596,'multiline':False]
['text':' The lowest SBE compatibility level of all accumulators in the $group stage currently','line_number':599,'multiline':False]
['text':' being parsed using this expression context. This value is transient and gets','line_number':600,'multiline':False]
['text':' reset for every $group stage we parse. Each $group stage has its own per-stage flag.','line_number':601,'multiline':False]
['text':' The lowest SBE compatibility level of all window functions in the $_internalSetWindowFields','line_number':604,'multiline':False]
['text':' stage currently being parsed using this expression context. This value is transient and gets','line_number':605,'multiline':False]
['text':' reset for every $_internalSetWindowFields stage we parse. Each $_internalSetWindowFields','line_number':606,'multiline':False]
['text':' stage has its own per-stage flag.','line_number':607,'multiline':False]
['text':' In some situations we could lower the collection access and, maybe, a prefix of a pipeline to','line_number':610,'multiline':False]
['text':' SBE but doing so would prevent a specific optimization that exists in the classic engine from','line_number':611,'multiline':False]
['text':' being applied. Until we implement the same optimization in SBE, we need to fallback to','line_number':612,'multiline':False]
['text':' running the query in the classic engine entirely.','line_number':613,'multiline':False]
['text':' These fields can be used in a context when API version validations were not enforced during','line_number':616,'multiline':False]
['text':' parse time (Example creating a view or validator), but needs to be enforce while querying','line_number':617,'multiline':False]
['text':' later.','line_number':618,'multiline':False]
['text':' Tracks whether the collator to use for the aggregation matches the default collation of the','line_number':622,'multiline':False]
['text':' collection or view.','line_number':623,'multiline':False]
['text':' When non-empty, contains the unmodified user provided aggregation command.','line_number':627,'multiline':False]
['text':' If present, the spec associated with the current change stream pipeline.','line_number':630,'multiline':False]
['text':' The resume token version that should be generated by a change stream.','line_number':633,'multiline':False]
['text':' True if the expression context is the original one for a given pipeline.','line_number':636,'multiline':False]
['text':' False if another context is created for the same pipeline. Used to disable duplicate','line_number':637,'multiline':False]
['text':' expression counting.','line_number':638,'multiline':False]
['text':' Returns true if we've received a TemporarilyUnavailableException.','line_number':641,'multiline':False]
['text':' Sets or clears the flag indicating whether we've received a TemporarilyUnavailableException.','line_number':646,'multiline':False]
['text':' Sets or clears a flag which tells DocumentSource parsers whether any involved Collection','line_number':651,'multiline':False]
['text':' may contain extended-range dates.','line_number':652,'multiline':False]
['text':' Forces the plan cache to be used even if there's only one solution available. Queries that','line_number':668,'multiline':False]
['text':' are ineligible will still not be cached.','line_number':669,'multiline':False]
['text':' This is state that is to be shared between the DocumentInternalSearchMongotRemote and','line_number':672,'multiline':False]
['text':' DocumentInternalSearchIdLookup stages (these stages are the result of desugaring $search)','line_number':673,'multiline':False]
['text':' during runtime.','line_number':674,'multiline':False]
['text':'*
         * Sets the value of _docsReturnedByIdLookup to 0.
         ','line_number':683,'multiline':True]
['text':'*
         * Increments the value of _docsReturnedByIdLookup by 1.
         ','line_number':690,'multiline':True]
['text':' When there is an extractable limit in the query, DocumentInternalSearchMongotRemote sends','line_number':698,'multiline':False]
['text':' a getMore to mongot that specifies how many more documents it needs to fulfill that','line_number':699,'multiline':False]
['text':' limit, and it incorporates the amount of documents returned by the','line_number':700,'multiline':False]
['text':' DocumentInternalSearchIdLookup stage into that value.','line_number':701,'multiline':False]
['text':' Performs the heavy work of checking whether an interrupt has occurred. Should only be called','line_number':718,'multiline':False]
['text':' when _interruptCounter has been decremented to zero.','line_number':719,'multiline':False]
['text':' Class responsible for tracking the collator used for comparisons. Specifically, this','line_number':722,'multiline':False]
['text':' collator enforces the following contract:','line_number':723,'multiline':False]
['text':' - When used in a replica set or a standalone, '_collator' will have the correct collation.','line_number':724,'multiline':False]
['text':' - When routing to a tracked collection, '_collator' will have the correct collation according','line_number':725,'multiline':False]
['text':' to the ChunkManager and can use it.','line_number':726,'multiline':False]
['text':' - When routing to an untracked collection, '_collator' will be set incorrectly as there is','line_number':727,'multiline':False]
['text':' no way to know the collation of an untracked collection on the router. However,','line_number':728,'multiline':False]
['text':' 'ignore' will be set to 'true', which indicates that we will not attach '_collator' when','line_number':729,'multiline':False]
['text':' routing commands to the target collection.','line_number':730,'multiline':False]
['text':' TODO SERVER-81991: Delete this class once we branch for 8.0.','line_number':731,'multiline':False]
['text':' If we are manually setting the collator, we shouldn't ignore it.','line_number':745,'multiline':False]
['text':' Used for all comparisons of Document/Value during execution of the aggregation operation.','line_number':767,'multiline':False]
['text':' Must not be changed after parsing a Pipeline with this ExpressionContext.','line_number':768,'multiline':False]
['text':' A map from namespace to the resolved namespace, in case any views are involved.','line_number':772,'multiline':False]
['text':' Instantiates an ExpressionContext which does not increment expression counters and does not','line_number':782,'multiline':False]
['text':' enforce FCV restrictions. It is used for implementing the `makeBlankExpressionContext()`','line_number':783,'multiline':False]
['text':' factory method.','line_number':784,'multiline':False]
['text':' We use this set to indicate whether or not a system variable was referenced in the query that','line_number':792,'multiline':False]
['text':' is being executed (if the variable was referenced, it is an element of this set).','line_number':793,'multiline':False]
['text':' namespace mongo','line_number':799,'multiline':False]
