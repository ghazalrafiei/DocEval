['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':'
     * Returns a ref to '_startWith' that can be swapped out with a new expression.
     ','line_number':125,'multiline':True]
['text':'*
     * Returns the 'as' path, and possibly the fields modified by an absorbed $unwind.
     ','line_number':148,'multiline':True]
['text':'*
     * Attempts to combine with a subsequent $unwind stage, setting the internal '_unwind' field.
     ','line_number':201,'multiline':True]
['text':' Should not be called; use serializeToArray instead.','line_number':222,'multiline':False]
['text':'*
     * Prepares the query to execute on the 'from' collection wrapped in a $match by using the
     * contents of '_frontier'.
     *
     * Fills 'cached' with any values that were retrieved from the cache.
     *
     * Returns boost::none if no query is necessary, i.e., all values were retrieved from the cache.
     * Otherwise, returns a query object.
     ','line_number':226,'multiline':True]
['text':'*
     * If we have internalized a $unwind, getNext() dispatches to this function.
     ','line_number':237,'multiline':True]
['text':'*
     * Perform a breadth-first search of the 'from' collection. '_frontier' should already be
     * populated with the values for the initial query. Populates '_discovered' with the result(s)
     * of the query.
     ','line_number':242,'multiline':True]
['text':'*
     * Populates '_frontier' with the '_startWith' value(s) from '_input' and then performs a
     * breadth-first search. Caller should check that _input is not boost::none.
     ','line_number':249,'multiline':True]
['text':'*
     * Updates '_cache' with 'result' appropriately, given that 'result' was retrieved when querying
     * for 'queried'.
     ','line_number':255,'multiline':True]
['text':'*
     * Assert that '_visited' and '_frontier' have not exceeded the maximum meory usage, and then
     * evict from '_cache' until this source is using less than '_maxMemoryUsageBytes'.
     ','line_number':261,'multiline':True]
['text':'*
     * Process 'result', adding it to '_visited' with the given 'depth', and updating '_frontier'
     * with the object's 'connectTo' values.
     *
     * Returns whether '_visited' was updated, and thus, whether the search should recurse.
     ','line_number':267,'multiline':True]
['text':'*
     * Returns true if we are not in a transaction.
     ','line_number':275,'multiline':True]
['text':' $graphLookup options.','line_number':280,'multiline':False]
['text':' The ExpressionContext used when performing aggregation pipelines against the '_from'','line_number':290,'multiline':False]
['text':' namespace.','line_number':291,'multiline':False]
['text':' The aggregation pipeline to perform against the '_from' namespace.','line_number':294,'multiline':False]
['text':' Track memory usage to ensure we don't exceed '_maxMemoryUsageBytes'.','line_number':299,'multiline':False]
['text':' Only used during the breadth-first search, tracks the set of values on the current frontier.','line_number':303,'multiline':False]
['text':' Tracks nodes that have been discovered for a given input. Keys are the '_id' value of the','line_number':306,'multiline':False]
['text':' document from the foreign collection, value is the document itself.  The keys are compared','line_number':307,'multiline':False]
['text':' using the simple collation.','line_number':308,'multiline':False]
['text':' Caches query results to avoid repeating any work. This structure is maintained across calls','line_number':311,'multiline':False]
['text':' to getNext().','line_number':312,'multiline':False]
['text':' When we have internalized a $unwind, we must keep track of the input document, since we will','line_number':315,'multiline':False]
['text':' need it for multiple "getNext()" calls.','line_number':316,'multiline':False]
['text':' Keep track of a $unwind that was absorbed into this stage.','line_number':319,'multiline':False]
['text':' If we absorbed a $unwind that specified 'includeArrayIndex', this is used to populate that','line_number':322,'multiline':False]
['text':' field, tracking how many results we've returned so far for the current input document.','line_number':323,'multiline':False]
['text':' Holds variables defined both in this stage and in parent pipelines. These are copied to the','line_number':326,'multiline':False]
['text':' '_fromExpCtx' ExpressionContext's 'variables' and 'variablesParseState' for use in the','line_number':327,'multiline':False]
['text':' '_fromPipeline' execution.','line_number':328,'multiline':False]
['text':' namespace mongo','line_number':333,'multiline':False]
