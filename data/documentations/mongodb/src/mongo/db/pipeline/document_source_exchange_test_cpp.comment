['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':'*
 * This class is used for an Exchange consumer to temporarily relinquish control of a mutex
 * while it's blocked.
 ','line_number':71,'multiline':True]
['text':'*
 * Used to keep track of each client and operation context.
 ','line_number':95,'multiline':True]
['text':' namespace','line_number':104,'multiline':False]
['text':' Upon creation, the Exchange object detaches the pipeline from the operation context, and, as','line_number':192,'multiline':False]
['text':' a result, the optCtx on the ExpressionContext is reset to nullptr. So, we need to preserve','line_number':193,'multiline':False]
['text':' the opCtx in order to pass it to the getNext call below, which will re-attach the pipeline to','line_number':194,'multiline':False]
['text':' the provided opCtx.','line_number':195,'multiline':False]
['text':' The consumer 1 bails out early wihout consuming all its documents.','line_number':282,'multiline':False]
['text':' Pretend we have seen all docs.','line_number':284,'multiline':False]
['text':' This helps randomizing thread scheduling forcing different threads to load','line_number':498,'multiline':False]
['text':' buffers. The sleep API is inherently imprecise so we cannot guarantee 100%','line_number':499,'multiline':False]
['text':' reproducibility.','line_number':500,'multiline':False]
['text':' Tiny buffer so if there are deadlocks possible they reproduce more often.','line_number':532,'multiline':False]
['text':' An "artifical" mutex that's not actually necessary for thread safety. We enforce that each','line_number':535,'multiline':False]
['text':' thread holds this while it calls getNext(). This is to simulate the case where a thread may','line_number':536,'multiline':False]
['text':' hold some "real" resources which need to be yielded while waiting, such as the Session, or','line_number':537,'multiline':False]
['text':' the locks held in a transaction.','line_number':538,'multiline':False]
['text':' Will acquire 'artificalGlobalMutex'. Within getNext() it will be released and','line_number':572,'multiline':False]
['text':' reacquired by the MutexYielder if the Exchange has to block.','line_number':573,'multiline':False]
['text':' This helps randomizing thread scheduling forcing different threads to load','line_number':581,'multiline':False]
['text':' buffers. The sleep API is inherently imprecise so we cannot guarantee 100%','line_number':582,'multiline':False]
['text':' reproducibility.','line_number':583,'multiline':False]
['text':' This helps randomizing thread scheduling forcing different threads to load','line_number':640,'multiline':False]
['text':' buffers. The sleep API is inherently imprecise so we cannot guarantee 100%','line_number':641,'multiline':False]
['text':' reproducibility.','line_number':642,'multiline':False]
['text':'','line_number':782,'multiline':False]
['text':' namespace mongo','line_number':795,'multiline':False]
