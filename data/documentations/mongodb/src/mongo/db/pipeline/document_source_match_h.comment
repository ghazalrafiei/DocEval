['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':' Raw new is needed to access non-public constructors.','line_number':74,'multiline':False]
['text':'*
     * Convenience method for creating a $match stage.
     ','line_number':79,'multiline':True]
['text':'*
     * Parses a $match stage from 'elem'.
     ','line_number':85,'multiline':True]
['text':'*
     * Returns a new DocumentSourceMatch with a MatchExpression that, if executed on the
     * sub-document at 'path', is equivalent to 'expression'.
     *
     * For example, if the original expression is {$and: [{'a.b': {$gt: 0}}, {'a.d': {$eq: 3}}]},
     * the new $match will have the expression {$and: [{b: {$gt: 0}}, {d: {$eq: 3}}]} after
     * descending on the path 'a'.
     *
     * Should be called _only_ on a MatchExpression that is a predicate on 'path', or subfields of
     * 'path'. It is also invalid to call this method on an expression including a $elemMatch on
     * 'path', for example: {'path': {$elemMatch: {'subfield': 3}}}
     ','line_number':91,'multiline':True]
['text':'*
     * Returns a pair of pointers to $match stages, either of which can be null. The first entry in
     * the pair is a $match stage that can be moved before this stage, the second is a $match stage
     * that must remain after this stage.
     ','line_number':108,'multiline':True]
['text':'*
     * Parses 'filter' and resets the member of this source to be consistent with the new
     * MatchExpression. Takes ownership of 'filter'.
     ','line_number':118,'multiline':True]
['text':'*
     * Attempts to combine with any subsequent $match stages, joining the query objects with a
     * $and and flattening top-level $and's in the process.
     ','line_number':142,'multiline':True]
['text':' This stage does not modify or rename any paths.','line_number':154,'multiline':False]
['text':'*
     * Access the MatchExpression stored inside the DocumentSourceMatch. Does not release
     * ownership.
     ','line_number':162,'multiline':True]
['text':'*
     * Combines the filter in this $match with the filter of 'other' using a $and, updating this
     * match in place.
     ','line_number':170,'multiline':True]
['text':'*
     * Returns the query in MatchExpression syntax.
     ','line_number':179,'multiline':True]
['text':'* Returns the portion of the match that can safely be promoted to before a $redact.
     *  If this returns an empty BSONObj, no part of this match may safely be promoted.
     *
     *  To be safe to promote, removing a field from a document to be matched must not cause
     *  that document to be accepted when it would otherwise be rejected. As an example,
     *  {name: {$ne: "bob smith"}} accepts documents without a name field, which means that
     *  running this filter before a redact that would remove the name field would leak
     *  information. On the other hand, {age: {$gt:5}} is ok because it doesn't accept documents
     *  that have had their age field removed.
     ','line_number':185,'multiline':True]
['text':'*
     * Attempt to split this $match into two stages, where the first is not dependent upon any
     * path from 'fields', and where applying them in sequence is equivalent to applying this
     * stage once.
     *
     * Will return two intrusive_ptrs to new $match stages, where the first pointer is
     * independent of 'fields', and the second is dependent. Either pointer may be null, so be
     * sure to check the return value.
     *
     * For example, {$match: {a: "foo", "b.c": 4}} split by "b" will return pointers to two
     * stages:
     * {$match: {a: "foo"}}, and {$match: {"b.c": 4}}.
     *
     * The 'renames' structure maps from a field to an alias that should be used in the
     * independent portion of the match. For example, suppose that we split by fields "a" with
     * the rename "b" => "c". The match {$match: {a: "foo", b: "bar", z: "baz"}} will split into
     * {$match: {c: "bar", z: "baz"}} and {$match: {a: "foo"}}.
     ','line_number':202,'multiline':True]
['text':' TODO(SERVER-48830): Remove need for holding serialized version of the MatchExpression.','line_number':257,'multiline':False]
['text':' namespace mongo','line_number':264,'multiline':False]
