['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':' txnOpindex ','line_number':73,'multiline':True]
['text':' uuid ','line_number':74,'multiline':True]
['text':' eventIdentifier ','line_number':75,'multiline':True]
['text':' Test serialization/parsing through Document.','line_number':89,'multiline':False]
['text':' Test serialization/parsing through BSON.','line_number':94,'multiline':False]
['text':' txnOpIndex ','line_number':104,'multiline':True]
['text':' uuid ','line_number':105,'multiline':True]
['text':' eventIdentifier ','line_number':106,'multiline':True]
['text':' Test serialization/parsing through Document.','line_number':108,'multiline':False]
['text':' Test serialization/parsing through BSON.','line_number':113,'multiline':False]
['text':' txnOpIndex ','line_number':125,'multiline':True]
['text':' Test serialization/parsing through Document.','line_number':129,'multiline':False]
['text':' Test serialization/parsing through BSON.','line_number':134,'multiline':False]
['text':' version ','line_number':142,'multiline':True]
['text':' txnOpIndex ','line_number':142,'multiline':True]
['text':' version ','line_number':150,'multiline':True]
['text':' txnOpIndex ','line_number':150,'multiline':True]
['text':' version ','line_number':160,'multiline':True]
['text':' txnOpIndex ','line_number':161,'multiline':True]
['text':' Can parse a v2 token without a UUID but with an eventIdentifier.','line_number':166,'multiline':False]
['text':' version ','line_number':175,'multiline':True]
['text':' txnOpIndex ','line_number':175,'multiline':True]
['text':' High water mark token cannot have an eventIdentifier, uuid or txnOpIndex.','line_number':186,'multiline':False]
['text':' Version 2 or after resume tokens should always have eventIdentifier.','line_number':204,'multiline':False]
['text':' version ','line_number':206,'multiline':True]
['text':' txnOpIndex ','line_number':206,'multiline':True]
['text':' If eventIdentifier is present, it has to be an object.','line_number':209,'multiline':False]
['text':' Missing document.','line_number':242,'multiline':False]
['text':' Missing data field.','line_number':244,'multiline':False]
['text':' Wrong type data field','line_number':246,'multiline':False]
['text':' Valid data field, but wrong type typeBits.','line_number':254,'multiline':False]
['text':' version ','line_number':257,'multiline':True]
['text':' uuid ','line_number':258,'multiline':True]
['text':' eventIdentifier ','line_number':259,'multiline':True]
['text':' Valid data, wrong typeBits bindata type.','line_number':265,'multiline':False]
['text':' txnOpIndex ','line_number':274,'multiline':True]
['text':' uuid ','line_number':275,'multiline':True]
['text':' eventIdentifier ','line_number':276,'multiline':True]
['text':' Data of correct type, but empty.','line_number':283,'multiline':False]
['text':' Data of correct type with a bunch of zeros.','line_number':287,'multiline':False]
['text':' Data of correct type with a bunch of nonsense.','line_number':292,'multiline':False]
['text':' Valid data, bad typeBits; note that an all-zeros typebits is valid so it is not tested here.','line_number':297,'multiline':False]
['text':' CType::kStringLike','line_number':304,'multiline':False]
['text':' Non-null terminated','line_number':305,'multiline':False]
['text':' invalidStringToken.getData();','line_number':309,'multiline':False]
['text':' version ','line_number':329,'multiline':True]
['text':' txnOpIndex ','line_number':330,'multiline':True]
['text':' This one with version 0 should succeed. Version 0 cannot encode the fromInvalidate bool, so','line_number':335,'multiline':False]
['text':' we expect it to be set to the default 'kNotFromInvalidate' after serialization.','line_number':336,'multiline':False]
['text':' Version 1 or newer should include the 'fromInvalidate' bool through serialization.','line_number':343,'multiline':False]
['text':' With version 3 it should fail - the maximum supported version is 2.','line_number':354,'multiline':False]
['text':' For version 0, the 'tokenType' field is not encoded. We expect it to default from the value','line_number':359,'multiline':False]
['text':' 'kHighWaterMarkToken' back to 'kEventToken' after serialization.','line_number':360,'multiline':False]
['text':' version ','line_number':362,'multiline':True]
['text':' txnOpIndex ','line_number':363,'multiline':True]
['text':' uuid ','line_number':364,'multiline':True]
['text':' eventIdentifier ','line_number':365,'multiline':True]
['text':' Version 1 should include the 'tokenType' field through serialization.','line_number':374,'multiline':False]
['text':' A non-TokenType value in the 'tokenType' field should fail to decode.','line_number':385,'multiline':False]
['text':' With version 3 it should fail - the maximum supported version is 2.','line_number':390,'multiline':False]
['text':' txnOpIndex ','line_number':400,'multiline':True]
['text':' uuid ','line_number':401,'multiline':True]
['text':' eventIdentifier ','line_number':402,'multiline':True]
['text':' Should round trip with a non-negative txnOpIndex.','line_number':404,'multiline':False]
['text':' Should fail with a negative txnOpIndex.','line_number':409,'multiline':False]
['text':' Make sure that the string encoding of the resume tokens will compare in the correct order,','line_number':417,'multiline':False]
['text':' namely timestamp, version, txnOpIndex, uuid, then eventIdentifier.','line_number':418,'multiline':False]
['text':' Generate two different UUIDs, and figure out which one is smaller. Store the smaller one in','line_number':424,'multiline':False]
['text':' 'lower_uuid'.','line_number':425,'multiline':False]
['text':' Test using only Timestamps.','line_number':443,'multiline':False]
['text':' Test using Timestamps and version.','line_number':451,'multiline':False]
['text':' V2 and newer tokens require an eventIdentifier.','line_number':453,'multiline':False]
['text':' Test that the Timestamp is more important than the version, txnOpIndex, UUID and','line_number':457,'multiline':False]
['text':' eventIdentifier.','line_number':458,'multiline':False]
['text':' Test that when the Timestamp is the same, the version breaks the tie.','line_number':470,'multiline':False]
['text':' Test that when the Timestamp and version are the same, the txnOpIndex breaks the tie.','line_number':478,'multiline':False]
['text':' Test that when the Timestamp, version, and txnOpIndex are the same, the UUID breaks the tie.','line_number':484,'multiline':False]
['text':' Test that when the Timestamp, version, txnOpIndex, and UUID are the same, the eventIdentifier','line_number':496,'multiline':False]
['text':' breaks the tie.','line_number':497,'multiline':False]
['text':' Test that v2 eventIdentifiers break the tie and sort correctly.','line_number':507,'multiline':False]
['text':' Large 'ResumeTokenData::fragmentNum' value will be serialized as a negative integer.','line_number':544,'multiline':False]
['text':' namespace','line_number':558,'multiline':False]
['text':' namespace mongo','line_number':559,'multiline':False]
