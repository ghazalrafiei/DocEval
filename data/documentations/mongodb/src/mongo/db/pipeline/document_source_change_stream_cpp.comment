['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':' The $changeStream stage is an alias for many stages.','line_number':79,'multiline':False]
['text':' If we have been permitted to run on admin, 'allChangesForCluster' must be true.','line_number':138,'multiline':False]
['text':' We never expect this method to be called except when building a change stream pipeline.','line_number':147,'multiline':False]
['text':' If 'showSystemEvents' is set, return a less stringent regex.','line_number':151,'multiline':False]
['text':' Match the target namespace exactly.','line_number':163,'multiline':False]
['text':' Change streams will only be enabled in serverless when multitenancy and','line_number':165,'multiline':False]
['text':' featureFlag are on, therefore we don't have a tenantid prefix.','line_number':166,'multiline':False]
['text':' Match all namespaces that start with db name, followed by ".", then NOT followed by','line_number':171,'multiline':False]
['text':' '$' or 'system.' unless 'showSystemEvents' is set.','line_number':172,'multiline':False]
['text':' Change streams will only be enabled in serverless when multitenancy and','line_number':174,'multiline':False]
['text':' featureFlag are on, therefore we don't have a tenantid prefix.','line_number':175,'multiline':False]
['text':' Match all namespaces that start with any db name other than admin, config, or local,','line_number':180,'multiline':False]
['text':' followed by ".", then NOT '$' or 'system.' unless 'showSystemEvents' is set.','line_number':181,'multiline':False]
['text':' For a single database, match any events on the system.views collection on that','line_number':193,'multiline':False]
['text':' database.','line_number':194,'multiline':False]
['text':' Match all system.views collections on all databases.','line_number':200,'multiline':False]
['text':' We should never attempt to generate this regex for a single-collection stream.','line_number':203,'multiline':False]
['text':' Match the target collection exactly.','line_number':214,'multiline':False]
['text':' Match any collection; database filtering will be done elsewhere.','line_number':218,'multiline':False]
['text':' Match the target database command namespace exactly.','line_number':232,'multiline':False]
['text':' Match all command namespaces on any database.','line_number':238,'multiline':False]
['text':' If we do not have an explicit starting point, we should start from the latest majority','line_number':259,'multiline':False]
['text':' committed operation. If we are on mongoS and do not have a starting point, set it to the','line_number':260,'multiline':False]
['text':' current clusterTime so that all shards start in sync.','line_number':261,'multiline':False]
['text':' We always start one tick beyond the most recent operation, to ensure that the stream does not','line_number':269,'multiline':False]
['text':' return it.','line_number':270,'multiline':False]
['text':' Make sure that it is legal to run this $changeStream before proceeding.','line_number':283,'multiline':False]
['text':' If the user did not specify an explicit starting point, set it to the current time.','line_number':286,'multiline':False]
['text':' Make sure we update the 'startAtOperationTime' in the 'spec' so that we serialize the','line_number':288,'multiline':False]
['text':' correct start point when sending it to the shards.','line_number':289,'multiline':False]
['text':' If the stream's default version differs from the client's token version, adopt the higher.','line_number':293,'multiline':False]
['text':' This is the token version that will be used once the stream has passed the resume token.','line_number':294,'multiline':False]
['text':' If the user explicitly requested to resume from a high water mark token, but its version','line_number':299,'multiline':False]
['text':' differs from the version chosen above, regenerate it with the new version. There is no need','line_number':300,'multiline':False]
['text':' for a resumed HWM stream to adopt the old token version for events at the same clusterTime.','line_number':301,'multiline':False]
['text':' Save a copy of the spec on the expression context. Used when building the oplog filter.','line_number':310,'multiline':False]
['text':' Obtain the resume token from the spec. This will be used when building the pipeline.','line_number':320,'multiline':False]
['text':' Unfold the $changeStream into its constituent stages and add them to the pipeline.','line_number':323,'multiline':False]
['text':' The resume stage must come after the check invalidate stage so that the former can determine','line_number':332,'multiline':False]
['text':' whether the event that matches the resume token should be followed by an "invalidate" event.','line_number':333,'multiline':False]
['text':' Always include a DSCSCheckResumability stage, both to verify that there is enough history to','line_number':336,'multiline':False]
['text':' cover the change stream's starting point, and to swallow all events up to the resume point.','line_number':337,'multiline':False]
['text':' If the pipeline is built on MongoS, we check for topology change events here. If a topology','line_number':340,'multiline':False]
['text':' change event is detected, this stage forwards the event directly to the executor via an','line_number':341,'multiline':False]
['text':' exception (bypassing the rest of the pipeline). MongoS must see all topology change events,','line_number':342,'multiline':False]
['text':' so it's important that this stage occurs before any filtering is performed.','line_number':343,'multiline':False]
['text':' If 'fullDocumentBeforeChange' is not set to 'off', add the DSCSAddPreImage stage into the','line_number':348,'multiline':False]
['text':' pipeline. We place this stage here so that any $match stages which follow the $changeStream','line_number':349,'multiline':False]
['text':' pipeline may be able to skip ahead of the DSCSAddPreImage stage. This allows a whole-db or','line_number':350,'multiline':False]
['text':' whole-cluster stream to run on an instance where only some collections have pre-images','line_number':351,'multiline':False]
['text':' enabled, so long as the user filters for only those namespaces.','line_number':352,'multiline':False]
['text':' If 'fullDocument' is not set to "default", add the DSCSAddPostImage stage here.','line_number':357,'multiline':False]
['text':' If the pipeline is built on MongoS, then the DSCSHandleTopologyChange stage acts as the','line_number':362,'multiline':False]
['text':' split point for the pipline. All stages before this stages will run on shards and all','line_number':363,'multiline':False]
['text':' stages after and inclusive of this stage will run on the MongoS.','line_number':364,'multiline':False]
['text':' If the resume point is an event, we must include a DSCSEnsureResumeTokenPresent stage.','line_number':369,'multiline':False]
['text':' If 'showExpandedEvents' is NOT set, add a filter that returns only classic change events.','line_number':374,'multiline':False]
['text':' We can only run on a replica set, or through mongoS. Confirm that this is the case.','line_number':385,'multiline':False]
['text':' If 'allChangesForCluster' is true, the stream must be opened on the 'admin' database with','line_number':391,'multiline':False]
['text':' {aggregate: 1}.','line_number':392,'multiline':False]
['text':' Prevent $changeStream from running on internal databases. A stream may run against the','line_number':400,'multiline':False]
['text':' 'admin' database iff 'allChangesForCluster' is true. A stream may run against the 'config'','line_number':401,'multiline':False]
['text':' database iff 'allowToRunOnConfigDB' is true.','line_number':402,'multiline':False]
['text':' Prevent $changeStream from running on internal collections in any database. A stream may run','line_number':411,'multiline':False]
['text':' against the internal collections iff 'allowToRunOnSystemNS' is true and the stream is not','line_number':412,'multiline':False]
['text':' opened through a mongos process.','line_number':413,'multiline':False]
['text':' If we are resuming a single-collection stream, the resume token should always contain a','line_number':441,'multiline':False]
['text':' UUID unless the token is from endOfTransaction event or a high water mark.','line_number':442,'multiline':False]
['text':' namespace mongo','line_number':453,'multiline':False]
