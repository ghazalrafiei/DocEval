['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':' If sum is +=INF and addend is +=NAN, 'nonDecimalTotal' becomes NAN after adding','line_number':87,'multiline':False]
['text':' INF and NAN, which is different from the unsharded behavior. So, does not add','line_number':88,'multiline':False]
['text':' 'addend' when sum == INF and addend == NAN. Does not add this logic to','line_number':89,'multiline':False]
['text':' 'DoubleDoubleSummation' because this behavior is specific to sharded $sum.','line_number':90,'multiline':False]
['text':' Ignore non-numeric inputs when not merging.','line_number':106,'multiline':False]
['text':' The merge-side must be ready to process the full state of a partial sum from a','line_number':112,'multiline':False]
['text':' shard-side.','line_number':113,'multiline':False]
['text':' Upgrade to the widest type required to hold the result.','line_number':122,'multiline':False]
['text':' Keep the nonDecimalTotal's type so that the type information can be serialized too for','line_number':125,'multiline':False]
['text':' 'toBeMerged' scenarios.','line_number':126,'multiline':False]
['text':' The partial sum is serialized in the following form.','line_number':158,'multiline':False]
['text':'','line_number':159,'multiline':False]
['text':' [nonDecimalTotalType, sum, addend, decimalTotal]','line_number':160,'multiline':False]
['text':'','line_number':161,'multiline':False]
['text':' Presence of the 'decimalTotal' element indicates that the total type of the partial sum','line_number':162,'multiline':False]
['text':' is 'NumberDecimal'.','line_number':163,'multiline':False]
['text':' Serialize the full state of the partial sum result to avoid incorrect results for certain','line_number':174,'multiline':False]
['text':' data set which are composed of 'NumberDecimal' values which cancel each other when being','line_number':175,'multiline':False]
['text':' summed and other numeric type values which contribute mostly to sum result and a partial sum','line_number':176,'multiline':False]
['text':' of some of 'NumberDecimal' values and other numeric type values happen to lose precision','line_number':177,'multiline':False]
['text':' because 'NumberDecimal' can't represent the partial sum precisely, or the other way around.','line_number':178,'multiline':False]
['text':'','line_number':179,'multiline':False]
['text':' For example, [{n: 1e+34}, {n: NumberDecimal("0.1")}, {n: NumberDecimal("0.11")}, {n:','line_number':180,'multiline':False]
['text':' -1e+34}].','line_number':181,'multiline':False]
['text':'','line_number':182,'multiline':False]
['text':' More fundamentally, addition is neither commutative nor associative on computer. So, it's','line_number':183,'multiline':False]
['text':' desirable to keep the full state of the partial sum along the way to maintain the result as','line_number':184,'multiline':False]
['text':' close to the real truth as possible until all additions are done.','line_number':185,'multiline':False]
['text':' Sum doesn't fit a NumberLong, so return a NumberDouble instead.','line_number':199,'multiline':False]
['text':' This is a fixed size AccumulatorState so we never need to update this.','line_number':212,'multiline':False]
['text':' namespace mongo','line_number':222,'multiline':False]
