['text':'*
 *    Copyright (C) 2022-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':' Placeholder TransactionOperations::LogApplyOpsFn implementation.','line_number':65,'multiline':False]
['text':' Empty pre-images and post-images do not count towards operation size.','line_number':84,'multiline':False]
['text':' The getOperationsForOpObserver() method supports integration with','line_number':89,'multiline':False]
['text':' existing BatchedWriteContext, TransactionParticipant usage and OpObserver','line_number':90,'multiline':False]
['text':' interfaces.','line_number':91,'multiline':False]
['text':' Use clear() to reset container state.','line_number':100,'multiline':False]
['text':' Make sure failing to add 3,4,5 left 3 as in-use.','line_number':136,'multiline':False]
['text':' Make sure failing to add 3,4,5 left 4 and 5 as available.','line_number':139,'multiline':False]
['text':' Make sure we detect a collision in a non-first item in the new statement ID list.','line_number':142,'multiline':False]
['text':' Make sure can still add 6 and 9, which weren't added by the failed op5.','line_number':145,'multiline':False]
['text':' The size of 'op1' is added to the total byte count but it does not have','line_number':152,'multiline':False]
['text':' the additional criteria to be added to 'numberOfPrePostImages'.','line_number':153,'multiline':False]
['text':' See SERVER-58694.','line_number':154,'multiline':False]
['text':' Set "pre-image for retryable writes" flag to include the pre-image in','line_number':163,'multiline':False]
['text':' the pre/post image count.','line_number':164,'multiline':False]
['text':' Pre/post image counter should be reset after clear().','line_number':176,'multiline':False]
['text':' Pre/post image counter should be reset after clear().','line_number':192,'multiline':False]
['text':' Pre/post image counter should be reset after clear().','line_number':219,'multiline':False]
['text':' This operation's UUID will not be included in the getCollectionUUIDs() result.','line_number':246,'multiline':False]
['text':' This operation has no UUID and is added to ensure operations without UUIDs','line_number':251,'multiline':False]
['text':' are handled properly.','line_number':252,'multiline':False]
['text':'oplogSlots=','line_number':271,'multiline':True]
['text':'prepare=','line_number':274,'multiline':True]
['text':'oplogSlots=','line_number':287,'multiline':True]
['text':'prepare=','line_number':290,'multiline':True]
['text':' required for DurableReplOperation::serialize()','line_number':297,'multiline':False]
['text':' required for DurableReplOperation::serialize()','line_number':299,'multiline':False]
['text':' required for DurableReplOperation::serialize()','line_number':300,'multiline':False]
['text':' required for DurableReplOperation::serialize()','line_number':304,'multiline':False]
['text':' required for DurableReplOperation::serialize()','line_number':306,'multiline':False]
['text':' required for DurableReplOperation::serialize()','line_number':307,'multiline':False]
['text':' We have to allocate as many oplog slots as operations even though only','line_number':310,'multiline':False]
['text':' one applyOps entry will be generated.','line_number':311,'multiline':False]
['text':'term=','line_number':313,'multiline':True]
['text':'term=','line_number':314,'multiline':True]
['text':'prepare=','line_number':319,'multiline':True]
['text':' first oplog slot','line_number':326,'multiline':False]
['text':' required for DurableReplOperation::serialize()','line_number':336,'multiline':False]
['text':' required for DurableReplOperation::serialize()','line_number':338,'multiline':False]
['text':' required for DurableReplOperation::serialize()','line_number':339,'multiline':False]
['text':' required for DurableReplOperation::serialize()','line_number':343,'multiline':False]
['text':' required for DurableReplOperation::serialize()','line_number':345,'multiline':False]
['text':' required for DurableReplOperation::serialize()','line_number':346,'multiline':False]
['text':' We have to allocate as many oplog slots as operations even though only','line_number':349,'multiline':False]
['text':' one applyOps entry will be generated.','line_number':350,'multiline':False]
['text':'term=','line_number':352,'multiline':True]
['text':'term=','line_number':353,'multiline':True]
['text':' Restrict each applyOps entry to holding at most one operation.','line_number':355,'multiline':False]
['text':'oplogEntryCountLimit=','line_number':358,'multiline':True]
['text':'oplogEntrySizeLimitBytes=','line_number':359,'multiline':True]
['text':'prepare=','line_number':360,'multiline':True]
['text':' Check first applyOps entry.','line_number':367,'multiline':False]
['text':' Check second applyOps entry.','line_number':372,'multiline':False]
['text':' required for DurableReplOperation::serialize()','line_number':382,'multiline':False]
['text':' required for DurableReplOperation::serialize()','line_number':384,'multiline':False]
['text':' required for DurableReplOperation::serialize()','line_number':385,'multiline':False]
['text':' required for DurableReplOperation::serialize()','line_number':389,'multiline':False]
['text':' required for DurableReplOperation::serialize()','line_number':391,'multiline':False]
['text':' required for DurableReplOperation::serialize()','line_number':392,'multiline':False]
['text':' We have to allocate as many oplog slots as operations even though only','line_number':395,'multiline':False]
['text':' one applyOps entry will be generated.','line_number':396,'multiline':False]
['text':'term=','line_number':398,'multiline':True]
['text':'term=','line_number':399,'multiline':True]
['text':' Restrict each applyOps entry to holding at most one operation.','line_number':401,'multiline':False]
['text':'oplogEntryCountLimit=','line_number':404,'multiline':True]
['text':'oplogEntrySizeLimitBytes=','line_number':405,'multiline':True]
['text':'prepare=','line_number':407,'multiline':True]
['text':' Check first applyOps entry.','line_number':414,'multiline':False]
['text':' Check second applyOps entry.','line_number':419,'multiline':False]
['text':' Setting the "needs retry image" flag on 'op' forces getApplyOpsInfo()','line_number':430,'multiline':False]
['text':' to request an additional slot, which will not be available due to an','line_number':431,'multiline':False]
['text':' insufficiently sized 'oplogSlots' array.','line_number':432,'multiline':False]
['text':' required for DurableReplOperation::serialize()','line_number':435,'multiline':False]
['text':' required for DurableReplOperation::serialize()','line_number':437,'multiline':False]
['text':' required for DurableReplOperation::serialize()','line_number':438,'multiline':False]
['text':' We allocated a slot for the operation but not for the pre-image.','line_number':441,'multiline':False]
['text':'term=','line_number':443,'multiline':True]
['text':'prepare=','line_number':448,'multiline':True]
['text':' Setting the "needs retry image" flag on 'op' forces getApplyOpsInfo()','line_number':454,'multiline':False]
['text':' to request an additional slot, which will not be available due to an','line_number':455,'multiline':False]
['text':' insufficiently sized 'oplogSlots' array.','line_number':456,'multiline':False]
['text':' required for DurableReplOperation::serialize()','line_number':459,'multiline':False]
['text':' required for DurableReplOperation::serialize()','line_number':461,'multiline':False]
['text':' required for DurableReplOperation::serialize()','line_number':462,'multiline':False]
['text':' We allocated a slot for the operation but not for the pre-image.','line_number':465,'multiline':False]
['text':'term=','line_number':467,'multiline':True]
['text':'term=','line_number':468,'multiline':True]
['text':'prepare=','line_number':473,'multiline':True]
['text':' required for DurableReplOperation::serialize()','line_number':489,'multiline':False]
['text':' required for DurableReplOperation::serialize()','line_number':491,'multiline':False]
['text':' required for DurableReplOperation::serialize()','line_number':492,'multiline':False]
['text':' We allocate two oplog slots and confirm that the second oplog slot is assigned','line_number':495,'multiline':False]
['text':' to the only applyOps entry','line_number':496,'multiline':False]
['text':'term=','line_number':498,'multiline':True]
['text':'term=','line_number':499,'multiline':True]
['text':'prepare=','line_number':504,'multiline':True]
['text':' last oplog slot','line_number':508,'multiline':False]
['text':'prepare=','line_number':521,'multiline':True]
['text':' The Tenant ID contained in the generated applyOps oplog entry should match that','line_number':540,'multiline':False]
['text':' of the first operation.','line_number':541,'multiline':False]
['text':' Add a small operation. This should be packed into a single applyOps entry.','line_number':546,'multiline':False]
['text':'term=','line_number':557,'multiline':True]
['text':'prepare=','line_number':562,'multiline':True]
['text':' Check applyOps oplog entry to ensure it has all the basic details.','line_number':568,'multiline':False]
['text':' The Tenant ID contained in the generated applyOps oplog entry should match that','line_number':603,'multiline':False]
['text':' of the first operation.','line_number':604,'multiline':False]
['text':' Add three operations. This helps us check fields for the first, middle, and last entries','line_number':609,'multiline':False]
['text':' in the applyOps chain.','line_number':610,'multiline':False]
['text':'term=','line_number':639,'multiline':True]
['text':'term=','line_number':640,'multiline':True]
['text':'term=','line_number':641,'multiline':True]
['text':' one operation per applyOps entry','line_number':644,'multiline':False]
['text':'prepare=','line_number':646,'multiline':True]
['text':' Check applyOps oplog entry to ensure it has all the basic details.','line_number':652,'multiline':False]
['text':' First entry should have a null op time. Following entries should match the result','line_number':668,'multiline':False]
['text':' this function returned previously.','line_number':669,'multiline':False]
['text':' Last operation in applyOps chain is formatted slightly differently from','line_number':685,'multiline':False]
['text':' preceding entries.','line_number':686,'multiline':False]
['text':' The Tenant ID contained in the generated applyOps oplog entry should match that','line_number':725,'multiline':False]
['text':' of the first operation.','line_number':726,'multiline':False]
['text':' Add three operations. This helps us check fields for the first, middle, and last entries','line_number':731,'multiline':False]
['text':' in the applyOps chain.','line_number':732,'multiline':False]
['text':'term=','line_number':761,'multiline':True]
['text':'term=','line_number':762,'multiline':True]
['text':'term=','line_number':763,'multiline':True]
['text':' one operation per applyOps entry','line_number':766,'multiline':False]
['text':'prepare=','line_number':768,'multiline':True]
['text':' Check applyOps oplog entry to ensure it has all the basic details.','line_number':774,'multiline':False]
['text':' First entry should have a null op time. Following entries should match the result','line_number':791,'multiline':False]
['text':' this function returned previously.','line_number':792,'multiline':False]
['text':' Last operation in applyOps chain is formatted slightly differently from','line_number':808,'multiline':False]
['text':' preceding entries.','line_number':809,'multiline':False]
['text':'prepare=','line_number':853,'multiline':True]
['text':' Insert extra operation to ensure logOplogEntries() catches mismatch','line_number':859,'multiline':False]
['text':' between operations contained in 'ops' and 'ApplyOpsInfo::applyOpsEntries'.','line_number':860,'multiline':False]
['text':' This should set off a tripwire assertion.','line_number':864,'multiline':False]
['text':' During normal operation, the grouping of operations passed to logOplogEntries()','line_number':869,'multiline':False]
['text':' should have been sized appropriately by getApplyOpsInfo() to not exceed the','line_number':870,'multiline':False]
['text':' internal limits for BSONObjBuilder and BSONArrayBuilder.','line_number':871,'multiline':False]
['text':' In the unlikely case that we exceed the BSONObj limits, logOplogEntries() should throw','line_number':872,'multiline':False]
['text':' a TransactionTooLarge exception.','line_number':873,'multiline':False]
['text':' Add two large 15 MB operations.','line_number':879,'multiline':False]
['text':'term=','line_number':887,'multiline':True]
['text':' Provide a size limit that is twice what the BSONObjBuilder can accommodate','line_number':890,'multiline':False]
['text':' to getApplyOps() so that both large operations will be allocated to the','line_number':891,'multiline':False]
['text':' same applyOps entry.','line_number':892,'multiline':False]
['text':'prepare=','line_number':896,'multiline':True]
['text':' Add a small operation with a pre images.','line_number':911,'multiline':False]
['text':'term=','line_number':921,'multiline':True]
['text':'term=','line_number':922,'multiline':True]
['text':'prepare=','line_number':927,'multiline':True]
['text':' getApplyOpsInfos() expects 2 slots to be used because of pre/post images.','line_number':928,'multiline':False]
['text':' Check image bundle.','line_number':945,'multiline':False]
['text':' Timestamp in image bundle should be based on optime returned by 'logApplyOps'.','line_number':946,'multiline':False]
['text':' Add a small operation with a pre images.','line_number':956,'multiline':False]
['text':'term=','line_number':966,'multiline':True]
['text':'term=','line_number':967,'multiline':True]
['text':'prepare=','line_number':972,'multiline':True]
['text':' getApplyOpsInfos() expects 2 slots to be used because of pre/post images.','line_number':973,'multiline':False]
['text':' Check image bundle.','line_number':990,'multiline':False]
['text':' Timestamp in image bundle should be based on optime returned by 'logApplyOps'.','line_number':991,'multiline':False]
['text':' Refer to small transaction test case in retryable_findAndModify_validation.js.','line_number':998,'multiline':False]
['text':' Add two small operations with pre/post images.','line_number':1002,'multiline':False]
['text':'term=','line_number':1020,'multiline':True]
['text':'term=','line_number':1021,'multiline':True]
['text':'prepare=','line_number':1026,'multiline':True]
['text':' getApplyOpsInfos() expects 2 slots to be used because of pre/post images.','line_number':1027,'multiline':False]
['text':' Refer to large transaction test case in retryable_findAndModify_validation.js.','line_number':1040,'multiline':False]
['text':' Add two large 15MB operations with pre/post images.','line_number':1044,'multiline':False]
['text':' Need four oplog slots because getApplyOpsInfo() needs two for each','line_number':1061,'multiline':False]
['text':' applyOps entry and one for each image.','line_number':1062,'multiline':False]
['text':'term=','line_number':1064,'multiline':True]
['text':'term=','line_number':1065,'multiline':True]
['text':'term=','line_number':1066,'multiline':True]
['text':'term=','line_number':1067,'multiline':True]
['text':'prepare=','line_number':1072,'multiline':True]
['text':' getApplyOpsInfos() expects four slots to be used because of pre/post images and','line_number':1073,'multiline':False]
['text':' multiple applyOps entries.','line_number':1074,'multiline':False]
['text':' namespace','line_number':1087,'multiline':False]
['text':' namespace mongo','line_number':1088,'multiline':False]
