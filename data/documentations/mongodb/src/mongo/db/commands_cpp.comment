['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':'*
 * Transitionally, these are all also co-owned by a singleton pool to avoid
 * collisions between commands of the same name but in different cluster roles.
 * When we have metric trees separated by Service, these will be constructed
 * to live under the right tree.
 ','line_number':101,'multiline':True]
['text':' Returns true if found to be authorized, false if undecided. Throws if unauthorized.','line_number':116,'multiline':False]
['text':' Running without auth, so everything should be allowed except remotely invoked','line_number':136,'multiline':False]
['text':' commands that have the 'localHostOnlyIfNoAuth' restriction.','line_number':137,'multiline':False]
['text':' Blanket authorization: don't need to check anything else.','line_number':143,'multiline':False]
['text':' Still can't decide on auth because of the localhost bypass.','line_number':147,'multiline':False]
['text':' namespace','line_number':161,'multiline':False]
['text':'////////////////////////////////////////////////////////////','line_number':168,'multiline':False]
['text':' CommandHelpers','line_number':169,'multiline':False]
['text':' Note: Even though we're setting UNSET here, kMajority implies JOURNAL if journaling is','line_number':173,'multiline':False]
['text':' supported by the mongod.','line_number':174,'multiline':False]
['text':' These exceptions are intended to be handled at a higher level.','line_number':189,'multiline':False]
['text':' Always audit errors other than Unauthorized.','line_number':291,'multiline':False]
['text':'','line_number':292,'multiline':False]
['text':' When we get Unauthorized (usually),','line_number':293,'multiline':False]
['text':' then only audit if our Command definition wants it (default),','line_number':294,'multiline':False]
['text':' or if we don't know our Command definition.','line_number':295,'multiline':False]
['text':' Accepts both BSON String and Symbol for collection name per SERVER-16260','line_number':324,'multiline':False]
['text':' TODO(kangas) remove Symbol support in MongoDB 3.0 after Ruby driver audit','line_number':325,'multiline':False]
['text':' If the command has errored, assert that it satisfies the IDL-defined requirements on a','line_number':388,'multiline':False]
['text':' command error reply.','line_number':389,'multiline':False]
['text':' Only validate error reply in test mode so that we don't expose users to errors if we','line_number':390,'multiline':False]
['text':' construct an invalid error reply.','line_number':391,'multiline':False]
['text':' If ok is present, use its truthiness.','line_number':423,'multiline':False]
['text':' Missing "ok" field is an implied success.','line_number':427,'multiline':False]
['text':' Append all original fields except the writeConcern field to the new command.','line_number':481,'multiline':False]
['text':' Finally, add the new write concern.','line_number':490,'multiline':False]
['text':' The command has a writeConcern field and it's majority, so we can return it as-is.','line_number':500,'multiline':False]
['text':' A decoration representing error labels specified in a failCommand failpoint that has affected a','line_number':631,'multiline':False]
['text':' command in this OperationContext.','line_number':632,'multiline':False]
['text':' Banned even if in failCommands.','line_number':657,'multiline':False]
['text':' only activate failpoint on thread from certain client','line_number':674,'multiline':False]
['text':' only activate failpoint on connection with a certain appName','line_number':678,'multiline':False]
['text':'*
     * Default value is used to suppress the uassert for `errorExtraInfo` if `errorCode` is not set.
     ','line_number':728,'multiline':True]
['text':'*
     * errorExtraInfo only holds a reference to the BSONElement of the parent object (data).
     * The copy constructor of BSONObj handles cloning to keep references valid outside the scope.
     ','line_number':732,'multiline':True]
['text':' Propagate error labels specified in the failCommand failpoint to the','line_number':744,'multiline':False]
['text':' OperationContext decoration to override getErrorLabels() behaviors.','line_number':745,'multiline':False]
['text':' It's optional. Missing is allowed. Other errors aren't.','line_number':804,'multiline':False]
['text':' No need to throw as we only require the diagnostics provided by `tassert` and','line_number':875,'multiline':False]
['text':' do not want to close the connection.','line_number':876,'multiline':False]
['text':' We store the CommandInvocation as a shared_ptr on the OperationContext in case we need to persist','line_number':882,'multiline':False]
['text':' the invocation past the lifetime of the op. If so, this shared_ptr can be copied off to another','line_number':883,'multiline':False]
['text':' thread. If not, there is only one shared_ptr and the invocation goes out of scope when the op','line_number':884,'multiline':False]
['text':' ends.','line_number':885,'multiline':False]
['text':' namespace','line_number':887,'multiline':False]
['text':'////////////////////////////////////////////////////////////','line_number':889,'multiline':False]
['text':' CommandInvocation','line_number':890,'multiline':False]
['text':' Always send an authorization event to audit log, even if OK.','line_number':905,'multiline':False]
['text':' Not using a scope guard because auditLogAuthEvent could conceivably throw.','line_number':906,'multiline':False]
['text':' Blanket authorization: don't need to check anything else.','line_number':910,'multiline':False]
['text':'////////////////////////////////////////////////////////////','line_number':935,'multiline':False]
['text':' Command','line_number':936,'multiline':False]
['text':'////////////////////////////////////////////////////////////','line_number':1092,'multiline':False]
['text':' CommandRegistry','line_number':1093,'multiline':False]
['text':' Service role has to be exclusively Shard or Router.','line_number':1110,'multiline':False]
['text':' When a `Command*` is introduced to `_commands`, its names are introduced','line_number':1121,'multiline':False]
['text':' to `_commandNames`.','line_number':1122,'multiline':False]
['text':' namespace','line_number':1140,'multiline':False]
['text':' In the future, we should get to the point where the registry owns the','line_number':1195,'multiline':False]
['text':' command object. But we aren't there yet and they have to be leaked,','line_number':1196,'multiline':False]
['text':' So we at least do it as an explicit choice here.','line_number':1197,'multiline':False]
['text':' namespace mongo','line_number':1210,'multiline':False]
