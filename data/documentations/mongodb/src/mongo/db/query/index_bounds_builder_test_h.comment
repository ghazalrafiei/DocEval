['text':'*
 *    Copyright (C) 2019-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':'*
     * Utility function to create MatchExpression
     ','line_number':69,'multiline':True]
['text':'*
     * Make a minimal IndexEntry from just an optional key pattern. A dummy name will be added. An
     * empty key pattern will be used if none is provided.
     ','line_number':85,'multiline':True]
['text':'*
     * Make a multikey IndexEntry with the provided key pattern and multikey paths.
     ','line_number':105,'multiline':True]
['text':' multikey','line_number':112,'multiline':False]
['text':' multikey paths','line_number':113,'multiline':False]
['text':'*
     * Make a Wildcard IndexEntry with the provided key pattern and multikey paths.
     ','line_number':124,'multiline':True]
['text':' multikey','line_number':140,'multiline':False]
['text':' multikey paths','line_number':141,'multiline':False]
['text':'*
     * Given a list of queries in 'toUnion', translate into index bounds and return
     * the union of these bounds in the out-parameter 'oilOut'.
     ','line_number':153,'multiline':True]
['text':'*
     * Given a list of queries in 'toUnion', translate into index bounds and return
     * the intersection of these bounds in the out-parameter 'oilOut'.
     ','line_number':182,'multiline':True]
['text':'*
     * Get a BSONObj which represents the interval from MinKey to 'end'.
     ','line_number':210,'multiline':True]
['text':'*
     * Get a BSONObj which represents the interval from 'start' to MaxKey.
     ','line_number':220,'multiline':True]
['text':'*
     * Evaluates index index intervals from the given Interval Evaluation Trees (IET) and asserts
     * the the result is equal to the given OrderedIntervalList.
     ','line_number':230,'multiline':True]
['text':' namespace mongo','line_number':248,'multiline':False]
