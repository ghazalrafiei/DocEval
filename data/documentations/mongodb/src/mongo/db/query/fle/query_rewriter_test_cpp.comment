['text':'*
 *    Copyright (C) 2022-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':' IWYU pragma: keep','line_number':59,'multiline':False]
['text':'
 *  The server rewrite itself is only responsible for traversing agg and MatchExpressions and
 *  executing whatever rewrites are registered. For unit testing, we will only verify that this
 *  traversal and rewrite is happening properly using a mock predicate rewriter that rewrites any
 *  equality with an object with the key `encrypt` to a $gt operator. Unit tests for the actual
 *  rewrites while mocking out tag generation are located in the test file for each encrypted
 *  predicate type. Full end-to-end testing happens in jstests. This organization ensures that we
 *  don't write redundant tests that each index type is properly rewritten under different
 *  circumstances, when the same exact code is called for each index type.
 ','line_number':65,'multiline':True]
['text':' Encrypted values will be rewritten from $eq to $gt. This is an arbitrary decision just to','line_number':99,'multiline':False]
['text':' make sure that the rewrite works properly.','line_number':100,'multiline':False]
['text':' Only operate over equality comparisons.','line_number':114,'multiline':False]
['text':' If the comparison doesn't hold a constant, then don't rewrite.','line_number':119,'multiline':False]
['text':' If the constant is not considered a payload, then don't rewrite.','line_number':124,'multiline':False]
['text':' This method is not used in mock implementations of the EncryptedPredicate since isPayload(),','line_number':147,'multiline':False]
['text':' which normally calls encryptedBinDataType(), is overridden to look for plain objects rather','line_number':148,'multiline':False]
['text':' than BinData. Since this method is pure virtual on the superclass and needs to be','line_number':149,'multiline':False]
['text':' implemented, it is set to kPlaceholder (0).','line_number':150,'multiline':False]
['text':' A second mock rewrite which replaces documents with the key "foo" into $lt operations. We need','line_number':156,'multiline':False]
['text':' two different rewrites that are registered on the same operator to verify that all rewrites are','line_number':157,'multiline':False]
['text':' iterated through.','line_number':158,'multiline':False]
['text':' Encrypted values will be rewritten from $eq to $lt. This is an arbitrary decision just to','line_number':182,'multiline':False]
['text':' make sure that the rewrite works properly.','line_number':183,'multiline':False]
['text':' Test that the rewriter will work from any rewrite registered to an expression. The test rewriter','line_number':389,'multiline':False]
['text':' has two rewrites registered on $eq.','line_number':390,'multiline':False]
['text':' namespace','line_number':407,'multiline':False]
['text':' namespace mongo','line_number':408,'multiline':False]
