['text':'*
 *    Copyright (C) 2022-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':'*
 * Given the type T find its index in Ts.
 ','line_number':54,'multiline':True]
['text':' Given the index I return the type from Ts','line_number':80,'multiline':False]
['text':' namespace detail','line_number':84,'multiline':False]
['text':'*
 * The base control block that PolyValue holds.
 *
 * It does not contain anything else except for the runtime tag.
 ','line_number':86,'multiline':True]
['text':'*
 * The concrete control block VTable generator.
 *
 * It must be empty as PolyValue derives from the generators and we want EBO to kick in.
 ','line_number':104,'multiline':True]
['text':'*
     * The concrete control block for every type T of Ts. Derives from a ControlBlock which holds
     * the runtime type tag for T.
     ','line_number':117,'multiline':True]
['text':' gcc bug 81676','line_number':174,'multiline':False]
['text':' gcc bug 81676','line_number':185,'multiline':False]
['text':'*
 *
 * This is a variation on variant and polymorphic value theme.
 *
 * A tag based dispatch
 *
 * Supported operations:
 * - construction
 * - destruction
 * - clone a = b;
 * - cast a.cast<T>()
 * - multi-method cast to common base a.cast<B>()
 * - multi-method visit
 ','line_number':205,'multiline':True]
['text':' Static array that allows lookup into methods on ControlBlockVTable using the PolyValue tag.','line_number':229,'multiline':False]
['text':' Reference is implicitly convertible from PolyValue. This conversion is equivalent to the','line_number':302,'multiline':False]
['text':' caller using .ref() explicitly. Having this conversion makes it easier to call functions','line_number':303,'multiline':False]
['text':' that take a Reference, which encourages functions that minimize their dependencies, by','line_number':304,'multiline':False]
['text':' taking Reference instead of 'const PolyValue&' where possible.','line_number':305,'multiline':False]
['text':' unfortunately gcc rejects much nicer code, clang and msvc accept','line_number':319,'multiline':False]
['text':' static constexpr std::array visitTbl = { &ControlBlockVTable<Ts, Ts...>::template','line_number':320,'multiline':False]
['text':' visit<V>... };','line_number':321,'multiline':False]
['text':' unfortunately gcc rejects much nicer code, clang and msvc accept','line_number':336,'multiline':False]
['text':' static constexpr std::array visitTbl = { &ControlBlockVTable<Ts, Ts...>::template','line_number':337,'multiline':False]
['text':' visitConst<V>... };','line_number':338,'multiline':False]
['text':' Compare references, not the objects themselves.','line_number':374,'multiline':False]
['text':' PolyValue is constructible from Reference, but only explicitly.','line_number':391,'multiline':False]
['text':' This .copy() helper may be clearer than an explicit constructor call.','line_number':392,'multiline':False]
['text':' unfortunately gcc rejects much nicer code, clang and msvc accept','line_number':452,'multiline':False]
['text':' static constexpr std::array visitTbl = { &ControlBlockVTable<Ts, Ts...>::template','line_number':453,'multiline':False]
['text':' visit<V>... };','line_number':454,'multiline':False]
['text':' unfortunately gcc rejects much nicer code, clang and msvc accept','line_number':469,'multiline':False]
['text':' static constexpr std::array visitTbl = { &ControlBlockVTable<Ts, Ts...>::template','line_number':470,'multiline':False]
['text':' visitConst<V>... };','line_number':471,'multiline':False]
['text':' namespace mongo::optimizer::algebra','line_number':528,'multiline':False]
