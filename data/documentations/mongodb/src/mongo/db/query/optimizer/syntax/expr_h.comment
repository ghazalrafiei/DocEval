['text':'*
 *    Copyright (C) 2022-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':'*
 * Marker class for expressions. Mutually exclusive with paths and nodes.
 ','line_number':52,'multiline':True]
['text':'*
 * Holds a constant SBE value with corresponding type tag.
 ','line_number':57,'multiline':True]
['text':'*
 * Represents a reference to a binding. The binding is specified by identifier (string). The logic
 * for checking that the reference is valid (e.g., that the referenced binding is in scope) happens
 * elsewhere.
 ','line_number':153,'multiline':True]
['text':'*
 * Models arithmetic and other operations that accept a single argument, for instance negate.
 ','line_number':173,'multiline':True]
['text':'*
 * Models arithmetic, comparison, or logical operations that take two arguments, for instance add or
 * subtract.
 ','line_number':202,'multiline':True]
['text':'*
 * Branching operator with a condition expression, "then" expression, and an "else" expression.
 ','line_number':236,'multiline':True]
['text':'*
 * Defines a variable from one expression and a specified name which is available to be referenced
 * in a second expression.
 ','line_number':268,'multiline':True]
['text':'*
 * Represents a single argument lambda. Defines a local variable (representing the argument) which
 * can be referenced within the lambda. The variable takes on the value to which LambdaAbstraction
 * is applied by its parent.
 ','line_number':301,'multiline':True]
['text':'*
 * Evaluates an expression representing a function over an expression representing the argument to
 * the function.
 ','line_number':334,'multiline':True]
['text':'*
 * Dynamic arity operator which passes its children as arguments to a function specified by SBE
 * function expression name.
 ','line_number':361,'multiline':True]
['text':'*
 * EvalPath defines one context for path behavior used for manipulation and replacement. Some path
 * elements have special behavior under this context.
 *
 * EvalPath evaluates its path child according to its context over the result of its expression
 * child. That is, the expression is evaluated first, and it is used as an input value to the root
 * path element, which can then continue the computation recursively.
 ','line_number':386,'multiline':True]
['text':'*
 * EvalFilter defines a context for path behavior used to evaluate boolean conditions for the
 * purposes of filtering. Some path elements have special behavior under this context.
 *
 * The intermediate result of all path operators in the path child of an EvalFilter should evaluate
 * to true, false, or Nothing. It is assumed that that Nothing is equivalent to false within an
 * EvalFilter context.
 ','line_number':424,'multiline':True]
['text':'*
 * Represents a source of values typically from a collection.
 ','line_number':461,'multiline':True]
['text':' namespace mongo::optimizer','line_number':471,'multiline':False]
