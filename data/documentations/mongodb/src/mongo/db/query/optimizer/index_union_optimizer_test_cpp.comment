['text':'*
 *    Copyright (C) 2023-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':' IWYU pragma: keep','line_number':47,'multiline':False]
['text':' Hand-build SargableNode with top-level disjunction.','line_number':66,'multiline':False]
['text':' Show that hashing a top-level disjunction doesn't throw.','line_number':111,'multiline':False]
['text':' When we have a Filter with a top-level disjunction,','line_number':116,'multiline':False]
['text':' it gets translated to a Sargable node with top-level disjunction.','line_number':117,'multiline':False]
['text':' {$or: [ {a: 2}, {b: 3} ]}','line_number':119,'multiline':False]
['text':'costModel','line_number':131,'multiline':True]
['text':' When we have a Filter with a top-level disjunction,','line_number':160,'multiline':False]
['text':' it gets translated to a Sargable node with top-level disjunction,','line_number':161,'multiline':False]
['text':' even if it's a nested disjunction.','line_number':162,'multiline':False]
['text':' {$or: [{$or: [{a: 2}. {b: 3}]}, {$or: [{c: 4}, {b: 5}]}]}','line_number':164,'multiline':False]
['text':'costModel','line_number':178,'multiline':True]
['text':'costModel','line_number':233,'multiline':True]
['text':' For now PSR conversion fails because the result would not be DNF.','line_number':240,'multiline':False]
['text':'costModel','line_number':291,'multiline':True]
['text':' We get two Sargable nodes, but they aren't combined, because converting to DNF would','line_number':298,'multiline':False]
['text':' distribute the projection into both disjuncts, and for now we don't want to have','line_number':299,'multiline':False]
['text':' projections inside a (nontrivial) disjunction.','line_number':300,'multiline':False]
['text':'costModel','line_number':347,'multiline':True]
['text':' We should see everything get reordered and deduped,','line_number':354,'multiline':False]
['text':' so each of the leaf predicates appears once.','line_number':355,'multiline':False]
['text':'perfOnly','line_number':381,'multiline':True]
['text':' scanDefName ','line_number':395,'multiline':True]
['text':' parallelScan ','line_number':395,'multiline':True]
['text':'perfOnly','line_number':444,'multiline':True]
['text':' Create three SargableNodes with top-level disjunctions.','line_number':451,'multiline':False]
['text':'isMultiKey','line_number':496,'multiline':True]
['text':'isMultiKey','line_number':500,'multiline':True]
['text':'isMultiKey','line_number':501,'multiline':True]
['text':'isMultiKey','line_number':502,'multiline':True]
['text':'isMultiKey','line_number':503,'multiline':True]
['text':'costModel','line_number':505,'multiline':True]
['text':' We should get an index union between 'ab' and 'cd'.','line_number':512,'multiline':False]
['text':'perfOnly','line_number':540,'multiline':True]
['text':' Create three SargableNodes with a 3-argument disjunction.','line_number':547,'multiline':False]
['text':' Show that the optimization of the SargableNode does not throw, and that all three','line_number':567,'multiline':False]
['text':' SargableNodes are correctly lowered to FilterNodes.','line_number':568,'multiline':False]
['text':'isMultiKey','line_number':583,'multiline':True]
['text':'isMultiKey','line_number':586,'multiline':True]
['text':'isMultiKey','line_number':589,'multiline':True]
['text':'costModel','line_number':591,'multiline':True]
['text':' We should get a union of three index scans.','line_number':598,'multiline':False]
['text':' namespace','line_number':617,'multiline':False]
['text':' namespace mongo::optimizer','line_number':618,'multiline':False]
