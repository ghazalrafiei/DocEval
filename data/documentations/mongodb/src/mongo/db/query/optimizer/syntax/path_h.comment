['text':'*
 *    Copyright (C) 2022-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':'*
 * Marker class for paths. Mutually exclusive with nodes and expressions.
 ','line_number':40,'multiline':True]
['text':'*
 * A constant path element - any input value is disregarded and replaced by the result of the child
 * expression. The child expression does not depend on the values unpacked by the path.
 *
 * It could also be expressed as lambda that ignores its input: \ _ . c
 ','line_number':45,'multiline':True]
['text':'*
 * A lambda path element - the expression must be a single argument lambda. The lambda is applied
 * with the input value.
 ','line_number':72,'multiline':True]
['text':'*
 * An identity path element. Returns the input undisturbed. It can be expressed as lambda : \ x . x.
 *
 * Not permitted under EvalFilter.
 ','line_number':96,'multiline':True]
['text':'*
 * A default path element - combines an existence check with a replacement step.
 * Under EvalPath:  If input is Nothing then return the result of the child expression, otherwise
 *      return the input undisturbed.
 * Under EvalFilter: If input is Nothing then return the result of the child expression, otherwise
 *      return the child expression negated.
 ','line_number':108,'multiline':True]
['text':'*
 * A comparison path element - compares the input value to the result of the child expression using
 * a comparison operator, and returns a boolean indicating the result of the comparison. The child
 * expression does not depend on the values unpacked by the path.
 *
 * Not permitted under EvalPath.
 ','line_number':132,'multiline':True]
['text':'*
 * A drop path element - If the input is an object, drops the specified fields, otherwise returns
 * the input unmodified. The fields are treated as simple field paths.
 *
 * Not permitted under EvalFilter.
 ','line_number':167,'multiline':True]
['text':'*
 * A keep path element - If the input is an object, keeps the specified fields, otherwise returns
 * the input unmodified. The fields are treated as simple field paths.
 *
 * Not permitted in EvalFilter.
 ','line_number':189,'multiline':True]
['text':'*
 * Combines an object type check with a potential replacement.
 * Under EvalPath: If input is an object then return it unmodified, otherwise return Nothing.
 * Under EvalFilter: If input is an object then return true, otherwise return false.
 ','line_number':211,'multiline':True]
['text':'*
 * Combines an array type check with a potential replacement.
 * Under EvalPath: If input is an object then return it unmodified, otherwise return Nothing.
 * Under EvalFilter: If input is an object then return true, otherwise return false.
 ','line_number':223,'multiline':True]
['text':'*
 * A traverse path element - if the input is not an array, applies the inner path to the input.
 * Otherwise, recursively evaluates on each element of the array.
 *
 * Under EvalPath: re-assembles the result from each element into an array, and returns the array.
 * Under EvalFilter: returns true if the inner path applied to any of the array elements is true.
 *
 * Specifies a maximum depth of the traversal: how many nested arrays are we allowed to descend. "0"
 * denotes unlimited depth.
 ','line_number':235,'multiline':True]
['text':' TODO SERVER-67306: Support different maxDepth values.','line_number':255,'multiline':False]
['text':'*
 * A field path element - models the act of setting a field in an object. Extracts the specified
 * field from the input and runs the inner path with that value following "get" semantics. Then,
 * 1. If its input is an object: sets the field in the input to the result.
 * 2. If the input is not an object: returns the input unmodified if the inner path returned
 *    Nothing, otherwise returns an object with the single field and the result as its value.
 *
 * Not permitted in EvalFilter.
 ','line_number':281,'multiline':True]
['text':'*
 * A get path element. If the input is an object and the specified field exists in it, gets the
 * value for the field, and returns the result of the inner path applied to the value. Otherwise,
 * returns the result of the inner path applied to Nothing.
 *
 * The specified field name is treated as a simple path.
 ','line_number':317,'multiline':True]
['text':'*
 * A multiplicative composition path element.
 * Under EvalPath: evaluates the first inner path evaluated over the input, and then evaluates the
 * second inner path over that result.
 * Under EvalFilter: evaluates both inner paths over the input. Returns true if both inner paths
 * return true.
 ','line_number':350,'multiline':True]
['text':'*
 * An additive composition path element. Runs the inner paths with the input and returns true if
 * either inner path returns true.
 *
 * Not permitted within EvalPath.
 ','line_number':385,'multiline':True]
['text':' namespace mongo::optimizer','line_number':413,'multiline':False]
