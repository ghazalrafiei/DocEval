['text':'*
 *    Copyright (C) 2022-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':'*
 * Tag for logical property types.
 ','line_number':52,'multiline':True]
['text':'*
 * Tag for physical property types.
 ','line_number':57,'multiline':True]
['text':'*
 * Logical properties.
 ','line_number':62,'multiline':True]
['text':'*
 * Physical properties.
 ','line_number':72,'multiline':True]
['text':'*
 * A physical property which specifies how the collection (or intermediate result) is required to be
 * collated (sorted).
 ','line_number':179,'multiline':True]
['text':'*
 * A physical property which specifies what portion of the result in terms of window defined by the
 * limit and skip is to be returned.
 ','line_number':200,'multiline':True]
['text':' Max number of documents to return. Maximum integer value means unlimited.','line_number':221,'multiline':False]
['text':' Documents to skip before start returning in result.','line_number':223,'multiline':False]
['text':'*
 * A physical property which specifies required projections to be returned as part of the result.
 ','line_number':227,'multiline':True]
['text':'*
     * Defined for hash and range-based partitioning.
     ','line_number':253,'multiline':True]
['text':'*
 * A physical property which specifies how the result is to be distributed (or partitioned) amongst
 * the computing partitions/nodes.
 ','line_number':259,'multiline':True]
['text':' Heuristic used to disable exchanges right after Filter, Eval, and local GroupBy nodes.','line_number':280,'multiline':False]
['text':'*
 * A physical property which describes if we intend to satisfy sargable predicates using an index.
 * With indexing requirement "Complete", we are requiring a regular physical
 * scan (both rid and row). With "Seek" (where we must have a non-empty RID projection name), we are
 * targeting a physical Seek. With "Index" (with or without RID projection name), we
 * are targeting a physical IndexScan. If in this case we have set RID projection, then we have
 * either gone for a Seek, or we have performed intersection. With empty RID we are targeting a
 * covered index scan.
 ','line_number':284,'multiline':True]
['text':' If target == Index, specifies if we need to dedup RIDs.','line_number':314,'multiline':False]
['text':' Prior RID intersection removes the need to dedup.','line_number':315,'multiline':False]
['text':' Set of indexes with partial indexes whose partial filters are satisfied considering the whole','line_number':318,'multiline':False]
['text':' query. Points to a group where can interrogate IndexingAvailability to find the satisfied','line_number':319,'multiline':False]
['text':' indexes.','line_number':320,'multiline':False]
['text':'*
 * A physical property that specifies how many times do we expect to execute the current subtree.
 * Typically generated via a NLJ where it is set on the inner side to reflect the outer side's
 * cardinality. This property affects costing of stateful physical operators such as sort and hash
 * groupby.
 ','line_number':324,'multiline':True]
['text':' The repetition estimate is a unitless constant (not a cardinality estimate).','line_number':341,'multiline':False]
['text':'*
 * A physical property that specifies that the we will consider only some approximate number of
 * documents. Typically generated after enforcing a LimitSkipRequirement. This property affects
 * costing of stateful physical operators such as sort and hash groupby.
 ','line_number':345,'multiline':True]
['text':'*
 * A physical property that specifies that we must filter out data corresponding to orphaned
 * documents from a particular collection. This property is only meaningful for groups which have
 * IndexingAvailability. For every group with IndexingAvailability, we add a
 * RemoveOrphansRequirement. This allows us to distinguish between RemoveOrphansRequirement{false},
 * which means do not perform shard filtering, and the lack of a RemoveOrphansRequirement, which
 * implies that we are in a group without IndexingAvailability and thus don't have access to the
 * scan projection (e.g. above a GroupByNode).
 ','line_number':365,'multiline':True]
['text':'*
 * A logical property which specifies available projections for a given ABT tree.
 ','line_number':388,'multiline':True]
['text':'*
 * A logical property which provides an estimated row count for a given ABT tree.
 *
 * It also tracks a per-predicate CE. This is used for ordering predicates in the
 * SargableNode implementer rule.
 ','line_number':403,'multiline':True]
['text':' Used for SargableNodes. Provide additional per partial schema key CE.','line_number':424,'multiline':False]
['text':'*
 * A logical property which specifies availability to index predicates in the ABT subtree and
 * contains the scan projection. The projection and definition name are here for convenience: it can
 * be retrieved using the scan group from the memo.
 ','line_number':428,'multiline':True]
['text':' Specifies if all predicates in the current group and child group are equalities.','line_number':464,'multiline':False]
['text':' This is determined based on SargableNode exclusively containing equality intervals.','line_number':465,'multiline':False]
['text':' Set of indexes with partial indexes whose partial filters are satisfied for the current','line_number':468,'multiline':False]
['text':' group.','line_number':469,'multiline':False]
['text':' True if there is at least one proper interval in a sargable node in this group.','line_number':472,'multiline':False]
['text':'*
 * Logical property which specifies which collections (scanDefs) are available for a particular
 * group. For example if the group contains a join of two tables, we would have (at least) two
 * collections in the set.
 ','line_number':477,'multiline':True]
['text':'*
 * Logical property which specifies promising projections and distributions to attempt to enforce
 * during physical optimization. For example, a group containing a GroupByNode would add hash
 * partitioning on the group-by projections.
 ','line_number':501,'multiline':True]
['text':' namespace mongo::optimizer::properties','line_number':519,'multiline':False]
