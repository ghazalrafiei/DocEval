['text':'*
 *    Copyright (C) 2022-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':' IWYU pragma: no_include "ext/alloc_traits.h"','line_number':36,'multiline':False]
['text':' IWYU pragma: keep','line_number':49,'multiline':False]
['text':'*
 * Helper class used to check if two physical property sets are compatible by testing each
 * constituent property for compatibility. This is used to check if a winner's circle entry can be
 * reused.
 ','line_number':56,'multiline':True]
['text':' Do we have a projection superset (not necessarily strict superset)?','line_number':78,'multiline':False]
['text':' If the winner's circle contains a plan that removes orphans, then it doesn't matter what','line_number':109,'multiline':False]
['text':' the required property is. Otherwise, the required property must not require removing','line_number':110,'multiline':False]
['text':' orphans.','line_number':111,'multiline':False]
['text':' We don't own this.','line_number':133,'multiline':False]
['text':' No improvement.','line_number':204,'multiline':False]
['text':' If the cost is identical, retain the plan which has fewer elements.','line_number':206,'multiline':False]
['text':'*
 * Convert nodes from logical to physical memo delegators.
 * Performs branch-and-bound search.
 ','line_number':245,'multiline':True]
['text':' Re-optimize under complete scan indexing requirements.','line_number':306,'multiline':False]
['text':'dedupRID','line_number':309,'multiline':True]
['text':' Re-optimize with RemoveOrphansRequirement. Only require orphan filtering if the','line_number':312,'multiline':False]
['text':' metadata for the scan definition indicates that the collection may contain orphans.','line_number':313,'multiline':False]
['text':' Establish if we have found exact match of the physical properties in the winner's circle.','line_number':323,'multiline':False]
['text':' If true, we have found compatible (but not equal) props with cost under our cost limit.','line_number':325,'multiline':False]
['text':' Currently optimizing under the same properties higher up the stack (recursive loop).','line_number':331,'multiline':False]
['text':' At this point we have an optimized entry.','line_number':334,'multiline':False]
['text':' Fall through and continue optimizing.','line_number':339,'multiline':False]
['text':' Previously failed to optimize under less strict cost limit.','line_number':341,'multiline':False]
['text':' We have a stricter limit than our previous optimization's cost.','line_number':345,'multiline':False]
['text':' Reuse result under identical properties.','line_number':348,'multiline':False]
['text':' Check winner's circle for compatible properties.','line_number':365,'multiline':False]
['text':' At this point we have an optimized entry.','line_number':372,'multiline':False]
['text':' Properties are not identical. Continue exploring even if limit was stricter.','line_number':375,'multiline':False]
['text':' We are stricter that what is available.','line_number':380,'multiline':False]
['text':' Reduce cost limit result under compatible properties.','line_number':396,'multiline':False]
['text':' If found an exact match for properties, re-use entry and continue optimizing under higher','line_number':403,'multiline':False]
['text':' cost limit. Otherwise create with a new entry for the current properties.','line_number':404,'multiline':False]
['text':' Enforcement rewrites run just once, and are independent of the logical nodes.','line_number':410,'multiline':False]
['text':' Verify properties can be enforced and add enforcers if necessary.','line_number':412,'multiline':False]
['text':' Iterate until we perform all logical for the group and physical rewrites for our best plan.','line_number':422,'multiline':False]
['text':' Attempt to perform logical rewrites.','line_number':426,'multiline':False]
['text':' Add rewrites to convert logical into physical nodes. Only add rewrites for newly added','line_number':430,'multiline':False]
['text':' logical nodes.','line_number':431,'multiline':False]
['text':' Perform physical rewrites, use branch-and-bound.','line_number':444,'multiline':False]
['text':' We have a successful rewrite.','line_number':473,'multiline':False]
['text':'displayProperties','line_number':483,'multiline':True]
['text':' namespace mongo::optimizer::cascades','line_number':489,'multiline':False]
