['text':'*
 *    Copyright (C) 2022-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':' IWYU pragma: no_include "ext/alloc_traits.h"','line_number':40,'multiline':False]
['text':' IWYU pragma: keep','line_number':67,'multiline':False]
['text':'displayProperties','line_number':103,'multiline':True]
['text':'memoInterface','line_number':104,'multiline':True]
['text':' Should not be seeing this value here.','line_number':112,'multiline':False]
['text':'*
 * Helper class for building indented, multiline strings.
 *
 * The main operations it supports are:
 *   - Print a single value, of any type that supports '<<' to std::ostream.
 *   - Indent/unindent, and add newlines.
 *   - Print another ExplainPrinterImpl, preserving its 2D layout.
 *
 * Being able to print another whole printer makes it easy to build these 2D strings
 * bottom-up, without passing around a std::ostream. It also allows displaying
 * child elements in a different order than they were visited.
 ','line_number':146,'multiline':True]
['text':'*
     * Here and below: "other" printer(s) may be siphoned out.
     ','line_number':215,'multiline':True]
['text':'singleLevel','line_number':219,'multiline':True]
['text':'singleLevel','line_number':224,'multiline':True]
['text':' Ignore append','line_number':228,'multiline':False]
['text':' Ignore append.','line_number':240,'multiline':False]
['text':'*
     * Ends the current line, if there is one. Repeated calls do not create
     * blank lines.
     ','line_number':320,'multiline':True]
['text':' Print 'other' without starting a new line.','line_number':372,'multiline':False]
['text':' Embed its first line into our current one, and keep the rest of its commands.','line_number':373,'multiline':False]
['text':' If 'hadChildrenRemaining' then 'other' represents a child of 'this', which means','line_number':386,'multiline':False]
['text':' there was a prior call to setChildCount() that added indentation for it.','line_number':387,'multiline':False]
['text':' If '! hadChildrenRemaining' then create indentation for it now.','line_number':388,'multiline':False]
['text':' Holds completed lines, and indent/unIndent commands.','line_number':417,'multiline':False]
['text':' When '_cmdInsertPos' is nonnegative, some of these lines and commands belong','line_number':418,'multiline':False]
['text':' after the currently-being-built line.','line_number':419,'multiline':False]
['text':' Holds the incomplete line currently being built. Once complete this will become the last','line_number':421,'multiline':False]
['text':' line, unless '_cmdInsertPos' is nonnegative.','line_number':422,'multiline':False]
['text':' True means we have an incomplete line in '_os'.','line_number':424,'multiline':False]
['text':' Once the line is completed with newLine(), this flag is false until','line_number':425,'multiline':False]
['text':' we begin building a new one with print().','line_number':426,'multiline':False]
['text':' When nonnegative, indicates the insertion point where completed lines','line_number':431,'multiline':False]
['text':' should be added to '_cmd'. -1 means completed lines will be added at the end.','line_number':432,'multiline':False]
['text':' We want to append a stringified version of MakeObjSpec to explain here.','line_number':504,'multiline':False]
['text':' Extended types need to implement their own explain, since we can't directly','line_number':509,'multiline':False]
['text':' convert them to bson.','line_number':510,'multiline':False]
['text':'*
     * Here and below: "other" printer(s) may be siphoned out.
     ','line_number':547,'multiline':True]
['text':'append','line_number':551,'multiline':True]
['text':'singleLevelSpacer','line_number':555,'multiline':True]
['text':' Ignore single level.','line_number':556,'multiline':False]
['text':'append','line_number':561,'multiline':True]
['text':'append','line_number':565,'multiline':True]
['text':'append','line_number':569,'multiline':True]
['text':'childCount','line_number':572,'multiline':True]
['text':' Ignored.','line_number':573,'multiline':False]
['text':' Ignored.','line_number':578,'multiline':False]
['text':'separator','line_number':605,'multiline':True]
['text':' Ignored.','line_number':606,'multiline':False]
['text':' Cannot assume empty means non-existent, so use optional<>.','line_number':696,'multiline':False]
['text':' For debugging.','line_number':702,'multiline':False]
['text':'*
     * Helper function that appends the logical and physical properties of 'node' nested under a new
     * field named 'properties'. Only applicable for BSON explain, for other versions this is a
     * no-op.
     ','line_number':725,'multiline':True]
['text':' Only allow in V2 and V3 explain. No point in printing CE when we have a delegator','line_number':773,'multiline':False]
['text':' node.','line_number':774,'multiline':False]
['text':'*
     * Nodes
     ','line_number':863,'multiline':True]
['text':'n','line_number':866,'multiline':True]
['text':' The ref block is redundant for V1 and V2. We typically explain the references in the','line_number':871,'multiline':False]
['text':' blocks ([]) of the individual elements.','line_number':872,'multiline':False]
['text':'n','line_number':881,'multiline':True]
['text':' The bind block is redundant for V1-V2 type explains, as the bound projections can be','line_number':886,'multiline':False]
['text':' inferred from the field projection map; so here we print nothing.','line_number':887,'multiline':False]
['text':' If the scan order is forward, only print it for V3. Otherwise, print for all versions.','line_number':968,'multiline':False]
['text':' Specifically not printing optional logical properties here. They can be displayed with','line_number':986,'multiline':False]
['text':' the properties explain.','line_number':987,'multiline':False]
['text':' Since we are printing on a single level, use V1 printer in order to avoid children','line_number':1011,'multiline':False]
['text':' being reversed. Also note that we are specifically not printing inclusive flag here.','line_number':1012,'multiline':False]
['text':' The inclusion is explained by the caller.','line_number':1013,'multiline':False]
['text':' Shortened output for half-open, fully open and point intervals.','line_number':1077,'multiline':False]
['text':' Output for a generic interval.','line_number':1096,'multiline':False]
['text':'singleLevelSpacer','line_number':1171,'multiline':True]
['text':'singleLevelSpacer','line_number':1184,'multiline':True]
['text':'singleLevelSpacer','line_number':1236,'multiline':True]
['text':'extraBraceCount','line_number':1318,'multiline':True]
['text':'extraBraceCount','line_number':1329,'multiline':True]
['text':'isConjunction','line_number':1348,'multiline':True]
['text':'isConjunction','line_number':1355,'multiline':True]
['text':'extraBraceCount','line_number':1359,'multiline':True]
['text':'n','line_number':1428,'multiline':True]
['text':' Handle delegation.','line_number':1443,'multiline':False]
['text':' The bind block (projectionResult) is empty in V1-V2 explains. In the case of the','line_number':1510,'multiline':False]
['text':' Evaluation node, the bind block may have useful information about the embedded','line_number':1511,'multiline':False]
['text':' expression, so we make sure to print the projected expression.','line_number':1512,'multiline':False]
['text':'noInline','line_number':1519,'multiline':True]
['text':' In V3 only we include the bind block and ref block (see at the end of this function), so','line_number':1579,'multiline':False]
['text':' V3 has two more children.','line_number':1580,'multiline':False]
['text':'refsResult','line_number':1670,'multiline':True]
['text':'refsResult','line_number':1747,'multiline':True]
['text':'refsResult','line_number':1774,'multiline':True]
['text':'refsResult','line_number':1820,'multiline':True]
['text':'directToParent','line_number':1826,'multiline':True]
['text':'refsResult','line_number':1863,'multiline':True]
['text':'addComma','line_number':1964,'multiline':True]
['text':'refsResult','line_number':1998,'multiline':True]
['text':'noInline','line_number':2008,'multiline':True]
['text':'directToParent','line_number':2011,'multiline':True]
['text':'noInline','line_number':2095,'multiline':True]
['text':'directToParent','line_number':2098,'multiline':True]
['text':' If we have version < V3, inline the limit skip.','line_number':2145,'multiline':False]
['text':' Do not inline LimitSkip, since it's not a path.','line_number':2156,'multiline':False]
['text':'noInline','line_number':2157,'multiline':True]
['text':'directToParent','line_number':2162,'multiline':True]
['text':'directToParent','line_number':2207,'multiline':True]
['text':'directToParent','line_number':2233,'multiline':True]
['text':'directToParent','line_number':2375,'multiline':True]
['text':' We don't own this.','line_number':2382,'multiline':False]
['text':'directToParent','line_number':2391,'multiline':True]
['text':'directToParent','line_number':2396,'multiline':True]
['text':'directToParent','line_number':2401,'multiline':True]
['text':'directToParent','line_number':2406,'multiline':True]
['text':' TODO: consider printing satisfied partial indexes.','line_number':2417,'multiline':False]
['text':' We don't own this.','line_number':2442,'multiline':False]
['text':'noInline','line_number':2490,'multiline':True]
['text':'directToParent','line_number':2495,'multiline':True]
['text':'*
     * Expressions
     ','line_number':2505,'multiline':True]
['text':'n','line_number':2508,'multiline':True]
['text':'n','line_number':2514,'multiline':True]
['text':'n','line_number':2529,'multiline':True]
['text':'n','line_number':2538,'multiline':True]
['text':'n','line_number':2552,'multiline':True]
['text':'n','line_number':2571,'multiline':True]
['text':'n','line_number':2589,'multiline':True]
['text':'n','line_number':2607,'multiline':True]
['text':'n','line_number':2621,'multiline':True]
['text':'n','line_number':2636,'multiline':True]
['text':'n','line_number':2653,'multiline':True]
['text':'n','line_number':2668,'multiline':True]
['text':'*
     * Paths
     ','line_number':2683,'multiline':True]
['text':'n','line_number':2686,'multiline':True]
['text':'n','line_number':2697,'multiline':True]
['text':'n','line_number':2708,'multiline':True]
['text':'n','line_number':2714,'multiline':True]
['text':'n','line_number':2725,'multiline':True]
['text':'n','line_number':2763,'multiline':True]
['text':'n','line_number':2771,'multiline':True]
['text':'n','line_number':2779,'multiline':True]
['text':'n','line_number':2785,'multiline':True]
['text':'n','line_number':2791,'multiline':True]
['text':'n','line_number':2816,'multiline':True]
['text':'n','line_number':2830,'multiline':True]
['text':'n','line_number':2844,'multiline':True]
['text':'n','line_number':2859,'multiline':True]
['text':'n','line_number':2874,'multiline':True]
['text':' We don't own this.','line_number':2996,'multiline':False]
['text':'displayProperties','line_number':3133,'multiline':True]
['text':'displayProperties','line_number':3139,'multiline':True]
['text':' This function expects the full ABT to be the argument. So we must have a RootNode.','line_number':3254,'multiline':False]
['text':' An EOF plan will have an EvaluationNode as the child of the RootNode.','line_number':3257,'multiline':False]
['text':' The EvaluationNode of an EOF plan will have Nothing as the projection.','line_number':3263,'multiline':False]
['text':' This is the rest of an EOF plan.','line_number':3267,'multiline':False]
['text':' namespace mongo::optimizer','line_number':3271,'multiline':False]
