['text':'*
 *    Copyright (C) 2022-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':' Try to lower directly into a function call to makeBsonObj.','line_number':54,'multiline':False]
['text':' We were able to generate arguments for a makeObj/makeBsonObj call! Now we need to lower','line_number':60,'multiline':False]
['text':' them. We want to lower all arguments as usual. Note that we are intentionally lowering','line_number':61,'multiline':False]
['text':' path components like PathLambda to LambdaAbstractions here.','line_number':62,'multiline':False]
['text':' TODO SERVER-62830: detect if we need to lower to makeObj instead.','line_number':67,'multiline':False]
['text':' This is needed for cases in which EvalPathLowering is called from a context other than','line_number':72,'multiline':False]
['text':' during PathLowering. If the ABT is modified in a way that adds variable references and','line_number':73,'multiline':False]
['text':' definitions the environment must be updated.','line_number':74,'multiline':False]
['text':' if (exists(x), x, c)','line_number':100,'multiline':False]
['text':' if (isObject(x), dropFields(x,...) , x)','line_number':128,'multiline':False]
['text':' Alternatively, we can implement a special builtin function that does the comparison and drop.','line_number':129,'multiline':False]
['text':' if (isObject(x), keepFields(x,...) , x)','line_number':147,'multiline':False]
['text':' Alternatively, we can implement a special builtin function that does the comparison and drop.','line_number':148,'multiline':False]
['text':' if (isObject(x), x, Nothing)','line_number':166,'multiline':False]
['text':' if (isArray(x), x, Nothing)','line_number':178,'multiline':False]
['text':' TODO: SERVER-67306. Allow single-level traverse under EvalPath.','line_number':191,'multiline':False]
['text':' p1 * p2 -> (p2 (p1 input))','line_number':232,'multiline':False]
['text':' In order to completely dissolve EvalPath the incoming path must be lowered to an expression','line_number':249,'multiline':False]
['text':' (lambda).','line_number':250,'multiline':False]
['text':' This is needed for cases in which EvalFilterLowering is called from a context other than','line_number':264,'multiline':False]
['text':' during PathLowering. If the ABT is modified in a way that adds variable references or','line_number':265,'multiline':False]
['text':' definitions the environment must be updated.','line_number':266,'multiline':False]
['text':' If c is not an array we want EqMember to have the same behavior as Eq (for example:','line_number':304,'multiline':False]
['text':' EqMember (Const 5) should have the same behavior as Eq (Const 5)). Thus, we use cmp3w in','line_number':305,'multiline':False]
['text':' the non-array case in the lowering below.','line_number':306,'multiline':False]
['text':' This is a bad hack that detect if a child is number path element','line_number':362,'multiline':False]
['text':' TODO: SERVER-67306. Allow multi-level traverse under EvalFilter.','line_number':370,'multiline':False]
['text':' If p1 is Nothing, then the expression will short-circuit and Nothing will be','line_number':402,'multiline':False]
['text':' propagated to this operator's parent, and eventually coerced to false.','line_number':403,'multiline':False]
['text':' In order to completely dissolve EvalFilter the incoming path must be lowered to an expression','line_number':427,'multiline':False]
['text':' (lambda).','line_number':428,'multiline':False]
['text':' Wrap EvalFilter in fillEmpty to coerce it to a boolean.','line_number':434,'multiline':False]
['text':'rebuild','line_number':441,'multiline':True]
['text':'rebuild','line_number':445,'multiline':True]
['text':' namespace mongo::optimizer','line_number':457,'multiline':False]
