['text':'*
 *    Copyright (C) 2021-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':'*
 * This file contains tests for building execution stages that implement $lookup operator.
 ','line_number':30,'multiline':True]
['text':' Set to "true" and recompile the tests to dump plans and skip asserts in favor of printing','line_number':81,'multiline':False]
['text':' more data. Because asserts are suppressed in this mode tests might pass while being broken.','line_number':82,'multiline':False]
['text':' Do not check in with 'enableDebugOutput' set to "true".','line_number':83,'multiline':False]
['text':' Create local and foreign collections.','line_number':90,'multiline':False]
['text':' opDebug ','line_number':108,'multiline':True]
['text':' Constructs ready-to-execute SBE tree for $lookup specified by the arguments.','line_number':126,'multiline':False]
['text':' Documents from the local collection are provided using collection scan.','line_number':132,'multiline':False]
['text':' Construct logical query solution.','line_number':136,'multiline':False]
['text':' idxEntry ','line_number':143,'multiline':True]
['text':' shouldProduceBson ','line_number':144,'multiline':True]
['text':' Convert logical solution into the physical SBE plan.','line_number':147,'multiline':False]
['text':'hasRecordId','line_number':150,'multiline':True]
['text':'shard filterer','line_number':151,'multiline':True]
['text':'collator','line_number':152,'multiline':True]
['text':' Prepare the SBE tree for execution.','line_number':158,'multiline':False]
['text':' Check that SBE plan for '$lookup' returns expected documents.','line_number':168,'multiline':False]
['text':' isAnySecondaryNamespaceAViewOrSharded ','line_number':191,'multiline':True]
['text':' Retrieve the result document from SBE plan.','line_number':200,'multiline':False]
['text':' If the plan returned more documents than expected, proceed extracting all of them.','line_number':208,'multiline':False]
['text':' This way, the developer will see them if debug print is enabled.','line_number':209,'multiline':False]
['text':' Construct view to the expected document.','line_number':214,'multiline':False]
['text':' Assert that the document from SBE plan is equal to the expected one.','line_number':223,'multiline':False]
['text':' Check that SBE plan for '$lookup' returns expected documents. Expected documents are','line_number':240,'multiline':False]
['text':' described in pairs '(local document, matched foreign documents)'.','line_number':241,'multiline':False]
['text':' Construct expected documents.','line_number':254,'multiline':False]
['text':' bsonHasMetadata ','line_number':259,'multiline':True]
['text':'fdocs[4], fdocs[5] - match in classic, but for undefined we don't care','line_number':359,'multiline':True]
['text':'fdocs[4], fdocs[5] - match in classic, but for undefined we don't care','line_number':381,'multiline':True]
['text':' See 'testMatchingPathToScalar()' in lookup_equijoin_semantics.js','line_number':413,'multiline':False]
['text':' For these docs "a.x" should resolve to a (logical) set that does _not_ contain value "1".','line_number':424,'multiline':False]
['text':' fdocs[2], is expected and different from matching in local!','line_number':567,'multiline':False]
['text':' fdocs[5], is expected and different from matching in local!','line_number':570,'multiline':False]
['text':' namespace','line_number':808,'multiline':False]
['text':' namespace mongo::sbe','line_number':809,'multiline':False]
