['text':'*
 *    Copyright (C) 2023-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':' Implicit equals','line_number':84,'multiline':False]
['text':' Explicit equals','line_number':87,'multiline':False]
['text':' implicit $and','line_number':90,'multiline':False]
['text':' Implicit equals','line_number':93,'multiline':False]
['text':' Explicit equals','line_number':96,'multiline':False]
['text':' NOLINT','line_number':99,'multiline':False]
['text':' NOLINT','line_number':102,'multiline':False]
['text':' NOLINT','line_number':108,'multiline':False]
['text':' NOLINT','line_number':111,'multiline':False]
['text':' NOLINT','line_number':114,'multiline':False]
['text':' NOLINT','line_number':117,'multiline':False]
['text':' NOLINT','line_number':120,'multiline':False]
['text':' NOLINT','line_number':123,'multiline':False]
['text':' NOLINT','line_number':126,'multiline':False]
['text':' NOLINT','line_number':129,'multiline':False]
['text':' NOLINT','line_number':132,'multiline':False]
['text':' NOLINT','line_number':135,'multiline':False]
['text':' NOLINT','line_number':138,'multiline':False]
['text':' NOLINT','line_number':144,'multiline':False]
['text':' namespace','line_number':180,'multiline':False]
['text':' Note/warning: 'fromjson' will parse $regex into a /regex/, so these tests can't use','line_number':183,'multiline':False]
['text':' auto-updating BSON assertions.','line_number':184,'multiline':False]
['text':' NOLINT','line_number':202,'multiline':False]
['text':' NOLINT','line_number':208,'multiline':False]
['text':' Any number of children in any order is always the same shape','line_number':214,'multiline':False]
['text':' NOLINT','line_number':215,'multiline':False]
['text':' NOLINT','line_number':218,'multiline':False]
['text':' NOLINT','line_number':221,'multiline':False]
['text':' NOLINT','line_number':227,'multiline':False]
['text':' NOLINT','line_number':230,'multiline':False]
['text':' NOLINT','line_number':234,'multiline':False]
['text':' NOLINT','line_number':237,'multiline':False]
['text':' NOLINT','line_number':241,'multiline':False]
['text':' NOLINT','line_number':244,'multiline':False]
['text':' NOLINT','line_number':248,'multiline':False]
['text':' NOLINT','line_number':251,'multiline':False]
['text':' NOLINT','line_number':257,'multiline':False]
['text':' NOLINT','line_number':260,'multiline':False]
['text':' NOLINT','line_number':266,'multiline':False]
['text':' NOLINT','line_number':290,'multiline':False]
['text':' ElemMatchObjectMatchExpression','line_number':314,'multiline':False]
['text':' NOLINT','line_number':315,'multiline':False]
['text':' ElemMatchValueMatchExpression','line_number':336,'multiline':False]
['text':' NOLINT','line_number':337,'multiline':False]
['text':' Nested','line_number':341,'multiline':False]
['text':' NOLINT','line_number':342,'multiline':False]
['text':' NOLINT','line_number':361,'multiline':False]
['text':' NOLINT','line_number':374,'multiline':False]
['text':' NOLINT','line_number':380,'multiline':False]
['text':' Test the special case where NotMatchExpression::serialize() reduces to $alwaysFalse.','line_number':383,'multiline':False]
['text':' NOLINT','line_number':388,'multiline':False]
['text':' NOLINT','line_number':394,'multiline':False]
['text':' NOLINT','line_number':403,'multiline':False]
['text':' NOLINT','line_number':418,'multiline':False]
['text':' NOLINT','line_number':424,'multiline':False]
['text':' We need to optimize an $expr expression in order to generate an $_internalExprEq. It's','line_number':431,'multiline':False]
['text':' not clear we'd want to do optimization before computing the query shape, but we should','line_number':432,'multiline':False]
['text':' support the computation on any MatchExpression, and this is the easiest way we can create','line_number':433,'multiline':False]
['text':' this type of MatchExpression node.','line_number':434,'multiline':False]
['text':' NOLINT','line_number':440,'multiline':False]
['text':' NOLINT','line_number':460,'multiline':False]
['text':' NOLINT','line_number':480,'multiline':False]
['text':' NOLINT','line_number':500,'multiline':False]
['text':' NOLINT','line_number':520,'multiline':False]
['text':' NOLINT','line_number':560,'multiline':False]
['text':' NOLINT','line_number':584,'multiline':False]
['text':' NOLINT','line_number':605,'multiline':False]
['text':' NOLINT','line_number':652,'multiline':False]
['text':' namespace','line_number':694,'multiline':False]
['text':' namespace mongo::query_shape','line_number':696,'multiline':False]
