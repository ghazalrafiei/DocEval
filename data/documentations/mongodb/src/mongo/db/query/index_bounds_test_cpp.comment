['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':'*
 * This file contains tests for mongo/db/query/index_bounds.cpp
 ','line_number':30,'multiline':True]
['text':' IWYU pragma: keep','line_number':46,'multiline':False]
['text':'','line_number':52,'multiline':False]
['text':' Validation','line_number':53,'multiline':False]
['text':'','line_number':54,'multiline':False]
['text':' Go forwards with data indexed forwards.','line_number':62,'multiline':False]
['text':' Go backwards with data indexed backwards.','line_number':64,'multiline':False]
['text':' Bounds are not oriented along the direction of traversal.','line_number':66,'multiline':False]
['text':' Bounds must match the index exactly.','line_number':69,'multiline':False]
['text':' Let's add another field','line_number':80,'multiline':False]
['text':' These are OK.','line_number':85,'multiline':False]
['text':' Direction(s) don't match.','line_number':89,'multiline':False]
['text':' Index doesn't match.','line_number':93,'multiline':False]
['text':' Whether navigated forward or backward, there's no valid ordering for these two intervals.','line_number':100,'multiline':False]
['text':' overlapping intervals not allowed.','line_number':113,'multiline':False]
['text':' Check that the reverse of an empty list is empty.','line_number':131,'multiline':False]
['text':' The reverse of a single-interval OIL is just an OIL with that interval reversed.','line_number':137,'multiline':False]
['text':' List with a few elements','line_number':146,'multiline':False]
['text':'','line_number':190,'multiline':False]
['text':' Tests for OrderedIntervalList::complement()','line_number':191,'multiline':False]
['text':'','line_number':192,'multiline':False]
['text':'*
 * Get a BSONObj which represents the interval from
 * MinKey to 'end'.
 ','line_number':194,'multiline':True]
['text':'*
 * Get a BSONObj which represents the interval from
 * 'start' to MaxKey.
 ','line_number':205,'multiline':True]
['text':'*
 * Get a BSONObj which represents the interval
 * [MinKey, MaxKey].
 ','line_number':216,'multiline':True]
['text':'*
 * Returns an object representing the interval [MaxKey, MinKey].
 ','line_number':227,'multiline':True]
['text':'*
 * Test that if we complement the OIL twice,
 * we get back the original OIL.
 ','line_number':237,'multiline':True]
['text':' Complement of empty is [MinKey, MaxKey]','line_number':256,'multiline':False]
['text':' Complement of [MinKey, MaxKey] is empty','line_number':266,'multiline':False]
['text':' Complement of [MinKey, 3), [5, MaxKey) is','line_number':275,'multiline':False]
['text':' [3, 5), [MaxKey, MaxKey].','line_number':276,'multiline':False]
['text':' Make the interval [MaxKey, MaxKey].','line_number':287,'multiline':False]
['text':' Complement of (MinKey, 3), (3, MaxKey) is','line_number':297,'multiline':False]
['text':' [MinKey, MinKey], [3, 3], [MaxKey, MaxKey].','line_number':298,'multiline':False]
['text':' First interval is [MinKey, MinKey]','line_number':307,'multiline':False]
['text':' Second is [3, 3]','line_number':315,'multiline':False]
['text':' Third is [MaxKey, MaxKey]','line_number':319,'multiline':False]
['text':'','line_number':328,'multiline':False]
['text':' Equality','line_number':329,'multiline':False]
['text':'','line_number':330,'multiline':False]
['text':' Both sets of bounds are {a: [[1, 3), (4, 5]], b: [[1,1]]}','line_number':333,'multiline':False]
['text':' First set of bounds: {a: [[1, 3), (4, 5]], b: [[1,1]]}','line_number':389,'multiline':False]
['text':' Second set of bounds identical except for the second field name:','line_number':403,'multiline':False]
['text':'    {a: [[1, 3), (4, 5]], c: [[1,1]]}','line_number':404,'multiline':False]
['text':' First set of bounds: {a: [[1, 3), (4, 5]], b: [[1,1]]}','line_number':423,'multiline':False]
['text':' Second set of bounds identical except for (4, 5] changed to (4, 5):','line_number':437,'multiline':False]
['text':'    {a: [[1, 3), (4, 5]], b: [[1,1]]}','line_number':438,'multiline':False]
['text':' First set of bounds: {a: [[1, 3), (4, 5]], b: [[1,1]]}','line_number':457,'multiline':False]
['text':' Second set of bounds has an additional interval for field 'a':','line_number':471,'multiline':False]
['text':'    {a: [[1, 3), (4, 5], (6, 7)], b: [[1,1]]}','line_number':472,'multiline':False]
['text':' First set of bounds: {a: [[1, 3), (4, 5]], b: [[1,1]]}','line_number':492,'multiline':False]
['text':' Second set of bounds has an additional field 'c':','line_number':506,'multiline':False]
['text':'    {a: [[1, 3), (4, 5]], b: [[1,1]], c: [[1]]}','line_number':507,'multiline':False]
['text':' The bounds consist of a string and a non-string interval:','line_number':639,'multiline':False]
['text':' {a: [["string", "string"]], b: [[1,1]]}.','line_number':640,'multiline':False]
['text':' First test the debug format pretending there is no non-simple collation preset.','line_number':658,'multiline':False]
['text':' Now test pretending there is a non-simple collation.','line_number':663,'multiline':False]
['text':'','line_number':695,'multiline':False]
['text':' Iteration over','line_number':696,'multiline':False]
['text':'','line_number':697,'multiline':False]
['text':' Start at something in our range.','line_number':735,'multiline':False]
['text':' Second field moves past the end, but we're not done, since there's still an interval in','line_number':739,'multiline':False]
['text':' the previous field that the key hasn't advanced to.','line_number':740,'multiline':False]
['text':' The next index key is in the second interval for 'foo' and there is a valid interval for','line_number':746,'multiline':False]
['text':' 'bar'.','line_number':747,'multiline':False]
['text':' The next index key is very close to the end of the open interval for foo, and it's past','line_number':751,'multiline':False]
['text':' the interval for 'bar'.  Since the interval for foo is open, we are asked to move','line_number':752,'multiline':False]
['text':' forward, since we possibly could.','line_number':753,'multiline':False]
['text':' Start at something in our range.','line_number':776,'multiline':False]
['text':' "foo" moves between two intervals.','line_number':780,'multiline':False]
['text':' Should be told to move exactly to the next interval's beginning.','line_number':784,'multiline':False]
['text':' Start at something in our range.','line_number':804,'multiline':False]
['text':' "foo" moves forward a few intervals.','line_number':808,'multiline':False]
['text':' Start at something in our range.','line_number':828,'multiline':False]
['text':' The rightmost key is past the range.  We should be told to move past the key before the','line_number':832,'multiline':False]
['text':' one whose interval we exhausted.','line_number':833,'multiline':False]
['text':' Move a little forward, but note that the rightmost key isn't in the interval yet.','line_number':839,'multiline':False]
['text':' Move to the edge of both intervals, 20,5','line_number':846,'multiline':False]
['text':' And a little beyond.','line_number':850,'multiline':False]
['text':' Start at something in our range.','line_number':871,'multiline':False]
['text':' First key moves to next interval, second key needs to be advanced.','line_number':875,'multiline':False]
['text':' First key moved forward.  The second key moved back to a valid state but it's behind','line_number':914,'multiline':False]
['text':' the interval that the checker thought it was in.','line_number':915,'multiline':False]
['text':' Start at something in our range.','line_number':938,'multiline':False]
['text':' The rightmost key is past the range.  We should be told to move past the key before the','line_number':942,'multiline':False]
['text':' one whose interval we exhausted.','line_number':943,'multiline':False]
['text':' Move a little forward, but note that the rightmost key isn't in the interval yet.','line_number':949,'multiline':False]
['text':' Move to the edge of both intervals','line_number':956,'multiline':False]
['text':' And a little beyond.','line_number':960,'multiline':False]
['text':' Start at something in our range.','line_number':984,'multiline':False]
['text':' Second field moves past the end, but we're not done, since there's still an interval in','line_number':988,'multiline':False]
['text':' the previous field that the key hasn't advanced to.','line_number':989,'multiline':False]
['text':' The next index key is in the second interval for 'foo' and there is a valid interval for','line_number':995,'multiline':False]
['text':' 'bar'.','line_number':996,'multiline':False]
['text':' The next index key is very close to the end of the open interval for foo, and it's past','line_number':1000,'multiline':False]
['text':' the interval for 'bar'.  Since the interval for foo is open, we are asked to move','line_number':1001,'multiline':False]
['text':' forward, since we possibly could.','line_number':1002,'multiline':False]
['text':'','line_number':1009,'multiline':False]
['text':' IndexBoundsChecker::findIntervalForField','line_number':1010,'multiline':False]
['text':'','line_number':1011,'multiline':False]
['text':'*
 * Returns string representation of IndexBoundsChecker::Location.
 ','line_number':1013,'multiline':True]
['text':'*
 * Test function for findIntervalForField.
 * Constructs a list of point intervals from 'points' and searches for 'key'
 * using findIntervalForField(). Verifies expected location and index (if expectedLocation
 * is BEHIND or WITHIN).
 * 'points' is provided in BSON format: {points: [pt1, pt2, pt4, ...]
 ','line_number':1028,'multiline':True]
['text':' Create key BSONElement.','line_number':1040,'multiline':False]
['text':' Construct point intervals.','line_number':1044,'multiline':False]
['text':' Check interval index if location is BEHIND or WITHIN.','line_number':1062,'multiline':False]
['text':' No intervals','line_number':1076,'multiline':False]
['text':' One interval','line_number':1081,'multiline':False]
['text':' One interval - reverse direction','line_number':1087,'multiline':False]
['text':' Two intervals','line_number':1093,'multiline':False]
['text':' Verifies off-by-one handling in upper bound of binary search.','line_number':1094,'multiline':False]
['text':' Two intervals - reverse direction','line_number':1102,'multiline':False]
['text':' Verifies off-by-one handling in upper bound of binary search.','line_number':1103,'multiline':False]
['text':' Multiple intervals - odd number of intervals.','line_number':1111,'multiline':False]
['text':' Multiple intervals - even number of intervals, reverse direction','line_number':1125,'multiline':False]
['text':' Interval order has to match direction.','line_number':1126,'multiline':False]
['text':' namespace','line_number':1139,'multiline':False]
