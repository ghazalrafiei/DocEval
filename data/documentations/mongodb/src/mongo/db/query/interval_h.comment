['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':'* A range of values for one field. ','line_number':44,'multiline':True]
['text':' No BSONValue means we have to keep a BSONObj and pointers (BSONElement) into it.','line_number':46,'multiline':False]
['text':' 'start' may not point at the first field in _intervalData.','line_number':47,'multiline':False]
['text':' 'end' may not point at the last field in _intervalData.','line_number':48,'multiline':False]
['text':' 'start' and 'end' may point at the same field.','line_number':49,'multiline':False]
['text':' Start and End must be ordered according to the index order.','line_number':52,'multiline':False]
['text':'* Creates an empty interval ','line_number':59,'multiline':True]
['text':'*
     * Generates a debug string for an interval. If interval 'hasNonSimpleCollation', then string
     * bounds are hex-encoded.
     ','line_number':62,'multiline':True]
['text':' False means omit the field name.','line_number':76,'multiline':False]
['text':'*
     * Creates an interval that starts at the first field of 'base' and ends at the second
     * field of 'base'. (In other words, 'base' is a bsonobj with at least two elements, of
     * which we don't care about field names.)
     *
     * The interval's extremities are closed or not depending on whether
     * 'start'/'endIncluded' are true or not.
     ','line_number':94,'multiline':True]
['text':'* Sets the current interval to the given values (see constructor) ','line_number':104,'multiline':True]
['text':'*
     * Returns true if an empty-constructed interval hasn't been init()-ialized yet
     ','line_number':107,'multiline':True]
['text':'*
     * Does this interval represent exactly one point?
     ','line_number':112,'multiline':True]
['text':'*
     * Returns true if start is same as end and interval is open at either end
     ','line_number':117,'multiline':True]
['text':' Point intervals, empty intervals, and null intervals have no direction.','line_number':123,'multiline':False]
['text':'*
     * Compute the direction.
     ','line_number':129,'multiline':True]
['text':'','line_number':134,'multiline':False]
['text':' Comparison with other intervals','line_number':135,'multiline':False]
['text':'','line_number':136,'multiline':False]
['text':'*
     * Returns true if 'this' is the same interval as 'other'
     ','line_number':138,'multiline':True]
['text':'*
     * Returns true if 'this' overlaps with 'other', false otherwise.
     ','line_number':143,'multiline':True]
['text':'*
     * Returns true if 'this' is within 'other', false otherwise.
     ','line_number':148,'multiline':True]
['text':'*
     * Returns true if 'this' is located before 'other', false otherwise.
     ','line_number':153,'multiline':True]
['text':'*
     * Returns true if the interval is from MinKey to MaxKey.
     ','line_number':158,'multiline':True]
['text':'*
     * Returns true if the interval is from MaxKey to MinKey.
     ','line_number':163,'multiline':True]
['text':'* Returns how 'this' compares to 'other' ','line_number':168,'multiline':True]
['text':'','line_number':170,'multiline':False]
['text':' There is some intersection.','line_number':171,'multiline':False]
['text':'','line_number':172,'multiline':False]
['text':' The two intervals are *exactly* equal.','line_number':174,'multiline':False]
['text':' 'this' contains the other interval.','line_number':177,'multiline':False]
['text':' 'this' is contained by the other interval.','line_number':180,'multiline':False]
['text':' The two intervals intersect and 'this' is before the other interval.','line_number':183,'multiline':False]
['text':' The two intervals intersect and 'this is after the other interval.','line_number':186,'multiline':False]
['text':'','line_number':189,'multiline':False]
['text':' There is no intersection.','line_number':190,'multiline':False]
['text':'','line_number':191,'multiline':False]
['text':' This happens if we have [a,b) [b,c]','line_number':195,'multiline':False]
['text':'','line_number':205,'multiline':False]
['text':' Mutation of intervals','line_number':206,'multiline':False]
['text':'','line_number':207,'multiline':False]
['text':'*
     * Swap start and end points of interval.
     ','line_number':209,'multiline':True]
['text':'*
     * Return a new Interval that's a reverse of this one.
     ','line_number':214,'multiline':True]
['text':'*
     * Updates 'this' with the intersection of 'this' and 'other'. If 'this' and 'other'
     * have been compare()d before, that result can be optionally passed in 'cmp'
     ','line_number':219,'multiline':True]
['text':'*
     * Updates 'this" with the union of 'this' and 'other'. If 'this' and 'other' have
     * been compare()d before, that result can be optionaly passed in 'cmp'.
     ','line_number':225,'multiline':True]
['text':' namespace mongo','line_number':246,'multiline':False]
