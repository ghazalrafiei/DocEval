['text':'*
 *    Copyright (C) 2020-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':' IWYU pragma: no_include "ext/alloc_traits.h"','line_number':31,'multiline':False]
['text':'*
 * Adds to the plan summary string being built by 'sb' for the execution stage 'stage'.
 ','line_number':76,'multiline':True]
['text':' First add the stage type string.','line_number':80,'multiline':False]
['text':' Some leaf nodes also provide info about the index they used.','line_number':84,'multiline':False]
['text':'*
 * Traverses the tree rooted at 'root', and adds all nodes into the list 'flattened'. If a
 * MultiPlanStage is encountered, only adds the best plan and its children to 'flattened'.
 ','line_number':113,'multiline':True]
['text':' Only add the winning plan from a MultiPlanStage.','line_number':121,'multiline':False]
['text':'*
 * Traverses the tree rooted at 'root', and adds all tree nodes into the list 'flattened'.
 * If there is a MultiPlanStage node, follows the subplan at 'planIdx'.
 ','line_number':136,'multiline':True]
['text':' Skip the MultiPlanStage, and continue with its planIdx child','line_number':144,'multiline':False]
['text':'*
 * Given the SpecificStats object for a stage and the type of the stage, returns the number of index
 * keys examined by the stage.
 ','line_number':154,'multiline':True]
['text':'*
 * Given the SpecificStats object for a stage and the type of the stage, returns the number of
 * documents examined by the stage.
 ','line_number':176,'multiline':True]
['text':'*
 * Converts the stats tree 'stats' into a corresponding BSON object containing explain information.
 * If there is a MultiPlanStage node, skip that node, and follow the subplan at 'planIdx'.
 *
 * Generates the BSON stats at a verbosity specified by 'verbosity'.
 ','line_number':198,'multiline':True]
['text':' Stop as soon as the BSON object we're building exceeds the limit.','line_number':212,'multiline':False]
['text':' Stage name.','line_number':225,'multiline':False]
['text':' Display the BSON representation of the filter, if there is one.','line_number':228,'multiline':False]
['text':' Some top-level exec stats get pulled out of the root stage.','line_number':233,'multiline':False]
['text':' Include executionTimeMillis if it was recorded.','line_number':236,'multiline':False]
['text':' Stage-specific stats','line_number':253,'multiline':False]
['text':' We're done if there are no children.','line_number':556,'multiline':False]
['text':' If there's just one child (a common scenario), avoid making an array. This makes','line_number':561,'multiline':False]
['text':' the output more readable by saving a level of nesting. Name the field 'inputStage'','line_number':562,'multiline':False]
['text':' rather than 'inputStages'.','line_number':563,'multiline':False]
['text':' There is more than one child. Recursively call statsToBSON(...) on each','line_number':570,'multiline':False]
['text':' of them and add them to the 'inputStages' array.','line_number':571,'multiline':False]
['text':' Skip the MultiPlanStage when it is at the top of the plan, and extract stats from','line_number':585,'multiline':False]
['text':' its child of interest to the caller.','line_number':586,'multiline':False]
['text':' Flatten the stats tree into a list.','line_number':598,'multiline':False]
['text':' Iterate over all stages in the tree and get the total number of keys/docs examined.','line_number':602,'multiline':False]
['text':' These are just aggregations of information already available in the stats tree.','line_number':603,'multiline':False]
['text':' namespace','line_number':616,'multiline':False]
['text':' Use this stream to build the plan summary string.','line_number':653,'multiline':False]
['text':' This is a leaf node. Add to the plan summary string accordingly. Unless','line_number':661,'multiline':False]
['text':' this is the first leaf we've seen, add a delimiting string first.','line_number':662,'multiline':False]
['text':'*
 * Returns a pointer to a MultiPlanStage under 'root', or null if this plan has no such stage.
 ','line_number':675,'multiline':True]
['text':'*
 * If 'root' has a MultiPlanStage returns the index of its best plan. Otherwise returns an
 * initialized value.
 ','line_number':690,'multiline':True]
['text':'*
 * If 'root' has a MultiPlanStage returns the score of its best plan.
 ','line_number':703,'multiline':True]
['text':' We can get some of the fields we need from the common stats stored in the','line_number':719,'multiline':False]
['text':' root stage of the plan tree.','line_number':720,'multiline':False]
['text':' The other fields are aggregations over the stages in the plan tree. We flatten','line_number':724,'multiline':False]
['text':' the tree into a list and then compute these aggregations.','line_number':725,'multiline':False]
['text':' Nonnull replanReason indicates cached plan was less effecient than expected and an','line_number':783,'multiline':False]
['text':' alternative plan was chosen.','line_number':784,'multiline':False]
['text':' Get the stats from the trial period for all the plans.','line_number':838,'multiline':False]
['text':' namespace mongo','line_number':893,'multiline':False]
