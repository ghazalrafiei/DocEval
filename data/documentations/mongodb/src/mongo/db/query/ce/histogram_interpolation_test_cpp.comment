['text':'*
 *    Copyright (C) 2022-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':' This hard-codes a maxdiff histogram with 10 buckets built off a uniform int distribution with','line_number':80,'multiline':False]
['text':' a minimum of 0, a maximum of 1000, and 70 distinct values.','line_number':81,'multiline':False]
['text':' Predicates over bucket bound.','line_number':94,'multiline':False]
['text':' Predicates over value inside of a bucket.','line_number':102,'multiline':False]
['text':' Query: [{$match: {a: {$eq: 530}}}].','line_number':104,'multiline':False]
['text':' Actual: 1.','line_number':106,'multiline':False]
['text':' Query: [{$match: {a: {$lt: 530}}}].','line_number':108,'multiline':False]
['text':' Actual: 50.','line_number':110,'multiline':False]
['text':' Query: [{$match: {a: {$lte: 530}}}].','line_number':112,'multiline':False]
['text':' Actual: 51.','line_number':114,'multiline':False]
['text':' Query: [{$match: {a: {$eq: 400}}}].','line_number':116,'multiline':False]
['text':' Actual: 1.','line_number':118,'multiline':False]
['text':' Query: [{$match: {a: {$lt: 400}}}].','line_number':120,'multiline':False]
['text':' Actual: 39.','line_number':122,'multiline':False]
['text':' Query: [{$match: {a: {$lte: 400}}}].','line_number':124,'multiline':False]
['text':' Actual: 40.','line_number':126,'multiline':False]
['text':' This hard-codes a maxdiff histogram with 10 buckets built off a normal int distribution with','line_number':130,'multiline':False]
['text':' a minimum of 0, a maximum of 1000, and 70 distinct values.','line_number':131,'multiline':False]
['text':' Predicates over bucket bound.','line_number':144,'multiline':False]
['text':' Predicates over value inside of a bucket.','line_number':152,'multiline':False]
['text':' Query: [{$match: {a: {$eq: 150}}}].','line_number':154,'multiline':False]
['text':' Actual: 1.','line_number':156,'multiline':False]
['text':' Query: [{$match: {a: {$lt: 150}}}].','line_number':158,'multiline':False]
['text':' Actual: 9.','line_number':160,'multiline':False]
['text':' Query: [{$match: {a: {$lte: 150}}}].','line_number':162,'multiline':False]
['text':' Actual: 10.','line_number':164,'multiline':False]
['text':' This hard-codes a maxdiff histogram with 10 buckets built off a uniform string distribution','line_number':168,'multiline':False]
['text':' with a minimum length of 3, a maximum length of 5, and 80 distinct values.','line_number':169,'multiline':False]
['text':' Predicates over value inside of a bucket.','line_number':182,'multiline':False]
['text':' Query: [{$match: {a: {$eq: 'TTV'}}}].','line_number':186,'multiline':False]
['text':' Actual: 2.','line_number':188,'multiline':False]
['text':' Query: [{$match: {a: {$lt: 'TTV'}}}].','line_number':190,'multiline':False]
['text':' Actual: 39.','line_number':192,'multiline':False]
['text':' Query: [{$match: {a: {$lte: 'TTV'}}}].','line_number':194,'multiline':False]
['text':' Actual: 41.','line_number':196,'multiline':False]
['text':' This hard-codes a maxdiff histogram with 10 buckets built off a normal string distribution','line_number':200,'multiline':False]
['text':' with a minimum length of 3, a maximum length of 5, and 80 distinct values.','line_number':201,'multiline':False]
['text':' Predicates over bucket bound.','line_number':216,'multiline':False]
['text':' Query: [{$match: {a: {$eq: 'TTV'}}}].','line_number':220,'multiline':False]
['text':' Actual: 5.','line_number':222,'multiline':False]
['text':' Query: [{$match: {a: {$lt: 'TTV'}}}].','line_number':224,'multiline':False]
['text':' Actual: 47.','line_number':226,'multiline':False]
['text':' Query: [{$match: {a: {$lte: 'TTV'}}}].','line_number':228,'multiline':False]
['text':' Actual: 52.','line_number':230,'multiline':False]
['text':' Predicates over value inside of a bucket.','line_number':232,'multiline':False]
['text':' Query: [{$match: {a: {$eq: 'Pfa'}}}].','line_number':235,'multiline':False]
['text':' Actual: 2.','line_number':237,'multiline':False]
['text':' Query: [{$match: {a: {$lt: 'Pfa'}}}].','line_number':239,'multiline':False]
['text':' Actual: 35.','line_number':241,'multiline':False]
['text':' Query: [{$match: {a: {$lte: 'Pfa'}}}].','line_number':243,'multiline':False]
['text':' Actual: 37.','line_number':245,'multiline':False]
['text':' This hard-codes a maxdiff histogram with 20 buckets built off of a uniform distribution with','line_number':249,'multiline':False]
['text':' two types occurring with equal probability:','line_number':250,'multiline':False]
['text':' - 100 distinct ints between 0 and 1000, and','line_number':251,'multiline':False]
['text':' - 100 distinct strings of length between 2 and 5.','line_number':252,'multiline':False]
['text':' Predicates over value inside of the last numeric bucket.','line_number':269,'multiline':False]
['text':' Query: [{$match: {a: {$eq: 993}}}].','line_number':271,'multiline':False]
['text':' Actual: 9.','line_number':273,'multiline':False]
['text':' Query: [{$match: {a: {$lt: 993}}}].','line_number':275,'multiline':False]
['text':' Actual: 241.','line_number':277,'multiline':False]
['text':' Query: [{$match: {a: {$lte: 993}}}].','line_number':279,'multiline':False]
['text':' Actual: 250.','line_number':281,'multiline':False]
['text':' Predicates over value inside of the first string bucket.','line_number':283,'multiline':False]
['text':' Query: [{$match: {a: {$eq: '04e'}}}].','line_number':287,'multiline':False]
['text':' Actual: 3.','line_number':289,'multiline':False]
['text':' Type bracketing: low value of different type than the bucket bound.','line_number':294,'multiline':False]
['text':' Query: [{$match: {a: {$eq: 100000000}}}].','line_number':295,'multiline':False]
['text':' includeScalar ','line_number':296,'multiline':True]
['text':' Actual: 0.','line_number':297,'multiline':False]
['text':' No interpolation for inequality to values inside the first string bucket, fallback to half of','line_number':299,'multiline':False]
['text':' the bucket frequency.','line_number':300,'multiline':False]
['text':' Query: [{$match: {a: {$lt: '04e'}}}].','line_number':302,'multiline':False]
['text':' lowInclusive ','line_number':304,'multiline':True]
['text':' highInclusive ','line_number':307,'multiline':True]
['text':' includeScalar ','line_number':310,'multiline':True]
['text':' Actual: 0.','line_number':311,'multiline':False]
['text':' Query: [{$match: {a: {$lte: '04e'}}}].','line_number':313,'multiline':False]
['text':' lowInclusive ','line_number':315,'multiline':True]
['text':' highInclusive ','line_number':318,'multiline':True]
['text':' includeScalar ','line_number':321,'multiline':True]
['text':' Actual: 3.','line_number':322,'multiline':False]
['text':' Value towards the end of the bucket gets the same half bucket estimate.','line_number':324,'multiline':False]
['text':' Query: [{$match: {a: {$lt: '8B5'}}}].','line_number':327,'multiline':False]
['text':' lowInclusive ','line_number':329,'multiline':True]
['text':' highInclusive ','line_number':332,'multiline':True]
['text':' includeScalar ','line_number':335,'multiline':True]
['text':' Actual: 24.','line_number':336,'multiline':False]
['text':' Query: [{$match: {a: {$lte: '8B5'}}}].','line_number':338,'multiline':False]
['text':' lowInclusive ','line_number':340,'multiline':True]
['text':' highInclusive ','line_number':343,'multiline':True]
['text':' includeScalar ','line_number':346,'multiline':True]
['text':' Actual: 29.','line_number':347,'multiline':False]
['text':' This hard-codes a maxdiff histogram with 10 buckets built off of an array distribution with','line_number':351,'multiline':False]
['text':' arrays between 3 and 5 elements long, each containing 100 distinct ints uniformly distributed','line_number':352,'multiline':False]
['text':' between 0 and 1000. There are no scalar elements.','line_number':353,'multiline':False]
['text':' There are 100 non-empty int-only arrays.','line_number':386,'multiline':False]
['text':' sampleSize ','line_number':388,'multiline':True]
['text':' Query in the middle of the domain: estimate from ArrayUnique histogram.','line_number':390,'multiline':False]
['text':' Test interpolation for query: [{$match: {a: {$elemMatch: {$gt: 500, $lt: 600}}}}].','line_number':396,'multiline':False]
['text':' lowInclusive ','line_number':398,'multiline':True]
['text':' highInclusive ','line_number':401,'multiline':True]
['text':' includeScalar ','line_number':404,'multiline':True]
['text':' actual 21.','line_number':405,'multiline':False]
['text':' Test interpolation for query: [{$match: {a: {$gt: 500, $lt: 600}}}].','line_number':407,'multiline':False]
['text':' Note: although there are no scalars, the estimate is different than the','line_number':408,'multiline':False]
['text':' above since we use different formulas.','line_number':409,'multiline':False]
['text':' lowInclusive ','line_number':411,'multiline':True]
['text':' highInclusive ','line_number':414,'multiline':True]
['text':' includeScalar ','line_number':417,'multiline':True]
['text':' actual 92.','line_number':418,'multiline':False]
['text':' Query at the end of the domain: more precise estimates from ArrayMin, ArrayMax histograms.','line_number':420,'multiline':False]
['text':' Test interpolation for query: [{$match: {a: {$elemMatch: {$gt: 10, $lt: 110}}}}].','line_number':424,'multiline':False]
['text':' lowInclusive ','line_number':426,'multiline':True]
['text':' highInclusive ','line_number':429,'multiline':True]
['text':' includeScalar ','line_number':432,'multiline':True]
['text':' actual 29.','line_number':433,'multiline':False]
['text':' Test interpolation for query: [{$match: {a: {$gt: 10, $lt: 110}}}].','line_number':435,'multiline':False]
['text':' lowInclusive ','line_number':437,'multiline':True]
['text':' highInclusive ','line_number':440,'multiline':True]
['text':' includeScalar ','line_number':443,'multiline':True]
['text':' actual 31.','line_number':444,'multiline':False]
['text':' This hard-codes a maxdiff histogram with 20 buckets built off of a mixed distribution split','line_number':448,'multiline':False]
['text':' with equal probability between:','line_number':449,'multiline':False]
['text':' - an array distribution between 3 and 5 elements long, each containing 80 distinct ints','line_number':450,'multiline':False]
['text':' uniformly distributed between 0 and 1000, and','line_number':451,'multiline':False]
['text':' - a uniform int distribution with 80 distinct ints between 0 and 1000.','line_number':452,'multiline':False]
['text':' There are 94 non-empty int-only arrays.','line_number':491,'multiline':False]
['text':' sampleSize ','line_number':493,'multiline':True]
['text':' Test interpolation for query: [{$match: {a: {$gt: 500, $lt: 550}}}].','line_number':500,'multiline':False]
['text':' lowInclusive ','line_number':502,'multiline':True]
['text':' highInclusive ','line_number':505,'multiline':True]
['text':' includeScalar ','line_number':508,'multiline':True]
['text':' Actual: 94.','line_number':509,'multiline':False]
['text':' Test interpolation for query: [{$match: {a: {$elemMatch: {$gt: 500, $lt: 550}}}}].','line_number':511,'multiline':False]
['text':' lowInclusive ','line_number':513,'multiline':True]
['text':' highInclusive ','line_number':516,'multiline':True]
['text':' includeScalar ','line_number':519,'multiline':True]
['text':' Actual: 8.','line_number':520,'multiline':False]
['text':' namespace','line_number':523,'multiline':False]
['text':' namespace mongo::optimizer::ce','line_number':524,'multiline':False]
