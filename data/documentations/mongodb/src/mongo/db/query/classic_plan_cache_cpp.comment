['text':'*
 *    Copyright (C) 2021-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':' 'tree' could be NULL if the cached solution is a collection scan.','line_number':111,'multiline':False]
['text':' The classic plan cache doesn't have the plan itself, but only some data to re-construct the','line_number':151,'multiline':False]
['text':' plan. It is only useful for skipping multiplanning, and hinted queries are generally not','line_number':152,'multiline':False]
['text':' multi-planned, so it is not necessary to cache the plan. In contrast, the SBE plan cache has','line_number':153,'multiline':False]
['text':' the plan itself, so caching hinted queries could help to skip the plan construction.','line_number':154,'multiline':False]
['text':' We don't read or write from the plan cache for explain. This ensures that explain queries','line_number':167,'multiline':False]
['text':' don't affect cache state, and it also makes sure that we can always generate information','line_number':168,'multiline':False]
['text':' regarding rejected plans and/or trial period execution of candidate plans.','line_number':169,'multiline':False]
['text':'','line_number':170,'multiline':False]
['text':' There is one exception: $lookup's implementation in the DocumentSource engine relies on','line_number':171,'multiline':False]
['text':' caching the plan on the inner side in order to avoid repeating the planning process for every','line_number':172,'multiline':False]
['text':' document on the outer side. To ensure that the 'executionTime' value is accurate for $lookup,','line_number':173,'multiline':False]
['text':' we allow the inner side to use the cache even if the query is an explain.','line_number':174,'multiline':False]
['text':' Tailable cursors won't get cached, just turn into collscans.','line_number':180,'multiline':False]
['text':' namespace mongo','line_number':187,'multiline':False]
