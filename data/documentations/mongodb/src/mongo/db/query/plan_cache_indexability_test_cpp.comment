['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':'*
 * Produce a MatchExpression from BSON.
 *
 * If the caller would like the MatchExpression to have a collation associated with it, they may
 * pass in an ExpressionContext owning the collation. Otherwise the caller may pass nullptr and a
 * default-constructed ExpressionContextForTest will be used.
 ','line_number':63,'multiline':True]
['text':' Helper which constructs a $** IndexEntry and returns it along with an owned ProjectionExecutor.','line_number':84,'multiline':False]
['text':' The latter simulates the ProjectionExecutor which, during normal operation, is owned and','line_number':85,'multiline':False]
['text':' maintained by the $** index's IndexAccessMethod, and is required because the plan cache will','line_number':86,'multiline':False]
['text':' obtain unowned pointers to it.','line_number':87,'multiline':False]
['text':' multikey','line_number':94,'multiline':False]
['text':' sparse','line_number':97,'multiline':False]
['text':' unique','line_number':98,'multiline':False]
['text':' Test sparse index discriminators for a simple sparse index.','line_number':107,'multiline':False]
['text':' multikey','line_number':115,'multiline':False]
['text':' sparse','line_number':118,'multiline':False]
['text':' unique','line_number':119,'multiline':False]
['text':' name','line_number':120,'multiline':False]
['text':' filterExpr','line_number':121,'multiline':False]
['text':' Test sparse index discriminators for a compound sparse index.','line_number':148,'multiline':False]
['text':' multikey','line_number':156,'multiline':False]
['text':' sparse','line_number':159,'multiline':False]
['text':' unique','line_number':160,'multiline':False]
['text':' name','line_number':161,'multiline':False]
['text':' filterExpr','line_number':162,'multiline':False]
['text':' Test partial index discriminators for an index with a simple filter.','line_number':194,'multiline':False]
['text':' multikey','line_number':204,'multiline':False]
['text':' sparse','line_number':207,'multiline':False]
['text':' unique','line_number':208,'multiline':False]
['text':' name','line_number':209,'multiline':False]
['text':' The partial index is represented as a global discriminator that applies to the entire','line_number':215,'multiline':False]
['text':' incoming MatchExpression.','line_number':216,'multiline':False]
['text':' Test partial index discriminators for an index where the filter expression is an AND.','line_number':249,'multiline':False]
['text':' multikey','line_number':259,'multiline':False]
['text':' sparse','line_number':262,'multiline':False]
['text':' unique','line_number':263,'multiline':False]
['text':' name','line_number':264,'multiline':False]
['text':' partial index discriminators are global to the entire query, so an individual path should not','line_number':270,'multiline':False]
['text':' have any discriminators. Also the entire query must be a subset of the partial filter','line_number':271,'multiline':False]
['text':' expression, not just the leaves.','line_number':272,'multiline':False]
['text':' A match expression which is covered entirely by the partial filter should pass the global','line_number':302,'multiline':False]
['text':' discriminator.','line_number':303,'multiline':False]
['text':' The path 'a' will still have a discriminator for the collation (even though it's','line_number':313,'multiline':False]
['text':' defaulted).','line_number':314,'multiline':False]
['text':' Test partial index discriminators where there are multiple partial indexes.','line_number':327,'multiline':False]
['text':' multikey','line_number':342,'multiline':False]
['text':' sparse','line_number':345,'multiline':False]
['text':' unique','line_number':346,'multiline':False]
['text':' name','line_number':347,'multiline':False]
['text':' multikey','line_number':355,'multiline':False]
['text':' sparse','line_number':358,'multiline':False]
['text':' unique','line_number':359,'multiline':False]
['text':' name','line_number':360,'multiline':False]
['text':' partial index discriminators are global to the entire query, so an individual path within the','line_number':366,'multiline':False]
['text':' partial filter should not have any discriminators. Also the entire query must be a subset of','line_number':367,'multiline':False]
['text':' the partial filter expression, not just the leaves.','line_number':368,'multiline':False]
['text':' The paths 'a' and 'b' will have one discriminator each to capture the collation of the index.','line_number':401,'multiline':False]
['text':' Test that a discriminator is generated for a regular index (this discriminator will only encode','line_number':431,'multiline':False]
['text':' collation indexability).','line_number':432,'multiline':False]
['text':' multikey','line_number':440,'multiline':False]
['text':' sparse','line_number':443,'multiline':False]
['text':' unique','line_number':444,'multiline':False]
['text':' name','line_number':445,'multiline':False]
['text':' Test discriminator for a simple index with a collation.','line_number':455,'multiline':False]
['text':' multikey','line_number':462,'multiline':False]
['text':' sparse','line_number':465,'multiline':False]
['text':' unique','line_number':466,'multiline':False]
['text':' name','line_number':467,'multiline':False]
['text':' filterExpr','line_number':468,'multiline':False]
['text':' Index collator matches query collator.','line_number':485,'multiline':False]
['text':' Expression is not a ComparisonMatchExpression, InternalExprEqMatchExpression or','line_number':496,'multiline':False]
['text':' InMatchExpression.','line_number':497,'multiline':False]
['text':' Expression is a ComparisonMatchExpression with non-matching collator.','line_number':502,'multiline':False]
['text':' Expression is an InternalExprEqMatchExpression with non-matching collator.','line_number':516,'multiline':False]
['text':' Expression is an InMatchExpression with non-matching collator.','line_number':528,'multiline':False]
['text':' Test that a discriminator is produced for each field in a compound index (this discriminator will','line_number':544,'multiline':False]
['text':' only encode collation indexability).','line_number':545,'multiline':False]
['text':' multikey','line_number':553,'multiline':False]
['text':' sparse','line_number':556,'multiline':False]
['text':' unique','line_number':557,'multiline':False]
['text':' name','line_number':558,'multiline':False]
['text':' Querying for array values isn't supported by wildcard indexes.','line_number':590,'multiline':False]
['text':' Querying for null isn't supported by wildcard indexes.','line_number':593,'multiline':False]
['text':' Equality on empty array is supported.','line_number':597,'multiline':False]
['text':' Inequality isn't.','line_number':599,'multiline':False]
['text':' Cases which use $in.','line_number':603,'multiline':False]
['text':' Empty array inside the $in.','line_number':608,'multiline':False]
['text':' Objects, non-empty arrays and null inside a $in.','line_number':612,'multiline':False]
['text':' Match expression which uses the simple collation isn't compatible.','line_number':641,'multiline':False]
['text':' Match expression which uses the same collation as the index is.','line_number':644,'multiline':False]
['text':' Need to keep the filter BSON object around for the duration of the test since the match','line_number':652,'multiline':False]
['text':' expression will store (unowned) pointers into it.','line_number':653,'multiline':False]
['text':' Since the fields in the partialFilterExpression are known a priori, they are _not_ part of','line_number':665,'multiline':False]
['text':' the wildcard-discriminators, but rather the regular discriminators. Here we show that the','line_number':666,'multiline':False]
['text':' wildcard discriminators consider all expressions on fields 'a' or 'b' to be compatible.','line_number':667,'multiline':False]
['text':' The global discriminator for the index "indexName" should reflect whether a MatchExpression','line_number':677,'multiline':False]
['text':' is compatible with the partial filter expression.','line_number':678,'multiline':False]
['text':' There shouldn't be any regular discriminators associated with path "b".','line_number':698,'multiline':False]
['text':' Verify that the discriminator considers equality to empty object compatible.','line_number':717,'multiline':False]
['text':' $lte:{} is a synonym for $eq:{}, and therefore is also compatible.','line_number':720,'multiline':False]
['text':' An $in with an empty object is compatible.','line_number':724,'multiline':False]
['text':' Equality to a non-empty object is not compatible.','line_number':728,'multiline':False]
['text':' Inequality with an empty object is not compatible.','line_number':732,'multiline':False]
['text':' Inequality with a non-empty object is not compatible.','line_number':740,'multiline':False]
['text':' An $in with a non-empty object is not compatible.','line_number':744,'multiline':False]
['text':' namespace','line_number':749,'multiline':False]
['text':' namespace mongo','line_number':750,'multiline':False]
