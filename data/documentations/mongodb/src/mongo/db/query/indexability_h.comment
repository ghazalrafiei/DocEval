['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':'*
 * Logic for how indices can be used with an expression.
 ','line_number':36,'multiline':True]
['text':'*
     * Is an index over me->path() useful?
     * This is the same thing as being sargable, if you have a RDBMS background.
     ','line_number':41,'multiline':True]
['text':'*
     * Type bracketing does not apply to internal Expressions. This could cause the use of a sparse
     * index return incomplete results. For example, a query {$expr: {$lt: ["$missing", "r"]}} would
     * expect a document like, {a: 1}, with field "missing" missing be returned. However, a sparse
     * index, {missing: 1} does not index the document. Therefore, we should ban use of any sparse
     * index on following expression types.
     ','line_number':57,'multiline':True]
['text':'*
     * This array operator doesn't have any children with fields and can use an index.
     *
     * Example: a: {$elemMatch: {$gte: 1, $lte: 1}}.
     ','line_number':77,'multiline':True]
['text':' We have an ELEM_MATCH_VALUE expression. In order to be','line_number':91,'multiline':False]
['text':' considered "indexable" all children of the ELEM_MATCH_VALUE','line_number':92,'multiline':False]
['text':' must be "indexable" type expressions as well.','line_number':93,'multiline':False]
['text':' Special case for NOT: If the child is a NOT, then it's the thing below','line_number':97,'multiline':False]
['text':' the NOT that we care about.','line_number':98,'multiline':False]
['text':' We can't index negations of this kind of expression node.','line_number':105,'multiline':False]
['text':' It's the child of the NOT that we check for indexability.','line_number':109,'multiline':False]
['text':' Special handling for NOT has already been done; don't fall through.','line_number':114,'multiline':False]
['text':' The entire ELEM_MATCH_VALUE is indexable since every one of its children','line_number':123,'multiline':False]
['text':' is indexable.','line_number':124,'multiline':False]
['text':'*
     * Certain array operators require that the field for that operator is prepended
     * to all fields in that operator's children.
     *
     * Example: a: {$elemMatch: {b:1, c:1}}.
     ','line_number':128,'multiline':True]
['text':'*
     * Returns true if 'me' is a NOT, and the child of the NOT can use
     * an index on its own field.
     ','line_number':138,'multiline':True]
['text':'*
     * Returns true if either 'me' is a bounds generating NOT,
     * or 'me' can use an index on its own field.
     ','line_number':147,'multiline':True]
['text':'*
     * Returns true if 'elt' is a BSONType for which exact index bounds can be generated.
     ','line_number':155,'multiline':True]
['text':'*
     * Returns true if 'me' is "sargable" but is not a negation and
     * is not an array node such as ELEM_MATCH_VALUE.
     *
     * Used as a helper for nodeCanUseIndexOnOwnField().
     ','line_number':182,'multiline':True]
['text':' namespace mongo','line_number':209,'multiline':False]
