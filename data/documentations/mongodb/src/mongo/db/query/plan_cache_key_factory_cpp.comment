['text':'*
 *    Copyright (C) 2021-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':' For each discriminator on this path, append the character '0' or '1'.','line_number':75,'multiline':False]
['text':' If the node is not compatible with any type of index, add a single '0' discriminator','line_number':82,'multiline':False]
['text':' here. Otherwise add a '1'.','line_number':83,'multiline':False]
['text':' Before encoding the indexability of the leaf MatchExpressions, apply the global','line_number':97,'multiline':False]
['text':' discriminators to the expression as a whole. This is for cases such as partial indexes which','line_number':98,'multiline':False]
['text':' must discriminate based on the entire query.','line_number':99,'multiline':False]
['text':' TODO: SERVER-77571 use acquisitions APIs for retrieving the shardVersion.','line_number':127,'multiline':False]
['text':' We don't version secondary collections in the current shard versioning protocol. Also, since','line_number':132,'multiline':False]
['text':' currently we only push down $lookup to SBE when secondary collections (and main collection)','line_number':133,'multiline':False]
['text':' are unsharded, it's OK to not encode the sharding information here.','line_number':134,'multiline':False]
['text':' namespace','line_number':148,'multiline':False]
['text':' namespace plan_cache_detail','line_number':167,'multiline':False]
['text':' isSecondaryColl ','line_number':173,'multiline':True]
['text':' We always use the collection order saved in MultipleCollectionAccessor to populate the plan','line_number':176,'multiline':False]
['text':' cache key, which is ordered by the secondary collection namespaces.','line_number':177,'multiline':False]
['text':' isSecondaryColl ','line_number':181,'multiline':True]
['text':' namespace plan_cache_key_factory','line_number':193,'multiline':False]
['text':' namespace mongo','line_number':195,'multiline':False]
