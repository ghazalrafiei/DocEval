['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':' IWYU pragma: keep','line_number':71,'multiline':False]
['text':'*
 * Adds the 'queryPlanner' explain section to the BSON object being built by 'out'.
 *
 * This is a helper for generating explain BSON. It is used by explainStages(...).
 *
 * - 'exec' is a PlanExecutor which executes the plan for the operation being explained.
 * - 'collection' is the collection used in the operation. The caller should hold an IS lock on the
 *    collection which the query is for, even if 'collection' is nullptr.
 * - 'extraInfo' specifies additional information to include into the output.
 * - 'out' is a builder for the explain output.
 ','line_number':76,'multiline':True]
['text':' Find whether there is an index filter set for the query shape. The 'indexFilterSet' field','line_number':98,'multiline':False]
['text':' will always be false in the case of EOF or idhack plans.','line_number':99,'multiline':False]
['text':' In general we should have a canonical query, but sometimes we may avoid creating a canonical','line_number':129,'multiline':False]
['text':' query as an optimization (specifically, the update system does not canonicalize for idhack','line_number':130,'multiline':False]
['text':' updates). In these cases, 'query' is NULL.','line_number':131,'multiline':False]
['text':'*
 * Generates the execution stats section from the given 'PlanStatsDetails', adding the resulting
 * BSON document and specific execution metrics to 'out'.
 *
 * The 'totalTimeMillis' value passed here will be added to the top level of the execution stats
 * section, but will not affect the reporting of timing for individual stages. If 'totalTimeMillis'
 * is not set, we use the approximate timing information collected by the stages.
 *
 * The 'isTrialPeriodInfo' value indicates whether the function was called to generate the
 * stats collected during the trial period of the plan selection phase, i.e is this section being
 * generated for the 'allPlansExecution' field.
 *
 * Stats are generated at the verbosity specified by 'verbosity'.
 ','line_number':184,'multiline':True]
['text':' Time elapsed could might be either precise or approximate.','line_number':207,'multiline':False]
['text':' Only the scores calculated from the trial period should be outputted alongside each plan','line_number':235,'multiline':False]
['text':' in 'allPlansExecution' and not alongside the winning plan stats in 'executionStats'.','line_number':236,'multiline':False]
['text':' Add the tree of stages, with individual execution stats for each stage.','line_number':241,'multiline':False]
['text':'*
 * Adds the "executionStats" field to out. Assumes that the PlanExecutor has already been executed
 * to the point of reaching EOF. Also assumes that verbosity >= kExecStats.
 *
 * If verbosity >= kExecAllPlans, it will include the "allPlansExecution" array.
 *
 * - 'execPlanStatus' is OK if the query was exected successfully, or a non-OK status if there
 *   was a runtime error.
 ','line_number':257,'multiline':True]
['text':' If there is an execution error while running the query, the error is reported under the','line_number':281,'multiline':False]
['text':' "executionStats" section and the explain as a whole succeeds.','line_number':282,'multiline':False]
['text':' Generate exec stats BSON for the winning plan.','line_number':289,'multiline':False]
['text':' isTrialPeriodInfo ','line_number':295,'multiline':True]
['text':' Also generate exec stats for all plans, if the verbosity level is high enough. These stats','line_number':297,'multiline':False]
['text':' reflect what happened during the trial period that ranked the plans.','line_number':298,'multiline':False]
['text':' If we ranked multiple plans against each other, then add stats collected from the trial','line_number':300,'multiline':False]
['text':' period of the winning plan. The "allPlansExecution" section will contain an','line_number':301,'multiline':False]
['text':' apples-to-apples comparison of the winning plan's stats against all rejected plans' stats','line_number':302,'multiline':False]
['text':' collected during the trial period.','line_number':303,'multiline':False]
['text':' If the winning plan was uncontested, leave the `allPlansExecution` array empty.','line_number':306,'multiline':False]
['text':' isTrialPeriodInfo ','line_number':310,'multiline':True]
['text':' isTrialPeriodInfo ','line_number':316,'multiline':True]
['text':'*
 * Executes the given plan executor, discarding the resulting documents, until it reaches EOF. If a
 * runtime error occur or execution is killed, throws a DBException.
 *
 * If 'exec' is configured for yielding, then a call to this helper could result in a yield.
 ','line_number':326,'multiline':True]
['text':' Discard the resulting documents.','line_number':335,'multiline':False]
['text':'*
 * Returns a BSON document in the form of {explainVersion: <version>} with the 'version' parameter
 * serialized into the <version> element.
 ','line_number':339,'multiline':True]
['text':' namespace','line_number':359,'multiline':False]
['text':'','line_number':370,'multiline':False]
['text':' Use the stats trees to produce explain BSON.','line_number':371,'multiline':False]
['text':'','line_number':372,'multiline':False]
['text':' If we need execution stats, this runs the plan in order to gather the stats.','line_number':399,'multiline':False]
['text':' TODO SERVER-32732: An execution error should be reported in explain, but should not','line_number':401,'multiline':False]
['text':' cause the explain itself to fail.','line_number':402,'multiline':False]
['text':' If we need execution stats, then run the plan in order to gather the stats.','line_number':428,'multiline':False]
['text':' If executing the query failed, for any number of reasons other than a planning failure,','line_number':437,'multiline':False]
['text':' then the collection may no longer be valid. We conservatively set our collection pointer','line_number':438,'multiline':False]
['text':' to null in case it is invalid.','line_number':439,'multiline':False]
['text':' Add the 'createdFromQuery' object.','line_number':500,'multiline':False]
['text':' isTrialPeriodInfo ','line_number':522,'multiline':True]
['text':' namespace mongo','line_number':558,'multiline':False]
