['text':'*
 *    Copyright (C) 2023-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':' Explicitly defines the `SerializationContext` to be used in `RepresentativeQueryInfo` factory','line_number':46,'multiline':False]
['text':' methods. This was done as part of SERVER-79909 to ensure that inner query commands correctly','line_number':47,'multiline':False]
['text':' infer the `tenantId`.','line_number':48,'multiline':False]
['text':' nonPrefixedTenantId ','line_number':52,'multiline':True]
['text':' namespace','line_number':53,'multiline':False]
['text':'
 * Creates the corresponding RepresentativeQueryInfo for Find query representatives.
 ','line_number':55,'multiline':True]
['text':' apiStrict ','line_number':64,'multiline':True]
['text':' Populate encryption information.','line_number':67,'multiline':False]
['text':' Check if the find command is eligible for IDHACK.','line_number':70,'multiline':False]
['text':' Extract namespace from find command.','line_number':76,'multiline':False]
['text':'
 * Creates the corresponding RepresentativeQueryInfo for Distinct query representatives.
 ','line_number':98,'multiline':True]
['text':' apiStrict ','line_number':108,'multiline':True]
['text':' Extract namespace from distinct command.','line_number':118,'multiline':False]
['text':' encryptionInformation ','line_number':136,'multiline':True]
['text':' isIdHackEligibleQuery ','line_number':137,'multiline':True]
['text':'
 * Creates the corresponding RepresentativeQueryInfo for Aggregation query representatives.
 ','line_number':140,'multiline':True]
['text':' apiStrict ','line_number':149,'multiline':True]
['text':' Add the aggregate command request to the expression context for the parsed pipeline','line_number':151,'multiline':False]
['text':' to be able to get the involved namespaces.','line_number':152,'multiline':False]
['text':' Populate encryption information.','line_number':155,'multiline':False]
['text':' Populate foreign collection namespaces.','line_number':158,'multiline':False]
['text':' When parsing the pipeline, we try to resolve the namespaces, which requires the resolved','line_number':162,'multiline':False]
['text':' namespaces to be present in the expression context.','line_number':163,'multiline':False]
['text':' We also need to add the main namespace because 'addResolvedNamespaces' only','line_number':167,'multiline':False]
['text':' adds the foreign collections.','line_number':168,'multiline':False]
['text':' For aggregate queries, the check for IDHACK should not be taken into account due to the','line_number':180,'multiline':False]
['text':' complexity of determining if a pipeline is eligible or not for IDHACK.','line_number':181,'multiline':False]
['text':' isIdHackEligibleQuery ','line_number':190,'multiline':True]
['text':' Return the found query settings or an empty one.','line_number':230,'multiline':False]
['text':'*
 * Returns the namespace field of the hint, in case it is present. In case it is not present, it
 * returns the inferred namespace or throws an error if multiple collections are involved.
 ','line_number':236,'multiline':True]
['text':' In case the namespace is not defined but there is only one collection involved,','line_number':254,'multiline':False]
['text':' we can infer the namespace.','line_number':255,'multiline':False]
['text':'*
 * Validates that `setQuerySettings` command namespace can naïvely be deduced
 * from the query shape if only one collection is involved. In case multiple collections are
 * involved, the method ensures that each index hint is used at most once.
 *
 * This method also checks that every index hint namespace specified refers to an “involved”
 * collection and that two index hints cannot refer to the same collection.
 ','line_number':259,'multiline':True]
['text':' If there are no index hints involved, no validation is required.','line_number':271,'multiline':False]
['text':'*
 * Validates that QueryShapeConfiguration is not specified for queries with queryable encryption.
 ','line_number':304,'multiline':True]
['text':' Validates that the settings field for query settings is not empty.','line_number':326,'multiline':False]
['text':' Validates that the query settings' representative is not eligible for IDHACK.','line_number':333,'multiline':False]
['text':' namespace utils','line_number':341,'multiline':False]
['text':' namespace mongo::query_settings','line_number':342,'multiline':False]
