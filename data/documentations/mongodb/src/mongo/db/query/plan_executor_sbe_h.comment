['text':'*
 *    Copyright (C) 2019-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':' Only for $search queries, holds the metadata returned from mongot.','line_number':74,'multiline':False]
['text':' Using SBE to execute a count command is not yet supported.','line_number':128,'multiline':False]
['text':' Using SBE to execute an update command is not yet supported.','line_number':133,'multiline':False]
['text':' Using SBE to execute an update command is not yet supported.','line_number':137,'multiline':False]
['text':' Using SBE to execute a delete command is not yet supported.','line_number':142,'multiline':False]
['text':' Using SBE to execute a delete command is not yet supported.','line_number':147,'multiline':False]
['text':' Using SBE to execute a batched delete command is not yet supported.','line_number':152,'multiline':False]
['text':'*
     * The caller must acquire a top level AutoGet object outside of this PlanExecutor in order to
     * open a storage transaction and establish a consistent view of the catalog.
     ','line_number':178,'multiline':True]
['text':'*
     * For queries that have multiple executors, this can be used to differentiate between them.
     ','line_number':209,'multiline':True]
['text':' Vector of secondary namespaces.','line_number':231,'multiline':False]
['text':' CompileCtx owns the instance pointed by _env, so we must keep it around.','line_number':235,'multiline':False]
['text':' Only for a resumed scan ("seek"). Slot holding the TypeTags::RecordId of the record to resume','line_number':246,'multiline':False]
['text':' the scan from. '_seekRecordId' is the RecordId value, initialized from the slot at runtime.','line_number':247,'multiline':False]
['text':' Only for clustered collection scans, holds the minimum record ID of the scan, if applicable.','line_number':250,'multiline':False]
['text':' Only for clustered collection scans, holds the maximum record ID of the scan, if applicable.','line_number':253,'multiline':False]
['text':' NOTE: '_stash' stores documents as BSON. Currently, one of the '_stash' is usages is to store','line_number':258,'multiline':False]
['text':' documents received from the plan during multiplanning. This means that the documents','line_number':259,'multiline':False]
['text':' generated during multiplanning cannot exceed maximum BSON size. $group and $lookup CAN','line_number':260,'multiline':False]
['text':' produce documents larger than maximum BSON size. But $group and $lookup never participate in','line_number':261,'multiline':False]
['text':' multiplanning. This is why maximum BSON size limitation in '_stash' is not an issue for such','line_number':262,'multiline':False]
['text':' operators.','line_number':263,'multiline':False]
['text':' Another usage of '_stash' is when the 'find' command cannot fit the last returned document','line_number':264,'multiline':False]
['text':' into the result batch. But in this case each document is already requried to fit into the','line_number':265,'multiline':False]
['text':' maximum BSON size, because all results are encoded into BSON before returning to client. So','line_number':266,'multiline':False]
['text':' using BSON in '_stash' does not introduce any additional limitations.','line_number':267,'multiline':False]
['text':' If we are returning owned result (i.e. value is moved out of the result accessor) then its','line_number':270,'multiline':False]
['text':' lifetime must extend up to the next getNext (or saveState).','line_number':271,'multiline':False]
['text':' If _killStatus has a non-OK value, then we have been killed and the value represents the','line_number':274,'multiline':False]
['text':' reason for the kill.','line_number':275,'multiline':False]
['text':' For parameterized queries generated by Bonsai, we transfer ownership of the pipeline to the','line_number':280,'multiline':False]
['text':' plan executor. This is to allow the slots in the runtime environment containing parameterized','line_number':281,'multiline':False]
['text':' constants to be views over the MatchExpression contained in the pipeline; this allows us to','line_number':282,'multiline':False]
['text':' avoid potentially expensive copies when binding constants into the plan.','line_number':283,'multiline':False]
['text':' Indicates whether this executor was constructed via Bonsai/CQF.','line_number':294,'multiline':False]
['text':'*
     * For commands that return multiple cursors, this value will contain the type of cursor.
     * Default to a regular result cursor.
     ','line_number':297,'multiline':True]
['text':'*
 * Executes getNext() on the 'root' PlanStage and used 'resultSlot' and 'recordIdSlot' to access the
 * fetched document and it's record id, which are stored in 'out' and 'dlOut' parameters
 * respectively, if they not null pointers.
 *
 * This common logic can be used by various consumers which need to fetch data using an SBE
 * PlanStage tree, such as PlanExecutor or RuntimePlanner.
 ','line_number':307,'multiline':True]
['text':' namespace mongo','line_number':321,'multiline':False]
