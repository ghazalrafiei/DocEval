['text':'*
 *    Copyright (C) 2020-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':' If this is an awaitData-respecting operation and we have time left and we're not interrupted,','line_number':69,'multiline':False]
['text':' we should wait for inserts.','line_number':70,'multiline':False]
['text':' We expect awaitData cursors to be yielding.','line_number':72,'multiline':False]
['text':' For operations with a last committed opTime, we should not wait if the replication','line_number':75,'multiline':False]
['text':' coordinator's lastCommittedOpTime has progressed past the client's lastCommittedOpTime.','line_number':76,'multiline':False]
['text':' In that case, we will return early so that we can inform the client of the new','line_number':77,'multiline':False]
['text':' lastCommittedOpTime immediately.','line_number':78,'multiline':False]
['text':' We don't expect to need a capped insert notifier for non-yielding plans.','line_number':92,'multiline':False]
['text':' In case of the read concern majority, return a majority committed point notifier, otherwise,','line_number':95,'multiline':False]
['text':' a notifier associated with that capped collection','line_number':96,'multiline':False]
['text':'','line_number':97,'multiline':False]
['text':' We can only wait on the capped collection insert notifier if the collection is present,','line_number':98,'multiline':False]
['text':' otherwise we should retry immediately when we hit EOF.','line_number':99,'multiline':False]
['text':' The notifier wait() method will not wait unless the version passed to it matches the','line_number':114,'multiline':False]
['text':' current version of the notifier.  Since the version passed to it is the current version','line_number':115,'multiline':False]
['text':' of the notifier at the time of the previous EOF, we require two EOFs in a row with no','line_number':116,'multiline':False]
['text':' notifier version change in order to wait.  This is sufficient to ensure we never wait','line_number':117,'multiline':False]
['text':' when data is available.','line_number':118,'multiline':False]
['text':' namespace mongo::insert_listener','line_number':138,'multiline':False]
