['text':'*
 *    Copyright (C) 2022-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':' IWYU pragma: keep','line_number':41,'multiline':False]
['text':'n','line_number':67,'multiline':True]
['text':'node','line_number':68,'multiline':True]
['text':' Default estimate for scan.','line_number':69,'multiline':False]
['text':'n','line_number':75,'multiline':True]
['text':'node','line_number':75,'multiline':True]
['text':' Assumed to be free.','line_number':76,'multiline':False]
['text':'n','line_number':80,'multiline':True]
['text':'n','line_number':86,'multiline':True]
['text':'node','line_number':86,'multiline':True]
['text':' SeekNode should deliver one result via cardinality estimate override.','line_number':87,'multiline':False]
['text':' TODO: consider using node.getProjectionMap()._fieldProjections.size() to make the cost','line_number':88,'multiline':False]
['text':' dependent on the size of the projection','line_number':89,'multiline':False]
['text':'n','line_number':95,'multiline':True]
['text':' Notice that unlike all physical nodes, this logical node takes it cardinality directly','line_number':98,'multiline':False]
['text':' from the memo group logical property, ignoring _cardinalityEstimate.','line_number':99,'multiline':False]
['text':' If we are performing a seek, normalize against the scan group cardinality. The','line_number':105,'multiline':False]
['text':' scan group estimate takes into account the size of the collection. Here we want','line_number':106,'multiline':False]
['text':' to effectively isolate the selectivity of the residual predicates over the seek','line_number':107,'multiline':False]
['text':' since the seek will return one document at a time (there is a limit applied over','line_number':108,'multiline':False]
['text':' it). getAdjustedCE below will take into account the expected number of rid's','line_number':109,'multiline':False]
['text':' delivered by the index side (via the repetition estimate).','line_number':110,'multiline':False]
['text':'n','line_number':130,'multiline':True]
['text':'node','line_number':131,'multiline':True]
['text':'n','line_number':135,'multiline':True]
['text':' Non-trivial filter.','line_number':139,'multiline':False]
['text':'n','line_number':146,'multiline':True]
['text':' Non-trivial projection.','line_number':150,'multiline':False]
['text':'n','line_number':157,'multiline':True]
['text':'n','line_number':167,'multiline':True]
['text':' TODO: distinguish build side and probe side.','line_number':171,'multiline':False]
['text':'n','line_number':179,'multiline':True]
['text':'n','line_number':192,'multiline':True]
['text':' The cost of a sorted merge is the sum of the cost of its children, plus the overhead of','line_number':195,'multiline':False]
['text':' comparing the children (an incremental cost).','line_number':196,'multiline':False]
['text':'n','line_number':205,'multiline':True]
['text':' UnionNode with one child is optimized away before lowering, therefore','line_number':207,'multiline':False]
['text':' its cost is the cost of its child.','line_number':208,'multiline':False]
['text':' The cost is the sum of the costs of its children and the cost to union each child.','line_number':215,'multiline':False]
['text':'n','line_number':224,'multiline':True]
['text':' TODO: for now pretend global group by is free.','line_number':228,'multiline':False]
['text':' TODO: consider RepetitionEstimate since this is a stateful operation.','line_number':232,'multiline':False]
['text':'n','line_number':239,'multiline':True]
['text':' Unwind probably depends mostly on its output size.','line_number':241,'multiline':False]
['text':'n','line_number':248,'multiline':True]
['text':'n','line_number':255,'multiline':True]
['text':' TODO: SERVER-71821: Calibration for Spool producer node.','line_number':257,'multiline':False]
['text':'n','line_number':262,'multiline':True]
['text':' TODO: SERVER-71822: Calibration for Spool consumer node.','line_number':263,'multiline':False]
['text':'n','line_number':268,'multiline':True]
['text':' TODO: consider RepetitionEstimate since this is a stateful operation.','line_number':270,'multiline':False]
['text':' Notice that log2(x) < 0 for any x < 1, and log2(1) = 0. Generally it makes sense that','line_number':282,'multiline':False]
['text':' there is no cost to sort 1 document, so the only cost left is the startup cost.','line_number':283,'multiline':False]
['text':' TODO: The cost formula below is based on 1 field, mix of int and str. Instead we','line_number':287,'multiline':False]
['text':' have to take into account the number and size of sorted fields.','line_number':288,'multiline':False]
['text':'n','line_number':293,'multiline':True]
['text':' Assumed to be free.','line_number':294,'multiline':False]
['text':'n','line_number':301,'multiline':True]
['text':'n','line_number':323,'multiline':True]
['text':'*
     * Other ABT types.
     ','line_number':327,'multiline':True]
['text':'n','line_number':331,'multiline':True]
['text':'node','line_number':331,'multiline':True]
['text':' First: correct for un-enforced limit.','line_number':411,'multiline':False]
['text':' Second: correct for enforced limit.','line_number':419,'multiline':False]
['text':' Third: correct for repetition.','line_number':427,'multiline':False]
['text':' Fourth: correct for orphans.','line_number':432,'multiline':False]
['text':' This plan fragment is going to see some orphaned documents at execution time that are not','line_number':433,'multiline':False]
['text':' reflected in the logical CE. To account for this, we bump the CE to adjust the cost','line_number':434,'multiline':False]
['text':' accordingly.','line_number':435,'multiline':False]
['text':' We don't own this.','line_number':444,'multiline':False]
['text':' namespace','line_number':453,'multiline':False]
['text':' namespace mongo::cost_model','line_number':466,'multiline':False]
