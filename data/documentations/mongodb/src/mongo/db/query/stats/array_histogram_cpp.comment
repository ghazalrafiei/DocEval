['text':'*
 *    Copyright (C) 2022-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':'*
 * Helper class to iterate over all of a histogram's type-brackets and their frequencies in order.
 ','line_number':99,'multiline':True]
['text':'*
     * Iterates over the bounds & buckets one type-bracket at the time, starting from the first
     * bucket/bound. It sums up the frequencies of all the buckets in the current type-bracket, then
     * updates the internal counter so the next call to this function will return the left-most type
     * tag and total frequency of the next type-bracket in the histogram as a pair {tag, frequency}.
     * Once there are no more type-brackets left in the histogram, this will return the tag Nothing
     * with a frequency of 0.0, and 'hasNext()' will return false.
     ','line_number':110,'multiline':True]
['text':' Update tag & frequency for the left-most bucket in the current type-bracket.','line_number':122,'multiline':False]
['text':' Increment the bucket counter to look at the next bucket.','line_number':127,'multiline':False]
['text':' Aggregate all frequencies for the current type bracket.','line_number':130,'multiline':False]
['text':' Get the tag for the next bucket.','line_number':132,'multiline':False]
['text':' Stop aggregating when the next bound belongs to a different type bracket.','line_number':135,'multiline':False]
['text':' This is the rightmost bucket in the current type-bracket (so far). Update the','line_number':138,'multiline':False]
['text':' frequency counter and look at the next bucket.','line_number':139,'multiline':False]
['text':' This was the last type-bracket in the histogram. There are no more buckets left.','line_number':145,'multiline':False]
['text':'*
 * Validates the type counts per type bracket compared to those in the scalar histogram according to
 * the comparison function isValid(). It takes a type-bracket count from 'tc' as the left argument
 * and one from 's' as a right argument and returns whether or not the two counts are valid relative
 * to each other.
 ','line_number':161,'multiline':True]
['text':'tc','line_number':169,'multiline':True]
['text':'s','line_number':169,'multiline':True]
['text':' Ensure that all histogrammable type brackets are accounted for in the histogram.','line_number':172,'multiline':False]
['text':' We may see a type-bracket tag that is any numeric type (all numerics fall in the','line_number':181,'multiline':False]
['text':' same type bracket)  but because we put nans in a separate counter and not in','line_number':182,'multiline':False]
['text':' histogram buckets, we should add them to the histogram frequency.','line_number':183,'multiline':False]
['text':' Ensure that all histogrammable type counts are accounted for in the type counters.','line_number':194,'multiline':False]
['text':' While typeCount include types for nans but nans are in a separate counts the typeCounts needs','line_number':195,'multiline':False]
['text':' to subtract nan counts.','line_number':196,'multiline':False]
['text':' histogrammable','line_number':197,'multiline':True]
['text':'*
 * Validates the relationship between two histograms according to the funciton isValid(). It takes a
 * type-bracket count from 'ls' as the left argument and one from 'rs' as a right argument and
 * returns whether or not the two counts are valid relative to each other.
 ','line_number':206,'multiline':True]
['text':'ls','line_number':213,'multiline':True]
['text':'rs','line_number':213,'multiline':True]
['text':' Ensure that the total cardinality of the histograms is comparatively correct.','line_number':214,'multiline':False]
['text':' Validate all type brackets in both histograms against each other.','line_number':223,'multiline':False]
['text':' Regardless of whether or not 'ls' is valid relative to 'rs', both must have the same','line_number':233,'multiline':False]
['text':' number of type-brackets.','line_number':234,'multiline':False]
['text':' There must be at least as many arrays as there are empty arrays.','line_number':274,'multiline':False]
['text':' Validate array histograms based on array type counters. Since there is one entry per type','line_number':284,'multiline':False]
['text':' bracket per array in the min/max histograms, ensure that there are at least as many','line_number':285,'multiline':False]
['text':' histogrammable entries in the array type counts.','line_number':286,'multiline':False]
['text':' Note that min/max histograms may have different type-brackets.','line_number':287,'multiline':False]
['text':' Type counts are an upper bound on ArrayMin.','line_number':290,'multiline':False]
['text':' Type counts are an upper bound on ArrayMax.','line_number':296,'multiline':False]
['text':' Conversely, unique histograms are an upper bound on type counts, since they may count','line_number':300,'multiline':False]
['text':' multiple values per type bracket. Furthermore, the min/max histograms are a "lower bound"','line_number':301,'multiline':False]
['text':' on the unique histogram.','line_number':302,'multiline':False]
['text':' Type counts are a lower bound on ArrayUnique.','line_number':305,'multiline':False]
['text':' ArrayMin is a lower bound on ArrayUnique.','line_number':311,'multiline':False]
['text':' ArrayMax is a lower bound on ArrayUnique.','line_number':315,'multiline':False]
['text':' Validate boolean counters.','line_number':322,'multiline':False]
['text':' Validate scalar type counts.','line_number':331,'multiline':False]
['text':' Type-bracket type counts should equal scalar type-bracket counts.','line_number':334,'multiline':False]
['text':' Validate total count.','line_number':338,'multiline':False]
['text':' Validate NaN count. It is invalid to have more NaNs than numeric types that can contain','line_number':346,'multiline':False]
['text':' doubles in the type counters.','line_number':347,'multiline':False]
['text':' namespace','line_number':359,'multiline':False]
['text':' Type counts. ','line_number':372,'multiline':True]
['text':' Sample size. ','line_number':372,'multiline':True]
['text':' No need to validate an empty histogram.','line_number':416,'multiline':False]
['text':' Note that we don't run validation when loading a histogram from the Statistics collection','line_number':469,'multiline':False]
['text':' because we already validated this histogram before inserting it.','line_number':470,'multiline':False]
['text':' If we have ArrayStatistics, we will need to initialize the array-only fields.','line_number':478,'multiline':False]
['text':' If we don't have ArrayStatistics available, we should construct a histogram with only scalar','line_number':494,'multiline':False]
['text':' fields.','line_number':495,'multiline':False]
['text':' Serialize boolean type counters.','line_number':590,'multiline':False]
['text':' Serialize NaN type counter.','line_number':593,'multiline':False]
['text':' Serialize empty array counts.','line_number':596,'multiline':False]
['text':' Serialize type counts.','line_number':599,'multiline':False]
['text':' Serialize scalar histogram.','line_number':602,'multiline':False]
['text':' Serialize array histograms and type counts.','line_number':606,'multiline':False]
['text':' namespace mongo::stats','line_number':641,'multiline':False]
