['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':' IWYU pragma: no_include "ext/alloc_traits.h"','line_number':32,'multiline':False]
['text':' Just asserting that these do not throw exceptions.','line_number':47,'multiline':False]
['text':' Dec 30, 1969 13:42:23:211','line_number':124,'multiline':False]
['text':' 1969-12-30T13:42:23.211Z.','line_number':139,'multiline':False]
['text':' 1969-12-30T13:42:23.211Z.','line_number':154,'multiline':False]
['text':' Sunday, December 28, 1969.','line_number':167,'multiline':False]
['text':' Tue, December 30, 1969, part of the following year.','line_number':170,'multiline':False]
['text':' Saturday, January 1, 1966, part of the previous year.','line_number':173,'multiline':False]
['text':' Sunday, December 28, 1969.','line_number':181,'multiline':False]
['text':' 1969-12-30T13:42:23.211Z (Tuesday), part of the following year.','line_number':185,'multiline':False]
['text':' 1966-01-01T00:00:00.000Z (Saturday), part of the previous year.','line_number':189,'multiline':False]
['text':' Sunday, December 28, 1969.','line_number':195,'multiline':False]
['text':' Tuesday, December 30, 1969.','line_number':198,'multiline':False]
['text':' Saturday, January 1, 1966.','line_number':201,'multiline':False]
['text':' 1969-12-28T00:00:00.000Z (Sunday).','line_number':209,'multiline':False]
['text':' Part of the previous day (Saturday) in New York.','line_number':211,'multiline':False]
['text':' 1969-12-30T13:42:23.211Z (Tuesday).','line_number':214,'multiline':False]
['text':' Sunday, December 28, 1969.','line_number':220,'multiline':False]
['text':' Tue, December 30, 1969.','line_number':223,'multiline':False]
['text':' Saturday, January 1, 1966.','line_number':226,'multiline':False]
['text':' 1969-12-28T00:00:00.000Z (Sunday).','line_number':234,'multiline':False]
['text':' Part of the previous day (Saturday) in New York.','line_number':236,'multiline':False]
['text':' 1969-12-30T13:42:23.211Z (Tuesday).','line_number':239,'multiline':False]
['text':' December 30, 1969.','line_number':245,'multiline':False]
['text':' January 1, 1966.','line_number':248,'multiline':False]
['text':' Feb 28, 1960 (leap year).','line_number':252,'multiline':False]
['text':' Feb 29, 1960 (leap year).','line_number':255,'multiline':False]
['text':' Mar 1, 1960 (leap year).','line_number':258,'multiline':False]
['text':' December 31, 1960 (leap year).','line_number':261,'multiline':False]
['text':' Feb 28, 1900 (not leap year).','line_number':265,'multiline':False]
['text':' Mar 1, 1900 (not leap year).','line_number':268,'multiline':False]
['text':' December 31, 1900 (not leap year).','line_number':271,'multiline':False]
['text':' 1969-12-28T13:42:24.000Z (Sunday).','line_number':279,'multiline':False]
['text':' 1966-01-01T00:00:00.000Z (Saturday).','line_number':283,'multiline':False]
['text':' 1960-02-28T00:00:00.000Z (leap year).','line_number':287,'multiline':False]
['text':' 1960-02-29T00:00:00.000Z.','line_number':290,'multiline':False]
['text':' 1960-01-01T00:00:00.000Z.','line_number':293,'multiline':False]
['text':' 1960-12-31T00:00:00.000Z.','line_number':296,'multiline':False]
['text':' 1900-02-28T00:00:00.000Z (not leap year).','line_number':300,'multiline':False]
['text':' 1900-03-01T00:00:00.000Z.','line_number':303,'multiline':False]
['text':' 1900-12-31T00:00:00.000Z.','line_number':306,'multiline':False]
['text':' Sunday, December 28, 1969.','line_number':312,'multiline':False]
['text':' Saturday, January 1, 1966.','line_number':315,'multiline':False]
['text':' 1969-12-28T00:00:00.000Z (Sunday).','line_number':323,'multiline':False]
['text':' 1966-01-01T00:00:00.000Z (Saturday).','line_number':327,'multiline':False]
['text':' Sunday, December 28, 1969.','line_number':333,'multiline':False]
['text':' 1969-06-29T00:00:00.000Z (Sunday).','line_number':341,'multiline':False]
['text':' 1966-01-01T00:00:00.000Z (Saturday).','line_number':345,'multiline':False]
['text':' Sunday, December 28, 1969.','line_number':351,'multiline':False]
['text':' Tuesday, December 30, 1969.','line_number':354,'multiline':False]
['text':' Saturday, January 1, 1966, part of previous year.','line_number':357,'multiline':False]
['text':' Tuesday, December 29, 1959.','line_number':360,'multiline':False]
['text':' Saturday, January 2, 1960, part of previous ISO year.','line_number':363,'multiline':False]
['text':' 1969-12-28T00:00:00.000Z (Sunday).','line_number':371,'multiline':False]
['text':' 1969-12-30T00:00:00.000Z (Tuesday).','line_number':375,'multiline':False]
['text':' 1966-01-01T00:00:00.000Z (Saturday), part of previous year.','line_number':379,'multiline':False]
['text':' 1959-12-29T00:00:00.000Z (Tuesday).','line_number':382,'multiline':False]
['text':' 1960-01-02T00:00:00.000Z (Saturday), part of previous year.','line_number':385,'multiline':False]
['text':' Tuesday, Dec 30, 1969 13:42:23:211','line_number':391,'multiline':False]
['text':' Tuesday, Dec 30, 1969 13:42:23:211','line_number':408,'multiline':False]
['text':' Tuesday, Dec 30, 1969 13:42:23:211','line_number':423,'multiline':False]
['text':' Tuesday, Dec 30, 1969 13:42:23:211','line_number':440,'multiline':False]
['text':' Jan 1, 1970 00:00:00:000','line_number':454,'multiline':False]
['text':' Jan 1, 1970 00:00:00:000','line_number':469,'multiline':False]
['text':' Thursday, January 1, 1970.','line_number':482,'multiline':False]
['text':' 1970-1-1T00:00:00.000Z (Thursday)','line_number':490,'multiline':False]
['text':' The Wednesday is still considered part of 1970.','line_number':492,'multiline':False]
['text':' Thursday, January 1, 1970.','line_number':496,'multiline':False]
['text':' 1970-1-1T00:00:00.000Z (Thursday)','line_number':504,'multiline':False]
['text':' The Wednesday before.','line_number':506,'multiline':False]
['text':' Thursday, January 1, 1970.','line_number':510,'multiline':False]
['text':' 1970-1-1T00:00:00.000Z (Thursday)','line_number':516,'multiline':False]
['text':' The Wednesday before.','line_number':519,'multiline':False]
['text':' Thursday, January 1, 1970.','line_number':523,'multiline':False]
['text':' 1970-1-1T00:00:00.000Z','line_number':531,'multiline':False]
['text':' Thursday, January 1, 1970.','line_number':537,'multiline':False]
['text':' 1970-1-1T00:00:00.000Z','line_number':545,'multiline':False]
['text':' Thursday, January 1, 1970.','line_number':551,'multiline':False]
['text':' 1970-1-1T00:00:00.000Z','line_number':559,'multiline':False]
['text':' Thursday, January 1, 1970.','line_number':565,'multiline':False]
['text':' Thu, Jan 1, 1970 00:00:00:000Z','line_number':573,'multiline':False]
['text':' This is Wednesday in New York, but that is still part of the first week.','line_number':575,'multiline':False]
['text':' Thu, Jan 1, 1970 00:00:00:000','line_number':580,'multiline':False]
['text':' Thu, Jan 1, 1970 00:00:00:000Z','line_number':597,'multiline':False]
['text':' Jun 6, 2017 19:38:43:123.','line_number':640,'multiline':False]
['text':' Jun 6, 2017 19:38:43:123Z.','line_number':655,'multiline':False]
['text':' Tuesday, June 6, 2017.','line_number':668,'multiline':False]
['text':' Saturday, January 1, 2005, part of the previous year.','line_number':671,'multiline':False]
['text':' Monday, January 1, 2007.','line_number':674,'multiline':False]
['text':' Monday, December 31, 2007, part of the next year.','line_number':677,'multiline':False]
['text':' 2017-06-06T19:38:43:123Z (Tuesday).','line_number':685,'multiline':False]
['text':' 2005-01-01T00:00:00.000Z (Saturday), part of 2004.','line_number':689,'multiline':False]
['text':' 2007-01-01T00:00:00.000Z (Monday), part of 2007.','line_number':693,'multiline':False]
['text':' ISO weeks are Mon-Sun, so this is part of the previous week in New York, so part of the','line_number':695,'multiline':False]
['text':' previous year, 2006.','line_number':696,'multiline':False]
['text':' 2007-12-31T00:00:00.000Z (Monday), part of 2007.','line_number':699,'multiline':False]
['text':' ISO weeks are Mon-Sun, so this is part of the previous week in New York, so part of the','line_number':701,'multiline':False]
['text':' previous year, 2007.','line_number':702,'multiline':False]
['text':' Tuesday, June 6, 2017.','line_number':707,'multiline':False]
['text':' Saturday, January 1, 2005.','line_number':710,'multiline':False]
['text':' Monday, January 1, 2007.','line_number':713,'multiline':False]
['text':' 2017-06-06T19:38:43.123Z (Tuesday).','line_number':721,'multiline':False]
['text':' 2005-01-01T00:00:00.000Z (Saturday).','line_number':725,'multiline':False]
['text':' Part of the previous day in New York.','line_number':727,'multiline':False]
['text':' Tuesday, June 6, 2017.','line_number':731,'multiline':False]
['text':' Saturday, January 1, 2005.','line_number':734,'multiline':False]
['text':' Monday, January 1, 2007.','line_number':737,'multiline':False]
['text':' 2017-06-06T19:38:43.123Z (Tuesday).','line_number':745,'multiline':False]
['text':' 2005-01-01T00:00:00.000Z (Saturday).','line_number':749,'multiline':False]
['text':' Part of the previous day in New York.','line_number':751,'multiline':False]
['text':' June 6, 2017.','line_number':755,'multiline':False]
['text':' January 1, 2005.','line_number':758,'multiline':False]
['text':' Feb 28, 2008 (leap year).','line_number':761,'multiline':False]
['text':' Feb 29, 2008 (leap year).','line_number':764,'multiline':False]
['text':' Mar 1, 2008 (leap year).','line_number':767,'multiline':False]
['text':' December 31, 2008 (leap year).','line_number':770,'multiline':False]
['text':' Feb 28, 2001 (not leap year).','line_number':774,'multiline':False]
['text':' Mar 1, 2001 (not leap year).','line_number':777,'multiline':False]
['text':' December 31, 2001 (not leap year).','line_number':780,'multiline':False]
['text':' 2017-06-06T19:38:43.123Z.','line_number':788,'multiline':False]
['text':' 2005-01-01T00:00:00.000Z, part of 2004 in New York, which was a leap year.','line_number':792,'multiline':False]
['text':' 2008-02-28T00:00:00.000Z (leap year).','line_number':796,'multiline':False]
['text':' 2008-02-29T00:00:00.000Z.','line_number':799,'multiline':False]
['text':' 2008-03-01T00:00:00.000Z.','line_number':802,'multiline':False]
['text':' 2008-12-31T00:00:00.000Z.','line_number':805,'multiline':False]
['text':' 2009-01-01T00:00:00.000Z, part of the previous year in New York.','line_number':808,'multiline':False]
['text':' 2001-02-28T00:00:00.000Z (not leap year).','line_number':812,'multiline':False]
['text':' 2001-03-01T00:00:00.000Z.','line_number':815,'multiline':False]
['text':' 2001-12-31T00:00:00.000Z.','line_number':818,'multiline':False]
['text':' 2002-01-01T00:00:00.000Z, part of the previous year in New York.','line_number':821,'multiline':False]
['text':' Tuesday, June 6, 2017.','line_number':827,'multiline':False]
['text':' Saturday, January 1, 2005, before first Sunday.','line_number':830,'multiline':False]
['text':' Monday, January 1, 2007, before first Sunday.','line_number':833,'multiline':False]
['text':' Tuesday, June 6, 2017.','line_number':841,'multiline':False]
['text':' 2005-01-01T00:00:00.00Z (Saturday).','line_number':845,'multiline':False]
['text':' 2007-01-01T00:00:00.00Z (Monday), the last Sunday of 2006 in New York.','line_number':849,'multiline':False]
['text':' Tuesday, June 6, 2017.','line_number':855,'multiline':False]
['text':' Tuesday, June 6, 2017.','line_number':863,'multiline':False]
['text':' 2005-01-01T00:00:00.00Z (Saturday).','line_number':867,'multiline':False]
['text':' Tuesday, June 6, 2017.','line_number':873,'multiline':False]
['text':' Saturday, January 1, 2005, considered part of 2004, which was a leap year.','line_number':876,'multiline':False]
['text':' Monday, January 1, 2007.','line_number':879,'multiline':False]
['text':' Tuesday, June 6, 2017.','line_number':887,'multiline':False]
['text':' 2005-01-01T00:00:00.000Z (Saturday), part of 2004.','line_number':891,'multiline':False]
['text':' 2007-01-01T00:00:00.000Z (Monday), part of 2006 in New York.','line_number':895,'multiline':False]
['text':' Tue, Jun 6, 2017 19:38:43:234.','line_number':901,'multiline':False]
['text':' 2017-06-06T19:38:43:234Z (Tuesday).','line_number':916,'multiline':False]
['text':' 2017-06-06T19:38:43:234Z (Tuesday).','line_number':932,'multiline':False]
['text':' Tue, Jun 6, 2017 19:38:43:234.','line_number':948,'multiline':False]
['text':' 2017-06-06T19:38:43:234Z (Tuesday).','line_number':963,'multiline':False]
['text':' Repeat the tests with the format map for $dateFromString.','line_number':994,'multiline':False]
['text':' Minute must be 2 digits with leading zero.','line_number':1063,'multiline':False]
['text':' Seconds must be 2 digits with leading zero.','line_number':1075,'multiline':False]
['text':' ISO week of year must be between 1 and 53.','line_number':1100,'multiline':False]
['text':' Day of week must be single digit between 1 and 7.','line_number':1110,'multiline':False]
['text':' Timezone offset minutes (%Z) requires format +/-mmm.','line_number':1130,'multiline':False]
['text':' Calculate a date using the ISO 8601 week-numbered year method.','line_number':1169,'multiline':False]
['text':' Calculate the same date by adding 'weekDurationInMillis' to 'baseline' for each week past','line_number':1173,'multiline':False]
['text':' the baseline date.','line_number':1174,'multiline':False]
['text':' The two methods should produce the same time.','line_number':1177,'multiline':False]
['text':' Calculate a date using the ISO 8601 week-numbered year method.','line_number':1197,'multiline':False]
['text':' Calculate the same date by adding 'dayDurationInMillis' to 'baseline' for each day past','line_number':1201,'multiline':False]
['text':' the baseline date.','line_number':1202,'multiline':False]
['text':' The two methods should produce the same time.','line_number':1205,'multiline':False]
['text':' Time zones for testing.','line_number':1226,'multiline':False]
['text':' UTC offset +08:45.','line_number':1229,'multiline':False]
['text':' UTC offset +11:00.','line_number':1232,'multiline':False]
['text':' UTC offset -10:00.','line_number':1234,'multiline':False]
['text':' Verifies 'dateDiff()' with TimeUnit::year.','line_number':1246,'multiline':False]
['text':' Verifies 'dateDiff()' with TimeUnit::month.','line_number':1270,'multiline':False]
['text':' Verifies 'dateDiff()' with TimeUnit::quarter.','line_number':1294,'multiline':False]
['text':' Verifies 'dateDiff()' with TimeUnit::week.','line_number':1313,'multiline':False]
['text':' Cases when the first day of the week is Monday.','line_number':1315,'multiline':False]
['text':' Cases when the first day of the week is not Monday.','line_number':1365,'multiline':False]
['text':' Friday.','line_number':1367,'multiline':False]
['text':' Sunday.','line_number':1368,'multiline':False]
['text':' Friday.','line_number':1373,'multiline':False]
['text':' Saturday.','line_number':1374,'multiline':False]
['text':' Sunday.','line_number':1379,'multiline':False]
['text':' Sunday.','line_number':1380,'multiline':False]
['text':' Saturday.','line_number':1385,'multiline':False]
['text':' Sunday.','line_number':1386,'multiline':False]
['text':' Wednesday.','line_number':1391,'multiline':False]
['text':' Tuesday.','line_number':1392,'multiline':False]
['text':' Verifies 'dateDiff()' with TimeUnit::day.','line_number':1398,'multiline':False]
['text':' Verifies number of days in a year calculation.','line_number':1416,'multiline':False]
['text':' Use timelib_day_of_year as an oracle to verify day calculations.','line_number':1443,'multiline':False]
['text':' Verifies 'dateDiff()' with TimeUnit::hour.','line_number':1454,'multiline':False]
['text':' Hour difference calculation in UTC offset +08:45 time zone.','line_number':1472,'multiline':False]
['text':'UTC 12:10','line_number':1476,'multiline':True]
['text':'UTC 12:20','line_number':1477,'multiline':True]
['text':' Test of transition from DST to standard time.','line_number':1481,'multiline':False]
['text':' America/New_York 1:00AM EDT (UTC-4)','line_number':1484,'multiline':True]
['text':' America/New_York 1:00AM EST (UTC-5)','line_number':1486,'multiline':True]
['text':' America/New_York 1:00AM EST (UTC-5)','line_number':1491,'multiline':True]
['text':' America/New_York 1:00AM EDT (UTC-4)','line_number':1493,'multiline':True]
['text':' Test of transition from standard time to DST.','line_number':1497,'multiline':False]
['text':' America/New_York 1:45AM EST (UTC-5)','line_number':1500,'multiline':True]
['text':' America/New_York 3:00AM EDT (UTC-4)','line_number':1502,'multiline':True]
['text':' America/New_York 3:00AM EDT (UTC-4)','line_number':1507,'multiline':True]
['text':' America/New_York 1:45AM EST (UTC-5)','line_number':1509,'multiline':True]
['text':' Longer period test.','line_number':1513,'multiline':False]
['text':' Tests with Australia/Lord_Howe time zone that has 00:30 hour Daylight Savings Time (DST) UTC','line_number':1520,'multiline':False]
['text':' offset change. 'startDate' and 'endDate' parameters span a transition from/to DST.','line_number':1521,'multiline':False]
['text':'','line_number':1522,'multiline':False]
['text':' Verify that even when the UTC offset change is 30 minutes on transition from DST to Standard','line_number':1523,'multiline':False]
['text':' Time, time difference in hours is based on the local time. In the test 1.5h of real time','line_number':1524,'multiline':False]
['text':' passes, but the returned difference is 1h.','line_number':1525,'multiline':False]
['text':' Verify that even when the UTC offset change is 30 minutes on transition from Standard Time to','line_number':1532,'multiline':False]
['text':' DST, time difference in hours is based on the local time. In the test 1h of real time passes','line_number':1533,'multiline':False]
['text':' and the returned difference is 1h.','line_number':1534,'multiline':False]
['text':' Verifies 'dateDiff()' with TimeUnit::minute.','line_number':1542,'multiline':False]
['text':' Tests with Australia/Lord_Howe time zone that has 00:30 hour Daylight Savings Time (DST) UTC','line_number':1565,'multiline':False]
['text':' offset change. 'startDate' and 'endDate' parameters span a transition from/to DST.','line_number':1566,'multiline':False]
['text':' UTC 2021-04-03T14:00:00','line_number':1569,'multiline':False]
['text':' UTC 2021-04-03T15:30:00','line_number':1571,'multiline':False]
['text':' UTC 2021-10-02T14:30:00','line_number':1576,'multiline':False]
['text':' UTC 2021-10-02T15:30:00','line_number':1578,'multiline':False]
['text':' Verifies 'dateDiff()' with TimeUnit::second.','line_number':1583,'multiline':False]
['text':' Verify that negative milliseconds from the Unix Epoch are properly handled.','line_number':1606,'multiline':False]
['text':' Tests with Australia/Lord_Howe time zone that has 00:30 hour Daylight Savings Time (DST) UTC','line_number':1613,'multiline':False]
['text':' offset change. 'startDate' and 'endDate' parameters span a transition from/to DST.','line_number':1614,'multiline':False]
['text':' UTC 2021-04-03T14:00:00','line_number':1618,'multiline':False]
['text':' UTC 2021-04-03T15:30:00','line_number':1620,'multiline':False]
['text':' UTC 2021-10-02T14:30:00','line_number':1625,'multiline':False]
['text':' UTC 2021-10-02T15:30:00','line_number':1627,'multiline':False]
['text':' Verify that UTC offset adjustments are properly accounted for when calculating the time','line_number':1631,'multiline':False]
['text':' difference. Time zone Europe/Madrid skips 0:14:44 hours at 1900-12-31 23:45:15 to change the','line_number':1632,'multiline':False]
['text':' timezone to UTC.','line_number':1633,'multiline':False]
['text':' Verifies 'dateDiff()' with TimeUnit::millisecond.','line_number':1641,'multiline':False]
['text':' Verifies numeric overflow handling.','line_number':1659,'multiline':False]
['text':' Verifies 'truncateDate()' with TimeUnit::millisecond.','line_number':1668,'multiline':False]
['text':' Value in the middle of a bin above default reference point.','line_number':1671,'multiline':False]
['text':' Value at the lower boundary of a bin.','line_number':1678,'multiline':False]
['text':' Value at the top of a bin.','line_number':1685,'multiline':False]
['text':' Value at the bottom of the next bin.','line_number':1692,'multiline':False]
['text':' Value at the top of a bin below default reference point.','line_number':1699,'multiline':False]
['text':' Verifies 'truncateDate()' with TimeUnit::second.','line_number':1708,'multiline':False]
['text':' Value in the middle of a bin above default reference point.','line_number':1711,'multiline':False]
['text':' Value at the lower boundary of a bin.','line_number':1718,'multiline':False]
['text':' Value at the top of a bin.','line_number':1725,'multiline':False]
['text':' Value at the bottom of the next bin.','line_number':1732,'multiline':False]
['text':' Value at the top of a bin below default reference point.','line_number':1739,'multiline':False]
['text':' Verifies 'truncateDate()' with TimeUnit::minute.','line_number':1748,'multiline':False]
['text':' Value in the middle of a bin above default reference point.','line_number':1751,'multiline':False]
['text':' Value at the lower boundary of a bin.','line_number':1758,'multiline':False]
['text':' Value at the top of a bin.','line_number':1765,'multiline':False]
['text':' Value at the bottom of the next bin.','line_number':1772,'multiline':False]
['text':' Value at the top of a bin below default reference point.','line_number':1779,'multiline':False]
['text':' Verifies 'truncateDate()' with TimeUnit::hour.','line_number':1788,'multiline':False]
['text':' Value in the middle of a bin above default reference point.','line_number':1791,'multiline':False]
['text':' Value at the lower boundary of a bin.','line_number':1798,'multiline':False]
['text':' Value at the top of a bin.','line_number':1805,'multiline':False]
['text':' Value at the bottom of the next bin.','line_number':1812,'multiline':False]
['text':' Value at the top of a bin below default reference point.','line_number':1819,'multiline':False]
['text':' Verifies 'truncateDate()' with TimeUnit::day.','line_number':1828,'multiline':False]
['text':' Value in the middle of a bin above default reference point.','line_number':1831,'multiline':False]
['text':' Value at the lower boundary of a bin.','line_number':1838,'multiline':False]
['text':' Value at the top of a bin.','line_number':1845,'multiline':False]
['text':' Value at the top of a bin below default reference point.','line_number':1852,'multiline':False]
['text':' Daylight Savings Time tests with America/New_York timezone.','line_number':1860,'multiline':False]
['text':' Day before DST is on.','line_number':1861,'multiline':False]
['text':' Day when DST is on.','line_number':1868,'multiline':False]
['text':' The next day when DST is on.','line_number':1875,'multiline':False]
['text':' The last day when DST is on.','line_number':1882,'multiline':False]
['text':' The DST is off.','line_number':1889,'multiline':False]
['text':' The next day DST is off.','line_number':1896,'multiline':False]
['text':' Daylight Savings Time tests with Europe/Sofia timezone.','line_number':1904,'multiline':False]
['text':' Day before DST is on.','line_number':1905,'multiline':False]
['text':' Day when DST is on.','line_number':1912,'multiline':False]
['text':' The next day when DST is on.','line_number':1919,'multiline':False]
['text':' The last day when DST is on.','line_number':1926,'multiline':False]
['text':' The DST is off.','line_number':1933,'multiline':False]
['text':' Verifies 'truncateDate()' with TimeUnit::week.','line_number':1941,'multiline':False]
['text':' Value in the middle of a bin above default reference point. The first day of a week is','line_number':1944,'multiline':False]
['text':' Wednesday.','line_number':1945,'multiline':False]
['text':' Reference point coincides with start of the week (Saturday).','line_number':1953,'multiline':False]
['text':' Value at the lower boundary of a bin. The first day of a week is Monday.','line_number':1961,'multiline':False]
['text':' Value at the top of a bin. The first day of a week is Monday.','line_number':1969,'multiline':False]
['text':' Value at the top of a bin below default reference point. The first day of a week is','line_number':1977,'multiline':False]
['text':' Monday.','line_number':1978,'multiline':False]
['text':' Verifies 'truncateDate()' with TimeUnit::month.','line_number':1988,'multiline':False]
['text':' Value in the middle of a bin above default reference point.','line_number':1991,'multiline':False]
['text':' Value at the lower boundary of a bin above default reference point.','line_number':1998,'multiline':False]
['text':' Value at the upper boundary of a bin above default reference point.','line_number':2005,'multiline':False]
['text':' Value at the lower boundary of the next bin.','line_number':2012,'multiline':False]
['text':' Value at the lower boundary of a bin.','line_number':2019,'multiline':False]
['text':' Value at the top of a bin.','line_number':2026,'multiline':False]
['text':' February is atypical.','line_number':2033,'multiline':False]
['text':' Verifies 'truncateDate()' with TimeUnit::quarter.','line_number':2042,'multiline':False]
['text':' Value in the middle of a bin above default reference point.','line_number':2045,'multiline':False]
['text':' Value at the lower boundary of a bin above default reference point.','line_number':2052,'multiline':False]
['text':' Value at the upper boundary of a bin above default reference point.','line_number':2059,'multiline':False]
['text':' Value at the lower boundary of the next bin.','line_number':2066,'multiline':False]
['text':' Value at the lower boundary of a bin.','line_number':2073,'multiline':False]
['text':' Value at the top of a bin.','line_number':2080,'multiline':False]
['text':' Verifies 'truncateDate()' with TimeUnit::year.','line_number':2089,'multiline':False]
['text':' Value in the middle of a bin above default reference point.','line_number':2092,'multiline':False]
['text':' Value at the lower boundary of a bin above default reference point.','line_number':2099,'multiline':False]
['text':' Value at the upper boundary of a bin above default reference point.','line_number':2106,'multiline':False]
['text':' Value at the lower boundary of the next bin.','line_number':2113,'multiline':False]
['text':' Value at the lower boundary of a bin.','line_number':2120,'multiline':False]
['text':' Value at the top of a bin.','line_number':2127,'multiline':False]
['text':' Verifies 'truncateDate()' error handling.','line_number':2136,'multiline':False]
['text':' Verify that binSize > 0 constraint is enforced.','line_number':2142,'multiline':False]
['text':' Verify millisecond overflow detection.','line_number':2146,'multiline':False]
['text':' Verify second/minute/hour overflow detection.','line_number':2160,'multiline':False]
['text':' Verify day/week/month/quarter/year bin size limits.','line_number':2168,'multiline':False]
['text':' Verify computation with large bin size when the result is in the long past succeeds.','line_number':2175,'multiline':False]
['text':' Verify computation with large bin size succeeds.','line_number':2178,'multiline':False]
['text':' Verify that out-of-range results are detected.','line_number':2187,'multiline':False]
['text':' Verify computation with large bin size when the result is in the long past succeeds.','line_number':2193,'multiline':False]
['text':' Amount value rejected in initial validation.','line_number':2229,'multiline':False]
['text':' Amount to add to date -200'000'000-2-29 00:00:00.000 so the','line_number':2230,'multiline':False]
['text':' result cannot be represented as Date_t.','line_number':2231,'multiline':False]
['text':' Large amount to add to 'smallDate' so the result is equal to','line_number':2232,'multiline':False]
['text':' 'largeAmountExpectedDate'.','line_number':2233,'multiline':False]
['text':' Invalid amount.','line_number':2240,'multiline':False]
['text':' Overflow amount.','line_number':2241,'multiline':False]
['text':' Large amount.','line_number':2242,'multiline':False]
['text':' Invalid amount.','line_number':2245,'multiline':False]
['text':' Overflow amount.','line_number':2246,'multiline':False]
['text':' Large amount.','line_number':2247,'multiline':False]
['text':' Invalid amount.','line_number':2250,'multiline':False]
['text':' Overflow amount.','line_number':2251,'multiline':False]
['text':' Large amount.','line_number':2252,'multiline':False]
['text':' Invalid amount.','line_number':2255,'multiline':False]
['text':' Overflow amount.','line_number':2256,'multiline':False]
['text':' Large amount.','line_number':2257,'multiline':False]
['text':' Invalid amount.','line_number':2260,'multiline':False]
['text':' Overflow amount.','line_number':2261,'multiline':False]
['text':' Large amount.','line_number':2262,'multiline':False]
['text':' Invalid amount.','line_number':2265,'multiline':False]
['text':' Overflow amount.','line_number':2266,'multiline':False]
['text':' Large amount.','line_number':2267,'multiline':False]
['text':' Invalid amount.','line_number':2270,'multiline':False]
['text':' Overflow amount.','line_number':2271,'multiline':False]
['text':' Large amount.','line_number':2272,'multiline':False]
['text':' Verify that out-of-range amount values are rejected.','line_number':2277,'multiline':False]
['text':' Verify that overflow is detected when the result cannot be represented as Date_t.','line_number':2289,'multiline':False]
['text':' Verify that adding large values works correctly.','line_number':2299,'multiline':False]
['text':'*
 * Tests for day adjustment in a timezone with units of month, quarter or year.
 ','line_number':2368,'multiline':True]
['text':' Last day of month in Amsterdam zone 2021-05-31T00:30:00.','line_number':2380,'multiline':False]
['text':' First day in Amsterdam zone, last day in UTC.','line_number':2382,'multiline':False]
['text':' First day in Sofia timezone, last day of month in UTC.','line_number':2423,'multiline':False]
['text':' 2020-11-30T22:00:00 NY zone','line_number':2470,'multiline':False]
['text':' 2021-02-28T22:00:00 NY zone','line_number':2475,'multiline':False]
['text':' 2020-06-30T22:00:00 NY zone','line_number':2480,'multiline':False]
['text':' 2021-02-28T22:00:00 NY zone','line_number':2485,'multiline':False]
['text':'*
 * Tests for dateAdd operation in a timezone different from UTC.
 ','line_number':2596,'multiline':True]
['text':' The test uses the DST change in Amsterdam zone that happens at 2020-10-25T01:00:00 UTC.','line_number':2608,'multiline':False]
['text':' Pick two time instants in UTC just before and after the DST change.','line_number':2609,'multiline':False]
['text':' DST to Standard change in Amsterdam zone that happens at 2020-10-25T01:00:00 UTC.','line_number':2614,'multiline':False]
['text':' 2020-10-25T03:00:00 -> 2020-10-25T02:00:00 in Amsterdam.','line_number':2615,'multiline':False]
['text':' For units of day or larger, compute DST correction to produce the same local time in','line_number':2633,'multiline':False]
['text':' Amsterdam timezone.','line_number':2634,'multiline':False]
['text':' as this date is ambiguous (it could in both timezones, with or','line_number':2647,'multiline':False]
['text':' without DST) and the computation is expected to return the','line_number':2648,'multiline':False]
['text':' "with DST" one, obtain it via a computation','line_number':2649,'multiline':False]
['text':' The same as above in Amsterdam zone.','line_number':2657,'multiline':False]
['text':' Standard to DST change at 2021-03-28T02:00:00 -> 2021-03-28T03:00:00 Amsterdam timezone.','line_number':2672,'multiline':False]
['text':' Computed time falls into the missing hour: forward the clock 1 hour.','line_number':2680,'multiline':False]
['text':' Computed time falls into the missing hour: forward the clock 1 hour.','line_number':2689,'multiline':False]
['text':' Computed time falls into the missing hour: forward the clock 1 hour.','line_number':2694,'multiline':False]
['text':' The following test uses the DST change in New York at 2020-03-08T07:00:00Z.','line_number':2706,'multiline':False]
['text':' Pick two time instants in UTC just before and after the DST change.','line_number':2707,'multiline':False]
['text':' For units of day or larger, compute DST correction to produce the same local time in New','line_number':2728,'multiline':False]
['text':' York timezone.','line_number':2729,'multiline':False]
['text':' DST to Standard change in New York zone at 2020-11-01T06:00:00 UTC,','line_number':2731,'multiline':False]
['text':' 2020-11-01T02:00:00 -> 2020-11-01T01:00:00 New York.','line_number':2732,'multiline':False]
['text':' as this date is ambiguous (it could in both timezones, with or','line_number':2745,'multiline':False]
['text':' without DST) and the computation is expected to return the','line_number':2746,'multiline':False]
['text':' "with DST" one, obtain it via a computation','line_number':2747,'multiline':False]
['text':' Standard to DST change: 2021-03-14T02:00:00 -> 2021-03-14T03:00:00 New York timezone.','line_number':2761,'multiline':False]
['text':' Computed time falls into the missing hour: forward the clock 1 hour.','line_number':2769,'multiline':False]
['text':' Computed time falls into the missing hour: forward the clock 1 hour.','line_number':2778,'multiline':False]
['text':' Computed time falls into the missing hour: forward the clock 1 hour.','line_number':2783,'multiline':False]
['text':'*
 * Tests for dateAdd operation in Lord Howe timezone with 00:30 DST change.
 ','line_number':2794,'multiline':True]
['text':' DST to Standard change: 2021-04-04T02:00:00 -> 2021-04-04T01:30:00 Lord Howe timezone.','line_number':2807,'multiline':False]
['text':' as this date is ambiguous (it could in both timezones, with or','line_number':2809,'multiline':False]
['text':' without DST) and the computation is expected to start from the','line_number':2810,'multiline':False]
['text':' "with DST" one, obtain it via a computation','line_number':2811,'multiline':False]
['text':' as this date is ambiguous (it could in both timezones, with or','line_number':2819,'multiline':False]
['text':' without DST) and the computation is expected to return the','line_number':2820,'multiline':False]
['text':' "with DST" one, obtain it via a computation','line_number':2821,'multiline':False]
['text':' DST to Standard change: 2021-04-03T15:00:00 UTC time.','line_number':2831,'multiline':False]
['text':' = 2021-04-04T01:50:00 Australia/Lord_Howe, DST offset +11:00.','line_number':2837,'multiline':False]
['text':' Same as above, the result date falls into repeated 1/2 hour, reported with standard time','line_number':2840,'multiline':False]
['text':' offset of +10:30.','line_number':2841,'multiline':False]
['text':' = 2021-04-04T01:50:00 Australia/Lord_Howe.','line_number':2848,'multiline':False]
['text':' Same as above, the result local time has offset of +10:30 - Standard time.','line_number':2851,'multiline':False]
['text':' Standard to DST change: 2020-10-04T02:00:00 -> 2020-10-04T02:30:00 Lord Howe timezone.','line_number':2854,'multiline':False]
['text':' Computed time falls into the missing 1/2 hour: move the clock forward by 30 min.','line_number':2862,'multiline':False]
['text':' Standard to DST change: 2020-10-03T15:30:00 UTC time.','line_number':2873,'multiline':False]
['text':'*
 * Tests for dateAdd operation in a timezone with fixed offset.
 ','line_number':2896,'multiline':True]
['text':' Verify that an overflow is detected.','line_number':2963,'multiline':False]
['text':' Just asserting that these do not throw exceptions.','line_number':2988,'multiline':False]
['text':' namespace','line_number':2994,'multiline':False]
['text':' namespace mongo','line_number':2995,'multiline':False]
