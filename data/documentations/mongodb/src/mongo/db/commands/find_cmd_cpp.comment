['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':' The 'collPtr' will be null for views, but we don't need to worry about views here. The','line_number':168,'multiline':False]
['text':' views will get rewritten into aggregate command and will regenerate the','line_number':169,'multiline':False]
['text':' ExpressionContext.','line_number':170,'multiline':False]
['text':' mayDbProfile','line_number':177,'multiline':False]
['text':'*
 * Fills out the CurOp for "opCtx" with information about this query.
 ','line_number':186,'multiline':True]
['text':' TODO: SERVER-73632 Remove feature flag for PM-635.','line_number':196,'multiline':False]
['text':' Remove query settings lookup as it is only done on mongos.','line_number':197,'multiline':False]
['text':' If part of the sharded cluster, use the query settings passed as part of the command','line_number':205,'multiline':False]
['text':' arguments.','line_number':206,'multiline':False]
['text':' No query settings lookup for IDHACK queries.','line_number':211,'multiline':False]
['text':'*
 * Parses the grammar elements like 'filter', 'sort', and 'projection' from the raw
 * 'FindCommandRequest', and tracks internal state like begining the operation's timer and recording
 * query shape stats (if enabled).
 ','line_number':222,'multiline':True]
['text':' Fill out curop information.','line_number':233,'multiline':False]
['text':' verbosity ','line_number':238,'multiline':True]
['text':' After parsing to detect if $$USER_ROLES is referenced in the query, set the value of','line_number':245,'multiline':False]
['text':' $$USER_ROLES for the find command.','line_number':246,'multiline':False]
['text':' Register query stats collection. Exclude queries against collections with encrypted fields.','line_number':248,'multiline':False]
['text':' It is important to do this before canonicalizing and optimizing the query, each of which','line_number':249,'multiline':False]
['text':' would alter the query shape.','line_number':250,'multiline':False]
['text':'*
 * A command for running .find() queries.
 ','line_number':265,'multiline':True]
['text':' TODO: Parse into a QueryRequest here.','line_number':278,'multiline':False]
['text':'*
     * A find command does not increment the command counter, but rather increments the
     * query counter.
     ','line_number':313,'multiline':True]
['text':' Find queries are only allowed to use speculative behavior if the 'allowsSpeculative'','line_number':366,'multiline':False]
['text':' flag is passed. The find command will check for this flag internally and fail if','line_number':367,'multiline':False]
['text':' necessary.','line_number':368,'multiline':False]
['text':' Acquire locks. The RAII object is optional, because in the case of a view, the locks','line_number':394,'multiline':False]
['text':' need to be released.','line_number':395,'multiline':False]
['text':' TODO SERVER-79175: Make nicer. We need to instantiate the AutoStatsTracker before the','line_number':396,'multiline':False]
['text':' acquisition in case it would throw so we can ensure data is written to the profile','line_number':397,'multiline':False]
['text':' collection that some test may rely on.','line_number':398,'multiline':False]
['text':' Going forward this operation must never ignore interrupt signals while waiting for','line_number':413,'multiline':False]
['text':' lock acquisition. This InterruptibleLockGuard will ensure that waiting for lock','line_number':414,'multiline':False]
['text':' re-acquisition after yielding will not ignore interrupt signals. This is necessary to','line_number':415,'multiline':False]
['text':' avoid deadlocking with replication rollback, which at the storage layer waits for all','line_number':416,'multiline':False]
['text':' cursors to be closed under the global MODE_X lock, after having sent interrupt','line_number':417,'multiline':False]
['text':' signals to read operations. This operation must never hold open storage cursors while','line_number':418,'multiline':False]
['text':' ignoring interrupt.','line_number':419,'multiline':False]
['text':' Parse the command BSON to a FindCommandRequest.','line_number':423,'multiline':False]
['text':' The collection may be NULL. If so, getExecutor() should handle it by returning an','line_number':428,'multiline':False]
['text':' execution tree with an EOFStage.','line_number':429,'multiline':False]
['text':' After parsing to detect if $$USER_ROLES is referenced in the query, set the value of','line_number':449,'multiline':False]
['text':' $$USER_ROLES for the find command.','line_number':450,'multiline':False]
['text':' If we are running a query against a view redirect this query through the aggregation','line_number':453,'multiline':False]
['text':' system.','line_number':454,'multiline':False]
['text':' Relinquish locks. The aggregation command will re-acquire them.','line_number':456,'multiline':False]
['text':' Convert the find command into an aggregation using $match (and other stages, as','line_number':459,'multiline':False]
['text':' necessary), if possible.','line_number':460,'multiline':False]
['text':' An empty PrivilegeVector is acceptable because these privileges are only','line_number':466,'multiline':False]
['text':' checked on getMore and explain will not open a cursor.','line_number':467,'multiline':False]
['text':' Get the execution plan for the query.','line_number':483,'multiline':False]
['text':' extractAndAttachPipelineStages ','line_number':490,'multiline':True]
['text':' Got the execution tree. Explain it.','line_number':495,'multiline':False]
['text':'*
         * Runs a query using the following steps:
         *   --Parsing.
         *   --Acquire locks.
         *   --Plan query, obtaining an executor that can run it.
         *   --Generate the first batch.
         *   --Save state for getMore, transferring ownership of the executor to a ClientCursor.
         *   --Generate response to send to the client.
         ','line_number':500,'multiline':True]
['text':' Parse the command BSON to a FindCommandRequest. Pass in the parsedNss in case cmdObj','line_number':514,'multiline':False]
['text':' does not have a UUID.','line_number':515,'multiline':False]
['text':' Only allow speculative majority for internal commands that specify the correct flag.','line_number':524,'multiline':False]
['text':' Validate term before acquiring locks, if provided.','line_number':547,'multiline':False]
['text':' Note: updateTerm returns ok if term stayed the same.','line_number':550,'multiline':False]
['text':' The presence of a term in the request indicates that this is an internal replication','line_number':554,'multiline':False]
['text':' oplog read request.','line_number':555,'multiline':False]
['text':' We do not want to wait to take tickets for internal (replication) oplog reads.','line_number':557,'multiline':False]
['text':' Stalling on ticket acquisition can cause complicated deadlocks. Primaries may','line_number':558,'multiline':False]
['text':' depend on data reaching secondaries in order to proceed; and secondaries may get','line_number':559,'multiline':False]
['text':' stalled replicating because of an inability to acquire a read ticket.','line_number':560,'multiline':False]
['text':' If this read represents a reverse oplog scan, we want to bypass oplog visibility','line_number':565,'multiline':False]
['text':' rules in the case of secondaries. We normally only read from these nodes at batch','line_number':566,'multiline':False]
['text':' boundaries, but in this specific case we should fetch all new entries, to be','line_number':567,'multiline':False]
['text':' consistent with any catalog changes that might be observable before the batch is','line_number':568,'multiline':False]
['text':' finalized. This special rule for reverse oplog scans is needed by replication','line_number':569,'multiline':False]
['text':' initial sync, for the purposes of calculating the stopTimestamp correctly.','line_number':570,'multiline':False]
['text':' Acquire locks. If the query is on a view, we release our locks and convert the query','line_number':594,'multiline':False]
['text':' request into an aggregation command.','line_number':595,'multiline':False]
['text':' TODO SERVER-79175: Make nicer. We need to instantiate the AutoStatsTracker before the','line_number':597,'multiline':False]
['text':' acquisition in case it would throw so we can ensure data is written to the profile','line_number':598,'multiline':False]
['text':' collection that some test may rely on. However, we might not know the namespace at','line_number':599,'multiline':False]
['text':' this point so it is wrapped in a boost::optional. If the request is with a UUID we','line_number':600,'multiline':False]
['text':' instantiate it after, but this is fine as the request should not be for sharded','line_number':601,'multiline':False]
['text':' collections.','line_number':602,'multiline':False]
['text':' Going forward this operation must never ignore interrupt signals while waiting for','line_number':649,'multiline':False]
['text':' lock acquisition. This InterruptibleLockGuard will ensure that waiting for lock','line_number':650,'multiline':False]
['text':' re-acquisition after yielding will not ignore interrupt signals. This is necessary to','line_number':651,'multiline':False]
['text':' avoid deadlocking with replication rollback, which at the storage layer waits for all','line_number':652,'multiline':False]
['text':' cursors to be closed under the global MODE_X lock, after having sent interrupt','line_number':653,'multiline':False]
['text':' signals to read operations. This operation must never hold open storage cursors while','line_number':654,'multiline':False]
['text':' ignoring interrupt.','line_number':655,'multiline':False]
['text':' Replace the UUID in the find command with the fully qualified namespace of','line_number':669,'multiline':False]
['text':' the looked up Collection.','line_number':670,'multiline':False]
['text':' Tailing a replicated capped clustered collection requires majority read concern.','line_number':674,'multiline':False]
['text':' Views use the aggregation system and the $_resumeAfter parameter is not allowed. A','line_number':689,'multiline':False]
['text':' more descriptive error will be raised later, but we want to validate this parameter','line_number':690,'multiline':False]
['text':' before beginning the operation.','line_number':691,'multiline':False]
['text':' If we are running a query against a view redirect this query through the aggregation','line_number':704,'multiline':False]
['text':' system.','line_number':705,'multiline':False]
['text':' Relinquish locks. The aggregation command will re-acquire them.','line_number':707,'multiline':False]
['text':' Convert the find command into an aggregation using $match (and other stages, as','line_number':710,'multiline':False]
['text':' necessary), if possible.','line_number':711,'multiline':False]
['text':' Check whether we are allowed to read from this node after acquiring our locks.','line_number':735,'multiline':False]
['text':' The readOnce option causes any storage-layer cursors created during plan','line_number':740,'multiline':False]
['text':' execution to assume read data will not be needed again and need not be cached.','line_number':741,'multiline':False]
['text':' Get the execution plan for the query.','line_number':747,'multiline':False]
['text':' extractAndAttachPipelineStages ','line_number':753,'multiline':True]
['text':' If the executor supports it, find operations will maintain the storage engine state','line_number':757,'multiline':False]
['text':' across commands.','line_number':758,'multiline':False]
['text':' No collection. Just fill out curop indicating that there were zero results and','line_number':769,'multiline':False]
['text':' there is no ClientCursor id, and then return.','line_number':770,'multiline':False]
['text':' Stream query results, adding them to a BSONArray as we go.','line_number':785,'multiline':False]
['text':' If we can't fit this result inside the current batch, then we stash it for','line_number':801,'multiline':False]
['text':' later.','line_number':802,'multiline':False]
['text':' If this executor produces a postBatchResumeToken, add it to the response.','line_number':809,'multiline':False]
['text':' Add result to output buffer.','line_number':812,'multiline':False]
['text':' For empty batches, or in the case where the final result was added to the batch','line_number':833,'multiline':False]
['text':' rather than being stashed, we update the PBRT to ensure that it is the most recent','line_number':834,'multiline':False]
['text':' available.','line_number':835,'multiline':False]
['text':' Set up the cursor for getMore.','line_number':840,'multiline':False]
['text':' State will be restored on getMore.','line_number':861,'multiline':False]
['text':' We assume that cursors created through a DBDirectClient are always used from','line_number':865,'multiline':False]
['text':' their original OperationContext, so we do not need to move time to and from the','line_number':866,'multiline':False]
['text':' cursor.','line_number':867,'multiline':False]
['text':' Fill out curop based on the results.','line_number':873,'multiline':False]
['text':' Collect storage stats now before we stash the recovery unit. These stats are','line_number':877,'multiline':False]
['text':' normally collected in the service entry point layer just before a command','line_number':878,'multiline':False]
['text':' ends, but they must be collected before stashing the RecoveryUnit. Otherwise,','line_number':879,'multiline':False]
['text':' the service entry point layer will collect the stats from the new','line_number':880,'multiline':False]
['text':' RecoveryUnit, which wasn't actually used for the query.','line_number':881,'multiline':False]
['text':'','line_number':882,'multiline':False]
['text':' The stats collected here will not get overwritten, as the service entry','line_number':883,'multiline':False]
['text':' point layer will only set these stats when they're not empty.','line_number':884,'multiline':False]
['text':' During destruction of the pinned cursor we may discover that the operation has','line_number':890,'multiline':False]
['text':' been interrupted. This would cause the transaction resources we just stashed to','line_number':891,'multiline':False]
['text':' be released and destroyed. As we hold a reference here to them in the form of the','line_number':892,'multiline':False]
['text':' acquisition which modifies the resources, we must release it now before','line_number':893,'multiline':False]
['text':' destroying the pinned cursor.','line_number':894,'multiline':False]
['text':' We want to destroy executor as soon as possible to release any resources locks it','line_number':898,'multiline':False]
['text':' may hold.','line_number':899,'multiline':False]
['text':' Generate the response object to send to the client.','line_number':904,'multiline':False]
['text':' Increment this metric once we have generated a response and we know it will return','line_number':907,'multiline':False]
['text':' documents.','line_number':908,'multiline':False]
['text':' Filter the keys that can be mirrored','line_number':916,'multiline':False]
['text':' Tell the find to only return a single batch','line_number':936,'multiline':False]
['text':' Parses the command object to a FindCommandRequest. If the client request did not specify','line_number':946,'multiline':False]
['text':' any runtime constants, make them available to the query here.','line_number':947,'multiline':False]
['text':' check validated tenantId and set the flag on the serialization context object','line_number':950,'multiline':False]
['text':' TODO: SERVER-73632 Remove Feature Flag for PM-635.','line_number':959,'multiline':False]
['text':' Forbid users from passing 'querySettings' explicitly.','line_number':960,'multiline':False]
['text':' Rewrite any FLE find payloads that exist in the query if this is a FLE 2 query.','line_number':967,'multiline':False]
['text':' namespace','line_number':994,'multiline':False]
['text':' namespace mongo','line_number':995,'multiline':False]
