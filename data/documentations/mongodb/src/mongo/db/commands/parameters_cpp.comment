['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':' IWYU pragma: keep','line_number':53,'multiline':False]
['text':'*
 * Search document for element corresponding to log component's parent.
 ','line_number':100,'multiline':True]
['text':' Hide LogComponent::kDefault','line_number':105,'multiline':False]
['text':' Attach LogComponent::kDefault children to root','line_number':111,'multiline':False]
['text':'*
 * Returns current settings as a BSON document.
 * The "default" log component is an implementation detail. Don't expose this to users.
 ','line_number':119,'multiline':True]
['text':' Save LogComponent::kDefault LogSeverity at root','line_number':140,'multiline':False]
['text':'*
 * Updates component hierarchy log levels.
 *
 * BSON Format:
 * {
 *     verbosity: 4,  <-- maps to 'default' log component.
 *     componentA: {
 *         verbosity: 2,  <-- sets componentA's log level to 2.
 *         componentB: {
 *             verbosity: 1, <-- sets componentA.componentB's log level to 1.
 *         }
 *         componentC: {
 *             verbosity: -1, <-- clears componentA.componentC's log level so that
 *                                its final loglevel will be inherited from componentA.
 *         }
 *     },
 *     componentD : 3  <-- sets componentD's log level to 3 (alternative to
 *                         subdocument with 'verbosity' field).
 * }
 *
 * For the default component, the log level is read from the top-level
 * "verbosity" field.
 * For non-default components, we look up the element using the component's
 * dotted name. If the "<dotted component name>" field is a number, the log
 * level will be read from the field's value.
 * Otherwise, we assume that the "<dotted component name>" field is an
 * object with a "verbosity" field that holds the log level for the component.
 * The more verbose format with the "verbosity" field is intended to support
 * setting of log levels of both parent and child log components in the same
 * BSON document.
 *
 * Ignore elements in BSON object that do not map to a log component's dotted
 * name.
 ','line_number':158,'multiline':True]
['text':' Negative value means to clear log level of component.','line_number':205,'multiline':False]
['text':' Convert non-negative value to Log()/Debug(N).','line_number':211,'multiline':False]
['text':' for automationServiceDescription','line_number':233,'multiline':False]
['text':' namespace','line_number':236,'multiline':False]
['text':' First check that we aren't setting the same parameter twice and that we actually are','line_number':355,'multiline':False]
['text':' setting parameters that we have registered and can change at runtime','line_number':356,'multiline':False]
['text':' We already know that "setParameter" will be the first element in this object, so skip','line_number':359,'multiline':False]
['text':' past that','line_number':360,'multiline':False]
['text':' Set of all the parameters the user is attempting to change','line_number':363,'multiline':False]
['text':' Iterate all parameters the user passed in to do the initial validation checks,','line_number':366,'multiline':False]
['text':' including verifying that we are not setting the same parameter twice.','line_number':367,'multiline':False]
['text':' Check to see if this is actually a valid parameter','line_number':376,'multiline':False]
['text':' Is the parameter disabled?','line_number':382,'multiline':False]
['text':' Make sure we are allowed to change this parameter','line_number':388,'multiline':False]
['text':' Make sure we are only setting this parameter once','line_number':393,'multiline':False]
['text':' Iterate the parameters that we have confirmed we are setting and actually set them.','line_number':405,'multiline':False]
['text':' Not that if setting any one parameter fails, the command will fail, but the user','line_number':406,'multiline':False]
['text':' won't see what has been set and what hasn't.  See SERVER-8552.','line_number':407,'multiline':False]
['text':' namespace mongo','line_number':591,'multiline':False]
