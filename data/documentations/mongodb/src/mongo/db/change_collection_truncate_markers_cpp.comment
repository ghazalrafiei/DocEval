['text':'*
 *    Copyright (C) 2023-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':' namespace','line_number':72,'multiline':False]
['text':' If there's nothing in the markers queue then we don't have excess markers by definition.','line_number':86,'multiline':False]
['text':' We cannot expire the marker when the last entry is present there as it would','line_number':92,'multiline':False]
['text':' break the requirement of always having at least 1 entry present in the','line_number':93,'multiline':False]
['text':' collection.','line_number':94,'multiline':False]
['text':' We can't use the normal peekOldestMarkerIfNeeded method since that calls _hasExcessMarkers','line_number':110,'multiline':False]
['text':' and it will return false since the new oldest marker will have the last entry.','line_number':111,'multiline':False]
['text':' Partial marker did not get generated, early exit.','line_number':115,'multiline':False]
['text':' We will only consider the case of an expired marker.','line_number':120,'multiline':False]
['text':' The oldest marker hasn't expired, nothing to do here.','line_number':128,'multiline':False]
['text':' If the oldest marker does not contain the last entry it's a normal marker, don't perform any','line_number':135,'multiline':False]
['text':' modifications to it.','line_number':136,'multiline':False]
['text':' At this point the marker contains the last entry of the collection, we have to shift the last','line_number':142,'multiline':False]
['text':' entry to the next marker so we can expire the previous entries.','line_number':143,'multiline':False]
['text':' We build the previous record id based on the extracted value','line_number':153,'multiline':False]
['text':' Replace now the oldest marker with a version that doesn't contain the last entry. This is','line_number':169,'multiline':False]
['text':' susceptible to races with concurrent inserts. But the invariant of metrics being correct in','line_number':170,'multiline':False]
['text':' aggregate still holds. Ignoring this issue is a valid strategy here as we move the ignored','line_number':171,'multiline':False]
['text':' bytes to the next partial marker and we only guarantee eventual correctness.','line_number':172,'multiline':False]
['text':' namespace mongo','line_number':179,'multiline':False]
