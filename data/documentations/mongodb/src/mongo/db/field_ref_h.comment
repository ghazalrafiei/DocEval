['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':' IWYU pragma: no_include "boost/intrusive/detail/iterator.hpp"','line_number':34,'multiline':False]
['text':'*
 * A FieldPath represents a path in a document, starting from the root. The path
 * is made of "field parts" separated by dots. The class provides an efficient means to
 * "split" the dotted fields in its parts, but no validation is done.
 *
 * Any field part may be replaced, after the "original" field reference was parsed. Any
 * part can be accessed through a StringData object.
 *
 * The class is not thread safe.
 ','line_number':50,'multiline':True]
['text':'*
     * Helper class for appending to a FieldRef for the duration of the current scope and then
     * restoring the FieldRef at the end of the scope.
     ','line_number':63,'multiline':True]
['text':'*
     * Returns true if the argument is a numeric string which is eligible to act as the key name for
     * an element in a BSON array; in other words, the string matches the regex ^(0|[1-9]+[0-9]*)$.
     ','line_number':81,'multiline':True]
['text':'*
     * Similar to the function above except strings that contain leading zero's are considered
     * numeric. For instance, the above function would return false for an input "01" however this
     * function will return true.
     ','line_number':87,'multiline':True]
['text':'*
     * Builds a field path out of each field part in 'dottedField'.
     ','line_number':98,'multiline':True]
['text':'*
     * Sets the 'i-th' field part to point to 'part'. Assumes i < size(). Behavior is undefined
     * otherwise.
     ','line_number':103,'multiline':True]
['text':'*
     * Adds a new field to the end of the path, increasing its size by 1.
     ','line_number':109,'multiline':True]
['text':'*
     * Removes the last part from the path, decreasing its size by 1. Has no effect on a FieldRef
     * with size 0.
     ','line_number':114,'multiline':True]
['text':'*
     * Removes the first part from the path, decreasing its size by 1. Has no effect on a FielRef
     * with size 0.
     ','line_number':120,'multiline':True]
['text':'*
     * Returns the 'i-th' field part. Assumes i < size(). Behavior is undefined otherwise.
     ','line_number':126,'multiline':True]
['text':'*
     * Returns true when 'this' FieldRef is a prefix of 'other'. Equality is not considered
     * a prefix.
     ','line_number':131,'multiline':True]
['text':'*
     * Returns true if 'this' FieldRef is a prefix of 'other', or if both paths are identical.
     ','line_number':137,'multiline':True]
['text':'*
     * Returns true if 'this' is a prefix of, or equal to, 'other', or vice versa.
     ','line_number':142,'multiline':True]
['text':'*
     * Returns the number of field parts in the prefix that 'this' and 'other' share.
     ','line_number':147,'multiline':True]
['text':'*
     * Returns true if the specified path component is a numeric string which is eligible to act as
     * the key name for an element in a BSON array; in other words, the fieldname matches the regex
     * ^(0|[1-9]+[0-9]*)$.
     ','line_number':152,'multiline':True]
['text':'*
     * Similar to isNumericPathComponentStrict, but returns true for 0-prefixed indices, such as
     * "00" and "01".
     ','line_number':159,'multiline':True]
['text':'*
     * Returns true if this FieldRef has any numeric path components.
     ','line_number':165,'multiline':True]
['text':'*
     * Returns the positions of all numeric path components, starting from the given position.
     ','line_number':170,'multiline':True]
['text':'*
     * Returns a StringData of the full dotted field in its current state (i.e., some parts may have
     * been replaced since the parse() call).
     ','line_number':175,'multiline':True]
['text':'*
     * Returns a StringData of parts of the dotted field from startPart to endPart in its current
     * state (i.e., some parts may have been replaced since the parse() call).
     ','line_number':181,'multiline':True]
['text':'*
     * Compares the full dotted path represented by this FieldRef to other
     ','line_number':187,'multiline':True]
['text':'*
     * Return 0 if 'this' is equal to 'other' lexicographically, -1 if is it less than or +1 if it
     * is greater than.
     ','line_number':192,'multiline':True]
['text':'*
     * Resets the internal state. See note in parse() call.
     ','line_number':198,'multiline':True]
['text':'','line_number':203,'multiline':False]
['text':' accessors','line_number':204,'multiline':False]
['text':'','line_number':205,'multiline':False]
['text':'*
     * Returns the number of parts in this FieldRef.
     ','line_number':207,'multiline':True]
['text':' Add size of each element in '_replacements' vector.','line_number':223,'multiline':False]
['text':' Add size of each element in '_parts' vector.','line_number':226,'multiline':False]
['text':' Add runtime size of '_dotted' string.','line_number':228,'multiline':False]
['text':' Add size of the object.','line_number':230,'multiline':False]
['text':' Dotted fields are most often not longer than four parts. We use a mixed structure','line_number':235,'multiline':False]
['text':' here that will not require any extra memory allocation when that is the case. And','line_number':236,'multiline':False]
['text':' handle larger dotted fields if it is. The idea is not to penalize the common case','line_number':237,'multiline':False]
['text':' with allocations.','line_number':238,'multiline':False]
['text':' In order to make FieldRef copyable, we use a StringData-like type that stores an offset and','line_number':241,'multiline':False]
['text':' length into the backing string. StringData, in constrast, holds const char* pointers that','line_number':242,'multiline':False]
['text':' would have to be updated to point into the new string on copy.','line_number':243,'multiline':False]
['text':' Constructs an empty StringView.','line_number':245,'multiline':False]
['text':'*
     * Returns the new number of parts after appending 'part' to this field path. This is
     * private, because it is only intended for use by the parse function.
     ','line_number':258,'multiline':True]
['text':'*
     * Re-assemble _dotted from components, including any replacements in _replacements,
     * and update the StringData components in _parts to refer to the parts
     * of the new _dotted. This is used to make the storage for the current value of this
     * FieldRef contiguous so it can be returned as a StringData from the dottedField
     * method above.
     ','line_number':264,'multiline':True]
['text':' Number of field parts in the cached dotted name (_dotted).','line_number':273,'multiline':False]
['text':' Field components. Each component is either a StringView backed by the','line_number':276,'multiline':False]
['text':' _dotted string or boost::none to indicate that getPart() should read the string from the','line_number':277,'multiline':False]
['text':' _replacements list.','line_number':278,'multiline':False]
['text':'*
     * Cached copy of the complete dotted name string. The StringView objects in "_parts" reference
     * this string.
     ','line_number':282,'multiline':True]
['text':'*
     * String storage for path parts that have been replaced with setPart() or added with
     * appendPart() since the lasted time "_dotted" was materialized.
     ','line_number':288,'multiline':True]
['text':' namespace mongo','line_number':329,'multiline':False]
