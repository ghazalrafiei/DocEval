['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':' This is the WC extracted from the command object, so the CWWC or implicit default hasn't been','line_number':102,'multiline':False]
['text':' applied yet, which is why "usedDefaultConstructedWC" flag can be used an indicator of whether','line_number':103,'multiline':False]
['text':' the client supplied a WC or not.','line_number':104,'multiline':False]
['text':' If the user supplied write concern from the command is empty (writeConcern: {}),','line_number':105,'multiline':False]
['text':' usedDefaultConstructedWC will be true so we will then use the CWWC or implicit default.','line_number':106,'multiline':False]
['text':' Note that specifying writeConcern: {w:0} is not the same as empty. {w:0} differs from {w:1}','line_number':107,'multiline':False]
['text':' in that the client will not expect a command reply/acknowledgement at all, even in the case','line_number':108,'multiline':False]
['text':' of errors.','line_number':109,'multiline':False]
['text':' WriteConcern defaults can only be applied on regular replica set members.','line_number':113,'multiline':False]
['text':' Operations received by shard and config servers should always have WC explicitly specified.','line_number':114,'multiline':False]
['text':' If no write concern is specified in the command, then use the cluster-wide default WC (if','line_number':122,'multiline':False]
['text':' there is one), or else the default implicit WC:','line_number':123,'multiline':False]
['text':' (if [(#arbiters > 0) AND (#arbiters >= Â½(#voting nodes) - 1)] then {w:1} else {w:majority}).','line_number':124,'multiline':False]
['text':' Default WC can be 'boost::none' if the implicit default is used and set to 'w:1'.','line_number':140,'multiline':False]
['text':' Client supplied a write concern object without 'w' field.','line_number':155,'multiline':False]
['text':' Default WC can be 'boost::none' if the implicit default is used and set to 'w:1'.','line_number':158,'multiline':False]
['text':' It's fine for clients to provide any provenance value to mongod. But if they haven't, then an','line_number':169,'multiline':False]
['text':' appropriate provenance needs to be determined.','line_number':170,'multiline':False]
['text':'*
 * Write concern with {j: true} on single voter replica set primaries must wait for no oplog holes
 * behind a write, before flushing to disk (not done in this function), in order to guarantee that
 * a write will remain after unclean shutdown and server restart recovery.
 *
 * Multi-voter replica sets will likely roll back writes if the primary crashes and restarts.
 * However, single voter sets never roll back writes, so we must maintain that behavior. Multi-node
 * single-voter primaries must truncate the oplog to ensure cross-replica set data consistency; and
 * single-node single-voter sets must never lose confirmed writes.
 *
 * The oplogTruncateAfterPoint is updated with the no holes point prior to journal flushing (write
 * persistence). Ensuring the no holes point is past (or equal to) our write, ensures the flush to
 * disk will save a truncate point that will not truncate the new write we wish to guarantee.
 *
 * Can throw on opCtx interruption.
 ','line_number':250,'multiline':True]
['text':' It is safe for secondaries in multi-node single voter replica sets to truncate writes if','line_number':269,'multiline':False]
['text':' there are oplog holes. They can catch up again.','line_number':270,'multiline':False]
['text':'primaryOnly','line_number':272,'multiline':True]
['text':' Add time waiting for write concern to CurOp.','line_number':286,'multiline':False]
['text':' Respecting this failpoint for internal clients prevents stepup from working properly.','line_number':295,'multiline':False]
['text':' This fail point pauses with an open snapshot on the oplog. Some tests pause on this fail','line_number':296,'multiline':False]
['text':' point prior to running replication rollback. This prevents the operation from being','line_number':297,'multiline':False]
['text':' killed and the snapshot being released. Hence, we release the snapshot here.','line_number':298,'multiline':False]
['text':' Next handle blocking on disk','line_number':304,'multiline':False]
['text':' Waiting for durability (flushing the journal or all files to disk) can throw on interruption.','line_number':309,'multiline':False]
['text':' This field has had a dummy value since MMAP went away. It is undocumented.','line_number':320,'multiline':False]
['text':' Maintaining it so as not to cause unnecessary user pain across upgrades.','line_number':321,'multiline':False]
['text':' We only need to commit the journal if we're durable','line_number':324,'multiline':False]
['text':' Now wait for replication','line_number':340,'multiline':False]
['text':' no write happened for this client yet','line_number':343,'multiline':False]
['text':' needed to avoid incrementing gleWtimeStats SERVER-9005','line_number':347,'multiline':False]
['text':' no desired replication check','line_number':349,'multiline':False]
['text':' Replica set stepdowns and gle mode changes are thrown as errors','line_number':353,'multiline':False]
['text':' namespace mongo','line_number':378,'multiline':False]
