['text':'*
 *    Copyright (C) 2022-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':' for std::size_t','line_number':32,'multiline':False]
['text':' for CollectionPtr','line_number':35,'multiline':False]
['text':' for OplogLink','line_number':37,'multiline':False]
['text':' for MutableOplogEntry','line_number':38,'multiline':False]
['text':' for StmtId','line_number':39,'multiline':False]
['text':' for Record','line_number':40,'multiline':False]
['text':' for Date_t','line_number':41,'multiline':False]
['text':'*
 * This interface provides methods to append entries to the oplog collection with additional
 * support for various buffering/write-through semantics depending on the caller's current
 * write context (multi-doc transaction, batched writes, or single-operation WriteUnitOfWork).
 *
 * The actual oplog entry inserts would be delegated to the repl::logOp() methods in repl/oplog.h.
 *
 * The primary consumer of this interface would be the OpObserverImpl implementation, which
 * used to append to the oplog directly once it has assembled the final oplog entry for single write
 * operation to be inserted immediately; a multi-doc transaction or a batched write (multiple write
 * ops encapsulated in a single applyOps entry).
 ','line_number':45,'multiline':True]
['text':'*
     * Set the "lsid", "txnNumber", "stmtId", "prevOpTime", "preImageOpTime" and "postImageOpTime"
     * fields of the oplogEntry based on the given oplogLink for retryable writes (i.e. when
     * stmtIds.front() != kUninitializedStmtId).
     *
     * Refer to repl::appendOplogEntryChainInfo() in repl/oplog.h.
     ','line_number':61,'multiline':True]
['text':'*
     * Returns the optime of the oplog entry written to the oplog.
     * Returns a null optime if oplog was not modified.
     ','line_number':73,'multiline':True]
['text':'*
     * Low level oplog function used by logOp() and similar functions to append
     * storage engine records to the oplog collection.
     *
     * This function has to be called within the scope of a WriteUnitOfWork with
     * a valid CollectionPtr reference to the oplog.
     *
     * @param records a vector of oplog records to be written. Records hold references
     * to unowned BSONObj data.
     * @param timestamps a vector of respective Timestamp objects for each oplog record.
     * @param oplogCollection collection to be written to.
     * @param finalOpTime the OpTime of the last oplog record.
     * @param wallTime the wall clock time of the last oplog record.
     * @param isAbortIndexBuild for tenant migration use only.
     ','line_number':79,'multiline':True]
['text':'*
     * Allocates optimes for new entries in the oplog.  Returns a vector of OplogSlots, which
     * contain the new optimes along with their terms.
     ','line_number':103,'multiline':True]
['text':' namespace mongo','line_number':110,'multiline':False]
