['text':'*
 *    Copyright (C) 2021-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':' IWYU pragma: keep','line_number':44,'multiline':False]
['text':'*
 * Implementation of health observer for the Config Server.
 *
 * This observer detects a failure if:
 * 1. We don't have permission to read from the 'shards' collection at the
 *    Config server or
 * 2. We cannot reach any server from a random majority of the servers
 *
 * To avoid an expensive majority read concern read from the primary this observer
 * tries to read only from the 'nearest' server with 'available' read concern.
 * However this check is insufficient. To verify that we have a view on majority
 * it requires at least one response from a random majority.
 ','line_number':94,'multiline':True]
['text':'*
     * Health observer unique type.
     ','line_number':112,'multiline':True]
['text':'*
     * Triggers health check.
     * It is guaranteed that the next check is never invoked until the promise for the
     * previous one is filled, thus synchronization can be relaxed.
     ','line_number':127,'multiline':True]
['text':' Collects the results of one check.','line_number':136,'multiline':False]
['text':' Final criteria that the health check passed.','line_number':138,'multiline':False]
['text':' If smoke read check passed and we can reach some servers,','line_number':140,'multiline':False]
['text':' as configured by the IDL.','line_number':141,'multiline':False]
['text':' The check passed if read from server succeeds.','line_number':145,'multiline':False]
['text':' Implementation of the health check.','line_number':161,'multiline':False]
['text':' Try a quick smoke read from 'shards' collection on nearest config server with','line_number':164,'multiline':False]
['text':' 'available' read concern.','line_number':165,'multiline':False]
['text':' If this succeeds there is no need to read with majority read concern for the','line_number':166,'multiline':False]
['text':' reason that if there is an ongoing failover at the Config RS it should not','line_number':167,'multiline':False]
['text':' block the health observer.','line_number':168,'multiline':False]
['text':' Returns success only if some replicas can be reached.','line_number':171,'multiline':False]
['text':' This is configured by the IDL.','line_number':172,'multiline':False]
['text':' Utility method to do a ping.','line_number':175,'multiline':False]
['text':' Completion token is different from top level cancelation token, may be','line_number':176,'multiline':False]
['text':' canceled when the request is no longer necessary (got enough results).','line_number':177,'multiline':False]
['text':' Fetches 'serverStatus' from every config server.','line_number':182,'multiline':False]
['text':' This check requires all servers to be reachable or the primary to be reachable to pass.','line_number':183,'multiline':False]
['text':' The chain is not capturing 'this' for the case the network call outlives the observer.','line_number':193,'multiline':False]
['text':' TODO(SERVER-74659): Please revisit if this thread could be made killable.','line_number':220,'multiline':False]
['text':' Already failed.','line_number':230,'multiline':False]
['text':' Apparently the server is shutting down, just return','line_number':234,'multiline':False]
['text':' incomplete check.','line_number':235,'multiline':False]
['text':' Required config replicas are reachable.','line_number':241,'multiline':False]
['text':' `runCommand()` is not futurized so this method is blocking.','line_number':269,'multiline':False]
['text':' We ping only necessary count of servers.','line_number':321,'multiline':False]
['text':' A cancelation source to signal no more work is necessary - either a good server is found','line_number':328,'multiline':False]
['text':' or there are no more servers.','line_number':329,'multiline':False]
['text':' We also use this cancelation source to block until we can return from this method.','line_number':330,'multiline':False]
['text':' Keeps track of how many servers we reached or failed.','line_number':332,'multiline':False]
['text':' Sufficient count of servers reached.','line_number':342,'multiline':False]
['text':' This code is racy by design, the cancel() here and below','line_number':343,'multiline':False]
['text':' can be invoked more than once by concurrent threads.','line_number':344,'multiline':False]
['text':' We can be here after the method returns, be careful with memory access.','line_number':349,'multiline':False]
['text':' We can be here after the method returns, be careful with memory access.','line_number':356,'multiline':False]
['text':' We have a result on all servers.','line_number':359,'multiline':False]
['text':' Blocks until we reached the conclusion.','line_number':366,'multiline':False]
['text':' Sufficient count of servers reached.','line_number':370,'multiline':False]
['text':' Health observer registration.','line_number':414,'multiline':False]
['text':' namespace','line_number':421,'multiline':False]
['text':' namespace process_health','line_number':423,'multiline':False]
['text':' namespace mongo','line_number':424,'multiline':False]
