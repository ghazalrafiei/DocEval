['text':'*
 *    Copyright (C) 2020-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':' IWYU pragma: no_include "ext/alloc_traits.h"','line_number':35,'multiline':False]
['text':' IWYU pragma: keep','line_number':78,'multiline':False]
['text':'*
 * Walk a literal array payload and produce a Value. This function is necessary because Aggregation
 * Expression literals are required to be collapsed into Values inside ExpressionConst but
 * uncollapsed otherwise.
 ','line_number':83,'multiline':True]
['text':'*
 * Walk a literal object payload and produce a Value. This function is neccesary because Aggregation
 * Expression literals are required to be collapsed into Values inside ExpressionConst but
 * uncollapsed otherwise.
 ','line_number':97,'multiline':True]
['text':'*
 * Walk a purely literal CNode and produce a Value. This function is neccesary because Aggregation
 * Expression literals are required to be collapsed into Values inside ExpressionConst but
 * uncollapsed otherwise.
 ','line_number':112,'multiline':True]
['text':'*
 * Walk a literal array payload and produce an ExpressionArray.
 *
 * Caller must ensure the ExpressionContext outlives the result.
 ','line_number':130,'multiline':True]
['text':'*
 * Walk a literal object payload and produce an ExpressionObject.
 *
 * Caller must ensure the ExpressionContext outlives the result.
 ','line_number':146,'multiline':True]
['text':'*
 * Walk an agg function/operator object payload and produce an ExpressionVector.
 *
 * Caller must ensure the ExpressionContext outlives the result.
 ','line_number':163,'multiline':True]
['text':' Everything else is a literal.','line_number':187,'multiline':False]
['text':'*
 * Check that the order of arguments is what we expect in an input expression.
 ','line_number':195,'multiline':True]
['text':'*
 * Walk an agg function/operator object payload and produce an ExpressionMeta.
 *
 * Caller must ensure the ExpressionContext outlives the result.
 ','line_number':209,'multiline':True]
['text':' $filter's syntax guarantees that it's payload is ObjectChildren','line_number':249,'multiline':False]
['text':' The cond expression has a different VPS, where the variable the user gives in the "as"','line_number':254,'multiline':False]
['text':' argument is defined.','line_number':255,'multiline':False]
['text':'*
 * Walk an agg function/operator object payload and produce an Expression.
 *
 * Caller must ensure the ExpressionContext outlives the result.
 ','line_number':272,'multiline':True]
['text':' Constants require using Value instead of Expression to build the tree in agg.','line_number':280,'multiline':False]
['text':' Meta is an exception since it has no Expression children but rather an enum member.','line_number':285,'multiline':False]
['text':' Filter is an exception because its Expression children need to be given particular variable','line_number':288,'multiline':False]
['text':' states before they are translated.','line_number':289,'multiline':False]
['text':'*
 * Walk a compound projection CNode payload (CompoundInclusionKey or CompoundExclusionKey) and
 * produce a sequence of paths and optional expressions.
 *
 * Caller must ensure the ExpressionContext outlives the result.
 ','line_number':671,'multiline':True]
['text':' In this context we have a project path object to recurse over.','line_number':690,'multiline':False]
['text':' Alternatively we have a key indicating inclusion/exclusion.','line_number':695,'multiline':False]
['text':' Everything else is an agg expression to translate.','line_number':698,'multiline':False]
['text':'*
 * Walk an inclusion project stage object CNode and produce a
 * DocumentSourceSingleDocumentTransformation.
 ','line_number':709,'multiline':True]
['text':' 'true' indicates that the fast path is enabled, it's harmless to leave it on for all cases.','line_number':715,'multiline':False]
['text':' If we see a key fieldname, make sure it's _id.','line_number':722,'multiline':False]
['text':' InclusionProjectionExecutors must contain no exclusion besides _id so we do','line_number':744,'multiline':False]
['text':' nothing here and translate the presence of an _id exclusion node by the','line_number':745,'multiline':False]
['text':' absence of the implicit _id inclusion below.','line_number':746,'multiline':False]
['text':' This is a computed projection.','line_number':753,'multiline':False]
['text':' If we didn't see _id we need to add it in manually for inclusion.','line_number':759,'multiline':False]
['text':'*
 * Walk an exclusion project stage object CNode and produce a
 * DocumentSourceSingleDocumentTransformation.
 ','line_number':766,'multiline':True]
['text':' 'true' indicates that the fast path is enabled, it's harmless to leave it on for all cases.','line_number':772,'multiline':False]
['text':' If we see a key fieldname, make sure it's _id.','line_number':777,'multiline':False]
['text':' ExclusionProjectionExecutors must contain no inclusion besides _id so we do','line_number':786,'multiline':False]
['text':' nothing here since including _id is the default.','line_number':787,'multiline':False]
['text':' This is a computed projection.','line_number':802,'multiline':False]
['text':' Computed fields are disallowed in exclusion projection.','line_number':803,'multiline':False]
['text':'*
 * Walk a skip stage object CNode and produce a DocumentSourceSkip.
 ','line_number':811,'multiline':True]
['text':'*
 * Unwrap a limit stage CNode and produce a DocumentSourceLimit.
 ','line_number':819,'multiline':True]
['text':'*
 * Unwrap a sample stage CNode and produce a DocumentSourceSample.
 ','line_number':827,'multiline':True]
['text':'*
 * Unwrap a match stage CNode and produce a DocumentSourceMatch.
 ','line_number':834,'multiline':True]
['text':'*
 * Walk an aggregation pipeline stage object CNode and produce a DocumentSource.
 ','line_number':843,'multiline':True]
['text':' namespace','line_number':866,'multiline':False]
['text':'*
 * Walk an expression CNode and produce an agg Expression.
 *
 * Caller must ensure the ExpressionContext outlives the result.
 ','line_number':868,'multiline':True]
['text':' When we're not inside an agg operator/function, this is a non-leaf literal.','line_number':878,'multiline':False]
['text':' This is either a literal object or an agg operator/function.','line_number':882,'multiline':False]
['text':' If a key occurs outside a particular agg operator/function, it was misplaced.','line_number':889,'multiline':False]
['text':' An absentKey denotes a missing optional argument to an Expression.','line_number':892,'multiline':False]
['text':' Everything else is a literal leaf.','line_number':912,'multiline':False]
['text':'*
 * Walk a pipeline array CNode and produce a Pipeline.
 ','line_number':919,'multiline':True]
['text':'*
 * Walk a literal leaf CNode and produce an agg Value.
 ','line_number':932,'multiline':True]
['text':' These are illegal since they're non-leaf.','line_number':937,'multiline':False]
['text':' These are illegal since they're non-literal.','line_number':943,'multiline':False]
['text':' These payloads require a special translation to DocumentValue parlance.','line_number':947,'multiline':False]
['text':' The rest convert directly.','line_number':952,'multiline':False]
['text':' namespace mongo::cst_pipeline_translation','line_number':959,'multiline':False]
