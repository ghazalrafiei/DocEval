['text':'*
 *    Copyright (C) 2023-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':'*
 * Mirrors command helper methods found in commands.h or cluster_command_helpers.h.
 ','line_number':58,'multiline':True]
['text':' The command has a writeConcern field and it's majority, so we can return it as-is.','line_number':65,'multiline':False]
['text':'*
 * Template to combine futures using a future processing callable.
 ','line_number':98,'multiline':True]
['text':' Dependent on caller to synchronize sharedPromise access in processStatusWith.','line_number':106,'multiline':False]
['text':' always process the result, even if an executor is rejecting','line_number':112,'multiline':False]
['text':' work','line_number':113,'multiline':False]
['text':'*
 * Given a vector of input Futures, returns a Future which holds the value
 * of the first of those futures to resolve with a status, value, and index that
 * satisfies the conditions in the ConditionCallable Callable.
 ','line_number':122,'multiline':True]
['text':' If this is the first input future to complete and satisfy the','line_number':137,'multiline':False]
['text':' shouldAccept condition, change done to true and set the value on the','line_number':138,'multiline':False]
['text':' promise.','line_number':139,'multiline':False]
['text':'*
 * Given a vector of input Futures and a processResponse callable, processes the responses
 * from each of the futures and pushes the results onto a vector. Cancels early on error
 * status, but waits until other futures resolve. Caller must manually create a
 * CancellationSource wrapping the sendCommand cancellation token.
 ','line_number':149,'multiline':True]
['text':' Need to wait for all responses to protect against pending work after promise is','line_number':182,'multiline':False]
['text':' fulfilled.','line_number':183,'multiline':False]
['text':' namespace mongo::async_rpc','line_number':206,'multiline':False]
