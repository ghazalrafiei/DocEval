['text':'*
 *    Copyright (C) 2023-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':' IWYU pragma: no_include "cxxabi.h"','line_number':32,'multiline':False]
['text':' IWYU pragma: keep','line_number':51,'multiline':False]
['text':'*
 * Used as the state for callbacks _only_ for RPCs scheduled through this executor.
 ','line_number':54,'multiline':True]
['text':'*
     * Do not call directly. Use make.
     ','line_number':67,'multiline':True]
['text':' Run callback with a CallbackCanceled error.','line_number':87,'multiline':False]
['text':' Run callback with the provided result.','line_number':101,'multiline':False]
['text':' Convert the result into a RemoteCommandResponse unconditionally.','line_number':107,'multiline':False]
['text':' Convert the response into an OnAnyResponse using the provided target.','line_number':110,'multiline':False]
['text':' All fields except for "canceled" are guarded by the owning task executor's _mutex.','line_number':121,'multiline':False]
['text':' Just set the state to canceled. The callback will be run with an','line_number':206,'multiline':False]
['text':' error status once it reaches the front of the queue.','line_number':207,'multiline':False]
['text':' Cancel the ongoing operation.','line_number':211,'multiline':False]
['text':' Nothing to do.','line_number':222,'multiline':False]
['text':' Defer to underlying for non-RPC.','line_number':231,'multiline':False]
['text':' If the stream is ready, send the RPC immediately by continuing inline.','line_number':243,'multiline':False]
['text':' Propogate  the error down the future chain.','line_number':247,'multiline':False]
['text':' Otherwise continue on the networking reactor once the stream is ready.','line_number':253,'multiline':False]
['text':' It's possible this callback was canceled after it was moved','line_number':275,'multiline':False]
['text':' out of the queue, but before we actually started work on the client.','line_number':276,'multiline':False]
['text':' In that case, don't run it.','line_number':277,'multiline':False]
['text':' Find the first non-canceled request.','line_number':301,'multiline':False]
['text':' No non-canceled requests. Stop doing networking.','line_number':304,'multiline':False]
['text':' Set req state to running','line_number':311,'multiline':False]
['text':' Stash the in-progress operation before releasing the lock so we can','line_number':315,'multiline':False]
['text':' access it if we're shutdown while it's in-progress.','line_number':316,'multiline':False]
['text':' If we used the _stream, update it accordingly.','line_number':325,'multiline':False]
['text':' We didn't get a response from the remote.','line_number':331,'multiline':False]
['text':' We assume the stream is broken and therefore can do no more work. Notify the','line_number':332,'multiline':False]
['text':' stream of the failure, destroy it, and shutdown.','line_number':333,'multiline':False]
['text':' Now run the completion callback for the command.','line_number':339,'multiline':False]
['text':' Three possibilities here: we either finished the RPC','line_number':345,'multiline':False]
['text':' successfully, got a local error from the stream after','line_number':346,'multiline':False]
['text':' attempting to start networking, or never were able to acquire a','line_number':347,'multiline':False]
['text':' stream. In any case, we first complete the current request','line_number':348,'multiline':False]
['text':' by invoking it's callback:','line_number':349,'multiline':False]
['text':' Get the target if we successfully acquired a stream.','line_number':351,'multiline':False]
['text':' If we weren't able to acquire a stream, shut-down.','line_number':358,'multiline':False]
['text':' Cancel the in-progress request that was already popped from the queue.','line_number':380,'multiline':False]
['text':' May be called by any thread that wishes to wait until this executor is done shutting down.','line_number':390,'multiline':False]
['text':' Any thread that calls this will block until no work remains scheduled but not completed','line_number':391,'multiline':False]
['text':' on this executor. After join() completes, the state if this executor will be 'shutdownComplete'.','line_number':392,'multiline':False]
['text':' Below are the portions of the TaskExecutor API that are illegal to use through','line_number':420,'multiline':False]
['text':' PinnedCursorTaskExecutor and/or are unimplemented at this time.','line_number':421,'multiline':False]
['text':' namespace mongo::executor','line_number':461,'multiline':False]
