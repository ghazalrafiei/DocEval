['text':'*
 *    Copyright (C) 2019-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':' RtlNtStatusToDosError function, only available via GetProcAddress','line_number':55,'multiline':False]
['text':'*
 * Initialize crypto algorithms from default system CNG provider.
 ','line_number':84,'multiline':True]
['text':' AES-CTR is not supported natively, simulating it via ECB mode','line_number':92,'multiline':False]
['text':' BCrypt does not support AES-CTR natively, so we are running CTR manually via ECB mode','line_number':167,'multiline':False]
['text':' Based on following post: https://crypto.stackexchange.com/a/22674','line_number':168,'multiline':False]
['text':'*
 * Base class to support initialize symmetric key buffers and state.
 ','line_number':223,'multiline':True]
['text':' Initialize key storage buffers','line_number':233,'multiline':False]
['text':' In GCM mode, the _iv argument to BCrypt{Encrypt,Decrypt} is used','line_number':241,'multiline':False]
['text':' only for scratch storage. The real IV is loaded into the padding info.','line_number':242,'multiline':False]
['text':' GCM supports multiple valid IV lengths. The padding info must contain','line_number':243,'multiline':False]
['text':' an IV of the length we wish to use. The _iv object must provide enough','line_number':244,'multiline':False]
['text':' storage to contain the largest possible IV. This size can be acquired','line_number':245,'multiline':False]
['text':' from the algorithm's BCRYPT_BLOCK_LENGTH property.','line_number':246,'multiline':False]
['text':' Buffers for key data','line_number':308,'multiline':False]
['text':' Buffer for CBC IV, also reused for block chaining','line_number':314,'multiline':False]
['text':' Buffer for GCM','line_number':317,'multiline':False]
['text':'*
 * Like other symmetric encryptors, this class encrypts block-by-block with update and then only
 * pads once finalize is called. However, the Windows's BCrypt implementation does not natively
 * implement this functionality (see SERVER-47733), and will either require block aligned inputs or
 * will attempt to pad every input. This class bulks together inputs in a local buffer which is
 * flushed to BCrypt whenever a full block is accumulated via update invocations. Data provided to
 * update may be encrypted immediately, on a subsequent call to update, or on the call to finalize.
 ','line_number':327,'multiline':True]
['text':' Actual encryption was performed in AesCtrMaskGenerator above.','line_number':358,'multiline':False]
['text':' Here we just XOR in the data to generate a cipher.','line_number':359,'multiline':False]
['text':' BCryptEncrypt may refuse to process GCM tags if no output buffer is provided.','line_number':419,'multiline':False]
['text':' const cast becauase DataRange wants a "writable" region,','line_number':421,'multiline':False]
['text':' Our empty string isn't actually writable, but we give it a length of zero,','line_number':422,'multiline':False]
['text':' So we'll never actually try to overwrite anything.','line_number':423,'multiline':False]
['text':' if there is any data left over in the block buffer, we will encrypt it with padding','line_number':428,'multiline':False]
['text':' Actual encryption was performed in AesCtrMaskGenerator above.','line_number':431,'multiline':False]
['text':' Here we just XOR in the data to generate a cipher.','line_number':432,'multiline':False]
['text':' Actual encryption was performed in AesCtrMaskGenerator above.','line_number':488,'multiline':False]
['text':' Here we just XOR in the data to generate a cipher.','line_number':489,'multiline':False]
['text':' BCryptDecrypt may refuse to process GCM tags if no output buffer is provided.','line_number':550,'multiline':False]
['text':' const cast becauase DataRange wants a "writable" region,','line_number':552,'multiline':False]
['text':' Our empty string isn't actually writable, but we give it a length of zero,','line_number':553,'multiline':False]
['text':' So we'll never actually try to overwrite anything.','line_number':554,'multiline':False]
['text':' Actual encryption was performed in AesCtrMaskGenerator above.','line_number':560,'multiline':False]
['text':' Here we just XOR in the data to generate a cipher.','line_number':561,'multiline':False]
['text':' namespace','line_number':599,'multiline':False]
['text':' namespace crypto','line_number':643,'multiline':False]
['text':' namespace mongo','line_number':644,'multiline':False]
