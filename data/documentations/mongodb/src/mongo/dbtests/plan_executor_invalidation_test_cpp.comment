['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':' IWYU pragma: keep','line_number':71,'multiline':False]
['text':'*
 * Test fixture for verifying that plan executors correctly raise errors when invalidating events
 * such as collection or index drops happen during yield.
 ','line_number':84,'multiline':True]
['text':'*
     * Return a plan executor that is going over the collection in nss.ns_forTest().
     ','line_number':102,'multiline':True]
['text':' Create a plan executor to hold it','line_number':113,'multiline':False]
['text':' Takes ownership of 'ws', 'scan', and 'cq'.','line_number':119,'multiline':False]
['text':' Order of these is important for initialization','line_number':206,'multiline':False]
['text':' We need to store a CollectionPtr because we need a stable pointer to write to in the','line_number':212,'multiline':False]
['text':' restoreState() calls used in these tests','line_number':213,'multiline':False]
['text':' Read some of it.','line_number':235,'multiline':False]
['text':' Delete some data, namely the next 2 things we'd expect.','line_number':243,'multiline':False]
['text':' Make sure that the PlanExecutor moved forward over the deleted data.  We don't see foo==10 or','line_number':249,'multiline':False]
['text':' foo==11.','line_number':250,'multiline':False]
['text':' Read some of it.','line_number':263,'multiline':False]
['text':' Drop a collection that's not ours.','line_number':271,'multiline':False]
['text':' Read some of it.','line_number':292,'multiline':False]
['text':' Read the rest of the collection.','line_number':302,'multiline':False]
['text':' Read some of it.','line_number':315,'multiline':False]
['text':' Read the rest of the collection.','line_number':325,'multiline':False]
['text':' Create a second index which is not used by the plan executor.','line_number':336,'multiline':False]
['text':' Start scanning the index.','line_number':341,'multiline':False]
['text':' Drop the index which the plan executor is scanning while the executor is in a saved state.','line_number':348,'multiline':False]
['text':' Restoring the executor should throw.','line_number':352,'multiline':False]
['text':' Start scanning the index.','line_number':362,'multiline':False]
['text':' Drop all indexes while the executor is saved.','line_number':369,'multiline':False]
['text':' Restoring the executor should throw.','line_number':373,'multiline':False]
['text':' Start scanning the index.','line_number':385,'multiline':False]
['text':' Drop an index which the plan executor is *not* scanning while the executor is in a saved','line_number':392,'multiline':False]
['text':' state.','line_number':393,'multiline':False]
['text':' Scan the rest of the index.','line_number':398,'multiline':False]
['text':' Read some of it.','line_number':409,'multiline':False]
['text':' Drop a DB that's not ours.  We can't have a lock at all to do this as dropping a DB','line_number':417,'multiline':False]
['text':' requires a "global write lock."','line_number':418,'multiline':False]
['text':' Drop our DB.  Once again, must give up the lock.','line_number':429,'multiline':False]
['text':' TODO SERVER-31695: Allow PlanExecutors to remain valid after collection rename.','line_number':436,'multiline':False]
['text':' Partially scan the collection.','line_number':440,'multiline':False]
['text':' Rename the collection.','line_number':447,'multiline':False]
['text':' TODO SERVER-31695: Allow PlanExecutors to remain valid after collection rename.','line_number':454,'multiline':False]
['text':' Partially scan the index.','line_number':461,'multiline':False]
['text':' Rename the collection.','line_number':468,'multiline':False]
['text':' Partially scan the index.','line_number':481,'multiline':False]
['text':' Call truncate() on the Collection during yield, and verify that yield recovery throws the','line_number':488,'multiline':False]
['text':' expected error code.','line_number':489,'multiline':False]
['text':' Partially scan the collection.','line_number':498,'multiline':False]
['text':' Call truncate() on the Collection during yield. The PlanExecutor should be restored','line_number':505,'multiline':False]
['text':' successfully.','line_number':506,'multiline':False]
['text':' Since all documents in the collection have been deleted, the PlanExecutor should issue EOF.','line_number':511,'multiline':False]
['text':' namespace mongo','line_number':515,'multiline':False]
