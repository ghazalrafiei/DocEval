['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':'*
 * unit tests relating to update requests
 ','line_number':30,'multiline':True]
['text':' IWYU pragma: keep','line_number':59,'multiline':False]
['text':'filter','line_number':235,'multiline':True]
['text':'filter','line_number':246,'multiline':True]
['text':' Try with upsert false first.','line_number':254,'multiline':False]
['text':' empty document ','line_number':255,'multiline':True]
['text':'filter','line_number':256,'multiline':True]
['text':' Then with upsert true.','line_number':259,'multiline':False]
['text':'filter','line_number':260,'multiline':True]
['text':' Try with upsert false first.','line_number':268,'multiline':False]
['text':'filter','line_number':269,'multiline':True]
['text':' Then with upsert true.','line_number':272,'multiline':False]
['text':'filter','line_number':273,'multiline':True]
['text':' Try with upsert false first.','line_number':281,'multiline':False]
['text':' Then with upsert true.','line_number':285,'multiline':False]
['text':' Try with upsert false first.','line_number':294,'multiline':False]
['text':' Then with upsert true.','line_number':298,'multiline':False]
['text':'filter','line_number':309,'multiline':True]
['text':'filter','line_number':318,'multiline':True]
['text':' Try with upsert false first.','line_number':326,'multiline':False]
['text':'filter','line_number':328,'multiline':True]
['text':' Then with upsert true.','line_number':333,'multiline':False]
['text':'filter','line_number':335,'multiline':True]
['text':' In a mod that uses dontApply, we should be careful not to create a','line_number':345,'multiline':False]
['text':' parent unneccesarily.','line_number':346,'multiline':False]
['text':'filter','line_number':360,'multiline':True]
['text':'filter','line_number':362,'multiline':True]
['text':'filter','line_number':372,'multiline':True]
['text':'filter','line_number':388,'multiline':True]
['text':'filter','line_number':420,'multiline':True]
['text':'filter','line_number':434,'multiline':True]
['text':'filter','line_number':435,'multiline':True]
['text':'filter','line_number':482,'multiline':True]
['text':'filter','line_number':483,'multiline':True]
['text':'filter','line_number':494,'multiline':True]
['text':'filter','line_number':504,'multiline':True]
['text':'filter','line_number':507,'multiline':True]
['text':'filter','line_number':516,'multiline':True]
['text':'filter','line_number':517,'multiline':True]
['text':'filter','line_number':526,'multiline':True]
['text':'filter','line_number':527,'multiline':True]
['text':'filter','line_number':535,'multiline':True]
['text':'filter','line_number':537,'multiline':True]
['text':'filter','line_number':546,'multiline':True]
['text':'filter','line_number':548,'multiline':True]
['text':'filter','line_number':557,'multiline':True]
['text':'filter','line_number':564,'multiline':True]
['text':'filter','line_number':573,'multiline':True]
['text':'filter','line_number':574,'multiline':True]
['text':'filter','line_number':583,'multiline':True]
['text':'filter','line_number':584,'multiline':True]
['text':'filter','line_number':594,'multiline':True]
['text':'filter','line_number':597,'multiline':True]
['text':'filter','line_number':606,'multiline':True]
['text':'filter','line_number':607,'multiline':True]
['text':'filter','line_number':616,'multiline':True]
['text':'filter','line_number':618,'multiline':True]
['text':'filter','line_number':627,'multiline':True]
['text':'filter','line_number':628,'multiline':True]
['text':'filter','line_number':638,'multiline':True]
['text':'filter','line_number':640,'multiline':True]
['text':'filter','line_number':649,'multiline':True]
['text':'filter','line_number':651,'multiline':True]
['text':'filter','line_number':660,'multiline':True]
['text':'filter','line_number':662,'multiline':True]
['text':'filter','line_number':671,'multiline':True]
['text':'filter','line_number':673,'multiline':True]
['text':' { $push : { a : { $each : [ 2, 3 ] } } }','line_number':682,'multiline':False]
['text':'filter','line_number':684,'multiline':True]
['text':'filter','line_number':685,'multiline':True]
['text':' { $push : { a : { $each : [ 1, 2, 3 ] } } }','line_number':694,'multiline':False]
['text':'filter','line_number':696,'multiline':True]
['text':'filter','line_number':697,'multiline':True]
['text':' { $push : { a : { $each : [ 2 ] , $slice : -3 } } }','line_number':706,'multiline':False]
['text':'filter','line_number':708,'multiline':True]
['text':'filter','line_number':709,'multiline':True]
['text':' { $push : { a : { $each : [ 2 ] , $slice : -2 } } }','line_number':718,'multiline':False]
['text':'filter','line_number':720,'multiline':True]
['text':'filter','line_number':721,'multiline':True]
['text':' { $push : { a : { $each : [ 2 , 3 ] , $slice : -2 } } }','line_number':730,'multiline':False]
['text':'filter','line_number':732,'multiline':True]
['text':'filter','line_number':733,'multiline':True]
['text':' { $push : { a : { $each : [ 3 ] , $slice : -2 } } }','line_number':742,'multiline':False]
['text':'filter','line_number':744,'multiline':True]
['text':'filter','line_number':745,'multiline':True]
['text':' { $push : { a : { $each : [ 3 ] , $slice : 0 } } }','line_number':754,'multiline':False]
['text':'filter','line_number':756,'multiline':True]
['text':'filter','line_number':757,'multiline':True]
['text':' { $push : { a : { $each : [ 3 ] , $slice : 0 } } }','line_number':765,'multiline':False]
['text':'filter','line_number':767,'multiline':True]
['text':'filter','line_number':768,'multiline':True]
['text':' { $push : { a : { $each : [ 1 , 2 ] , $slice : -3 } } }','line_number':776,'multiline':False]
['text':'filter','line_number':778,'multiline':True]
['text':'filter','line_number':779,'multiline':True]
['text':' { $push : { a : { $each : [ 1 , 2 , 3 ] , $slice : -2 } } }','line_number':788,'multiline':False]
['text':'filter','line_number':790,'multiline':True]
['text':'filter','line_number':791,'multiline':True]
['text':' { $push : { a : { $each : [ 1 ] , $slice : -3 } } }','line_number':800,'multiline':False]
['text':'filter','line_number':802,'multiline':True]
['text':'filter','line_number':803,'multiline':True]
['text':' { $push : { a : { $each : [ 1 , 2 , 3 ] , $slice : -2 } } }','line_number':812,'multiline':False]
['text':'filter','line_number':814,'multiline':True]
['text':'filter','line_number':815,'multiline':True]
['text':' { $push: { a: { $each: [ 5 ] , $slice : -2 }, { b: $each: [ 6 ] , $slice: -1 } } }','line_number':824,'multiline':False]
['text':'filter','line_number':828,'multiline':True]
['text':'filter','line_number':829,'multiline':True]
['text':' { $push : { a : { $each : [ 5 ] , $slice : -2 } , { b : 4 } }','line_number':838,'multiline':False]
['text':'filter','line_number':840,'multiline':True]
['text':'filter','line_number':841,'multiline':True]
['text':' { $push: { a: { $each: [ 5 ] , $slice: -2 } , { a: $each: [ 6 ] , $slice: -1 } } }','line_number':850,'multiline':False]
['text':'filter','line_number':854,'multiline':True]
['text':'filter','line_number':855,'multiline':True]
['text':' { $push : { a : { $each : [ 5 ] , $slice : -2 } , { a : 4 } } }','line_number':864,'multiline':False]
['text':'filter','line_number':866,'multiline':True]
['text':'filter','line_number':867,'multiline':True]
['text':' { $push : { a : { $each : 3 , $slice : -2 } } }','line_number':876,'multiline':False]
['text':'filter','line_number':878,'multiline':True]
['text':'filter','line_number':880,'multiline':True]
['text':' { $push : { a : { $each : [ 3 ], $slice : [ -2 ] } } }','line_number':889,'multiline':False]
['text':'filter','line_number':891,'multiline':True]
['text':'filter','line_number':893,'multiline':True]
['text':' { $push : { a : { $each : [ 3 ], $slice : 2 } } }','line_number':902,'multiline':False]
['text':'filter','line_number':904,'multiline':True]
['text':'filter','line_number':906,'multiline':True]
['text':' { $push : { a : { $each : [ 3 ], $slice : -2.1 } } }','line_number':916,'multiline':False]
['text':'filter','line_number':918,'multiline':True]
['text':'filter','line_number':920,'multiline':True]
['text':' { $push : { a : { $each : [ 3 ], $slice : -2.0 } } }','line_number':929,'multiline':False]
['text':'filter','line_number':931,'multiline':True]
['text':'filter','line_number':932,'multiline':True]
['text':' { $push : { a : { $each : [ 3 ], $xxxx :  2 } } }','line_number':941,'multiline':False]
['text':'filter','line_number':943,'multiline':True]
['text':'filter','line_number':945,'multiline':True]
['text':'','line_number':950,'multiline':False]
['text':' We'd like to test the ability of $push with $sort in the following sequence of tests. We','line_number':951,'multiline':False]
['text':' try to enumerate all the possibilities of where the final element would come from: the','line_number':952,'multiline':False]
['text':' document, the $push itself, or both.','line_number':953,'multiline':False]
['text':'','line_number':954,'multiline':False]
['text':' Sorts ascending and slices the back of the array.','line_number':964,'multiline':False]
['text':' Sorts descending and slices the front of the array.','line_number':967,'multiline':False]
['text':' Sorts ascending and slices the back of the array.','line_number':970,'multiline':False]
['text':' Sorts descending and slices the front of the array.','line_number':973,'multiline':False]
['text':'*
     * Generates the update expression portion of an update command given one of the
     * possible types of update.
     ','line_number':995,'multiline':True]
['text':' Builds $each: [ {a:1,b:1,...}, {a:2,b:2,...}, ... ]','line_number':1004,'multiline':False]
['text':' Builds $slice portion.','line_number':1019,'multiline':False]
['text':' Builds $sort: <sort pattern> portion','line_number':1022,'multiline':False]
['text':'filter','line_number':1039,'multiline':True]
['text':'filter','line_number':1040,'multiline':True]
['text':' With the following parameters','line_number':1053,'multiline':False]
['text':'            fields in              values in','line_number':1054,'multiline':False]
['text':'          the each array           each array       field to sort   size','line_number':1055,'multiline':False]
['text':' Generates the four variations below (but for now we're only using negative slice).','line_number':1062,'multiline':False]
['text':' TOPK_ASC:     $push: { x: { $each: [ {a:2,b:2} ], $slice:-3, $sort: { b:1 } } }','line_number':1063,'multiline':False]
['text':' TOPK_DESC:    $push: { x: { $each: [ {a:2,b:2} ], $slice:-3, $sort: { b:-1 } } }','line_number':1064,'multiline':False]
['text':' BOTTOMK_ASC:  $push: { x: { $each: [ {a:2,b:2} ], $slice:3, $sort: { b:1 } } }','line_number':1065,'multiline':False]
['text':' BOTTOMK_DESC: $push: { x: { $each: [ {a:2,b:2} ], $slice:3, $sort: { b:-1 } } }','line_number':1066,'multiline':False]
['text':' i < 4 when we have positive $slice','line_number':1068,'multiline':False]
['text':'filter','line_number':1077,'multiline':True]
['text':'filter','line_number':1078,'multiline':True]
['text':'filter','line_number':1085,'multiline':True]
['text':'filter','line_number':1086,'multiline':True]
['text':' With the following parameters','line_number':1098,'multiline':False]
['text':'            fields in           values in','line_number':1099,'multiline':False]
['text':'          the each array        each array       field to sort   size','line_number':1100,'multiline':False]
['text':' Generates the four variations below (but for now we're only using negative slice).','line_number':1107,'multiline':False]
['text':' TOPK_ASC:     $push: { x: { $each: [ {a:2,b:2} ], $slice:-2, $sort: { b:1 } } }','line_number':1108,'multiline':False]
['text':' TOPK_DESC:    $push: { x: { $each: [ {a:2,b:2} ], $slice:-2, $sort: { b:-1 } } }','line_number':1109,'multiline':False]
['text':' BOTTOMK_ASC:  $push: { x: { $each: [ {a:2,b:2} ], $slice:2, $sort: { b:1 } } }','line_number':1110,'multiline':False]
['text':' BOTTOMK_DESC: $push: { x: { $each: [ {a:2,b:2} ], $slice:2, $sort: { b:-1 } } }','line_number':1111,'multiline':False]
['text':' i < 4 when we have positive $slice','line_number':1113,'multiline':False]
['text':'filter','line_number':1122,'multiline':True]
['text':'filter','line_number':1123,'multiline':True]
['text':'filter','line_number':1130,'multiline':True]
['text':'filter','line_number':1131,'multiline':True]
['text':' With the following parameters','line_number':1143,'multiline':False]
['text':'            fields in            values in','line_number':1144,'multiline':False]
['text':'          the each array         each array       field to sort   size','line_number':1145,'multiline':False]
['text':' Generates the four variations below (but for now we're only using negative slice).','line_number':1152,'multiline':False]
['text':' TOPK_ASC:     $push: { x: { $each: [ {a:2,b:2} ], $slice:-2, $sort: { b:1 } } }','line_number':1153,'multiline':False]
['text':' TOPK_DESC:    $push: { x: { $each: [ {a:2,b:2} ], $slice:-2, $sort: { b:-1 } } }','line_number':1154,'multiline':False]
['text':' BOTTOMK_ASC:  $push: { x: { $each: [ {a:2,b:2} ], $slice:2, $sort: { b:1 } } }','line_number':1155,'multiline':False]
['text':' BOTTOMK_DESC: $push: { x: { $each: [ {a:2,b:2} ], $slice:2, $sort: { b:-1 } } }','line_number':1156,'multiline':False]
['text':' i < 4 when we have positive $slice','line_number':1158,'multiline':False]
['text':'filter','line_number':1166,'multiline':True]
['text':'filter','line_number':1167,'multiline':True]
['text':'filter','line_number':1173,'multiline':True]
['text':'filter','line_number':1174,'multiline':True]
['text':' Implement me.','line_number':1181,'multiline':False]
['text':' With the following parameters','line_number':1191,'multiline':False]
['text':'            fields in           values in','line_number':1192,'multiline':False]
['text':'          the each array        each array      field to sort      size','line_number':1193,'multiline':False]
['text':' Generates the four variations below (but for now we're only using negative slice).','line_number':1200,'multiline':False]
['text':' TOPK_ASC:     $push: { x: { $each: [ {a:2,b:2} ], $slice:0, $sort: { b:1 } } }','line_number':1201,'multiline':False]
['text':' TOPK_DESC:    $push: { x: { $each: [ {a:2,b:2} ], $slice:0, $sort: { b:-1 } } }','line_number':1202,'multiline':False]
['text':' BOTTOMK_ASC:  $push: { x: { $each: [ {a:2,b:2} ], $slice:0, $sort: { b:1 } } }','line_number':1203,'multiline':False]
['text':' BOTTOMK_DESC: $push: { x: { $each: [ {a:2,b:2} ], $slice:0, $sort: { b:-1 } } }','line_number':1204,'multiline':False]
['text':' i < 4 when we have positive $slice','line_number':1206,'multiline':False]
['text':'filter','line_number':1213,'multiline':True]
['text':'filter','line_number':1214,'multiline':True]
['text':' With the following parameters','line_number':1224,'multiline':False]
['text':'            fields in           values in','line_number':1225,'multiline':False]
['text':'          the each array        each array      field to sort       size','line_number':1226,'multiline':False]
['text':' Generates the four variations below (but for now we're only using negative slice).','line_number':1233,'multiline':False]
['text':' TOPK_ASC:     $push: { x: { $each: [ {a:2,b:2} ], $slice:0, $sort: { b:1 } } }','line_number':1234,'multiline':False]
['text':' TOPK_DESC:    $push: { x: { $each: [ {a:2,b:2} ], $slice:0, $sort: { b:-1 } } }','line_number':1235,'multiline':False]
['text':' BOTTOMK_ASC:  $push: { x: { $each: [ {a:2,b:2} ], $slice:0, $sort: { b:1 } } }','line_number':1236,'multiline':False]
['text':' BOTTOMK_DESC: $push: { x: { $each: [ {a:2,b:2} ], $slice:0, $sort: { b:-1 } } }','line_number':1237,'multiline':False]
['text':' i < 4 when we have positive $slice','line_number':1239,'multiline':False]
['text':'filter','line_number':1246,'multiline':True]
['text':'filter','line_number':1247,'multiline':True]
['text':' With the following parameters','line_number':1257,'multiline':False]
['text':'            fields in           values in','line_number':1258,'multiline':False]
['text':'          the each array        each array            field to sort     size','line_number':1259,'multiline':False]
['text':' Generates the four variations below (but for now we're only using negative slice).','line_number':1266,'multiline':False]
['text':' <genarr> = [ {a:2,b:2}, {a:1,b:1} ]','line_number':1267,'multiline':False]
['text':' Generates the four variations below','line_number':1268,'multiline':False]
['text':' TOPK_ASC:     $push: { x: { $each: [ <genarray> ], $slice:-2, $sort: { b:1 } } }','line_number':1269,'multiline':False]
['text':' TOPK_DESC:    $push: { x: { $each: [ <genarray> ], $slice:-2, $sort: { b:-1 } } }','line_number':1270,'multiline':False]
['text':' BOTTOMK_ASC:  $push: { x: { $each: [ <genarray> ], $slice:2, $sort: { b:1 } } }','line_number':1271,'multiline':False]
['text':' BOTTOMK_DESC: $push: { x: { $each: [ <genarray> ], $slice:2, $sort: { b:-1 } } }','line_number':1272,'multiline':False]
['text':' i < 4 when we have positive $slice','line_number':1274,'multiline':False]
['text':'filter','line_number':1283,'multiline':True]
['text':'filter','line_number':1284,'multiline':True]
['text':'filter','line_number':1291,'multiline':True]
['text':'filter','line_number':1292,'multiline':True]
['text':' With the following parameters','line_number':1304,'multiline':False]
['text':'            fields in           values in','line_number':1305,'multiline':False]
['text':'          the each array        each array                field to sort     size','line_number':1306,'multiline':False]
['text':' Generates the four variations below (but for now we're only using negative slice).','line_number':1313,'multiline':False]
['text':' <genarr> = [ {a:2,b:2}, {a:1,b:1}, {a:3,b:3} ]','line_number':1314,'multiline':False]
['text':' TOPK_ASC:     $push: { x: { $each: [ <genarray> ], $slice:-2, $sort: { b:1 } } }','line_number':1315,'multiline':False]
['text':' TOPK_DESC:    $push: { x: { $each: [ <genarray> ], $slice:-2, $sort: { b:-1 } } }','line_number':1316,'multiline':False]
['text':' BOTTOMK_ASC:  $push: { x: { $each: [ <genarray> ], $slice:2, $sort: { b:1 } } }','line_number':1317,'multiline':False]
['text':' BOTTOMK_DESC: $push: { x: { $each: [ <genarray> ], $slice:2, $sort: { b:-1 } } }','line_number':1318,'multiline':False]
['text':' i < 4 when we have positive $slice','line_number':1320,'multiline':False]
['text':'filter','line_number':1328,'multiline':True]
['text':'filter','line_number':1329,'multiline':True]
['text':'filter','line_number':1335,'multiline':True]
['text':'filter','line_number':1336,'multiline':True]
['text':' Implement me.','line_number':1343,'multiline':False]
['text':' With the following parameters','line_number':1353,'multiline':False]
['text':'            fields in           values in','line_number':1354,'multiline':False]
['text':'          the each array        each array            field to sort     size','line_number':1355,'multiline':False]
['text':' Generates the four variations below (but for now we're only using negative slice).','line_number':1362,'multiline':False]
['text':' <genarr> = [ {a:2,b:2}, {a:1,b:1} ]','line_number':1363,'multiline':False]
['text':' TOPK_ASC:     $push: { x: { $each: [ <genarray> ], $slice:-2, $sort: { b:1 } } }','line_number':1364,'multiline':False]
['text':' TOPK_DESC:    $push: { x: { $each: [ <genarray> ], $slice:-2, $sort: { b:-1 } } }','line_number':1365,'multiline':False]
['text':' BOTTOMK_ASC:  $push: { x: { $each: [ <genarray> ], $slice:2, $sort: { b:1 } } }','line_number':1366,'multiline':False]
['text':' BOTTOMK_DESC: $push: { x: { $each: [ <genarray> ], $slice:2, $sort: { b:-1 } } }','line_number':1367,'multiline':False]
['text':' i < 4 when we have positive $slice','line_number':1369,'multiline':False]
['text':'filter','line_number':1378,'multiline':True]
['text':'filter','line_number':1379,'multiline':True]
['text':'filter','line_number':1386,'multiline':True]
['text':'filter','line_number':1387,'multiline':True]
['text':' With the following parameters','line_number':1399,'multiline':False]
['text':'            fields in           values in','line_number':1400,'multiline':False]
['text':'          the each array        each array                 field to sort   size','line_number':1401,'multiline':False]
['text':' Generates the four variations below (but for now we're only using negative slice).','line_number':1408,'multiline':False]
['text':' <genarr> = [ {a:2,b:2}, {a:1,b:1}, {a:3,b:3} ]','line_number':1409,'multiline':False]
['text':' TOPK_ASC:     $push: { x: { $each: [ <genarray> ], $slice:-2, $sort: { b:1 } } }','line_number':1410,'multiline':False]
['text':' TOPK_DESC:    $push: { x: { $each: [ <genarray> ], $slice:-2, $sort: { b:-1 } } }','line_number':1411,'multiline':False]
['text':' BOTTOMK_ASC:  $push: { x: { $each: [ <genarray> ], $slice:2, $sort: { b:1 } } }','line_number':1412,'multiline':False]
['text':' BOTTOMK_DESC: $push: { x: { $each: [ <genarray> ], $slice:2, $sort: { b:-1 } } }','line_number':1413,'multiline':False]
['text':' i < 4 when we have positive $slice','line_number':1415,'multiline':False]
['text':'filter','line_number':1423,'multiline':True]
['text':'filter','line_number':1424,'multiline':True]
['text':'filter','line_number':1430,'multiline':True]
['text':'filter','line_number':1431,'multiline':True]
['text':' Implement me.','line_number':1438,'multiline':False]
['text':'*
 * Comparator between two BSONObjects that takes in consideration only the keys and
 * direction described in the sort pattern.
 *
 * TODO: This was pulled from update_internal.h, we should verify that these tests work
 * with the new update framework $push sorter.
 ','line_number':1447,'multiline':True]
['text':' namespace','line_number':1466,'multiline':False]
['text':' Sort pattern validation is made during update command checking. Therefore, to','line_number':1582,'multiline':False]
['text':' catch bad patterns, we have to write updated that use them.','line_number':1583,'multiline':False]
['text':' { $push : { x : { $each : [ {a:3} ], $slice:-2, $sort : {a..d:1} } } }','line_number':1588,'multiline':False]
['text':'filter','line_number':1591,'multiline':True]
['text':'filter','line_number':1592,'multiline':True]
['text':' { $push : { x : { $each : [ {a:3} ], $slice:-2, $sort : {a.:1} } } }','line_number':1596,'multiline':False]
['text':'filter','line_number':1599,'multiline':True]
['text':'filter','line_number':1600,'multiline':True]
['text':' { $push : { x : { $each : [ {a:3} ], $slice:-2, $sort : {.b:1} } } }','line_number':1603,'multiline':False]
['text':'filter','line_number':1606,'multiline':True]
['text':'filter','line_number':1607,'multiline':True]
['text':' { $push : { x : { $each : [ {a:3} ], $slice:-2, $sort : {.:1} } } }','line_number':1610,'multiline':False]
['text':'filter','line_number':1613,'multiline':True]
['text':'filter','line_number':1614,'multiline':True]
['text':' { $push : { x : { $each : [ {a:3} ], $slice:-2, $sort : {'':1} } } }','line_number':1617,'multiline':False]
['text':'filter','line_number':1620,'multiline':True]
['text':'filter','line_number':1621,'multiline':True]
['text':' { $push : { x : { $each : [ 3 ], $slice:-2, $sort : {a:1} } } }','line_number':1631,'multiline':False]
['text':'filter','line_number':1634,'multiline':True]
['text':'filter','line_number':1635,'multiline':True]
['text':' { $push : { x : { $each : [ {a:3} ], $slice:-2, $sort : 2} } }','line_number':1645,'multiline':False]
['text':'filter','line_number':1648,'multiline':True]
['text':'filter','line_number':1649,'multiline':True]
['text':' { $push : { x : { $each : [ {a:3} ], $slice:2, $sort : {a:1} } } }','line_number':1659,'multiline':False]
['text':'filter','line_number':1662,'multiline':True]
['text':'filter','line_number':1663,'multiline':True]
['text':' { $push : { x : { $each : [ {a:3} ], $slice:-2.1, $sort : {a:1} } } }','line_number':1673,'multiline':False]
['text':'filter','line_number':1676,'multiline':True]
['text':'filter','line_number':1677,'multiline':True]
['text':' { $push : { x : { $each : [ {a:3} ], $slice:-2.0, $sort : {a:1} } } }','line_number':1686,'multiline':False]
['text':'filter','line_number':1689,'multiline':True]
['text':'filter','line_number':1691,'multiline':True]
['text':' { $push : { x : { $each : [ {a:3} ], $slice:-2.0, $sort : [2, 1] } } }','line_number':1701,'multiline':False]
['text':'filter','line_number':1704,'multiline':True]
['text':'filter','line_number':1705,'multiline':True]
['text':' { $push : { x : { $each : [ {a:3} ], $slice:-2, $sort : {a:10} } } }','line_number':1715,'multiline':False]
['text':'filter','line_number':1718,'multiline':True]
['text':'filter','line_number':1719,'multiline':True]
['text':' { $push : { x : { $each : [ {a:2} ], $sort: {a:1}, $slice:-2 } } }','line_number':1728,'multiline':False]
['text':'filter','line_number':1731,'multiline':True]
['text':'filter','line_number':1733,'multiline':True]
['text':' { $push : { x : { $each : [ {a:2} ], $sort : {a:1}, $sort: {a:1} } } }','line_number':1743,'multiline':False]
['text':'filter','line_number':1746,'multiline':True]
['text':'filter','line_number':1747,'multiline':True]
['text':'filter','line_number':1756,'multiline':True]
['text':'filter','line_number':1758,'multiline':True]
['text':'filter','line_number':1767,'multiline':True]
['text':'filter','line_number':1768,'multiline':True]
['text':'filter','line_number':1777,'multiline':True]
['text':'filter','line_number':1778,'multiline':True]
['text':'filter','line_number':1788,'multiline':True]
['text':'filter','line_number':1790,'multiline':True]
['text':' make sure the index works','line_number':1793,'multiline':False]
['text':' Not using $set, but base class is still useful','line_number':1797,'multiline':False]
['text':'* SERVER-4777 ','line_number':1827,'multiline':True]
['text':'filter','line_number':1837,'multiline':True]
['text':'* SERVER-4777 ','line_number':1841,'multiline':True]
['text':'filter','line_number':1851,'multiline':True]
['text':'filter','line_number':1861,'multiline':True]
['text':'filter','line_number':1886,'multiline':True]
['text':' SERVER-2005','line_number':2026,'multiline':False]
['text':' namespace basic','line_number':2075,'multiline':False]
['text':' namespace UpdateTests','line_number':2200,'multiline':False]
