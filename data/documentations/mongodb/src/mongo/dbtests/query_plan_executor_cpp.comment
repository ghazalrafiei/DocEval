['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':' IWYU pragma: no_include "boost/intrusive/detail/iterator.hpp"','line_number':37,'multiline':False]
['text':' IWYU pragma: keep','line_number':78,'multiline':False]
['text':'*
     * Given a match expression, represented as the BSON object 'filterObj', create a PlanExecutor
     * capable of executing a simple collection scan.
     ','line_number':122,'multiline':True]
['text':' Canonicalize the query.','line_number':135,'multiline':False]
['text':' Make the stage.','line_number':143,'multiline':False]
['text':' Hand the plan off to the executor.','line_number':147,'multiline':False]
['text':'*
     * @param indexSpec -- a BSONObj giving the index over which to
     *   scan, e.g. {_id: 1}.
     * @param start -- the lower bound (inclusive) at which to start
     *   the index scan
     * @param end -- the lower bound (inclusive) at which to end the
     *   index scan
     *
     * Returns a PlanExecutor capable of executing an index scan
     * over the specified index with the specified bounds.
     ','line_number':158,'multiline':True]
['text':' Build the index scan stage.','line_number':171,'multiline':False]
['text':' Hand the plan off to the executor.','line_number':189,'multiline':False]
['text':'*
 * Test dropping the collection while an agg PlanExecutor is doing an index scan.
 ','line_number':222,'multiline':True]
['text':' Create the aggregation pipeline.','line_number':236,'multiline':False]
['text':' Create an "inner" plan executor and register it with the cursor manager so that it can','line_number':239,'multiline':False]
['text':' get notified when the collection is dropped.','line_number':240,'multiline':False]
['text':' Wrap the "inner" plan executor in a DocumentSourceCursor and add it as the first source','line_number':244,'multiline':False]
['text':' in the pipeline.','line_number':245,'multiline':False]
['text':' Verify that the aggregation pipeline returns an error because its "inner" plan executor','line_number':256,'multiline':False]
['text':' has been killed due to the collection being dropped.','line_number':257,'multiline':False]
['text':'*
     * Increases a document's size dramatically such that the document
     * exceeds the available padding and must be moved to the end of
     * the collection.
     ','line_number':348,'multiline':True]
['text':'*
     * Given an array of ints, 'expectedIds', and a PlanExecutor,
     * 'exec', uses the executor to iterate through the collection. While
     * iterating, asserts that the _id of each successive document equals
     * the respective integer in 'expectedIds'.
     ','line_number':363,'multiline':True]
['text':'*
 * Create a scenario in which the same document is returned
 * twice due to a concurrent document move and collection
 * scan.
 ','line_number':382,'multiline':True]
['text':'*
 * A snapshot is really just a hint that means scan the _id index.
 * Make sure that we do not see the document move with an _id
 * index scan.
 ','line_number':406,'multiline':True]
['text':' Since this time we're scanning the _id index,','line_number':427,'multiline':False]
['text':' we should not see the moved document again.','line_number':428,'multiline':False]
['text':' namespace','line_number':433,'multiline':False]
['text':' namespace mongo','line_number':434,'multiline':False]
