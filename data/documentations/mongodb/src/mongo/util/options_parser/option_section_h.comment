['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':'*
 *  A container for OptionDescription instances as well as other OptionSection instances.
 *  Provides a description of all options that are supported to be passed in to an
 *  OptionsParser.  Has utility functions to support the various formats needed by the parsing
 *  process.
 *
 *  The sections and section names only matter in the help string.  For sections in a JSON
 *  config, look at the dots in the dottedName of the relevant OptionDescription
 ','line_number':43,'multiline':True]
['text':'*
     * This API is not meant to be called directly by hand-written code.
     * See: docs/idl/configs.md
     ','line_number':57,'multiline':True]
['text':' Construction interface','line_number':63,'multiline':False]
['text':'*
     * Add a sub section to this section.  Used mainly to keep track of section headers for when
     * we need generate the help std::string for the command line.
     *
     * Note that while the structure of this class allows for a nested hierarchy of sections,
     * our actual use-case enforces a maximum depth of 2.
     * The base node plus one level of subsections.
     * This means that subsections being added must not contain subsections of their own.
     ','line_number':65,'multiline':True]
['text':'*
     * Add an option to this section, and returns a reference to an OptionDescription to allow
     * for chaining. This API is normally called by generated code ONLY.
     *
     * The only two exceptions are UnitTest code testing this API,
     * and two groups of complex options in addBaseServerOptions().
     *
     * ALL OTHERS must create config options via IDL definiotns.
     ','line_number':76,'multiline':True]
['text':' These functions are used by the OptionsParser to make calls into boost::program_options','line_number':98,'multiline':False]
['text':' This is needed so that the parser can iterate over all registered options to get the','line_number':107,'multiline':False]
['text':' correct names when populating the Environment, as well as check that a parameter that was','line_number':108,'multiline':False]
['text':' found has been registered and has the correct type','line_number':109,'multiline':False]
['text':' Count the number of options in this section and all subsections','line_number':112,'multiline':False]
['text':'*
     * Returns the number of subsections which have been added to this OptionSection.
     ','line_number':115,'multiline':True]
['text':'*
     * Populates the given map with all the default values for any options in this option
     * section and all sub sections.
     ','line_number':120,'multiline':True]
['text':'*
     * Populates the given vector with all the constraints for all options in this section and
     * sub sections.
     ','line_number':126,'multiline':True]
['text':' Debugging','line_number':135,'multiline':False]
['text':'*
     * Internal accumulator of all dotted names (incl. deprecated) in _options and all _subSections.
     * Used for ensuring duplicate entries don't find their way into different parts of the tree.
     ','line_number':143,'multiline':True]
['text':'*
     * Internal accumulator for all single names. See _allDottedNames for further info.
     ','line_number':149,'multiline':True]
['text':' namespace optionenvironment','line_number':155,'multiline':False]
['text':' namespace mongo','line_number':156,'multiline':False]
