['text':'*
 *    Copyright (C) 2022-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':'*
 * SigHelper is a family of types helpful for deducing the type signature of the callable wrapped by
 * a PackagedTask.
 ','line_number':42,'multiline':True]
['text':' Function Type','line_number':48,'multiline':False]
['text':' Member Function Pointers','line_number':51,'multiline':False]
['text':' namespace packaged_task_detail','line_number':71,'multiline':False]
['text':'*
 * A PackagedTask wraps anything Callable, but packages the return value of the Callable in a Future
 * that can be accessed before the Callable is run. Construct a PackagedTask by giving it a
 * Callable. Once the PackagedTask is constructed, you can extract a Future that will contain the
 * result of running the packaged task. The PackagedTask can be invoked as if it was the Callable
 * that it wraps.
 ','line_number':73,'multiline':True]
['text':'*
     * Invokes the Callable wrapped by this PackagedTask. This can only be called once, as a
     * PackagedTask produces at most one result obtained from running the wrapped Callable at most
     * one time. It is invalid to call this more than once.
     ','line_number':94,'multiline':True]
['text':'*
     * Returns a Future that represents the (possibly-deferred) result of the wrapped task. Because
     * running the task will produce exactly one result, it is safe to call getFuture() at most once
     * on any PackagedTask; subsequent calls will throw a DBException set with
     * ErrorCodes::FutureAlreadyRetrieved.
     ','line_number':103,'multiline':True]
['text':' namespace mongo','line_number':130,'multiline':False]
