['text':'*
 *    Copyright (C) 2023-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':' The lowest 5 bits of 'str[len - 1]' and the lowest 2 bits of 'len' are decent sources','line_number':60,'multiline':False]
['text':' of entropy. Combine them to generate a pseudo-random number 'h' where 0 <= h <= 127.','line_number':61,'multiline':False]
['text':' The lowest 5 bits of 'str[0]' are a decent source of entropy. Using 'str[0]' and','line_number':70,'multiline':False]
['text':' 'fastHash1', generate a pseudo-random number 'h' where 0 <= h <= 127 and where','line_number':71,'multiline':False]
['text':' h != fastHash1.','line_number':72,'multiline':False]
['text':' This 'for' loop will iterate at most two times. There is logic near the end of','line_number':146,'multiline':False]
['text':' the loop body that breaks out of the loop once 'numAttempts' reaches 2.','line_number':147,'multiline':False]
['text':' If encodedIdx >= 2, then there is a single string in _strings to compare','line_number':152,'multiline':False]
['text':' with. Compare 'str' with this single string.','line_number':153,'multiline':False]
['text':' If encodedIdx == 0, then we know 'str' is not present in _strings.','line_number':161,'multiline':False]
['text':' If this was our second attempt, we give up and search for 'str' in','line_number':168,'multiline':False]
['text':' 'stringToIndexMap'. We break out of the loop early to avoid calling','line_number':169,'multiline':False]
['text':' computeFastHash2() again.','line_number':170,'multiline':False]
['text':' If this was our first attempt, try again using computeFastHash2().','line_number':174,'multiline':False]
['text':' If there are more than 64 strings in '_strings', don't bother with '_fastHt'.','line_number':204,'multiline':False]
['text':' namespace mongo','line_number':216,'multiline':False]
