['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':'*
 * A hex blob is a data interchange format, not meant to be
 * convenient to read. The functions in the hexblob namespace are
 * specifically to support it, rather than to serve more general
 * hexadecimal encoding for diagnostics.
 *
 * A hex blob is a packed run of hex digit pairs with no punctuation
 * or breaks between the encoded bytes. Upper case is produced by
 * encoders, but upper or lower case digits are accepted by the
 * decoders.
 ','line_number':42,'multiline':True]
['text':'*
 * Decodes hex digit `c` (upper or lower case).
 * Throws `FailedToParse` on failure.
 ','line_number':55,'multiline':True]
['text':'*
 * Decodes hex digit pair `c` (upper or lower case).
 * Throws `FailedToParse` on failure.
 ','line_number':61,'multiline':True]
['text':'*
 * Returns true if `s` is a valid encoded hex blob.
 ','line_number':67,'multiline':True]
['text':'*
 * Returns `data` rendered as a concatenation of uppercase hex digit pairs,
 * with no separation between bytes.
 ','line_number':72,'multiline':True]
['text':'* Raw memory `encode` ','line_number':78,'multiline':True]
['text':'* Same as `encode`, but with lowercase hex digits. ','line_number':83,'multiline':True]
['text':'* Raw memory `encodeLower` ','line_number':86,'multiline':True]
['text':'*
 * Decodes hex blob `s`, appending its decoded bytes to `buf`.
 * Throws `FailedToParse` if `s` is not a valid hex blob encoding.
 ','line_number':91,'multiline':True]
['text':'* Overload that returns the decoded hex blob as a `std::string`. ','line_number':97,'multiline':True]
['text':' namespace hexblob','line_number':100,'multiline':False]
['text':'*
 * Returns a dump of the buffer as lower case hex digit pairs separated by spaces.
 * Requires `len < kHexDumpMaxSize`.
 ','line_number':104,'multiline':True]
['text':'* Raw memory `hexdump`. ','line_number':110,'multiline':True]
['text':'* Render `val` in upper case hex, zero-padded to its full width. ','line_number':115,'multiline':True]
['text':'* Render the unsigned equivalent of `val` in upper case hex. ','line_number':121,'multiline':True]
['text':'*
 * Wraps a buffer of known size so its hex dump can be written to a stream without dynamic
 * allocation.
 ','line_number':127,'multiline':True]
['text':' namespace mongo','line_number':152,'multiline':False]
