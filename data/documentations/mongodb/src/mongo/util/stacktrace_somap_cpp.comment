['text':'*
 *    Copyright (C) 2019-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':' IWYU pragma: keep','line_number':57,'multiline':False]
['text':' Given `#define A aaa` and `#define B bbb`, `TOKEN_CAT(A, B)` evaluates to `aaabbb`.','line_number':66,'multiline':False]
['text':' determine ARCH_BITS','line_number':87,'multiline':False]
['text':' determine ARCH_BITS','line_number':95,'multiline':False]
['text':'*
 * Processes an ELF Phdr for a NOTE segment, updating "soInfo".
 *
 * Looks for the GNU Build ID NOTE, and adds a buildId field to soInfo if it finds one.
 ','line_number':99,'multiline':True]
['text':' Returns the size in bytes of an ELF note entry with the given header.','line_number':108,'multiline':False]
['text':'*
 * Processes an ELF Phdr for a LOAD segment, updating "soInfo".
 *
 * The goal of this operation is to find out if the current object is an executable or a shared
 * object, by looking for the LOAD segment that maps the first several bytes of the file (the
 * ELF header).  If it's an executable, this method updates soInfo with the load address of the
 * segment
 ','line_number':134,'multiline':True]
['text':' Segment includes beginning of file and is large enough to hold the ELF header','line_number':150,'multiline':False]
['text':'*
 * Callback that processes an ELF object linked into the current address space.
 *
 * Used by dl_iterate_phdr in ExtractSOMap, below, to build up the list of linked
 * objects.
 *
 * Each entry built by an invocation of ths function may have the following fields:
 * * "b", the base address at which an object is loaded.
 * * "path", the path on the file system to the object.
 * * "buildId", the GNU Build ID of the object.
 * * "elfType", the ELF type of the object, typically 2 or 3 (executable or SO).
 *
 * At post-processing time, the buildId field can be used to identify the file containing
 * debug symbols for objects loaded at the given "laodAddr", which in turn can be used with
 * the "backtrace" displayed in printStackTrace to get detailed unwind information.
 ','line_number':208,'multiline':True]
['text':' skip non-readable segments','line_number':234,'multiline':False]
['text':' Search the "load command" data in the Mach object for the entry encoding the UUID of the','line_number':296,'multiline':False]
['text':' object, and for the __TEXT segment. Adding the "vmaddr" field of the __TEXT segment load','line_number':297,'multiline':False]
['text':' command of an executable or dylib to an offset in that library provides an address','line_number':298,'multiline':False]
['text':' suitable to passing to atos or llvm-symbolizer for symbolization.','line_number':299,'multiline':False]
['text':'','line_number':300,'multiline':False]
['text':' See, for example, http://lldb.llvm.org/symbolication.html.','line_number':301,'multiline':False]
['text':' unknown OS','line_number':328,'multiline':False]
['text':' unknown OS','line_number':332,'multiline':False]
['text':'*
 * Used to build the "processInfo" field of the stacktrace JSON object. It's loaded with
 * information about a running process, including the map from load addresses to shared
 * objects loaded at those addresses.
 ','line_number':334,'multiline':True]
['text':' Call buildObj() again now that there is better VersionInfo.','line_number':355,'multiline':False]
['text':' namespace','line_number':364,'multiline':False]
['text':' This file internally has a non-const object, but only exposes a const reference','line_number':377,'multiline':False]
['text':' to it to the public API. We do this to support stacktraces that might occur','line_number':378,'multiline':False]
['text':' before the "ExtractSOMap" MONGO_INITIALIZER above.','line_number':379,'multiline':False]
['text':' namespace mongo','line_number':383,'multiline':False]
