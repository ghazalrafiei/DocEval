['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':'*
 * Allows waiting for a result returned from an asynchronous operation.
 ','line_number':44,'multiline':True]
['text':'*
     * Creates a notification object, which has already been set. Calls to any of the getters will
     * return immediately.
     ','line_number':52,'multiline':True]
['text':'*
     * Returns true if the notification has been set (i.e., the call to get/waitFor would not
     * block).
     ','line_number':58,'multiline':True]
['text':'*
     * If the notification has been set, returns immediately. Otherwise blocks until it becomes set.
     * If the wait is interrupted, throws an exception.
     ','line_number':67,'multiline':True]
['text':'*
     * If the notification has been set, returns immediately. Otherwise blocks until it becomes set.
     * This variant of get cannot be interrupted.
     ','line_number':77,'multiline':True]
['text':'*
     * Sets the notification result and wakes up any threads, which might be blocked in the wait
     * call. Must only be called once for the lifetime of the notification.
     ','line_number':90,'multiline':True]
['text':'*
     * If the notification is set, returns immediately. Otherwise, blocks until it either becomes
     * set or the waitTimeout expires, whichever comes first. Returns true if the notification is
     * set (in which case a subsequent call to get is guaranteed to not block) or false otherwise.
     * If the wait is interrupted, throws an exception.
     ','line_number':101,'multiline':True]
['text':' Protected by mutex and only moves from not-set to set once','line_number':118,'multiline':False]
['text':' namespace mongo','line_number':149,'multiline':False]
