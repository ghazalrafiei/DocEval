['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':'*
 * An interface for getting the current wall clock time.
 ','line_number':47,'multiline':True]
['text':' We need a type trait to differentiate waitable ptr args from predicates.','line_number':51,'multiline':False]
['text':'','line_number':52,'multiline':False]
['text':' This returns true for non-pointers and function pointers','line_number':53,'multiline':False]
['text':'*
     * A StopWatch tracks the time that its ClockSource believes has passed since the creation of
     * the StopWatch or since 'restart' has been invoked.
     *
     * For microsecond accurate metrics, use a Timer instead.
     ','line_number':64,'multiline':True]
['text':'* SystemClockSource::get() ','line_number':75,'multiline':True]
['text':'*
     * Returns the minimum time change that the clock can describe.
     ','line_number':104,'multiline':True]
['text':'*
     * Returns the current wall clock time, as defined by this source.
     ','line_number':109,'multiline':True]
['text':'*
     * Schedules `action` to run sometime after this clock source reaches `when`.
     *
     * Throws `InternalError` if this clock source does not implement `setAlarm`. May also throw
     * other errors.
     ','line_number':114,'multiline':True]
['text':'*
     * Returns true if this clock source (loosely) tracks the OS clock used for things
     * like condition_variable::wait_until. Virtualized clocks used for testing return
     * false here, and should provide an implementation for setAlarm, above.
     ','line_number':124,'multiline':True]
['text':'*
     * Like cv.wait_until(m, deadline), but uses this ClockSource instead of
     * stdx::chrono::system_clock to measure the passage of time.
     *
     * Note that this can suffer spurious wakeups like cw.wait_until() and, when used with a mocked
     * clock source, may sleep in system time for kMaxTimeoutForArtificialClocks due to unfortunate
     * implementation details.
     ','line_number':133,'multiline':True]
['text':'*
     * Like cv.wait_until(m, deadline, pred), but uses this ClockSource instead of
     * stdx::chrono::system_clock to measure the passage of time.
     ','line_number':146,'multiline':True]
['text':'*
     * Like cv.wait_for(m, duration, pred), but uses this ClockSource instead of
     * stdx::chrono::system_clock to measure the passage of time.
     ','line_number':166,'multiline':True]
['text':'*
     * Return a StopWatch that uses this ClockSource to track time
     ','line_number':182,'multiline':True]
['text':' namespace mongo','line_number':193,'multiline':False]
