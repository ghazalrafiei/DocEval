['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':'','line_number':93,'multiline':False]
['text':' comparison support','line_number':94,'multiline':False]
['text':'','line_number':95,'multiline':False]
['text':' EOO is not equivalent to anything else.','line_number':102,'multiline':False]
['text':' If the types of either side are mixed, we'll try to find the shortest type we','line_number':107,'multiline':False]
['text':' can upconvert to that would not sacrifice the accuracy in the process.','line_number':108,'multiline':False]
['text':' If one side is a decimal, compare both sides as decimals.','line_number':110,'multiline':False]
['text':' Note: isEqual is faster than using compareDecimals, however it does not handle','line_number':112,'multiline':False]
['text':' comparing NaN as equal (differing from BSONElement::woCompare).  This case','line_number':113,'multiline':False]
['text':' is not handled for double comparison above eihter.','line_number':114,'multiline':False]
['text':' If none of the sides is a double, compare them as long's.','line_number':118,'multiline':False]
['text':' If both sides are doubles, compare them as so.','line_number':123,'multiline':False]
['text':' If we're mixing integers and doubles, we should be careful. Some integers are','line_number':128,'multiline':False]
['text':' too big to be accuratelly represented in a double. If we're within a safe range','line_number':129,'multiline':False]
['text':' we compare both sides as doubles.','line_number':130,'multiline':False]
['text':' EOO doesn't match anything, including itself.','line_number':156,'multiline':False]
['text':' NOTE: Please see "Secure Coding in C and C++", Second Edition, page 264-265 for','line_number':225,'multiline':False]
['text':' details on this algorithm (for an alternative resources, see','line_number':226,'multiline':False]
['text':'','line_number':227,'multiline':False]
['text':' https://www.securecoding.cert.org/confluence/display/seccode/','line_number':228,'multiline':False]
['text':' INT32-C.+Ensure+that+operations+on+signed+integers+do+not+result+in+overflow?','line_number':229,'multiline':False]
['text':' showComments=false).','line_number':230,'multiline':False]
['text':'','line_number':231,'multiline':False]
['text':' We are using the "Downcast from a larger type" algorithm here. We always perform','line_number':232,'multiline':False]
['text':' the arithmetic in 64-bit mode, which can never overflow for 32-bit','line_number':233,'multiline':False]
['text':' integers. Then, if we fall within the allowable range of int32_t, we downcast,','line_number':234,'multiline':False]
['text':' otherwise, we retain the 64-bit result.','line_number':235,'multiline':False]
['text':' NOTE: Please see notes in addInt32Int32 above for references. In this case, since we','line_number':247,'multiline':False]
['text':' have no larger integer size, if our precondition test detects overflow we must','line_number':248,'multiline':False]
['text':' return an invalid SafeNum. Otherwise, the operation is safely performed by standard','line_number':249,'multiline':False]
['text':' arithmetic.','line_number':250,'multiline':False]
['text':' NOTE: Please see "Secure Coding in C and C++", Second Edition, page 264-265 for','line_number':269,'multiline':False]
['text':' details on this algorithm (for an alternative resources, see','line_number':270,'multiline':False]
['text':'','line_number':271,'multiline':False]
['text':' https://www.securecoding.cert.org/confluence/display/seccode/','line_number':272,'multiline':False]
['text':' INT32-C.+Ensure+that+operations+on+signed+integers+do+not+result+in+overflow?','line_number':273,'multiline':False]
['text':' showComments=false).','line_number':274,'multiline':False]
['text':'','line_number':275,'multiline':False]
['text':' We are using the "Downcast from a larger type" algorithm here. We always perform','line_number':276,'multiline':False]
['text':' the arithmetic in 64-bit mode, which can never overflow for 32-bit','line_number':277,'multiline':False]
['text':' integers. Then, if we fall within the allowable range of int32_t, we downcast,','line_number':278,'multiline':False]
['text':' otherwise, we retain the 64-bit result.','line_number':279,'multiline':False]
['text':' NOTE: Please see notes in mulInt32Int32 above for references. In this case,','line_number':291,'multiline':False]
['text':' since we have no larger integer size, if our precondition test detects overflow','line_number':292,'multiline':False]
['text':' we must return an invalid SafeNum. Otherwise, the operation is safely performed','line_number':293,'multiline':False]
['text':' by standard arithmetic.','line_number':294,'multiline':False]
['text':' namespace','line_number':331,'multiline':False]
['text':' namespace mongo','line_number':466,'multiline':False]
