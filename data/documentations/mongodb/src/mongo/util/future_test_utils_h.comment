['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':'* Workaround for bug in MSVC 2022's lambda processor. See SERVER-62480. ','line_number':39,'multiline':True]
['text':' Force exemptions to say *why* they shouldn't test ExecutorFuture to ensure that if the','line_number':49,'multiline':False]
['text':' reason stops applying (eg, if we implement ExecutorFuture::tap()) we can delete the enum','line_number':50,'multiline':False]
['text':' value and recover the test coverage.','line_number':51,'multiline':False]
['text':' Must be implemented because it's called by Interruptible::waitForConditionOrInterrupt.','line_number':66,'multiline':False]
['text':' TSAN and rr work better without this sleep, but it is useful for testing correctness.','line_number':93,'multiline':False]
['text':' Try to wait until after the Future has been handled.','line_number':96,'multiline':False]
['text':' Tests a Future completed by completionExpr using testFunc. The Future will be completed in','line_number':127,'multiline':False]
['text':' various ways to maximize test coverage.','line_number':128,'multiline':False]
['text':' immediate future','line_number':135,'multiline':False]
['text':' ready future from promise','line_number':138,'multiline':False]
['text':' async future','line_number':144,'multiline':False]
['text':' immediate executor future','line_number':148,'multiline':False]
['text':' immediate future','line_number':161,'multiline':False]
['text':' ready future from promise','line_number':165,'multiline':False]
['text':' async future','line_number':172,'multiline':False]
['text':' immediate executor future','line_number':176,'multiline':False]
['text':' immediate future','line_number':187,'multiline':False]
['text':' ready future from promise','line_number':190,'multiline':False]
['text':' async future','line_number':196,'multiline':False]
['text':' immediate executor future','line_number':202,'multiline':False]
['text':'*
 * True if PromiseT::setFrom(ArgT) is valid.
 ','line_number':208,'multiline':True]
['text':'','line_number':215,'multiline':False]
['text':'','line_number':216,'multiline':False]
['text':'','line_number':221,'multiline':False]
['text':'','line_number':222,'multiline':False]
['text':' namespace mongo','line_number':225,'multiline':False]
