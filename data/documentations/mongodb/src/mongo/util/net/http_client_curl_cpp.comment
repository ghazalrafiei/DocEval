['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':'*
 * Curl Protocol configuration supported by HttpClient
 ','line_number':75,'multiline':True]
['text':' Allow either http or https, unsafe','line_number':79,'multiline':False]
['text':' Allow https only','line_number':82,'multiline':False]
['text':' Connection pool talk in terms of Mongo's SSL configuration.','line_number':86,'multiline':False]
['text':' These functions provide a way to map back and forth between them.','line_number':87,'multiline':False]
['text':' No copying and no moving because we give libcurl the address of our members.','line_number':98,'multiline':False]
['text':' In practice, we'll never want to copy/move this instance anyway,','line_number':99,'multiline':False]
['text':' but if that ever changes, we can write trivial implementations to deal with it.','line_number':100,'multiline':False]
['text':' Ordering matters: curl_global_cleanup() must happen last.','line_number':108,'multiline':False]
['text':'*
 * Receives data from the remote side.
 ','line_number':143,'multiline':True]
['text':' Cause curl to generate a CURLE_WRITE_ERROR by returning a different number than how much','line_number':153,'multiline':False]
['text':' data there was to write.','line_number':154,'multiline':False]
['text':'*
 * Sends data to the remote side
 ','line_number':161,'multiline':True]
['text':'*
 * Seek into for data to the remote side
 ','line_number':181,'multiline':True]
['text':' Curl will call this in readrewind but only to reset the stream to the beginning','line_number':186,'multiline':False]
['text':' In other protocols (like FTP, SSH) or HTTP resumption they may ask for partial buffers which','line_number':187,'multiline':False]
['text':' we do not support.','line_number':188,'multiline':False]
['text':' Requires >= 7.34.0','line_number':279,'multiline':False]
['text':' TODO: CURLOPT_EXPECT_100_TIMEOUT_MS?','line_number':293,'multiline':False]
['text':'
 * This implements the timer interface for the ConnectionPool.
 * Timers will be expired in order on a single background thread.
 ','line_number':310,'multiline':True]
['text':'*
 * Type factory that manages the curl connection pool
 ','line_number':356,'multiline':True]
['text':'*
 * Curl handle that is managed by a connection pool
 *
 * The connection pool does not manage actual connections, just handles. Curl has automatica
 * reconnect logic if it gets disconnected. Also, HTTP connections are cheaper then MongoDB.
 ','line_number':425,'multiline':True]
['text':' This cannot block under any circumstances because the ConnectionPool is holding','line_number':454,'multiline':False]
['text':' a mutex while calling isHealthy(). Since we don't have a good way of knowing whether','line_number':455,'multiline':False]
['text':' the connection is healthy, just return true here.','line_number':456,'multiline':False]
['text':' Tell the connection pool that it was a success. Curl reconnects seamlessly behind the','line_number':518,'multiline':False]
['text':' scenes and there is no reliable way to test if the connection is still alive in a','line_number':519,'multiline':False]
['text':' connection agnostic way. HTTP verbs like HEAD are not uniformly supported.','line_number':520,'multiline':False]
['text':'','line_number':521,'multiline':False]
['text':' The connection pool simply needs to prune handles on a timer for us.','line_number':522,'multiline':False]
['text':'*
 * Handle that manages connection pool semantics and returns handle to connection pool in
 * destructor.
 *
 * Caller must call indiciateSuccess if they want the handle to be reused.
 ','line_number':540,'multiline':True]
['text':' Tell the connection pool that we used the connection otherwise the pool will be believe','line_number':567,'multiline':False]
['text':' the connection went idle since it is possible to checkout a connection and not actually','line_number':568,'multiline':False]
['text':' use it.','line_number':569,'multiline':False]
['text':' Owned by _poolHandle','line_number':587,'multiline':False]
['text':'*
 * Factory that returns curl handles managed in connection pool
 ','line_number':591,'multiline':True]
['text':' Treat the URL as a host and port','line_number':625,'multiline':False]
['text':' URL: http(s)?://(host):(port)/...','line_number':626,'multiline':False]
['text':'','line_number':627,'multiline':False]
['text':'*
 * The connection pool requires the ability to spawn threads which is not allowed through
 * options parsing. Callers should default to HttpConnectionPool::kUse unless they are calling
 * into the HttpClient before thread spawning is allowed.
 ','line_number':649,'multiline':True]
['text':' Can't set on base handle because cURL doesn't deep-dup this field','line_number':667,'multiline':False]
['text':' and we don't want it getting overwritten while another thread is using it.','line_number':668,'multiline':False]
['text':' Make a request with a non-pooled handle. This is needed during server startup when','line_number':695,'multiline':False]
['text':' thread spawning is not allowed which is required by the thread pool.','line_number':696,'multiline':False]
['text':' Per https://curl.se/libcurl/c/CURLOPT_POST.html','line_number':716,'multiline':False]
['text':' We need to reset the type of request we want to make when reusing the request','line_number':717,'multiline':False]
['text':' namespace','line_number':825,'multiline':False]
['text':' namespace mongo','line_number':835,'multiline':False]
