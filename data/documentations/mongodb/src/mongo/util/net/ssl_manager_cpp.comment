['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':' This function returns true if the character is supposed to be escaped according to the rules','line_number':70,'multiline':False]
['text':' in RFC4514. The exception to the RFC the space character ' ' and the '#', because we've not','line_number':71,'multiline':False]
['text':' required users to escape spaces or sharps in DNs in the past.','line_number':72,'multiline':False]
['text':' These characters may appear escaped in a string or not, but must not appear as the first','line_number':88,'multiline':False]
['text':' character.','line_number':89,'multiline':False]
['text':'
 * This class parses out the components of a DN according to RFC4514.
 *
 * It takes in a StringData to the DN to be parsed, the buffer containing the StringData
 * must remain in scope for the duration that it is being parsed.
 ','line_number':101,'multiline':True]
['text':' The value ended in ','','line_number':114,'multiline':False]
['text':' The value ended in '+'','line_number':115,'multiline':False]
['text':' The value ended with the end of the string','line_number':116,'multiline':False]
['text':' Returns a decoded string representing one value in an RDN, and the way the value was','line_number':119,'multiline':False]
['text':' terminated.','line_number':120,'multiline':False]
['text':' Parses an attribute name according to the rules for the "descr" type defined in','line_number':149,'multiline':False]
['text':' https://tools.ietf.org/html/rfc4512','line_number':150,'multiline':False]
['text':' If the first character is a digit, then this is an OID and can only contain','line_number':156,'multiline':False]
['text':' numbers and '.'','line_number':157,'multiline':False]
['text':' If the first character is an alpha, then this is a short name and can only','line_number':162,'multiline':False]
['text':' contain alpha/digit/hyphen characters.','line_number':163,'multiline':False]
['text':' Otherwise this is an invalid attribute name','line_number':168,'multiline':False]
['text':' The RFC states the spaces at the beginning and end of the value must be escaped, which','line_number':195,'multiline':False]
['text':' means we should skip any leading unescaped spaces.','line_number':196,'multiline':False]
['text':' Every time we see an escaped space ("\ "), we increment this counter. Every time we see','line_number':199,'multiline':False]
['text':' anything non-space character we reset this counter to zero. That way we'll know the number','line_number':200,'multiline':False]
['text':' of consecutive escaped spaces at the end of the string there are.','line_number':201,'multiline':False]
['text':' It is legal to escape whitespace, but we don't count it as an "escaped"','line_number':227,'multiline':False]
['text':' character because we don't require it to be escaped within the value, that is','line_number':228,'multiline':False]
['text':' "C=New York" is legal, and so is "C=New\ York"','line_number':229,'multiline':False]
['text':'','line_number':230,'multiline':False]
['text':' The exception is that leading and trailing whitespace must be escaped or else','line_number':231,'multiline':False]
['text':' it will be trimmed.','line_number':232,'multiline':False]
['text':' It's legal to have trailing spaces as long as they are escaped, so if we have some trailing','line_number':256,'multiline':False]
['text':' escaped spaces, trim the size of the string to the last non-space character + the number of','line_number':257,'multiline':False]
['text':' escaped trailing spaces.','line_number':258,'multiline':False]
['text':' Consume the + or , character','line_number':265,'multiline':False]
['text':' namespace','line_number':311,'multiline':False]
['text':' isSSLServer ','line_number':320,'multiline':True]
['text':' Allow spaces to separate RDNs for readability, e.g. "CN=foo, OU=bar, DC=bizz"','line_number':461,'multiline':False]
['text':' OpenSSL has a more complete library of OID to SN mappings.','line_number':484,'multiline':False]
['text':' Converts the OID to an ASN1_OBJECT','line_number':503,'multiline':False]
['text':' OBJ_obj2txt doesn't let you pass in a NULL buffer and a negative size to discover how','line_number':509,'multiline':False]
['text':' big the buffer should be, but the man page gives 80 as a good guess for buffer size.','line_number':510,'multiline':False]
['text':' Resize the buffer down or up to the real size.','line_number':515,'multiline':False]
['text':' If the real size is greater than the default buffer size we picked, then just call','line_number':518,'multiline':False]
['text':' OBJ_obj2txt again now that the buffer is correctly sized.','line_number':519,'multiline':False]
['text':' On Apple/Windows we have to provide our own mapping.','line_number':527,'multiline':False]
['text':' Generate the 2.5.4.* portions of this list from OpenSSL sources with:','line_number':528,'multiline':False]
['text':' grep -E '^X509 ' "$OPENSSL/crypto/objects/objects.txt" | tr -d '\t' |','line_number':529,'multiline':False]
['text':'   sed -e 's/^X509 *\([0-9]\+\) *\(: *\)\+\([[:alnum:]]\+\).*/{"2.5.4.\1", "\3"},/g'','line_number':530,'multiline':False]
['text':' X509 OIDs Generated from objects.txt','line_number':538,'multiline':False]
['text':' If the name is a known oid in our mapping list then just return it.','line_number':614,'multiline':False]
['text':' For each type of valid DirectoryString, do the string prep algorithm.','line_number':654,'multiline':False]
['text':' Technically https://tools.ietf.org/html/rfc5280#section-4.1.2.4 requires','line_number':662,'multiline':False]
['text':' that DN component values must be at least 1 code point long, but we've','line_number':663,'multiline':False]
['text':' supported empty components before (see SERVER-39107) so we special-case','line_number':664,'multiline':False]
['text':' normalizing empty values to an empty UTF-8 string','line_number':665,'multiline':False]
['text':'*
 * The behavior of isClusterMember() is subtly different when passed
 * an SSLX509Name versus a StringData.
 *
 * The SSLX509Name version (immediately below) compares distinguished
 * names in their normalized, unescaped forms and provides a more reliable match.
 *
 * The StringData version attempts to canonicalize the stringified subject name
 * according to RFC4514 and compare that to the normalized/unescaped version of
 * the server's distinguished name.
 ','line_number':794,'multiline':True]
['text':' If either net.tls.clusterAuthX509.attributes or net.tls.clusterAuthX509.extensionValue have','line_number':818,'multiline':False]
['text':' been specified, use them to determine cluster membership. Otherwise, check whether DC, O,','line_number':819,'multiline':False]
['text':' and/or OU from the server member certificate's subject DN match the client subject DN.','line_number':820,'multiline':False]
['text':' If the certificate did not meet either of the above criteria, then it can still be a cluster','line_number':835,'multiline':False]
['text':' member if tlsClusterX509AuthOverride is specified and it meets the attribute or extension','line_number':836,'multiline':False]
['text':' policy specified.','line_number':837,'multiline':False]
['text':' If tlsClusterX509AuthOverride was not specified, then the only way that it','line_number':842,'multiline':False]
['text':' could still be accepted as a cluster member is if it contains the DC, O, and/or OU in the','line_number':843,'multiline':False]
['text':' tlsClusterAuthDNOverride DN.','line_number':844,'multiline':False]
['text':'*
 * Enum of supported Abstract Syntax Notation One (ASN.1) Distinguished Encoding Rules (DER) types.
 *
 * This is a subset of all DER types.
 ','line_number':879,'multiline':True]
['text':' Primitive, not supported by the parser','line_number':885,'multiline':False]
['text':' Only exists when BER indefinite form is used which is not valid DER.','line_number':886,'multiline':False]
['text':' Primitive','line_number':889,'multiline':False]
['text':' Primitive','line_number':892,'multiline':False]
['text':' Sequence or Sequence Of, Constructed','line_number':895,'multiline':False]
['text':' Set or Set Of, Constructed','line_number':898,'multiline':False]
['text':'*
 * Distinguished Encoding Rules (DER) are a strict subset of Basic Encoding Rules (BER).
 *
 * For more details, see X.690 from ITU-T.
 *
 * It is a Tag + Length + Value format. The tag is generally 1 byte, the length is 1 or more
 * and then followed by the value.
 ','line_number':902,'multiline':True]
['text':'*
     * Get the ASN.1 type of the current token.
     ','line_number':916,'multiline':True]
['text':'*
     * Get a ConstDataRange for the value of this SET or SET OF.
     ','line_number':923,'multiline':True]
['text':'*
     * Get a ConstDataRange for the value of this SEQUENCE or SEQUENCE OF.
     ','line_number':931,'multiline':True]
['text':'*
     * Get a std::string for the value of this Utf8String.
     ','line_number':939,'multiline':True]
['text':'*
     * Get a vector representation for the value of this DER INTEGER
     ','line_number':947,'multiline':True]
['text':'*
     * Parse a buffer of bytes and return the number of bytes we read for this token.
     *
     * Returns a DERToken which consists of the (tag, length, value) tuple.
     ','line_number':957,'multiline':True]
['text':' namespace','line_number':970,'multiline':False]
['text':' Get the tag number from the first 5 bits','line_number':1054,'multiline':False]
['text':' Check the 6th bit','line_number':1057,'multiline':False]
['text':' Check bits 7 and 8 for the tag class, we only want Universal (i.e. 0)','line_number':1061,'multiline':False]
['text':' Validate the 6th bit is correct, and it is a known type','line_number':1067,'multiline':False]
['text':' Do we have at least 1 byte for the length','line_number':1089,'multiline':False]
['text':' Read length','line_number':1094,'multiline':False]
['text':' Depending on the high bit, either read 1 byte or N bytes','line_number':1095,'multiline':False]
['text':' How many bytes does it take to encode the length?','line_number':1106,'multiline':False]
['text':' Length is > 127 bytes, i.e. Long form of length','line_number':1110,'multiline':False]
['text':' If length is encoded in more then 8 bytes, we disallow it','line_number':1113,'multiline':False]
['text':' Ensure we have enough data for the length bytes','line_number':1118,'multiline':False]
['text':' Copy the length into the end of the buffer','line_number':1131,'multiline':False]
['text':' We now have 0x00..NN in the buffer and it can be properly decoded as BigEndian','line_number':1134,'multiline':False]
['text':' Length is <= 127 bytes, i.e. short form of length','line_number':1137,'multiline':False]
['text':' This is the total length of the TLV and all data','line_number':1141,'multiline':False]
['text':' This will not overflow since encodedLengthBytesCount <= 9','line_number':1142,'multiline':False]
['text':' This may overflow since derLength is from user data so check our arithmetic carefully.','line_number':1145,'multiline':False]
['text':' namespace','line_number':1152,'multiline':False]
['text':'*
     * MongoDBAuthorizationGrants ::= SET OF MongoDBAuthorizationGrant
     *
     * MongoDBAuthorizationGrant ::= CHOICE {
     *  MongoDBRole,
     *  ...!UTF8String:"Unrecognized entity in MongoDBAuthorizationGrant"
     * }
     ','line_number':1164,'multiline':True]
['text':'*
         * MongoDBRole ::= SEQUENCE {
         *  role     UTF8String,
         *  database UTF8String
         * }
         ','line_number':1187,'multiline':True]
['text':'*
     * FEATURES ::= SEQUENCE OF INTEGER
     ','line_number':1229,'multiline':True]
['text':' Characters that need to be escaped in RFC 2253','line_number':1267,'multiline':False]
['text':' namespace','line_number':1270,'multiline':False]
['text':' See section "2.4 Converting an AttributeValue from ASN.1 to a String" in RFC 2243','line_number':1272,'multiline':False]
['text':' a space or "#" character occurring at the beginning of the string','line_number':1279,'multiline':False]
['text':' a space character occurring at the end of the string','line_number':1303,'multiline':False]
['text':' TODO SERVER-11601 Use NFC Unicode canonicalization','line_number':1365,'multiline':False]
['text':' match wildcard DNS names','line_number':1374,'multiline':False]
['text':' allow name.example.com if the cert is *.example.com, '*' does not match '.'','line_number':1376,'multiline':False]
['text':' namespace mongo','line_number':1395,'multiline':False]
