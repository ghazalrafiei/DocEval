['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':'*
 * Validate that a string is either empty or is parseable to a HostAndPort. This is intended for use
 * as an IDL validator callback.
 ','line_number':48,'multiline':True]
['text':'*
 * Name of a process on the network.
 *
 * Composed of some name component, followed optionally by a colon and a numeric port.  The name
 * might be an IPv4 or IPv6 address or a relative or fully qualified host name, or an absolute
 * path to a unix socket.
 ','line_number':54,'multiline':True]
['text':'*
     * Parses "text" to produce a HostAndPort.  Returns either that or an error status describing
     * the parse failure.
     ','line_number':62,'multiline':True]
['text':'*
     * A version of 'parse' that throws a UserException if a parsing error is encountered.
     ','line_number':68,'multiline':True]
['text':'*
     * Construct an empty/invalid HostAndPort.
     ','line_number':75,'multiline':True]
['text':'*
     * Constructs a HostAndPort by parsing "text" of the form hostname[:portnumber]
     * Throws an AssertionException if bad config std::string or bad port #.
     ','line_number':80,'multiline':True]
['text':'*
     * Constructs a HostAndPort with the hostname "h" and port "p".
     *
     * If "p" is -1, port() returns ServerGlobalParams::DefaultDBPort.
     ','line_number':86,'multiline':True]
['text':'*
     * (Re-)initializes this HostAndPort by parsing "s".  Returns
     * Status::OK on success.  The state of this HostAndPort is unspecified
     * after initialize() returns a non-OK status, though it is safe to
     * assign to it or re-initialize it.
     ','line_number':93,'multiline':True]
['text':'*
     * Returns true if the hostname looks localhost-y.
     *
     * TODO: Make a more rigorous implementation, perhaps elsewhere in
     * the networking library.
     ','line_number':107,'multiline':True]
['text':'*
     * Returns true if the hostname is an IP matching the default route.
     ','line_number':115,'multiline':True]
['text':'*
     * Returns a string representation of "host:port".
     ','line_number':120,'multiline':True]
['text':'*
     * Returns true if this object represents no valid HostAndPort.
     ','line_number':125,'multiline':True]
['text':' -1 indicates unspecified','line_number':175,'multiline':False]
['text':' namespace mongo','line_number':194,'multiline':False]
['text':' namespace fmt','line_number':210,'multiline':False]
