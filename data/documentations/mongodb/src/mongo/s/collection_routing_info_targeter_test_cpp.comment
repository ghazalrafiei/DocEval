['text':'*
 *    Copyright (C) 2020-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':'*
 * Fixture that populates the CatalogCache with 'kNss' as a sharded collection.
 ','line_number':103,'multiline':True]
['text':' The tests using this fixture expects that a write without shard key is not allowed.','line_number':131,'multiline':False]
['text':'*
 * This is the common part of test TargetInsertWithRangePrefixHashedShardKey and
 * TargetInsertWithRangePrefixHashedShardKeyCustomChunkManager
 * Tests that the destination shard is the correct one as defined from the split points
 * when the ChunkManager was constructed.
 ','line_number':183,'multiline':True]
['text':' Caller has created 5 chunks and 5 shards such that shardId '0' has chunk [MinKey, null), '1'','line_number':193,'multiline':False]
['text':' has chunk [null, -100), '2' has chunk [-100, 0), '3' has chunk ['0', 100) and '4' has chunk','line_number':194,'multiline':False]
['text':' [100, MaxKey).','line_number':195,'multiline':False]
['text':' Missing field will be treated as null and will be targeted to the chunk which holds null,','line_number':213,'multiline':False]
['text':' which is shard '1'.','line_number':214,'multiline':False]
['text':' Arrays along shard key path are not allowed.','line_number':222,'multiline':False]
['text':' Create 5 chunks and 5 shards such that shardId '0' has chunk [MinKey, null), '1' has chunk','line_number':251,'multiline':False]
['text':' [null, -100), '2' has chunk [-100, 0), '3' has chunk ['0', 100) and '4' has chunk','line_number':252,'multiline':False]
['text':' [100, MaxKey).','line_number':253,'multiline':False]
['text':'*
 * Build and return a custom ChunkManager with the given shard pattern and split points.
 * This is similar to CoreCatalogCacheTestFixture::makeChunkManager() which prepare() calls
 * with the distinction that it simply creates and returns a ChunkManager object
 * and does not assign it to the Global Catalog Cache ChunkManager.
 ','line_number':262,'multiline':True]
['text':' unsplittable ','line_number':295,'multiline':True]
['text':' collator','line_number':296,'multiline':False]
['text':' unique','line_number':297,'multiline':False]
['text':' time series fields','line_number':300,'multiline':False]
['text':' resharding fields','line_number':301,'multiline':False]
['text':' allowMigration','line_number':302,'multiline':False]
['text':' Create 5 chunks and 5 shards such that shardId '0' has chunk [MinKey, null), '1' has chunk','line_number':326,'multiline':False]
['text':' [null, -100), '2' has chunk [-100, 0), '3' has chunk ['0', 100) and '4' has chunk','line_number':327,'multiline':False]
['text':' [100, MaxKey).','line_number':328,'multiline':False]
['text':' Cause the global chunk manager to have some other configuration.','line_number':341,'multiline':False]
['text':' Run common test on the custom ChunkManager of CollectionRoutingInfoTargeter.','line_number':352,'multiline':False]
['text':' Create 4 chunks and 4 shards such that shardId '0' has chunk [MinKey, -2^62), '1' has chunk','line_number':368,'multiline':False]
['text':' [-2^62, 0), '2' has chunk ['0', 2^62) and '3' has chunk [2^62, MaxKey).','line_number':369,'multiline':False]
['text':' Verify that the given document is being routed based on hashed value of 'i'.','line_number':383,'multiline':False]
['text':' Verify that the chunk range returned is correct and contains the hashValue.','line_number':390,'multiline':False]
['text':' Arrays along shard key path are not allowed.','line_number':399,'multiline':False]
['text':' namespace','line_number':406,'multiline':False]
['text':' For the purpose of this test, we will keep the hashed field constant to 0 so that we can','line_number':421,'multiline':False]
['text':' correctly test the targeting based on range field.','line_number':422,'multiline':False]
['text':' Create 5 chunks and 5 shards such that shardId','line_number':425,'multiline':False]
['text':' '0' has chunk [{'a.b': hash(0), 'c.d': MinKey}, {'a.b': hash(0), 'c.d': null}),','line_number':426,'multiline':False]
['text':' '1' has chunk [{'a.b': hash(0), 'c.d': null},   {'a.b': hash(0), 'c.d': -100}),','line_number':427,'multiline':False]
['text':' '2' has chunk [{'a.b': hash(0), 'c.d': -100},   {'a.b': hash(0), 'c.d':  0}),','line_number':428,'multiline':False]
['text':' '3' has chunk [{'a.b': hash(0), 'c.d':0},       {'a.b': hash(0), 'c.d': 100}) and','line_number':429,'multiline':False]
['text':' '4' has chunk [{'a.b': hash(0), 'c.d': 100},    {'a.b': hash(0), 'c.d': MaxKey}).','line_number':430,'multiline':False]
['text':' Missing field will be treated as null and will be targeted to the chunk which holds null,','line_number':491,'multiline':False]
['text':' which is shard '1'.','line_number':492,'multiline':False]
['text':' Create 5 chunks and 5 shards such that shardId '0' has chunk [MinKey, null), '1' has chunk','line_number':530,'multiline':False]
['text':' [null, -100), '2' has chunk [-100, 0), '3' has chunk ['0', 100) and '4' has chunk','line_number':531,'multiline':False]
['text':' [100, MaxKey).','line_number':532,'multiline':False]
['text':' When update targets using replacement object.','line_number':539,'multiline':False]
['text':'upsert=','line_number':541,'multiline':True]
['text':' useTwoPhaseWriteProtocol ','line_number':544,'multiline':True]
['text':' isNonTargetedWriteWithoutShardKeyWithExactId ','line_number':545,'multiline':True]
['text':' When update targets using query.','line_number':556,'multiline':False]
['text':' useTwoPhaseWriteProtocol ','line_number':563,'multiline':True]
['text':' isNonTargetedWriteWithoutShardKeyWithExactId ','line_number':564,'multiline':True]
['text':' useTwoPhaseWriteProtocol ','line_number':579,'multiline':True]
['text':' isNonTargetedWriteWithoutShardKeyWithExactId ','line_number':580,'multiline':True]
['text':' For op-style updates, query on _id gets targeted to all shards.','line_number':592,'multiline':False]
['text':' useTwoPhaseWriteProtocol ','line_number':597,'multiline':True]
['text':' isNonTargetedWriteWithoutShardKeyWithExactId ','line_number':598,'multiline':True]
['text':' For replacement style updates, query on _id uses replacement doc to target. If the','line_number':621,'multiline':False]
['text':' replacement doc doesn't have shard key fields, then update should be routed to the shard','line_number':622,'multiline':False]
['text':' holding 'null' shard key documents.','line_number':623,'multiline':False]
['text':' useTwoPhaseWriteProtocol ','line_number':627,'multiline':True]
['text':' isNonTargetedWriteWithoutShardKeyWithExactId ','line_number':628,'multiline':True]
['text':' Upsert requires full shard key in query, even if the query can target a single shard.','line_number':640,'multiline':False]
['text':' useTwoPhaseWriteProtocol ','line_number':648,'multiline':True]
['text':' isNonTargetedWriteWithoutShardKeyWithExactId ','line_number':649,'multiline':True]
['text':' Upsert success case.','line_number':654,'multiline':False]
['text':' useTwoPhaseWriteProtocol ','line_number':659,'multiline':True]
['text':' isNonTargetedWriteWithoutShardKeyWithExactId ','line_number':660,'multiline':True]
['text':' Create 4 chunks and 4 shards such that shardId '0' has chunk [MinKey, -2^62), '1' has','line_number':687,'multiline':False]
['text':' chunk [-2^62, 0), '2' has chunk ['0', 2^62) and '3' has chunk [2^62, MaxKey).','line_number':688,'multiline':False]
['text':' Verify that the given document is being routed based on hashed value of 'i' in','line_number':700,'multiline':False]
['text':' 'updateQueryObj'.','line_number':701,'multiline':False]
['text':' useTwoPhaseWriteProtocol ','line_number':706,'multiline':True]
['text':' isNonTargetedWriteWithoutShardKeyWithExactId ','line_number':707,'multiline':True]
['text':' Range queries on hashed field cannot be used for targeting. In this case, update will be','line_number':719,'multiline':False]
['text':' targeted based on update document.','line_number':720,'multiline':False]
['text':' useTwoPhaseWriteProtocol ','line_number':726,'multiline':True]
['text':' isNonTargetedWriteWithoutShardKeyWithExactId ','line_number':727,'multiline':True]
['text':' useTwoPhaseWriteProtocol ','line_number':743,'multiline':True]
['text':' isNonTargetedWriteWithoutShardKeyWithExactId ','line_number':744,'multiline':True]
['text':' useTwoPhaseWriteProtocol ','line_number':767,'multiline':True]
['text':' isNonTargetedWriteWithoutShardKeyWithExactId ','line_number':768,'multiline':True]
['text':' Create 5 chunks and 5 shards such that shardId '0' has chunk [MinKey, null), '1' has','line_number':802,'multiline':False]
['text':' chunk [null, -100), '2' has chunk [-100, 0), '3' has chunk ['0', 100) and '4' has chunk','line_number':803,'multiline':False]
['text':' [100, MaxKey).','line_number':804,'multiline':False]
['text':' Can delete wih partial shard key in the query if the query only targets one shard.','line_number':811,'multiline':False]
['text':' useTwoPhaseWriteProtocol ','line_number':815,'multiline':True]
['text':' isNonTargetedWriteWithoutShardKeyWithExactId ','line_number':816,'multiline':True]
['text':' Cannot delete with partial shard key in the query if the query targets multiple shards.','line_number':827,'multiline':False]
['text':' useTwoPhaseWriteProtocol ','line_number':832,'multiline':True]
['text':' isNonTargetedWriteWithoutShardKeyWithExactId ','line_number':833,'multiline':True]
['text':' Cannot delete without at least a partial shard key.','line_number':838,'multiline':False]
['text':' useTwoPhaseWriteProtocol ','line_number':843,'multiline':True]
['text':' isNonTargetedWriteWithoutShardKeyWithExactId ','line_number':844,'multiline':True]
['text':' Delete targeted correctly with full shard key in query.','line_number':849,'multiline':False]
['text':' useTwoPhaseWriteProtocol ','line_number':853,'multiline':True]
['text':' isNonTargetedWriteWithoutShardKeyWithExactId ','line_number':854,'multiline':True]
['text':' Query with MinKey value should go to chunk '0' because MinKey is smaller than BSONNULL.','line_number':866,'multiline':False]
['text':' useTwoPhaseWriteProtocol ','line_number':871,'multiline':True]
['text':' isNonTargetedWriteWithoutShardKeyWithExactId ','line_number':872,'multiline':True]
['text':' useTwoPhaseWriteProtocol ','line_number':887,'multiline':True]
['text':' isNonTargetedWriteWithoutShardKeyWithExactId ','line_number':888,'multiline':True]
['text':' Create 4 chunks and 4 shards such that shardId '0' has chunk [MinKey, -2^62), '1' has','line_number':916,'multiline':False]
['text':' chunk','line_number':917,'multiline':False]
['text':' [-2^62, 0), '2' has chunk ['0', 2^62) and '3' has chunk [2^62, MaxKey).','line_number':918,'multiline':False]
['text':' Verify that the given document is being routed based on hashed value of 'i' in','line_number':928,'multiline':False]
['text':' 'queryObj'.','line_number':929,'multiline':False]
['text':' useTwoPhaseWriteProtocol ','line_number':934,'multiline':True]
['text':' isNonTargetedWriteWithoutShardKeyWithExactId ','line_number':935,'multiline':True]
['text':' Range queries on hashed field cannot be used for targeting.','line_number':948,'multiline':False]
['text':' useTwoPhaseWriteProtocol ','line_number':953,'multiline':True]
['text':' isNonTargetedWriteWithoutShardKeyWithExactId ','line_number':954,'multiline':True]
['text':' Create 5 chunks and 5 shards such that shardId '0' has chunk [MinKey, null), '1' has chunk','line_number':1018,'multiline':False]
['text':' [null, -100), '2' has chunk [-100, 0), '3' has chunk ['0', 100) and '4' has chunk','line_number':1019,'multiline':False]
['text':' [100, MaxKey).','line_number':1020,'multiline':False]
['text':' Tests that routing writes when the shard key includes the _id field will throw an error if','line_number':1024,'multiline':False]
['text':' the document does not contain _id.','line_number':1025,'multiline':False]
['text':'*
 * Fixture that populates the CatalogCache with 'kNss' as an unsharded collection not tracked on the
 * configsvr, or a non-existent collection.
 ','line_number':1031,'multiline':True]
['text':'*
 * Fixture that populates the CatalogCache with 'kNss' as an unsharded collection tracked on the
 * configsvr.
 ','line_number':1085,'multiline':True]
['text':'*
 * Fixture that sets up a mock CatalogCache with several timeseries collections.
 ','line_number':1142,'multiline':True]
['text':' _untrackedTimeseriesNss on dbPrimary shard (_shard0).','line_number':1168,'multiline':False]
['text':' _unsplittableTimeseriesNss on _shard1.','line_number':1180,'multiline':False]
['text':' _shardedTimeseriesNss:','line_number':1194,'multiline':False]
['text':' - {meta: MINKEY} to {meta: 0} on _shard0.','line_number':1195,'multiline':False]
['text':' - {meta: 0} to {meta: MAXKEY} on _shard1.','line_number':1196,'multiline':False]
['text':' Expect all operations to be targeted to the db-primary shard, with 'databaseVersion' attached','line_number':1235,'multiline':False]
['text':' and 'shardVersion=UNSHARDED.','line_number':1236,'multiline':False]
['text':' Insert','line_number':1246,'multiline':False]
['text':' Update','line_number':1250,'multiline':False]
['text':' Delete','line_number':1257,'multiline':False]
['text':' Expect all operations to be targeted to '_shard1', with a shard1's ShardVersion attached and','line_number':1270,'multiline':False]
['text':' no 'databaseVersion'.','line_number':1271,'multiline':False]
['text':' Insert','line_number':1286,'multiline':False]
['text':' Update','line_number':1290,'multiline':False]
['text':' Delete','line_number':1297,'multiline':False]
['text':' Insert','line_number':1329,'multiline':False]
['text':' Update','line_number':1346,'multiline':False]
['text':'multi','line_number':1349,'multiline':True]
['text':'multi','line_number':1360,'multiline':True]
['text':' Delete','line_number':1366,'multiline':False]
['text':'multi','line_number':1368,'multiline':True]
['text':'multi','line_number':1376,'multiline':True]
['text':' No need to refresh','line_number':1420,'multiline':False]
['text':' Setup new metadata on the CatalogCache representing nss is now a sharded time series.','line_number':1423,'multiline':False]
['text':' CollectionRoutingInfoTargeter became aware that nss is now a sharded time series.','line_number':1443,'multiline':False]
['text':' Setup new metadata on the CatalogCache representing nss is now an untracked time series.','line_number':1448,'multiline':False]
['text':' CollectionRoutingInfoTargeter became aware that nss is now an untracked time series.','line_number':1458,'multiline':False]
['text':' namespace','line_number':1464,'multiline':False]
['text':' namespace mongo','line_number':1465,'multiline':False]
