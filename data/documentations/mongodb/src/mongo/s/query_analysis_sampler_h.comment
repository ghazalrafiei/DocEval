['text':'*
 *    Copyright (C) 2022-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':'*
 * Owns the machinery for sampling queries on a sampler. That consists of the following:
 * - The periodic background job that refreshes the last exponential moving average of the number of
 *   queries that this sampler executes per second.
 * - The periodic background job that sends the calculated average to the coordinator to refresh the
 *   latest configurations. The average determines the share of the cluster-wide sample rate that
 *   will be assigned to this sampler.
 * - The rate limiters that each controls the rate at which queries against a collection are sampled
 *   on this sampler.
 *
 * On a sharded cluster, a sampler is any mongos or shardsvr mongod (that has acted as a
 * router) in the cluster, and the coordinator is the config server's primary mongod. On a
 * standalone replica set, a sampler is any mongod in the set and the coordinator is the primary
 * mongod.
 ','line_number':53,'multiline':True]
['text':'*
     * Stores the last total number of queries that this sampler has executed and the last
     * exponential moving average number of queries that this sampler executes per second. The
     * average is recalculated every second when the total number of queries is refreshed.
     ','line_number':73,'multiline':True]
['text':'*
         * If the command is an aggregate, count or distinct command, increment its count.
         ','line_number':81,'multiline':True]
['text':'*
         * Refreshes the last total count and the last exponential moving average count. To be
         * invoked every second.
         ','line_number':94,'multiline':True]
['text':' The counts for update, delete and find are already tracked by the OpCounters.','line_number':103,'multiline':False]
['text':'*
     * Controls the per-second rate at which queries against a collection are sampled on this
     * sampler. Uses token bucket.
     ','line_number':113,'multiline':True]
['text':'*
         * Requests to consume one token from the bucket. Causes the bucket to be refilled with
         * tokens created since last refill time. Does not block if the bucket is empty or there is
         * fewer than one token in the bucket. Returns true if a token has been consumed
         * successfully, and false otherwise.
         ','line_number':153,'multiline':True]
['text':'*
         * Sets a new rate. Causes the bucket to be refilled with tokens created since last refill
         * time according to the previous rate.
         ','line_number':161,'multiline':True]
['text':'*
         * Returns the maximum of number of tokens that a bucket with given rate can store at any
         * given time.
         ','line_number':168,'multiline':True]
['text':'*
         * Fills the bucket with tokens created since last refill time according to the given rate
         * and burst capacity.
         ','line_number':174,'multiline':True]
['text':' The bucket is only refilled when there is a consume request or a rate refresh.','line_number':185,'multiline':False]
['text':'*
     * Obtains the service-wide QueryAnalysisSampler instance.
     ','line_number':196,'multiline':True]
['text':'*
     * Returns a unique sample id for a query if it should be sampled, and none otherwise. Can only
     * be invoked once for each query since generating a sample id causes the number of remaining
     * queries to sample to get decremented. Does not generate a sample id if the client is
     * internal (defined as not having a network session) unless this operation has explicitly
     * opted into query sampling.
     ','line_number':214,'multiline':True]
['text':' namespace analyze_shard_key','line_number':271,'multiline':False]
['text':' namespace mongo','line_number':272,'multiline':False]
