['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':' IWYU pragma: no_include "ext/alloc_traits.h"','line_number':36,'multiline':False]
['text':' Return an empty database (need to return it twice because for missing databases, the','line_number':219,'multiline':False]
['text':' CatalogClient tries twice)','line_number':220,'multiline':False]
['text':' Return a corrupted database entry','line_number':236,'multiline':False]
['text':' Return an empty collection','line_number':256,'multiline':False]
['text':' Return a corrupted collection entry','line_number':269,'multiline':False]
['text':' Return no chunks three times, which is how frequently the catalog cache retries','line_number':293,'multiline':False]
['text':' Return no chunks three times, which is how frequently the catalog cache retries','line_number':330,'multiline':False]
['text':' Return no chunks three times, which is how frequently the catalog cache retries','line_number':364,'multiline':False]
['text':' collection ','line_number':372,'multiline':True]
['text':' chunks ','line_number':374,'multiline':True]
['text':' Chunk from (MinKey, -100) is missing (as if someone is dropping the collection','line_number':403,'multiline':False]
['text':' concurrently) and has the lowest version.','line_number':404,'multiline':False]
['text':' Return incomplete set of chunks three times, which is how frequently the catalog cache','line_number':425,'multiline':False]
['text':' retries','line_number':426,'multiline':False]
['text':' Chunk from (MinKey, -100) is missing (as if someone is dropping the collection','line_number':459,'multiline':False]
['text':' concurrently) and has the higest version.','line_number':460,'multiline':False]
['text':' Return incomplete set of chunks three times, which is how frequently the catalog cache','line_number':481,'multiline':False]
['text':' retries','line_number':482,'multiline':False]
['text':' Chunk from (MinKey, -100) is missing (as if someone is dropping the collection','line_number':518,'multiline':False]
['text':' concurrently) and has the lowest version.','line_number':519,'multiline':False]
['text':' Return incomplete set of chunks three times, which is how frequently the catalog cache','line_number':540,'multiline':False]
['text':' retries','line_number':541,'multiline':False]
['text':' Chunk from (MinKey, -100) is missing (as if someone is dropping the collection','line_number':577,'multiline':False]
['text':' concurrently) and has the higest version.','line_number':578,'multiline':False]
['text':' Return incomplete set of chunks three times, which is how frequently the catalog cache','line_number':598,'multiline':False]
['text':' retries','line_number':599,'multiline':False]
['text':' On the first attempt, return set of chunks, one of which has different epoch. This simulates','line_number':634,'multiline':False]
['text':' the situation where a collection existed with epoch0, we started a refresh for that','line_number':635,'multiline':False]
['text':' collection, the cursor yielded and while it yielded another node dropped the collection and','line_number':636,'multiline':False]
['text':' recreated it with different epoch and chunks.','line_number':637,'multiline':False]
['text':' "Yield" happens here with drop and recreate in between. This is the "last" chunk from the','line_number':662,'multiline':False]
['text':' recreated collection.','line_number':663,'multiline':False]
['text':' On the second retry attempt, return the correct set of chunks from the recreated collection','line_number':675,'multiline':False]
['text':' Return collection with a different epoch and a set of chunks, which represent a split','line_number':750,'multiline':False]
['text':' Return set of chunks, which represent a split','line_number':815,'multiline':False]
['text':' Return set of chunks, which represent a move','line_number':889,'multiline':False]
['text':' The collection type won't have resharding fields this time.','line_number':940,'multiline':False]
['text':' Return set of chunks, which represent a move','line_number':941,'multiline':False]
['text':' namespace','line_number':971,'multiline':False]
['text':' namespace mongo','line_number':972,'multiline':False]
