['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':' Note: The useTwoPhaseProtocol() uses the shard key extractor to decide whether it should','line_number':185,'multiline':False]
['text':' use the two phase protocol and the shard key extractor is only based on the equality','line_number':186,'multiline':False]
['text':' query. But we still should be able to route the query to the correct shard from a range','line_number':187,'multiline':False]
['text':' query on shard keys (not always) and unfortunately, even an equality query on the time','line_number':188,'multiline':False]
['text':' field for timeseries collections would be translated into a range query on','line_number':189,'multiline':False]
['text':' control.min.time and control.max.time. So, with this, we can support targeted','line_number':190,'multiline':False]
['text':' findAndModify based on the time field.','line_number':191,'multiline':False]
['text':'','line_number':192,'multiline':False]
['text':' If the collection is a sharded timeseries collection, rewrite the query into a','line_number':193,'multiline':False]
['text':' bucket-level query.','line_number':194,'multiline':False]
['text':' allowArbitraryWrites ','line_number':196,'multiline':True]
['text':' namespace','line_number':201,'multiline':False]
['text':' resourceYielder ','line_number':213,'multiline':True]
['text':' Shared state for the transaction API use below.','line_number':215,'multiline':False]
['text':' For timeseries collections, the 'postMeasurementImage' is returned back through','line_number':272,'multiline':False]
['text':' WouldChangeOwningShardInfo from the old shard as well and it should be returned to the user','line_number':273,'multiline':False]
['text':' instead of the post-image.','line_number':274,'multiline':False]
['text':' Shared state for the transaction API use below.','line_number':302,'multiline':False]
['text':' namespace','line_number':434,'multiline':False]
['text':'*
 * Replaces the target namespace in the 'cmdObj' by 'bucketNss'. Also sets the
 * 'isTimeseriesNamespace' flag.
 ','line_number':473,'multiline':True]
['text':' Set this flag so that shards can differentiate a request on a time-series view from a request','line_number':487,'multiline':False]
['text':' on a time-series buckets collection since we replace the target namespace in the command with','line_number':488,'multiline':False]
['text':' the buckets namespace.','line_number':489,'multiline':False]
['text':'*
 * Returns CollectionRoutingInfo for 'maybeTsNss' namespace. If 'maybeTsNss' is a timeseries
 * collection, returns CollectionRoutingInfo for the corresponding timeseries buckets collection.
 ','line_number':495,'multiline':True]
['text':' Apparently, we should return the CollectionRoutingInfo for the original namespace if we're','line_number':502,'multiline':False]
['text':' not writing to a timeseries collection.','line_number':503,'multiline':False]
['text':' Note: We try to get CollectionRoutingInfo for the timeseries buckets collection only when the','line_number':506,'multiline':False]
['text':' timeseries deletes or updates feature flag is enabled.','line_number':507,'multiline':False]
['text':' If the 'maybeTsNss' namespace is not a timeseries buckets collection and is not tracked on','line_number':518,'multiline':False]
['text':' the configsvr, try to get the CollectionRoutingInfo for the corresponding timeseries buckets','line_number':519,'multiline':False]
['text':' collection to see if it's tracked and it really is a timeseries buckets collection. We should','line_number':520,'multiline':False]
['text':' do this to figure out whether we need to use the two phase write protocol or not on','line_number':521,'multiline':False]
['text':' timeseries buckets collections.','line_number':522,'multiline':False]
['text':'*
 * Returns the shard id if the 'query' can be targeted to a single shard. Otherwise, returns
 * boost::none.
 ','line_number':536,'multiline':True]
['text':' Special case: there's only one shard owning all the chunks.','line_number':546,'multiline':False]
['text':' If we can find a single shard to target, we can skip the two phase write protocol.','line_number':561,'multiline':False]
['text':' For now, set bypassIsFieldHashedCheck to be true in order to skip the','line_number':575,'multiline':False]
['text':' isFieldHashedCheck in the special case where _id is hashed and used as the shard','line_number':576,'multiline':False]
['text':' key. This means that we always assume that a findAndModify request using _id is','line_number':577,'multiline':False]
['text':' targetable to a single shard.','line_number':578,'multiline':False]
['text':' namespace','line_number':602,'multiline':False]
['text':' Check whether the query portion needs to be rewritten for FLE.','line_number':611,'multiline':False]
['text':' Note: at this point, 'nss' should be the timeseries buckets collection namespace if we're','line_number':636,'multiline':False]
['text':' writing to a tracked timeseries collection.','line_number':637,'multiline':False]
['text':' If the request is for a view on a sharded timeseries buckets collection, we need to','line_number':646,'multiline':False]
['text':' replace the namespace by buckets collection namespace in the command object.','line_number':647,'multiline':False]
['text':' verbosity ','line_number':652,'multiline':True]
['text':' isUpdateOrDelete ','line_number':655,'multiline':True]
['text':' Time how long it takes to run the explain command on the shard.','line_number':671,'multiline':False]
['text':' isExplain ','line_number':692,'multiline':True]
['text':' allowShardKeyUpdatesWithoutFullShardKeyInQuery ','line_number':693,'multiline':True]
['text':' We fetch an arbitrary host from the ConnectionString, since','line_number':701,'multiline':False]
['text':' ClusterExplain::buildExplainResult() doesn't use the given HostAndPort.','line_number':702,'multiline':False]
['text':' Collect metrics.','line_number':721,'multiline':False]
['text':' Technically, findAndModify should only be creating database if upsert is true, but this','line_number':724,'multiline':False]
['text':' would require that the parsing be pulled into this function.','line_number':725,'multiline':False]
['text':' Note: at this point, 'nss' should be the timeseries buckets collection namespace if we're','line_number':736,'multiline':False]
['text':' writing to a sharded timeseries collection.','line_number':737,'multiline':False]
['text':' Append mongoS' runtime constants to the command object before forwarding it to the shard.','line_number':739,'multiline':False]
['text':' If the request is for a view on a sharded timeseries buckets collection, we need to','line_number':742,'multiline':False]
['text':' replace the namespace by buckets collection namespace in the command object.','line_number':743,'multiline':False]
['text':' verbosity ','line_number':753,'multiline':True]
['text':' isUpdateOrDelete ','line_number':758,'multiline':True]
['text':' If we can find a single shard to target, we can skip the two phase write','line_number':771,'multiline':False]
['text':' protocol.','line_number':772,'multiline':False]
['text':' isExplain ','line_number':779,'multiline':True]
['text':' isExplain ','line_number':806,'multiline':True]
['text':' allowShardKeyUpdatesWithoutFullShardKeyInQuery ','line_number':807,'multiline':True]
['text':' isExplain ','line_number':819,'multiline':True]
['text':' allowShardKeyUpdatesWithoutFullShardKeyInQuery ','line_number':820,'multiline':True]
['text':' We could have wrapped the FindAndModify command in an explain object','line_number':829,'multiline':False]
['text':' Catches errors in the given response, and reruns the command if necessary. Uses the given','line_number':839,'multiline':False]
['text':' response to construct the findAndModify command result passed to the client.','line_number':840,'multiline':False]
['text':' Command code traps this exception and re-runs','line_number':857,'multiline':False]
['text':' TODO SERVER-67429: Remove this branch.','line_number':870,'multiline':False]
['text':' Throw if a non-OK status is not because of any of the above errors.','line_number':896,'multiline':False]
['text':' First append the properly constructed writeConcernError. It will then be skipped in','line_number':899,'multiline':False]
['text':' appendElementsUnique.','line_number':900,'multiline':False]
['text':' Two-phase protocol to run a findAndModify command without a shard key or _id.','line_number':908,'multiline':False]
['text':' isExplain ','line_number':921,'multiline':True]
['text':' dbVersion ','line_number':922,'multiline':True]
['text':' shardVersion ','line_number':923,'multiline':True]
['text':' runTwoPhaseWriteProtocol returns an empty response when there are no matching documents','line_number':929,'multiline':False]
['text':' and {upsert: false}.','line_number':930,'multiline':False]
['text':' If runTwoPhaseWriteProtocol has a non-OK status, shardId will not be set, since we did not','line_number':932,'multiline':False]
['text':' successfully apply the operation on a shard.','line_number':933,'multiline':False]
['text':' n ','line_number':938,'multiline':True]
['text':' Extract findAndModify command result from the result of the two phase write protocol.','line_number':951,'multiline':False]
['text':' shardVersion ','line_number':954,'multiline':True]
['text':' dbVersion ','line_number':955,'multiline':True]
['text':' Two-phase protocol to run an explain for a findAndModify command without a shard key or _id.','line_number':964,'multiline':False]
['text':' isExplain ','line_number':974,'multiline':True]
['text':' dbVersion ','line_number':975,'multiline':True]
['text':' shardVersion ','line_number':976,'multiline':True]
['text':' allowShardKeyUpdatesWithoutFullShardKeyInQuery ','line_number':977,'multiline':True]
['text':' Explain currently cannot be run within a transaction, so each command is instead run','line_number':979,'multiline':False]
['text':' separately outside of a transaction, and we compose the results at the end.','line_number':980,'multiline':False]
['text':' Since 'explain' does not return the results of the query, we do not have an _id','line_number':991,'multiline':False]
['text':' document to target by from the 'Read Phase'. We instead will use a dummy _id','line_number':992,'multiline':False]
['text':' target document for the 'Write Phase'.','line_number':993,'multiline':False]
['text':' Command invocation to be used if a shard key is specified or the collection is unsharded.','line_number':1010,'multiline':False]
['text':' TODO SERVER-67429: Remove this function.','line_number':1063,'multiline':False]
['text':' Re-run the findAndModify command that will change the shard key value in a','line_number':1078,'multiline':False]
['text':' transaction. We call _runCommand or _runCommandWithoutShardKey recursively, and this','line_number':1079,'multiline':False]
['text':' second time through since it will be run as a transaction it will take the other code','line_number':1080,'multiline':False]
['text':' path to handleWouldChangeOwningShardErrorTransactionLegacy.  We ensure the retried','line_number':1081,'multiline':False]
['text':' operation does not include WC inside the transaction by stripping it from the','line_number':1082,'multiline':False]
['text':' cmdObj.  The transaction commit will still use the WC, because it uses the WC','line_number':1083,'multiline':False]
['text':' from the opCtx (which has been set previously in Strategy).','line_number':1084,'multiline':False]
['text':' isUpdateOrDelete ','line_number':1089,'multiline':True]
['text':' isExplain ','line_number':1108,'multiline':True]
['text':' allowShardKeyUpdatesWithoutFullShardKeyInQuery ','line_number':1109,'multiline':True]
['text':' Strip write concern because this command will be sent as part of a','line_number':1148,'multiline':False]
['text':' transaction and the write concern has already been loaded onto the opCtx and','line_number':1149,'multiline':False]
['text':' will be picked up by the transaction API.','line_number':1150,'multiline':False]
['text':' Strip runtime constants because they will be added again when this command is','line_number':1153,'multiline':False]
['text':' recursively sent through the service entry point.','line_number':1154,'multiline':False]
['text':' namespace mongo','line_number':1167,'multiline':False]
