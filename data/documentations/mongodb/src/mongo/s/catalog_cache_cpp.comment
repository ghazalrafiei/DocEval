['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':' How many times to try refreshing the routing info or the index info of a collection if the','line_number':97,'multiline':False]
['text':' information loaded from the config server is found to be inconsistent.','line_number':98,'multiline':False]
['text':' If a refresh doesn't find new information -> re-use the existing RoutingTableHistory','line_number':114,'multiline':False]
['text':' If we have routing info already and it's for the same collection, we're updating.','line_number':148,'multiline':False]
['text':' Otherwise, we are making a whole new routing table.','line_number':149,'multiline':False]
['text':' The collation should have been validated upon collection creation','line_number':162,'multiline':False]
['text':' A non-empty ShardingIndexesCatalogCache implies that the collection is sharded since','line_number':193,'multiline':False]
['text':' global indexes cannot be created on unsharded collections.','line_number':194,'multiline':False]
['text':' namespace','line_number':213,'multiline':False]
['text':' version ','line_number':237,'multiline':True]
['text':' Values created on two sides of a forced refresh sequence number are always','line_number':263,'multiline':False]
['text':' considered different','line_number':264,'multiline':False]
['text':' Only default constructed values have _forcedRefreshSequenceNum == 0 and','line_number':266,'multiline':False]
['text':' they are always equal','line_number':267,'multiline':False]
['text':' Relying on the boost::optional<DatabaseVersion>::operator== comparison','line_number':269,'multiline':False]
['text':' Values created on two sides of a forced refresh sequence number are always','line_number':275,'multiline':False]
['text':' considered different','line_number':276,'multiline':False]
['text':' Values created on two sides of a forced refresh sequence number are always','line_number':278,'multiline':False]
['text':' considered different','line_number':279,'multiline':False]
['text':' Only default constructed values have _forcedRefreshSequenceNum == 0 and','line_number':281,'multiline':False]
['text':' they are always equal','line_number':282,'multiline':False]
['text':' If both versions are valid we rely on the underlying DatabaseVersion comparison','line_number':284,'multiline':False]
['text':' Finally, we do a disambiguating sequence number comparison','line_number':288,'multiline':False]
['text':' The executor is used by all the caches that correspond to the router role, so it must be','line_number':308,'multiline':False]
['text':' joined before these caches are destroyed, per the contract of ReadThroughCache.','line_number':309,'multiline':False]
['text':' When allowLocks is true we may be holding a lock, so we don't want to block the','line_number':343,'multiline':False]
['text':' current thread: if the future is ready let's use it, otherwise return an error.','line_number':344,'multiline':False]
['text':' This error only contains the database name and must be handled by any callers of','line_number':348,'multiline':False]
['text':' _getDatabase with the potential for allowLocks to be true. The caller should','line_number':349,'multiline':False]
['text':' convert this to ErrorCodes::ShardCannotRefreshDueToLocksHeld with the full','line_number':350,'multiline':False]
['text':' namespace.','line_number':351,'multiline':False]
['text':' From this point we can guarantee that allowLocks is false.','line_number':357,'multiline':False]
['text':' Since collection refreshes always imply database refreshes, it is ok to transform','line_number':384,'multiline':False]
['text':' this error into a collection error rather than a database error.','line_number':385,'multiline':False]
['text':' When allowLocks is true we may be holding a lock, so we don't','line_number':422,'multiline':False]
['text':' want to block the current thread: if the future is ready let's','line_number':423,'multiline':False]
['text':' use it, otherwise return an error','line_number':424,'multiline':False]
['text':' From this point we can guarantee that allowLocks is false','line_number':438,'multiline':False]
['text':' If the collection is unsharded, it cannot have global indexes so there is no need to','line_number':486,'multiline':False]
['text':' fetch the index information.','line_number':487,'multiline':False]
['text':' If the collection is unsharded, it cannot have global indexes so there is no need to','line_number':504,'multiline':False]
['text':' fetch the index information.','line_number':505,'multiline':False]
['text':' (Ignore FCV check): It is okay to ignore FCV in mongos. This is a temporary solution to solve','line_number':529,'multiline':False]
['text':' performance issue when fetching index information in mongos.','line_number':530,'multiline':False]
['text':' Since collection refreshes always imply database refreshes, it is ok to transform','line_number':546,'multiline':False]
['text':' this error into a collection error rather than a database error.','line_number':547,'multiline':False]
['text':' When allowLocks is true we may be holding a lock, so we don't','line_number':581,'multiline':False]
['text':' want to block the current thread: if the future is ready let's','line_number':582,'multiline':False]
['text':' use it, otherwise return an error','line_number':583,'multiline':False]
['text':' From this point we can guarantee that allowLocks is false','line_number':590,'multiline':False]
['text':' Shards marked stale will be reset on the next refresh.','line_number':791,'multiline':False]
['text':' We can mark the shard stale only if the time advanced, otherwise no refresh would happen','line_number':792,'multiline':False]
['text':' and the shard will remain marked stale.','line_number':793,'multiline':False]
['text':' Even if a concurrent refresh is happening this is still the old collectionEntry,','line_number':794,'multiline':False]
['text':' so it is safe to call setShardStale.','line_number':795,'multiline':False]
['text':' Invalidate collections which contain data on this shard.','line_number':809,'multiline':False]
['text':' (Ignore FCV check): It is okay to ignore FCV in mongos.','line_number':869,'multiline':False]
['text':' TODO (SERVER-34164): Track and increment stats for database refreshes','line_number':906,'multiline':False]
['text':' This object will define the new time of the database info obtained by this refresh','line_number':910,'multiline':False]
['text':' This object will define the new time of the routing info obtained by this refresh','line_number':1003,'multiline':False]
['text':' Check that the shards all match with what is on the config server','line_number':1027,'multiline':False]
['text':' The log below is logged at debug(0) (equivalent to info level) only if the new placement','line_number':1039,'multiline':False]
['text':' version is different than the one we already had (if any).','line_number':1040,'multiline':False]
['text':' This object will define the new time of the index info obtained by this refresh','line_number':1098,'multiline':False]
['text':' namespace mongo','line_number':1156,'multiline':False]
