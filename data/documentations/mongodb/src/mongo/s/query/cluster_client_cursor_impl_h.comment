['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':'*
     * Constructs a cluster query plan and CCC from the given parameters whose safe cleanup is
     * ensured by an RAII object.
     ','line_number':69,'multiline':True]
['text':'*
     * Constructs a CCC from the given execution tree 'root'. The CCC's safe cleanup is ensured by
     * an RAII object.
     ','line_number':77,'multiline':True]
['text':'*
     * Constructs a CCC whose result set is generated by a mock execution stage.
     ','line_number':145,'multiline':True]
['text':'*
     * Constructs a cluster client cursor.
     ','line_number':153,'multiline':True]
['text':'*
     * Constructs the pipeline of MergerPlanStages which will be used to answer the query.
     ','line_number':164,'multiline':True]
['text':' Number of documents already returned by next().','line_number':174,'multiline':False]
['text':' The root stage of the pipeline used to return the result set, merged from the remote nodes.','line_number':177,'multiline':False]
['text':' Stores documents queued by queueResult(). BSONObjs within the stashed results must be owned.','line_number':180,'multiline':False]
['text':' Stores the logical session id for this cursor.','line_number':183,'multiline':False]
['text':' The OperationContext that we're executing within. This can be updated if necessary by using','line_number':186,'multiline':False]
['text':' detachFromOperationContext() and reattachToOperationContext().','line_number':187,'multiline':False]
['text':' The time the cursor was created.','line_number':190,'multiline':False]
['text':' The time when the cursor was last unpinned, i.e. the end of the last getMore.','line_number':193,'multiline':False]
['text':' The hash of the query shape to be used for slow query logging;','line_number':196,'multiline':False]
['text':' Whether ClusterClientCursor::next() was interrupted due to MaxTimeMSExpired.','line_number':199,'multiline':False]
['text':' Whether to omit information about the getmore that uses this cursor from currentop and the','line_number':202,'multiline':False]
['text':' profiler.','line_number':203,'multiline':False]
['text':' If boost::none, queryStats should not be collected for this cursor.','line_number':206,'multiline':False]
['text':' The Key used by query stats to generate the query stats store key.','line_number':209,'multiline':False]
['text':' Tracks if kill() has been called on the cursor. Multiple calls to kill() is an error.','line_number':212,'multiline':False]
['text':' namespace mongo','line_number':216,'multiline':False]
