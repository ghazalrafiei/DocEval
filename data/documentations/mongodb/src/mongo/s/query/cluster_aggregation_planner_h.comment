['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':'*
 * Builds a ClusterClientCursor which will execute 'pipeline'. If 'pipeline' consists entirely of
 * $skip and $limit stages, the pipeline is eliminated entirely and replaced with a RouterExecStage
 * tree that does same thing but will avoid using a RouterStagePipeline. Avoiding a
 * RouterStagePipeline will remove an expensive conversion from BSONObj -> Document for each result.
 ','line_number':64,'multiline':True]
['text':'*
 *  Returns the collation for aggregation targeting 'nss' with the following semantics:
 *  - Return 'collation' if the aggregation is collectionless.
 *  - If 'nss' is tracked, we return 'collation' if it is non-empty. If it is empty, we return the
 * collection default collation if there is one and the simple collation otherwise.
 *  - If 'nss' is untracked, we return an empty BSONObj as we will infer the correct collation when
 * the command reaches the primary shard. The exception is when
 * 'requiresCollationForParsingUnshardedAggregate' is true: in this case, we must contact the
 * primary shard to infer the collation as it is required during parsing.
 *
 *  TODO SERVER-81991: Delete 'requiresCollationForParsingUnshardedAggregate' parameter once all
 * unsharded collections are tracked in the sharding catalog as unsplittable along with their
 * collation.
 ','line_number':74,'multiline':True]
['text':'*
 * This structure contains information for targeting an aggregation pipeline in a sharded cluster.
 ','line_number':94,'multiline':True]
['text':'*
     * Populates and returns targeting info for an aggregation pipeline on the given namespace
     * 'executionNss'.
     ','line_number':98,'multiline':True]
['text':'*
 * Runs a pipeline on mongoS, having first validated that it is eligible to do so. This can be a
 * pipeline which is split for merging, or an intact pipeline which must run entirely on mongoS.
 ','line_number':119,'multiline':True]
['text':'*
 * Dispatches the pipeline in 'targeter' to the shards that are involved, and merges the results if
 * necessary on either mongos or a randomly designated shard. If 'eligibleForSampling' is true,
 * attaches a unique sample id to the request for one of the targeted shards if the collection has
 * query sampling enabled and the rate-limited sampler successfully generates a sample id for it.
 ','line_number':129,'multiline':True]
['text':'*
 * Runs a pipeline on a specific shard. Used for running a pipeline on a specifc shard (i.e. by per
 * shard $changeStream cursors). This function will not add a shard version to the request sent to
 * mongod. If 'eligibleForSampling' is true, attaches a unique sample id to the request for that
 * shard if the collection has query sampling enabled and the rate-limited sampler successfully
 * generates a sample id for it.
 ','line_number':145,'multiline':True]
['text':' namespace cluster_aggregation_planner','line_number':161,'multiline':False]
['text':' namespace mongo','line_number':162,'multiline':False]
