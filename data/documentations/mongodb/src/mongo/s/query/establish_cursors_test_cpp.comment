['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':' IWYU pragma: no_include "cxxabi.h"','line_number':32,'multiline':False]
['text':' IWYU pragma: no_include "ext/alloc_traits.h"','line_number':33,'multiline':False]
['text':'*
     * Mock a response for a killOperations command.
     ','line_number':125,'multiline':True]
['text':' Targeters are owned by the factory.','line_number':152,'multiline':False]
['text':' allowPartialResults','line_number':162,'multiline':False]
['text':' allowPartialResults','line_number':178,'multiline':False]
['text':' Remote responds.','line_number':182,'multiline':False]
['text':' allowPartialResults','line_number':209,'multiline':False]
['text':' providedOpKeys','line_number':211,'multiline':False]
['text':' Remote responds.','line_number':217,'multiline':False]
['text':' allowPartialResults','line_number':239,'multiline':False]
['text':' Remote responds with non-retriable error.','line_number':243,'multiline':False]
['text':' allowPartialResults','line_number':264,'multiline':False]
['text':' Now that our "remote" has received the request, interrupt the opCtx which the cursor is','line_number':276,'multiline':False]
['text':' running under.','line_number':277,'multiline':False]
['text':' Wait for the kill to take since there is a race between response and kill.','line_number':284,'multiline':False]
['text':' We were interrupted so establishCursors is forced to send a killOperations out of paranoia.','line_number':291,'multiline':False]
['text':' A non-retriable error is not ignored even though allowPartialResults is true.','line_number':302,'multiline':False]
['text':' allowPartialResults','line_number':308,'multiline':False]
['text':' Remote responds with non-retriable error.','line_number':312,'multiline':False]
['text':' allowPartialResults','line_number':330,'multiline':False]
['text':' Remote responds with retriable error.','line_number':334,'multiline':False]
['text':' Remote responds with success.','line_number':340,'multiline':False]
['text':' allowPartialResults','line_number':362,'multiline':False]
['text':' Remote responds with retriable error.','line_number':366,'multiline':False]
['text':' We still retry up to the max retries, even if allowPartialResults is true.','line_number':372,'multiline':False]
['text':' Remote responds with success.','line_number':373,'multiline':False]
['text':' allowPartialResults','line_number':395,'multiline':False]
['text':' Remote repeatedly responds with retriable errors.','line_number':399,'multiline':False]
['text':' Expect a killOperations for the remote which was not reachable.','line_number':407,'multiline':False]
['text':' allowPartialResults','line_number':423,'multiline':False]
['text':' Failure to establish a cursor due to maxing out retriable errors on one remote (in this','line_number':425,'multiline':False]
['text':' case, the only remote) was ignored, since allowPartialResults is true. The cursor entry','line_number':426,'multiline':False]
['text':' is marked as 'partialResultReturned:true', with a CursorId of 0 and no HostAndPort.','line_number':427,'multiline':False]
['text':' Remote repeatedly responds with retriable errors.','line_number':435,'multiline':False]
['text':' allowPartialResults','line_number':457,'multiline':False]
['text':' All remotes respond with success.','line_number':461,'multiline':False]
['text':' allowPartialResults','line_number':486,'multiline':False]
['text':' First remote responds with success.','line_number':490,'multiline':False]
['text':' Second remote responds with a non-retriable error.','line_number':503,'multiline':False]
['text':' All commands receive the same opKey.','line_number':507,'multiline':False]
['text':' Third remote responds with success (must give some response to mock network for each remote).','line_number':515,'multiline':False]
['text':' All commands receive the same opKey.','line_number':519,'multiline':False]
['text':' Expect two killOperation commands, one for each remote which responded with a cursor.','line_number':529,'multiline':False]
['text':' allowPartialResults','line_number':555,'multiline':False]
['text':' First remote responds with success.','line_number':561,'multiline':False]
['text':' All commands use the opKey they were given.','line_number':565,'multiline':False]
['text':' Second remote responds with a non-retriable error.','line_number':576,'multiline':False]
['text':' All commands use the opKey they were given.','line_number':580,'multiline':False]
['text':' Third remote responds with success (must give some response to mock network for each remote).','line_number':589,'multiline':False]
['text':' All commands use the opKey they were given.','line_number':593,'multiline':False]
['text':' Expect two killOperation commands, one for each remote which responded with a cursor. Both','line_number':604,'multiline':False]
['text':' should include all provided opKeys.','line_number':605,'multiline':False]
['text':' Failure is reported even though allowPartialResults was true.','line_number':618,'multiline':False]
['text':' allowPartialResults','line_number':624,'multiline':False]
['text':' First remote responds with success.','line_number':628,'multiline':False]
['text':' Second remote responds with a non-retriable error.','line_number':637,'multiline':False]
['text':' Third remote responds with success (must give some response to mock network for each remote).','line_number':643,'multiline':False]
['text':' Expect two killOperation commands, one for each remote which responded with a cursor.','line_number':652,'multiline':False]
['text':' allowPartialResults','line_number':669,'multiline':False]
['text':' First remote responds with success.','line_number':673,'multiline':False]
['text':' Second remote responds with a retriable error.','line_number':682,'multiline':False]
['text':' Third remote responds with success.','line_number':688,'multiline':False]
['text':' Second remote responds with success on retry.','line_number':697,'multiline':False]
['text':' allowPartialResults','line_number':721,'multiline':False]
['text':' We still retry up to the max retries, even if allowPartialResults is true.','line_number':722,'multiline':False]
['text':' First remote responds with success.','line_number':725,'multiline':False]
['text':' Second remote responds with a retriable error.','line_number':734,'multiline':False]
['text':' Third remote responds with success.','line_number':740,'multiline':False]
['text':' Second remote responds with success on retry.','line_number':749,'multiline':False]
['text':' allowPartialResults','line_number':772,'multiline':False]
['text':' First remote responds with success.','line_number':776,'multiline':False]
['text':' Second remote responds with a retriable error.','line_number':785,'multiline':False]
['text':' Third remote responds with success.','line_number':791,'multiline':False]
['text':' Second remote maxes out remaining retries.','line_number':800,'multiline':False]
['text':' Expect two killOperation commands, one for each remote which responded with a cursor.','line_number':808,'multiline':False]
['text':' allowPartialResults','line_number':825,'multiline':False]
['text':' Failure to establish a cursor due to maxing out retriable errors on one remote was','line_number':826,'multiline':False]
['text':' ignored, since allowPartialResults is true. The cursor entry for that shard is marked','line_number':827,'multiline':False]
['text':' 'partialResultReturned:true', with a CursorId of 0 and no HostAndPort.','line_number':828,'multiline':False]
['text':' First remote responds with success.','line_number':839,'multiline':False]
['text':' Second remote responds with a retriable error.','line_number':848,'multiline':False]
['text':' Third remote responds with success.','line_number':854,'multiline':False]
['text':' Second remote maxes out remaining retries.','line_number':863,'multiline':False]
['text':' Failure to establish a cursor due to maxing out retriable errors on all three remotes','line_number':879,'multiline':False]
['text':' returns an error, despite allowPartialResults being true.','line_number':880,'multiline':False]
['text':' allowPartialResults','line_number':887,'multiline':False]
['text':' allowPartialResults is true so ignore the fact that all remotes will haved failed','line_number':888,'multiline':False]
['text':' to establish a cursor due to maxing out retriable errors. The cursor entry','line_number':889,'multiline':False]
['text':' is marked as 'partialResultReturned:true', with a CursorId of 0 and no HostAndPort.','line_number':890,'multiline':False]
['text':' All remotes always respond with retriable errors.','line_number':899,'multiline':False]
['text':' Hang in ARS::next when there is exactly 1 remote that hasn't replied yet.','line_number':920,'multiline':False]
['text':' This failpoint is important to ensure establishCursors' check for _interruptStatus.isOK()','line_number':921,'multiline':False]
['text':' happens after this unittest does opCtx->killOperation().','line_number':922,'multiline':False]
['text':' allowPartialResults','line_number':934,'multiline':False]
['text':' First remote responds.','line_number':938,'multiline':False]
['text':' Wait until we hit the hangBeforePollResponse failpoint with remotesLeft 1.','line_number':946,'multiline':False]
['text':' This ensures the first response has been processed.','line_number':947,'multiline':False]
['text':' Now allow the thread calling ARS::next to continue.','line_number':949,'multiline':False]
['text':' Now we're processing the request for the second remote. Kill the opCtx','line_number':952,'multiline':False]
['text':' instead of responding.','line_number':953,'multiline':False]
['text':' Wait until the kill takes.','line_number':959,'multiline':False]
['text':' Now ARS::next should check that the opCtx has been marked killed, and return a','line_number':964,'multiline':False]
['text':' failing response to establishCursors, which should clean up by sending kill commands.','line_number':965,'multiline':False]
['text':' namespace','line_number':971,'multiline':False]
['text':' namespace mongo','line_number':973,'multiline':False]
