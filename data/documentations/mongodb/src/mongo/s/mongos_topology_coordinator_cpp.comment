['text':'*
 *    Copyright (C) 2020-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':' IWYU pragma: keep','line_number':41,'multiline':False]
['text':'*
 * Generate an identifier unique to this instance.
 ','line_number':74,'multiline':True]
['text':' Signals that a hello request has started waiting.','line_number':83,'multiline':False]
['text':' Awaitable hello requests with the proper topologyVersions are expected to wait for','line_number':85,'multiline':False]
['text':' maxAwaitTimeMS on mongos. When set, this failpoint will hang right before waiting on a','line_number':86,'multiline':False]
['text':' topology change.','line_number':87,'multiline':False]
['text':' Failpoint for hanging during quiesce mode on mongos.','line_number':89,'multiline':False]
['text':' Simulates returning a specified error in the hello response.','line_number':91,'multiline':False]
['text':'*
 * ShutdownInProgress error message
 ','line_number':106,'multiline':True]
['text':' namespace','line_number':113,'multiline':False]
['text':' Make MongosTopologyCoordinator a decoration on the ServiceContext.','line_number':115,'multiline':False]
['text':' Turn remainingQuiesceTimeMillis into an int64 so that it's a supported BSONElement.','line_number':129,'multiline':False]
['text':' It's possible for us to transition to Quiesce Mode after a hello request timed out.','line_number':136,'multiline':False]
['text':' Check that we are not in Quiesce Mode before returning a response to avoid responding with','line_number':137,'multiline':False]
['text':' a higher topology version, but no indication that we are shutting down.','line_number':138,'multiline':False]
['text':' Fail all new hello requests with ShutdownInProgress if we've transitioned to Quiesce','line_number':153,'multiline':False]
['text':' Mode.','line_number':154,'multiline':False]
['text':' Respond immediately if:','line_number':159,'multiline':False]
['text':' (1) There is no clientTopologyVersion, which indicates that the client is not using','line_number':160,'multiline':False]
['text':'     awaitable hello.','line_number':161,'multiline':False]
['text':' (2) The process IDs are different.','line_number':162,'multiline':False]
['text':' (3) The clientTopologyVersion counter is less than mongos' counter.','line_number':163,'multiline':False]
['text':' At this point, we have verified that clientTopologyVersion is not none. It this is true,','line_number':177,'multiline':False]
['text':' deadline must also be not none.','line_number':178,'multiline':False]
['text':' Used in tests that wait for this failpoint to be entered before shutting down mongos,','line_number':185,'multiline':False]
['text':' which is the only action that triggers a topology change.','line_number':186,'multiline':False]
['text':' Wait for a mongos topology change with timeout set to deadline.','line_number':195,'multiline':False]
['text':' We decrement the counter on most errors. Note that some errors may already be covered','line_number':219,'multiline':False]
['text':' by calls to resetNumAwaitingTopologyChanges(), which sets the counter to zero, so we','line_number':220,'multiline':False]
['text':' only decrement non-zero counters. This is safe so long as:','line_number':221,'multiline':False]
['text':' 1) Increment + decrement calls always occur at a 1:1 ratio and in that order.','line_number':222,'multiline':False]
['text':' 2) All callers to increment/decrement/reset take locks.','line_number':223,'multiline':False]
['text':' Return a MongosHelloResponse with the current topology version on timeout when','line_number':230,'multiline':False]
['text':' waiting for a topology change.','line_number':231,'multiline':False]
['text':' A topology change has happened so we return a MongosHelloResponse with the updated','line_number':237,'multiline':False]
['text':' topology version.','line_number':238,'multiline':False]
['text':' Increment the topology version and respond to any waiting hello request with an error.','line_number':250,'multiline':False]
['text':' Reset counter to 0 since we will respond to all waiting hello requests with an error.','line_number':257,'multiline':False]
['text':' All new hello requests will immediately fail with ShutdownInProgress.','line_number':258,'multiline':False]
['text':' namespace mongo','line_number':272,'multiline':False]
