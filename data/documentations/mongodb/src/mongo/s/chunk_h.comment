['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':'*
 * Represents a cache entry for a single Chunk. Owned by a RoutingTableHistory.
 ','line_number':47,'multiline':True]
['text':' Comparing keystrings is more performant than comparing BSONObj','line_number':74,'multiline':False]
['text':'*
     * Throws MigrationConflict if the history entry valid for the given timestamp is not the most
     * recent entry (meaning the chunk has moved).
     *
     * Throws StaleChunkHistory if no history entry is valid for the given timestamp.
     ','line_number':90,'multiline':True]
['text':'*
     * Returns a string represenation of the chunk for logging.
     ','line_number':110,'multiline':True]
['text':' Returns true if this chunk contains the given shard key, and false otherwise','line_number':115,'multiline':False]
['text':'','line_number':116,'multiline':False]
['text':' Note: this function takes an extracted *key*, not an original document (the point may be','line_number':117,'multiline':False]
['text':' computed by, say, hashing a given field or projecting to a subset of fields).','line_number':118,'multiline':False]
['text':'*
     * Marks this chunk as jumbo. Only moves from false to true once and is used by the balancer.
     ','line_number':121,'multiline':True]
['text':' Indicates whether this chunk should be treated as jumbo and not attempted to be moved or','line_number':136,'multiline':False]
['text':' split','line_number':137,'multiline':False]
['text':'*
     * Throws MigrationConflict if the history entry valid for the chunk's pinned cluster time, if
     * it has one, is not the most recent entry (meaning the chunk has moved).
     *
     * Throws StaleChunkHistory if no history entry is valid for the chunk's cluster time.
     ','line_number':164,'multiline':True]
['text':'*
     * Returns a string represenation of the chunk for logging.
     ','line_number':184,'multiline':True]
['text':' Returns true if this chunk contains the given shard key, and false otherwise','line_number':191,'multiline':False]
['text':'','line_number':192,'multiline':False]
['text':' Note: this function takes an extracted *key*, not an original document (the point may be','line_number':193,'multiline':False]
['text':' computed by, say, hashing a given field or projecting to a subset of fields).','line_number':194,'multiline':False]
['text':'*
     * Marks this chunk as jumbo. Only moves from false to true once and is used by the balancer.
     ','line_number':199,'multiline':True]
['text':' namespace mongo','line_number':211,'multiline':False]
