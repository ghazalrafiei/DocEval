['text':'*
 *    Copyright (C) 2022-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':'*
 * Shard targeter resolves to the correct underlying HostAndPort.
 ','line_number':123,'multiline':True]
['text':'*
 * Shard targeter correctly throws ShardNotFound when provided with an invalid ShardId.
 ','line_number':135,'multiline':True]
['text':' Mock the response to the cache refresh request to the config shard.','line_number':145,'multiline':False]
['text':'*
 * getShard correctly returns the Shard when provided with ShardId that is not in the intial cache.
 ','line_number':164,'multiline':True]
['text':' Mock the response to the cache refresh request to the config shard.','line_number':174,'multiline':False]
['text':'*
 * When onRemoteCommandError is called, the shard targeter updates its view of the underlying
 * topology correctly.
 ','line_number':193,'multiline':True]
['text':' We must call resolve before calling onRemoteCommandError','line_number':201,'multiline':False]
['text':'*
 * When onRemoteCommandError is called, the targeter updates its view of the underlying topology
 * correctly and the resolver receives those changes.
 ','line_number':218,'multiline':True]
['text':' We must call resolve before calling onRemoteCommandError','line_number':226,'multiline':False]
['text':' Mark down a host and ensure that it has been noted as marked down.','line_number':229,'multiline':False]
['text':' Remove that host from the vector of targets and set that new vector as the return value of','line_number':240,'multiline':False]
['text':' findHosts.','line_number':241,'multiline':False]
['text':' Check that the resolve function has been updated accordingly.','line_number':246,'multiline':False]
['text':'*
 * ShardId is removed from the shard registry in between call to resolve and onRemoteCommandError.
 * No error is thrown from this scenario.
 ','line_number':251,'multiline':True]
['text':' Pretend we are inside the sendCommand() function.','line_number':259,'multiline':False]
['text':' We resolve for the first time and get a host.','line_number':261,'multiline':False]
['text':' We will send the command through scheduleRemoteCommand.','line_number':266,'multiline':False]
['text':' In the meantime, the shard we were targeting is removed.','line_number':268,'multiline':False]
['text':' We get an error response e from the scheduleRemoteCommandFunction, so we are going to call','line_number':272,'multiline':False]
['text':' onRemoteCommandError, which now uses the cached shard.','line_number':273,'multiline':False]
['text':' onRemoteCommandError does not throw-- now sendCommand() will be able to propagate e or','line_number':277,'multiline':False]
['text':' re-resolve','line_number':278,'multiline':False]
['text':' Mock the response to the cache refresh request to the config shard.','line_number':284,'multiline':False]
['text':'*
 * Make sure that we cannot call onRemoteCommandError before calling resolve.
 ','line_number':303,'multiline':True]
['text':'*
 * Test ShardId overload version of 'sendCommand'.
 ','line_number':314,'multiline':True]
['text':' CursorResponse toBSON method adds an 'ok' field, which is omitted in async_rpc','line_number':341,'multiline':False]
['text':' namespace','line_number':348,'multiline':False]
['text':' namespace async_rpc','line_number':349,'multiline':False]
['text':' namespace mongo','line_number':350,'multiline':False]
