['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':' namespace','line_number':94,'multiline':False]
['text':' cacheSize ','line_number':121,'multiline':True]
['text':' The creation of the config shard object will intialize the associated RSM monitor that in
     * turn will call ShardRegistry::updateReplSetHosts(). Hence the config shard object MUST be
     * created after the ShardRegistry is fully constructed. This is why `_configShardData`
     * is initialized here rather than in the ShardRegistry constructor.
     ','line_number':137,'multiline':True]
['text':' This function can potentially block for a long time on network activity, so holding of locks','line_number':162,'multiline':False]
['text':' is disallowed.','line_number':163,'multiline':False]
['text':' Check if we need to refresh from the configsvrs.  If so, then do that and get the results,','line_number':179,'multiline':False]
['text':' otherwise (this is a lookup only to incorporate updated connection strings from the RSM),','line_number':180,'multiline':False]
['text':' then get the equivalent values from the previously cached data.','line_number':181,'multiline':False]
['text':' Always apply the latest conn strings.','line_number':203,'multiline':False]
['text':' Remove RSMs that are not in the catalog any more.','line_number':217,'multiline':False]
['text':' Don't remove the config shard's RSM because it is used to target the config server.','line_number':225,'multiline':False]
['text':' Run callbacks asynchronously.','line_number':230,'multiline':False]
['text':' startupPeriodicReloader() must be called only once','line_number':246,'multiline':False]
['text':' construct task executor','line_number':252,'multiline':False]
['text':' Continue until the _executor will shutdown','line_number':271,'multiline':False]
['text':' This call is optional.','line_number':274,'multiline':False]
['text':' Note this should only throw if the local node has not learned its replica set config yet.','line_number':312,'multiline':False]
['text':' First check if this is a non config shard lookup','line_number':319,'multiline':False]
['text':' This call will may be blocking if there is an ongoing or a need of a cache rebuild','line_number':320,'multiline':False]
['text':' then check if this is a config shard (this call is blocking in any case)','line_number':325,'multiline':False]
['text':' Reload and try again if the shard was not in the registry','line_number':333,'multiline':False]
['text':' Fetch the shard registry data associated to the latest known topology time','line_number':345,'multiline':False]
['text':' First check if this is a non config shard lookup','line_number':349,'multiline':False]
['text':' then check if this is a config shard (this call is blocking in any case)','line_number':354,'multiline':False]
['text':' If the shard was not found, force reload the shard regitry data and try again.','line_number':362,'multiline':False]
['text':'','line_number':363,'multiline':False]
['text':' This is to cover the following scenario:','line_number':364,'multiline':False]
['text':' 1. Primary of the replicaset fetch the list of shards and store it on disk','line_number':365,'multiline':False]
['text':' 2. Primary crash before the latest VectorClock topology time is majority written to','line_number':366,'multiline':False]
['text':'    disk','line_number':367,'multiline':False]
['text':' 3. A new primary with a stale ShardRegistry is elected and read the set of shards','line_number':368,'multiline':False]
['text':'    from disk and calls ShardRegistry::getShard','line_number':369,'multiline':False]
['text':' For dbtests','line_number':412,'multiline':False]
['text':' Schedule a lookup, to incorporate the new connection string.','line_number':451,'multiline':False]
['text':' Make the next acquire do a lookup.','line_number':487,'multiline':False]
['text':' Force it to actually happen now.','line_number':491,'multiline':False]
['text':' TODO(SERVER-74658): Please revisit if this thread could be made killable.','line_number':506,'multiline':False]
['text':' Specify the config version in the filter and the update to prevent overwriting a','line_number':542,'multiline':False]
['text':' newer connection string when there are concurrent updates.','line_number':543,'multiline':False]
['text':' upsert ','line_number':555,'multiline':True]
['text':' Stop if the update succeeds or if this node is no longer the primary since the new','line_number':568,'multiline':False]
['text':' primary will issue this update anyway.','line_number':569,'multiline':False]
['text':' Update the time the cache should be aiming for.','line_number':578,'multiline':False]
['text':' The topologyTime should be advanced to the gossiped topologyTime.','line_number':580,'multiline':False]
['text':' TODO SERVER-50206: Remove usage of these non-causally consistent accessors.','line_number':598,'multiline':False]
['text':' First check if this is a config shard lookup.','line_number':605,'multiline':False]
['text':' Lookup can succeed now that the registry has a real config shard, so schedule one right away.','line_number':650,'multiline':False]
['text':'//////////// ShardRegistryData //////////////////','line_number':654,'multiline':False]
['text':' Ensure targeter exists for all shards and take shard connection string from the targeter.','line_number':679,'multiline':False]
['text':' Do this before re-taking the mutex to avoid deadlock with the ReplicaSetMonitor updating','line_number':680,'multiline':False]
['text':' hosts for a given shard.','line_number':681,'multiline':False]
['text':' This validation should ideally go inside the ShardType::validate call. However, doing','line_number':685,'multiline':False]
['text':' it there would prevent us from loading previously faulty shard hosts, which might have','line_number':686,'multiline':False]
['text':' been stored (i.e., the entire getAllShards call would fail).','line_number':687,'multiline':False]
['text':' For connstrings and hosts, prefer values from alreadyCachedData to whatever might have been','line_number':718,'multiline':False]
['text':' fetched from the configsvrs.','line_number':719,'multiline':False]
['text':' Find the shards that are no longer present.','line_number':730,'multiline':False]
['text':' kCustom connection strings (ie "$dummy:10000) become DBDirectClient connections which','line_number':844,'multiline':False]
['text':' always return "localhost" as their response to getServerAddress().  This is just for','line_number':845,'multiline':False]
['text':' making dbtest work.','line_number':846,'multiline':False]
['text':' namespace mongo','line_number':922,'multiline':False]
