['text':'*
 *    Copyright (C) 2021-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':' namespace','line_number':70,'multiline':False]
['text':' There can be at most one double colon in our address. Split on the first','line_number':142,'multiline':False]
['text':' one and validate neither half has another implicitly.','line_number':143,'multiline':False]
['text':' namespace proxy_protocol_details','line_number':169,'multiline':False]
['text':' Interprets the first sizeof(T) bytes of data as a T and returns it, advancing the data cursor','line_number':173,'multiline':False]
['text':' by the same amount. Does not account for endianness of the data buffer.','line_number':174,'multiline':False]
['text':' Scan the buffer for a newline and prepare an output buffer which begins just past','line_number':196,'multiline':False]
['text':' the line.','line_number':197,'multiline':False]
['text':' If we couldn't find a newline sequence, then fail if there cannot be enough room','line_number':204,'multiline':False]
['text':' for one to appear in the future.','line_number':205,'multiline':False]
['text':' If we could, then fail if the sequence doesn't occur within the maximum line length.','line_number':211,'multiline':False]
['text':' Prepare a result buffer pointing to just after the crlf sequence.','line_number':217,'multiline':False]
['text':' The remainder of the string should now tokenize into four substrings:','line_number':238,'multiline':False]
['text':' srcAddr dstAddr srcPort dstPort','line_number':239,'multiline':False]
['text':' SockAddr can throw on construction if the address passed in is malformed.','line_number':275,'multiline':False]
['text':' Since this string contains a null, it's critical we use a literal here.','line_number':282,'multiline':False]
['text':' The high nibble must be 2 (version 2) and the low nibble must be either 0 or 1 (local or','line_number':294,'multiline':False]
['text':' remote).','line_number':295,'multiline':False]
['text':' Discard the family if this is a local connection.','line_number':312,'multiline':False]
['text':' If protocol is unspecified, we should also ignore address information.','line_number':339,'multiline':False]
['text':' Prepare an output buffer that skips past the end of the header.','line_number':351,'multiline':False]
['text':' We'll assign this to the buffer if we fully succeed in parsing the header.','line_number':352,'multiline':False]
['text':' The proxy protocol allocates 12 bytes to represent a pair of IPv4 addresses','line_number':359,'multiline':False]
['text':' along with their ports.','line_number':360,'multiline':False]
['text':' These are specified by the protocol to be in network byte order, which','line_number':370,'multiline':False]
['text':' is what sin_addr/sin_port expect, so we copy them directly.','line_number':371,'multiline':False]
['text':' The proxy protocol allocates 36 bytes to represent a pair of IPv6 addresses','line_number':381,'multiline':False]
['text':' along with their ports.','line_number':382,'multiline':False]
['text':' These are specified by the protocol to be in network byte order, which','line_number':392,'multiline':False]
['text':' is what sin_addr/sin_port expect, so we copy them directly.','line_number':393,'multiline':False]
['text':' The proxy protocol allocates 216 bytes to represent a pair of UNIX address,','line_number':403,'multiline':False]
['text':' but we don't assert type sizes here because some platforms don't support','line_number':404,'multiline':False]
['text':' UNIX addresses of this length - they are checked in parseSockAddrUn.','line_number':405,'multiline':False]
['text':' namespace','line_number':430,'multiline':False]
['text':' Check if the buffer presented is V1, V2, or neither.','line_number':433,'multiline':False]
['text':' namespace mongo::transport','line_number':459,'multiline':False]
