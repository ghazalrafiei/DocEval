['text':'*
 *    Copyright (C) 2023-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':' The channel pool mock factory functions don't currently honor timeouts, so we use this to','line_number':56,'multiline':False]
['text':' signal in tests that they should not expect timeout behavior.','line_number':57,'multiline':False]
['text':' Create a new stub and immediately discard it. This should internally create a new','line_number':134,'multiline':False]
['text':' channel to `SomeHost:123`.','line_number':135,'multiline':False]
['text':' Advance time before destroying `stub` to update the last-used-time for the channel. The','line_number':148,'multiline':False]
['text':' stub, which is the only active user of its channel, is removed as we leave this scope.','line_number':149,'multiline':False]
['text':' Create a new stub and immediately discard it. This creates a new channel to `remoteB`.','line_number':161,'multiline':False]
['text':' Verifying that remoteA's channel remains open.','line_number':168,'multiline':False]
['text':' Each iteration results in creating a new channel, targeting "FakeHost:(123 + i)".','line_number':176,'multiline':False]
['text':' Must be fatal.','line_number':191,'multiline':False]
['text':' At this point, `worker` is blocked on the creation of a new channel, which should have','line_number':207,'multiline':False]
['text':' already been added to the list of open channels.','line_number':208,'multiline':False]
['text':' We create this one first, which should also create the underlying channel.','line_number':220,'multiline':False]
['text':' This one is created second, which should reuse the created channel.','line_number':225,'multiline':False]
['text':' `channelCreator` is now blocked in the factory function for creating new channels.','line_number':238,'multiline':False]
['text':' `channelUser` can now go ahead with creating `stub2`, but it should wait for','line_number':240,'multiline':False]
['text':' `channelCreator` to return from creating the new channel.','line_number':241,'multiline':False]
['text':' namespace','line_number':247,'multiline':False]
['text':' namespace mongo::transport::grpc','line_number':248,'multiline':False]
