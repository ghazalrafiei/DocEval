['text':'*
 *    Copyright (C) 2023-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':'*
 * A bidirectional channel with two ends. Each end constitutes a single producer and a single
 * consumer.
 *
 * The "left" and "right" ends of the pipe have identical capabilities.
 ','line_number':42,'multiline':True]
['text':'*
         * Attempts to write a message to the pipe, returning true on success.
         * If the pipe is closed before or during the write, this method returns false.
         * If the write is interrupted by the provided Interruptible, this method will throw an
         * exception.
         ','line_number':52,'multiline':True]
['text':'*
         * Attempts to read a message to the pipe.
         * If the pipe is closed before or during the read, this method returns
         * boost::optional::none(). If the read is interrupted by the provided Interruptible, this
         * method will throw an exception.
         ','line_number':73,'multiline':True]
['text':'*
         * Close both the read and write halves of this end of the pipe. In-progress reads and
         * writes on this end and writes on the other end will be interrupted.
         *
         * Messages that have already been transmitted through this end of the pipe can still be
         * read by the other end.
         ','line_number':91,'multiline':True]
['text':'*
         * Close only the writing portion of this end of the pipe. This will cause any reads on
         * the other end to fail once all the previously sent messages have been read. Messages can
         * still be read from this end.
         ','line_number':103,'multiline':True]
['text':'*
         * Returns true when at least one of the following conditions is met:
         *  - This end of the pipe is closed.
         *  - The other end of the pipe is closed and there are no more messages to be read.
         ','line_number':112,'multiline':True]
['text':' namespace mongo::transport::grpc','line_number':155,'multiline':False]
