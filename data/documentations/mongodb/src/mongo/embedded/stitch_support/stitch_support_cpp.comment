['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':'*
 * C interfaces that use enterCXX() must provide a translateException() function that converts any
 * possible exception into a StatusForAPI<> object.
 ','line_number':91,'multiline':True]
['text':'*
 * C interfaces that use enterCXX() must provide a tranlsateExceptionFallback() function that
 * populates a StatusForAPI<> object to indicate a double-fault error during error reporting. The
 * translateExceptionFallback() function gets called when translateException() throws, and it should
 * not include any code that may itself throw.
 *
 * We use an out param instead of returning the StatusForAPI<> object so as to avoid a std::string
 * copy that may allocate memory.
 ','line_number':114,'multiline':True]
['text':' namespace mongo','line_number':129,'multiline':False]
['text':' NOLINT','line_number':145,'multiline':False]
['text':' The global initializers can take arguments, which would normally be supplied on the command','line_number':147,'multiline':False]
['text':' line, but we assume that clients of this library will never want anything other than the','line_number':148,'multiline':False]
['text':' defaults for all configuration that would be controlled by these parameters.','line_number':149,'multiline':False]
['text':'*
     * This destructor gets called when the Stitch Library gets torn down, either by a call to
     * stitch_support_v1_fini() or when the process exits.
     ','line_number':157,'multiline':True]
['text':' namespace','line_number':170,'multiline':False]
['text':' namespace mongo','line_number':171,'multiline':False]
['text':' standalone lib, this client is not part of any mongo server','line_number':361,'multiline':False]
['text':' server thread concepts such as handling interrupts due to step down/up do not apply','line_number':362,'multiline':False]
['text':' standalone lib, this client is not part of any mongo server','line_number':383,'multiline':False]
['text':' server thread concepts such as handling interrupts due to step down/up do not apply','line_number':384,'multiline':False]
['text':' standalone lib, this client is not part of any mongo server','line_number':406,'multiline':False]
['text':' server thread concepts such as handling interrupts due to step down/up do not apply','line_number':407,'multiline':False]
['text':'*
 * toInterfaceType changes the compiler's interpretation from our internal BSON type 'char*' to
 * 'uint8_t*' which is the interface type of the Stitch library.
 ','line_number':428,'multiline':True]
['text':'*
 * fromInterfaceType changes the compiler's interpretation from 'uint8_t*' which is the BSON
 * interface type of the Stitch library to our internal type 'char*'.
 ','line_number':436,'multiline':True]
['text':' namespace','line_number':444,'multiline':False]
['text':' namespace mongo','line_number':445,'multiline':False]
['text':' Empty 'matchedField' indicates that the matcher did not traverse an array.','line_number':607,'multiline':False]
['text':' Empty set','line_number':614,'multiline':False]
['text':' validateForStorage ','line_number':622,'multiline':True]
['text':' isInsert ','line_number':624,'multiline':True]
['text':' logOpRec','line_number':625,'multiline':True]
['text':' matchedField ','line_number':667,'multiline':True]
['text':' validateForStorage ','line_number':669,'multiline':True]
['text':' isInsert ','line_number':671,'multiline':True]
['text':' logOpRec ','line_number':672,'multiline':True]
['text':' modifiedPaths ','line_number':674,'multiline':True]
['text':' extern "C"','line_number':721,'multiline':False]
