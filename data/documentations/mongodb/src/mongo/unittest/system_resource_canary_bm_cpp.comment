['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':' This is a trivial test case to sanity check that "benchmark" runs.','line_number':42,'multiline':False]
['text':' For more information on how benchmarks should be written, please refer to Google Benchmark's','line_number':43,'multiline':False]
['text':' excellent README: https://github.com/google/benchmark/blob/v1.3.0/README.md','line_number':44,'multiline':False]
['text':' The code inside this for-loop is what's being timed.','line_number':47,'multiline':False]
['text':' Register two benchmarks, one runs the "BM_Empty" function in a single thread, the other runs a','line_number':52,'multiline':False]
['text':' copy per CPU core.','line_number':53,'multiline':False]
['text':' This Benchmark is adapted from the `cpuload` command:','line_number':69,'multiline':False]
['text':' https://github.com/mongodb/mongo/blob/r3.7.2/src/mongo/db/commands/cpuload.cpp','line_number':70,'multiline':False]
['text':' Generate a loop with macros.','line_number':83,'multiline':False]
['text':' Stride is the number of elements to skip when traversing the array.','line_number':90,'multiline':False]
['text':' It should ideally be >= the cache line to avoid side-effects from pre-fetching.','line_number':91,'multiline':False]
['text':' Fixture for CPU Cache and RAM latency test. Adapted from lmbench's lat_mem_rd test.','line_number':95,'multiline':False]
['text':' Array of pointers used as a linked list.','line_number':97,'multiline':False]
['text':'
             * Create a circular list of pointers using a simple striding
             * algorithm.
             ','line_number':104,'multiline':True]
['text':'
             * This access pattern corresponds to many array/matrix algorithms.
             * It should be easily and correctly predicted by any decent hardware
             * prefetch algorithm.
             ','line_number':115,'multiline':True]
['text':' Dummy result to prevent the loop from being optimized out.','line_number':141,'multiline':False]
['text':' Record the number of times we accessed the cache so Benchmark can compute the average latency','line_number':150,'multiline':False]
['text':' of each access. This allows comparing access latency across caches of different sizes.','line_number':151,'multiline':False]
['text':' Loop over arrays of different sizes to test the L2, L3, and RAM latency.','line_number':157,'multiline':False]
['text':' namespace','line_number':161,'multiline':False]
['text':' namespace mongo','line_number':162,'multiline':False]
