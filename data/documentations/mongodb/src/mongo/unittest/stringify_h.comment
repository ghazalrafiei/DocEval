['text':'*
 *    Copyright (C) 2022-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]
['text':'*
 * Mechanisms and extensibility hooks used by this library to format arbitrary
 * user-provided objects.
 ','line_number':52,'multiline':True]
['text':' `stringify::` qualification necessary to disable ADL on `v`.','line_number':100,'multiline':False]
['text':'*
 * The only definitions in this namespace are some "built-in" overloads of
 * `stringifyForAssert`. It defines no types, so ADL will not find it. A
 * `stringify::invoke` call will consider these in the overload set along with
 * any overloads found by ADL on the argument.
 ','line_number':135,'multiline':True]
['text':'*
 * The default `stringifyForAssert` implementation.
 * Encodes the steps by which we determine how to print an object.
 * There's a wildcard branch so everything is printable in some way.
 ','line_number':142,'multiline':True]
['text':'* Portably support stringifying `nullptr`. ','line_number':168,'multiline':True]
['text':'* Built-in support to stringify `ErrorCode::Error`. ','line_number':173,'multiline':True]
['text':' namespace adl_barrier','line_number':177,'multiline':False]
['text':'*
 * The entry point for the `unittest::stringify` system, this is
 * called to produce a string representation of an arbitrary value
 * `x` through the `stringifyForAssert` extension hook.
 *
 * An overload for `stringifyForAssert` is selected from a few
 * "built-in" overloads, and then from any that are found in
 * namespaces associated with `x` via argument-dependent lookup.
 *
 * The `stringifyForAssert` name is an ADL extension point for
 * user-defined types, and should not be invoked directly.  Call
 * `stringify::invoke` instead.
 ','line_number':179,'multiline':True]
['text':' namespace mongo::unittest::stringify','line_number':198,'multiline':False]
