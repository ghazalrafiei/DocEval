['text':'/////////////////////////////////////////////////////////////////////////////','line_number':1,'multiline':False]
['text':' adaptor.hpp','line_number':2,'multiline':False]
['text':'','line_number':3,'multiline':False]
['text':'  Copyright 2008 Eric Niebler. Distributed under the Boost','line_number':4,'multiline':False]
['text':'  Software License, Version 1.0. (See accompanying file','line_number':5,'multiline':False]
['text':'  LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)','line_number':6,'multiline':False]
['text':' MS compatible compilers support #pragma once','line_number':11,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////////','line_number':25,'multiline':False]
['text':' xpression_adaptor','line_number':26,'multiline':False]
['text':'','line_number':27,'multiline':False]
['text':'   wrap a static xpression in a matchable interface so it can be stored','line_number':28,'multiline':False]
['text':'   in and invoked from a basic_regex object.','line_number':29,'multiline':False]
['text':' either matchable or matchable_ex','line_number':32,'multiline':False]
['text':' Ugh, gcc has an optimizer bug which elides this c'tor call','line_number':41,'multiline':False]
['text':' resulting in pure virtual function calls.','line_number':42,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////////','line_number':69,'multiline':False]
['text':' make_adaptor','line_number':70,'multiline':False]
['text':'','line_number':71,'multiline':False]
['text':' namespace boost::xpressive::detail','line_number':78,'multiline':False]
