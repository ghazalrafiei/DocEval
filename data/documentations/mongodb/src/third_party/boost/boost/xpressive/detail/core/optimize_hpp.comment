['text':'/////////////////////////////////////////////////////////////////////////////','line_number':1,'multiline':False]
['text':' optimize.hpp','line_number':2,'multiline':False]
['text':'','line_number':3,'multiline':False]
['text':'  Copyright 2008 Eric Niebler. Distributed under the Boost','line_number':4,'multiline':False]
['text':'  Software License, Version 1.0. (See accompanying file','line_number':5,'multiline':False]
['text':'  LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)','line_number':6,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////////','line_number':24,'multiline':False]
['text':' optimize_regex','line_number':25,'multiline':False]
['text':'','line_number':26,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////////','line_number':60,'multiline':False]
['text':' optimize_regex','line_number':61,'multiline':False]
['text':'','line_number':62,'multiline':False]
['text':' if we have a leading string literal, initialize a boyer-moore struct with it','line_number':73,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////////','line_number':87,'multiline':False]
['text':' common_compile','line_number':88,'multiline':False]
['text':'','line_number':89,'multiline':False]
['text':' "link" the regex','line_number':100,'multiline':False]
['text':' "peek" into the compiled regex to see if there are optimization opportunities','line_number':104,'multiline':False]
['text':' optimization: get the peek chars OR the boyer-moore search string','line_number':109,'multiline':False]
['text':' namespace boost::xpressive','line_number':114,'multiline':False]
