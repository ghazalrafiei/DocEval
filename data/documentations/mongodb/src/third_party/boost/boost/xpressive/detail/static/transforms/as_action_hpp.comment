['text':'/////////////////////////////////////////////////////////////////////////////','line_number':1,'multiline':False]
['text':' as_action.hpp','line_number':2,'multiline':False]
['text':'','line_number':3,'multiline':False]
['text':'  Copyright 2008 Eric Niebler.','line_number':4,'multiline':False]
['text':'  Copyright 2008 David Jenkins.','line_number':5,'multiline':False]
['text':'','line_number':6,'multiline':False]
['text':'  Distributed under the Boost Software License, Version 1.0. (See','line_number':7,'multiline':False]
['text':'  accompanying file LICENSE_1_0.txt or copy at','line_number':8,'multiline':False]
['text':'  http://www.boost.org/LICENSE_1_0.txt)','line_number':9,'multiline':False]
['text':' MS compatible compilers support #pragma once','line_number':14,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////////','line_number':36,'multiline':False]
['text':' read_attr','line_number':37,'multiline':False]
['text':'  Placeholder that knows the slot number of an attribute as well as the type','line_number':38,'multiline':False]
['text':'  of the object stored in it.','line_number':39,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////////','line_number':59,'multiline':False]
['text':' FindAttr','line_number':60,'multiline':False]
['text':'  Look for patterns like (a1= terminal<RHS>) and return the type of the RHS.','line_number':61,'multiline':False]
['text':' Ignore nested actions, because attributes are scoped','line_number':65,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////////','line_number':73,'multiline':False]
['text':' as_read_attr','line_number':74,'multiline':False]
['text':'  For patterns like (a1 = RHS)[ref(i) = a1], transform to','line_number':75,'multiline':False]
['text':'  (a1 = RHS)[ref(i) = read_attr<1, RHS>] so that when reading the attribute','line_number':76,'multiline':False]
['text':'  we know what type is stored in the attribute slot.','line_number':77,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////////','line_number':109,'multiline':False]
['text':' DeepCopy','line_number':110,'multiline':False]
['text':'  Turn all refs into values, and also bind all attribute placeholders with','line_number':111,'multiline':False]
['text':'  the types from which they are being assigned.','line_number':112,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////////','line_number':121,'multiline':False]
['text':' attr_nbr','line_number':122,'multiline':False]
['text':'  For an attribute placeholder, return the attribute's slot number.','line_number':123,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////////','line_number':136,'multiline':False]
['text':' MaxAttr','line_number':137,'multiline':False]
['text':'  In an action (rx)[act], find the largest attribute slot being used.','line_number':138,'multiline':False]
['text':' Ignore nested actions, because attributes are scoped:','line_number':143,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////////','line_number':149,'multiline':False]
['text':' max_attr','line_number':150,'multiline':False]
['text':'  Take the maximum of the current attr slot number and the state.','line_number':151,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////////','line_number':166,'multiline':False]
['text':' as_attr_matcher','line_number':167,'multiline':False]
['text':'  turn a1=matcher into attr_matcher<Matcher>(1)','line_number':168,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////////','line_number':199,'multiline':False]
['text':' add_attrs','line_number':200,'multiline':False]
['text':'  Wrap an expression in attr_begin_matcher/attr_end_matcher pair','line_number':201,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////////','line_number':239,'multiline':False]
['text':' InsertAttrs','line_number':240,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////////','line_number':245,'multiline':False]
['text':' CheckAssertion','line_number':246,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////////','line_number':251,'multiline':False]
['text':' action_transform','line_number':252,'multiline':False]
['text':'  Turn A[B] into (mark_begin(n) >> A >> mark_end(n) >> action_matcher<B>(n))','line_number':253,'multiline':False]
['text':'  If A and B use attributes, wrap the above expression in','line_number':254,'multiline':False]
['text':'  a attr_begin_matcher<Count> / attr_end_matcher pair, where Count is','line_number':255,'multiline':False]
['text':'  the number of attribute slots used by the pattern/action.','line_number':256,'multiline':False]
