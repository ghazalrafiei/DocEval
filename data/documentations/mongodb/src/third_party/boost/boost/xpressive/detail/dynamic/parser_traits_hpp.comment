['text':'/////////////////////////////////////////////////////////////////////////////','line_number':1,'multiline':False]
['text':' detail/dynamic/parser_traits.hpp','line_number':2,'multiline':False]
['text':'','line_number':3,'multiline':False]
['text':'  Copyright 2008 Eric Niebler. Distributed under the Boost','line_number':4,'multiline':False]
['text':'  Software License, Version 1.0. (See accompanying file','line_number':5,'multiline':False]
['text':'  LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)','line_number':6,'multiline':False]
['text':' MS compatible compilers support #pragma once','line_number':11,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////////','line_number':32,'multiline':False]
['text':' compiler_traits','line_number':33,'multiline':False]
['text':'  this works for char and wchar_t. it must be specialized for anything else.','line_number':34,'multiline':False]
['text':'','line_number':35,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////////','line_number':44,'multiline':False]
['text':' constructor','line_number':45,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////////','line_number':54,'multiline':False]
['text':' flags','line_number':55,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////////','line_number':61,'multiline':False]
['text':' flags','line_number':62,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////////','line_number':68,'multiline':False]
['text':' traits','line_number':69,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////////','line_number':80,'multiline':False]
['text':' imbue','line_number':81,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////////','line_number':90,'multiline':False]
['text':' getloc','line_number':91,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////////','line_number':97,'multiline':False]
['text':' get_token','line_number':98,'multiline':False]
['text':'  get a token and advance the iterator','line_number':99,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////////','line_number':132,'multiline':False]
['text':' get_quant_spec','line_number':133,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////','line_number':215,'multiline':False]
['text':' get_group_type','line_number':216,'multiline':False]
['text':'////////////////////////////////////////////////////////////////////////','line_number':287,'multiline':False]
['text':' get_charset_token','line_number':288,'multiline':False]
['text':'  NOTE: white-space is *never* ignored in a charset.','line_number':289,'multiline':False]
['text':'////////////////////////////////////////////////////////////////////////','line_number':350,'multiline':False]
['text':' get_escape_token','line_number':351,'multiline':False]
['text':'case BOOST_XPR_CHAR_(char_type, 'a'): ++begin; return token_escape_bell;','line_number':360,'multiline':False]
['text':'case BOOST_XPR_CHAR_(char_type, 'c'): ++begin; return token_escape_control;','line_number':361,'multiline':False]
['text':'case BOOST_XPR_CHAR_(char_type, 'e'): ++begin; return token_escape_escape;','line_number':362,'multiline':False]
['text':'case BOOST_XPR_CHAR_(char_type, 'f'): ++begin; return token_escape_formfeed;','line_number':363,'multiline':False]
['text':'case BOOST_XPR_CHAR_(char_type, 'n'): ++begin; return token_escape_newline;','line_number':364,'multiline':False]
['text':'case BOOST_XPR_CHAR_(char_type, 't'): ++begin; return token_escape_horizontal_tab;','line_number':365,'multiline':False]
['text':'case BOOST_XPR_CHAR_(char_type, 'v'): ++begin; return token_escape_vertical_tab;','line_number':366,'multiline':False]
['text':' Non-standard extension to ECMAScript syntax','line_number':373,'multiline':False]
['text':' fall-through','line_number':376,'multiline':False]
['text':'////////////////////////////////////////////////////////////////////////','line_number':385,'multiline':False]
['text':' parse_mods_','line_number':386,'multiline':False]
['text':' this return is technically unreachable, but this must','line_number':404,'multiline':False]
['text':' be here to work around a bug in gcc 4.0','line_number':405,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////////','line_number':409,'multiline':False]
['text':' flag_','line_number':410,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////','line_number':416,'multiline':False]
['text':' is_space_','line_number':417,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////','line_number':423,'multiline':False]
['text':' is_alnum_','line_number':424,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////','line_number':430,'multiline':False]
['text':' get_name_','line_number':431,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////////','line_number':444,'multiline':False]
['text':' eat_ws_','line_number':445,'multiline':False]
['text':' namespace boost::xpressive','line_number':473,'multiline':False]
