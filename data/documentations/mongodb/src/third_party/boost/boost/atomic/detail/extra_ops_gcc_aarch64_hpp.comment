['text':'
 * Distributed under the Boost Software License, Version 1.0.
 * (See accompanying file LICENSE_1_0.txt or copy at
 * http://www.boost.org/LICENSE_1_0.txt)
 *
 * Copyright (c) 2020 Andrey Semashev
 ','line_number':1,'multiline':True]
['text':'!
 * \file   atomic/detail/extra_ops_gcc_aarch64.hpp
 *
 * This header contains implementation of the extra atomic operations for AArch64.
 ','line_number':8,'multiline':True]
['text':' Note: For opaque operations prefer operations returning the resulting values instead of the original values','line_number':44,'multiline':False]
['text':'       as these operations require less registers. That is unless LSE is available, in which case','line_number':45,'multiline':False]
['text':'       it is better to use the dedicated atomic instructions. The LSE check is done in the base_type,','line_number':46,'multiline':False]
['text':'       where needed (e.g. for 128-bit operations there are no LSE instructions).','line_number':47,'multiline':False]
['text':' !defined(BOOST_ATOMIC_DETAIL_AARCH64_HAS_LSE)','line_number':347,'multiline':False]
['text':' !defined(BOOST_ATOMIC_DETAIL_AARCH64_HAS_LSE)','line_number':582,'multiline':False]
['text':' !defined(BOOST_ATOMIC_DETAIL_AARCH64_HAS_LSE)','line_number':817,'multiline':False]
['text':' !defined(BOOST_ATOMIC_DETAIL_AARCH64_HAS_LSE)','line_number':1052,'multiline':False]
['text':' namespace detail','line_number':1324,'multiline':False]
['text':' namespace atomics','line_number':1325,'multiline':False]
['text':' namespace boost','line_number':1326,'multiline':False]
['text':' BOOST_ATOMIC_DETAIL_EXTRA_OPS_GCC_AARCH64_HPP_INCLUDED_','line_number':1330,'multiline':False]
