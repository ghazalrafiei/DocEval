['text':'
 * Distributed under the Boost Software License, Version 1.0.
 * (See accompanying file LICENSE_1_0.txt or copy at
 * http://www.boost.org/LICENSE_1_0.txt)
 *
 * Copyright (c) 2009 Helge Bahmann
 * Copyright (c) 2014-2018, 2020 Andrey Semashev
 ','line_number':1,'multiline':True]
['text':'!
 * \file   atomic/detail/platform.hpp
 *
 * This header defines macros for the target platform detection
 ','line_number':9,'multiline':True]
['text':' Newer gcc versions define __ARM_ARCH. Older ones don't, so we have to deduce ARM arch version from a bunch of version-specific macros.','line_number':26,'multiline':False]
['text':' We are not interested in older versions - they don't support atomic ops','line_number':40,'multiline':False]
['text':' defined(__GNUC__) && defined(__arm__)','line_number':44,'multiline':False]
['text':' Determine the target platform.','line_number':48,'multiline':False]
['text':' The target platform describes the compiler and target architecture. It can be used by more generic backends, such as the ones','line_number':49,'multiline':False]
['text':' based on compiler intrinsics, to implement specialized operations in a non-generic way.','line_number':50,'multiline':False]
['text':' Compiler-based backends','line_number':95,'multiline':False]
['text':' IBM XL C++ Compiler has to be checked before GCC/Clang as it pretends to be one but does not support __atomic* intrinsics.','line_number':97,'multiline':False]
['text':' It does support GCC inline assembler though.','line_number':98,'multiline':False]
['text':' GCC __sync* instrinsics backend is less efficient than asm-based backends, so use it only when nothing better is available.','line_number':113,'multiline':False]
['text':' OS-based backends','line_number':128,'multiline':False]
['text':' !defined(BOOST_ATOMIC_DETAIL_CORE_BACKEND)','line_number':142,'multiline':False]
['text':' Waiting and notifying operations backends','line_number':144,'multiline':False]
['text':' defined(BOOST_WINDOWS)','line_number':149,'multiline':False]
['text':' Darwin 16+ supports ulock API','line_number':161,'multiline':False]
['text':' __ENVIRONMENT_*_VERSION_MIN_REQUIRED__','line_number':163,'multiline':False]
['text':' FreeBSD prior to 7.0 had _umtx_op with a different signature','line_number':166,'multiline':False]
['text':' defined(__FreeBSD_version) && __FreeBSD_version >= 700000','line_number':169,'multiline':False]
['text':' defined(BOOST_WINDOWS)','line_number':174,'multiline':False]
['text':' !defined(BOOST_ATOMIC_FORCE_FALLBACK)','line_number':176,'multiline':False]
['text':' BOOST_ATOMIC_DETAIL_PLATFORM_HPP_INCLUDED_','line_number':209,'multiline':False]
