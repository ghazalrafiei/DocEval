['text':'
 * Distributed under the Boost Software License, Version 1.0.
 * (See accompanying file LICENSE_1_0.txt or copy at
 * http://www.boost.org/LICENSE_1_0.txt)
 *
 * Copyright (c) 2009 Helge Bahmann
 * Copyright (c) 2013 Tim Blechmann
 * Copyright (c) 2014 Andrey Semashev
 ','line_number':1,'multiline':True]
['text':'!
 * \file   atomic/detail/ops_gcc_alpha.hpp
 *
 * This header contains implementation of the \c operations template.
 ','line_number':10,'multiline':True]
['text':'
  Refer to http://h71000.www7.hp.com/doc/82final/5601/5601pro_004.html
  (HP OpenVMS systems documentation) and the Alpha Architecture Reference Manual.
 ','line_number':34,'multiline':True]
['text':'
    NB: The most natural thing would be to write the increment/decrement
    operators along the following lines:

    __asm__ __volatile__
    (
        "1: ldl_l %0,%1 \n"
        "addl %0,1,%0 \n"
        "stl_c %0,%1 \n"
        "beq %0,1b\n"
        : "=&b" (tmp)
        : "m" (value)
        : "cc"
    );

    However according to the comments on the HP website and matching
    comments in the Linux kernel sources this defies branch prediction,
    as the cpu assumes that backward branches are always taken; so
    instead copy the trick from the Linux kernel, introduce a forward
    branch and back again.

    I have, however, had a hard time measuring the difference between
    the two versions in microbenchmarks -- I am leaving it in nevertheless
    as it apparently does not hurt either.
','line_number':39,'multiline':True]
['text':' %0','line_number':130,'multiline':False]
['text':' %1','line_number':131,'multiline':False]
['text':' %2','line_number':132,'multiline':False]
['text':' %3','line_number':133,'multiline':False]
['text':' current = *(&storage)','line_number':149,'multiline':False]
['text':' success = current == expected','line_number':150,'multiline':False]
['text':' expected = current','line_number':151,'multiline':False]
['text':' if (success == 0) goto end','line_number':152,'multiline':False]
['text':' storage = desired; desired = store succeeded','line_number':153,'multiline':False]
['text':' success = desired','line_number':154,'multiline':False]
['text':' %0','line_number':156,'multiline':False]
['text':' %1','line_number':157,'multiline':False]
['text':' %2','line_number':158,'multiline':False]
['text':' %3','line_number':159,'multiline':False]
['text':' %4','line_number':160,'multiline':False]
['text':' tmp = desired','line_number':179,'multiline':False]
['text':' current = *(&storage)','line_number':180,'multiline':False]
['text':' success = current == expected','line_number':181,'multiline':False]
['text':' expected = current','line_number':182,'multiline':False]
['text':' if (success == 0) goto end','line_number':183,'multiline':False]
['text':' storage = tmp; tmp = store succeeded','line_number':184,'multiline':False]
['text':' if (tmp == 0) goto retry','line_number':185,'multiline':False]
['text':' success = tmp','line_number':186,'multiline':False]
['text':' %0','line_number':193,'multiline':False]
['text':' %1','line_number':194,'multiline':False]
['text':' %2','line_number':195,'multiline':False]
['text':' %3','line_number':196,'multiline':False]
['text':' %4','line_number':197,'multiline':False]
['text':' %5','line_number':198,'multiline':False]
['text':' %0','line_number':224,'multiline':False]
['text':' %1','line_number':225,'multiline':False]
['text':' %2','line_number':226,'multiline':False]
['text':' %3','line_number':227,'multiline':False]
['text':' %0','line_number':250,'multiline':False]
['text':' %1','line_number':251,'multiline':False]
['text':' %2','line_number':252,'multiline':False]
['text':' %3','line_number':253,'multiline':False]
['text':' %0','line_number':276,'multiline':False]
['text':' %1','line_number':277,'multiline':False]
['text':' %2','line_number':278,'multiline':False]
['text':' %3','line_number':279,'multiline':False]
['text':' %0','line_number':302,'multiline':False]
['text':' %1','line_number':303,'multiline':False]
['text':' %2','line_number':304,'multiline':False]
['text':' %3','line_number':305,'multiline':False]
['text':' %0','line_number':328,'multiline':False]
['text':' %1','line_number':329,'multiline':False]
['text':' %2','line_number':330,'multiline':False]
['text':' %3','line_number':331,'multiline':False]
['text':' %0','line_number':374,'multiline':False]
['text':' %1','line_number':375,'multiline':False]
['text':' %2','line_number':376,'multiline':False]
['text':' %3','line_number':377,'multiline':False]
['text':' %0','line_number':401,'multiline':False]
['text':' %1','line_number':402,'multiline':False]
['text':' %2','line_number':403,'multiline':False]
['text':' %3','line_number':404,'multiline':False]
['text':' %0','line_number':436,'multiline':False]
['text':' %1','line_number':437,'multiline':False]
['text':' %2','line_number':438,'multiline':False]
['text':' %3','line_number':439,'multiline':False]
['text':' %0','line_number':463,'multiline':False]
['text':' %1','line_number':464,'multiline':False]
['text':' %2','line_number':465,'multiline':False]
['text':' %3','line_number':466,'multiline':False]
['text':' %0','line_number':499,'multiline':False]
['text':' %1','line_number':500,'multiline':False]
['text':' %2','line_number':501,'multiline':False]
['text':' %3','line_number':502,'multiline':False]
['text':' %0','line_number':526,'multiline':False]
['text':' %1','line_number':527,'multiline':False]
['text':' %2','line_number':528,'multiline':False]
['text':' %3','line_number':529,'multiline':False]
['text':' %0','line_number':561,'multiline':False]
['text':' %1','line_number':562,'multiline':False]
['text':' %2','line_number':563,'multiline':False]
['text':' %3','line_number':564,'multiline':False]
['text':' %0','line_number':588,'multiline':False]
['text':' %1','line_number':589,'multiline':False]
['text':' %2','line_number':590,'multiline':False]
['text':' %3','line_number':591,'multiline':False]
['text':' %0','line_number':640,'multiline':False]
['text':' %1','line_number':641,'multiline':False]
['text':' %2','line_number':642,'multiline':False]
['text':' %3','line_number':643,'multiline':False]
['text':' current = *(&storage)','line_number':659,'multiline':False]
['text':' success = current == expected','line_number':660,'multiline':False]
['text':' expected = current','line_number':661,'multiline':False]
['text':' if (success == 0) goto end','line_number':662,'multiline':False]
['text':' storage = desired; desired = store succeeded','line_number':663,'multiline':False]
['text':' success = desired','line_number':664,'multiline':False]
['text':' %0','line_number':666,'multiline':False]
['text':' %1','line_number':667,'multiline':False]
['text':' %2','line_number':668,'multiline':False]
['text':' %3','line_number':669,'multiline':False]
['text':' %4','line_number':670,'multiline':False]
['text':' tmp = desired','line_number':689,'multiline':False]
['text':' current = *(&storage)','line_number':690,'multiline':False]
['text':' success = current == expected','line_number':691,'multiline':False]
['text':' expected = current','line_number':692,'multiline':False]
['text':' if (success == 0) goto end','line_number':693,'multiline':False]
['text':' storage = tmp; tmp = store succeeded','line_number':694,'multiline':False]
['text':' if (tmp == 0) goto retry','line_number':695,'multiline':False]
['text':' success = tmp','line_number':696,'multiline':False]
['text':' %0','line_number':703,'multiline':False]
['text':' %1','line_number':704,'multiline':False]
['text':' %2','line_number':705,'multiline':False]
['text':' %3','line_number':706,'multiline':False]
['text':' %4','line_number':707,'multiline':False]
['text':' %5','line_number':708,'multiline':False]
['text':' %0','line_number':734,'multiline':False]
['text':' %1','line_number':735,'multiline':False]
['text':' %2','line_number':736,'multiline':False]
['text':' %3','line_number':737,'multiline':False]
['text':' %0','line_number':760,'multiline':False]
['text':' %1','line_number':761,'multiline':False]
['text':' %2','line_number':762,'multiline':False]
['text':' %3','line_number':763,'multiline':False]
['text':' %0','line_number':786,'multiline':False]
['text':' %1','line_number':787,'multiline':False]
['text':' %2','line_number':788,'multiline':False]
['text':' %3','line_number':789,'multiline':False]
['text':' %0','line_number':812,'multiline':False]
['text':' %1','line_number':813,'multiline':False]
['text':' %2','line_number':814,'multiline':False]
['text':' %3','line_number':815,'multiline':False]
['text':' %0','line_number':838,'multiline':False]
['text':' %1','line_number':839,'multiline':False]
['text':' %2','line_number':840,'multiline':False]
['text':' %3','line_number':841,'multiline':False]
['text':' namespace detail','line_number':872,'multiline':False]
['text':' namespace atomics','line_number':873,'multiline':False]
['text':' namespace boost','line_number':874,'multiline':False]
['text':' BOOST_ATOMIC_DETAIL_OPS_GCC_ALPHA_HPP_INCLUDED_','line_number':876,'multiline':False]
