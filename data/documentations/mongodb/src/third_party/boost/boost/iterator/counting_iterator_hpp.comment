['text':' Copyright David Abrahams 2003.','line_number':1,'multiline':False]
['text':' Distributed under the Boost Software License, Version 1.0. (See','line_number':2,'multiline':False]
['text':' accompanying file LICENSE_1_0.txt or copy at','line_number':3,'multiline':False]
['text':' http://www.boost.org/LICENSE_1_0.txt)','line_number':4,'multiline':False]
['text':' Try to detect numeric types at compile time in ways compatible','line_number':36,'multiline':False]
['text':' with the limitations of the compiler and library.','line_number':37,'multiline':False]
['text':' For a while, this wasn't true, but we rely on it below. This is a regression assert.','line_number':41,'multiline':False]
['text':' Some compilers fail to have a numeric_limits specialization','line_number':88,'multiline':False]
['text':' std::numeric_limits, which is used by numeric_traits, is not specialized for __int128 in some standard libraries','line_number':100,'multiline':False]
['text':' self','line_number':136,'multiline':False]
['text':' Base','line_number':137,'multiline':False]
['text':' Value','line_number':138,'multiline':False]
['text':' MSVC won't strip this.  Instead we enable Thomas'','line_number':140,'multiline':False]
['text':' criterion (see boost/iterator/detail/facade_iterator_category.hpp)','line_number':141,'multiline':False]
['text':' reference','line_number':144,'multiline':False]
['text':' Template class distance_policy_select -- choose a policy for computing the','line_number':149,'multiline':False]
['text':' distance between counting_iterators at compile-time based on whether or not','line_number':150,'multiline':False]
['text':' the iterator wraps an integer or an iterator, using "poor man's partial','line_number':151,'multiline':False]
['text':' specialization".','line_number':152,'multiline':False]
['text':' A policy for wrapped iterators','line_number':156,'multiline':False]
['text':' A policy for wrapped numbers','line_number':166,'multiline':False]
['text':' Manufacture a counting iterator for an arbitrary incrementable type','line_number':238,'multiline':False]
['text':' namespace iterators','line_number':247,'multiline':False]
['text':' namespace boost','line_number':252,'multiline':False]
['text':' COUNTING_ITERATOR_DWA200348_HPP','line_number':254,'multiline':False]
