['text':' (C) Copyright Jeremy Siek 2002.','line_number':1,'multiline':False]
['text':' Distributed under the Boost Software License, Version 1.0. (See','line_number':2,'multiline':False]
['text':' accompanying file LICENSE_1_0.txt or copy at','line_number':3,'multiline':False]
['text':' http://www.boost.org/LICENSE_1_0.txt)','line_number':4,'multiline':False]
['text':'','line_number':28,'multiline':False]
['text':' Traversal Categories','line_number':29,'multiline':False]
['text':'','line_number':30,'multiline':False]
['text':'     incrementable_traversal_tag() {}','line_number':37,'multiline':False]
['text':'     incrementable_traversal_tag(std::output_iterator_tag const&) {};','line_number':38,'multiline':False]
['text':'     single_pass_traversal_tag() {}','line_number':44,'multiline':False]
['text':'     single_pass_traversal_tag(std::input_iterator_tag const&) {};','line_number':45,'multiline':False]
['text':'     forward_traversal_tag() {}','line_number':51,'multiline':False]
['text':'     forward_traversal_tag(std::forward_iterator_tag const&) {};','line_number':52,'multiline':False]
['text':'     bidirectional_traversal_tag() {};','line_number':58,'multiline':False]
['text':'     bidirectional_traversal_tag(std::bidirectional_iterator_tag const&) {};','line_number':59,'multiline':False]
['text':'     random_access_traversal_tag() {};','line_number':65,'multiline':False]
['text':'     random_access_traversal_tag(std::random_access_iterator_tag const&) {};','line_number':66,'multiline':False]
['text':'','line_number':71,'multiline':False]
['text':' Convert a "strictly old-style" iterator category to a traversal','line_number':72,'multiline':False]
['text':' tag.  This is broken out into a separate metafunction to reduce','line_number':73,'multiline':False]
['text':' the cost of instantiating iterator_category_to_traversal, below,','line_number':74,'multiline':False]
['text':' for new-style types.','line_number':75,'multiline':False]
['text':'','line_number':76,'multiline':False]
['text':' namespace detail','line_number':102,'multiline':False]
['text':'','line_number':104,'multiline':False]
['text':' Convert an iterator category into a traversal tag','line_number':105,'multiline':False]
['text':'','line_number':106,'multiline':False]
['text':' if already convertible to a traversal tag, we're done.','line_number':109,'multiline':False]
['text':' Trait to get an iterator's traversal category','line_number':116,'multiline':False]
['text':' Hack because BOOST_MPL_AUX_LAMBDA_SUPPORT doesn't seem to work','line_number':125,'multiline':False]
['text':' out well.  Instantiating the nested apply template also','line_number':126,'multiline':False]
['text':' requires instantiating iterator_traits on the','line_number':127,'multiline':False]
['text':' placeholder. Instead we just specialize it as a metafunction','line_number':128,'multiline':False]
['text':' class.','line_number':129,'multiline':False]
['text':'','line_number':143,'multiline':False]
['text':' Convert an iterator traversal to one of the traversal tags.','line_number':144,'multiline':False]
['text':'','line_number':145,'multiline':False]
['text':'','line_number':172,'multiline':False]
['text':' Trait to retrieve one of the iterator traversal tags from the iterator category or traversal.','line_number':173,'multiline':False]
['text':'','line_number':174,'multiline':False]
['text':' namespace iterators','line_number':194,'multiline':False]
['text':' This import is needed for backward compatibility with Boost.Range:','line_number':205,'multiline':False]
['text':' boost/range/detail/demote_iterator_traversal_tag.hpp','line_number':206,'multiline':False]
['text':' It should be removed when that header is fixed.','line_number':207,'multiline':False]
['text':' namespace detail','line_number':210,'multiline':False]
['text':' namespace boost','line_number':212,'multiline':False]
['text':' BOOST_ITERATOR_CATEGORIES_HPP','line_number':216,'multiline':False]
