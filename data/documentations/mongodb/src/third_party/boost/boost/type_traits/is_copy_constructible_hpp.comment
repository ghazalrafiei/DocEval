['text':'  (C) Copyright Antony Polukhin 2013.','line_number':1,'multiline':False]
['text':'','line_number':2,'multiline':False]
['text':'  Use, modification and distribution are subject to the Boost Software License,','line_number':3,'multiline':False]
['text':'  Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at','line_number':4,'multiline':False]
['text':'  http://www.boost.org/LICENSE_1_0.txt).','line_number':5,'multiline':False]
['text':'','line_number':6,'multiline':False]
['text':'  See http://www.boost.org/libs/type_traits for most recent version including documentation.','line_number':7,'multiline':False]
['text':' namespace boost','line_number':30,'multiline':False]
['text':'','line_number':33,'multiline':False]
['text':' Special version for VC12 which has a problem when a base class (such as non_copyable) has a deleted','line_number':34,'multiline':False]
['text':' copy constructor.  In this case the compiler thinks there really is a copy-constructor and tries to','line_number':35,'multiline':False]
['text':' instantiate the deleted member.  std::is_copy_constructible has the same issue (or at least returns','line_number':36,'multiline':False]
['text':' an incorrect value, which just defers the issue into the users code) as well.  We can at least fix','line_number':37,'multiline':False]
['text':' boost::non_copyable as a base class as a special case:','line_number':38,'multiline':False]
['text':'','line_number':39,'multiline':False]
['text':' namespace boost','line_number':59,'multiline':False]
['text':' Intel compiler has problems with SFINAE for copy constructors and deleted functions:','line_number':85,'multiline':False]
['text':'','line_number':86,'multiline':False]
['text':' error: function *function_name* cannot be referenced -- it is a deleted function','line_number':87,'multiline':False]
['text':' static boost::type_traits::yes_type test(T1&, decltype(T1(boost::declval<T1&>()))* = 0);','line_number':88,'multiline':False]
['text':'                                                        ^ ','line_number':89,'multiline':False]
['text':'','line_number':90,'multiline':False]
['text':' MSVC 12.0 (Visual 2013) has problems when the copy constructor has been deleted. See:','line_number':91,'multiline':False]
['text':' https://connect.microsoft.com/VisualStudio/feedback/details/800328/std-is-copy-constructible-is-broken','line_number':92,'multiline':False]
['text':' If you see errors like this:','line_number':110,'multiline':False]
['text':'','line_number':111,'multiline':False]
['text':'      `'T::T(const T&)' is private`','line_number':112,'multiline':False]
['text':'      `boost/type_traits/is_copy_constructible.hpp:68:5: error: within this context`','line_number':113,'multiline':False]
['text':'','line_number':114,'multiline':False]
['text':' then you are trying to call that macro for a structure defined like that:','line_number':115,'multiline':False]
['text':'','line_number':116,'multiline':False]
['text':'      struct T {','line_number':117,'multiline':False]
['text':'          ...','line_number':118,'multiline':False]
['text':'      private:','line_number':119,'multiline':False]
['text':'          T(const T &);','line_number':120,'multiline':False]
['text':'          ...','line_number':121,'multiline':False]
['text':'      };','line_number':122,'multiline':False]
['text':'','line_number':123,'multiline':False]
['text':' To fix that you must modify your structure:','line_number':124,'multiline':False]
['text':'','line_number':125,'multiline':False]
['text':'      // C++03 and C++11 version','line_number':126,'multiline':False]
['text':'      struct T: private boost::noncopyable {','line_number':127,'multiline':False]
['text':'          ...','line_number':128,'multiline':False]
['text':'      private:','line_number':129,'multiline':False]
['text':'          T(const T &);','line_number':130,'multiline':False]
['text':'          ...','line_number':131,'multiline':False]
['text':'      };','line_number':132,'multiline':False]
['text':'','line_number':133,'multiline':False]
['text':'      // C++11 version','line_number':134,'multiline':False]
['text':'      struct T {','line_number':135,'multiline':False]
['text':'          ...','line_number':136,'multiline':False]
['text':'      private:','line_number':137,'multiline':False]
['text':'          T(const T &) = delete;','line_number':138,'multiline':False]
['text':'          ...','line_number':139,'multiline':False]
['text':'      };','line_number':140,'multiline':False]
['text':' namespace detail','line_number':167,'multiline':False]
['text':' namespace boost','line_number':177,'multiline':False]
['text':' BOOST_TT_IS_COPY_CONSTRUCTIBLE_HPP_INCLUDED','line_number':185,'multiline':False]
