['text':'  (C) Copyright John Maddock 2001 - 2002. ','line_number':1,'multiline':False]
['text':'  (C) Copyright Darin Adler 2001. ','line_number':2,'multiline':False]
['text':'  (C) Copyright Jens Maurer 2001. ','line_number':3,'multiline':False]
['text':'  Use, modification and distribution are subject to the ','line_number':4,'multiline':False]
['text':'  Boost Software License, Version 1.0. (See accompanying file ','line_number':5,'multiline':False]
['text':'  LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)','line_number':6,'multiline':False]
['text':'  See http://www.boost.org for most recent version.','line_number':8,'multiline':False]
['text':'  STLPort standard library config:','line_number':10,'multiline':False]
['text':' Apple doesn't seem to reliably defined a *unix* macro','line_number':19,'multiline':False]
['text':'','line_number':29,'multiline':False]
['text':' __STL_STATIC_CONST_INIT_BUG implies BOOST_NO_LIMITS_COMPILE_TIME_CONSTANTS','line_number':30,'multiline':False]
['text':' for versions prior to 4.1(beta)','line_number':31,'multiline':False]
['text':'','line_number':32,'multiline':False]
['text':'','line_number':37,'multiline':False]
['text':' If STLport thinks that there is no partial specialisation, then there is no','line_number':38,'multiline':False]
['text':' std::iterator traits:','line_number':39,'multiline':False]
['text':'','line_number':40,'multiline':False]
['text':'','line_number':45,'multiline':False]
['text':' No new style iostreams on GCC without STLport's iostreams enabled:','line_number':46,'multiline':False]
['text':'','line_number':47,'multiline':False]
['text':'','line_number':52,'multiline':False]
['text':' No new iostreams implies no std::locale, and no std::stringstream:','line_number':53,'multiline':False]
['text':'','line_number':54,'multiline':False]
['text':'','line_number':60,'multiline':False]
['text':' If the streams are not native, and we have a "using ::x" compiler bug','line_number':61,'multiline':False]
['text':' then the io stream facets are not available in namespace std::','line_number':62,'multiline':False]
['text':'','line_number':63,'multiline':False]
['text':'','line_number':78,'multiline':False]
['text':' Without member template support enabled, their are no template','line_number':79,'multiline':False]
['text':' iterate constructors, and no std::allocator:','line_number':80,'multiline':False]
['text':'','line_number':81,'multiline':False]
['text':'','line_number':86,'multiline':False]
['text':' however we always have at least a partial allocator:','line_number':87,'multiline':False]
['text':'','line_number':88,'multiline':False]
['text':'','line_number':99,'multiline':False]
['text':' If STLport thinks there is no wchar_t at all, then we have to disable','line_number':100,'multiline':False]
['text':' the support for the relevant specilazations of std:: templates.','line_number':101,'multiline':False]
['text':'','line_number':102,'multiline':False]
['text':'','line_number':112,'multiline':False]
['text':' We always have SGI style hash_set, hash_map, and slist:','line_number':113,'multiline':False]
['text':'','line_number':114,'multiline':False]
['text':'','line_number':120,'multiline':False]
['text':' STLport does a good job of importing names into namespace std::,','line_number':121,'multiline':False]
['text':' but doesn't always get them all, define BOOST_NO_STDC_NAMESPACE, since our','line_number':122,'multiline':False]
['text':' workaround does not conflict with STLports:','line_number':123,'multiline':False]
['text':'','line_number':124,'multiline':False]
['text':'','line_number':125,'multiline':False]
['text':' Harold Howe says:','line_number':126,'multiline':False]
['text':' Borland switched to STLport in BCB6. Defining BOOST_NO_STDC_NAMESPACE with','line_number':127,'multiline':False]
['text':' BCB6 does cause problems. If we detect C++ Builder, then don't define ','line_number':128,'multiline':False]
['text':' BOOST_NO_STDC_NAMESPACE','line_number':129,'multiline':False]
['text':'','line_number':130,'multiline':False]
['text':'','line_number':132,'multiline':False]
['text':' If STLport is using it's own namespace, and the real names are in','line_number':133,'multiline':False]
['text':' the global namespace, then we duplicate STLport's using declarations','line_number':134,'multiline':False]
['text':' (by defining BOOST_NO_STDC_NAMESPACE), we do this because STLport doesn't','line_number':135,'multiline':False]
['text':' necessarily import all the names we need into namespace std::','line_number':136,'multiline':False]
['text':' ','line_number':137,'multiline':False]
['text':' STLport doesn't import std::abs correctly:','line_number':147,'multiline':False]
['text':' and strcmp/strcpy don't get imported either ('cos they are macros)','line_number':150,'multiline':False]
['text':'','line_number':163,'multiline':False]
['text':' std::use_facet may be non-standard, uses a class instead:','line_number':164,'multiline':False]
['text':'','line_number':165,'multiline':False]
['text':'','line_number':171,'multiline':False]
['text':' If STLport thinks there are no wide functions, <cwchar> etc. is not working; but','line_number':172,'multiline':False]
['text':' only if BOOST_NO_STDC_NAMESPACE is not defined (if it is then we do the import ','line_number':173,'multiline':False]
['text':' into std:: ourselves).','line_number':174,'multiline':False]
['text':'','line_number':175,'multiline':False]
['text':'','line_number':181,'multiline':False]
['text':' If STLport for some reason was configured so that it thinks that wchar_t','line_number':182,'multiline':False]
['text':' is not an intrinsic type, then we have to disable the support for it as','line_number':183,'multiline':False]
['text':' well (we would be missing required specializations otherwise).','line_number':184,'multiline':False]
['text':'','line_number':185,'multiline':False]
['text':'','line_number':191,'multiline':False]
['text':' Borland ships a version of STLport with C++ Builder 6 that lacks','line_number':192,'multiline':False]
['text':' hashtables and the like:','line_number':193,'multiline':False]
['text':'','line_number':194,'multiline':False]
['text':'','line_number':199,'multiline':False]
['text':' gcc-2.95.3/STLPort does not like the using declarations we use to get ADL with std::min/max','line_number':200,'multiline':False]
['text':'','line_number':201,'multiline':False]
['text':' for std::min and std::max','line_number':203,'multiline':False]
['text':'  C++0x headers not yet implemented','line_number':209,'multiline':False]
['text':'','line_number':210,'multiline':False]
['text':' C++14 features','line_number':250,'multiline':False]
['text':' C++17 features','line_number':253,'multiline':False]
