['text':'  (C) Copyright John Maddock 2003.','line_number':1,'multiline':False]
['text':'  Use, modification and distribution are subject to the','line_number':2,'multiline':False]
['text':'  Boost Software License, Version 1.0. (See accompanying file','line_number':3,'multiline':False]
['text':'  LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)','line_number':4,'multiline':False]
['text':'
  *   LOCATION:    see http://www.boost.org for most recent version.
  *   FILE         auto_link.hpp
  *   VERSION      see <boost/version.hpp>
  *   DESCRIPTION: Automatic library inclusion for Borland/Microsoft compilers.
  ','line_number':6,'multiline':True]
['text':'************************************************************************

USAGE:
~~~~~~

Before including this header you must define one or more of define the following macros:

BOOST_LIB_NAME:           Required: A string containing the basename of the library,
                          for example boost_regex.
BOOST_LIB_TOOLSET:        Optional: the base name of the toolset.
BOOST_DYN_LINK:           Optional: when set link to dll rather than static library.
BOOST_LIB_DIAGNOSTIC:     Optional: when set the header will print out the name
                          of the library selected (useful for debugging).
BOOST_AUTO_LINK_NOMANGLE: Specifies that we should link to BOOST_LIB_NAME.lib,
                          rather than a mangled-name version.
BOOST_AUTO_LINK_TAGGED:   Specifies that we link to libraries built with the --layout=tagged option.
                          This is essentially the same as the default name-mangled version, but without
                          the compiler name and version, or the Boost version.  Just the build options.
BOOST_AUTO_LINK_SYSTEM:   Specifies that we link to libraries built with the --layout=system option.
                          This is essentially the same as the non-name-mangled version, but with
                          the prefix to differentiate static and dll builds

These macros will be undef'ed at the end of the header, further this header
has no include guards - so be sure to include it only once from your library!

Algorithm:
~~~~~~~~~~

Libraries for Borland and Microsoft compilers are automatically
selected here, the name of the lib is selected according to the following
formula:

BOOST_LIB_PREFIX
   + BOOST_LIB_NAME
   + "_"
   + BOOST_LIB_TOOLSET
   + BOOST_LIB_THREAD_OPT
   + BOOST_LIB_RT_OPT
   + BOOST_LIB_ARCH_AND_MODEL_OPT
   "-"
   + BOOST_LIB_VERSION
   + BOOST_LIB_SUFFIX

These are defined as:

BOOST_LIB_PREFIX:     "lib" for static libraries otherwise "".

BOOST_LIB_NAME:       The base name of the lib ( for example boost_regex).

BOOST_LIB_TOOLSET:    The compiler toolset name (vc6, vc7, bcb5 etc).

BOOST_LIB_THREAD_OPT: "-mt" for multithread builds, otherwise nothing.

BOOST_LIB_RT_OPT:     A suffix that indicates the runtime library used,
                      contains one or more of the following letters after
                      a hyphen:

                      s      static runtime (dynamic if not present).
                      g      debug/diagnostic runtime (release if not present).
                      y      Python debug/diagnostic runtime (release if not present).
                      d      debug build (release if not present).
                      p      STLport build.
                      n      STLport build without its IOStreams.

BOOST_LIB_ARCH_AND_MODEL_OPT: The architecture and address model
                              (-x32 or -x64 for x86/32 and x86/64 respectively)

BOOST_LIB_VERSION:    The Boost version, in the form x_y, for Boost version x.y.

BOOST_LIB_SUFFIX:     Static/import libraries extension (".lib", ".a") for the compiler.

**************************************************************************','line_number':13,'multiline':True]
['text':'','line_number':91,'multiline':False]
['text':' C language compatability (no, honestly)','line_number':92,'multiline':False]
['text':'','line_number':93,'multiline':False]
['text':'','line_number':98,'multiline':False]
['text':' Only include what follows for known and supported compilers:','line_number':99,'multiline':False]
['text':'','line_number':100,'multiline':False]
['text':'','line_number':116,'multiline':False]
['text':' error check:','line_number':117,'multiline':False]
['text':'','line_number':118,'multiline':False]
['text':'','line_number':124,'multiline':False]
['text':' select toolset if not defined already:','line_number':125,'multiline':False]
['text':'','line_number':126,'multiline':False]
['text':' Note: no compilers before 1200 are supported','line_number':129,'multiline':False]
['text':' eVC4:','line_number':133,'multiline':False]
['text':' vc6:','line_number':136,'multiline':False]
['text':' vc7:','line_number':142,'multiline':False]
['text':' vc71:','line_number':147,'multiline':False]
['text':' vc80:','line_number':152,'multiline':False]
['text':' vc90:','line_number':157,'multiline':False]
['text':' vc10:','line_number':162,'multiline':False]
['text':' vc11:','line_number':167,'multiline':False]
['text':' vc12:','line_number':172,'multiline':False]
['text':' vc14:','line_number':177,'multiline':False]
['text':' vc14.1:','line_number':182,'multiline':False]
['text':' vc14.2:','line_number':187,'multiline':False]
['text':' vc14.3:','line_number':192,'multiline':False]
['text':' Embarcadero Clang based compilers:','line_number':197,'multiline':False]
['text':' CBuilder 6:','line_number':202,'multiline':False]
['text':' Intel C++, no version number:','line_number':207,'multiline':False]
['text':' Metrowerks CodeWarrior 8.x','line_number':212,'multiline':False]
['text':' Metrowerks CodeWarrior 9.x','line_number':217,'multiline':False]
['text':' Clang on Windows','line_number':222,'multiline':False]
['text':' BOOST_LIB_TOOLSET','line_number':226,'multiline':False]
['text':'','line_number':228,'multiline':False]
['text':' select thread opt:','line_number':229,'multiline':False]
['text':'','line_number':230,'multiline':False]
['text':'','line_number':372,'multiline':False]
['text':' figure out whether we want the debug builds or not:','line_number':373,'multiline':False]
['text':'','line_number':374,'multiline':False]
['text':'','line_number':378,'multiline':False]
['text':' sanity check:','line_number':379,'multiline':False]
['text':'','line_number':380,'multiline':False]
['text':'','line_number':415,'multiline':False]
['text':' BOOST_LIB_ARCH_AND_MODEL_OPT','line_number':416,'multiline':False]
['text':'','line_number':417,'multiline':False]
['text':'','line_number':429,'multiline':False]
['text':' select linkage opt:','line_number':430,'multiline':False]
['text':'','line_number':431,'multiline':False]
['text':'','line_number':440,'multiline':False]
['text':' now include the lib:','line_number':441,'multiline':False]
['text':'','line_number':442,'multiline':False]
['text':' _MSC_VER || __BORLANDC__','line_number':489,'multiline':False]
['text':'','line_number':491,'multiline':False]
['text':' finally undef any macros we may have set:','line_number':492,'multiline':False]
['text':'','line_number':493,'multiline':False]
['text':' Don't undef this one: it can be set by the user and should be the ','line_number':500,'multiline':False]
['text':' same for all libraries:','line_number':501,'multiline':False]
['text':'#if defined(BOOST_LIB_TOOLSET)','line_number':502,'multiline':False]
['text':'#  undef BOOST_LIB_TOOLSET','line_number':503,'multiline':False]
['text':'#endif','line_number':504,'multiline':False]
