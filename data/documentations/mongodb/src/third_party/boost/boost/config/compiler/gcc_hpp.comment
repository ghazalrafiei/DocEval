['text':'  (C) Copyright John Maddock 2001 - 2003.','line_number':1,'multiline':False]
['text':'  (C) Copyright Darin Adler 2001 - 2002.','line_number':2,'multiline':False]
['text':'  (C) Copyright Jens Maurer 2001 - 2002.','line_number':3,'multiline':False]
['text':'  (C) Copyright Beman Dawes 2001 - 2003.','line_number':4,'multiline':False]
['text':'  (C) Copyright Douglas Gregor 2002.','line_number':5,'multiline':False]
['text':'  (C) Copyright David Abrahams 2002 - 2003.','line_number':6,'multiline':False]
['text':'  (C) Copyright Synge Todo 2003.','line_number':7,'multiline':False]
['text':'  Use, modification and distribution are subject to the','line_number':8,'multiline':False]
['text':'  Boost Software License, Version 1.0. (See accompanying file','line_number':9,'multiline':False]
['text':'  LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)','line_number':10,'multiline':False]
['text':'  See http://www.boost.org for most recent version.','line_number':12,'multiline':False]
['text':'  GNU C++ compiler setup.','line_number':14,'multiline':False]
['text':'','line_number':16,'multiline':False]
['text':' Define BOOST_GCC so we know this is "real" GCC and not some pretender:','line_number':17,'multiline':False]
['text':'','line_number':18,'multiline':False]
['text':'','line_number':40,'multiline':False]
['text':' All problems to gcc-3.x and earlier here:','line_number':41,'multiline':False]
['text':'','line_number':42,'multiline':False]
['text':' GCC prior to 3.4 had #pragma once too but it didn't work well with filesystem links','line_number':49,'multiline':False]
['text':' Previous versions of GCC did not completely implement value-initialization:','line_number':55,'multiline':False]
['text':' GCC Bug 30111, "Value-initialization of POD base class doesn't initialize','line_number':56,'multiline':False]
['text':' members", reported by Jonathan Wakely in 2006,','line_number':57,'multiline':False]
['text':' http://gcc.gnu.org/bugzilla/show_bug.cgi?id=30111 (fixed for GCC 4.4)','line_number':58,'multiline':False]
['text':' GCC Bug 33916, "Default constructor fails to initialize array members",','line_number':59,'multiline':False]
['text':' reported by Michael Elizabeth Chastain in 2007,','line_number':60,'multiline':False]
['text':' http://gcc.gnu.org/bugzilla/show_bug.cgi?id=33916 (fixed for GCC 4.2.4)','line_number':61,'multiline':False]
['text':' See also: http://www.boost.org/libs/utility/value_init.htm#compiler_issues','line_number':62,'multiline':False]
['text':'','line_number':71,'multiline':False]
['text':' Threading support: Turn this on unconditionally here (except for','line_number':72,'multiline':False]
['text':' those platforms where we can know for sure). It will get turned off again','line_number':73,'multiline':False]
['text':' later if no threading API is detected.','line_number':74,'multiline':False]
['text':'','line_number':75,'multiline':False]
['text':'','line_number':80,'multiline':False]
['text':' gcc has "long long"','line_number':81,'multiline':False]
['text':' Except on Darwin with standard compliance enabled (-pedantic)','line_number':82,'multiline':False]
['text':' Apple gcc helpfully defines this macro we can query','line_number':83,'multiline':False]
['text':'','line_number':84,'multiline':False]
['text':'','line_number':89,'multiline':False]
['text':' gcc implements the named return value optimization since version 3.1','line_number':90,'multiline':False]
['text':'','line_number':91,'multiline':False]
['text':' Branch prediction hints','line_number':94,'multiline':False]
['text':'','line_number':98,'multiline':False]
['text':' Dynamic shared object (DSO) and dynamic-link library (DLL) support','line_number':99,'multiline':False]
['text':'','line_number':100,'multiline':False]
['text':' All Win32 development environments, including 64-bit Windows and MinGW, define','line_number':103,'multiline':False]
['text':' _WIN32 or one of its variant spellings. Note that Cygwin is a POSIX environment,','line_number':104,'multiline':False]
['text':' so does not define _WIN32 or its variants, but still supports dllexport/dllimport.','line_number':105,'multiline':False]
['text':' config/platform/win32.hpp will define BOOST_SYMBOL_EXPORT, etc., unless already defined','line_number':115,'multiline':False]
['text':'','line_number':119,'multiline':False]
['text':' RTTI and typeinfo detection is possible post gcc-4.3:','line_number':120,'multiline':False]
['text':'','line_number':121,'multiline':False]
['text':'','line_number':133,'multiline':False]
['text':' Recent GCC versions have __int128 when in 64-bit mode.','line_number':134,'multiline':False]
['text':'','line_number':135,'multiline':False]
['text':' We disable this if the compiler is really nvcc with C++03 as it','line_number':136,'multiline':False]
['text':' doesn't actually support __int128 as of CUDA_VERSION=7500','line_number':137,'multiline':False]
['text':' even though it defines __SIZEOF_INT128__.','line_number':138,'multiline':False]
['text':' See https://svn.boost.org/trac/boost/ticket/8048','line_number':139,'multiline':False]
['text':'     https://svn.boost.org/trac/boost/ticket/11852','line_number':140,'multiline':False]
['text':' Only re-enable this for nvcc if you're absolutely sure','line_number':141,'multiline':False]
['text':' of the circumstances under which it's supported:','line_number':142,'multiline':False]
['text':'','line_number':143,'multiline':False]
['text':'','line_number':155,'multiline':False]
['text':' Recent GCC versions have a __float128 native type, we need to','line_number':156,'multiline':False]
['text':' include a std lib header to detect this - not ideal, but we'll','line_number':157,'multiline':False]
['text':' be including <cstddef> later anyway when we select the std lib.','line_number':158,'multiline':False]
['text':'','line_number':159,'multiline':False]
['text':' Nevertheless, as of CUDA 7.5, using __float128 with the host','line_number':160,'multiline':False]
['text':' compiler in pre-C++11 mode is still not supported.','line_number':161,'multiline':False]
['text':' See https://svn.boost.org/trac/boost/ticket/11852','line_number':162,'multiline':False]
['text':'','line_number':163,'multiline':False]
['text':' C++0x features in 4.3.n and later','line_number':173,'multiline':False]
['text':'','line_number':174,'multiline':False]
['text':' C++0x features are only enabled when -std=c++0x or -std=gnu++0x are','line_number':176,'multiline':False]
['text':' passed on the command line, which in turn defines','line_number':177,'multiline':False]
['text':' __GXX_EXPERIMENTAL_CXX0X__.','line_number':178,'multiline':False]
['text':' C++0x features in 4.4.n and later','line_number':190,'multiline':False]
['text':'','line_number':191,'multiline':False]
['text':' GCC 4.5 forbids declaration of defaulted functions in private or protected sections','line_number':209,'multiline':False]
['text':' C++0x features in 4.5.0 and later','line_number':214,'multiline':False]
['text':'','line_number':215,'multiline':False]
['text':' C++0x features in 4.5.1 and later','line_number':224,'multiline':False]
['text':'','line_number':225,'multiline':False]
['text':' scoped enums have a serious bug in 4.4.0, so define BOOST_NO_CXX11_SCOPED_ENUMS before 4.5.1','line_number':227,'multiline':False]
['text':' See http://gcc.gnu.org/bugzilla/show_bug.cgi?id=38064','line_number':228,'multiline':False]
['text':' C++0x features in 4.6.n and later','line_number':232,'multiline':False]
['text':'','line_number':233,'multiline':False]
['text':' C++0x features in 4.7.n and later','line_number':242,'multiline':False]
['text':'','line_number':243,'multiline':False]
['text':' Note that while constexpr is partly supported in gcc-4.6 it's a ','line_number':245,'multiline':False]
['text':' pre-std version with several bugs:','line_number':246,'multiline':False]
['text':' C++0x features in 4.8.n and later','line_number':255,'multiline':False]
['text':'','line_number':256,'multiline':False]
['text':' C++0x features in 4.8.1 and later','line_number':262,'multiline':False]
['text':'','line_number':263,'multiline':False]
['text':' C++0x features in 4.9.n and later','line_number':270,'multiline':False]
['text':'','line_number':271,'multiline':False]
['text':' Although alignas support is added in gcc 4.8, it does not accept','line_number':273,'multiline':False]
['text':' dependent constant expressions as an argument until gcc 4.9.','line_number':274,'multiline':False]
['text':' C++0x features in 5.1 and later','line_number':278,'multiline':False]
['text':'','line_number':279,'multiline':False]
['text':' C++14 features in 4.9.0 and later','line_number':284,'multiline':False]
['text':'','line_number':285,'multiline':False]
['text':' C++ 14:','line_number':297,'multiline':False]
['text':' C++17','line_number':308,'multiline':False]
['text':' thread_local was broken on mingw for all 32bit compiler releases prior to 11.x, see','line_number':327,'multiline':False]
['text':' https://sourceforge.net/p/mingw-w64/bugs/527/','line_number':328,'multiline':False]
['text':' https://gcc.gnu.org/bugzilla/show_bug.cgi?id=83562','line_number':329,'multiline':False]
['text':' Not setting this causes program termination on thread exit.','line_number':330,'multiline':False]
['text':'','line_number':334,'multiline':False]
['text':' Unused attribute:','line_number':335,'multiline':False]
['text':' Type aliasing hint. Supported since gcc 3.3.','line_number':340,'multiline':False]
['text':'','line_number':343,'multiline':False]
['text':' __builtin_unreachable:','line_number':344,'multiline':False]
['text':' ConceptGCC compiler:','line_number':353,'multiline':False]
['text':'   http://www.generic-programming.org/software/ConceptGCC/','line_number':354,'multiline':False]
['text':' versions check:','line_number':360,'multiline':False]
['text':' we don't know gcc prior to version 3.30:','line_number':361,'multiline':False]
['text':'','line_number':365,'multiline':False]
['text':' last known and checked version is 8.1:','line_number':366,'multiline':False]
['text':' we don't emit warnings here anymore since there are no defect macros defined for','line_number':371,'multiline':False]
['text':' gcc post 3.4, so any failures are gcc regressions...','line_number':372,'multiline':False]
['text':'#     warning "boost: Unknown compiler version - please run the configure tests and report the results"','line_number':373,'multiline':False]
