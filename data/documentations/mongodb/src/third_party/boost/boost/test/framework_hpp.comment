['text':'  (C) Copyright Gennadiy Rozental 2001.','line_number':1,'multiline':False]
['text':'  Distributed under the Boost Software License, Version 1.0.','line_number':2,'multiline':False]
['text':'  (See accompanying file LICENSE_1_0.txt or copy at','line_number':3,'multiline':False]
['text':'  http://www.boost.org/LICENSE_1_0.txt)','line_number':4,'multiline':False]
['text':'  See http://www.boost.org/libs/test for the library home page.','line_number':6,'multiline':False]
['text':'','line_number':7,'multiline':False]
['text':'!@file','line_number':8,'multiline':False]
['text':'!@brief Defines Unit Test Framework mono-state interfaces.','line_number':9,'multiline':False]
['text':'! The framework interfaces are based on Monostate design pattern.','line_number':10,'multiline':False]
['text':' ***************************************************************************','line_number':11,'multiline':False]
['text':' Boost.Test','line_number':16,'multiline':False]
['text':' STL','line_number':23,'multiline':False]
['text':'____________________________________________________________________________//','line_number':26,'multiline':False]
['text':'/ Main namespace for the Unit Test Framework interfaces and implementation','line_number':30,'multiline':False]
['text':' ************************************************************************** //','line_number':33,'multiline':False]
['text':' **************              init_unit_test_func             ************** //','line_number':34,'multiline':False]
['text':' ************************************************************************** //','line_number':35,'multiline':False]
['text':'/ Test module initialization routine signature','line_number':37,'multiline':False]
['text':'/ Different depending on whether BOOST_TEST_ALTERNATIVE_INIT_API is defined or not','line_number':39,'multiline':False]
['text':' ************************************************************************** //','line_number':46,'multiline':False]
['text':' **************                   framework                  ************** //','line_number':47,'multiline':False]
['text':' ************************************************************************** //','line_number':48,'multiline':False]
['text':'/ Namespace of the Unit Test Framework mono-state','line_number':50,'multiline':False]
['text':'/ @name Unit Test Framework initialization and shutdown','line_number':53,'multiline':False]
['text':'/ @{','line_number':54,'multiline':False]
['text':'/ @brief This function performs initialization of the framework mono-state.','line_number':56,'multiline':False]
['text':'/','line_number':57,'multiline':False]
['text':'/ It needs to be called every time before the test is started.','line_number':58,'multiline':False]
['text':'/ @param[in] init_func test module initialization routine','line_number':59,'multiline':False]
['text':'/ @param[in] argc command line arguments collection','line_number':60,'multiline':False]
['text':'/ @param[in] argv command line arguments collection','line_number':61,'multiline':False]
['text':'/ This function applies all the decorators and figures out default run status. This argument facilitates an','line_number':64,'multiline':False]
['text':'/ ability of the test cases to prepare some other test units (primarily used internally for self testing).','line_number':65,'multiline':False]
['text':'/ @param[in] tu Optional id of the test unit representing root of test tree. If absent, master test suite is used','line_number':66,'multiline':False]
['text':'/ This function returns true when testing is in progress (setup is finished).','line_number':69,'multiline':False]
['text':'/ This function shuts down the framework and clears up its mono-state.','line_number':72,'multiline':False]
['text':'/','line_number':73,'multiline':False]
['text':'/ It needs to be at the very end of test module execution','line_number':74,'multiline':False]
['text':'/ @}','line_number':76,'multiline':False]
['text':'/ @name Test unit registration','line_number':78,'multiline':False]
['text':'/ @{','line_number':79,'multiline':False]
['text':'/ Provides both read and write access to current "leaf" auto test suite during the test unit registration phase.','line_number':81,'multiline':False]
['text':'/','line_number':82,'multiline':False]
['text':'/ During auto-registration phase the framework maintain a FIFO queue of test units being registered. New test units become children','line_number':83,'multiline':False]
['text':'/ of the current "leaf" test suite and if this is test suite it is pushed back into queue and becomes a new leaf.','line_number':84,'multiline':False]
['text':'/ When test suite registration is completed, a test suite is popped from the back of the queue. Only automatically registered test suites','line_number':85,'multiline':False]
['text':'/ should be added to this queue. Master test suite is always a zero element in this queue, so if no other test suites are registered','line_number':86,'multiline':False]
['text':'/ all test cases are added to master test suite.','line_number':87,'multiline':False]
['text':'/ This function facilitates all three possible actions:','line_number':89,'multiline':False]
['text':'/    - if no argument are provided it returns the current queue leaf test suite','line_number':90,'multiline':False]
['text':'/    - if test suite is provided and no second argument are set, test suite is added to the queue','line_number':91,'multiline':False]
['text':'/    - if no test suite are provided and last argument is false, the semantic of this function is similar to queue pop: last element is popped from the queue','line_number':92,'multiline':False]
['text':'/ @param[in] ts test suite to push back to the queue','line_number':93,'multiline':False]
['text':'/ @param[in] push_or_pop should we push ts to the queue or pop leaf test suite instead','line_number':94,'multiline':False]
['text':'/ @returns a reference to the currently active/"leaf" test suite','line_number':95,'multiline':False]
['text':'/ This function add new test case into the global collection of test units the framework aware of.','line_number':98,'multiline':False]
['text':'/ This function also assignes unique test unit id for every test case. Later on one can use this id to locate','line_number':100,'multiline':False]
['text':'/ the test case if necessary. This is the way for the framework to maintain weak references between test units.','line_number':101,'multiline':False]
['text':'/ @param[in]  tc  test case to register','line_number':102,'multiline':False]
['text':'/ This function add new test suite into the global collection of test units the framework aware of.','line_number':105,'multiline':False]
['text':'/ This function also assignes unique test unit id for every test suite. Later on one can use this id to locate','line_number':107,'multiline':False]
['text':'/ the test case if necessary. This is the way for the framework to maintain weak references between test units.','line_number':108,'multiline':False]
['text':'/ @param[in]  ts  test suite to register','line_number':109,'multiline':False]
['text':'/ This function removes the test unit from the collection of known test units and destroys the test unit object.','line_number':112,'multiline':False]
['text':'/ This function also assigns unique test unit id for every test case. Later on one can use this id to located','line_number':114,'multiline':False]
['text':'/ the test case if necessary. This is the way for the framework to maintain weak references between test units.','line_number':115,'multiline':False]
['text':'/ @param[in]  tu  test unit to deregister','line_number':116,'multiline':False]
['text':' This function clears up the framework mono-state.','line_number':119,'multiline':False]
['text':'/ After this call the framework can be reinitialized to perform a second test run during the same program lifetime.','line_number':121,'multiline':False]
['text':'/ @}','line_number':123,'multiline':False]
['text':'/ @name Test observer registration','line_number':125,'multiline':False]
['text':'/ @{','line_number':126,'multiline':False]
['text':'/ Adds new test execution observer object into the framework's list of test observers.','line_number':127,'multiline':False]
['text':'/ Observer lifetime should exceed the the testing execution timeframe','line_number':129,'multiline':False]
['text':'/ @param[in]  to  test observer object to add','line_number':130,'multiline':False]
['text':'/ Excludes the observer object form the framework's list of test observers','line_number':133,'multiline':False]
['text':'/ @param[in]  to  test observer object to exclude','line_number':134,'multiline':False]
['text':'/ @}','line_number':137,'multiline':False]
['text':'/ @name Global fixtures registration','line_number':139,'multiline':False]
['text':'/ @{','line_number':140,'multiline':False]
['text':'/ Adds a new global fixture to be setup before any other tests starts and tore down after','line_number':142,'multiline':False]
['text':'/ any other tests finished.','line_number':143,'multiline':False]
['text':'/ Test unit fixture lifetime should exceed the testing execution timeframe','line_number':144,'multiline':False]
['text':'/ @param[in]  tuf  fixture to add','line_number':145,'multiline':False]
['text':'/ Removes a test global fixture from the framework','line_number':148,'multiline':False]
['text':'/','line_number':149,'multiline':False]
['text':'/ Test unit fixture lifetime should exceed the testing execution timeframe','line_number':150,'multiline':False]
['text':'/ @param[in]  tuf  fixture to remove','line_number':151,'multiline':False]
['text':'/ @}','line_number':153,'multiline':False]
['text':'/ @name Assertion/uncaught exception context support','line_number':155,'multiline':False]
['text':'/ @{','line_number':156,'multiline':False]
['text':'/ Context accessor','line_number':157,'multiline':False]
['text':'/ Is there any context?','line_number':161,'multiline':False]
['text':'/ Give me next frame; empty - last frame','line_number':164,'multiline':False]
['text':' Data members','line_number':168,'multiline':False]
['text':'/ Records context frame message.','line_number':172,'multiline':False]
['text':'/ Some context frames are sticky - they can only explicitly cleared by specifying context id. Other (non sticky) context frames cleared after every assertion.','line_number':174,'multiline':False]
['text':'/ @param[in] context_descr context frame message','line_number':175,'multiline':False]
['text':'/ @param[in] sticky is this sticky frame or not','line_number':176,'multiline':False]
['text':'/ @returns id of the newly created frame','line_number':177,'multiline':False]
['text':'/ Erases context frame (when test exits context scope)','line_number':179,'multiline':False]
['text':'/ If context_id is passed clears that specific context frame identified by this id, otherwise clears all non sticky contexts.','line_number':181,'multiline':False]
['text':'/ Produces an instance of small "delegate" object, which facilitates access to collected context.','line_number':183,'multiline':False]
['text':'/ @}','line_number':185,'multiline':False]
['text':'/ @name Access to registered test units.','line_number':187,'multiline':False]
['text':'/ @{','line_number':188,'multiline':False]
['text':'/ This function provides access to the master test suite.','line_number':189,'multiline':False]
['text':'/ There is only only master test suite per test module.','line_number':191,'multiline':False]
['text':'/ @returns a reference the master test suite instance','line_number':192,'multiline':False]
['text':'/ This function provides an access to the test unit currently being executed.','line_number':195,'multiline':False]
['text':'/ The difference with current_test_case is about the time between a test-suite','line_number':197,'multiline':False]
['text':'/ is being set up or torn down (fixtures) and when the test-cases of that suite start.','line_number':198,'multiline':False]
['text':'/ This function is only valid during test execution phase.','line_number':200,'multiline':False]
['text':'/ @see current_test_case_id, current_test_case','line_number':201,'multiline':False]
['text':'/ This function provides an access to the test case currently being executed.','line_number':204,'multiline':False]
['text':'/ This function is only valid during test execution phase.','line_number':206,'multiline':False]
['text':'/ @see current_test_case_id','line_number':207,'multiline':False]
['text':'/ This function provides an access to an id of the test case currently being executed.','line_number':210,'multiline':False]
['text':'/ This function safer than current_test_case, cause if wont throw if no test case is being executed.','line_number':212,'multiline':False]
['text':'/ @see current_test_case','line_number':213,'multiline':False]
['text':' safe version of above ','line_number':214,'multiline':True]
['text':'/ This function provides access to a test unit by id and type combination. It will throw if no test unit located.','line_number':216,'multiline':False]
['text':'/ @param[in]  tu_id    id of a test unit to locate','line_number':217,'multiline':False]
['text':'/ @param[in]  tu_type  type of a test unit to locate','line_number':218,'multiline':False]
['text':'/ @returns located test unit','line_number':219,'multiline':False]
['text':'/ This function template provides access to a typed test unit by id','line_number':222,'multiline':False]
['text':'/ It will throw if you specify incorrect test unit type','line_number':224,'multiline':False]
['text':'/ @tparam UnitType compile time type of test unit to get (test_suite or test_case)','line_number':225,'multiline':False]
['text':'/ @param  id id of test unit to get','line_number':226,'multiline':False]
['text':'/@}','line_number':232,'multiline':False]
['text':'/ @name Test initiation interface','line_number':234,'multiline':False]
['text':'/ @{','line_number':235,'multiline':False]
['text':'/ Initiates test execution','line_number':237,'multiline':False]
['text':'/ This function is used to start the test execution from a specific "root" test unit.','line_number':239,'multiline':False]
['text':'/ If no root provided, test is started from master test suite. This second argument facilitates an ability of the test cases to','line_number':240,'multiline':False]
['text':'/ start some other test units (primarily used internally for self testing).','line_number':241,'multiline':False]
['text':'/ @param[in] tu Optional id of the test unit or test unit itself from which the test is started. If absent, master test suite is used','line_number':242,'multiline':False]
['text':'/ @param[in] continue_test true == continue test if it was already started, false == restart the test from scratch regardless','line_number':243,'multiline':False]
['text':'/ Initiates test execution. Same as other overload','line_number':245,'multiline':False]
['text':'/ @}','line_number':247,'multiline':False]
['text':'/ @name Test events dispatchers','line_number':249,'multiline':False]
['text':'/ @{','line_number':250,'multiline':False]
['text':'/ Reports results of assertion to all test observers','line_number':251,'multiline':False]
['text':'/ Reports uncaught exception to all test observers','line_number':253,'multiline':False]
['text':'/ Reports aborted test unit to all test observers','line_number':255,'multiline':False]
['text':'/ Reports aborted test module to all test observers','line_number':257,'multiline':False]
['text':'/ @}','line_number':259,'multiline':False]
['text':' exclusively for self test','line_number':262,'multiline':False]
['text':' Helper for setting the name of the master test suite globally','line_number':266,'multiline':False]
['text':' namespace impl','line_number':271,'multiline':False]
['text':' ************************************************************************** //','line_number':273,'multiline':False]
['text':' **************                framework errors              ************** //','line_number':274,'multiline':False]
['text':' ************************************************************************** //','line_number':275,'multiline':False]
['text':'/ This exception type is used to report internal Boost.Test framework errors.','line_number':277,'multiline':False]
['text':'____________________________________________________________________________//','line_number':282,'multiline':False]
['text':'/ This exception type is used to report test module setup errors.','line_number':284,'multiline':False]
['text':'____________________________________________________________________________//','line_number':291,'multiline':False]
['text':'____________________________________________________________________________//','line_number':299,'multiline':False]
['text':' namespace framework','line_number':301,'multiline':False]
['text':' unit_test','line_number':302,'multiline':False]
['text':' namespace boost','line_number':303,'multiline':False]
['text':' BOOST_TEST_FRAMEWORK_HPP_020805GER','line_number':307,'multiline':False]
