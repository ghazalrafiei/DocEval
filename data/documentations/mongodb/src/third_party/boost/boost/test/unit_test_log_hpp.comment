['text':'  (C) Copyright Gennadiy Rozental 2001.','line_number':1,'multiline':False]
['text':'  Distributed under the Boost Software License, Version 1.0.','line_number':2,'multiline':False]
['text':'  (See accompanying file LICENSE_1_0.txt or copy at','line_number':3,'multiline':False]
['text':'  http://www.boost.org/LICENSE_1_0.txt)','line_number':4,'multiline':False]
['text':'  See http://www.boost.org/libs/test for the library home page.','line_number':6,'multiline':False]
['text':'','line_number':7,'multiline':False]
['text':'/ @file','line_number':8,'multiline':False]
['text':'/ @brief defines singleton class unit_test_log and all manipulators.','line_number':9,'multiline':False]
['text':'/ unit_test_log has output stream like interface. It's implementation is','line_number':10,'multiline':False]
['text':'/ completely hidden with pimple idiom','line_number':11,'multiline':False]
['text':' ***************************************************************************','line_number':12,'multiline':False]
['text':' Boost.Test','line_number':17,'multiline':False]
['text':' Boost','line_number':27,'multiline':False]
['text':' STL','line_number':29,'multiline':False]
['text':' for std::ostream&','line_number':30,'multiline':False]
['text':'____________________________________________________________________________//','line_number':34,'multiline':False]
['text':' ************************************************************************** //','line_number':39,'multiline':False]
['text':' **************                log manipulators              ************** //','line_number':40,'multiline':False]
['text':' ************************************************************************** //','line_number':41,'multiline':False]
['text':' namespace log','line_number':57,'multiline':False]
['text':' ************************************************************************** //','line_number':59,'multiline':False]
['text':' **************             entry_value_collector            ************** //','line_number':60,'multiline':False]
['text':' ************************************************************************** //','line_number':61,'multiline':False]
['text':' Constructors','line_number':67,'multiline':False]
['text':' collection interface','line_number':72,'multiline':False]
['text':' Data members','line_number':77,'multiline':False]
['text':' namespace ut_detail','line_number':81,'multiline':False]
['text':' ************************************************************************** //','line_number':83,'multiline':False]
['text':' **************                 unit_test_log                ************** //','line_number':84,'multiline':False]
['text':' ************************************************************************** //','line_number':85,'multiline':False]
['text':'/ @brief Manages the sets of loggers, their streams and log levels','line_number':87,'multiline':False]
['text':'/','line_number':88,'multiline':False]
['text':'/ The Boost.Test framework allows for having several formatters/loggers at the same time, each of which','line_number':89,'multiline':False]
['text':'/ having their own log level and output stream.','line_number':90,'multiline':False]
['text':'/','line_number':91,'multiline':False]
['text':'/ This class serves the purpose of','line_number':92,'multiline':False]
['text':'/ - exposing an interface to the test framework (as a boost::unit_test::test_observer)','line_number':93,'multiline':False]
['text':'/ - exposing an interface to the testing tools','line_number':94,'multiline':False]
['text':'/ - managing several loggers','line_number':95,'multiline':False]
['text':'/','line_number':96,'multiline':False]
['text':'/ @note Accesses to the functions exposed by this class are made through the singleton','line_number':97,'multiline':False]
['text':'/   @c boost::unit_test::unit_test_log.','line_number':98,'multiline':False]
['text':'/','line_number':99,'multiline':False]
['text':'/ Users/developers willing to implement their own formatter need to:','line_number':100,'multiline':False]
['text':'/ - implement a boost::unit_test::unit_test_log_formatter that will output the desired format','line_number':101,'multiline':False]
['text':'/ - register the formatter during a eg. global fixture using the method @c set_formatter (though the framework singleton).','line_number':102,'multiline':False]
['text':'/','line_number':103,'multiline':False]
['text':'/ @warning this observer has a higher priority than the @ref boost::unit_test::results_collector_t. This means','line_number':104,'multiline':False]
['text':'/ that the various @ref boost::unit_test::test_results associated to each test unit may not be available at the time','line_number':105,'multiline':False]
['text':'/ the @c test_unit_start, @c test_unit_finish ... are called.','line_number':106,'multiline':False]
['text':'/','line_number':107,'multiline':False]
['text':'/ @see','line_number':108,'multiline':False]
['text':'/ - boost::unit_test::test_observer','line_number':109,'multiline':False]
['text':'/ - boost::unit_test::unit_test_log_formatter','line_number':110,'multiline':False]
['text':' test_observer interface implementation','line_number':113,'multiline':False]
['text':' log configuration methods','line_number':128,'multiline':False]
['text':'! Sets the stream for all loggers','line_number':129,'multiline':False]
['text':'!','line_number':130,'multiline':False]
['text':'! This will override the log sink/stream of all loggers, whether enabled or not.','line_number':131,'multiline':False]
['text':'! Sets the stream for specific logger','line_number':134,'multiline':False]
['text':'!','line_number':135,'multiline':False]
['text':'! @note Has no effect if the specified format is not found','line_number':136,'multiline':False]
['text':'! @par Since Boost 1.62','line_number':137,'multiline':False]
['text':'! Returns a pointer to the stream associated to specific logger','line_number':140,'multiline':False]
['text':'!','line_number':141,'multiline':False]
['text':'! @note Returns a null pointer if the format is not found','line_number':142,'multiline':False]
['text':'! @par Since Boost 1.67','line_number':143,'multiline':False]
['text':'! Sets the threshold level for all loggers/formatters.','line_number':147,'multiline':False]
['text':'!','line_number':148,'multiline':False]
['text':'! This will override the log level of all loggers, whether enabled or not.','line_number':149,'multiline':False]
['text':'! @return the minimum of the previous log level of all formatters (new in Boost 1.73)','line_number':150,'multiline':False]
['text':'! Sets the threshold/log level of a specific format','line_number':153,'multiline':False]
['text':'!','line_number':154,'multiline':False]
['text':'! @note Has no effect if the specified format is not found','line_number':155,'multiline':False]
['text':'! @par Since Boost 1.62','line_number':156,'multiline':False]
['text':'! @return the previous log level of the corresponding formatter (new in Boost 1.73)','line_number':157,'multiline':False]
['text':'! Add a format to the set of loggers','line_number':160,'multiline':False]
['text':'!','line_number':161,'multiline':False]
['text':'! Adding a logger means that the specified logger is enabled. The log level is managed by the formatter itself','line_number':162,'multiline':False]
['text':'! and specifies what events are forwarded to the underlying formatter.','line_number':163,'multiline':False]
['text':'! @par Since Boost 1.62','line_number':164,'multiline':False]
['text':'! Sets the format of the logger','line_number':167,'multiline':False]
['text':'!','line_number':168,'multiline':False]
['text':'! This will become the only active format of the logs.','line_number':169,'multiline':False]
['text':'! Returns the logger instance for a specific format.','line_number':172,'multiline':False]
['text':'!','line_number':173,'multiline':False]
['text':'! @returns the logger/formatter instance, or @c (unit_test_log_formatter*)0 if the format is not found.','line_number':174,'multiline':False]
['text':'! @par Since Boost 1.62','line_number':175,'multiline':False]
['text':'! Sets the logger instance','line_number':178,'multiline':False]
['text':'!','line_number':179,'multiline':False]
['text':'! The specified logger becomes the unique active one. The custom log formatter has the','line_number':180,'multiline':False]
['text':'! format @c OF_CUSTOM_LOGGER. If such a format exists already, its formatter gets replaced by the one','line_number':181,'multiline':False]
['text':'! given in argument.','line_number':182,'multiline':False]
['text':'!','line_number':183,'multiline':False]
['text':'! The log level and output stream of the new formatter are taken from the currently active logger. In case','line_number':184,'multiline':False]
['text':'! several loggers are active, the order of priority is CUSTOM, HRF, XML, and JUNIT.','line_number':185,'multiline':False]
['text':'! If (unit_test_log_formatter*)0 is given as argument, the custom logger (if any) is removed.','line_number':186,'multiline':False]
['text':'!','line_number':187,'multiline':False]
['text':'! @note The ownership of the pointer is transferred to the Boost.Test framework. This call is equivalent to','line_number':188,'multiline':False]
['text':'! - a call to @c add_formatter','line_number':189,'multiline':False]
['text':'! - a call to @c set_format(OF_CUSTOM_LOGGER)','line_number':190,'multiline':False]
['text':'! - a configuration of the newly added logger with a previously configured stream and log level.','line_number':191,'multiline':False]
['text':'! Adds a custom log formatter to the set of formatters','line_number':194,'multiline':False]
['text':'!','line_number':195,'multiline':False]
['text':'! The specified logger is added with the format @c OF_CUSTOM_LOGGER, such that it can','line_number':196,'multiline':False]
['text':'! be futher selected or its stream/log level can be specified.','line_number':197,'multiline':False]
['text':'! If there is already a custom logger (with @c OF_CUSTOM_LOGGER), then','line_number':198,'multiline':False]
['text':'! the existing one gets replaced by the one given in argument.','line_number':199,'multiline':False]
['text':'! The provided logger is added with an enabled state.','line_number':200,'multiline':False]
['text':'! If (unit_test_log_formatter*)0 is given as argument, the custom logger (if any) is removed and','line_number':201,'multiline':False]
['text':'! no other action is performed.','line_number':202,'multiline':False]
['text':'!','line_number':203,'multiline':False]
['text':'! @note The ownership of the pointer is transferred to the Boost.Test framework.','line_number':204,'multiline':False]
['text':'! @par Since Boost 1.62','line_number':205,'multiline':False]
['text':' test progress logging','line_number':208,'multiline':False]
['text':' entry logging','line_number':211,'multiline':False]
['text':' begin entry','line_number':212,'multiline':False]
['text':' end entry','line_number':213,'multiline':False]
['text':' set entry level','line_number':214,'multiline':False]
['text':' log entry value','line_number':215,'multiline':False]
['text':' log entry value','line_number':216,'multiline':False]
['text':' initiate entry collection','line_number':218,'multiline':False]
['text':'! Prepares internal states after log levels, streams and format has been set up','line_number':220,'multiline':False]
['text':' Singleton','line_number':223,'multiline':False]
['text':' unit_test_log_t','line_number':225,'multiline':False]
['text':' helper macros','line_number':229,'multiline':False]
['text':'','line_number':233,'multiline':True]
['text':' namespace unit_test','line_number':235,'multiline':False]
['text':' namespace boost','line_number':236,'multiline':False]
['text':' ************************************************************************** //','line_number':238,'multiline':False]
['text':' **************       Unit test log interface helpers        ************** //','line_number':239,'multiline':False]
['text':' ************************************************************************** //','line_number':240,'multiline':False]
['text':' messages sent by the framework','line_number':242,'multiline':False]
['text':'','line_number':250,'multiline':True]
['text':'','line_number':256,'multiline':True]
['text':'____________________________________________________________________________//','line_number':258,'multiline':False]
['text':'','line_number':264,'multiline':True]
['text':'____________________________________________________________________________//','line_number':266,'multiline':False]
['text':'','line_number':273,'multiline':True]
['text':'____________________________________________________________________________//','line_number':275,'multiline':False]
['text':' BOOST_TEST_UNIT_TEST_LOG_HPP_071894GER','line_number':279,'multiline':False]
