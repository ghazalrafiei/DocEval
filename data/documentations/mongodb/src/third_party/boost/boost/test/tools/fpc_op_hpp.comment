['text':'  (C) Copyright Gennadiy Rozental 2001.','line_number':1,'multiline':False]
['text':'  Distributed under the Boost Software License, Version 1.0.','line_number':2,'multiline':False]
['text':'  (See accompanying file LICENSE_1_0.txt or copy at','line_number':3,'multiline':False]
['text':'  http://www.boost.org/LICENSE_1_0.txt)','line_number':4,'multiline':False]
['text':'  See http://www.boost.org/libs/test for the library home page.','line_number':6,'multiline':False]
['text':'','line_number':7,'multiline':False]
['text':'!@file','line_number':8,'multiline':False]
['text':'!@brief Floating point comparison with enhanced reporting','line_number':9,'multiline':False]
['text':' ***************************************************************************','line_number':10,'multiline':False]
['text':' Boost.Test','line_number':15,'multiline':False]
['text':' Boost','line_number':21,'multiline':False]
['text':'____________________________________________________________________________//','line_number':28,'multiline':False]
['text':' ************************************************************************** //','line_number':35,'multiline':False]
['text':' **************                   fpctraits                  ************** //','line_number':36,'multiline':False]
['text':' ************************************************************************** //','line_number':37,'multiline':False]
['text':' set of floating point comparison traits per comparison OP','line_number':38,'multiline':False]
['text':' indicate if we should perform the operation with a "logical OR"','line_number':42,'multiline':False]
['text':' with the "equality under tolerance".','line_number':43,'multiline':False]
['text':'____________________________________________________________________________//','line_number':57,'multiline':False]
['text':' ************************************************************************** //','line_number':59,'multiline':False]
['text':' ************** set of overloads to select correct fpc algo  ************** //','line_number':60,'multiline':False]
['text':' ************************************************************************** //','line_number':61,'multiline':False]
['text':' we really only care about EQ vs NE. All other comparisons use direct first','line_number':62,'multiline':False]
['text':' and then need EQ. For example a <= b (tolerance t) IFF a <= b OR a == b (tolerance t)','line_number':63,'multiline':False]
['text':' this look like this can be simplified, but combining result && compare_fpv','line_number':71,'multiline':False]
['text':' looses the message in the return value of compare_fpv','line_number':72,'multiline':False]
['text':' result || compare_fpv(EQ)','line_number':77,'multiline':False]
['text':' result && compare_fpv(NE)','line_number':89,'multiline':False]
['text':'____________________________________________________________________________//','line_number':98,'multiline':False]
['text':'____________________________________________________________________________//','line_number':113,'multiline':False]
['text':'____________________________________________________________________________//','line_number':127,'multiline':False]
['text':'____________________________________________________________________________//','line_number':150,'multiline':False]
['text':'____________________________________________________________________________//','line_number':174,'multiline':False]
['text':'','line_number':230,'multiline':True]
['text':'____________________________________________________________________________//','line_number':235,'multiline':False]
['text':' namespace op','line_number':237,'multiline':False]
['text':' namespace assertion','line_number':238,'multiline':False]
['text':' namespace test_tools','line_number':239,'multiline':False]
['text':' namespace boost','line_number':240,'multiline':False]
['text':' BOOST_TEST_TOOLS_FPC_OP_HPP_050915GER','line_number':244,'multiline':False]
