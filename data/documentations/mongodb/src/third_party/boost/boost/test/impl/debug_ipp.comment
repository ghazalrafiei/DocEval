['text':'  (C) Copyright Gennadiy Rozental 2001.','line_number':1,'multiline':False]
['text':'  Use, modification, and distribution are subject to the','line_number':2,'multiline':False]
['text':'  Boost Software License, Version 1.0. (See accompanying file','line_number':3,'multiline':False]
['text':'  http://www.boost.org/LICENSE_1_0.txt)','line_number':4,'multiline':False]
['text':'  See http://www.boost.org/libs/test for the library home page.','line_number':6,'multiline':False]
['text':'','line_number':7,'multiline':False]
['text':'  File        : $RCSfile$','line_number':8,'multiline':False]
['text':'','line_number':9,'multiline':False]
['text':'  Version     : $Revision$','line_number':10,'multiline':False]
['text':'','line_number':11,'multiline':False]
['text':'  Description : debug interfaces implementation','line_number':12,'multiline':False]
['text':' ***************************************************************************','line_number':13,'multiline':False]
['text':' Boost.Test','line_number':18,'multiline':False]
['text':' Implementation on Windows','line_number':27,'multiline':False]
['text':' ******* WIN32','line_number':28,'multiline':False]
['text':' SYSTEM API','line_number':32,'multiline':False]
['text':' ********************* UNIX','line_number':48,'multiline':False]
['text':' Boost.Test','line_number':52,'multiline':False]
['text':' STL','line_number':56,'multiline':False]
['text':' std::memcpy','line_number':57,'multiline':False]
['text':' !! ?? cstdarg','line_number':60,'multiline':False]
['text':' SYSTEM API','line_number':62,'multiline':False]
['text':' ********************* APPLE','line_number':106,'multiline':False]
['text':'____________________________________________________________________________//','line_number':119,'multiline':False]
['text':' ************************************************************************** //','line_number':126,'multiline':False]
['text':' **************                debug::info_t                 ************** //','line_number':127,'multiline':False]
['text':' ************************************************************************** //','line_number':128,'multiline':False]
['text':' *********************** WIN32','line_number':132,'multiline':False]
['text':'____________________________________________________________________________//','line_number':146,'multiline':False]
['text':'LPTSTR','line_number':150,'multiline':True]
['text':'LPCTSTR','line_number':151,'multiline':True]
['text':'____________________________________________________________________________//','line_number':163,'multiline':False]
['text':'____________________________________________________________________________//','line_number':173,'multiline':False]
['text':' ************************************************************************** //','line_number':177,'multiline':False]
['text':' **************                   fd_holder                  ************** //','line_number':178,'multiline':False]
['text':' ************************************************************************** //','line_number':179,'multiline':False]
['text':' Data members','line_number':192,'multiline':False]
['text':' ************************************************************************** //','line_number':197,'multiline':False]
['text':' **************                 process_info                 ************** //','line_number':198,'multiline':False]
['text':' ************************************************************************** //','line_number':199,'multiline':False]
['text':' Constructor','line_number':202,'multiline':False]
['text':' access methods','line_number':205,'multiline':False]
['text':' Data members','line_number':211,'multiline':False]
['text':' !! ??','line_number':218,'multiline':False]
['text':' !! ??','line_number':221,'multiline':False]
['text':'____________________________________________________________________________//','line_number':225,'multiline':False]
['text':'-------------------------- //','line_number':247,'multiline':False]
['text':' !! ?? could we avoid reading whole m_binary_path_buff?','line_number':254,'multiline':False]
['text':'____________________________________________________________________________//','line_number':303,'multiline':False]
['text':' ************************************************************************** //','line_number':305,'multiline':False]
['text':' **************             prepare_window_title             ************** //','line_number':306,'multiline':False]
['text':' ************************************************************************** //','line_number':307,'multiline':False]
['text':'____________________________________________________________________________//','line_number':331,'multiline':False]
['text':' ************************************************************************** //','line_number':333,'multiline':False]
['text':' **************                  save_execlp                 ************** //','line_number':334,'multiline':False]
['text':' ************************************************************************** //','line_number':335,'multiline':False]
['text':'____________________________________________________________________________//','line_number':354,'multiline':False]
['text':' first calculate actual number of arguments','line_number':364,'multiline':False]
['text':' file name and 0 at least','line_number':365,'multiline':False]
['text':' reserve space for the argument pointers array','line_number':372,'multiline':False]
['text':' copy all the argument values into local storage','line_number':377,'multiline':False]
['text':'____________________________________________________________________________//','line_number':398,'multiline':False]
['text':' ************************************************************************** //','line_number':400,'multiline':False]
['text':' **************            start_debugger_in_emacs           ************** //','line_number':401,'multiline':False]
['text':' ************************************************************************** //','line_number':402,'multiline':False]
['text':'____________________________________________________________________________//','line_number':417,'multiline':False]
['text':' ************************************************************************** //','line_number':419,'multiline':False]
['text':' **************                 gdb starters                 ************** //','line_number':420,'multiline':False]
['text':' ************************************************************************** //','line_number':421,'multiline':False]
['text':' prepare pid value','line_number':426,'multiline':False]
['text':' !! ??','line_number':431,'multiline':False]
['text':' prepare commands','line_number':433,'multiline':False]
['text':' !! ??','line_number':454,'multiline':False]
['text':'____________________________________________________________________________//','line_number':463,'multiline':False]
['text':'____________________________________________________________________________//','line_number':476,'multiline':False]
['text':'____________________________________________________________________________//','line_number':492,'multiline':False]
['text':' !! ??','line_number':501,'multiline':False]
['text':'____________________________________________________________________________//','line_number':507,'multiline':False]
['text':' !! ??','line_number':512,'multiline':False]
['text':'____________________________________________________________________________//','line_number':515,'multiline':False]
['text':' ************************************************************************** //','line_number':517,'multiline':False]
['text':' **************                 dbx starters                 ************** //','line_number':518,'multiline':False]
['text':' ************************************************************************** //','line_number':519,'multiline':False]
['text':' !! ??','line_number':524,'multiline':False]
['text':'____________________________________________________________________________//','line_number':534,'multiline':False]
['text':'____________________________________________________________________________//','line_number':545,'multiline':False]
['text':' !! ??','line_number':554,'multiline':False]
['text':'____________________________________________________________________________//','line_number':562,'multiline':False]
['text':'dsi','line_number':565,'multiline':True]
['text':'    char dbg_cmd_buff[500]; // !! ??','line_number':567,'multiline':False]
['text':'','line_number':568,'multiline':False]
['text':'    ::snprintf( dbg_cmd_buff, sizeof(dbg_cmd_buff), "(progn (dbx \"dbx -q -c cont %s %ld\"))", dsi.binary_path.begin(), dsi.pid );','line_number':569,'multiline':False]
['text':'    start_debugger_in_emacs( dsi, "emacs", dbg_cmd_buff );','line_number':571,'multiline':False]
['text':'____________________________________________________________________________//','line_number':574,'multiline':False]
['text':' !! ??','line_number':579,'multiline':False]
['text':'____________________________________________________________________________//','line_number':582,'multiline':False]
['text':' !! ??','line_number':591,'multiline':False]
['text':'____________________________________________________________________________//','line_number':598,'multiline':False]
['text':' ************************************************************************** //','line_number':600,'multiline':False]
['text':' **************                debug::info_t                 ************** //','line_number':601,'multiline':False]
['text':' ************************************************************************** //','line_number':602,'multiline':False]
['text':' Constructor','line_number':605,'multiline':False]
['text':' Public properties','line_number':608,'multiline':False]
['text':' Data members','line_number':611,'multiline':False]
['text':'____________________________________________________________________________//','line_number':615,'multiline':False]
['text':'____________________________________________________________________________//','line_number':635,'multiline':False]
['text':' local namespace','line_number':639,'multiline':False]
['text':' ************************************************************************** //','line_number':641,'multiline':False]
['text':' **************  check if program is running under debugger  ************** //','line_number':642,'multiline':False]
['text':' ************************************************************************** //','line_number':643,'multiline':False]
['text':' *********************** WIN32','line_number':648,'multiline':False]
['text':' ********************** UNIX','line_number':652,'multiline':False]
['text':' !! ?? could/should we cache the result somehow?','line_number':654,'multiline':False]
['text':' !! ?? should we use tokenizer here instead?','line_number':662,'multiline':False]
['text':' ********************** APPLE','line_number':671,'multiline':False]
['text':' See https://developer.apple.com/library/mac/qa/qa1361/_index.html','line_number':673,'multiline':False]
['text':' Initialize the flags so that, if sysctl fails for some bizarre','line_number':679,'multiline':False]
['text':' reason, we get a predictable result.','line_number':680,'multiline':False]
['text':' Initialize mib, which tells sysctl the info we want, in this case','line_number':683,'multiline':False]
['text':' we're looking for information about a specific process ID.','line_number':684,'multiline':False]
['text':' Call sysctl.','line_number':690,'multiline':False]
['text':' We're being debugged if the P_TRACED flag is set.','line_number':695,'multiline':False]
['text':' ****************************************************** default','line_number':698,'multiline':False]
['text':'____________________________________________________________________________//','line_number':705,'multiline':False]
['text':' ************************************************************************** //','line_number':707,'multiline':False]
['text':' **************       cause program to break execution       ************** //','line_number':708,'multiline':False]
['text':' **************           in debugger at call point          ************** //','line_number':709,'multiline':False]
['text':' ************************************************************************** //','line_number':710,'multiline':False]
['text':' !! ?? auto-start debugger?','line_number':715,'multiline':False]
['text':' *********************** WIN32','line_number':717,'multiline':False]
['text':' User opted to ignore the breakpoint','line_number':734,'multiline':False]
['text':' If we got here, the user has pushed Debug. Debugger is already attached to our process and we','line_number':740,'multiline':False]
['text':' continue to let the another BOOST_DEBUG_BREAK to be called.','line_number':741,'multiline':False]
['text':' ********************** UNIX','line_number':748,'multiline':False]
['text':' ****************************************************** default','line_number':752,'multiline':False]
['text':'____________________________________________________________________________//','line_number':757,'multiline':False]
['text':' ************************************************************************** //','line_number':759,'multiline':False]
['text':' **************            console debugger setup            ************** //','line_number':760,'multiline':False]
['text':' ************************************************************************** //','line_number':761,'multiline':False]
['text':' ************************ UNIX','line_number':763,'multiline':False]
['text':' ***************************************************** default','line_number':778,'multiline':False]
['text':'____________________________________________________________________________//','line_number':788,'multiline':False]
['text':' ************************************************************************** //','line_number':790,'multiline':False]
['text':' **************    attach debugger to the current process    ************** //','line_number':791,'multiline':False]
['text':' ************************************************************************** //','line_number':792,'multiline':False]
['text':' *********************** WIN32','line_number':823,'multiline':False]
['text':' *************************************************** //','line_number':827,'multiline':False]
['text':' Debugger "ready" event','line_number':828,'multiline':False]
['text':' manual resettable, initially non signaled, unnamed event,','line_number':835,'multiline':False]
['text':' that will signal me that debugger initialization is done','line_number':836,'multiline':False]
['text':' pointer to security attributes','line_number':838,'multiline':False]
['text':' flag for manual-reset event','line_number':839,'multiline':False]
['text':' flag for initial state','line_number':840,'multiline':False]
['text':' pointer to event-object name','line_number':841,'multiline':False]
['text':' *************************************************** //','line_number':849,'multiline':False]
['text':' Debugger command line format','line_number':850,'multiline':False]
['text':' handle of open key','line_number':855,'multiline':False]
['text':' name of subkey to open','line_number':856,'multiline':False]
['text':' address of handle of open key','line_number':857,'multiline':False]
['text':' handle of open key','line_number':866,'multiline':False]
['text':' name of subkey to query','line_number':867,'multiline':False]
['text':' reserved','line_number':868,'multiline':False]
['text':' value type','line_number':869,'multiline':False]
['text':' buffer for returned string','line_number':870,'multiline':False]
['text':' in: buffer size; out: actual size of returned string','line_number':871,'multiline':False]
['text':' *************************************************** //','line_number':879,'multiline':False]
['text':' Debugger command line','line_number':880,'multiline':False]
['text':' *************************************************** //','line_number':885,'multiline':False]
['text':' Debugger window parameters','line_number':886,'multiline':False]
['text':' debugger process s_info','line_number':895,'multiline':False]
['text':' pointer to name of executable module; NULL - use the one in command line','line_number':899,'multiline':False]
['text':' pointer to command line string','line_number':900,'multiline':False]
['text':' pointer to process security attributes; NULL - debugger's handle can't be inherited','line_number':901,'multiline':False]
['text':' pointer to thread security attributes; NULL - debugger's handle can't be inherited','line_number':902,'multiline':False]
['text':' debugger inherit opened handles','line_number':903,'multiline':False]
['text':' priority flags; 0 - normal priority','line_number':904,'multiline':False]
['text':' pointer to new environment block; NULL - use this process environment','line_number':905,'multiline':False]
['text':' pointer to current directory name; NULL - use this process correct directory','line_number':906,'multiline':False]
['text':' pointer to STARTUPINFO that specifies main window appearance','line_number':907,'multiline':False]
['text':' pointer to PROCESS_INFORMATION that will contain the new process identification','line_number':908,'multiline':False]
['text':' ********************** UNIX','line_number':928,'multiline':False]
['text':' parent process - here we will start the debugger','line_number':943,'multiline':False]
['text':' child process - here we will continue our test module execution ; // !! ?? should it be vice versa','line_number':965,'multiline':False]
['text':'    char dummy;','line_number':973,'multiline':False]
['text':'    while( ::read( init_done_lock_fd, &dummy, sizeof(char) ) == 0 );','line_number':974,'multiline':False]
['text':' ****************************************************** default','line_number':981,'multiline':False]
['text':' silence 'unused variable' warning','line_number':982,'multiline':False]
['text':'____________________________________________________________________________//','line_number':988,'multiline':False]
['text':' ************************************************************************** //','line_number':990,'multiline':False]
['text':' **************   switch on/off detect memory leaks feature  ************** //','line_number':991,'multiline':False]
['text':' ************************************************************************** //','line_number':992,'multiline':False]
['text':' BOOST_MS_CRT_BASED_DEBUG','line_number':1020,'multiline':False]
['text':'____________________________________________________________________________//','line_number':1023,'multiline':False]
['text':' ************************************************************************** //','line_number':1025,'multiline':False]
['text':' **************      cause program to break execution in     ************** //','line_number':1026,'multiline':False]
['text':' **************     debugger at specific allocation point    ************** //','line_number':1027,'multiline':False]
['text':' ************************************************************************** //','line_number':1028,'multiline':False]
['text':' only set the value if one was supplied (do not use default used by UTF just as a indicator to enable leak detection)','line_number':1036,'multiline':False]
['text':' BOOST_MS_CRT_BASED_DEBUG','line_number':1039,'multiline':False]
['text':'____________________________________________________________________________//','line_number':1042,'multiline':False]
['text':' namespace debug','line_number':1044,'multiline':False]
['text':' namespace boost','line_number':1045,'multiline':False]
['text':' BOOST_TEST_DEBUG_API_IPP_112006GER','line_number':1049,'multiline':False]
