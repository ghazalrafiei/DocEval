['text':'  (C) Copyright Gennadiy Rozental 2001.','line_number':1,'multiline':False]
['text':'  Distributed under the Boost Software License, Version 1.0.','line_number':2,'multiline':False]
['text':'  (See accompanying file LICENSE_1_0.txt or copy at','line_number':3,'multiline':False]
['text':'  http://www.boost.org/LICENSE_1_0.txt)','line_number':4,'multiline':False]
['text':'  See http://www.boost.org/libs/test for the library home page.','line_number':6,'multiline':False]
['text':'','line_number':7,'multiline':False]
['text':'!@file','line_number':8,'multiline':False]
['text':'!@brief defines abstract interface for test observer','line_number':9,'multiline':False]
['text':' ***************************************************************************','line_number':10,'multiline':False]
['text':' Boost.Test','line_number':15,'multiline':False]
['text':'____________________________________________________________________________//','line_number':22,'multiline':False]
['text':' ************************************************************************** //','line_number':27,'multiline':False]
['text':' **************                 test_observer                ************** //','line_number':28,'multiline':False]
['text':' ************************************************************************** //','line_number':29,'multiline':False]
['text':'/ @brief Generic test observer interface','line_number':31,'multiline':False]
['text':'/','line_number':32,'multiline':False]
['text':'/ This interface is used by observers in order to receive notifications from the','line_number':33,'multiline':False]
['text':'/ Boost.Test framework on the current execution state.','line_number':34,'multiline':False]
['text':'/','line_number':35,'multiline':False]
['text':'/ Several observers can be running at the same time, and it is not unusual to','line_number':36,'multiline':False]
['text':'/ have interactions among them. The @ref test_observer::priority member function allows the specification','line_number':37,'multiline':False]
['text':'/ of a particular order among them (lowest priority executed first, except specified otherwise).','line_number':38,'multiline':False]
['text':'/','line_number':39,'multiline':False]
['text':'! Called before the framework starts executing the test cases','line_number':43,'multiline':False]
['text':'!','line_number':44,'multiline':False]
['text':'! @param[in] number_of_test_cases indicates the number of test cases. Only active','line_number':45,'multiline':False]
['text':'! test cases are taken into account.','line_number':46,'multiline':False]
['text':'! @param[in] root_test_unit_id the ID root of the test tree currently being tested','line_number':47,'multiline':False]
['text':' number_of_test_cases ','line_number':48,'multiline':True]
['text':' root_test_unit_id ','line_number':48,'multiline':True]
['text':'! Called after the framework ends executing the test cases','line_number':50,'multiline':False]
['text':'!','line_number':51,'multiline':False]
['text':'! @note The call is made with a reversed priority order.','line_number':52,'multiline':False]
['text':'! Called when a critical error is detected','line_number':55,'multiline':False]
['text':'!','line_number':56,'multiline':False]
['text':'! The critical errors are mainly the signals sent by the system and caught by the Boost.Test framework.','line_number':57,'multiline':False]
['text':'! Since the running binary may be in incoherent/instable state, the test execution is aborted and all remaining','line_number':58,'multiline':False]
['text':'! tests are discarded.','line_number':59,'multiline':False]
['text':'!','line_number':60,'multiline':False]
['text':'! @note may be called before test_observer::test_unit_finish()','line_number':61,'multiline':False]
['text':'! Called before the framework starts executing a test unit','line_number':64,'multiline':False]
['text':'!','line_number':65,'multiline':False]
['text':'! @param[in] test_unit the test being executed','line_number':66,'multiline':False]
['text':' test ','line_number':67,'multiline':True]
['text':'! Called at each end of a test unit.','line_number':69,'multiline':False]
['text':'!','line_number':70,'multiline':False]
['text':'! @param elapsed duration of the test unit in microseconds.','line_number':71,'multiline':False]
['text':' test ','line_number':72,'multiline':True]
['text':' elapsed ','line_number':72,'multiline':True]
['text':'/< backward compatibility','line_number':74,'multiline':False]
['text':'! Called when the test timed out','line_number':76,'multiline':False]
['text':'!','line_number':77,'multiline':False]
['text':'! This function is called to signal that a test unit (case or suite) timed out.','line_number':78,'multiline':False]
['text':'! A valid test unit is available through boost::unit_test::framework::current_test_unit','line_number':79,'multiline':False]
['text':'! Called when a test unit indicates a fatal error.','line_number':82,'multiline':False]
['text':'!','line_number':83,'multiline':False]
['text':'! A fatal error happens when','line_number':84,'multiline':False]
['text':'! - a strong assertion (with @c REQUIRE) fails, which indicates that the test case cannot continue','line_number':85,'multiline':False]
['text':'! - an unexpected exception is caught by the Boost.Test framework','line_number':86,'multiline':False]
['text':' ar ','line_number':89,'multiline':True]
['text':'! Called when an exception is intercepted','line_number':93,'multiline':False]
['text':'!','line_number':94,'multiline':False]
['text':'! In case an exception is intercepted, this call happens before the call','line_number':95,'multiline':False]
['text':'! to @ref test_unit_aborted in order to log','line_number':96,'multiline':False]
['text':'! additional data about the exception.','line_number':97,'multiline':False]
['text':'! The priority indicates the order at which this observer is initialized','line_number':100,'multiline':False]
['text':'! and tore down in the UTF framework. The order is lowest to highest priority.','line_number':101,'multiline':False]
['text':' namespace unit_test','line_number':109,'multiline':False]
['text':' namespace boost','line_number':110,'multiline':False]
['text':' BOOST_TEST_TEST_OBSERVER_HPP_021005GER','line_number':114,'multiline':False]
