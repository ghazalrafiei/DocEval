['text':'  (C) Copyright Gennadiy Rozental 2001.','line_number':1,'multiline':False]
['text':'  Distributed under the Boost Software License, Version 1.0.','line_number':2,'multiline':False]
['text':'  (See accompanying file LICENSE_1_0.txt or copy at','line_number':3,'multiline':False]
['text':'  http://www.boost.org/LICENSE_1_0.txt)','line_number':4,'multiline':False]
['text':'  See http://www.boost.org/libs/test for the library home page.','line_number':6,'multiline':False]
['text':'','line_number':7,'multiline':False]
['text':'  File        : $RCSfile$','line_number':8,'multiline':False]
['text':'','line_number':9,'multiline':False]
['text':'  Version     : $Revision: 74248 $','line_number':10,'multiline':False]
['text':'','line_number':11,'multiline':False]
['text':'  Description : implementation details for old toolbox','line_number':12,'multiline':False]
['text':' ***************************************************************************','line_number':13,'multiline':False]
['text':' Boost.Test','line_number':18,'multiline':False]
['text':' Boost','line_number':26,'multiline':False]
['text':' for numeric::conversion_traits','line_number':28,'multiline':False]
['text':' STL','line_number':34,'multiline':False]
['text':' for std::size_t','line_number':35,'multiline':False]
['text':' for CHAR_BIT','line_number':36,'multiline':False]
['text':'____________________________________________________________________________//','line_number':40,'multiline':False]
['text':' ************************************************************************** //','line_number':46,'multiline':False]
['text':' **************          old TOOLBOX Implementation          ************** //','line_number':47,'multiline':False]
['text':' ************************************************************************** //','line_number':48,'multiline':False]
['text':' This function adds level of indirection, but it makes sure we evaluate predicate','line_number':50,'multiline':False]
['text':' arguments only once','line_number':51,'multiline':False]
['text':'','line_number':59,'multiline':True]
['text':'','line_number':67,'multiline':True]
['text':'','line_number':86,'multiline':True]
['text':'____________________________________________________________________________//','line_number':102,'multiline':False]
['text':'____________________________________________________________________________//','line_number':110,'multiline':False]
['text':'____________________________________________________________________________//','line_number':123,'multiline':False]
['text':'____________________________________________________________________________//','line_number':149,'multiline':False]
['text':'____________________________________________________________________________//','line_number':159,'multiline':False]
['text':'____________________________________________________________________________//','line_number':169,'multiline':False]
['text':'____________________________________________________________________________//','line_number':179,'multiline':False]
['text':'____________________________________________________________________________//','line_number':189,'multiline':False]
['text':'____________________________________________________________________________//','line_number':199,'multiline':False]
['text':'____________________________________________________________________________//','line_number':244,'multiline':False]
['text':'____________________________________________________________________________//','line_number':276,'multiline':False]
['text':' deduce "better" type from types of arguments being compared','line_number':280,'multiline':False]
['text':' if one type is floating and the second integral we use floating type and','line_number':281,'multiline':False]
['text':' value of integral type is promoted to the floating. The same for float and double','line_number':282,'multiline':False]
['text':' But we don't want to compare two values of integral types using this tool.','line_number':283,'multiline':False]
['text':' namespace tt_detail','line_number':288,'multiline':False]
['text':' ************************************************************************** //','line_number':292,'multiline':False]
['text':' **************               check_is_close                 ************** //','line_number':293,'multiline':False]
['text':' ************************************************************************** //','line_number':294,'multiline':False]
['text':' Public typedefs','line_number':297,'multiline':False]
['text':'____________________________________________________________________________//','line_number':315,'multiline':False]
['text':'____________________________________________________________________________//','line_number':324,'multiline':False]
['text':' ************************************************************************** //','line_number':326,'multiline':False]
['text':' **************               check_is_small                 ************** //','line_number':327,'multiline':False]
['text':' ************************************************************************** //','line_number':328,'multiline':False]
['text':' Public typedefs','line_number':331,'multiline':False]
['text':'____________________________________________________________________________//','line_number':342,'multiline':False]
['text':'____________________________________________________________________________//','line_number':351,'multiline':False]
['text':' namespace test_tools','line_number':353,'multiline':False]
['text':' namespace boost','line_number':354,'multiline':False]
['text':' BOOST_TEST_TOOLS_OLD_IMPL_HPP_012705GER','line_number':358,'multiline':False]
