['text':'  (C) Copyright Gennadiy Rozental 2001.','line_number':1,'multiline':False]
['text':'  Distributed under the Boost Software License, Version 1.0.','line_number':2,'multiline':False]
['text':'  (See accompanying file LICENSE_1_0.txt or copy at','line_number':3,'multiline':False]
['text':'  http://www.boost.org/LICENSE_1_0.txt)','line_number':4,'multiline':False]
['text':'  See http://www.boost.org/libs/test for the library home page.','line_number':6,'multiline':False]
['text':'','line_number':7,'multiline':False]
['text':'! @file','line_number':8,'multiline':False]
['text':'! Defines the is_forward_iterable collection type trait','line_number':9,'multiline':False]
['text':' ***************************************************************************','line_number':10,'multiline':False]
['text':' this feature works with VC2012 upd 5 while BOOST_NO_CXX11_TRAILING_RESULT_TYPES is defined','line_number':19,'multiline':False]
['text':' VC2012 upd 5 ','line_number':20,'multiline':True]
['text':' Boost','line_number':26,'multiline':False]
['text':' STL','line_number':29,'multiline':False]
['text':' Boost','line_number':37,'multiline':False]
['text':' STL','line_number':45,'multiline':False]
['text':'____________________________________________________________________________//','line_number':50,'multiline':False]
['text':' ************************************************************************** //','line_number':58,'multiline':False]
['text':' **************             is_forward_iterable              ************** //','line_number':59,'multiline':False]
['text':' ************************************************************************** //','line_number':60,'multiline':False]
['text':' string is also forward iterable, even if sometimes we want to treat the','line_number':87,'multiline':False]
['text':' assertions differently.','line_number':88,'multiline':False]
['text':' SFINAE helper','line_number':96,'multiline':False]
['text':'____________________________________________________________________________//','line_number':100,'multiline':False]
['text':' some compiler do not implement properly decltype non expression involving members (eg. VS2013)','line_number':102,'multiline':False]
['text':' a workaround is to use -> decltype syntax.','line_number':103,'multiline':False]
['text':'____________________________________________________________________________//','line_number':115,'multiline':False]
['text':' does not work with boost::begin','line_number':121,'multiline':False]
['text':'____________________________________________________________________________//','line_number':127,'multiline':False]
['text':' does not work with boost::end','line_number':133,'multiline':False]
['text':'____________________________________________________________________________//','line_number':139,'multiline':False]
['text':'____________________________________________________________________________//','line_number':155,'multiline':False]
['text':'____________________________________________________________________________//','line_number':173,'multiline':False]
['text':' namespace ut_detail','line_number':175,'multiline':False]
['text':'! Indicates that a specific type implements the forward iterable concept. ','line_number':177,'multiline':True]
['text':'! Indicates that a specific type implements the forward iterable concept. ','line_number':186,'multiline':True]
['text':' defined(BOOST_TEST_FWD_ITERABLE_CXX03) ','line_number':195,'multiline':True]
['text':'! Helper structure for accessing the content of a container or an array','line_number':198,'multiline':False]
['text':' BOOST_TEST_FWD_ITERABLE_CXX03 ','line_number':217,'multiline':True]
['text':' BOOST_TEST_FWD_ITERABLE_CXX03 ','line_number':244,'multiline':True]
['text':' namespace unit_test','line_number':264,'multiline':False]
['text':' namespace boost','line_number':265,'multiline':False]
['text':' BOOST_TEST_UTILS_IS_FORWARD_ITERABLE_HPP','line_number':267,'multiline':False]
