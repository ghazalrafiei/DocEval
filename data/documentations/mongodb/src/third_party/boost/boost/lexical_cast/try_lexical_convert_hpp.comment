['text':' Copyright Kevlin Henney, 2000-2005.','line_number':1,'multiline':False]
['text':' Copyright Alexander Nasonov, 2006-2010.','line_number':2,'multiline':False]
['text':' Copyright Antony Polukhin, 2011-2022.','line_number':3,'multiline':False]
['text':'','line_number':4,'multiline':False]
['text':' Distributed under the Boost Software License, Version 1.0. (See','line_number':5,'multiline':False]
['text':' accompanying file LICENSE_1_0.txt or copy at','line_number':6,'multiline':False]
['text':' http://www.boost.org/LICENSE_1_0.txt)','line_number':7,'multiline':False]
['text':'','line_number':8,'multiline':False]
['text':' what:  lexical_cast custom keyword cast','line_number':9,'multiline':False]
['text':' who:   contributed by Kevlin Henney,','line_number':10,'multiline':False]
['text':'        enhanced with contributions from Terje Slettebo,','line_number':11,'multiline':False]
['text':'        with additional fixes and suggestions from Gennaro Prota,','line_number':12,'multiline':False]
['text':'        Beman Dawes, Dave Abrahams, Daryle Walker, Peter Dimov,','line_number':13,'multiline':False]
['text':'        Alexander Nasonov, Antony Polukhin, Justin Viiret, Michael Hofmann,','line_number':14,'multiline':False]
['text':'        Cheng Yang, Matthew Bradbury, David W. Birdsall, Pavel Korzh and other Boosters','line_number':15,'multiline':False]
['text':' when:  November 2000, March 2003, June 2005, June 2006, March 2011 - 2014','line_number':16,'multiline':False]
['text':' Sun Studio has problem with partial specialization of templates differing only in namespace.','line_number':62,'multiline':False]
['text':' We workaround that by making `is_booststring` trait, instead of specializing `is_stdstring` for `boost::container::basic_string`.','line_number':63,'multiline':False]
['text':'
         * is_xchar_to_xchar<Target, Source>::value is true,
         * Target and Souce are char types of the same size 1 (char, signed char, unsigned char).
         ','line_number':90,'multiline':True]
['text':' Sun Studio has problem with partial specialization of templates differing only in namespace.','line_number':125,'multiline':False]
['text':' We workaround that by making `is_char_array_to_booststring` trait, instead of specializing `is_char_array_to_stdstring` for `boost::container::basic_string`.','line_number':126,'multiline':False]
['text':' MSVC fail to forward an array (DevDiv#555157 "SILENT BAD CODEGEN triggered by perfect forwarding",','line_number':145,'multiline':False]
['text':' fixed in 2013 RTM).','line_number':146,'multiline':False]
['text':' eqaul to `result = std::forward<T>(arg);`','line_number':150,'multiline':False]
['text':' We do evaluate second `if_` lazily to avoid unnecessary instantiations','line_number':187,'multiline':False]
['text':' of `shall_we_copy_with_dynamic_check_t` and improve compilation times.','line_number':188,'multiline':False]
['text':' namespace conversion::detail','line_number':216,'multiline':False]
['text':' ADL barrier','line_number':219,'multiline':False]
['text':' namespace boost','line_number':223,'multiline':False]
['text':' BOOST_LEXICAL_CAST_TRY_LEXICAL_CONVERT_HPP','line_number':231,'multiline':False]
