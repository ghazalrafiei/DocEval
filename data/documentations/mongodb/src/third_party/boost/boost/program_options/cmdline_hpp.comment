['text':' Copyright Vladimir Prus 2004.','line_number':1,'multiline':False]
['text':' Distributed under the Boost Software License, Version 1.0.','line_number':2,'multiline':False]
['text':' (See accompanying file LICENSE_1_0.txt','line_number':3,'multiline':False]
['text':' or copy at http://www.boost.org/LICENSE_1_0.txt)','line_number':4,'multiline':False]
['text':'* Various possible styles of options.
        
    There are "long" options, which start with "--" and "short",
    which start with either "-" or "/". Both kinds can be allowed or
    disallowed, see allow_long and allow_short. The allowed character
    for short options is also configurable.

    Option's value can be specified in the same token as name
    ("--foo=bar"), or in the next token.

    It's possible to introduce long options by the same character as
    short options, see allow_long_disguise.

    Finally, guessing (specifying only prefix of option) and case
    insensitive processing are supported.
    ','line_number':10,'multiline':True]
['text':'/ Allow "--long_name" style','line_number':27,'multiline':False]
['text':'/ Allow "-<single character" style','line_number':29,'multiline':False]
['text':'/ Allow "-" in short options','line_number':31,'multiline':False]
['text':'/ Allow "/" in short options','line_number':33,'multiline':False]
['text':'* Allow option parameter in the same token
            for long option, like in
            @verbatim
            --foo=10
            @endverbatim
        ','line_number':35,'multiline':True]
['text':'* Allow option parameter in the next token for
            long options. ','line_number':42,'multiline':True]
['text':'* Allow option parameter in the same token for
            short options. ','line_number':45,'multiline':True]
['text':'* Allow option parameter in the next token for
            short options. ','line_number':48,'multiline':True]
['text':'* Allow to merge several short options together,
            so that "-s -k" become "-sk". All of the options
            but last should accept no parameter. For example, if
            "-s" accept a parameter, then "k" will be taken as
            parameter, not another short option. 
            Dos-style short options cannot be sticky.
        ','line_number':51,'multiline':True]
['text':'* Allow abbreviated spellings for long options,
            if they unambiguously identify long option. 
            No long option name should be prefix of other 
            long option name if guessing is in effect.
        ','line_number':59,'multiline':True]
['text':'* Ignore the difference in case for long options.
        ','line_number':65,'multiline':True]
['text':'* Ignore the difference in case for short options.
        ','line_number':68,'multiline':True]
['text':'* Ignore the difference in case for all options.
        ','line_number':71,'multiline':True]
['text':'* Allow long options with single option starting character,
            e.g <tt>-foo=10</tt>
        ','line_number':74,'multiline':True]
['text':'* The more-or-less traditional unix style. ','line_number':78,'multiline':True]
['text':'* The default style. ','line_number':83,'multiline':True]
