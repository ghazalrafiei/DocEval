['text':' Copyright 2005-2009 Daniel James.','line_number':2,'multiline':False]
['text':' Distributed under the Boost Software License, Version 1.0. (See accompanying','line_number':3,'multiline':False]
['text':' file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)','line_number':4,'multiline':False]
['text':'  Based on Peter Dimov's proposal','line_number':6,'multiline':False]
['text':'  http://www.open-std.org/JTC1/SC22/WG21/docs/papers/2005/n1756.pdf','line_number':7,'multiline':False]
['text':'  issue 6.18.','line_number':8,'multiline':False]
['text':' This implements the extensions to the standard.','line_number':10,'multiline':False]
['text':' It's undocumented, so you shouldn't use it....','line_number':11,'multiline':False]
['text':'','line_number':246,'multiline':False]
['text':' call_hash_impl','line_number':247,'multiline':False]
['text':'','line_number':248,'multiline':False]
['text':' On compilers without function template ordering, this deals with arrays.','line_number':250,'multiline':False]
['text':' BOOST_NO_FUNCTION_TEMPLATE_ORDERING','line_number':290,'multiline':False]
['text':'','line_number':292,'multiline':False]
['text':' boost::hash','line_number':293,'multiline':False]
['text':'','line_number':294,'multiline':False]
['text':' BOOST_NO_TEMPLATE_PARTIAL_SPECIALIZATION','line_number':326,'multiline':False]
['text':' On compilers without partial specialization, boost::hash<T>','line_number':328,'multiline':False]
['text':' has already been declared to deal with pointers, so just','line_number':329,'multiline':False]
['text':' need to supply the non-pointer version of hash_impl.','line_number':330,'multiline':False]
['text':' BOOST_NO_TEMPLATE_PARTIAL_SPECIALIZATION','line_number':358,'multiline':False]
