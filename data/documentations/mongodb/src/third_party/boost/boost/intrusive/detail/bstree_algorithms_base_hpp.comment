['text':'///////////////////////////////////////////////////////////////////////////','line_number':1,'multiline':False]
['text':'','line_number':2,'multiline':False]
['text':' (C) Copyright Ion Gaztanaga  2014-2014','line_number':3,'multiline':False]
['text':'','line_number':4,'multiline':False]
['text':' Distributed under the Boost Software License, Version 1.0.','line_number':5,'multiline':False]
['text':'    (See accompanying file LICENSE_1_0.txt or copy at','line_number':6,'multiline':False]
['text':'          http://www.boost.org/LICENSE_1_0.txt)','line_number':7,'multiline':False]
['text':'','line_number':8,'multiline':False]
['text':' See http://www.boost.org/libs/intrusive for documentation.','line_number':9,'multiline':False]
['text':'','line_number':10,'multiline':False]
['text':'///////////////////////////////////////////////////////////////////////////','line_number':11,'multiline':False]
['text':'! <b>Requires</b>: 'node' is a node from the tree except the header.','line_number':38,'multiline':False]
['text':'!','line_number':39,'multiline':False]
['text':'! <b>Effects</b>: Returns the next node of the tree.','line_number':40,'multiline':False]
['text':'!','line_number':41,'multiline':False]
['text':'! <b>Complexity</b>: Average constant time.','line_number':42,'multiline':False]
['text':'!','line_number':43,'multiline':False]
['text':'! <b>Throws</b>: Nothing.','line_number':44,'multiline':False]
['text':'! <b>Requires</b>: 'node' is a node from the tree except the leftmost node.','line_number':62,'multiline':False]
['text':'!','line_number':63,'multiline':False]
['text':'! <b>Effects</b>: Returns the previous node of the tree.','line_number':64,'multiline':False]
['text':'!','line_number':65,'multiline':False]
['text':'! <b>Complexity</b>: Average constant time.','line_number':66,'multiline':False]
['text':'!','line_number':67,'multiline':False]
['text':'! <b>Throws</b>: Nothing.','line_number':68,'multiline':False]
['text':'! <b>Requires</b>: 'node' is a node of a tree but not the header.','line_number':88,'multiline':False]
['text':'!','line_number':89,'multiline':False]
['text':'! <b>Effects</b>: Returns the minimum node of the subtree starting at p.','line_number':90,'multiline':False]
['text':'!','line_number':91,'multiline':False]
['text':'! <b>Complexity</b>: Logarithmic to the size of the subtree.','line_number':92,'multiline':False]
['text':'!','line_number':93,'multiline':False]
['text':'! <b>Throws</b>: Nothing.','line_number':94,'multiline':False]
['text':'! <b>Requires</b>: 'node' is a node of a tree but not the header.','line_number':105,'multiline':False]
['text':'!','line_number':106,'multiline':False]
['text':'! <b>Effects</b>: Returns the maximum node of the subtree starting at p.','line_number':107,'multiline':False]
['text':'!','line_number':108,'multiline':False]
['text':'! <b>Complexity</b>: Logarithmic to the size of the subtree.','line_number':109,'multiline':False]
['text':'!','line_number':110,'multiline':False]
['text':'! <b>Throws</b>: Nothing.','line_number':111,'multiline':False]
['text':'! <b>Requires</b>: p is a node of a tree.','line_number':122,'multiline':False]
['text':'!','line_number':123,'multiline':False]
['text':'! <b>Effects</b>: Returns true if p is the header of the tree.','line_number':124,'multiline':False]
['text':'!','line_number':125,'multiline':False]
['text':'! <b>Complexity</b>: Constant.','line_number':126,'multiline':False]
['text':'!','line_number':127,'multiline':False]
['text':'! <b>Throws</b>: Nothing.','line_number':128,'multiline':False]
['text':'Header condition when empty tree','line_number':133,'multiline':False]
['text':'Header always has leftmost and rightmost','line_number':134,'multiline':False]
['text':'Header condition when only node','line_number':135,'multiline':False]
['text':'When tree size > 1 headers can't be leftmost's','line_number':138,'multiline':False]
['text':'and rightmost's parent','line_number':139,'multiline':False]
['text':'! <b>Requires</b>: 'node' is a node of the tree or a header node.','line_number':146,'multiline':False]
['text':'!','line_number':147,'multiline':False]
['text':'! <b>Effects</b>: Returns the header of the tree.','line_number':148,'multiline':False]
['text':'!','line_number':149,'multiline':False]
['text':'! <b>Complexity</b>: Logarithmic.','line_number':150,'multiline':False]
['text':'!','line_number':151,'multiline':False]
['text':'! <b>Throws</b>: Nothing.','line_number':152,'multiline':False]
['text':'If p is null, then n is the header of an empty tree','line_number':157,'multiline':False]
['text':'Non-empty tree, check if n is neither root nor header','line_number':159,'multiline':False]
['text':'If granparent is not equal to n, then n is neither root nor header,','line_number':161,'multiline':False]
['text':'the try the fast path','line_number':162,'multiline':False]
['text':'Check if n is root or header when size() > 0','line_number':171,'multiline':False]
['text':'namespace intrusive','line_number':180,'multiline':False]
['text':'namespace boost','line_number':181,'multiline':False]
['text':'BOOST_INTRUSIVE_BSTREE_ALGORITHMS_BASE_HPP','line_number':183,'multiline':False]
