['text':'///////////////////////////////////////////////////////////////////////////','line_number':1,'multiline':False]
['text':'','line_number':2,'multiline':False]
['text':' (C) Copyright Ion Gaztanaga 2007-2014','line_number':3,'multiline':False]
['text':'','line_number':4,'multiline':False]
['text':' Distributed under the Boost Software License, Version 1.0.','line_number':5,'multiline':False]
['text':'    (See accompanying file LICENSE_1_0.txt or copy at','line_number':6,'multiline':False]
['text':'          http://www.boost.org/LICENSE_1_0.txt)','line_number':7,'multiline':False]
['text':'','line_number':8,'multiline':False]
['text':' See http://www.boost.org/libs/intrusive for documentation.','line_number':9,'multiline':False]
['text':'','line_number':10,'multiline':False]
['text':'///////////////////////////////////////////////////////////////////////////','line_number':11,'multiline':False]
['text':'! The class template avl_set is an intrusive container, that mimics most of','line_number':34,'multiline':False]
['text':'! the interface of std::set as described in the C++ standard.','line_number':35,'multiline':False]
['text':'!','line_number':36,'multiline':False]
['text':'! The template parameter \c T is the type to be managed by the container.','line_number':37,'multiline':False]
['text':'! The user can specify additional options and if no options are provided','line_number':38,'multiline':False]
['text':'! default options are used.','line_number':39,'multiline':False]
['text':'!','line_number':40,'multiline':False]
['text':'! The container supports the following options:','line_number':41,'multiline':False]
['text':'! \c base_hook<>/member_hook<>/value_traits<>,','line_number':42,'multiline':False]
['text':'! \c constant_time_size<>, \c size_type<> and','line_number':43,'multiline':False]
['text':'! \c compare<>.','line_number':44,'multiline':False]
['text':'/ @cond','line_number':55,'multiline':False]
['text':'/ @endcond','line_number':60,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::avltree()','line_number':90,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::avltree(const key_compare &,const value_traits &)','line_number':95,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::avltree(bool,Iterator,Iterator,const key_compare &,const value_traits &)','line_number':100,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::avltree(avltree &&)','line_number':108,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::operator=(avltree &&)','line_number':113,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::~avltree()','line_number':119,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::begin()','line_number':122,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::begin()const','line_number':125,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::cbegin()const','line_number':128,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::end()','line_number':131,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::end()const','line_number':134,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::cend()const','line_number':137,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::begin()','line_number':140,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::begin()const','line_number':143,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::crbegin()const','line_number':146,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::rend()','line_number':149,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::rend()const','line_number':152,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::crend()const','line_number':155,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::root()','line_number':158,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::root()const','line_number':161,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::croot()const','line_number':164,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::container_from_end_iterator(iterator)','line_number':167,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::container_from_end_iterator(const_iterator)','line_number':170,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::container_from_iterator(iterator)','line_number':173,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::container_from_iterator(const_iterator)','line_number':176,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::key_comp()const','line_number':179,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::value_comp()const','line_number':182,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::empty()const','line_number':185,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::size()const','line_number':188,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::swap','line_number':191,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::clone_from(const avltree&,Cloner,Disposer)','line_number':194,'multiline':False]
['text':'#ifdef BOOST_INTRUSIVE_DOXYGEN_INVOKED','line_number':202,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::clone_from(avltree&&,Cloner,Disposer)','line_number':204,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::insert_unique(reference)','line_number':209,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::insert_unique(const_iterator,reference)','line_number':213,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::insert_unique_check(const key_type&,insert_commit_data&)','line_number':217,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::insert_unique_check(const_iterator,const key_type&,insert_commit_data&)','line_number':222,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::insert_unique_check(const KeyType&,KeyTypeKeyCompare,insert_commit_data&)','line_number':228,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::insert_unique_check(const_iterator,const KeyType&,KeyTypeKeyCompare,insert_commit_data&)','line_number':234,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::insert_unique(Iterator,Iterator)','line_number':241,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::insert_unique_commit','line_number':246,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::insert_before','line_number':251,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::push_back','line_number':254,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::push_front','line_number':257,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::erase(const_iterator)','line_number':260,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::erase(const_iterator,const_iterator)','line_number':263,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::erase(const key_type &key)','line_number':266,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::erase(const KeyType&,KeyTypeKeyCompare)','line_number':269,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::erase_and_dispose(const_iterator,Disposer)','line_number':273,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::erase_and_dispose(const_iterator,const_iterator,Disposer)','line_number':277,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::erase_and_dispose(const key_type &, Disposer)','line_number':281,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::erase_and_dispose(const KeyType&,KeyTypeKeyCompare,Disposer)','line_number':285,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::clear','line_number':289,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::clear_and_dispose','line_number':292,'multiline':False]
['text':'   #ifdef BOOST_INTRUSIVE_DOXYGEN_INVOKED','line_number':296,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::count(const key_type &)const','line_number':298,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::count(const KeyType&,KeyTypeKeyCompare)const','line_number':302,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::lower_bound(const key_type &)','line_number':309,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::lower_bound(const KeyType&,KeyTypeKeyCompare)','line_number':312,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::lower_bound(const key_type &)const','line_number':316,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::lower_bound(const KeyType&,KeyTypeKeyCompare)const','line_number':319,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::upper_bound(const key_type &)','line_number':323,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::upper_bound(const KeyType&,KeyTypeKeyCompare)','line_number':326,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::upper_bound(const key_type &)const','line_number':330,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::upper_bound(const KeyType&,KeyTypeKeyCompare)const','line_number':333,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::find(const key_type &)','line_number':337,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::find(const KeyType&,KeyTypeKeyCompare)','line_number':340,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::find(const key_type &)const','line_number':344,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::find(const KeyType&,KeyTypeKeyCompare)const','line_number':347,'multiline':False]
['text':'   #ifdef BOOST_INTRUSIVE_DOXYGEN_INVOKED','line_number':351,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::equal_range(const key_type &)','line_number':353,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::equal_range(const KeyType&,KeyTypeKeyCompare)','line_number':357,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::equal_range(const key_type &)const','line_number':362,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::equal_range(const KeyType&,KeyTypeKeyCompare)const','line_number':367,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::bounded_range(const key_type &,const key_type &,bool,bool)','line_number':375,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::bounded_range(const KeyType&,const KeyType&,KeyTypeKeyCompare,bool,bool)','line_number':379,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::bounded_range(const key_type &,const key_type &,bool,bool)const','line_number':384,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::bounded_range(const KeyType&,const KeyType&,KeyTypeKeyCompare,bool,bool)const','line_number':388,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::s_iterator_to(reference)','line_number':393,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::s_iterator_to(const_reference)','line_number':396,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::iterator_to(reference)','line_number':399,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::iterator_to(const_reference)const','line_number':402,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::init_node(reference)','line_number':405,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::unlink_leftmost_without_rebalance','line_number':408,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::replace_node','line_number':411,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::remove_node','line_number':414,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::merge_unique','line_number':417,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::merge_unique','line_number':421,'multiline':False]
['text':'#ifdef BOOST_INTRUSIVE_DOXYGEN_INVOKED','line_number':436,'multiline':False]
['text':'#if defined(BOOST_INTRUSIVE_DOXYGEN_INVOKED)','line_number':456,'multiline':False]
['text':'! Helper metafunction to define a \c set that yields to the same type when the','line_number':458,'multiline':False]
['text':'! same options (either explicitly or implicitly) are used.','line_number':459,'multiline':False]
['text':'/ @cond','line_number':469,'multiline':False]
['text':'/ @endcond','line_number':490,'multiline':False]
['text':'Assert if passed value traits are compatible with the type','line_number':525,'multiline':False]
['text':'! The class template avl_multiset is an intrusive container, that mimics most of','line_number':573,'multiline':False]
['text':'! the interface of std::_multiset as described in the C++ standard.','line_number':574,'multiline':False]
['text':'!','line_number':575,'multiline':False]
['text':'! The template parameter \c T is the type to be managed by the container.','line_number':576,'multiline':False]
['text':'! The user can specify additional options and if no options are provided','line_number':577,'multiline':False]
['text':'! default options are used.','line_number':578,'multiline':False]
['text':'!','line_number':579,'multiline':False]
['text':'! The container supports the following options:','line_number':580,'multiline':False]
['text':'! \c base_hook<>/member_hook<>/value_traits<>,','line_number':581,'multiline':False]
['text':'! \c constant_time_size<>, \c size_type<> and','line_number':582,'multiline':False]
['text':'! \c compare<>.','line_number':583,'multiline':False]
['text':'/ @cond','line_number':594,'multiline':False]
['text':'/ @endcond','line_number':599,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::avltree()','line_number':628,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::avltree(const key_compare &,const value_traits &)','line_number':633,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::avltree(bool,Iterator,Iterator,const key_compare &,const value_traits &)','line_number':638,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::avltree(avltree &&)','line_number':646,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::operator=(avltree &&)','line_number':651,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::~avltree()','line_number':656,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::begin()','line_number':659,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::begin()const','line_number':662,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::cbegin()const','line_number':665,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::end()','line_number':668,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::end()const','line_number':671,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::cend()const','line_number':674,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::rbegin()','line_number':677,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::rbegin()const','line_number':680,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::crbegin()const','line_number':683,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::rend()','line_number':686,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::rend()const','line_number':689,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::crend()const','line_number':692,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::root()','line_number':695,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::root()const','line_number':698,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::croot()const','line_number':701,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::container_from_end_iterator(iterator)','line_number':704,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::container_from_end_iterator(const_iterator)','line_number':707,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::container_from_iterator(iterator)','line_number':710,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::container_from_iterator(const_iterator)','line_number':713,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::key_comp()const','line_number':716,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::value_comp()const','line_number':719,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::empty()const','line_number':722,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::size()const','line_number':725,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::swap','line_number':728,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::clone_from(const avltree&,Cloner,Disposer)','line_number':731,'multiline':False]
['text':'#ifdef BOOST_INTRUSIVE_DOXYGEN_INVOKED','line_number':739,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::clone_from(avltree&&,Cloner,Disposer)','line_number':741,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::insert_equal(reference)','line_number':746,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::insert_equal(const_iterator,reference)','line_number':750,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::insert_equal(Iterator,Iterator)','line_number':754,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::insert_before','line_number':760,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::push_back','line_number':763,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::push_front','line_number':766,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::erase(const_iterator)','line_number':769,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::erase(const_iterator,const_iterator)','line_number':772,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::erase(const key_type &)','line_number':775,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::erase(const KeyType&,KeyTypeKeyCompare)','line_number':778,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::erase_and_dispose(const_iterator,Disposer)','line_number':782,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::erase_and_dispose(const_iterator,const_iterator,Disposer)','line_number':786,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::erase_and_dispose(const key_type &, Disposer)','line_number':790,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::erase_and_dispose(const KeyType&,KeyTypeKeyCompare,Disposer)','line_number':794,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::clear','line_number':798,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::clear_and_dispose','line_number':801,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::count(const key_type &)const','line_number':805,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::count(const KeyType&,KeyTypeKeyCompare)const','line_number':808,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::lower_bound(const key_type &)','line_number':812,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::lower_bound(const KeyType&,KeyTypeKeyCompare)','line_number':815,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::lower_bound(const key_type &)const','line_number':819,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::lower_bound(const KeyType&,KeyTypeKeyCompare)const','line_number':822,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::upper_bound(const key_type &)','line_number':826,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::upper_bound(const KeyType&,KeyTypeKeyCompare)','line_number':829,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::upper_bound(const key_type &)const','line_number':833,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::upper_bound(const KeyType&,KeyTypeKeyCompare)const','line_number':836,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::find(const key_type &)','line_number':840,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::find(const KeyType&,KeyTypeKeyCompare)','line_number':843,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::find(const key_type &)const','line_number':847,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::find(const KeyType&,KeyTypeKeyCompare)const','line_number':850,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::equal_range(const key_type &)','line_number':854,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::equal_range(const KeyType&,KeyTypeKeyCompare)','line_number':857,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::equal_range(const key_type &)const','line_number':861,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::equal_range(const KeyType&,KeyTypeKeyCompare)const','line_number':865,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::bounded_range(const key_type &,const key_type &,bool,bool)','line_number':870,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::bounded_range(const KeyType&,const KeyType&,KeyTypeKeyCompare,bool,bool)','line_number':874,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::bounded_range(const key_type &,const key_type &,bool,bool)const','line_number':879,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::bounded_range(const KeyType&,const KeyType&,KeyTypeKeyCompare,bool,bool)const','line_number':883,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::s_iterator_to(reference)','line_number':888,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::s_iterator_to(const_reference)','line_number':891,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::iterator_to(reference)','line_number':894,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::iterator_to(const_reference)const','line_number':897,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::init_node(reference)','line_number':900,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::unlink_leftmost_without_rebalance','line_number':903,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::replace_node','line_number':906,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::remove_node','line_number':909,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::merge_equal','line_number':912,'multiline':False]
['text':'! @copydoc ::boost::intrusive::avltree::merge_equal','line_number':916,'multiline':False]
['text':'#ifdef BOOST_INTRUSIVE_DOXYGEN_INVOKED','line_number':930,'multiline':False]
['text':'#if defined(BOOST_INTRUSIVE_DOXYGEN_INVOKED)','line_number':950,'multiline':False]
['text':'! Helper metafunction to define a \c avl_multiset that yields to the same type when the','line_number':952,'multiline':False]
['text':'! same options (either explicitly or implicitly) are used.','line_number':953,'multiline':False]
['text':'/ @cond','line_number':963,'multiline':False]
['text':'/ @endcond','line_number':984,'multiline':False]
['text':'Assert if passed value traits are compatible with the type','line_number':1020,'multiline':False]
['text':'namespace intrusive','line_number':1068,'multiline':False]
['text':'namespace boost','line_number':1069,'multiline':False]
['text':'BOOST_INTRUSIVE_AVL_SET_HPP','line_number':1073,'multiline':False]
