['text':'///////////////////////////////////////////////////////////////////////////','line_number':1,'multiline':False]
['text':'','line_number':2,'multiline':False]
['text':' (C) Copyright Ion Gaztanaga 2007-2014','line_number':3,'multiline':False]
['text':'','line_number':4,'multiline':False]
['text':' Distributed under the Boost Software License, Version 1.0.','line_number':5,'multiline':False]
['text':'    (See accompanying file LICENSE_1_0.txt or copy at','line_number':6,'multiline':False]
['text':'          http://www.boost.org/LICENSE_1_0.txt)','line_number':7,'multiline':False]
['text':'','line_number':8,'multiline':False]
['text':' See http://www.boost.org/libs/intrusive for documentation.','line_number':9,'multiline':False]
['text':'','line_number':10,'multiline':False]
['text':'///////////////////////////////////////////////////////////////////////////','line_number':11,'multiline':False]
['text':'! The class template sg_set is an intrusive container, that mimics most of','line_number':34,'multiline':False]
['text':'! the interface of std::sg_set as described in the C++ standard.','line_number':35,'multiline':False]
['text':'!','line_number':36,'multiline':False]
['text':'! The template parameter \c T is the type to be managed by the container.','line_number':37,'multiline':False]
['text':'! The user can specify additional options and if no options are provided','line_number':38,'multiline':False]
['text':'! default options are used.','line_number':39,'multiline':False]
['text':'!','line_number':40,'multiline':False]
['text':'! The container supports the following options:','line_number':41,'multiline':False]
['text':'! \c base_hook<>/member_hook<>/value_traits<>,','line_number':42,'multiline':False]
['text':'! \c floating_point<>, \c size_type<> and','line_number':43,'multiline':False]
['text':'! \c compare<>.','line_number':44,'multiline':False]
['text':'/ @cond','line_number':55,'multiline':False]
['text':'/ @endcond','line_number':60,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::sgtree()','line_number':89,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::sgtree(const key_compare &,const value_traits &)','line_number':94,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::sgtree(bool,Iterator,Iterator,const key_compare &,const value_traits &)','line_number':99,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::sgtree(sgtree &&)','line_number':107,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::operator=(sgtree &&)','line_number':112,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::~sgtree()','line_number':117,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::begin()','line_number':120,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::begin()const','line_number':123,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::cbegin()const','line_number':126,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::end()','line_number':129,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::end()const','line_number':132,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::cend()const','line_number':135,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::rbegin()','line_number':138,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::rbegin()const','line_number':141,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::crbegin()const','line_number':144,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::rend()','line_number':147,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::rend()const','line_number':150,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::crend()const','line_number':153,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::root()','line_number':156,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::root()const','line_number':159,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::croot()const','line_number':162,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::container_from_end_iterator(iterator)','line_number':165,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::container_from_end_iterator(const_iterator)','line_number':168,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::container_from_iterator(iterator)','line_number':171,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::container_from_iterator(const_iterator)','line_number':174,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::key_comp()const','line_number':177,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::value_comp()const','line_number':180,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::empty()const','line_number':183,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::size()const','line_number':186,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::swap','line_number':189,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::clone_from(const sgtree&,Cloner,Disposer)','line_number':192,'multiline':False]
['text':'#ifdef BOOST_INTRUSIVE_DOXYGEN_INVOKED','line_number':200,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::clone_from(sgtree&&,Cloner,Disposer)','line_number':202,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::insert_unique(reference)','line_number':207,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::insert_unique(const_iterator,reference)','line_number':211,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::insert_unique_check(const key_type&,insert_commit_data&)','line_number':215,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::insert_unique_check(const_iterator,const key_type&,insert_commit_data&)','line_number':220,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::insert_unique_check(const KeyType&,KeyTypeKeyCompare,insert_commit_data&)','line_number':226,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::insert_unique_check(const_iterator,const KeyType&,KeyTypeKeyCompare,insert_commit_data&)','line_number':232,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::insert_unique(Iterator,Iterator)','line_number':239,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::insert_unique_commit','line_number':244,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::insert_before','line_number':249,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::push_back','line_number':252,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::push_front','line_number':255,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::erase(const_iterator)','line_number':258,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::erase(const_iterator,const_iterator)','line_number':261,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::erase(const key_type &)','line_number':264,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::erase(const KeyType&,KeyTypeKeyCompare)','line_number':267,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::erase_and_dispose(const_iterator,Disposer)','line_number':271,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::erase_and_dispose(const_iterator,const_iterator,Disposer)','line_number':275,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::erase_and_dispose(const key_type &, Disposer)','line_number':279,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::erase_and_dispose(const KeyType&,KeyTypeKeyCompare,Disposer)','line_number':283,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::clear','line_number':287,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::clear_and_dispose','line_number':290,'multiline':False]
['text':'   #ifdef BOOST_INTRUSIVE_DOXYGEN_INVOKED','line_number':294,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::count(const key_type &)const','line_number':296,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::count(const KeyType&,KeyTypeKeyCompare)const','line_number':300,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::lower_bound(const key_type &)','line_number':307,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::lower_bound(const KeyType&,KeyTypeKeyCompare)','line_number':310,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::lower_bound(const key_type &)const','line_number':314,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::lower_bound(const KeyType&,KeyTypeKeyCompare)const','line_number':317,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::upper_bound(const key_type &)','line_number':321,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::upper_bound(const KeyType&,KeyTypeKeyCompare)','line_number':324,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::upper_bound(const key_type &)const','line_number':328,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::upper_bound(const KeyType&,KeyTypeKeyCompare)const','line_number':331,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::find(const key_type &)','line_number':335,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::find(const KeyType&,KeyTypeKeyCompare)','line_number':338,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::find(const key_type &)const','line_number':342,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::find(const KeyType&,KeyTypeKeyCompare)const','line_number':345,'multiline':False]
['text':'   #ifdef BOOST_INTRUSIVE_DOXYGEN_INVOKED','line_number':349,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::equal_range(const key_type &)','line_number':351,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::equal_range(const KeyType&,KeyTypeKeyCompare)','line_number':355,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::equal_range(const key_type &)const','line_number':360,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::equal_range(const KeyType&,KeyTypeKeyCompare)const','line_number':365,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::bounded_range(const key_type &,const key_type &,bool,bool)','line_number':373,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::bounded_range(const KeyType&,const KeyType&,KeyTypeKeyCompare,bool,bool)','line_number':377,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::bounded_range(const key_type &,const key_type &,bool,bool)const','line_number':382,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::bounded_range(const KeyType&,const KeyType&,KeyTypeKeyCompare,bool,bool)const','line_number':386,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::s_iterator_to(reference)','line_number':391,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::s_iterator_to(const_reference)','line_number':394,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::iterator_to(reference)','line_number':397,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::iterator_to(const_reference)const','line_number':400,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::init_node(reference)','line_number':403,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::unlink_leftmost_without_rebalance','line_number':406,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::replace_node','line_number':409,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::remove_node','line_number':412,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::rebalance','line_number':415,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::rebalance_subtree','line_number':418,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::balance_factor()','line_number':421,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::balance_factor(float)','line_number':424,'multiline':False]
['text':'! @copydoc ::boost::intrusive::rbtree::merge_unique','line_number':427,'multiline':False]
['text':'! @copydoc ::boost::intrusive::rbtree::merge_unique','line_number':431,'multiline':False]
['text':'#ifdef BOOST_INTRUSIVE_DOXYGEN_INVOKED','line_number':445,'multiline':False]
['text':'#if defined(BOOST_INTRUSIVE_DOXYGEN_INVOKED)','line_number':465,'multiline':False]
['text':'! Helper metafunction to define a \c sg_set that yields to the same type when the','line_number':467,'multiline':False]
['text':'! same options (either explicitly or implicitly) are used.','line_number':468,'multiline':False]
['text':'/ @cond','line_number':478,'multiline':False]
['text':'/ @endcond','line_number':499,'multiline':False]
['text':'Assert if passed value traits are compatible with the type','line_number':534,'multiline':False]
['text':'! The class template sg_multiset is an intrusive container, that mimics most of','line_number':582,'multiline':False]
['text':'! the interface of std::sg_multiset as described in the C++ standard.','line_number':583,'multiline':False]
['text':'!','line_number':584,'multiline':False]
['text':'! The template parameter \c T is the type to be managed by the container.','line_number':585,'multiline':False]
['text':'! The user can specify additional options and if no options are provided','line_number':586,'multiline':False]
['text':'! default options are used.','line_number':587,'multiline':False]
['text':'!','line_number':588,'multiline':False]
['text':'! The container supports the following options:','line_number':589,'multiline':False]
['text':'! \c base_hook<>/member_hook<>/value_traits<>,','line_number':590,'multiline':False]
['text':'! \c floating_point<>, \c size_type<> and','line_number':591,'multiline':False]
['text':'! \c compare<>.','line_number':592,'multiline':False]
['text':'/ @cond','line_number':603,'multiline':False]
['text':'/ @endcond','line_number':608,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::sgtree()','line_number':637,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::sgtree(const key_compare &,const value_traits &)','line_number':642,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::sgtree(bool,Iterator,Iterator,const key_compare &,const value_traits &)','line_number':647,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::sgtree(sgtree &&)','line_number':655,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::operator=(sgtree &&)','line_number':660,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::~sgtree()','line_number':665,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::begin()','line_number':668,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::begin()const','line_number':671,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::cbegin()const','line_number':674,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::end()','line_number':677,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::end()const','line_number':680,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::cend()const','line_number':683,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::rbegin()','line_number':686,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::rbegin()const','line_number':689,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::crbegin()const','line_number':692,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::rend()','line_number':695,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::rend()const','line_number':698,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::crend()const','line_number':701,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::root()','line_number':704,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::root()const','line_number':707,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::croot()const','line_number':710,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::container_from_end_iterator(iterator)','line_number':713,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::container_from_end_iterator(const_iterator)','line_number':716,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::container_from_iterator(iterator)','line_number':719,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::container_from_iterator(const_iterator)','line_number':722,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::key_comp()const','line_number':725,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::value_comp()const','line_number':728,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::empty()const','line_number':731,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::size()const','line_number':734,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::swap','line_number':737,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::clone_from(const sgtree&,Cloner,Disposer)','line_number':740,'multiline':False]
['text':'#ifdef BOOST_INTRUSIVE_DOXYGEN_INVOKED','line_number':748,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::clone_from(sgtree&&,Cloner,Disposer)','line_number':750,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::insert_equal(reference)','line_number':755,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::insert_equal(const_iterator,reference)','line_number':759,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::insert_equal(Iterator,Iterator)','line_number':763,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::insert_before','line_number':769,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::push_back','line_number':772,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::push_front','line_number':775,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::erase(const_iterator)','line_number':778,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::erase(const_iterator,const_iterator)','line_number':781,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::erase(const key_type &)','line_number':784,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::erase(const KeyType&,KeyTypeKeyCompare)','line_number':787,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::erase_and_dispose(const_iterator,Disposer)','line_number':791,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::erase_and_dispose(const_iterator,const_iterator,Disposer)','line_number':795,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::erase_and_dispose(const key_type &, Disposer)','line_number':799,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::erase_and_dispose(const KeyType&,KeyTypeKeyCompare,Disposer)','line_number':803,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::clear','line_number':807,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::clear_and_dispose','line_number':810,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::count(const key_type &)const','line_number':814,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::count(const KeyType&,KeyTypeKeyCompare)const','line_number':817,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::lower_bound(const key_type &)','line_number':821,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::lower_bound(const KeyType&,KeyTypeKeyCompare)','line_number':824,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::lower_bound(const key_type &)const','line_number':828,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::lower_bound(const KeyType&,KeyTypeKeyCompare)const','line_number':831,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::upper_bound(const key_type &)','line_number':835,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::upper_bound(const KeyType&,KeyTypeKeyCompare)','line_number':838,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::upper_bound(const key_type &)const','line_number':842,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::upper_bound(const KeyType&,KeyTypeKeyCompare)const','line_number':845,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::find(const key_type &)','line_number':849,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::find(const KeyType&,KeyTypeKeyCompare)','line_number':852,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::find(const key_type &)const','line_number':856,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::find(const KeyType&,KeyTypeKeyCompare)const','line_number':859,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::equal_range(const key_type &)','line_number':863,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::equal_range(const KeyType&,KeyTypeKeyCompare)','line_number':866,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::equal_range(const key_type &)const','line_number':870,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::equal_range(const KeyType&,KeyTypeKeyCompare)const','line_number':874,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::bounded_range(const key_type &,const key_type &,bool,bool)','line_number':879,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::bounded_range(const KeyType&,const KeyType&,KeyTypeKeyCompare,bool,bool)','line_number':883,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::bounded_range(const key_type &,const key_type &,bool,bool)const','line_number':888,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::bounded_range(const KeyType&,const KeyType&,KeyTypeKeyCompare,bool,bool)const','line_number':892,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::s_iterator_to(reference)','line_number':897,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::s_iterator_to(const_reference)','line_number':900,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::iterator_to(reference)','line_number':903,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::iterator_to(const_reference)const','line_number':906,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::init_node(reference)','line_number':909,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::unlink_leftmost_without_rebalance','line_number':912,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::replace_node','line_number':915,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::remove_node','line_number':918,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::rebalance','line_number':921,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::rebalance_subtree','line_number':924,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::balance_factor()','line_number':927,'multiline':False]
['text':'! @copydoc ::boost::intrusive::sgtree::balance_factor(float)','line_number':930,'multiline':False]
['text':'! @copydoc ::boost::intrusive::treap::merge_unique','line_number':933,'multiline':False]
['text':'! @copydoc ::boost::intrusive::treap::merge_unique','line_number':937,'multiline':False]
['text':'#ifdef BOOST_INTRUSIVE_DOXYGEN_INVOKED','line_number':951,'multiline':False]
['text':'#if defined(BOOST_INTRUSIVE_DOXYGEN_INVOKED)','line_number':971,'multiline':False]
['text':'! Helper metafunction to define a \c sg_multiset that yields to the same type when the','line_number':973,'multiline':False]
['text':'! same options (either explicitly or implicitly) are used.','line_number':974,'multiline':False]
['text':'/ @cond','line_number':984,'multiline':False]
['text':'/ @endcond','line_number':1005,'multiline':False]
['text':'Assert if passed value traits are compatible with the type','line_number':1041,'multiline':False]
['text':'namespace intrusive','line_number':1089,'multiline':False]
['text':'namespace boost','line_number':1090,'multiline':False]
['text':'BOOST_INTRUSIVE_SG_SET_HPP','line_number':1094,'multiline':False]
