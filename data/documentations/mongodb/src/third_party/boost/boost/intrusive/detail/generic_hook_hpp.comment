['text':'///////////////////////////////////////////////////////////////////////////','line_number':1,'multiline':False]
['text':'','line_number':2,'multiline':False]
['text':' (C) Copyright Ion Gaztanaga 2007-2013','line_number':3,'multiline':False]
['text':'','line_number':4,'multiline':False]
['text':' Distributed under the Boost Software License, Version 1.0.','line_number':5,'multiline':False]
['text':'    (See accompanying file LICENSE_1_0.txt or copy at','line_number':6,'multiline':False]
['text':'          http://www.boost.org/LICENSE_1_0.txt)','line_number':7,'multiline':False]
['text':'','line_number':8,'multiline':False]
['text':' See http://www.boost.org/libs/intrusive for documentation.','line_number':9,'multiline':False]
['text':'','line_number':10,'multiline':False]
['text':'///////////////////////////////////////////////////////////////////////////','line_number':11,'multiline':False]
['text':'/ @cond','line_number':35,'multiline':False]
['text':'If this assertion raises, you might have destroyed an object','line_number':45,'multiline':False]
['text':'while it was still inserted in a container that is alive.','line_number':46,'multiline':False]
['text':'If so, remove the object from the container before destroying it.','line_number':47,'multiline':False]
['text':'namespace detail {','line_number':59,'multiline':False]
['text':'/ @endcond','line_number':121,'multiline':False]
['text':'/ @cond','line_number':131,'multiline':False]
['text':'If the hook is a base hook, derive generic hook from node_holder','line_number':132,'multiline':False]
['text':'so that a unique base class is created to convert from the node','line_number':133,'multiline':False]
['text':'to the type. This mechanism will be used by bhtraits.','line_number':134,'multiline':False]
['text':'','line_number':135,'multiline':False]
['text':'If the hook is a member hook, generic hook will directly derive','line_number':136,'multiline':False]
['text':'from the hook.','line_number':137,'multiline':False]
['text':'If this is the a default-tagged base hook derive from a class that','line_number':143,'multiline':False]
['text':'will define an special internal typedef. Containers will be able to detect this','line_number':144,'multiline':False]
['text':'special typedef and obtain generic_hook's internal types in order to deduce','line_number':145,'multiline':False]
['text':'value_traits for this hook.','line_number':146,'multiline':False]
['text':'/ @endcond','line_number':150,'multiline':False]
['text':'/ @cond','line_number':152,'multiline':False]
['text':'/ @endcond','line_number':171,'multiline':False]
['text':'is_linked() can be only used in safe-mode or auto-unlink','line_number':204,'multiline':False]
['text':'namespace intrusive','line_number':220,'multiline':False]
['text':'namespace boost','line_number':221,'multiline':False]
['text':'BOOST_INTRUSIVE_GENERIC_HOOK_HPP','line_number':223,'multiline':False]
