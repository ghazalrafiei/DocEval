['text':'///////////////////////////////////////////////////////////////////////////','line_number':1,'multiline':False]
['text':'','line_number':2,'multiline':False]
['text':' (C) Copyright Ion Gaztanaga  2007-2014','line_number':3,'multiline':False]
['text':'','line_number':4,'multiline':False]
['text':' Distributed under the Boost Software License, Version 1.0.','line_number':5,'multiline':False]
['text':'    (See accompanying file LICENSE_1_0.txt or copy at','line_number':6,'multiline':False]
['text':'          http://www.boost.org/LICENSE_1_0.txt)','line_number':7,'multiline':False]
['text':'','line_number':8,'multiline':False]
['text':' See http://www.boost.org/libs/intrusive for documentation.','line_number':9,'multiline':False]
['text':'','line_number':10,'multiline':False]
['text':'///////////////////////////////////////////////////////////////////////////','line_number':11,'multiline':False]
['text':'std::pair','line_number':19,'multiline':False]
['text':'/ @cond','line_number':40,'multiline':False]
['text':'/ @endcond','line_number':46,'multiline':False]
['text':'! The class template splaytree is an intrusive splay tree container that','line_number':48,'multiline':False]
['text':'! is used to construct intrusive splay_set and splay_multiset containers. The no-throw','line_number':49,'multiline':False]
['text':'! guarantee holds only, if the key_compare object','line_number':50,'multiline':False]
['text':'! doesn't throw.','line_number':51,'multiline':False]
['text':'!','line_number':52,'multiline':False]
['text':'! The template parameter \c T is the type to be managed by the container.','line_number':53,'multiline':False]
['text':'! The user can specify additional options and if no options are provided','line_number':54,'multiline':False]
['text':'! default options are used.','line_number':55,'multiline':False]
['text':'!','line_number':56,'multiline':False]
['text':'! The container supports the following options:','line_number':57,'multiline':False]
['text':'! \c base_hook<>/member_hook<>/value_traits<>,','line_number':58,'multiline':False]
['text':'! \c constant_time_size<>, \c size_type<> and','line_number':59,'multiline':False]
['text':'! \c compare<>.','line_number':60,'multiline':False]
['text':'/ @cond','line_number':67,'multiline':False]
['text':'/ @endcond','line_number':69,'multiline':False]
['text':'/ @cond','line_number':73,'multiline':False]
['text':'/ @endcond','line_number':78,'multiline':False]
['text':'/ @cond','line_number':102,'multiline':False]
['text':'noncopyable','line_number':105,'multiline':False]
['text':'/ @endcond','line_number':108,'multiline':False]
['text':'! @copydoc ::boost::intrusive::bstree::bstree()','line_number':114,'multiline':False]
['text':'! @copydoc ::boost::intrusive::bstree::bstree(const key_compare &,const value_traits &)','line_number':119,'multiline':False]
['text':'! @copydoc ::boost::intrusive::bstree::bstree(bool,Iterator,Iterator,const key_compare &,const value_traits &)','line_number':124,'multiline':False]
['text':'! @copydoc ::boost::intrusive::bstree::bstree(bstree &&)','line_number':137,'multiline':False]
['text':'! @copydoc ::boost::intrusive::bstree::operator=(bstree &&)','line_number':142,'multiline':False]
['text':'! @copydoc ::boost::intrusive::bstree::~bstree()','line_number':147,'multiline':False]
['text':'! @copydoc ::boost::intrusive::bstree::begin()','line_number':150,'multiline':False]
['text':'! @copydoc ::boost::intrusive::bstree::begin()const','line_number':153,'multiline':False]
['text':'! @copydoc ::boost::intrusive::bstree::cbegin()const','line_number':156,'multiline':False]
['text':'! @copydoc ::boost::intrusive::bstree::end()','line_number':159,'multiline':False]
['text':'! @copydoc ::boost::intrusive::bstree::end()const','line_number':162,'multiline':False]
['text':'! @copydoc ::boost::intrusive::bstree::cend()const','line_number':165,'multiline':False]
['text':'! @copydoc ::boost::intrusive::bstree::rbegin()','line_number':168,'multiline':False]
['text':'! @copydoc ::boost::intrusive::bstree::rbegin()const','line_number':171,'multiline':False]
['text':'! @copydoc ::boost::intrusive::bstree::crbegin()const','line_number':174,'multiline':False]
['text':'! @copydoc ::boost::intrusive::bstree::rend()','line_number':177,'multiline':False]
['text':'! @copydoc ::boost::intrusive::bstree::rend()const','line_number':180,'multiline':False]
['text':'! @copydoc ::boost::intrusive::bstree::crend()const','line_number':183,'multiline':False]
['text':'! @copydoc ::boost::intrusive::bstree::root()','line_number':186,'multiline':False]
['text':'! @copydoc ::boost::intrusive::bstree::root()const','line_number':189,'multiline':False]
['text':'! @copydoc ::boost::intrusive::bstree::croot()const','line_number':192,'multiline':False]
['text':'! @copydoc ::boost::intrusive::bstree::container_from_end_iterator(iterator)','line_number':195,'multiline':False]
['text':'! @copydoc ::boost::intrusive::bstree::container_from_end_iterator(const_iterator)','line_number':198,'multiline':False]
['text':'! @copydoc ::boost::intrusive::bstree::container_from_iterator(iterator)','line_number':201,'multiline':False]
['text':'! @copydoc ::boost::intrusive::bstree::container_from_iterator(const_iterator)','line_number':204,'multiline':False]
['text':'! @copydoc ::boost::intrusive::bstree::key_comp()const','line_number':207,'multiline':False]
['text':'! @copydoc ::boost::intrusive::bstree::value_comp()const','line_number':210,'multiline':False]
['text':'! @copydoc ::boost::intrusive::bstree::empty()const','line_number':213,'multiline':False]
['text':'! @copydoc ::boost::intrusive::bstree::size()const','line_number':216,'multiline':False]
['text':'! @copydoc ::boost::intrusive::bstree::swap','line_number':219,'multiline':False]
['text':'! @copydoc ::boost::intrusive::bstree::clone_from(const bstree&,Cloner,Disposer)','line_number':222,'multiline':False]
['text':'! Additional notes: it also copies the alpha factor from the source container.','line_number':223,'multiline':False]
['text':'BOOST_INTRUSIVE_DOXYGEN_INVOKED','line_number':227,'multiline':False]
['text':'#ifdef BOOST_INTRUSIVE_DOXYGEN_INVOKED','line_number':231,'multiline':False]
['text':'! @copydoc ::boost::intrusive::bstree::clone_from(bstree&&,Cloner,Disposer)','line_number':233,'multiline':False]
['text':'! @copydoc ::boost::intrusive::bstree::insert_equal(reference)','line_number':240,'multiline':False]
['text':'! @copydoc ::boost::intrusive::bstree::insert_equal(const_iterator,reference)','line_number':243,'multiline':False]
['text':'! @copydoc ::boost::intrusive::bstree::insert_equal(Iterator,Iterator)','line_number':246,'multiline':False]
['text':'! @copydoc ::boost::intrusive::bstree::insert_unique(reference)','line_number':250,'multiline':False]
['text':'! @copydoc ::boost::intrusive::bstree::insert_unique(const_iterator,reference)','line_number':253,'multiline':False]
['text':'! @copydoc ::boost::intrusive::bstree::insert_unique_check(const key_type&,insert_commit_data&)','line_number':256,'multiline':False]
['text':'! @copydoc ::boost::intrusive::bstree::insert_unique_check(const_iterator,const key_type&,insert_commit_data&)','line_number':260,'multiline':False]
['text':'! @copydoc ::boost::intrusive::bstree::insert_unique_check(const KeyType&,KeyTypeKeyCompare,insert_commit_data&)','line_number':264,'multiline':False]
['text':'! @copydoc ::boost::intrusive::bstree::insert_unique_check(const_iterator,const KeyType&,KeyTypeKeyCompare,insert_commit_data&)','line_number':269,'multiline':False]
['text':'! @copydoc ::boost::intrusive::bstree::insert_unique_commit','line_number':275,'multiline':False]
['text':'! @copydoc ::boost::intrusive::bstree::insert_unique(Iterator,Iterator)','line_number':278,'multiline':False]
['text':'! @copydoc ::boost::intrusive::bstree::insert_before','line_number':282,'multiline':False]
['text':'! @copydoc ::boost::intrusive::bstree::push_back','line_number':285,'multiline':False]
['text':'! @copydoc ::boost::intrusive::bstree::push_front','line_number':288,'multiline':False]
['text':'! @copydoc ::boost::intrusive::bstree::erase(const_iterator)','line_number':291,'multiline':False]
['text':'! @copydoc ::boost::intrusive::bstree::erase(const_iterator,const_iterator)','line_number':294,'multiline':False]
['text':'! @copydoc ::boost::intrusive::bstree::erase(const key_type &)','line_number':297,'multiline':False]
['text':'! @copydoc ::boost::intrusive::bstree::erase(const KeyType&,KeyTypeKeyCompare)','line_number':300,'multiline':False]
['text':'! @copydoc ::boost::intrusive::bstree::erase_and_dispose(const_iterator,Disposer)','line_number':304,'multiline':False]
['text':'! @copydoc ::boost::intrusive::bstree::erase_and_dispose(const_iterator,const_iterator,Disposer)','line_number':308,'multiline':False]
['text':'! @copydoc ::boost::intrusive::bstree::erase_and_dispose(const key_type &, Disposer)','line_number':312,'multiline':False]
['text':'! @copydoc ::boost::intrusive::bstree::erase_and_dispose(const KeyType&,KeyTypeKeyCompare,Disposer)','line_number':316,'multiline':False]
['text':'! @copydoc ::boost::intrusive::bstree::clear','line_number':320,'multiline':False]
['text':'! @copydoc ::boost::intrusive::bstree::clear_and_dispose','line_number':323,'multiline':False]
['text':'! @copydoc ::boost::intrusive::bstree::count(const key_type &)const','line_number':327,'multiline':False]
['text':'! Additional note: non-const function, splaying is performed.','line_number':328,'multiline':False]
['text':'! @copydoc ::boost::intrusive::bstree::count(const KeyType&,KeyTypeKeyCompare)const','line_number':331,'multiline':False]
['text':'! Additional note: non-const function, splaying is performed.','line_number':332,'multiline':False]
['text':'! @copydoc ::boost::intrusive::bstree::count(const key_type &)const','line_number':336,'multiline':False]
['text':'! Additional note: const function, no splaying is performed','line_number':337,'multiline':False]
['text':'! @copydoc ::boost::intrusive::bstree::count(const KeyType&,KeyTypeKeyCompare)const','line_number':340,'multiline':False]
['text':'! Additional note: const function, no splaying is performed','line_number':341,'multiline':False]
['text':'! @copydoc ::boost::intrusive::bstree::lower_bound(const key_type &)','line_number':345,'multiline':False]
['text':'! Additional note: non-const function, splaying is performed.','line_number':346,'multiline':False]
['text':'! @copydoc ::boost::intrusive::bstree::lower_bound(const key_type &)const','line_number':349,'multiline':False]
['text':'! Additional note: const function, no splaying is performed','line_number':350,'multiline':False]
['text':'! @copydoc ::boost::intrusive::bstree::lower_bound(const KeyType&,KeyTypeKeyCompare)','line_number':353,'multiline':False]
['text':'! Additional note: non-const function, splaying is performed for the first','line_number':354,'multiline':False]
['text':'! element of the equal range of "key"','line_number':355,'multiline':False]
['text':'! @copydoc ::boost::intrusive::bstree::lower_bound(const KeyType&,KeyTypeKeyCompare)const','line_number':359,'multiline':False]
['text':'! Additional note: const function, no splaying is performed','line_number':360,'multiline':False]
['text':'! @copydoc ::boost::intrusive::bstree::upper_bound(const key_type &)','line_number':364,'multiline':False]
['text':'! Additional note: non-const function, splaying is performed for the first','line_number':365,'multiline':False]
['text':'! element of the equal range of "value"','line_number':366,'multiline':False]
['text':'! @copydoc ::boost::intrusive::bstree::upper_bound(const key_type &)const','line_number':369,'multiline':False]
['text':'! Additional note: const function, no splaying is performed','line_number':370,'multiline':False]
['text':'! @copydoc ::boost::intrusive::bstree::upper_bound(const KeyType&,KeyTypeKeyCompare)','line_number':373,'multiline':False]
['text':'! Additional note: non-const function, splaying is performed for the first','line_number':374,'multiline':False]
['text':'! element of the equal range of "key"','line_number':375,'multiline':False]
['text':'! @copydoc ::boost::intrusive::bstree::upper_bound(const KeyType&,KeyTypeKeyCompare)const','line_number':379,'multiline':False]
['text':'! Additional note: const function, no splaying is performed','line_number':380,'multiline':False]
['text':'! @copydoc ::boost::intrusive::bstree::find(const key_type &)','line_number':384,'multiline':False]
['text':'! Additional note: non-const function, splaying is performed for the first','line_number':385,'multiline':False]
['text':'! element of the equal range of "value"','line_number':386,'multiline':False]
['text':'! @copydoc ::boost::intrusive::bstree::find(const key_type &)const','line_number':389,'multiline':False]
['text':'! Additional note: const function, no splaying is performed','line_number':390,'multiline':False]
['text':'! @copydoc ::boost::intrusive::bstree::find(const KeyType&,KeyTypeKeyCompare)','line_number':393,'multiline':False]
['text':'! Additional note: non-const function, splaying is performed for the first','line_number':394,'multiline':False]
['text':'! element of the equal range of "key"','line_number':395,'multiline':False]
['text':'! @copydoc ::boost::intrusive::bstree::find(const KeyType&,KeyTypeKeyCompare)const','line_number':399,'multiline':False]
['text':'! Additional note: const function, no splaying is performed','line_number':400,'multiline':False]
['text':'! @copydoc ::boost::intrusive::bstree::equal_range(const key_type &)','line_number':404,'multiline':False]
['text':'! Additional note: non-const function, splaying is performed for the first','line_number':405,'multiline':False]
['text':'! element of the equal range of "value"','line_number':406,'multiline':False]
['text':'! @copydoc ::boost::intrusive::bstree::equal_range(const key_type &)const','line_number':409,'multiline':False]
['text':'! Additional note: const function, no splaying is performed','line_number':410,'multiline':False]
['text':'! @copydoc ::boost::intrusive::bstree::equal_range(const KeyType&,KeyTypeKeyCompare)','line_number':413,'multiline':False]
['text':'! Additional note: non-const function, splaying is performed for the first','line_number':414,'multiline':False]
['text':'! element of the equal range of "key"','line_number':415,'multiline':False]
['text':'! @copydoc ::boost::intrusive::bstree::equal_range(const KeyType&,KeyTypeKeyCompare)const','line_number':419,'multiline':False]
['text':'! Additional note: const function, no splaying is performed','line_number':420,'multiline':False]
['text':'! @copydoc ::boost::intrusive::bstree::bounded_range(const key_type &,const key_type &,bool,bool)','line_number':424,'multiline':False]
['text':'! @copydoc ::boost::intrusive::bstree::bounded_range(const KeyType&,const KeyType&,KeyTypeKeyCompare,bool,bool)','line_number':428,'multiline':False]
['text':'! @copydoc ::boost::intrusive::bstree::bounded_range(const key_type &,const key_type &,bool,bool)const','line_number':433,'multiline':False]
['text':'! @copydoc ::boost::intrusive::bstree::bounded_range(const KeyType&,const KeyType&,KeyTypeKeyCompare,bool,bool)const','line_number':437,'multiline':False]
['text':'! @copydoc ::boost::intrusive::bstree::s_iterator_to(reference)','line_number':442,'multiline':False]
['text':'! @copydoc ::boost::intrusive::bstree::s_iterator_to(const_reference)','line_number':445,'multiline':False]
['text':'! @copydoc ::boost::intrusive::bstree::iterator_to(reference)','line_number':448,'multiline':False]
['text':'! @copydoc ::boost::intrusive::bstree::iterator_to(const_reference)const','line_number':451,'multiline':False]
['text':'! @copydoc ::boost::intrusive::bstree::init_node(reference)','line_number':454,'multiline':False]
['text':'! @copydoc ::boost::intrusive::bstree::unlink_leftmost_without_rebalance','line_number':457,'multiline':False]
['text':'! @copydoc ::boost::intrusive::bstree::replace_node','line_number':460,'multiline':False]
['text':'! @copydoc ::boost::intrusive::bstree::remove_node','line_number':463,'multiline':False]
['text':'! @copydoc ::boost::intrusive::bstree::merge_unique(bstree<T, Options2...>&)','line_number':466,'multiline':False]
['text':'! @copydoc ::boost::intrusive::bstree::merge_equal(bstree<T, Options2...>&)','line_number':470,'multiline':False]
['text':'#ifdef BOOST_INTRUSIVE_DOXYGEN_INVOKED','line_number':474,'multiline':False]
['text':'! <b>Requires</b>: i must be a valid iterator of *this.','line_number':476,'multiline':False]
['text':'!','line_number':477,'multiline':False]
['text':'! <b>Effects</b>: Rearranges the container so that the element pointed by i','line_number':478,'multiline':False]
['text':'!   is placed as the root of the tree, improving future searches of this value.','line_number':479,'multiline':False]
['text':'!','line_number':480,'multiline':False]
['text':'! <b>Complexity</b>: Amortized logarithmic.','line_number':481,'multiline':False]
['text':'!','line_number':482,'multiline':False]
['text':'! <b>Throws</b>: Nothing.','line_number':483,'multiline':False]
['text':'! <b>Effects</b>: Rearranges the container so that if *this stores an element','line_number':487,'multiline':False]
['text':'!   with a key equivalent to value the element is placed as the root of the','line_number':488,'multiline':False]
['text':'!   tree. If the element is not present returns the last node compared with the key.','line_number':489,'multiline':False]
['text':'!   If the tree is empty, end() is returned.','line_number':490,'multiline':False]
['text':'!','line_number':491,'multiline':False]
['text':'! <b>Complexity</b>: Amortized logarithmic.','line_number':492,'multiline':False]
['text':'!','line_number':493,'multiline':False]
['text':'! <b>Returns</b>: An iterator to the new root of the tree, end() if the tree is empty.','line_number':494,'multiline':False]
['text':'!','line_number':495,'multiline':False]
['text':'! <b>Throws</b>: If the comparison functor throws.','line_number':496,'multiline':False]
['text':'! <b>Effects</b>: Rearranges the container so that if *this stores an element','line_number':506,'multiline':False]
['text':'!   with a key equivalent to value the element is placed as the root of the','line_number':507,'multiline':False]
['text':'!   tree.','line_number':508,'multiline':False]
['text':'!','line_number':509,'multiline':False]
['text':'! <b>Complexity</b>: Amortized logarithmic.','line_number':510,'multiline':False]
['text':'!','line_number':511,'multiline':False]
['text':'! <b>Returns</b>: An iterator to the new root of the tree, end() if the tree is empty.','line_number':512,'multiline':False]
['text':'!','line_number':513,'multiline':False]
['text':'! <b>Throws</b>: If the predicate throws.','line_number':514,'multiline':False]
['text':'! @copydoc ::boost::intrusive::bstree::rebalance','line_number':519,'multiline':False]
['text':'! @copydoc ::boost::intrusive::bstree::rebalance_subtree','line_number':522,'multiline':False]
['text':'#ifdef BOOST_INTRUSIVE_DOXYGEN_INVOKED','line_number':539,'multiline':False]
['text':'! Helper metafunction to define a \c splaytree that yields to the same type when the','line_number':542,'multiline':False]
['text':'! same options (either explicitly or implicitly) are used.','line_number':543,'multiline':False]
['text':'/ @cond','line_number':553,'multiline':False]
['text':'/ @endcond','line_number':574,'multiline':False]
['text':'Assert if passed value traits are compatible with the type','line_number':613,'multiline':False]
['text':'namespace intrusive','line_number':661,'multiline':False]
['text':'namespace boost','line_number':662,'multiline':False]
['text':'BOOST_INTRUSIVE_SPLAYTREE_HPP','line_number':666,'multiline':False]
