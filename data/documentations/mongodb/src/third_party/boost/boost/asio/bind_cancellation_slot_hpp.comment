['text':'','line_number':1,'multiline':False]
['text':' bind_cancellation_slot.hpp','line_number':2,'multiline':False]
['text':' ~~~~~~~~~~~~~~~~~~~~~~~~~~','line_number':3,'multiline':False]
['text':'','line_number':4,'multiline':False]
['text':' Copyright (c) 2003-2022 Christopher M. Kohlhoff (chris at kohlhoff dot com)','line_number':5,'multiline':False]
['text':'','line_number':6,'multiline':False]
['text':' Distributed under the Boost Software License, Version 1.0. (See accompanying','line_number':7,'multiline':False]
['text':' file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)','line_number':8,'multiline':False]
['text':'','line_number':9,'multiline':False]
['text':' defined(_MSC_VER) && (_MSC_VER >= 1200)','line_number':16,'multiline':False]
['text':' Helper to automatically define nested typedef result_type.','line_number':31,'multiline':False]
['text':' Helper to automatically define nested typedef argument_type.','line_number':97,'multiline':False]
['text':' Helper to automatically define nested typedefs first_argument_type and','line_number':121,'multiline':False]
['text':' second_argument_type.','line_number':122,'multiline':False]
['text':' Helper to enable SFINAE on zero-argument operator() below.','line_number':149,'multiline':False]
['text':' namespace detail','line_number':164,'multiline':False]
['text':'/ A call wrapper type to bind a cancellation slot of type @c CancellationSlot','line_number':166,'multiline':False]
['text':'/ to an object of type @c T.','line_number':167,'multiline':False]
['text':' !defined(GENERATING_DOCUMENTATION)','line_number':174,'multiline':False]
['text':'/ The type of the target object.','line_number':177,'multiline':False]
['text':'/ The type of the associated cancellation slot.','line_number':180,'multiline':False]
['text':'/ The return type if a function.','line_number':184,'multiline':False]
['text':'*
   * The type of @c result_type is based on the type @c T of the wrapper's
   * target object:
   *
   * @li if @c T is a pointer to function type, @c result_type is a synonym for
   * the return type of @c T;
   *
   * @li if @c T is a class type with a member type @c result_type, then @c
   * result_type is a synonym for @c T::result_type;
   *
   * @li otherwise @c result_type is not defined.
   ','line_number':185,'multiline':True]
['text':'/ The type of the function's argument.','line_number':199,'multiline':False]
['text':'*
   * The type of @c argument_type is based on the type @c T of the wrapper's
   * target object:
   *
   * @li if @c T is a pointer to a function type accepting a single argument,
   * @c argument_type is a synonym for the return type of @c T;
   *
   * @li if @c T is a class type with a member type @c argument_type, then @c
   * argument_type is a synonym for @c T::argument_type;
   *
   * @li otherwise @c argument_type is not defined.
   ','line_number':200,'multiline':True]
['text':'/ The type of the function's first argument.','line_number':214,'multiline':False]
['text':'*
   * The type of @c first_argument_type is based on the type @c T of the
   * wrapper's target object:
   *
   * @li if @c T is a pointer to a function type accepting two arguments, @c
   * first_argument_type is a synonym for the return type of @c T;
   *
   * @li if @c T is a class type with a member type @c first_argument_type,
   * then @c first_argument_type is a synonym for @c T::first_argument_type;
   *
   * @li otherwise @c first_argument_type is not defined.
   ','line_number':215,'multiline':True]
['text':'/ The type of the function's second argument.','line_number':229,'multiline':False]
['text':'*
   * The type of @c second_argument_type is based on the type @c T of the
   * wrapper's target object:
   *
   * @li if @c T is a pointer to a function type accepting two arguments, @c
   * second_argument_type is a synonym for the return type of @c T;
   *
   * @li if @c T is a class type with a member type @c first_argument_type,
   * then @c second_argument_type is a synonym for @c T::second_argument_type;
   *
   * @li otherwise @c second_argument_type is not defined.
   ','line_number':230,'multiline':True]
['text':' defined(GENERATING_DOCUMENTATION)','line_number':243,'multiline':False]
['text':'/ Construct a cancellation slot wrapper for the specified object.','line_number':245,'multiline':False]
['text':'*
   * This constructor is only valid if the type @c T is constructible from type
   * @c U.
   ','line_number':246,'multiline':True]
['text':'/ Copy constructor.','line_number':258,'multiline':False]
['text':'/ Construct a copy, but specify a different cancellation slot.','line_number':265,'multiline':False]
['text':'/ Construct a copy of a different cancellation slot wrapper type.','line_number':273,'multiline':False]
['text':'*
   * This constructor is only valid if the @c CancellationSlot type is
   * constructible from type @c OtherCancellationSlot, and the type @c T is
   * constructible from type @c U.
   ','line_number':274,'multiline':True]
['text':'/ Construct a copy of a different cancellation slot wrapper type, but','line_number':287,'multiline':False]
['text':'/ specify a different cancellation slot.','line_number':288,'multiline':False]
['text':'*
   * This constructor is only valid if the type @c T is constructible from type
   * @c U.
   ','line_number':289,'multiline':True]
['text':'/ Move constructor.','line_number':303,'multiline':False]
['text':'/ Move construct the target object, but specify a different cancellation','line_number':311,'multiline':False]
['text':'/ slot.','line_number':312,'multiline':False]
['text':'/ Move construct from a different cancellation slot wrapper type.','line_number':320,'multiline':False]
['text':'/ Move construct from a different cancellation slot wrapper type, but','line_number':330,'multiline':False]
['text':'/ specify a different cancellation slot.','line_number':331,'multiline':False]
['text':' defined(BOOST_ASIO_HAS_MOVE) || defined(GENERATING_DOCUMENTATION)','line_number':340,'multiline':False]
['text':'/ Destructor.','line_number':342,'multiline':False]
['text':'/ Obtain a reference to the target object.','line_number':347,'multiline':False]
['text':'/ Obtain a reference to the target object.','line_number':353,'multiline':False]
['text':'/ Obtain the associated cancellation slot.','line_number':359,'multiline':False]
['text':'/ Forwarding function call operator.','line_number':372,'multiline':False]
['text':'/ Forwarding function call operator.','line_number':380,'multiline':False]
['text':'','line_number':415,'multiline':True]
['text':' defined(BOOST_ASIO_HAS_STD_TYPE_TRAITS) && !defined(_MSC_VER)','line_number':419,'multiline':False]
['text':'','line_number':448,'multiline':True]
['text':' defined(BOOST_ASIO_HAS_STD_TYPE_TRAITS) && !defined(_MSC_VER)','line_number':452,'multiline':False]
['text':'/ Associate an object of type @c T with a cancellation slot of type','line_number':459,'multiline':False]
['text':'/ @c CancellationSlot.','line_number':460,'multiline':False]
['text':' namespace detail','line_number':508,'multiline':False]
['text':' defined(BOOST_ASIO_HAS_VARIADIC_TEMPLATES)','line_number':564,'multiline':False]
['text':'','line_number':610,'multiline':True]
['text':' defined(BOOST_ASIO_HAS_VARIADIC_TEMPLATES)','line_number':614,'multiline':False]
['text':' defined(BOOST_ASIO_HAS_VARIADIC_TEMPLATES)','line_number':640,'multiline':False]
['text':'','line_number':677,'multiline':True]
['text':' defined(BOOST_ASIO_HAS_VARIADIC_TEMPLATES)','line_number':681,'multiline':False]
['text':' !defined(GENERATING_DOCUMENTATION)','line_number':719,'multiline':False]
['text':' namespace asio','line_number':721,'multiline':False]
['text':' namespace boost','line_number':722,'multiline':False]
['text':' BOOST_ASIO_BIND_CANCELLATION_SLOT_HPP','line_number':726,'multiline':False]
