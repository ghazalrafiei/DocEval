['text':'','line_number':1,'multiline':False]
['text':' detail/impl/kqueue_reactor.ipp','line_number':2,'multiline':False]
['text':' ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~','line_number':3,'multiline':False]
['text':'','line_number':4,'multiline':False]
['text':' Copyright (c) 2003-2022 Christopher M. Kohlhoff (chris at kohlhoff dot com)','line_number':5,'multiline':False]
['text':' Copyright (c) 2005 Stefan Arentz (stefan at soze dot com)','line_number':6,'multiline':False]
['text':'','line_number':7,'multiline':False]
['text':' Distributed under the Boost Software License, Version 1.0. (See accompanying','line_number':8,'multiline':False]
['text':' file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)','line_number':9,'multiline':False]
['text':'','line_number':10,'multiline':False]
['text':' defined(_MSC_VER) && (_MSC_VER >= 1200)','line_number':17,'multiline':False]
['text':' The kqueue descriptor is automatically closed in the child.','line_number':99,'multiline':False]
['text':' Re-register all descriptors with kqueue.','line_number':115,'multiline':False]
['text':' The descriptor will be automatically removed from the kqueue when it','line_number':331,'multiline':False]
['text':' is closed.','line_number':332,'multiline':False]
['text':' Leave descriptor_data set so that it will be freed by the subsequent','line_number':366,'multiline':False]
['text':' call to cleanup_descriptor_data.','line_number':367,'multiline':False]
['text':' We are shutting down, so prevent cleanup_descriptor_data from freeing','line_number':371,'multiline':False]
['text':' the descriptor_data object and let the destructor free it instead.','line_number':372,'multiline':False]
['text':' Leave descriptor_data set so that it will be freed by the subsequent','line_number':407,'multiline':False]
['text':' call to cleanup_descriptor_data.','line_number':408,'multiline':False]
['text':' We are shutting down, so prevent cleanup_descriptor_data from freeing','line_number':412,'multiline':False]
['text':' the descriptor_data object and let the destructor free it instead.','line_number':413,'multiline':False]
['text':' Determine how long to block while waiting for events.','line_number':432,'multiline':False]
['text':' Block on the kqueue descriptor.','line_number':438,'multiline':False]
['text':' Trace the waiting events.','line_number':443,'multiline':False]
['text':' defined(BOOST_ASIO_ENABLE_HANDLER_TRACKING)','line_number':465,'multiline':False]
['text':' Dispatch the waiting events.','line_number':467,'multiline':False]
['text':' Some descriptor types, like serial ports, don't seem to support','line_number':484,'multiline':False]
['text':' EV_CLEAR with EVFILT_WRITE. Since we have no pending write','line_number':485,'multiline':False]
['text':' operations we'll remove the EVFILT_WRITE registration here so that','line_number':486,'multiline':False]
['text':' we don't end up in a tight spin.','line_number':487,'multiline':False]
['text':' Exception operations must be processed first to ensure that any','line_number':495,'multiline':False]
['text':' out-of-band data is read before normal data.','line_number':496,'multiline':False]
['text':' By default we will wait no longer than 5 minutes. This will ensure that','line_number':581,'multiline':False]
['text':' any changes to the system clock are detected after no longer than this.','line_number':582,'multiline':False]
['text':' namespace detail','line_number':591,'multiline':False]
['text':' namespace asio','line_number':592,'multiline':False]
['text':' namespace boost','line_number':593,'multiline':False]
['text':' defined(BOOST_ASIO_HAS_KQUEUE)','line_number':599,'multiline':False]
['text':' BOOST_ASIO_DETAIL_IMPL_KQUEUE_REACTOR_IPP','line_number':601,'multiline':False]
