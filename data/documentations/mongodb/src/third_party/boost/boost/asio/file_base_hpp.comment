['text':'','line_number':1,'multiline':False]
['text':' file_base.hpp','line_number':2,'multiline':False]
['text':' ~~~~~~~~~~~~~','line_number':3,'multiline':False]
['text':'','line_number':4,'multiline':False]
['text':' Copyright (c) 2003-2022 Christopher M. Kohlhoff (chris at kohlhoff dot com)','line_number':5,'multiline':False]
['text':'','line_number':6,'multiline':False]
['text':' Distributed under the Boost Software License, Version 1.0. (See accompanying','line_number':7,'multiline':False]
['text':' file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)','line_number':8,'multiline':False]
['text':'','line_number':9,'multiline':False]
['text':' defined(_MSC_VER) && (_MSC_VER >= 1200)','line_number':16,'multiline':False]
['text':' !defined(BOOST_ASIO_WINDOWS)','line_number':25,'multiline':False]
['text':'/ The file_base class is used as a base for the basic_stream_file and','line_number':32,'multiline':False]
['text':'/ basic_random_access_file class templates so that we have a common place to','line_number':33,'multiline':False]
['text':'/ define flags.','line_number':34,'multiline':False]
['text':'/ A bitmask type (C++ Std [lib.bitmask.types]).','line_number':39,'multiline':False]
['text':'/ Open the file for reading.','line_number':42,'multiline':False]
['text':'/ Open the file for writing.','line_number':45,'multiline':False]
['text':'/ Open the file for reading and writing.','line_number':48,'multiline':False]
['text':'/ Open the file in append mode.','line_number':51,'multiline':False]
['text':'/ Create the file if it does not exist.','line_number':54,'multiline':False]
['text':'/ Ensure a new file is created. Must be combined with @c create.','line_number':57,'multiline':False]
['text':'/ Open the file with any existing contents truncated.','line_number':60,'multiline':False]
['text':'/ Open the file so that write operations automatically synchronise the file','line_number':63,'multiline':False]
['text':'/ data and metadata to disk.','line_number':64,'multiline':False]
['text':' defined(BOOST_ASIO_WINDOWS)','line_number':78,'multiline':False]
['text':' defined(BOOST_ASIO_WINDOWS)','line_number':87,'multiline':False]
['text':' Implement bitmask operations as shown in C++ Std [lib.bitmask.types].','line_number':90,'multiline':False]
['text':'/ Basis for seeking in a file.','line_number':134,'multiline':False]
['text':'/ Seek to an absolute position.','line_number':138,'multiline':False]
['text':'/ Seek to an offset relative to the current file position.','line_number':141,'multiline':False]
['text':'/ Seek to an offset relative to the end of the file.','line_number':144,'multiline':False]
['text':'/ Protected destructor to prevent deletion through this type.','line_number':154,'multiline':False]
['text':' namespace asio','line_number':160,'multiline':False]
['text':' namespace boost','line_number':161,'multiline':False]
['text':' defined(BOOST_ASIO_HAS_FILE)','line_number':165,'multiline':False]
['text':'   || defined(GENERATING_DOCUMENTATION)','line_number':166,'multiline':False]
['text':' BOOST_ASIO_FILE_BASE_HPP','line_number':168,'multiline':False]
