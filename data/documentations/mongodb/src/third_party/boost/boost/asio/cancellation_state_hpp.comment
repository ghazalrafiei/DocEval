['text':'','line_number':1,'multiline':False]
['text':' cancellation_state.hpp','line_number':2,'multiline':False]
['text':' ~~~~~~~~~~~~~~~~~~~~~~','line_number':3,'multiline':False]
['text':'','line_number':4,'multiline':False]
['text':' Copyright (c) 2003-2022 Christopher M. Kohlhoff (chris at kohlhoff dot com)','line_number':5,'multiline':False]
['text':'','line_number':6,'multiline':False]
['text':' Distributed under the Boost Software License, Version 1.0. (See accompanying','line_number':7,'multiline':False]
['text':' file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)','line_number':8,'multiline':False]
['text':'','line_number':9,'multiline':False]
['text':' defined(_MSC_VER) && (_MSC_VER >= 1200)','line_number':16,'multiline':False]
['text':'/ A simple cancellation signal propagation filter.','line_number':30,'multiline':False]
['text':'/ Returns <tt>type & Mask</tt>.','line_number':34,'multiline':False]
['text':'/ A cancellation filter that disables cancellation.','line_number':42,'multiline':False]
['text':'/ A cancellation filter that enables terminal cancellation only.','line_number':46,'multiline':False]
['text':'/ A cancellation filter that enables terminal and partial cancellation.','line_number':52,'multiline':False]
['text':'/ A cancellation filter that enables terminal, partial and total cancellation.','line_number':57,'multiline':False]
['text':' defined(GENERATING_DOCUMENTATION)','line_number':62,'multiline':False]
['text':' defined(GENERATING_DOCUMENTATION)','line_number':77,'multiline':False]
['text':'/ A cancellation state is used for chaining signals and slots in compositions.','line_number':79,'multiline':False]
['text':'/ Construct a disconnected cancellation state.','line_number':83,'multiline':False]
['text':'/ Construct and attach to a parent slot to create a new child slot.','line_number':89,'multiline':False]
['text':'*
   * Initialises the cancellation state so that it allows terminal cancellation
   * only. Equivalent to <tt>cancellation_state(slot,
   * enable_terminal_cancellation())</tt>.
   *
   * @param slot The parent cancellation slot to which the state will be
   * attached.
   ','line_number':90,'multiline':True]
['text':'/ Construct and attach to a parent slot to create a new child slot.','line_number':104,'multiline':False]
['text':'*
   * @param slot The parent cancellation slot to which the state will be
   * attached.
   *
   * @param filter A function object that is used to transform incoming
   * cancellation signals as they are received from the parent slot. This
   * function object must have the signature:
   * @code boost::asio::cancellation_type_t filter(
   *     boost::asio::cancellation_type_t); @endcode
   *
   * The library provides the following pre-defined cancellation filters:
   *
   * @li boost::asio::disable_cancellation
   * @li boost::asio::enable_terminal_cancellation
   * @li boost::asio::enable_partial_cancellation
   * @li boost::asio::enable_total_cancellation
   ','line_number':105,'multiline':True]
['text':'/ Construct and attach to a parent slot to create a new child slot.','line_number':130,'multiline':False]
['text':'*
   * @param slot The parent cancellation slot to which the state will be
   * attached.
   *
   * @param in_filter A function object that is used to transform incoming
   * cancellation signals as they are received from the parent slot. This
   * function object must have the signature:
   * @code boost::asio::cancellation_type_t in_filter(
   *     boost::asio::cancellation_type_t); @endcode
   *
   * @param out_filter A function object that is used to transform outcoming
   * cancellation signals as they are relayed to the child slot. This function
   * object must have the signature:
   * @code boost::asio::cancellation_type_t out_filter(
   *     boost::asio::cancellation_type_t); @endcode
   *
   * The library provides the following pre-defined cancellation filters:
   *
   * @li boost::asio::disable_cancellation
   * @li boost::asio::enable_terminal_cancellation
   * @li boost::asio::enable_partial_cancellation
   * @li boost::asio::enable_total_cancellation
   ','line_number':131,'multiline':True]
['text':'/ Returns the single child slot associated with the state.','line_number':165,'multiline':False]
['text':'*
   * This sub-slot is used with the operations that are being composed.
   ','line_number':166,'multiline':True]
['text':'/ Returns the cancellation types that have been triggered.','line_number':174,'multiline':False]
['text':'/ Clears the specified cancellation types, if they have been triggered.','line_number':180,'multiline':False]
['text':' namespace asio','line_number':232,'multiline':False]
['text':' namespace boost','line_number':233,'multiline':False]
['text':' BOOST_ASIO_CANCELLATION_STATE_HPP','line_number':237,'multiline':False]
