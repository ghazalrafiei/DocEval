['text':'','line_number':1,'multiline':False]
['text':' async_result.hpp','line_number':2,'multiline':False]
['text':' ~~~~~~~~~~~~~~~~','line_number':3,'multiline':False]
['text':'','line_number':4,'multiline':False]
['text':' Copyright (c) 2003-2022 Christopher M. Kohlhoff (chris at kohlhoff dot com)','line_number':5,'multiline':False]
['text':'','line_number':6,'multiline':False]
['text':' Distributed under the Boost Software License, Version 1.0. (See accompanying','line_number':7,'multiline':False]
['text':' file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)','line_number':8,'multiline':False]
['text':'','line_number':9,'multiline':False]
['text':' defined(_MSC_VER) && (_MSC_VER >= 1200)','line_number':16,'multiline':False]
['text':' defined(BOOST_ASIO_HAS_NOEXCEPT_FUNCTION_TYPE)','line_number':72,'multiline':False]
['text':' defined(BOOST_ASIO_HAS_REF_QUALIFIED_FUNCTIONS)','line_number':73,'multiline':False]
['text':' defined(BOOST_ASIO_HAS_NOEXCEPT_FUNCTION_TYPE)','line_number':145,'multiline':False]
['text':' defined(BOOST_ASIO_HAS_REF_QUALIFIED_FUNCTIONS)','line_number':146,'multiline':False]
['text':' namespace detail','line_number':156,'multiline':False]
['text':' defined(BOOST_ASIO_HAS_CONCEPTS)','line_number':177,'multiline':False]
['text':'   && defined(BOOST_ASIO_HAS_VARIADIC_TEMPLATES)','line_number':178,'multiline':False]
['text':'   && defined(BOOST_ASIO_HAS_DECLTYPE)','line_number':179,'multiline':False]
['text':' defined(BOOST_ASIO_HAS_CONCEPTS)','line_number':186,'multiline':False]
['text':'   && defined(BOOST_ASIO_HAS_VARIADIC_TEMPLATES)','line_number':187,'multiline':False]
['text':'   && defined(BOOST_ASIO_HAS_DECLTYPE)','line_number':188,'multiline':False]
['text':' defined(BOOST_ASIO_HAS_NOEXCEPT_FUNCTION_TYPE)','line_number':266,'multiline':False]
['text':' defined(BOOST_ASIO_HAS_REF_QUALIFIED_FUNCTIONS)','line_number':267,'multiline':False]
['text':' defined(BOOST_ASIO_HAS_VARIADIC_TEMPLATES)','line_number':269,'multiline':False]
['text':'','line_number':282,'multiline':True]
['text':'','line_number':333,'multiline':True]
['text':'','line_number':365,'multiline':True]
['text':'','line_number':410,'multiline':True]
['text':' defined(BOOST_ASIO_HAS_NOEXCEPT_FUNCTION_TYPE)','line_number':414,'multiline':False]
['text':' defined(BOOST_ASIO_HAS_REF_QUALIFIED_FUNCTIONS)','line_number':415,'multiline':False]
['text':' defined(BOOST_ASIO_HAS_VARIADIC_TEMPLATES)','line_number':417,'multiline':False]
['text':' defined(BOOST_ASIO_HAS_VARIADIC_TEMPLATES)','line_number':434,'multiline':False]
['text':'   || defined(GENERATING_DOCUMENTATION)','line_number':435,'multiline':False]
['text':' defined(BOOST_ASIO_HAS_VARIADIC_TEMPLATES)','line_number':454,'multiline':False]
['text':'   || defined(GENERATING_DOCUMENTATION)','line_number':455,'multiline':False]
['text':' defined(BOOST_ASIO_HAS_VARIADIC_TEMPLATES)','line_number':487,'multiline':False]
['text':'','line_number':511,'multiline':True]
['text':' defined(BOOST_ASIO_HAS_VARIADIC_TEMPLATES)','line_number':515,'multiline':False]
['text':' namespace detail','line_number':524,'multiline':False]
['text':'/ An interface for customising the behaviour of an initiating function.','line_number':528,'multiline':False]
['text':'*
 * The async_result traits class is used for determining:
 *
 * @li the concrete completion handler type to be called at the end of the
 * asynchronous operation;
 *
 * @li the initiating function return type; and
 *
 * @li how the return value of the initiating function is obtained.
 *
 * The trait allows the handler and return types to be determined at the point
 * where the specific completion handler signature is known.
 *
 * This template may be specialised for user-defined completion token types.
 * The primary template assumes that the CompletionToken is the completion
 * handler.
 ','line_number':529,'multiline':True]
['text':'/ The concrete completion handler type for the specific signature.','line_number':550,'multiline':False]
['text':'/ The return type of the initiating function.','line_number':553,'multiline':False]
['text':'/ Construct an async result from a given handler.','line_number':556,'multiline':False]
['text':'*
   * When using a specalised async_result, the constructor has an opportunity
   * to initialise some state associated with the completion handler, which is
   * then returned from the initiating function.
   ','line_number':557,'multiline':True]
['text':'/ Obtain the value to be returned from the initiating function.','line_number':564,'multiline':False]
['text':'/ Initiate the asynchronous operation that will produce the result, and','line_number':567,'multiline':False]
['text':'/ obtain the value to be returned from the initiating function.','line_number':568,'multiline':False]
['text':' defined(GENERATING_DOCUMENTATION)','line_number':580,'multiline':False]
['text':' defined(BOOST_ASIO_HAS_REF_QUALIFIED_FUNCTIONS)','line_number':612,'multiline':False]
['text':' defined(BOOST_ASIO_HAS_REF_QUALIFIED_FUNCTIONS)','line_number':631,'multiline':False]
['text':' Empty.','line_number':636,'multiline':False]
['text':' defined(GENERATING_DOCUMENTATION)','line_number':639,'multiline':False]
['text':'/ Helper template to deduce the handler type from a CompletionToken, capture','line_number':641,'multiline':False]
['text':'/ a local copy of the handler, and then create an async_result for the','line_number':642,'multiline':False]
['text':'/ handler.','line_number':643,'multiline':False]
['text':'/ The real handler type to be used for the asynchronous operation.','line_number':647,'multiline':False]
['text':'/ Constructor.','line_number':654,'multiline':False]
['text':'*
   * The constructor creates the concrete completion handler and makes the link
   * between the handler and the asynchronous result.
   ','line_number':655,'multiline':True]
['text':' defined(BOOST_ASIO_HAS_MOVE) || defined(GENERATING_DOCUMENTATION)','line_number':666,'multiline':False]
['text':' defined(BOOST_ASIO_HAS_MOVE) || defined(GENERATING_DOCUMENTATION)','line_number':678,'multiline':False]
['text':'/ A copy of, or reference to, a real handler object.','line_number':680,'multiline':False]
['text':' defined(BOOST_ASIO_HAS_MOVE) || defined(GENERATING_DOCUMENTATION)','line_number':685,'multiline':False]
['text':' defined(BOOST_ASIO_HAS_MOVE) || defined(GENERATING_DOCUMENTATION)','line_number':687,'multiline':False]
['text':'/ The result of the asynchronous operation's initiating function.','line_number':689,'multiline':False]
['text':' namespace detail','line_number':737,'multiline':False]
['text':' defined(BOOST_ASIO_HAS_VARIADIC_TEMPLATES)','line_number':888,'multiline':False]
['text':'','line_number':1151,'multiline':True]
['text':' defined(BOOST_ASIO_HAS_VARIADIC_TEMPLATES)','line_number':1155,'multiline':False]
['text':' namespace detail','line_number':1172,'multiline':False]
['text':' defined(BOOST_ASIO_HAS_CONCEPTS)','line_number':1191,'multiline':False]
['text':'   && defined(BOOST_ASIO_HAS_VARIADIC_TEMPLATES)','line_number':1192,'multiline':False]
['text':'   && defined(BOOST_ASIO_HAS_DECLTYPE)','line_number':1193,'multiline':False]
['text':' defined(BOOST_ASIO_HAS_CONCEPTS)','line_number':1199,'multiline':False]
['text':'   && defined(BOOST_ASIO_HAS_VARIADIC_TEMPLATES)','line_number':1200,'multiline':False]
['text':'   && defined(BOOST_ASIO_HAS_DECLTYPE)','line_number':1201,'multiline':False]
['text':' namespace detail','line_number':1218,'multiline':False]
['text':'/ Traits type used to determine the default completion token type associated','line_number':1222,'multiline':False]
['text':'/ with a type (such as an executor).','line_number':1223,'multiline':False]
['text':'*
 * A program may specialise this traits type if the @c T template parameter in
 * the specialisation is a user-defined type.
 *
 * Specialisations of this trait may provide a nested typedef @c type, which is
 * a default-constructible completion token type.
 ','line_number':1224,'multiline':True]
['text':'/ If @c T has a nested type @c default_completion_token_type,','line_number':1234,'multiline':False]
['text':'/ <tt>T::default_completion_token_type</tt>. Otherwise the typedef @c type','line_number':1235,'multiline':False]
['text':'/ is not defined.','line_number':1236,'multiline':False]
['text':' defined(BOOST_ASIO_HAS_ALIAS_TEMPLATES)','line_number':1252,'multiline':False]
['text':' defined(BOOST_ASIO_HAS_DEFAULT_FUNCTION_TEMPLATE_ARGUMENTS)','line_number':1261,'multiline':False]
['text':' defined(BOOST_ASIO_HAS_DEFAULT_FUNCTION_TEMPLATE_ARGUMENTS)','line_number':1266,'multiline':False]
['text':' namespace asio','line_number':1268,'multiline':False]
['text':' namespace boost','line_number':1269,'multiline':False]
['text':' BOOST_ASIO_ASYNC_RESULT_HPP','line_number':1273,'multiline':False]
