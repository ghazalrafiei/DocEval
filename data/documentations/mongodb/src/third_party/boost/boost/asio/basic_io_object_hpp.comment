['text':'','line_number':1,'multiline':False]
['text':' basic_io_object.hpp','line_number':2,'multiline':False]
['text':' ~~~~~~~~~~~~~~~~~~~','line_number':3,'multiline':False]
['text':'','line_number':4,'multiline':False]
['text':' Copyright (c) 2003-2022 Christopher M. Kohlhoff (chris at kohlhoff dot com)','line_number':5,'multiline':False]
['text':'','line_number':6,'multiline':False]
['text':' Distributed under the Boost Software License, Version 1.0. (See accompanying','line_number':7,'multiline':False]
['text':' file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)','line_number':8,'multiline':False]
['text':'','line_number':9,'multiline':False]
['text':' defined(_MSC_VER) && (_MSC_VER >= 1200)','line_number':16,'multiline':False]
['text':' Type trait used to determine whether a service supports move.','line_number':29,'multiline':False]
['text':' defined(BOOST_ASIO_HAS_MOVE)','line_number':49,'multiline':False]
['text':'/ Base class for all I/O objects.','line_number':51,'multiline':False]
['text':'*
 * @note All I/O objects are non-copyable. However, when using C++0x, certain
 * I/O objects do support move construction and move assignment.
 ','line_number':52,'multiline':True]
['text':'/ The type of the service that will be used to provide I/O operations.','line_number':65,'multiline':False]
['text':'/ The underlying implementation type of I/O object.','line_number':68,'multiline':False]
['text':'/ (Deprecated: Use get_executor().) Get the io_context associated with the','line_number':72,'multiline':False]
['text':'/ object.','line_number':73,'multiline':False]
['text':'*
   * This function may be used to obtain the io_context object that the I/O
   * object uses to dispatch handlers for asynchronous operations.
   *
   * @return A reference to the io_context object that the I/O object will use
   * to dispatch handlers. Ownership is not transferred to the caller.
   ','line_number':74,'multiline':True]
['text':'/ (Deprecated: Use get_executor().) Get the io_context associated with the','line_number':86,'multiline':False]
['text':'/ object.','line_number':87,'multiline':False]
['text':'*
   * This function may be used to obtain the io_context object that the I/O
   * object uses to dispatch handlers for asynchronous operations.
   *
   * @return A reference to the io_context object that the I/O object will use
   * to dispatch handlers. Ownership is not transferred to the caller.
   ','line_number':88,'multiline':True]
['text':' !defined(BOOST_ASIO_NO_DEPRECATED)','line_number':99,'multiline':False]
['text':'/ The type of the executor associated with the object.','line_number':101,'multiline':False]
['text':'/ Get the executor associated with the object.','line_number':104,'multiline':False]
['text':'/ Construct a basic_io_object.','line_number':111,'multiline':False]
['text':'*
   * Performs:
   * @code get_service().construct(get_implementation()); @endcode
   ','line_number':112,'multiline':True]
['text':'/ Move-construct a basic_io_object.','line_number':123,'multiline':False]
['text':'*
   * Performs:
   * @code get_service().move_construct(
   *     get_implementation(), other.get_implementation()); @endcode
   *
   * @note Available only for services that support movability,
   ','line_number':124,'multiline':True]
['text':'/ Move-assign a basic_io_object.','line_number':133,'multiline':False]
['text':'*
   * Performs:
   * @code get_service().move_assign(get_implementation(),
   *     other.get_service(), other.get_implementation()); @endcode
   *
   * @note Available only for services that support movability,
   ','line_number':134,'multiline':True]
['text':'/ Perform a converting move-construction of a basic_io_object.','line_number':143,'multiline':False]
['text':' defined(GENERATING_DOCUMENTATION)','line_number':147,'multiline':False]
['text':'/ Protected destructor to prevent deletion through this type.','line_number':149,'multiline':False]
['text':'*
   * Performs:
   * @code get_service().destroy(get_implementation()); @endcode
   ','line_number':150,'multiline':True]
['text':'/ Get the service associated with the I/O object.','line_number':159,'multiline':False]
['text':'/ Get the service associated with the I/O object.','line_number':165,'multiline':False]
['text':'/ Get the underlying implementation of the I/O object.','line_number':171,'multiline':False]
['text':'/ Get the underlying implementation of the I/O object.','line_number':177,'multiline':False]
['text':' The service associated with the I/O object.','line_number':187,'multiline':False]
['text':'/ The underlying implementation of the I/O object.','line_number':190,'multiline':False]
['text':' Specialisation for movable objects.','line_number':195,'multiline':False]
['text':' !defined(BOOST_ASIO_NO_DEPRECATED)','line_number':213,'multiline':False]
['text':' defined(BOOST_ASIO_HAS_MOVE)','line_number':285,'multiline':False]
['text':' namespace asio','line_number':287,'multiline':False]
['text':' namespace boost','line_number':288,'multiline':False]
['text':' BOOST_ASIO_BASIC_IO_OBJECT_HPP','line_number':292,'multiline':False]
