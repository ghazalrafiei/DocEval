['text':'','line_number':1,'multiline':False]
['text':' use_future.hpp','line_number':2,'multiline':False]
['text':' ~~~~~~~~~~~~~~','line_number':3,'multiline':False]
['text':'','line_number':4,'multiline':False]
['text':' Copyright (c) 2003-2022 Christopher M. Kohlhoff (chris at kohlhoff dot com)','line_number':5,'multiline':False]
['text':'','line_number':6,'multiline':False]
['text':' Distributed under the Boost Software License, Version 1.0. (See accompanying','line_number':7,'multiline':False]
['text':' file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)','line_number':8,'multiline':False]
['text':'','line_number':9,'multiline':False]
['text':' defined(_MSC_VER) && (_MSC_VER >= 1200)','line_number':16,'multiline':False]
['text':' namespace detail','line_number':39,'multiline':False]
['text':'/ A @ref completion_token type that causes an asynchronous operation to return','line_number':41,'multiline':False]
['text':'/ a future.','line_number':42,'multiline':False]
['text':'*
 * The use_future_t class is a completion token type that is used to indicate
 * that an asynchronous operation should return a std::future object. A
 * use_future_t object may be passed as a completion token to an asynchronous
 * operation, typically using the special value @c boost::asio::use_future. For
 * example:
 *
 * @code std::future<std::size_t> my_future
 *   = my_socket.async_read_some(my_buffer, boost::asio::use_future); @endcode
 *
 * The initiating function (async_read_some in the above example) returns a
 * future that will receive the result of the operation. If the operation
 * completes with an error_code indicating failure, it is converted into a
 * system_error and passed back to the caller via the future.
 ','line_number':43,'multiline':True]
['text':'/ The allocator type. The allocator is used when constructing the','line_number':62,'multiline':False]
['text':'/ @c std::promise object for a given asynchronous operation.','line_number':63,'multiline':False]
['text':'/ Construct using default-constructed allocator.','line_number':66,'multiline':False]
['text':'/ Construct using specified allocator.','line_number':71,'multiline':False]
['text':'/ (Deprecated: Use rebind().) Specify an alternate allocator.','line_number':78,'multiline':False]
['text':' !defined(BOOST_ASIO_NO_DEPRECATED)','line_number':84,'multiline':False]
['text':'/ Specify an alternate allocator.','line_number':86,'multiline':False]
['text':'/ Obtain allocator.','line_number':93,'multiline':False]
['text':'/ Wrap a function object in a packaged task.','line_number':99,'multiline':False]
['text':'*
   * The @c package function is used to adapt a function object as a packaged
   * task. When this adapter is passed as a completion token to an asynchronous
   * operation, the result of the function object is retuned via a std::future.
   *
   * @par Example
   *
   * @code std::future<std::size_t> fut =
   *   my_socket.async_read_some(buffer,
   *     use_future([](boost::system::error_code ec, std::size_t n)
   *       {
   *         return ec ? 0 : n;
   *       }));
   * ...
   * std::size_t n = fut.get(); @endcode
   ','line_number':100,'multiline':True]
['text':' defined(GENERATING_DOCUMENTATION)','line_number':119,'multiline':False]
['text':' defined(GENERATING_DOCUMENTATION)','line_number':121,'multiline':False]
['text':' Helper type to ensure that use_future can be constexpr default-constructed','line_number':125,'multiline':False]
['text':' even when std::allocator<void> can't be.','line_number':126,'multiline':False]
['text':'/ A @ref completion_token object that causes an asynchronous operation to','line_number':144,'multiline':False]
['text':'/ return a future.','line_number':145,'multiline':False]
['text':'*
 * See the documentation for boost::asio::use_future_t for a usage example.
 ','line_number':146,'multiline':True]
['text':' namespace asio','line_number':155,'multiline':False]
['text':' namespace boost','line_number':156,'multiline':False]
['text':' defined(BOOST_ASIO_HAS_STD_FUTURE_CLASS)','line_number':162,'multiline':False]
['text':'   || defined(GENERATING_DOCUMENTATION)','line_number':163,'multiline':False]
['text':' BOOST_ASIO_USE_FUTURE_HPP','line_number':165,'multiline':False]
