['text':'','line_number':1,'multiline':False]
['text':' detail/config.hpp','line_number':2,'multiline':False]
['text':' ~~~~~~~~~~~~~~~~~','line_number':3,'multiline':False]
['text':'','line_number':4,'multiline':False]
['text':' Copyright (c) 2003-2022 Christopher M. Kohlhoff (chris at kohlhoff dot com)','line_number':5,'multiline':False]
['text':'','line_number':6,'multiline':False]
['text':' Distributed under the Boost Software License, Version 1.0. (See accompanying','line_number':7,'multiline':False]
['text':' file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)','line_number':8,'multiline':False]
['text':'','line_number':9,'multiline':False]
['text':' defined(BOOST_ASIO_STANDALONE)','line_number':26,'multiline':False]
['text':' Boost.Config library is available.','line_number':27,'multiline':False]
['text':' defined(BOOST_ASIO_STANDALONE)','line_number':31,'multiline':False]
['text':' Default to a header-only implementation. The user must specifically request','line_number':33,'multiline':False]
['text':' separate compilation by defining either BOOST_ASIO_SEPARATE_COMPILATION or','line_number':34,'multiline':False]
['text':' BOOST_ASIO_DYN_LINK (as a DLL/shared library implies separate compilation).','line_number':35,'multiline':False]
['text':' !defined(BOOST_ASIO_DYN_LINK)','line_number':40,'multiline':False]
['text':' !defined(BOOST_ASIO_SEPARATE_COMPILATION)','line_number':41,'multiline':False]
['text':' !defined(BOOST_ASIO_HEADER_ONLY)','line_number':42,'multiline':False]
['text':' defined(BOOST_ASIO_HEADER_ONLY)','line_number':46,'multiline':False]
['text':' We need to import/export our code only if the user has specifically asked','line_number':48,'multiline':False]
['text':' for it by defining BOOST_ASIO_DYN_LINK.','line_number':49,'multiline':False]
['text':' Export if this is our own source, otherwise import.','line_number':51,'multiline':False]
['text':' defined(BOOST_ASIO_SOURCE)','line_number':54,'multiline':False]
['text':' defined(BOOST_ASIO_SOURCE)','line_number':56,'multiline':False]
['text':' defined(BOOST_ASIO_DYN_LINK)','line_number':57,'multiline':False]
['text':' defined(_MSC_VER) || defined(__BORLANDC__) || defined(__CODEGEARC__)','line_number':58,'multiline':False]
['text':' defined(BOOST_ASIO_HEADER_ONLY)','line_number':59,'multiline':False]
['text':' If BOOST_ASIO_DECL isn't defined yet define it now.','line_number':61,'multiline':False]
['text':' !defined(BOOST_ASIO_DECL)','line_number':64,'multiline':False]
['text':' Helper macro for documentation.','line_number':66,'multiline':False]
['text':' Microsoft Visual C++ detection.','line_number':69,'multiline':False]
['text':' defined(BOOST_ASIO_HAS_BOOST_CONFIG) && defined(BOOST_MSVC)','line_number':76,'multiline':False]
['text':' !defined(BOOST_ASIO_MSVC)','line_number':77,'multiline':False]
['text':' Clang / libc++ detection.','line_number':79,'multiline':False]
['text':' defined(_LIBCPP_VERSION)','line_number':86,'multiline':False]
['text':' __has_include(<__config>)','line_number':87,'multiline':False]
['text':' (__cplusplus >= 201103)','line_number':88,'multiline':False]
['text':' defined(__clang__)','line_number':89,'multiline':False]
['text':' Android platform detection.','line_number':91,'multiline':False]
['text':' defined(__ANDROID__)','line_number':94,'multiline':False]
['text':' Support move construction and assignment on compilers known to allow it.','line_number':96,'multiline':False]
['text':' __has_feature(__cxx_rvalue_references__)','line_number':102,'multiline':False]
['text':' (__cplusplus >= 201103) || defined(__GXX_EXPERIMENTAL_CXX0X__)','line_number':107,'multiline':False]
['text':' ((__GNUC__ == 4) && (__GNUC_MINOR__ >= 8)) || (__GNUC__ > 4)','line_number':108,'multiline':False]
['text':' defined(__GNUC__)','line_number':109,'multiline':False]
['text':' (_MSC_VER >= 1700)','line_number':113,'multiline':False]
['text':' defined(BOOST_ASIO_MSVC)','line_number':114,'multiline':False]
['text':' defined(__INTEL_COMPILER) && (__INTEL_COMPILER >= 1500)','line_number':118,'multiline':False]
['text':' defined(__ICL) && (__ICL >= 1500)','line_number':121,'multiline':False]
['text':' defined(__INTEL_CXX11_MODE__)','line_number':122,'multiline':False]
['text':' !defined(BOOST_ASIO_DISABLE_MOVE)','line_number':123,'multiline':False]
['text':' !defined(BOOST_ASIO_HAS_MOVE)','line_number':124,'multiline':False]
['text':' If BOOST_ASIO_MOVE_CAST isn't defined, and move support is available, define','line_number':126,'multiline':False]
['text':' * BOOST_ASIO_MOVE_ARG,','line_number':127,'multiline':False]
['text':' * BOOST_ASIO_NONDEDUCED_MOVE_ARG, and','line_number':128,'multiline':False]
['text':' * BOOST_ASIO_MOVE_CAST','line_number':129,'multiline':False]
['text':' to take advantage of rvalue references and perfect forwarding.','line_number':130,'multiline':False]
['text':' defined(BOOST_ASIO_HAS_MOVE) && !defined(BOOST_ASIO_MOVE_CAST)','line_number':139,'multiline':False]
['text':' If BOOST_ASIO_MOVE_CAST still isn't defined, default to a C++03-compatible','line_number':141,'multiline':False]
['text':' implementation. Note that older g++ and MSVC versions don't like it when you','line_number':142,'multiline':False]
['text':' pass a non-member function through a const reference, so for most compilers','line_number':143,'multiline':False]
['text':' we'll play it safe and stick with the old approach of passing the handler by','line_number':144,'multiline':False]
['text':' value.','line_number':145,'multiline':False]
['text':' ((__GNUC__ == 4) && (__GNUC_MINOR__ >= 1)) || (__GNUC__ > 4)','line_number':150,'multiline':False]
['text':' ((__GNUC__ == 4) && (__GNUC_MINOR__ >= 1)) || (__GNUC__ > 4)','line_number':152,'multiline':False]
['text':' (_MSC_VER >= 1400)','line_number':156,'multiline':False]
['text':' (_MSC_VER >= 1400)','line_number':158,'multiline':False]
['text':' !defined(BOOST_ASIO_MOVE_CAST)','line_number':167,'multiline':False]
['text':' Support variadic templates on compilers known to allow it.','line_number':169,'multiline':False]
['text':' __has_feature(__cxx_variadic_templates__)','line_number':175,'multiline':False]
['text':' (__cplusplus >= 201103) || defined(__GXX_EXPERIMENTAL_CXX0X__)','line_number':180,'multiline':False]
['text':' ((__GNUC__ == 4) && (__GNUC_MINOR__ >= 8)) || (__GNUC__ > 4)','line_number':181,'multiline':False]
['text':' defined(__GNUC__)','line_number':182,'multiline':False]
['text':' (_MSC_VER >= 1900)','line_number':186,'multiline':False]
['text':' defined(BOOST_ASIO_MSVC)','line_number':187,'multiline':False]
['text':' !defined(BOOST_ASIO_DISABLE_VARIADIC_TEMPLATES)','line_number':188,'multiline':False]
['text':' !defined(BOOST_ASIO_HAS_VARIADIC_TEMPLATES)','line_number':189,'multiline':False]
['text':' defined(BOOST_ASIO_HAS_VARIADIC_TEMPLATES)','line_number':193,'multiline':False]
['text':' defined(BOOST_ASIO_HAS_VARIADIC_TEMPLATES)','line_number':195,'multiline':False]
['text':' !defined(BOOST_ASIO_ELLIPSIS)','line_number':196,'multiline':False]
['text':' Support deleted functions on compilers known to allow it.','line_number':198,'multiline':False]
['text':' __has_feature(__cxx_deleted_functions__)','line_number':203,'multiline':False]
['text':' (__cplusplus >= 201103) || defined(__GXX_EXPERIMENTAL_CXX0X__)','line_number':208,'multiline':False]
['text':' ((__GNUC__ == 4) && (__GNUC_MINOR__ >= 7)) || (__GNUC__ > 4)','line_number':209,'multiline':False]
['text':' defined(__GNUC__)','line_number':210,'multiline':False]
['text':' (_MSC_VER >= 1900)','line_number':214,'multiline':False]
['text':' defined(BOOST_ASIO_MSVC)','line_number':215,'multiline':False]
['text':' !defined(BOOST_ASIO_DELETED)','line_number':218,'multiline':False]
['text':' !defined(BOOST_ASIO_DELETED)','line_number':219,'multiline':False]
['text':' Support constexpr on compilers known to allow it.','line_number':221,'multiline':False]
['text':' __has_feature(__cxx_constexpr__)','line_number':227,'multiline':False]
['text':' (__cplusplus >= 201103) || defined(__GXX_EXPERIMENTAL_CXX0X__)','line_number':232,'multiline':False]
['text':' ((__GNUC__ == 4) && (__GNUC_MINOR__ >= 8)) || (__GNUC__ > 4)','line_number':233,'multiline':False]
['text':' defined(__GNUC__)','line_number':234,'multiline':False]
['text':' (_MSC_VER >= 1900)','line_number':238,'multiline':False]
['text':' defined(BOOST_ASIO_MSVC)','line_number':239,'multiline':False]
['text':' !defined(BOOST_ASIO_DISABLE_CONSTEXPR)','line_number':240,'multiline':False]
['text':' !defined(BOOST_ASIO_HAS_CONSTEXPR)','line_number':241,'multiline':False]
['text':' defined(BOOST_ASIO_HAS_CONSTEXPR)','line_number':245,'multiline':False]
['text':' defined(BOOST_ASIO_HAS_CONSTEXPR)','line_number':247,'multiline':False]
['text':' !defined(BOOST_ASIO_CONSTEXPR)','line_number':248,'multiline':False]
['text':' defined(BOOST_ASIO_HAS_CONSTEXPR)','line_number':253,'multiline':False]
['text':' defined(BOOST_ASIO_HAS_CONSTEXPR)','line_number':256,'multiline':False]
['text':' !defined(BOOST_ASIO_STATIC_CONSTEXPR)','line_number':257,'multiline':False]
['text':' (__GNUC__ >= 8)','line_number':264,'multiline':False]
['text':' (__GNUC__ >= 8)','line_number':267,'multiline':False]
['text':' defined(BOOST_ASIO_MSVC)','line_number':271,'multiline':False]
['text':' defined(BOOST_ASIO_MSVC)','line_number':274,'multiline':False]
['text':' defined(BOOST_ASIO_HAS_CONSTEXPR)','line_number':275,'multiline':False]
['text':' defined(BOOST_ASIO_HAS_CONSTEXPR)','line_number':278,'multiline':False]
['text':' !defined(BOOST_ASIO_STATIC_CONSTEXPR_DEFAULT_INIT)','line_number':279,'multiline':False]
['text':' Support noexcept on compilers known to allow it.','line_number':281,'multiline':False]
['text':' !defined(BOOST_NO_NOEXCEPT)','line_number':287,'multiline':False]
['text':' __has_feature(__cxx_noexcept__)','line_number':294,'multiline':False]
['text':' (__cplusplus >= 201103) || defined(__GXX_EXPERIMENTAL_CXX0X__)','line_number':299,'multiline':False]
['text':' ((__GNUC__ == 4) && (__GNUC_MINOR__ >= 7)) || (__GNUC__ > 4)','line_number':300,'multiline':False]
['text':' (_MSC_VER >= 1900)','line_number':304,'multiline':False]
['text':' defined(BOOST_ASIO_MSVC)','line_number':305,'multiline':False]
['text':' !defined(BOOST_ASIO_DISABLE_NOEXCEPT)','line_number':306,'multiline':False]
['text':' !defined(BOOST_ASIO_NOEXCEPT)','line_number':308,'multiline':False]
['text':' !defined(BOOST_ASIO_NOEXCEPT_OR_NOTHROW)','line_number':310,'multiline':False]
['text':' !defined(BOOST_ASIO_HAS_NOEXCEPT)','line_number':311,'multiline':False]
['text':' defined(BOOST_ASIO_HAS_NOEXCEPT)','line_number':315,'multiline':False]
['text':' defined(BOOST_ASIO_HAS_NOEXCEPT)','line_number':317,'multiline':False]
['text':' !defined(BOOST_ASIO_NOEXCEPT)','line_number':318,'multiline':False]
['text':' defined(BOOST_ASIO_HAS_NOEXCEPT)','line_number':322,'multiline':False]
['text':' defined(BOOST_ASIO_HAS_NOEXCEPT)','line_number':324,'multiline':False]
['text':' !defined(BOOST_ASIO_NOEXCEPT_OR_NOTHROW)','line_number':325,'multiline':False]
['text':' defined(BOOST_ASIO_HAS_NOEXCEPT)','line_number':329,'multiline':False]
['text':' defined(BOOST_ASIO_HAS_NOEXCEPT)','line_number':331,'multiline':False]
['text':' !defined(BOOST_ASIO_NOEXCEPT_IF)','line_number':332,'multiline':False]
['text':' Support noexcept on function types on compilers known to allow it.','line_number':334,'multiline':False]
['text':' (__cplusplus >= 202002)','line_number':340,'multiline':False]
['text':' (__cplusplus >= 202002)','line_number':344,'multiline':False]
['text':' (_MSC_VER >= 1900 && _MSVC_LANG >= 202002)','line_number':348,'multiline':False]
['text':' defined(BOOST_ASIO_MSVC)','line_number':349,'multiline':False]
['text':' !defined(BOOST_ASIO_DISABLE_NOEXCEPT_FUNCTION_TYPE)','line_number':350,'multiline':False]
['text':' !defined(BOOST_ASIO_HAS_NOEXCEPT_FUNCTION_TYPE)','line_number':351,'multiline':False]
['text':' Support automatic type deduction on compilers known to support it.','line_number':353,'multiline':False]
['text':' __has_feature(__cxx_decltype__)','line_number':359,'multiline':False]
['text':' (__cplusplus >= 201103) || defined(__GXX_EXPERIMENTAL_CXX0X__)','line_number':364,'multiline':False]
['text':' ((__GNUC__ == 4) && (__GNUC_MINOR__ >= 8)) || (__GNUC__ > 4)','line_number':365,'multiline':False]
['text':' defined(__GNUC__)','line_number':366,'multiline':False]
['text':' (_MSC_VER >= 1800)','line_number':370,'multiline':False]
['text':' defined(BOOST_ASIO_MSVC)','line_number':371,'multiline':False]
['text':' !defined(BOOST_ASIO_DISABLE_DECLTYPE)','line_number':372,'multiline':False]
['text':' !defined(BOOST_ASIO_HAS_DECLTYPE)','line_number':373,'multiline':False]
['text':' Support alias templates on compilers known to allow it.','line_number':375,'multiline':False]
['text':' __has_feature(__cxx_alias_templates__)','line_number':381,'multiline':False]
['text':' (__cplusplus >= 201103) || defined(__GXX_EXPERIMENTAL_CXX0X__)','line_number':386,'multiline':False]
['text':' ((__GNUC__ == 4) && (__GNUC_MINOR__ >= 7)) || (__GNUC__ > 4)','line_number':387,'multiline':False]
['text':' defined(__GNUC__)','line_number':388,'multiline':False]
['text':' (_MSC_VER >= 1900)','line_number':392,'multiline':False]
['text':' defined(BOOST_ASIO_MSVC)','line_number':393,'multiline':False]
['text':' !defined(BOOST_ASIO_DISABLE_ALIAS_TEMPLATES)','line_number':394,'multiline':False]
['text':' !defined(BOOST_ASIO_HAS_ALIAS_TEMPLATES)','line_number':395,'multiline':False]
['text':' Support return type deduction on compilers known to allow it.','line_number':397,'multiline':False]
['text':' __has_feature(__cxx_return_type_deduction__)','line_number':403,'multiline':False]
['text':' (__cpp_return_type_deduction >= 201304)','line_number':409,'multiline':False]
['text':' defined(__cpp_return_type_deduction)','line_number':410,'multiline':False]
['text':' !defined(BOOST_ASIO_DISABLE_RETURN_TYPE_DEDUCTION)','line_number':411,'multiline':False]
['text':' !defined(BOOST_ASIO_HAS_RETURN_TYPE_DEDUCTION)','line_number':412,'multiline':False]
['text':' Support default function template arguments on compilers known to allow it.','line_number':414,'multiline':False]
['text':' (_MSC_VER >= 1900 && _MSVC_LANG >= 201103)','line_number':422,'multiline':False]
['text':' defined(BOOST_ASIO_MSVC)','line_number':423,'multiline':False]
['text':' !defined(BOOST_ASIO_DISABLE_DEFAULT_FUNCTION_TEMPLATE_ARGUMENTS)','line_number':424,'multiline':False]
['text':' !defined(BOOST_ASIO_HAS_DEFAULT_FUNCTION_TEMPLATE_ARGUMENTS)','line_number':425,'multiline':False]
['text':' Support enum classes on compilers known to allow them.','line_number':427,'multiline':False]
['text':' (_MSC_VER >= 1900 && _MSVC_LANG >= 201103)','line_number':435,'multiline':False]
['text':' defined(BOOST_ASIO_MSVC)','line_number':436,'multiline':False]
['text':' !defined(BOOST_ASIO_DISABLE_ENUM_CLASS)','line_number':437,'multiline':False]
['text':' !defined(BOOST_ASIO_HAS_ENUM_CLASS)','line_number':438,'multiline':False]
['text':' Support concepts on compilers known to allow them.','line_number':440,'multiline':False]
['text':' (__cpp_concepts >= 201707)','line_number':447,'multiline':False]
['text':' (__cpp_concepts >= 201707)','line_number':449,'multiline':False]
['text':' defined(__cpp_concepts)','line_number':450,'multiline':False]
['text':' !defined(BOOST_ASIO_DISABLE_CONCEPTS)','line_number':451,'multiline':False]
['text':' !defined(BOOST_ASIO_HAS_CONCEPTS)','line_number':452,'multiline':False]
['text':' Support template variables on compilers known to allow it.','line_number':454,'multiline':False]
['text':' __has_feature(__cxx_variable_templates__)','line_number':461,'multiline':False]
['text':' (__cplusplus >= 201402)','line_number':462,'multiline':False]
['text':' (__cplusplus >= 201402)','line_number':467,'multiline':False]
['text':' (__GNUC__ >= 6)','line_number':468,'multiline':False]
['text':' defined(__GNUC__) && !defined(__INTEL_COMPILER)','line_number':469,'multiline':False]
['text':' (_MSC_VER >= 1901)','line_number':473,'multiline':False]
['text':' defined(BOOST_ASIO_MSVC)','line_number':474,'multiline':False]
['text':' !defined(BOOST_ASIO_DISABLE_VARIABLE_TEMPLATES)','line_number':475,'multiline':False]
['text':' !defined(BOOST_ASIO_HAS_VARIABLE_TEMPLATES)','line_number':476,'multiline':False]
['text':' Support SFINAEd template variables on compilers known to allow it.','line_number':478,'multiline':False]
['text':' __has_feature(__cxx_variable_templates__)','line_number':485,'multiline':False]
['text':' (__cplusplus >= 201703)','line_number':486,'multiline':False]
['text':' (__cplusplus >= 201402)','line_number':491,'multiline':False]
['text':' ((__GNUC__ == 8) && (__GNUC_MINOR__ >= 4)) || (__GNUC__ > 8)','line_number':492,'multiline':False]
['text':' defined(__GNUC__)','line_number':493,'multiline':False]
['text':' (_MSC_VER >= 1901)','line_number':497,'multiline':False]
['text':' defined(BOOST_ASIO_MSVC)','line_number':498,'multiline':False]
['text':' !defined(BOOST_ASIO_DISABLE_SFINAE_VARIABLE_TEMPLATES)','line_number':499,'multiline':False]
['text':' !defined(BOOST_ASIO_HAS_SFINAE_VARIABLE_TEMPLATES)','line_number':500,'multiline':False]
['text':' Support SFINAE use of constant expressions on compilers known to allow it.','line_number':502,'multiline':False]
['text':' (__cplusplus >= 201402)','line_number':508,'multiline':False]
['text':' (__cplusplus >= 201402)','line_number':513,'multiline':False]
['text':' (__GNUC__ >= 7)','line_number':514,'multiline':False]
['text':' defined(__GNUC__) && !defined(__INTEL_COMPILER)','line_number':515,'multiline':False]
['text':' (_MSC_VER >= 1901)','line_number':519,'multiline':False]
['text':' defined(BOOST_ASIO_MSVC)','line_number':520,'multiline':False]
['text':' !defined(BOOST_ASIO_DISABLE_CONSTANT_EXPRESSION_SFINAE)','line_number':521,'multiline':False]
['text':' !defined(BOOST_ASIO_HAS_CONSTANT_EXPRESSION_SFINAE)','line_number':522,'multiline':False]
['text':' Enable workarounds for lack of working expression SFINAE.','line_number':524,'multiline':False]
['text':' (__cplusplus >= 201103)','line_number':530,'multiline':False]
['text':' (_MSVC_LANG >= 202000)','line_number':534,'multiline':False]
['text':' defined(BOOST_ASIO_MSVC) && (_MSC_VER >= 1929)','line_number':535,'multiline':False]
['text':' !defined(BOOST_ASIO_DISABLE_WORKING_EXPRESSION_SFINAE)','line_number':536,'multiline':False]
['text':' !defined(BOOST_ASIO_HAS_WORKING_EXPRESSION_SFINAE)','line_number':537,'multiline':False]
['text':' Support ref-qualified functions on compilers known to allow it.','line_number':539,'multiline':False]
['text':' __has_feature(__cxx_reference_qualified_functions__)','line_number':545,'multiline':False]
['text':' (__cplusplus >= 201103) || defined(__GXX_EXPERIMENTAL_CXX0X__)','line_number':550,'multiline':False]
['text':' ((__GNUC__ == 4) && (__GNUC_MINOR__ >= 9)) || (__GNUC__ > 4)','line_number':551,'multiline':False]
['text':' defined(__GNUC__)','line_number':552,'multiline':False]
['text':' (_MSC_VER >= 1900)','line_number':556,'multiline':False]
['text':' defined(BOOST_ASIO_MSVC)','line_number':557,'multiline':False]
['text':' !defined(BOOST_ASIO_DISABLE_REF_QUALIFIED_FUNCTIONS)','line_number':558,'multiline':False]
['text':' !defined(BOOST_ASIO_HAS_REF_QUALIFIED_FUNCTIONS)','line_number':559,'multiline':False]
['text':' !defined(BOOST_ASIO_LVALUE_REF_QUAL)','line_number':563,'multiline':False]
['text':' !defined(BOOST_ASIO_RVALUE_REF_QUAL)','line_number':566,'multiline':False]
['text':' defined(BOOST_ASIO_HAS_REF_QUALIFIED_FUNCTIONS)','line_number':567,'multiline':False]
['text':' !defined(BOOST_ASIO_LVALUE_REF_QUAL)','line_number':570,'multiline':False]
['text':' !defined(BOOST_ASIO_RVALUE_REF_QUAL)','line_number':573,'multiline':False]
['text':' defined(BOOST_ASIO_HAS_REF_QUALIFIED_FUNCTIONS)','line_number':574,'multiline':False]
['text':' Support for the alignof operator.','line_number':576,'multiline':False]
['text':' (__cplusplus >= 201103)','line_number':581,'multiline':False]
['text':' !defined(BOOST_ASIO_DISABLE_ALIGNOF)','line_number':582,'multiline':False]
['text':' !defined(BOOST_ASIO_HAS_ALIGNOF)','line_number':583,'multiline':False]
['text':' ((__GNUC__ == 4) && (__GNUC_MINOR__ >= 9)) || (__GNUC__ > 4)','line_number':592,'multiline':False]
['text':' ((__GNUC__ == 4) && (__GNUC_MINOR__ >= 9)) || (__GNUC__ > 4)','line_number':594,'multiline':False]
['text':' defined(__GNUC__)','line_number':595,'multiline':False]
['text':' defined(__GNUC__)','line_number':597,'multiline':False]
['text':' defined(BOOST_ASIO_HAS_ALIGNOF)','line_number':598,'multiline':False]
['text':' defined(BOOST_ASIO_HAS_ALIGNOF)','line_number':601,'multiline':False]
['text':' Standard library support for aligned allocation.','line_number':603,'multiline':False]
['text':' (_LIBCPP_STD_VER > 14) && defined(_LIBCPP_HAS_ALIGNED_ALLOC)','line_number':612,'multiline':False]
['text':'   && !defined(_LIBCPP_MSVCRT) && !defined(__MINGW32__)','line_number':613,'multiline':False]
['text':' defined(_GLIBCXX_HAVE_ALIGNED_ALLOC)','line_number':616,'multiline':False]
['text':' defined(_GLIBCXX_HAVE_ALIGNED_ALLOC)','line_number':620,'multiline':False]
['text':' defined(__GNUC__)','line_number':621,'multiline':False]
['text':' (__cplusplus >= 201703)','line_number':622,'multiline':False]
['text':' !defined(BOOST_ASIO_DISABLE_STD_ALIGNED_ALLOC)','line_number':623,'multiline':False]
['text':' !defined(BOOST_ASIO_HAS_STD_ALIGNED_ALLOC)','line_number':624,'multiline':False]
['text':' Standard library support for system errors.','line_number':626,'multiline':False]
['text':' __has_include(<system_error>)','line_number':634,'multiline':False]
['text':' (__cplusplus >= 201103)','line_number':635,'multiline':False]
['text':' (__cplusplus >= 201103) || defined(__GXX_EXPERIMENTAL_CXX0X__)','line_number':640,'multiline':False]
['text':' ((__GNUC__ == 4) && (__GNUC_MINOR__ >= 6)) || (__GNUC__ > 4)','line_number':641,'multiline':False]
['text':' defined(__GNUC__)','line_number':642,'multiline':False]
['text':' (_MSC_VER >= 1700)','line_number':646,'multiline':False]
['text':' defined(BOOST_ASIO_MSVC)','line_number':647,'multiline':False]
['text':' !defined(BOOST_ASIO_DISABLE_STD_SYSTEM_ERROR)','line_number':648,'multiline':False]
['text':' Compliant C++11 compilers put noexcept specifiers on error_category members.','line_number':650,'multiline':False]
['text':' __has_feature(__cxx_noexcept__)','line_number':657,'multiline':False]
['text':' (__cplusplus >= 201103) || defined(__GXX_EXPERIMENTAL_CXX0X__)','line_number':662,'multiline':False]
['text':' ((__GNUC__ == 4) && (__GNUC_MINOR__ >= 7)) || (__GNUC__ > 4)','line_number':663,'multiline':False]
['text':' (_MSC_VER >= 1900)','line_number':667,'multiline':False]
['text':' defined(BOOST_ASIO_MSVC)','line_number':668,'multiline':False]
['text':' !defined(BOOST_ASIO_ERROR_CATEGORY_NOEXCEPT)','line_number':671,'multiline':False]
['text':' !defined(BOOST_ASIO_ERROR_CATEGORY_NOEXCEPT)','line_number':672,'multiline':False]
['text':' Standard library support for arrays.','line_number':674,'multiline':False]
['text':' __has_include(<array>)','line_number':683,'multiline':False]
['text':' (__cplusplus >= 201103)','line_number':684,'multiline':False]
['text':' (__cplusplus >= 201103) || defined(__GXX_EXPERIMENTAL_CXX0X__)','line_number':689,'multiline':False]
['text':' ((__GNUC__ == 4) && (__GNUC_MINOR__ >= 3)) || (__GNUC__ > 4)','line_number':690,'multiline':False]
['text':' defined(__GNUC__)','line_number':691,'multiline':False]
['text':' (_MSC_VER >= 1600)','line_number':695,'multiline':False]
['text':' defined(BOOST_ASIO_MSVC)','line_number':696,'multiline':False]
['text':' !defined(BOOST_ASIO_DISABLE_STD_ARRAY)','line_number':697,'multiline':False]
['text':' !defined(BOOST_ASIO_HAS_STD_ARRAY)','line_number':698,'multiline':False]
['text':' Standard library support for shared_ptr and weak_ptr.','line_number':700,'multiline':False]
['text':' (__cplusplus >= 201103)','line_number':708,'multiline':False]
['text':' (__cplusplus >= 201103) || defined(__GXX_EXPERIMENTAL_CXX0X__)','line_number':713,'multiline':False]
['text':' ((__GNUC__ == 4) && (__GNUC_MINOR__ >= 3)) || (__GNUC__ > 4)','line_number':714,'multiline':False]
['text':' defined(__GNUC__)','line_number':715,'multiline':False]
['text':' (_MSC_VER >= 1600)','line_number':719,'multiline':False]
['text':' defined(BOOST_ASIO_MSVC)','line_number':720,'multiline':False]
['text':' !defined(BOOST_ASIO_DISABLE_STD_SHARED_PTR)','line_number':721,'multiline':False]
['text':' !defined(BOOST_ASIO_HAS_STD_SHARED_PTR)','line_number':722,'multiline':False]
['text':' Standard library support for allocator_arg_t.','line_number':724,'multiline':False]
['text':' (__cplusplus >= 201103)','line_number':732,'multiline':False]
['text':' (__cplusplus >= 201103) || defined(__GXX_EXPERIMENTAL_CXX0X__)','line_number':737,'multiline':False]
['text':' ((__GNUC__ == 4) && (__GNUC_MINOR__ >= 6)) || (__GNUC__ > 4)','line_number':738,'multiline':False]
['text':' defined(__GNUC__)','line_number':739,'multiline':False]
['text':' (_MSC_VER >= 1600)','line_number':743,'multiline':False]
['text':' defined(BOOST_ASIO_MSVC)','line_number':744,'multiline':False]
['text':' !defined(BOOST_ASIO_DISABLE_STD_ALLOCATOR_ARG)','line_number':745,'multiline':False]
['text':' !defined(BOOST_ASIO_HAS_STD_ALLOCATOR_ARG)','line_number':746,'multiline':False]
['text':' Standard library support for atomic operations.','line_number':748,'multiline':False]
['text':' __has_include(<atomic>)','line_number':757,'multiline':False]
['text':' __has_include(<atomic>)','line_number':762,'multiline':False]
['text':' (__clang_major__ >= 10)','line_number':763,'multiline':False]
['text':' defined(__apple_build_version__) && defined(_LIBCPP_VERSION)','line_number':764,'multiline':False]
['text':' (__cplusplus >= 201103) || defined(__GXX_EXPERIMENTAL_CXX0X__)','line_number':769,'multiline':False]
['text':' ((__GNUC__ == 4) && (__GNUC_MINOR__ >= 7)) || (__GNUC__ > 4)','line_number':770,'multiline':False]
['text':' defined(__GNUC__)','line_number':771,'multiline':False]
['text':' (_MSC_VER >= 1700)','line_number':775,'multiline':False]
['text':' defined(BOOST_ASIO_MSVC)','line_number':776,'multiline':False]
['text':' !defined(BOOST_ASIO_DISABLE_STD_ATOMIC)','line_number':777,'multiline':False]
['text':' !defined(BOOST_ASIO_HAS_STD_ATOMIC)','line_number':778,'multiline':False]
['text':' Standard library support for chrono. Some standard libraries (such as the','line_number':780,'multiline':False]
['text':' libstdc++ shipped with gcc 4.6) provide monotonic_clock as per early C++0x','line_number':781,'multiline':False]
['text':' drafts, rather than the eventually standardised name of steady_clock.','line_number':782,'multiline':False]
['text':' __has_include(<chrono>)','line_number':791,'multiline':False]
['text':' (__cplusplus >= 201103)','line_number':792,'multiline':False]
['text':' ((__GNUC__ == 4) && (__GNUC_MINOR__ == 6))','line_number':799,'multiline':False]
['text':' (__cplusplus >= 201103) || defined(__GXX_EXPERIMENTAL_CXX0X__)','line_number':800,'multiline':False]
['text':' ((__GNUC__ == 4) && (__GNUC_MINOR__ >= 6)) || (__GNUC__ > 4)','line_number':801,'multiline':False]
['text':' defined(__GNUC__)','line_number':802,'multiline':False]
['text':' (_MSC_VER >= 1700)','line_number':806,'multiline':False]
['text':' defined(BOOST_ASIO_MSVC)','line_number':807,'multiline':False]
['text':' !defined(BOOST_ASIO_DISABLE_STD_CHRONO)','line_number':808,'multiline':False]
['text':' !defined(BOOST_ASIO_HAS_STD_CHRONO)','line_number':809,'multiline':False]
['text':' Boost support for chrono.','line_number':811,'multiline':False]
['text':' defined(BOOST_ASIO_HAS_BOOST_CONFIG) && (BOOST_VERSION >= 104700)','line_number':816,'multiline':False]
['text':' !defined(BOOST_ASIO_DISABLE_BOOST_CHRONO)','line_number':817,'multiline':False]
['text':' !defined(BOOST_ASIO_HAS_BOOST_CHRONO)','line_number':818,'multiline':False]
['text':' Some form of chrono library is available.','line_number':820,'multiline':False]
['text':' defined(BOOST_ASIO_HAS_STD_CHRONO)','line_number':825,'multiline':False]
['text':' || defined(BOOST_ASIO_HAS_BOOST_CHRONO)','line_number':826,'multiline':False]
['text':' !defined(BOOST_ASIO_HAS_CHRONO)','line_number':827,'multiline':False]
['text':' Boost support for the DateTime library.','line_number':829,'multiline':False]
['text':' !defined(BOOST_ASIO_DISABLE_BOOST_DATE_TIME)','line_number':833,'multiline':False]
['text':' !defined(BOOST_ASIO_HAS_BOOST_DATE_TIME)','line_number':834,'multiline':False]
['text':' Standard library support for addressof.','line_number':836,'multiline':False]
['text':' (__cplusplus >= 201103)','line_number':844,'multiline':False]
['text':' (__cplusplus >= 201103) || defined(__GXX_EXPERIMENTAL_CXX0X__)','line_number':849,'multiline':False]
['text':' ((__GNUC__ == 4) && (__GNUC_MINOR__ >= 6)) || (__GNUC__ > 4)','line_number':850,'multiline':False]
['text':' defined(__GNUC__)','line_number':851,'multiline':False]
['text':' (_MSC_VER >= 1700)','line_number':855,'multiline':False]
['text':' defined(BOOST_ASIO_MSVC)','line_number':856,'multiline':False]
['text':' !defined(BOOST_ASIO_DISABLE_STD_ADDRESSOF)','line_number':857,'multiline':False]
['text':' !defined(BOOST_ASIO_HAS_STD_ADDRESSOF)','line_number':858,'multiline':False]
['text':' Standard library support for the function class.','line_number':860,'multiline':False]
['text':' (__cplusplus >= 201103)','line_number':868,'multiline':False]
['text':' (__cplusplus >= 201103) || defined(__GXX_EXPERIMENTAL_CXX0X__)','line_number':873,'multiline':False]
['text':' ((__GNUC__ == 4) && (__GNUC_MINOR__ >= 5)) || (__GNUC__ > 4)','line_number':874,'multiline':False]
['text':' defined(__GNUC__)','line_number':875,'multiline':False]
['text':' (_MSC_VER >= 1700)','line_number':879,'multiline':False]
['text':' defined(BOOST_ASIO_MSVC)','line_number':880,'multiline':False]
['text':' !defined(BOOST_ASIO_DISABLE_STD_FUNCTION)','line_number':881,'multiline':False]
['text':' !defined(BOOST_ASIO_HAS_STD_FUNCTION)','line_number':882,'multiline':False]
['text':' Standard library support for the reference_wrapper class.','line_number':884,'multiline':False]
['text':' (__cplusplus >= 201103)','line_number':892,'multiline':False]
['text':' (__cplusplus >= 201103) || defined(__GXX_EXPERIMENTAL_CXX0X__)','line_number':897,'multiline':False]
['text':' ((__GNUC__ == 4) && (__GNUC_MINOR__ >= 5)) || (__GNUC__ > 4)','line_number':898,'multiline':False]
['text':' defined(__GNUC__)','line_number':899,'multiline':False]
['text':' (_MSC_VER >= 1700)','line_number':903,'multiline':False]
['text':' defined(BOOST_ASIO_MSVC)','line_number':904,'multiline':False]
['text':' !defined(BOOST_ASIO_DISABLE_STD_REFERENCE_WRAPPER)','line_number':905,'multiline':False]
['text':' !defined(BOOST_ASIO_HAS_STD_REFERENCE_WRAPPER)','line_number':906,'multiline':False]
['text':' Standard library support for type traits.','line_number':908,'multiline':False]
['text':' __has_include(<type_traits>)','line_number':917,'multiline':False]
['text':' (__cplusplus >= 201103)','line_number':918,'multiline':False]
['text':' (__cplusplus >= 201103) || defined(__GXX_EXPERIMENTAL_CXX0X__)','line_number':923,'multiline':False]
['text':' ((__GNUC__ == 4) && (__GNUC_MINOR__ >= 8)) || (__GNUC__ > 4)','line_number':924,'multiline':False]
['text':' defined(__GNUC__)','line_number':925,'multiline':False]
['text':' (_MSC_VER >= 1700)','line_number':929,'multiline':False]
['text':' defined(BOOST_ASIO_MSVC)','line_number':930,'multiline':False]
['text':' !defined(BOOST_ASIO_DISABLE_STD_TYPE_TRAITS)','line_number':931,'multiline':False]
['text':' !defined(BOOST_ASIO_HAS_STD_TYPE_TRAITS)','line_number':932,'multiline':False]
['text':' Standard library support for the nullptr_t type.','line_number':934,'multiline':False]
['text':' __has_feature(__cxx_nullptr__)','line_number':940,'multiline':False]
['text':' (__cplusplus >= 201103) || defined(__GXX_EXPERIMENTAL_CXX0X__)','line_number':945,'multiline':False]
['text':' ((__GNUC__ == 4) && (__GNUC_MINOR__ >= 6)) || (__GNUC__ > 4)','line_number':946,'multiline':False]
['text':' defined(__GNUC__)','line_number':947,'multiline':False]
['text':' (_MSC_VER >= 1700)','line_number':951,'multiline':False]
['text':' defined(BOOST_ASIO_MSVC)','line_number':952,'multiline':False]
['text':' !defined(BOOST_ASIO_DISABLE_NULLPTR)','line_number':953,'multiline':False]
['text':' !defined(BOOST_ASIO_HAS_NULLPTR)','line_number':954,'multiline':False]
['text':' Standard library support for the C++11 allocator additions.','line_number':956,'multiline':False]
['text':' (__cplusplus >= 201103)','line_number':964,'multiline':False]
['text':' (__cplusplus >= 201103) || defined(__GXX_EXPERIMENTAL_CXX0X__)','line_number':969,'multiline':False]
['text':' ((__GNUC__ == 4) && (__GNUC_MINOR__ >= 7)) || (__GNUC__ > 4)','line_number':970,'multiline':False]
['text':' defined(__GNUC__)','line_number':971,'multiline':False]
['text':' (_MSC_VER >= 1800)','line_number':975,'multiline':False]
['text':' defined(BOOST_ASIO_MSVC)','line_number':976,'multiline':False]
['text':' !defined(BOOST_ASIO_DISABLE_CXX11_ALLOCATORS)','line_number':977,'multiline':False]
['text':' !defined(BOOST_ASIO_HAS_CXX11_ALLOCATORS)','line_number':978,'multiline':False]
['text':' Standard library support for the cstdint header.','line_number':980,'multiline':False]
['text':' (__cplusplus >= 201103)','line_number':988,'multiline':False]
['text':' (__cplusplus >= 201103) || defined(__GXX_EXPERIMENTAL_CXX0X__)','line_number':993,'multiline':False]
['text':' ((__GNUC__ == 4) && (__GNUC_MINOR__ >= 5)) || (__GNUC__ > 4)','line_number':994,'multiline':False]
['text':' defined(__GNUC__)','line_number':995,'multiline':False]
['text':' (_MSC_VER >= 1700)','line_number':999,'multiline':False]
['text':' defined(BOOST_ASIO_MSVC)','line_number':1000,'multiline':False]
['text':' !defined(BOOST_ASIO_DISABLE_CSTDINT)','line_number':1001,'multiline':False]
['text':' !defined(BOOST_ASIO_HAS_CSTDINT)','line_number':1002,'multiline':False]
['text':' Standard library support for the thread class.','line_number':1004,'multiline':False]
['text':' __has_include(<thread>)','line_number':1013,'multiline':False]
['text':' (__cplusplus >= 201103)','line_number':1014,'multiline':False]
['text':' (__cplusplus >= 201103) || defined(__GXX_EXPERIMENTAL_CXX0X__)','line_number':1019,'multiline':False]
['text':' ((__GNUC__ == 4) && (__GNUC_MINOR__ >= 7)) || (__GNUC__ > 4)','line_number':1020,'multiline':False]
['text':' defined(__GNUC__)','line_number':1021,'multiline':False]
['text':' (_MSC_VER >= 1700)','line_number':1025,'multiline':False]
['text':' defined(BOOST_ASIO_MSVC)','line_number':1026,'multiline':False]
['text':' !defined(BOOST_ASIO_DISABLE_STD_THREAD)','line_number':1027,'multiline':False]
['text':' !defined(BOOST_ASIO_HAS_STD_THREAD)','line_number':1028,'multiline':False]
['text':' Standard library support for the mutex and condition variable classes.','line_number':1030,'multiline':False]
['text':' __has_include(<mutex>)','line_number':1039,'multiline':False]
['text':' (__cplusplus >= 201103)','line_number':1040,'multiline':False]
['text':' (__cplusplus >= 201103) || defined(__GXX_EXPERIMENTAL_CXX0X__)','line_number':1045,'multiline':False]
['text':' ((__GNUC__ == 4) && (__GNUC_MINOR__ >= 7)) || (__GNUC__ > 4)','line_number':1046,'multiline':False]
['text':' defined(__GNUC__)','line_number':1047,'multiline':False]
['text':' (_MSC_VER >= 1700)','line_number':1051,'multiline':False]
['text':' defined(BOOST_ASIO_MSVC)','line_number':1052,'multiline':False]
['text':' !defined(BOOST_ASIO_DISABLE_STD_MUTEX_AND_CONDVAR)','line_number':1053,'multiline':False]
['text':' !defined(BOOST_ASIO_HAS_STD_MUTEX_AND_CONDVAR)','line_number':1054,'multiline':False]
['text':' Standard library support for the call_once function.','line_number':1056,'multiline':False]
['text':' __has_include(<mutex>)','line_number':1065,'multiline':False]
['text':' (__cplusplus >= 201103)','line_number':1066,'multiline':False]
['text':' (__cplusplus >= 201103) || defined(__GXX_EXPERIMENTAL_CXX0X__)','line_number':1071,'multiline':False]
['text':' ((__GNUC__ == 4) && (__GNUC_MINOR__ >= 7)) || (__GNUC__ > 4)','line_number':1072,'multiline':False]
['text':' defined(__GNUC__)','line_number':1073,'multiline':False]
['text':' (_MSC_VER >= 1700)','line_number':1077,'multiline':False]
['text':' defined(BOOST_ASIO_MSVC)','line_number':1078,'multiline':False]
['text':' !defined(BOOST_ASIO_DISABLE_STD_CALL_ONCE)','line_number':1079,'multiline':False]
['text':' !defined(BOOST_ASIO_HAS_STD_CALL_ONCE)','line_number':1080,'multiline':False]
['text':' Standard library support for futures.','line_number':1082,'multiline':False]
['text':' __has_include(<future>)','line_number':1091,'multiline':False]
['text':' (__cplusplus >= 201103)','line_number':1092,'multiline':False]
['text':' (__cplusplus >= 201103) || defined(__GXX_EXPERIMENTAL_CXX0X__)','line_number':1097,'multiline':False]
['text':' ((__GNUC__ == 4) && (__GNUC_MINOR__ >= 7)) || (__GNUC__ > 4)','line_number':1098,'multiline':False]
['text':' defined(__GNUC__)','line_number':1099,'multiline':False]
['text':' (_MSC_VER >= 1700)','line_number':1103,'multiline':False]
['text':' defined(BOOST_ASIO_MSVC)','line_number':1104,'multiline':False]
['text':' !defined(BOOST_ASIO_DISABLE_STD_FUTURE)','line_number':1105,'multiline':False]
['text':' !defined(BOOST_ASIO_HAS_STD_FUTURE)','line_number':1106,'multiline':False]
['text':' Standard library support for std::string_view.','line_number':1108,'multiline':False]
['text':' __has_include(<string_view>)','line_number':1116,'multiline':False]
['text':' (__cplusplus >= 201402)','line_number':1117,'multiline':False]
['text':' defined(BOOST_ASIO_HAS_CLANG_LIBCXX)','line_number':1118,'multiline':False]
['text':' __has_include(<string_view>)','line_number':1122,'multiline':False]
['text':' (__cplusplus >= 201703)','line_number':1123,'multiline':False]
['text':' defined(BOOST_ASIO_HAS_CLANG_LIBCXX)','line_number':1124,'multiline':False]
['text':' (__cplusplus >= 201703)','line_number':1129,'multiline':False]
['text':' (__GNUC__ >= 7)','line_number':1130,'multiline':False]
['text':' (_MSC_VER >= 1910 && _MSVC_LANG >= 201703)','line_number':1134,'multiline':False]
['text':' defined(BOOST_ASIO_MSVC)','line_number':1135,'multiline':False]
['text':' !defined(BOOST_ASIO_DISABLE_STD_STRING_VIEW)','line_number':1136,'multiline':False]
['text':' !defined(BOOST_ASIO_HAS_STD_STRING_VIEW)','line_number':1137,'multiline':False]
['text':' Standard library support for std::experimental::string_view.','line_number':1139,'multiline':False]
['text':' __has_include(<experimental/string_view>)','line_number':1148,'multiline':False]
['text':' (__cplusplus >= 201402)','line_number':1149,'multiline':False]
['text':' (_LIBCPP_VERSION < 7000)','line_number':1150,'multiline':False]
['text':' defined(BOOST_ASIO_HAS_CLANG_LIBCXX)','line_number':1151,'multiline':False]
['text':' __has_include(<experimental/string_view>)','line_number':1155,'multiline':False]
['text':' (__cplusplus >= 201402)','line_number':1156,'multiline':False]
['text':' // defined(BOOST_ASIO_HAS_CLANG_LIBCXX)','line_number':1157,'multiline':False]
['text':' (__cplusplus >= 201402)','line_number':1162,'multiline':False]
['text':' ((__GNUC__ == 4) && (__GNUC_MINOR__ >= 9)) || (__GNUC__ > 4)','line_number':1163,'multiline':False]
['text':' defined(__GNUC__)','line_number':1164,'multiline':False]
['text':' !defined(BOOST_ASIO_DISABLE_STD_EXPERIMENTAL_STRING_VIEW)','line_number':1165,'multiline':False]
['text':' !defined(BOOST_ASIO_HAS_STD_EXPERIMENTAL_STRING_VIEW)','line_number':1166,'multiline':False]
['text':' Standard library has a string_view that we can use.','line_number':1168,'multiline':False]
['text':' defined(BOOST_ASIO_HAS_STD_EXPERIMENTAL_STRING_VIEW)','line_number':1175,'multiline':False]
['text':' !defined(BOOST_ASIO_DISABLE_STRING_VIEW)','line_number':1176,'multiline':False]
['text':' !defined(BOOST_ASIO_HAS_STRING_VIEW)','line_number':1177,'multiline':False]
['text':' Standard library support for iostream move construction and assignment.','line_number':1179,'multiline':False]
['text':' (__cplusplus >= 201103)','line_number':1185,'multiline':False]
['text':' (__cplusplus >= 201103) || defined(__GXX_EXPERIMENTAL_CXX0X__)','line_number':1190,'multiline':False]
['text':' (__GNUC__ > 4)','line_number':1191,'multiline':False]
['text':' (_MSC_VER >= 1700)','line_number':1195,'multiline':False]
['text':' defined(BOOST_ASIO_MSVC)','line_number':1196,'multiline':False]
['text':' !defined(BOOST_ASIO_DISABLE_STD_IOSTREAM_MOVE)','line_number':1197,'multiline':False]
['text':' !defined(BOOST_ASIO_HAS_STD_IOSTREAM_MOVE)','line_number':1198,'multiline':False]
['text':' Standard library has invoke_result (which supersedes result_of).','line_number':1200,'multiline':False]
['text':' (_MSC_VER >= 1911 && _MSVC_LANG >= 201703)','line_number':1206,'multiline':False]
['text':' defined(BOOST_ASIO_MSVC)','line_number':1207,'multiline':False]
['text':' (__cplusplus >= 202002)','line_number':1212,'multiline':False]
['text':' (_LIBCPP_VERSION >= 13000)','line_number':1213,'multiline':False]
['text':' defined(BOOST_ASIO_HAS_CLANG_LIBCXX)','line_number':1214,'multiline':False]
['text':' !defined(BOOST_ASIO_DISABLE_STD_INVOKE_RESULT)','line_number':1215,'multiline':False]
['text':' !defined(BOOST_ASIO_HAS_STD_INVOKE_RESULT)','line_number':1216,'multiline':False]
['text':' Standard library support for std::exception_ptr and std::current_exception.','line_number':1218,'multiline':False]
['text':' (__cplusplus >= 201103)','line_number':1226,'multiline':False]
['text':' (__cplusplus >= 201103) || defined(__GXX_EXPERIMENTAL_CXX0X__)','line_number':1231,'multiline':False]
['text':' ((__GNUC__ == 4) && (__GNUC_MINOR__ >= 7)) || (__GNUC__ > 4)','line_number':1232,'multiline':False]
['text':' defined(__GNUC__)','line_number':1233,'multiline':False]
['text':' (_MSC_VER >= 1800)','line_number':1237,'multiline':False]
['text':' defined(BOOST_ASIO_MSVC)','line_number':1238,'multiline':False]
['text':' !defined(BOOST_ASIO_DISABLE_STD_EXCEPTION_PTR)','line_number':1239,'multiline':False]
['text':' !defined(BOOST_ASIO_HAS_STD_EXCEPTION_PTR)','line_number':1240,'multiline':False]
['text':' Standard library support for std::nested_exception.','line_number':1242,'multiline':False]
['text':' (__cplusplus >= 201103)','line_number':1250,'multiline':False]
['text':' (__cplusplus >= 201103) || defined(__GXX_EXPERIMENTAL_CXX0X__)','line_number':1255,'multiline':False]
['text':' ((__GNUC__ == 4) && (__GNUC_MINOR__ >= 7)) || (__GNUC__ > 4)','line_number':1256,'multiline':False]
['text':' defined(__GNUC__)','line_number':1257,'multiline':False]
['text':' (_MSC_VER >= 1900)','line_number':1261,'multiline':False]
['text':' defined(BOOST_ASIO_MSVC)','line_number':1262,'multiline':False]
['text':' !defined(BOOST_ASIO_DISABLE_STD_NESTED_EXCEPTION)','line_number':1263,'multiline':False]
['text':' !defined(BOOST_ASIO_HAS_STD_NESTED_EXCEPTION)','line_number':1264,'multiline':False]
['text':' Standard library support for std::any.','line_number':1266,'multiline':False]
['text':' __has_include(<any>)','line_number':1273,'multiline':False]
['text':' (__cplusplus >= 201703)','line_number':1274,'multiline':False]
['text':' (__cplusplus >= 201703)','line_number':1279,'multiline':False]
['text':' (__GNUC__ >= 7)','line_number':1280,'multiline':False]
['text':' defined(__GNUC__)','line_number':1281,'multiline':False]
['text':' (_MSC_VER >= 1910) && (_MSVC_LANG >= 201703)','line_number':1285,'multiline':False]
['text':' defined(BOOST_ASIO_MSVC)','line_number':1286,'multiline':False]
['text':' !defined(BOOST_ASIO_DISABLE_STD_ANY)','line_number':1287,'multiline':False]
['text':' !defined(BOOST_ASIO_HAS_STD_ANY)','line_number':1288,'multiline':False]
['text':' Standard library support for std::source_location.','line_number':1290,'multiline':False]
['text':' ...','line_number':1293,'multiline':False]
['text':' !defined(BOOST_ASIO_DISABLE_STD_SOURCE_LOCATION)','line_number':1294,'multiline':False]
['text':' !defined(BOOST_ASIO_HAS_STD_SOURCE_LOCATION)','line_number':1295,'multiline':False]
['text':' Standard library support for std::experimental::source_location.','line_number':1297,'multiline':False]
['text':' __has_include(<experimental/source_location>)','line_number':1304,'multiline':False]
['text':' (__cplusplus >= 201709)','line_number':1305,'multiline':False]
['text':' defined(__GNUC__)','line_number':1306,'multiline':False]
['text':' !defined(BOOST_ASIO_DISABLE_STD_EXPERIMENTAL_SOURCE_LOCATION)','line_number':1307,'multiline':False]
['text':' !defined(BOOST_ASIO_HAS_STD_EXPERIMENTAL_SOURCE_LOCATION)','line_number':1308,'multiline':False]
['text':' Standard library has a source_location that we can use.','line_number':1310,'multiline':False]
['text':' defined(BOOST_ASIO_HAS_STD_EXPERIMENTAL_SOURCE_LOCATION)','line_number':1317,'multiline':False]
['text':' !defined(BOOST_ASIO_DISABLE_SOURCE_LOCATION)','line_number':1318,'multiline':False]
['text':' !defined(BOOST_ASIO_HAS_SOURCE_LOCATION)','line_number':1319,'multiline':False]
['text':' Windows App target. Windows but with a limited API.','line_number':1321,'multiline':False]
['text':' WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_APP)','line_number':1329,'multiline':False]
['text':' && !WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_DESKTOP)','line_number':1330,'multiline':False]
['text':' defined(_WIN32_WINNT) && (_WIN32_WINNT >= 0x0603)','line_number':1331,'multiline':False]
['text':' !defined(BOOST_ASIO_WINDOWS_APP)','line_number':1332,'multiline':False]
['text':' Legacy WinRT target. Windows App is preferred.','line_number':1334,'multiline':False]
['text':' WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_APP)','line_number':1342,'multiline':False]
['text':' && !WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_DESKTOP)','line_number':1343,'multiline':False]
['text':' defined(__cplusplus_winrt)','line_number':1344,'multiline':False]
['text':' !defined(BOOST_ASIO_WINDOWS_APP)','line_number':1345,'multiline':False]
['text':' !defined(BOOST_ASIO_WINDOWS_RUNTIME)','line_number':1346,'multiline':False]
['text':' Windows target. Excludes WinRT but includes Windows App targets.','line_number':1348,'multiline':False]
['text':' defined(BOOST_ASIO_HAS_BOOST_CONFIG) && defined(BOOST_WINDOWS)','line_number':1357,'multiline':False]
['text':' !defined(BOOST_ASIO_WINDOWS_RUNTIME)','line_number':1358,'multiline':False]
['text':' !defined(BOOST_ASIO_WINDOWS)','line_number':1359,'multiline':False]
['text':' Windows: target OS version.','line_number':1361,'multiline':False]
['text':' defined(_MSC_VER) || (defined(__BORLANDC__) && !defined(__clang__))','line_number':1370,'multiline':False]
['text':' defined(_MSC_VER) || (defined(__BORLANDC__) && !defined(__clang__))','line_number':1374,'multiline':False]
['text':' !defined(_WIN32_WINNT) && !defined(_WIN32_WINDOWS)','line_number':1376,'multiline':False]
['text':' Needed for correct types in winsock2.h','line_number':1380,'multiline':False]
['text':' !defined(_WINSOCK2API_)','line_number':1381,'multiline':False]
['text':' !defined(_WINSOCK2API_)','line_number':1383,'multiline':False]
['text':' defined(_WIN32) && !defined(WIN32)','line_number':1384,'multiline':False]
['text':' defined(_MSC_VER)','line_number':1385,'multiline':False]
['text':' Needed for correct types in winsock2.h','line_number':1389,'multiline':False]
['text':' !defined(_WINSOCK2API_)','line_number':1390,'multiline':False]
['text':' !defined(_WINSOCK2API_)','line_number':1392,'multiline':False]
['text':' defined(__WIN32__) && !defined(WIN32)','line_number':1393,'multiline':False]
['text':' defined(__BORLANDC__)','line_number':1394,'multiline':False]
['text':' !defined(__USE_W32_SOCKETS)','line_number':1398,'multiline':False]
['text':' defined(__CYGWIN__)','line_number':1399,'multiline':False]
['text':' defined(BOOST_ASIO_WINDOWS) || defined(__CYGWIN__)','line_number':1400,'multiline':False]
['text':' Windows: minimise header inclusion.','line_number':1402,'multiline':False]
['text':' !defined(WIN32_LEAN_AND_MEAN)','line_number':1407,'multiline':False]
['text':' !defined(BOOST_ASIO_NO_WIN32_LEAN_AND_MEAN)','line_number':1408,'multiline':False]
['text':' defined(BOOST_ASIO_WINDOWS) || defined(__CYGWIN__)','line_number':1409,'multiline':False]
['text':' Windows: suppress definition of "min" and "max" macros.','line_number':1411,'multiline':False]
['text':' !defined(NOMINMAX)','line_number':1416,'multiline':False]
['text':' !defined(BOOST_ASIO_NO_NOMINMAX)','line_number':1417,'multiline':False]
['text':' defined(BOOST_ASIO_WINDOWS) || defined(__CYGWIN__)','line_number':1418,'multiline':False]
['text':' Windows: IO Completion Ports.','line_number':1420,'multiline':False]
['text':' !defined(BOOST_ASIO_DISABLE_IOCP)','line_number':1427,'multiline':False]
['text':' !defined(UNDER_CE) && !defined(BOOST_ASIO_WINDOWS_APP)','line_number':1428,'multiline':False]
['text':' defined(_WIN32_WINNT) && (_WIN32_WINNT >= 0x0400)','line_number':1429,'multiline':False]
['text':' defined(BOOST_ASIO_WINDOWS) || defined(__CYGWIN__)','line_number':1430,'multiline':False]
['text':' !defined(BOOST_ASIO_HAS_IOCP)','line_number':1431,'multiline':False]
['text':' On POSIX (and POSIX-like) platforms we need to include unistd.h in order to','line_number':1433,'multiline':False]
['text':' get access to the various platform feature macros, e.g. to be able to test','line_number':1434,'multiline':False]
['text':' for threads support.','line_number':1435,'multiline':False]
['text':' !defined(BOOST_ASIO_HAS_BOOST_CONFIG)','line_number':1450,'multiline':False]
['text':' !defined(BOOST_ASIO_HAS_UNISTD_H)','line_number':1451,'multiline':False]
['text':' defined(BOOST_ASIO_HAS_UNISTD_H)','line_number':1454,'multiline':False]
['text':' Linux: epoll, eventfd and timerfd.','line_number':1456,'multiline':False]
['text':' LINUX_VERSION_CODE >= KERNEL_VERSION(2,5,45)','line_number':1463,'multiline':False]
['text':' !defined(BOOST_ASIO_DISABLE_EPOLL)','line_number':1464,'multiline':False]
['text':' !defined(BOOST_ASIO_HAS_EPOLL)','line_number':1465,'multiline':False]
['text':' LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,22)','line_number':1470,'multiline':False]
['text':' !defined(BOOST_ASIO_DISABLE_EVENTFD)','line_number':1471,'multiline':False]
['text':' !defined(BOOST_ASIO_HAS_EVENTFD)','line_number':1472,'multiline':False]
['text':' (__GLIBC__ > 2) || (__GLIBC__ == 2 && __GLIBC_MINOR__ >= 8)','line_number':1477,'multiline':False]
['text':' defined(BOOST_ASIO_HAS_EPOLL)','line_number':1478,'multiline':False]
['text':' !defined(BOOST_ASIO_HAS_TIMERFD)','line_number':1479,'multiline':False]
['text':' defined(__linux__)','line_number':1480,'multiline':False]
['text':' Linux: io_uring is used instead of epoll.','line_number':1482,'multiline':False]
['text':' !defined(BOOST_ASIO_HAS_EPOLL) && defined(BOOST_ASIO_HAS_IO_URING)','line_number':1486,'multiline':False]
['text':' !defined(BOOST_ASIO_HAS_IO_URING_AS_DEFAULT)','line_number':1487,'multiline':False]
['text':' Mac OS X, FreeBSD, NetBSD, OpenBSD: kqueue.','line_number':1489,'multiline':False]
['text':' !defined(BOOST_ASIO_DISABLE_KQUEUE)','line_number':1497,'multiline':False]
['text':' !defined(BOOST_ASIO_HAS_KQUEUE)','line_number':1498,'multiline':False]
['text':' (defined(__MACH__) && defined(__APPLE__))','line_number':1499,'multiline':False]
['text':'   || defined(__FreeBSD__)','line_number':1500,'multiline':False]
['text':'   || defined(__NetBSD__)','line_number':1501,'multiline':False]
['text':'   || defined(__OpenBSD__)','line_number':1502,'multiline':False]
['text':' Solaris: /dev/poll.','line_number':1504,'multiline':False]
['text':' !defined(BOOST_ASIO_DISABLE_DEV_POLL)','line_number':1509,'multiline':False]
['text':' !defined(BOOST_ASIO_HAS_DEV_POLL)','line_number':1510,'multiline':False]
['text':' defined(__sun)','line_number':1511,'multiline':False]
['text':' Serial ports.','line_number':1513,'multiline':False]
['text':' !defined(BOOST_ASIO_DISABLE_SERIAL_PORT)','line_number':1522,'multiline':False]
['text':' !defined(__SYMBIAN32__)','line_number':1523,'multiline':False]
['text':' defined(BOOST_ASIO_HAS_IOCP)','line_number':1524,'multiline':False]
['text':'   || !defined(BOOST_ASIO_WINDOWS)','line_number':1525,'multiline':False]
['text':'   && !defined(BOOST_ASIO_WINDOWS_RUNTIME)','line_number':1526,'multiline':False]
['text':'   && !defined(__CYGWIN__)','line_number':1527,'multiline':False]
['text':' !defined(BOOST_ASIO_HAS_SERIAL_PORT)','line_number':1528,'multiline':False]
['text':' Windows: stream handles.','line_number':1530,'multiline':False]
['text':' defined(BOOST_ASIO_HAS_IOCP)','line_number':1535,'multiline':False]
['text':' !defined(BOOST_ASIO_DISABLE_WINDOWS_STREAM_HANDLE)','line_number':1536,'multiline':False]
['text':' !defined(BOOST_ASIO_HAS_WINDOWS_STREAM_HANDLE)','line_number':1537,'multiline':False]
['text':' Windows: random access handles.','line_number':1539,'multiline':False]
['text':' defined(BOOST_ASIO_HAS_IOCP)','line_number':1544,'multiline':False]
['text':' !defined(BOOST_ASIO_DISABLE_WINDOWS_RANDOM_ACCESS_HANDLE)','line_number':1545,'multiline':False]
['text':' !defined(BOOST_ASIO_HAS_WINDOWS_RANDOM_ACCESS_HANDLE)','line_number':1546,'multiline':False]
['text':' Windows: object handles.','line_number':1548,'multiline':False]
['text':' !defined(UNDER_CE) && !defined(BOOST_ASIO_WINDOWS_APP)','line_number':1554,'multiline':False]
['text':' defined(BOOST_ASIO_WINDOWS) || defined(__CYGWIN__)','line_number':1555,'multiline':False]
['text':' !defined(BOOST_ASIO_DISABLE_WINDOWS_OBJECT_HANDLE)','line_number':1556,'multiline':False]
['text':' !defined(BOOST_ASIO_HAS_WINDOWS_OBJECT_HANDLE)','line_number':1557,'multiline':False]
['text':' Windows: OVERLAPPED wrapper.','line_number':1559,'multiline':False]
['text':' defined(BOOST_ASIO_HAS_IOCP)','line_number':1564,'multiline':False]
['text':' !defined(BOOST_ASIO_DISABLE_WINDOWS_OVERLAPPED_PTR)','line_number':1565,'multiline':False]
['text':' !defined(BOOST_ASIO_HAS_WINDOWS_OVERLAPPED_PTR)','line_number':1566,'multiline':False]
['text':' POSIX: stream-oriented file descriptors.','line_number':1568,'multiline':False]
['text':' !defined(BOOST_ASIO_WINDOWS)','line_number':1575,'multiline':False]
['text':'   && !defined(BOOST_ASIO_WINDOWS_RUNTIME)','line_number':1576,'multiline':False]
['text':'   && !defined(__CYGWIN__)','line_number':1577,'multiline':False]
['text':' !defined(BOOST_ASIO_DISABLE_POSIX_STREAM_DESCRIPTOR)','line_number':1578,'multiline':False]
['text':' !defined(BOOST_ASIO_HAS_POSIX_STREAM_DESCRIPTOR)','line_number':1579,'multiline':False]
['text':' UNIX domain sockets.','line_number':1581,'multiline':False]
['text':' !defined(BOOST_ASIO_WINDOWS_RUNTIME)','line_number':1586,'multiline':False]
['text':' !defined(BOOST_ASIO_DISABLE_LOCAL_SOCKETS)','line_number':1587,'multiline':False]
['text':' !defined(BOOST_ASIO_HAS_LOCAL_SOCKETS)','line_number':1588,'multiline':False]
['text':' Files.','line_number':1590,'multiline':False]
['text':' defined(BOOST_ASIO_HAS_IO_URING)','line_number':1597,'multiline':False]
['text':' !defined(BOOST_ASIO_DISABLE_FILE)','line_number':1598,'multiline':False]
['text':' !defined(BOOST_ASIO_HAS_FILE)','line_number':1599,'multiline':False]
['text':' Pipes.','line_number':1601,'multiline':False]
['text':' !defined(BOOST_ASIO_DISABLE_PIPE)','line_number':1610,'multiline':False]
['text':' !defined(__SYMBIAN32__)','line_number':1611,'multiline':False]
['text':' defined(BOOST_ASIO_HAS_IOCP)','line_number':1612,'multiline':False]
['text':'   || !defined(BOOST_ASIO_WINDOWS)','line_number':1613,'multiline':False]
['text':'   && !defined(BOOST_ASIO_WINDOWS_RUNTIME)','line_number':1614,'multiline':False]
['text':'   && !defined(__CYGWIN__)','line_number':1615,'multiline':False]
['text':' !defined(BOOST_ASIO_HAS_PIPE)','line_number':1616,'multiline':False]
['text':' Can use sigaction() instead of signal().','line_number':1618,'multiline':False]
['text':' !defined(BOOST_ASIO_WINDOWS)','line_number':1625,'multiline':False]
['text':'   && !defined(BOOST_ASIO_WINDOWS_RUNTIME)','line_number':1626,'multiline':False]
['text':'   && !defined(__CYGWIN__)','line_number':1627,'multiline':False]
['text':' !defined(BOOST_ASIO_DISABLE_SIGACTION)','line_number':1628,'multiline':False]
['text':' !defined(BOOST_ASIO_HAS_SIGACTION)','line_number':1629,'multiline':False]
['text':' Can use signal().','line_number':1631,'multiline':False]
['text':' !defined(UNDER_CE)','line_number':1636,'multiline':False]
['text':' !defined(BOOST_ASIO_DISABLE_SIGNAL)','line_number':1637,'multiline':False]
['text':' !defined(BOOST_ASIO_HAS_SIGNAL)','line_number':1638,'multiline':False]
['text':' Can use getaddrinfo() and getnameinfo().','line_number':1640,'multiline':False]
['text':' defined(UNDER_CE)','line_number':1648,'multiline':False]
['text':' (__MAC_OS_X_VERSION_MIN_REQUIRED >= 1050)','line_number':1653,'multiline':False]
['text':' defined(__MAC_OS_X_VERSION_MIN_REQUIRED)','line_number':1654,'multiline':False]
['text':' defined(__MAC_OS_X_VERSION_MIN_REQUIRED)','line_number':1656,'multiline':False]
['text':' defined(__MACH__) && defined(__APPLE__)','line_number':1657,'multiline':False]
['text':' defined(__MACH__) && defined(__APPLE__)','line_number':1659,'multiline':False]
['text':' !defined(BOOST_ASIO_DISABLE_GETADDRINFO)','line_number':1660,'multiline':False]
['text':' !defined(BOOST_ASIO_HAS_GETADDRINFO)','line_number':1661,'multiline':False]
['text':' Whether standard iostreams are disabled.','line_number':1663,'multiline':False]
['text':' !defined(BOOST_NO_IOSTREAM)','line_number':1667,'multiline':False]
['text':' !defined(BOOST_ASIO_NO_IOSTREAM)','line_number':1668,'multiline':False]
['text':' Whether exception handling is disabled.','line_number':1670,'multiline':False]
['text':' !defined(BOOST_NO_EXCEPTIONS)','line_number':1674,'multiline':False]
['text':' !defined(BOOST_ASIO_NO_EXCEPTIONS)','line_number':1675,'multiline':False]
['text':' Whether the typeid operator is supported.','line_number':1677,'multiline':False]
['text':' !defined(BOOST_NO_TYPEID)','line_number':1681,'multiline':False]
['text':' !defined(BOOST_ASIO_NO_TYPEID)','line_number':1682,'multiline':False]
['text':' Threads.','line_number':1684,'multiline':False]
['text':' defined(BOOST_ASIO_HAS_BOOST_CONFIG) && defined(BOOST_HAS_THREADS)','line_number':1704,'multiline':False]
['text':' !defined(BOOST_ASIO_DISABLE_THREADS)','line_number':1705,'multiline':False]
['text':' !defined(BOOST_ASIO_HAS_THREADS)','line_number':1706,'multiline':False]
['text':' POSIX threads.','line_number':1708,'multiline':False]
['text':' defined(BOOST_ASIO_HAS_BOOST_CONFIG) && defined(BOOST_HAS_PTHREADS)','line_number':1717,'multiline':False]
['text':' defined(BOOST_ASIO_HAS_THREADS)','line_number':1718,'multiline':False]
['text':' !defined(BOOST_ASIO_HAS_PTHREADS)','line_number':1719,'multiline':False]
['text':' Helper to prevent macro expansion.','line_number':1721,'multiline':False]
['text':' Helper to define in-class constants.','line_number':1724,'multiline':False]
['text':' !defined(BOOST_ASIO_DISABLE_BOOST_STATIC_CONSTANT)','line_number':1729,'multiline':False]
['text':' !defined(BOOST_ASIO_DISABLE_BOOST_STATIC_CONSTANT)','line_number':1732,'multiline':False]
['text':' !defined(BOOST_ASIO_STATIC_CONSTANT)','line_number':1733,'multiline':False]
['text':' Boost align library.','line_number':1735,'multiline':False]
['text':' defined(BOOST_ASIO_HAS_BOOST_CONFIG) && (BOOST_VERSION >= 105600)','line_number':1740,'multiline':False]
['text':' !defined(BOOST_ASIO_DISABLE_BOOST_ALIGN)','line_number':1741,'multiline':False]
['text':' !defined(BOOST_ASIO_HAS_BOOST_ALIGN)','line_number':1742,'multiline':False]
['text':' Boost array library.','line_number':1744,'multiline':False]
['text':' !defined(BOOST_ASIO_DISABLE_BOOST_ARRAY)','line_number':1748,'multiline':False]
['text':' !defined(BOOST_ASIO_HAS_BOOST_ARRAY)','line_number':1749,'multiline':False]
['text':' Boost assert macro.','line_number':1751,'multiline':False]
['text':' !defined(BOOST_ASIO_DISABLE_BOOST_ASSERT)','line_number':1755,'multiline':False]
['text':' !defined(BOOST_ASIO_HAS_BOOST_ASSERT)','line_number':1756,'multiline':False]
['text':' Boost limits header.','line_number':1758,'multiline':False]
['text':' !defined(BOOST_ASIO_DISABLE_BOOST_LIMITS)','line_number':1762,'multiline':False]
['text':' !defined(BOOST_ASIO_HAS_BOOST_LIMITS)','line_number':1763,'multiline':False]
['text':' Boost throw_exception function.','line_number':1765,'multiline':False]
['text':' !defined(BOOST_ASIO_DISABLE_BOOST_THROW_EXCEPTION)','line_number':1769,'multiline':False]
['text':' !defined(BOOST_ASIO_HAS_BOOST_THROW_EXCEPTION)','line_number':1770,'multiline':False]
['text':' Boost regex library.','line_number':1772,'multiline':False]
['text':' !defined(BOOST_ASIO_DISABLE_BOOST_REGEX)','line_number':1776,'multiline':False]
['text':' !defined(BOOST_ASIO_HAS_BOOST_REGEX)','line_number':1777,'multiline':False]
['text':' Boost bind function.','line_number':1779,'multiline':False]
['text':' !defined(BOOST_ASIO_DISABLE_BOOST_BIND)','line_number':1783,'multiline':False]
['text':' !defined(BOOST_ASIO_HAS_BOOST_BIND)','line_number':1784,'multiline':False]
['text':' Boost's BOOST_WORKAROUND macro.','line_number':1786,'multiline':False]
['text':' !defined(BOOST_ASIO_DISABLE_BOOST_WORKAROUND)','line_number':1790,'multiline':False]
['text':' !defined(BOOST_ASIO_HAS_BOOST_WORKAROUND)','line_number':1791,'multiline':False]
['text':' Microsoft Visual C++'s secure C runtime library.','line_number':1793,'multiline':False]
['text':' defined(BOOST_ASIO_MSVC)','line_number':1800,'multiline':False]
['text':' && (BOOST_ASIO_MSVC >= 1400)','line_number':1801,'multiline':False]
['text':' && !defined(UNDER_CE)','line_number':1802,'multiline':False]
['text':' !defined(BOOST_ASIO_DISABLE_SECURE_RTL)','line_number':1803,'multiline':False]
['text':' !defined(BOOST_ASIO_HAS_SECURE_RTL)','line_number':1804,'multiline':False]
['text':' Handler hooking. Disabled for ancient Borland C++ and gcc compilers.','line_number':1806,'multiline':False]
['text':' (__GNUC__ >= 3)','line_number':1812,'multiline':False]
['text':' !defined(__BORLANDC__) || defined(__clang__)','line_number':1815,'multiline':False]
['text':' !defined(BOOST_ASIO_DISABLE_HANDLER_HOOKS)','line_number':1816,'multiline':False]
['text':' !defined(BOOST_ASIO_HAS_HANDLER_HOOKS)','line_number':1817,'multiline':False]
['text':' Support for the __thread keyword extension.','line_number':1819,'multiline':False]
['text':' defined(__INTEL_COMPILER) && (__INTEL_COMPILER >= 1100)','line_number':1830,'multiline':False]
['text':' && !(defined(__clang__) && defined(__ANDROID__))','line_number':1831,'multiline':False]
['text':' ((__GNUC__ == 3) && (__GNUC_MINOR__ >= 3)) || (__GNUC__ > 3)','line_number':1832,'multiline':False]
['text':' defined(__GNUC__) && (defined(__i386__) || defined(__x86_64__))','line_number':1833,'multiline':False]
['text':' defined(__linux__)','line_number':1834,'multiline':False]
['text':' (_MSC_VER >= 1700)','line_number':1839,'multiline':False]
['text':' defined(BOOST_ASIO_MSVC) && defined(BOOST_ASIO_WINDOWS_RUNTIME)','line_number':1840,'multiline':False]
['text':' !defined(BOOST_ASIO_DISABLE_THREAD_KEYWORD_EXTENSION)','line_number':1841,'multiline':False]
['text':' !defined(BOOST_ASIO_THREAD_KEYWORD)','line_number':1844,'multiline':False]
['text':' Support for POSIX ssize_t typedef.','line_number':1846,'multiline':False]
['text':' defined(__linux__)','line_number':1851,'multiline':False]
['text':'   || (defined(__MACH__) && defined(__APPLE__))','line_number':1852,'multiline':False]
['text':' !defined(BOOST_ASIO_DISABLE_SSIZE_T)','line_number':1853,'multiline':False]
['text':' Helper macros to manage transition away from error_code return values.','line_number':1855,'multiline':False]
['text':' defined(BOOST_ASIO_NO_DEPRECATED)','line_number':1859,'multiline':False]
['text':' defined(BOOST_ASIO_NO_DEPRECATED)','line_number':1862,'multiline':False]
['text':' Newer gcc, clang need special treatment to suppress unused typedef warnings.','line_number':1864,'multiline':False]
['text':' (__clang_major__ >= 7)','line_number':1869,'multiline':False]
['text':' ((__clang_major__ == 3) && (__clang_minor__ >= 6))','line_number':1873,'multiline':False]
['text':'   || (__clang_major__ > 3)','line_number':1874,'multiline':False]
['text':' ((__GNUC__ == 4) && (__GNUC_MINOR__ >= 8)) || (__GNUC__ > 4)','line_number':1878,'multiline':False]
['text':' defined(__GNUC__)','line_number':1879,'multiline':False]
['text':' !defined(BOOST_ASIO_UNUSED_TYPEDEF)','line_number':1882,'multiline':False]
['text':' Some versions of gcc generate spurious warnings about unused variables.','line_number':1884,'multiline':False]
['text':' (__GNUC__ >= 4)','line_number':1888,'multiline':False]
['text':' defined(__GNUC__)','line_number':1889,'multiline':False]
['text':' !defined(BOOST_ASIO_UNUSED_VARIABLE)','line_number':1892,'multiline':False]
['text':' Support the co_await keyword on compilers known to allow it.','line_number':1894,'multiline':False]
['text':' defined(_RESUMABLE_FUNCTIONS_SUPPORTED)','line_number':1903,'multiline':False]
['text':' (_MSC_FULL_VER >= 190023506)','line_number':1904,'multiline':False]
['text':' __has_include(<experimental/coroutine>)','line_number':1909,'multiline':False]
['text':' (__cplusplus >= 201703) && (__cpp_coroutines >= 201703)','line_number':1910,'multiline':False]
['text':' __has_include(<coroutine>)','line_number':1915,'multiline':False]
['text':' (__cplusplus >= 201709) && (__cpp_impl_coroutine >= 201902)','line_number':1916,'multiline':False]
['text':' defined(__GNUC__)','line_number':1917,'multiline':False]
['text':' !defined(BOOST_ASIO_DISABLE_CO_AWAIT)','line_number':1918,'multiline':False]
['text':' !defined(BOOST_ASIO_HAS_CO_AWAIT)','line_number':1919,'multiline':False]
['text':' Standard library support for coroutines.','line_number':1921,'multiline':False]
['text':' (_MSC_VER >= 1928) && (_MSVC_LANG >= 201705)','line_number':1927,'multiline':False]
['text':' defined(BOOST_ASIO_MSVC)','line_number':1928,'multiline':False]
['text':' __has_include(<coroutine>)','line_number':1933,'multiline':False]
['text':' (__cplusplus >= 201709) && (__cpp_impl_coroutine >= 201902)','line_number':1934,'multiline':False]
['text':' defined(__GNUC__)','line_number':1935,'multiline':False]
['text':' !defined(BOOST_ASIO_DISABLE_STD_COROUTINE)','line_number':1936,'multiline':False]
['text':' !defined(BOOST_ASIO_HAS_STD_COROUTINE)','line_number':1937,'multiline':False]
['text':' Compiler support for the the [[nodiscard]] attribute.','line_number':1939,'multiline':False]
['text':' (__cplusplus >= 201703)','line_number':1945,'multiline':False]
['text':' __has_cpp_attribute(nodiscard)','line_number':1946,'multiline':False]
['text':' defined(__has_cpp_attribute)','line_number':1947,'multiline':False]
['text':' !defined(BOOST_ASIO_NODISCARD)','line_number':1948,'multiline':False]
['text':' !defined(BOOST_ASIO_NODISCARD)','line_number':1951,'multiline':False]
['text':' Kernel support for MSG_NOSIGNAL.','line_number':1953,'multiline':False]
['text':' _POSIX_VERSION >= 200809L','line_number':1960,'multiline':False]
['text':' defined(_POSIX_VERSION)','line_number':1961,'multiline':False]
['text':' !defined(BOOST_ASIO_HAS_MSG_NOSIGNAL)','line_number':1962,'multiline':False]
['text':' Standard library support for std::hash.','line_number':1964,'multiline':False]
['text':' (__cplusplus >= 201103)','line_number':1972,'multiline':False]
['text':' (__cplusplus >= 201103) || defined(__GXX_EXPERIMENTAL_CXX0X__)','line_number':1977,'multiline':False]
['text':' ((__GNUC__ == 4) && (__GNUC_MINOR__ >= 7)) || (__GNUC__ > 4)','line_number':1978,'multiline':False]
['text':' defined(__GNUC__)','line_number':1979,'multiline':False]
['text':' (_MSC_VER >= 1700)','line_number':1983,'multiline':False]
['text':' defined(BOOST_ASIO_MSVC)','line_number':1984,'multiline':False]
['text':' !defined(BOOST_ASIO_DISABLE_STD_HASH)','line_number':1985,'multiline':False]
['text':' !defined(BOOST_ASIO_HAS_STD_HASH)','line_number':1986,'multiline':False]
['text':' BOOST_ASIO_DETAIL_CONFIG_HPP','line_number':1988,'multiline':False]
