['text':'','line_number':1,'multiline':False]
['text':' impl/thread_pool.hpp','line_number':2,'multiline':False]
['text':' ~~~~~~~~~~~~~~~~~~~~','line_number':3,'multiline':False]
['text':'','line_number':4,'multiline':False]
['text':' Copyright (c) 2003-2022 Christopher M. Kohlhoff (chris at kohlhoff dot com)','line_number':5,'multiline':False]
['text':'','line_number':6,'multiline':False]
['text':' Distributed under the Boost Software License, Version 1.0. (See accompanying','line_number':7,'multiline':False]
['text':' file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)','line_number':8,'multiline':False]
['text':'','line_number':9,'multiline':False]
['text':' defined(_MSC_VER) && (_MSC_VER >= 1200)','line_number':16,'multiline':False]
['text':' defined(BOOST_ASIO_HAS_MOVE)','line_number':92,'multiline':False]
['text':' Invoke immediately if the blocking.possibly property is enabled and we are','line_number':108,'multiline':False]
['text':' already inside the thread pool.','line_number':109,'multiline':False]
['text':' Make a local, non-const copy of the function.','line_number':112,'multiline':False]
['text':' defined(BOOST_ASIO_HAS_STD_EXCEPTION_PTR)','line_number':119,'multiline':False]
['text':'   && !defined(BOOST_ASIO_NO_EXCEPTIONS)','line_number':120,'multiline':False]
['text':' defined(BOOST_ASIO_HAS_STD_EXCEPTION_PTR)','line_number':132,'multiline':False]
['text':'   && !defined(BOOST_ASIO_NO_EXCEPTIONS)','line_number':133,'multiline':False]
['text':' Allocate and construct an operation to wrap the function.','line_number':136,'multiline':False]
['text':' Obtain a non-const instance of the function.','line_number':163,'multiline':False]
['text':' Invoke immediately if we are already inside the thread pool.','line_number':166,'multiline':False]
['text':' !defined(BOOST_ASIO_NO_EXCEPTIONS)','line_number':172,'multiline':False]
['text':' !defined(BOOST_ASIO_NO_EXCEPTIONS)','line_number':182,'multiline':False]
['text':' Construct an operation to wrap the function.','line_number':185,'multiline':False]
['text':' Allocate and construct operations to wrap the function.','line_number':204,'multiline':False]
['text':' Obtain a non-const instance of the function.','line_number':251,'multiline':False]
['text':' Invoke immediately if we are already inside the thread pool.','line_number':289,'multiline':False]
['text':' Make a local, non-const copy of the function.','line_number':292,'multiline':False]
['text':' Allocate and construct an operation to wrap the function.','line_number':300,'multiline':False]
['text':' Allocate and construct an operation to wrap the function.','line_number':319,'multiline':False]
['text':' Allocate and construct an operation to wrap the function.','line_number':338,'multiline':False]
['text':' !defined(BOOST_ASIO_NO_TS_EXECUTORS)','line_number':349,'multiline':False]
['text':' namespace asio','line_number':351,'multiline':False]
['text':' namespace boost','line_number':352,'multiline':False]
['text':' BOOST_ASIO_IMPL_THREAD_POOL_HPP','line_number':356,'multiline':False]
