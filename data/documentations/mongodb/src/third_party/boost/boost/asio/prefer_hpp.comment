['text':'','line_number':1,'multiline':False]
['text':' prefer.hpp','line_number':2,'multiline':False]
['text':' ~~~~~~~~~~','line_number':3,'multiline':False]
['text':'','line_number':4,'multiline':False]
['text':' Copyright (c) 2003-2022 Christopher M. Kohlhoff (chris at kohlhoff dot com)','line_number':5,'multiline':False]
['text':'','line_number':6,'multiline':False]
['text':' Distributed under the Boost Software License, Version 1.0. (See accompanying','line_number':7,'multiline':False]
['text':' file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)','line_number':8,'multiline':False]
['text':'','line_number':9,'multiline':False]
['text':' defined(_MSC_VER) && (_MSC_VER >= 1200)','line_number':16,'multiline':False]
['text':'/ A customisation point that attempts to apply a property to an object.','line_number':34,'multiline':False]
['text':'*
 * The name <tt>prefer</tt> denotes a customisation point object. The
 * expression <tt>boost::asio::prefer(E, P0, Pn...)</tt> for some subexpressions
 * <tt>E</tt> and <tt>P0</tt>, and where <tt>Pn...</tt> represents <tt>N</tt>
 * subexpressions (where <tt>N</tt> is 0 or more, and with types <tt>T =
 * decay_t<decltype(E)></tt> and <tt>Prop0 = decay_t<decltype(P0)></tt>) is
 * expression-equivalent to:
 *
 * @li If <tt>is_applicable_property_v<T, Prop0> && Prop0::is_preferable</tt> is
 *   not a well-formed constant expression with value <tt>true</tt>,
 *   <tt>boost::asio::prefer(E, P0, Pn...)</tt> is ill-formed.
 *
 * @li Otherwise, <tt>E</tt> if <tt>N == 0</tt> and the expression
 *   <tt>Prop0::template static_query_v<T> == Prop0::value()</tt> is a
 *   well-formed constant expression with value <tt>true</tt>.
 *
 * @li Otherwise, <tt>(E).require(P0)</tt> if <tt>N == 0</tt> and the expression
 *   <tt>(E).require(P0)</tt> is a valid expression.
 *
 * @li Otherwise, <tt>require(E, P0)</tt> if <tt>N == 0</tt> and the expression
 *   <tt>require(E, P0)</tt> is a valid expression with overload resolution
 *   performed in a context that does not include the declaration of the
 *   <tt>require</tt> customization point object.
 *
 * @li Otherwise, <tt>(E).prefer(P0)</tt> if <tt>N == 0</tt> and the expression
 *   <tt>(E).prefer(P0)</tt> is a valid expression.
 *
 * @li Otherwise, <tt>prefer(E, P0)</tt> if <tt>N == 0</tt> and the expression
 *   <tt>prefer(E, P0)</tt> is a valid expression with overload resolution
 *   performed in a context that does not include the declaration of the
 *   <tt>prefer</tt> customization point object.
 *
 * @li Otherwise, <tt>E</tt> if <tt>N == 0</tt>.
 *
 * @li Otherwise,
 *   <tt>boost::asio::prefer(boost::asio::prefer(E, P0), Pn...)</tt>
 *   if <tt>N > 0</tt> and the expression
 *   <tt>boost::asio::prefer(boost::asio::prefer(E, P0), Pn...)</tt>
 *   is a valid expression.
 *
 * @li Otherwise, <tt>boost::asio::prefer(E, P0, Pn...)</tt> is ill-formed.
 ','line_number':35,'multiline':True]
['text':'/ A type trait that determines whether a @c prefer expression is well-formed.','line_number':79,'multiline':False]
['text':'*
 * Class template @c can_prefer is a trait that is derived from
 * @c true_type if the expression <tt>boost::asio::prefer(std::declval<T>(),
 * std::declval<Properties>()...)</tt> is well formed; otherwise @c false_type.
 ','line_number':80,'multiline':True]
['text':'/ A type trait that determines whether a @c prefer expression will not throw.','line_number':91,'multiline':False]
['text':'*
 * Class template @c is_nothrow_prefer is a trait that is derived from
 * @c true_type if the expression <tt>boost::asio::prefer(std::declval<T>(),
 * std::declval<Properties>()...)</tt> is @c noexcept; otherwise @c false_type.
 ','line_number':92,'multiline':True]
['text':'/ A type trait that determines the result type of a @c prefer expression.','line_number':103,'multiline':False]
['text':'*
 * Class template @c prefer_result is a trait that determines the result
 * type of the expression <tt>boost::asio::prefer(std::declval<T>(),
 * std::declval<Properties>()...)</tt>.
 ','line_number':104,'multiline':True]
['text':'/ The result of the @c prefer expression.','line_number':112,'multiline':False]
['text':' namespace asio','line_number':116,'multiline':False]
['text':' namespace boost','line_number':117,'multiline':False]
['text':' defined(GENERATING_DOCUMENTATION)','line_number':119,'multiline':False]
['text':' defined(BOOST_ASIO_HAS_MOVE)','line_number':179,'multiline':False]
['text':' defined(BOOST_ASIO_HAS_MOVE)','line_number':181,'multiline':False]
['text':' defined(BOOST_ASIO_HAS_MOVE)','line_number':322,'multiline':False]
['text':' defined(BOOST_ASIO_HAS_MOVE)','line_number':324,'multiline':False]
['text':' defined(BOOST_ASIO_HAS_DEDUCED_REQUIRE_MEMBER_TRAIT)','line_number':433,'multiline':False]
['text':'   && defined(BOOST_ASIO_HAS_DEDUCED_PREFER_MEMBER_TRAIT)','line_number':434,'multiline':False]
['text':' defined(BOOST_ASIO_HAS_DEDUCED_REQUIRE_MEMBER_TRAIT)','line_number':436,'multiline':False]
['text':'   && defined(BOOST_ASIO_HAS_DEDUCED_PREFER_MEMBER_TRAIT)','line_number':437,'multiline':False]
['text':' namespace boost_asio_prefer_fn','line_number':569,'multiline':False]
['text':' namespace','line_number':577,'multiline':False]
['text':' defined(BOOST_ASIO_HAS_VARIADIC_TEMPLATES)','line_number':592,'multiline':False]
['text':' defined(BOOST_ASIO_HAS_VARIADIC_TEMPLATES)','line_number':628,'multiline':False]
['text':' defined(BOOST_ASIO_HAS_VARIABLE_TEMPLATES)','line_number':636,'multiline':False]
['text':' defined(BOOST_ASIO_HAS_VARIADIC_TEMPLATES)','line_number':648,'multiline':False]
['text':' defined(BOOST_ASIO_HAS_VARIADIC_TEMPLATES)','line_number':681,'multiline':False]
['text':' defined(BOOST_ASIO_HAS_VARIABLE_TEMPLATES)','line_number':689,'multiline':False]
['text':' defined(BOOST_ASIO_HAS_VARIADIC_TEMPLATES)','line_number':700,'multiline':False]
['text':' defined(BOOST_ASIO_HAS_VARIADIC_TEMPLATES)','line_number':729,'multiline':False]
['text':' namespace asio','line_number':731,'multiline':False]
['text':' namespace boost','line_number':732,'multiline':False]
['text':' defined(GENERATING_DOCUMENTATION)','line_number':734,'multiline':False]
['text':' BOOST_ASIO_PREFER_HPP','line_number':738,'multiline':False]
