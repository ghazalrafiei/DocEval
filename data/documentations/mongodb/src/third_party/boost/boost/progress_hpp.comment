['text':'  boost progress.hpp header file  ------------------------------------------//','line_number':1,'multiline':False]
['text':'  Copyright Beman Dawes 1994-99.  Distributed under the Boost','line_number':3,'multiline':False]
['text':'  Software License, Version 1.0. (See accompanying file','line_number':4,'multiline':False]
['text':'  LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)','line_number':5,'multiline':False]
['text':'  See http://www.boost.org/libs/timer for documentation.','line_number':7,'multiline':False]
['text':'  Revision History','line_number':9,'multiline':False]
['text':'   1 Dec 01  Add leading progress display strings (suggested by Toon Knapen)','line_number':10,'multiline':False]
['text':'  20 May 01  Introduce several static_casts<> to eliminate warning messages','line_number':11,'multiline':False]
['text':'             (Fixed by Beman, reported by Herve Bronnimann)','line_number':12,'multiline':False]
['text':'  12 Jan 01  Change to inline implementation to allow use without library','line_number':13,'multiline':False]
['text':'             builds. See docs for more rationale. (Beman Dawes) ','line_number':14,'multiline':False]
['text':'  22 Jul 99  Name changed to .hpp','line_number':15,'multiline':False]
['text':'  16 Jul 99  Second beta','line_number':16,'multiline':False]
['text':'   6 Jul 99  Initial boost version','line_number':17,'multiline':False]
['text':' for uintmax_t','line_number':27,'multiline':False]
['text':' for ostream, cout, etc','line_number':28,'multiline':False]
['text':' for string','line_number':29,'multiline':False]
['text':'  progress_timer  ----------------------------------------------------------//','line_number':33,'multiline':False]
['text':'  A progress_timer behaves like a timer except that the destructor displays','line_number':35,'multiline':False]
['text':'  an elapsed time message at an appropriate place in an appropriate form.','line_number':36,'multiline':False]
['text':' os is hint; implementation may ignore, particularly in embedded systems','line_number':43,'multiline':False]
['text':'  A) Throwing an exception from a destructor is a Bad Thing.','line_number':47,'multiline':False]
['text':'  B) The progress_timer destructor does output which may throw.','line_number':48,'multiline':False]
['text':'  C) A progress_timer is usually not critical to the application.','line_number':49,'multiline':False]
['text':'  Therefore, wrap the I/O in a try block, catch and ignore all exceptions.','line_number':50,'multiline':False]
['text':' use istream instead of ios_base to workaround GNU problem (Greg Chicares)','line_number':53,'multiline':False]
['text':' "s" is System International d'Unites std','line_number':57,'multiline':False]
['text':' eat any exceptions','line_number':63,'multiline':False]
['text':' ~progress_timer','line_number':64,'multiline':False]
['text':'  progress_display  --------------------------------------------------------//','line_number':71,'multiline':False]
['text':'  progress_display displays an appropriate indication of ','line_number':73,'multiline':False]
['text':'  progress at an appropriate place in an appropriate form.','line_number':74,'multiline':False]
['text':' NOTE: (Jan 12, 2001) Tried to change unsigned long to boost::uintmax_t, but','line_number':76,'multiline':False]
['text':' found some compilers couldn't handle the required conversion to double.','line_number':77,'multiline':False]
['text':' Reverted to unsigned long until the compilers catch up. ','line_number':78,'multiline':False]
['text':'leading strings','line_number':85,'multiline':False]
['text':' os is hint; implementation may ignore, particularly in embedded systems','line_number':88,'multiline':False]
['text':'  Effects: display appropriate scale','line_number':92,'multiline':False]
['text':'  Postconditions: count()==0, expected_count()==expected_count_','line_number':93,'multiline':False]
['text':' endl implies flush, which ensures display','line_number':100,'multiline':False]
['text':' prevent divide by zero','line_number':102,'multiline':False]
['text':' restart','line_number':103,'multiline':False]
['text':'  Effects: Display appropriate progress tic if needed.','line_number':106,'multiline':False]
['text':'  Postconditions: count()== original count() + increment','line_number':107,'multiline':False]
['text':'  Returns: count().','line_number':108,'multiline':False]
['text':' may not be present in all imps','line_number':119,'multiline':False]
['text':' string is more general, safer than ','line_number':120,'multiline':False]
['text':'  const char *, and efficiency or size are','line_number':121,'multiline':False]
['text':'  not issues','line_number':122,'multiline':False]
['text':' use of floating point ensures that both large and small counts','line_number':128,'multiline':False]
['text':' work correctly.  static_cast<>() is also used several places','line_number':129,'multiline':False]
['text':' to suppress spurious compiler warnings. ','line_number':130,'multiline':False]
['text':' display_tic','line_number':140,'multiline':False]
['text':' namespace boost','line_number':143,'multiline':False]
['text':' BOOST_PROGRESS_HPP','line_number':145,'multiline':False]
