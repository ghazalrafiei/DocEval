['text':'----------------------------------------------------------------------------','line_number':1,'multiline':False]
['text':'/ @file merge.hpp','line_number':2,'multiline':False]
['text':'/ @brief low level merge functions','line_number':3,'multiline':False]
['text':'/','line_number':4,'multiline':False]
['text':'/ @author Copyright (c) 2016 Francisco Jose Tapia (fjtapia@gmail.com )\n','line_number':5,'multiline':False]
['text':'/         Distributed under the Boost Software License, Version 1.0.\n','line_number':6,'multiline':False]
['text':'/         ( See accompanying file LICENSE_1_0.txt or copy at','line_number':7,'multiline':False]
['text':'/           http://www.boost.org/LICENSE_1_0.txt  )','line_number':8,'multiline':False]
['text':'/ @version 0.1','line_number':9,'multiline':False]
['text':'/','line_number':10,'multiline':False]
['text':'/ @remarks','line_number':11,'multiline':False]
['text':'-----------------------------------------------------------------------------','line_number':12,'multiline':False]
['text':'----------------------------------------------------------------------------','line_number':34,'multiline':False]
['text':'','line_number':35,'multiline':False]
['text':'           F U N C T I O N S    I N    T H E     F I L E','line_number':36,'multiline':False]
['text':'----------------------------------------------------------------------------','line_number':37,'multiline':False]
['text':'','line_number':38,'multiline':False]
['text':' template < class Iter1_t, class Iter2_t, class Compare >','line_number':39,'multiline':False]
['text':' Iter2_t merge (Iter1_t buf1, const Iter1_t end_buf1, Iter1_t buf2,','line_number':40,'multiline':False]
['text':'                const Iter1_t end_buf2, Iter2_t buf_out, Compare comp)','line_number':41,'multiline':False]
['text':'','line_number':42,'multiline':False]
['text':' template < class Iter_t, class Value_t, class Compare >','line_number':43,'multiline':False]
['text':' Value_t *merge_construct (Iter_t first1, const Iter_t last1, Iter_t first2,','line_number':44,'multiline':False]
['text':'                           const Iter_t last2, Value_t *it_out, Compare comp)','line_number':45,'multiline':False]
['text':'','line_number':46,'multiline':False]
['text':' template < class Iter1_t, class Iter2_t, class Compare >','line_number':47,'multiline':False]
['text':' Iter2_t merge_half (Iter1_t buf1, const Iter1_t end_buf1, Iter2_t buf2,','line_number':48,'multiline':False]
['text':'                     const Iter2_t end_buf2, Iter2_t buf_out, Compare comp)','line_number':49,'multiline':False]
['text':'','line_number':50,'multiline':False]
['text':' template < class Iter1_t, class Iter2_t, class Compare >','line_number':51,'multiline':False]
['text':' Iter2_t merge_half_backward (Iter1_t buf1,  Iter1_t end_buf1,','line_number':52,'multiline':False]
['text':'                              Iter2_t buf2, Iter2_t end_buf2,','line_number':53,'multiline':False]
['text':'                              Iter1_t end_buf_out, Compare comp)','line_number':54,'multiline':False]
['text':'','line_number':55,'multiline':False]
['text':' template < class Iter1_t, class Iter2_t, class Iter3_t, class Compare >','line_number':56,'multiline':False]
['text':' bool merge_uncontiguous (Iter1_t src1, const Iter1_t end_src1,','line_number':57,'multiline':False]
['text':'                          Iter2_t src2, const Iter2_t end_src2,','line_number':58,'multiline':False]
['text':'                          Iter3_t aux, Compare comp)','line_number':59,'multiline':False]
['text':'','line_number':60,'multiline':False]
['text':' template < class Iter1_t, class Iter2_t, class Compare >','line_number':61,'multiline':False]
['text':' bool merge_contiguous (Iter1_t src1, Iter1_t src2, Iter1_t end_src2,','line_number':62,'multiline':False]
['text':'                        Iter2_t buf, Compare comp)','line_number':63,'multiline':False]
['text':'','line_number':64,'multiline':False]
['text':' template < class Iter_t, class Circular ,class Compare >','line_number':65,'multiline':False]
['text':' bool merge_circular  (Iter_t buf1, Iter_t end_buf1,','line_number':66,'multiline':False]
['text':'                       Iter_t buf2, Iter_t end_buf2,','line_number':67,'multiline':False]
['text':'                       Circular &circ, Compare comp, Iter_t &it_aux)','line_number':68,'multiline':False]
['text':'','line_number':69,'multiline':False]
['text':'----------------------------------------------------------------------------','line_number':70,'multiline':False]
['text':'','line_number':71,'multiline':False]
['text':'-----------------------------------------------------------------------------','line_number':72,'multiline':False]
['text':'  function : merge','line_number':73,'multiline':False]
['text':'/ @brief Merge two contiguous buffers pointed by buf1 and buf2, and put','line_number':74,'multiline':False]
['text':'/        in the buffer pointed by buf_out','line_number':75,'multiline':False]
['text':'/','line_number':76,'multiline':False]
['text':'/ @param buf1 : iterator to the first element in the first buffer','line_number':77,'multiline':False]
['text':'/ @param end_buf1 : final iterator of first buffer','line_number':78,'multiline':False]
['text':'/ @param buf2 : iterator to the first iterator to the second buffer','line_number':79,'multiline':False]
['text':'/ @param end_buf2 : final iterator of the second buffer','line_number':80,'multiline':False]
['text':'/ @param buf_out : buffer where move the elements merged','line_number':81,'multiline':False]
['text':'/ @param comp : comparison object','line_number':82,'multiline':False]
['text':'-----------------------------------------------------------------------------','line_number':83,'multiline':False]
['text':'-------------------------------------------------------------------------','line_number':88,'multiline':False]
['text':'                       Metaprogramming','line_number':89,'multiline':False]
['text':'------------------------------------------------------------------------- ','line_number':90,'multiline':False]
['text':'-------------------------------------------------------------------------','line_number':99,'multiline':False]
['text':'                       Code','line_number':100,'multiline':False]
['text':'-------------------------------------------------------------------------','line_number':101,'multiline':False]
['text':'','line_number':132,'multiline':False]
['text':'-----------------------------------------------------------------------------','line_number':133,'multiline':False]
['text':'  function : merge_construct','line_number':134,'multiline':False]
['text':'/ @brief Merge two contiguous buffers pointed by first1 and first2, and put','line_number':135,'multiline':False]
['text':'/        in the uninitialized buffer pointed by it_out','line_number':136,'multiline':False]
['text':'/','line_number':137,'multiline':False]
['text':'/ @param first1 : iterator to the first element in the first buffer','line_number':138,'multiline':False]
['text':'/ @param last1 : last iterator of the first buffer','line_number':139,'multiline':False]
['text':'/ @param first2 : iterator to the first element to the second buffer','line_number':140,'multiline':False]
['text':'/ @param last2 : final iterator of the second buffer','line_number':141,'multiline':False]
['text':'/ @param it_out : uninitialized buffer where move the elements merged','line_number':142,'multiline':False]
['text':'/ @param comp : comparison object','line_number':143,'multiline':False]
['text':'-----------------------------------------------------------------------------','line_number':144,'multiline':False]
['text':'-------------------------------------------------------------------------','line_number':150,'multiline':False]
['text':'                       Metaprogramming','line_number':151,'multiline':False]
['text':'------------------------------------------------------------------------- ','line_number':152,'multiline':False]
['text':'-------------------------------------------------------------------------','line_number':160,'multiline':False]
['text':'                       Code','line_number':161,'multiline':False]
['text':'-------------------------------------------------------------------------','line_number':162,'multiline':False]
['text':'','line_number':193,'multiline':False]
['text':'---------------------------------------------------------------------------','line_number':194,'multiline':False]
['text':'  function : merge_half','line_number':195,'multiline':False]
['text':'/ @brief : Merge two buffers. The first buffer is in a separate memory.','line_number':196,'multiline':False]
['text':'/          The second buffer have a empty space before buf2 of the same size','line_number':197,'multiline':False]
['text':'/          than the (end_buf1 - buf1)','line_number':198,'multiline':False]
['text':'/','line_number':199,'multiline':False]
['text':'/ @param buf1 : iterator to the first element of the first buffer','line_number':200,'multiline':False]
['text':'/ @param end_buf1 : iterator to the last element of the first buffer','line_number':201,'multiline':False]
['text':'/ @param buf2 : iterator to the first element of the second buffer','line_number':202,'multiline':False]
['text':'/ @param end_buf2 : iterator to the last element of the second buffer','line_number':203,'multiline':False]
['text':'/ @param buf_out : iterator to the first element to the buffer where put','line_number':204,'multiline':False]
['text':'/                  the result','line_number':205,'multiline':False]
['text':'/ @param comp : object for Compare two elements of the type pointed','line_number':206,'multiline':False]
['text':'/                by the Iter1_t and Iter2_t','line_number':207,'multiline':False]
['text':'---------------------------------------------------------------------------','line_number':208,'multiline':False]
['text':'-------------------------------------------------------------------------','line_number':213,'multiline':False]
['text':'                         Metaprogramming','line_number':214,'multiline':False]
['text':'------------------------------------------------------------------------- ','line_number':215,'multiline':False]
['text':'-------------------------------------------------------------------------','line_number':221,'multiline':False]
['text':'                         Code','line_number':222,'multiline':False]
['text':'-------------------------------------------------------------------------','line_number':223,'multiline':False]
['text':'','line_number':254,'multiline':False]
['text':'---------------------------------------------------------------------------','line_number':255,'multiline':False]
['text':'  function : merge_half_backward','line_number':256,'multiline':False]
['text':'/ @brief : Merge two buffers. The first buffer is in a separate memory.','line_number':257,'multiline':False]
['text':'/          The second buffer have a empty space before buf2 of the same size','line_number':258,'multiline':False]
['text':'/          than the (end_buf1 - buf1)','line_number':259,'multiline':False]
['text':'/','line_number':260,'multiline':False]
['text':'/ @param buf1 : iterator to the first element of the first buffer','line_number':261,'multiline':False]
['text':'/ @param end_buf1 : iterator to the last element of the first buffer','line_number':262,'multiline':False]
['text':'/ @param buf2 : iterator to the first element of the second buffer','line_number':263,'multiline':False]
['text':'/ @param end_buf2 : iterator to the last element of the second buffer','line_number':264,'multiline':False]
['text':'/ @param buf_out : iterator to the first element to the buffer where put','line_number':265,'multiline':False]
['text':'/                  the result','line_number':266,'multiline':False]
['text':'/ @param comp : object for Compare two elements of the type pointed','line_number':267,'multiline':False]
['text':'/                by the Iter1_t and Iter2_t','line_number':268,'multiline':False]
['text':'---------------------------------------------------------------------------','line_number':269,'multiline':False]
['text':'-------------------------------------------------------------------------','line_number':275,'multiline':False]
['text':'                         Metaprogramming','line_number':276,'multiline':False]
['text':'-------------------------------------------------------------------------','line_number':277,'multiline':False]
['text':'-------------------------------------------------------------------------','line_number':283,'multiline':False]
['text':'                         Code','line_number':284,'multiline':False]
['text':'-------------------------------------------------------------------------','line_number':285,'multiline':False]
['text':'','line_number':320,'multiline':False]
['text':'-----------------------------------------------------------------------------','line_number':321,'multiline':False]
['text':'  function : merge_uncontiguous','line_number':322,'multiline':False]
['text':'/ @brief : merge two uncontiguous buffers, placing the results in the buffers','line_number':323,'multiline':False]
['text':'/          Use an auxiliary buffer pointed by aux','line_number':324,'multiline':False]
['text':'/','line_number':325,'multiline':False]
['text':'/ @param src1 : iterator to the first element of the first buffer','line_number':326,'multiline':False]
['text':'/ @param end_src1 : last iterator  of the first buffer','line_number':327,'multiline':False]
['text':'/ @param src2 : iterator to the first element of the second buffer','line_number':328,'multiline':False]
['text':'/ @param end_src2 : last iterator  of the second buffer','line_number':329,'multiline':False]
['text':'/ @param aux  : iterator to the first element of the auxiliary buffer','line_number':330,'multiline':False]
['text':'/ @param comp : object for to Compare elements','line_number':331,'multiline':False]
['text':'/ @return true : not changes done,  false : changes in the buffers','line_number':332,'multiline':False]
['text':'/ @remarks','line_number':333,'multiline':False]
['text':'-----------------------------------------------------------------------------','line_number':334,'multiline':False]
['text':'-------------------------------------------------------------------------','line_number':340,'multiline':False]
['text':'                    Metaprogramming','line_number':341,'multiline':False]
['text':'------------------------------------------------------------------------- ','line_number':342,'multiline':False]
['text':'-------------------------------------------------------------------------','line_number':351,'multiline':False]
['text':'                    Code','line_number':352,'multiline':False]
['text':'-------------------------------------------------------------------------','line_number':353,'multiline':False]
['text':'','line_number':382,'multiline':False]
['text':'-----------------------------------------------------------------------------','line_number':383,'multiline':False]
['text':'  function : merge_contiguous','line_number':384,'multiline':False]
['text':'/ @brief : merge two contiguous buffers,using an auxiliary buffer pointed','line_number':385,'multiline':False]
['text':'/          by buf. The results are in src1 and src2','line_number':386,'multiline':False]
['text':'/','line_number':387,'multiline':False]
['text':'/ @param src1: iterator to the first position of the first buffer','line_number':388,'multiline':False]
['text':'/ @param src2: final iterator of the first buffer and first iterator','line_number':389,'multiline':False]
['text':'/              of the second buffer','line_number':390,'multiline':False]
['text':'/ @param end_src2 : final iterator of the second buffer','line_number':391,'multiline':False]
['text':'/ @param buf  : iterator to buffer used as auxiliary memory','line_number':392,'multiline':False]
['text':'/ @param comp : object for to Compare elements','line_number':393,'multiline':False]
['text':'/ @return true : not changes done,  false : changes in the buffers','line_number':394,'multiline':False]
['text':'-----------------------------------------------------------------------------','line_number':395,'multiline':False]
['text':'-------------------------------------------------------------------------','line_number':400,'multiline':False]
['text':'                      Metaprogramming','line_number':401,'multiline':False]
['text':'------------------------------------------------------------------------- ','line_number':402,'multiline':False]
['text':'-------------------------------------------------------------------------','line_number':408,'multiline':False]
['text':'                         Code','line_number':409,'multiline':False]
['text':'-------------------------------------------------------------------------','line_number':410,'multiline':False]
['text':'','line_number':425,'multiline':False]
['text':'-----------------------------------------------------------------------------','line_number':426,'multiline':False]
['text':'  function : merge_circular','line_number':427,'multiline':False]
['text':'/ @brief : merge two buffers,using a circular buffer','line_number':428,'multiline':False]
['text':'/          This function don't check the parameters','line_number':429,'multiline':False]
['text':'/ @param buf1: iterator to the first position of the first buffer','line_number':430,'multiline':False]
['text':'/ @param end_buf1: iterator after the last element of the first buffer','line_number':431,'multiline':False]
['text':'/ @param buf2: iterator to the first element of the secind buffer','line_number':432,'multiline':False]
['text':'/ @param end_buf2: iterator to the first element of the secind buffer','line_number':433,'multiline':False]
['text':'/ @param circ : circular buffer','line_number':434,'multiline':False]
['text':'/ @param comp : comparison object','line_number':435,'multiline':False]
['text':'/ @return true : finished buf1,  false : finished buf2','line_number':436,'multiline':False]
['text':'/ @comments : be carefully because the iterators buf1 and buf2 are modified','line_number':437,'multiline':False]
['text':'-----------------------------------------------------------------------------','line_number':438,'multiline':False]
['text':'-------------------------------------------------------------------------','line_number':444,'multiline':False]
['text':'                      Metaprogramming','line_number':445,'multiline':False]
['text':'-------------------------------------------------------------------------','line_number':446,'multiline':False]
['text':'-------------------------------------------------------------------------','line_number':455,'multiline':False]
['text':'                      Code','line_number':456,'multiline':False]
['text':'-------------------------------------------------------------------------','line_number':457,'multiline':False]
['text':'','line_number':486,'multiline':False]
['text':'****************************************************************************','line_number':487,'multiline':False]
['text':'    End namespace util','line_number':488,'multiline':False]
['text':'    End namespace common','line_number':489,'multiline':False]
['text':'    End namespace sort','line_number':490,'multiline':False]
['text':'    End namespace boost','line_number':491,'multiline':False]
['text':'****************************************************************************','line_number':492,'multiline':False]
['text':'','line_number':493,'multiline':False]
