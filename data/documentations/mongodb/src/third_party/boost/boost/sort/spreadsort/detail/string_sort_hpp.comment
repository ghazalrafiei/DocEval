['text':' Details for a templated general-case hybrid-radix string_sort.','line_number':1,'multiline':False]
['text':'          Copyright Steven J. Ross 2001 - 2014.','line_number':3,'multiline':False]
['text':' Distributed under the Boost Software License, Version 1.0.','line_number':4,'multiline':False]
['text':'    (See accompanying file LICENSE_1_0.txt or copy at','line_number':5,'multiline':False]
['text':'          http://www.boost.org/LICENSE_1_0.txt)','line_number':6,'multiline':False]
['text':' See http://www.boost.org/libs/sort for library home page.','line_number':8,'multiline':False]
['text':'
Some improvements suggested by:
Phil Endecott and Frank Gennari
','line_number':10,'multiline':True]
['text':'Offsetting on identical characters.  This function works a chunk of','line_number':34,'multiline':False]
['text':'characters at a time for cache efficiency and optimal worst-case','line_number':35,'multiline':False]
['text':'performance.','line_number':36,'multiline':False]
['text':'Ignore empties, but if the nextOffset would exceed the length or','line_number':48,'multiline':False]
['text':'not match, exit; we've found the last matching character','line_number':49,'multiline':False]
['text':'This will reduce the step_size if the current step doesn't match.','line_number':50,'multiline':False]
['text':'Offsetting on identical characters.  This function works a character','line_number':76,'multiline':False]
['text':'at a time for optimal worst-case performance.','line_number':77,'multiline':False]
['text':'ignore empties, but if the nextOffset would exceed the length or','line_number':87,'multiline':False]
['text':'not match, exit; we've found the last matching character','line_number':88,'multiline':False]
['text':'This comparison functor assumes strings are identical up to char_offset','line_number':99,'multiline':False]
['text':'Compares strings assuming they are identical up to char_offset','line_number':119,'multiline':False]
['text':'This comparison functor assumes strings are identical up to char_offset','line_number':139,'multiline':False]
['text':'String sorting recursive implementation','line_number':158,'multiline':False]
['text':'This section makes handling of long identical substrings much faster','line_number':168,'multiline':False]
['text':'with a mild average performance impact.','line_number':169,'multiline':False]
['text':'Iterate to the end of the empties.  If all empty, return','line_number':170,'multiline':False]
['text':'Getting the last non-empty','line_number':176,'multiline':False]
['text':'Offsetting on identical characters.  This section works','line_number':179,'multiline':False]
['text':'a few characters at a time for optimal worst-case performance.','line_number':180,'multiline':False]
['text':'Equal worst-case of radix and comparison is when bin_count = n*log(n).','line_number':185,'multiline':False]
['text':'Calculating the size of each bin; this takes roughly 10% of runtime','line_number':192,'multiline':False]
['text':'Assign the bin positions','line_number':201,'multiline':False]
['text':'Swap into place','line_number':207,'multiline':False]
['text':'handling empty bins','line_number':209,'multiline':False]
['text':'Iterating over each element in the bin of empties','line_number':213,'multiline':False]
['text':'empties belong in this bin','line_number':216,'multiline':False]
['text':'iterate backwards to find the last bin with elements in it','line_number':224,'multiline':False]
['text':'this saves iterations in multiple loops','line_number':225,'multiline':False]
['text':'This dominates runtime, mostly in the swap and bin lookups','line_number':228,'multiline':False]
['text':'Iterating over each element in this bin','line_number':232,'multiline':False]
['text':'Swapping into place until the correct element has been swapped in','line_number':235,'multiline':False]
['text':'Recursing','line_number':244,'multiline':False]
['text':'Skip this loop for empties','line_number':246,'multiline':False]
['text':'don't sort unless there are at least two items to Compare','line_number':250,'multiline':False]
['text':'using boost::sort::pdqsort if its worst-case is better','line_number':253,'multiline':False]
['text':'Sorts strings in reverse order, with empties at the end','line_number':263,'multiline':False]
['text':'This section makes handling of long identical substrings much faster','line_number':274,'multiline':False]
['text':'with a mild average performance impact.','line_number':275,'multiline':False]
['text':'Iterate to the end of the empties.  If all empty, return','line_number':277,'multiline':False]
['text':'Getting the last non-empty','line_number':282,'multiline':False]
['text':'Offsetting on identical characters.  This section works','line_number':285,'multiline':False]
['text':'a few characters at a time for optimal worst-case performance.','line_number':286,'multiline':False]
['text':'Equal worst-case of radix and comparison when bin_count = n*log(n).','line_number':292,'multiline':False]
['text':'Calculating the size of each bin; this takes roughly 10% of runtime','line_number':301,'multiline':False]
['text':'Assign the bin positions','line_number':310,'multiline':False]
['text':'Swap into place','line_number':316,'multiline':False]
['text':'handling empty bins','line_number':318,'multiline':False]
['text':'Iterating over each element in the bin of empties','line_number':321,'multiline':False]
['text':'empties belong in this bin','line_number':324,'multiline':False]
['text':'iterate backwards to find the last non-empty bin','line_number':333,'multiline':False]
['text':'this saves iterations in multiple loops','line_number':334,'multiline':False]
['text':'This dominates runtime, mostly in the swap and bin lookups','line_number':337,'multiline':False]
['text':'Iterating over each element in this bin','line_number':341,'multiline':False]
['text':'Swapping into place until the correct element has been swapped in','line_number':344,'multiline':False]
['text':'Recursing','line_number':355,'multiline':False]
['text':'Skip this loop for empties','line_number':357,'multiline':False]
['text':'don't sort unless there are at least two items to Compare','line_number':361,'multiline':False]
['text':'using boost::sort::pdqsort if its worst-case is better','line_number':364,'multiline':False]
['text':'String sorting recursive implementation','line_number':374,'multiline':False]
['text':'This section makes handling of long identical substrings much faster','line_number':385,'multiline':False]
['text':'with a mild average performance impact.','line_number':386,'multiline':False]
['text':'Iterate to the end of the empties.  If all empty, return','line_number':387,'multiline':False]
['text':'Getting the last non-empty','line_number':393,'multiline':False]
['text':'Equal worst-case of radix and comparison is when bin_count = n*log(n).','line_number':399,'multiline':False]
['text':'Calculating the size of each bin; this takes roughly 10% of runtime','line_number':406,'multiline':False]
['text':'Assign the bin positions','line_number':414,'multiline':False]
['text':'Swap into place','line_number':420,'multiline':False]
['text':'handling empty bins','line_number':422,'multiline':False]
['text':'Iterating over each element in the bin of empties','line_number':426,'multiline':False]
['text':'empties belong in this bin','line_number':429,'multiline':False]
['text':'iterate backwards to find the last bin with elements in it','line_number':436,'multiline':False]
['text':'this saves iterations in multiple loops','line_number':437,'multiline':False]
['text':'This dominates runtime, mostly in the swap and bin lookups','line_number':440,'multiline':False]
['text':'Iterating over each element in this bin','line_number':444,'multiline':False]
['text':'Swapping into place until the correct element has been swapped in','line_number':447,'multiline':False]
['text':'Recursing','line_number':457,'multiline':False]
['text':'Skip this loop for empties','line_number':459,'multiline':False]
['text':'don't sort unless there are at least two items to Compare','line_number':463,'multiline':False]
['text':'using boost::sort::pdqsort if its worst-case is better','line_number':466,'multiline':False]
['text':'String sorting recursive implementation','line_number':477,'multiline':False]
['text':'This section makes handling of long identical substrings much faster','line_number':486,'multiline':False]
['text':'with a mild average performance impact.','line_number':487,'multiline':False]
['text':'Iterate to the end of the empties.  If all empty, return','line_number':488,'multiline':False]
['text':'Getting the last non-empty','line_number':494,'multiline':False]
['text':'Equal worst-case of radix and comparison is when bin_count = n*log(n).','line_number':500,'multiline':False]
['text':'Calculating the size of each bin; this takes roughly 10% of runtime','line_number':507,'multiline':False]
['text':'Assign the bin positions','line_number':515,'multiline':False]
['text':'Swap into place','line_number':521,'multiline':False]
['text':'handling empty bins','line_number':523,'multiline':False]
['text':'Iterating over each element in the bin of empties','line_number':527,'multiline':False]
['text':'empties belong in this bin','line_number':530,'multiline':False]
['text':'iterate backwards to find the last bin with elements in it','line_number':537,'multiline':False]
['text':'this saves iterations in multiple loops','line_number':538,'multiline':False]
['text':'This dominates runtime, mostly in the swap and bin lookups','line_number':541,'multiline':False]
['text':'Iterating over each element in this bin','line_number':545,'multiline':False]
['text':'Swapping into place until the correct element has been swapped in','line_number':548,'multiline':False]
['text':'Recursing','line_number':558,'multiline':False]
['text':'Skip this loop for empties','line_number':560,'multiline':False]
['text':'don't sort unless there are at least two items to Compare','line_number':564,'multiline':False]
['text':'using boost::sort::pdqsort if its worst-case is better','line_number':567,'multiline':False]
['text':'Sorts strings in reverse order, with empties at the end','line_number':578,'multiline':False]
['text':'This section makes handling of long identical substrings much faster','line_number':587,'multiline':False]
['text':'with a mild average performance impact.','line_number':588,'multiline':False]
['text':'Iterate to the end of the empties.  If all empty, return','line_number':590,'multiline':False]
['text':'Getting the last non-empty','line_number':595,'multiline':False]
['text':'Offsetting on identical characters.  This section works','line_number':598,'multiline':False]
['text':'a character at a time for optimal worst-case performance.','line_number':599,'multiline':False]
['text':'Equal worst-case of radix and comparison is when bin_count = n*log(n).','line_number':603,'multiline':False]
['text':'Calculating the size of each bin; this takes roughly 10% of runtime','line_number':612,'multiline':False]
['text':'Assign the bin positions','line_number':620,'multiline':False]
['text':'Swap into place','line_number':626,'multiline':False]
['text':'handling empty bins','line_number':628,'multiline':False]
['text':'Iterating over each element in the bin of empties','line_number':632,'multiline':False]
['text':'empties belong in this bin','line_number':635,'multiline':False]
['text':'iterate backwards to find the last bin with elements in it','line_number':643,'multiline':False]
['text':'this saves iterations in multiple loops','line_number':644,'multiline':False]
['text':'This dominates runtime, mostly in the swap and bin lookups','line_number':647,'multiline':False]
['text':'Iterating over each element in this bin','line_number':651,'multiline':False]
['text':'Swapping into place until the correct element has been swapped in','line_number':654,'multiline':False]
['text':'Recursing','line_number':663,'multiline':False]
['text':'Skip this loop for empties','line_number':665,'multiline':False]
['text':'don't sort unless there are at least two items to Compare','line_number':669,'multiline':False]
['text':'using boost::sort::pdqsort if its worst-case is better','line_number':672,'multiline':False]
['text':'Holds the bin vector and makes the initial recursive call','line_number':683,'multiline':False]
['text':'Warning that we're using boost::sort::pdqsort, even though string_sort was called','line_number':702,'multiline':False]
['text':'Holds the bin vector and makes the initial recursive call','line_number':707,'multiline':False]
['text':'Warning that we're using boost::sort::pdqsort, even though string_sort was called','line_number':728,'multiline':False]
['text':'Holds the bin vector and makes the initial recursive call','line_number':733,'multiline':False]
['text':'Warning that we're using boost::sort::pdqsort, even though string_sort was called','line_number':754,'multiline':False]
['text':'Holds the bin vector and makes the initial recursive call','line_number':759,'multiline':False]
['text':'disable_if_c was refusing to compile, so rewrote to use enable_if_c','line_number':774,'multiline':False]
['text':'Warning that we're using boost::sort::pdqsort, even though string_sort was called','line_number':782,'multiline':False]
['text':'Holds the bin vector and makes the initial recursive call','line_number':787,'multiline':False]
['text':'Warning that we're using boost::sort::pdqsort, even though string_sort was called','line_number':809,'multiline':False]
