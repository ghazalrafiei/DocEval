['text':'----------------------------------------------------------------------------','line_number':1,'multiline':False]
['text':'/ @file parallel_sort.hpp','line_number':2,'multiline':False]
['text':'/ @brief Contains the parallel_sort class, which is part of the','line_number':3,'multiline':False]
['text':'/        block_indirect_sort algorithm','line_number':4,'multiline':False]
['text':'/','line_number':5,'multiline':False]
['text':'/ @author Copyright (c) 2016 Francisco Jose Tapia (fjtapia@gmail.com )\n','line_number':6,'multiline':False]
['text':'/         Distributed under the Boost Software License, Version 1.0.\n','line_number':7,'multiline':False]
['text':'/         ( See accompanying file LICENSE_1_0.txt or copy at','line_number':8,'multiline':False]
['text':'/           http://www.boost.org/LICENSE_1_0.txt  )','line_number':9,'multiline':False]
['text':'/ @version 0.1','line_number':10,'multiline':False]
['text':'/','line_number':11,'multiline':False]
['text':'/ @remarks','line_number':12,'multiline':False]
['text':'-----------------------------------------------------------------------------','line_number':13,'multiline':False]
['text':'----------------------------------------------------------------------------','line_number':28,'multiline':False]
['text':'                          USING SENTENCES','line_number':29,'multiline':False]
['text':'----------------------------------------------------------------------------','line_number':30,'multiline':False]
['text':'','line_number':36,'multiline':False]
['text':'/---------------------------------------------------------------------------','line_number':37,'multiline':False]
['text':'/ @struct parallel_sort','line_number':38,'multiline':False]
['text':'/ @brief This class do a parallel sort, using the quicksort filtering,','line_number':39,'multiline':False]
['text':'/        splitting the data until the number of elements is smaller than a','line_number':40,'multiline':False]
['text':'/        predefined value (max_per_thread)','line_number':41,'multiline':False]
['text':'----------------------------------------------------------------------------','line_number':42,'multiline':False]
['text':'-------------------------------------------------------------------------','line_number':46,'multiline':False]
['text':'                  D E F I N I T I O N S','line_number':47,'multiline':False]
['text':'-------------------------------------------------------------------------','line_number':48,'multiline':False]
['text':'------------------------------------------------------------------------','line_number':54,'multiline':False]
['text':'                V A R I A B L E S','line_number':55,'multiline':False]
['text':'------------------------------------------------------------------------','line_number':56,'multiline':False]
['text':' reference to a object with all the data to sort','line_number':57,'multiline':False]
['text':' maximun number of element to sort woth 1 thread','line_number':60,'multiline':False]
['text':' atomic counter for to detect the end of the works created inside','line_number':63,'multiline':False]
['text':' the object','line_number':64,'multiline':False]
['text':'------------------------------------------------------------------------','line_number':67,'multiline':False]
['text':'                F U N C T I O N S','line_number':68,'multiline':False]
['text':'------------------------------------------------------------------------','line_number':69,'multiline':False]
['text':'','line_number':73,'multiline':False]
['text':'------------------------------------------------------------------------','line_number':74,'multiline':False]
['text':'  function : function_divide_sort','line_number':75,'multiline':False]
['text':'/ @brief create a function_t with a call to divide_sort, and inser in','line_number':76,'multiline':False]
['text':'/        the stack of the backbone','line_number':77,'multiline':False]
['text':'','line_number':78,'multiline':False]
['text':'/ @param first : iterator to the first element of the range to divide','line_number':79,'multiline':False]
['text':'/ @param last : iterator to the next element after the last element of','line_number':80,'multiline':False]
['text':'/               the range to divide','line_number':81,'multiline':False]
['text':'/ @param level : level of depth in the division.When zero call to','line_number':82,'multiline':False]
['text':'/                pdqsort','line_number':83,'multiline':False]
['text':'/ @param counter : atomic variable which is decremented when finish','line_number':84,'multiline':False]
['text':'/                  the function. This variable is used for to know','line_number':85,'multiline':False]
['text':'/                  when are finished all the function_t created','line_number':86,'multiline':False]
['text':'/                  inside an object','line_number':87,'multiline':False]
['text':'/ @param error : global indicator of error.','line_number':88,'multiline':False]
['text':'------------------------------------------------------------------------','line_number':89,'multiline':False]
['text':'--------------------------------------------------------------------------','line_number':112,'multiline':False]
['text':' end struct parallel_sort','line_number':113,'multiline':False]
['text':'--------------------------------------------------------------------------','line_number':114,'multiline':False]
['text':'','line_number':115,'multiline':False]
['text':'############################################################################','line_number':116,'multiline':False]
['text':'                                                                          ##','line_number':117,'multiline':False]
['text':'                                                                          ##','line_number':118,'multiline':False]
['text':'            N O N     I N L I N E      F U N C T I O N S                  ##','line_number':119,'multiline':False]
['text':'                                                                          ##','line_number':120,'multiline':False]
['text':'                                                                          ##','line_number':121,'multiline':False]
['text':'############################################################################','line_number':122,'multiline':False]
['text':'','line_number':123,'multiline':False]
['text':'------------------------------------------------------------------------','line_number':124,'multiline':False]
['text':'  function : parallel_sort','line_number':125,'multiline':False]
['text':'/ @brief constructor of the class','line_number':126,'multiline':False]
['text':'/ @param [in] bkbn : backbone struct with all the information to sort','line_number':127,'multiline':False]
['text':'/ @param [in] first : iterator to the first element to sort','line_number':128,'multiline':False]
['text':'/ @param [in] last : iterator to the next element after the last','line_number':129,'multiline':False]
['text':'------------------------------------------------------------------------','line_number':130,'multiline':False]
['text':'------------------- check if sort --------------------------------------','line_number':139,'multiline':False]
['text':'------------------- check if reverse sort ---------------------------','line_number':145,'multiline':False]
['text':'-------------------max_per_thread ---------------------------','line_number':159,'multiline':False]
['text':'---------------- check if only single thread -----------------------','line_number':166,'multiline':False]
['text':' wait until all the parts are finished','line_number':174,'multiline':False]
['text':'------------------------------------------------------------------------','line_number':178,'multiline':False]
['text':'  function : divide_sort','line_number':179,'multiline':False]
['text':'/ @brief this function divide the data in two part, for to be sorted in','line_number':180,'multiline':False]
['text':'/        a parallel mode','line_number':181,'multiline':False]
['text':'/ @param first : iterator to the first element to sort','line_number':182,'multiline':False]
['text':'/ @param last : iterator to the next element after the last','line_number':183,'multiline':False]
['text':'/ @param level : level of depth before call to pdqsort','line_number':184,'multiline':False]
['text':'------------------------------------------------------------------------','line_number':185,'multiline':False]
['text':'------------------- check if sort -----------------------------------','line_number':190,'multiline':False]
['text':'---------------- check if finish the subdivision -------------------','line_number':196,'multiline':False]
['text':'-------------------- pivoting  ----------------------------------','line_number':203,'multiline':False]
['text':' insert  the work of the second half in the stack of works','line_number':222,'multiline':False]
['text':' The first half is done by the same thread','line_number':226,'multiline':False]
['text':'','line_number':229,'multiline':False]
['text':'****************************************************************************','line_number':230,'multiline':False]
['text':'    End namespace blk_detail','line_number':231,'multiline':False]
['text':'    End namespace sort','line_number':232,'multiline':False]
['text':'    End namespace boost','line_number':233,'multiline':False]
['text':'****************************************************************************','line_number':234,'multiline':False]
['text':'','line_number':235,'multiline':False]
