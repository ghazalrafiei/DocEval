['text':'----------------------------------------------------------------------------','line_number':1,'multiline':False]
['text':'/ @file merge_four.hpp','line_number':2,'multiline':False]
['text':'/ @brief This file have the functions for to merge 4 buffers','line_number':3,'multiline':False]
['text':'/','line_number':4,'multiline':False]
['text':'/ @author Copyright (c) 2016 Francisco JosÃ© Tapia (fjtapia@gmail.com )\n','line_number':5,'multiline':False]
['text':'/         Distributed under the Boost Software License, Version 1.0.\n','line_number':6,'multiline':False]
['text':'/         ( See accompanying file LICENSE_1_0.txt or copy at','line_number':7,'multiline':False]
['text':'/           http://www.boost.org/LICENSE_1_0.txt  )','line_number':8,'multiline':False]
['text':'/ @version 0.1','line_number':9,'multiline':False]
['text':'/','line_number':10,'multiline':False]
['text':'/ @remarks','line_number':11,'multiline':False]
['text':'-----------------------------------------------------------------------------','line_number':12,'multiline':False]
['text':'','line_number':30,'multiline':False]
['text':'############################################################################','line_number':31,'multiline':False]
['text':'                                                                          ##','line_number':32,'multiline':False]
['text':'                       F U S I O N     O F                                ##','line_number':33,'multiline':False]
['text':'                                                                          ##','line_number':34,'multiline':False]
['text':'              F O U R     E L E M E N T S    R A N G E                    ##','line_number':35,'multiline':False]
['text':'                                                                          ##','line_number':36,'multiline':False]
['text':'############################################################################','line_number':37,'multiline':False]
['text':'','line_number':38,'multiline':False]
['text':'-----------------------------------------------------------------------------','line_number':40,'multiline':False]
['text':'  function : less_range','line_number':41,'multiline':False]
['text':'/ @brief Compare the elements pointed by it1 and it2, and if they','line_number':42,'multiline':False]
['text':'/        are equals, compare their position, doing a stable comparison','line_number':43,'multiline':False]
['text':'/','line_number':44,'multiline':False]
['text':'/ @param it1 : iterator to the first element','line_number':45,'multiline':False]
['text':'/ @param pos1 : position of the object pointed by it1','line_number':46,'multiline':False]
['text':'/ @param it2 : iterator to the second element','line_number':47,'multiline':False]
['text':'/ @param pos2 : position of the element pointed by it2','line_number':48,'multiline':False]
['text':'/ @param comp : comparison object','line_number':49,'multiline':False]
['text':'/ @return result of the comparison','line_number':50,'multiline':False]
['text':'-----------------------------------------------------------------------------','line_number':51,'multiline':False]
['text':'-----------------------------------------------------------------------------','line_number':60,'multiline':False]
['text':'  function : full_merge4','line_number':61,'multiline':False]
['text':'/ @brief Merge four ranges','line_number':62,'multiline':False]
['text':'/','line_number':63,'multiline':False]
['text':'/ @param dest: range where move the elements merged. Their size must be','line_number':64,'multiline':False]
['text':'/              greater or equal than the sum of the sizes of the ranges','line_number':65,'multiline':False]
['text':'/              in vrange_input','line_number':66,'multiline':False]
['text':'/ @param vrange_input : array of ranges to merge','line_number':67,'multiline':False]
['text':'/ @param nrange_input : number of ranges in vrange_input','line_number':68,'multiline':False]
['text':'/ @param comp : comparison object','line_number':69,'multiline':False]
['text':'/ @return range with all the elements moved with the size adjusted','line_number':70,'multiline':False]
['text':'-----------------------------------------------------------------------------','line_number':71,'multiline':False]
['text':'------------------------------------------------------------------------','line_number':108,'multiline':False]
['text':' Initial sort','line_number':109,'multiline':False]
['text':'------------------------------------------------------------------------','line_number':110,'multiline':False]
['text':'-----------------------------------------------------------------------','line_number':114,'multiline':False]
['text':' thanks to Steven Ross by their suggestion about the optimal','line_number':115,'multiline':False]
['text':' sorting networks','line_number':116,'multiline':False]
['text':'-----------------------------------------------------------------------','line_number':117,'multiline':False]
['text':'-----------------------------------------------------------------------------','line_number':192,'multiline':False]
['text':'  function : uninit_full_merge4','line_number':193,'multiline':False]
['text':'/ @brief Merge four ranges and put the result in uninitialized memory','line_number':194,'multiline':False]
['text':'/','line_number':195,'multiline':False]
['text':'/ @param dest: range where create and move the elements merged. Their','line_number':196,'multiline':False]
['text':'/              size must be greater or equal than the sum of the sizes','line_number':197,'multiline':False]
['text':'/              of the ranges in the array R','line_number':198,'multiline':False]
['text':'/ @param vrange_input : array of ranges to merge','line_number':199,'multiline':False]
['text':'/ @param nrange_input : number of ranges in vrange_input','line_number':200,'multiline':False]
['text':'/ @param comp : comparison object','line_number':201,'multiline':False]
['text':'/ @return range with all the elements move with the size adjusted','line_number':202,'multiline':False]
['text':'-----------------------------------------------------------------------------','line_number':203,'multiline':False]
['text':'------------------------------------------------------------------------','line_number':237,'multiline':False]
['text':' Initial sort','line_number':238,'multiline':False]
['text':'------------------------------------------------------------------------','line_number':239,'multiline':False]
['text':'-----------------------------------------------------------------------','line_number':242,'multiline':False]
['text':' thanks to Steven Ross by their suggestion about the optimal','line_number':243,'multiline':False]
['text':' sorting networks','line_number':244,'multiline':False]
['text':'-----------------------------------------------------------------------','line_number':245,'multiline':False]
['text':' end while (npos > 2)','line_number':304,'multiline':False]
['text':'****************************************************************************','line_number':321,'multiline':False]
['text':'    End namespace common','line_number':322,'multiline':False]
['text':'    End namespace sort','line_number':323,'multiline':False]
['text':'    End namespace boost','line_number':324,'multiline':False]
['text':'****************************************************************************','line_number':325,'multiline':False]
['text':'','line_number':326,'multiline':False]
