['text':' Copyright David Abrahams 2006. Distributed under the Boost','line_number':1,'multiline':False]
['text':' Software License, Version 1.0. (See accompanying','line_number':2,'multiline':False]
['text':' file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)','line_number':3,'multiline':False]
['text':' The old protocol used a constraints() member function in concept','line_number':10,'multiline':False]
['text':' checking classes.  If the compiler supports SFINAE, we can detect','line_number':11,'multiline':False]
['text':' that function and seamlessly support the old concept checking','line_number':12,'multiline':False]
['text':' classes.  In this release, backward compatibility with the old','line_number':13,'multiline':False]
['text':' concept checking classes is enabled by default, where available.','line_number':14,'multiline':False]
['text':' The old protocol is deprecated, though, and backward compatibility','line_number':15,'multiline':False]
['text':' will no longer be the default in the next release.','line_number':16,'multiline':False]
['text':' Note: gcc-2.96 through 3.3.x have some SFINAE, but no ability to','line_number':23,'multiline':False]
['text':' check for the presence of particularmember functions.','line_number':24,'multiline':False]
['text':' Usage, in class or function context:','line_number':38,'multiline':False]
['text':'','line_number':39,'multiline':False]
['text':'     BOOST_CONCEPT_ASSERT((UnaryFunctionConcept<F,bool,int>));','line_number':40,'multiline':False]
['text':'','line_number':41,'multiline':False]
['text':' BOOST_CONCEPT_ASSERT_DWA2006430_HPP','line_number':45,'multiline':False]
