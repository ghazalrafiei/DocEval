['text':' boost\math\distributions\beta.hpp','line_number':1,'multiline':False]
['text':' Copyright John Maddock 2006.','line_number':3,'multiline':False]
['text':' Copyright Paul A. Bristow 2006.','line_number':4,'multiline':False]
['text':' Use, modification and distribution are subject to the','line_number':6,'multiline':False]
['text':' Boost Software License, Version 1.0.','line_number':7,'multiline':False]
['text':' (See accompanying file LICENSE_1_0.txt','line_number':8,'multiline':False]
['text':' or copy at http://www.boost.org/LICENSE_1_0.txt)','line_number':9,'multiline':False]
['text':' http://en.wikipedia.org/wiki/Beta_distribution','line_number':11,'multiline':False]
['text':' http://www.itl.nist.gov/div898/handbook/eda/section3/eda366h.htm','line_number':12,'multiline':False]
['text':' http://mathworld.wolfram.com/BetaDistribution.html','line_number':13,'multiline':False]
['text':' The Beta Distribution is a continuous probability distribution.','line_number':15,'multiline':False]
['text':' The beta distribution is used to model events which are constrained to take place','line_number':16,'multiline':False]
['text':' within an interval defined by maxima and minima,','line_number':17,'multiline':False]
['text':' so is used extensively in PERT and other project management systems','line_number':18,'multiline':False]
['text':' to describe the time to completion.','line_number':19,'multiline':False]
['text':' The cdf of the beta distribution is used as a convenient way','line_number':20,'multiline':False]
['text':' of obtaining the sum over a set of binomial outcomes.','line_number':21,'multiline':False]
['text':' The beta distribution is also used in Bayesian statistics.','line_number':22,'multiline':False]
['text':' for beta.','line_number':28,'multiline':False]
['text':' complements.','line_number':29,'multiline':False]
['text':' error checks','line_number':30,'multiline':False]
['text':' isnan.','line_number':31,'multiline':False]
['text':' for root finding.','line_number':32,'multiline':False]
['text':' unreachable code','line_number':36,'multiline':False]
['text':' in domain_error_imp in error_handling','line_number':37,'multiline':False]
['text':' Common error checking routines for beta distribution functions:','line_number':48,'multiline':False]
['text':' bool check_alpha','line_number':60,'multiline':False]
['text':' bool check_beta','line_number':73,'multiline':False]
['text':' bool check_prob','line_number':86,'multiline':False]
['text':' bool check_x','line_number':99,'multiline':False]
['text':' Check both alpha and beta.','line_number':103,'multiline':False]
['text':' bool check_dist','line_number':106,'multiline':False]
['text':' bool check_dist_and_x','line_number':113,'multiline':False]
['text':' bool check_dist_and_prob','line_number':120,'multiline':False]
['text':' bool check_mean','line_number':133,'multiline':False]
['text':' bool check_variance','line_number':145,'multiline':False]
['text':' namespace beta_detail','line_number':146,'multiline':False]
['text':' typedef beta_distribution<double> beta;','line_number':148,'multiline':False]
['text':' is deliberately NOT included to avoid a name clash with the beta function.','line_number':149,'multiline':False]
['text':' Use beta_distribution<> mybeta(...) to construct type double.','line_number':150,'multiline':False]
['text':' beta_distribution constructor.','line_number':167,'multiline':False]
['text':' Accessor functions:','line_number':168,'multiline':False]
['text':' .','line_number':174,'multiline':False]
['text':' Estimation of the alpha & beta parameters.','line_number':178,'multiline':False]
['text':' http://en.wikipedia.org/wiki/Beta_distribution','line_number':179,'multiline':False]
['text':' gives formulae in section on parameter estimation.','line_number':180,'multiline':False]
['text':' Also NIST EDA page 3 & 4 give the same.','line_number':181,'multiline':False]
['text':' http://www.itl.nist.gov/div898/handbook/eda/section3/eda366h.htm','line_number':182,'multiline':False]
['text':' http://www.epi.ucdavis.edu/diagnostictests/betabuster.html','line_number':183,'multiline':False]
['text':' Expected value of mean.','line_number':186,'multiline':False]
['text':' Expected value of variance.','line_number':187,'multiline':False]
['text':' of error checks.','line_number':190,'multiline':False]
['text':' RealType find_alpha','line_number':201,'multiline':False]
['text':' Expected value of mean.','line_number':204,'multiline':False]
['text':' Expected value of variance.','line_number':205,'multiline':False]
['text':' of error checks.','line_number':208,'multiline':False]
['text':'  RealType find_beta','line_number':220,'multiline':False]
['text':' Estimate alpha & beta from either alpha or beta, and x and probability.','line_number':222,'multiline':False]
['text':' Uses for these parameter estimators are unclear.','line_number':223,'multiline':False]
['text':' from beta.','line_number':226,'multiline':False]
['text':'  x.','line_number':227,'multiline':False]
['text':' cdf','line_number':228,'multiline':False]
['text':' of error checks.','line_number':231,'multiline':False]
['text':' RealType find_alpha(beta, a, probability)','line_number':245,'multiline':False]
['text':' ibeta_invb(T b, T x, T p); (alpha, x, cdf,)','line_number':248,'multiline':False]
['text':' alpha.','line_number':249,'multiline':False]
['text':' probability x.','line_number':250,'multiline':False]
['text':' probability cdf.','line_number':251,'multiline':False]
['text':' of error checks.','line_number':254,'multiline':False]
['text':'  RealType find_beta(alpha, x, probability)','line_number':268,'multiline':False]
['text':' Two parameters of the beta distribution.','line_number':271,'multiline':False]
['text':' template <class RealType, class Policy> class beta_distribution','line_number':273,'multiline':False]
['text':' dist ','line_number':283,'multiline':True]
['text':' Range of permissible values for random variable x.','line_number':284,'multiline':False]
['text':' dist ','line_number':290,'multiline':True]
['text':' Range of supported values for random variable x.','line_number':291,'multiline':False]
['text':' This is range where cdf rises from 0 to 1, and outside it, the pdf is zero.','line_number':292,'multiline':False]
['text':' Mean of beta distribution = np.','line_number':298,'multiline':False]
['text':' mean','line_number':300,'multiline':False]
['text':' Variance of beta distribution = np(1-p).','line_number':304,'multiline':False]
['text':' variance','line_number':308,'multiline':False]
['text':' mode','line_number':334,'multiline':False]
['text':'template <class RealType, class Policy>','line_number':336,'multiline':False]
['text':'inline RealType median(const beta_distribution<RealType, Policy>& dist)','line_number':337,'multiline':False]
['text':'{ // Median of beta distribution is not defined.','line_number':338,'multiline':False]
['text':'  return tools::domain_error<RealType>(function, "Median is not implemented, result is %1%!", std::numeric_limits<RealType>::quiet_NaN());','line_number':339,'multiline':False]
['text':'} // median','line_number':340,'multiline':False]
['text':'But WILL be provided by the derived accessor as quantile(0.5).','line_number':342,'multiline':False]
['text':' ADL of std functions.','line_number':347,'multiline':False]
['text':' skewness','line_number':351,'multiline':False]
['text':' kurtosis_excess','line_number':362,'multiline':False]
['text':' kurtosis','line_number':368,'multiline':False]
['text':' Probability Density/Mass Function.','line_number':372,'multiline':False]
['text':' for ADL of std functions','line_number':377,'multiline':False]
['text':' Argument checks:','line_number':382,'multiline':False]
['text':' Corner case: check_x ensures x element of [0, 1], but PDF is 0 for x = 0 and x = 1. PDF EQN:','line_number':393,'multiline':False]
['text':' https://wikimedia.org/api/rest_v1/media/math/render/svg/125fdaa41844a8703d1a8610ac00fbf3edacc8e7','line_number':394,'multiline':False]
['text':' pdf','line_number':400,'multiline':False]
['text':' Cumulative Distribution Function beta.','line_number':404,'multiline':False]
['text':' for ADL of std functions','line_number':405,'multiline':False]
['text':' Argument checks:','line_number':412,'multiline':False]
['text':' Special cases:','line_number':421,'multiline':False]
['text':' beta cdf','line_number':431,'multiline':False]
['text':' Complemented Cumulative Distribution Function beta.','line_number':435,'multiline':False]
['text':' for ADL of std functions','line_number':437,'multiline':False]
['text':' Argument checks:','line_number':446,'multiline':False]
['text':' Calculate cdf beta using the incomplete beta function.','line_number':463,'multiline':False]
['text':' Use of ibeta here prevents cancellation errors in calculating','line_number':464,'multiline':False]
['text':' 1 - x if x is very small, perhaps smaller than machine epsilon.','line_number':465,'multiline':False]
['text':' beta cdf','line_number':467,'multiline':False]
['text':' Quantile or Percent Point beta function or','line_number':471,'multiline':False]
['text':' Inverse Cumulative probability distribution function CDF.','line_number':472,'multiline':False]
['text':' Return x (0 <= x <= 1),','line_number':473,'multiline':False]
['text':' for a given probability p (0 <= p <= 1).','line_number':474,'multiline':False]
['text':' These functions take a probability as an argument','line_number':475,'multiline':False]
['text':' and return a value such that the probability that a random variable x','line_number':476,'multiline':False]
['text':' will be less than or equal to that value','line_number':477,'multiline':False]
['text':' is whatever probability you supplied as an argument.','line_number':478,'multiline':False]
['text':' of argument checks:','line_number':482,'multiline':False]
['text':' Special cases:','line_number':492,'multiline':False]
['text':' quantile','line_number':502,'multiline':False]
['text':' Complement Quantile or Percent Point beta function .','line_number':506,'multiline':False]
['text':' Return the number of expected x for a given','line_number':507,'multiline':False]
['text':' complement of the probability q.','line_number':508,'multiline':False]
['text':'','line_number':512,'multiline':False]
['text':' Error checks:','line_number':513,'multiline':False]
['text':' Special cases:','line_number':528,'multiline':False]
['text':' Quantile Complement','line_number':539,'multiline':False]
['text':' namespace math','line_number':541,'multiline':False]
['text':' namespace boost','line_number':542,'multiline':False]
['text':' This include must be at the end, *after* the accessors','line_number':544,'multiline':False]
['text':' for this distribution have been defined, in order to','line_number':545,'multiline':False]
['text':' keep compilers that support two-phase lookup happy.','line_number':546,'multiline':False]
['text':' BOOST_MATH_DIST_BETA_HPP','line_number':553,'multiline':False]
