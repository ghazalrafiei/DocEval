['text':'  Copyright John Maddock 2007.','line_number':1,'multiline':False]
['text':'  Use, modification and distribution are subject to the','line_number':2,'multiline':False]
['text':'  Boost Software License, Version 1.0. (See accompanying file','line_number':3,'multiline':False]
['text':'  LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)','line_number':4,'multiline':False]
['text':'','line_number':13,'multiline':False]
['text':' Functor for root finding algorithm:','line_number':14,'multiline':False]
['text':'','line_number':15,'multiline':False]
['text':'','line_number':35,'multiline':False]
['text':' The purpose of adjust_bounds, is to toggle the last bit of the','line_number':36,'multiline':False]
['text':' range so that both ends round to the same integer, if possible.','line_number':37,'multiline':False]
['text':' If they do both round the same then we terminate the search','line_number':38,'multiline':False]
['text':' for the root *very* quickly when finding an integer result.','line_number':39,'multiline':False]
['text':' At the point that this function is called we know that "a" is','line_number':40,'multiline':False]
['text':' below the root and "b" above it, so this change can not result','line_number':41,'multiline':False]
['text':' in the root no longer being bracketed.','line_number':42,'multiline':False]
['text':'','line_number':43,'multiline':False]
['text':' a ','line_number':45,'multiline':True]
['text':' b ','line_number':45,'multiline':True]
['text':' tol ','line_number':45,'multiline':True]
['text':' a ','line_number':48,'multiline':True]
['text':' tol ','line_number':48,'multiline':True]
['text':' b ','line_number':55,'multiline':True]
['text':' tol ','line_number':55,'multiline':True]
['text':' tol ','line_number':62,'multiline':True]
['text':'','line_number':68,'multiline':False]
['text':' This is where all the work is done:','line_number':69,'multiline':False]
['text':'','line_number':70,'multiline':False]
['text':'','line_number':91,'multiline':False]
['text':' Max bounds of the distribution:','line_number':92,'multiline':False]
['text':'','line_number':93,'multiline':False]
['text':' Compiler warning C4701: potentially uninitialized local variable 'b' used','line_number':104,'multiline':False]
['text':'','line_number':109,'multiline':False]
['text':' For small expected results, just use a linear search:','line_number':110,'multiline':False]
['text':'','line_number':111,'multiline':False]
['text':' can't go any higher!','line_number':128,'multiline':False]
['text':'  We can't go any lower than this!','line_number':141,'multiline':False]
['text':'','line_number':145,'multiline':False]
['text':' Try and bracket using a couple of additions first, ','line_number':146,'multiline':False]
['text':' we're assuming that "guess" is likely to be accurate','line_number':147,'multiline':False]
['text':' to the nearest int or so:','line_number':148,'multiline':False]
['text':'','line_number':149,'multiline':False]
['text':'','line_number':152,'multiline':False]
['text':' If we're looking for a large result, then bump "adder" up','line_number':153,'multiline':False]
['text':' by a bit to increase our chances of bracketing the root:','line_number':154,'multiline':False]
['text':'','line_number':155,'multiline':False]
['text':'adder = (std::max)(adder, 0.001f * guess);','line_number':156,'multiline':False]
['text':'','line_number':175,'multiline':False]
['text':' We didn't bracket the root, try ','line_number':176,'multiline':False]
['text':' once more:','line_number':177,'multiline':False]
['text':'','line_number':178,'multiline':False]
['text':'','line_number':203,'multiline':False]
['text':' If the root hasn't been bracketed yet, try again','line_number':204,'multiline':False]
['text':' using the multiplier this time:','line_number':205,'multiline':False]
['text':'','line_number':206,'multiline':False]
['text':'','line_number':211,'multiline':False]
['text':' Zero is to the right of x2, so walk upwards','line_number':212,'multiline':False]
['text':' until we find it:','line_number':213,'multiline':False]
['text':'','line_number':214,'multiline':False]
['text':'','line_number':231,'multiline':False]
['text':' Zero is to the left of a, so walk downwards','line_number':232,'multiline':False]
['text':' until we find it:','line_number':233,'multiline':False]
['text':'','line_number':234,'multiline':False]
['text':' Escape route just in case the answer is zero!','line_number':239,'multiline':False]
['text':' Ran out of bounds trying to bracket - there is no answer!','line_number':263,'multiline':False]
['text':'','line_number':264,'multiline':False]
['text':' Adjust bounds so that if we're looking for an integer','line_number':265,'multiline':False]
['text':' result, then both ends round the same way:','line_number':266,'multiline':False]
['text':'','line_number':267,'multiline':False]
['text':'','line_number':269,'multiline':False]
['text':' We don't want zero or denorm lower bounds:','line_number':270,'multiline':False]
['text':'','line_number':271,'multiline':False]
['text':'','line_number':274,'multiline':False]
['text':' Go ahead and find the root:','line_number':275,'multiline':False]
['text':'','line_number':276,'multiline':False]
['text':'','line_number':282,'multiline':False]
['text':' Some special routine for rounding up and down:','line_number':283,'multiline':False]
['text':' We want to check and see if we are very close to an integer, and if so test to see if','line_number':284,'multiline':False]
['text':' that integer is an exact root of the cdf.  We do this because our root finder only','line_number':285,'multiline':False]
['text':' guarantees to find *a root*, and there can sometimes be many consecutive floating','line_number':286,'multiline':False]
['text':' point values which are all roots.  This is especially true if the target probability','line_number':287,'multiline':False]
['text':' is very close 1.','line_number':288,'multiline':False]
['text':'','line_number':289,'multiline':False]
['text':'','line_number':300,'multiline':False]
['text':' Now find the smallest integer <= result for which we get an exact root:','line_number':301,'multiline':False]
['text':'','line_number':302,'multiline':False]
['text':'','line_number':334,'multiline':False]
['text':' Now find the largest integer >= result for which we get an exact root:','line_number':335,'multiline':False]
['text':'','line_number':336,'multiline':False]
['text':'','line_number':356,'multiline':False]
['text':' Now finally are the public API functions.','line_number':357,'multiline':False]
['text':' There is one overload for each policy,','line_number':358,'multiline':False]
['text':' each one is responsible for selecting the correct','line_number':359,'multiline':False]
['text':' termination condition, and rounding the result','line_number':360,'multiline':False]
['text':' to an int where required.','line_number':361,'multiline':False]
['text':'','line_number':362,'multiline':False]
['text':'','line_number':411,'multiline':False]
['text':' What happens next depends on whether we're looking for an ','line_number':412,'multiline':False]
['text':' upper or lower quantile:','line_number':413,'multiline':False]
['text':'','line_number':414,'multiline':False]
['text':' else:','line_number':425,'multiline':False]
['text':'','line_number':454,'multiline':False]
['text':' What happens next depends on whether we're looking for an ','line_number':455,'multiline':False]
['text':' upper or lower quantile:','line_number':456,'multiline':False]
['text':'','line_number':457,'multiline':False]
['text':' else:','line_number':468,'multiline':False]
['text':'','line_number':552,'multiline':False]
['text':' Note that we adjust the guess to the nearest half-integer:','line_number':553,'multiline':False]
['text':' this increase the chances that we will bracket the root','line_number':554,'multiline':False]
['text':' with two results that both round to the same integer quickly.','line_number':555,'multiline':False]
['text':'','line_number':556,'multiline':False]
['text':' namespaces','line_number':568,'multiline':False]
['text':' BOOST_MATH_DISTRIBUTIONS_DETAIL_INV_DISCRETE_QUANTILE','line_number':570,'multiline':False]
