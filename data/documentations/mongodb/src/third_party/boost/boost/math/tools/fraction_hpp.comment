['text':'  (C) Copyright John Maddock 2005-2006.','line_number':1,'multiline':False]
['text':'  Use, modification and distribution are subject to the','line_number':2,'multiline':False]
['text':'  Boost Software License, Version 1.0. (See accompanying file','line_number':3,'multiline':False]
['text':'  LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)','line_number':4,'multiline':False]
['text':' For float, double, and long double, 1/min_value<T>() is finite.','line_number':74,'multiline':False]
['text':' But for mpfr_float and cpp_bin_float, 1/min_value<T>() is inf.','line_number':75,'multiline':False]
['text':' Multiply the min by 16 so that the reciprocal doesn't overflow.','line_number':76,'multiline':False]
['text':' namespace detail','line_number':90,'multiline':False]
['text':'','line_number':92,'multiline':False]
['text':' continued_fraction_b','line_number':93,'multiline':False]
['text':' Evaluates:','line_number':94,'multiline':False]
['text':'','line_number':95,'multiline':False]
['text':' b0 +       a1','line_number':96,'multiline':False]
['text':'      ---------------','line_number':97,'multiline':False]
['text':'      b1 +     a2','line_number':98,'multiline':False]
['text':'           ----------','line_number':99,'multiline':False]
['text':'           b2 +   a3','line_number':100,'multiline':False]
['text':'                -----','line_number':101,'multiline':False]
['text':'                b3 + ...','line_number':102,'multiline':False]
['text':'','line_number':103,'multiline':False]
['text':' Note that the first a0 returned by generator Gen is discarded.','line_number':104,'multiline':False]
['text':'','line_number':105,'multiline':False]
['text':' ADL of std names','line_number':110,'multiline':False]
['text':' ADL of std names','line_number':163,'multiline':False]
['text':' 1 / pow(result_type(2), bits);','line_number':168,'multiline':False]
['text':' ADL of std names','line_number':177,'multiline':False]
['text':' 1 / pow(result_type(2), bits);','line_number':182,'multiline':False]
['text':'','line_number':186,'multiline':False]
['text':' continued_fraction_a','line_number':187,'multiline':False]
['text':' Evaluates:','line_number':188,'multiline':False]
['text':'','line_number':189,'multiline':False]
['text':'            a1','line_number':190,'multiline':False]
['text':'      ---------------','line_number':191,'multiline':False]
['text':'      b1 +     a2','line_number':192,'multiline':False]
['text':'           ----------','line_number':193,'multiline':False]
['text':'           b2 +   a3','line_number':194,'multiline':False]
['text':'                -----','line_number':195,'multiline':False]
['text':'                b3 + ...','line_number':196,'multiline':False]
['text':'','line_number':197,'multiline':False]
['text':' Note that the first a1 and b1 returned by generator Gen are both used.','line_number':198,'multiline':False]
['text':'','line_number':199,'multiline':False]
['text':' ADL of std names','line_number':204,'multiline':False]
['text':' ADL of std names','line_number':259,'multiline':False]
['text':' 1 / pow(result_type(2), bits);','line_number':264,'multiline':False]
['text':' ADL of std names','line_number':274,'multiline':False]
['text':' 1 / pow(result_type(2), bits);','line_number':279,'multiline':False]
['text':' namespace tools','line_number':283,'multiline':False]
['text':' namespace math','line_number':284,'multiline':False]
['text':' namespace boost','line_number':285,'multiline':False]
['text':' BOOST_MATH_TOOLS_FRACTION_INCLUDED','line_number':287,'multiline':False]
