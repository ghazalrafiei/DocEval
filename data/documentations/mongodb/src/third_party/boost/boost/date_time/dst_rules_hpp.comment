['text':' Copyright (c) 2002,2003, 2007 CrystalClear Software, Inc.
 * Use, modification and distribution is subject to the
 * Boost Software License, Version 1.0. (See accompanying
 * file LICENSE_1_0.txt or http://www.boost.org/LICENSE_1_0.txt)
 * Author: Jeff Garland, Bart Garst
 * $Date$
 ','line_number':4,'multiline':True]
['text':'! @file dst_rules.hpp
  Contains template class to provide static dst rule calculations
','line_number':12,'multiline':True]
['text':'! Dynamic class used to caluclate dst transition information','line_number':28,'multiline':False]
['text':'! Check the local time offset when on dst start day','line_number':37,'multiline':False]
['text':'! On this dst transition, the time label between
       *  the transition boundary and the boudary + the offset
       *  are invalid times.  If before the boundary then still
       *  not in dst.
       *@param time_of_day Time offset in the day for the local time
       *@param dst_start_offset_minutes Local day offset for start of dst
       *@param dst_length_minutes Number of minutes to adjust clock forward
       *@retval status of time label w.r.t. dst
       ','line_number':38,'multiline':True]
['text':'std::cout << "here" << std::endl;','line_number':52,'multiline':False]
['text':'! Check the local time offset when on the last day of dst','line_number':63,'multiline':False]
['text':'! This is the calculation for the DST end day.  On that day times
       *  prior to the conversion time - dst_length (1 am in US) are still
       *  in dst.  Times between the above and the switch time are
       *  ambiguous.  Times after the start_offset are not in dst.
       *@param time_of_day Time offset in the day for the local time
       *@param dst_end_offset_minutes Local time of day for end of dst
       *@retval status of time label w.r.t. dst
       ','line_number':64,'multiline':True]
['text':'in US this will be 60 so offset in day is 1,0,0','line_number':77,'multiline':False]
['text':'! Calculates if the given local time is dst or not','line_number':88,'multiline':False]
['text':'! Determines if the time is really in DST or not.  Also checks for
       *  invalid and ambiguous.
       *  @param current_day The day to check for dst
       *  @param time_of_day Time offset within the day to check
       *  @param dst_start_day  Starting day of dst for the given locality
       *  @param dst_start_offset Time offset within day for dst boundary
       *  @param dst_end_day    Ending day of dst for the given locality
       *  @param dst_end_offset Time offset within day given in dst for dst boundary
       *  @param dst_length_minutes length of dst adjusment
       *  @retval The time is either ambiguous, invalid, in dst, or not in dst
       ','line_number':89,'multiline':True]
['text':'! Calculates if the given local time is dst or not','line_number':122,'multiline':False]
['text':'! Determines if the time is really in DST or not.  Also checks for
       *  invalid and ambiguous.
       *  @param current_day The day to check for dst
       *  @param time_of_day Time offset within the day to check
       *  @param dst_start_day  Starting day of dst for the given locality
       *  @param dst_start_offset_minutes Offset within day for dst
       *         boundary (eg 120 for US which is 02:00:00)
       *  @param dst_end_day    Ending day of dst for the given locality
       *  @param dst_end_offset_minutes Offset within day given in dst for dst
       *         boundary (eg 120 for US which is 02:00:00)
       *  @param dst_length_minutes Length of dst adjusment (eg: 60 for US)
       *  @retval The time is either ambiguous, invalid, in dst, or not in dst
       ','line_number':123,'multiline':True]
['text':'in northern hemisphere dst is in the middle of the year','line_number':145,'multiline':False]
['text':'southern hemisphere dst is at begining /end of year','line_number':154,'multiline':False]
['text':'you should never reach this statement','line_number':174,'multiline':False]
['text':'! Compile-time configurable daylight savings time calculation engine','line_number':181,'multiline':False]
['text':' This template provides the ability to configure a daylight savings
     * calculation at compile time covering all the cases.  Unfortunately
     * because of the number of dimensions related to daylight savings
     * calculation the number of parameters is high.  In addition, the
     * start and end transition rules are complex types that specify
     * an algorithm for calculation of the starting day and ending
     * day of daylight savings time including the month and day
     * specifications (eg: last sunday in October).
     *
     * @param date_type A type that represents dates, typically gregorian::date
     * @param time_duration_type Used for the offset in the day calculations
     * @param dst_traits A set of traits that define the rules of dst
     *        calculation.  The dst_trait must include the following:
     * start_rule_functor - Rule to calculate the starting date of a
     *                      dst transition (eg: last_kday_of_month).
     * start_day - static function that returns month of dst start for
     *             start_rule_functor
     * start_month -static function that returns day or day of week for
     *              dst start of dst
     * end_rule_functor - Rule to calculate the end of dst day.
     * end_day - static fucntion that returns end day for end_rule_functor
     * end_month - static function that returns end month for end_rule_functor
     * dst_start_offset_minutes - number of minutes from start of day to transition to dst -- 120 (or 2:00 am) is typical for the U.S. and E.U.
     * dst_start_offset_minutes - number of minutes from start of day to transition off of dst -- 180 (or 3:00 am) is typical for E.U.
     * dst_length_minutes - number of minutes that dst shifts clock
     ','line_number':182,'multiline':True]
['text':'! Calculates if the given local time is dst or not','line_number':218,'multiline':False]
['text':'! Determines if the time is really in DST or not.  Also checks for
       *  invalid and ambiguous.
       *  @retval The time is either ambiguous, invalid, in dst, or not in dst
       ','line_number':219,'multiline':True]
['text':'! The time of day for the dst transition (eg: typically 01:00:00 or 02:00:00)','line_number':246,'multiline':False]
['text':'! Depricated: Class to calculate dst boundaries for US time zones','line_number':265,'multiline':False]
['text':' Use dst_calc_engine instead.
     * In 2007 US/Canada DST rules changed
     * (http://en.wikipedia.org/wiki/Energy_Policy_Act_of_2005#Change_to_daylight_saving_time).
     ','line_number':266,'multiline':True]
['text':'from start of day','line_number':272,'multiline':False]
['text':'1 hour == 60 min in US','line_number':273,'multiline':False]
['text':'! Calculates if the given local time is dst or not','line_number':286,'multiline':False]
['text':'! Determines if the time is really in DST or not.  Also checks for
       *  invalid and ambiguous.
       *  @retval The time is either ambiguous, invalid, in dst, or not in dst
       ','line_number':287,'multiline':True]
['text':'second sunday in march','line_number':316,'multiline':False]
['text':'first sunday in april','line_number':320,'multiline':False]
['text':'first sunday in november','line_number':329,'multiline':False]
['text':'last sunday in october','line_number':333,'multiline':False]
['text':'! Used for local time adjustments in places that don't use dst','line_number':349,'multiline':False]
['text':'! Calculates if the given local time is dst or not','line_number':358,'multiline':False]
['text':'! @retval Always is_not_in_dst since this is for zones without dst
       ','line_number':359,'multiline':True]
['text':'! Calculates if the given utc time is in dst','line_number':367,'multiline':False]
['text':'d','line_number':374,'multiline':True]
['text':'namespace date_time','line_number':387,'multiline':False]
