['text':' Copyright David Abrahams, Daniel Wallin 2003.','line_number':1,'multiline':False]
['text':' Copyright Cromwell D. Enage 2018.','line_number':2,'multiline':False]
['text':' Distributed under the Boost Software License, Version 1.0.','line_number':3,'multiline':False]
['text':' (See accompanying file LICENSE_1_0.txt or copy at','line_number':4,'multiline':False]
['text':' http://www.boost.org/LICENSE_1_0.txt)','line_number':5,'multiline':False]
['text':' namespace boost::parameter::aux','line_number':23,'multiline':False]
['text':' Borland needs the insane extra-indirection workaround below so that','line_number':69,'multiline':False]
['text':' it doesn't magically drop the const qualifier from the argument type.','line_number':70,'multiline':False]
['text':' If this argument is either explicitly tagged or a deduced','line_number':110,'multiline':False]
['text':' parameter, then turn off positional matching.','line_number':111,'multiline':False]
['text':' !defined(BOOST_PARAMETER_CAN_USE_MP11)','line_number':126,'multiline':False]
['text':' BOOST_PARAMETER_CAN_USE_MP11','line_number':140,'multiline':False]
['text':' If this parameter is explicitly tagged, then add it to the','line_number':142,'multiline':False]
['text':' used-parmeters set.  We only really need to add parameters','line_number':143,'multiline':False]
['text':' that are deduced, but we would need a way to check if','line_number':144,'multiline':False]
['text':' a given tag corresponds to a deduced parameter spec.','line_number':145,'multiline':False]
['text':' If this parameter is neither explicitly tagged nor positionally','line_number':160,'multiline':False]
['text':' matched, then deduce the tag from the deduced parameter specs.','line_number':161,'multiline':False]
['text':' If this parameter is explicitly tagged ...','line_number':196,'multiline':False]
['text':' ... just use it','line_number':199,'multiline':False]
['text':' ... else ...','line_number':201,'multiline':False]
['text':' if positional matching is turned on ...','line_number':203,'multiline':False]
['text':' ... tag it positionally','line_number':205,'multiline':False]
['text':' ... else, use the deduced tag','line_number':210,'multiline':False]
['text':' !defined(BOOST_PARAMETER_CAN_USE_MP11)','line_number':214,'multiline':False]
['text':' If this parameter is explicitly tagged ...','line_number':215,'multiline':False]
['text':' ... just use it','line_number':218,'multiline':False]
['text':' ... else ...','line_number':220,'multiline':False]
['text':' if positional matching is turned on ...','line_number':222,'multiline':False]
['text':' ... tag it positionally','line_number':224,'multiline':False]
['text':' ... else, use the deduced tag','line_number':226,'multiline':False]
['text':' BOOST_PARAMETER_CAN_USE_MP11','line_number':230,'multiline':False]
['text':' Build the arg_list incrementally, prepending new nodes.','line_number':232,'multiline':False]
['text':' !defined(BOOST_PARAMETER_CAN_USE_MP11)','line_number':263,'multiline':False]
['text':' BOOST_PARAMETER_CAN_USE_MP11','line_number':274,'multiline':False]
['text':' Borland workarounds needed.','line_number':332,'multiline':False]
['text':' Returns an ArgumentPack where the list of arguments has been tagged','line_number':334,'multiline':False]
['text':' with keyword tags.','line_number':335,'multiline':False]
['text':'','line_number':336,'multiline':False]
['text':'   List:         A specialization of item<> (see below). Contains both','line_number':337,'multiline':False]
['text':'                 the ordered ParameterSpecs, and the given arguments.','line_number':338,'multiline':False]
['text':'','line_number':339,'multiline':False]
['text':'   DeducedArgs:  A specialization of deduced_item<> (see below).','line_number':340,'multiline':False]
['text':'                 A list containing only the deduced ParameterSpecs.','line_number':341,'multiline':False]
['text':'','line_number':342,'multiline':False]
['text':'   TagFn:        A metafunction class used to tag positional or deduced','line_number':343,'multiline':False]
['text':'                 arguments with a keyword tag.','line_number':344,'multiline':False]
['text':'','line_number':345,'multiline':False]
['text':'   IsPositional: An mpl::bool_<> specialization indicating if positional','line_number':346,'multiline':False]
['text':'                 matching is to be performed.','line_number':347,'multiline':False]
['text':'','line_number':348,'multiline':False]
['text':'   DeducedSet:   An mpl::set<> containing the keyword tags used so far.','line_number':349,'multiline':False]
['text':'','line_number':350,'multiline':False]
['text':'   ArgumentPack: The ArgumentPack built so far. This is initially an','line_number':351,'multiline':False]
['text':'                 empty_arg_list and is built incrementally.','line_number':352,'multiline':False]
['text':' namespace boost::parameter::aux','line_number':388,'multiline':False]
['text':' VC6.5 was choking on the default parameters for make_arg_list_aux,','line_number':394,'multiline':False]
['text':' so this just forwards to that adding in the defaults.','line_number':395,'multiline':False]
['text':' namespace boost::parameter::aux','line_number':435,'multiline':False]
['text':' include guard','line_number':437,'multiline':False]
