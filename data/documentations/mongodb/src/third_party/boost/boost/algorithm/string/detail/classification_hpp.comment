['text':'  Boost string_algo library classification.hpp header file  ---------------------------//','line_number':1,'multiline':False]
['text':'  Copyright Pavol Droba 2002-2003.','line_number':3,'multiline':False]
['text':' ','line_number':4,'multiline':False]
['text':' Distributed under the Boost Software License, Version 1.0.','line_number':5,'multiline':False]
['text':'    (See accompanying file LICENSE_1_0.txt or copy at','line_number':6,'multiline':False]
['text':'          http://www.boost.org/LICENSE_1_0.txt)','line_number':7,'multiline':False]
['text':'  See http://www.boost.org/ for updates, documentation, and revision history.','line_number':9,'multiline':False]
['text':'  classification functors -----------------------------------------------//','line_number':31,'multiline':False]
['text':' is_classified functor','line_number':33,'multiline':False]
['text':' Boost.ResultOf support','line_number':37,'multiline':False]
['text':' Constructor from a locale','line_number':40,'multiline':False]
['text':' Operation','line_number':43,'multiline':False]
['text':' is_any_of functor','line_number':64,'multiline':False]
['text':'
                returns true if the value is from the specified set
            ','line_number':65,'multiline':True]
['text':' set cannot operate on const value-type','line_number':73,'multiline':False]
['text':' Boost.ResultOf support','line_number':77,'multiline':False]
['text':' Constructor','line_number':80,'multiline':False]
['text':' Prepare storage','line_number':84,'multiline':False]
['text':' Use fixed storage','line_number':93,'multiline':False]
['text':' Use dynamic storage','line_number':98,'multiline':False]
['text':' Use fixed storage','line_number':103,'multiline':False]
['text':' Copy constructor','line_number':108,'multiline':False]
['text':' Prepare storage','line_number':111,'multiline':False]
['text':' Use fixed storage','line_number':118,'multiline':False]
['text':' Use dynamic storage','line_number':124,'multiline':False]
['text':' Use fixed storage','line_number':130,'multiline':False]
['text':' Destructor','line_number':134,'multiline':False]
['text':' Assignment','line_number':143,'multiline':False]
['text':' Handle self assignment','line_number':146,'multiline':False]
['text':' Prepare storage             ','line_number':149,'multiline':False]
['text':' Use fixed storage','line_number':155,'multiline':False]
['text':' Delete old storage if was present','line_number':159,'multiline':False]
['text':' Set new size','line_number':165,'multiline':False]
['text':' Other uses dynamic storage','line_number':170,'multiline':False]
['text':' Check what kind of storage are we using right now','line_number':173,'multiline':False]
['text':' Using fixed storage, allocate new','line_number':176,'multiline':False]
['text':' Using dynamic storage, check if can reuse','line_number':184,'multiline':False]
['text':' Reuse the current storage','line_number':187,'multiline':False]
['text':' Allocate the new one','line_number':193,'multiline':False]
['text':' Delete old storage if necessary','line_number':197,'multiline':False]
['text':' Store the new storage','line_number':202,'multiline':False]
['text':' Set new size','line_number':204,'multiline':False]
['text':' Copy the data','line_number':210,'multiline':False]
['text':' Operation','line_number':216,'multiline':False]
['text':' check if the size is eligible for fixed storage','line_number':228,'multiline':False]
['text':' storage','line_number':236,'multiline':False]
['text':' The actual used storage is selected on the type','line_number':237,'multiline':False]
['text':' storage size','line_number':245,'multiline':False]
['text':' is_from_range functor','line_number':249,'multiline':False]
['text':'
                returns true if the value is from the specified range.
                (i.e. x>=From && x>=To)
            ','line_number':250,'multiline':True]
['text':' Boost.ResultOf support','line_number':258,'multiline':False]
['text':' Constructor','line_number':261,'multiline':False]
['text':' Operation','line_number':264,'multiline':False]
['text':' class_and composition predicate','line_number':276,'multiline':False]
['text':' Boost.ResultOf support','line_number':283,'multiline':False]
['text':' Constructor','line_number':286,'multiline':False]
['text':' Operation','line_number':290,'multiline':False]
['text':' class_or composition predicate','line_number':302,'multiline':False]
['text':' Boost.ResultOf support','line_number':308,'multiline':False]
['text':' Constructor','line_number':311,'multiline':False]
['text':' Operation','line_number':315,'multiline':False]
['text':' class_not composition predicate','line_number':327,'multiline':False]
['text':' Boost.ResultOf support','line_number':333,'multiline':False]
['text':' Constructor','line_number':336,'multiline':False]
['text':' Operation','line_number':339,'multiline':False]
['text':' namespace detail','line_number':350,'multiline':False]
['text':' namespace algorithm','line_number':351,'multiline':False]
['text':' namespace boost','line_number':352,'multiline':False]
['text':' BOOST_STRING_CLASSIFICATION_DETAIL_HPP','line_number':355,'multiline':False]
