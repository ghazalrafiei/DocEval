['text':'  Boost string_algo library find_iterator.hpp header file  ---------------------------//','line_number':1,'multiline':False]
['text':'  Copyright Pavol Droba 2002-2004.','line_number':3,'multiline':False]
['text':'','line_number':4,'multiline':False]
['text':' Distributed under the Boost Software License, Version 1.0.','line_number':5,'multiline':False]
['text':'    (See accompanying file LICENSE_1_0.txt or copy at','line_number':6,'multiline':False]
['text':'          http://www.boost.org/LICENSE_1_0.txt)','line_number':7,'multiline':False]
['text':'  See http://www.boost.org/ for updates, documentation, and revision history.','line_number':9,'multiline':False]
['text':'! \file
    Defines find iterator classes. Find iterator repeatedly applies a Finder
    to the specified input string to search for matches. Dereferencing
    the iterator yields the current match or a range between the last and the current
    match depending on the iterator used.
','line_number':26,'multiline':True]
['text':'  find_iterator -----------------------------------------------//','line_number':36,'multiline':False]
['text':'! find_iterator','line_number':38,'multiline':False]
['text':'!    
            Find iterator encapsulates a Finder and allows
            for incremental searching in a string.
            Each increment moves the iterator to the next match.

            Find iterator is a readable forward traversal iterator.

            Dereferencing the iterator yields an iterator_range delimiting
            the current match.
        ','line_number':39,'multiline':True]
['text':' facade support','line_number':58,'multiline':False]
['text':' typedefs','line_number':62,'multiline':False]
['text':'! Default constructor','line_number':71,'multiline':False]
['text':'!
                Construct null iterator. All null iterators are equal.

                \post eof()==true
            ','line_number':72,'multiline':True]
['text':'! Copy constructor','line_number':79,'multiline':False]
['text':'!
                Construct a copy of the find_iterator
            ','line_number':80,'multiline':True]
['text':'! Constructor','line_number':88,'multiline':False]
['text':'!
                Construct new find_iterator for a given finder
                and a range.
            ','line_number':89,'multiline':True]
['text':'! Constructor','line_number':105,'multiline':False]
['text':'!
                Construct new find_iterator for a given finder
                and a range.
            ','line_number':106,'multiline':True]
['text':' iterator operations','line_number':124,'multiline':False]
['text':' dereference','line_number':126,'multiline':False]
['text':' increment','line_number':132,'multiline':False]
['text':' comparison','line_number':138,'multiline':False]
['text':' operations','line_number':152,'multiline':False]
['text':'! Eof check','line_number':154,'multiline':False]
['text':'!
                Check the eof condition. Eof condition means that
                there is nothing more to be searched i.e. find_iterator
                is after the last match.
            ','line_number':155,'multiline':True]
['text':' Attributes','line_number':171,'multiline':False]
['text':'! find iterator construction helper','line_number':176,'multiline':False]
['text':'!
         *    Construct a find iterator to iterate through the specified string
         ','line_number':177,'multiline':True]
['text':'  split iterator -----------------------------------------------//','line_number':191,'multiline':False]
['text':'! split_iterator','line_number':193,'multiline':False]
['text':'!    
            Split iterator encapsulates a Finder and allows
            for incremental searching in a string.
            Unlike the find iterator, split iterator iterates
            through gaps between matches.

            Find iterator is a readable forward traversal iterator.

            Dereferencing the iterator yields an iterator_range delimiting
            the current match.
        ','line_number':194,'multiline':True]
['text':' facade support','line_number':214,'multiline':False]
['text':' typedefs','line_number':218,'multiline':False]
['text':'! Default constructor','line_number':227,'multiline':False]
['text':'!
                Construct null iterator. All null iterators are equal.
    
                \post eof()==true
            ','line_number':228,'multiline':True]
['text':'! Copy constructor','line_number':239,'multiline':False]
['text':'!
                Construct a copy of the split_iterator
            ','line_number':240,'multiline':True]
['text':'! Constructor','line_number':251,'multiline':False]
['text':'!
                Construct new split_iterator for a given finder
                and a range.
            ','line_number':252,'multiline':True]
['text':' force the correct behavior for empty sequences and yield at least one token','line_number':267,'multiline':False]
['text':'! Constructor','line_number':273,'multiline':False]
['text':'!
                Construct new split_iterator for a given finder
                and a collection.
            ','line_number':274,'multiline':True]
['text':' force the correct behavior for empty sequences and yield at least one token','line_number':290,'multiline':False]
['text':' iterator operations','line_number':299,'multiline':False]
['text':' dereference','line_number':301,'multiline':False]
['text':' increment','line_number':307,'multiline':False]
['text':' Mark iterator as eof','line_number':316,'multiline':False]
['text':' comparison','line_number':325,'multiline':False]
['text':' operations','line_number':340,'multiline':False]
['text':'! Eof check','line_number':342,'multiline':False]
['text':'!
                Check the eof condition. Eof condition means that
                there is nothing more to be searched i.e. find_iterator
                is after the last match.
            ','line_number':343,'multiline':True]
['text':' Attributes','line_number':354,'multiline':False]
['text':'! split iterator construction helper','line_number':361,'multiline':False]
['text':'!
         *    Construct a split iterator to iterate through the specified collection
         ','line_number':362,'multiline':True]
['text':' namespace algorithm','line_number':377,'multiline':False]
['text':' pull names to the boost namespace','line_number':379,'multiline':False]
['text':' namespace boost','line_number':385,'multiline':False]
['text':' BOOST_STRING_FIND_ITERATOR_HPP','line_number':388,'multiline':False]
