['text':' MS compatible compilers support #pragma once','line_number':4,'multiline':False]
['text':'///////1/////////2/////////3/////////4/////////5/////////6/////////7/////////8','line_number':9,'multiline':False]
['text':' basic_binary_iarchive.hpp','line_number':10,'multiline':False]
['text':'','line_number':11,'multiline':False]
['text':' archives stored as native binary - this should be the fastest way','line_number':12,'multiline':False]
['text':' to archive the state of a group of obects.  It makes no attempt to','line_number':13,'multiline':False]
['text':' convert to any canonical form.','line_number':14,'multiline':False]
['text':' IN GENERAL, ARCHIVES CREATED WITH THIS CLASS WILL NOT BE READABLE','line_number':16,'multiline':False]
['text':' ON PLATFORM APART FROM THE ONE THEY ARE CREATED ON','line_number':17,'multiline':False]
['text':' (C) Copyright 2002 Robert Ramey - http://www.rrsd.com .','line_number':19,'multiline':False]
['text':' Use, modification and distribution is subject to the Boost Software','line_number':20,'multiline':False]
['text':' License, Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at','line_number':21,'multiline':False]
['text':' http://www.boost.org/LICENSE_1_0.txt)','line_number':22,'multiline':False]
['text':'  See http://www.boost.org for updates, documentation, and revision history.','line_number':24,'multiline':False]
['text':' must be the last header','line_number':42,'multiline':False]
['text':' namespace detail','line_number':49,'multiline':False]
['text':'///////////////////////////////////////////////////////////////////////','line_number':51,'multiline':False]
['text':' class basic_binary_iarchive - read serialized objects from a input binary stream','line_number':52,'multiline':False]
['text':' for some inexplicable reason insertion of "class" generates compile erro','line_number':62,'multiline':False]
['text':' on msvc 7.1','line_number':63,'multiline':False]
['text':' intermediate level to support override of operators','line_number':69,'multiline':False]
['text':' fot templates in the absence of partial function','line_number':70,'multiline':False]
['text':' template ordering. If we get here pass to base class','line_number':71,'multiline':False]
['text':' note extra nonsense to sneak it pass the borland compiers','line_number':72,'multiline':False]
['text':' include these to trap a change in binary format which','line_number':79,'multiline':False]
['text':' isn't specifically handled','line_number':80,'multiline':False]
['text':' upto 32K classes','line_number':81,'multiline':False]
['text':' upto 2G objects','line_number':84,'multiline':False]
['text':' binary files don't include the optional information','line_number':88,'multiline':False]
['text':' t ','line_number':89,'multiline':True]
['text':'version','line_number':91,'multiline':True]
['text':'
         * library versions:
         *   boost 1.39 -> 5
         *   boost 1.43 -> 7
         *   boost 1.47 -> 9
         *
         *
         * 1) in boost 1.43 and inferior, class_id_type is always a 16bit value, with no check on the library version
         *   --> this means all archives with version v <= 7 are written with a 16bit class_id_type
         * 2) in boost 1.44 this load_override has disappeared (and thus boost 1.44 is not backward compatible at all !!)
         * 3) recent boosts reintroduced load_override with a test on the version :
         *     - v > 7 : this->detail_common_iarchive::load_override(t, version)
         *     - v > 6 : 16bit
         *     - other : 32bit
         *   --> which is obviously incorrect, see point 1
         *
         * the fix here decodes class_id_type on 16bit for all v <= 7, which seems to be the correct behaviour ...
         ','line_number':106,'multiline':True]
['text':' upto 255 versions','line_number':156,'multiline':False]
['text':'        if(boost::serialization::library_version_type(7) < lvt){','line_number':170,'multiline':False]
['text':' namespace archive','line_number':208,'multiline':False]
['text':' namespace boost','line_number':209,'multiline':False]
['text':' pops abi_suffix.hpp pragmas','line_number':215,'multiline':False]
['text':' BOOST_ARCHIVE_BASIC_BINARY_IARCHIVE_HPP','line_number':217,'multiline':False]
