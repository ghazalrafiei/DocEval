['text':' MS compatible compilers support #pragma once','line_number':4,'multiline':False]
['text':'///////1/////////2/////////3/////////4/////////5/////////6/////////7/////////8','line_number':9,'multiline':False]
['text':' basic_archive.hpp:','line_number':10,'multiline':False]
['text':' (C) Copyright 2002 Robert Ramey - http://www.rrsd.com .','line_number':12,'multiline':False]
['text':' Use, modification and distribution is subject to the Boost Software','line_number':13,'multiline':False]
['text':' License, Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at','line_number':14,'multiline':False]
['text':' http://www.boost.org/LICENSE_1_0.txt)','line_number':15,'multiline':False]
['text':'  See http://www.boost.org for updates, documentation, and revision history.','line_number':17,'multiline':False]
['text':' count','line_number':18,'multiline':False]
['text':' must be the last header','line_number':26,'multiline':False]
['text':' create alias in boost::archive for older user code.','line_number':39,'multiline':False]
['text':' should be private - but MPI fails if it's not!!!','line_number':47,'multiline':False]
['text':' used for text output','line_number':59,'multiline':False]
['text':' used for text intput','line_number':63,'multiline':False]
['text':' should be private - but then can't use BOOST_STRONG_TYPE below','line_number':80,'multiline':False]
['text':'       BOOST_ASSERT(t_ <= boost::integer_traits<base_type>::const_max);','line_number':86,'multiline':False]
['text':' used for text output','line_number':96,'multiline':False]
['text':' used for text input','line_number':100,'multiline':False]
['text':' note: presumes that size_t >= unsigned int.','line_number':120,'multiline':False]
['text':' use explicit cast to silence useless warning','line_number':121,'multiline':False]
['text':' make quadruple sure that we haven't lost any real integer','line_number':123,'multiline':False]
['text':' precision','line_number':124,'multiline':False]
['text':' used for text output','line_number':134,'multiline':False]
['text':' used for text input','line_number':138,'multiline':False]
['text':' suppress archive header info','line_number':208,'multiline':False]
['text':' suppress alteration of codecvt facet','line_number':209,'multiline':False]
['text':' suppress checking of xml tags','line_number':210,'multiline':False]
['text':' suppress ALL tracking','line_number':211,'multiline':False]
['text':' NOTE : Warning  : Warning : Warning : Warning : Warning
 * If any of these are changed to different sized types,
 * binary_iarchive won't be able to read older archives
 * unless you rev the library version and include conditional
 * code based on the library version.  There is nothing
 * inherently wrong in doing this - but you have to be super
 * careful because it's easy to get wrong and start breaking
 * old archives !!!
 ','line_number':218,'multiline':True]
['text':'','line_number':233,'multiline':True]
['text':' namespace archive','line_number':239,'multiline':False]
['text':' namespace boost','line_number':240,'multiline':False]
['text':' pops abi_suffix.hpp pragmas','line_number':242,'multiline':False]
['text':' set implementation level to primitive for all types','line_number':246,'multiline':False]
['text':' used internally by the serialization library','line_number':247,'multiline':False]
['text':' set types used internally by the serialization library','line_number':261,'multiline':False]
['text':' to be bitwise serializable','line_number':262,'multiline':False]
['text':'BOOST_ARCHIVE_BASIC_ARCHIVE_HPP','line_number':274,'multiline':False]
