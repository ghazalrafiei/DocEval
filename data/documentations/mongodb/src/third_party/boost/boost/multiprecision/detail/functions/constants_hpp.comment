['text':' Copyright 2011 John Maddock.','line_number':1,'multiline':False]
['text':' Distributed under the Boost Software License, Version 1.0.','line_number':2,'multiline':False]
['text':'    (See accompanying file LICENSE_1_0.txt or copy at','line_number':3,'multiline':False]
['text':'          http://www.boost.org/LICENSE_1_0.txt)','line_number':4,'multiline':False]
['text':'','line_number':5,'multiline':False]
['text':' This file has no include guards or namespaces - it's expanded inline inside default_ops.hpp','line_number':6,'multiline':False]
['text':'','line_number':7,'multiline':False]
['text':'','line_number':15,'multiline':False]
['text':' String value with 1100 digits:','line_number':16,'multiline':False]
['text':'','line_number':17,'multiline':False]
['text':'','line_number':30,'multiline':False]
['text':' Check if we can just construct from string:','line_number':31,'multiline':False]
['text':'','line_number':32,'multiline':False]
['text':' 3640 binary digits ~ 1100 decimal digits','line_number':33,'multiline':False]
['text':'','line_number':38,'multiline':False]
['text':' We calculate log2 from using the formula:','line_number':39,'multiline':False]
['text':'','line_number':40,'multiline':False]
['text':' ln(2) = 3/4 SUM[n>=0] ((-1)^n * N!^2 / (2^n(2n+1)!))','line_number':41,'multiline':False]
['text':'','line_number':42,'multiline':False]
['text':' Numerator and denominator are calculated separately and then','line_number':43,'multiline':False]
['text':' divided at the end, we also precalculate the terms up to n = 5','line_number':44,'multiline':False]
['text':' since these fit in a 32-bit integer anyway.','line_number':45,'multiline':False]
['text':'','line_number':46,'multiline':False]
['text':' See Gourdon, X., and Sebah, P. The logarithmic constant: log 2, Jan. 2004.','line_number':47,'multiline':False]
['text':' Also http://www.mpfr.org/algorithms.pdf.','line_number':48,'multiline':False]
['text':'','line_number':49,'multiline':False]
['text':'','line_number':84,'multiline':False]
['text':' 1100 digits in string form:','line_number':85,'multiline':False]
['text':'','line_number':86,'multiline':False]
['text':'','line_number':99,'multiline':False]
['text':' Check if we can just construct from string:','line_number':100,'multiline':False]
['text':'','line_number':101,'multiline':False]
['text':' 3640 binary digits ~ 1100 decimal digits','line_number':102,'multiline':False]
['text':'','line_number':112,'multiline':False]
['text':' Standard evaluation from the definition of e: http://functions.wolfram.com/Constants/E/02/','line_number':113,'multiline':False]
['text':'','line_number':114,'multiline':False]
['text':'','line_number':134,'multiline':False]
['text':' 1100 digits in string form:','line_number':135,'multiline':False]
['text':'','line_number':136,'multiline':False]
['text':'','line_number':149,'multiline':False]
['text':' Check if we can just construct from string:','line_number':150,'multiline':False]
['text':'','line_number':151,'multiline':False]
['text':' 3640 binary digits ~ 1100 decimal digits','line_number':152,'multiline':False]
['text':'','line_number':171,'multiline':False]
['text':' This algorithm is from:','line_number':172,'multiline':False]
['text':' Schonhage, A., Grotefeld, A. F. W., and Vetter, E. Fast Algorithms: A Multitape Turing','line_number':173,'multiline':False]
['text':' Machine Implementation. BI Wissenschaftverlag, 1994.','line_number':174,'multiline':False]
['text':' Also described in MPFR's algorithm guide: http://www.mpfr.org/algorithms.pdf.','line_number':175,'multiline':False]
['text':'','line_number':176,'multiline':False]
['text':' Let:','line_number':177,'multiline':False]
['text':' a[0] = A[0] = 1','line_number':178,'multiline':False]
['text':' B[0] = 1/2','line_number':179,'multiline':False]
['text':' D[0] = 1/4','line_number':180,'multiline':False]
['text':' Then:','line_number':181,'multiline':False]
['text':' S[k+1] = (A[k]+B[k]) / 4','line_number':182,'multiline':False]
['text':' b[k] = sqrt(B[k])','line_number':183,'multiline':False]
['text':' a[k+1] = a[k]^2','line_number':184,'multiline':False]
['text':' B[k+1] = 2(A[k+1]-S[k+1])','line_number':185,'multiline':False]
['text':' D[k+1] = D[k] - 2^k(A[k+1]-B[k+1])','line_number':186,'multiline':False]
['text':' Stop when |A[k]-B[k]| <= 2^(k-p)','line_number':187,'multiline':False]
['text':' and PI = B[k]/D[k]','line_number':188,'multiline':False]
['text':' conditional expression is constant','line_number':265,'multiline':False]
