['text':'=============================================================================
    Phoenix V1.2.1
    Copyright (c) 2001-2002 Joel de Guzman

  Distributed under the Boost Software License, Version 1.0. (See accompanying
  file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
==============================================================================','line_number':1,'multiline':True]
['text':'/////////////////////////////////////////////////////////////////////////////','line_number':11,'multiline':False]
['text':'','line_number':12,'multiline':False]
['text':'  Phoenix predefined maximum limit. This limit defines the maximum','line_number':13,'multiline':False]
['text':'  number of elements a tuple can hold. This number defaults to 3. The','line_number':14,'multiline':False]
['text':'  actual maximum is rounded up in multiples of 3. Thus, if this value','line_number':15,'multiline':False]
['text':'  is 4, the actual limit is 6. The ultimate maximum limit in this','line_number':16,'multiline':False]
['text':'  implementation is 15.','line_number':17,'multiline':False]
['text':'','line_number':18,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////////','line_number':19,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////////','line_number':24,'multiline':False]
['text':'assignment operator could not be generated','line_number':31,'multiline':False]
['text':' bogus https://developercommunity.visualstudio.com/t/buggy-warning-c4709/471956','line_number':32,'multiline':False]
['text':'comma operator within array index expression','line_number':33,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////////','line_number':36,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////////','line_number':39,'multiline':False]
['text':'','line_number':40,'multiline':False]
['text':'  tuple','line_number':41,'multiline':False]
['text':'','line_number':42,'multiline':False]
['text':'      Tuples hold heterogeneous types up to a predefined maximum. Only','line_number':43,'multiline':False]
['text':'      the most basic functionality needed is provided. Unlike other','line_number':44,'multiline':False]
['text':'      recursive list-like tuple implementations, this tuple','line_number':45,'multiline':False]
['text':'      implementation uses simple structs similar to std::pair with','line_number':46,'multiline':False]
['text':'      specialization for 0 to N tuple elements.','line_number':47,'multiline':False]
['text':'','line_number':48,'multiline':False]
['text':'          1)  Construction','line_number':49,'multiline':False]
['text':'              Here are examples on how to construct tuples:','line_number':50,'multiline':False]
['text':'','line_number':51,'multiline':False]
['text':'                  typedef tuple<int, char> t1_t;','line_number':52,'multiline':False]
['text':'                  typedef tuple<int, std::string, double> t2_t;','line_number':53,'multiline':False]
['text':'','line_number':54,'multiline':False]
['text':'                  // this tuple has an int and char members','line_number':55,'multiline':False]
['text':'                  t1_t t1(3, 'c');','line_number':56,'multiline':False]
['text':'','line_number':57,'multiline':False]
['text':'                  // this tuple has an int, std::string and double members','line_number':58,'multiline':False]
['text':'                  t2_t t2(3, "hello", 3.14);','line_number':59,'multiline':False]
['text':'','line_number':60,'multiline':False]
['text':'              Tuples can also be constructed from other tuples. The','line_number':61,'multiline':False]
['text':'              source and destination tuples need not have exactly the','line_number':62,'multiline':False]
['text':'              same element types. The only requirement is that the','line_number':63,'multiline':False]
['text':'              source tuple have the same number of elements as the','line_number':64,'multiline':False]
['text':'              destination and that each element slot in the','line_number':65,'multiline':False]
['text':'              destination can be copy constructed from the source','line_number':66,'multiline':False]
['text':'              element. For example:','line_number':67,'multiline':False]
['text':'','line_number':68,'multiline':False]
['text':'                  tuple<double, double> t3(t1); // OK. Compatible tuples','line_number':69,'multiline':False]
['text':'                  tuple<double, double> t4(t2); // Error! Incompatible tuples','line_number':70,'multiline':False]
['text':'','line_number':71,'multiline':False]
['text':'          2)  Member access','line_number':72,'multiline':False]
['text':'                  A member in a tuple can be accessed using the','line_number':73,'multiline':False]
['text':'                  tuple's [] operator by specifying the Nth','line_number':74,'multiline':False]
['text':'                  tuple_index. Here are some examples:','line_number':75,'multiline':False]
['text':'','line_number':76,'multiline':False]
['text':'                      tuple_index<0> ix0; // 0th index == 1st item','line_number':77,'multiline':False]
['text':'                      tuple_index<1> ix1; // 1st index == 2nd item','line_number':78,'multiline':False]
['text':'                      tuple_index<2> ix2; // 2nd index == 3rd item','line_number':79,'multiline':False]
['text':'','line_number':80,'multiline':False]
['text':'                      t1[ix0] = 33;  // sets the int member of the tuple t1','line_number':81,'multiline':False]
['text':'                      t2[ix2] = 6e6; // sets the double member of the tuple t2','line_number':82,'multiline':False]
['text':'                      t1[ix1] = 'a'; // sets the char member of the tuple t1','line_number':83,'multiline':False]
['text':'','line_number':84,'multiline':False]
['text':'                  There are some predefined names are provided in sub-','line_number':85,'multiline':False]
['text':'                  namespace tuple_index_names:','line_number':86,'multiline':False]
['text':'','line_number':87,'multiline':False]
['text':'                      tuple_index<0> _1;','line_number':88,'multiline':False]
['text':'                      tuple_index<1> _2;','line_number':89,'multiline':False]
['text':'                      ...','line_number':90,'multiline':False]
['text':'                      tuple_index<N> _N;','line_number':91,'multiline':False]
['text':'','line_number':92,'multiline':False]
['text':'                  These indexes may be used by 'using' namespace','line_number':93,'multiline':False]
['text':'                  phoenix::tuple_index_names.','line_number':94,'multiline':False]
['text':'','line_number':95,'multiline':False]
['text':'                  Access to out of bound indexes returns a nil_t value.','line_number':96,'multiline':False]
['text':'','line_number':97,'multiline':False]
['text':'          3)  Member type inquiry','line_number':98,'multiline':False]
['text':'                  The type of an individual member can be queried.','line_number':99,'multiline':False]
['text':'                  Example:','line_number':100,'multiline':False]
['text':'','line_number':101,'multiline':False]
['text':'                      tuple_element<1, t2_t>::type','line_number':102,'multiline':False]
['text':'','line_number':103,'multiline':False]
['text':'                  Refers to the type of the second member (note zero based,','line_number':104,'multiline':False]
['text':'                  thus 0 = 1st item, 1 = 2nd item) of the tuple.','line_number':105,'multiline':False]
['text':'','line_number':106,'multiline':False]
['text':'                  Aside from tuple_element<N, T>::type, there are two','line_number':107,'multiline':False]
['text':'                  more types that tuple_element provides: rtype and','line_number':108,'multiline':False]
['text':'                  crtype. While 'type' is the plain underlying type,','line_number':109,'multiline':False]
['text':'                  'rtype' is the reference type, or type& and 'crtype'','line_number':110,'multiline':False]
['text':'                  is the constant reference type or type const&. The','line_number':111,'multiline':False]
['text':'                  latter two are provided to make it easy for the','line_number':112,'multiline':False]
['text':'                  client in dealing with the possibility of reference','line_number':113,'multiline':False]
['text':'                  to reference when type is already a reference, which','line_number':114,'multiline':False]
['text':'                  is illegal in C++.','line_number':115,'multiline':False]
['text':'','line_number':116,'multiline':False]
['text':'                  Access to out of bound indexes returns a nil_t type.','line_number':117,'multiline':False]
['text':'','line_number':118,'multiline':False]
['text':'          4)  Tuple length','line_number':119,'multiline':False]
['text':'                  The number of elements in a tuple can be queried.','line_number':120,'multiline':False]
['text':'                  Example:','line_number':121,'multiline':False]
['text':'','line_number':122,'multiline':False]
['text':'                      int n = t1.length;','line_number':123,'multiline':False]
['text':'','line_number':124,'multiline':False]
['text':'                  gets the number of elements in tuple t1.','line_number':125,'multiline':False]
['text':'','line_number':126,'multiline':False]
['text':'                  length is a static constant. Thus, TupleT::length','line_number':127,'multiline':False]
['text':'                  also works. Example:','line_number':128,'multiline':False]
['text':'','line_number':129,'multiline':False]
['text':'                      int n = t1_t::length;','line_number':130,'multiline':False]
['text':'','line_number':131,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////////','line_number':132,'multiline':False]
['text':'////////////////////////////////','line_number':137,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////////','line_number':155,'multiline':False]
['text':'','line_number':156,'multiline':False]
['text':'  tuple_element','line_number':157,'multiline':False]
['text':'','line_number':158,'multiline':False]
['text':'      A query class that gets the Nth element inside a tuple.','line_number':159,'multiline':False]
['text':'      Examples:','line_number':160,'multiline':False]
['text':'','line_number':161,'multiline':False]
['text':'          tuple_element<1, tuple<int, char, void*> >::type    //  plain','line_number':162,'multiline':False]
['text':'          tuple_element<1, tuple<int, char, void*> >::rtype   //  ref','line_number':163,'multiline':False]
['text':'          tuple_element<1, tuple<int, char, void*> >::crtype  //  const ref','line_number':164,'multiline':False]
['text':'','line_number':165,'multiline':False]
['text':'      Has type char which is the 2nd type in the tuple','line_number':166,'multiline':False]
['text':'      (note zero based, thus 0 = 1st item, 1 = 2nd item).','line_number':167,'multiline':False]
['text':'','line_number':168,'multiline':False]
['text':'          Given a tuple object, the static function tuple_element<N,','line_number':169,'multiline':False]
['text':'          TupleT>::get(tuple) gets the Nth element in the tuple. The','line_number':170,'multiline':False]
['text':'          tuple class' tuple::operator[] uses this to get its Nth','line_number':171,'multiline':False]
['text':'          element.','line_number':172,'multiline':False]
['text':'','line_number':173,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////////','line_number':174,'multiline':False]
['text':'////////////////////////////////','line_number':185,'multiline':False]
['text':'////////////////////////////////','line_number':197,'multiline':False]
['text':'////////////////////////////////','line_number':209,'multiline':False]
['text':'////////////////////////////////','line_number':222,'multiline':False]
['text':'////////////////////////////////','line_number':234,'multiline':False]
['text':'////////////////////////////////','line_number':246,'multiline':False]
['text':'////////////////////////////////','line_number':259,'multiline':False]
['text':'////////////////////////////////','line_number':271,'multiline':False]
['text':'////////////////////////////////','line_number':283,'multiline':False]
['text':'////////////////////////////////','line_number':296,'multiline':False]
['text':'////////////////////////////////','line_number':308,'multiline':False]
['text':'////////////////////////////////','line_number':320,'multiline':False]
['text':'////////////////////////////////','line_number':333,'multiline':False]
['text':'////////////////////////////////','line_number':345,'multiline':False]
['text':'////////////////////////////////','line_number':357,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////////','line_number':374,'multiline':False]
['text':'','line_number':375,'multiline':False]
['text':'  tuple forward declaration.','line_number':376,'multiline':False]
['text':'','line_number':377,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////////','line_number':378,'multiline':False]
['text':' Not used','line_number':409,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////////','line_number':413,'multiline':False]
['text':'','line_number':414,'multiline':False]
['text':'  tuple_index','line_number':415,'multiline':False]
['text':'','line_number':416,'multiline':False]
['text':'      This class wraps an integer in a type to be used for indexing','line_number':417,'multiline':False]
['text':'      the Nth element in a tuple. See tuple operator[]. Some','line_number':418,'multiline':False]
['text':'      predefined names are provided in sub-namespace','line_number':419,'multiline':False]
['text':'      tuple_index_names.','line_number':420,'multiline':False]
['text':'','line_number':421,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////////','line_number':422,'multiline':False]
['text':'////////////////////////////////','line_number':426,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////////','line_number':459,'multiline':False]
['text':'','line_number':460,'multiline':False]
['text':'  tuple_common class','line_number':461,'multiline':False]
['text':'','line_number':462,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////////','line_number':463,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////////','line_number':513,'multiline':False]
['text':'','line_number':514,'multiline':False]
['text':'  tuple <0 member> class','line_number':515,'multiline':False]
['text':'','line_number':516,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////////','line_number':517,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////////','line_number':525,'multiline':False]
['text':'','line_number':526,'multiline':False]
['text':'  tuple <1 member> class','line_number':527,'multiline':False]
['text':'','line_number':528,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////////','line_number':529,'multiline':False]
['text':'  Unused','line_number':544,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////////','line_number':565,'multiline':False]
['text':'','line_number':566,'multiline':False]
['text':'  tuple <2 member> class','line_number':567,'multiline':False]
['text':'','line_number':568,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////////','line_number':569,'multiline':False]
['text':'  Unused','line_number':584,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////////','line_number':606,'multiline':False]
['text':'','line_number':607,'multiline':False]
['text':'  tuple <3 member> class','line_number':608,'multiline':False]
['text':'','line_number':609,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////////','line_number':610,'multiline':False]
['text':'  Unused','line_number':625,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////////','line_number':651,'multiline':False]
['text':'','line_number':652,'multiline':False]
['text':'  tuple <4 member> class','line_number':653,'multiline':False]
['text':'','line_number':654,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////////','line_number':655,'multiline':False]
['text':'  Unused','line_number':667,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////////','line_number':693,'multiline':False]
['text':'','line_number':694,'multiline':False]
['text':'  tuple <5 member> class','line_number':695,'multiline':False]
['text':'','line_number':696,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////////','line_number':697,'multiline':False]
['text':'  Unused','line_number':709,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////////','line_number':738,'multiline':False]
['text':'','line_number':739,'multiline':False]
['text':'  tuple <6 member> class','line_number':740,'multiline':False]
['text':'','line_number':741,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////////','line_number':742,'multiline':False]
['text':'  Unused','line_number':756,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////////','line_number':789,'multiline':False]
['text':'','line_number':790,'multiline':False]
['text':'  tuple <7 member> class','line_number':791,'multiline':False]
['text':'','line_number':792,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////////','line_number':793,'multiline':False]
['text':'  Unused','line_number':804,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////////','line_number':839,'multiline':False]
['text':'','line_number':840,'multiline':False]
['text':'  tuple <8 member> class','line_number':841,'multiline':False]
['text':'','line_number':842,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////////','line_number':843,'multiline':False]
['text':'  Unused','line_number':854,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////////','line_number':890,'multiline':False]
['text':'','line_number':891,'multiline':False]
['text':'  tuple <9 member> class','line_number':892,'multiline':False]
['text':'','line_number':893,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////////','line_number':894,'multiline':False]
['text':'  Unused','line_number':905,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////////','line_number':945,'multiline':False]
['text':'','line_number':946,'multiline':False]
['text':'  tuple <10 member> class','line_number':947,'multiline':False]
['text':'','line_number':948,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////////','line_number':949,'multiline':False]
['text':'  Unused','line_number':957,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////////','line_number':997,'multiline':False]
['text':'','line_number':998,'multiline':False]
['text':'  tuple <11 member> class','line_number':999,'multiline':False]
['text':'','line_number':1000,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////////','line_number':1001,'multiline':False]
['text':'  Unused','line_number':1010,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////////','line_number':1055,'multiline':False]
['text':'','line_number':1056,'multiline':False]
['text':'  tuple <12 member> class','line_number':1057,'multiline':False]
['text':'','line_number':1058,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////////','line_number':1059,'multiline':False]
['text':'  Unused','line_number':1068,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////////','line_number':1115,'multiline':False]
['text':'','line_number':1116,'multiline':False]
['text':'  tuple <13 member> class','line_number':1117,'multiline':False]
['text':'','line_number':1118,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////////','line_number':1119,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////////','line_number':1173,'multiline':False]
['text':'','line_number':1174,'multiline':False]
['text':'  tuple <14 member> class','line_number':1175,'multiline':False]
['text':'','line_number':1176,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////////','line_number':1177,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////////','line_number':1232,'multiline':False]
['text':'','line_number':1233,'multiline':False]
['text':'  tuple <15 member> class','line_number':1234,'multiline':False]
['text':'','line_number':1235,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////////','line_number':1236,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////////','line_number':1303,'multiline':False]
['text':'  namespace phoenix','line_number':1304,'multiline':False]
