['text':'=============================================================================
  Copyright (c) 2001-2011 Joel de Guzman
  http://spirit.sourceforge.net/

  Distributed under the Boost Software License, Version 1.0. (See accompanying
  file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
=============================================================================','line_number':1,'multiline':True]
['text':' for transform placeholders','line_number':26,'multiline':False]
['text':' Some defaults...','line_number':31,'multiline':False]
['text':' = void ','line_number':42,'multiline':True]
['text':'= void','line_number':48,'multiline':True]
['text':' Our meta-compiler. This is the main engine that hooks Spirit','line_number':51,'multiline':False]
['text':' to the proto expression template engine.','line_number':52,'multiline':False]
['text':' this is the non-broken part for compilers properly supporting ','line_number':64,'multiline':False]
['text':' partial template specialization (VC7.1 does not)','line_number':65,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////','line_number':73,'multiline':False]
['text':' terminals','line_number':74,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////','line_number':75,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////','line_number':87,'multiline':False]
['text':' binary operators','line_number':88,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////','line_number':89,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////','line_number':93,'multiline':False]
['text':' unary operators','line_number':94,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////','line_number':95,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////','line_number':105,'multiline':False]
['text':' directives','line_number':106,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////','line_number':107,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////','line_number':115,'multiline':False]
['text':' semantic actions','line_number':116,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////','line_number':117,'multiline':False]
['text':' this part actually constitutes invalid C++ code, but it allows us to','line_number':126,'multiline':False]
['text':' convince VC7.1 to do what we want','line_number':127,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////','line_number':135,'multiline':False]
['text':' terminals','line_number':136,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////','line_number':137,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////','line_number':149,'multiline':False]
['text':' binary operators','line_number':150,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////','line_number':151,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////','line_number':157,'multiline':False]
['text':' unary operators','line_number':158,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////','line_number':159,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////','line_number':171,'multiline':False]
['text':' directives','line_number':172,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////','line_number':173,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////','line_number':181,'multiline':False]
['text':' semantic actions','line_number':182,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////','line_number':183,'multiline':False]
['text':' Default case','line_number':200,'multiline':False]
['text':' If Expr is not a proto expression, make it a terminal','line_number':211,'multiline':False]
['text':' Check if Expr matches the domain's grammar','line_number':220,'multiline':False]
['text':' Default case','line_number':237,'multiline':False]
['text':' If Expr is not a proto expression, make it a terminal','line_number':246,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////','line_number':275,'multiline':False]
