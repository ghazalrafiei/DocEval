['text':'=============================================================================
    Copyright (c) 2001-2011 Joel de Guzman

    Distributed under the Boost Software License, Version 1.0. (See accompanying
    file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
==============================================================================','line_number':1,'multiline':True]
['text':'/////////////////////////////////////////////////////////////////////////','line_number':19,'multiline':False]
['text':'  range_run','line_number':20,'multiline':False]
['text':'','line_number':21,'multiline':False]
['text':'      An implementation of a sparse bit (boolean) set. The set uses','line_number':22,'multiline':False]
['text':'      a sorted vector of disjoint ranges. This class implements the','line_number':23,'multiline':False]
['text':'      bare minimum essentials from which the full range of set','line_number':24,'multiline':False]
['text':'      operators can be implemented. The set is constructed from','line_number':25,'multiline':False]
['text':'      ranges. Internally, adjacent or overlapping ranges are','line_number':26,'multiline':False]
['text':'      coalesced.','line_number':27,'multiline':False]
['text':'','line_number':28,'multiline':False]
['text':'      range_runs are very space-economical in situations where there','line_number':29,'multiline':False]
['text':'      are lots of ranges and a few individual disjoint values.','line_number':30,'multiline':False]
['text':'      Searching is O(log n) where n is the number of ranges.','line_number':31,'multiline':False]
['text':'','line_number':32,'multiline':False]
['text':'      { Low level interface }','line_number':33,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////','line_number':34,'multiline':False]
