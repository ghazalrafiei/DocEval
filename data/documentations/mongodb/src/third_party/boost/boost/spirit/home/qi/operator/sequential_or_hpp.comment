['text':'=============================================================================
    Copyright (c) 2001-2011 Joel de Guzman

    Distributed under the Boost Software License, Version 1.0. (See accompanying
    file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
=============================================================================','line_number':1,'multiline':True]
['text':'/////////////////////////////////////////////////////////////////////////','line_number':27,'multiline':False]
['text':' Enablers','line_number':28,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////','line_number':29,'multiline':False]
['text':' enables ||','line_number':31,'multiline':False]
['text':' flattens ||','line_number':35,'multiline':False]
['text':' Put all the element attributes in a tuple,','line_number':47,'multiline':False]
['text':' wrapping each element in a boost::optional','line_number':48,'multiline':False]
['text':' Now, build a fusion vector over the attributes. Note','line_number':54,'multiline':False]
['text':' that build_fusion_vector 1) removes all unused attributes','line_number':55,'multiline':False]
['text':' and 2) may return unused_type if all elements have','line_number':56,'multiline':False]
['text':' unused_type(s).','line_number':57,'multiline':False]
['text':' wrap the attribute in a tuple if it is not a tuple','line_number':76,'multiline':False]
['text':' return true if *any* of the parsers succeed','line_number':79,'multiline':False]
['text':' (we use the non-short-circuiting and strict order version:','line_number':80,'multiline':False]
['text':' any_if_ns_so to force all the elements to be tested and','line_number':81,'multiline':False]
['text':' in the defined order: first is first, last is last)','line_number':82,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////','line_number':98,'multiline':False]
['text':' Parser generators: make_xxx function (objects)','line_number':99,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////','line_number':100,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////','line_number':109,'multiline':False]
['text':' We specialize this for sequential_or (see support/attributes.hpp).','line_number':110,'multiline':False]
['text':' For sequential_or, we only wrap the attribute in a tuple IFF','line_number':111,'multiline':False]
['text':' it is not already a fusion tuple.','line_number':112,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////','line_number':117,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////','line_number':122,'multiline':False]
