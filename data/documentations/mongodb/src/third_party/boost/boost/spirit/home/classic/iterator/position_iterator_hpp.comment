['text':'=============================================================================
    Copyright (c) 2002 Juan Carlos Arevalo-Baeza
    Copyright (c) 2002-2006 Hartmut Kaiser
    Copyright (c) 2003 Giovanni Bajo
    http://spirit.sourceforge.net/

  Distributed under the Boost Software License, Version 1.0. (See accompanying
  file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
=============================================================================','line_number':1,'multiline':True]
['text':'/////////////////////////////////////////////////////////////////////////////','line_number':23,'multiline':False]
['text':'','line_number':24,'multiline':False]
['text':'  file_position_without_column','line_number':25,'multiline':False]
['text':'','line_number':26,'multiline':False]
['text':'  A structure to hold positional information. This includes the file,','line_number':27,'multiline':False]
['text':'  and the line number','line_number':28,'multiline':False]
['text':'','line_number':29,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////////','line_number':30,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////////','line_number':46,'multiline':False]
['text':'','line_number':47,'multiline':False]
['text':'  file_position','line_number':48,'multiline':False]
['text':'','line_number':49,'multiline':False]
['text':'  This structure holds complete file position, including file name,','line_number':50,'multiline':False]
['text':'  line and column number','line_number':51,'multiline':False]
['text':'','line_number':52,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////////','line_number':53,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////////','line_number':68,'multiline':False]
['text':'','line_number':69,'multiline':False]
['text':'  position_policy<>','line_number':70,'multiline':False]
['text':'','line_number':71,'multiline':False]
['text':'  This template is the policy to handle the file position. It is specialized','line_number':72,'multiline':False]
['text':'  on the position type. Providing a custom file_position also requires','line_number':73,'multiline':False]
['text':'  providing a specialization of this class.','line_number':74,'multiline':False]
['text':'','line_number':75,'multiline':False]
['text':'  Policy interface:','line_number':76,'multiline':False]
['text':'','line_number':77,'multiline':False]
['text':'    Default constructor of the custom position class must be accessible.','line_number':78,'multiline':False]
['text':'    set_tab_chars(unsigned int chars) - Set the tabstop width','line_number':79,'multiline':False]
['text':'    next_char(PositionT& pos)  - Notify that a new character has been','line_number':80,'multiline':False]
['text':'      processed','line_number':81,'multiline':False]
['text':'    tabulation(PositionT& pos) - Notify that a tab character has been','line_number':82,'multiline':False]
['text':'      processed','line_number':83,'multiline':False]
['text':'    next_line(PositionT& pos)  - Notify that a new line delimiter has','line_number':84,'multiline':False]
['text':'      been reached.','line_number':85,'multiline':False]
['text':'','line_number':86,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////////','line_number':87,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////////','line_number':90,'multiline':False]
['text':' namespace BOOST_SPIRIT_CLASSIC_NS ','line_number':93,'multiline':True]
['text':' This must be included here for full compatibility with old MSVC','line_number':96,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////////','line_number':99,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////////','line_number':104,'multiline':False]
['text':'','line_number':105,'multiline':False]
['text':'  position_iterator','line_number':106,'multiline':False]
['text':'','line_number':107,'multiline':False]
['text':'  It wraps an iterator, and keeps track of the current position in the input,','line_number':108,'multiline':False]
['text':'  as it gets incremented.','line_number':109,'multiline':False]
['text':'','line_number':110,'multiline':False]
['text':'  The wrapped iterator must be at least a Forward iterator. The position','line_number':111,'multiline':False]
['text':'  iterator itself will always be a non-mutable Forward iterator.','line_number':112,'multiline':False]
['text':'','line_number':113,'multiline':False]
['text':'  In order to have begin/end iterators constructed, the end iterator must be','line_number':114,'multiline':False]
['text':'  empty constructed. Similar to what happens with stream iterators. The begin','line_number':115,'multiline':False]
['text':'  iterator must be constructed from both, the begin and end iterators of the','line_number':116,'multiline':False]
['text':'  wrapped iterator type. This is necessary to implement the lookahead of','line_number':117,'multiline':False]
['text':'  characters necessary to parse CRLF sequences.','line_number':118,'multiline':False]
['text':'','line_number':119,'multiline':False]
['text':'  In order to extract the current positional data from the iterator, you may','line_number':120,'multiline':False]
['text':'  use the get_position member function.','line_number':121,'multiline':False]
['text':'','line_number':122,'multiline':False]
['text':'  You can also use the set_position member function to reset the current','line_number':123,'multiline':False]
['text':'  position to something new.','line_number':124,'multiline':False]
['text':'','line_number':125,'multiline':False]
['text':'  The structure that holds the current position can be customized through a','line_number':126,'multiline':False]
['text':'  template parameter, and the class position_policy must be specialized','line_number':127,'multiline':False]
['text':'  on the new type to define how to handle it. Currently, it's possible','line_number':128,'multiline':False]
['text':'  to choose between the file_position and file_position_without_column','line_number':129,'multiline':False]
['text':'  (which saves some overhead if managing current column is not required).','line_number':130,'multiline':False]
['text':'','line_number':131,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////////','line_number':132,'multiline':False]
['text':' BOOST_ITERATOR_ADAPTORS_VERSION < 0x0200','line_number':137,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////////','line_number':139,'multiline':False]
['text':'','line_number':140,'multiline':False]
['text':'  Uses the newer iterator_adaptor version (should be released with','line_number':141,'multiline':False]
['text':'  Boost V1.31.0)','line_number':142,'multiline':False]
['text':'','line_number':143,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////////','line_number':144,'multiline':False]
['text':' This function (which comes from the position_policy) has a','line_number':241,'multiline':False]
['text':'  different name on purpose, to avoid messing with using','line_number':242,'multiline':False]
['text':'  declarations or qualified calls to access the base template','line_number':243,'multiline':False]
['text':'  function, which might break some compilers.','line_number':244,'multiline':False]
['text':' The iterator is at the end only if it's the same','line_number':276,'multiline':False]
['text':'  of the','line_number':277,'multiline':False]
['text':' BOOST_ITERATOR_ADAPTORS_VERSION < 0x0200','line_number':304,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////////','line_number':306,'multiline':False]
['text':'','line_number':307,'multiline':False]
['text':'  position_iterator2','line_number':308,'multiline':False]
['text':'','line_number':309,'multiline':False]
['text':'  Equivalent to position_iterator, but it is able to extract the current','line_number':310,'multiline':False]
['text':'  line into a string. This is very handy for error reports.','line_number':311,'multiline':False]
['text':'','line_number':312,'multiline':False]
['text':'  Notice that the footprint of this class is higher than position_iterator,','line_number':313,'multiline':False]
['text':'  (how much depends on how bulky the underlying iterator is), so it should','line_number':314,'multiline':False]
['text':'  be used only if necessary.','line_number':315,'multiline':False]
['text':'','line_number':316,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////////','line_number':317,'multiline':False]
['text':' JDG 4-15-03','line_number':336,'multiline':False]
['text':' namespace BOOST_SPIRIT_CLASSIC_NS','line_number':433,'multiline':False]
