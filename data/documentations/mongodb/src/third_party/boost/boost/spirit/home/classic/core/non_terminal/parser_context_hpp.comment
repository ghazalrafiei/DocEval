['text':'=============================================================================
    Copyright (c) 2002-2003 Joel de Guzman
    Copyright (c) 2002-2003 Hartmut Kaiser
    http://spirit.sourceforge.net/

  Distributed under the Boost Software License, Version 1.0. (See accompanying
  file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
=============================================================================','line_number':1,'multiline':True]
['text':'/////////////////////////////////////////////////////////////////////////////','line_number':12,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////','line_number':20,'multiline':False]
['text':'','line_number':21,'multiline':False]
['text':'  default_parser_context_base class { default context base }','line_number':22,'multiline':False]
['text':'','line_number':23,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////','line_number':24,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////','line_number':31,'multiline':False]
['text':'','line_number':32,'multiline':False]
['text':'  parser_context_base class { base class of all context classes }','line_number':33,'multiline':False]
['text':'','line_number':34,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////','line_number':35,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////','line_number':38,'multiline':False]
['text':'','line_number':39,'multiline':False]
['text':'  parser_context class { default context }','line_number':40,'multiline':False]
['text':'','line_number':41,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////','line_number':42,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////','line_number':66,'multiline':False]
['text':'','line_number':67,'multiline':False]
['text':'  context_aux class','line_number':68,'multiline':False]
['text':'','line_number':69,'multiline':False]
['text':'      context_aux<ContextT, DerivedT> is a class derived from the','line_number':70,'multiline':False]
['text':'      ContextT's nested base_t::base<DerivedT> template class. (see','line_number':71,'multiline':False]
['text':'      default_parser_context_base::aux for an example).','line_number':72,'multiline':False]
['text':'','line_number':73,'multiline':False]
['text':'      Basically, this class provides ContextT dependent optional','line_number':74,'multiline':False]
['text':'      functionality to the derived class DerivedT through the CRTP','line_number':75,'multiline':False]
['text':'      idiom (Curiously recurring template pattern).','line_number':76,'multiline':False]
['text':'','line_number':77,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////','line_number':78,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////','line_number':82,'multiline':False]
['text':'','line_number':83,'multiline':False]
['text':'  parser_scanner_linker and parser_scanner_linker classes','line_number':84,'multiline':False]
['text':'  { helper templates for the rule extensibility }','line_number':85,'multiline':False]
['text':'','line_number':86,'multiline':False]
['text':'      This classes can be 'overloaded' (defined elsewhere), to plug','line_number':87,'multiline':False]
['text':'      in additional functionality into the non-terminal parsing process.','line_number':88,'multiline':False]
['text':'','line_number':89,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////','line_number':90,'multiline':False]
['text':' !defined(BOOST_SPIRIT_PARSER_SCANNER_LINKER_DEFINED)','line_number':100,'multiline':False]
['text':'////////////////////////////////','line_number':102,'multiline':False]
['text':' !defined(BOOST_SPIRIT_PARSER_CONTEXT_LINKER_DEFINED)','line_number':123,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////','line_number':125,'multiline':False]
['text':'','line_number':126,'multiline':False]
['text':'  BOOST_SPIRIT_CONTEXT_PARSE helper macro','line_number':127,'multiline':False]
['text':'','line_number':128,'multiline':False]
['text':'      The original implementation uses a template class. However, we','line_number':129,'multiline':False]
['text':'      need to lessen the template instantiation depth to help inferior','line_number':130,'multiline':False]
['text':'      compilers that sometimes choke on deep template instantiations.','line_number':131,'multiline':False]
['text':'      The objective is to avoid code redundancy. A macro, in this case','line_number':132,'multiline':False]
['text':'      is an obvious solution. Sigh!','line_number':133,'multiline':False]
['text':'','line_number':134,'multiline':False]
['text':'      WARNING: INTERNAL USE ONLY. NOT FOR PUBLIC CONSUMPTION.','line_number':135,'multiline':False]
['text':'','line_number':136,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////','line_number':137,'multiline':False]
['text':' namespace spirit','line_number':147,'multiline':False]
['text':' namespace boost','line_number':148,'multiline':False]
