['text':'=============================================================================
    Copyright (c) 2001-2011 Joel de Guzman
    Copyright (c) 2001-2011 Hartmut Kaiser
    Copyright (c)      2011 Thomas Heller

    Distributed under the Boost Software License, Version 1.0. (See accompanying
    file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
==============================================================================','line_number':1,'multiline':True]
['text':' includes as_actor specialization','line_number':25,'multiline':False]
['text':' Args is guaranteed to be a fusion::vectorN so you','line_number':44,'multiline':False]
['text':' can use that template for detection and specialization','line_number':45,'multiline':False]
['text':' arity','line_number':103,'multiline':False]
['text':' arity','line_number':128,'multiline':False]
['text':' arity','line_number':153,'multiline':False]
['text':' Helper struct for SFINAE purposes','line_number':172,'multiline':False]
['text':' Metafunction to detect if at least one arg is a Phoenix actor','line_number':187,'multiline':False]
['text':' to_lazy_arg: convert a terminal arg type to the type make_lazy needs','line_number':201,'multiline':False]
['text':' wrap A in a Phoenix actor if not already one','line_number':204,'multiline':False]
['text':' unused arg: make_lazy wants unused_type','line_number':220,'multiline':False]
['text':' to_nonlazy_arg: convert a terminal arg type to the type make_vector needs','line_number':224,'multiline':False]
['text':' identity','line_number':228,'multiline':False]
['text':' incomplete type: should not be appeared unused_type in nonlazy arg.','line_number':242,'multiline':False]
['text':' warning C4348: 'boost::spirit::terminal<...>::result_helper': redefinition of default parameter: parameter 3, 4','line_number':270,'multiline':False]
['text':' FIXME: we need to change this to conform to the result_of protocol','line_number':352,'multiline':False]
['text':' Support up to 3 args','line_number':356,'multiline':False]
['text':' Note: in the following overloads, SFINAE cannot','line_number':402,'multiline':False]
['text':' be done on return type because of gcc bug #24915:','line_number':403,'multiline':False]
['text':'   http://gcc.gnu.org/bugzilla/show_bug.cgi?id=24915','line_number':404,'multiline':False]
['text':' Hence an additional, fake argument is used for SFINAE,','line_number':405,'multiline':False]
['text':' using a type which can never be a real argument type.','line_number':406,'multiline':False]
['text':' Non-lazy overloads. Only enabled when all','line_number':408,'multiline':False]
['text':' args are immediates (no Phoenix actor).','line_number':409,'multiline':False]
['text':' Lazy overloads. Enabled when at','line_number':453,'multiline':False]
['text':' least one arg is a Phoenix actor.','line_number':454,'multiline':False]
['text':' silence MSVC warning C4512: assignment operator could not be generated','line_number':491,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////','line_number':495,'multiline':False]
['text':' Calculate the type of the compound terminal if generated by one of','line_number':498,'multiline':False]
['text':' the spirit::terminal::operator() overloads above','line_number':499,'multiline':False]
['text':' The terminal type itself is passed through without modification','line_number':501,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////','line_number':530,'multiline':False]
['text':' support for stateful tag types','line_number':531,'multiline':False]
['text':' silence MSVC warning C4512: assignment operator could not be generated','line_number':548,'multiline':False]
['text':' silence MSVC warning C4512: assignment operator could not be generated','line_number':566,'multiline':False]
['text':' extract expression if this is a Tag','line_number':572,'multiline':False]
['text':' is invoked if given tag is != Tag','line_number':578,'multiline':False]
['text':' this is invoked if given tag is same as'Tag'','line_number':582,'multiline':False]
['text':' fix for #7730','line_number':600,'multiline':False]
['text':' Define a spirit terminal. This macro may be placed in any namespace.','line_number':613,'multiline':False]
['text':' Common placeholders are placed in the main boost::spirit namespace','line_number':614,'multiline':False]
['text':' (see common_terminals.hpp)','line_number':615,'multiline':False]
['text':'*','line_number':629,'multiline':True]
['text':'*','line_number':636,'multiline':True]
['text':'*','line_number':642,'multiline':True]
['text':'*','line_number':649,'multiline':True]
['text':'*','line_number':654,'multiline':True]
['text':' Define a spirit extended terminal. This macro may be placed in any namespace.','line_number':656,'multiline':False]
['text':' Common placeholders are placed in the main boost::spirit namespace','line_number':657,'multiline':False]
['text':' (see common_terminals.hpp)','line_number':658,'multiline':False]
['text':'*','line_number':667,'multiline':True]
['text':'*','line_number':674,'multiline':True]
['text':'*','line_number':680,'multiline':True]
['text':'*','line_number':687,'multiline':True]
['text':'*','line_number':692,'multiline':True]
