['text':'=============================================================================
    Copyright (c) 2001-2011 Joel de Guzman
    Copyright (c) 2001-2011 Hartmut Kaiser

    Distributed under the Boost Software License, Version 1.0. (See accompanying
    file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
=============================================================================','line_number':1,'multiline':True]
['text':' Helper meta-function allowing to evaluate weak substitutability and','line_number':28,'multiline':False]
['text':' negate the result if the predicate (Sequence) is not true','line_number':29,'multiline':False]
['text':' pass_through_container: utility to check decide whether a provided','line_number':40,'multiline':False]
['text':' container attribute needs to be passed through to the current component','line_number':41,'multiline':False]
['text':' or of we need to split the container by passing along instances of its','line_number':42,'multiline':False]
['text':' value type','line_number':43,'multiline':False]
['text':' if the expected attribute of the current component is neither a Fusion','line_number':45,'multiline':False]
['text':' sequence nor a container, we will pass through the provided container','line_number':46,'multiline':False]
['text':' only if its value type is not compatible with the component','line_number':47,'multiline':False]
['text':' Specialization for fusion sequences, in this case we check whether all','line_number':54,'multiline':False]
['text':' the types in the sequence are convertible to the lhs attribute.','line_number':55,'multiline':False]
['text':'','line_number':56,'multiline':False]
['text':' We return false if the rhs attribute itself is a fusion sequence, which','line_number':57,'multiline':False]
['text':' is compatible with the LHS sequence (we want to pass through this','line_number':58,'multiline':False]
['text':' attribute without it being split apart).','line_number':59,'multiline':False]
['text':' If the value type of the container is not a Fusion sequence, we pass','line_number':68,'multiline':False]
['text':' through the container if each of the elements of the Attribute','line_number':69,'multiline':False]
['text':' sequence is compatible with either the container or its value type.','line_number':70,'multiline':False]
['text':' If both, the Attribute and the value type of the provided container','line_number':84,'multiline':False]
['text':' are Fusion sequences, we pass the container only if the two','line_number':85,'multiline':False]
['text':' sequences are not compatible.','line_number':86,'multiline':False]
['text':' Specialization for containers','line_number':110,'multiline':False]
['text':'','line_number':111,'multiline':False]
['text':' If the value type of the attribute of the current component is not','line_number':112,'multiline':False]
['text':' a Fusion sequence, we have to pass through the provided container if','line_number':113,'multiline':False]
['text':' both are compatible.','line_number':114,'multiline':False]
['text':' If the value type of the exposed container attribute is a Fusion','line_number':124,'multiline':False]
['text':' sequence, we use the already existing logic for those.','line_number':125,'multiline':False]
['text':' Specialization for exposed optional attributes','line_number':144,'multiline':False]
['text':'','line_number':145,'multiline':False]
['text':' If the type embedded in the exposed optional is not a Fusion','line_number':146,'multiline':False]
['text':' sequence we pass through the container attribute if it is compatible','line_number':147,'multiline':False]
['text':' either to the optionals embedded type or to the containers value','line_number':148,'multiline':False]
['text':' type.','line_number':149,'multiline':False]
['text':' If the embedded type of the exposed optional attribute is a Fusion','line_number':159,'multiline':False]
['text':' sequence, we use the already existing logic for those.','line_number':160,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////','line_number':169,'multiline':False]
['text':' Handle optional attributes','line_number':176,'multiline':False]
['text':' If both, the containers value type and the exposed attribute type are','line_number':185,'multiline':False]
['text':' optionals we are allowed to pass through the container only if the','line_number':186,'multiline':False]
['text':' embedded types of those optionals are not compatible.','line_number':187,'multiline':False]
['text':' Specialization for exposed variant attributes','line_number':196,'multiline':False]
['text':'','line_number':197,'multiline':False]
['text':' We pass through the container attribute if at least one of the embedded','line_number':198,'multiline':False]
['text':' types in the variant requires to pass through the attribute','line_number':199,'multiline':False]
['text':'*','line_number':223,'multiline':True]
['text':' make sure unused variant parameters do not affect the outcome','line_number':225,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////////','line_number':244,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////','line_number':247,'multiline':False]
['text':' forwarding customization point for domain qi::domain','line_number':248,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////','line_number':260,'multiline':False]
['text':' This function handles the case where the attribute (Attr) given','line_number':261,'multiline':False]
['text':' the sequence is an STL container. This is a wrapper around F.','line_number':262,'multiline':False]
['text':' The function F does the actual parsing.','line_number':263,'multiline':False]
['text':' this is for the case when the current element exposes an attribute','line_number':273,'multiline':False]
['text':' which is pushed back onto the container','line_number':274,'multiline':False]
['text':' synthesized attribute needs to be default constructed','line_number':278,'multiline':False]
['text':' push the parsed value into our attribute','line_number':286,'multiline':False]
['text':' this is for the case when the current element is able to handle an','line_number':294,'multiline':False]
['text':' attribute which is a container itself, this element will push its','line_number':295,'multiline':False]
['text':' data directly into the attribute container','line_number':296,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////','line_number':303,'multiline':False]
['text':' this is for the case when the current element doesn't expect an','line_number':304,'multiline':False]
['text':' attribute','line_number':305,'multiline':False]
['text':' the current element expects an attribute','line_number':312,'multiline':False]
['text':' this predicate detects, whether the attribute of the current','line_number':321,'multiline':False]
['text':' element is a substitute for the value type of the container','line_number':322,'multiline':False]
['text':' attribute','line_number':323,'multiline':False]
['text':' Dispatches to dispatch_main depending on the attribute type','line_number':334,'multiline':False]
['text':' of the Component','line_number':335,'multiline':False]
['text':' we need to dispatch depending on the type of the attribute','line_number':339,'multiline':False]
['text':' of the current element (component). If this is has no attribute','line_number':340,'multiline':False]
['text':' we shouldn't pass an attribute at all.','line_number':341,'multiline':False]
['text':' ensure the attribute is actually a container type','line_number':348,'multiline':False]
['text':' silence MSVC warning C4512: assignment operator could not be generated','line_number':357,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////','line_number':361,'multiline':False]
['text':' Utility function to make a pass_container for container components','line_number':362,'multiline':False]
['text':' (kleene, list, plus, repeat)','line_number':363,'multiline':False]
['text':' Utility function to make a pass_container for sequences','line_number':371,'multiline':False]
