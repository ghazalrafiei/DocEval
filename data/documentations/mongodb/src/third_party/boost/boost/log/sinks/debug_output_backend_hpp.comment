['text':'
 *          Copyright Andrey Semashev 2007 - 2015.
 * Distributed under the Boost Software License, Version 1.0.
 *    (See accompanying file LICENSE_1_0.txt or copy at
 *          http://www.boost.org/LICENSE_1_0.txt)
 ','line_number':1,'multiline':True]
['text':'!
 * \file   debug_output_backend.hpp
 * \author Andrey Semashev
 * \date   07.11.2008
 *
 * The header contains a logging sink backend that outputs log records to the debugger.
 ','line_number':7,'multiline':True]
['text':'!
 * \brief An implementation of a logging sink backend that outputs to the debugger
 *
 * The sink uses Windows API in order to write log records as debug messages, if the
 * application process is run under debugger. The sink backend also provides a specific
 * filter that allows to check whether the debugger is available and thus elide unnecessary
 * formatting.
 ','line_number':39,'multiline':True]
['text':'! Base type','line_number':51,'multiline':False]
['text':'! Character type','line_number':55,'multiline':False]
['text':'! String type to be used as a message text holder','line_number':57,'multiline':False]
['text':'!
     * Constructor. Initializes the sink backend.
     ','line_number':61,'multiline':True]
['text':'!
     * Destructor
     ','line_number':65,'multiline':True]
['text':'!
     * The method passes the formatted message to debugger
     ','line_number':70,'multiline':True]
['text':'!< Convenience typedef for narrow-character logging','line_number':77,'multiline':False]
['text':'!< Convenience typedef for wide-character logging','line_number':80,'multiline':False]
['text':' namespace sinks','line_number':83,'multiline':False]
['text':' namespace log','line_number':85,'multiline':False]
['text':' namespace boost','line_number':87,'multiline':False]
['text':' BOOST_LOG_WITHOUT_DEBUG_OUTPUT','line_number':91,'multiline':False]
['text':' BOOST_LOG_SINKS_DEBUG_OUTPUT_BACKEND_HPP_INCLUDED_','line_number':93,'multiline':False]
