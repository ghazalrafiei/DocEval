['text':'
 *          Copyright Andrey Semashev 2007 - 2015.
 * Distributed under the Boost Software License, Version 1.0.
 *    (See accompanying file LICENSE_1_0.txt or copy at
 *          http://www.boost.org/LICENSE_1_0.txt)
 ','line_number':1,'multiline':True]
['text':'!
 * \file   exception_handler_feature.hpp
 * \author Andrey Semashev
 * \date   17.07.2009
 *
 * The header contains implementation of an exception handler support feature.
 ','line_number':7,'multiline':True]
['text':'!
 * \brief Exception handler feature implementation
 ','line_number':44,'multiline':True]
['text':'! Base type','line_number':51,'multiline':False]
['text':'! Threading model being used','line_number':57,'multiline':False]
['text':'! Final logger type','line_number':59,'multiline':False]
['text':'! Exception handler function type','line_number':61,'multiline':False]
['text':'! Lock requirement for the open_record_unlocked method','line_number':65,'multiline':False]
['text':'! Lock requirement for the push_record_unlocked method','line_number':70,'multiline':False]
['text':' defined(BOOST_LOG_DOXYGEN_PASS)','line_number':75,'multiline':False]
['text':'! Lock requirement for the swap_unlocked method','line_number':77,'multiline':False]
['text':' !defined(BOOST_LOG_NO_THREADS)','line_number':84,'multiline':False]
['text':'! Exception handler','line_number':88,'multiline':False]
['text':'!
     * Default constructor. The constructed logger does not have an exception handler.
     ','line_number':92,'multiline':True]
['text':'!
     * Copy constructor
     ','line_number':98,'multiline':True]
['text':'!
     * Move constructor
     ','line_number':106,'multiline':True]
['text':'!
     * Constructor with arguments. Passes arguments to other features.
     ','line_number':114,'multiline':True]
['text':'!
     * The method sets exception handler function. The function will be called with no arguments
     * in case if an exception occurs during either \c open_record or \c push_record method
     * execution. Since exception handler is called from a \c catch statement, the exception
     * can be rethrown in order to determine its type.
     *
     * By default no handler is installed, thus any exception is propagated as usual.
     *
     * \sa <tt>utility/exception_handler.hpp</tt>
     * \param handler Exception handling function
     *
     * \note The exception handler can be invoked in several threads concurrently.
     *
     * \note Thread interruptions are not affected by exception handlers.
     ','line_number':123,'multiline':True]
['text':'!
     * Unlocked \c open_record
     ','line_number':148,'multiline':True]
['text':'!
     * Unlocked \c push_record
     ','line_number':171,'multiline':True]
['text':'!
     * Unlocked swap
     ','line_number':192,'multiline':True]
['text':'! The function handles the intercepted exception','line_number':203,'multiline':False]
['text':' Here's the trick with the lock type. Since the lock','line_number':207,'multiline':False]
['text':' is only needed when an exception is caught, we indicate','line_number':208,'multiline':False]
['text':' no locking requirements in the push_record_lock type.','line_number':209,'multiline':False]
['text':' However, if other features don't require locking either,','line_number':210,'multiline':False]
['text':' we shall acquire a read lock here, when an exception is caught.','line_number':211,'multiline':False]
['text':' If other features do require locking, the thread model is','line_number':212,'multiline':False]
['text':' already locked by now, and we don't do locking at all.','line_number':213,'multiline':False]
['text':' !defined(BOOST_LOG_NO_THREADS)','line_number':220,'multiline':False]
['text':' !defined(BOOST_LOG_DOXYGEN_PASS)','line_number':226,'multiline':False]
['text':'!
 * \brief Exception handler support feature
 *
 * The logger with this feature will provide an additional method to
 * install an exception handler functional object. This functional
 * object will be called if during either opening or pushing a record
 * an exception is thrown from the logging core.
 ','line_number':229,'multiline':True]
['text':' namespace sources','line_number':246,'multiline':False]
['text':' namespace log','line_number':248,'multiline':False]
['text':' namespace boost','line_number':250,'multiline':False]
['text':' BOOST_LOG_SOURCES_EXCEPTION_HANDLER_FEATURE_HPP_INCLUDED_','line_number':254,'multiline':False]
