['text':'
 *          Copyright Andrey Semashev 2007 - 2015.
 * Distributed under the Boost Software License, Version 1.0.
 *    (See accompanying file LICENSE_1_0.txt or copy at
 *          http://www.boost.org/LICENSE_1_0.txt)
 ','line_number':1,'multiline':True]
['text':'!
 * \file   sync_frontend.hpp
 * \author Andrey Semashev
 * \date   14.07.2009
 *
 * The header contains implementation of synchronous sink frontend.
 ','line_number':7,'multiline':True]
['text':' BOOST_LOG_DOXYGEN_PASS','line_number':64,'multiline':False]
['text':'!
 * \brief Synchronous logging sink frontend
 *
 * The sink frontend serializes threads before passing logging records to the backend
 ','line_number':66,'multiline':True]
['text':'! Synchronization mutex type','line_number':78,'multiline':False]
['text':'! Sink implementation type','line_number':82,'multiline':False]
['text':'! \cond','line_number':84,'multiline':False]
['text':'! \endcond','line_number':86,'multiline':False]
['text':'! A pointer type that locks the backend until it's destroyed','line_number':90,'multiline':False]
['text':' BOOST_LOG_DOXYGEN_PASS','line_number':93,'multiline':False]
['text':'! A pointer type that locks the backend until it's destroyed','line_number':95,'multiline':False]
['text':' BOOST_LOG_DOXYGEN_PASS','line_number':98,'multiline':False]
['text':'! Synchronization mutex','line_number':101,'multiline':False]
['text':'! Pointer to the backend','line_number':103,'multiline':False]
['text':'!
     * Default constructor. Constructs the sink backend instance.
     * Requires the backend to be default-constructible.
     ','line_number':107,'multiline':True]
['text':'!
     * Constructor attaches user-constructed backend instance
     *
     * \param backend Pointer to the backend instance
     *
     * \pre \a backend is not \c NULL.
     ','line_number':116,'multiline':True]
['text':'!
     * Constructor that passes arbitrary named parameters to the interprocess sink backend constructor.
     * Refer to the backend documentation for the list of supported parameters.
     ','line_number':129,'multiline':True]
['text':'!
     * Locking accessor to the attached backend
     ','line_number':140,'multiline':True]
['text':'!
     * Passes the log record to the backend
     ','line_number':148,'multiline':True]
['text':'!
     * The method attempts to pass logging record to the backend
     ','line_number':156,'multiline':True]
['text':'!
     * The method performs flushing of any internal buffers that may hold log records. The method
     * may take considerable time to complete and may block both the calling thread and threads
     * attempting to put new records into the sink while this call is in progress.
     ','line_number':164,'multiline':True]
['text':' namespace sinks','line_number':179,'multiline':False]
['text':' namespace log','line_number':181,'multiline':False]
['text':' namespace boost','line_number':183,'multiline':False]
['text':' BOOST_LOG_SINKS_SYNC_FRONTEND_HPP_INCLUDED_','line_number':187,'multiline':False]
