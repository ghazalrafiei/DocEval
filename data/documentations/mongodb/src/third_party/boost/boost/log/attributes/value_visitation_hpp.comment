['text':'
 *          Copyright Andrey Semashev 2007 - 2015.
 * Distributed under the Boost Software License, Version 1.0.
 *    (See accompanying file LICENSE_1_0.txt or copy at
 *          http://www.boost.org/LICENSE_1_0.txt)
 ','line_number':1,'multiline':True]
['text':'!
 * \file   value_visitation.hpp
 * \author Andrey Semashev
 * \date   01.03.2008
 *
 * The header contains implementation of convenience tools to apply visitors to an attribute value
 * in the view.
 ','line_number':7,'multiline':True]
['text':'!
 * \brief The class represents attribute value visitation result
 *
 * The main purpose of this class is to provide a convenient interface for checking
 * whether the attribute value visitation succeeded or not. It also allows to discover
 * the actual cause of failure, should the operation fail.
 ','line_number':41,'multiline':True]
['text':'! Error codes for attribute value visitation','line_number':51,'multiline':False]
['text':'!< The attribute value has been visited successfully','line_number':54,'multiline':False]
['text':'!< The attribute value is not present in the view','line_number':55,'multiline':False]
['text':'!< The attribute value is present in the view, but has an unexpected type','line_number':56,'multiline':False]
['text':'!
     * Initializing constructor. Creates the result that is equivalent to the
     * specified error code.
     ','line_number':63,'multiline':True]
['text':'!
     * Checks if the visitation was successful.
     *
     * \return \c true if the value was visited successfully, \c false otherwise.
     ','line_number':69,'multiline':True]
['text':'!
     * Checks if the visitation was unsuccessful.
     *
     * \return \c false if the value was visited successfully, \c true otherwise.
     ','line_number':75,'multiline':True]
['text':'!
     * \return The actual result code of value visitation
     ','line_number':82,'multiline':True]
['text':'!
 * \brief Generic attribute value visitor invoker
 *
 * Attribute value invoker is a functional object that attempts to find and extract the stored
 * attribute value from the attribute value view or a log record. The extracted value is passed to
 * a unary function object (the visitor) provided by user.
 *
 * The invoker can be specialized on one or several attribute value types that should be
 * specified in the second template argument.
 ','line_number':88,'multiline':True]
['text':'! Attribute value types','line_number':105,'multiline':False]
['text':'! Fallback policy','line_number':108,'multiline':False]
['text':'! Function object result type','line_number':111,'multiline':False]
['text':'!
     * Default constructor
     ','line_number':115,'multiline':True]
['text':'!
     * Copy constructor
     ','line_number':120,'multiline':True]
['text':'!
     * Initializing constructor
     *
     * \param arg Fallback policy argument
     ','line_number':127,'multiline':True]
['text':'!
     * Visitation operator. Attempts to acquire the stored value of one of the supported types. If acquisition succeeds,
     * the value is passed to \a visitor.
     *
     * \param attr An attribute value to apply the visitor to.
     * \param visitor A receiving function object to pass the attribute value to.
     * \return The result of visitation.
     ','line_number':135,'multiline':True]
['text':'!
     * Visitation operator. Looks for an attribute value with the specified name
     * and tries to acquire the stored value of one of the supported types. If acquisition succeeds,
     * the value is passed to \a visitor.
     *
     * \param name Attribute value name.
     * \param attrs A set of attribute values in which to look for the specified attribute value.
     * \param visitor A receiving function object to pass the attribute value to.
     * \return The result of visitation.
     ','line_number':167,'multiline':True]
['text':' Attach the attribute name to the exception','line_number':190,'multiline':False]
['text':'!
     * Visitation operator. Looks for an attribute value with the specified name
     * and tries to acquire the stored value of one of the supported types. If acquisition succeeds,
     * the value is passed to \a visitor.
     *
     * \param name Attribute value name.
     * \param rec A log record. The attribute value will be sought among those associated with the record.
     * \param visitor A receiving function object to pass the attribute value to.
     * \return The result of visitation.
     ','line_number':196,'multiline':True]
['text':'!
     * Visitation operator. Looks for an attribute value with the specified name
     * and tries to acquire the stored value of one of the supported types. If acquisition succeeds,
     * the value is passed to \a visitor.
     *
     * \param name Attribute value name.
     * \param rec A log record view. The attribute value will be sought among those associated with the record.
     * \param visitor A receiving function object to pass the attribute value to.
     * \return The result of visitation.
     ','line_number':212,'multiline':True]
['text':'!
     * \returns Fallback policy
     ','line_number':228,'multiline':True]
['text':'!
 * The function applies a visitor to an attribute value from the view. The user has to explicitly specify the
 * type or set of possible types of the attribute value to be visited.
 *
 * \param name The name of the attribute value to visit.
 * \param attrs A set of attribute values in which to look for the specified attribute value.
 * \param visitor A receiving function object to pass the attribute value to.
 * \return The result of visitation.
 ','line_number':237,'multiline':True]
['text':'!
 * The function applies a visitor to an attribute value from the view. The user has to explicitly specify the
 * type or set of possible types of the attribute value to be visited.
 *
 * \param name The name of the attribute value to visit.
 * \param rec A log record. The attribute value will be sought among those associated with the record.
 * \param visitor A receiving function object to pass the attribute value to.
 * \return The result of visitation.
 ','line_number':254,'multiline':True]
['text':'!
 * The function applies a visitor to an attribute value from the view. The user has to explicitly specify the
 * type or set of possible types of the attribute value to be visited.
 *
 * \param name The name of the attribute value to visit.
 * \param rec A log record view. The attribute value will be sought among those associated with the record.
 * \param visitor A receiving function object to pass the attribute value to.
 * \return The result of visitation.
 ','line_number':271,'multiline':True]
['text':'!
 * The function applies a visitor to an attribute value. The user has to explicitly specify the
 * type or set of possible types of the attribute value to be visited.
 *
 * \param value The attribute value to visit.
 * \param visitor A receiving function object to pass the attribute value to.
 * \return The result of visitation.
 ','line_number':288,'multiline':True]
['text':'!
 * The function applies a visitor to an attribute value from the view. The user has to explicitly specify the
 * type or set of possible types of the attribute value to be visited.
 *
 * \param keyword The keyword of the attribute value to visit.
 * \param attrs A set of attribute values in which to look for the specified attribute value.
 * \param visitor A receiving function object to pass the attribute value to.
 * \return The result of visitation.
 ','line_number':304,'multiline':True]
['text':'!
 * The function applies a visitor to an attribute value from the view. The user has to explicitly specify the
 * type or set of possible types of the attribute value to be visited.
 *
 * \param keyword The keyword of the attribute value to visit.
 * \param rec A log record. The attribute value will be sought among those associated with the record.
 * \param visitor A receiving function object to pass the attribute value to.
 * \return The result of visitation.
 ','line_number':321,'multiline':True]
['text':'!
 * The function applies a visitor to an attribute value from the view. The user has to explicitly specify the
 * type or set of possible types of the attribute value to be visited.
 *
 * \param keyword The keyword of the attribute value to visit.
 * \param rec A log record view. The attribute value will be sought among those associated with the record.
 * \param visitor A receiving function object to pass the attribute value to.
 * \return The result of visitation.
 ','line_number':338,'multiline':True]
['text':' !defined(BOOST_LOG_DOXYGEN_PASS)','line_number':364,'multiline':False]
['text':' namespace log','line_number':366,'multiline':False]
['text':' namespace boost','line_number':368,'multiline':False]
['text':' BOOST_LOG_ATTRIBUTES_VALUE_VISITATION_HPP_INCLUDED_','line_number':372,'multiline':False]
