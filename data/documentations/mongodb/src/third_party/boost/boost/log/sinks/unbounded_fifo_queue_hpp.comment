['text':'
 *          Copyright Andrey Semashev 2007 - 2015.
 * Distributed under the Boost Software License, Version 1.0.
 *    (See accompanying file LICENSE_1_0.txt or copy at
 *          http://www.boost.org/LICENSE_1_0.txt)
 ','line_number':1,'multiline':True]
['text':'!
 * \file   unbounded_fifo_queue.hpp
 * \author Andrey Semashev
 * \date   24.07.2011
 *
 * The header contains implementation of unbounded FIFO queueing strategy for
 * the asynchronous sink frontend.
 ','line_number':7,'multiline':True]
['text':'!
 * \brief Unbounded FIFO log record queueing strategy
 *
 * The \c unbounded_fifo_queue class is intended to be used with
 * the \c asynchronous_sink frontend as a log record queueing strategy.
 *
 * This strategy implements the simplest logic of log record buffering between
 * threads: the queue has no limits and imposes no ordering over the queued
 * elements aside from the order in which they are enqueued.
 * Because of this the queue provides decent performance and scalability,
 * however if sink backends can't consume log records fast enough the queue
 * may grow uncontrollably. When this is an issue, it is recommended to
 * use one of the bounded strategies.
 ','line_number':42,'multiline':True]
['text':'! Thread-safe queue','line_number':62,'multiline':False]
['text':'! Event object to block on','line_number':64,'multiline':False]
['text':'! Interruption flag','line_number':66,'multiline':False]
['text':'! Default constructor','line_number':70,'multiline':False]
['text':'! Initializing constructor','line_number':74,'multiline':False]
['text':'! Enqueues log record to the queue','line_number':80,'multiline':False]
['text':'! Attempts to enqueue log record to the queue','line_number':87,'multiline':False]
['text':' Assume the call never blocks','line_number':90,'multiline':False]
['text':'! Attempts to dequeue a log record ready for processing from the queue, does not block if the queue is empty','line_number':95,'multiline':False]
['text':'! Attempts to dequeue log record from the queue, does not block if the queue is empty','line_number':101,'multiline':False]
['text':'! Dequeues log record from the queue, blocks if the queue is empty','line_number':107,'multiline':False]
['text':' Try the fast way first','line_number':110,'multiline':False]
['text':' Ok, we probably have to wait for new records','line_number':114,'multiline':False]
['text':'! Wakes a thread possibly blocked in the \c dequeue method','line_number':125,'multiline':False]
['text':' namespace sinks','line_number':133,'multiline':False]
['text':' namespace log','line_number':135,'multiline':False]
['text':' namespace boost','line_number':137,'multiline':False]
['text':' BOOST_LOG_SINKS_UNBOUNDED_FIFO_QUEUE_HPP_INCLUDED_','line_number':141,'multiline':False]
