['text':'
 *          Copyright Andrey Semashev 2007 - 2015.
 * Distributed under the Boost Software License, Version 1.0.
 *    (See accompanying file LICENSE_1_0.txt or copy at
 *          http://www.boost.org/LICENSE_1_0.txt)
 ','line_number':1,'multiline':True]
['text':'!
 * \file   value_ref.hpp
 * \author Andrey Semashev
 * \date   27.07.2012
 *
 * The header contains implementation of a value reference wrapper.
 ','line_number':7,'multiline':True]
['text':'! The function object applies the function object to the bound visitable object and argument','line_number':59,'multiline':False]
['text':'! Traits for testing type compatibility with the reference wrapper','line_number':80,'multiline':False]
['text':'! Attribute value reference implementation for a single type case','line_number':95,'multiline':False]
['text':'! Referenced value type','line_number':100,'multiline':False]
['text':'! Tag type','line_number':102,'multiline':False]
['text':'! Traits for testing type compatibility with the reference wrapper','line_number':106,'multiline':False]
['text':'! Pointer to the value','line_number':110,'multiline':False]
['text':'! Default constructor','line_number':114,'multiline':False]
['text':'! Initializing constructor','line_number':119,'multiline':False]
['text':'! Returns a pointer to the referred value','line_number':125,'multiline':False]
['text':'! Returns a pointer to the referred value','line_number':132,'multiline':False]
['text':'! Returns a pointer to the referred value','line_number':138,'multiline':False]
['text':'! Returns a reference to the value','line_number':145,'multiline':False]
['text':'! Returns a reference to the value','line_number':152,'multiline':False]
['text':'! Returns a reference to the value','line_number':159,'multiline':False]
['text':'! Resets the reference','line_number':168,'multiline':False]
['text':'! Returns the stored type index','line_number':174,'multiline':False]
['text':'! Swaps two reference wrappers','line_number':180,'multiline':False]
['text':'! Applies a visitor function object to the referred value','line_number':188,'multiline':False]
['text':'! Applies a visitor function object to the referred value','line_number':196,'multiline':False]
['text':'! Applies a visitor function object to the referred value','line_number':209,'multiline':False]
['text':'! Applies a visitor function object to the referred value or returns a default value','line_number':220,'multiline':False]
['text':'! Applies a visitor function object to the referred value or returns a default value','line_number':230,'multiline':False]
['text':'! Traits for testing type compatibility with the reference wrapper','line_number':241,'multiline':False]
['text':'! Attribute value reference implementation for multiple types case','line_number':251,'multiline':False]
['text':'! Referenced value type','line_number':256,'multiline':False]
['text':'! Tag type','line_number':258,'multiline':False]
['text':'! Traits for testing type compatibility with the reference wrapper','line_number':262,'multiline':False]
['text':'! Pointer to the value','line_number':266,'multiline':False]
['text':'! Type index','line_number':268,'multiline':False]
['text':'! Default constructor','line_number':272,'multiline':False]
['text':'! Initializing constructor','line_number':277,'multiline':False]
['text':'! Resets the reference','line_number':284,'multiline':False]
['text':'! Returns a pointer to the referred value','line_number':291,'multiline':False]
['text':'! Returns a reference to the value','line_number':301,'multiline':False]
['text':'! Returns the stored type index','line_number':310,'multiline':False]
['text':'! Swaps two reference wrappers','line_number':316,'multiline':False]
['text':'! Applies a visitor function object to the referred value','line_number':327,'multiline':False]
['text':'! Applies a visitor function object to the referred value','line_number':335,'multiline':False]
['text':'! Applies a visitor function object to the referred value','line_number':348,'multiline':False]
['text':'! Applies a visitor function object to the referred value or returns a default value','line_number':359,'multiline':False]
['text':'! Applies a visitor function object to the referred value or returns a default value','line_number':369,'multiline':False]
['text':' namespace aux','line_number':404,'multiline':False]
['text':'!
 * \brief Reference wrapper for a stored attribute value.
 *
 * The \c value_ref class template provides access to the stored attribute value. It is not a traditional reference wrapper
 * since it may be empty (i.e. refer to no value at all) and it can also refer to values of different types. Therefore its
 * interface and behavior combines features of Boost.Ref, Boost.Optional and Boost.Variant, depending on the use case.
 *
 * The template parameter \c T can be a single type or an MPL sequence of possible types being referred. The reference wrapper
 * will act as either an optional reference or an optional variant of references to the specified types. In any case, the
 * referred values will not be modifiable (i.e. \c value_ref always models a const reference).
 *
 * Template parameter \c TagT is optional. It can be used for customizing the operations on this reference wrapper, such as
 * putting the referred value to log.
 ','line_number':406,'multiline':True]
['text':'! Base implementation type','line_number':430,'multiline':False]
['text':'! Traits for testing type compatibility with the reference wrapper','line_number':432,'multiline':False]
['text':'! Referenced value type','line_number':437,'multiline':False]
['text':'! Referenced value type','line_number':440,'multiline':False]
['text':'! Tag type','line_number':442,'multiline':False]
['text':'!
     * Default constructor. Creates a reference wrapper that does not refer to a value.
     ','line_number':447,'multiline':True]
['text':'!
     * Copy constructor.
     ','line_number':452,'multiline':True]
['text':'!
     * Initializing constructor. Creates a reference wrapper that refers to the specified value.
     ','line_number':457,'multiline':True]
['text':' MSVC-8 can't handle SFINAE in this case properly and often wrongly disables this constructor','line_number':463,'multiline':False]
['text':'!
     * The operator verifies if the wrapper refers to a value.
     ','line_number':473,'multiline':True]
['text':'!
     * The operator verifies if the wrapper does not refer to a value.
     ','line_number':478,'multiline':True]
['text':'!
     * \return \c true if the wrapper does not refer to a value.
     ','line_number':486,'multiline':True]
['text':'!
     * Swaps two reference wrappers
     ','line_number':494,'multiline':True]
['text':'! Free swap function','line_number':503,'multiline':False]
['text':'! Stream output operator','line_number':510,'multiline':False]
['text':'! Log formatting operator','line_number':519,'multiline':False]
['text':' Equality comparison','line_number':528,'multiline':False]
['text':' Inequality comparison','line_number':549,'multiline':False]
['text':' Less than ordering','line_number':570,'multiline':False]
['text':' Greater than ordering','line_number':589,'multiline':False]
['text':' Less or equal ordering','line_number':608,'multiline':False]
['text':' Greater or equal ordering','line_number':629,'multiline':False]
['text':' namespace log','line_number':650,'multiline':False]
['text':' namespace boost','line_number':652,'multiline':False]
['text':' BOOST_LOG_UTILITY_VALUE_REF_HPP_INCLUDED_','line_number':656,'multiline':False]
