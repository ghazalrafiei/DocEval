['text':'
 *          Copyright Andrey Semashev 2007 - 2015.
 * Distributed under the Boost Software License, Version 1.0.
 *    (See accompanying file LICENSE_1_0.txt or copy at
 *          http://www.boost.org/LICENSE_1_0.txt)
 ','line_number':1,'multiline':True]
['text':'!
 * \file   dynamic_type_dispatcher.hpp
 * \author Andrey Semashev
 * \date   15.04.2007
 *
 * The header contains implementation of the run-time type dispatcher.
 ','line_number':7,'multiline':True]
['text':'!
 * \brief A dynamic type dispatcher
 *
 * The type dispatcher can be used to pass objects of arbitrary types from one
 * component to another. With regard to the library, the type dispatcher
 * can be used to extract attribute values.
 *
 * The dynamic type dispatcher can be initialized in run time and, therefore,
 * can support different types, depending on runtime conditions. Each
 * supported type is associated with a functional object that will be called
 * when an object of the type is dispatched.
 ','line_number':37,'multiline':True]
['text':' BOOST_LOG_DOXYGEN_PASS','line_number':77,'multiline':False]
['text':'! The dispatching map','line_number':79,'multiline':False]
['text':'!
     * Default constructor
     ','line_number':84,'multiline':True]
['text':'!
     * Copy constructor
     ','line_number':91,'multiline':True]
['text':'!
     * Copy assignment
     ','line_number':100,'multiline':True]
['text':'!
     * The method registers a new type
     *
     * \param visitor Function object that will be associated with the type \c T
     ','line_number':109,'multiline':True]
['text':'!
     * The method returns the number of registered types
     ','line_number':124,'multiline':True]
['text':' BOOST_LOG_DOXYGEN_PASS','line_number':143,'multiline':False]
['text':' namespace log','line_number':146,'multiline':False]
['text':' namespace boost','line_number':148,'multiline':False]
['text':' BOOST_LOG_DYNAMIC_TYPE_DISPATCHER_HPP_INCLUDED_','line_number':152,'multiline':False]
