['text':'
 *          Copyright Andrey Semashev 2007 - 2015.
 * Distributed under the Boost Software License, Version 1.0.
 *    (See accompanying file LICENSE_1_0.txt or copy at
 *          http://www.boost.org/LICENSE_1_0.txt)
 ','line_number':1,'multiline':True]
['text':'!
 * \file   formatters/if.hpp
 * \author Andrey Semashev
 * \date   17.11.2012
 *
 * The header contains implementation of a conditional formatter.
 ','line_number':7,'multiline':True]
['text':'! Self type','line_number':47,'multiline':False]
['text':'! Internal typedef for type categorization','line_number':52,'multiline':False]
['text':'! Result type definition','line_number':56,'multiline':False]
['text':'! Left argument actor','line_number':72,'multiline':False]
['text':'! Condition expression','line_number':74,'multiline':False]
['text':'! Positive branch','line_number':76,'multiline':False]
['text':'! Initializing constructor','line_number':80,'multiline':False]
['text':'! Invokation operator','line_number':85,'multiline':False]
['text':'! Invokation operator','line_number':96,'multiline':False]
['text':'! Self type','line_number':114,'multiline':False]
['text':'! Internal typedef for type categorization','line_number':119,'multiline':False]
['text':'! Result type definition','line_number':123,'multiline':False]
['text':'! Left argument actor','line_number':139,'multiline':False]
['text':'! Condition expression','line_number':141,'multiline':False]
['text':'! Positive branch','line_number':143,'multiline':False]
['text':'! Negative branch','line_number':145,'multiline':False]
['text':'! Initializing constructor','line_number':149,'multiline':False]
['text':'! Invokation operator','line_number':154,'multiline':False]
['text':'! Invokation operator','line_number':167,'multiline':False]
['text':' BOOST_LOG_DOXYGEN_PASS','line_number':212,'multiline':False]
['text':' BOOST_LOG_DOXYGEN_PASS','line_number':253,'multiline':False]
['text':' namespace aux','line_number':273,'multiline':False]
['text':'!
 * The function returns a conditional formatter generator object. The generator provides <tt>operator[]</tt> that can be used
 * to construct the actual formatter. The formatter must participate in a streaming expression.
 *
 * \param cond A filter expression that will be used as the condition
 ','line_number':275,'multiline':True]
['text':' namespace expressions','line_number':287,'multiline':False]
['text':' namespace log','line_number':289,'multiline':False]
['text':' namespace result_of','line_number':309,'multiline':False]
['text':' namespace phoenix','line_number':311,'multiline':False]
['text':' namespace boost','line_number':315,'multiline':False]
['text':' BOOST_LOG_EXPRESSIONS_FORMATTERS_IF_HPP_INCLUDED_','line_number':319,'multiline':False]
