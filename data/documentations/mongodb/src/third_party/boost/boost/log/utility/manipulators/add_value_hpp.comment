['text':'
 *          Copyright Andrey Semashev 2007 - 2015.
 * Distributed under the Boost Software License, Version 1.0.
 *    (See accompanying file LICENSE_1_0.txt or copy at
 *          http://www.boost.org/LICENSE_1_0.txt)
 ','line_number':1,'multiline':True]
['text':'!
 * \file   add_value.hpp
 * \author Andrey Semashev
 * \date   26.11.2012
 *
 * This header contains the \c add_value manipulator.
 ','line_number':7,'multiline':True]
['text':' 'boost::log::v2s_mt_nt6::add_value_manip<RefT>::m_value' : reference member is initialized to a temporary that doesn't persist after the constructor exits','line_number':36,'multiline':False]
['text':' This is intentional since the manipulator can be used with a temporary, which will be used before the streaming expression ends and it is destroyed.','line_number':37,'multiline':False]
['text':' returning address of local variable or temporary','line_number':39,'multiline':False]
['text':' This warning refers to add_value_manip<RefT>::get_value() when RefT is an rvalue reference. We store the reference in the manipulator and we intend to return it as is.','line_number':40,'multiline':False]
['text':'! Attribute value manipulator','line_number':48,'multiline':False]
['text':'! Stored reference type','line_number':53,'multiline':False]
['text':'! Attribute value type','line_number':55,'multiline':False]
['text':'  The stored reference type is an lvalue reference since apparently different compilers (GCC and MSVC) have different quirks when rvalue references are stored as members.','line_number':59,'multiline':False]
['text':'  Additionally, MSVC (at least 11.0) has a bug which causes a dangling reference to be stored in the manipulator, if a scalar rvalue is passed to the add_value generator.','line_number':60,'multiline':False]
['text':'  To work around this problem we save the value inside the manipulator in this case.','line_number':61,'multiline':False]
['text':'! Attribute value','line_number':77,'multiline':False]
['text':'! Attribute name','line_number':79,'multiline':False]
['text':'! Initializing constructor','line_number':83,'multiline':False]
['text':'! Returns attribute name','line_number':88,'multiline':False]
['text':'! Returns attribute value','line_number':90,'multiline':False]
['text':'! The operator attaches an attribute value to the log record','line_number':94,'multiline':False]
['text':'! The function creates a manipulator that attaches an attribute value to a log record','line_number':104,'multiline':False]
['text':'! \overload','line_number':113,'multiline':False]
['text':'! \overload','line_number':122,'multiline':False]
['text':'! \overload','line_number':130,'multiline':False]
['text':' !defined(BOOST_NO_CXX11_RVALUE_REFERENCES)','line_number':138,'multiline':False]
['text':' !defined(BOOST_NO_CXX11_RVALUE_REFERENCES)','line_number':153,'multiline':False]
['text':' namespace log','line_number':155,'multiline':False]
['text':' namespace boost','line_number':157,'multiline':False]
['text':' BOOST_LOG_UTILITY_MANIPULATORS_ADD_VALUE_HPP_INCLUDED_','line_number':165,'multiline':False]
