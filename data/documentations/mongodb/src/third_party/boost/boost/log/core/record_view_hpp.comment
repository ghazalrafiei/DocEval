['text':'
 *          Copyright Andrey Semashev 2007 - 2015.
 * Distributed under the Boost Software License, Version 1.0.
 *    (See accompanying file LICENSE_1_0.txt or copy at
 *          http://www.boost.org/LICENSE_1_0.txt)
 ','line_number':1,'multiline':True]
['text':'!
 * \file   record_view.hpp
 * \author Andrey Semashev
 * \date   09.03.2009
 *
 * This header contains a logging record view class definition.
 ','line_number':7,'multiline':True]
['text':' BOOST_LOG_NO_THREADS','line_number':27,'multiline':False]
['text':' BOOST_LOG_DOXYGEN_PASS','line_number':41,'multiline':False]
['text':'!
 * \brief Logging record view class
 *
 * The logging record encapsulates all information related to a single logging statement,
 * in particular, attribute values view and the log message string. The view is immutable,
 * it is implemented as a wrapper around a reference-counted implementation.
 ','line_number':43,'multiline':True]
['text':'! Private data','line_number':59,'multiline':False]
['text':'! Publicly available record data','line_number':63,'multiline':False]
['text':'! Reference counter','line_number':66,'multiline':False]
['text':' BOOST_LOG_NO_THREADS','line_number':71,'multiline':False]
['text':'! Attribute values view','line_number':73,'multiline':False]
['text':'! Constructor from the attribute value set','line_number':76,'multiline':False]
['text':'! Destructor','line_number':83,'multiline':False]
['text':'! A pointer to the log record implementation','line_number':97,'multiline':False]
['text':'  A private constructor, accessible from record','line_number':101,'multiline':False]
['text':' BOOST_LOG_DOXYGEN_PASS','line_number':104,'multiline':False]
['text':'!
     * Default constructor. Creates an empty record view that is equivalent to the invalid record handle.
     *
     * \post <tt>!*this == true</tt>
     ','line_number':107,'multiline':True]
['text':'!
     * Copy constructor
     ','line_number':119,'multiline':True]
['text':'!
     * Move constructor. Source record contents unspecified after the operation.
     ','line_number':124,'multiline':True]
['text':'!
     * Destructor. Destroys the record, releases any sinks and attribute values that were involved in processing this record.
     ','line_number':132,'multiline':True]
['text':'!
     * Copy assignment
     ','line_number':137,'multiline':True]
['text':'!
     * Move assignment. Source record contents unspecified after the operation.
     ','line_number':146,'multiline':True]
['text':'!
     * \return A reference to the set of attribute values attached to this record
     *
     * \pre <tt>!!*this</tt>
     ','line_number':155,'multiline':True]
['text':'!
     * Equality comparison
     *
     * \param that Comparand
     * \return \c true if both <tt>*this</tt> and \a that identify the same log record or both do not
     *         identify any record, \c false otherwise.
     ','line_number':165,'multiline':True]
['text':'!
     * Inequality comparison
     *
     * \param that Comparand
     * \return <tt>!(*this == that)</tt>
     ','line_number':177,'multiline':True]
['text':'!
     * Conversion to an unspecified boolean type
     *
     * \return \c true, if the <tt>*this</tt> identifies a log record, \c false, if the <tt>*this</tt> is not valid
     ','line_number':188,'multiline':True]
['text':'!
     * Inverted conversion to an unspecified boolean type
     *
     * \return \c false, if the <tt>*this</tt> identifies a log record, \c true, if the <tt>*this</tt> is not valid
     ','line_number':195,'multiline':True]
['text':'!
     * Swaps two handles
     *
     * \param that Another record to swap with
     * <b>Throws:</b> Nothing
     ','line_number':205,'multiline':True]
['text':'!
     * Resets the log record handle. If there are no other handles left, the log record is closed
     * and all resources referenced by the record are released.
     *
     * \post <tt>!*this == true</tt>
     ','line_number':216,'multiline':True]
['text':'!
     * Attribute value lookup.
     *
     * \param name Attribute name.
     * \return An \c attribute_value, non-empty if it is found, empty otherwise.
     ','line_number':227,'multiline':True]
['text':'!
     * Attribute value lookup.
     *
     * \param keyword Attribute keyword.
     * \return A \c value_ref with extracted attribute value if it is found, empty \c value_ref otherwise.
     ','line_number':238,'multiline':True]
['text':'!
 * A free-standing swap function overload for \c record_view
 ','line_number':252,'multiline':True]
['text':' namespace log','line_number':260,'multiline':False]
['text':' namespace boost','line_number':262,'multiline':False]
['text':' BOOST_LOG_CORE_RECORD_VIEW_HPP_INCLUDED_','line_number':266,'multiline':False]
