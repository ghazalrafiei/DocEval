['text':'
 *          Copyright Andrey Semashev 2007 - 2015.
 * Distributed under the Boost Software License, Version 1.0.
 *    (See accompanying file LICENSE_1_0.txt or copy at
 *          http://www.boost.org/LICENSE_1_0.txt)
 ','line_number':1,'multiline':True]
['text':'!
 * \file   file.hpp
 * \author Andrey Semashev
 * \date   16.05.2008
 *
 * The header contains implementation of convenience functions for enabling logging to a file.
 ','line_number':7,'multiline':True]
['text':' for is_named_argument','line_number':21,'multiline':False]
['text':' BOOST_LOG_DOXYGEN_PASS','line_number':54,'multiline':False]
['text':'! The function creates a file collector according to the specified arguments','line_number':62,'multiline':False]
['text':'! The function constructs the sink and adds it to the core','line_number':74,'multiline':False]
['text':'! The trait wraps the argument into a file_name named argument, if needed','line_number':103,'multiline':False]
['text':' namespace aux','line_number':134,'multiline':False]
['text':' BOOST_LOG_DOXYGEN_PASS','line_number':153,'multiline':False]
['text':'!
 * The function initializes the logging library to write logs to a file stream.
 *
 * \param args A number of named arguments. The following parameters are supported:
 *             \li \c file_name The active file name or its pattern. This parameter is mandatory.
 *             \li \c target_file_name - Specifies the target file name pattern to use to rename the log file on rotation,
 *                                       before passing it to the file collector. The pattern may contain the same
 *                                       placeholders as the \c file_name parameter. By default, no renaming is done,
 *                                       i.e. the written log file keeps its name according to \c file_name.
 *             \li \c open_mode The mask that describes the open mode for the file. See <tt>std::ios_base::openmode</tt>.
 *             \li \c rotation_size The size of the file at which rotation should occur. See <tt>basic_text_file_backend</tt>.
 *             \li \c time_based_rotation The predicate for time-based file rotations. See <tt>basic_text_file_backend</tt>.
 *             \li \c auto_flush A boolean flag that shows whether the sink should automatically flush the file
 *                               after each written record.
 *             \li \c auto_newline_mode - Specifies automatic trailing newline insertion mode. Must be a value of
 *                                        the \c auto_newline_mode enum. By default, is <tt>auto_newline_mode::insert_if_missing</tt>.
 *             \li \c target The target directory to store rotated files in. Enables file collector and, if specified, limits associated
 *                           with the target directory. See <tt>sinks::file::make_collector</tt>.
 *             \li \c max_size The maximum total size of rotated files in the target directory. See <tt>sinks::file::make_collector</tt>.
 *             \li \c min_free_space Minimum free space in the target directory. See <tt>sinks::file::make_collector</tt>.
 *             \li \c max_files The maximum total number of rotated files in the target directory. See <tt>sinks::file::make_collector</tt>.
 *             \li \c scan_method The method of scanning the target directory for log files. See <tt>sinks::file::scan_method</tt>.
 *             \li \c filter Specifies a filter to install into the sink. May be a string that represents a filter,
 *                           or a filter lambda expression.
 *             \li \c format Specifies a formatter to install into the sink. May be a string that represents a formatter,
 *                           or a formatter lambda expression (either streaming or Boost.Format-like notation).
 *
 * \return Pointer to the constructed sink.
 *
 * \note The \c target named argument is required to enable the file collector and the limits associated with the target directory.
 *       If the parameter is not specified, the file collector will not be created and the limits will not be maintained.
 ','line_number':155,'multiline':True]
['text':' BOOST_LOG_DOXYGEN_PASS','line_number':190,'multiline':False]
['text':' namespace log','line_number':192,'multiline':False]
['text':' namespace boost','line_number':194,'multiline':False]
['text':' BOOST_LOG_UTILITY_SETUP_FILE_HPP_INCLUDED_','line_number':200,'multiline':False]
