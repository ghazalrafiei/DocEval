['text':'
 *          Copyright Andrey Semashev 2007 - 2015.
 * Distributed under the Boost Software License, Version 1.0.
 *    (See accompanying file LICENSE_1_0.txt or copy at
 *          http://www.boost.org/LICENSE_1_0.txt)
 ','line_number':1,'multiline':True]
['text':'!
 * \file   basic_sink_backend.hpp
 * \author Andrey Semashev
 * \date   04.11.2007
 *
 * The header contains implementation of base classes for sink backends.
 ','line_number':7,'multiline':True]
['text':'!
 * \brief Base class for a logging sink backend
 *
 * The \c basic_sink_backend class template defines a number of types that
 * all sink backends are required to define. All sink backends have to derive from the class.
 ','line_number':36,'multiline':True]
['text':'! Frontend requirements tag','line_number':45,'multiline':False]
['text':'!
 * \brief A base class for a logging sink backend with message formatting support
 *
 * The \c basic_formatted_sink_backend class template indicates to the frontend that
 * the backend requires logging record formatting.
 *
 * The class allows to request encoding conversion in case if the sink backend
 * requires the formatted string in some particular encoding (e.g. if underlying API
 * supports only narrow or wide characters). In order to perform conversion one
 * should specify the desired final character type in the \c TargetCharT template
 * parameter.
 ','line_number':54,'multiline':True]
['text':'! Character type','line_number':81,'multiline':False]
['text':'! Formatted string type','line_number':83,'multiline':False]
['text':'! Frontend requirements','line_number':85,'multiline':False]
['text':' namespace sinks','line_number':89,'multiline':False]
['text':' namespace log','line_number':91,'multiline':False]
['text':' namespace boost','line_number':93,'multiline':False]
['text':' BOOST_LOG_SINKS_BASIC_SINK_BACKEND_HPP_INCLUDED_','line_number':97,'multiline':False]
