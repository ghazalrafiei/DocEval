['text':'
 *          Copyright Andrey Semashev 2007 - 2015.
 * Distributed under the Boost Software License, Version 1.0.
 *    (See accompanying file LICENSE_1_0.txt or copy at
 *          http://www.boost.org/LICENSE_1_0.txt)
 ','line_number':1,'multiline':True]
['text':'!
 * \file   unbounded_ordering_queue.hpp
 * \author Andrey Semashev
 * \date   24.07.2011
 *
 * The header contains implementation of unbounded ordering record queueing strategy for
 * the asynchronous sink frontend.
 ','line_number':7,'multiline':True]
['text':'!
 * \brief Unbounded ordering log record queueing strategy
 *
 * The \c unbounded_ordering_queue class is intended to be used with
 * the \c asynchronous_sink frontend as a log record queueing strategy.
 *
 * This strategy provides the following properties to the record queueing mechanism:
 *
 * \li The queue has no size limits.
 * \li The queue has a fixed latency window. This means that each log record put
 *     into the queue will normally not be dequeued for a certain period of time.
 * \li The queue performs stable record ordering within the latency window.
 *     The ordering predicate can be specified in the \c OrderT template parameter.
 *
 * Since this queue has no size limits, it may grow uncontrollably if sink backends
 * dequeue log records not fast enough. When this is an issue, it is recommended to
 * use one of the bounded strategies.
 ','line_number':50,'multiline':True]
['text':'! Ordering window duration, in milliseconds','line_number':82,'multiline':False]
['text':'! Synchronization mutex','line_number':84,'multiline':False]
['text':'! Condition for blocking','line_number':86,'multiline':False]
['text':'! Thread-safe queue','line_number':88,'multiline':False]
['text':'! Interruption flag','line_number':90,'multiline':False]
['text':'!
     * Returns ordering window size specified during initialization
     ','line_number':94,'multiline':True]
['text':'!
     * Returns default ordering window size.
     * The default window size is specific to the operating system thread scheduling mechanism.
     ','line_number':102,'multiline':True]
['text':' The main idea behind this parameter is that the ordering window should be large enough','line_number':108,'multiline':False]
['text':' to allow the frontend to order records from different threads on an attribute','line_number':109,'multiline':False]
['text':' that contains system time. Thus this value should be:','line_number':110,'multiline':False]
['text':' * No less than the minimum time resolution quant that Boost.DateTime provides on the current OS.','line_number':111,'multiline':False]
['text':'   For instance, on Windows it defaults to around 15-16 ms.','line_number':112,'multiline':False]
['text':' * No less than thread switching quant on the current OS. For now 30 ms is large enough window size to','line_number':113,'multiline':False]
['text':'   switch threads on any known OS. It can be tuned for other platforms as needed.','line_number':114,'multiline':False]
['text':'! Initializing constructor','line_number':119,'multiline':False]
['text':'! Enqueues log record to the queue','line_number':128,'multiline':False]
['text':'! Attempts to enqueue log record to the queue','line_number':135,'multiline':False]
['text':'! Attempts to dequeue a log record ready for processing from the queue, does not block if no log records are ready to be processed','line_number':148,'multiline':False]
['text':' We got a new element','line_number':158,'multiline':False]
['text':'! Attempts to dequeue log record from the queue, does not block.','line_number':168,'multiline':False]
['text':'! Dequeues log record from the queue, blocks if no log records are ready to be processed','line_number':183,'multiline':False]
['text':' We got a new element','line_number':196,'multiline':False]
['text':' Wait until the element becomes ready to be processed','line_number':203,'multiline':False]
['text':' Wait for an element to come','line_number':209,'multiline':False]
['text':'! Wakes a thread possibly blocked in the \c dequeue method','line_number':218,'multiline':False]
['text':'! Enqueues a log record','line_number':227,'multiline':False]
['text':' namespace sinks','line_number':237,'multiline':False]
['text':' namespace log','line_number':239,'multiline':False]
['text':' namespace boost','line_number':241,'multiline':False]
['text':' BOOST_LOG_SINKS_UNBOUNDED_ORDERING_QUEUE_HPP_INCLUDED_','line_number':245,'multiline':False]
