['text':'  boost timer.hpp header file  ---------------------------------------------//','line_number':1,'multiline':False]
['text':'  Copyright Beman Dawes 1994-99.  Distributed under the Boost','line_number':3,'multiline':False]
['text':'  Software License, Version 1.0. (See accompanying file','line_number':4,'multiline':False]
['text':'  LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)','line_number':5,'multiline':False]
['text':'  See http://www.boost.org/libs/timer for documentation.','line_number':7,'multiline':False]
['text':'  Revision History','line_number':9,'multiline':False]
['text':'  01 Apr 01  Modified to use new <boost/limits.hpp> header. (JMaddock)','line_number':10,'multiline':False]
['text':'  12 Jan 01  Change to inline implementation to allow use without library','line_number':11,'multiline':False]
['text':'             builds. See docs for more rationale. (Beman Dawes) ','line_number':12,'multiline':False]
['text':'  25 Sep 99  elapsed_max() and elapsed_min() added (John Maddock)','line_number':13,'multiline':False]
['text':'  16 Jul 99  Second beta','line_number':14,'multiline':False]
['text':'   6 Jul 99  Initial boost version','line_number':15,'multiline':False]
['text':'  timer  -------------------------------------------------------------------//','line_number':34,'multiline':False]
['text':'  A timer object measures elapsed time.','line_number':36,'multiline':False]
['text':'  It is recommended that implementations measure wall clock rather than CPU','line_number':38,'multiline':False]
['text':'  time since the intended use is performance measurement on systems where','line_number':39,'multiline':False]
['text':'  total elapsed time is more important than just process or CPU time.','line_number':40,'multiline':False]
['text':'  Warnings: The maximum measurable elapsed time may well be only 596.5+ hours','line_number':42,'multiline':False]
['text':'  due to implementation limitations.  The accuracy of timings depends on the','line_number':43,'multiline':False]
['text':'  accuracy of timing information provided by the underlying platform, and','line_number':44,'multiline':False]
['text':'  this varies a great deal from platform to platform.','line_number':45,'multiline':False]
['text':' postcondition: elapsed()==0','line_number':50,'multiline':False]
['text':'         timer( const timer& src );      // post: elapsed()==src.elapsed()','line_number':51,'multiline':False]
['text':'        ~timer(){}','line_number':52,'multiline':False]
['text':'  timer& operator=( const timer& src );  // post: elapsed()==src.elapsed()','line_number':53,'multiline':False]
['text':' post: elapsed()==0','line_number':54,'multiline':False]
['text':' return elapsed time in seconds','line_number':55,'multiline':False]
['text':' return estimated maximum value for elapsed()','line_number':58,'multiline':False]
['text':' Portability warning: elapsed_max() may return too high a value on systems','line_number':59,'multiline':False]
['text':' where std::clock_t overflows or resets at surprising values.','line_number':60,'multiline':False]
['text':' return minimum value for elapsed()','line_number':66,'multiline':False]
['text':' timer','line_number':71,'multiline':False]
['text':' namespace boost','line_number':73,'multiline':False]
['text':' BOOST_TIMER_HPP','line_number':75,'multiline':False]
