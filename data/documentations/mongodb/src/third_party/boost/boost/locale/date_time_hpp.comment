['text':'','line_number':1,'multiline':False]
['text':'  Copyright (c) 2009-2011 Artyom Beilis (Tonkikh)','line_number':2,'multiline':False]
['text':'','line_number':3,'multiline':False]
['text':'  Distributed under the Boost Software License, Version 1.0. (See','line_number':4,'multiline':False]
['text':'  accompanying file LICENSE_1_0.txt or copy at','line_number':5,'multiline':False]
['text':'  http://www.boost.org/LICENSE_1_0.txt)','line_number':6,'multiline':False]
['text':'','line_number':7,'multiline':False]
['text':'/','line_number':28,'multiline':False]
['text':'/ \defgroup date_time Date, Time, Timezone and Calendar manipulations ','line_number':29,'multiline':False]
['text':'/','line_number':30,'multiline':False]
['text':'/ This module provides various calendar, timezone and date time services','line_number':31,'multiline':False]
['text':'/','line_number':32,'multiline':False]
['text':'/ @{','line_number':33,'multiline':False]
['text':'/','line_number':36,'multiline':False]
['text':'/ \brief This error is thrown in case of invalid state that occurred','line_number':37,'multiline':False]
['text':'/','line_number':38,'multiline':False]
['text':'/','line_number':41,'multiline':False]
['text':'/ Constructor of date_time_error class','line_number':42,'multiline':False]
['text':'/ ','line_number':43,'multiline':False]
['text':'/','line_number':48,'multiline':False]
['text':'/ \brief This class represents a pair of period_type and the integer','line_number':49,'multiline':False]
['text':'/ values that describes its amount. For example 3 days or 4 years.','line_number':50,'multiline':False]
['text':'/','line_number':51,'multiline':False]
['text':'/ Usually obtained as product of period_type and integer or','line_number':52,'multiline':False]
['text':'/ my calling a representative functions','line_number':53,'multiline':False]
['text':'/ For example day()*3 == date_time_period(day(),3) == day(3)','line_number':54,'multiline':False]
['text':'/ ','line_number':55,'multiline':False]
['text':'/< The type of period, i.e. era, year, day etc.','line_number':58,'multiline':False]
['text':'/< The value the actual number of \a periods','line_number':59,'multiline':False]
['text':'/','line_number':60,'multiline':False]
['text':'/ Operator + returns copy of itself','line_number':61,'multiline':False]
['text':'/','line_number':62,'multiline':False]
['text':'/','line_number':64,'multiline':False]
['text':'/ Operator -, switches the sign of period','line_number':65,'multiline':False]
['text':'/','line_number':66,'multiline':False]
['text':'/','line_number':69,'multiline':False]
['text':'/ Constructor that creates date_time_period from period_type \a f and a value \a v -- default 1.','line_number':70,'multiline':False]
['text':'/','line_number':71,'multiline':False]
['text':'/','line_number':76,'multiline':False]
['text':'/  Get period_type for: special invalid value, should not be used directly','line_number':77,'multiline':False]
['text':'/','line_number':78,'multiline':False]
['text':'/','line_number':80,'multiline':False]
['text':'/  Get period_type for: Era i.e. AC, BC in Gregorian and Julian calendar, range [0,1]','line_number':81,'multiline':False]
['text':'/','line_number':82,'multiline':False]
['text':'/','line_number':84,'multiline':False]
['text':'/  Get period_type for: Year, it is calendar specific, for example 2011 in Gregorian calendar.','line_number':85,'multiline':False]
['text':'/','line_number':86,'multiline':False]
['text':'/','line_number':88,'multiline':False]
['text':'/  Get period_type for: Extended year for Gregorian/Julian calendars, where 1 BC == 0, 2 BC == -1.','line_number':89,'multiline':False]
['text':'/','line_number':90,'multiline':False]
['text':'/','line_number':92,'multiline':False]
['text':'/  Get period_type for: The month of year, calendar specific, in Gregorian [0..11]','line_number':93,'multiline':False]
['text':'/','line_number':94,'multiline':False]
['text':'/','line_number':96,'multiline':False]
['text':'/  Get period_type for: The day of month, calendar specific, in Gregorian [1..31]','line_number':97,'multiline':False]
['text':'/','line_number':98,'multiline':False]
['text':'/','line_number':100,'multiline':False]
['text':'/  Get period_type for: The number of day in year, starting from 1, in Gregorian  [1..366]','line_number':101,'multiline':False]
['text':'/','line_number':102,'multiline':False]
['text':'/','line_number':104,'multiline':False]
['text':'/  Get period_type for: Day of week, Sunday=1, Monday=2,..., Saturday=7.','line_number':105,'multiline':False]
['text':'/','line_number':106,'multiline':False]
['text':'/ Note that updating this value respects local day of week, so for example,','line_number':107,'multiline':False]
['text':'/ If first day of week is Monday and the current day is Tuesday then setting','line_number':108,'multiline':False]
['text':'/ the value to Sunday (1) would forward the date by 5 days forward and not backward','line_number':109,'multiline':False]
['text':'/ by two days as it could be expected if the numbers were taken as is.','line_number':110,'multiline':False]
['text':'/','line_number':111,'multiline':False]
['text':'/','line_number':113,'multiline':False]
['text':'/  Get period_type for: Original number of the day of the week in month. For example 1st Sunday, ','line_number':114,'multiline':False]
['text':'/ 2nd Sunday, etc. in Gregorian [1..5]','line_number':115,'multiline':False]
['text':'/','line_number':116,'multiline':False]
['text':'/','line_number':118,'multiline':False]
['text':'/  Get period_type for: Local day of week, for example in France Monday is 1, in US Sunday is 1, [1..7]','line_number':119,'multiline':False]
['text':'/','line_number':120,'multiline':False]
['text':'/','line_number':122,'multiline':False]
['text':'/  Get period_type for: 24 clock hour [0..23]','line_number':123,'multiline':False]
['text':'/','line_number':124,'multiline':False]
['text':'/','line_number':126,'multiline':False]
['text':'/  Get period_type for: 12 clock hour [0..11]','line_number':127,'multiline':False]
['text':'/','line_number':128,'multiline':False]
['text':'/','line_number':130,'multiline':False]
['text':'/  Get period_type for: am or pm marker [0..1]','line_number':131,'multiline':False]
['text':'/','line_number':132,'multiline':False]
['text':'/','line_number':134,'multiline':False]
['text':'/  Get period_type for: minute [0..59]','line_number':135,'multiline':False]
['text':'/','line_number':136,'multiline':False]
['text':'/','line_number':138,'multiline':False]
['text':'/  Get period_type for: second [0..59]','line_number':139,'multiline':False]
['text':'/','line_number':140,'multiline':False]
['text':'/','line_number':142,'multiline':False]
['text':'/  Get period_type for: The week number in the year','line_number':143,'multiline':False]
['text':'/','line_number':144,'multiline':False]
['text':'/','line_number':146,'multiline':False]
['text':'/  Get period_type for: The week number within current month','line_number':147,'multiline':False]
['text':'/','line_number':148,'multiline':False]
['text':'/','line_number':150,'multiline':False]
['text':'/  Get period_type for: First day of week, constant, for example Sunday in US = 1, Monday in France = 2','line_number':151,'multiline':False]
['text':'/','line_number':152,'multiline':False]
['text':'/','line_number':155,'multiline':False]
['text':'/  Get date_time_period for: Era i.e. AC, BC in Gregorian and Julian calendar, range [0,1]','line_number':156,'multiline':False]
['text':'/','line_number':157,'multiline':False]
['text':'/','line_number':159,'multiline':False]
['text':'/  Get date_time_period for: Year, it is calendar specific, for example 2011 in Gregorian calendar.','line_number':160,'multiline':False]
['text':'/','line_number':161,'multiline':False]
['text':'/','line_number':163,'multiline':False]
['text':'/  Get date_time_period for: Extended year for Gregorian/Julian calendars, where 1 BC == 0, 2 BC == -1.','line_number':164,'multiline':False]
['text':'/','line_number':165,'multiline':False]
['text':'/','line_number':167,'multiline':False]
['text':'/  Get date_time_period for: The month of year, calendar specific, in Gregorian [0..11]','line_number':168,'multiline':False]
['text':'/','line_number':169,'multiline':False]
['text':'/','line_number':171,'multiline':False]
['text':'/  Get date_time_period for: The day of month, calendar specific, in Gregorian [1..31]','line_number':172,'multiline':False]
['text':'/','line_number':173,'multiline':False]
['text':'/','line_number':175,'multiline':False]
['text':'/  Get date_time_period for: The number of day in year, starting from 1, in Gregorian  [1..366]','line_number':176,'multiline':False]
['text':'/','line_number':177,'multiline':False]
['text':'/','line_number':179,'multiline':False]
['text':'/  Get date_time_period for: Day of week, Sunday=1, Monday=2,..., Saturday=7.','line_number':180,'multiline':False]
['text':'/','line_number':181,'multiline':False]
['text':'/ Note that updating this value respects local day of week, so for example,','line_number':182,'multiline':False]
['text':'/ If first day of week is Monday and the current day is Tuesday then setting','line_number':183,'multiline':False]
['text':'/ the value to Sunday (1) would forward the date by 5 days forward and not backward','line_number':184,'multiline':False]
['text':'/ by two days as it could be expected if the numbers were taken as is.','line_number':185,'multiline':False]
['text':'/','line_number':186,'multiline':False]
['text':'/','line_number':188,'multiline':False]
['text':'/  Get date_time_period for: Original number of the day of the week in month. For example 1st Sunday, ','line_number':189,'multiline':False]
['text':'/ 2nd Sunday, etc. in Gregorian [1..5]','line_number':190,'multiline':False]
['text':'/','line_number':191,'multiline':False]
['text':'/','line_number':193,'multiline':False]
['text':'/  Get date_time_period for: Local day of week, for example in France Monday is 1, in US Sunday is 1, [1..7]','line_number':194,'multiline':False]
['text':'/','line_number':195,'multiline':False]
['text':'/','line_number':197,'multiline':False]
['text':'/  Get date_time_period for: 24 clock hour [0..23]','line_number':198,'multiline':False]
['text':'/','line_number':199,'multiline':False]
['text':'/','line_number':201,'multiline':False]
['text':'/  Get date_time_period for: 12 clock hour [0..11]','line_number':202,'multiline':False]
['text':'/','line_number':203,'multiline':False]
['text':'/','line_number':205,'multiline':False]
['text':'/  Get date_time_period for: am or pm marker [0..1]','line_number':206,'multiline':False]
['text':'/','line_number':207,'multiline':False]
['text':'/','line_number':209,'multiline':False]
['text':'/  Get date_time_period for: minute [0..59]','line_number':210,'multiline':False]
['text':'/','line_number':211,'multiline':False]
['text':'/','line_number':213,'multiline':False]
['text':'/  Get date_time_period for: second [0..59]','line_number':214,'multiline':False]
['text':'/','line_number':215,'multiline':False]
['text':'/','line_number':217,'multiline':False]
['text':'/  Get date_time_period for: The week number in the year','line_number':218,'multiline':False]
['text':'/','line_number':219,'multiline':False]
['text':'/','line_number':221,'multiline':False]
['text':'/  Get date_time_period for: The week number within current month','line_number':222,'multiline':False]
['text':'/','line_number':223,'multiline':False]
['text':'/','line_number':225,'multiline':False]
['text':'/  Get date_time_period for: First day of week, constant, for example Sunday in US = 1, Monday in France = 2','line_number':226,'multiline':False]
['text':'/','line_number':227,'multiline':False]
['text':'/','line_number':230,'multiline':False]
['text':'/ Get predefined constant for January','line_number':231,'multiline':False]
['text':'/','line_number':232,'multiline':False]
['text':'/','line_number':234,'multiline':False]
['text':'/ Get predefined constant for February','line_number':235,'multiline':False]
['text':'/','line_number':236,'multiline':False]
['text':'/','line_number':238,'multiline':False]
['text':'/ Get predefined constant for March','line_number':239,'multiline':False]
['text':'/','line_number':240,'multiline':False]
['text':'/','line_number':242,'multiline':False]
['text':'/ Get predefined constant for April','line_number':243,'multiline':False]
['text':'/','line_number':244,'multiline':False]
['text':'/','line_number':246,'multiline':False]
['text':'/ Get predefined constant for May','line_number':247,'multiline':False]
['text':'/','line_number':248,'multiline':False]
['text':'/','line_number':250,'multiline':False]
['text':'/ Get predefined constant for June','line_number':251,'multiline':False]
['text':'/','line_number':252,'multiline':False]
['text':'/','line_number':254,'multiline':False]
['text':'/ Get predefined constant for July','line_number':255,'multiline':False]
['text':'/','line_number':256,'multiline':False]
['text':'/','line_number':258,'multiline':False]
['text':'/ Get predefined constant for August','line_number':259,'multiline':False]
['text':'/','line_number':260,'multiline':False]
['text':'/','line_number':262,'multiline':False]
['text':'/ Get predefined constant for September','line_number':263,'multiline':False]
['text':'/','line_number':264,'multiline':False]
['text':'/','line_number':266,'multiline':False]
['text':'/ Get predefined constant for October ','line_number':267,'multiline':False]
['text':'/','line_number':268,'multiline':False]
['text':'/','line_number':270,'multiline':False]
['text':'/ Get predefined constant for November','line_number':271,'multiline':False]
['text':'/','line_number':272,'multiline':False]
['text':'/','line_number':274,'multiline':False]
['text':'/ Get predefined constant for December','line_number':275,'multiline':False]
['text':'/','line_number':276,'multiline':False]
['text':'/','line_number':279,'multiline':False]
['text':'/ Get predefined constant for Sunday','line_number':280,'multiline':False]
['text':'/','line_number':281,'multiline':False]
['text':'/','line_number':283,'multiline':False]
['text':'/ Get predefined constant for Monday ','line_number':284,'multiline':False]
['text':'/','line_number':285,'multiline':False]
['text':'/','line_number':287,'multiline':False]
['text':'/ Get predefined constant for Tuesday','line_number':288,'multiline':False]
['text':'/','line_number':289,'multiline':False]
['text':'/','line_number':291,'multiline':False]
['text':'/ Get predefined constant for Wednesday','line_number':292,'multiline':False]
['text':'/','line_number':293,'multiline':False]
['text':'/','line_number':295,'multiline':False]
['text':'/ Get predefined constant for Thursday','line_number':296,'multiline':False]
['text':'/','line_number':297,'multiline':False]
['text':'/','line_number':299,'multiline':False]
['text':'/ Get predefined constant for Friday','line_number':300,'multiline':False]
['text':'/','line_number':301,'multiline':False]
['text':'/','line_number':303,'multiline':False]
['text':'/ Get predefined constant for Saturday','line_number':304,'multiline':False]
['text':'/','line_number':305,'multiline':False]
['text':'/','line_number':307,'multiline':False]
['text':'/ Get predefined constant for AM (Ante Meridiem)','line_number':308,'multiline':False]
['text':'/','line_number':309,'multiline':False]
['text':'/','line_number':311,'multiline':False]
['text':'/ Get predefined constant for PM (Post Meridiem)','line_number':312,'multiline':False]
['text':'/','line_number':313,'multiline':False]
['text':'/','line_number':316,'multiline':False]
['text':'/ convert period_type to date_time_period(f,1)','line_number':317,'multiline':False]
['text':'/','line_number':318,'multiline':False]
['text':'/','line_number':323,'multiline':False]
['text':'/ convert period_type to date_time_period(f,-1)','line_number':324,'multiline':False]
['text':'/','line_number':325,'multiline':False]
['text':'/','line_number':331,'multiline':False]
['text':'/ Create date_time_period of type \a f with value \a v. ','line_number':332,'multiline':False]
['text':'/','line_number':333,'multiline':False]
['text':'/','line_number':340,'multiline':False]
['text':'/ Create date_time_period of type \a f with value \a v. ','line_number':341,'multiline':False]
['text':'/','line_number':342,'multiline':False]
['text':'/','line_number':348,'multiline':False]
['text':'/ Create date_time_period of type \a f with value \a v. ','line_number':349,'multiline':False]
['text':'/','line_number':350,'multiline':False]
['text':'/','line_number':357,'multiline':False]
['text':'/ Create date_time_period of type \a f with value \a v. ','line_number':358,'multiline':False]
['text':'/','line_number':359,'multiline':False]
['text':' period','line_number':367,'multiline':False]
['text':'/','line_number':370,'multiline':False]
['text':'/ \brief this class that represents a set of periods, ','line_number':371,'multiline':False]
['text':'/','line_number':372,'multiline':False]
['text':'/ It is generally created by operations on periods:','line_number':373,'multiline':False]
['text':'/ 1995*year + 3*month + 1*day. Note: operations are not commutative.','line_number':374,'multiline':False]
['text':'/','line_number':375,'multiline':False]
['text':'/','line_number':379,'multiline':False]
['text':'/ Default constructor - empty set','line_number':380,'multiline':False]
['text':'/','line_number':381,'multiline':False]
['text':'/','line_number':385,'multiline':False]
['text':'/ Create a set of single period with value 1','line_number':386,'multiline':False]
['text':'/','line_number':387,'multiline':False]
['text':'/','line_number':392,'multiline':False]
['text':'/ Create a set of single period \a fl','line_number':393,'multiline':False]
['text':'/','line_number':394,'multiline':False]
['text':'/','line_number':399,'multiline':False]
['text':'/ Append date_time_period \a f to the set','line_number':400,'multiline':False]
['text':'/','line_number':401,'multiline':False]
['text':'/','line_number':410,'multiline':False]
['text':'/ Get number if items in list','line_number':411,'multiline':False]
['text':'/','line_number':412,'multiline':False]
['text':'/','line_number':425,'multiline':False]
['text':'/ Get item at position \a n the set, n should be in range [0,size)','line_number':426,'multiline':False]
['text':'/','line_number':427,'multiline':False]
['text':'/','line_number':443,'multiline':False]
['text':'/ Append two periods sets. Note this operator is not commutative ','line_number':444,'multiline':False]
['text':'/','line_number':445,'multiline':False]
['text':'/','line_number':454,'multiline':False]
['text':'/ Append two period sets when all periods of set \b change their sign','line_number':455,'multiline':False]
['text':'/','line_number':456,'multiline':False]
['text':'/','line_number':466,'multiline':False]
['text':'/ \brief this class provides an access to general calendar information. ','line_number':467,'multiline':False]
['text':'/','line_number':468,'multiline':False]
['text':'/ This information is not connected to specific date but generic to locale, and timezone.','line_number':469,'multiline':False]
['text':'/ It is used in obtaining general information about calendar and is essential for creation of','line_number':470,'multiline':False]
['text':'/ date_time objects.','line_number':471,'multiline':False]
['text':'/','line_number':472,'multiline':False]
['text':'/','line_number':476,'multiline':False]
['text':'/ Create calendar taking locale and timezone information from ios_base instance.','line_number':477,'multiline':False]
['text':'/ ','line_number':478,'multiline':False]
['text':'/ \note throws std::bad_cast if ios does not have a locale with installed \ref calendar_facet','line_number':479,'multiline':False]
['text':'/ facet installed','line_number':480,'multiline':False]
['text':'/ ','line_number':481,'multiline':False]
['text':'/','line_number':483,'multiline':False]
['text':'/ Create calendar with locale \a l and time_zone \a zone','line_number':484,'multiline':False]
['text':'/','line_number':485,'multiline':False]
['text':'/ \note throws std::bad_cast if loc does not have \ref calendar_facet facet installed','line_number':486,'multiline':False]
['text':'/ ','line_number':487,'multiline':False]
['text':'/','line_number':489,'multiline':False]
['text':'/ Create calendar with locale \a l and default timezone','line_number':490,'multiline':False]
['text':'/','line_number':491,'multiline':False]
['text':'/ \note throws std::bad_cast if loc does not have \ref calendar_facet facet installed','line_number':492,'multiline':False]
['text':'/ ','line_number':493,'multiline':False]
['text':'/','line_number':495,'multiline':False]
['text':'/ Create calendar with default locale and timezone \a zone','line_number':496,'multiline':False]
['text':'/','line_number':497,'multiline':False]
['text':'/ \note throws std::bad_cast if global locale does not have \ref calendar_facet facet installed','line_number':498,'multiline':False]
['text':'/ ','line_number':499,'multiline':False]
['text':'/','line_number':501,'multiline':False]
['text':'/ Create calendar with default locale and timezone ','line_number':502,'multiline':False]
['text':'/','line_number':503,'multiline':False]
['text':'/ \note throws std::bad_cast if global locale does not have \ref calendar_facet facet installed','line_number':504,'multiline':False]
['text':'/ ','line_number':505,'multiline':False]
['text':'/','line_number':509,'multiline':False]
['text':'/ copy calendar','line_number':510,'multiline':False]
['text':'/','line_number':511,'multiline':False]
['text':'/','line_number':513,'multiline':False]
['text':'/ assign calendar','line_number':514,'multiline':False]
['text':'/','line_number':515,'multiline':False]
['text':'/','line_number':518,'multiline':False]
['text':'/ Get minimum value for period f, For example for period::day it is 1.','line_number':519,'multiline':False]
['text':'/','line_number':520,'multiline':False]
['text':'/','line_number':522,'multiline':False]
['text':'/ Get greatest possible minimum value for period f, For example for period::day it is 1, but may be different for other calendars.','line_number':523,'multiline':False]
['text':'/','line_number':524,'multiline':False]
['text':'/','line_number':526,'multiline':False]
['text':'/ Get maximum value for period f, For example for Gregorian calendar's maximum period::day it is 31.','line_number':527,'multiline':False]
['text':'/','line_number':528,'multiline':False]
['text':'/','line_number':530,'multiline':False]
['text':'/ Get least maximum value for period f, For example for Gregorian calendar's maximum period::day it is 28.','line_number':531,'multiline':False]
['text':'/','line_number':532,'multiline':False]
['text':'/','line_number':535,'multiline':False]
['text':'/ Get first day of week for specific calendar, for example for US it is 1 - Sunday for France it is 2 - Monday','line_number':536,'multiline':False]
['text':'/','line_number':539,'multiline':False]
['text':'/ get calendar's locale','line_number':540,'multiline':False]
['text':'/','line_number':541,'multiline':False]
['text':'/','line_number':543,'multiline':False]
['text':'/ get calendar's time zone','line_number':544,'multiline':False]
['text':'/','line_number':545,'multiline':False]
['text':'/','line_number':548,'multiline':False]
['text':'/ Check if the calendar is Gregorian','line_number':549,'multiline':False]
['text':'/','line_number':550,'multiline':False]
['text':'/','line_number':553,'multiline':False]
['text':'/ Compare calendars for equivalence: i.e. calendar types, time zones etc.','line_number':554,'multiline':False]
['text':'/','line_number':555,'multiline':False]
['text':'/','line_number':557,'multiline':False]
['text':'/ Opposite of ==','line_number':558,'multiline':False]
['text':'/','line_number':559,'multiline':False]
['text':'/','line_number':569,'multiline':False]
['text':'/ \brief this class represents a date time and allows to perform various operation according to the','line_number':570,'multiline':False]
['text':'/ locale settings.','line_number':571,'multiline':False]
['text':'/','line_number':572,'multiline':False]
['text':'/ This class allows to manipulate various aspects of dates and times easily using arithmetic operations with','line_number':573,'multiline':False]
['text':'/ periods.','line_number':574,'multiline':False]
['text':'/','line_number':575,'multiline':False]
['text':'/ General arithmetic functions:','line_number':576,'multiline':False]
['text':'/','line_number':577,'multiline':False]
['text':'/ - date_time + date_time_period_set = date_time: move time point forward by specific periods like date_time + month;','line_number':578,'multiline':False]
['text':'/ - date_time - date_time_period_set = date_time: move time point backward by specific periods like date_time - month;','line_number':579,'multiline':False]
['text':'/ - date_time << date_time_period_set  = date_time: roll time point forward by specific periods with rolling to begin if overflows: like "2010-01-31" << 2* day == "2010-01-02" instead of "2010-02-02"','line_number':580,'multiline':False]
['text':'/ - date_time >> date_time_period_set  = date_time: roll time point backward by specific periods with rolling to end if overflows: like "2010-01-02" >> 2* day == "2010-01-31" instead of "2009-12-30"','line_number':581,'multiline':False]
['text':'/ - date_time / period_type = int - current period value: like "2010-12-21" / month == 12. "2010-12-21" / year = 2010','line_number':582,'multiline':False]
['text':'/ - (date_time - date_time) / period_type = int: distance between dates in period_type. Like ("2010-12-01" - "2008-12-01") / month = 24.','line_number':583,'multiline':False]
['text':'/','line_number':584,'multiline':False]
['text':'/ You can also assign specific periods using assignment operator like:','line_number':585,'multiline':False]
['text':'/ some_time = year * 1995 that sets the year to 1995.','line_number':586,'multiline':False]
['text':'/','line_number':587,'multiline':False]
['text':'/','line_number':588,'multiline':False]
['text':'/','line_number':593,'multiline':False]
['text':'/ Dafault constructor, uses default calendar initialized date_time object to current time.','line_number':594,'multiline':False]
['text':'/','line_number':595,'multiline':False]
['text':'/ \note throws std::bad_cast if the global locale does not have \ref calendar_facet facet installed','line_number':596,'multiline':False]
['text':'/ ','line_number':597,'multiline':False]
['text':'/','line_number':599,'multiline':False]
['text':'/ copy date_time','line_number':600,'multiline':False]
['text':'/','line_number':601,'multiline':False]
['text':'/','line_number':603,'multiline':False]
['text':'/ copy date_time and change some fields according to the \a set','line_number':604,'multiline':False]
['text':'/','line_number':605,'multiline':False]
['text':'/','line_number':607,'multiline':False]
['text':'/ assign the date_time','line_number':608,'multiline':False]
['text':'/','line_number':609,'multiline':False]
['text':'/','line_number':613,'multiline':False]
['text':'/ Create a date_time object using POSIX time \a time and default calendar','line_number':614,'multiline':False]
['text':'/','line_number':615,'multiline':False]
['text':'/ \note throws std::bad_cast if the global locale does not have \ref calendar_facet facet installed','line_number':616,'multiline':False]
['text':'/ ','line_number':617,'multiline':False]
['text':'/','line_number':619,'multiline':False]
['text':'/ Create a date_time object using POSIX time \a time and calendar \a cal','line_number':620,'multiline':False]
['text':'/','line_number':621,'multiline':False]
['text':'/','line_number':623,'multiline':False]
['text':'/ Create a date_time object using calendar \a cal and initializes it to current time.','line_number':624,'multiline':False]
['text':'/','line_number':625,'multiline':False]
['text':'/','line_number':628,'multiline':False]
['text':'/ Create a date_time object using default calendar and define values given in \a set','line_number':629,'multiline':False]
['text':'/','line_number':630,'multiline':False]
['text':'/ \note throws std::bad_cast if the global locale does not have \ref calendar_facet facet installed','line_number':631,'multiline':False]
['text':'/ ','line_number':632,'multiline':False]
['text':'/','line_number':634,'multiline':False]
['text':'/ Create a date_time object using calendar \a cal and define values given in \a set','line_number':635,'multiline':False]
['text':'/','line_number':636,'multiline':False]
['text':'/','line_number':640,'multiline':False]
['text':'/ assign values to various periods in set \a f  ','line_number':641,'multiline':False]
['text':'/','line_number':642,'multiline':False]
['text':'/','line_number':645,'multiline':False]
['text':'/ set specific period \a f value to \a v','line_number':646,'multiline':False]
['text':'/','line_number':647,'multiline':False]
['text':'/','line_number':649,'multiline':False]
['text':'/ get specific period \a f value','line_number':650,'multiline':False]
['text':'/','line_number':651,'multiline':False]
['text':'/','line_number':654,'multiline':False]
['text':'/ syntactic sugar for get(f)','line_number':655,'multiline':False]
['text':'/','line_number':656,'multiline':False]
['text':'/','line_number':662,'multiline':False]
['text':'/ add single period f to the current date_time','line_number':663,'multiline':False]
['text':'/','line_number':664,'multiline':False]
['text':'/','line_number':670,'multiline':False]
['text':'/ subtract single period f from the current date_time','line_number':671,'multiline':False]
['text':'/','line_number':672,'multiline':False]
['text':'/','line_number':678,'multiline':False]
['text':'/ add single period f to the current date_time','line_number':679,'multiline':False]
['text':'/','line_number':680,'multiline':False]
['text':'/','line_number':685,'multiline':False]
['text':'/ subtract single period f from the current date_time','line_number':686,'multiline':False]
['text':'/','line_number':687,'multiline':False]
['text':'/','line_number':693,'multiline':False]
['text':'/ roll forward a date by single period f.','line_number':694,'multiline':False]
['text':'/','line_number':695,'multiline':False]
['text':'/','line_number':701,'multiline':False]
['text':'/ roll backward a date by single period f.','line_number':702,'multiline':False]
['text':'/','line_number':703,'multiline':False]
['text':'/','line_number':709,'multiline':False]
['text':'/ roll forward a date by single period f.','line_number':710,'multiline':False]
['text':'/','line_number':711,'multiline':False]
['text':'/','line_number':716,'multiline':False]
['text':'/ roll backward a date by single period f.','line_number':717,'multiline':False]
['text':'/','line_number':718,'multiline':False]
['text':'/','line_number':724,'multiline':False]
['text':'/ add date_time_period to the current date_time','line_number':725,'multiline':False]
['text':'/','line_number':726,'multiline':False]
['text':'/','line_number':728,'multiline':False]
['text':'/ subtract date_time_period from the current date_time','line_number':729,'multiline':False]
['text':'/','line_number':730,'multiline':False]
['text':'/','line_number':732,'multiline':False]
['text':'/ add date_time_period to the current date_time','line_number':733,'multiline':False]
['text':'/','line_number':734,'multiline':False]
['text':'/','line_number':736,'multiline':False]
['text':'/ subtract date_time_period from the current date_time','line_number':737,'multiline':False]
['text':'/','line_number':738,'multiline':False]
['text':'/','line_number':741,'multiline':False]
['text':'/ roll current date_time forward by date_time_period v','line_number':742,'multiline':False]
['text':'/','line_number':743,'multiline':False]
['text':'/','line_number':745,'multiline':False]
['text':'/ roll current date_time backward by date_time_period v','line_number':746,'multiline':False]
['text':'/','line_number':747,'multiline':False]
['text':'/','line_number':749,'multiline':False]
['text':'/ roll current date_time forward by date_time_period v','line_number':750,'multiline':False]
['text':'/','line_number':751,'multiline':False]
['text':'/','line_number':753,'multiline':False]
['text':'/ roll current date_time backward by date_time_period v','line_number':754,'multiline':False]
['text':'/','line_number':755,'multiline':False]
['text':'/','line_number':758,'multiline':False]
['text':'/ add date_time_period_set v to the current date_time','line_number':759,'multiline':False]
['text':'/','line_number':760,'multiline':False]
['text':'/','line_number':762,'multiline':False]
['text':'/ subtract date_time_period_set v from the current date_time','line_number':763,'multiline':False]
['text':'/','line_number':764,'multiline':False]
['text':'/','line_number':766,'multiline':False]
['text':'/ add date_time_period_set v to the current date_time','line_number':767,'multiline':False]
['text':'/','line_number':768,'multiline':False]
['text':'/','line_number':770,'multiline':False]
['text':'/ subtract date_time_period_set v from the current date_time','line_number':771,'multiline':False]
['text':'/','line_number':772,'multiline':False]
['text':'/','line_number':775,'multiline':False]
['text':'/ roll current date_time forward by date_time_period_set v','line_number':776,'multiline':False]
['text':'/','line_number':777,'multiline':False]
['text':'/','line_number':779,'multiline':False]
['text':'/ roll current date_time backward by date_time_period_set v','line_number':780,'multiline':False]
['text':'/','line_number':781,'multiline':False]
['text':'/','line_number':783,'multiline':False]
['text':'/ roll current date_time forward by date_time_period_set v','line_number':784,'multiline':False]
['text':'/','line_number':785,'multiline':False]
['text':'/','line_number':787,'multiline':False]
['text':'/ roll current date_time backward by date_time_period_set v','line_number':788,'multiline':False]
['text':'/','line_number':789,'multiline':False]
['text':'/','line_number':792,'multiline':False]
['text':'/ Get POSIX time','line_number':793,'multiline':False]
['text':'/','line_number':794,'multiline':False]
['text':'/ The POSIX time is number of seconds since January 1st, 1970 00:00 UTC, ignoring leap seconds.','line_number':795,'multiline':False]
['text':'/','line_number':796,'multiline':False]
['text':'/','line_number':798,'multiline':False]
['text':'/ set POSIX time','line_number':799,'multiline':False]
['text':'/','line_number':800,'multiline':False]
['text':'/ The POSIX time is number of seconds since January 1st, 1970 00:00 UTC, ignoring leap seconds.','line_number':801,'multiline':False]
['text':'/ This time can be fetched from Operating system clock using C function time, gettimeofday and others.','line_number':802,'multiline':False]
['text':'/','line_number':803,'multiline':False]
['text':'/','line_number':806,'multiline':False]
['text':'/ compare date_time in the timeline (ignores difference in calendar, timezone etc)','line_number':807,'multiline':False]
['text':'/','line_number':808,'multiline':False]
['text':'/','line_number':810,'multiline':False]
['text':'/ compare date_time in the timeline (ignores difference in calendar, timezone etc)','line_number':811,'multiline':False]
['text':'/','line_number':812,'multiline':False]
['text':'/','line_number':814,'multiline':False]
['text':'/ compare date_time in the timeline (ignores difference in calendar, timezone etc)','line_number':815,'multiline':False]
['text':'/','line_number':816,'multiline':False]
['text':'/','line_number':818,'multiline':False]
['text':'/ compare date_time in the timeline (ignores difference in calendar, timezone etc)','line_number':819,'multiline':False]
['text':'/','line_number':820,'multiline':False]
['text':'/','line_number':822,'multiline':False]
['text':'/ compare date_time in the timeline (ignores difference in calendar, timezone etc)','line_number':823,'multiline':False]
['text':'/','line_number':824,'multiline':False]
['text':'/','line_number':826,'multiline':False]
['text':'/ compare date_time in the timeline (ignores difference in calendar, timezone etc)','line_number':827,'multiline':False]
['text':'/','line_number':828,'multiline':False]
['text':'/','line_number':831,'multiline':False]
['text':'/ swaps two dates - efficient, does not throw','line_number':832,'multiline':False]
['text':'/','line_number':833,'multiline':False]
['text':'/','line_number':836,'multiline':False]
['text':'/ calculate the distance from this date_time to \a other in terms of perios \a f','line_number':837,'multiline':False]
['text':'/','line_number':838,'multiline':False]
['text':'/','line_number':841,'multiline':False]
['text':'/ Get minimal possible value for *this time point for a period \a f.','line_number':842,'multiline':False]
['text':'/','line_number':843,'multiline':False]
['text':'/','line_number':845,'multiline':False]
['text':'/ Get minimal possible value for *this time point for a period \a f. For example','line_number':846,'multiline':False]
['text':'/ in February maximum(day) may be 28 or 29, in January maximum(day)==31','line_number':847,'multiline':False]
['text':'/','line_number':848,'multiline':False]
['text':'/','line_number':851,'multiline':False]
['text':'/ Check if *this time point is in daylight saving time ','line_number':852,'multiline':False]
['text':'/','line_number':853,'multiline':False]
['text':'/','line_number':860,'multiline':False]
['text':'/ Writes date_time \a t to output stream \a out.','line_number':861,'multiline':False]
['text':'/','line_number':862,'multiline':False]
['text':'/ This function uses locale, calendar and time zone of the target stream \a in.','line_number':863,'multiline':False]
['text':'/','line_number':864,'multiline':False]
['text':'/ For example:','line_number':865,'multiline':False]
['text':'/ \code','line_number':866,'multiline':False]
['text':'/  date_time now(time(0),hebrew_calendar)','line_number':867,'multiline':False]
['text':'/  cout << "Year: " << period::year(now) <<" Full Date:"<< now;','line_number':868,'multiline':False]
['text':'/ \endcode','line_number':869,'multiline':False]
['text':'/','line_number':870,'multiline':False]
['text':'/ The output may be Year:5770 Full Date:Jan 1, 2010','line_number':871,'multiline':False]
['text':'/ ','line_number':872,'multiline':False]
['text':'/','line_number':895,'multiline':False]
['text':'/ Reads date_time \a t from output stream \a in','line_number':896,'multiline':False]
['text':'/','line_number':897,'multiline':False]
['text':'/ This function uses locale, calendar and time zone of the source stream \a in.','line_number':898,'multiline':False]
['text':'/','line_number':899,'multiline':False]
['text':'/','line_number':924,'multiline':False]
['text':'/ \brief This class represents a period: a pair of two date_time objects.','line_number':925,'multiline':False]
['text':'/ ','line_number':926,'multiline':False]
['text':'/ It is generally used as syntactic sugar to calculate difference between two dates.','line_number':927,'multiline':False]
['text':'/','line_number':928,'multiline':False]
['text':'/ Note: it stores references to the original objects, so it is not recommended to be used','line_number':929,'multiline':False]
['text':'/ outside of the equation you calculate the difference in.','line_number':930,'multiline':False]
['text':'/','line_number':931,'multiline':False]
['text':'/','line_number':935,'multiline':False]
['text':'/ Create an object were \a first represents earlier point on time line and \a second is later','line_number':936,'multiline':False]
['text':'/ point.','line_number':937,'multiline':False]
['text':'/ ','line_number':938,'multiline':False]
['text':'/','line_number':945,'multiline':False]
['text':'/ find a difference in terms of period_type \a f','line_number':946,'multiline':False]
['text':'/','line_number':947,'multiline':False]
['text':'/','line_number':953,'multiline':False]
['text':'/ Syntactic sugar for get(f)','line_number':954,'multiline':False]
['text':'/','line_number':955,'multiline':False]
['text':'/','line_number':961,'multiline':False]
['text':'/ Get starting point','line_number':962,'multiline':False]
['text':'/','line_number':963,'multiline':False]
['text':'/','line_number':965,'multiline':False]
['text':'/ Get ending point','line_number':966,'multiline':False]
['text':'/','line_number':967,'multiline':False]
['text':'/','line_number':974,'multiline':False]
['text':'/ Calculates the difference between two dates, the left operand is a later point on time line.','line_number':975,'multiline':False]
['text':'/ Returns date_time_duration object.','line_number':976,'multiline':False]
['text':'/','line_number':977,'multiline':False]
['text':'/','line_number':985,'multiline':False]
['text':'/  Extract from date_time numerical value of Era i.e. AC, BC in Gregorian and Julian calendar, range [0,1]','line_number':986,'multiline':False]
['text':'/','line_number':987,'multiline':False]
['text':'/','line_number':989,'multiline':False]
['text':'/  Extract from date_time numerical value of Year, it is calendar specific, for example 2011 in Gregorian calendar.','line_number':990,'multiline':False]
['text':'/','line_number':991,'multiline':False]
['text':'/','line_number':993,'multiline':False]
['text':'/  Extract from date_time numerical value of Extended year for Gregorian/Julian calendars, where 1 BC == 0, 2 BC == -1.','line_number':994,'multiline':False]
['text':'/','line_number':995,'multiline':False]
['text':'/','line_number':997,'multiline':False]
['text':'/  Extract from date_time numerical value of The month of year, calendar specific, in Gregorian [0..11]','line_number':998,'multiline':False]
['text':'/','line_number':999,'multiline':False]
['text':'/','line_number':1001,'multiline':False]
['text':'/  Extract from date_time numerical value of The day of month, calendar specific, in Gregorian [1..31]','line_number':1002,'multiline':False]
['text':'/','line_number':1003,'multiline':False]
['text':'/','line_number':1005,'multiline':False]
['text':'/  Extract from date_time numerical value of The number of day in year, starting from 1, in Gregorian  [1..366]','line_number':1006,'multiline':False]
['text':'/','line_number':1007,'multiline':False]
['text':'/','line_number':1009,'multiline':False]
['text':'/  Extract from date_time numerical value of Day of week, Sunday=1, Monday=2,..., Saturday=7.','line_number':1010,'multiline':False]
['text':'/','line_number':1011,'multiline':False]
['text':'/ Note that updating this value respects local day of week, so for example,','line_number':1012,'multiline':False]
['text':'/ If first day of week is Monday and the current day is Tuesday then setting','line_number':1013,'multiline':False]
['text':'/ the value to Sunday (1) would forward the date by 5 days forward and not backward','line_number':1014,'multiline':False]
['text':'/ by two days as it could be expected if the numbers were taken as is.','line_number':1015,'multiline':False]
['text':'/','line_number':1016,'multiline':False]
['text':'/','line_number':1018,'multiline':False]
['text':'/  Extract from date_time numerical value of Original number of the day of the week in month. For example 1st Sunday, ','line_number':1019,'multiline':False]
['text':'/ 2nd Sunday, etc. in Gregorian [1..5]','line_number':1020,'multiline':False]
['text':'/','line_number':1021,'multiline':False]
['text':'/','line_number':1023,'multiline':False]
['text':'/  Extract from date_time numerical value of Local day of week, for example in France Monday is 1, in US Sunday is 1, [1..7]','line_number':1024,'multiline':False]
['text':'/','line_number':1025,'multiline':False]
['text':'/','line_number':1027,'multiline':False]
['text':'/  Extract from date_time numerical value of 24 clock hour [0..23]','line_number':1028,'multiline':False]
['text':'/','line_number':1029,'multiline':False]
['text':'/','line_number':1031,'multiline':False]
['text':'/  Extract from date_time numerical value of 12 clock hour [0..11]','line_number':1032,'multiline':False]
['text':'/','line_number':1033,'multiline':False]
['text':'/','line_number':1035,'multiline':False]
['text':'/  Extract from date_time numerical value of am or pm marker [0..1]','line_number':1036,'multiline':False]
['text':'/','line_number':1037,'multiline':False]
['text':'/','line_number':1039,'multiline':False]
['text':'/  Extract from date_time numerical value of minute [0..59]','line_number':1040,'multiline':False]
['text':'/','line_number':1041,'multiline':False]
['text':'/','line_number':1043,'multiline':False]
['text':'/  Extract from date_time numerical value of second [0..59]','line_number':1044,'multiline':False]
['text':'/','line_number':1045,'multiline':False]
['text':'/','line_number':1047,'multiline':False]
['text':'/  Extract from date_time numerical value of The week number in the year','line_number':1048,'multiline':False]
['text':'/','line_number':1049,'multiline':False]
['text':'/','line_number':1051,'multiline':False]
['text':'/  Extract from date_time numerical value of The week number within current month','line_number':1052,'multiline':False]
['text':'/','line_number':1053,'multiline':False]
['text':'/','line_number':1055,'multiline':False]
['text':'/  Extract from date_time numerical value of First day of week, constant, for example Sunday in US = 1, Monday in France = 2','line_number':1056,'multiline':False]
['text':'/','line_number':1057,'multiline':False]
['text':'/','line_number':1060,'multiline':False]
['text':'/  Extract from date_time_duration numerical value of duration in  Era i.e. AC, BC in Gregorian and Julian calendar, range [0,1]','line_number':1061,'multiline':False]
['text':'/','line_number':1062,'multiline':False]
['text':'/','line_number':1064,'multiline':False]
['text':'/  Extract from date_time_duration numerical value of duration in years','line_number':1065,'multiline':False]
['text':'/','line_number':1066,'multiline':False]
['text':'/','line_number':1068,'multiline':False]
['text':'/  Extract from date_time_duration numerical value of duration in extended years (for Gregorian/Julian calendars, where 1 BC == 0, 2 BC == -1).','line_number':1069,'multiline':False]
['text':'/','line_number':1070,'multiline':False]
['text':'/','line_number':1072,'multiline':False]
['text':'/  Extract from date_time_duration numerical value of duration in months','line_number':1073,'multiline':False]
['text':'/','line_number':1074,'multiline':False]
['text':'/','line_number':1076,'multiline':False]
['text':'/  Extract from date_time_duration numerical value of duration in days of month','line_number':1077,'multiline':False]
['text':'/','line_number':1078,'multiline':False]
['text':'/','line_number':1080,'multiline':False]
['text':'/  Extract from date_time_duration numerical value of duration in days of year','line_number':1081,'multiline':False]
['text':'/','line_number':1082,'multiline':False]
['text':'/','line_number':1084,'multiline':False]
['text':'/  Extract from date_time_duration numerical value of duration in days of week','line_number':1085,'multiline':False]
['text':'/','line_number':1086,'multiline':False]
['text':'/','line_number':1088,'multiline':False]
['text':'/  Extract from date_time_duration numerical value of duration in original number of the day of the week in month','line_number':1089,'multiline':False]
['text':'/','line_number':1090,'multiline':False]
['text':'/','line_number':1092,'multiline':False]
['text':'/  Extract from date_time_duration numerical value of duration in local day of week','line_number':1093,'multiline':False]
['text':'/','line_number':1094,'multiline':False]
['text':'/','line_number':1096,'multiline':False]
['text':'/  Extract from date_time_duration numerical value of duration in hours','line_number':1097,'multiline':False]
['text':'/','line_number':1098,'multiline':False]
['text':'/','line_number':1100,'multiline':False]
['text':'/  Extract from date_time_duration numerical value of duration in  12 clock hours','line_number':1101,'multiline':False]
['text':'/','line_number':1102,'multiline':False]
['text':'/','line_number':1104,'multiline':False]
['text':'/  Extract from date_time_duration numerical value of duration in  am or pm markers','line_number':1105,'multiline':False]
['text':'/','line_number':1106,'multiline':False]
['text':'/','line_number':1108,'multiline':False]
['text':'/  Extract from date_time_duration numerical value of duration in  minutes','line_number':1109,'multiline':False]
['text':'/','line_number':1110,'multiline':False]
['text':'/','line_number':1112,'multiline':False]
['text':'/  Extract from date_time_duration numerical value of duration in  seconds','line_number':1113,'multiline':False]
['text':'/','line_number':1114,'multiline':False]
['text':'/','line_number':1116,'multiline':False]
['text':'/  Extract from date_time_duration numerical value of duration in the week number in the year','line_number':1117,'multiline':False]
['text':'/','line_number':1118,'multiline':False]
['text':'/','line_number':1120,'multiline':False]
['text':'/  Extract from date_time_duration numerical value of duration in  The week number within current month','line_number':1121,'multiline':False]
['text':'/','line_number':1122,'multiline':False]
['text':'/','line_number':1124,'multiline':False]
['text':'/  Extract from date_time_duration numerical value of duration in the first day of week','line_number':1125,'multiline':False]
['text':'/','line_number':1126,'multiline':False]
['text':'/ @}','line_number':1132,'multiline':False]
['text':' locale','line_number':1135,'multiline':False]
['text':' boost','line_number':1136,'multiline':False]
['text':'/','line_number':1144,'multiline':False]
['text':'/ \example calendar.cpp','line_number':1145,'multiline':False]
['text':'/','line_number':1146,'multiline':False]
['text':'/ Example of using date_time functions for generating calendar for current year.','line_number':1147,'multiline':False]
['text':'/','line_number':1148,'multiline':False]
['text':' vim: tabstop=4 expandtab shiftwidth=4 softtabstop=4','line_number':1150,'multiline':False]
