['text':'','line_number':1,'multiline':False]
['text':'  Copyright (c) 2010 Artyom Beilis (Tonkikh)','line_number':2,'multiline':False]
['text':'','line_number':3,'multiline':False]
['text':'  Distributed under the Boost Software License, Version 1.0. (See','line_number':4,'multiline':False]
['text':'  accompanying file LICENSE_1_0.txt or copy at','line_number':5,'multiline':False]
['text':'  http://www.boost.org/LICENSE_1_0.txt)','line_number':6,'multiline':False]
['text':'','line_number':7,'multiline':False]
['text':'/','line_number':13,'multiline':False]
['text':'/ \brief a smart pointer similar to std::auto_ptr but it is non-copyable and the','line_number':14,'multiline':False]
['text':'/ underlying object has the same constness as the pointer itself (unlike an ordinary pointer).','line_number':15,'multiline':False]
['text':'/','line_number':16,'multiline':False]
['text':' non copyable ','line_number':19,'multiline':False]
['text':' non assignable','line_number':20,'multiline':False]
['text':'/','line_number':22,'multiline':False]
['text':'/ Create new empty pointer','line_number':23,'multiline':False]
['text':'/','line_number':24,'multiline':False]
['text':'/','line_number':26,'multiline':False]
['text':'/ Create a pointer that holds \a v, ownership is transferred to smart pointer','line_number':27,'multiline':False]
['text':'/','line_number':28,'multiline':False]
['text':'/','line_number':31,'multiline':False]
['text':'/ Destroy smart pointer and the object it owns.','line_number':32,'multiline':False]
['text':'/','line_number':33,'multiline':False]
['text':'/','line_number':39,'multiline':False]
['text':'/ Get a const pointer to the object','line_number':40,'multiline':False]
['text':'/','line_number':41,'multiline':False]
['text':'/','line_number':43,'multiline':False]
['text':'/ Get a mutable pointer to the object ','line_number':44,'multiline':False]
['text':'/','line_number':45,'multiline':False]
['text':'/ ','line_number':48,'multiline':False]
['text':'/ Get a const reference to the object','line_number':49,'multiline':False]
['text':'/','line_number':50,'multiline':False]
['text':'/ ','line_number':52,'multiline':False]
['text':'/ Get a mutable reference to the object','line_number':53,'multiline':False]
['text':'/','line_number':54,'multiline':False]
['text':'/','line_number':56,'multiline':False]
['text':'/ Get a const pointer to the object','line_number':57,'multiline':False]
['text':'/','line_number':58,'multiline':False]
['text':'/','line_number':60,'multiline':False]
['text':'/ Get a mutable pointer to the object ','line_number':61,'multiline':False]
['text':'/','line_number':62,'multiline':False]
['text':'/','line_number':65,'multiline':False]
['text':'/ Transfer an ownership on the pointer to user','line_number':66,'multiline':False]
['text':'/','line_number':67,'multiline':False]
['text':'/','line_number':70,'multiline':False]
['text':'/ Set new value to pointer, previous object is destroyed, ownership on new object is transferred','line_number':71,'multiline':False]
['text':'/','line_number':72,'multiline':False]
['text':'/ Swap two pointers','line_number':78,'multiline':False]
['text':' locale','line_number':89,'multiline':False]
['text':' boost','line_number':90,'multiline':False]
['text':' vim: tabstop=4 expandtab shiftwidth=4 softtabstop=4','line_number':93,'multiline':False]
