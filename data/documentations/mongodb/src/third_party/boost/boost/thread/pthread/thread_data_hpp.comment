['text':' Distributed under the Boost Software License, Version 1.0. (See','line_number':3,'multiline':False]
['text':' accompanying file LICENSE_1_0.txt or copy at','line_number':4,'multiline':False]
['text':' http://www.boost.org/LICENSE_1_0.txt)','line_number':5,'multiline':False]
['text':' (C) Copyright 2007 Anthony Williams','line_number':6,'multiline':False]
['text':' (C) Copyright 2011-2012 Vicente J. Botet Escriba','line_number':7,'multiline':False]
['text':' stack','line_number':52,'multiline':False]
['text':'#if defined BOOST_THREAD_PROVIDES_INTERRUPTIONS','line_number':125,'multiline':False]
['text':' These data must be at the end so that the access to the other fields doesn't change','line_number':126,'multiline':False]
['text':' when BOOST_THREAD_PROVIDES_INTERRUPTIONS is defined.','line_number':127,'multiline':False]
['text':' Another option is to have them always','line_number':128,'multiline':False]
['text':'#endif','line_number':131,'multiline':False]
['text':', hidden_allocator<std::pair<condition_variable*, mutex*> >','line_number':133,'multiline':False]
['text':'#ifndef BOOST_NO_EXCEPTIONS','line_number':137,'multiline':False]
['text':'#endif','line_number':140,'multiline':False]
['text':'#if defined BOOST_THREAD_PROVIDES_INTERRUPTIONS','line_number':141,'multiline':False]
['text':' These data must be at the end so that the access to the other fields doesn't change','line_number':142,'multiline':False]
['text':' when BOOST_THREAD_PROVIDES_INTERRUPTIONS is defined.','line_number':143,'multiline':False]
['text':' Another option is to have them always','line_number':144,'multiline':False]
['text':'#endif','line_number':147,'multiline':False]
['text':'#if defined BOOST_THREAD_PROVIDES_INTERRUPTIONS','line_number':152,'multiline':False]
['text':'#endif','line_number':155,'multiline':False]
['text':'#ifndef BOOST_NO_EXCEPTIONS','line_number':157,'multiline':False]
['text':'#endif','line_number':159,'multiline':False]
['text':'#if defined BOOST_THREAD_PROVIDES_INTERRUPTIONS','line_number':160,'multiline':False]
['text':'#endif','line_number':163,'multiline':False]
['text':'#ifndef BOOST_NO_EXCEPTIONS','line_number':175,'multiline':False]
['text':'#endif','line_number':180,'multiline':False]
['text':' BOOST_NO_EXCEPTIONS protected','line_number':199,'multiline':False]
['text':'/ Workaround of DECCXX issue of incorrect template substitution','line_number':263,'multiline':False]
['text':' Use pthread_delay_np or nanosleep when available','line_number':307,'multiline':False]
['text':' because they do not provide an interruption point.','line_number':308,'multiline':False]
['text':'/ Workaround of DECCXX issue of incorrect template substitution','line_number':317,'multiline':False]
['text':' BOOST_THREAD_SLEEP_FOR_IS_STEADY','line_number':366,'multiline':False]
['text':' When pthread_delay_np and nanosleep are not available,','line_number':367,'multiline':False]
['text':' fall back to using the interruptible sleep functions.','line_number':368,'multiline':False]
['text':'/ Workaround of DECCXX issue of incorrect template substitution','line_number':372,'multiline':False]
['text':' BOOST_THREAD_SLEEP_FOR_IS_STEADY','line_number':401,'multiline':False]
['text':' no_interruption_point','line_number':402,'multiline':False]
['text':' this_thread','line_number':403,'multiline':False]
