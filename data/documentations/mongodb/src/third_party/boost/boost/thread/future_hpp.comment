['text':'  (C) Copyright 2008-10 Anthony Williams','line_number':1,'multiline':False]
['text':'  (C) Copyright 2011-2015 Vicente J. Botet Escriba','line_number':2,'multiline':False]
['text':'','line_number':3,'multiline':False]
['text':'  Distributed under the Boost Software License, Version 1.0. (See','line_number':4,'multiline':False]
['text':'  accompanying file LICENSE_1_0.txt or copy at','line_number':5,'multiline':False]
['text':'  http://www.boost.org/LICENSE_1_0.txt)','line_number':6,'multiline':False]
['text':' boost::thread::future requires exception handling','line_number':13,'multiline':False]
['text':' due to boost::exception::exception_ptr dependency','line_number':14,'multiline':False]
['text':'#define BOOST_THREAD_CONTINUATION_SYNC','line_number':16,'multiline':False]
['text':' This type should be only included conditionally if interruptions are allowed, but is included to maintain the same layout.','line_number':156,'multiline':False]
['text':' This declaration should be only included conditionally, but is included to maintain the same layout.','line_number':170,'multiline':False]
['text':' This declaration should be only included conditionally, but is included to maintain the same layout.','line_number':174,'multiline':False]
['text':' this inline definition results in ODR. See https://github.com/boostorg/thread/issues/193','line_number':282,'multiline':False]
['text':' to avoid it, we define the function on the derived templates using the macro BOOST_THREAD_DO_CONTINUATION','line_number':283,'multiline':False]
['text':'              unique_lock<boost::mutex> lk(this->mutex);','line_number':478,'multiline':False]
['text':'              if (has_value(lk))','line_number':479,'multiline':False]
['text':'              {','line_number':480,'multiline':False]
['text':'                  throw_exception(promise_already_satisfied());','line_number':481,'multiline':False]
['text':'              }','line_number':482,'multiline':False]
['text':'              exception=e;','line_number':483,'multiline':False]
['text':'              this->is_constructed = true;','line_number':484,'multiline':False]
['text':' Used to create stand-alone futures','line_number':555,'multiline':False]
['text':' locating this definition on the template avoid the ODR issue. See https://github.com/boostorg/thread/issues/193','line_number':590,'multiline':False]
['text':'              unique_lock<boost::mutex> lk(this->mutex);','line_number':712,'multiline':False]
['text':'              if (this->has_value(lk))','line_number':713,'multiline':False]
['text':'              {','line_number':714,'multiline':False]
['text':'                  throw_exception(promise_already_satisfied());','line_number':715,'multiline':False]
['text':'              }','line_number':716,'multiline':False]
['text':'#if defined BOOST_THREAD_FUTURE_USES_OPTIONAL','line_number':717,'multiline':False]
['text':'              result = result_;','line_number':718,'multiline':False]
['text':'#else','line_number':719,'multiline':False]
['text':'              result.reset(new T(result_));','line_number':720,'multiline':False]
['text':'#endif','line_number':721,'multiline':False]
['text':'','line_number':722,'multiline':False]
['text':'              this->is_constructed = true;','line_number':723,'multiline':False]
['text':'              unique_lock<boost::mutex> lk(this->mutex);','line_number':729,'multiline':False]
['text':'              if (this->has_value(lk))','line_number':730,'multiline':False]
['text':'                  throw_exception(promise_already_satisfied());','line_number':731,'multiline':False]
['text':'','line_number':732,'multiline':False]
['text':'#if ! defined  BOOST_NO_CXX11_RVALUE_REFERENCES','line_number':733,'multiline':False]
['text':'#if defined BOOST_THREAD_FUTURE_USES_OPTIONAL','line_number':734,'multiline':False]
['text':'                result = boost::move(result_);','line_number':735,'multiline':False]
['text':'#else','line_number':736,'multiline':False]
['text':'                result.reset(new T(boost::move(result_)));','line_number':737,'multiline':False]
['text':'#endif','line_number':738,'multiline':False]
['text':'#else','line_number':739,'multiline':False]
['text':'#if defined BOOST_THREAD_FUTURE_USES_OPTIONAL','line_number':740,'multiline':False]
['text':'                result = boost::move(result_);','line_number':741,'multiline':False]
['text':'#else','line_number':742,'multiline':False]
['text':'                result.reset(new T(static_cast<rvalue_source_type>(result_)));','line_number':743,'multiline':False]
['text':'#endif','line_number':744,'multiline':False]
['text':'#endif','line_number':745,'multiline':False]
['text':'              this->is_constructed = true;','line_number':746,'multiline':False]
['text':' locating this definition on the template avoid the ODR issue. See https://github.com/boostorg/thread/issues/193','line_number':774,'multiline':False]
['text':'              unique_lock<boost::mutex> lk(this->mutex);','line_number':825,'multiline':False]
['text':'              if (this->has_value(lk))','line_number':826,'multiline':False]
['text':'                  throw_exception(promise_already_satisfied());','line_number':827,'multiline':False]
['text':'              result= &result_;','line_number':828,'multiline':False]
['text':'              this->is_constructed = true;','line_number':829,'multiline':False]
['text':' locating this definition on the template avoid the ODR issue. See https://github.com/boostorg/thread/issues/193','line_number':852,'multiline':False]
['text':'              unique_lock<boost::mutex> lk(this->mutex);','line_number':898,'multiline':False]
['text':'              if (this->has_value(lk))','line_number':899,'multiline':False]
['text':'              {','line_number':900,'multiline':False]
['text':'                  throw_exception(promise_already_satisfied());','line_number':901,'multiline':False]
['text':'              }','line_number':902,'multiline':False]
['text':'              this->is_constructed = true;','line_number':903,'multiline':False]
['text':'///////////////////////','line_number':911,'multiline':False]
['text':'/ future_async_shared_state_base','line_number':912,'multiline':False]
['text':'///////////////////////','line_number':913,'multiline':False]
['text':'///////////////////////','line_number':959,'multiline':False]
['text':'/ future_async_shared_state','line_number':960,'multiline':False]
['text':'///////////////////////','line_number':961,'multiline':False]
['text':'////////////////////////','line_number':1042,'multiline':False]
['text':'/ future_deferred_shared_state','line_number':1043,'multiline':False]
['text':'////////////////////////','line_number':1044,'multiline':False]
['text':'    template<typename Iterator>','line_number':1248,'multiline':False]
['text':'    typename boost::disable_if<is_future_type<Iterator>,Iterator>::type wait_for_any(Iterator begin,Iterator end)','line_number':1249,'multiline':False]
['text':'    {','line_number':1250,'multiline':False]
['text':'        if(begin==end)','line_number':1251,'multiline':False]
['text':'            return end;','line_number':1252,'multiline':False]
['text':'','line_number':1253,'multiline':False]
['text':'        detail::future_waiter waiter;','line_number':1254,'multiline':False]
['text':'        for(Iterator current=begin;current!=end;++current)','line_number':1255,'multiline':False]
['text':'        {','line_number':1256,'multiline':False]
['text':'            waiter.add(*current);','line_number':1257,'multiline':False]
['text':'        }','line_number':1258,'multiline':False]
['text':'        return boost::next(begin,waiter.wait());','line_number':1259,'multiline':False]
['text':'    }','line_number':1260,'multiline':False]
['text':' !defined(BOOST_NO_CXX11_VARIADIC_TEMPLATES)','line_number':1313,'multiline':False]
['text':'/ Common implementation for all the futures independently of the return type','line_number':1323,'multiline':False]
['text':'/ Common implementation for future and shared_future.','line_number':1328,'multiline':False]
['text':'BOOST_CONSTEXPR','line_number':1338,'multiline':False]
['text':'BOOST_CONSTEXPR','line_number':1357,'multiline':False]
['text':' functions to check state, and wait for ready','line_number':1381,'multiline':False]
['text':' detail','line_number':1524,'multiline':False]
['text':' _MSC_VER == 1400 on MSVC 2005','line_number':1529,'multiline':False]
['text':' #if (!defined _MSC_VER || _MSC_VER >= 1400)','line_number':1537,'multiline':False]
['text':' BOOST_THREAD_PROVIDES_FUTURE_WHEN_ALL_WHEN_ANY','line_number':1619,'multiline':False]
['text':'friend inline BOOST_THREAD_FUTURE<csbl::tuple<> > when_all();','line_number':1689,'multiline':False]
['text':'friend inline BOOST_THREAD_FUTURE<csbl::tuple<> > when_any();','line_number':1703,'multiline':False]
['text':' BOOST_THREAD_PROVIDES_FUTURE_WHEN_ALL_WHEN_ANY','line_number':1710,'multiline':False]
['text':' todo check if this works in windows','line_number':1712,'multiline':False]
['text':' EXTENSION','line_number':1736,'multiline':False]
['text':'BOOST_CONSTEXPR','line_number':1739,'multiline':False]
['text':' EXTENSION','line_number':1751,'multiline':False]
['text':' todo this function must be private and friendship provided to the internal users.','line_number':1774,'multiline':False]
['text':' todo this function must be private and friendship provided to the internal users.','line_number':1779,'multiline':False]
['text':' retrieving the value','line_number':1790,'multiline':False]
['text':' EXTENSION','line_number':1837,'multiline':False]
['text':' EXTENSION','line_number':1863,'multiline':False]
['text':' EXTENSION','line_number':1866,'multiline':False]
['text':' EXTENSION','line_number':1870,'multiline':False]
['text':' EXTENSION','line_number':1875,'multiline':False]
['text':' EXTENSION','line_number':1878,'multiline':False]
['text':' BOOST_THREAD_PROVIDES_FUTURE_WHEN_ALL_WHEN_ANY','line_number':1977,'multiline':False]
['text':' todo check if this works in windows','line_number':1980,'multiline':False]
['text':' EXTENSION','line_number':2004,'multiline':False]
['text':'BOOST_CONSTEXPR','line_number':2007,'multiline':False]
['text':' todo this function must be private and friendship provided to the internal users.','line_number':2035,'multiline':False]
['text':' todo this function must be private and friendship provided to the internal users.','line_number':2040,'multiline':False]
['text':' retrieving the value','line_number':2051,'multiline':False]
['text':' EXTENSION','line_number':2068,'multiline':False]
['text':' EXTENSION','line_number':2087,'multiline':False]
['text':' EXTENSION','line_number':2110,'multiline':False]
['text':' EXTENSION','line_number':2113,'multiline':False]
['text':' EXTENSION','line_number':2117,'multiline':False]
['text':' EXTENSION','line_number':2124,'multiline':False]
['text':' todo check if this works in windows','line_number':2157,'multiline':False]
['text':' EXTENSION','line_number':2167,'multiline':False]
['text':'BOOST_CONSTEXPR','line_number':2177,'multiline':False]
['text':' retrieving the value','line_number':2219,'multiline':False]
['text':' EXTENSION','line_number':2231,'multiline':False]
['text':' EXTENSION','line_number':2245,'multiline':False]
['text':' EXTENSION','line_number':2248,'multiline':False]
['text':' EXTENSION','line_number':2252,'multiline':False]
['text':' Assignment','line_number':2322,'multiline':False]
['text':' Result retrieval','line_number':2356,'multiline':False]
['text':' setting the result with deferred notification','line_number':2496,'multiline':False]
['text':' Assignment','line_number':2613,'multiline':False]
['text':' Result retrieval','line_number':2635,'multiline':False]
['text':' setting the result with deferred notification','line_number':2699,'multiline':False]
['text':' Assignment','line_number':2794,'multiline':False]
['text':' we need to release the future as shared_ptr doesn't implements move semantics','line_number':2798,'multiline':False]
['text':' Result retrieval','line_number':2818,'multiline':False]
['text':'return BOOST_THREAD_MAKE_RV_REF(BOOST_THREAD_FUTURE<void>(future_));','line_number':2832,'multiline':False]
['text':' setting the result with deferred notification','line_number':2885,'multiline':False]
['text':' todo The packaged_task::reset must be as if an assignemnt froma new packaged_task with the same function','line_number':2973,'multiline':False]
['text':' the reset function is an optimization that avoids reallocating a new task.','line_number':2974,'multiline':False]
['text':' construction and destruction','line_number':3534,'multiline':False]
['text':' BOOST_THREAD_RVALUE_REFERENCES_DONT_MATCH_FUNCTION_PTR','line_number':3646,'multiline':False]
['text':' ! defined BOOST_NO_CXX11_RVALUE_REFERENCES','line_number':3670,'multiline':False]
['text':'BOOST_NO_CXX11_RVALUE_REFERENCES','line_number':3710,'multiline':False]
['text':' BOOST_THREAD_PROVIDES_FUTURE_CTOR_ALLOCATORS','line_number':3711,'multiline':False]
['text':' assignment','line_number':3719,'multiline':False]
['text':' As if *this = packaged_task(task->callable());','line_number':3749,'multiline':False]
['text':' result retrieval','line_number':3763,'multiline':False]
['text':' execution','line_number':3775,'multiline':False]
['text':'//////////////////////////////','line_number':3834,'multiline':False]
['text':' make_future_deferred_shared_state','line_number':3835,'multiline':False]
['text':'//////////////////////////////','line_number':3836,'multiline':False]
['text':'//////////////////////////////','line_number':3845,'multiline':False]
['text':' make_future_async_shared_state','line_number':3846,'multiline':False]
['text':'//////////////////////////////','line_number':3847,'multiline':False]
['text':'//////////////////////////////','line_number':3858,'multiline':False]
['text':' template <class F, class... ArgTypes>','line_number':3859,'multiline':False]
['text':' future<R> async(launch policy, F&&, ArgTypes&&...);','line_number':3860,'multiline':False]
['text':'//////////////////////////////','line_number':3861,'multiline':False]
['text':'BOOST_THREAD_FUTURE<R> ret;','line_number':3889,'multiline':False]
['text':'return ::boost::move(ret);','line_number':3890,'multiline':False]
['text':' defined(BOOST_THREAD_PROVIDES_VARIADIC_THREAD)','line_number':3894,'multiline':False]
['text':'BOOST_THREAD_FUTURE<R> ret;','line_number':3913,'multiline':False]
['text':'return ::boost::move(ret);','line_number':3914,'multiline':False]
['text':'BOOST_THREAD_FUTURE<R> ret;','line_number':3917,'multiline':False]
['text':'return ::boost::move(ret);','line_number':3918,'multiline':False]
['text':' defined(BOOST_THREAD_RVALUE_REFERENCES_DONT_MATCH_FUNCTION_PTR)','line_number':3922,'multiline':False]
['text':'BOOST_THREAD_FUTURE<R> ret;','line_number':3950,'multiline':False]
['text':'return ::boost::move(ret);','line_number':3951,'multiline':False]
['text':' defined(BOOST_THREAD_PROVIDES_VARIADIC_THREAD)','line_number':3955,'multiline':False]
['text':' defined BOOST_THREAD_PROVIDES_SIGNATURE_PACKAGED_TASK','line_number':3963,'multiline':False]
['text':' defined BOOST_THREAD_PROVIDES_SIGNATURE_PACKAGED_TASK','line_number':3965,'multiline':False]
['text':'BOOST_THREAD_FUTURE<R> ret;','line_number':3975,'multiline':False]
['text':'return ::boost::move(ret);','line_number':3976,'multiline':False]
['text':'          return boost::detail::make_future_deferred_shared_state<Rp>(','line_number':3977,'multiline':False]
['text':'              BF(','line_number':3978,'multiline':False]
['text':'                  thread_detail::decay_copy(boost::forward<F>(f))','line_number':3979,'multiline':False]
['text':'              )','line_number':3980,'multiline':False]
['text':'          );','line_number':3981,'multiline':False]
['text':'BOOST_THREAD_FUTURE<R> ret;','line_number':3984,'multiline':False]
['text':'return ::boost::move(ret);','line_number':3985,'multiline':False]
['text':' defined(BOOST_THREAD_PROVIDES_VARIADIC_THREAD)','line_number':3988,'multiline':False]
['text':'///////////////////////','line_number':3993,'multiline':False]
['text':'/ shared_state_nullary_task','line_number':3994,'multiline':False]
['text':'///////////////////////','line_number':3995,'multiline':False]
['text':'BOOST_NOEXCEPT','line_number':4011,'multiline':False]
['text':'BOOST_NOEXCEPT','line_number':4014,'multiline':False]
['text':' move','line_number':4022,'multiline':False]
['text':'BOOST_NOEXCEPT','line_number':4023,'multiline':False]
['text':'BOOST_NOEXCEPT','line_number':4028,'multiline':False]
['text':'BOOST_NOEXCEPT','line_number':4064,'multiline':False]
['text':'BOOST_NOEXCEPT','line_number':4067,'multiline':False]
['text':' move','line_number':4075,'multiline':False]
['text':'///////////////////////','line_number':4105,'multiline':False]
['text':'/ future_executor_shared_state_base','line_number':4106,'multiline':False]
['text':'///////////////////////','line_number':4107,'multiline':False]
['text':'//////////////////////////////','line_number':4129,'multiline':False]
['text':' make_future_executor_shared_state','line_number':4130,'multiline':False]
['text':'//////////////////////////////','line_number':4131,'multiline':False]
['text':' detail','line_number':4141,'multiline':False]
['text':'//////////////////////////////','line_number':4143,'multiline':False]
['text':' template <class Executor, class F, class... ArgTypes>','line_number':4144,'multiline':False]
['text':' future<R> async(Executor& ex, F&&, ArgTypes&&...);','line_number':4145,'multiline':False]
['text':'//////////////////////////////','line_number':4146,'multiline':False]
['text':'#if ! defined(BOOST_NO_CXX11_VARIADIC_TEMPLATES)','line_number':4148,'multiline':False]
['text':' defined BOOST_THREAD_RVALUE_REFERENCES_DONT_MATCH_FUNCTION_PTR','line_number':4167,'multiline':False]
['text':' ! defined(BOOST_NO_CXX11_VARIADIC_TEMPLATES)','line_number':4185,'multiline':False]
['text':' defined BOOST_THREAD_RVALUE_REFERENCES_DONT_MATCH_FUNCTION_PTR','line_number':4216,'multiline':False]
['text':'! defined(BOOST_NO_CXX11_VARIADIC_TEMPLATES)','line_number':4264,'multiline':False]
['text':'//////////////////////////////','line_number':4267,'multiline':False]
['text':' template <class F, class... ArgTypes>','line_number':4268,'multiline':False]
['text':' future<R> async(F&&, ArgTypes&&...);','line_number':4269,'multiline':False]
['text':'//////////////////////////////','line_number':4270,'multiline':False]
['text':'//////////////////////////////','line_number':4304,'multiline':False]
['text':' make_future deprecated','line_number':4305,'multiline':False]
['text':'//////////////////////////////','line_number':4306,'multiline':False]
['text':'//////////////////////////////','line_number':4323,'multiline':False]
['text':' make_ready_future','line_number':4324,'multiline':False]
['text':'//////////////////////////////','line_number':4325,'multiline':False]
['text':' explicit overloads','line_number':4371,'multiline':False]
['text':' variadic overload','line_number':4388,'multiline':False]
['text':'//////////////////////////////','line_number':4456,'multiline':False]
['text':' make_shared_future deprecated','line_number':4457,'multiline':False]
['text':'//////////////////////////////','line_number':4458,'multiline':False]
['text':'//////////////////////////////','line_number':4472,'multiline':False]
['text':' detail::future_async_continuation_shared_state','line_number':4473,'multiline':False]
['text':'//////////////////////////////','line_number':4474,'multiline':False]
['text':'////////////////////','line_number':4479,'multiline':False]
['text':' detail::continuation_shared_state','line_number':4480,'multiline':False]
['text':'////////////////////','line_number':4481,'multiline':False]
['text':' make sure parent is really cleared to prevent memory "leaks"','line_number':4506,'multiline':False]
['text':' neither continuation nor parent are protected by the lock - call() must only','line_number':4514,'multiline':False]
['text':' be called once, and no one else must modify it.','line_number':4515,'multiline':False]
['text':' make sure parent is really cleared to prevent memory "leaks"','line_number':4518,'multiline':False]
['text':' make sure parent is really cleared to prevent memory "leaks"','line_number':4527,'multiline':False]
['text':' make sure parent is really cleared to prevent memory "leaks"','line_number':4568,'multiline':False]
['text':' neither continuation nor parent are protected by the lock - call() must only','line_number':4576,'multiline':False]
['text':' be called once, and no one else must modify it.','line_number':4577,'multiline':False]
['text':' make sure parent is really cleared to prevent memory "leaks"','line_number':4580,'multiline':False]
['text':' make sure parent is really cleared to prevent memory "leaks"','line_number':4587,'multiline':False]
['text':'///////////////////////','line_number':4601,'multiline':False]
['text':'/ future_async_continuation_shared_state','line_number':4602,'multiline':False]
['text':'///////////////////////','line_number':4603,'multiline':False]
['text':'///////////////////////','line_number':4624,'multiline':False]
['text':'/ future_sync_continuation_shared_state','line_number':4625,'multiline':False]
['text':'///////////////////////','line_number':4626,'multiline':False]
['text':'///////////////////////','line_number':4643,'multiline':False]
['text':'/ future_executor_continuation_shared_state','line_number':4644,'multiline':False]
['text':'///////////////////////','line_number':4645,'multiline':False]
['text':'BOOST_NOEXCEPT','line_number':4654,'multiline':False]
['text':'BOOST_NOEXCEPT','line_number':4657,'multiline':False]
['text':' move','line_number':4664,'multiline':False]
['text':'///////////////////////','line_number':4718,'multiline':False]
['text':'/ shared_future_async_continuation_shared_state','line_number':4719,'multiline':False]
['text':'///////////////////////','line_number':4720,'multiline':False]
['text':'///////////////////////','line_number':4743,'multiline':False]
['text':'/ shared_future_async_continuation_shared_state','line_number':4744,'multiline':False]
['text':'///////////////////////','line_number':4745,'multiline':False]
['text':'///////////////////////','line_number':4764,'multiline':False]
['text':'/ shared_future_executor_continuation_shared_state','line_number':4765,'multiline':False]
['text':'///////////////////////','line_number':4766,'multiline':False]
['text':'////////////////////////','line_number':4797,'multiline':False]
['text':'/ future_deferred_continuation_shared_state','line_number':4798,'multiline':False]
['text':'////////////////////////','line_number':4799,'multiline':False]
['text':'////////////////////////','line_number':4819,'multiline':False]
['text':'/ shared_future_deferred_continuation_shared_state','line_number':4820,'multiline':False]
['text':'////////////////////////','line_number':4821,'multiline':False]
['text':'//////////////////////////////','line_number':4842,'multiline':False]
['text':' make_future_deferred_continuation_shared_state','line_number':4843,'multiline':False]
['text':'//////////////////////////////','line_number':4844,'multiline':False]
['text':'//////////////////////////////','line_number':4857,'multiline':False]
['text':' make_future_async_continuation_shared_state','line_number':4858,'multiline':False]
['text':'//////////////////////////////','line_number':4859,'multiline':False]
['text':'//////////////////////////////','line_number':4872,'multiline':False]
['text':' make_future_sync_continuation_shared_state','line_number':4873,'multiline':False]
['text':'//////////////////////////////','line_number':4874,'multiline':False]
['text':'//////////////////////////////','line_number':4888,'multiline':False]
['text':' make_future_executor_continuation_shared_state','line_number':4889,'multiline':False]
['text':'//////////////////////////////','line_number':4890,'multiline':False]
['text':'//////////////////////////////','line_number':4907,'multiline':False]
['text':' make_shared_future_deferred_continuation_shared_state','line_number':4908,'multiline':False]
['text':'//////////////////////////////','line_number':4909,'multiline':False]
['text':'//////////////////////////////','line_number':4922,'multiline':False]
['text':' make_shared_future_async_continuation_shared_state','line_number':4923,'multiline':False]
['text':'//////////////////////////////','line_number':4924,'multiline':False]
['text':'//////////////////////////////','line_number':4937,'multiline':False]
['text':' make_shared_future_sync_continuation_shared_state','line_number':4938,'multiline':False]
['text':'//////////////////////////////','line_number':4939,'multiline':False]
['text':'//////////////////////////////','line_number':4952,'multiline':False]
['text':' make_shared_future_executor_continuation_shared_state','line_number':4953,'multiline':False]
['text':'//////////////////////////////','line_number':4954,'multiline':False]
['text':'//////////////////////////////','line_number':4971,'multiline':False]
['text':' template<typename F>','line_number':4972,'multiline':False]
['text':' auto future<R>::then(launch policy, F&& func) -> BOOST_THREAD_FUTURE<decltype(func(*this))>;','line_number':4973,'multiline':False]
['text':'//////////////////////////////','line_number':4974,'multiline':False]
['text':' keep state alive as we move ourself but hold the lock','line_number':4982,'multiline':False]
['text':'//////////////////////////////','line_number':5043,'multiline':False]
['text':' template<typename Ex, typename F>','line_number':5044,'multiline':False]
['text':' auto future<future<R2> >::then(Ex&, F&& func) -> BOOST_THREAD_FUTURE<decltype(func(*this))>;','line_number':5045,'multiline':False]
['text':'//////////////////////////////','line_number':5046,'multiline':False]
['text':' keep state alive as we move ourself but hold the lock','line_number':5054,'multiline':False]
['text':'//////////////////////////////','line_number':5063,'multiline':False]
['text':' template<typename F>','line_number':5064,'multiline':False]
['text':' auto future<future<R2> >::then(F&& func) -> BOOST_THREAD_FUTURE<decltype(func(*this))>;','line_number':5065,'multiline':False]
['text':'//////////////////////////////','line_number':5066,'multiline':False]
['text':' keep state alive as we move ourself but hold the lock','line_number':5078,'multiline':False]
['text':'//////////////////////////////','line_number':5096,'multiline':False]
['text':' template<typename F>','line_number':5097,'multiline':False]
['text':' auto future<future<R2> >::then(launch, F&& func) -> BOOST_THREAD_FUTURE<decltype(func(*this))>;','line_number':5098,'multiline':False]
['text':'//////////////////////////////','line_number':5099,'multiline':False]
['text':' keep state alive as we move ourself but hold the lock','line_number':5108,'multiline':False]
['text':'//////////////////////////////','line_number':5170,'multiline':False]
['text':' template<typename Ex, typename F>','line_number':5171,'multiline':False]
['text':' auto future<future<R2> >::then(Ex&, F&& func) -> BOOST_THREAD_FUTURE<decltype(func(*this))>;','line_number':5172,'multiline':False]
['text':'//////////////////////////////','line_number':5173,'multiline':False]
['text':' keep state alive as we move ourself but hold the lock','line_number':5182,'multiline':False]
['text':'//////////////////////////////','line_number':5192,'multiline':False]
['text':' template<typename F>','line_number':5193,'multiline':False]
['text':' auto future<future<R2> >::then(F&& func) -> BOOST_THREAD_FUTURE<decltype(func(*this))>;','line_number':5194,'multiline':False]
['text':'//////////////////////////////','line_number':5195,'multiline':False]
['text':' keep state alive as we move ourself but hold the lock','line_number':5208,'multiline':False]
['text':'//////////////////////////////','line_number':5226,'multiline':False]
['text':' template<typename F>','line_number':5227,'multiline':False]
['text':' auto shared_future<R>::then(launch policy, F&& func) -> BOOST_THREAD_FUTURE<decltype(func(*this))>;','line_number':5228,'multiline':False]
['text':'//////////////////////////////','line_number':5229,'multiline':False]
['text':'//////////////////////////////','line_number':5295,'multiline':False]
['text':' template<typename Ex, typename F>','line_number':5296,'multiline':False]
['text':' auto shared_future<R>::then(Ex&, F&& func) -> BOOST_THREAD_FUTURE<decltype(func(*this))>;','line_number':5297,'multiline':False]
['text':'//////////////////////////////','line_number':5298,'multiline':False]
['text':'//////////////////////////////','line_number':5314,'multiline':False]
['text':' template<typename F>','line_number':5315,'multiline':False]
['text':' auto shared_future<R>::then(F&& func) -> BOOST_THREAD_FUTURE<decltype(func(*this))>;','line_number':5316,'multiline':False]
['text':'//////////////////////////////','line_number':5317,'multiline':False]
['text':'//////////////////////////////','line_number':5372,'multiline':False]
['text':' future<R> future<R>::fallback_to(R&& v);','line_number':5373,'multiline':False]
['text':'//////////////////////////////','line_number':5374,'multiline':False]
['text':'///////////////////////','line_number':5395,'multiline':False]
['text':'/ future_unwrap_shared_state','line_number':5396,'multiline':False]
['text':'///////////////////////','line_number':5397,'multiline':False]
['text':' assert(wrapped.is_ready());','line_number':5412,'multiline':False]
['text':' assert(unwrapped.is_ready());','line_number':5429,'multiline':False]
['text':' assert(wrapped.is_ready());','line_number':5452,'multiline':False]
['text':' assert(unwrapped.is_ready());','line_number':5469,'multiline':False]
['text':' keep state alive as we move ourself but hold the lock','line_number':5500,'multiline':False]
['text':'//////////////////////////////','line_number':5520,'multiline':False]
['text':' detail::future_async_when_all_shared_state','line_number':5521,'multiline':False]
['text':'//////////////////////////////','line_number':5522,'multiline':False]
['text':'first part of magic unpacker','line_number':5580,'multiline':False]
['text':'second part of magic unpacker','line_number':5583,'multiline':False]
['text':'//////////////////////////////','line_number':5590,'multiline':False]
['text':' detail::future_async_when_any_shared_state','line_number':5591,'multiline':False]
['text':'//////////////////////////////','line_number':5592,'multiline':False]
['text':'first part of magic unpacker','line_number':5653,'multiline':False]
['text':'second part of magic unpacker','line_number':5658,'multiline':False]
['text':' TODO make use of apply(that->tup_, boost::detail::wait_for_all_fctor());','line_number':5706,'multiline':False]
['text':' TODO make use of apply(that->tup_, wait_for_any_fctr);','line_number':5779,'multiline':False]
['text':' BOOST_THREAD_PROVIDES_FUTURE_WHEN_ALL_WHEN_ANY','line_number':5894,'multiline':False]
['text':' BOOST_NO_EXCEPTIONS','line_number':5897,'multiline':False]
['text':' header','line_number':5898,'multiline':False]
