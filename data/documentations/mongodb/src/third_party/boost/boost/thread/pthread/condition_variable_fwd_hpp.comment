['text':' Distributed under the Boost Software License, Version 1.0. (See','line_number':3,'multiline':False]
['text':' accompanying file LICENSE_1_0.txt or copy at','line_number':4,'multiline':False]
['text':' http://www.boost.org/LICENSE_1_0.txt)','line_number':5,'multiline':False]
['text':' (C) Copyright 2007-8 Anthony Williams','line_number':6,'multiline':False]
['text':' (C) Copyright 2011-2012 Vicente J. Botet Escriba','line_number':7,'multiline':False]
['text':'#if defined BOOST_THREAD_PROVIDES_INTERRUPTIONS','line_number':39,'multiline':False]
['text':'#endif','line_number':41,'multiline':False]
['text':'private: // used by boost::thread::try_join_until','line_number':45,'multiline':False]
['text':'#if defined BOOST_THREAD_PROVIDES_INTERRUPTIONS','line_number':56,'multiline':False]
['text':' Even if it is not used, the internal_mutex exists (see','line_number':57,'multiline':False]
['text':' above) and must be initialized (etc) in case some','line_number':58,'multiline':False]
['text':' compilation units provide interruptions and others','line_number':59,'multiline':False]
['text':' don't.','line_number':60,'multiline':False]
['text':'#endif','line_number':66,'multiline':False]
['text':'#if defined BOOST_THREAD_PROVIDES_INTERRUPTIONS','line_number':70,'multiline':False]
['text':' ditto','line_number':71,'multiline':False]
['text':'#endif','line_number':73,'multiline':False]
['text':'#if defined BOOST_THREAD_PROVIDES_INTERRUPTIONS','line_number':79,'multiline':False]
['text':' ditto','line_number':80,'multiline':False]
['text':'#endif','line_number':82,'multiline':False]
['text':' The system time may jump while this function is waiting. To compensate for this and time','line_number':108,'multiline':False]
['text':' out near the correct time, we could call do_wait_until() in a loop with a short timeout','line_number':109,'multiline':False]
['text':' and recheck the time remaining each time through the loop. However, because we can't','line_number':110,'multiline':False]
['text':' check the predicate each time do_wait_until() completes, this introduces the possibility','line_number':111,'multiline':False]
['text':' of not exiting the function when a notification occurs, since do_wait_until() may report','line_number':112,'multiline':False]
['text':' that it timed out even though a notification was received. The best this function can do','line_number':113,'multiline':False]
['text':' is report correctly whether or not it reached the timeout time.','line_number':114,'multiline':False]
['text':' The system time may jump while this function is waiting. To compensate for this and time','line_number':145,'multiline':False]
['text':' out near the correct time, we could call do_wait_until() in a loop with a short timeout','line_number':146,'multiline':False]
['text':' and recheck the time remaining each time through the loop. However, because we can't','line_number':147,'multiline':False]
['text':' check the predicate each time do_wait_until() completes, this introduces the possibility','line_number':148,'multiline':False]
['text':' of not exiting the function when a notification occurs, since do_wait_until() may report','line_number':149,'multiline':False]
['text':' that it timed out even though a notification was received. The best this function can do','line_number':150,'multiline':False]
['text':' is report correctly whether or not it reached the timeout time.','line_number':151,'multiline':False]
['text':' The system time may jump while this function is waiting. To compensate for this','line_number':173,'multiline':False]
['text':' and time out near the correct time, we call do_wait_until() in a loop with a','line_number':174,'multiline':False]
['text':' short timeout and recheck the time remaining each time through the loop.','line_number':175,'multiline':False]
['text':' timeout occurred','line_number':177,'multiline':False]
['text':' timeout occurred','line_number':181,'multiline':False]
['text':' The system time may jump while this function is waiting. To compensate for this','line_number':214,'multiline':False]
['text':' and time out near the correct time, we call do_wait_until() in a loop with a','line_number':215,'multiline':False]
['text':' short timeout and recheck the time remaining each time through the loop.','line_number':216,'multiline':False]
['text':' timeout occurred','line_number':220,'multiline':False]
['text':' timeout occurred','line_number':229,'multiline':False]
['text':' The system time may jump while this function is waiting. To compensate for this and time','line_number':255,'multiline':False]
['text':' out near the correct time, we could call do_wait_until() in a loop with a short timeout','line_number':256,'multiline':False]
['text':' and recheck the time remaining each time through the loop. However, because we can't','line_number':257,'multiline':False]
['text':' check the predicate each time do_wait_until() completes, this introduces the possibility','line_number':258,'multiline':False]
['text':' of not exiting the function when a notification occurs, since do_wait_until() may report','line_number':259,'multiline':False]
['text':' that it timed out even though a notification was received. The best this function can do','line_number':260,'multiline':False]
['text':' is report correctly whether or not it reached the timeout time.','line_number':261,'multiline':False]
['text':' timeout occurred','line_number':288,'multiline':False]
['text':' The system time may jump while this function is waiting. To compensate for this','line_number':300,'multiline':False]
['text':' and time out near the correct time, we call do_wait_until() in a loop with a','line_number':301,'multiline':False]
['text':' short timeout and recheck the time remaining each time through the loop.','line_number':302,'multiline':False]
['text':' timeout occurred','line_number':307,'multiline':False]
