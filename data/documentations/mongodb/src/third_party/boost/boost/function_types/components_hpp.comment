['text':' (C) Copyright Tobias Schwinger','line_number':2,'multiline':False]
['text':'','line_number':3,'multiline':False]
['text':' Use modification and distribution are subject to the boost Software License,','line_number':4,'multiline':False]
['text':' Version 1.0. (See http://www.boost.org/LICENSE_1_0.txt).','line_number':5,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':7,'multiline':False]
['text':' - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -','line_number':64,'multiline':False]
['text':' - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -','line_number':98,'multiline':False]
['text':' We detect plain function types and function references as function ','line_number':129,'multiline':False]
['text':' pointers by recursive instantiation of components_impl. ','line_number':130,'multiline':False]
['text':' The third specialization of components_impl makes sure the recursion ','line_number':131,'multiline':False]
['text':' terminates (when adding pointers).','line_number':132,'multiline':False]
['text':' --> ','line_number':137,'multiline':True]
['text':' --> ','line_number':143,'multiline':True]
['text':' Retry the type with a member pointer attached to detect cv functions','line_number':147,'multiline':False]
['text':' This workaround removes the member pointer from the type to allow ','line_number':269,'multiline':False]
['text':' detection of member function pointers with BCC. ','line_number':270,'multiline':False]
['text':' --> ','line_number':275,'multiline':True]
['text':' BCC lets us test the cv-qualification of a function type by template ','line_number':279,'multiline':False]
['text':' partial specialization - so we use this bug feature to find out the ','line_number':280,'multiline':False]
['text':' member function's cv-qualification (unfortunately there are some ','line_number':281,'multiline':False]
['text':' invisible modifiers that impose some limitations on these types even if','line_number':282,'multiline':False]
['text':' we remove the qualifiers, So we cannot exploit the same bug to make the ','line_number':283,'multiline':False]
['text':' library work for cv-qualified function types).','line_number':284,'multiline':False]
['text':' For member function pointers we have to use a function template (partial','line_number':294,'multiline':False]
['text':' template specialization for a member pointer drops the cv qualification ','line_number':295,'multiline':False]
['text':' of the function type).','line_number':296,'multiline':False]
['text':' Associate bits with the CV codes above.','line_number':306,'multiline':False]
['text':' Metafunction to decode the cv code and apply it to a type.','line_number':319,'multiline':False]
['text':' We add a pointer, because otherwise cv-qualifiers won't stick (another bug).','line_number':320,'multiline':False]
['text':' The class type transformation comes after adding cv-qualifiers. We have','line_number':329,'multiline':False]
['text':' wrap it to remove the pointer added in decode_cv_impl.','line_number':330,'multiline':False]
['text':' After extracting the member pointee from the type the class type is still','line_number':346,'multiline':False]
['text':' in the type (somewhere -- you won't see with RTTI, that is) and that type','line_number':347,'multiline':False]
['text':' is flagged unusable and *not* identical to the nonmember function type.','line_number':348,'multiline':False]
['text':' We can, however, decompose this type via components_impl but surprisingly','line_number':349,'multiline':False]
['text':' a pointer to the const qualified class type pops up again as the first ','line_number':350,'multiline':False]
['text':' parameter type. ','line_number':351,'multiline':False]
['text':' We have to replace this type with the properly cv-qualified and ','line_number':352,'multiline':False]
['text':' transformed class type, integrate the cv qualification into the bits.','line_number':353,'multiline':False]
['text':' Now put it all together: detect cv-qualification of function types and do','line_number':399,'multiline':False]
['text':' the weird transformations above for member function pointers.','line_number':400,'multiline':False]
['text':' end of BORLAND WORKAROUND','line_number':411,'multiline':False]
['text':' namespace function_types::detail','line_number':416,'multiline':False]
['text':' namespace ::boost','line_number':418,'multiline':False]
