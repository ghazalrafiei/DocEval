['text':'','line_number':12,'multiline':True]
['text':'','line_number':16,'multiline':True]
['text':'/////////////////////////////////////////////////////////////////////////////','line_number':22,'multiline':False]
['text':'/ \file call.hpp','line_number':23,'multiline':False]
['text':'/ Contains definition of the call<> transform.','line_number':24,'multiline':False]
['text':'','line_number':25,'multiline':False]
['text':'  Copyright 2008 Eric Niebler. Distributed under the Boost','line_number':26,'multiline':False]
['text':'  Software License, Version 1.0. (See accompanying file','line_number':27,'multiline':False]
['text':'  LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)','line_number':28,'multiline':False]
['text':'/ \brief Call the PolymorphicFunctionObject \c Fun with the','line_number':50,'multiline':False]
['text':'/ current expression, state and data, transformed according','line_number':51,'multiline':False]
['text':'/ to \c A0 through \c AN.','line_number':52,'multiline':False]
['text':'/ Let \c ax be <tt>when\<_, Ax\>()(e, s, d)</tt>','line_number':64,'multiline':False]
['text':'/ for each \c x in <tt>[0,N]</tt>.','line_number':65,'multiline':False]
['text':'/ Return <tt>Fun()(a0, a1,... aN)</tt>.','line_number':66,'multiline':False]
['text':'/','line_number':67,'multiline':False]
['text':'/ \param e The current expression','line_number':68,'multiline':False]
['text':'/ \param s The current state','line_number':69,'multiline':False]
['text':'/ \param d An arbitrary data','line_number':70,'multiline':False]
['text':'/ \brief Call the PolymorphicFunctionObject \c Fun with the','line_number':86,'multiline':False]
['text':'/ current expression, state and data, transformed according','line_number':87,'multiline':False]
['text':'/ to \c A0 through \c AN.','line_number':88,'multiline':False]
['text':' BUGBUG this isn't right. Could be pack(_child), should use arity of child!','line_number':96,'multiline':False]
