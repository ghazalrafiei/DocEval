['text':'/////////////////////////////////////////////////////////////////////////////','line_number':1,'multiline':False]
['text':'/ \file fusion.hpp','line_number':2,'multiline':False]
['text':'/ Make any Proto expression a valid Fusion sequence','line_number':3,'multiline':False]
['text':'','line_number':4,'multiline':False]
['text':'  Copyright 2008 Eric Niebler. Distributed under the Boost','line_number':5,'multiline':False]
['text':'  Software License, Version 1.0. (See accompanying file','line_number':6,'multiline':False]
['text':'  LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)','line_number':7,'multiline':False]
['text':' default constructor could not be generated','line_number':35,'multiline':False]
['text':' assignment operator could not be generated','line_number':36,'multiline':False]
['text':' can never be instantiated - user defined constructor required','line_number':37,'multiline':False]
['text':'/ \brief A PolymorphicFunctionObject type that returns a "flattened"','line_number':144,'multiline':False]
['text':'/ view of a Proto expression tree.','line_number':145,'multiline':False]
['text':'/','line_number':146,'multiline':False]
['text':'/ A PolymorphicFunctionObject type that returns a "flattened"','line_number':147,'multiline':False]
['text':'/ view of a Proto expression tree. For a tree with a top-most node','line_number':148,'multiline':False]
['text':'/ tag of type \c T, the elements of the flattened sequence are','line_number':149,'multiline':False]
['text':'/ determined by recursing into each child node with the same','line_number':150,'multiline':False]
['text':'/ tag type and returning those nodes of different type. So for','line_number':151,'multiline':False]
['text':'/ instance, the Proto expression tree corresponding to the','line_number':152,'multiline':False]
['text':'/ expression <tt>a | b | c</tt> has a flattened view with elements','line_number':153,'multiline':False]
['text':'/ [a, b, c], even though the tree is grouped as','line_number':154,'multiline':False]
['text':'/ <tt>((a | b) | c)</tt>.','line_number':155,'multiline':False]
['text':'/ \brief A function that returns a "flattened"','line_number':190,'multiline':False]
['text':'/ view of a Proto expression tree.','line_number':191,'multiline':False]
['text':'/','line_number':192,'multiline':False]
['text':'/ For a tree with a top-most node','line_number':193,'multiline':False]
['text':'/ tag of type \c T, the elements of the flattened sequence are','line_number':194,'multiline':False]
['text':'/ determined by recursing into each child node with the same','line_number':195,'multiline':False]
['text':'/ tag type and returning those nodes of different type. So for','line_number':196,'multiline':False]
['text':'/ instance, the Proto expression tree corresponding to the','line_number':197,'multiline':False]
['text':'/ expression <tt>a | b | c</tt> has a flattened view with elements','line_number':198,'multiline':False]
['text':'/ [a, b, c], even though the tree is grouped as','line_number':199,'multiline':False]
['text':'/ <tt>((a | b) | c)</tt>.','line_number':200,'multiline':False]
['text':'/ \overload','line_number':208,'multiline':False]
['text':'/','line_number':209,'multiline':False]
['text':'/ INTERNAL ONLY','line_number':217,'multiline':False]
['text':'/','line_number':218,'multiline':False]
['text':'/ INTERNAL ONLY','line_number':258,'multiline':False]
['text':'/','line_number':259,'multiline':False]
