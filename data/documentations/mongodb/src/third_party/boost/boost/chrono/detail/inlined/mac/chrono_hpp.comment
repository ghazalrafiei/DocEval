['text':'  mac/chrono.cpp  --------------------------------------------------------------//','line_number':1,'multiline':False]
['text':'  Copyright Beman Dawes 2008','line_number':3,'multiline':False]
['text':'  Copyright 2009-2010 Vicente J. Botet Escriba','line_number':4,'multiline':False]
['text':'  Distributed under the Boost Software License, Version 1.0.','line_number':6,'multiline':False]
['text':'  See http://www.boost.org/LICENSE_1_0.txt','line_number':7,'multiline':False]
['text':'----------------------------------------------------------------------------//','line_number':10,'multiline':False]
['text':'                                 Mac                                        //','line_number':11,'multiline':False]
['text':'----------------------------------------------------------------------------//','line_number':12,'multiline':False]
['text':'for gettimeofday and timeval','line_number':14,'multiline':False]
['text':' mach_absolute_time, mach_timebase_info_data_t','line_number':15,'multiline':False]
['text':' system_clock','line_number':23,'multiline':False]
['text':' gettimeofday is the most precise "system time" available on this platform.','line_number':25,'multiline':False]
['text':' It returns the number of microseconds since New Years 1970 in a struct called timeval','line_number':26,'multiline':False]
['text':' which has a field for seconds and a field for microseconds.','line_number':27,'multiline':False]
['text':'    Fill in the timeval and then convert that to the time_point','line_number':28,'multiline':False]
['text':' Take advantage of the fact that on this platform time_t is nothing but','line_number':50,'multiline':False]
['text':'    an integral count of seconds since New Years 1970 (same epoch as timeval).','line_number':51,'multiline':False]
['text':'    Just get the duration out of the time_point and truncate it to seconds.','line_number':52,'multiline':False]
['text':' Just turn the time_t into a count of seconds and construct a time_point with it.','line_number':59,'multiline':False]
['text':' steady_clock','line_number':69,'multiline':False]
['text':' Note, in this implementation steady_clock and high_resolution_clock','line_number':71,'multiline':False]
['text':'   are the same clock.  They are both based on mach_absolute_time().','line_number':72,'multiline':False]
['text':'   mach_absolute_time() * MachInfo.numer / MachInfo.denom is the number of','line_number':73,'multiline':False]
['text':'   nanoseconds since the computer booted up.  MachInfo.numer and MachInfo.denom','line_number':74,'multiline':False]
['text':'   are run time constants supplied by the OS.  This clock has no relationship','line_number':75,'multiline':False]
['text':'   to the Gregorian calendar.  It's main use is as a high resolution timer.','line_number':76,'multiline':False]
['text':' MachInfo.numer / MachInfo.denom is often 1 on the latest equipment.  Specialize','line_number':78,'multiline':False]
['text':'   for that case as an optimization.','line_number':79,'multiline':False]
['text':' namespace chrono','line_number':241,'multiline':False]
['text':' namespace boost','line_number':242,'multiline':False]
