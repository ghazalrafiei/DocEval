['text':'/// header body','line_number':4,'multiline':False]
['text':'-----------------------------------------------------------------------------','line_number':6,'multiline':False]
['text':' boost variant/detail/substitute.hpp header file','line_number':7,'multiline':False]
['text':' See http://www.boost.org for updates, documentation, and revision history.','line_number':8,'multiline':False]
['text':'-----------------------------------------------------------------------------','line_number':9,'multiline':False]
['text':'','line_number':10,'multiline':False]
['text':' Copyright (c) 2003','line_number':11,'multiline':False]
['text':' Eric Friedman','line_number':12,'multiline':False]
['text':'','line_number':13,'multiline':False]
['text':' Distributed under the Boost Software License, Version 1.0. (See','line_number':14,'multiline':False]
['text':' accompanying file LICENSE_1_0.txt or copy at','line_number':15,'multiline':False]
['text':' http://www.boost.org/LICENSE_1_0.txt)','line_number':16,'multiline':False]
['text':' for BOOST_VARIANT_DO_NOT_USE_VARIADIC_TEMPLATES','line_number':24,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////////////','line_number':40,'multiline':False]
['text':' (detail) metafunction substitute','line_number':41,'multiline':False]
['text':'','line_number':42,'multiline':False]
['text':' Substitutes one type for another in the given type expression.','line_number':43,'multiline':False]
['text':'','line_number':44,'multiline':False]
['text':'','line_number':46,'multiline':False]
['text':' primary template','line_number':47,'multiline':False]
['text':'','line_number':48,'multiline':False]
['text':' = ... (see substitute_fwd.hpp) ','line_number':52,'multiline':True]
['text':'','line_number':60,'multiline':False]
['text':' tag substitution specializations','line_number':61,'multiline':False]
['text':'','line_number':62,'multiline':False]
['text':'','line_number':75,'multiline':True]
['text':'','line_number':84,'multiline':False]
['text':' pointer specializations','line_number':85,'multiline':False]
['text':'','line_number':86,'multiline':False]
['text':'','line_number':100,'multiline':True]
['text':'','line_number':109,'multiline':False]
['text':' reference specializations','line_number':110,'multiline':False]
['text':'','line_number':111,'multiline':False]
['text':'','line_number':125,'multiline':False]
['text':' template expression (i.e., F<...>) specializations','line_number':126,'multiline':False]
['text':'','line_number':127,'multiline':False]
['text':'','line_number':149,'multiline':False]
['text':' function specializations','line_number':150,'multiline':False]
['text':'','line_number':151,'multiline':False]
['text':'','line_number':179,'multiline':True]
['text':'','line_number':183,'multiline':True]
['text':' !defined(BOOST_VARIANT_DO_NOT_USE_VARIADIC_TEMPLATES)','line_number':192,'multiline':False]
['text':' !defined(BOOST_VARIANT_DETAIL_NO_SUBSTITUTE)','line_number':193,'multiline':False]
['text':' namespace detail::variant','line_number':195,'multiline':False]
['text':' namespace boost','line_number':196,'multiline':False]
['text':' BOOST_VARIANT_DETAIL_SUBSTITUTE_HPP','line_number':198,'multiline':False]
['text':'/// iteration, depth == 1','line_number':200,'multiline':False]
['text':'','line_number':207,'multiline':False]
['text':' template specializations','line_number':208,'multiline':False]
['text':'','line_number':209,'multiline':False]
['text':'','line_number':230,'multiline':False]
['text':' function specializations','line_number':231,'multiline':False]
['text':'','line_number':232,'multiline':False]
['text':'','line_number':256,'multiline':False]
['text':' zero-arg function specialization','line_number':257,'multiline':False]
['text':'','line_number':258,'multiline':False]
['text':' i','line_number':276,'multiline':False]
['text':' BOOST_PP_IS_ITERATING','line_number':279,'multiline':False]
