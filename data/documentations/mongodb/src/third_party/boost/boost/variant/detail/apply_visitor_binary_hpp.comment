['text':'-----------------------------------------------------------------------------','line_number':1,'multiline':False]
['text':' boost variant/detail/apply_visitor_binary.hpp header file','line_number':2,'multiline':False]
['text':' See http://www.boost.org for updates, documentation, and revision history.','line_number':3,'multiline':False]
['text':'-----------------------------------------------------------------------------','line_number':4,'multiline':False]
['text':'','line_number':5,'multiline':False]
['text':' Copyright (c) 2002-2003 Eric Friedman','line_number':6,'multiline':False]
['text':' Copyright (c) 2014-2022 Antony Polukhin','line_number':7,'multiline':False]
['text':'','line_number':8,'multiline':False]
['text':' Distributed under the Boost Software License, Version 1.0. (See','line_number':9,'multiline':False]
['text':' accompanying file LICENSE_1_0.txt or copy at','line_number':10,'multiline':False]
['text':' http://www.boost.org/LICENSE_1_0.txt)','line_number':11,'multiline':False]
['text':' for boost::move, boost::forward','line_number':28,'multiline':False]
['text':'////////////////////////////////////////////////////////////////////////','line_number':33,'multiline':False]
['text':' function template apply_visitor(visitor, visitable1, visitable2)','line_number':34,'multiline':False]
['text':'','line_number':35,'multiline':False]
['text':' Visits visitable1 and visitable2 such that their values (which we','line_number':36,'multiline':False]
['text':' shall call x and y, respectively) are used as arguments in the','line_number':37,'multiline':False]
['text':' expression visitor(x, y).','line_number':38,'multiline':False]
['text':'','line_number':39,'multiline':False]
['text':' visitor typedefs','line_number':46,'multiline':False]
['text':' representation','line_number':51,'multiline':False]
['text':' structors','line_number':56,'multiline':False]
['text':' visitor interfaces','line_number':64,'multiline':False]
['text':' visitor typedefs','line_number':100,'multiline':False]
['text':' representation','line_number':105,'multiline':False]
['text':' structors','line_number':110,'multiline':False]
['text':' visitor interfaces','line_number':118,'multiline':False]
['text':' namespace detail::variant','line_number':170,'multiline':False]
['text':'','line_number':172,'multiline':False]
['text':' nonconst-visitor version:','line_number':173,'multiline':False]
['text':'','line_number':174,'multiline':False]
['text':'','line_number':204,'multiline':False]
['text':' const-visitor version:','line_number':205,'multiline':False]
['text':'','line_number':206,'multiline':False]
['text':'////////////////////////////////////////////////////////////////////////','line_number':239,'multiline':False]
['text':' function template apply_visitor(visitor, visitable1, visitable2)','line_number':240,'multiline':False]
['text':'','line_number':241,'multiline':False]
['text':' C++14 part.','line_number':242,'multiline':False]
['text':'','line_number':243,'multiline':False]
['text':' structors','line_number':253,'multiline':False]
['text':' visitor interfaces','line_number':261,'multiline':False]
['text':' structors','line_number':285,'multiline':False]
['text':' visitor interfaces','line_number':293,'multiline':False]
['text':' namespace detail::variant','line_number':323,'multiline':False]
['text':' !defined(BOOST_NO_CXX14_DECLTYPE_AUTO) && !defined(BOOST_NO_CXX11_DECLTYPE_N3276)','line_number':354,'multiline':False]
['text':' namespace boost','line_number':356,'multiline':False]
['text':' BOOST_VARIANT_DETAIL_APPLY_VISITOR_BINARY_HPP','line_number':358,'multiline':False]
