['text':' Copyright David Abrahams 2004. Use, modification and distribution is','line_number':1,'multiline':False]
['text':' subject to the Boost Software License, Version 1.0. (See accompanying','line_number':2,'multiline':False]
['text':' file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)','line_number':3,'multiline':False]
['text':' is_incrementable<T> metafunction','line_number':13,'multiline':False]
['text':'','line_number':14,'multiline':False]
['text':' Requires: Given x of type T&, if the expression ++x is well-formed','line_number':15,'multiline':False]
['text':' it must have complete type; otherwise, it must neither be ambiguous','line_number':16,'multiline':False]
['text':' nor violate access.','line_number':17,'multiline':False]
['text':' This namespace ensures that ADL doesn't mess things up.','line_number':19,'multiline':False]
['text':' a type returned from operator++ when no increment is found in the','line_number':22,'multiline':False]
['text':' type's own namespace','line_number':23,'multiline':False]
['text':' any soaks up implicit conversions and makes the following','line_number':26,'multiline':False]
['text':' operator++ less-preferred than any other such operator that','line_number':27,'multiline':False]
['text':' might be found via ADL.','line_number':28,'multiline':False]
['text':' This is a last-resort operator++ for when none other is found','line_number':31,'multiline':False]
['text':' In case an operator++ is found that returns void, we'll use ++x,0','line_number':56,'multiline':False]
['text':' Warning about operator,','line_number':63,'multiline':False]
['text':' two check overloads help us identify which operator++ was picked','line_number':66,'multiline':False]
['text':' namespace detail','line_number':115,'multiline':False]
['text':' namespace boost','line_number':117,'multiline':False]
['text':' IS_INCREMENTABLE_DWA200415_HPP','line_number':121,'multiline':False]
