['text':' Copyright Alexander Nasonov & Paul A. Bristow 2006.','line_number':1,'multiline':False]
['text':' Use, modification and distribution are subject to the','line_number':3,'multiline':False]
['text':' Boost Software License, Version 1.0.','line_number':4,'multiline':False]
['text':' (See accompanying file LICENSE_1_0.txt','line_number':5,'multiline':False]
['text':' or copy at http://www.boost.org/LICENSE_1_0.txt)','line_number':6,'multiline':False]
['text':' Fix for SF:1358600 - lexical_cast & pure virtual functions & VC 8 STL','line_number':19,'multiline':False]
['text':' Calculate an argument to pass to std::ios_base::precision from','line_number':41,'multiline':False]
['text':' lexical_cast. See alternative implementation for broken standard','line_number':42,'multiline':False]
['text':' libraries in lcast_get_precision below. Keep them in sync, please.','line_number':43,'multiline':False]
['text':' No fix for SF:1358600.','line_number':48,'multiline':False]
['text':' Follow lcast_precision algorithm at run-time:','line_number':103,'multiline':False]
['text':' No fix for SF:1358600.','line_number':106,'multiline':False]
['text':' Includes all built-in floating-point types, float, double ...','line_number':119,'multiline':False]
['text':' and UDT types for which digits (significand bits) is defined (not zero)','line_number':120,'multiline':False]
['text':' Floating-point types with','line_number':131,'multiline':False]
['text':' limits::digits defined by the specialization.','line_number':132,'multiline':False]
['text':' unsigned long is selected because it is at least 32-bits','line_number':136,'multiline':False]
['text':' and thus ULONG_MAX / 30103UL is big enough for all types.','line_number':137,'multiline':False]
['text':' Decimal Floating-point type, most likely a User Defined Type','line_number':146,'multiline':False]
['text':' rather than a real floating-point hardware type.','line_number':147,'multiline':False]
['text':' Integral type (for which precision has no effect)','line_number':154,'multiline':False]
['text':' or type T for which limits is NOT specialized,','line_number':155,'multiline':False]
['text':' so assume stream precision remains the default 6 decimal digits.','line_number':156,'multiline':False]
['text':' Warning: if your User-defined Floating-point type T is NOT specialized,','line_number':157,'multiline':False]
['text':' then you may lose accuracy by only using 6 decimal digits.','line_number':158,'multiline':False]
['text':' To avoid this, you need to specialize T with either','line_number':159,'multiline':False]
['text':' radix == 2 and digits == the number of significand bits,','line_number':160,'multiline':False]
['text':' OR','line_number':161,'multiline':False]
['text':' radix = 10 and digits10 == the number of decimal digits.','line_number':162,'multiline':False]
['text':'  BOOST_DETAIL_LCAST_PRECISION_HPP_INCLUDED','line_number':184,'multiline':False]
