['text':' Copyright 2015-2020 Peter Dimov.','line_number':4,'multiline':False]
['text':'','line_number':5,'multiline':False]
['text':' Distributed under the Boost Software License, Version 1.0.','line_number':6,'multiline':False]
['text':'','line_number':7,'multiline':False]
['text':' See accompanying file LICENSE_1_0.txt or copy at','line_number':8,'multiline':False]
['text':' http://www.boost.org/LICENSE_1_0.txt','line_number':9,'multiline':False]
['text':' mp_identity','line_number':23,'multiline':False]
['text':' mp_identity_t','line_number':29,'multiline':False]
['text':' mp_inherit','line_number':32,'multiline':False]
['text':' mp_if, mp_if_c','line_number':35,'multiline':False]
['text':' namespace detail','line_number':53,'multiline':False]
['text':' mp_valid','line_number':58,'multiline':False]
['text':' tested at 1800','line_number':60,'multiline':False]
['text':' contributed by Roland Schulz in https://github.com/boostorg/mp11/issues/17','line_number':62,'multiline':False]
['text':' namespace detail','line_number':75,'multiline':False]
['text':' implementation by Bruno Dutra (by the name is_evaluable)','line_number':81,'multiline':False]
['text':' namespace detail','line_number':93,'multiline':False]
['text':' mp_defer','line_number':101,'multiline':False]
['text':' namespace detail','line_number':123,'multiline':False]
['text':' mp_eval_if, mp_eval_if_c','line_number':135,'multiline':False]
['text':' namespace detail','line_number':150,'multiline':False]
['text':' mp_eval_if_not','line_number':156,'multiline':False]
['text':' mp_eval_or','line_number':160,'multiline':False]
['text':' mp_valid_and_true','line_number':164,'multiline':False]
['text':' mp_cond','line_number':168,'multiline':False]
['text':' so elegant; so doesn't work','line_number':170,'multiline':False]
['text':' template<class C, class T, class... E> using mp_cond = mp_eval_if<C, T, mp_cond, E...>;','line_number':171,'multiline':False]
['text':' namespace detail','line_number':178,'multiline':False]
['text':' namespace detail','line_number':191,'multiline':False]
['text':' mp_quote','line_number':193,'multiline':False]
['text':' the indirection through mp_defer works around the language inability','line_number':196,'multiline':False]
['text':' to expand T... into a fixed parameter list of an alias template','line_number':197,'multiline':False]
['text':' mp_quote_trait','line_number':202,'multiline':False]
['text':' mp_invoke_q','line_number':208,'multiline':False]
['text':' namespace detail','line_number':216,'multiline':False]
['text':' mp_not_fn<P>','line_number':230,'multiline':False]
['text':' mp_compose','line_number':238,'multiline':False]
['text':' namespace detail','line_number':244,'multiline':False]
['text':' namespace mp11','line_number':260,'multiline':False]
['text':' namespace boost','line_number':261,'multiline':False]
['text':' #ifndef BOOST_MP11_UTILITY_HPP_INCLUDED','line_number':263,'multiline':False]
