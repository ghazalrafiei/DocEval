['text':'////////////////////////////////////////////////////////////////////////////','line_number':1,'multiline':False]
['text':'','line_number':2,'multiline':False]
['text':' (C) Copyright Ion Gaztanaga 2012-2015.','line_number':3,'multiline':False]
['text':' Distributed under the Boost Software License, Version 1.0.','line_number':4,'multiline':False]
['text':' (See accompanying file LICENSE_1_0.txt or copy at','line_number':5,'multiline':False]
['text':' http://www.boost.org/LICENSE_1_0.txt)','line_number':6,'multiline':False]
['text':'','line_number':7,'multiline':False]
['text':' See http://www.boost.org/libs/move for documentation.','line_number':8,'multiline':False]
['text':'','line_number':9,'multiline':False]
['text':'////////////////////////////////////////////////////////////////////////////','line_number':10,'multiline':False]
['text':'! \file','line_number':12,'multiline':False]
['text':'forceinline','line_number':21,'multiline':False]
['text':'for std::size_t','line_number':23,'multiline':False]
['text':'Small meta-typetraits to support move','line_number':26,'multiline':False]
['text':'Forward declare boost::rv','line_number':30,'multiline':False]
['text':'////////////////////////////////////','line_number':35,'multiline':False]
['text':'          is_different','line_number':36,'multiline':False]
['text':'////////////////////////////////////','line_number':37,'multiline':False]
['text':'////////////////////////////////////','line_number':44,'multiline':False]
['text':'             apply','line_number':45,'multiline':False]
['text':'////////////////////////////////////','line_number':46,'multiline':False]
['text':'////////////////////////////////////','line_number':53,'multiline':False]
['text':'             bool_','line_number':54,'multiline':False]
['text':'////////////////////////////////////','line_number':55,'multiline':False]
['text':'////////////////////////////////////','line_number':67,'multiline':False]
['text':'              nat','line_number':68,'multiline':False]
['text':'////////////////////////////////////','line_number':69,'multiline':False]
['text':'////////////////////////////////////','line_number':74,'multiline':False]
['text':'          yes_type/no_type','line_number':75,'multiline':False]
['text':'////////////////////////////////////','line_number':76,'multiline':False]
['text':'////////////////////////////////////','line_number':84,'multiline':False]
['text':'            natify','line_number':85,'multiline':False]
['text':'////////////////////////////////////','line_number':86,'multiline':False]
['text':'////////////////////////////////////','line_number':89,'multiline':False]
['text':'          remove_reference','line_number':90,'multiline':False]
['text':'////////////////////////////////////','line_number':91,'multiline':False]
['text':'////////////////////////////////////','line_number':134,'multiline':False]
['text':'             remove_pointer','line_number':135,'multiline':False]
['text':'////////////////////////////////////','line_number':136,'multiline':False]
['text':'////////////////////////////////////','line_number':144,'multiline':False]
['text':'             add_pointer','line_number':145,'multiline':False]
['text':'////////////////////////////////////','line_number':146,'multiline':False]
['text':'////////////////////////////////////','line_number':153,'multiline':False]
['text':'             add_const','line_number':154,'multiline':False]
['text':'////////////////////////////////////','line_number':155,'multiline':False]
['text':'////////////////////////////////////','line_number':178,'multiline':False]
['text':'      add_lvalue_reference','line_number':179,'multiline':False]
['text':'////////////////////////////////////','line_number':180,'multiline':False]
['text':'////////////////////////////////////','line_number':200,'multiline':False]
['text':'             is_lvalue_reference','line_number':201,'multiline':False]
['text':'////////////////////////////////////','line_number':202,'multiline':False]
['text':'////////////////////////////////////','line_number':216,'multiline':False]
['text':'             identity','line_number':217,'multiline':False]
['text':'////////////////////////////////////','line_number':218,'multiline':False]
['text':'////////////////////////////////////','line_number':228,'multiline':False]
['text':'          is_class_or_union','line_number':229,'multiline':False]
['text':'////////////////////////////////////','line_number':230,'multiline':False]
['text':'////////////////////////////////////','line_number':242,'multiline':False]
['text':'             addressof','line_number':243,'multiline':False]
['text':'////////////////////////////////////','line_number':244,'multiline':False]
['text':'////////////////////////////////////','line_number':247,'multiline':False]
['text':'          has_pointer_type','line_number':248,'multiline':False]
['text':'////////////////////////////////////','line_number':249,'multiline':False]
['text':'////////////////////////////////////','line_number':259,'multiline':False]
['text':'           is_convertible','line_number':260,'multiline':False]
['text':'////////////////////////////////////','line_number':261,'multiline':False]
['text':'use intrinsic since in MSVC','line_number':264,'multiline':False]
['text':'overaligned types can't go through ellipsis','line_number':265,'multiline':False]
['text':'////////////////////////////////////////////////////////////////////////////','line_number':343,'multiline':False]
['text':'','line_number':344,'multiline':False]
['text':'                         and_','line_number':345,'multiline':False]
['text':'','line_number':346,'multiline':False]
['text':'////////////////////////////////////////////////////////////////////////////','line_number':347,'multiline':False]
['text':'////////////////////////////////////////////////////////////////////////////','line_number':370,'multiline':False]
['text':'','line_number':371,'multiline':False]
['text':'                            or_','line_number':372,'multiline':False]
['text':'','line_number':373,'multiline':False]
['text':'////////////////////////////////////////////////////////////////////////////','line_number':374,'multiline':False]
['text':'////////////////////////////////////////////////////////////////////////////','line_number':397,'multiline':False]
['text':'','line_number':398,'multiline':False]
['text':'                         not_','line_number':399,'multiline':False]
['text':'','line_number':400,'multiline':False]
['text':'////////////////////////////////////////////////////////////////////////////','line_number':401,'multiline':False]
['text':'////////////////////////////////////////////////////////////////////////////','line_number':408,'multiline':False]
['text':'','line_number':409,'multiline':False]
['text':' enable_if_and / disable_if_and / enable_if_or / disable_if_or','line_number':410,'multiline':False]
['text':'','line_number':411,'multiline':False]
['text':'////////////////////////////////////////////////////////////////////////////','line_number':412,'multiline':False]
['text':'////////////////////////////////////////////////////////////////////////////','line_number':434,'multiline':False]
['text':'','line_number':435,'multiline':False]
['text':'                      has_move_emulation_enabled_impl','line_number':436,'multiline':False]
['text':'','line_number':437,'multiline':False]
['text':'////////////////////////////////////////////////////////////////////////////','line_number':438,'multiline':False]
['text':'////////////////////////////////////////////////////////////////////////////','line_number':452,'multiline':False]
['text':'','line_number':453,'multiline':False]
['text':'                            is_rv_impl','line_number':454,'multiline':False]
['text':'','line_number':455,'multiline':False]
['text':'////////////////////////////////////////////////////////////////////////////','line_number':456,'multiline':False]
['text':' Code from Jeffrey Lee Hellrung, many thanks','line_number':470,'multiline':False]
['text':' #ifndef BOOST_NO_CXX11_RVALUE_REFERENCES','line_number':482,'multiline':False]
['text':' #ifndef BOOST_NO_CXX11_RVALUE_REFERENCES','line_number':492,'multiline':False]
['text':' #ifndef BOOST_NO_CXX11_RVALUE_REFERENCES','line_number':500,'multiline':False]
['text':' namespace detail_add_rvalue_reference','line_number':514,'multiline':False]
['text':' #ifndef BOOST_NO_CXX11_RVALUE_REFERENCES','line_number':525,'multiline':False]
['text':' #ifndef BOOST_NO_CXX11_RVALUE_REFERENCES','line_number':531,'multiline':False]
['text':' #ifndef BOOST_NO_CXX11_RVALUE_REFERENCES','line_number':540,'multiline':False]
['text':' Ideas from Boost.Move review, Jeffrey Lee Hellrung:','line_number':542,'multiline':False]
['text':'','line_number':543,'multiline':False]
['text':'- TypeTraits metafunctions is_lvalue_reference, add_lvalue_reference, and remove_lvalue_reference ?','line_number':544,'multiline':False]
['text':'  Perhaps add_reference and remove_reference can be modified so that they behave wrt emulated rvalue','line_number':545,'multiline':False]
['text':'  references the same as wrt real rvalue references, i.e., add_reference< rv<T>& > -> T& rather than','line_number':546,'multiline':False]
['text':'  rv<T>& (since T&& & -> T&).','line_number':547,'multiline':False]
['text':'','line_number':548,'multiline':False]
['text':'- Add'l TypeTraits has_[trivial_]move_{constructor,assign}...?','line_number':549,'multiline':False]
['text':'','line_number':550,'multiline':False]
['text':'- An as_lvalue(T& x) function, which amounts to an identity operation in C++0x, but strips emulated','line_number':551,'multiline':False]
['text':'  rvalue references in C++03.  This may be necessary to prevent "accidental moves".','line_number':552,'multiline':False]
['text':'namespace move_detail {','line_number':554,'multiline':False]
['text':'namespace boost {','line_number':555,'multiline':False]
['text':'#ifndef BOOST_MOVE_DETAIL_META_UTILS_HPP','line_number':559,'multiline':False]
