['text':'////////////////////////////////////////////////////////////////////////////','line_number':1,'multiline':False]
['text':'','line_number':2,'multiline':False]
['text':' (C) Copyright Ion Gaztanaga 2009-2012.','line_number':3,'multiline':False]
['text':' Distributed under the Boost Software License, Version 1.0.','line_number':4,'multiline':False]
['text':' (See accompanying file LICENSE_1_0.txt or copy at','line_number':5,'multiline':False]
['text':' http://www.boost.org/LICENSE_1_0.txt)','line_number':6,'multiline':False]
['text':'','line_number':7,'multiline':False]
['text':' See http://www.boost.org/libs/move for documentation.','line_number':8,'multiline':False]
['text':'','line_number':9,'multiline':False]
['text':'////////////////////////////////////////////////////////////////////////////','line_number':10,'multiline':False]
['text':'! \file','line_number':12,'multiline':False]
['text':'! If this trait yields to true','line_number':35,'multiline':False]
['text':'! (<i>has_trivial_destructor_after_move &lt;T&gt;::value == true</i>)','line_number':36,'multiline':False]
['text':'! means that if T is used as argument of a move construction/assignment,','line_number':37,'multiline':False]
['text':'! there is no need to call T's destructor.','line_number':38,'multiline':False]
['text':'! This optimization tipically is used to improve containers' performance.','line_number':39,'multiline':False]
['text':'!','line_number':40,'multiline':False]
['text':'! By default this trait is true if the type has trivial destructor,','line_number':41,'multiline':False]
['text':'! every class should specialize this trait if it wants to improve performance','line_number':42,'multiline':False]
['text':'! when inserted in containers.','line_number':43,'multiline':False]
['text':'! By default this traits returns','line_number':49,'multiline':False]
['text':'! <pre>boost::is_nothrow_move_constructible<T>::value && boost::is_nothrow_move_assignable<T>::value </pre>.','line_number':50,'multiline':False]
['text':'! Classes with non-throwing move constructor','line_number':51,'multiline':False]
['text':'! and assignment can specialize this trait to obtain some performance improvements.','line_number':52,'multiline':False]
['text':'The standard requires is_nothrow_move_constructible for move_if_noexcept','line_number':65,'multiline':False]
['text':'but a user (usually in C++03) might specialize has_nothrow_move which includes it','line_number':66,'multiline':False]
['text':'move_detail {','line_number':72,'multiline':False]
['text':'namespace boost {','line_number':73,'multiline':False]
['text':'#ifndef BOOST_MOVE_TRAITS_HPP','line_number':77,'multiline':False]
