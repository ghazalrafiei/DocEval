['text':'  (C) Copyright Greg Colvin and Beman Dawes 1998, 1999.','line_number':4,'multiline':False]
['text':'  Copyright (c) 2001, 2002 Peter Dimov','line_number':5,'multiline':False]
['text':'','line_number':6,'multiline':False]
['text':'  Distributed under the Boost Software License, Version 1.0. (See','line_number':7,'multiline':False]
['text':'  accompanying file LICENSE_1_0.txt or copy at','line_number':8,'multiline':False]
['text':'  http://www.boost.org/LICENSE_1_0.txt)','line_number':9,'multiline':False]
['text':'','line_number':10,'multiline':False]
['text':'  See http://www.boost.org/libs/smart_ptr/ for documentation.','line_number':11,'multiline':False]
['text':' for std::ptrdiff_t','line_number':21,'multiline':False]
['text':' Debug hooks','line_number':26,'multiline':False]
['text':'  scoped_array extends scoped_ptr to arrays. Deletion of the array pointed to','line_number':35,'multiline':False]
['text':'  is guaranteed, either on destruction of the scoped_array or via an explicit','line_number':36,'multiline':False]
['text':'  reset(). Use shared_array or std::vector if your needs are more complex.','line_number':37,'multiline':False]
['text':' noncopyable','line_number':39,'multiline':False]
['text':' catch self-reset errors','line_number':74,'multiline':False]
['text':' implicit conversion to "bool"','line_number':90,'multiline':False]
['text':' namespace boost','line_number':130,'multiline':False]
['text':' #ifndef BOOST_SMART_PTR_SCOPED_ARRAY_HPP_INCLUDED','line_number':132,'multiline':False]
