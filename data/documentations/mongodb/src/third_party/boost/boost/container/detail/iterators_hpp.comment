['text':'////////////////////////////////////////////////////////////////////////////','line_number':1,'multiline':False]
['text':'','line_number':2,'multiline':False]
['text':' (C) Copyright Ion Gaztanaga 2005-2013.','line_number':3,'multiline':False]
['text':' (C) Copyright Gennaro Prota 2003 - 2004.','line_number':4,'multiline':False]
['text':'','line_number':5,'multiline':False]
['text':' Distributed under the Boost Software License, Version 1.0.','line_number':6,'multiline':False]
['text':' (See accompanying file LICENSE_1_0.txt or copy at','line_number':7,'multiline':False]
['text':' http://www.boost.org/LICENSE_1_0.txt)','line_number':8,'multiline':False]
['text':'','line_number':9,'multiline':False]
['text':' See http://www.boost.org/libs/container for documentation.','line_number':10,'multiline':False]
['text':'','line_number':11,'multiline':False]
['text':'////////////////////////////////////////////////////////////////////////////','line_number':12,'multiline':False]
['text':'Constructors','line_number':55,'multiline':False]
['text':'Arithmetic signed','line_number':100,'multiline':False]
['text':'Arithmetic unsigned','line_number':129,'multiline':False]
['text':'Constructors','line_number':185,'multiline':False]
['text':'Arithmetic','line_number':230,'multiline':False]
['text':'This pseudo-iterator's dereference operations have no sense since value is not','line_number':250,'multiline':False]
['text':'constructed until ::boost::container::construct_in_place is called.','line_number':251,'multiline':False]
['text':'So comment them to catch bad uses','line_number':252,'multiline':False]
['text':'const T& operator*() const;','line_number':253,'multiline':False]
['text':'const T& operator[](difference_type) const;','line_number':254,'multiline':False]
['text':'const T* operator->() const;','line_number':255,'multiline':False]
['text':'Constructors','line_number':296,'multiline':False]
['text':'Arithmetic','line_number':341,'multiline':False]
['text':'This pseudo-iterator's dereference operations have no sense since value is not','line_number':361,'multiline':False]
['text':'constructed until ::boost::container::construct_in_place is called.','line_number':362,'multiline':False]
['text':'So comment them to catch bad uses','line_number':363,'multiline':False]
['text':'const T& operator*() const;','line_number':364,'multiline':False]
['text':'const T& operator[](difference_type) const;','line_number':365,'multiline':False]
['text':'const T* operator->() const;','line_number':366,'multiline':False]
['text':'Constructors','line_number':407,'multiline':False]
['text':'Arithmetic','line_number':452,'multiline':False]
['text':'Arithmetic','line_number':563,'multiline':False]
['text':'This pseudo-iterator's dereference operations have no sense since value is not','line_number':584,'multiline':False]
['text':'constructed until ::boost::container::construct_in_place is called.','line_number':585,'multiline':False]
['text':'So comment them to catch bad uses','line_number':586,'multiline':False]
['text':' !defined(BOOST_NO_CXX11_VARIADIC_TEMPLATES)','line_number':673,'multiline':False]
['text':'Partial specializations cannot match argument list for primary template, so add an extra argument','line_number':675,'multiline':False]
['text':'','line_number':706,'multiline':False]
['text':'If the iterator_from_iiterator is not a bidirectional iterator, operator-- should not exist','line_number':870,'multiline':False]
['text':'namespace dtl {','line_number':901,'multiline':False]
['text':'namespace container {','line_number':905,'multiline':False]
['text':'namespace boost {','line_number':906,'multiline':False]
['text':'#ifndef BOOST_CONTAINER_DETAIL_ITERATORS_HPP','line_number':910,'multiline':False]
