['text':'////////////////////////////////////////////////////////////////////////////','line_number':1,'multiline':False]
['text':'','line_number':2,'multiline':False]
['text':' (C) Copyright Ion Gaztanaga 2005-2013. Distributed under the Boost','line_number':3,'multiline':False]
['text':' Software License, Version 1.0. (See accompanying file','line_number':4,'multiline':False]
['text':' LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)','line_number':5,'multiline':False]
['text':'','line_number':6,'multiline':False]
['text':' See http://www.boost.org/libs/container for documentation.','line_number':7,'multiline':False]
['text':'','line_number':8,'multiline':False]
['text':'////////////////////////////////////////////////////////////////////////////','line_number':9,'multiline':False]
['text':' container','line_number':25,'multiline':False]
['text':' container/detail','line_number':27,'multiline':False]
['text':' intrusive','line_number':40,'multiline':False]
['text':' move','line_number':43,'multiline':False]
['text':' other','line_number':48,'multiline':False]
['text':'This trait is used to type-pun std::pair because in C++03','line_number':55,'multiline':False]
['text':'compilers std::pair is useless for C++11 features','line_number':56,'multiline':False]
['text':'defined(BOOST_NO_CXX11_VARIADIC_TEMPLATES)','line_number':100,'multiline':False]
['text':'','line_number':110,'multiline':False]
['text':' !defined(BOOST_NO_CXX11_VARIADIC_TEMPLATES)','line_number':114,'multiline':False]
['text':'NodeAlloc','line_number':198,'multiline':False]
['text':'If the intrusive container is an associative container, obtain the predicate, which will','line_number':200,'multiline':False]
['text':'be of type node_compare<>. If not an associative container val_compare will be a "nat" type.','line_number':201,'multiline':False]
['text':'In that case obtain the value predicate from the node predicate via predicate_type','line_number':205,'multiline':False]
['text':'if intrusive_val_compare is node_compare<>, nat otherwise','line_number':206,'multiline':False]
['text':'If the intrusive container is a hash container, obtain the predicate, which will','line_number':212,'multiline':False]
['text':'be of type node_compare<>. If not an associative container val_equal will be a "nat" type.','line_number':213,'multiline':False]
['text':'In that case obtain the value predicate from the node predicate via predicate_type','line_number':220,'multiline':False]
['text':'if intrusive_val_compare is node_compare<>, nat otherwise','line_number':221,'multiline':False]
['text':'Constructors for sequence containers','line_number':258,'multiline':False]
['text':'Constructors for associative containers','line_number':266,'multiline':False]
['text':'helpers for move assignments','line_number':321,'multiline':False]
['text':'defined(BOOST_NO_CXX11_VARIADIC_TEMPLATES)','line_number':373,'multiline':False]
['text':'','line_number':387,'multiline':False]
['text':' !defined(BOOST_NO_CXX11_VARIADIC_TEMPLATES)','line_number':391,'multiline':False]
['text':'Try to allocate memory in a single block','line_number':452,'multiline':False]
['text':'Increment iterator before overwriting pointed memory','line_number':468,'multiline':False]
['text':'This does not throw','line_number':469,'multiline':False]
['text':'This can throw in some containers (predicate might throw).','line_number':474,'multiline':False]
['text':'(sdestructor will destruct the node and node_deallocator will deallocate it in case of exception)','line_number':475,'multiline':False]
['text':'BOOST_STATIC_ASSERT((::boost::has_move_emulation_enabled<typename NodeAlloc::multiallocation_chain>::value == true));','line_number':499,'multiline':False]
['text':'Use get_real_data() instead of get_real_data to allow moving const key in [multi]map','line_number':548,'multiline':False]
['text':'The intrusive container','line_number':572,'multiline':False]
['text':'namespace dtl {','line_number':576,'multiline':False]
['text':'namespace container {','line_number':577,'multiline':False]
['text':'namespace boost {','line_number':578,'multiline':False]
['text':' BOOST_CONTAINER_DETAIL_NODE_ALLOC_HPP_','line_number':582,'multiline':False]
