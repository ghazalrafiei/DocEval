['text':'////////////////////////////////////////////////////////////////////////////','line_number':1,'multiline':False]
['text':'','line_number':2,'multiline':False]
['text':' (C) Copyright Ion Gaztanaga 2015-2015. Distributed under the Boost','line_number':3,'multiline':False]
['text':' Software License, Version 1.0. (See accompanying file','line_number':4,'multiline':False]
['text':' LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)','line_number':5,'multiline':False]
['text':'','line_number':6,'multiline':False]
['text':' See http://www.boost.org/libs/container for documentation.','line_number':7,'multiline':False]
['text':'','line_number':8,'multiline':False]
['text':'////////////////////////////////////////////////////////////////////////////','line_number':9,'multiline':False]
['text':'! The members of pool_options comprise a set of constructor options for pool resources.','line_number':24,'multiline':False]
['text':'! The effect of each option on the pool resource behavior is described below:','line_number':25,'multiline':False]
['text':'!','line_number':26,'multiline':False]
['text':'! - `std::size_t max_blocks_per_chunk`: The maximum number of blocks that will be allocated','line_number':27,'multiline':False]
['text':'!   at once from the upstream memory resource to replenish a pool. If the value of','line_number':28,'multiline':False]
['text':'!   `max_blocks_per_chunk` is zero or is greater than an implementation-defined limit,','line_number':29,'multiline':False]
['text':'!   that limit is used instead. The implementation may choose to use a smaller value','line_number':30,'multiline':False]
['text':'!   than is specified in this field and may use different values for different pools.','line_number':31,'multiline':False]
['text':'!','line_number':32,'multiline':False]
['text':'! - `std::size_t largest_required_pool_block`: The largest allocation size that is required','line_number':33,'multiline':False]
['text':'!   to be fulfilled using the pooling mechanism. Attempts to allocate a single block','line_number':34,'multiline':False]
['text':'!   larger than this threshold will be allocated directly from the upstream memory','line_number':35,'multiline':False]
['text':'!   resource. If largest_required_pool_block is zero or is greater than an','line_number':36,'multiline':False]
['text':'!   implementation-defined limit, that limit is used instead. The implementation may','line_number':37,'multiline':False]
['text':'!   choose a pass-through threshold larger than specified in this field.','line_number':38,'multiline':False]
['text':'namespace pmr {','line_number':48,'multiline':False]
['text':'namespace container {','line_number':49,'multiline':False]
['text':'namespace boost {','line_number':50,'multiline':False]
['text':'BOOST_CONTAINER_PMR_POOL_OPTIONS_HPP','line_number':52,'multiline':False]
