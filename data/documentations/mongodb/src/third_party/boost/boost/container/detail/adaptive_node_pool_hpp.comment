['text':'////////////////////////////////////////////////////////////////////////////','line_number':1,'multiline':False]
['text':'','line_number':2,'multiline':False]
['text':' (C) Copyright Ion Gaztanaga 2005-2013. Distributed under the Boost','line_number':3,'multiline':False]
['text':' Software License, Version 1.0. (See accompanying file','line_number':4,'multiline':False]
['text':' LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)','line_number':5,'multiline':False]
['text':'','line_number':6,'multiline':False]
['text':' See http://www.boost.org/libs/container for documentation.','line_number':7,'multiline':False]
['text':'','line_number':8,'multiline':False]
['text':'////////////////////////////////////////////////////////////////////////////','line_number':9,'multiline':False]
['text':'!Pooled memory allocator using an smart adaptive pool. Includes','line_number':42,'multiline':False]
['text':'!a reference count but the class does not delete itself, this is','line_number':43,'multiline':False]
['text':'!responsibility of user classes. Node size (NodeSize) and the number of','line_number':44,'multiline':False]
['text':'!nodes allocated per block (NodesPerBlock) are known at compile time.','line_number':45,'multiline':False]
['text':'Non-copyable','line_number':74,'multiline':False]
['text':'!Constructor. Never throws','line_number':81,'multiline':False]
['text':'!Pooled memory allocator using adaptive pool. Includes','line_number':87,'multiline':False]
['text':'!a reference count but the class does not delete itself, this is','line_number':88,'multiline':False]
['text':'!responsibility of user classes. Node size (NodeSize) and the number of','line_number':89,'multiline':False]
['text':'!nodes allocated per block (NodesPerBlock) are known at compile time','line_number':90,'multiline':False]
['text':'!Constructor. Never throws','line_number':106,'multiline':False]
['text':'!Destructor. Deallocates all allocated blocks. Never throws','line_number':110,'multiline':False]
['text':'!Allocates array of count elements. Can throw bad_alloc','line_number':114,'multiline':False]
['text':'-----------------------','line_number':117,'multiline':False]
['text':'-----------------------','line_number':119,'multiline':False]
['text':'!Deallocates an array pointed by ptr. Never throws','line_number':123,'multiline':False]
['text':'-----------------------','line_number':126,'multiline':False]
['text':'-----------------------','line_number':128,'multiline':False]
['text':'!Allocates a singly linked list of n nodes ending in null pointer.','line_number':132,'multiline':False]
['text':'!can throw bad_alloc','line_number':133,'multiline':False]
['text':'-----------------------','line_number':136,'multiline':False]
['text':'-----------------------','line_number':138,'multiline':False]
['text':'-----------------------','line_number':144,'multiline':False]
['text':'-----------------------','line_number':146,'multiline':False]
['text':'!Deallocates all the free blocks of memory. Never throws','line_number':150,'multiline':False]
['text':'-----------------------','line_number':153,'multiline':False]
['text':'-----------------------','line_number':155,'multiline':False]
['text':'namespace dtl {','line_number':163,'multiline':False]
['text':'namespace container {','line_number':164,'multiline':False]
['text':'namespace boost {','line_number':165,'multiline':False]
['text':'#ifndef BOOST_CONTAINER_DETAIL_ADAPTIVE_NODE_POOL_HPP','line_number':169,'multiline':False]
