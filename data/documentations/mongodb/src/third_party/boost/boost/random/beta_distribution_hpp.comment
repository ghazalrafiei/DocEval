['text':' boost random/beta_distribution.hpp header file
 *
 * Copyright Steven Watanabe 2014
 * Distributed under the Boost Software License, Version 1.0. (See
 * accompanying file LICENSE_1_0.txt or copy at
 * http://www.boost.org/LICENSE_1_0.txt)
 *
 * See http://www.boost.org for most recent version including documentation.
 *
 * $Id$
 ','line_number':1,'multiline':True]
['text':'*
 * The beta distribution is a real-valued distribution which produces
 * values in the range [0, 1].  It has two parameters, alpha and beta.
 *
 * It has \f$\displaystyle p(x) = \frac{x^{\alpha-1}(1-x)^{\beta-1}}{B(\alpha, \beta)}\f$.
 ','line_number':25,'multiline':True]
['text':'*
         * Constructs a @c param_type from the "alpha" and "beta" parameters
         * of the distribution.
         *
         * Requires: alpha > 0, beta > 0
         ','line_number':41,'multiline':True]
['text':'* Returns the "alpha" parameter of the distribtuion. ','line_number':55,'multiline':True]
['text':'* Returns the "beta" parameter of the distribution. ','line_number':57,'multiline':True]
['text':'* Writes a @c param_type to a @c std::ostream. ','line_number':60,'multiline':True]
['text':'* Reads a @c param_type from a @c std::istream. ','line_number':64,'multiline':True]
['text':'* Returns true if the two sets of parameters are the same. ','line_number':68,'multiline':True]
['text':'* Returns true if the two sets of parameters are the different. ','line_number':72,'multiline':True]
['text':'*
     * Constructs an @c beta_distribution from its "alpha" and "beta" parameters.
     *
     * Requires: alpha > 0, beta > 0
     ','line_number':80,'multiline':True]
['text':'* Constructs an @c beta_distribution from its parameters. ','line_number':92,'multiline':True]
['text':'*
     * Returns a random variate distributed according to the
     * beta distribution.
     ','line_number':97,'multiline':True]
['text':'*
     * Returns a random variate distributed accordint to the beta
     * distribution with parameters specified by @c param.
     ','line_number':109,'multiline':True]
['text':'* Returns the "alpha" parameter of the distribution. ','line_number':119,'multiline':True]
['text':'* Returns the "beta" parameter of the distribution. ','line_number':121,'multiline':True]
['text':'* Returns the smallest value that the distribution can produce. ','line_number':124,'multiline':True]
['text':'* Returns the largest value that the distribution can produce. ','line_number':127,'multiline':True]
['text':'* Returns the parameters of the distribution. ','line_number':131,'multiline':True]
['text':'* Sets the parameters of the distribution. ','line_number':133,'multiline':True]
['text':'*
     * Effects: Subsequent uses of the distribution do not depend
     * on values produced by any engine prior to invoking reset.
     ','line_number':140,'multiline':True]
['text':'* Writes an @c beta_distribution to a @c std::ostream. ','line_number':146,'multiline':True]
['text':'* Reads an @c beta_distribution from a @c std::istream. ','line_number':153,'multiline':True]
['text':'*
     * Returns true if the two instances of @c beta_distribution will
     * return identical sequences of values given equal generators.
     ','line_number':163,'multiline':True]
['text':'*
     * Returns true if the two instances of @c beta_distribution will
     * return different sequences of values given equal generators.
     ','line_number':170,'multiline':True]
['text':' namespace random','line_number':181,'multiline':False]
['text':' namespace boost','line_number':182,'multiline':False]
['text':' BOOST_RANDOM_BETA_DISTRIBUTION_HPP','line_number':184,'multiline':False]
