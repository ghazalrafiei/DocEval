['text':' boost random/student_t_distribution.hpp header file
 *
 * Copyright Steven Watanabe 2011
 * Distributed under the Boost Software License, Version 1.0. (See
 * accompanying file LICENSE_1_0.txt or copy at
 * http://www.boost.org/LICENSE_1_0.txt)
 *
 * See http://www.boost.org for most recent version including documentation.
 *
 * $Id$
 ','line_number':1,'multiline':True]
['text':'*
 * The Student t distribution is a real valued distribution with one
 * parameter n, the number of degrees of freedom.
 *
 * It has \f$\displaystyle p(x) =
 *   \frac{1}{\sqrt{n\pi}}
 *   \frac{\Gamma((n+1)/2)}{\Gamma(n/2)}
 *   \left(1+\frac{x^2}{n}\right)^{-(n+1)/2}
 * \f$.
 ','line_number':27,'multiline':True]
['text':'*
         * Constructs a @c param_type with "n" degrees of freedom.
         *
         * Requires: n > 0
         ','line_number':47,'multiline':True]
['text':'* Returns the number of degrees of freedom of the distribution. ','line_number':56,'multiline':True]
['text':'* Writes a @c param_type to a @c std::ostream. ','line_number':59,'multiline':True]
['text':'* Reads a @c param_type from a @c std::istream. ','line_number':63,'multiline':True]
['text':'* Returns true if the two sets of parameters are the same. ','line_number':67,'multiline':True]
['text':'* Returns true if the two sets of parameters are the different. ','line_number':71,'multiline':True]
['text':'*
     * Constructs an @c student_t_distribution with "n" degrees of freedom.
     *
     * Requires: n > 0
     ','line_number':78,'multiline':True]
['text':'* Constructs an @c student_t_distribution from its parameters. ','line_number':86,'multiline':True]
['text':'*
     * Returns a random variate distributed according to the
     * Student t distribution.
     ','line_number':91,'multiline':True]
['text':'*
     * Returns a random variate distributed accordint to the Student
     * t distribution with parameters specified by @c param.
     ','line_number':102,'multiline':True]
['text':'* Returns the number of degrees of freedom. ','line_number':112,'multiline':True]
['text':'* Returns the smallest value that the distribution can produce. ','line_number':115,'multiline':True]
['text':'* Returns the largest value that the distribution can produce. ','line_number':118,'multiline':True]
['text':'* Returns the parameters of the distribution. ','line_number':122,'multiline':True]
['text':'* Sets the parameters of the distribution. ','line_number':124,'multiline':True]
['text':'*
     * Effects: Subsequent uses of the distribution do not depend
     * on values produced by any engine prior to invoking reset.
     ','line_number':132,'multiline':True]
['text':'* Writes a @c student_t_distribution to a @c std::ostream. ','line_number':142,'multiline':True]
['text':'* Reads a @c student_t_distribution from a @c std::istream. ','line_number':149,'multiline':True]
['text':'*
     * Returns true if the two instances of @c student_t_distribution will
     * return identical sequences of values given equal generators.
     ','line_number':159,'multiline':True]
['text':'*
     * Returns true if the two instances of @c student_t_distribution will
     * return different sequences of values given equal generators.
     ','line_number':166,'multiline':True]
['text':' namespace random','line_number':177,'multiline':False]
['text':' namespace boost','line_number':178,'multiline':False]
['text':' BOOST_RANDOM_STUDENT_T_DISTRIBUTION_HPP','line_number':180,'multiline':False]
