['text':' boost random/linear_feedback_shift.hpp header file
 *
 * Copyright Jens Maurer 2002
 * Copyright Steven Watanabe 2011
 * Distributed under the Boost Software License, Version 1.0. (See
 * accompanying file LICENSE_1_0.txt or copy at
 * http://www.boost.org/LICENSE_1_0.txt)
 *
 * See http://www.boost.org for most recent version including documentation.
 *
 * $Id$
 *
 ','line_number':1,'multiline':True]
['text':'*
 * Instatiations of @c linear_feedback_shift model a
 * \pseudo_random_number_generator.  It was originally
 * proposed in
 *
 *  @blockquote
 *  "Random numbers generated by linear recurrence modulo two.",
 *  Tausworthe, R. C.(1965), Mathematics of Computation 19, 201-209.
 *  @endblockquote
 ','line_number':32,'multiline':True]
['text':'* Returns the smallest value that the generator can produce. ','line_number':54,'multiline':True]
['text':'* Returns the largest value that the generator can produce. ','line_number':56,'multiline':True]
['text':'* Constructs a @c linear_feedback_shift_engine, using the default seed. ','line_number':66,'multiline':True]
['text':'* Constructs a @c linear_feedback_shift_engine, seeding it with s0. ','line_number':69,'multiline':True]
['text':'* Constructs a @c linear_feedback_shift_engine, seeding it with seq. ','line_number':74,'multiline':True]
['text':'*
     * Constructs a @c linear_feedback_shift_engine, seeding it with 
     * values from the range [first, last).
     ','line_number':79,'multiline':True]
['text':'* Seeds a @c linear_feedback_shift_engine with the default seed. ','line_number':86,'multiline':True]
['text':'* Seeds a @c linear_feedback_shift_engine with @c s0. ','line_number':89,'multiline':True]
['text':'*
     * Seeds a @c linear_feedback_shift_engine with values
     * produced by @c seq.generate().
     ','line_number':99,'multiline':True]
['text':'*
     * Seeds a @c linear_feedback_shift_engine with values
     * from the range [first, last).
     ','line_number':107,'multiline':True]
['text':'* Returns the next value of the generator. ','line_number':116,'multiline':True]
['text':'* Fills a range with random values ','line_number':125,'multiline':True]
['text':'* Advances the state of the generator by @c z. ','line_number':130,'multiline':True]
['text':'*
     * Writes the textual representation of the generator to a @c std::ostream.
     ','line_number':138,'multiline':True]
['text':'*
     * Reads the textual representation of the generator from a @c std::istream.
     ','line_number':147,'multiline':True]
['text':'*
     * Returns true if the two generators will produce identical
     * sequences of outputs.
     ','line_number':156,'multiline':True]
['text':'*
     * Returns true if the two generators will produce different
     * sequences of outputs.
     ','line_number':163,'multiline':True]
['text':'/ \cond show_private','line_number':170,'multiline':False]
['text':'/ \endcond','line_number':172,'multiline':False]
['text':'  A definition is required even for integral static constants','line_number':177,'multiline':False]
['text':'/ \cond show_deprecated','line_number':192,'multiline':False]
['text':'* Provided for backwards compatibility. ','line_number':194,'multiline':True]
['text':'/ \endcond','line_number':212,'multiline':False]
['text':' namespace random','line_number':214,'multiline':False]
['text':' namespace boost','line_number':215,'multiline':False]
['text':' BOOST_RANDOM_LINEAR_FEEDBACK_SHIFT_HPP','line_number':217,'multiline':False]
