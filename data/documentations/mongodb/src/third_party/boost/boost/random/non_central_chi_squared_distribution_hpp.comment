['text':' boost random/non_central_chi_squared_distribution.hpp header file
 *
 * Copyright Thijs van den Berg 2014
 * 
 * Distributed under the Boost Software License, Version 1.0. (See
 * accompanying file LICENSE_1_0.txt or copy at
 * http://www.boost.org/LICENSE_1_0.txt)
 *
 * See http://www.boost.org for most recent version including documentation.
 *
 * $Id$
 ','line_number':1,'multiline':True]
['text':'*
 * The noncentral chi-squared distribution is a real valued distribution with
 * two parameter, @c k and @c lambda.  The distribution produces values > 0.
 *
 * This is the distribution of the sum of squares of k Normal distributed
 * variates each with variance one and \f$\lambda\f$ the sum of squares of the
 * normal means.
 *
 * The distribution function is
 * \f$\displaystyle P(x) = \frac{1}{2} e^{-(x+\lambda)/2} \left( \frac{x}{\lambda} \right)^{k/4-1/2} I_{k/2-1}( \sqrt{\lambda x} )\f$.
 *  where  \f$\displaystyle I_\nu(z)\f$ is a modified Bessel function of the
 * first kind.
 *
 * The algorithm is taken from
 *
 *  @blockquote
 *  "Monte Carlo Methods in Financial Engineering", Paul Glasserman,
 *  2003, XIII, 596 p, Stochastic Modelling and Applied Probability, Vol. 53,
 *  ISBN 978-0-387-21617-1, p 124, Fig. 3.5.
 *  @endblockquote
 ','line_number':31,'multiline':True]
['text':'*
         * Constructs the parameters of a non_central_chi_squared_distribution.
         * @c k and @c lambda are the parameter of the distribution.
         *
         * Requires: k > 0 && lambda > 0
         ','line_number':62,'multiline':True]
['text':'* Returns the @c k parameter of the distribution ','line_number':76,'multiline':True]
['text':'* Returns the @c lambda parameter of the distribution ','line_number':79,'multiline':True]
['text':'* Writes the parameters of the distribution to a @c std::ostream. ','line_number':82,'multiline':True]
['text':'* Reads the parameters of the distribution from a @c std::istream. ','line_number':89,'multiline':True]
['text':'* Returns true if the parameters have the same values. ','line_number':96,'multiline':True]
['text':'* Returns true if the parameters have different values. ','line_number':100,'multiline':True]
['text':'*
     * Construct a @c non_central_chi_squared_distribution object. @c k and
     * @c lambda are the parameter of the distribution.
     *
     * Requires: k > 0 && lambda > 0
     ','line_number':108,'multiline':True]
['text':'*
     * Construct a @c non_central_chi_squared_distribution object from the parameter.
     ','line_number':122,'multiline':True]
['text':'*
     * Returns a random variate distributed according to the
     * non central chi squared distribution specified by @c param.
     ','line_number':130,'multiline':True]
['text':'*
     * Returns a random variate distributed according to the
     * non central chi squared distribution.
     ','line_number':138,'multiline':True]
['text':'* Returns the @c k parameter of the distribution. ','line_number':162,'multiline':True]
['text':'* Returns the @c lambda parameter of the distribution. ','line_number':165,'multiline':True]
['text':'* Returns the parameters of the distribution. ','line_number':168,'multiline':True]
['text':'* Sets parameters of the distribution. ','line_number':171,'multiline':True]
['text':'* Resets the distribution, so that subsequent uses does not depend on values already produced by it.','line_number':174,'multiline':True]
['text':'* Returns the smallest value that the distribution can produce. ','line_number':177,'multiline':True]
['text':'* Returns the largest value that the distribution can produce. ','line_number':181,'multiline':True]
['text':'* Writes the parameters of the distribution to a @c std::ostream. ','line_number':185,'multiline':True]
['text':'* reads the parameters of the distribution from a @c std::istream. ','line_number':192,'multiline':True]
['text':'* Returns true if two distributions have the same parameters and produce 
        the same sequence of random numbers given equal generators.','line_number':202,'multiline':True]
['text':'* Returns true if two distributions have different parameters and/or can produce 
       different sequences of random numbers given equal generators.','line_number':207,'multiline':True]
['text':'/ @cond show_private','line_number':213,'multiline':False]
['text':'/ @endcond','line_number':215,'multiline':False]
['text':' namespace random','line_number':218,'multiline':False]
['text':' namespace boost','line_number':219,'multiline':False]
