['text':' boost random/fisher_f_distribution.hpp header file
 *
 * Copyright Steven Watanabe 2011
 * Distributed under the Boost Software License, Version 1.0. (See
 * accompanying file LICENSE_1_0.txt or copy at
 * http://www.boost.org/LICENSE_1_0.txt)
 *
 * See http://www.boost.org for most recent version including documentation.
 *
 * $Id$
 ','line_number':1,'multiline':True]
['text':'*
 * The Fisher F distribution is a real valued distribution with two
 * parameters m and n.
 *
 * It has \f$\displaystyle p(x) =
 *   \frac{\Gamma((m+n)/2)}{\Gamma(m/2)\Gamma(n/2)}
 *   \left(\frac{m}{n}\right)^{m/2}
 *   x^{(m/2)-1} \left(1+\frac{mx}{n}\right)^{-(m+n)/2}
 * \f$.
 ','line_number':26,'multiline':True]
['text':'*
         * Constructs a @c param_type from the "m" and "n" parameters
         * of the distribution.
         *
         * Requires: m > 0 and n > 0
         ','line_number':46,'multiline':True]
['text':'* Returns the "m" parameter of the distribtuion. ','line_number':57,'multiline':True]
['text':'* Returns the "n" parameter of the distribution. ','line_number':59,'multiline':True]
['text':'* Writes a @c param_type to a @c std::ostream. ','line_number':62,'multiline':True]
['text':'* Reads a @c param_type from a @c std::istream. ','line_number':66,'multiline':True]
['text':'* Returns true if the two sets of parameters are the same. ','line_number':70,'multiline':True]
['text':'* Returns true if the two sets of parameters are the different. ','line_number':74,'multiline':True]
['text':'*
     * Constructs a @c fisher_f_distribution from its "m" and "n" parameters.
     *
     * Requires: m > 0 and n > 0
     ','line_number':82,'multiline':True]
['text':'* Constructs an @c fisher_f_distribution from its parameters. ','line_number':91,'multiline':True]
['text':'*
     * Returns a random variate distributed according to the
     * F distribution.
     ','line_number':96,'multiline':True]
['text':'*
     * Returns a random variate distributed according to the
     * F distribution with parameters specified by @c param.
     ','line_number':106,'multiline':True]
['text':'* Returns the "m" parameter of the distribution. ','line_number':116,'multiline':True]
['text':'* Returns the "n" parameter of the distribution. ','line_number':118,'multiline':True]
['text':'* Returns the smallest value that the distribution can produce. ','line_number':121,'multiline':True]
['text':'* Returns the largest value that the distribution can produce. ','line_number':123,'multiline':True]
['text':'* Returns the parameters of the distribution. ','line_number':127,'multiline':True]
['text':'* Sets the parameters of the distribution. ','line_number':129,'multiline':True]
['text':'*
     * Effects: Subsequent uses of the distribution do not depend
     * on values produced by any engine prior to invoking reset.
     ','line_number':139,'multiline':True]
['text':'* Writes an @c fisher_f_distribution to a @c std::ostream. ','line_number':145,'multiline':True]
['text':'* Reads an @c fisher_f_distribution from a @c std::istream. ','line_number':152,'multiline':True]
['text':'*
     * Returns true if the two instances of @c fisher_f_distribution will
     * return identical sequences of values given equal generators.
     ','line_number':162,'multiline':True]
['text':'*
     * Returns true if the two instances of @c fisher_f_distribution will
     * return different sequences of values given equal generators.
     ','line_number':169,'multiline':True]
['text':' namespace random','line_number':180,'multiline':False]
['text':' namespace boost','line_number':181,'multiline':False]
['text':' BOOST_RANDOM_EXTREME_VALUE_DISTRIBUTION_HPP','line_number':183,'multiline':False]
