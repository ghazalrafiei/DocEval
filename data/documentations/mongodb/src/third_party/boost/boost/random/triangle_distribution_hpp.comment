['text':' boost random/triangle_distribution.hpp header file
 *
 * Copyright Jens Maurer 2000-2001
 * Copyright Steven Watanabe 2011
 * Distributed under the Boost Software License, Version 1.0. (See
 * accompanying file LICENSE_1_0.txt or copy at
 * http://www.boost.org/LICENSE_1_0.txt)
 *
 * See http://www.boost.org for most recent version including documentation.
 *
 * $Id$
 *
 * Revision history
 *  2001-02-18  moved to individual header files
 ','line_number':1,'multiline':True]
['text':'*
 * Instantiations of @c triangle_distribution model a \random_distribution.
 * A @c triangle_distribution has three parameters, @c a, @c b, and @c c,
 * which are the smallest, the most probable and the largest values of
 * the distribution respectively.
 ','line_number':32,'multiline':True]
['text':'* Constructs the parameters of a @c triangle_distribution. ','line_number':51,'multiline':True]
['text':'* Returns the minimum value of the distribution. ','line_number':60,'multiline':True]
['text':'* Returns the mode of the distribution. ','line_number':62,'multiline':True]
['text':'* Returns the maximum value of the distribution. ','line_number':64,'multiline':True]
['text':'* Writes the parameters to a @c std::ostream. ','line_number':67,'multiline':True]
['text':'* Reads the parameters from a @c std::istream. ','line_number':74,'multiline':True]
['text':'* Returns true if the two sets of parameters are equal. ','line_number':90,'multiline':True]
['text':'* Returns true if the two sets of parameters are different. ','line_number':94,'multiline':True]
['text':'*
     * Constructs a @c triangle_distribution with the parameters
     * @c a, @c b, and @c c.
     *
     * Preconditions: a <= b <= c.
     ','line_number':103,'multiline':True]
['text':'* Constructs a @c triangle_distribution from its parameters. ','line_number':118,'multiline':True]
['text':' compiler-generated copy ctor and assignment operator are fine','line_number':125,'multiline':False]
['text':'* Returns the @c a parameter of the distribution ','line_number':127,'multiline':True]
['text':'* Returns the @c b parameter of the distribution ','line_number':129,'multiline':True]
['text':'* Returns the @c c parameter of the distribution ','line_number':131,'multiline':True]
['text':'* Returns the smallest value that the distribution can produce. ','line_number':134,'multiline':True]
['text':'* Returns the largest value that the distribution can produce. ','line_number':136,'multiline':True]
['text':'* Returns the parameters of the distribution. ','line_number':139,'multiline':True]
['text':'* Sets the parameters of the distribution. ','line_number':141,'multiline':True]
['text':'*
     * Effects: Subsequent uses of the distribution do not depend
     * on values produced by any engine prior to invoking reset.
     ','line_number':150,'multiline':True]
['text':'*
     * Returns a random variate distributed according to the
     * triangle distribution.
     ','line_number':156,'multiline':True]
['text':'*
     * Returns a random variate distributed according to the
     * triangle distribution with parameters specified by param.
     ','line_number':171,'multiline':True]
['text':'* Writes the distribution to a @c std::ostream. ','line_number':179,'multiline':True]
['text':'* Reads the distribution from a @c std::istream. ','line_number':186,'multiline':True]
['text':'*
     * Returns true if the two distributions will produce identical
     * sequences of values given equal generators.
     ','line_number':196,'multiline':True]
['text':'*
     * Returns true if the two distributions may produce different
     * sequences of values given equal generators.
     ','line_number':203,'multiline':True]
['text':'/ \cond show_private','line_number':210,'multiline':False]
['text':'/ \endcond','line_number':220,'multiline':False]
['text':' namespace random','line_number':226,'multiline':False]
['text':' namespace boost','line_number':230,'multiline':False]
['text':' BOOST_RANDOM_TRIANGLE_DISTRIBUTION_HPP','line_number':232,'multiline':False]
