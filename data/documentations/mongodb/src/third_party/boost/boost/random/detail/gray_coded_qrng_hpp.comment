['text':' boost random/detail/gray_coded_qrng.hpp header file
 *
 * Copyright Justinas Vygintas Daugmaudis 2010-2018
 * Distributed under the Boost Software License, Version 1.0. (See
 * accompanying file LICENSE_1_0.txt or copy at
 * http://www.boost.org/LICENSE_1_0.txt)
 ','line_number':1,'multiline':True]
['text':' lsb','line_number':14,'multiline':False]
['text':' bit_xor','line_number':18,'multiline':False]
['text':'!\file','line_number':25,'multiline':False]
['text':'!Describes the gray-coded quasi-random number generator base class template.','line_number':26,'multiline':False]
['text':' The base needs to access modifying member f-ns, and we','line_number':69,'multiline':False]
['text':' don't want these functions to be available for the public use','line_number':70,'multiline':False]
['text':' Respect lattice bit_count here','line_number':73,'multiline':False]
['text':' We only want to check whether bit pos is outside the range if given bit_count','line_number':92,'multiline':False]
['text':' is narrower than the size_type, otherwise checks compile to nothing.','line_number':93,'multiline':False]
['text':'!Returns: Tight lower bound on the set of values returned by operator().','line_number':103,'multiline':False]
['text':'!','line_number':104,'multiline':False]
['text':'!Throws: nothing.','line_number':105,'multiline':False]
['text':'!Returns: Tight upper bound on the set of values returned by operator().','line_number':109,'multiline':False]
['text':'!','line_number':110,'multiline':False]
['text':'!Throws: nothing.','line_number':111,'multiline':False]
['text':' default copy c-tor is fine','line_number':119,'multiline':False]
['text':' default assignment operator is fine','line_number':121,'multiline':False]
['text':' We don't want negative seeds.','line_number':134,'multiline':False]
['text':' Fail if we see that seq_code is outside bit range.','line_number':142,'multiline':False]
['text':' We do that before we even touch engine state.','line_number':143,'multiline':False]
['text':' Everything went well, set the new seq count','line_number':153,'multiline':False]
['text':' Find the position of the least-significant zero in sequence count.','line_number':161,'multiline':False]
['text':' This is the bit that changes in the Gray-code representation as','line_number':162,'multiline':False]
['text':' the count is advanced.','line_number':163,'multiline':False]
['text':' Xor'ing with max() has the effect of flipping all the bits in seq,','line_number':164,'multiline':False]
['text':' except for the sign bit.','line_number':165,'multiline':False]
['text':' Calculate the next state.','line_number':173,'multiline':False]
['text':'zero','line_number':181,'multiline':True]
['text':' namespace qrng_detail','line_number':185,'multiline':False]
['text':' namespace random','line_number':187,'multiline':False]
['text':' namespace boost','line_number':188,'multiline':False]
['text':' BOOST_RANDOM_DETAIL_GRAY_CODED_QRNG_HPP','line_number':190,'multiline':False]
