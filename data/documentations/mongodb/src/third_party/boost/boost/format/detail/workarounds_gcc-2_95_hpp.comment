['text':' ----------------------------------------------------------------------------','line_number':1,'multiline':False]
['text':'  workarounds for gcc < 3.0. ','line_number':2,'multiline':False]
['text':' ----------------------------------------------------------------------------','line_number':3,'multiline':False]
['text':'  Copyright Samuel Krempp 2003. Use, modification, and distribution are','line_number':5,'multiline':False]
['text':'  subject to the Boost Software License, Version 1.0. (See accompanying','line_number':6,'multiline':False]
['text':'  file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)','line_number':7,'multiline':False]
['text':'  See http://www.boost.org/libs/format for library home page','line_number':9,'multiline':False]
['text':' ----------------------------------------------------------------------------','line_number':12,'multiline':False]
['text':' There's a lot to do, the stdlib shipped with gcc prior to 3.x ','line_number':14,'multiline':False]
['text':' was terribly non-conforming. ','line_number':15,'multiline':False]
['text':' . defines macros switches','line_number':16,'multiline':False]
['text':' . supplies template classes basic_foo<char,Tr> where gcc only supplies foo.','line_number':17,'multiline':False]
['text':'  i.e :','line_number':18,'multiline':False]
['text':'     -  basic_ios<char, Tr>        from ios','line_number':19,'multiline':False]
['text':'     -  basic_ostream<char, Tr>    from ostream','line_number':20,'multiline':False]
['text':'     -  basic_srteambuf<char, Tr>  from streambuf','line_number':21,'multiline':False]
['text':' these can be used transparently. (it obviously does not work for wchar_t)','line_number':22,'multiline':False]
['text':' . specialise CompatAlloc and CompatTraits to wrap gcc-2.95's ','line_number':23,'multiline':False]
['text':'    string_char_traits and std::alloc ','line_number':24,'multiline':False]
['text':' only for gcc-2.95's native stdlib','line_number':27,'multiline':False]
['text':' SGI STL doesnt have <ostream> and others, so we need iostream.','line_number':32,'multiline':False]
['text':' *** ','line_number':47,'multiline':False]
['text':' gcc's simple classes turned into standard-like template classes :','line_number':48,'multiline':False]
['text':' gcc has string_char_traits, it's incomplete.','line_number':53,'multiline':False]
['text':' we declare a std::char_traits, and specialize CompatTraits<..> on it','line_number':54,'multiline':False]
['text':' to do what is required','line_number':55,'multiline':False]
['text':' no definition here, we will just use it as a tag.','line_number':57,'multiline':False]
['text':' gcc returns wchar..','line_number':73,'multiline':False]
['text':' gcc takes wchar..','line_number':74,'multiline':False]
['text':' namespace std','line_number':100,'multiline':False]
['text':' ** CompatTraits gcc2.95 specialisations ----------------------------','line_number':107,'multiline':False]
['text':' ** CompatAlloc gcc-2.95  specialisations ---------------------------','line_number':145,'multiline':False]
['text':' N.S. io','line_number':153,'multiline':False]
['text':' N.S. boost','line_number':154,'multiline':False]
['text':' include guard','line_number':160,'multiline':False]
['text':' if workaround','line_number':162,'multiline':False]
