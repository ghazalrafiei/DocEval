['text':'
 *
 * Copyright (c) 1998-2004 John Maddock
 * Copyright 2011 Garmin Ltd. or its subsidiaries
 *
 * Distributed under the Boost Software License, Version 1.0.
 * (See accompanying file LICENSE_1_0.txt or copy at
 * http://www.boost.org/LICENSE_1_0.txt)
 *
 ','line_number':1,'multiline':True]
['text':'
  *   LOCATION:    see http://www.boost.org/ for most recent version.
  *   FILE         basic_regex.cpp
  *   VERSION      see <boost/version.hpp>
  *   DESCRIPTION: Declares template class basic_regex.
  ','line_number':12,'multiline':True]
['text':'','line_number':53,'multiline':False]
['text':' forward declaration, we will need this one later:','line_number':54,'multiline':False]
['text':'','line_number':55,'multiline':False]
['text':'','line_number':162,'multiline':False]
['text':' class regex_data:','line_number':163,'multiline':False]
['text':' represents the data we wish to expose to the matching algorithms.','line_number':164,'multiline':False]
['text':'','line_number':165,'multiline':False]
['text':' traits class instance','line_number':190,'multiline':False]
['text':' flags with which we were compiled','line_number':191,'multiline':False]
['text':' error code (0 implies OK).','line_number':192,'multiline':False]
['text':' the original expression','line_number':193,'multiline':False]
['text':' the length of the original expression','line_number':194,'multiline':False]
['text':' the number of marked sub-expressions','line_number':195,'multiline':False]
['text':' the first state of the machine','line_number':196,'multiline':False]
['text':' search optimisation type','line_number':197,'multiline':False]
['text':' which characters can start a match','line_number':198,'multiline':False]
['text':' whether we can match a null string','line_number':199,'multiline':False]
['text':' the buffer in which our states are constructed','line_number':200,'multiline':False]
['text':' mask used to determine if a character is a word character','line_number':201,'multiline':False]
['text':' Position of sub-expressions within the *string*.','line_number':204,'multiline':False]
['text':' whether we have recursive expressions;','line_number':205,'multiline':False]
['text':' when set we need to disable the match_any flag as it causes different/buggy behaviour.','line_number':206,'multiline':False]
['text':'','line_number':208,'multiline':False]
['text':' class basic_regex_implementation','line_number':209,'multiline':False]
['text':' pimpl implementation class for basic_regex.','line_number':210,'multiline':False]
['text':'','line_number':211,'multiline':False]
['text':'','line_number':261,'multiline':False]
['text':' begin, end:','line_number':262,'multiline':False]
['text':' namespace BOOST_REGEX_DETAIL_NS','line_number':314,'multiline':False]
['text':'','line_number':315,'multiline':False]
['text':' class basic_regex:','line_number':316,'multiline':False]
['text':' represents the compiled','line_number':317,'multiline':False]
['text':' regular expression:','line_number':318,'multiline':False]
['text':'','line_number':319,'multiline':False]
['text':' typedefs:','line_number':329,'multiline':False]
['text':' locale_type','line_number':343,'multiline':False]
['text':' placeholder for actual locale type used by the','line_number':344,'multiline':False]
['text':' traits class to localise *this.','line_number':345,'multiline':False]
['text':'','line_number':374,'multiline':False]
['text':' assign:','line_number':375,'multiline':False]
['text':'','line_number':479,'multiline':False]
['text':' locale:','line_number':480,'multiline':False]
['text':'','line_number':486,'multiline':False]
['text':' getflags:','line_number':487,'multiline':False]
['text':' retained for backwards compatibility only, "flags"','line_number':488,'multiline':False]
['text':' is now the preferred name:','line_number':489,'multiline':False]
['text':'','line_number':498,'multiline':False]
['text':' str:','line_number':499,'multiline':False]
['text':'','line_number':504,'multiline':False]
['text':' begin, end, subexpression:','line_number':505,'multiline':False]
['text':'','line_number':520,'multiline':False]
['text':' swap:','line_number':521,'multiline':False]
['text':'','line_number':526,'multiline':False]
['text':' size:','line_number':527,'multiline':False]
['text':'','line_number':532,'multiline':False]
['text':' max_size:','line_number':533,'multiline':False]
['text':'','line_number':538,'multiline':False]
['text':' empty:','line_number':539,'multiline':False]
['text':'','line_number':594,'multiline':False]
['text':' The following are deprecated as public interfaces','line_number':595,'multiline':False]
['text':' but are available for compatibility with earlier versions.','line_number':596,'multiline':False]
['text':'','line_number':615,'multiline':False]
['text':' private access methods:','line_number':616,'multiline':False]
['text':'','line_number':617,'multiline':False]
['text':'','line_number':657,'multiline':False]
['text':' out of line members;','line_number':658,'multiline':False]
['text':' these are the only members that mutate the basic_regex object,','line_number':659,'multiline':False]
['text':' and are designed to provide the strong exception guarantee','line_number':660,'multiline':False]
['text':' (in the event of a throw, the state of the object remains unchanged).','line_number':661,'multiline':False]
['text':'','line_number':662,'multiline':False]
['text':'','line_number':691,'multiline':False]
['text':' non-members:','line_number':692,'multiline':False]
['text':'','line_number':693,'multiline':False]
['text':'','line_number':716,'multiline':False]
['text':' class reg_expression:','line_number':717,'multiline':False]
['text':' this is provided for backwards compatibility only,','line_number':718,'multiline':False]
['text':' it is deprecated, no not use!','line_number':719,'multiline':False]
['text':'','line_number':720,'multiline':False]
['text':' namespace boost','line_number':784,'multiline':False]
