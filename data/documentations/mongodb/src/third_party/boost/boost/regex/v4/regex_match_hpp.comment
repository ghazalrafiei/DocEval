['text':'
 *
 * Copyright (c) 1998-2002
 * John Maddock
 *
 * Use, modification and distribution are subject to the 
 * Boost Software License, Version 1.0. (See accompanying file 
 * LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
 *
 ','line_number':1,'multiline':True]
['text':'
  *   LOCATION:    see http://www.boost.org for most recent version.
  *   FILE         regex_match.hpp
  *   VERSION      see <boost/version.hpp>
  *   DESCRIPTION: Regular expression matching algorithms.
  *                Note this is an internal header file included
  *                by regex.hpp, do not include on its own.
  ','line_number':12,'multiline':True]
['text':'','line_number':38,'multiline':False]
['text':' proc regex_match','line_number':39,'multiline':False]
['text':' returns true if the specified regular expression matches','line_number':40,'multiline':False]
['text':' the whole of the input.  Fills in what matched in m.','line_number':41,'multiline':False]
['text':'','line_number':42,'multiline':False]
['text':'','line_number':60,'multiline':False]
['text':' query_match convenience interfaces:','line_number':61,'multiline':False]
['text':'','line_number':63,'multiline':False]
['text':' this isn't really a partial specialisation, but template function','line_number':64,'multiline':False]
['text':' overloading - if the compiler doesn't support partial specialisation','line_number':65,'multiline':False]
['text':' then it really won't support this either:','line_number':66,'multiline':False]
['text':' partial ordering','line_number':102,'multiline':False]
['text':' namespace boost','line_number':362,'multiline':False]
['text':' BOOST_REGEX_MATCH_HPP','line_number':364,'multiline':False]
