['text':'
 *
 * Copyright (c) 2002
 * John Maddock
 *
 * Use, modification and distribution are subject to the 
 * Boost Software License, Version 1.0. (See accompanying file 
 * LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
 *
 ','line_number':1,'multiline':True]
['text':'','line_number':34,'multiline':False]
['text':' error checking API:','line_number':35,'multiline':False]
['text':'','line_number':36,'multiline':False]
['text':'','line_number':39,'multiline':False]
['text':' can't mix match_extra with POSIX matching rules:','line_number':40,'multiline':False]
['text':'','line_number':41,'multiline':False]
['text':'','line_number':52,'multiline':False]
['text':' function can_start:','line_number':53,'multiline':False]
['text':'','line_number':54,'multiline':False]
['text':'bool icase = e.m_flags & regex_constants::icase;','line_number':127,'multiline':False]
['text':' dwa 9/13/00 suppress incorrect MSVC warning - it claims this is never','line_number':134,'multiline':False]
['text':' referenced','line_number':135,'multiline':False]
['text':' try and match a single character, could be a multi-character','line_number':138,'multiline':False]
['text':' collating element...','line_number':139,'multiline':False]
['text':' treat null string as special case:','line_number':145,'multiline':False]
['text':' if null we've matched','line_number':163,'multiline':False]
['text':' skip null','line_number':166,'multiline':False]
['text':'','line_number':176,'multiline':False]
['text':' try and match a range, NB only a single character can match','line_number':177,'multiline':False]
['text':' skip first string','line_number':198,'multiline':False]
['text':' skip second string','line_number':202,'multiline':False]
['text':'','line_number':207,'multiline':False]
['text':' try and match an equivalence class, NB only a single character can match','line_number':208,'multiline':False]
['text':' skip string','line_number':217,'multiline':False]
['text':' the number of iterations so far','line_number':236,'multiline':False]
['text':' where the last repeat started','line_number':237,'multiline':False]
['text':' this is called when we are about to start a new repeat,','line_number':291,'multiline':False]
['text':' if the last one was NULL move our count to max,','line_number':292,'multiline':False]
['text':' otherwise save the current position.','line_number':293,'multiline':False]
['text':' match procs, stored in s_match_vtable:','line_number':388,'multiline':False]
['text':' find procs stored in s_find_vtable:','line_number':430,'multiline':False]
['text':' final result structure to be filled in:','line_number':438,'multiline':False]
['text':' temporary result for POSIX matches:','line_number':440,'multiline':False]
['text':' pointer to actual result structure to fill in:','line_number':442,'multiline':False]
['text':' start of sequence being searched:','line_number':444,'multiline':False]
['text':' end of sequence being searched:','line_number':446,'multiline':False]
['text':' current character being examined:','line_number':448,'multiline':False]
['text':' where to restart next search after failed match attempt:','line_number':450,'multiline':False]
['text':' where the current search started from, acts as base for $` during grep:','line_number':452,'multiline':False]
['text':' how far we can go back when matching lookbehind:','line_number':454,'multiline':False]
['text':' the expression being examined:','line_number':456,'multiline':False]
['text':' the expression's traits class:','line_number':458,'multiline':False]
['text':' the next state in the machine being matched:','line_number':460,'multiline':False]
['text':' matching flags in use:','line_number':462,'multiline':False]
['text':' how many states we have examined so far:','line_number':464,'multiline':False]
['text':' max number of states to examine before giving up:','line_number':466,'multiline':False]
['text':' whether we should ignore case or not:','line_number':468,'multiline':False]
['text':' set to true when (position == last), indicates that we may have a partial match:','line_number':470,'multiline':False]
['text':' set to true whenever we get a match:','line_number':472,'multiline':False]
['text':' set to true whenever we're inside an independent sub-expression:','line_number':474,'multiline':False]
['text':' the current repeat being examined:','line_number':476,'multiline':False]
['text':' the first repeat being examined (top of linked list):','line_number':478,'multiline':False]
['text':' the mask to pass when matching word boundaries:','line_number':480,'multiline':False]
['text':' the bitmask to use when determining whether a match_any matches a newline or not:','line_number':482,'multiline':False]
['text':' recursion information:','line_number':484,'multiline':False]
['text':'','line_number':486,'multiline':False]
['text':' additional members for non-recursive version:','line_number':487,'multiline':False]
['text':'','line_number':488,'multiline':False]
['text':' pointer to base of stack:','line_number':524,'multiline':False]
['text':' pointer to current stack position:','line_number':526,'multiline':False]
['text':' how many memory blocks have we used up?:','line_number':528,'multiline':False]
['text':' determines what value to return when unwinding from recursion,','line_number':530,'multiline':False]
['text':' allows for mixed recursive/non-recursive algorithm:','line_number':531,'multiline':False]
['text':' We have unwound to a lookahead/lookbehind, used by COMMIT/PRUNE/SKIP:','line_number':533,'multiline':False]
['text':' We have unwound to an alternative, used by THEN:','line_number':535,'multiline':False]
['text':' We are unwinding a commit - used by independent subs to determine whether to stop there or carry on unwinding:','line_number':537,'multiline':False]
['text':'bool m_unwind_commit;','line_number':538,'multiline':False]
['text':' Recursion limit:','line_number':539,'multiline':False]
['text':' these operations aren't allowed, so are declared private,','line_number':548,'multiline':False]
['text':' bodies are provided to keep explicit-instantiation requests happy:','line_number':549,'multiline':False]
['text':' namespace BOOST_REGEX_DETAIL_NS','line_number':561,'multiline':False]
['text':' namespace boost','line_number':567,'multiline':False]
['text':'','line_number':569,'multiline':False]
['text':' include the implementation of perl_matcher:','line_number':570,'multiline':False]
['text':'','line_number':571,'multiline':False]
['text':' this one has to be last:','line_number':573,'multiline':False]
