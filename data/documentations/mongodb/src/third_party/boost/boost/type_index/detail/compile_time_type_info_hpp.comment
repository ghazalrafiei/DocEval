['text':'','line_number':1,'multiline':False]
['text':' Copyright 2012-2022 Antony Polukhin.','line_number':2,'multiline':False]
['text':'','line_number':3,'multiline':False]
['text':'','line_number':4,'multiline':False]
['text':' Distributed under the Boost Software License, Version 1.0. (See accompanying','line_number':5,'multiline':False]
['text':' file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)','line_number':6,'multiline':False]
['text':'','line_number':7,'multiline':False]
['text':'/ \file compile_time_type_info.hpp','line_number':12,'multiline':False]
['text':'/ \brief Contains helper macros and implementation details of boost::typeindex::ctti_type_index.','line_number':13,'multiline':False]
['text':'/ Not intended for inclusion from user's code.','line_number':14,'multiline':False]
['text':'/ @cond','line_number':25,'multiline':False]
['text':' namespace boost::typeindex::detail ','line_number':44,'multiline':True]
['text':'','line_number':45,'multiline':True]
['text':'/ @endcond','line_number':46,'multiline':False]
['text':' Nothing to document. All the macro docs are moved to <boost/type_index.hpp> ','line_number':50,'multiline':True]
['text':' sizeof("const char *__cdecl boost::detail::ctti<") - 1, sizeof(">::n(void)") - 1','line_number':55,'multiline':False]
['text':' sizeof("const char *__cdecl boost::detail::ctti<") - 1, sizeof(">::n(void) noexcept") - 1','line_number':58,'multiline':False]
['text':' Someone made __clang_major__ equal to LLVM version rather than compiler version','line_number':61,'multiline':False]
['text':' on APPLE platform.','line_number':62,'multiline':False]
['text':'','line_number':63,'multiline':False]
['text':' Using less efficient solution because there is no good way to detect real version of Clang.','line_number':64,'multiline':False]
['text':' sizeof("static const char *boost::detail::ctti<") - 1, sizeof("]") - 1, true, "???????????>::n() [T = int"','line_number':65,'multiline':False]
['text':' sizeof("static const char *boost::detail::ctti<") - 1, sizeof(">::n()") - 1','line_number':68,'multiline':False]
['text':' note: checked on 3.0','line_number':69,'multiline':False]
['text':' sizeof("static const char *boost::detail::ctti<") - 1, sizeof("]") - 1, true, "int>::n() [T = int"','line_number':72,'multiline':False]
['text':' note: checked on 3.1, 3.4','line_number':73,'multiline':False]
['text':' sizeof("static cha boost::detail::ctti<T>::s() [with I = 40U, T = ") - 1, sizeof("]") - 1','line_number':76,'multiline':False]
['text':' note: checked on 4.14','line_number':77,'multiline':False]
['text':' sizeof("static const char *boost::detail::ctti<T>::n() [with T = ") - 1, sizeof("]") - 1','line_number':80,'multiline':False]
['text':' note: checked on 4.14','line_number':81,'multiline':False]
['text':' sizeof("static constexpr char boost::detail::ctti<T>::s() [with unsigned int I = 0u; T = ") - 1, sizeof("]") - 1','line_number':84,'multiline':False]
['text':' sizeof("static constexpr char boost::detail::ctti<T>::s() [with unsigned int I = 0; T = ") - 1, sizeof("]") - 1','line_number':87,'multiline':False]
['text':' sizeof("static const char* boost::detail::ctti<T>::n() [with T = ") - 1, sizeof("]") - 1','line_number':90,'multiline':False]
['text':' sizeof("static const char *boost::detail::ctti<T>::n() [with T = ") - 1, sizeof("]") - 1','line_number':93,'multiline':False]
['text':' Deafult code for other platforms... Just skip nothing!','line_number':96,'multiline':False]
['text':' defined(BOOST_TYPE_INDEX_DETAIL_IS_CONSTANT)','line_number':133,'multiline':False]
['text':' specified in C++11','line_number':148,'multiline':False]
['text':' namespace boost::typeindex::detail','line_number':247,'multiline':False]
['text':'/ Noncopyable type_info that does not require RTTI.','line_number':251,'multiline':False]
['text':'/ CTTI == Compile Time Type Info.','line_number':252,'multiline':False]
['text':'/ This name must be as short as possible, to avoid code bloat','line_number':253,'multiline':False]
['text':'helper functions','line_number':258,'multiline':False]
['text':' step','line_number':260,'multiline':False]
['text':' `D` means `Dummy`','line_number':284,'multiline':False]
['text':'/ Returns raw name. Must be as short, as possible, to avoid code bloat','line_number':314,'multiline':False]
['text':' namespace boost::detail','line_number':337,'multiline':False]
['text':' BOOST_TYPE_INDEX_DETAIL_COMPILE_TIME_TYPE_INFO_HPP','line_number':339,'multiline':False]
