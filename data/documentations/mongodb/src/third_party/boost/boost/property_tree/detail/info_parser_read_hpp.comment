['text':' ----------------------------------------------------------------------------','line_number':1,'multiline':False]
['text':' Copyright (C) 2002-2006 Marcin Kalicinski','line_number':2,'multiline':False]
['text':'','line_number':3,'multiline':False]
['text':' Distributed under the Boost Software License, Version 1.0. ','line_number':4,'multiline':False]
['text':' (See accompanying file LICENSE_1_0.txt or copy at ','line_number':5,'multiline':False]
['text':' http://www.boost.org/LICENSE_1_0.txt)','line_number':6,'multiline':False]
['text':'','line_number':7,'multiline':False]
['text':' For more information, see www.boost.org','line_number':8,'multiline':False]
['text':' ----------------------------------------------------------------------------','line_number':9,'multiline':False]
['text':' Expand known escape sequences','line_number':25,'multiline':False]
['text':' Detect whitespace in a not very smart way.','line_number':64,'multiline':False]
['text':' Everything outside ASCII is not space.','line_number':68,'multiline':False]
['text':' Advance pointer past whitespace','line_number':75,'multiline':False]
['text':' Extract word (whitespace delimited) and advance pointer accordingly','line_number':84,'multiline':False]
['text':' Extract line (eol delimited) and advance pointer accordingly','line_number':96,'multiline':False]
['text':' Extract string (inside ""), and advance pointer accordingly','line_number':110,'multiline':False]
['text':' Set need_more_lines to true if \ continuator found','line_number':111,'multiline':False]
['text':' Skip "','line_number':119,'multiline':False]
['text':' Find end of string, but skip escaped "','line_number':122,'multiline':False]
['text':' If end of string found','line_number':131,'multiline':False]
['text':' Extract key','line_number':163,'multiline':False]
['text':' Extract data','line_number':174,'multiline':False]
['text':' Build ptree from info stream','line_number':188,'multiline':False]
['text':' Possible parser states','line_number':196,'multiline':False]
['text':' Parser expects key','line_number':198,'multiline':False]
['text':' Parser expects data','line_number':199,'multiline':False]
['text':' Parser expects data continuation','line_number':200,'multiline':False]
['text':' Parser state','line_number':204,'multiline':False]
['text':' Pointer to last created ptree','line_number':205,'multiline':False]
['text':' Define line here to minimize reallocations','line_number':206,'multiline':False]
['text':' Initialize ptree stack (used to handle nesting)','line_number':209,'multiline':False]
['text':' Push root ptree on stack initially','line_number':211,'multiline':False]
['text':' While there are characters in the stream','line_number':214,'multiline':False]
['text':' Read one line from stream','line_number':216,'multiline':False]
['text':' If directive found','line_number':224,'multiline':False]
['text':' Determine directive type','line_number':227,'multiline':False]
['text':' skip #','line_number':228,'multiline':False]
['text':' #include','line_number':231,'multiline':False]
['text':' Unknown directive','line_number':248,'multiline':False]
['text':' Directive must be followed by end of line','line_number':253,'multiline':False]
['text':' Go to next line','line_number':260,'multiline':False]
['text':' While there are characters left in line','line_number':264,'multiline':False]
['text':' Stop parsing on end of line or comment','line_number':267,'multiline':False]
['text':' If there was no data set state to s_key','line_number':270,'multiline':False]
['text':' Process according to current parser state','line_number':275,'multiline':False]
['text':' Parser expects key','line_number':279,'multiline':False]
['text':' Brace opening found','line_number':283,'multiline':False]
['text':' Brace closing found','line_number':291,'multiline':False]
['text':' Key text found','line_number':299,'multiline':False]
['text':' Parser expects data','line_number':309,'multiline':False]
['text':' Last ptree must be defined because we are going to add data to it','line_number':313,'multiline':False]
['text':' Brace opening found','line_number':316,'multiline':False]
['text':' Brace closing found','line_number':323,'multiline':False]
['text':' Data text found','line_number':332,'multiline':False]
['text':' Parser expects continuation of data after \ on previous line','line_number':343,'multiline':False]
['text':' Last ptree must be defined because we are going to update its data','line_number':347,'multiline':False]
['text':' Should never happen','line_number':362,'multiline':False]
['text':' Check if stack has initial size, otherwise some {'s have not been closed','line_number':370,'multiline':False]
['text':' If line undefined rethrow error with correct filename and line','line_number':377,'multiline':False]
