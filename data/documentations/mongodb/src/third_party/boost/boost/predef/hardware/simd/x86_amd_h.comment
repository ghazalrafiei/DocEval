['text':'
Copyright Charly Chevalier 2015
Copyright Joel Falcou 2015
Distributed under the Boost Software License, Version 1.0.
(See accompanying file LICENSE_1_0.txt or copy at
http://www.boost.org/LICENSE_1_0.txt)
','line_number':1,'multiline':True]
['text':' tag::reference[]
= `BOOST_HW_SIMD_X86_AMD`

The SIMD extension for x86 (AMD) (*if detected*).
Version number depends on the most recent detected extension.

[options="header"]
|===
| {predef_symbol} | {predef_version}

| `+__SSE4A__+` | {predef_detection}

| `+__FMA4__+` | {predef_detection}

| `+__XOP__+` | {predef_detection}

| `BOOST_HW_SIMD_X86` | {predef_detection}
|===

[options="header"]
|===
| {predef_symbol} | {predef_version}

| `+__SSE4A__+` | BOOST_HW_SIMD_X86_SSE4A_VERSION

| `+__FMA4__+` | BOOST_HW_SIMD_X86_FMA4_VERSION

| `+__XOP__+` | BOOST_HW_SIMD_X86_XOP_VERSION

| `BOOST_HW_SIMD_X86` | BOOST_HW_SIMD_X86
|===

NOTE: This predef includes every other x86 SIMD extensions and also has other
more specific extensions (FMA4, XOP, SSE4a). You should use this predef
instead of `BOOST_HW_SIMD_X86` to test if those specific extensions have
been detected.

','line_number':15,'multiline':True]
['text':' end::reference[]','line_number':52,'multiline':False]
['text':' AMD CPUs also use x86 architecture. We first try to detect if any AMD','line_number':56,'multiline':False]
['text':' specific extension are detected, if yes, then try to detect more recent x86','line_number':57,'multiline':False]
['text':' common extensions.','line_number':58,'multiline':False]
['text':' At this point, we know that we have an AMD CPU, we do need to check for','line_number':74,'multiline':False]
['text':' other x86 extensions to determine the final version number.','line_number':75,'multiline':False]
