['text':'
   Copyright (c) Marshall Clow 2012-2015.
   Copyright (c) Beman Dawes 2015
   Copyright (c) Glen Joseph Fernandes 2019 (glenjofe@gmail.com)

   Distributed under the Boost Software License, Version 1.0. (See accompanying
   file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)

    For more information, see http://www.boost.org

    Based on the StringRef implementation in LLVM (http://llvm.org) and
    N3422 by Jeffrey Yasskin
        http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2012/n3442.html
    Updated July 2015 to reflect the Library Fundamentals TS
        http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2015/n4480.html
','line_number':1,'multiline':True]
['text':' GCC 4.6 cannot handle a defaulted function with noexcept specifier','line_number':36,'multiline':False]
['text':'  A helper functor because sometimes we don't have lambdas','line_number':43,'multiline':False]
['text':' traits defaulted in string_view_fwd.hpp','line_number':53,'multiline':False]
['text':' types','line_number':56,'multiline':False]
['text':' impl-defined','line_number':63,'multiline':False]
['text':' construct/copy','line_number':71,'multiline':False]
['text':' by defaulting these functions, basic_string_ref becomes','line_number':75,'multiline':False]
['text':'  trivially copy/move constructible.','line_number':76,'multiline':False]
['text':' #if !defined(BOOST_NO_CXX11_RVALUE_REFERENCES) && !defined(BOOST_NO_CXX11_DELETED_FUNCTIONS)','line_number':99,'multiline':False]
['text':'       // Constructing a string_view from a temporary string is a bad idea','line_number':100,'multiline':False]
['text':'       template<typename Allocator>','line_number':101,'multiline':False]
['text':'         basic_string_view(      std::basic_string<charT, traits, Allocator>&&)','line_number':102,'multiline':False]
['text':'           = delete;','line_number':103,'multiline':False]
['text':' #endif','line_number':104,'multiline':False]
['text':' iterators','line_number':112,'multiline':False]
['text':' capacity','line_number':122,'multiline':False]
['text':' element access','line_number':128,'multiline':False]
['text':' modifiers','line_number':139,'multiline':False]
['text':' Boost extension','line_number':140,'multiline':False]
['text':' basic_string_view string operations','line_number':160,'multiline':False]
['text':'  Searches','line_number':226,'multiline':False]
['text':' Boost extension','line_number':227,'multiline':False]
['text':' Boost extension','line_number':231,'multiline':False]
['text':' Boost extension','line_number':235,'multiline':False]
['text':' Boost extension','line_number':239,'multiline':False]
['text':'  find','line_number':244,'multiline':False]
['text':'  rfind','line_number':276,'multiline':False]
['text':' an empty string is always found','line_number':282,'multiline':False]
['text':'  find_first_of','line_number':298,'multiline':False]
['text':'  find_last_of','line_number':313,'multiline':False]
['text':'  find_first_not_of','line_number':332,'multiline':False]
['text':'  find_last_not_of','line_number':348,'multiline':False]
['text':' Portability note here: std::distance is not NOEXCEPT, but calling it with a string_view::reverse_iterator will not throw.','line_number':368,'multiline':False]
['text':'  Comparison operators','line_number':385,'multiline':False]
['text':'  Equality','line_number':386,'multiline':False]
['text':'  Inequality','line_number':394,'multiline':False]
['text':'  Less than','line_number':402,'multiline':False]
['text':'  Greater than','line_number':409,'multiline':False]
['text':'  Less than or equal to','line_number':416,'multiline':False]
['text':'  Greater than or equal to','line_number':423,'multiline':False]
['text':' "sufficient additional overloads of comparison functions"','line_number':430,'multiline':False]
['text':' Inserter','line_number':575,'multiline':False]
['text':' numeric conversions','line_number':584,'multiline':False]
['text':'','line_number':585,'multiline':False]
['text':'  These are short-term implementations.','line_number':586,'multiline':False]
['text':'  In a production environment, I would rather avoid the copying.','line_number':587,'multiline':False]
['text':'','line_number':588,'multiline':False]
['text':' Forward declaration of Boost.ContainerHash function','line_number':654,'multiline':False]
['text':' Hashing','line_number':665,'multiline':False]
