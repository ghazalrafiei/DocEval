['text':'
 *          Copyright Andrey Semashev 2007 - 2015.
 * Distributed under the Boost Software License, Version 1.0.
 *    (See accompanying file LICENSE_1_0.txt or copy at
 *          http://www.boost.org/LICENSE_1_0.txt)
 ','line_number':1,'multiline':True]
['text':'!
 * \file   filter_parser.cpp
 * \author Andrey Semashev
 * \date   31.03.2008
 *
 * \brief  This header is the Boost.Log library implementation, see the library documentation
 *         at http://www.boost.org/doc/libs/release/libs/log/doc/html/index.html.
 ','line_number':7,'multiline':True]
['text':' !defined(BOOST_LOG_NO_THREADS)','line_number':41,'multiline':False]
['text':'! Filter factories repository','line_number':55,'multiline':False]
['text':'! Attribute name ordering predicate','line_number':65,'multiline':False]
['text':'! Synchronization mutex','line_number':84,'multiline':False]
['text':'! The map of filter factories','line_number':87,'multiline':False]
['text':'! Default factory','line_number':90,'multiline':False]
['text':'! The method returns the filter factory for the specified attribute name','line_number':94,'multiline':False]
['text':'! Filter parser','line_number':118,'multiline':False]
['text':'! Parsed attribute name','line_number':134,'multiline':False]
['text':'! The second operand of a relation','line_number':136,'multiline':False]
['text':'! Comparison relation handler','line_number':138,'multiline':False]
['text':'! The custom relation string','line_number':140,'multiline':False]
['text':'! Filter subexpressions as they are parsed','line_number':143,'multiline':False]
['text':'! Constructor','line_number':147,'multiline':False]
['text':'! The method returns the constructed filter','line_number':153,'multiline':False]
['text':'! The pethod parses filter from the string','line_number':161,'multiline':False]
['text':' Parse subexpression','line_number':169,'multiline':False]
['text':' This was the right-hand subexpression. Compose the two top subexpressions into a single filter.','line_number':173,'multiline':False]
['text':' The subexpression has ended','line_number':185,'multiline':False]
['text':'! The method parses a single subexpression','line_number':226,'multiline':False]
['text':' We found an attribute placeholder','line_number':238,'multiline':False]
['text':' Skip the closing char_percent','line_number':250,'multiline':False]
['text':' If the filter has negation operator, do not expect a relation (i.e. "!%attr% > 1" is not valid because "!%attr%" is interpreted as an attribute presence test)','line_number':253,'multiline':False]
['text':' We found negation operation. Parse the subexpression to be negated.','line_number':261,'multiline':False]
['text':' We found a nested subexpression','line_number':269,'multiline':False]
['text':' This would happen if a filter consists of a single '!'','line_number':288,'multiline':False]
['text':'! Parses filtering relation','line_number':295,'multiline':False]
['text':' Check for custom relation','line_number':316,'multiline':False]
['text':' We have parsed a relation operator, there must be an operand','line_number':324,'multiline':False]
['text':' The relation can be as simple as a sole attribute placeholder (which means that only attribute presence has to be checked).','line_number':335,'multiline':False]
['text':' So regardless how we get here, the relation is parsed completely.','line_number':336,'multiline':False]
['text':'! Checks if the string contains a keyword','line_number':342,'multiline':False]
['text':'! The attribute name handler','line_number':364,'multiline':False]
['text':'! The comparison relation handler','line_number':372,'multiline':False]
['text':' This should never happen','line_number':394,'multiline':False]
['text':' This branch is taken if the relation is a single attribute name, which is recognized as the attribute presence check','line_number':403,'multiline':False]
['text':' This should never happen','line_number':412,'multiline':False]
['text':'! The negation operation handler','line_number':418,'multiline':False]
['text':' This would happen if a filter consists of "!()"','line_number':427,'multiline':False]
['text':'! The logical AND operation handler','line_number':432,'multiline':False]
['text':' This should never happen','line_number':447,'multiline':False]
['text':'! The logical OR operation handler','line_number':451,'multiline':False]
['text':' This should never happen','line_number':466,'multiline':False]
['text':'  Assignment and copying are prohibited','line_number':470,'multiline':False]
['text':' namespace','line_number':475,'multiline':False]
['text':'! The function registers a filter factory object for the specified attribute name','line_number':477,'multiline':False]
['text':'! The function parses a filter from the string','line_number':490,'multiline':False]
['text':' BOOST_LOG_USE_CHAR','line_number':514,'multiline':False]
['text':' BOOST_LOG_USE_WCHAR_T','line_number':523,'multiline':False]
['text':' namespace log','line_number':525,'multiline':False]
['text':' namespace boost','line_number':527,'multiline':False]
['text':' BOOST_LOG_WITHOUT_SETTINGS_PARSERS','line_number':531,'multiline':False]
