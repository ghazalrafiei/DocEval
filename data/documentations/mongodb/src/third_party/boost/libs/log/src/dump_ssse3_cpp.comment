['text':'
 *          Copyright Andrey Semashev 2007 - 2021.
 * Distributed under the Boost Software License, Version 1.0.
 *    (See accompanying file LICENSE_1_0.txt or copy at
 *          http://www.boost.org/LICENSE_1_0.txt)
 ','line_number':1,'multiline':True]
['text':'!
 * \file   dump_ssse3.cpp
 * \author Andrey Semashev
 * \date   05.05.2013
 *
 * \brief  This header is the Boost.Log library implementation, see the library documentation
 *         at http://www.boost.org/doc/libs/release/libs/log/doc/html/index.html.
 ','line_number':7,'multiline':True]
['text':' NOTE: You should generally avoid including headers as much as possible here, because this file','line_number':16,'multiline':False]
['text':'       is compiled with special compiler options, and any included header may result in generation of','line_number':17,'multiline':False]
['text':'       unintended code with these options and violation of ODR.','line_number':18,'multiline':False]
['text':' x86-64 architecture has more registers which we can utilize to pass constants','line_number':95,'multiline':False]
['text':' MSVC in 32-bit mode is not able to pass all constants to dump_pack, and is also not able to align them on the stack, so we have to fetch them from global constants','line_number':104,'multiline':False]
['text':'! Dumps a pack of input data into a string of 8 bit ASCII characters','line_number':113,'multiline':False]
['text':' Split half-bytes','line_number':121,'multiline':False]
['text':' Stringize each of the halves','line_number':125,'multiline':False]
['text':' Join them back together','line_number':129,'multiline':False]
['text':' Insert spaces between stringized bytes:','line_number':133,'multiline':False]
['text':' |0123456789abcdef|0123456789abcdef|','line_number':134,'multiline':False]
['text':' | 01 23 45 67 89 |ab cd ef 01 23 4|5 67 89 ab cd ef|','line_number':135,'multiline':False]
['text':' Align the temporary buffer at 16 bytes','line_number':151,'multiline':False]
['text':' skip the first space of the first chunk','line_number':153,'multiline':False]
['text':' First, check the input alignment','line_number':164,'multiline':False]
['text':' x86-64 architecture has more registers which we can utilize to pass constants','line_number':247,'multiline':False]
['text':' MSVC in 32-bit mode is not able to pass all constants to dump_pack, and is also not able to align them on the stack, so we have to fetch them from global constants','line_number':258,'multiline':False]
['text':'! Dumps a pack of input data into a string of 8 bit ASCII characters','line_number':267,'multiline':False]
['text':' Split half-bytes','line_number':275,'multiline':False]
['text':' Stringize each of the halves','line_number':279,'multiline':False]
['text':' Join them back together','line_number':291,'multiline':False]
['text':' Insert spaces between stringized bytes:','line_number':295,'multiline':False]
['text':' |0123456789abcdef|0123456789abcdef|','line_number':296,'multiline':False]
['text':' | 01 23 45 67 89 |ab cd ef 01 23 4|5 67 89 ab cd ef|','line_number':297,'multiline':False]
['text':' Align the temporary buffer at 16 bytes','line_number':313,'multiline':False]
['text':' skip the first space of the first chunk','line_number':315,'multiline':False]
['text':' '9' is 0x39 and 'A' is 0x41 in ASCII, so we have to add 0x07 to 0x3A to get uppercase letters','line_number':320,'multiline':False]
['text':' ...and 'a' is 0x61, which means we have to add 0x27 to 0x3A to get lowercase letters','line_number':322,'multiline':False]
['text':' First, check the input alignment','line_number':324,'multiline':False]
['text':' namespace','line_number':405,'multiline':False]
['text':' namespace aux','line_number':511,'multiline':False]
['text':' namespace log','line_number':513,'multiline':False]
['text':' namespace boost','line_number':515,'multiline':False]
