['text':'///////1/////////2/////////3/////////4/////////5/////////6/////////7/////////8','line_number':1,'multiline':False]
['text':' extended_type_info_typeid.cpp: specific implementation of type info','line_number':2,'multiline':False]
['text':' that is based on typeid','line_number':3,'multiline':False]
['text':' (C) Copyright 2002 Robert Ramey - http://www.rrsd.com . ','line_number':5,'multiline':False]
['text':' Use, modification and distribution is subject to the Boost Software','line_number':6,'multiline':False]
['text':' License, Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at','line_number':7,'multiline':False]
['text':' http://www.boost.org/LICENSE_1_0.txt)','line_number':8,'multiline':False]
['text':'  See http://www.boost.org for updates, documentation, and revision history.','line_number':10,'multiline':False]
['text':' NULL','line_number':13,'multiline':False]
['text':' it marks our code with proper attributes as being exported when','line_number':20,'multiline':False]
['text':' we're compiling it while marking it import when just the headers','line_number':21,'multiline':False]
['text':' is being included.','line_number':22,'multiline':False]
['text':' shortcut for common case','line_number':54,'multiline':False]
['text':' note: std::type_info == operator returns an int !!!','line_number':67,'multiline':False]
['text':' the following permits conversion to bool without a warning.','line_number':68,'multiline':False]
['text':' note: previously this conditional was a runtime assertion with','line_number':98,'multiline':False]
['text':' BOOST_ASSERT.  We've changed it because we've discovered that at','line_number':99,'multiline':False]
['text':' least one platform is not guaranteed to destroy singletons in','line_number':100,'multiline':False]
['text':' reverse order of distruction.','line_number':101,'multiline':False]
['text':' BOOST_ASSERT(! singleton<tkmap>::is_destroyed());','line_number':102,'multiline':False]
['text':' remove all entries in map which corresponds to this type','line_number':106,'multiline':False]
['text':' make sure that we don't use any invalidated iterators','line_number':107,'multiline':False]
['text':' this derivation is used for creating search arguments','line_number':124,'multiline':False]
['text':'count','line_number':128,'multiline':True]
['text':'p','line_number':132,'multiline':True]
['text':' note absence of self register and key as this is used only as','line_number':139,'multiline':False]
['text':' search argument given a type_info reference and is not to ','line_number':140,'multiline':False]
['text':' be added to the map.','line_number':141,'multiline':False]
['text':' namespace detail','line_number':165,'multiline':False]
['text':' namespace serialization','line_number':166,'multiline':False]
['text':' namespace boost','line_number':167,'multiline':False]
