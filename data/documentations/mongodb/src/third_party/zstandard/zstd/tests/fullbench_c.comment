['text':'
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 * All rights reserved.
 *
 * This source code is licensed under both the BSD-style license (found in the
 * LICENSE file in the root directory of this source tree) and the GPLv2 (found
 * in the COPYING file in the root directory of this source tree).
 * You may select, at your option, one of the above-listed licenses.
 ','line_number':1,'multiline':True]
['text':'_************************************
*  Includes
*************************************','line_number':12,'multiline':True]
['text':' No deprecation warnings, we still bench some deprecated functions ','line_number':15,'multiline':True]
['text':' Compiler options, UTIL_GetFileSize ','line_number':16,'multiline':True]
['text':' malloc ','line_number':17,'multiline':True]
['text':' fprintf, fopen, ftello64 ','line_number':18,'multiline':True]
['text':' UTIL_clockSpanNano, UTIL_getTime ','line_number':21,'multiline':True]
['text':' U32 ','line_number':22,'multiline':True]
['text':' ZSTD_decodeSeqHeaders, ZSTD_blockHeaderSize, ZSTD_getcBlockSize, blockType_e, KB, MB ','line_number':24,'multiline':True]
['text':' ZSTD_DCtx struct ','line_number':25,'multiline':True]
['text':' ZSTD_compressBegin, ZSTD_compressContinue, etc. ','line_number':32,'multiline':True]
['text':' ZSTD_versionString ','line_number':33,'multiline':True]
['text':' time functions ','line_number':34,'multiline':True]
['text':' CustomBench ','line_number':36,'multiline':True]
['text':' MB_UNIT ','line_number':37,'multiline':True]
['text':'_************************************
*  Constants
*************************************','line_number':40,'multiline':True]
['text':' 1 second ','line_number':57,'multiline':True]
['text':'_************************************
*  Macros
*************************************','line_number':60,'multiline':True]
['text':' like assert(), but cannot be disabled ','line_number':65,'multiline':True]
['text':'_************************************
*  Benchmark Parameters
*************************************','line_number':67,'multiline':True]
['text':'_*******************************************************
*  Private functions
********************************************************','line_number':73,'multiline':True]
['text':'_*******************************************************
*  Benchmark wrappers
********************************************************','line_number':95,'multiline':True]
['text':' contentSizeHeader','line_number':107,'multiline':True]
['text':' contentSizeHeader','line_number':119,'multiline':True]
['text':' note : default is impossible, since lhlCode into [0..3] ','line_number':177,'multiline':True]
['text':' 2 - 2 - 10 - 10 ','line_number':178,'multiline':True]
['text':' 2 - 2 - 14 - 14 ','line_number':184,'multiline':True]
['text':' 2 - 2 - 18 - 18 ','line_number':190,'multiline':True]
['text':' contentSizeHeader','line_number':232,'multiline':True]
['text':' contentSizeHeader','line_number':365,'multiline':True]
['text':' unused ','line_number':413,'multiline':True]
['text':'_*******************************************************
*  Bench functions
********************************************************','line_number':429,'multiline':True]
['text':' Selection ','line_number':444,'multiline':True]
['text':' Allocation ','line_number':507,'multiline':True]
['text':' DISPLAY("params: cLevel %d, wlog %d hlog %d clog %d slog %d mml %d tlen %d strat %d \n",
          cLevel, cparams->windowLog, cparams->hashLog, cparams->chainLog, cparams->searchLog,
          cparams->minMatch, cparams->targetLength, cparams->strategy); ','line_number':521,'multiline':True]
['text':' Preparation ','line_number':543,'multiline':True]
['text':' ZSTD_decodeLiteralsHeader ','line_number':565,'multiline':True]
['text':' fall-through ','line_number':566,'multiline':True]
['text':' ZSTD_decodeLiteralsBlock : starts literals block in dstBuff2 ','line_number':567,'multiline':True]
['text':' check block is compressible, hence contains a literals section ','line_number':572,'multiline':True]
['text':' Get 1st block type ','line_number':574,'multiline':True]
['text':' speed relative to block ','line_number':582,'multiline':True]
['text':' ZSTD_decodeSeqHeaders ','line_number':586,'multiline':True]
['text':' Skip frame Header ','line_number':593,'multiline':True]
['text':' Find end of block ','line_number':598,'multiline':True]
['text':' Get 1st block type ','line_number':599,'multiline':True]
['text':' End of first block ','line_number':604,'multiline':True]
['text':' skip block header ','line_number':606,'multiline':True]
['text':' skip literal segment ','line_number':609,'multiline':True]
['text':' copy rest of block (it starts by SeqHeader) ','line_number':611,'multiline':True]
['text':' speed relative to block ','line_number':612,'multiline':True]
['text':' compressStream2, short dstCapacity ','line_number':630,'multiline':True]
['text':' test functions ','line_number':634,'multiline':True]
['text':' convention: test functions have ID > 100 ','line_number':635,'multiline':True]
['text':' warming up dstBuff ','line_number':640,'multiline':True]
['text':' benchmark loop ','line_number':643,'multiline':True]
['text':' hopefully large enough : must be larger than any potential measurement ','line_number':649,'multiline':True]
['text':' circumvent strict aliasing warning on gcc-8,
                                                                 * because gcc considers that `void* const *`  and `void**` are 2 different types ','line_number':660,'multiline':True]
['text':' Allocation ','line_number':704,'multiline':True]
['text':' Fill buffer ','line_number':708,'multiline':True]
['text':' bench ','line_number':711,'multiline':True]
['text':' 0 == run all tests ','line_number':716,'multiline':True]
['text':' Loop for each file ','line_number':730,'multiline':True]
['text':' Check file existence ','line_number':737,'multiline':True]
['text':' Memory allocation & restrictions ','line_number':740,'multiline':True]
['text':' Alloc ','line_number':755,'multiline':True]
['text':' Fill input buffer ','line_number':759,'multiline':True]
['text':' bench ','line_number':769,'multiline':True]
['text':' blank line ','line_number':770,'multiline':True]
['text':'_*******************************************************
*  Argument Parsing
********************************************************','line_number':789,'multiline':True]
['text':' skip `K` or `M` ','line_number':814,'multiline':True]
['text':'_*******************************************************
*  Command line
********************************************************','line_number':830,'multiline':True]
['text':' check end of string ','line_number':895,'multiline':True]
['text':' Commands (note : aggregated commands are allowed) ','line_number':903,'multiline':True]
['text':' Display help on usage ','line_number':909,'multiline':True]
['text':' Pause at the end (hidden option) ','line_number':913,'multiline':True]
['text':' Select specific algorithm to bench ','line_number':916,'multiline':True]
['text':' Select compression level to use ','line_number':922,'multiline':True]
['text':' Select compressibility of synthetic sample ','line_number':929,'multiline':True]
['text':' Select size of synthetic sample ','line_number':935,'multiline':True]
['text':' Modify Nb Iterations ','line_number':941,'multiline':True]
['text':' Unknown command ','line_number':947,'multiline':True]
['text':' first provided filename is input ','line_number':954,'multiline':True]
['text':' no input file ','line_number':960,'multiline':True]
