['text':'
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 * All rights reserved.
 *
 * This source code is licensed under both the BSD-style license (found in the
 * LICENSE file in the root directory of this source tree) and the GPLv2 (found
 * in the COPYING file in the root directory of this source tree).
 ','line_number':1,'multiline':True]
['text':'/ A simple thread pool that pulls tasks off its queue in FIFO order.','line_number':19,'multiline':False]
['text':'/ Constructs a thread pool with `numThreads` threads.','line_number':26,'multiline':False]
['text':'/ Finishes all tasks currently in the queue.','line_number':39,'multiline':False]
['text':'*
   * Adds `task` to the queue of tasks to execute. Since `task` is a
   * `std::function<>`, it cannot be a move only type. So any lambda passed must
   * not capture move only types (like `std::unique_ptr`).
   *
   * @param task  The task to execute.
   ','line_number':47,'multiline':True]
