['text':'
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 * All rights reserved.
 *
 * This source code is licensed under both the BSD-style license (found in the
 * LICENSE file in the root directory of this source tree) and the GPLv2 (found
 * in the COPYING file in the root directory of this source tree).
 ','line_number':1,'multiline':True]
['text':'/ Unbounded thread-safe work queue.','line_number':24,'multiline':False]
['text':' Protects all member variable access','line_number':27,'multiline':False]
['text':' Must have lock to call this function','line_number':37,'multiline':False]
['text':'*
   * Constructs an empty work queue with an optional max size.
   * If `maxSize == 0` the queue size is unbounded.
   *
   * @param maxSize The maximum allowed size of the work queue.
   ','line_number':46,'multiline':True]
['text':'*
   * Push an item onto the work queue.  Notify a single thread that work is
   * available.  If `finish()` has been called, do nothing and return false.
   * If `push()` returns false, then `item` has not been moved from.
   *
   * @param item  Item to push onto the queue.
   * @returns     True upon success, false if `finish()` has been called.  An
   *               item was pushed iff `push()` returns true.
   ','line_number':54,'multiline':True]
['text':'*
   * Attempts to pop an item off the work queue.  It will block until data is
   * available or `finish()` has been called.
   *
   * @param[out] item  If `pop` returns `true`, it contains the popped item.
   *                    If `pop` returns `false`, it is unmodified.
   * @returns          True upon success.  False if the queue is empty and
   *                    `finish()` has been called.
   ','line_number':78,'multiline':True]
['text':'*
   * Sets the maximum queue size.  If `maxSize == 0` then it is unbounded.
   *
   * @param maxSize The new maximum queue size.
   ','line_number':104,'multiline':True]
['text':'*
   * Promise that `push()` won't be called again, so once the queue is empty
   * there will never any more work.
   ','line_number':117,'multiline':True]
['text':'/ Blocks until `finish()` has been called (but the queue may not be empty).','line_number':132,'multiline':False]
['text':'/ Work queue for `Buffer`s that knows the total number of bytes in the queue.','line_number':141,'multiline':False]
['text':'*
   * Blocks until `finish()` has been called.
   *
   * @returns The total number of bytes of all the `Buffer`s currently in the
   *           queue.
   ','line_number':170,'multiline':True]
