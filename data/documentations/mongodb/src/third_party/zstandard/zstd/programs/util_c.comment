['text':'
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 * All rights reserved.
 *
 * This source code is licensed under both the BSD-style license (found in the
 * LICENSE file in the root directory of this source tree) and the GPLv2 (found
 * in the COPYING file in the root directory of this source tree).
 * You may select, at your option, one of the above-listed licenses.
 ','line_number':1,'multiline':True]
['text':'-****************************************
*  Dependencies
*****************************************','line_number':16,'multiline':True]
['text':' note : ensure that platform.h is included first ! ','line_number':19,'multiline':True]
['text':' malloc, realloc, free ','line_number':20,'multiline':True]
['text':' fprintf ','line_number':21,'multiline':True]
['text':' clock_t, clock, CLOCKS_PER_SEC, nanosleep ','line_number':22,'multiline':True]
['text':' utime ','line_number':27,'multiline':True]
['text':' _chmod ','line_number':28,'multiline':True]
['text':' chown, stat ','line_number':30,'multiline':True]
['text':' utime ','line_number':32,'multiline':True]
['text':' AT_FDCWD ','line_number':34,'multiline':True]
['text':' utimensat ','line_number':35,'multiline':True]
['text':' needed for _mkdir in windows ','line_number':40,'multiline':True]
['text':' opendir, readdir require POSIX.1-2001 ','line_number':43,'multiline':True]
['text':' opendir, readdir ','line_number':44,'multiline':True]
['text':' strerror, memcpy ','line_number':45,'multiline':True]
['text':' #ifdef _WIN32 ','line_number':46,'multiline':True]
['text':'-****************************************
*  Internal Macros
*****************************************','line_number':48,'multiline':True]
['text':' CONTROL is almost like an assert(), but is never disabled.
 * It's designed for failures that may happen rarely,
 * but we don't want to maintain a specific error code path for them,
 * such as a malloc() returning NULL for example.
 * Since it's always active, this macro can trigger side effects.
 ','line_number':52,'multiline':True]
['text':' console log ','line_number':65,'multiline':True]
['text':' A modified version of realloc().
 * If UTIL_realloc() fails the original block is freed.
 ','line_number':90,'multiline':True]
['text':'-****************************************
*  Console log
*****************************************','line_number':117,'multiline':True]
['text':' flush the rest ','line_number':138,'multiline':True]
['text':'-*************************************
*  Constants
**************************************','line_number':145,'multiline':True]
['text':'-*************************************
*  Functions
**************************************','line_number':152,'multiline':True]
['text':' like chmod, but avoid changing permission of /dev/null ','line_number':212,'multiline':True]
['text':' pretend success, but don't change anything ','line_number':231,'multiline':True]
['text':' set access and modification times ','line_number':253,'multiline':True]
['text':' We check that st_mtime is a macro here in order to give us confidence
     * that struct stat has a struct timespec st_mtim member. We need this
     * check because there are some platforms that claim to be POSIX 2008
     * compliant but which do not have st_mtim... ','line_number':258,'multiline':True]
['text':' (atime, mtime) ','line_number':264,'multiline':True]
['text':' Mimic gzip's behavior:
     *
     * "Change the group first, then the permissions, then the owner.
     * That way, the permissions will be correct on systems that allow
     * users to give away files, without introducing a security hole.
     * Security depends on permissions not containing the setuid or
     * setgid bits." ','line_number':298,'multiline':True]
['text':' Apply group ownership ','line_number':309,'multiline':True]
['text':' Apply group ownership ','line_number':313,'multiline':True]
['text':' Copy file permissions ','line_number':317,'multiline':True]
['text':' Apply user ownership ','line_number':322,'multiline':True]
['text':' Apply user ownership ','line_number':326,'multiline':True]
['text':' number of errors is returned ','line_number':332,'multiline':True]
['text':' note : Visual does not support file identification by inode.
     *        inode does not work on Windows, even with a posix layer, like msys2.
     *        The following work-around is limited to detecting exact name repetition only,
     *        aka `filename` is considered different from `subdir/../filename` ','line_number':368,'multiline':True]
['text':' note : Visual does not support file identification by inode.
     *        inode does not work on Windows, even with a posix layer, like msys2.
     *        The following work-around is limited to detecting exact name repetition only,
     *        aka `filename` is considered different from `subdir/../filename` ','line_number':393,'multiline':True]
['text':' UTIL_isFIFO : distinguish named pipes ','line_number':410,'multiline':True]
['text':' macro guards, as defined in : https://linux.die.net/man/2/lstat ','line_number':414,'multiline':True]
['text':' UTIL_isFIFO : distinguish named pipes ','line_number':429,'multiline':True]
['text':' macro guards, as defined in : https://linux.die.net/man/2/lstat ','line_number':432,'multiline':True]
['text':' UTIL_isBlockDevStat : distinguish named pipes ','line_number':440,'multiline':True]
['text':' macro guards, as defined in : https://linux.die.net/man/2/lstat ','line_number':443,'multiline':True]
['text':' macro guards, as defined in : https://linux.die.net/man/2/lstat ','line_number':454,'multiline':True]
['text':' In verbose mode, do not scale sizes down, except in the case of
         * values that exceed the integral precision of a double. ','line_number':536,'multiline':True]
['text':' At worst, a double representation of a maximal size will be
             * accurate to better than tens of kilobytes. ','line_number':541,'multiline':True]
['text':' In regular mode, scale sizes down and use suffixes. ','line_number':550,'multiline':True]
['text':' condition : @file must be valid, and not have reached its end.
 * @return : length of line written into @buf, ended with `\0` instead of '\n',
 *           or 0, if there is no new line ','line_number':606,'multiline':True]
['text':' Conditions :
 *   size of @inputFileName file must be < @dstCapacity
 *   @dst must be initialized
 * @return : nb of lines
 *       or -1 if there's an error
 ','line_number':621,'multiline':True]
['text':' '=' for inputFile not terminated with '\n' ','line_number':646,'multiline':True]
['text':'Note: buf is not freed in case function successfully created table because filesTable->fileNames[0] = buf','line_number':656,'multiline':True]
['text':' (+1) to add '\0' at the end of last filename ','line_number':672,'multiline':True]
['text':' +1 for the finishing `\0` ','line_number':693,'multiline':True]
['text':' the table is empty ','line_number':733,'multiline':True]
['text':' +1 to add '\0' at the end of each fileName ','line_number':758,'multiline':True]
['text':' Recursively call "UTIL_prepareFileList" with the new path. ','line_number':850,'multiline':True]
['text':' include final \0 ','line_number':863,'multiline':True]
['text':' opendir, readdir require POSIX.1-2001 ','line_number':874,'multiline':True]
['text':' Recursively call "UTIL_prepareFileList" with the new path. ','line_number':914,'multiline':True]
['text':' with final \0 ','line_number':928,'multiline':True]
['text':' clear errno after UTIL_isDirectory, UTIL_prepareFileList ','line_number':933,'multiline':True]
['text':' #ifdef _WIN32 ','line_number':956,'multiline':True]
['text':'Utility function to get file extension from file ','line_number':971,'multiline':True]
['text':' We need to figure out whether any ".." present in the path is a whole
     * path token, which is the case if it is bordered on both sides by either
     * the beginning/end of the path or by a directory separator.
     ','line_number':981,'multiline':True]
['text':' increment so we search for the next match ','line_number':998,'multiline':True]
['text':' this function requires a mutable input string ','line_number':1041,'multiline':True]
['text':' get dir name from pathname similar to 'dirname()' ','line_number':1046,'multiline':True]
['text':' remove trailing '/' chars ','line_number':1049,'multiline':True]
['text':' if input is a single file, return '.' instead. i.e.
     * "xyz/abc/file.txt" => "xyz/abc"
       "./file.txt"       => "."
       "file.txt"         => "."
     ','line_number':1058,'multiline':True]
['text':' pathname must be valid ','line_number':1072,'multiline':True]
['text':' pathname must be valid ','line_number':1081,'multiline':True]
['text':' 'union charunion' can do const-cast without compiler warning ','line_number':1093,'multiline':True]
['text':' remove leading './' or '/' chars here ','line_number':1102,'multiline':True]
['text':' this function will return NULL if input srcFileName is not valid name for mirrored output path ','line_number':1137,'multiline':True]
['text':' sort it after remove the leading '/'  or './'','line_number':1205,'multiline':True]
['text':' if dirs is "a/b/c" and "a/b/c/d", we only need call:
     * we just need "a/b/c/d" ','line_number':1223,'multiline':True]
['text':' note: we always compare trimmed path, i.e.:
         * src dir of "./foo" and "/foo" will be both saved into:
         * "outDirName/foo/" ','line_number':1233,'multiline':True]
['text':' we need to maintain original src dir name instead of trimmed
         * dir, so we can retrieve the original src dir's mode_t ','line_number':1240,'multiline':True]
['text':' check input filenames is valid ','line_number':1265,'multiline':True]
['text':' including final \0 ','line_number':1305,'multiline':True]
['text':' note : even if nbFiles==0, function returns a valid, though empty, FileNamesTable* object ','line_number':1314,'multiline':True]
['text':' minimum 1, allows adding one reference, typically stdin ','line_number':1317,'multiline':True]
['text':' void* : mitigate a Visual compiler bug or limitation ','line_number':1344,'multiline':True]
['text':'-****************************************
*  count the number of cores
*****************************************','line_number':1349,'multiline':True]
['text':' Visual Studio does not like the following cast ','line_number':1388,'multiline':True]
['text':' conversion from function ptr to data ptr ','line_number':1389,'multiline':True]
['text':' conversion from data ptr to function ptr ','line_number':1390,'multiline':True]
['text':' some other error ','line_number':1412,'multiline':True]
['text':' try to fall back on GetSystemInfo ','line_number':1440,'multiline':True]
['text':' just in case ','line_number':1444,'multiline':True]
['text':' Use apple-provided syscall
 * see: man 3 sysctl ','line_number':1453,'multiline':True]
['text':' apple specifies int32_t ','line_number':1457,'multiline':True]
['text':' entry not present, fall back on 1 ','line_number':1464,'multiline':True]
['text':' parse /proc/cpuinfo
 * siblings / cpu cores should give hyperthreading ratio
 * otherwise fall back on sysconf ','line_number':1478,'multiline':True]
['text':' value not queryable, fall back on 1 ','line_number':1489,'multiline':True]
['text':' try to determine if there's hyperthreading ','line_number':1493,'multiline':True]
['text':' fall back on the sysconf value ','line_number':1503,'multiline':True]
['text':' assume the cpu cores/siblings values will be constant across all
         * present processors ','line_number':1507,'multiline':True]
['text':' formatting was broken? ','line_number':1514,'multiline':True]
['text':' formatting was broken? ','line_number':1523,'multiline':True]
['text':' fall back on the sysconf value ','line_number':1530,'multiline':True]
['text':' Use physical core sysctl when available
 * see: man 4 smp, man 3 sysctl ','line_number':1552,'multiline':True]
['text':' freebsd sysctl is native int sized ','line_number':1556,'multiline':True]
['text':' default to physical cores if logical cannot be read ','line_number':1568,'multiline':True]
['text':' sysctl not present, fall through to older sysconf method ','line_number':1579,'multiline':True]
['text':' suppress unused parameter warning ','line_number':1582,'multiline':True]
['text':' value not queryable, fall back on 1 ','line_number':1588,'multiline':True]
['text':' Use POSIX sysconf
 * see: man 3 sysconf ','line_number':1596,'multiline':True]
['text':' suppress unused parameter warning ','line_number':1602,'multiline':True]
['text':' value not queryable, fall back on 1 ','line_number':1609,'multiline':True]
['text':' suppress unused parameter warning ','line_number':1619,'multiline':True]
['text':' assume 1 ','line_number':1622,'multiline':True]
