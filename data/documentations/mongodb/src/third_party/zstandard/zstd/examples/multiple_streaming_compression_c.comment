['text':'
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 * All rights reserved.
 *
 * This source code is licensed under both the BSD-style license (found in the
 * LICENSE file in the root directory of this source tree) and the GPLv2 (found
 * in the COPYING file in the root directory of this source tree).
 * You may select, at your option, one of the above-listed licenses.
 ','line_number':1,'multiline':True]
['text':' The objective of this example is to show of to compress multiple successive files
*  while preserving memory management.
*  All structures and buffers will be created only once,
*  and shared across all compression operations ','line_number':12,'multiline':True]
['text':' printf','line_number':17,'multiline':False]
['text':' free','line_number':18,'multiline':False]
['text':' memset, strcat','line_number':19,'multiline':False]
['text':' presumes zstd library is installed','line_number':20,'multiline':False]
['text':' Helper functions, CHECK(), and CHECK_ZSTD()','line_number':21,'multiline':False]
['text':' can always read one full block ','line_number':34,'multiline':True]
['text':' can always flush a full block ','line_number':35,'multiline':True]
['text':' Set any compression parameters you want here.
     * They will persist for every compression operation.
     * Here we set the compression level, and enable the checksum.
     ','line_number':41,'multiline':True]
['text':' Open the input and output files.','line_number':59,'multiline':False]
['text':' Reset the context to a clean state to start a new compression operation.
     * The parameters are sticky, so we keep the compression level and extra
     * parameters that we set in createResources_orDie().
     ','line_number':63,'multiline':True]
['text':' This loop is the same as streaming_compression.c.
         * See that file for detailed comments.
         ','line_number':72,'multiline':True]
