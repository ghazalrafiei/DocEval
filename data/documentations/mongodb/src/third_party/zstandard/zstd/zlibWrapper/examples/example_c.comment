['text':' example.c contains minimal changes required to be compiled with zlibWrapper:
 * - #include "zlib.h" was changed to #include "zstd_zlibwrapper.h"
 * - test_flush() and test_sync() use functions not supported by zlibWrapper
     therefore they are disabled while zstd compression is turned on     ','line_number':1,'multiline':True]
['text':' example.c -- usage example of the zlib compression library
 ','line_number':6,'multiline':True]
['text':'
  Copyright (c) 1995-2006, 2011 Jean-loup Gailly

 This software is provided 'as-is', without any express or implied
 warranty. In no event will the authors be held liable for any damages
 arising from the use of this software.

 Permission is granted to anyone to use this software for any purpose,
 including commercial applications, and to alter it and redistribute it
 freely, subject to the following restrictions:

 1. The origin of this software must not be misrepresented; you must not
    claim that you wrote the original software. If you use this software
    in a product, an acknowledgement in the product documentation would be
    appreciated but is not required.
 2. Altered source versions must be plainly marked as such, and must not be
    misrepresented as being the original software.
 3. This notice may not be removed or altered from any source distribution.
 ','line_number':8,'multiline':True]
['text':' @(#) $Id$ ','line_number':28,'multiline':True]
['text':' "hello world" would be more standard, but the repeated "hello"
 * stresses the compression code better, sorry...
 ','line_number':52,'multiline':True]
['text':' Adler32 value of the dictionary ','line_number':57,'multiline':True]
['text':'  printf("myalloc %p n=%d m=%d\n", buf, n, m); ','line_number':86,'multiline':True]
['text':'  printf("myfree %p\n", p); ','line_number':92,'multiline':True]
['text':' !Z_SOLO ','line_number':100,'multiline':True]
['text':' ===========================================================================
 * Test compress() and uncompress()
 ','line_number':110,'multiline':True]
['text':' ===========================================================================
 * Test read/write of .gz files
 ','line_number':136,'multiline':True]
['text':' compressed file name ','line_number':140,'multiline':True]
['text':' add one zero byte ','line_number':166,'multiline':True]
['text':' " hello!" ','line_number':205,'multiline':True]
['text':' Z_SOLO ','line_number':220,'multiline':True]
['text':' ===========================================================================
 * Test deflate() with small buffers
 ','line_number':222,'multiline':True]
['text':' compression stream ','line_number':229,'multiline':True]
['text':' force small buffers ','line_number':244,'multiline':True]
['text':' Finish the stream, still forcing small buffers: ','line_number':248,'multiline':True]
['text':' ===========================================================================
 * Test inflate() with small buffers
 ','line_number':260,'multiline':True]
['text':' decompression stream ','line_number':268,'multiline':True]
['text':' force small buffers ','line_number':284,'multiline':True]
['text':' ===========================================================================
 * Test deflate() with large buffers and dynamic change of compression level
 ','line_number':301,'multiline':True]
['text':' compression stream ','line_number':308,'multiline':True]
['text':' At this point, uncompr is still mostly zeroes, so it should compress
     * very well:
     ','line_number':321,'multiline':True]
['text':' Feed in already compressed data and switch to no compression: ','line_number':333,'multiline':True]
['text':' Switch back to compressing mode: ','line_number':340,'multiline':True]
['text':' ===========================================================================
 * Test inflate() with large buffers
 ','line_number':356,'multiline':True]
['text':' decompression stream ','line_number':364,'multiline':True]
['text':' discard the output ','line_number':379,'multiline':True]
['text':' ===========================================================================
 * Test deflate() with full flush
 ','line_number':397,'multiline':True]
['text':' compression stream ','line_number':404,'multiline':True]
['text':' force an error in first compressed block ','line_number':422,'multiline':True]
['text':' ===========================================================================
 * Test inflateSync()
 ','line_number':435,'multiline':True]
['text':' decompression stream ','line_number':443,'multiline':True]
['text':' just read the zlib header ','line_number':452,'multiline':True]
['text':' read all compressed data ','line_number':463,'multiline':True]
['text':' but skip the damaged part ','line_number':464,'multiline':True]
['text':' Because of incorrect adler32 ','line_number':470,'multiline':True]
['text':' ===========================================================================
 * Test deflate() with preset dictionary
 ','line_number':479,'multiline':True]
['text':' compression stream ','line_number':486,'multiline':True]
['text':' ===========================================================================
 * Test inflate() with a preset dictionary
 ','line_number':516,'multiline':True]
['text':' decompression stream ','line_number':524,'multiline':True]
['text':' ===========================================================================
 * Usage:  example [output.gz  [input.gz]]
 ','line_number':566,'multiline':True]
['text':' don't overflow on MSDOS ','line_number':575,'multiline':True]
['text':' compr and uncompr are cleared to avoid reading uninitialized
     * data and to ensure that uncompr compresses well.
     ','line_number':593,'multiline':True]
