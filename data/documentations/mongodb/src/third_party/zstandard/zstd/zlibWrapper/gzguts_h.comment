['text':' gzguts.h contains minimal changes required to be compiled with zlibWrapper:
 * - #include "zlib.h" was changed to #include "zstd_zlibwrapper.h"
 * - gz_statep was converted to union to work with -Wstrict-aliasing=1      ','line_number':1,'multiline':True]
['text':' gzguts.h -- zlib internal header definitions for gz* operations
 * Copyright (C) 2004, 2005, 2010, 2011, 2012, 2013, 2016 Mark Adler
 * For conditions of distribution and use, see https://www.zlib.net/zlib_license.html
 ','line_number':5,'multiline':True]
['text':' for compatibility with old definition ','line_number':60,'multiline':True]
['text':' vsnprintf may exist on some MS-DOS compilers (DJGPP?),
   but for now we just assume it doesn't. ','line_number':84,'multiline':True]
['text':' In Win32, vsnprintf is available as the "non-ANSI" _vsnprintf. ','line_number':92,'multiline':True]
['text':' unlike snprintf (which is required in C99), _snprintf does not guarantee
   null termination of the result -- however this is only used in gzlib.c where
   the result is assured to fit in the space provided ','line_number':113,'multiline':True]
['text':' since "static" is used to mean two completely different things in C, we
   define "local" for the non-static meaning of "static", for readability
   (compile with -Dlocal if your debugger can't find static symbols) ','line_number':123,'multiline':True]
['text':' gz* functions always use library allocation functions ','line_number':127,'multiline':True]
['text':' get errno and strerror definition ','line_number':133,'multiline':True]
['text':' provide prototypes for these when building zlib without LFS ','line_number':146,'multiline':True]
['text':' default memLevel ','line_number':154,'multiline':True]
['text':' default i/o buffer size -- double this for output when reading (this and
   twice this must be able to fit in an unsigned type) ','line_number':161,'multiline':True]
['text':' gzip modes, also provide a little integrity check on the passed structure ','line_number':165,'multiline':True]
['text':' mode set to GZ_WRITE after the file is opened ','line_number':169,'multiline':True]
['text':' values for gz_state how ','line_number':171,'multiline':True]
['text':' look for a gzip header ','line_number':172,'multiline':True]
['text':' copy input directly ','line_number':173,'multiline':True]
['text':' decompress a gzip stream ','line_number':174,'multiline':True]
['text':' internal gzip file state data structure ','line_number':176,'multiline':True]
['text':' exposed contents for gzgetc() macro ','line_number':178,'multiline':True]
['text':' "x" for exposed ','line_number':179,'multiline':True]
['text':' x.have: number of bytes available at x.next ','line_number':180,'multiline':True]
['text':' x.next: next output data to deliver or write ','line_number':181,'multiline':True]
['text':' x.pos: current position in uncompressed data ','line_number':182,'multiline':True]
['text':' used for both reading and writing ','line_number':183,'multiline':True]
['text':' see gzip modes above ','line_number':184,'multiline':True]
['text':' file descriptor ','line_number':185,'multiline':True]
['text':' path or fd for error messages ','line_number':186,'multiline':True]
['text':' buffer size, zero if not allocated yet ','line_number':187,'multiline':True]
['text':' requested buffer size, default is GZBUFSIZE ','line_number':188,'multiline':True]
['text':' input buffer (double-sized when writing) ','line_number':189,'multiline':True]
['text':' output buffer (double-sized when reading) ','line_number':190,'multiline':True]
['text':' 0 if processing gzip, 1 if transparent ','line_number':191,'multiline':True]
['text':' just for reading ','line_number':192,'multiline':True]
['text':' 0: get header, 1: copy, 2: decompress ','line_number':193,'multiline':True]
['text':' where the gzip data started, for rewinding ','line_number':194,'multiline':True]
['text':' true if end of input file reached ','line_number':195,'multiline':True]
['text':' true if read requested past end ','line_number':196,'multiline':True]
['text':' just for writing ','line_number':197,'multiline':True]
['text':' compression level ','line_number':198,'multiline':True]
['text':' compression strategy ','line_number':199,'multiline':True]
['text':' seek request ','line_number':200,'multiline':True]
['text':' amount to skip (already rewound if backwards) ','line_number':201,'multiline':True]
['text':' true if seek request pending ','line_number':202,'multiline':True]
['text':' error information ','line_number':203,'multiline':True]
['text':' error code ','line_number':204,'multiline':True]
['text':' error message ','line_number':205,'multiline':True]
['text':' zlib inflate or deflate stream ','line_number':206,'multiline':True]
['text':' stream structure in-place (not a pointer) ','line_number':207,'multiline':True]
['text':' shared functions ','line_number':215,'multiline':True]
['text':' GT_OFF(x), where x is an unsigned value, is true if x > maximum z_off64_t
   value -- needed when comparing unsigned to z_off64_t, which is signed
   (possible z_off64_t types off_t, off64_t, and long are all signed) ','line_number':221,'multiline':True]
