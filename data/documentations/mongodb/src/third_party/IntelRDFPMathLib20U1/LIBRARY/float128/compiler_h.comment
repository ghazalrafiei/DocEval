['text':'*****************************************************************************
  Copyright (c) 2007-2011, Intel Corp.
  All rights reserved.

  Redistribution and use in source and binary forms, with or without
  modification, are permitted provided that the following conditions are met:

    * Redistributions of source code must retain the above copyright notice,
      this list of conditions and the following disclaimer.
    * Redistributions in binary form must reproduce the above copyright
      notice, this list of conditions and the following disclaimer in the
      documentation and/or other materials provided with the distribution.
    * Neither the name of Intel Corporation nor the names of its contributors
      may be used to endorse or promote products derived from this software
      without specific prior written permission.

  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
  THE POSSIBILITY OF SUCH DAMAGE.
*****************************************************************************','line_number':1,'multiline':True]
['text':'','line_number':169,'multiline':True]
['text':' Defining QUOTE_IT(s) to be "s" might work with some compilers. ','line_number':208,'multiline':True]
['text':' =============================================================================','line_number':213,'multiline':False]
['text':' At higher optimization levels, some compilers will ignore parenthesis and ','line_number':214,'multiline':False]
['text':' re-arrange floating point calculation. Doing so will break some of the','line_number':215,'multiline':False]
['text':' algorithms in the DPML (eg. divide). The intel compiler in particular has','line_number':216,'multiline':False]
['text':' this problem. However, the Intel compiler has an opperator to avoid ','line_number':217,'multiline':False]
['text':' reassociations.  ','line_number':218,'multiline':False]
['text':' =============================================================================','line_number':219,'multiline':False]
['text':' Declare decc linkages for various platforms ','line_number':228,'multiline':True]
['text':'
		 * For reference, the Alpha AXP Calling Standard has:
		 ','line_number':240,'multiline':True]
['text':'','line_number':247,'multiline':True]
['text':' Frame Pointer ','line_number':250,'multiline':True]
['text':' Parameters ','line_number':251,'multiline':True]
['text':' Return Address ','line_number':253,'multiline':True]
['text':' Bound Procedure Value ','line_number':254,'multiline':True]
['text':' Volatile Scratch ','line_number':255,'multiline':True]
['text':' Global Pointer ','line_number':256,'multiline':True]
['text':' Stack Pointer ','line_number':257,'multiline':True]
['text':'preserved(	r31 ),','line_number':258,'multiline':True]
['text':' Read as Zero ','line_number':258,'multiline':True]
['text':' Parameters ','line_number':262,'multiline':True]
['text':'preserved(	f31 ),','line_number':265,'multiline':True]
['text':' Read as Zero ','line_number':265,'multiline':True]
['text':'
                **  The trig reduce functions can have a bad effect on routines
                **  that call them, because the DECC compiler saves registers
                **  for _any_ path through the routine, rather than deferring
                **  until it's known whether a call to a trig reduce function
                **  is actually needed.
                **
                **  To avoid this problem (which is likely to be inherent in most
		**  compilers), we specify a linkage for the trig reduce functions
		**  that allows their callers (nearly) maximal freedom in register use.
		**  I.e., specify that they preserve (nearly) all registers.
                ','line_number':294,'multiline':True]
['text':' Parameters ','line_number':309,'multiline':True]
['text':' Parameters ','line_number':310,'multiline':True]
['text':' Parameters ','line_number':318,'multiline':True]
['text':' Parameters ','line_number':319,'multiline':True]
['text':' Parameters ','line_number':327,'multiline':True]
['text':' Parameters ','line_number':328,'multiline':True]
['text':' some recent decc compilers can not do this ','line_number':344,'multiline':True]
['text':' #               pragma use_linkage trig_reduce_linkage_l ( __trig_reducel, __trigd_reducel ) ','line_number':345,'multiline':True]
['text':' OSF ','line_number':347,'multiline':True]
['text':'
	** NOTE: the "&&" clause is to turn off the pragma definitions for iVMS when
	** compiling f, g or d floating types because the compiler issues an error
	','line_number':350,'multiline':True]
['text':' VMS ','line_number':447,'multiline':True]
['text':' (COMPILER == dec_cc) ','line_number':449,'multiline':True]
['text':' COMPILER_H ','line_number':451,'multiline':True]
