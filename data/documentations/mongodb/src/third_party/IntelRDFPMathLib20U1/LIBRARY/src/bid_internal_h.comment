['text':'*****************************************************************************
  Copyright (c) 2007-2011, Intel Corp.
  All rights reserved.

  Redistribution and use in source and binary forms, with or without 
  modification, are permitted provided that the following conditions are met:

    * Redistributions of source code must retain the above copyright notice, 
      this list of conditions and the following disclaimer.
    * Redistributions in binary form must reproduce the above copyright 
      notice, this list of conditions and the following disclaimer in the 
      documentation and/or other materials provided with the distribution.
    * Neither the name of Intel Corporation nor the names of its contributors 
      may be used to endorse or promote products derived from this software 
      without specific prior written permission.

  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
  THE POSSIBILITY OF SUCH DAMAGE.
*****************************************************************************','line_number':1,'multiline':True]
['text':'********************************************************************
 *
 *      Logical Shift Macros
 *
 ********************************************************************','line_number':49,'multiline':True]
['text':'********************************************************************
 *
 *      String Macros
 *
 ********************************************************************','line_number':89,'multiline':True]
['text':'********************************************************************
 *
 *      Compare Macros
 *
 ********************************************************************','line_number':95,'multiline':True]
['text':' greater than','line_number':100,'multiline':False]
['text':'  return 0 if A<=B','line_number':101,'multiline':False]
['text':'  non-zero if A>B','line_number':102,'multiline':False]
['text':' greater-or-equal','line_number':105,'multiline':False]
['text':' tighten exponent range','line_number':109,'multiline':False]
['text':'********************************************************************
 *
 *      Add/Subtract Macros
 *
 ********************************************************************','line_number':124,'multiline':True]
['text':' add 64-bit value to 128-bit ','line_number':129,'multiline':False]
['text':' subtract 64-bit value from 128-bit ','line_number':139,'multiline':False]
['text':' add 128-bit value to 128-bit ','line_number':149,'multiline':False]
['text':' assume no carry-out','line_number':150,'multiline':False]
['text':' increment C128 and check for rounding overflow: ','line_number':197,'multiline':False]
['text':' if (C_128) = 10^34 then (C_128) = 10^33 and increment the exponent','line_number':198,'multiline':False]
['text':' decrement C128 and check for rounding underflow, but only at the','line_number':210,'multiline':False]
['text':' boundary: if C_128 = 10^33 - 1 and exp > 0 then C_128 = 10^34 - 1 ','line_number':211,'multiline':False]
['text':' and decrement the exponent ','line_number':212,'multiline':False]
['text':'********************************************************************
 *
 *      Multiply Macros
 *
 ********************************************************************','line_number':225,'multiline':True]
['text':'**************************************
 *  Signed, Full 64x64-bit Multiply
 **************************************','line_number':231,'multiline':True]
['text':'**************************************
 *  Signed, Full 64x128-bit Multiply
 **************************************','line_number':245,'multiline':True]
['text':'****************************************************
 *      Unsigned Multiply Macros
 ****************************************************','line_number':262,'multiline':True]
['text':' get full 64x64bit product','line_number':265,'multiline':False]
['text':'','line_number':266,'multiline':False]
['text':' get full 64x64bit product','line_number':285,'multiline':False]
['text':' Note:','line_number':286,'multiline':False]
['text':' This macro is used for CX < 2^61, CY < 2^61','line_number':287,'multiline':False]
['text':'','line_number':288,'multiline':False]
['text':' used for CX< 2^60','line_number':306,'multiline':False]
['text':' get full 64x64bit product','line_number':322,'multiline':False]
['text':' Note:','line_number':323,'multiline':False]
['text':' This implementation is used for CX < 2^61, CY < 2^61','line_number':324,'multiline':False]
['text':'','line_number':325,'multiline':False]
['text':' get full 64x64bit product ','line_number':342,'multiline':False]
['text':'','line_number':343,'multiline':False]
['text':'','line_number':458,'multiline':False]
['text':' For better performance, will check A.w[1] against 0,','line_number':459,'multiline':False]
['text':'                         but not B.w[1]','line_number':460,'multiline':False]
['text':' Use this macro accordingly','line_number':461,'multiline':False]
['text':' A*A','line_number':538,'multiline':False]
['text':' Full 128x128-bit product','line_number':539,'multiline':False]
['text':' 64x64-bit product','line_number':675,'multiline':False]
['text':' 64x64-bit product','line_number':692,'multiline':False]
['text':' might simplify by calculating just QM2.w[0]','line_number':715,'multiline':False]
['text':'********************************************************************
 *
 *      BID Pack/Unpack Macros
 *
 ********************************************************************','line_number':725,'multiline':True]
['text':'///////////////////////////////////////','line_number':730,'multiline':False]
['text':' BID64 definitions','line_number':731,'multiline':False]
['text':'//////////////////////////////////////','line_number':732,'multiline':False]
['text':'///////////////////////////////////////','line_number':736,'multiline':False]
['text':' BID128 definitions','line_number':737,'multiline':False]
['text':'//////////////////////////////////////','line_number':738,'multiline':False]
['text':'///////////////////////////////////////','line_number':742,'multiline':False]
['text':' BID32 definitions','line_number':743,'multiline':False]
['text':'//////////////////////////////////////','line_number':744,'multiline':False]
['text':'//////////////////////////////////////','line_number':748,'multiline':False]
['text':' Constant Definitions','line_number':749,'multiline':False]
['text':'/////////////////////////////////////','line_number':750,'multiline':False]
['text':' data needed for BID pack/unpack macros','line_number':786,'multiline':False]
['text':'////////////////////////////////////////////','line_number':802,'multiline':False]
['text':'  Status Flag Handling','line_number':803,'multiline':False]
['text':'///////////////////////////////////////////','line_number':804,'multiline':False]
['text':' special encodings','line_number':816,'multiline':False]
['text':' coefficient','line_number':817,'multiline':False]
['text':' NaN or Infinity','line_number':827,'multiline':False]
['text':' check for non-canonical values','line_number':829,'multiline':False]
['text':' get exponent','line_number':833,'multiline':False]
['text':' exponent','line_number':838,'multiline':False]
['text':' coefficient','line_number':841,'multiline':False]
['text':'','line_number':847,'multiline':False]
['text':'   BID64 pack macro (general form)','line_number':848,'multiline':False]
['text':'','line_number':849,'multiline':False]
['text':' check for possible underflow/overflow','line_number':862,'multiline':False]
['text':' underflow','line_number':865,'multiline':False]
['text':' result is 0','line_number':879,'multiline':False]
['text':' get digits to be shifted out','line_number':888,'multiline':False]
['text':' get coeff*(2^M[extra_digits])/10^extra_digits','line_number':892,'multiline':False]
['text':' now get P/10^extra_digits: shift Q_high right by M[extra_digits]-128','line_number':896,'multiline':False]
['text':'BID_ROUNDING_TO_NEAREST','line_number':903,'multiline':False]
['text':' check whether fractional part of initial_P/10^extra_digits is exactly .5','line_number':906,'multiline':False]
['text':' get remainder','line_number':908,'multiline':False]
['text':' get remainder','line_number':931,'multiline':False]
['text':' test whether fractional part is 0','line_number':937,'multiline':False]
['text':' round up','line_number':955,'multiline':False]
['text':' overflow','line_number':982,'multiline':False]
['text':' round up','line_number':993,'multiline':False]
['text':' check whether coefficient fits in 10*5+3 bits','line_number':1004,'multiline':False]
['text':' special format','line_number':1011,'multiline':False]
['text':' eliminate the case coeff==10^16 after rounding','line_number':1013,'multiline':False]
['text':' add coeff, without leading bits','line_number':1024,'multiline':False]
['text':'','line_number':1035,'multiline':False]
['text':'   No overflow/underflow checking ','line_number':1036,'multiline':False]
['text':'','line_number':1037,'multiline':False]
['text':' check whether coefficient fits in 10*5+3 bits','line_number':1045,'multiline':False]
['text':' special format','line_number':1052,'multiline':False]
['text':' eliminate the case coeff==10^16 after rounding','line_number':1054,'multiline':False]
['text':' add coeff, without leading bits','line_number':1065,'multiline':False]
['text':'','line_number':1074,'multiline':False]
['text':'   no underflow checking','line_number':1075,'multiline':False]
['text':'','line_number':1076,'multiline':False]
['text':' overflow','line_number':1098,'multiline':False]
['text':' round up','line_number':1109,'multiline':False]
['text':' check whether coefficient fits in 10*5+3 bits','line_number':1121,'multiline':False]
['text':' special format','line_number':1128,'multiline':False]
['text':' eliminate the case coeff==10^16 after rounding','line_number':1130,'multiline':False]
['text':' add coeff, without leading bits','line_number':1141,'multiline':False]
['text':'','line_number':1150,'multiline':False]
['text':'   No overflow/underflow checking ','line_number':1151,'multiline':False]
['text':'   or checking for coefficients equal to 10^16 (after rounding)','line_number':1152,'multiline':False]
['text':'','line_number':1153,'multiline':False]
['text':' check whether coefficient fits in 10*5+3 bits','line_number':1161,'multiline':False]
['text':' special format','line_number':1168,'multiline':False]
['text':' add coeff, without leading bits','line_number':1172,'multiline':False]
['text':'','line_number':1180,'multiline':False]
['text':'   No overflow/underflow checking or checking for coefficients above 2^53','line_number':1181,'multiline':False]
['text':'','line_number':1182,'multiline':False]
['text':' no UF/OF','line_number':1185,'multiline':False]
['text':'','line_number':1195,'multiline':False]
['text':' This pack macro is used when underflow is known to occur','line_number':1196,'multiline':False]
['text':'','line_number':1197,'multiline':False]
['text':' underflow','line_number':1206,'multiline':False]
['text':' result is 0','line_number':1219,'multiline':False]
['text':' 10*coeff','line_number':1222,'multiline':False]
['text':' get digits to be shifted out','line_number':1232,'multiline':False]
['text':' get coeff*(2^M[extra_digits])/10^extra_digits','line_number':1236,'multiline':False]
['text':' now get P/10^extra_digits: shift Q_high right by M[extra_digits]-128','line_number':1240,'multiline':False]
['text':'__shr_128(C128, Q_high, amount); ','line_number':1244,'multiline':False]
['text':'BID_ROUNDING_TO_NEAREST','line_number':1248,'multiline':False]
['text':' check whether fractional part of initial_P/10^extra_digits is exactly .5','line_number':1251,'multiline':False]
['text':' get remainder','line_number':1253,'multiline':False]
['text':' get remainder','line_number':1276,'multiline':False]
['text':' test whether fractional part is 0','line_number':1282,'multiline':False]
['text':' round up','line_number':1300,'multiline':False]
['text':'','line_number':1322,'multiline':False]
['text':'   This pack macro doesnot check for coefficients above 2^53 ','line_number':1323,'multiline':False]
['text':'','line_number':1324,'multiline':False]
['text':' check for possible underflow/overflow','line_number':1333,'multiline':False]
['text':' underflow','line_number':1336,'multiline':False]
['text':' result is 0','line_number':1350,'multiline':False]
['text':' get digits to be shifted out','line_number':1359,'multiline':False]
['text':' get coeff*(2^M[extra_digits])/10^extra_digits','line_number':1363,'multiline':False]
['text':' now get P/10^extra_digits: shift Q_high right by M[extra_digits]-128','line_number':1367,'multiline':False]
['text':'BID_ROUNDING_TO_NEAREST','line_number':1374,'multiline':False]
['text':' check whether fractional part of initial_P/10^extra_digits is exactly .5','line_number':1377,'multiline':False]
['text':' get remainder','line_number':1379,'multiline':False]
['text':' get remainder','line_number':1402,'multiline':False]
['text':' test whether fractional part is 0','line_number':1408,'multiline':False]
['text':' round up','line_number':1426,'multiline':False]
['text':' overflow','line_number':1453,'multiline':False]
['text':' round up','line_number':1464,'multiline':False]
['text':' add coeff, without leading bits','line_number':1476,'multiline':False]
['text':'****************************************************************************
*
*    BID128 pack/unpack macros
*
****************************************************************************','line_number':1493,'multiline':True]
['text':'','line_number':1499,'multiline':False]
['text':'   Macro for handling BID128 underflow','line_number':1500,'multiline':False]
['text':'         sticky bit given as additional argument','line_number':1501,'multiline':False]
['text':'','line_number':1502,'multiline':False]
['text':' UF occurs','line_number':1511,'multiline':False]
['text':' CQ *= 10','line_number':1527,'multiline':False]
['text':' add remainder','line_number':1534,'multiline':False]
['text':' add rounding constant to CQ','line_number':1539,'multiline':False]
['text':' check whether fractional part of initial_P/10^ed1 is exactly .5','line_number':1573,'multiline':False]
['text':' get remainder','line_number':1575,'multiline':False]
['text':' get remainder','line_number':1593,'multiline':False]
['text':' test whether fractional part is 0','line_number':1599,'multiline':False]
['text':' round up','line_number':1615,'multiline':False]
['text':'','line_number':1645,'multiline':False]
['text':'   Macro for handling BID128 underflow','line_number':1646,'multiline':False]
['text':'','line_number':1647,'multiline':False]
['text':' UF occurs','line_number':1656,'multiline':False]
['text':' add rounding constant to CQ','line_number':1674,'multiline':False]
['text':' check whether fractional part of initial_P/10^ed1 is exactly .5','line_number':1709,'multiline':False]
['text':' get remainder','line_number':1711,'multiline':False]
['text':' get remainder','line_number':1729,'multiline':False]
['text':' test whether fractional part is 0','line_number':1735,'multiline':False]
['text':' round up','line_number':1751,'multiline':False]
['text':'','line_number':1782,'multiline':False]
['text':'  BID128 unpack, input passed by value  (used in transcendental functions only)','line_number':1783,'multiline':False]
['text':'','line_number':1784,'multiline':False]
['text':' special encodings','line_number':1793,'multiline':False]
['text':' non-canonical input','line_number':1796,'multiline':False]
['text':' 10^33','line_number':1803,'multiline':False]
['text':' non-canonical','line_number':1808,'multiline':False]
['text':' NaN or Infinity ','line_number':1819,'multiline':False]
['text':' 10^34','line_number':1825,'multiline':False]
['text':' check for non-canonical values','line_number':1827,'multiline':False]
['text':'','line_number':1842,'multiline':False]
['text':'  BID128 unpack, input passed by value','line_number':1843,'multiline':False]
['text':'','line_number':1844,'multiline':False]
['text':' special encodings','line_number':1853,'multiline':False]
['text':' non-canonical input','line_number':1856,'multiline':False]
['text':' 10^33','line_number':1863,'multiline':False]
['text':'coeff.w[0] = x.w[0];
       coeff.w[1] = (x.w[1]) & LARGE_COEFF_MASK128;
       pcoefficient_x->w[0] = x.w[0];
       pcoefficient_x->w[1] = x.w[1];
       if (__unsigned_compare_ge_128 (coeff, T33)) // non-canonical
       pcoefficient_x->w[1] &= (~LARGE_COEFF_MASK128); ','line_number':1865,'multiline':True]
['text':' non-canonical','line_number':1874,'multiline':False]
['text':' NaN or Infinity ','line_number':1885,'multiline':False]
['text':' 10^34','line_number':1891,'multiline':False]
['text':' check for non-canonical values','line_number':1893,'multiline':False]
['text':'','line_number':1906,'multiline':False]
['text':'  BID128 unpack, input passed by value','line_number':1907,'multiline':False]
['text':'','line_number':1908,'multiline':False]
['text':'','line_number':1923,'multiline':False]
['text':'  BID128 unpack, input pased by reference','line_number':1924,'multiline':False]
['text':'','line_number':1925,'multiline':False]
['text':' special encodings','line_number':1934,'multiline':False]
['text':' non-canonical input','line_number':1937,'multiline':False]
['text':' 10^33','line_number':1944,'multiline':False]
['text':' non-canonical','line_number':1950,'multiline':False]
['text':' NaN or Infinity ','line_number':1955,'multiline':False]
['text':' 10^34','line_number':1961,'multiline':False]
['text':' check for non-canonical values','line_number':1963,'multiline':False]
['text':'','line_number':1976,'multiline':False]
['text':'   Pack macro checks for overflow, but not underflow','line_number':1977,'multiline':False]
['text':'','line_number':1978,'multiline':False]
['text':' OF','line_number':2004,'multiline':False]
['text':'','line_number':2039,'multiline':False]
['text':'   No overflow/underflow checks','line_number':2040,'multiline':False]
['text':'   No checking for coefficient == 10^34 (rounding artifact)','line_number':2041,'multiline':False]
['text':'','line_number':2042,'multiline':False]
['text':' same as above, but for either endian mode','line_number':2056,'multiline':False]
['text':'','line_number':2070,'multiline':False]
['text':'   No overflow/underflow checks','line_number':2071,'multiline':False]
['text':'','line_number':2072,'multiline':False]
['text':' coeff==10^34?','line_number':2077,'multiline':False]
['text':' set coefficient to 10^33','line_number':2081,'multiline':False]
['text':'','line_number':2094,'multiline':False]
['text':'   General BID128 pack macro','line_number':2095,'multiline':False]
['text':'','line_number':2096,'multiline':False]
['text':' coeff==10^34?','line_number':2103,'multiline':False]
['text':' set coefficient to 10^33','line_number':2107,'multiline':False]
['text':' check OF, UF','line_number':2111,'multiline':False]
['text':' check UF','line_number':2113,'multiline':False]
['text':' OF','line_number':2140,'multiline':False]
['text':'','line_number':2175,'multiline':False]
['text':'  Macro used for conversions from string ','line_number':2176,'multiline':False]
['text':'        (no additional arguments given for rounding mode, status flags) ','line_number':2177,'multiline':False]
['text':'','line_number':2178,'multiline':False]
['text':' coeff==10^34?','line_number':2185,'multiline':False]
['text':' set coefficient to 10^33','line_number':2189,'multiline':False]
['text':' check OF, UF','line_number':2193,'multiline':False]
['text':' check UF','line_number':2195,'multiline':False]
['text':' OF','line_number':2199,'multiline':False]
['text':' round up','line_number':2232,'multiline':False]
['text':'****************************************************************************
*
*    BID32 pack/unpack macros
*
****************************************************************************','line_number':2254,'multiline':True]
['text':' special encodings','line_number':2269,'multiline':False]
['text':' NaN or Infinity','line_number':2277,'multiline':False]
['text':' coefficient','line_number':2279,'multiline':False]
['text':' check for non-canonical value','line_number':2281,'multiline':False]
['text':' get exponent','line_number':2284,'multiline':False]
['text':' exponent','line_number':2289,'multiline':False]
['text':' coefficient','line_number':2292,'multiline':False]
['text':'','line_number':2298,'multiline':False]
['text':'   General pack macro for BID32 ','line_number':2299,'multiline':False]
['text':'','line_number':2300,'multiline':False]
['text':' check for possible underflow/overflow','line_number':2314,'multiline':False]
['text':' underflow','line_number':2317,'multiline':False]
['text':' result is 0','line_number':2331,'multiline':False]
['text':' get digits to be shifted out','line_number':2334,'multiline':False]
['text':' get coeff*(2^M[extra_digits])/10^extra_digits','line_number':2351,'multiline':False]
['text':' now get P/10^extra_digits: shift Q_high right by M[extra_digits]-128','line_number':2354,'multiline':False]
['text':'BID_ROUNDING_TO_NEAREST','line_number':2361,'multiline':False]
['text':' check whether fractional part of initial_P/10^extra_digits is exactly .5','line_number':2364,'multiline':False]
['text':' get remainder','line_number':2366,'multiline':False]
['text':' get remainder','line_number':2385,'multiline':False]
['text':' test whether fractional part is 0','line_number':2391,'multiline':False]
['text':' round up','line_number':2402,'multiline':False]
['text':' overflow','line_number':2426,'multiline':False]
['text':' round up','line_number':2437,'multiline':False]
['text':' check whether coefficient fits in DECIMAL_COEFF_FIT bits','line_number':2447,'multiline':False]
['text':' special format','line_number':2454,'multiline':False]
['text':' add coeff, without leading bits','line_number':2459,'multiline':False]
['text':'','line_number':2470,'multiline':False]
['text':'   General pack macro for BID32 ','line_number':2471,'multiline':False]
['text':'','line_number':2472,'multiline':False]
['text':' check for possible underflow/overflow','line_number':2486,'multiline':False]
['text':' underflow','line_number':2489,'multiline':False]
['text':' result is 0','line_number':2503,'multiline':False]
['text':' get digits to be shifted out','line_number':2506,'multiline':False]
['text':' 10*coeff','line_number':2520,'multiline':False]
['text':' get coeff*(2^M[extra_digits])/10^extra_digits','line_number':2528,'multiline':False]
['text':' now get P/10^extra_digits: shift Q_high right by M[extra_digits]-128','line_number':2531,'multiline':False]
['text':'BID_ROUNDING_TO_NEAREST','line_number':2538,'multiline':False]
['text':' check whether fractional part of initial_P/10^extra_digits is exactly .5','line_number':2541,'multiline':False]
['text':' get remainder','line_number':2543,'multiline':False]
['text':' get remainder','line_number':2561,'multiline':False]
['text':' test whether fractional part is 0','line_number':2567,'multiline':False]
['text':' round up','line_number':2578,'multiline':False]
['text':' overflow','line_number':2601,'multiline':False]
['text':' round up','line_number':2612,'multiline':False]
['text':' check whether coefficient fits in DECIMAL_COEFF_FIT bits','line_number':2622,'multiline':False]
['text':' special format','line_number':2629,'multiline':False]
['text':' add coeff, without leading bits','line_number':2634,'multiline':False]
['text':'','line_number':2646,'multiline':False]
['text':'   no overflow/underflow checks','line_number':2647,'multiline':False]
['text':'','line_number':2648,'multiline':False]
['text':' check whether coefficient fits in 10*2+3 bits','line_number':2655,'multiline':False]
['text':' special format','line_number':2662,'multiline':False]
['text':' add coeff, without leading bits','line_number':2666,'multiline':False]
['text':' check whether coefficient fits in 10*2+3 bits','line_number':2684,'multiline':False]
['text':' special format','line_number':2691,'multiline':False]
['text':' add coeff, without leading bits','line_number':2695,'multiline':False]
['text':'************************************************************
 *
 ************************************************************','line_number':2705,'multiline':True]
['text':' #define P                               34','line_number':2717,'multiline':False]
['text':'used to take G[2:w+3] (sec 3.3)','line_number':2722,'multiline':False]
['text':'used to mask out G4:T0 (sec 3.3)','line_number':2724,'multiline':False]
['text':'used to prefix 8+G4 to T (sec 3.3)','line_number':2726,'multiline':False]
['text':' EXP_MIN = (-6176 + 6176) << 49','line_number':2742,'multiline':False]
['text':' EXP_MAX = (6111 + 6176) << 49','line_number':2744,'multiline':False]
['text':' EXP_MAX + 1 = (6111 + 6176 + 1) << 49','line_number':2746,'multiline':False]
['text':' EXP_ P1= 1 << 49','line_number':2748,'multiline':False]
['text':' min unbiased exponent','line_number':2750,'multiline':False]
['text':' max unbiased exponent','line_number':2752,'multiline':False]
['text':' min unbiased exponent','line_number':2754,'multiline':False]
['text':' max unbiased exponent','line_number':2756,'multiline':False]
['text':' min unbiased exponent','line_number':2758,'multiline':False]
['text':' max unbiased exponent','line_number':2760,'multiline':False]
['text':'used to take G[2:w+3] (sec 3.3)','line_number':2775,'multiline':False]
['text':'used to mask out G4:T0 (sec 3.3)','line_number':2777,'multiline':False]
['text':' typedef unsigned int BID_FPSC; // floating-point status and control','line_number':2781,'multiline':False]
['text':' bit31:','line_number':2782,'multiline':False]
['text':' bit30:','line_number':2783,'multiline':False]
['text':' bit29:','line_number':2784,'multiline':False]
['text':' bit28:','line_number':2785,'multiline':False]
['text':' bit27:','line_number':2786,'multiline':False]
['text':' bit26:','line_number':2787,'multiline':False]
['text':' bit25:','line_number':2788,'multiline':False]
['text':' bit24:','line_number':2789,'multiline':False]
['text':' bit23:','line_number':2790,'multiline':False]
['text':' bit22:','line_number':2791,'multiline':False]
['text':' bit21:','line_number':2792,'multiline':False]
['text':' bit20:','line_number':2793,'multiline':False]
['text':' bit19:','line_number':2794,'multiline':False]
['text':' bit18:','line_number':2795,'multiline':False]
['text':' bit17:','line_number':2796,'multiline':False]
['text':' bit16:','line_number':2797,'multiline':False]
['text':' bit15:','line_number':2798,'multiline':False]
['text':' bit14: RC:2','line_number':2799,'multiline':False]
['text':' bit13: RC:1','line_number':2800,'multiline':False]
['text':' bit12: RC:0','line_number':2801,'multiline':False]
['text':' bit11: PM','line_number':2802,'multiline':False]
['text':' bit10: UM','line_number':2803,'multiline':False]
['text':' bit9:  OM','line_number':2804,'multiline':False]
['text':' bit8:  ZM','line_number':2805,'multiline':False]
['text':' bit7:  DM','line_number':2806,'multiline':False]
['text':' bit6:  IM','line_number':2807,'multiline':False]
['text':' bit5:  PE','line_number':2808,'multiline':False]
['text':' bit4:  UE','line_number':2809,'multiline':False]
['text':' bit3:  OE','line_number':2810,'multiline':False]
['text':' bit2:  ZE','line_number':2811,'multiline':False]
['text':' bit1:  DE','line_number':2812,'multiline':False]
['text':' bit0:  IE','line_number':2813,'multiline':False]
['text':'**************************************************************************
 *************** TABLES FOR GENERAL ROUNDING FUNCTIONS *********************
 **************************************************************************','line_number':2863,'multiline':True]
['text':' this macro will find coefficient_x to be in [2^A, 2^(A+1) )','line_number':2925,'multiline':False]
['text':' ie it knows that it is A bits long','line_number':2926,'multiline':False]
['text':'////////////////////////////////////////////////','line_number':2956,'multiline':False]
['text':' Macros for raising exceptions / setting flags','line_number':2957,'multiline':False]
['text':'///////////////////////////////////////////////','line_number':2958,'multiline':False]
