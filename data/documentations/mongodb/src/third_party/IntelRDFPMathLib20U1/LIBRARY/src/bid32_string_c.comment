['text':'*****************************************************************************
  Copyright (c) 2007-2011, Intel Corp.
  All rights reserved.

  Redistribution and use in source and binary forms, with or without 
  modification, are permitted provided that the following conditions are met:

    * Redistributions of source code must retain the above copyright notice, 
      this list of conditions and the following disclaimer.
    * Redistributions in binary form must reproduce the above copyright 
      notice, this list of conditions and the following disclaimer in the 
      documentation and/or other materials provided with the distribution.
    * Neither the name of Intel Corporation nor the names of its contributors 
      may be used to endorse or promote products derived from this software 
      without specific prior written permission.

  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
  THE POSSIBILITY OF SUCH DAMAGE.
*****************************************************************************','line_number':1,'multiline':True]
['text':' the destination string (pointed to by ps) must be pre-allocated','line_number':47,'multiline':False]
['text':' place holder only','line_number':58,'multiline':False]
['text':' unpack arguments, check for NaN or Infinity','line_number':59,'multiline':False]
['text':' x is Inf. or NaN or 0','line_number':62,'multiline':False]
['text':' x is not special','line_number':83,'multiline':False]
['text':' get lower 6 digits','line_number':96,'multiline':False]
['text':'ps[istart] = 0;','line_number':109,'multiline':False]
['text':'ps[istart] = 0;','line_number':127,'multiline':False]
['text':' place holder only','line_number':185,'multiline':False]
['text':' eliminate leading whitespace','line_number':186,'multiline':False]
['text':' get first non-whitespace character','line_number':190,'multiline':False]
['text':' detect special cases (INF or NaN)','line_number':193,'multiline':False]
['text':' Infinity?','line_number':195,'multiline':False]
['text':' return sNaN','line_number':205,'multiline':False]
['text':' case insensitive check for snan','line_number':208,'multiline':False]
['text':' return qNaN','line_number':212,'multiline':False]
['text':' detect +INF or -INF','line_number':217,'multiline':False]
['text':' if +sNaN, +SNaN, -sNaN, or -SNaN','line_number':231,'multiline':False]
['text':' determine sign','line_number':240,'multiline':False]
['text':' get next character if leading +/- sign','line_number':246,'multiline':False]
['text':' if c isn't a decimal point or a decimal digit, return NaN','line_number':251,'multiline':False]
['text':' return NaN','line_number':253,'multiline':False]
['text':' detect zero (and eliminate/ignore leading zeros)','line_number':260,'multiline':False]
['text':' if all numbers are zeros (with possibly 1 radix point, the number is zero','line_number':267,'multiline':False]
['text':' should catch cases such as: 000.0','line_number':268,'multiline':False]
['text':' for numbers such as 0.0000000000000000000000000000000000001001, ','line_number':271,'multiline':False]
['text':' we want to count the leading zeros','line_number':272,'multiline':False]
['text':' if this character is a radix point, make sure we haven't already ','line_number':276,'multiline':False]
['text':' encountered one','line_number':277,'multiline':False]
['text':' if this is the first radix point, and the next character is NULL, ','line_number':281,'multiline':False]
['text':' we have a zero','line_number':282,'multiline':False]
['text':' if 2 radix points, return NaN','line_number':294,'multiline':False]
['text':' return NaN','line_number':316,'multiline':False]
['text':' coefficient rounding','line_number':332,'multiline':False]
['text':' if coefficient is even and c is 5, prepare to round up if ','line_number':336,'multiline':False]
['text':' subsequent digit is nonzero','line_number':337,'multiline':False]
['text':' if str[MAXDIG+1] > 5, we MUST round up','line_number':338,'multiline':False]
['text':' if str[MAXDIG+1] == 5 and coefficient is ODD, ROUND UP!','line_number':339,'multiline':False]
['text':' ndigits > 8','line_number':363,'multiline':False]
['text':' return NaN','line_number':392,'multiline':False]
['text':' return NaN','line_number':404,'multiline':False]
['text':' return NaN','line_number':419,'multiline':False]
