['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*- ','line_number':1,'multiline':True]
['text':' vim: set ts=8 sts=2 et sw=2 tw=80: ','line_number':2,'multiline':True]
['text':' This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':3,'multiline':True]
['text':'
 * Provides DebugOnly, a type for variables used only in debug builds (i.e. by
 * assertions).
 ','line_number':7,'multiline':True]
['text':'*
 * DebugOnly contains a value of type T, but only in debug builds.  In release
 * builds, it does not contain a value.  This helper is intended to be used with
 * MOZ_ASSERT()-style macros, allowing one to write:
 *
 *   DebugOnly<bool> check = func();
 *   MOZ_ASSERT(check);
 *
 * more concisely than declaring |check| conditional on #ifdef DEBUG.
 *
 * DebugOnly instances can only be coerced to T in debug builds.  In release
 * builds they don't have a value, so type coercion is not well defined.
 *
 * NOTE: DebugOnly instances still take up one byte of space, plus padding, even
 * in optimized, non-DEBUG builds (see bug 1253094 comment 37 for more info).
 * For this reason the class is MOZ_STACK_CLASS to prevent consumers using
 * DebugOnly for struct/class members and unwittingly inflating the size of
 * their objects in release builds.
 ','line_number':21,'multiline':True]
['text':' Do not define operator+=(), etc. here.  These will coerce via the','line_number':62,'multiline':False]
['text':' implicit cast and built-in operators.  Defining explicit methods here','line_number':63,'multiline':False]
['text':' will create ambiguity the compiler can't deal with.','line_number':64,'multiline':False]
['text':'
   * DebugOnly must always have a user-defined destructor or else it will
   * generate "unused variable" warnings, exactly what it's intended
   * to avoid!
   ','line_number':92,'multiline':True]
['text':' namespace mozilla','line_number':100,'multiline':False]
['text':' mozilla_DebugOnly_h ','line_number':102,'multiline':True]
