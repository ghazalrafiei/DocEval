['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*- ','line_number':1,'multiline':True]
['text':' vim: set ts=8 sts=2 et sw=2 tw=80: ','line_number':2,'multiline':True]
['text':' This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':3,'multiline':True]
['text':' Implements a UTF-16 character type. ','line_number':7,'multiline':True]
['text':'
 * C++11 introduces a char16_t type and support for UTF-16 string and character
 * literals. C++11's char16_t is a distinct builtin type. Technically, char16_t
 * is a 16-bit code unit of a Unicode code point, not a "character".
 ','line_number':14,'multiline':True]
['text':'*
 * Win32 API extensively uses wchar_t, which is represented by a separated
 * builtin type than char16_t per spec. It's not the case for MSVC prior to
 * MSVC 2015, but other compilers follow the spec. We want to mix wchar_t and
 * char16_t on Windows builds. This class is supposed to make it easier. It
 * stores char16_t const pointer, but provides implicit casts for wchar_t as
 * well. On other platforms, we simply use
 * |typedef const char16_t* char16ptr_t|. Here, we want to make the class as
 * similar to this typedef, including providing some casts that are allowed
 * by the typedef.
 ','line_number':24,'multiline':True]
['text':' Without this, nullptr assignment would be ambiguous. ','line_number':46,'multiline':True]
['text':' Explicit cast operators to allow things like (char16_t*)str. ','line_number':61,'multiline':True]
['text':'*
   * Some Windows API calls accept BYTE* but require that data actually be
   * WCHAR*.  Supporting this requires explicit operators to support the
   * requisite explicit casts.
   ','line_number':83,'multiline':True]
['text':' Some operators used on pointers. ','line_number':100,'multiline':True]
['text':' mozilla_Char16_h ','line_number':149,'multiline':True]
