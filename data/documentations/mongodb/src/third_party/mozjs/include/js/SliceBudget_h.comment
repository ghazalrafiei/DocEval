['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 * vim: set ts=8 sts=2 et sw=2 tw=80:
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':1,'multiline':True]
['text':' Calculated when SliceBudget is constructed.','line_number':22,'multiline':False]
['text':'
 * This class describes a limit to the amount of work to be performed in a GC
 * slice, so that we can return to the mutator without pausing for too long. The
 * budget may be based on a deadline time or an amount of work to be performed,
 * or may be unlimited.
 *
 * To reduce the number of gettimeofday calls, we only check the time every 1000
 * operations.
 ','line_number':37,'multiline':True]
['text':' Use to create an unlimited budget.','line_number':60,'multiline':False]
['text':' Instantiate as SliceBudget(TimeBudget(n)).','line_number':63,'multiline':False]
['text':' Instantiate as SliceBudget(WorkBudget(n)).','line_number':67,'multiline':False]
['text':' Register having performed the given number of steps (counted against a','line_number':73,'multiline':False]
['text':' work budget, or progress towards the next time or callback check).','line_number':74,'multiline':False]
['text':' Do enough steps to force an "expensive" (time and/or callback) check on','line_number':80,'multiline':False]
['text':' the next call to isOverBudget. Useful when switching between major phases','line_number':81,'multiline':False]
['text':' of an operation like a cycle collection.','line_number':82,'multiline':False]
['text':' namespace js','line_number':101,'multiline':False]
['text':' js_SliceBudget_h ','line_number':103,'multiline':True]
