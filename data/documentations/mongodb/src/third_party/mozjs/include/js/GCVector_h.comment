['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 * vim: set ts=8 sts=2 et sw=2 tw=80:
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':1,'multiline':True]
['text':' MOZ_ASSERT','line_number':10,'multiline':False]
['text':' MOZ_STACK_CLASS','line_number':11,'multiline':False]
['text':' MallocSizeOf','line_number':12,'multiline':False]
['text':' size_t','line_number':15,'multiline':False]
['text':' forward, move','line_number':16,'multiline':False]
['text':' A GCVector is a Vector with an additional trace method that knows how','line_number':27,'multiline':False]
['text':' to visit all of the items stored in the Vector. For vectors that contain GC','line_number':28,'multiline':False]
['text':' things, this is usually more convenient than manually iterating and marking','line_number':29,'multiline':False]
['text':' the contents.','line_number':30,'multiline':False]
['text':'','line_number':31,'multiline':False]
['text':' Most types of GC pointers as keys and values can be traced with no extra','line_number':32,'multiline':False]
['text':' infrastructure. For structs and non-gc-pointer members, ensure that there is','line_number':33,'multiline':False]
['text':' a specialization of GCPolicy<T> with an appropriate trace method available','line_number':34,'multiline':False]
['text':' to handle the custom type. Generic helpers can be found in','line_number':35,'multiline':False]
['text':' js/public/TracingAPI.h.','line_number':36,'multiline':False]
['text':'','line_number':37,'multiline':False]
['text':' Note that although this Vector's trace will deal correctly with moved items,','line_number':38,'multiline':False]
['text':' it does not itself know when to barrier or trace items. To function properly','line_number':39,'multiline':False]
['text':' it must either be used with Rooted, or barriered and traced manually.','line_number':40,'multiline':False]
['text':' AllocPolicy is optional. It has a default value declared in TypeDecls.h','line_number':205,'multiline':False]
['text':' Inherit constructor from GCVector.','line_number':212,'multiline':False]
['text':' namespace JS','line_number':216,'multiline':False]
['text':' namespace js','line_number':357,'multiline':False]
['text':' An automatically rooted GCVector for stack use.','line_number':361,'multiline':False]
['text':' For use in rust code, an analog to RootedVector that doesn't require','line_number':371,'multiline':False]
['text':' instances to be destroyed in LIFO order.','line_number':372,'multiline':False]
['text':' namespace JS','line_number':382,'multiline':False]
['text':' js_GCVector_h','line_number':384,'multiline':False]
