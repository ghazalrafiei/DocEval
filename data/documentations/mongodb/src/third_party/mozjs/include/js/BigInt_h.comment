['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*- ','line_number':1,'multiline':True]
['text':' This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':2,'multiline':True]
['text':' BigInt. ','line_number':6,'multiline':True]
['text':' mozilla::Span','line_number':11,'multiline':False]
['text':' std::numeric_limits','line_number':13,'multiline':False]
['text':' int64_t, uint64_t','line_number':14,'multiline':False]
['text':' std::enable_if_t, std::{true,false}_type, std::is_{integral,signed,unsigned}_v','line_number':15,'multiline':False]
['text':' JS_PUBLIC_API','line_number':17,'multiline':False]
['text':' namespace detail','line_number':118,'multiline':False]
['text':'*
 * Create a BigInt from an integer value. All integral types not larger than 64
 * bits in size are supported.
 ','line_number':120,'multiline':True]
['text':'*
 * Create a BigInt from a floating-point value. If the number isn't integral
 * (that is, if it's NaN, an infinity, or contains a fractional component),
 * this function returns null and throws an exception.
 *
 * Passing -0.0 will produce the bigint 0n.
 ','line_number':129,'multiline':True]
['text':'*
 * Create a BigInt by parsing a string using the ECMAScript StringToBigInt
 * algorithm (https://tc39.es/ecma262/#sec-stringtobigint). Latin1 and two-byte
 * character ranges are supported. It may be convenient to use
 * JS::ConstLatin1Chars or JS::ConstTwoByteChars.
 *
 * (StringToBigInt performs parsing similar to that performed by the |Number|
 * global function when passed a string, but it doesn't allow infinities,
 * decimal points, or exponential notation, and neither algorithm allows numeric
 * separators or an 'n' suffix character. This fast-and-loose description is
 * offered purely as a convenience to the reader: see the specification
 * algorithm for exact behavior.)
 *
 * If parsing fails, this function returns null and throws an exception.
 ','line_number':138,'multiline':True]
['text':'*
 * Create a BigInt by parsing a string consisting of an optional sign character
 * followed by one or more alphanumeric ASCII digits in the provided radix.
 *
 * If the radix is not in the range [2, 36], or the string fails to parse, this
 * function returns null and throws an exception.
 ','line_number':159,'multiline':True]
['text':'*
 * Convert a JS::Value to a BigInt using the ECMAScript ToBigInt algorithm
 * (https://tc39.es/ecma262/#sec-tobigint).
 *
 * (Note in particular that this will throw if passed a value whose type is
 * 'number'. To convert a number to a BigInt, use one of the overloads of
 * JS::NumberToBigInt().)
 ','line_number':169,'multiline':True]
['text':'*
 * Convert the given BigInt, modulo 2**64, to a signed 64-bit integer.
 ','line_number':179,'multiline':True]
['text':'*
 * Convert the given BigInt, modulo 2**64, to an unsigned 64-bit integer.
 ','line_number':184,'multiline':True]
['text':'*
 * Convert the given BigInt to a Number value as if calling the Number
 * constructor on it
 * (https://tc39.es/ecma262/#sec-number-constructor-number-value). The value
 * may be rounded if it doesn't fit without loss of precision.
 ','line_number':189,'multiline':True]
['text':'*
 * Return true if the given BigInt is negative.
 ','line_number':197,'multiline':True]
['text':'*
 * Return true if the given BigInt fits inside the given NumericT type without
 * loss of precision, and store the value in the out parameter. Otherwise return
 * false and leave the value of the out parameter unspecified.
 ','line_number':202,'multiline':True]
['text':'*
 * Same as BigIntFits(), but checks if the value fits inside a JS Number value.
 ','line_number':212,'multiline':True]
['text':'*
 * Convert the given BigInt to a String value as if toString() were called on
 * it.
 *
 * If the radix is not in the range [2, 36], then this function returns null and
 * throws an exception.
 ','line_number':217,'multiline':True]
['text':' namespace JS','line_number':227,'multiline':False]
['text':' js_BigInt_h ','line_number':229,'multiline':True]
