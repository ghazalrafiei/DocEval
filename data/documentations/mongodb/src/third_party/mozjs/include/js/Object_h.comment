['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 * vim: set ts=8 sts=2 et sw=2 tw=80:
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':1,'multiline':True]
['text':' JS::shadow::Object','line_number':10,'multiline':False]
['text':' MOZ_ASSERT','line_number':12,'multiline':False]
['text':' size_t','line_number':14,'multiline':False]
['text':' uint32_t','line_number':15,'multiline':False]
['text':' JS_PUBLIC_API','line_number':17,'multiline':False]
['text':' js::ESClass, JSCLASS_RESERVED_SLOTS, JSCLASS_HAS_PRIVATE','line_number':19,'multiline':False]
['text':' JS::GetCompartmentForRealm','line_number':20,'multiline':False]
['text':' JS::{,Mutable}Handle','line_number':21,'multiline':False]
['text':' JS::Value','line_number':22,'multiline':False]
['text':'*
 * Determine the ECMAScript "class" -- Date, String, RegExp, and all the other
 * builtin object types (described in ECMAScript in terms of an objecting having
 * "an [[ArrayBufferData]] internal slot" or similar language for other kinds of
 * object -- of the provided object.
 *
 * If this function is passed a wrapper that can be unwrapped, the determination
 * is performed on that object.  If the wrapper can't be unwrapped, and it's not
 * a wrapper that prefers to treat this operation as a failure, this function
 * will indicate that the object is |js::ESClass::Other|.
 ','line_number':31,'multiline':True]
['text':'* Get the |JSClass| of an object. ','line_number':45,'multiline':True]
['text':'*
 * Get the |JS::Compartment*| of an object.
 *
 * Note that the compartment of an object in this realm, that is a
 * cross-compartment wrapper around an object from another realm, is the
 * compartment of this realm.
 ','line_number':50,'multiline':True]
['text':'*
 * Get the private value stored for an object whose class has a private.
 *
 * It is safe to call this function within |obj|'s finalize hook.
 ','line_number':62,'multiline':True]
['text':'*
 * Set the private value for |obj|.
 *
 * This function may called during the finalization of |obj|.
 ','line_number':73,'multiline':True]
['text':'*
 * Get the value stored in a reserved slot in an object.
 *
 * If |obj| is known to be a proxy and you're willing to use friend APIs,
 * |js::GetProxyReservedSlot| in "js/Proxy.h" is very slightly more efficient.
 ','line_number':80,'multiline':True]
['text':' namespace detail','line_number':96,'multiline':False]
['text':'*
 * Store a value in an object's reserved slot.
 *
 * This can be used with both native objects and proxies.  However, if |obj| is
 * known to be a proxy, |js::SetProxyReservedSlot| in "js/Proxy.h" is very
 * slightly more efficient.
 ','line_number':98,'multiline':True]
['text':' namespace JS','line_number':115,'multiline':False]
['text':' js_public_Object_h','line_number':117,'multiline':False]
