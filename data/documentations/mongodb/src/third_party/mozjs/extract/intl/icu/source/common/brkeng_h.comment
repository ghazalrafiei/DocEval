['text':' Â© 2016 and later: Unicode, Inc. and others.','line_number':1,'multiline':False]
['text':' License & terms of use: http://www.unicode.org/copyright.html','line_number':2,'multiline':False]
['text':'*
 ************************************************************************************
 * Copyright (C) 2006-2012, International Business Machines Corporation and others. *
 * All Rights Reserved.                                                             *
 ************************************************************************************
 ','line_number':3,'multiline':True]
['text':'******************************************************************
 * LanguageBreakEngine
 ','line_number':25,'multiline':True]
['text':'*
 * <p>LanguageBreakEngines implement language-specific knowledge for
 * finding text boundaries within a run of characters belonging to a
 * specific set. The boundaries will be of a specific kind, e.g. word,
 * line, etc.</p>
 *
 * <p>LanguageBreakEngines should normally be implemented so as to
 * be shared between threads without locking.</p>
 ','line_number':29,'multiline':True]
['text':'*
   * <p>Default constructor.</p>
   *
   ','line_number':41,'multiline':True]
['text':'*
   * <p>Virtual destructor.</p>
   ','line_number':47,'multiline':True]
['text':'*
  * <p>Indicate whether this engine handles a particular character for
  * a particular kind of break.</p>
  *
  * @param c A character which begins a run that the engine might handle
  * @return true if this engine handles the particular character and break
  * type.
  ','line_number':52,'multiline':True]
['text':'*
  * <p>Find any breaks within a run in the supplied text.</p>
  *
  * @param text A UText representing the text. The
  * iterator is left at the end of the run of characters which the engine
  * is capable of handling.
  * @param startPos The start of the run within the supplied text.
  * @param endPos The end of the run within the supplied text.
  * @param foundBreaks A Vector of int32_t to receive the breaks.
  * @return The number of breaks found.
  ','line_number':62,'multiline':True]
['text':'******************************************************************
 * LanguageBreakFactory
 ','line_number':80,'multiline':True]
['text':'*
 * <p>LanguageBreakFactorys find and return a LanguageBreakEngine
 * that can determine breaks for characters in a specific set, if
 * such an object can be found.</p>
 *
 * <p>If a LanguageBreakFactory is to be shared between threads,
 * appropriate synchronization must be used; there is none internal
 * to the factory.</p>
 *
 * <p>A LanguageBreakEngine returned by a LanguageBreakFactory can
 * normally be shared between threads without synchronization, unless
 * the specific subclass of LanguageBreakFactory indicates otherwise.</p>
 *
 * <p>A LanguageBreakFactory is responsible for deleting any LanguageBreakEngine
 * it returns when it itself is deleted, unless the specific subclass of
 * LanguageBreakFactory indicates otherwise. Naturally, the factory should
 * not be deleted until the LanguageBreakEngines it has returned are no
 * longer needed.</p>
 ','line_number':84,'multiline':True]
['text':'*
   * <p>Default constructor.</p>
   *
   ','line_number':106,'multiline':True]
['text':'*
   * <p>Virtual destructor.</p>
   ','line_number':112,'multiline':True]
['text':'*
  * <p>Find and return a LanguageBreakEngine that can find the desired
  * kind of break for the set of characters to which the supplied
  * character belongs. It is up to the set of available engines to
  * determine what the sets of characters are.</p>
  *
  * @param c A character that begins a run for which a LanguageBreakEngine is
  * sought.
  * @return A LanguageBreakEngine with the desired characteristics, or 0.
  ','line_number':117,'multiline':True]
['text':'******************************************************************
 * UnhandledEngine
 ','line_number':131,'multiline':True]
['text':'*
 * <p>UnhandledEngine is a special subclass of LanguageBreakEngine that
 * handles characters that no other LanguageBreakEngine is available to
 * handle. It is told the character and the type of break; at its
 * discretion it may handle more than the specified character (e.g.,
 * the entire script to which that character belongs.</p>
 *
 * <p>UnhandledEngines may not be shared between threads without
 * external synchronization.</p>
 ','line_number':135,'multiline':True]
['text':'*
     * The sets of characters handled.
     * @internal
     ','line_number':149,'multiline':True]
['text':'*
   * <p>Default constructor.</p>
   *
   ','line_number':158,'multiline':True]
['text':'*
   * <p>Virtual destructor.</p>
   ','line_number':164,'multiline':True]
['text':'*
  * <p>Indicate whether this engine handles a particular character for
  * a particular kind of break.</p>
  *
  * @param c A character which begins a run that the engine might handle
  * @return true if this engine handles the particular character and break
  * type.
  ','line_number':169,'multiline':True]
['text':'*
  * <p>Find any breaks within a run in the supplied text.</p>
  *
  * @param text A UText representing the text (TODO: UText). The
  * iterator is left at the end of the run of characters which the engine
  * is capable of handling.
  * @param startPos The start of the run within the supplied text.
  * @param endPos The end of the run within the supplied text.
  * @param foundBreaks An allocated C array of the breaks found, if any
  * @return The number of breaks found.
  ','line_number':179,'multiline':True]
['text':'*
  * <p>Tell the engine to handle a particular character and break type.</p>
  *
  * @param c A character which the engine should handle
  ','line_number':195,'multiline':True]
['text':'******************************************************************
 * ICULanguageBreakFactory
 ','line_number':204,'multiline':True]
['text':'*
 * <p>ICULanguageBreakFactory is the default LanguageBreakFactory for
 * ICU. It creates dictionary-based LanguageBreakEngines from dictionary
 * data in the ICU data file.</p>
 ','line_number':208,'multiline':True]
['text':'*
     * The stack of break engines created by this factory
     * @internal
     ','line_number':216,'multiline':True]
['text':'*
   * <p>Standard constructor.</p>
   *
   ','line_number':225,'multiline':True]
['text':'*
   * <p>Virtual destructor.</p>
   ','line_number':231,'multiline':True]
['text':'*
  * <p>Find and return a LanguageBreakEngine that can find the desired
  * kind of break for the set of characters to which the supplied
  * character belongs. It is up to the set of available engines to
  * determine what the sets of characters are.</p>
  *
  * @param c A character that begins a run for which a LanguageBreakEngine is
  * sought.
  * @return A LanguageBreakEngine with the desired characteristics, or 0.
  ','line_number':236,'multiline':True]
['text':'*
  * <p>Create a LanguageBreakEngine for the set of characters to which
  * the supplied character belongs, for the specified break type.</p>
  *
  * @param c A character that begins a run for which a LanguageBreakEngine is
  * sought.
  * @return A LanguageBreakEngine with the desired characteristics, or 0.
  ','line_number':249,'multiline':True]
['text':'*
   * <p>Create a DictionaryMatcher for the specified script and break type.</p>
   * @param script An ISO 15924 script code that identifies the dictionary to be
   * created.
   * @return A DictionaryMatcher with the desired characteristics, or NULL.
   ','line_number':259,'multiline':True]
['text':' BRKENG_H ','line_number':270,'multiline':True]
