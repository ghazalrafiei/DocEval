['text':' Â© 2016 and later: Unicode, Inc. and others.','line_number':1,'multiline':False]
['text':' License & terms of use: http://www.unicode.org/copyright.html','line_number':2,'multiline':False]
['text':'
*******************************************************************************
*   Copyright (C) 2010, International Business Machines
*   Corporation and others.  All Rights Reserved.
*******************************************************************************
*   file name:  denseranges.cpp
*   encoding:   UTF-8
*   tab size:   8 (not used)
*   indentation:4
*
*   created on: 2010sep25
*   created by: Markus W. Scherer
*
* Helper code for finding a small number of dense ranges.
','line_number':3,'multiline':True]
['text':' Definitions in the anonymous namespace are invisible outside this file.','line_number':22,'multiline':False]
['text':'*
 * Collect up to 15 range gaps and sort them by ascending gap size.
 ','line_number':25,'multiline':True]
['text':' The new gap is now one of the maxLength largest.','line_number':38,'multiline':False]
['text':' Insert the new gap, moving up smaller ones of the previous','line_number':39,'multiline':False]
['text':' length largest.','line_number':40,'multiline':False]
['text':' namespace','line_number':86,'multiline':False]
['text':'*
 * Does it make sense to write 1..capacity ranges?
 * Returns 0 if not, otherwise the number of ranges.
 * @param values Sorted array of signed-integer values.
 * @param length Number of values.
 * @param density Minimum average range density, in 256th. (0x100=100%=perfectly dense.)
 *                Should be 0x80..0x100, must be 1..0x100.
 * @param ranges Output ranges array.
 * @param capacity Maximum number of ranges.
 * @return Minimum number of ranges (at most capacity) that have the desired density,
 *         or 0 if that density cannot be achieved.
 ','line_number':88,'multiline':True]
['text':' Assume minValue<=maxValue.','line_number':108,'multiline':False]
['text':' Use int64_t variables for intermediate-value precision and to avoid','line_number':109,'multiline':False]
['text':' signed-int32_t overflow of maxValue-minValue.','line_number':110,'multiline':False]
['text':' Use one range.','line_number':113,'multiline':False]
['text':' See if we can split [minValue, maxValue] into 2..capacity ranges,','line_number':121,'multiline':False]
['text':' divided by the 1..(capacity-1) largest gaps.','line_number':122,'multiline':False]
['text':' We know gaps.count()>=1 because we have fewer values (length) than','line_number':134,'multiline':False]
['text':' the length of the [minValue..maxValue] range (maxLength).','line_number':135,'multiline':False]
['text':' (Otherwise we would have returned with the one range above.)','line_number':136,'multiline':False]
['text':' The values are too sparse for capacity or fewer ranges','line_number':140,'multiline':False]
['text':' of the requested density.','line_number':141,'multiline':False]
['text':' Use the num ranges with the num-1 largest gaps.','line_number':149,'multiline':False]
