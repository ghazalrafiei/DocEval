['text':' Â© 2016 and later: Unicode, Inc. and others.','line_number':1,'multiline':False]
['text':' License & terms of use: http://www.unicode.org/copyright.html','line_number':2,'multiline':False]
['text':'  
**********************************************************************
*   Copyright (C) 2002-2015, International Business Machines
*   Corporation and others.  All Rights Reserved.
**********************************************************************
*   file name:  ucnv_u16.c
*   encoding:   UTF-8
*   tab size:   8 (not used)
*   indentation:4
*
*   created on: 2002jul01
*   created by: Markus W. Scherer
*
*   UTF-16 converter implementation. Used to be in ucnv_utf.c.
','line_number':3,'multiline':True]
['text':'
 * The UTF-16 toUnicode implementation is also used for the Java-specific
 * "with BOM" variants of UTF-16BE and UTF-16LE.
 ','line_number':34,'multiline':True]
['text':' UTF-16BE ----------------------------------------------------------------- ','line_number':42,'multiline':True]
['text':' no input, nothing to do ','line_number':66,'multiline':True]
['text':' write the BOM if necessary ','line_number':72,'multiline':True]
['text':' c!=0 indicates in several places outside the main loops that a surrogate was found ','line_number':93,'multiline':True]
['text':' the last buffer ended with a lead surrogate, output the surrogate pair ','line_number':96,'multiline':True]
['text':' copy an even number of bytes for complete UChars ','line_number':116,'multiline':True]
['text':' count is even ','line_number':121,'multiline':True]
['text':' done with the loop for complete UChars ','line_number':176,'multiline':True]
['text':'
                 * there is more input and some target capacity -
                 * it must be targetCapacity==1 because otherwise
                 * the above would have copied more;
                 * prepare for overflow output
                 ','line_number':178,'multiline':True]
['text':' 2 bytes to output ','line_number':187,'multiline':True]
['text':' } else { keep c for surrogate handling, length will be set there ','line_number':189,'multiline':True]
['text':' keep c for surrogate handling, length will be set there ','line_number':196,'multiline':True]
['text':' from here on, length counts the bytes in overflow[] ','line_number':200,'multiline':True]
['text':'
         * c is a surrogate, and
         * - source or target too short
         * - or the surrogate is unmatched
         ','line_number':204,'multiline':True]
['text':' output the surrogate pair, will overflow (see conditions comment above) ','line_number':213,'multiline':True]
['text':' 4 bytes to output ','line_number':219,'multiline':True]
['text':' unmatched lead surrogate ','line_number':222,'multiline':True]
['text':' see if the trail surrogate is in the next buffer ','line_number':226,'multiline':True]
['text':' unmatched trail surrogate ','line_number':229,'multiline':True]
['text':' output length bytes with overflow (length>targetCapacity>0) ','line_number':236,'multiline':True]
['text':' write back the updated pointers ','line_number':249,'multiline':True]
['text':' no input, nothing to do ','line_number':275,'multiline':True]
['text':' complete a partial UChar or pair from the last call ','line_number':290,'multiline':True]
['text':'
         * special case: single byte from a previous buffer,
         * where the byte turned out not to belong to a trail surrogate
         * and the preceding, unmatched lead surrogate was put into toUBytes[]
         * for error handling
         ','line_number':292,'multiline':True]
['text':' output the BMP code point ','line_number':311,'multiline':True]
['text':' continue collecting bytes for the trail surrogate ','line_number':321,'multiline':True]
['text':' avoid unnecessary surrogate handling below ','line_number':322,'multiline':True]
['text':' fall through to error handling for an unmatched trail surrogate ','line_number':324,'multiline':True]
['text':' output the surrogate pair ','line_number':331,'multiline':True]
['text':' targetCapacity==1 ','line_number':340,'multiline':True]
['text':' unmatched lead surrogate, handle here for consistent toUBytes[] ','line_number':350,'multiline':True]
['text':' back out reading the code unit after it ','line_number':353,'multiline':True]
['text':'
                         * if the trail unit's first byte was in a previous buffer, then
                         * we need to put it into a special place because toUBytes[] will be
                         * used for the lead unit's bytes
                         ','line_number':357,'multiline':True]
['text':' write back the updated pointers ','line_number':367,'multiline':True]
['text':' copy an even number of bytes for complete UChars ','line_number':378,'multiline':True]
['text':' done with the loop for complete UChars ','line_number':429,'multiline':True]
['text':' keep c for surrogate handling, trail will be set there ','line_number':432,'multiline':True]
['text':' one more byte pair was consumed than count decremented ','line_number':433,'multiline':True]
['text':'
         * c is a surrogate, and
         * - source or target too short
         * - or the surrogate is unmatched
         ','line_number':439,'multiline':True]
['text':' output the surrogate pair, will overflow (see conditions comment above) ','line_number':451,'multiline':True]
['text':' unmatched lead surrogate ','line_number':463,'multiline':True]
['text':' see if the trail surrogate is in the next buffer ','line_number':467,'multiline':True]
['text':' unmatched trail surrogate ','line_number':470,'multiline':True]
['text':' check for a remaining source byte ','line_number':476,'multiline':True]
['text':' it must be length==1 because otherwise the above would have copied more ','line_number':481,'multiline':True]
['text':' write back the updated pointers ','line_number':487,'multiline':True]
['text':' no input ','line_number':506,'multiline':True]
['text':' only one byte: truncated UChar ','line_number':512,'multiline':True]
['text':' get one UChar ','line_number':520,'multiline':True]
['text':' check for a surrogate pair ','line_number':524,'multiline':True]
['text':' get a second UChar and see if it is a trail surrogate ','line_number':530,'multiline':True]
['text':' unmatched lead surrogate ','line_number':536,'multiline':True]
['text':' too few (2 or 3) bytes for a surrogate pair: truncated code point ','line_number':540,'multiline':True]
['text':' unmatched trail surrogate ','line_number':552,'multiline':True]
['text':' write the unmatched surrogate ','line_number':557,'multiline':True]
['text':' reset toUnicode state ','line_number':575,'multiline':True]
['text':' no BOM handling ','line_number':577,'multiline':True]
['text':' Java-specific "UnicodeBig" requires BE BOM or no BOM ','line_number':579,'multiline':True]
['text':' reset fromUnicode for "UnicodeBig": prepare to output the UTF-16BE BOM ','line_number':583,'multiline':True]
['text':' reserved ','line_number':643,'multiline':True]
['text':' UTF-16LE ----------------------------------------------------------------- ','line_number':650,'multiline':True]
['text':' no input, nothing to do ','line_number':667,'multiline':True]
['text':' write the BOM if necessary ','line_number':673,'multiline':True]
['text':' c!=0 indicates in several places outside the main loops that a surrogate was found ','line_number':694,'multiline':True]
['text':' the last buffer ended with a lead surrogate, output the surrogate pair ','line_number':697,'multiline':True]
['text':' copy an even number of bytes for complete UChars ','line_number':717,'multiline':True]
['text':' count is even ','line_number':722,'multiline':True]
['text':' done with the loop for complete UChars ','line_number':777,'multiline':True]
['text':'
                 * there is more input and some target capacity -
                 * it must be targetCapacity==1 because otherwise
                 * the above would have copied more;
                 * prepare for overflow output
                 ','line_number':779,'multiline':True]
['text':' 2 bytes to output ','line_number':788,'multiline':True]
['text':' } else { keep c for surrogate handling, length will be set there ','line_number':790,'multiline':True]
['text':' keep c for surrogate handling, length will be set there ','line_number':797,'multiline':True]
['text':' from here on, length counts the bytes in overflow[] ','line_number':801,'multiline':True]
['text':'
         * c is a surrogate, and
         * - source or target too short
         * - or the surrogate is unmatched
         ','line_number':805,'multiline':True]
['text':' output the surrogate pair, will overflow (see conditions comment above) ','line_number':814,'multiline':True]
['text':' 4 bytes to output ','line_number':820,'multiline':True]
['text':' unmatched lead surrogate ','line_number':823,'multiline':True]
['text':' see if the trail surrogate is in the next buffer ','line_number':827,'multiline':True]
['text':' unmatched trail surrogate ','line_number':830,'multiline':True]
['text':' output length bytes with overflow (length>targetCapacity>0) ','line_number':837,'multiline':True]
['text':' write back the updated pointers ','line_number':850,'multiline':True]
['text':' no input, nothing to do ','line_number':876,'multiline':True]
['text':' complete a partial UChar or pair from the last call ','line_number':891,'multiline':True]
['text':'
         * special case: single byte from a previous buffer,
         * where the byte turned out not to belong to a trail surrogate
         * and the preceding, unmatched lead surrogate was put into toUBytes[]
         * for error handling
         ','line_number':893,'multiline':True]
['text':' output the BMP code point ','line_number':912,'multiline':True]
['text':' continue collecting bytes for the trail surrogate ','line_number':922,'multiline':True]
['text':' avoid unnecessary surrogate handling below ','line_number':923,'multiline':True]
['text':' fall through to error handling for an unmatched trail surrogate ','line_number':925,'multiline':True]
['text':' output the surrogate pair ','line_number':932,'multiline':True]
['text':' targetCapacity==1 ','line_number':941,'multiline':True]
['text':' unmatched lead surrogate, handle here for consistent toUBytes[] ','line_number':951,'multiline':True]
['text':' back out reading the code unit after it ','line_number':954,'multiline':True]
['text':'
                         * if the trail unit's first byte was in a previous buffer, then
                         * we need to put it into a special place because toUBytes[] will be
                         * used for the lead unit's bytes
                         ','line_number':958,'multiline':True]
['text':' write back the updated pointers ','line_number':968,'multiline':True]
['text':' copy an even number of bytes for complete UChars ','line_number':979,'multiline':True]
['text':' done with the loop for complete UChars ','line_number':1030,'multiline':True]
['text':' keep c for surrogate handling, trail will be set there ','line_number':1033,'multiline':True]
['text':' one more byte pair was consumed than count decremented ','line_number':1034,'multiline':True]
['text':'
         * c is a surrogate, and
         * - source or target too short
         * - or the surrogate is unmatched
         ','line_number':1040,'multiline':True]
['text':' output the surrogate pair, will overflow (see conditions comment above) ','line_number':1052,'multiline':True]
['text':' unmatched lead surrogate ','line_number':1064,'multiline':True]
['text':' see if the trail surrogate is in the next buffer ','line_number':1068,'multiline':True]
['text':' unmatched trail surrogate ','line_number':1071,'multiline':True]
['text':' check for a remaining source byte ','line_number':1077,'multiline':True]
['text':' it must be length==1 because otherwise the above would have copied more ','line_number':1082,'multiline':True]
['text':' write back the updated pointers ','line_number':1088,'multiline':True]
['text':' no input ','line_number':1107,'multiline':True]
['text':' only one byte: truncated UChar ','line_number':1113,'multiline':True]
['text':' get one UChar ','line_number':1121,'multiline':True]
['text':' check for a surrogate pair ','line_number':1125,'multiline':True]
['text':' get a second UChar and see if it is a trail surrogate ','line_number':1131,'multiline':True]
['text':' unmatched lead surrogate ','line_number':1137,'multiline':True]
['text':' too few (2 or 3) bytes for a surrogate pair: truncated code point ','line_number':1141,'multiline':True]
['text':' unmatched trail surrogate ','line_number':1153,'multiline':True]
['text':' write the unmatched surrogate ','line_number':1158,'multiline':True]
['text':' reset toUnicode state ','line_number':1176,'multiline':True]
['text':' no BOM handling ','line_number':1178,'multiline':True]
['text':' Java-specific "UnicodeLittle" requires LE BOM or no BOM ','line_number':1180,'multiline':True]
['text':' reset fromUnicode for "UnicodeLittle": prepare to output the UTF-16LE BOM ','line_number':1184,'multiline':True]
['text':' reserved ','line_number':1245,'multiline':True]
['text':' UTF-16 (Detect BOM) ------------------------------------------------------ ','line_number':1252,'multiline':True]
['text':'
 * Detect a BOM at the beginning of the stream and select UTF-16BE or UTF-16LE
 * accordingly.
 * This is a simpler version of the UTF-32 converter, with
 * fewer states for shorter BOMs.
 *
 * State values:
 * 0    initial state
 * 1    saw first byte
 * 2..5 -
 * 6..7 see _UTF16ToUnicodeWithOffsets() comments in state 1
 * 8    UTF-16BE mode
 * 9    UTF-16LE mode
 *
 * During detection: state==number of initial bytes seen so far.
 *
 * On output, emit U+FEFF as the first code point.
 *
 * Variants:
 * - UTF-16,version=1 (Java "Unicode" encoding) treats a missing BOM as an error.
 * - UTF-16BE,version=1 (Java "UnicodeBig" encoding) and
 *   UTF-16LE,version=1 (Java "UnicodeLittle" encoding) treat a reverse BOM as an error.
 ','line_number':1254,'multiline':True]
['text':' reset toUnicode: state=0 ','line_number':1281,'multiline':True]
['text':' reset fromUnicode: prepare to output the UTF-16PE BOM ','line_number':1285,'multiline':True]
['text':'
             * Switch implementation, and switch the staticData that's different
             * and was copied into the UConverter.
             * (See ucnv_createConverterFromSharedData() in ucnv_bld.c.)
             * UTF-16,version=2 fromUnicode() always writes a big-endian byte stream.
             ','line_number':1298,'multiline':True]
['text':'
     * If we detect a BOM in this buffer, then we must add the BOM size to the
     * offsets because the actual converter function will not see and count the BOM.
     * offsetDelta will have the number of the BOM bytes that are in the current buffer.
     ','line_number':1352,'multiline':True]
['text':'
             * Only inside this switch case can the state variable
             * temporarily take two additional values:
             * 6: BOM error, continue with BE
             * 7: BOM error, continue with LE
             ','line_number':1367,'multiline':True]
['text':' illegal reverse BOM for Java "UnicodeLittle" ','line_number':1376,'multiline':True]
['text':' detect UTF-16BE ','line_number':1378,'multiline':True]
['text':' illegal reverse BOM for Java "UnicodeBig" ','line_number':1382,'multiline':True]
['text':' detect UTF-16LE ','line_number':1384,'multiline':True]
['text':' illegal missing BOM for Java "Unicode" ','line_number':1387,'multiline':True]
['text':' BOM detected, consume it ','line_number':1390,'multiline':True]
['text':' ok: no BOM, and not a reverse BOM ','line_number':1395,'multiline':True]
['text':' reset the source for a correct first offset ','line_number':1397,'multiline':True]
['text':' Make Java "UnicodeLittle" default to LE. ','line_number':1402,'multiline':True]
['text':' Make standard UTF-16 and Java "UnicodeBig" default to BE. ','line_number':1405,'multiline':True]
['text':'
                 * error: missing BOM, or reverse BOM
                 * UTF-16,version=1: Java-specific "Unicode" requires a BOM.
                 * UTF-16BE,version=1: Java-specific "UnicodeBig" requires a BE BOM or no BOM.
                 * UTF-16LE,version=1: Java-specific "UnicodeLittle" requires an LE BOM or no BOM.
                 ','line_number':1409,'multiline':True]
['text':' report the non-BOM or reverse BOM as an illegal sequence ','line_number':1415,'multiline':True]
['text':' continue with conversion if the callback resets the error ','line_number':1419,'multiline':True]
['text':'
                 * Make Java "Unicode" default to BE like standard UTF-16.
                 * Make Java "UnicodeBig" and "UnicodeLittle" default
                 * to their normal endiannesses.
                 ','line_number':1420,'multiline':True]
['text':' convert the rest of the stream ','line_number':1429,'multiline':True]
['text':' call UTF-16BE ','line_number':1433,'multiline':True]
['text':' call UTF-16LE ','line_number':1439,'multiline':True]
['text':' does not occur ','line_number':1445,'multiline':True]
['text':' add BOM size to offsets - see comment at offsetDelta declaration ','line_number':1449,'multiline':True]
['text':' handle truncated input ','line_number':1460,'multiline':True]
['text':' no input at all, nothing to do ','line_number':1463,'multiline':True]
['text':' 0<state<8: framework will report truncation, nothing to do here ','line_number':1471,'multiline':True]
['text':' ### TODO implement getStarters for all Unicode encodings?! ','line_number':1509,'multiline':True]
['text':' CCSID for BOM sensitive UTF-16 ','line_number':1522,'multiline':True]
['text':' reserved ','line_number':1532,'multiline':True]
['text':' ### TODO implement getStarters for all Unicode encodings?! ','line_number':1554,'multiline':True]
['text':' CCSID for BOM sensitive UTF-16 ','line_number':1567,'multiline':True]
['text':' reserved ','line_number':1573,'multiline':True]
