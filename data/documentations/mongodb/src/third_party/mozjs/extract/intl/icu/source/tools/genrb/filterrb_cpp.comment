['text':' Â© 2018 and later: Unicode, Inc. and others.','line_number':1,'multiline':False]
['text':' License & terms of use: http://www.unicode.org/copyright.html','line_number':2,'multiline':False]
['text':' defaultResult "bubbles up" the nearest "definite" inclusion/exclusion rule','line_number':100,'multiline':False]
['text':' rules handled here: "+/" and "-/"','line_number':103,'multiline':False]
['text':' isLeaf is whether the filter tree can provide no additional information','line_number':107,'multiline':False]
['text':' even if additional subpaths are added to the given key','line_number':108,'multiline':False]
['text':' Leaf case 1: input path descends outside the filter tree','line_number':113,'multiline':False]
['text':' A wildcard pattern is present; continue checking','line_number':116,'multiline':False]
['text':' Leaf case 2: input path exactly matches a filter leaf','line_number':130,'multiline':False]
['text':' Always return PARTIAL if we are not at a leaf','line_number':135,'multiline':False]
['text':' If leaf node is PARTIAL, return the default','line_number':140,'multiline':False]
['text':' Note: can't use the default copy assignment because of the std::unique_ptr','line_number':151,'multiline':False]
['text':' Base Case','line_number':167,'multiline':False]
['text':' Recursive Step','line_number':179,'multiline':False]
['text':' Case 1: Wildcard','line_number':182,'multiline':False]
['text':' Apply the rule to fWildcard and also to all existing children.','line_number':186,'multiline':False]
['text':' Case 2: Normal Key','line_number':195,'multiline':False]
['text':' Deep-copy the existing wildcard tree into the new key','line_number':199,'multiline':False]
