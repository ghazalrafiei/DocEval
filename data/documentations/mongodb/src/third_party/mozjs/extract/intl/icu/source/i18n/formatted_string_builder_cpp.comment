['text':' Â© 2017 and later: Unicode, Inc. and others.','line_number':1,'multiline':False]
['text':' License & terms of use: http://www.unicode.org/copyright.html','line_number':2,'multiline':False]
['text':' for UNumberFormatFields literals','line_number':11,'multiline':False]
['text':' A version of uprv_memcpy that checks for length 0.','line_number':15,'multiline':False]
['text':' By default, uprv_memcpy requires a length of at least 1.','line_number':16,'multiline':False]
['text':' A version of uprv_memmove that checks for length 0.','line_number':23,'multiline':False]
['text':' By default, uprv_memmove requires a length of at least 1.','line_number':24,'multiline':False]
['text':' namespace','line_number':31,'multiline':False]
['text':' Initializing the memory to non-zero helps catch some bugs that involve','line_number':38,'multiline':False]
['text':' reading from an improperly terminated string.','line_number':39,'multiline':False]
['text':' Check for self-assignment','line_number':58,'multiline':False]
['text':' Continue with deallocation and copying','line_number':63,'multiline':False]
['text':' FIXME: uprv_malloc','line_number':72,'multiline':False]
['text':' C++ note: malloc appears in two places: here and in prepareForInsertHelper.','line_number':73,'multiline':False]
['text':' UErrorCode is not available; fail silently.','line_number':77,'multiline':False]
['text':' can't fail','line_number':80,'multiline':False]
['text':' TODO: Reset the heap here?','line_number':142,'multiline':False]
['text':' Nothing to insert.','line_number':169,'multiline':False]
['text':' Fast path: insert using insertCodePoint.','line_number':172,'multiline':False]
['text':' Overall, chars need to be added.','line_number':202,'multiline':False]
['text':' Overall, chars need to be removed or kept the same.','line_number':205,'multiline':False]
['text':' Nothing to insert.','line_number':230,'multiline':False]
['text':' Append to start','line_number':259,'multiline':False]
['text':' Append to end','line_number':264,'multiline':False]
['text':' Move chars around and/or allocate more space','line_number':268,'multiline':False]
['text':' If we continue, then newCapacity will overlow int32_t in the next line.','line_number':280,'multiline':False]
['text':' C++ note: malloc appears in two places: here and in the assignment operator.','line_number':287,'multiline':False]
['text':' First copy the prefix and then the suffix, leaving room for the new chars that the','line_number':297,'multiline':False]
['text':' caller wants to insert.','line_number':298,'multiline':False]
['text':' C++ note: memcpy is OK because the src and dest do not overlap.','line_number':299,'multiline':False]
['text':' C++ note: memmove is required because src and dest may overlap.','line_number':323,'multiline':False]
['text':' First copy the entire string to the location of the prefix, and then move the suffix','line_number':324,'multiline':False]
['text':' to make room for the new chars that the caller wants to insert.','line_number':325,'multiline':False]
['text':' TODO: Reset the heap here?  (If the string after removal can fit on stack?)','line_number':343,'multiline':False]
['text':' Readonly-alias constructor:','line_number':361,'multiline':False]
['text':' #if !UCONFIG_NO_FORMATTING ','line_number':449,'multiline':True]
