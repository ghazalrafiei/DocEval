['text':' Â© 2016 and later: Unicode, Inc. and others.','line_number':1,'multiline':False]
['text':' License & terms of use: http://www.unicode.org/copyright.html','line_number':2,'multiline':False]
['text':'
*******************************************************************************
*   Copyright (C) 2004-2015, International Business Machines
*   Corporation and others.  All Rights Reserved.
*******************************************************************************
*   file name:  uregex.cpp
','line_number':3,'multiline':True]
['text':' Text from setText()','line_number':44,'multiline':False]
['text':' Length provided by user with setText(), which','line_number':45,'multiline':False]
['text':'  may be -1.','line_number':46,'multiline':False]
['text':' "rexp" in ASCII','line_number':50,'multiline':False]
['text':'----------------------------------------------------------------------------------------','line_number':82,'multiline':False]
['text':'','line_number':83,'multiline':False]
['text':'   validateRE    Do boilerplate style checks on API function parameters.','line_number':84,'multiline':False]
['text':'                 Return TRUE if they look OK.','line_number':85,'multiline':False]
['text':'----------------------------------------------------------------------------------------','line_number':86,'multiline':False]
['text':' !!! Not sure how to update this with the new UText backing, which is stored in re->fMatcher anyway','line_number':95,'multiline':False]
['text':'----------------------------------------------------------------------------------------','line_number':103,'multiline':False]
['text':'','line_number':104,'multiline':False]
['text':'    uregex_open','line_number':105,'multiline':False]
['text':'','line_number':106,'multiline':False]
['text':'----------------------------------------------------------------------------------------','line_number':107,'multiline':False]
['text':'','line_number':140,'multiline':False]
['text':' Make a copy of the pattern string, so we can return it later if asked.','line_number':141,'multiline':False]
['text':'    For compiling the pattern, we will use a UText wrapper around','line_number':142,'multiline':False]
['text':'    this local copy, to avoid making even more copies.','line_number':143,'multiline':False]
['text':'','line_number':144,'multiline':False]
['text':'','line_number':153,'multiline':False]
['text':' Compile the pattern','line_number':154,'multiline':False]
['text':'','line_number':155,'multiline':False]
['text':'','line_number':167,'multiline':False]
['text':' Create the matcher object','line_number':168,'multiline':False]
['text':'','line_number':169,'multiline':False]
['text':'----------------------------------------------------------------------------------------','line_number':181,'multiline':False]
['text':'','line_number':182,'multiline':False]
['text':'    uregex_openUText','line_number':183,'multiline':False]
['text':'','line_number':184,'multiline':False]
['text':'----------------------------------------------------------------------------------------','line_number':185,'multiline':False]
['text':'','line_number':224,'multiline':False]
['text':' Make a copy of the pattern string, so we can return it later if asked.','line_number':225,'multiline':False]
['text':'    For compiling the pattern, we will use a read-only UText wrapper','line_number':226,'multiline':False]
['text':'    around this local copy, to avoid making even more copies.','line_number':227,'multiline':False]
['text':'','line_number':228,'multiline':False]
['text':'','line_number':236,'multiline':False]
['text':' Compile the pattern','line_number':237,'multiline':False]
['text':'','line_number':238,'multiline':False]
['text':'','line_number':250,'multiline':False]
['text':' Create the matcher object','line_number':251,'multiline':False]
['text':'','line_number':252,'multiline':False]
['text':'----------------------------------------------------------------------------------------','line_number':264,'multiline':False]
['text':'','line_number':265,'multiline':False]
['text':'    uregex_close','line_number':266,'multiline':False]
['text':'','line_number':267,'multiline':False]
['text':'----------------------------------------------------------------------------------------','line_number':268,'multiline':False]
['text':'----------------------------------------------------------------------------------------','line_number':280,'multiline':False]
['text':'','line_number':281,'multiline':False]
['text':'    uregex_clone','line_number':282,'multiline':False]
['text':'','line_number':283,'multiline':False]
['text':'----------------------------------------------------------------------------------------','line_number':284,'multiline':False]
['text':' Note:  fText is not cloned.','line_number':309,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':317,'multiline':False]
['text':'','line_number':318,'multiline':False]
['text':'    uregex_pattern','line_number':319,'multiline':False]
['text':'','line_number':320,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':321,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':338,'multiline':False]
['text':'','line_number':339,'multiline':False]
['text':'    uregex_patternUText','line_number':340,'multiline':False]
['text':'','line_number':341,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':342,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':351,'multiline':False]
['text':'','line_number':352,'multiline':False]
['text':'    uregex_flags','line_number':353,'multiline':False]
['text':'','line_number':354,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':355,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':367,'multiline':False]
['text':'','line_number':368,'multiline':False]
['text':'    uregex_setText','line_number':369,'multiline':False]
['text':'','line_number':370,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':371,'multiline':False]
['text':' reset() made a shallow clone, so we don't need this copy','line_number':397,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':401,'multiline':False]
['text':'','line_number':402,'multiline':False]
['text':'    uregex_setUText','line_number':403,'multiline':False]
['text':'','line_number':404,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':405,'multiline':False]
['text':' only fill it in on request','line_number':423,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':431,'multiline':False]
['text':'','line_number':432,'multiline':False]
['text':'    uregex_getText','line_number':433,'multiline':False]
['text':'','line_number':434,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':435,'multiline':False]
['text':' need to fill in the text','line_number':446,'multiline':False]
['text':' because the UText owns it','line_number':452,'multiline':False]
['text':' buffer overflow error','line_number':455,'multiline':False]
['text':' should already be set but just in case','line_number':460,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':471,'multiline':False]
['text':'','line_number':472,'multiline':False]
['text':'    uregex_getUText','line_number':473,'multiline':False]
['text':'','line_number':474,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':475,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':488,'multiline':False]
['text':'','line_number':489,'multiline':False]
['text':'    uregex_refreshUText','line_number':490,'multiline':False]
['text':'','line_number':491,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':492,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':505,'multiline':False]
['text':'','line_number':506,'multiline':False]
['text':'    uregex_matches','line_number':507,'multiline':False]
['text':'','line_number':508,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':509,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':535,'multiline':False]
['text':'','line_number':536,'multiline':False]
['text':'    uregex_lookingAt','line_number':537,'multiline':False]
['text':'','line_number':538,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':539,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':566,'multiline':False]
['text':'','line_number':567,'multiline':False]
['text':'    uregex_find','line_number':568,'multiline':False]
['text':'','line_number':569,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':570,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':597,'multiline':False]
['text':'','line_number':598,'multiline':False]
['text':'    uregex_findNext','line_number':599,'multiline':False]
['text':'','line_number':600,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':601,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':613,'multiline':False]
['text':'','line_number':614,'multiline':False]
['text':'    uregex_groupCount','line_number':615,'multiline':False]
['text':'','line_number':616,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':617,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':630,'multiline':False]
['text':'','line_number':631,'multiline':False]
['text':'    uregex_groupNumberFromName','line_number':632,'multiline':False]
['text':'','line_number':633,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':634,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':660,'multiline':False]
['text':'','line_number':661,'multiline':False]
['text':'    uregex_group','line_number':662,'multiline':False]
['text':'','line_number':663,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':664,'multiline':False]
['text':' If preflighting or if we already have the text as UChars,','line_number':681,'multiline':False]
['text':' this is a little cheaper than extracting from the UText','line_number':682,'multiline':False]
['text':'','line_number':684,'multiline':False]
['text':' Pick up the range of characters from the matcher','line_number':685,'multiline':False]
['text':'','line_number':686,'multiline':False]
['text':'','line_number':693,'multiline':False]
['text':' Trim length based on buffer capacity','line_number':694,'multiline':False]
['text':'','line_number':695,'multiline':False]
['text':'','line_number':707,'multiline':False]
['text':' Copy capture group to user's buffer','line_number':708,'multiline':False]
['text':'','line_number':709,'multiline':False]
['text':' Note edge cases:','line_number':720,'multiline':False]
['text':'   Group didn't match: start == end == -1. UText trims to 0, UText gives zero length result.','line_number':721,'multiline':False]
['text':'   Zero Length Match: start == end.','line_number':722,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':730,'multiline':False]
['text':'','line_number':731,'multiline':False]
['text':'    uregex_groupUText','line_number':732,'multiline':False]
['text':'','line_number':733,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':734,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':750,'multiline':False]
['text':'','line_number':751,'multiline':False]
['text':'    uregex_start','line_number':752,'multiline':False]
['text':'','line_number':753,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':754,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':774,'multiline':False]
['text':'','line_number':775,'multiline':False]
['text':'    uregex_end','line_number':776,'multiline':False]
['text':'','line_number':777,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':778,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':798,'multiline':False]
['text':'','line_number':799,'multiline':False]
['text':'    uregex_reset','line_number':800,'multiline':False]
['text':'','line_number':801,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':802,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':822,'multiline':False]
['text':'','line_number':823,'multiline':False]
['text':'    uregex_setRegion','line_number':824,'multiline':False]
['text':'','line_number':825,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':826,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':848,'multiline':False]
['text':'','line_number':849,'multiline':False]
['text':'    uregex_setRegionAndStart','line_number':850,'multiline':False]
['text':'','line_number':851,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':852,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':866,'multiline':False]
['text':'','line_number':867,'multiline':False]
['text':'    uregex_regionStart','line_number':868,'multiline':False]
['text':'','line_number':869,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':870,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':888,'multiline':False]
['text':'','line_number':889,'multiline':False]
['text':'    uregex_regionEnd','line_number':890,'multiline':False]
['text':'','line_number':891,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':892,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':910,'multiline':False]
['text':'','line_number':911,'multiline':False]
['text':'    uregex_hasTransparentBounds','line_number':912,'multiline':False]
['text':'','line_number':913,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':914,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':926,'multiline':False]
['text':'','line_number':927,'multiline':False]
['text':'    uregex_useTransparentBounds','line_number':928,'multiline':False]
['text':'','line_number':929,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':930,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':943,'multiline':False]
['text':'','line_number':944,'multiline':False]
['text':'    uregex_hasAnchoringBounds','line_number':945,'multiline':False]
['text':'','line_number':946,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':947,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':959,'multiline':False]
['text':'','line_number':960,'multiline':False]
['text':'    uregex_useAnchoringBounds','line_number':961,'multiline':False]
['text':'','line_number':962,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':963,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':976,'multiline':False]
['text':'','line_number':977,'multiline':False]
['text':'    uregex_hitEnd','line_number':978,'multiline':False]
['text':'','line_number':979,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':980,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':992,'multiline':False]
['text':'','line_number':993,'multiline':False]
['text':'    uregex_requireEnd','line_number':994,'multiline':False]
['text':'','line_number':995,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':996,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':1008,'multiline':False]
['text':'','line_number':1009,'multiline':False]
['text':'    uregex_setTimeLimit','line_number':1010,'multiline':False]
['text':'','line_number':1011,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':1012,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':1025,'multiline':False]
['text':'','line_number':1026,'multiline':False]
['text':'    uregex_getTimeLimit','line_number':1027,'multiline':False]
['text':'','line_number':1028,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':1029,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':1043,'multiline':False]
['text':'','line_number':1044,'multiline':False]
['text':'    uregex_setStackLimit','line_number':1045,'multiline':False]
['text':'','line_number':1046,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':1047,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':1060,'multiline':False]
['text':'','line_number':1061,'multiline':False]
['text':'    uregex_getStackLimit','line_number':1062,'multiline':False]
['text':'','line_number':1063,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':1064,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':1077,'multiline':False]
['text':'','line_number':1078,'multiline':False]
['text':'    uregex_setMatchCallback','line_number':1079,'multiline':False]
['text':'','line_number':1080,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':1081,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':1094,'multiline':False]
['text':'','line_number':1095,'multiline':False]
['text':'    uregex_getMatchCallback','line_number':1096,'multiline':False]
['text':'','line_number':1097,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':1098,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':1111,'multiline':False]
['text':'','line_number':1112,'multiline':False]
['text':'    uregex_setMatchProgressCallback','line_number':1113,'multiline':False]
['text':'','line_number':1114,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':1115,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':1128,'multiline':False]
['text':'','line_number':1129,'multiline':False]
['text':'    uregex_getMatchCallback','line_number':1130,'multiline':False]
['text':'','line_number':1131,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':1132,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':1145,'multiline':False]
['text':'','line_number':1146,'multiline':False]
['text':'    uregex_replaceAll','line_number':1147,'multiline':False]
['text':'','line_number':1148,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':1149,'multiline':False]
['text':' Note: Seperate error code variables for findNext() and appendReplacement()','line_number':1172,'multiline':False]
['text':'       are used so that destination buffer overflow errors','line_number':1173,'multiline':False]
['text':'       in appendReplacement won't stop findNext() from working.','line_number':1174,'multiline':False]
['text':'       appendReplacement() and appendTail() special case incoming buffer','line_number':1175,'multiline':False]
['text':'       overflow errors, continuing to return the correct length.','line_number':1176,'multiline':False]
['text':' If anything went wrong with the findNext(), make that error trump','line_number':1185,'multiline':False]
['text':'   whatever may have happened with the append() operations.','line_number':1186,'multiline':False]
['text':'   Errors in findNext() are not expected.','line_number':1187,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':1195,'multiline':False]
['text':'','line_number':1196,'multiline':False]
['text':'    uregex_replaceAllUText','line_number':1197,'multiline':False]
['text':'','line_number':1198,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':1199,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':1219,'multiline':False]
['text':'','line_number':1220,'multiline':False]
['text':'    uregex_replaceFirst','line_number':1221,'multiline':False]
['text':'','line_number':1222,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':1223,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':1256,'multiline':False]
['text':'','line_number':1257,'multiline':False]
['text':'    uregex_replaceFirstUText','line_number':1258,'multiline':False]
['text':'','line_number':1259,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':1260,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':1280,'multiline':False]
['text':'','line_number':1281,'multiline':False]
['text':'    uregex_appendReplacement','line_number':1282,'multiline':False]
['text':'','line_number':1283,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':1284,'multiline':False]
['text':'','line_number':1287,'multiline':False]
['text':'  Dummy class, because these functions need to be friends of class RegexMatcher,','line_number':1288,'multiline':False]
['text':'               and stand-alone C functions don't work as friends','line_number':1289,'multiline':False]
['text':'','line_number':1290,'multiline':False]
['text':'','line_number':1323,'multiline':False]
['text':'  Move a character to an output buffer, with bounds checking on the index.','line_number':1324,'multiline':False]
['text':'      Index advances even if capacity is exceeded, for preflight size computations.','line_number':1325,'multiline':False]
['text':'      This little sequence is used a LOT.','line_number':1326,'multiline':False]
['text':'','line_number':1327,'multiline':False]
['text':'','line_number':1336,'multiline':False]
['text':'  appendReplacement, the actual implementation.','line_number':1337,'multiline':False]
['text':'','line_number':1338,'multiline':False]
['text':' If we come in with a buffer overflow error, don't suppress the operation.','line_number':1346,'multiline':False]
['text':'  A series of appendReplacements, appendTail need to correctly preflight','line_number':1347,'multiline':False]
['text':'  the buffer size when an overflow happens somewhere in the middle.','line_number':1348,'multiline':False]
['text':'','line_number':1355,'multiline':False]
['text':' Validate all paramters','line_number':1356,'multiline':False]
['text':'','line_number':1357,'multiline':False]
['text':' If it wasn't supplied by the caller,  get the length of the replacement text.','line_number':1380,'multiline':False]
['text':'   TODO:  slightly smarter logic in the copy loop could watch for the NUL on','line_number':1381,'multiline':False]
['text':'          the fly and avoid this step.','line_number':1382,'multiline':False]
['text':' Copy input string from the end of previous match to start of current match','line_number':1387,'multiline':False]
['text':' !!!: Would like a better way to do this!','line_number':1395,'multiline':False]
['text':' ignore','line_number':1405,'multiline':False]
['text':' scan the replacement text, looking for substitutions ($n) and \escapes.','line_number':1412,'multiline':False]
['text':' Common case, no substitution, no escaping,','line_number':1418,'multiline':False]
['text':'  just copy the char to the dest buf.','line_number':1419,'multiline':False]
['text':' Backslash Escape.  Copy the following char out without further checks.','line_number':1425,'multiline':False]
['text':'                    Note:  Surrogate pairs don't need any special handling','line_number':1426,'multiline':False]
['text':'                           The second half wont be a '$' or a '\', and','line_number':1427,'multiline':False]
['text':'                           will move to the dest normally on the next','line_number':1428,'multiline':False]
['text':'                           loop iteration.','line_number':1429,'multiline':False]
['text':'U','line_number':1435,'multiline':True]
['text':'u','line_number':1435,'multiline':True]
['text':' We have a \udddd or \Udddddddd escape sequence.','line_number':1436,'multiline':False]
['text':' Index is updated by unescapeAt','line_number':1439,'multiline':False]
['text':' Length of replacement text','line_number':1440,'multiline':False]
['text':' Note:  if the \u escape was invalid, just fall through and','line_number':1452,'multiline':False]
['text':'        treat it as a plain \<anything> escape.','line_number':1453,'multiline':False]
['text':' Plain backslash escape.  Just put out the escaped character.','line_number':1456,'multiline':False]
['text':' We've got a $.  Pick up the following capture group name or number.','line_number':1463,'multiline':False]
['text':' For numbers, consume only digits that produce a valid capture group for the pattern.','line_number':1464,'multiline':False]
['text':' Scan for Named Capture Group, ${name}.','line_number':1497,'multiline':False]
['text':' A..Z','line_number':1506,'multiline':False]
['text':' a..z','line_number':1507,'multiline':False]
['text':' 0..9','line_number':1508,'multiline':False]
['text':' Name not defined by pattern.','line_number':1514,'multiline':False]
['text':' Character was something other than a name char or a closing '}'','line_number':1518,'multiline':False]
['text':' $ not followed by {name} or digits.','line_number':1523,'multiline':False]
['text':' Finally, append the capture group data to the destination.','line_number':1528,'multiline':False]
['text':' Ignore buffer overflow when extracting the group.  We need to','line_number':1533,'multiline':False]
['text':'   continue on to get full size of the untruncated result.  We will','line_number':1534,'multiline':False]
['text':'   raise our own buffer overflow error at the end.','line_number':1535,'multiline':False]
['text':' bad group number or name.','line_number':1541,'multiline':False]
['text':'','line_number':1546,'multiline':False]
['text':'  Nul Terminate the dest buffer if possible.','line_number':1547,'multiline':False]
['text':'  Set the appropriate buffer overflow or not terminated error, if needed.','line_number':1548,'multiline':False]
['text':'','line_number':1549,'multiline':False]
['text':'','line_number':1560,'multiline':False]
['text':' Return an updated dest buffer and capacity to the caller.','line_number':1561,'multiline':False]
['text':'','line_number':1562,'multiline':False]
['text':' If we came in with a buffer overflow, make sure we go out with one also.','line_number':1573,'multiline':False]
['text':'   (A zero length match right at the end of the previous match could','line_number':1574,'multiline':False]
['text':'    make this function succeed even though a previous call had overflowed the buf)','line_number':1575,'multiline':False]
['text':'','line_number':1583,'multiline':False]
['text':'   appendReplacement   the actual API function,','line_number':1584,'multiline':False]
['text':'','line_number':1585,'multiline':False]
['text':'','line_number':1599,'multiline':False]
['text':'   uregex_appendReplacementUText...can just use the normal C++ method','line_number':1600,'multiline':False]
['text':'','line_number':1601,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':1612,'multiline':False]
['text':'','line_number':1613,'multiline':False]
['text':'    uregex_appendTail','line_number':1614,'multiline':False]
['text':'','line_number':1615,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':1616,'multiline':False]
['text':' If we come in with a buffer overflow error, don't suppress the operation.','line_number':1623,'multiline':False]
['text':'  A series of appendReplacements, appendTail need to correctly preflight','line_number':1624,'multiline':False]
['text':'  the buffer size when an overflow happens somewhere in the middle.','line_number':1625,'multiline':False]
['text':' We've overflowed the dest buffer.','line_number':1677,'multiline':False]
['text':'  If the total input string length is known, we can','line_number':1678,'multiline':False]
['text':'    compute the total buffer size needed without scanning through the string.','line_number':1679,'multiline':False]
['text':' The most recent call to find() succeeded.','line_number':1691,'multiline':False]
['text':' The last call to find() on this matcher failed().','line_number':1694,'multiline':False]
['text':'   Look back to the end of the last find() that succeeded for src index.','line_number':1695,'multiline':False]
['text':' There has been no successful match with this matcher.','line_number':1698,'multiline':False]
['text':'   We want to copy the whole string.','line_number':1699,'multiline':False]
['text':'','line_number':1707,'multiline':False]
['text':'  NUL terminate the output string, if possible, otherwise issue the','line_number':1708,'multiline':False]
['text':'   appropriate error or warning.','line_number':1709,'multiline':False]
['text':'','line_number':1710,'multiline':False]
['text':'','line_number':1719,'multiline':False]
['text':' Update the user's buffer ptr and capacity vars to reflect the','line_number':1720,'multiline':False]
['text':'   amount used.','line_number':1721,'multiline':False]
['text':'','line_number':1722,'multiline':False]
['text':'','line_number':1739,'multiline':False]
['text':'   appendTail   the actual API function','line_number':1740,'multiline':False]
['text':'','line_number':1741,'multiline':False]
['text':'','line_number':1752,'multiline':False]
['text':'   uregex_appendTailUText...can just use the normal C++ method','line_number':1753,'multiline':False]
['text':'','line_number':1754,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':1764,'multiline':False]
['text':'','line_number':1765,'multiline':False]
['text':'    copyString     Internal utility to copy a string to an output buffer,','line_number':1766,'multiline':False]
['text':'                   while managing buffer overflow and preflight size','line_number':1767,'multiline':False]
['text':'                   computation.  NUL termination is added to destination,','line_number':1768,'multiline':False]
['text':'                   and the NUL is counted in the output size.','line_number':1769,'multiline':False]
['text':'','line_number':1770,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':1771,'multiline':False]
['text':'  Destination buffer.','line_number':1773,'multiline':False]
['text':'  Total capacity of dest buffer','line_number':1774,'multiline':False]
['text':'  Index into dest buffer.  Updated on return.','line_number':1775,'multiline':False]
['text':'    Update not clipped to destCapacity.','line_number':1776,'multiline':False]
['text':'  Pointer to source string','line_number':1777,'multiline':False]
['text':'  Source string len.','line_number':1778,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':1802,'multiline':False]
['text':'','line_number':1803,'multiline':False]
['text':'    uregex_split','line_number':1804,'multiline':False]
['text':'','line_number':1805,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':1806,'multiline':False]
['text':'','line_number':1814,'multiline':False]
['text':' Reset for the input text','line_number':1815,'multiline':False]
['text':'','line_number':1816,'multiline':False]
['text':'','line_number':1825,'multiline':False]
['text':' Loop through the input text, searching for the delimiter pattern','line_number':1826,'multiline':False]
['text':'','line_number':1827,'multiline':False]
['text':' Index of the field being processed.','line_number':1828,'multiline':False]
['text':' Next available position in destBuf;','line_number':1829,'multiline':False]
['text':' Want to ignore any buffer overflow errors so that the strings are still counted','line_number':1831,'multiline':False]
['text':' There are one or zero output strings left.','line_number':1834,'multiline':False]
['text':' Fill the last output string with whatever is left from the input, then exit the loop.','line_number':1835,'multiline':False]
['text':'  ( i will be == destFieldsCapacity if we filled the output array while processing','line_number':1836,'multiline':False]
['text':'    capture groups of the delimiter expression, in which case we will discard the','line_number':1837,'multiline':False]
['text':'    last capture group saved in favor of the unprocessed remainder of the','line_number':1838,'multiline':False]
['text':'    input string.)','line_number':1839,'multiline':False]
['text':' No fields are left.  Recycle the last one for holding the trailing part of','line_number':1842,'multiline':False]
['text':'   the input string.','line_number':1843,'multiline':False]
['text':' We found another delimiter.  Move everything from where we started looking','line_number':1856,'multiline':False]
['text':'  up until the start of the delimiter into the next output string.','line_number':1857,'multiline':False]
['text':' If the delimiter pattern has capturing parentheses, the captured','line_number':1869,'multiline':False]
['text':'  text goes out into the next n destination strings.','line_number':1870,'multiline':False]
['text':' If we've run out of output string slots, bail out.','line_number':1873,'multiline':False]
['text':' Set up to extract the capture group contents into the dest buffer.','line_number':1879,'multiline':False]
['text':' Record the space used in the output string buffer.','line_number':1887,'multiline':False]
['text':'  +1 for the NUL that terminates the string.','line_number':1888,'multiline':False]
['text':' The delimiter was at the end of the string.','line_number':1897,'multiline':False]
['text':' Output an empty string, and then we are done.','line_number':1898,'multiline':False]
['text':' We ran off the end of the input while looking for the next delimiter.','line_number':1915,'multiline':False]
['text':' All the remaining text goes into the current output string.','line_number':1916,'multiline':False]
['text':' Zero out any unused portion of the destFields array','line_number':1924,'multiline':False]
['text':'','line_number':1939,'multiline':False]
['text':'   uregex_split   The actual API function','line_number':1940,'multiline':False]
['text':'','line_number':1941,'multiline':False]
['text':'','line_number':1966,'multiline':False]
['text':'   uregex_splitUText...can just use the normal C++ method','line_number':1967,'multiline':False]
['text':'','line_number':1968,'multiline':False]
['text':' !UCONFIG_NO_REGULAR_EXPRESSIONS','line_number':1979,'multiline':False]
