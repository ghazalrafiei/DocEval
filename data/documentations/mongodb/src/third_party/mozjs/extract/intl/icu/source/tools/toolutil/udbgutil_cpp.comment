['text':' Â© 2016 and later: Unicode, Inc. and others.','line_number':1,'multiline':False]
['text':' License & terms of use: http://www.unicode.org/copyright.html','line_number':2,'multiline':False]
['text':'*******************************************************************
 * COPYRIGHT:
 * Copyright (c) 2007-2016, International Business Machines Corporation and
 * others. All Rights Reserved.
 *******************************************************************','line_number':3,'multiline':True]
['text':'
To add a new enum type
      (For example: UShoeSize  with values USHOE_WIDE=0, USHOE_REGULAR, USHOE_NARROW, USHOE_COUNT)

    0. Make sure that all lines you add are protected with appropriate uconfig guards,
        such as '#if !UCONFIG_NO_SHOES'.
    1. udbgutil.h:  add  UDBG_UShoeSize to the UDebugEnumType enum before UDBG_ENUM_COUNT
      ( The subsequent steps involve this file, udbgutil.cpp )
    2. Find the marker "Add new enum types above this line"
    3. Before that marker, add a #include of any header file you need.
    4. Each enum type has three things in this section:  a #define, a count_, and an array of Fields.
       It may help to copy and paste a previous definition.
    5. In the case of the USHOE_... strings above, "USHOE_" is common to all values- six characters
         " #define LEN_USHOE 6 "
       6 characters will strip off "USHOE_" leaving enum values of WIDE, REGULAR, and NARROW.
    6. Define the 'count_' variable, with the number of enum values. If the enum has a _MAX or _COUNT value,
        that can be helpful for automatically defining the count. Otherwise define it manually.
        " static const int32_t count_UShoeSize = USHOE_COUNT; "
    7. Define the field names, in order.
        " static const Field names_UShoeSize[] =  {
        "  FIELD_NAME_STR( LEN_USHOE, USHOE_WIDE ),
        "  FIELD_NAME_STR( LEN_USHOE, USHOE_REGULAR ),
        "  FIELD_NAME_STR( LEN_USHOE, USHOE_NARROW ),
        " };
      ( The following command  was usedfor converting ucol.h into partially correct entities )
      grep "^[  ]*UCOL" < unicode/ucol.h  |
         sed -e 's%^[  ]*\([A-Z]*\)_\([A-Z_]*\).*%   FIELD_NAME_STR( LEN_\1, \1_\2 ),%g'
    8. Now, a bit farther down, add the name of the enum itself to the end of names_UDebugEnumType
          ( UDebugEnumType is an enum, too!)
        names_UDebugEnumType[] { ...
            " FIELD_NAME_STR( LEN_UDBG, UDBG_UShoeSize ),   "
    9. Find the function _udbg_enumCount  and add the count macro:
            " COUNT_CASE(UShoeSize)
   10. Find the function _udbg_enumFields  and add the field macro:
            " FIELD_CASE(UShoeSize)
   11. verify that your test code, and Java data generation, works properly.
','line_number':20,'multiline':True]
['text':'*
 * Structure representing an enum value
 ','line_number':58,'multiline':True]
['text':'*< how many characters to remove in the prefix - i.e. UCHAR_ = 5 ','line_number':62,'multiline':True]
['text':'*< The actual string value ','line_number':63,'multiline':True]
['text':'*< The numeric value ','line_number':64,'multiline':True]
['text':'*
 * Define another field name. Used in an array of Field s
 * @param y the common prefix length (i.e. 6 for "USHOE_" )
 * @param x the actual enum value - it will be copied in both string and symbolic form.
 * @see Field
 ','line_number':67,'multiline':True]
['text':' TODO: Currently, this whole functionality goes away with UCONFIG_NO_FORMATTING. Should be split up.','line_number':76,'multiline':False]
['text':' Calendar','line_number':79,'multiline':False]
['text':' 'UCAL_' = 5','line_number':82,'multiline':False]
['text':' UCAL_ ','line_number':83,'multiline':True]
['text':' "UDAT_" ','line_number':133,'multiline':True]
['text':' end regular ','line_number':141,'multiline':True]
['text':'
     *  negative enums.. leave out for now.
        FIELD_NAME_STR( LEN_UDAT, UDAT_NONE ),
        FIELD_NAME_STR( LEN_UDAT, UDAT_PATTERN ),
     ','line_number':142,'multiline':True]
['text':' "ULOC_ACCEPT_" ','line_number':153,'multiline':True]
['text':' UCOL_ ','line_number':164,'multiline':True]
['text':'   FIELD_NAME_STR( LEN_UCOL, UCOL_CE_STRENGTH_LIMIT ),','line_number':170,'multiline':False]
['text':' gap','line_number':172,'multiline':False]
['text':'   FIELD_NAME_STR( LEN_UCOL, UCOL_STRENGTH_LIMIT ),','line_number':174,'multiline':False]
['text':' gap','line_number':177,'multiline':False]
['text':' gap','line_number':180,'multiline':False]
['text':' UPLUG_REASON_ ','line_number':191,'multiline':True]
['text':' UPLUG_LEVEL_ ','line_number':199,'multiline':True]
['text':' "UDBG_" ','line_number':209,'multiline':True]
['text':' --- Add new enum types above this line ---','line_number':230,'multiline':False]
['text':' low level','line_number':238,'multiline':False]
['text':'*
 * @param type type of item
 * @param actual TRUE: for the actual enum's type (UCAL_FIELD_COUNT, etc), or FALSE for the string count
 ','line_number':240,'multiline':True]
['text':' COUNT_FAIL_CASE(UNonExistentEnum)','line_number':260,'multiline':False]
['text':' FIELD_FAIL_CASE(UNonExistentEnum)','line_number':279,'multiline':False]
['text':' implementation','line_number':288,'multiline':False]
['text':' also will catch unsupported items','line_number':300,'multiline':False]
['text':' also will catch unsupported items','line_number':314,'multiline':False]
['text':' type out of range','line_number':328,'multiline':False]
['text':' try with the prefix','line_number':337,'multiline':False]
['text':' fail','line_number':344,'multiline':False]
['text':' platform info ','line_number':348,'multiline':True]
['text':'*
 * Print the current platform
 ','line_number':349,'multiline':True]
['text':' parameter types ','line_number':392,'multiline':True]
['text':' param ','line_number':394,'multiline':True]
['text':' param ','line_number':456,'multiline':True]
['text':' param ','line_number':473,'multiline':True]
['text':' param ','line_number':490,'multiline':True]
['text':' simple 1-liner param functions ','line_number':497,'multiline':True]
['text':' always 1 ','line_number':555,'multiline':True]
['text':' todo: API for writing DTD? ','line_number':582,'multiline':True]
['text':'*
 * Map cldr:1234 to CLDR-1234
 * Map 1234 to ICU-1234
 ','line_number':631,'multiline':True]
['text':' TODO: Can remove this function once all logKnownIssue calls are switched over','line_number':637,'multiline':False]
['text':' to the ICU-1234 and CLDR-1234 format.','line_number':638,'multiline':False]
['text':' map cldrbug:1234 to CLDR-1234','line_number':640,'multiline':False]
['text':' map 1234 to ICU-1234','line_number':643,'multiline':False]
['text':' If it's a unicode.org bug.','line_number':710,'multiline':False]
['text':' Else: some other kind of bug. Allow this, but without a URL.','line_number':712,'multiline':False]
