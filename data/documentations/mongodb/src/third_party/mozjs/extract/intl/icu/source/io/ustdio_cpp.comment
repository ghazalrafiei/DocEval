['text':' Â© 2016 and later: Unicode, Inc. and others.','line_number':1,'multiline':False]
['text':' License & terms of use: http://www.unicode.org/copyright.html','line_number':2,'multiline':False]
['text':'
 ******************************************************************************
 *
 *   Copyright (C) 1998-2016, International Business Machines
 *   Corporation and others.  All Rights Reserved.
 *
 ******************************************************************************
 *
 * File ustdio.c
 *
 * Modification History:
 *
 *   Date        Name        Description
 *   11/18/98    stephen     Creation.
 *   03/12/99    stephen     Modified for new C API.
 *   07/19/99    stephen     Fixed read() and gets()
 ******************************************************************************
 ','line_number':3,'multiline':True]
['text':' TODO: is this correct for all codepages? Should we just use \n and let the converter handle it? ','line_number':44,'multiline':True]
['text':' TODO: Default newline writing should be detected based upon the converter being used. ','line_number':48,'multiline':True]
['text':'* TODO: implement ','line_number':85,'multiline':True]
['text':' they are clearing it ','line_number':90,'multiline':True]
['text':' TODO: Check side ','line_number':94,'multiline':True]
['text':' fast path ','line_number':145,'multiline':True]
['text':' First: slide over everything ','line_number':149,'multiline':True]
['text':' always ','line_number':155,'multiline':True]
['text':' Calculate new buffer size needed ','line_number':158,'multiline':True]
['text':' Check for malloc/realloc failure. ','line_number':171,'multiline':True]
['text':' Now, copy any data over ','line_number':178,'multiline':True]
['text':' Now, translit in place as much as we can  ','line_number':184,'multiline':True]
['text':' because we shifted ','line_number':194,'multiline':True]
['text':' now: start/limit point to the transliterated text ','line_number':200,'multiline':True]
['text':' Transliterated is [buffer..pos.start) ','line_number':201,'multiline':True]
['text':' out: converted len ','line_number':221,'multiline':True]
['text':' Set pointers to 0 ','line_number':224,'multiline':True]
['text':' skip if no file ','line_number':250,'multiline':True]
['text':' Input/output ','line_number':282,'multiline':True]
['text':' U_CAPI ... U_EXPORT2 added by Peter Kirk 17 Nov 2001 ','line_number':284,'multiline':True]
['text':' U_CAPI ... U_EXPORT2 added by Peter Kirk 17 Nov 2001 ','line_number':293,'multiline':True]
['text':' Set up conversion parameters ','line_number':316,'multiline':True]
['text':' Do the transliteration ','line_number':333,'multiline':True]
['text':' Write to a string. ','line_number':338,'multiline':True]
['text':' Perform the conversion in a loop ','line_number':352,'multiline':True]
['text':' beginning location for this loop ','line_number':354,'multiline':True]
['text':' We have a valid converter ','line_number':356,'multiline':True]
['text':'weiv: do the invariant conversion ','line_number':365,'multiline':True]
['text':' write the converted bytes ','line_number':378,'multiline':True]
['text':' return # of chars written ','line_number':390,'multiline':True]
['text':' U_CAPI ... U_EXPORT2 added by Peter Kirk 17 Nov 2001 ','line_number':394,'multiline':True]
['text':' private function used for buffering input ','line_number':403,'multiline':True]
['text':' There is nothing to do. It's a string. ','line_number':420,'multiline':True]
['text':' Don't read from stdin too many times. There is still some data. ','line_number':427,'multiline':True]
['text':' shift the buffer if it isn't empty ','line_number':431,'multiline':True]
['text':' not accessing beyond memory ','line_number':433,'multiline':True]
['text':' record how much buffer space is available ','line_number':437,'multiline':True]
['text':' Determine the # of codepage bytes needed to fill our UChar buffer ','line_number':440,'multiline':True]
['text':' weiv: if converter is NULL, we use invariant converter with charwidth = 1)','line_number':441,'multiline':True]
['text':' Read in the data to convert ','line_number':444,'multiline':True]
['text':' Special case. Read from stdin one line at a time. ','line_number':446,'multiline':True]
['text':' A normal file ','line_number':451,'multiline':True]
['text':' Set up conversion parameters ','line_number':458,'multiline':True]
['text':' We have a valid converter ','line_number':465,'multiline':True]
['text':' Perform the conversion ','line_number':466,'multiline':True]
['text':'weiv: do the invariant conversion ','line_number':476,'multiline':True]
['text':' update the pointers into our array ','line_number':481,'multiline':True]
['text':' U_CAPI ... U_EXPORT2 added by Peter Kirk 17 Nov 2001 ','line_number':486,'multiline':True]
['text':' Caller screwed up. We need to write the null terminatior. ','line_number':500,'multiline':True]
['text':' fill the buffer if needed ','line_number':504,'multiline':True]
['text':' subtract 1 from n to compensate for the terminator ','line_number':510,'multiline':True]
['text':' determine the amount of data in the buffer ','line_number':513,'multiline':True]
['text':' if 0 characters were left, return 0 ','line_number':516,'multiline':True]
['text':' otherwise, iteratively fill the buffer and copy ','line_number':520,'multiline':True]
['text':' Find how much to copy ','line_number':527,'multiline':True]
['text':' Copy UChars until we find the first occurrence of a delimiter character ','line_number':536,'multiline':True]
['text':' Preserve the newline ','line_number':541,'multiline':True]
['text':' This isn't a newline, but it's used to say
                                    that we should break later. We've checked all
                                    possible newline combinations even across buffer
                                    boundaries. ','line_number':547,'multiline':True]
['text':' If we have a CRLF combination, preserve that too. ','line_number':556,'multiline':True]
['text':' This isn't a newline, but it's used to say
                            that we should break later. We've checked all
                            possible newline combinations even across buffer
                            boundaries. ','line_number':562,'multiline':True]
['text':' update the current buffer position ','line_number':568,'multiline':True]
['text':' if we found a delimiter ','line_number':571,'multiline':True]
['text':' break out ','line_number':573,'multiline':True]
['text':' refill the buffer ','line_number':577,'multiline':True]
['text':' determine the amount of data in the buffer ','line_number':580,'multiline':True]
['text':' add the terminator and return s ','line_number':584,'multiline':True]
['text':' if we have an available character in the buffer, return it ','line_number':595,'multiline':True]
['text':' otherwise, fill the buffer and return the next character ','line_number':601,'multiline':True]
['text':' U_CAPI ... U_EXPORT2 added by Peter Kirk 17 Nov 2001 ','line_number':613,'multiline':True]
['text':' Fill the buffer if it is empty ','line_number':629,'multiline':True]
['text':' Get the next character in the buffer ','line_number':635,'multiline':True]
['text':' U_CAPI ... U_EXPORT2 added by Peter Kirk 17 Nov 2001 ','line_number':656,'multiline':True]
['text':' U_CAPI ... U_EXPORT2 added by Peter Kirk 17 Nov 2001 ','line_number':664,'multiline':True]
['text':' if we're at the beginning of the buffer, sorry! ','line_number':672,'multiline':True]
['text':' otherwise, put the character back ','line_number':679,'multiline':True]
['text':' Remember, read them back on in the reverse order. ','line_number':680,'multiline':True]
['text':' U_CAPI ... U_EXPORT2 added by Peter Kirk 17 Nov 2001 ','line_number':695,'multiline':True]
['text':' determine the amount of data in the buffer ','line_number':706,'multiline':True]
['text':' fill the buffer ','line_number':709,'multiline':True]
['text':' Make sure that we don't read too much ','line_number':714,'multiline':True]
['text':' copy the current data in the buffer ','line_number':719,'multiline':True]
['text':' update number of items read ','line_number':722,'multiline':True]
['text':' update the current buffer position ','line_number':725,'multiline':True]
