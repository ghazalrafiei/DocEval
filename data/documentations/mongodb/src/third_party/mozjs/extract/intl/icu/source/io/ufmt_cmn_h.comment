['text':' Â© 2016 and later: Unicode, Inc. and others.','line_number':1,'multiline':False]
['text':' License & terms of use: http://www.unicode.org/copyright.html','line_number':2,'multiline':False]
['text':'
******************************************************************************
*
*   Copyright (C) 1998-2011, International Business Machines
*   Corporation and others.  All Rights Reserved.
*
******************************************************************************
*
* File ufmt_cmn.h
*
* Modification History:
*
*   Date        Name        Description
*   12/02/98    stephen        Creation.
*   03/12/99    stephen     Modified for new C API.
*   03/15/99    stephen     Added defaultCPToUnicode, unicodeToDefaultCP
******************************************************************************
','line_number':3,'multiline':True]
['text':'* 
 * Enum representing the possible argument types for uprintf/uscanf
 ','line_number':32,'multiline':True]
['text':' %% do nothing ','line_number':37,'multiline':True]
['text':' special flag for count ','line_number':38,'multiline':True]
['text':' int ','line_number':39,'multiline':True]
['text':' int, cast to char ','line_number':40,'multiline':True]
['text':' char* ','line_number':41,'multiline':True]
['text':' void* ','line_number':42,'multiline':True]
['text':' float ','line_number':43,'multiline':True]
['text':' double ','line_number':44,'multiline':True]
['text':' int, cast to UChar ','line_number':45,'multiline':True]
['text':' UChar* ','line_number':46,'multiline':True]
['text':'ufmt_wchar,','line_number':47,'multiline':True]
['text':' wchar_t ','line_number':47,'multiline':True]
['text':'ufmt_wstring,','line_number':48,'multiline':True]
['text':' wchar_t* ','line_number':48,'multiline':True]
['text':'ufmt_date,','line_number':49,'multiline':True]
['text':' Date ','line_number':49,'multiline':True]
['text':'ufmt_last','line_number':50,'multiline':True]
['text':'*
 * Union representing a uprintf/uscanf argument
 ','line_number':53,'multiline':True]
['text':' int, UChar ','line_number':57,'multiline':True]
['text':' float ','line_number':58,'multiline':True]
['text':' double ','line_number':59,'multiline':True]
['text':' any pointer - void*, char*, wchar_t*, UChar* ','line_number':60,'multiline':True]
['text':'wchar_t wcharValue;','line_number':61,'multiline':True]
['text':' wchar_t ','line_number':61,'multiline':True]
['text':' TODO: Should wchar_t be used? ','line_number':61,'multiline':True]
['text':'UDate dateValue;','line_number':62,'multiline':True]
['text':' Date ','line_number':62,'multiline':True]
['text':'*
 * Macro for determining the minimum of two numbers.
 * @param a An integer
 * @param b An integer
 * @return <TT>a</TT> if </TT>a < b</TT>, <TT>b</TT> otherwise
 ','line_number':65,'multiline':True]
['text':'*
 * Convert a UChar in hex radix to an integer value.
 * @param c The UChar to convert.
 * @return The integer value of <TT>c</TT>.
 ','line_number':73,'multiline':True]
['text':'*
 * Determine if a UChar is a digit for a specified radix.
 * @param c The UChar to check.
 * @param radix The desired radix.
 * @return true if <TT>c</TT> is a digit in <TT>radix</TT>, false otherwise.
 ','line_number':81,'multiline':True]
['text':'*
 * Convert an int64_t to a UChar* in a specified radix
 * @param buffer The target buffer
 * @param len On input, the size of <TT>buffer</TT>.  On output,
 * the number of UChars written to <TT>buffer</TT>.
 * @param value The value to be converted
 * @param radix The desired radix
 * @param uselower true means lower case will be used, false means upper case
 * @param minDigits The minimum number of digits for for the formatted number,
 * which will be padded with zeroes. -1 means do not pad.
 ','line_number':91,'multiline':True]
['text':'*
 * It's like ufmt_64tou, but with a pointer.
 * This functions avoids size constraints of 64-bit types.
 * Pointers can be at 32-128 bits in size.
 ','line_number':110,'multiline':True]
['text':'*
 * Convert a UChar* in a specified radix to an int64_t.
 * @param buffer The target buffer
 * @param len On input, the size of <TT>buffer</TT>.  On output,
 * the number of UChars read from <TT>buffer</TT>.
 * @param radix The desired radix
 * @return The numeric value.
 ','line_number':121,'multiline':True]
['text':'*
 * Convert a UChar* in a specified radix to a pointer,
 * @param buffer The target buffer
 * @param len On input, the size of <TT>buffer</TT>.  On output,
 * the number of UChars read from <TT>buffer</TT>.
 * @param radix The desired radix
 * @return The pointer value.
 ','line_number':134,'multiline':True]
['text':'*
 * Convert a string from the default codepage to Unicode.
 * @param s The string to convert, in the default codepage.
 * @param sSize The size of s to convert.
 * @param target The buffer to convert to.
 * @param tSize The size of target
 * @return A pointer to a newly allocated converted version of s, or 0 
 * on error.
 ','line_number':146,'multiline':True]
