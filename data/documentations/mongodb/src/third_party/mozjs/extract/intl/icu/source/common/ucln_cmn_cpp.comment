['text':' Â© 2016 and later: Unicode, Inc. and others.','line_number':1,'multiline':False]
['text':' License & terms of use: http://www.unicode.org/copyright.html','line_number':2,'multiline':False]
['text':'
******************************************************************************
* Copyright (C) 2001-2014, International Business Machines
*                Corporation and others. All Rights Reserved.
******************************************************************************
*   file name:  ucln_cmn.cpp
*   encoding:   UTF-8
*   tab size:   8 (not used)
*   indentation:4
*
*   created on: 2001July05
*   created by: George Rhoten
','line_number':3,'multiline':True]
['text':'*  Auto-client for UCLN_COMMON *','line_number':27,'multiline':True]
['text':'***********************************************
 The cleanup order is important in this function.
 Please be sure that you have read ucln.h
 ***********************************************','line_number':35,'multiline':True]
['text':' Force a memory barrier, so that we are sure to see   ','line_number':43,'multiline':True]
['text':'   all state left around by any other threads.        ','line_number':44,'multiline':True]
['text':' undo any heap functions set by u_setMemoryFunctions(). ','line_number':48,'multiline':True]
['text':' Must be before utrace_cleanup(), which turns off tracing. ','line_number':49,'multiline':True]
['text':'#if U_ENABLE_TRACING','line_number':50,'multiline':True]
['text':'#endif','line_number':52,'multiline':True]
['text':' Thread safety messiness: From ticket 10295, calls to registerCleanup() may occur','line_number':68,'multiline':False]
['text':' concurrently. Although such cases should be storing the same value, they raise errors','line_number':69,'multiline':False]
['text':' from the thread sanity checker. Doing the store within a mutex avoids those.','line_number':70,'multiline':False]
['text':' BUT that can trigger a recursive entry into std::call_once() in umutex.cpp when this code,','line_number':71,'multiline':False]
['text':' running from the call_once function, tries to grab the ICU global mutex, which','line_number':72,'multiline':False]
['text':' re-enters the mutex init path. So, work-around by special casing UCLN_COMMON_MUTEX, not','line_number':73,'multiline':False]
['text':' using the ICU global mutex for it.','line_number':74,'multiline':False]
['text':'','line_number':75,'multiline':False]
['text':' No other point in ICU uses std::call_once().','line_number':76,'multiline':False]
['text':' See ticket 10295 for discussion.','line_number':82,'multiline':False]
['text':' Note: ucln_registerCleanup() is called with the ICU global mutex locked.','line_number':90,'multiline':False]
['text':'       Be aware if adding anything to the function.','line_number':91,'multiline':False]
['text':'       See ticket 10295 for discussion.','line_number':92,'multiline':False]
