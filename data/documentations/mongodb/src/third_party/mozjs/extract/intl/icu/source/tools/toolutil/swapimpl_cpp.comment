['text':' Â© 2016 and later: Unicode, Inc. and others.','line_number':1,'multiline':False]
['text':' License & terms of use: http://www.unicode.org/copyright.html','line_number':2,'multiline':False]
['text':'
*******************************************************************************
*
*   Copyright (C) 2005-2014, International Business Machines
*   Corporation and others.  All Rights Reserved.
*
*******************************************************************************
*   file name:  swapimpl.cpp
*   encoding:   UTF-8
*   tab size:   8 (not used)
*   indentation:4
*
*   created on: 2005may05
*   created by: Markus W. Scherer
*
*   Data file swapping functions moved here from the common library
*   because some data is hardcoded in ICU4C and needs not be swapped any more.
*   Moving the functions here simplifies testing (for code coverage) because
*   we need not jump through hoops (like adding snapshots of these files
*   to testdata).
*
*   The declarations for these functions remain in the internal header files
*   in icu/source/common/
','line_number':3,'multiline':True]
['text':' Explicit include statement for std_string.h is needed
 * for compilation on certain platforms. (e.g. AIX/VACPP)
 ','line_number':32,'multiline':True]
['text':' swapping implementations in common ','line_number':46,'multiline':True]
['text':' swapping implementations in i18n ','line_number':64,'multiline':True]
['text':' definitions ','line_number':72,'multiline':True]
['text':' Unicode property (value) aliases data swapping --------------------------- ','line_number':74,'multiline':True]
['text':' udata_swapDataHeader checks the arguments ','line_number':80,'multiline':True]
['text':' check data format and format version ','line_number':86,'multiline':True]
['text':' dataFormat="pnam" ','line_number':91,'multiline':True]
['text':' formatVersion 2 initially has indexes[8], 32 bytes.','line_number':110,'multiline':False]
['text':' Swap the indexes[] and the valueMaps[].','line_number':133,'multiline':False]
['text':' Copy the rest of the data.','line_number':136,'multiline':False]
['text':' We need not swap anything else:','line_number':143,'multiline':False]
['text':'','line_number':144,'multiline':False]
['text':' The ByteTries are already byte-serialized, and are fixed on ASCII.','line_number':145,'multiline':False]
['text':' (On an EBCDIC machine, the input string is converted to lowercase ASCII','line_number':146,'multiline':False]
['text':' while matching.)','line_number':147,'multiline':False]
['text':'','line_number':148,'multiline':False]
['text':' The name groups are mostly invariant characters, but since we only','line_number':149,'multiline':False]
['text':' generate, and keep in subversion, ASCII versions of pnames.icu,','line_number':150,'multiline':False]
['text':' and since only ICU4J uses the pnames.icu data file','line_number':151,'multiline':False]
['text':' (the data is hardcoded in ICU4C) and ICU4J uses ASCII data files,','line_number':152,'multiline':False]
['text':' we just copy those bytes too.','line_number':153,'multiline':False]
['text':' Unicode properties data swapping ----------------------------------------- ','line_number':159,'multiline':True]
['text':' udata_swapDataHeader checks the arguments ','line_number':171,'multiline':True]
['text':' check data format and format version ','line_number':177,'multiline':True]
['text':' dataFormat="UPro" ','line_number':180,'multiline':True]
['text':' the properties file must contain at least the indexes array ','line_number':197,'multiline':True]
['text':' read the indexes ','line_number':205,'multiline':True]
['text':'
     * comments are copied from the data format description in genprops/store.c
     * indexes[] constants are in uprops.h
     ','line_number':211,'multiline':True]
['text':'
         * In formatVersion 7, UPROPS_DATA_TOP_INDEX has the post-header data size.
         * In earlier formatVersions, it is 0 and a lower dataIndexes entry
         * has the top of the last item.
         ','line_number':219,'multiline':True]
['text':' copy everything for inaccessible data (padding) ','line_number':235,'multiline':True]
['text':' swap the indexes[16] ','line_number':240,'multiline':True]
['text':'
         * swap the main properties UTrie
         * PT serialized properties trie, see utrie.h (byte size: 4*(i0-16))
         ','line_number':243,'multiline':True]
['text':'
         * swap the properties and exceptions words
         * P  const uint32_t props32[i1-i0];
         * E  const uint32_t exceptions[i2-i1];
         ','line_number':253,'multiline':True]
['text':'
         * swap the UChars
         * U  const UChar uchars[2*(i3-i2)];
         ','line_number':264,'multiline':True]
['text':'
         * swap the additional UTrie
         * i3 additionalTrieIndex; -- 32-bit unit index to the additional trie for more properties
         ','line_number':274,'multiline':True]
['text':'
         * swap the properties vectors
         * PV const uint32_t propsVectors[(i6-i4)/i5][i5]==uint32_t propsVectors[i6-i4];
         ','line_number':284,'multiline':True]
['text':' swap the Script_Extensions data','line_number':294,'multiline':False]
['text':' SCX const uint16_t scriptExtensions[2*(i7-i6)];','line_number':295,'multiline':False]
['text':' i7 reservedIndex7; -- 32-bit unit index to the top of the Script_Extensions data ','line_number':303,'multiline':True]
['text':' Unicode case mapping data swapping --------------------------------------- ','line_number':307,'multiline':True]
['text':' udata_swapDataHeader checks the arguments ','line_number':324,'multiline':True]
['text':' check data format and format version ','line_number':330,'multiline':True]
['text':' dataFormat="cAsE" ','line_number':333,'multiline':True]
['text':' read the first 16 indexes (ICU 3.2/format version 1: UCASE_IX_TOP==16, might grow) ','line_number':365,'multiline':True]
['text':' get the total length of the data ','line_number':370,'multiline':True]
['text':' copy the data for inaccessible bytes ','line_number':381,'multiline':True]
['text':' swap the int32_t indexes[] ','line_number':388,'multiline':True]
['text':' swap the UTrie ','line_number':393,'multiline':True]
['text':' swap the uint16_t exceptions[] and unfold[] ','line_number':398,'multiline':True]
['text':' Unicode bidi/shaping data swapping --------------------------------------- ','line_number':409,'multiline':True]
['text':' udata_swapDataHeader checks the arguments ','line_number':426,'multiline':True]
['text':' check data format and format version ','line_number':432,'multiline':True]
['text':' dataFormat="BiDi" ','line_number':435,'multiline':True]
['text':' read the first 16 indexes (ICU 3.4/format version 1: UBIDI_IX_TOP==16, might grow) ','line_number':467,'multiline':True]
['text':' get the total length of the data ','line_number':472,'multiline':True]
['text':' copy the data for inaccessible bytes ','line_number':483,'multiline':True]
['text':' swap the int32_t indexes[] ','line_number':490,'multiline':True]
['text':' swap the UTrie ','line_number':495,'multiline':True]
['text':' swap the uint32_t mirrors[] ','line_number':500,'multiline':True]
['text':' just skip the uint8_t jgArray[] and jgArray2[] ','line_number':505,'multiline':True]
['text':' Unicode normalization data swapping -------------------------------------- ','line_number':517,'multiline':True]
['text':' udata_swapDataHeader checks the arguments ','line_number':536,'multiline':True]
['text':' check data format and format version ','line_number':542,'multiline':True]
['text':' dataFormat="Norm" ','line_number':545,'multiline':True]
['text':' read the first 32 indexes (ICU 2.8/format version 2.2: _NORM_INDEX_TOP==32, might grow) ','line_number':574,'multiline':True]
['text':' calculate the total length of the data ','line_number':579,'multiline':True]
['text':' size of indexes[] ','line_number':581,'multiline':True]
['text':' copy the data for inaccessible bytes ','line_number':597,'multiline':True]
['text':' swap the indexes[] ','line_number':604,'multiline':True]
['text':' swap the main UTrie ','line_number':609,'multiline':True]
['text':' swap the uint16_t extraData[] and the uint16_t combiningTable[] ','line_number':614,'multiline':True]
['text':' swap the FCD UTrie ','line_number':619,'multiline':True]
['text':' swap the aux UTrie ','line_number':626,'multiline':True]
['text':' swap the uint16_t combiningTable[] ','line_number':633,'multiline':True]
['text':' Unicode text layout properties data swapping --------------------------------','line_number':644,'multiline':False]
['text':' udata_swapDataHeader checks the arguments.','line_number':650,'multiline':False]
['text':' Check data format and format version.','line_number':656,'multiline':False]
['text':' dataFormat="Layo"','line_number':659,'multiline':False]
['text':' Read the data offsets before swapping anything.','line_number':699,'multiline':False]
['text':' Copy the data for inaccessible bytes.','line_number':716,'multiline':False]
['text':' Swap the int32_t indexes[].','line_number':721,'multiline':False]
['text':' Swap each trie.','line_number':727,'multiline':False]
['text':' Swap 'Test' data from gentest ','line_number':744,'multiline':True]
['text':' udata_swapDataHeader checks the arguments ','line_number':757,'multiline':True]
['text':' check data format and format version ','line_number':764,'multiline':True]
['text':' dataFormat="Norm" ','line_number':767,'multiline':True]
['text':' 16bit plus padding','line_number':784,'multiline':False]
['text':' 4 char inv-str plus null','line_number':785,'multiline':False]
['text':' swap a 1 entry array ','line_number':797,'multiline':True]
['text':' swap any data (except a .dat package) ------------------------------------ ','line_number':806,'multiline':True]
['text':' dataFormat="ResB" ','line_number':812,'multiline':True]
['text':' dataFormat="cnvt" ','line_number':814,'multiline':True]
['text':' dataFormat="CvAl" ','line_number':817,'multiline':True]
['text':' dataFormat="SPRP" ','line_number':820,'multiline':True]
['text':' insert data formats here, descending by expected frequency of occurrence ','line_number':822,'multiline':True]
['text':' dataFormat="UPro" ','line_number':823,'multiline':True]
['text':' dataFormat="cAsE" ','line_number':826,'multiline':True]
['text':' dataFormat="BiDi" ','line_number':829,'multiline':True]
['text':' dataFormat="Norm" ','line_number':832,'multiline':True]
['text':' dataFormat="Nrm2" ','line_number':833,'multiline':True]
['text':' dataFormat="Layo"','line_number':837,'multiline':False]
['text':' dataFormat="UCol" ','line_number':840,'multiline':True]
['text':' dataFormat="InvC" ','line_number':841,'multiline':True]
['text':' dataFormat="Brk " ','line_number':844,'multiline':True]
['text':' dataFormat="Dict" ','line_number':845,'multiline':True]
['text':' dataFormat="pnam" ','line_number':847,'multiline':True]
['text':' dataFormat="unam" ','line_number':848,'multiline':True]
['text':' dataFormat="Cfu " ','line_number':850,'multiline':True]
['text':' dataFormat="Test" ','line_number':852,'multiline':True]
['text':'
     * Preflight the header first; checks for illegal arguments, too.
     * Do not swap the header right away because the format-specific swapper
     * will swap it, get the headerSize again, and also use the header
     * information. Otherwise we would have to pass some of the information
     * and not be able to use the UDataSwapFn signature.
     ','line_number':867,'multiline':True]
['text':'
     * If we wanted udata_swap() to also handle non-loadable data like a UTrie,
     * then we could check here for further known magic values and structures.
     ','line_number':876,'multiline':True]
['text':' the data format was not recognized ','line_number':881,'multiline':True]
['text':' convert the data format from ASCII to Unicode to the system charset ','line_number':887,'multiline':True]
['text':' dispatch to the swap function for the dataFormat ','line_number':900,'multiline':True]
['text':' swapped less than expected ','line_number':913,'multiline':True]
['text':' the dataFormat was not recognized ','line_number':927,'multiline':True]
