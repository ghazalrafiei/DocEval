['text':' Â© 2016 and later: Unicode, Inc. and others.','line_number':1,'multiline':False]
['text':' License & terms of use: http://www.unicode.org/copyright.html','line_number':2,'multiline':False]
['text':' 
**********************************************************************
*   Copyright (C) 2000-2015, International Business Machines
*   Corporation and others.  All Rights Reserved.
**********************************************************************
*   file name:  ucnvlat1.cpp
*   encoding:   UTF-8
*   tab size:   8 (not used)
*   indentation:4
*
*   created on: 2000feb07
*   created by: Markus W. Scherer
','line_number':3,'multiline':True]
['text':' control optimizations according to the platform ','line_number':28,'multiline':True]
['text':' ISO 8859-1 --------------------------------------------------------------- ','line_number':31,'multiline':True]
['text':' This is a table-less and callback-less version of ucnv_MBCSSingleToBMPWithOffsets(). ','line_number':33,'multiline':True]
['text':' set up the local pointers ','line_number':45,'multiline':True]
['text':'
     * since the conversion here is 1:1 UChar:uint8_t, we need only one counter
     * for the minimum of the sourceLength and targetCapacity
     ','line_number':53,'multiline':True]
['text':' target will be full ','line_number':61,'multiline':True]
['text':' This loop is unrolled for speed and improved pipelining. ','line_number':67,'multiline':True]
['text':' conversion loop ','line_number':100,'multiline':True]
['text':' write back the updated pointers ','line_number':106,'multiline':True]
['text':' set offsets ','line_number':110,'multiline':True]
['text':' This is a table-less and callback-less version of ucnv_MBCSSingleGetNextUChar(). ','line_number':120,'multiline':True]
['text':' no output because of empty input ','line_number':130,'multiline':True]
['text':' This is a table-less version of ucnv_MBCSSingleFromBMPWithOffsets(). ','line_number':135,'multiline':True]
['text':' set up the local pointers ','line_number':150,'multiline':True]
['text':' Latin-1 ','line_number':159,'multiline':True]
['text':' US-ASCII ','line_number':161,'multiline':True]
['text':' get the converter state from UConverter ','line_number':164,'multiline':True]
['text':' sourceIndex=-1 if the current character began in the previous buffer ','line_number':167,'multiline':True]
['text':'
     * since the conversion here is 1:1 UChar:uint8_t, we need only one counter
     * for the minimum of the sourceLength and targetCapacity
     ','line_number':170,'multiline':True]
['text':' conversion loop ','line_number':179,'multiline':True]
['text':' unroll the loop with the most common case ','line_number':185,'multiline':True]
['text':' were all 16 entries really valid? ','line_number':225,'multiline':True]
['text':' no, return to the first of these 16 ','line_number':227,'multiline':True]
['text':' conversion loop ','line_number':261,'multiline':True]
['text':' convert the Unicode code point ','line_number':264,'multiline':True]
['text':' callback(unassigned) ','line_number':272,'multiline':True]
['text':' test the following code unit ','line_number':276,'multiline':True]
['text':' this codepage does not map supplementary code points ','line_number':281,'multiline':True]
['text':' callback(unassigned) ','line_number':282,'multiline':True]
['text':' this is an unmatched lead code unit (1st surrogate) ','line_number':284,'multiline':True]
['text':' callback(illegal) ','line_number':285,'multiline':True]
['text':' no more input ','line_number':288,'multiline':True]
['text':' this is an unmatched trail code unit (2nd surrogate) ','line_number':293,'multiline':True]
['text':' callback(illegal) ','line_number':294,'multiline':True]
['text':' set offsets since the start ','line_number':302,'multiline':True]
['text':' target is full ','line_number':312,'multiline':True]
['text':' write back the updated pointers ','line_number':316,'multiline':True]
['text':' Convert UTF-8 to Latin-1. Adapted from ucnv_SBCSFromUTF8(). ','line_number':322,'multiline':True]
['text':' set up the local pointers ','line_number':335,'multiline':True]
['text':' get the converter state from the UTF-8 UConverter ','line_number':342,'multiline':True]
['text':' complicated, illegal or unmappable input: fall back to the pivoting implementation ','line_number':360,'multiline':True]
['text':'
     * Make sure that the last byte sequence before sourceLimit is complete
     * or runs into a lead byte.
     * In the conversion loop compare source with sourceLimit only once
     * per multi-byte character.
     * For Latin-1, adjust sourceLimit only for 1 trail byte because
     * the conversion loop handles at most 2-byte sequences.
     ','line_number':366,'multiline':True]
['text':' conversion loop ','line_number':378,'multiline':True]
['text':' convert ASCII ','line_number':383,'multiline':True]
['text':' handle U+0080..U+00FF inline ','line_number':386,'multiline':True]
['text':' complicated, illegal or unmappable input: fall back to the pivoting implementation ','line_number':394,'multiline':True]
['text':' target is full ','line_number':401,'multiline':True]
['text':'
     * The sourceLimit may have been adjusted before the conversion loop
     * to stop before a truncated sequence.
     * If so, then collect the truncated sequence now.
     * For Latin-1, there is at most exactly one lead byte because of the
     * smaller sourceLimit adjustment logic.
     ','line_number':407,'multiline':True]
['text':' write back the updated pointers ','line_number':420,'multiline':True]
['text':' reserved ','line_number':471,'multiline':True]
['text':' US-ASCII ----------------------------------------------------------------- ','line_number':477,'multiline':True]
['text':' This is a table-less version of ucnv_MBCSSingleToBMPWithOffsets(). ','line_number':480,'multiline':True]
['text':' set up the local pointers ','line_number':493,'multiline':True]
['text':' sourceIndex=-1 if the current character began in the previous buffer ','line_number':500,'multiline':True]
['text':'
     * since the conversion here is 1:1 UChar:uint8_t, we need only one counter
     * for the minimum of the sourceLength and targetCapacity
     ','line_number':503,'multiline':True]
['text':' This loop is unrolled for speed and improved pipelining. ','line_number':513,'multiline':True]
['text':' were all 16 entries really valid? ','line_number':528,'multiline':True]
['text':' no, return to the first of these 16 ','line_number':530,'multiline':True]
['text':' conversion loop ','line_number':556,'multiline':True]
['text':' callback(illegal); copy the current bytes to toUBytes[] ','line_number':564,'multiline':True]
['text':' target is full ','line_number':570,'multiline':True]
['text':' set offsets since the start ','line_number':574,'multiline':True]
['text':' write back the updated pointers ','line_number':583,'multiline':True]
['text':' This is a table-less version of ucnv_MBCSSingleGetNextUChar(). ','line_number':589,'multiline':True]
['text':' no output because of empty input ','line_number':611,'multiline':True]
['text':' "Convert" UTF-8 to US-ASCII: Validate and copy. ','line_number':616,'multiline':True]
['text':' no handling of partial UTF-8 characters here, fall back to pivoting ','line_number':628,'multiline':True]
['text':' set up the local pointers ','line_number':633,'multiline':True]
['text':'
     * since the conversion here is 1:1 uint8_t:uint8_t, we need only one counter
     * for the minimum of the sourceLength and targetCapacity
     ','line_number':639,'multiline':True]
['text':' unroll the loop with the most common case ','line_number':648,'multiline':True]
['text':' were all 16 entries really valid? ','line_number':672,'multiline':True]
['text':' no, return to the first of these 16 ','line_number':674,'multiline':True]
['text':' conversion loop ','line_number':684,'multiline':True]
['text':' non-ASCII character, handle in standard converter ','line_number':693,'multiline':True]
['text':' target is full ','line_number':696,'multiline':True]
['text':' write back the updated pointers ','line_number':700,'multiline':True]
['text':' reserved ','line_number':750,'multiline':True]
