['text':' Â© 2016 and later: Unicode, Inc. and others.','line_number':1,'multiline':False]
['text':' License & terms of use: http://www.unicode.org/copyright.html','line_number':2,'multiline':False]
['text':'
*******************************************************************************
* Copyright (C) 1997-2016, International Business Machines Corporation and
* others. All Rights Reserved.
*******************************************************************************
*
* File DCFMTSYM.CPP
*
* Modification History:
*
*   Date        Name        Description
*   02/19/97    aliu        Converted from java.
*   03/18/97    clhuang     Implemented with C++ APIs.
*   03/27/97    helena      Updated to pass the simple test after code review.
*   08/26/97    aliu        Added currency/intl currency symbol support.
*   07/20/98    stephen     Slightly modified initialization of monetarySeparator
********************************************************************************
','line_number':3,'multiline':True]
['text':' *****************************************************************************','line_number':43,'multiline':False]
['text':' class DecimalFormatSymbols','line_number':44,'multiline':False]
['text':' *****************************************************************************','line_number':45,'multiline':False]
['text':' List of field names to be loaded from the data files.','line_number':64,'multiline':False]
['text':' These are parallel with the enum ENumberFormatSymbol in unicode/dcfmtsym.h.','line_number':65,'multiline':False]
['text':' #11897: the <list> symbol is NOT the pattern separator symbol ','line_number':69,'multiline':True]
['text':' Native zero digit is deprecated from CLDR - get it from the numbering system ','line_number':71,'multiline':True]
['text':' Pattern digit character is deprecated from CLDR - use # by default always ','line_number':72,'multiline':True]
['text':' currency symbol - Wait until we know the currency before loading from CLDR ','line_number':75,'multiline':True]
['text':' intl currency symbol - Wait until we know the currency before loading from CLDR ','line_number':76,'multiline':True]
['text':' Escape padding character - not in CLDR ','line_number':80,'multiline':True]
['text':' Significant digit symbol - not in CLDR ','line_number':83,'multiline':True]
['text':' one digit - get it from the numbering system ','line_number':85,'multiline':True]
['text':' two digit - get it from the numbering system ','line_number':86,'multiline':True]
['text':' three digit - get it from the numbering system ','line_number':87,'multiline':True]
['text':' four digit - get it from the numbering system ','line_number':88,'multiline':True]
['text':' five digit - get it from the numbering system ','line_number':89,'multiline':True]
['text':' six digit - get it from the numbering system ','line_number':90,'multiline':True]
['text':' seven digit - get it from the numbering system ','line_number':91,'multiline':True]
['text':' eight digit - get it from the numbering system ','line_number':92,'multiline':True]
['text':' nine digit - get it from the numbering system ','line_number':93,'multiline':True]
['text':' Multiplication (x) symbol for exponents ','line_number':94,'multiline':True]
['text':' -------------------------------------','line_number':97,'multiline':False]
['text':' Initializes this with the decimal format symbols in the default locale.','line_number':98,'multiline':False]
['text':' -------------------------------------','line_number':105,'multiline':False]
['text':' Initializes this with the decimal format symbols in the desired locale.','line_number':106,'multiline':False]
['text':' -------------------------------------','line_number':134,'multiline':False]
['text':' -------------------------------------','line_number':140,'multiline':False]
['text':' copy constructor','line_number':141,'multiline':False]
['text':' -------------------------------------','line_number':149,'multiline':False]
['text':' assignment operator','line_number':150,'multiline':False]
['text':' fastCopyFrom is safe, see docs on fSymbols','line_number':157,'multiline':False]
['text':' -------------------------------------','line_number':175,'multiline':False]
['text':' No need to check fCodePointZero since it is based on fSymbols','line_number':202,'multiline':False]
['text':' -------------------------------------','line_number':208,'multiline':False]
['text':'*
 * Sink for enumerating all of the decimal format symbols (more specifically, anything
 * under the "NumberElements.symbols" tree).
 *
 * More specific bundles (en_GB) are enumerated before their parents (en_001, en, root):
 * Only store a value if it is still missing, that is, it has not been overridden.
 ','line_number':212,'multiline':True]
['text':' Destination for data, modified via setters.','line_number':221,'multiline':False]
['text':' Boolean array of whether or not we have seen a particular symbol yet.','line_number':223,'multiline':False]
['text':' Can't simpy check fSymbols because it is pre-populated with defaults.','line_number':224,'multiline':False]
['text':' Constructor/Destructor','line_number':227,'multiline':False]
['text':'noFallback','line_number':233,'multiline':True]
['text':' Returns true if all the symbols have been seen.','line_number':253,'multiline':False]
['text':' If monetary decimal or grouping were not explicitly set, then set them to be the','line_number':263,'multiline':False]
['text':' same as their non-monetary counterparts.','line_number':264,'multiline':False]
['text':'noFallback','line_number':288,'multiline':True]
['text':' For consistency with Java, this method overwrites everything with the defaults unless','line_number':327,'multiline':False]
['text':' both beforeCurrency and afterCurrency were found in CLDR.','line_number':328,'multiline':False]
['text':' Virtual destructors must be defined out of line.','line_number':341,'multiline':False]
['text':' namespace','line_number':345,'multiline':False]
['text':' First initialize all the symbols to the fallbacks for anything we can't find','line_number':354,'multiline':False]
['text':'','line_number':357,'multiline':False]
['text':' Next get the numbering system for this locale and set zero digit','line_number':358,'multiline':False]
['text':' and the digit string based on the numbering system for the locale','line_number':359,'multiline':False]
['text':'','line_number':360,'multiline':False]
['text':' Use the numbering system according to the locale.','line_number':363,'multiline':False]
['text':' Save it into a LocalPointer so it gets cleaned up.','line_number':364,'multiline':False]
['text':' Open resource bundles','line_number':384,'multiline':False]
['text':' Set locale IDs','line_number':398,'multiline':False]
['text':' TODO: Is there a way to do this without depending on the resource bundle instance?','line_number':399,'multiline':False]
['text':' Now load the rest of the data from the data sink.','line_number':409,'multiline':False]
['text':' Start with loading this nsName if it is not Latin.','line_number':410,'multiline':False]
['text':' If no symbols exist for the given nsName and resource bundle, silently ignore','line_number':421,'multiline':False]
['text':' and fall back to Latin.','line_number':422,'multiline':False]
['text':' Continue with Latin if necessary.','line_number':430,'multiline':False]
['text':' Let the monetary number separators equal the default number separators if necessary.','line_number':436,'multiline':False]
['text':' Resolve codePointZero','line_number':439,'multiline':False]
['text':' Get the default currency from the currency API.','line_number':457,'multiline':False]
['text':' don't propagate failures out','line_number':458,'multiline':False]
['text':' Currency Spacing.','line_number':468,'multiline':False]
['text':'
     * These strings used to be in static arrays, but the HP/UX aCC compiler
     * cannot initialize a static array with class constructors.
     *  markus 2000may25
     ','line_number':478,'multiline':True]
['text':' '.' decimal separator','line_number':483,'multiline':False]
['text':'     group (thousands) separator','line_number':484,'multiline':False]
['text':' ';' pattern separator','line_number':485,'multiline':False]
['text':' '%' percent sign','line_number':486,'multiline':False]
['text':' '0' native 0 digit','line_number':487,'multiline':False]
['text':' '1' native 1 digit','line_number':488,'multiline':False]
['text':' '2' native 2 digit','line_number':489,'multiline':False]
['text':' '3' native 3 digit','line_number':490,'multiline':False]
['text':' '4' native 4 digit','line_number':491,'multiline':False]
['text':' '5' native 5 digit','line_number':492,'multiline':False]
['text':' '6' native 6 digit','line_number':493,'multiline':False]
['text':' '7' native 7 digit','line_number':494,'multiline':False]
['text':' '8' native 8 digit','line_number':495,'multiline':False]
['text':' '9' native 9 digit','line_number':496,'multiline':False]
['text':' '#' pattern digit','line_number':497,'multiline':False]
['text':' '+' plus sign','line_number':498,'multiline':False]
['text':' '-' minus sign','line_number':499,'multiline':False]
['text':' 'OX' currency symbol','line_number':500,'multiline':False]
['text':' '.' monetary decimal separator','line_number':502,'multiline':False]
['text':' 'E' exponential','line_number':503,'multiline':False]
['text':' '%o' per mill','line_number':504,'multiline':False]
['text':' '*' pad escape symbol','line_number':505,'multiline':False]
['text':' 'oo' infinite','line_number':506,'multiline':False]
['text':' SUB NaN','line_number':507,'multiline':False]
['text':' '@' significant digit','line_number':508,'multiline':False]
['text':' ','line_number':509,'multiline':False]
['text':' 'x' multiplication symbol for exponents','line_number':510,'multiline':False]
['text':' TODO: If this method is made public:','line_number':520,'multiline':False]
['text':' - Adopt ICU4J behavior of not allowing currency to be null.','line_number':521,'multiline':False]
['text':' - Also verify that the length of currency is 3.','line_number':522,'multiline':False]
['text':' An explicit currency was requested ','line_number':537,'multiline':True]
['text':' TODO(ICU-13297): Move this data loading logic into a centralized place','line_number':538,'multiline':False]
['text':' the length is 3 if more data is present','line_number':544,'multiline':False]
['text':'pattern.setTo(TRUE, currPattern, currPatternLen);','line_number':556,'multiline':False]
['text':' else An explicit currency was requested and is unknown or locale data is malformed. ','line_number':559,'multiline':True]
['text':' ucurr_* API will get the correct value later on. ','line_number':560,'multiline':True]
['text':' always empty.','line_number':574,'multiline':False]
['text':' #if !UCONFIG_NO_FORMATTING ','line_number':595,'multiline':True]
['text':'eof','line_number':597,'multiline':False]
