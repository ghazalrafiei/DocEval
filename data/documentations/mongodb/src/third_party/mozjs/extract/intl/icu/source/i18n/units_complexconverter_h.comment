['text':' Â© 2020 and later: Unicode, Inc. and others.','line_number':1,'multiline':False]
['text':' License & terms of use: http://www.unicode.org/copyright.html','line_number':2,'multiline':False]
['text':' Export explicit template instantiations of MaybeStackArray, MemoryPool and','line_number':20,'multiline':False]
['text':' MaybeStackVector. This is required when building DLLs for Windows. (See','line_number':21,'multiline':False]
['text':' datefmt.h, collationiterator.h, erarules.h and others for similar examples.)','line_number':22,'multiline':False]
['text':'','line_number':23,'multiline':False]
['text':' Note: These need to be outside of the units namespace, or Clang will generate','line_number':24,'multiline':False]
['text':' a compile error.','line_number':25,'multiline':False]
['text':'*
 *  Converts from single or compound unit to single, compound or mixed units.
 * For example, from `meter` to `foot+inch`.
 *
 *  DESIGN:
 *    This class uses `UnitsConverter` in order to perform the single converter (i.e. converters from a
 *    single unit to another single unit). Therefore, `ComplexUnitsConverter` class contains multiple
 *    instances of the `UnitsConverter` to perform the conversion.
 ','line_number':40,'multiline':True]
['text':'*
     * Constructs `ComplexUnitsConverter` for an `targetUnit` that could be Single, Compound or Mixed.
     * In case of:
     * 1- Single and Compound units,
     *    the conversion will not perform anything, the input will be equal to the output.
     * 2- Mixed Unit
     *    the conversion will consider the input is the biggest unit. And will convert it to be spread
     *    through the target units. For example: if target unit is "inch-and-foot", and the input is 2.5.
     *    The converter will consider the input value in "foot", because foot is the biggest unit.
     *    Then, it will convert 2.5 feet to "inch-and-foot".
     *
     * @param targetUnit could be any units type (single, compound or mixed).
     * @param ratesInfo
     * @param status
     ','line_number':51,'multiline':True]
['text':'*
     * Constructor of `ComplexUnitsConverter`.
     * NOTE:
     *   - inputUnit and outputUnits must be under the same category
     *      - e.g. meter to feet and inches --> all of them are length units.
     *
     * @param inputUnit represents the source unit. (should be single or compound unit).
     * @param outputUnits represents the output unit. could be any type. (single, compound or mixed).
     * @param status
     ','line_number':68,'multiline':True]
['text':'*
     * Constructor of `ComplexUnitsConverter`.
     * NOTE:
     *   - inputUnit and outputUnits must be under the same category
     *      - e.g. meter to feet and inches --> all of them are length units.
     *
     * @param inputUnit represents the source unit. (should be single or compound unit).
     * @param outputUnits represents the output unit. could be any type. (single, compound or mixed).
     * @param ratesInfo a ConversionRates instance containing the unit conversion rates.
     * @param status
     ','line_number':81,'multiline':True]
['text':' Returns true if the specified `quantity` of the `inputUnit`, expressed in terms of the biggest','line_number':95,'multiline':False]
['text':' unit in the MeasureUnit `outputUnit`, is greater than or equal to `limit`.','line_number':96,'multiline':False]
['text':'    For example, if the input unit is `meter` and the target unit is `foot+inch`. Therefore, this','line_number':97,'multiline':False]
['text':'    function will convert the `quantity` from `meter` to `foot`, then, it will compare the value in','line_number':98,'multiline':False]
['text':'    `foot` with the `limit`.','line_number':99,'multiline':False]
['text':' Returns outputMeasures which is an array with the corresponding values.','line_number':102,'multiline':False]
['text':'    - E.g. converting meters to feet and inches.','line_number':103,'multiline':False]
['text':'                  1 meter --> 3 feet, 3.3701 inches','line_number':104,'multiline':False]
['text':'         NOTE:','line_number':105,'multiline':False]
['text':'           the smallest element is the only element that could have fractional values. And all','line_number':106,'multiline':False]
['text':'           other elements are floored to the nearest integer','line_number':107,'multiline':False]
['text':' Individual units of mixed units, sorted big to small, with indices','line_number':114,'multiline':False]
['text':' indicating the requested output mixed unit order.','line_number':115,'multiline':False]
['text':' Sorts units_, which must be populated before calling this, and populates','line_number':118,'multiline':False]
['text':' unitsConverters_.','line_number':119,'multiline':False]
['text':' Applies the rounder to the quantity (last element) and bubble up any carried value to all the','line_number':122,'multiline':False]
['text':' intValues.','line_number':123,'multiline':False]
['text':' TODO(ICU-21288): get smarter about precision for mixed units.','line_number':124,'multiline':False]
['text':' namespace units','line_number':129,'multiline':False]
['text':'__UNITS_COMPLEXCONVERTER_H__','line_number':132,'multiline':False]
['text':' #if !UCONFIG_NO_FORMATTING ','line_number':134,'multiline':True]
