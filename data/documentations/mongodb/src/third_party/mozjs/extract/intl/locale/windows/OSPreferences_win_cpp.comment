['text':' -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':1,'multiline':True]
['text':' WinRT headers not yet supported by MinGW','line_number':15,'multiline':False]
['text':' Try to get language list from GlobalizationPreferences; if this fails,','line_number':35,'multiline':False]
['text':' we'll fall back to GetUserPreferredUILanguages.','line_number':36,'multiline':False]
['text':' Per MSDN, these APIs are not available prior to Win8.','line_number':37,'multiline':False]
['text':' RoInitialize may fail with "cannot change thread mode after it is set",','line_number':39,'multiline':False]
['text':' if the runtime was already initialized on this thread.','line_number':40,'multiline':False]
['text':' This appears to be harmless, and we can proceed to attempt the following','line_number':41,'multiline':False]
['text':' runtime calls.','line_number':42,'multiline':False]
['text':' DirectWrite font-name code doesn't like to be given a bare','line_number':63,'multiline':False]
['text':' language code with no region subtag, but the','line_number':64,'multiline':False]
['text':' GlobalizationPreferences API may give us one (e.g. "ja").','line_number':65,'multiline':False]
['text':' So if there's no hyphen in the string at this point, we use','line_number':66,'multiline':False]
['text':' Locale::Maximize to get a suitable region code to','line_number':67,'multiline':False]
['text':' go with it.','line_number':68,'multiline':False]
['text':' Only close the runtime if we successfully initialized it above,','line_number':81,'multiline':False]
['text':' otherwise we assume it was already in use and should be left as is.','line_number':82,'multiline':False]
['text':' Per MSDN, GetUserPreferredUILanguages is available from Vista onwards,','line_number':89,'multiline':False]
['text':' so we can use it unconditionally (although it may not work well!)','line_number':90,'multiline':False]
['text':' Note that according to the questioner at','line_number':92,'multiline':False]
['text':' https://stackoverflow.com/questions/52849233/getuserpreferreduilanguages-never-returns-more-than-two-languages,','line_number':93,'multiline':False]
['text':' this may not always return the full list of languages we'd expect.','line_number':94,'multiline':False]
['text':' We should always get at least the first-preference lang, though.','line_number':95,'multiline':False]
['text':'*
 * Windows API includes regional preferences from the user only
 * if we pass empty locale string or if the locale string matches
 * the current locale.
 *
 * Since Windows API only allows us to retrieve two options - short/long
 * we map it to our four options as:
 *
 *   short  -> short
 *   medium -> short
 *   long   -> long
 *   full   -> long
 *
 * In order to produce a single date/time format, we use CLDR pattern
 * for combined date/time string, since Windows API does not provide an
 * option for this.
 ','line_number':185,'multiline':True]
['text':' If both date and time are wanted, we'll initially read them into a','line_number':214,'multiline':False]
['text':' local string, and then insert them into the overall date+time pattern;','line_number':215,'multiline':False]
['text':' We're doing it to ensure the terminator will fit when Windows writes the','line_number':236,'multiline':False]
['text':' data to its output buffer. See bug 1358159 for details.','line_number':237,'multiline':False]
['text':' -1 because len counts the null terminator','line_number':241,'multiline':False]
['text':' Windows uses "ddd" and "dddd" for abbreviated and full day names','line_number':243,'multiline':False]
['text':' respectively,','line_number':244,'multiline':False]
['text':'   https://msdn.microsoft.com/en-us/library/windows/desktop/dd317787(v=vs.85).aspx','line_number':245,'multiline':False]
['text':' but in a CLDR/ICU-style pattern these should be "EEE" and "EEEE".','line_number':246,'multiline':False]
['text':'   http://userguide.icu-project.org/formatparse/datetime','line_number':247,'multiline':False]
['text':' So we fix that up here.','line_number':248,'multiline':False]
['text':' Also, Windows uses lowercase "g" or "gg" for era, but ICU wants uppercase','line_number':261,'multiline':False]
['text':' "G" (it would interpret "g" as "modified Julian day"!). So fix that.','line_number':262,'multiline':False]
['text':' If it was a double "gg", just drop the second one.','line_number':266,'multiline':False]
['text':' If time was also requested, we need to substitute the date pattern from','line_number':273,'multiline':False]
['text':' Windows into the date+time format that we have in aRetVal.','line_number':274,'multiline':False]
['text':' We're doing it to ensure the terminator will fit when Windows writes the','line_number':296,'multiline':False]
['text':' data to its output buffer. See bug 1358159 for details.','line_number':297,'multiline':False]
['text':' Windows uses "t" or "tt" for a "time marker" (am/pm indicator),','line_number':303,'multiline':False]
['text':'   https://msdn.microsoft.com/en-us/library/windows/desktop/dd318148(v=vs.85).aspx','line_number':304,'multiline':False]
['text':' but in a CLDR/ICU-style pattern that should be "a".','line_number':305,'multiline':False]
['text':'   http://userguide.icu-project.org/formatparse/datetime','line_number':306,'multiline':False]
['text':' So we fix that up here.','line_number':307,'multiline':False]
