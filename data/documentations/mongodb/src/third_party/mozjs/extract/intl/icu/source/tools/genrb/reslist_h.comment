['text':' Â© 2016 and later: Unicode, Inc. and others.','line_number':1,'multiline':False]
['text':' License & terms of use: http://www.unicode.org/copyright.html','line_number':2,'multiline':False]
['text':'
*******************************************************************************
*
*   Copyright (C) 2000-2015, International Business Machines
*   Corporation and others.  All Rights Reserved.
*
*******************************************************************************
*
* File reslist.h
*
* Modification History:
*
*   Date        Name        Description
*   02/21/00    weiv        Creation.
*******************************************************************************
','line_number':3,'multiline':True]
['text':' Resource bundle root table ','line_number':73,'multiline':True]
['text':' TODO: private','line_number':98,'multiline':False]
['text':' Normally a TableResource.','line_number':100,'multiline':False]
['text':' see URES_ATT_NO_FALLBACK ','line_number':104,'multiline':True]
['text':' default STRINGS_UTF16_V1 ','line_number':105,'multiline':True]
['text':' key offset < limit fits into URES_TABLE ','line_number':113,'multiline':True]
['text':' write a java resource file ','line_number':125,'multiline':True]
['text':' TODO: C++ify','line_number':126,'multiline':False]
['text':' write a xml resource file ','line_number':130,'multiline':True]
['text':' TODO: C++ify','line_number':131,'multiline':False]
['text':' Various resource types ','line_number':135,'multiline':True]
['text':'
 * Return a unique pointer to a dummy object,
 * for use in non-error cases when no resource is to be added to the bundle.
 * (NULL is used in error cases.)
 ','line_number':137,'multiline':True]
['text':' Resource place holder ','line_number':162,'multiline':True]
['text':'*
     * Preflights strings.
     * Finds duplicates and counts the total number of string code units
     * so that they can be written first to the 16-bit array,
     * for minimal string and container storage.
     *
     * We walk the final parse tree, rather than collecting this information while building it,
     * so that we need not deal with changes to the parse tree (especially removing resources).
     ','line_number':175,'multiline':True]
['text':'*
     * Writes resource values into f16BitUnits
     * and determines the resource item word, if possible.
     ','line_number':187,'multiline':True]
['text':'*
     * Calculates ("preflights") and advances the *byteOffset
     * by the size of the resource's data in the binary file and
     * determines the resource item word.
     *
     * Most handlePreWrite() functions may add any number of bytes, but preWrite()
     * will always pad it to a multiple of 4.
     * The resource item type may be a related subtype of the fType.
     *
     * The preWrite() and write() functions start and end at the same
     * byteOffset values.
     * Prewriting allows bundle.write() to determine the root resource item word,
     * before actually writing the bundle contents to the file,
     * which is necessary because the root item is stored at the beginning.
     ','line_number':194,'multiline':True]
['text':'*
     * Writes the resource's data to mem and updates the byteOffset
     * in parallel.
     ','line_number':212,'multiline':True]
['text':'*
     * Applies the given filter with the given base path to this resource.
     * Removes child resources rejected by the filter recursively.
     * 
     * @param bundle Needed in order to access the key for this and child resources.
     ','line_number':219,'multiline':True]
['text':'*
     * Calls the given function for every key ID present in this tree.
     ','line_number':227,'multiline':True]
['text':' nominal type: fRes (when != 0xffffffff) may use subtype ','line_number':232,'multiline':True]
['text':' res_write() can exit early ','line_number':233,'multiline':True]
['text':' resource item word; RES_BOGUS=0xffffffff if not known yet ','line_number':234,'multiline':True]
['text':' Res16 version of fRes for Table, Table16, Array16; -1 if it does not fit. ','line_number':235,'multiline':True]
['text':' Index into bundle->fKeys; -1 if no key. ','line_number':236,'multiline':True]
['text':' Key16 version of fKey for Table & Table16; -1 if no key or it does not fit. ','line_number':237,'multiline':True]
['text':' used internally to report duplicate keys in tables ','line_number':238,'multiline':True]
['text':' This is for internal chaining while building ','line_number':239,'multiline':True]
['text':' TODO: private with getter?','line_number':262,'multiline':False]
['text':' determined by table_write16() for table_preWrite() & table_write()','line_number':283,'multiline':False]
['text':'*
 * List of resources for a pool bundle.
 * Writes an empty table resource, rather than a container structure.
 ','line_number':304,'multiline':True]
['text':' TODO: private with getter?','line_number':335,'multiline':False]
['text':' v3 pool string encoded as string-v2 with low offset','line_number':356,'multiline':False]
['text':' +1 for the NUL','line_number':363,'multiline':False]
['text':' used for duplicates','line_number':371,'multiline':False]
['text':' this string is a suffix of fSame at this offset','line_number':372,'multiline':False]
['text':' number of equal strings represented by one stringSet element','line_number':373,'multiline':False]
['text':' from not writing duplicates and suffixes','line_number':374,'multiline':False]
['text':' TODO: private with getter?','line_number':392,'multiline':False]
['text':' TODO: UVector32','line_number':407,'multiline':False]
['text':' TODO: CharString?','line_number':423,'multiline':False]
['text':' TODO: CharString','line_number':426,'multiline':False]
['text':' file name for binary or import binary tags if any','line_number':427,'multiline':False]
['text':' TODO: use LocalPointer or delete','line_number':430,'multiline':False]
['text':' in wrtxml.cpp ','line_number':442,'multiline':True]
['text':' #ifndef RESLIST_H ','line_number':446,'multiline':True]
