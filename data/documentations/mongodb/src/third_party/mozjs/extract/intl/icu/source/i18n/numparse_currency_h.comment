['text':' Â© 2018 and later: Unicode, Inc. and others.','line_number':1,'multiline':False]
['text':' License & terms of use: http://www.unicode.org/copyright.html','line_number':2,'multiline':False]
['text':'*
 * Matches a currency, either a custom currency or one from the data bundle. The class is called
 * "combined" to emphasize that the currency string may come from one of multiple sources.
 *
 * Will match currency spacing either before or after the number depending on whether we are currently in
 * the prefix or suffix.
 *
 * The implementation of this class is slightly different between J and C. See #13584 for a follow-up.
 *
 * @author sffc
 ','line_number':21,'multiline':True]
['text':' Exported as U_I18N_API for tests','line_number':32,'multiline':False]
['text':' WARNING: Leaves the object in an unusable state','line_number':35,'multiline':False]
['text':' We could use Locale instead of CharString here, but','line_number':57,'multiline':False]
['text':' Locale has a non-trivial default constructor.','line_number':58,'multiline':False]
['text':' TODO: See comments in constructor in numparse_currency.cpp','line_number':61,'multiline':False]
['text':' UnicodeSet fLeadCodePoints;','line_number':62,'multiline':False]
['text':'* Matches the currency string without concern for currency spacing. ','line_number':64,'multiline':True]
['text':' namespace impl','line_number':69,'multiline':False]
['text':' namespace numparse','line_number':70,'multiline':False]
['text':'__NUMPARSE_CURRENCY_H__','line_number':73,'multiline':False]
['text':' #if !UCONFIG_NO_FORMATTING ','line_number':74,'multiline':True]
