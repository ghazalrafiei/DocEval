['text':' -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- ','line_number':1,'multiline':True]
['text':' This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':2,'multiline':True]
['text':' (0x3131u <= (u) && (u) <= 0x318eu) => Hangul Compatibility Jamo ','line_number':11,'multiline':True]
['text':' (0xac00u <= (u) && (u) <= 0xd7a3u) => Hangul Syllables          ','line_number':12,'multiline':True]
['text':' MOZILLA_INTERNAL_API','line_number':94,'multiline':False]
['text':'*
 * Calculates the lower-case of the codepoint of the UTF8 sequence starting at
 * aStr.  Sets aNext to the byte following the end of the sequence.
 *
 * If the sequence is invalid, or if computing the codepoint would take us off
 * the end of the string (as marked by aEnd), returns -1 and does not set
 * aNext.  Note that this function doesn't check that aStr < aEnd -- it assumes
 * you've done that already.
 ','line_number':102,'multiline':True]
['text':'*
 * This function determines whether the UTF-8 sequence pointed to by aLeft is
 * case insensitively equal to the UTF-8 sequence pointed to by aRight (or
 * optionally, case and diacritic insensitively equal), as defined by having
 * matching (naked) lower-cased codepoints.
 *
 * aLeftEnd marks the first memory location past aLeft that is not part of
 * aLeft; aRightEnd similarly marks the end of aRight.
 *
 * The function assumes that aLeft < aLeftEnd and aRight < aRightEnd.
 *
 * The function stores the addresses of the next characters in the sequence
 * into aLeftNext and aRightNext.  It's up to the caller to make sure that the
 * returned pointers are valid -- i.e. the function may return aLeftNext >=
 * aLeftEnd or aRightNext >= aRightEnd.
 *
 * If the function encounters invalid text, it sets aErr to true and returns
 * false, possibly leaving aLeftNext and aRightNext uninitialized.  If the
 * function returns true, aErr is guaranteed to be false and both aLeftNext and
 * aRightNext are guaranteed to be initialized.
 *
 * If aMatchDiacritics is false, the comparison is neither case-sensitive nor
 * diacritic-sensitive.
 ','line_number':114,'multiline':True]
['text':'*
 * Hash a UTF8 string as though it were a UTF16 string.
 *
 * The value returned is the same as if we converted the string to UTF16 and
 * then ran HashString() on the result.
 *
 * The given |length| is in bytes.
 ','line_number':146,'multiline':True]
['text':' namespace mozilla','line_number':158,'multiline':False]
['text':' nsUnicharUtils_h__ ','line_number':160,'multiline':True]
