['text':' Â© 2016 and later: Unicode, Inc. and others.','line_number':1,'multiline':False]
['text':' License & terms of use: http://www.unicode.org/copyright.html','line_number':2,'multiline':False]
['text':'
**********************************************************************
*   Copyright (C) 1997-2015, International Business Machines
*   Corporation and others.  All Rights Reserved.
**********************************************************************
*
* File UMUTEX.H
*
* Modification History:
*
*   Date        Name        Description
*   04/02/97  aliu        Creation.
*   04/07/99  srl         rewrite - C interface, multiple mutices
*   05/13/99  stephen     Changed to umutex (from cmutex)
******************************************************************************
','line_number':3,'multiline':True]
['text':' Support for including an alternate implementation of atomic & mutex operations has been withdrawn.','line_number':38,'multiline':False]
['text':' See issue ICU-20185.','line_number':39,'multiline':False]
['text':' Export an explicit template instantiation of std::atomic<int32_t>. ','line_number':45,'multiline':False]
['text':' When building DLLs for Windows this is required as it is used as a data member of the exported SharedObject class.','line_number':46,'multiline':False]
['text':' See digitlst.h, pluralaffix.h, datefmt.h, and others for similar examples.','line_number':47,'multiline':False]
['text':'','line_number':48,'multiline':False]
['text':' Similar story for std::atomic<std::mutex *>, and the exported UMutex class.','line_number':49,'multiline':False]
['text':' Suppress the warning that the explicit instantiation after explicit specialization has no effect.','line_number':53,'multiline':False]
['text':' For GCC this class is already exported/visible, so no need for U_COMMON_API.','line_number':63,'multiline':False]
['text':'***************************************************************************
 *
 *   Low Level Atomic Operations, ICU wrappers for.
 *
 ***************************************************************************','line_number':73,'multiline':True]
['text':'************************************************************************************************
 *
 *  UInitOnce Definitions.
 *
 ************************************************************************************************','line_number':123,'multiline':True]
['text':' Note: isReset() is used by service registration code.','line_number':134,'multiline':False]
['text':'                 Thread safety of this usage needs review.','line_number':135,'multiline':False]
['text':' umtx_initOnce variant for plain functions, or static class functions.','line_number':155,'multiline':False]
['text':'               No context parameter.','line_number':156,'multiline':False]
['text':' umtx_initOnce variant for plain functions, or static class functions.','line_number':167,'multiline':False]
['text':'               With ErrorCode, No context parameter.','line_number':168,'multiline':False]
['text':' We run the initialization.','line_number':174,'multiline':False]
['text':' Someone else already ran the initialization.','line_number':179,'multiline':False]
['text':' umtx_initOnce variant for plain functions, or static class functions,','line_number':186,'multiline':False]
['text':'               with a context parameter.','line_number':187,'multiline':False]
['text':' umtx_initOnce variant for plain functions, or static class functions,','line_number':198,'multiline':False]
['text':'               with a context parameter and an error code.','line_number':199,'multiline':False]
['text':' We run the initialization.','line_number':205,'multiline':False]
['text':' Someone else already ran the initialization.','line_number':210,'multiline':False]
['text':' UMutex should be constexpr-constructible, so that no initialization code','line_number':217,'multiline':False]
['text':' is run during startup.','line_number':218,'multiline':False]
['text':' This works on all C++ libraries except MS VS before VS2019.','line_number':219,'multiline':False]
['text':' (VS std lib older than VS2017) || (VS std lib version < VS2019)','line_number':222,'multiline':False]
['text':'*
 * UMutex - ICU Mutex class.
 *
 * This is the preferred Mutex class for use within ICU implementation code.
 * It is a thin wrapper over C++ std::mutex, with these additions:
 *    - Static instances are safe, not triggering static construction or destruction,
 *      and the associated order of construction or destruction issues.
 *    - Plumbed into u_cleanup() for destructing the underlying std::mutex,
 *      which frees any OS level resources they may be holding.
 *
 * Limitations:
 *    - Static or global instances only. Cannot be heap allocated. Cannot appear as a
 *      member of another class.
 *    - No condition variables or other advanced features. If needed, you will need to use
 *      std::mutex and std::condition_variable directly. For an example, see unifiedcache.cpp
 *
 * Typical Usage:
 *    static UMutex myMutex;
 *
 *    {
 *       Mutex lock(myMutex);
 *       ...    // Do stuff that is protected by myMutex;
 *    }         // myMutex is released when lock goes out of scope.
 ','line_number':228,'multiline':True]
['text':' requirements for C++ BasicLockable, allows UMutex to work with std::lock_guard','line_number':262,'multiline':False]
['text':'* All initialized UMutexes are kept in a linked list, so that they can be found,
     * and the underlying std::mutex destructed, by u_cleanup().
     ','line_number':284,'multiline':True]
['text':'* Out-of-line function to lazily initialize a UMutex on first use.
     * Initial fast check is inline, in lock().  The returned value may never
     * be nullptr.
     ','line_number':290,'multiline':True]
['text':' Lock a mutex.
 * @param mutex The given mutex to be locked.  Pass NULL to specify
 *              the global ICU mutex.  Recursive locks are an error
 *              and may cause a deadlock on some platforms.
 ','line_number':300,'multiline':True]
['text':' Unlock a mutex.
 * @param mutex The given mutex to be unlocked.  Pass NULL to specify
 *              the global ICU mutex.
 ','line_number':307,'multiline':True]
['text':' UMUTEX_H ','line_number':316,'multiline':True]
['text':'eof','line_number':317,'multiline':True]
