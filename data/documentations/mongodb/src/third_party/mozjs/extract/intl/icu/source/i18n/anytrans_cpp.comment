['text':' Â© 2016 and later: Unicode, Inc. and others.','line_number':1,'multiline':False]
['text':' License & terms of use: http://www.unicode.org/copyright.html','line_number':2,'multiline':False]
['text':'
*****************************************************************
* Copyright (c) 2002-2014, International Business Machines Corporation
* and others.  All Rights Reserved.
*****************************************************************
* Date        Name        Description
* 06/06/2002  aliu        Creation.
*****************************************************************
','line_number':3,'multiline':True]
['text':'------------------------------------------------------------','line_number':29,'multiline':False]
['text':' Constants','line_number':30,'multiline':False]
['text':' '-'','line_number':32,'multiline':False]
['text':' '/'','line_number':33,'multiline':False]
['text':' "Any"','line_number':34,'multiline':False]
['text':' "Null"','line_number':35,'multiline':False]
['text':' "-Latn;Latn-"','line_number':36,'multiline':False]
['text':' initial size for an Any-XXXX transform's cache of script-XXXX transforms','line_number':38,'multiline':False]
['text':' (will grow as necessary, but we don't expect to have source text with more than 7 scripts)','line_number':39,'multiline':False]
['text':'------------------------------------------------------------','line_number':42,'multiline':False]
['text':'*
 * Deleter function for Transliterator*.
 ','line_number':45,'multiline':True]
['text':'------------------------------------------------------------','line_number':54,'multiline':False]
['text':'------------------------------------------------------------','line_number':58,'multiline':False]
['text':' ScriptRunIterator','line_number':59,'multiline':False]
['text':'*
 * Returns a series of ranges corresponding to scripts. They will be
 * of the form:
 *
 * ccccSScSSccccTTcTcccc   - c = common, S = first script, T = second
 * |            |          - first run (start, limit)
 *          |           |  - second run (start, limit)
 *
 * That is, the runs will overlap. The reason for this is so that a
 * transliterator can consider common characters both before and after
 * the scripts.
 ','line_number':61,'multiline':True]
['text':'*
     * The code of the current run, valid after next() returns.  May
     * be USCRIPT_INVALID_CODE if and only if the entire text is
     * COMMON/INHERITED.
     ','line_number':80,'multiline':True]
['text':'*
     * The start of the run, inclusive, valid after next() returns.
     ','line_number':87,'multiline':True]
['text':'*
     * The end of the run, exclusive, valid after next() returns.
     ','line_number':92,'multiline':True]
['text':'*
     * Constructs a run iterator over the given text from start
     * (inclusive) to limit (exclusive).
     ','line_number':97,'multiline':True]
['text':'*
     * Returns TRUE if there are any more runs.  TRUE is always
     * returned at least once.  Upon return, the caller should
     * examine scriptCode, start, and limit.
     ','line_number':103,'multiline':True]
['text':'*
     * Adjusts internal indices for a change in the limit index of the
     * given delta.  A positive delta means the limit has increased.
     ','line_number':110,'multiline':True]
['text':' forbid copying of this class','line_number':117,'multiline':False]
['text':' forbid copying of this class','line_number':118,'multiline':False]
['text':' don't know script yet','line_number':135,'multiline':False]
['text':' Are we done?','line_number':138,'multiline':False]
['text':' Move start back to include adjacent COMMON or INHERITED','line_number':143,'multiline':False]
['text':' characters','line_number':144,'multiline':False]
['text':' look back','line_number':146,'multiline':False]
['text':' Move limit ahead to include COMMON, INHERITED, and characters','line_number':155,'multiline':False]
['text':' of the current script.','line_number':156,'multiline':False]
['text':' look ahead','line_number':158,'multiline':False]
['text':' Return TRUE even if the entire text is COMMON / INHERITED, in','line_number':170,'multiline':False]
['text':' which case scriptCode will be USCRIPT_INVALID_CODE.','line_number':171,'multiline':False]
['text':'------------------------------------------------------------','line_number':180,'multiline':False]
['text':' AnyTransliterator','line_number':181,'multiline':False]
['text':'*
 * Copy constructor.
 ','line_number':209,'multiline':True]
['text':' Don't copy the cache contents','line_number':217,'multiline':False]
['text':'*
 * Transliterator API.
 ','line_number':226,'multiline':True]
['text':'*
 * Implements {@link Transliterator#handleTransliterate}.
 ','line_number':233,'multiline':True]
['text':' Ignore runs in the ante context','line_number':244,'multiline':False]
['text':' Try to instantiate transliterator from it.scriptCode to','line_number':247,'multiline':False]
['text':' our target or target/variant','line_number':248,'multiline':False]
['text':' We have no transliterator.  Do nothing, but keep','line_number':252,'multiline':False]
['text':' pos.start up to date.','line_number':253,'multiline':False]
['text':' If the run end is before the transliteration limit, do','line_number':258,'multiline':False]
['text':' a non-incremental transliteration.  Otherwise do an','line_number':259,'multiline':False]
['text':' incremental one.','line_number':260,'multiline':False]
['text':' We're done if we enter the post context','line_number':271,'multiline':False]
['text':' Restore limit.  pos.start is fine where the last transliterator','line_number':275,'multiline':False]
['text':' left it, or at the end of the last run.','line_number':276,'multiline':False]
['text':' Try to pivot around Latin, our most common script','line_number':301,'multiline':False]
['text':' Common case, no race to cache this new transliterator.','line_number':317,'multiline':False]
['text':' Race case, some other thread beat us to caching this transliterator.','line_number':320,'multiline':False]
['text':' Our newly created transliterator that lost the race & now needs deleting.','line_number':322,'multiline':False]
['text':' The transliterator from the cache that we will return.','line_number':323,'multiline':False]
['text':' will be non-null only in case of races.','line_number':326,'multiline':False]
['text':'*
 * Return the script code for a given name, or -1 if not found.
 ','line_number':332,'multiline':True]
['text':' Make sure that we NULL terminate the string.','line_number':344,'multiline':False]
['text':'*
 * Registers standard transliterators with the system.  Called by
 * Transliterator during initialization.  Scan all current targets and
 * register those that are scripts T as Any-T/V.
 ','line_number':353,'multiline':True]
['text':' Ignore the "Any" source','line_number':368,'multiline':False]
['text':'U_FOLD_CASE_DEFAULT','line_number':369,'multiline':True]
['text':' Only process each target once','line_number':376,'multiline':False]
['text':' Get the script code for the target.  If not a script, ignore.','line_number':381,'multiline':False]
['text':' assert(variantCount >= 1);','line_number':386,'multiline':False]
['text':' #if !UCONFIG_NO_TRANSLITERATION ','line_number':409,'multiline':True]
['text':'eof','line_number':411,'multiline':False]
