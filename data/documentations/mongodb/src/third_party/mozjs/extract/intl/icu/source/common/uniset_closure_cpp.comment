['text':' Â© 2016 and later: Unicode, Inc. and others.','line_number':1,'multiline':False]
['text':' License & terms of use: http://www.unicode.org/copyright.html','line_number':2,'multiline':False]
['text':'
*******************************************************************************
*
*   Copyright (C) 2011, International Business Machines
*   Corporation and others.  All Rights Reserved.
*
*******************************************************************************
*   file name:  uniset_closure.cpp
*   encoding:   UTF-8
*   tab size:   8 (not used)
*   indentation:4
*
*   created on: 2011may30
*   created by: Markus W. Scherer
*
*   UnicodeSet::closeOver() and related methods moved here from uniset_props.cpp
*   to simplify dependencies.
*   In particular, this depends on the BreakIterator, but the BreakIterator
*   code also builds UnicodeSets from patterns and needs uniset_props.
','line_number':3,'multiline':True]
['text':' TODO memory debugging provided inside uniset.cpp','line_number':36,'multiline':False]
['text':' could be made available here but probably obsolete with use of modern','line_number':37,'multiline':False]
['text':' memory leak checker tools','line_number':38,'multiline':False]
['text':'----------------------------------------------------------------','line_number':41,'multiline':False]
['text':' Constructors &c','line_number':42,'multiline':False]
['text':'----------------------------------------------------------------','line_number':43,'multiline':False]
['text':'----------------------------------------------------------------','line_number':61,'multiline':False]
['text':' Public API','line_number':62,'multiline':False]
['text':'----------------------------------------------------------------','line_number':63,'multiline':False]
['text':' Skip over trailing whitespace','line_number':76,'multiline':False]
['text':' Need to build the pattern in a temporary string because','line_number':98,'multiline':False]
['text':' _applyPattern calls add() etc., which set pat to empty.','line_number':99,'multiline':False]
['text':' syntaxError(chars, "Extra chars in variable value");','line_number':105,'multiline':False]
['text':' USetAdder implementation','line_number':113,'multiline':False]
['text':' Does not use uset.h to reduce code dependencies','line_number':114,'multiline':False]
['text':'----------------------------------------------------------------','line_number':130,'multiline':False]
['text':' Case folding API','line_number':131,'multiline':False]
['text':'----------------------------------------------------------------','line_number':132,'multiline':False]
['text':' add the result of a full case mapping to the set','line_number':134,'multiline':False]
['text':' use str as a temporary string to avoid constructing one','line_number':135,'multiline':False]
['text':' add a single-code point case mapping','line_number':140,'multiline':False]
['text':' add a string case mapping from full with length result','line_number':143,'multiline':False]
['text':' result < 0: the code point mapped to itself, no need to add it','line_number':148,'multiline':False]
['text':' see ucase.h','line_number':149,'multiline':False]
['text':' don't need remove()','line_number':165,'multiline':False]
['text':' don't need removeRange()','line_number':166,'multiline':False]
['text':' start with input set to guarantee inclusion','line_number':169,'multiline':False]
['text':' USET_CASE: remove strings because the strings will actually be reduced (folded);','line_number':170,'multiline':False]
['text':'            therefore, start with no strings and add only those needed','line_number':171,'multiline':False]
['text':' full case closure','line_number':185,'multiline':False]
['text':' add case mappings','line_number':190,'multiline':False]
['text':' (does not add long s for regular s, or Kelvin for k, for example)','line_number':191,'multiline':False]
['text':' does not map to code points: add the folded string itself','line_number':213,'multiline':False]
