['text':' Â© 2016 and later: Unicode, Inc. and others.','line_number':1,'multiline':False]
['text':' License & terms of use: http://www.unicode.org/copyright.html','line_number':2,'multiline':False]
['text':'*******************************************************************
 * COPYRIGHT:
 * Copyright (c) 2002-2012, International Business Machines Corporation and
 * others. All Rights Reserved.
 *******************************************************************','line_number':3,'multiline':True]
['text':' Defines _XOPEN_SOURCE for access to POSIX functions.','line_number':9,'multiline':False]
['text':' Must be before any other #includes.','line_number':10,'multiline':False]
['text':'initialize the argument list','line_number':114,'multiline':False]
['text':' add specific options','line_number':119,'multiline':False]
['text':'parse the arguments','line_number':126,'multiline':False]
['text':' copy back values for additional options','line_number':129,'multiline':False]
['text':' Now setup the arguments','line_number':134,'multiline':False]
['text':' some default','line_number':172,'multiline':False]
['text':'pre-flight','line_number':191,'multiline':False]
['text':' don't do it again','line_number':216,'multiline':False]
['text':' Testing all methods','line_number':264,'multiline':False]
['text':' Test only the specified function','line_number':268,'multiline':False]
['text':'fprintf(stdout, "\n=== Handling test: %s: ===\n", name);','line_number':273,'multiline':False]
['text':'fprintf(stdout, "\n%s:\n", name);','line_number':274,'multiline':False]
['text':' check if name contains path (by looking for '/')','line_number':296,'multiline':False]
['text':' store subpath for calling subtest','line_number':298,'multiline':False]
['text':' split into two strings','line_number':299,'multiline':False]
['text':' restore original value at pos','line_number':316,'multiline':False]
['text':' call individual tests, to be overridden to call implementations','line_number':326,'multiline':False]
['text':'index','line_number':327,'multiline':True]
['text':'exec','line_number':327,'multiline':True]
['text':'name','line_number':327,'multiline':True]
['text':'par','line_number':327,'multiline':True]
['text':' to be overridden by a method like:','line_number':329,'multiline':False]
['text':'
    switch (index) {
        case 0: name = "First Test"; if (exec) FirstTest( par ); break;
        case 1: name = "Second Test"; if (exec) SecondTest( par ); break;
        default: name = ""; break;
    }
    ','line_number':330,'multiline':True]
['text':' Run for specified duration in seconds','line_number':379,'multiline':False]
['text':'n *=  1000; // s => ms','line_number':384,'multiline':False]
['text':'System.out.println("# " + meth.getName() + " " + n + " sec");','line_number':385,'multiline':False]
['text':' last resort for very fast methods','line_number':386,'multiline':False]
['text':' 90% is close enough','line_number':388,'multiline':False]
['text':'System.out.println("# " + meth.getName() + " x " + loops + " = " + t);                            ','line_number':393,'multiline':False]
['text':'System.out.println("# " + meth.getName() + " x " + loops);','line_number':400,'multiline':False]
['text':'print info only in verbose mode','line_number':435,'multiline':False]
['text':'*
* Print a usage message for this test class.
','line_number':477,'multiline':True]
['text':' correct a previously assumed test-exec, as this only calls a subtest','line_number':517,'multiline':False]
