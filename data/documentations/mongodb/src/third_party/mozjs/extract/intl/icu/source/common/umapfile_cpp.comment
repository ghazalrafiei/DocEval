['text':' Â© 2016 and later: Unicode, Inc. and others.','line_number':1,'multiline':False]
['text':' License & terms of use: http://www.unicode.org/copyright.html','line_number':2,'multiline':False]
['text':'
******************************************************************************
*
*   Copyright (C) 1999-2013, International Business Machines
*   Corporation and others.  All Rights Reserved.
*
*****************************************************************************','line_number':3,'multiline':True]
['text':'----------------------------------------------------------------------------
 *
 *       Memory mapped file wrappers for use by the ICU Data Implementation
 *       All of the platform-specific implementation for mapping data files
 *         is here.  The rest of the ICU Data implementation uses only the
 *         wrapper functions.
 *
 *----------------------------------------------------------------------------','line_number':12,'multiline':True]
['text':' Defines _XOPEN_SOURCE for access to POSIX functions.
 * Must be before any other #includes. ','line_number':20,'multiline':True]
['text':' memory-mapping base definitions ------------------------------------------ ','line_number':29,'multiline':True]
['text':' Some previous versions of the Windows 10 SDK don't expose various APIs for UWP applications','line_number':42,'multiline':False]
['text':' to use, even though UWP apps are allowed to call and use them.  Temporarily change the','line_number':43,'multiline':False]
['text':' WINAPI family partition below to Desktop, so that function declarations are visible for UWP.','line_number':44,'multiline':False]
['text':'   No memory mapping for 390 batch mode.  Fake it using dll loading.  ','line_number':81,'multiline':True]
['text':' This is inconvenient until we figure out what to do with U_ICUDATA_NAME in utypes.h ','line_number':88,'multiline':True]
['text':'----------------------------------------------------------------------------*
 *                                                                            *
 *   Memory Mapped File support.  Platform dependent implementation of        *
 *                           functions used by the rest of the implementation.*
 *                                                                            *
 *----------------------------------------------------------------------------','line_number':100,'multiline':True]
['text':' Clear the output struct. ','line_number':112,'multiline':True]
['text':' no file access ','line_number':113,'multiline':True]
['text':' nothing to do ','line_number':117,'multiline':True]
['text':' Fill in with info on the result doing the mapping. ','line_number':122,'multiline':True]
['text':'   Output only; any original contents are cleared.  ','line_number':123,'multiline':True]
['text':' File path to be opened/mapped.                     ','line_number':124,'multiline':True]
['text':' Error status, used to report out-of-memory errors. ','line_number':125,'multiline':True]
['text':' Clear the output struct.        ','line_number':135,'multiline':True]
['text':' open the input file ','line_number':137,'multiline':True]
['text':' Note: In the non-UWP code-path (ie: Win32), the value of the path variable might have come from ','line_number':139,'multiline':False]
['text':' the CRT 'getenv' function, and would be therefore be encoded in the default ANSI code page.','line_number':140,'multiline':False]
['text':' This means that we can't call the *W version of API below, whereas in the UWP code-path','line_number':141,'multiline':False]
['text':' there is no 'getenv' call, and thus the string will be only UTF-8/Invariant characters.','line_number':142,'multiline':False]
['text':' Convert from UTF-8 string to UTF-16 string.','line_number':147,'multiline':False]
['text':' Report back an error instead of a warning.','line_number':156,'multiline':False]
['text':' If we failed to open the file due to an out-of-memory error, then we want','line_number':166,'multiline':False]
['text':' to report that error back to the caller.','line_number':167,'multiline':False]
['text':' Note: We use NULL/nullptr for lpAttributes parameter below.','line_number':174,'multiline':False]
['text':' This means our handle cannot be inherited and we will get the default security descriptor.','line_number':175,'multiline':False]
['text':' create an unnamed Windows file-mapping object for the specified file ','line_number':176,'multiline':True]
['text':' If we failed to create the mapping due to an out-of-memory error, then ','line_number':181,'multiline':False]
['text':' we want to report that error back to the caller.','line_number':182,'multiline':False]
['text':' map a view of the file into our address space ','line_number':189,'multiline':True]
['text':' Clear the output struct.        ','line_number':223,'multiline':True]
['text':' determine the length of the file ','line_number':225,'multiline':True]
['text':' open the file ','line_number':231,'multiline':True]
['text':' get a view of the mapping ','line_number':237,'multiline':True]
['text':' no longer needed ','line_number':243,'multiline':True]
['text':' Possibly check the errno value for ENOMEM, and report U_MEMORY_ALLOCATION_ERROR?','line_number':245,'multiline':False]
['text':' copy of the filestrm.c/T_FileStream_size() implementation ','line_number':273,'multiline':True]
['text':'Changes by Bertrand A. D. doesn't affect the current position
        goes to the end of the file before ftell','line_number':279,'multiline':True]
['text':' Clear the output struct.        ','line_number':297,'multiline':True]
['text':' open the input file ','line_number':298,'multiline':True]
['text':' get the file length ','line_number':304,'multiline':True]
['text':' allocate the memory to hold the file data ','line_number':311,'multiline':True]
['text':' read the file ','line_number':319,'multiline':True]
['text':'  390 specific Library Loading.
     *  This is the only platform left that dynamically loads an ICU Data Library.
     *  All other platforms use .data files when dynamic loading is required, but
     *  this turn out to be awkward to support in 390 batch mode.
     *
     *  The idea here is to hide the fact that 390 is using dll loading from the
     *   rest of ICU, and make it look like there is file loading happening.
     *
     ','line_number':345,'multiline':True]
['text':'------------------------------------------------------------------------------
     *                                                                              
     *  computeDirPath   given a user-supplied path of an item to be opened,             
     *                         compute and return 
     *                            - the full directory path to be used 
     *                              when opening the file.
     *                            - Pointer to null at end of above returned path    
     *
     *                       Parameters:
     *                          path:        input path.  Buffer is not altered.
     *                          pathBuffer:  Output buffer.  Any contents are overwritten.
     *
     *                       Returns:
     *                          Pointer to null termination in returned pathBuffer.
     *
     *                    TODO:  This works the way ICU historically has, but the
     *                           whole data fallback search path is so complicated that
     *                           probably almost no one will ever really understand it,
     *                           the potential for confusion is large.  (It's not just 
     *                           this one function, but the whole scheme.)
     *                            
     *------------------------------------------------------------------------------','line_number':364,'multiline':True]
['text':' Ptr to last dir separator in input path, or null if none. ','line_number':388,'multiline':True]
['text':' Length of the returned directory path                     ','line_number':389,'multiline':True]
['text':' No user-supplied path.  
            * Copy the ICU_DATA path to the path buffer and return that','line_number':398,'multiline':True]
['text':' there is no icuDataDir either.  Just return the empty pathBuffer. ','line_number':405,'multiline':True]
['text':' User supplied path did contain a directory portion.
        * Copy it to the output path buffer ','line_number':410,'multiline':True]
['text':' must mmap file... for build ','line_number':441,'multiline':True]
['text':' Clear the output struct. ','line_number':446,'multiline':True]
['text':' determine the length of the file ','line_number':448,'multiline':True]
['text':' open the file ','line_number':454,'multiline':True]
['text':' get a view of the mapping ','line_number':460,'multiline':True]
['text':' no longer needed ','line_number':462,'multiline':True]
['text':' Possibly check the errorno value for ENOMEM, and report U_MEMORY_ALLOCATION_ERROR?','line_number':464,'multiline':False]
['text':' ### hack: we still need to get u_getDataDirectory() fixed
            for OS/390 (batch mode - always return "//"? )
            and this here straightened out with LIB_PREFIX and LIB_SUFFIX (both empty?!)
            This is probably due to the strange file system on OS/390.  It's more like
            a database with short entry names than a typical file system. ','line_number':474,'multiline':True]
['text':' U_ICUDATA_NAME should always have the correct name ','line_number':479,'multiline':True]
['text':' BUT FOR BATCH MODE IT IS AN EXCEPTION BECAUSE ','line_number':480,'multiline':True]
['text':' THE FIRST THREE LETTERS ARE PREASSIGNED TO THE ','line_number':481,'multiline':True]
['text':' PROJECT!!!!! ','line_number':482,'multiline':True]
['text':' set up the library name ','line_number':485,'multiline':True]
['text':' we have a data DLL - what kind of lookup do we need here? ','line_number':500,'multiline':True]
['text':' try to find the Table of Contents ','line_number':501,'multiline':True]
['text':' Clear the output struct.        ','line_number':502,'multiline':True]
['text':' failed... so keep looking ','line_number':505,'multiline':True]
['text':' no handle ','line_number':515,'multiline':True]
