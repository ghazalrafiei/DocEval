['text':' Â© 2016 and later: Unicode, Inc. and others.','line_number':1,'multiline':False]
['text':' License & terms of use: http://www.unicode.org/copyright.html','line_number':2,'multiline':False]
['text':'
*******************************************************************************
* Copyright (C) 2007-2016, International Business Machines Corporation and
* others. All Rights Reserved.
*******************************************************************************
','line_number':3,'multiline':True]
['text':'*
 * An array of URelativeString structs is used to store the resource data loaded out of the bundle.
 ','line_number':31,'multiline':True]
['text':'* offset of this item, such as, the relative date *','line_number':35,'multiline':True]
['text':'* length of the string *','line_number':36,'multiline':True]
['text':'* string, or NULL if not set *','line_number':37,'multiline':True]
['text':' don't support other time styles (e.g. relative styles), for now','line_number':83,'multiline':False]
['text':' Get fDateTimeFormatter from either date or time style (does not matter, we will override the pattern).','line_number':89,'multiline':False]
['text':' We do need to get separate patterns for the date & time styles.','line_number':90,'multiline':False]
['text':' does not matter whether timeStyle is UDAT_NONE, we need something for fDateTimeFormatter','line_number':108,'multiline':False]
['text':' Initialize the parent fCalendar, so that parse() works correctly.','line_number':119,'multiline':False]
['text':' The DateFormat::operator== check for fCapitalizationContext equality above','line_number':140,'multiline':False]
['text':'   is sufficient to check equality of all derived context-related data.','line_number':141,'multiline':False]
['text':' DateFormat::operator== guarantees following cast is safe','line_number':142,'multiline':False]
['text':' calculate the difference, in days, between 'cal' and now.','line_number':162,'multiline':False]
['text':' look up string','line_number':165,'multiline':False]
['text':' found a relative string','line_number':169,'multiline':False]
['text':' capitalize relativeDayString according to context for relative, set formatter no context','line_number':176,'multiline':False]
['text':' titlecase first word of relativeDayString','line_number':181,'multiline':False]
['text':' set our context for the formatter','line_number':187,'multiline':False]
['text':' Need to quote the relativeDayString to make it a legal date pattern','line_number':204,'multiline':False]
['text':' double any existing APOSTROPHE','line_number':205,'multiline':False]
['text':' add APOSTROPHE at beginning...','line_number':206,'multiline':False]
['text':' and at end','line_number':207,'multiline':False]
['text':' this is just here to get around the hiding problem','line_number':229,'multiline':False]
['text':' (the previous format() override would hide the version of','line_number':230,'multiline':False]
['text':' format() on DateFormat that this function correspond to, so we','line_number':231,'multiline':False]
['text':' have to redefine it here)','line_number':232,'multiline':False]
['text':' no date pattern, try parsing as time','line_number':243,'multiline':False]
['text':' no time pattern or way to combine, try parsing as date','line_number':247,'multiline':False]
['text':' first check whether text matches a relativeDayString','line_number':248,'multiline':False]
['text':' it matched, handle the relative day string','line_number':253,'multiline':False]
['text':' Set the calendar to now+offset','line_number':257,'multiline':False]
['text':' failure in setting calendar field, set offset to beginning of rel day string','line_number':262,'multiline':False]
['text':' just parse as normal date','line_number':270,'multiline':False]
['text':' Here we replace any relativeDayString in text with the equivalent date','line_number':275,'multiline':False]
['text':' formatted per fDatePattern, then parse text normally using the combined pattern.','line_number':276,'multiline':False]
['text':' it matched, replace the relative date with a real one for parsing','line_number':285,'multiline':False]
['text':' Set the calendar to now+offset','line_number':289,'multiline':False]
['text':' Adjust offsets','line_number':313,'multiline':False]
['text':' offset at or after the end of the replaced text,','line_number':317,'multiline':False]
['text':' correct by the difference between original and replacement','line_number':318,'multiline':False]
['text':' offset in the replaced text, set it to the beginning of that text','line_number':321,'multiline':False]
['text':' (i.e. the beginning of the relative day string)','line_number':322,'multiline':False]
['text':' redefined here because the other parse() function hides this function's','line_number':336,'multiline':False]
['text':' counterpart on DateFormat','line_number':337,'multiline':False]
['text':' redefined here because the other parse() function hides this function's','line_number':344,'multiline':False]
['text':' counterpart on DateFormat','line_number':345,'multiline':False]
['text':' Is it inside the resource bundle's range?','line_number':355,'multiline':False]
['text':' not found.','line_number':363,'multiline':False]
['text':' override the DateFormat implementation in order to','line_number':417,'multiline':False]
['text':' lazily initialize relevant items','line_number':418,'multiline':False]
['text':'*
 * Sink for getting data from fields/day/relative data.
 * For loading relative day names, e.g., "yesterday", "today".
 ','line_number':468,'multiline':True]
['text':'noFallback','line_number':488,'multiline':True]
['text':' Find the relative offset.','line_number':493,'multiline':False]
['text':' Put in the proper spot, but don't override existing data.','line_number':496,'multiline':False]
['text':' Converts to index in UDAT_R','line_number':497,'multiline':False]
['text':' Not found and n is an empty slot.','line_number':499,'multiline':False]
['text':' Virtual destructors must be defined out of line.','line_number':509,'multiline':False]
['text':' Namespace','line_number':512,'multiline':False]
['text':' "{1}"','line_number':515,'multiline':False]
['text':' Remove relative bit.','line_number':530,'multiline':False]
['text':' Data loading for relative names, e.g., "yesterday", "today", "tomorrow".','line_number':545,'multiline':False]
['text':' Maximum defined by data.','line_number':546,'multiline':False]
['text':'----------------------------------------------------------------------','line_number':560,'multiline':False]
['text':' this should to be in DateFormat, instead it was copied from SimpleDateFormat.','line_number':562,'multiline':False]
['text':' TODO: Cache the nowCal to avoid heap allocs? Would be difficult, don't know the calendar type','line_number':580,'multiline':False]
['text':' For the day difference, we are interested in the difference in the (modified) julian day number','line_number':584,'multiline':False]
['text':' which is midnight to midnight.  Using fieldDifference() is NOT correct here, because ','line_number':585,'multiline':False]
['text':' 6pm Jan 4th  to 10am Jan 5th should be considered "tomorrow".','line_number':586,'multiline':False]
['text':' !UCONFIG_NO_FORMATTING ','line_number':595,'multiline':True]
