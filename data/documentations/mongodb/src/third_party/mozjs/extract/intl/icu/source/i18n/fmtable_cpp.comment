['text':' Â© 2016 and later: Unicode, Inc. and others.','line_number':1,'multiline':False]
['text':' License & terms of use: http://www.unicode.org/copyright.html','line_number':2,'multiline':False]
['text':'
*******************************************************************************
* Copyright (C) 1997-2016, International Business Machines Corporation and
* others. All Rights Reserved.
*******************************************************************************
*
* File FMTABLE.CPP
*
* Modification History:
*
*   Date        Name        Description
*   03/25/97    clhuang     Initial Implementation.
********************************************************************************
','line_number':3,'multiline':True]
['text':' *****************************************************************************','line_number':35,'multiline':False]
['text':' class Formattable','line_number':36,'multiline':False]
['text':' *****************************************************************************','line_number':37,'multiline':False]
['text':'-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.','line_number':46,'multiline':False]
['text':' NOTE: As of 3.0, there are limitations to the UObject API.  It does','line_number':48,'multiline':False]
['text':' not (yet) support cloning, operator=, nor operator==.  To','line_number':49,'multiline':False]
['text':' work around this, I implement some simple inlines here.  Later','line_number':50,'multiline':False]
['text':' these can be modified or removed.  [alan]','line_number':51,'multiline':False]
['text':' NOTE: These inlines assume that all fObjects are in fact instances','line_number':53,'multiline':False]
['text':' of the Measure class, which is true as of 3.0.  [alan]','line_number':54,'multiline':False]
['text':' Return TRUE if *a == *b.','line_number':56,'multiline':False]
['text':' LATER: return *a == *b;','line_number':58,'multiline':False]
['text':' Return a clone of *a.','line_number':62,'multiline':False]
['text':' LATER: return a->clone();','line_number':64,'multiline':False]
['text':' Return TRUE if *a is an instance of Measure.','line_number':68,'multiline':False]
['text':'*
 * Creates a new Formattable array and copies the values from the specified
 * original.
 * @param array the original array
 * @param count the original array count
 * @return the new Formattable array.
 ','line_number':73,'multiline':True]
['text':' Don't memcpy!','line_number':84,'multiline':False]
['text':'-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.','line_number':89,'multiline':False]
['text':'*
 * Set 'ec' to 'err' only if 'ec' is not already set to a failing UErrorCode.
 ','line_number':91,'multiline':True]
['text':'','line_number':100,'multiline':False]
['text':'  Common initialization code, shared by constructors.','line_number':101,'multiline':False]
['text':'  Put everything into a known state.','line_number':102,'multiline':False]
['text':'','line_number':103,'multiline':False]
['text':' -------------------------------------','line_number':112,'multiline':False]
['text':' default constructor.','line_number':113,'multiline':False]
['text':' Creates a formattable object with a long value 0.','line_number':114,'multiline':False]
['text':' -------------------------------------','line_number':120,'multiline':False]
['text':' Creates a formattable object with a Date instance.','line_number':121,'multiline':False]
['text':'isDate','line_number':123,'multiline':True]
['text':' -------------------------------------','line_number':130,'multiline':False]
['text':' Creates a formattable object with a double value.','line_number':131,'multiline':False]
['text':' -------------------------------------','line_number':140,'multiline':False]
['text':' Creates a formattable object with an int32_t value.','line_number':141,'multiline':False]
['text':' -------------------------------------','line_number':149,'multiline':False]
['text':' Creates a formattable object with an int64_t value.','line_number':150,'multiline':False]
['text':' -------------------------------------','line_number':159,'multiline':False]
['text':' Creates a formattable object with a decimal number value from a string.','line_number':160,'multiline':False]
['text':' -------------------------------------','line_number':168,'multiline':False]
['text':' Creates a formattable object with a UnicodeString instance.','line_number':169,'multiline':False]
['text':' -------------------------------------','line_number':178,'multiline':False]
['text':' Creates a formattable object with a UnicodeString* value.','line_number':179,'multiline':False]
['text':' (adopting symantics)','line_number':180,'multiline':False]
['text':' -------------------------------------','line_number':196,'multiline':False]
['text':' -------------------------------------','line_number':207,'multiline':False]
['text':' copy constructor','line_number':208,'multiline':False]
['text':' -------------------------------------','line_number':218,'multiline':False]
['text':' assignment operator','line_number':219,'multiline':False]
['text':' Disposes the current formattable value/setting.','line_number':226,'multiline':False]
['text':' Sets the correct data type for this value.','line_number':229,'multiline':False]
['text':' Sets each element in the array one by one and records the array count.','line_number':234,'multiline':False]
['text':' Sets the string value.','line_number':240,'multiline':False]
['text':' Sets the double value.','line_number':244,'multiline':False]
['text':' Sets the long value.','line_number':249,'multiline':False]
['text':' Sets the Date value.','line_number':253,'multiline':False]
['text':' -------------------------------------','line_number':276,'multiline':False]
['text':' Returns FALSE if the data types are different.','line_number':285,'multiline':False]
['text':' Compares the actual data values.','line_number':288,'multiline':False]
['text':' Checks each element for equality.','line_number':309,'multiline':False]
['text':' TODO:  compare digit lists if numeric.','line_number':326,'multiline':False]
['text':' -------------------------------------','line_number':330,'multiline':False]
['text':' -------------------------------------','line_number':337,'multiline':False]
['text':' Deletes the data value if necessary.','line_number':341,'multiline':False]
['text':' -------------------------------------','line_number':371,'multiline':False]
['text':' Gets the data type of this Formattable object. ','line_number':372,'multiline':False]
['text':' -------------------------------------','line_number':391,'multiline':False]
['text':'Formattable::getLong(UErrorCode* status) const','line_number':393,'multiline':False]
['text':' loses fraction','line_number':421,'multiline':False]
['text':' TODO Later replace this with instanceof call','line_number':428,'multiline':False]
['text':' -------------------------------------','line_number':440,'multiline':False]
['text':' Maximum int that can be represented exactly in a double.  (53 bits)','line_number':441,'multiline':False]
['text':'    Larger ints may be rounded to a near-by value as not all are representable.','line_number':442,'multiline':False]
['text':' TODO:  move this constant elsewhere, possibly configure it for different','line_number':443,'multiline':False]
['text':'        floating point formats, if any non-standard ones are still in use.','line_number':444,'multiline':False]
['text':' Unexpected','line_number':469,'multiline':False]
['text':' -------------------------------------','line_number':492,'multiline':False]
['text':' loses precision','line_number':502,'multiline':False]
['text':' TODO Later replace this with instanceof call','line_number':511,'multiline':False]
['text':' -------------------------------------','line_number':528,'multiline':False]
['text':' Sets the value to a double value d.','line_number':529,'multiline':False]
['text':' -------------------------------------','line_number':539,'multiline':False]
['text':' Sets the value to a long value l.','line_number':540,'multiline':False]
['text':' -------------------------------------','line_number':550,'multiline':False]
['text':' Sets the value to an int64 value ll.','line_number':551,'multiline':False]
['text':' -------------------------------------','line_number':561,'multiline':False]
['text':' Sets the value to a Date instance d.','line_number':562,'multiline':False]
['text':' -------------------------------------','line_number':572,'multiline':False]
['text':' Sets the value to a string value stringToCopy.','line_number':573,'multiline':False]
['text':' -------------------------------------','line_number':583,'multiline':False]
['text':' Sets the value to an array of Formattable objects.','line_number':584,'multiline':False]
['text':' -------------------------------------','line_number':595,'multiline':False]
['text':' Adopts the stringToAdopt value.','line_number':596,'multiline':False]
['text':' -------------------------------------','line_number':606,'multiline':False]
['text':' Adopts the array value and its count.','line_number':607,'multiline':False]
['text':' -------------------------------------','line_number':625,'multiline':False]
['text':' -------------------------------------','line_number':642,'multiline':False]
['text':' -------------------------------------','line_number':657,'multiline':False]
['text':' -------------------------------------','line_number':672,'multiline':False]
['text':' -------------------------------------','line_number':685,'multiline':False]
['text':' Gets the bogus string, ensures mondo bogosity.','line_number':686,'multiline':False]
['text':' cast away const :-( ','line_number':691,'multiline':True]
['text':' --------------------------------------','line_number':695,'multiline':False]
['text':' getDecimalNumber returns "" for error cases','line_number':706,'multiline':False]
['text':' No decimal number for the formattable yet.  Which means the value was','line_number':715,'multiline':False]
['text':' set directly by the user as an int, int64 or double.  If the value came','line_number':716,'multiline':False]
['text':' from parsing, or from the user setting a decimal number, fDecimalNum','line_number':717,'multiline':False]
['text':' would already be set.','line_number':718,'multiline':False]
['text':'','line_number':719,'multiline':False]
['text':' Older ICUs called uprv_decNumberToString here, which is not exactly the same as','line_number':732,'multiline':False]
['text':' DecimalQuantity::toScientificString(). The biggest difference is that uprv_decNumberToString does','line_number':733,'multiline':False]
['text':' not print scientific notation for magnitudes greater than -5 and smaller than some amount (+5?).','line_number':734,'multiline':False]
['text':' use toPlainString for integer types','line_number':741,'multiline':False]
['text':' The formattable's value is not a numeric type.','line_number':770,'multiline':False]
['text':' ---------------------------------------','line_number':775,'multiline':False]
['text':' allow adoptDigitList(NULL) to clear','line_number':782,'multiline':False]
['text':' Set the value into the Union of simple type values.','line_number':786,'multiline':False]
['text':' Cannot use the set() functions because they would delete the fDecimalNum value.','line_number':787,'multiline':False]
['text':' ---------------------------------------','line_number':802,'multiline':False]
['text':' Note that we do not hang on to the caller's input string.','line_number':814,'multiline':False]
['text':' If we are asked for the string, we will regenerate one from fDecimalQuantity.','line_number':815,'multiline':False]
['text':'----------------------------------------------------','line_number':819,'multiline':False]
['text':' console I/O','line_number':820,'multiline':False]
['text':'----------------------------------------------------','line_number':821,'multiline':False]
['text':' not : public UObject because all methods are static ','line_number':830,'multiline':True]
['text':' private - forbid instantiation','line_number':835,'multiline':False]
['text':' This is for debugging purposes only.  This will send a displayable','line_number':838,'multiline':False]
['text':' form of the Formattable object to the output stream.','line_number':839,'multiline':False]
['text':' Creates a DateFormat instance for formatting the','line_number':849,'multiline':False]
['text':' Date instance.','line_number':850,'multiline':False]
['text':' Output the double as is.','line_number':858,'multiline':False]
['text':' Output the double as is.','line_number':862,'multiline':False]
['text':' Output the double as is.  Please see UnicodeString console','line_number':866,'multiline':False]
['text':' I/O routine for more details.','line_number':867,'multiline':False]
['text':' Recursively calling the console I/O routine for each element in the array.','line_number':875,'multiline':False]
['text':' Not a recognizable Formattable object.','line_number':883,'multiline':False]
['text':' ---- UFormattable implementation ---- ','line_number':894,'multiline':True]
['text':' avoid bogosity by checking the type first.','line_number':973,'multiline':False]
['text':' This should return a valid string','line_number':981,'multiline':False]
['text':' returns non-const Formattable','line_number':1009,'multiline':False]
['text':' #if !UCONFIG_NO_FORMATTING ','line_number':1040,'multiline':True]
['text':'eof','line_number':1042,'multiline':False]
