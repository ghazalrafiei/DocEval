['text':' Â© 2016 and later: Unicode, Inc. and others.','line_number':1,'multiline':False]
['text':' License & terms of use: http://www.unicode.org/copyright.html','line_number':2,'multiline':False]
['text':'*
 *******************************************************************************
 * Copyright (C) 2006-2014, International Business Machines Corporation   *
 * and others. All Rights Reserved.                                            *
 *******************************************************************************
 ','line_number':3,'multiline':True]
['text':'******************************************************************
 * DictionaryBreakEngine
 ','line_number':25,'multiline':True]
['text':'*
 * <p>DictionaryBreakEngine is a kind of LanguageBreakEngine that uses a
 * dictionary to determine language-specific breaks.</p>
 *
 * <p>After it is constructed a DictionaryBreakEngine may be shared between
 * threads without synchronization.</p>
 ','line_number':29,'multiline':True]
['text':'*
     * The set of characters handled by this engine
     * @internal
     ','line_number':38,'multiline':True]
['text':'*
   * <p>Constructor </p>
   ','line_number':47,'multiline':True]
['text':'*
   * <p>Virtual destructor.</p>
   ','line_number':52,'multiline':True]
['text':'*
   * <p>Indicate whether this engine handles a particular character for
   * a particular kind of break.</p>
   *
   * @param c A character which begins a run that the engine might handle
   * @return true if this engine handles the particular character and break
   * type.
   ','line_number':57,'multiline':True]
['text':'*
   * <p>Find any breaks within a run in the supplied text.</p>
   *
   * @param text A UText representing the text. The iterator is left at
   * the end of the run of characters which the engine is capable of handling 
   * that starts from the first character in the range.
   * @param startPos The start of the run within the supplied text.
   * @param endPos The end of the run within the supplied text.
   * @param foundBreaks vector of int32_t to receive the break positions
   * @return The number of breaks found.
   ','line_number':67,'multiline':True]
['text':'*
  * <p>Set the character set handled by this engine.</p>
  *
  * @param set A UnicodeSet of the set of characters handled by the engine
  ','line_number':85,'multiline':True]
['text':'*
  * <p>Divide up a range of known dictionary characters handled by this break engine.</p>
  *
  * @param text A UText representing the text
  * @param rangeStart The start of the range of dictionary characters
  * @param rangeEnd The end of the range of dictionary characters
  * @param foundBreaks Output of C array of int32_t break positions, or 0
  * @return The number of breaks found
  ','line_number':92,'multiline':True]
['text':'******************************************************************
 * ThaiBreakEngine
 ','line_number':108,'multiline':True]
['text':'*
 * <p>ThaiBreakEngine is a kind of DictionaryBreakEngine that uses a
 * dictionary and heuristics to determine Thai-specific breaks.</p>
 *
 * <p>After it is constructed a ThaiBreakEngine may be shared between
 * threads without synchronization.</p>
 ','line_number':112,'multiline':True]
['text':'*
     * The set of characters handled by this engine
     * @internal
     ','line_number':121,'multiline':True]
['text':'*
   * <p>Default constructor.</p>
   *
   * @param adoptDictionary A DictionaryMatcher to adopt. Deleted when the
   * engine is deleted.
   ','line_number':135,'multiline':True]
['text':'*
   * <p>Virtual destructor.</p>
   ','line_number':143,'multiline':True]
['text':'*
  * <p>Divide up a range of known dictionary characters handled by this break engine.</p>
  *
  * @param text A UText representing the text
  * @param rangeStart The start of the range of dictionary characters
  * @param rangeEnd The end of the range of dictionary characters
  * @param foundBreaks Output of C array of int32_t break positions, or 0
  * @return The number of breaks found
  ','line_number':149,'multiline':True]
['text':'******************************************************************
 * LaoBreakEngine
 ','line_number':165,'multiline':True]
['text':'*
 * <p>LaoBreakEngine is a kind of DictionaryBreakEngine that uses a
 * dictionary and heuristics to determine Lao-specific breaks.</p>
 *
 * <p>After it is constructed a LaoBreakEngine may be shared between
 * threads without synchronization.</p>
 ','line_number':169,'multiline':True]
['text':'*
     * The set of characters handled by this engine
     * @internal
     ','line_number':178,'multiline':True]
['text':'*
   * <p>Default constructor.</p>
   *
   * @param adoptDictionary A DictionaryMatcher to adopt. Deleted when the
   * engine is deleted.
   ','line_number':191,'multiline':True]
['text':'*
   * <p>Virtual destructor.</p>
   ','line_number':199,'multiline':True]
['text':'*
  * <p>Divide up a range of known dictionary characters handled by this break engine.</p>
  *
  * @param text A UText representing the text
  * @param rangeStart The start of the range of dictionary characters
  * @param rangeEnd The end of the range of dictionary characters
  * @param foundBreaks Output of C array of int32_t break positions, or 0
  * @return The number of breaks found
  ','line_number':205,'multiline':True]
['text':'****************************************************************** 
 * BurmeseBreakEngine 
 ','line_number':221,'multiline':True]
['text':'* 
 * <p>BurmeseBreakEngine is a kind of DictionaryBreakEngine that uses a 
 * DictionaryMatcher and heuristics to determine Burmese-specific breaks.</p> 
 * 
 * <p>After it is constructed a BurmeseBreakEngine may be shared between 
 * threads without synchronization.</p> 
 ','line_number':225,'multiline':True]
['text':'* 
     * The set of characters handled by this engine 
     * @internal 
     ','line_number':234,'multiline':True]
['text':'* 
   * <p>Default constructor.</p> 
   * 
   * @param adoptDictionary A DictionaryMatcher to adopt. Deleted when the 
   * engine is deleted. 
   ','line_number':247,'multiline':True]
['text':'* 
   * <p>Virtual destructor.</p> 
   ','line_number':255,'multiline':True]
['text':'* 
  * <p>Divide up a range of known dictionary characters.</p> 
  * 
  * @param text A UText representing the text 
  * @param rangeStart The start of the range of dictionary characters 
  * @param rangeEnd The end of the range of dictionary characters 
  * @param foundBreaks Output of C array of int32_t break positions, or 0 
  * @return The number of breaks found 
  ','line_number':261,'multiline':True]
['text':'****************************************************************** 
 * KhmerBreakEngine 
 ','line_number':277,'multiline':True]
['text':'* 
 * <p>KhmerBreakEngine is a kind of DictionaryBreakEngine that uses a 
 * DictionaryMatcher and heuristics to determine Khmer-specific breaks.</p> 
 * 
 * <p>After it is constructed a KhmerBreakEngine may be shared between 
 * threads without synchronization.</p> 
 ','line_number':281,'multiline':True]
['text':'* 
     * The set of characters handled by this engine 
     * @internal 
     ','line_number':290,'multiline':True]
['text':'* 
   * <p>Default constructor.</p> 
   * 
   * @param adoptDictionary A DictionaryMatcher to adopt. Deleted when the 
   * engine is deleted. 
   ','line_number':303,'multiline':True]
['text':'* 
   * <p>Virtual destructor.</p> 
   ','line_number':311,'multiline':True]
['text':'* 
  * <p>Divide up a range of known dictionary characters.</p> 
  * 
  * @param text A UText representing the text 
  * @param rangeStart The start of the range of dictionary characters 
  * @param rangeEnd The end of the range of dictionary characters 
  * @param foundBreaks Output of C array of int32_t break positions, or 0 
  * @return The number of breaks found 
  ','line_number':317,'multiline':True]
['text':'******************************************************************
 * CjkBreakEngine
 ','line_number':335,'multiline':True]
['text':'indicates language/script that the CjkBreakEngine will handle','line_number':339,'multiline':False]
['text':'*
 * <p>CjkBreakEngine is a kind of DictionaryBreakEngine that uses a
 * dictionary with costs associated with each word and
 * Viterbi decoding to determine CJK-specific breaks.</p>
 ','line_number':345,'multiline':True]
['text':'*
     * The set of characters handled by this engine
     * @internal
     ','line_number':352,'multiline':True]
['text':'*
     * <p>Default constructor.</p>
     *
     * @param adoptDictionary A DictionaryMatcher to adopt. Deleted when the
     * engine is deleted. The DictionaryMatcher must contain costs for each word
     * in order for the dictionary to work properly.
     ','line_number':366,'multiline':True]
['text':'*
     * <p>Virtual destructor.</p>
     ','line_number':375,'multiline':True]
['text':'*
     * <p>Divide up a range of known dictionary characters handled by this break engine.</p>
     *
     * @param text A UText representing the text
     * @param rangeStart The start of the range of dictionary characters
     * @param rangeEnd The end of the range of dictionary characters
     * @param foundBreaks Output of C array of int32_t break positions, or 0
     * @return The number of breaks found
     ','line_number':381,'multiline':True]
['text':' DICTBE_H ','line_number':401,'multiline':True]
