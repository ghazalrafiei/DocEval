['text':' Â© 2016 and later: Unicode, Inc. and others.','line_number':1,'multiline':False]
['text':' License & terms of use: http://www.unicode.org/copyright.html','line_number':2,'multiline':False]
['text':'
*******************************************************************************
*
*   Copyright (C) 2012-2016, International Business Machines
*   Corporation and others.  All Rights Reserved.
*
*******************************************************************************
*   file name:  listformatter.h
*   encoding:   UTF-8
*   tab size:   8 (not used)
*   indentation:4
*
*   created on: 20120426
*   created by: Umesh P. Nair
','line_number':3,'multiline':True]
['text':'* @internal ','line_number':39,'multiline':True]
['text':'* @internal ','line_number':42,'multiline':True]
['text':' The following can't be #ifndef U_HIDE_INTERNAL_API, needed for other .h file declarations ','line_number':45,'multiline':True]
['text':'*
 * @internal
 * \cond
 ','line_number':46,'multiline':True]
['text':'* \endcond ','line_number':61,'multiline':True]
['text':'*
 * \file
 * \brief C++ API: API for formatting a list.
 ','line_number':64,'multiline':True]
['text':'*
 * An immutable class containing the result of a list formatting operation.
 *
 * Instances of this class are immutable and thread-safe.
 *
 * When calling nextPosition():
 * The fields are returned from start to end. The special field category
 * UFIELD_CATEGORY_LIST_SPAN is used to indicate which argument
 * was inserted at the given position. The span category will
 * always occur before the corresponding instance of UFIELD_CATEGORY_LIST
 * in the nextPosition() iterator.
 *
 * Not intended for public subclassing.
 *
 * @stable ICU 64
 ','line_number':70,'multiline':True]
['text':'*
     * Default constructor; makes an empty FormattedList.
     * @stable ICU 64
     ','line_number':88,'multiline':True]
['text':'*
     * Move constructor: Leaves the source FormattedList in an undefined state.
     * @stable ICU 64
     ','line_number':94,'multiline':True]
['text':'*
     * Destruct an instance of FormattedList.
     * @stable ICU 64
     ','line_number':100,'multiline':True]
['text':'* Copying not supported; use move constructor instead. ','line_number':106,'multiline':True]
['text':'* Copying not supported; use move assignment instead. ','line_number':109,'multiline':True]
['text':'*
     * Move assignment: Leaves the source FormattedList in an undefined state.
     * @stable ICU 64
     ','line_number':112,'multiline':True]
['text':'* @copydoc FormattedValue::toString() ','line_number':118,'multiline':True]
['text':'* @copydoc FormattedValue::toTempString() ','line_number':121,'multiline':True]
['text':'* @copydoc FormattedValue::appendTo() ','line_number':124,'multiline':True]
['text':'* @copydoc FormattedValue::nextPosition() ','line_number':127,'multiline':True]
['text':'*
 * An immutable class for formatting a list, using data from CLDR (or supplied
 * separately).
 *
 * Example: Input data ["Alice", "Bob", "Charlie", "Delta"] will be formatted
 * as "Alice, Bob, Charlie and Delta" in English.
 *
 * The ListFormatter class is not intended for public subclassing.
 * @stable ICU 50
 ','line_number':141,'multiline':True]
['text':'*
     * Copy constructor.
     * @stable ICU 52
     ','line_number':155,'multiline':True]
['text':'*
     * Assignment operator.
     * @stable ICU 52
     ','line_number':161,'multiline':True]
['text':'*
     * Creates a ListFormatter appropriate for the default locale.
     *
     * @param errorCode ICU error code, set if no data available for default locale.
     * @return Pointer to a ListFormatter object for the default locale,
     *     created from internal data derived from CLDR data.
     * @stable ICU 50
     ','line_number':167,'multiline':True]
['text':'*
     * Creates a ListFormatter appropriate for a locale.
     *
     * @param locale The locale.
     * @param errorCode ICU error code, set if no data available for the given locale.
     * @return A ListFormatter object created from internal data derived from
     *     CLDR data.
     * @stable ICU 50
     ','line_number':177,'multiline':True]
['text':'*
     * Creates a ListFormatter for the given locale, list type, and style.
     *
     * @param locale The locale.
     * @param type The type of list formatting to use.
     * @param width The width of formatting to use.
     * @param errorCode ICU error code, set if no data available for the given locale.
     * @return A ListFormatter object created from internal data derived from CLDR data.
     * @stable ICU 67
     ','line_number':188,'multiline':True]
['text':'*
     * Destructor.
     *
     * @stable ICU 50
     ','line_number':201,'multiline':True]
['text':'*
     * Formats a list of strings.
     *
     * @param items An array of strings to be combined and formatted.
     * @param n_items Length of the array items.
     * @param appendTo The string to which the result should be appended to.
     * @param errorCode ICU error code, set if there is an error.
     * @return Formatted string combining the elements of items, appended to appendTo.
     * @stable ICU 50
     ','line_number':209,'multiline':True]
['text':'*
     * Formats a list of strings to a FormattedList, which exposes field
     * position information. The FormattedList contains more information than
     * a FieldPositionIterator.
     *
     * @param items     An array of strings to be combined and formatted.
     * @param n_items   Length of the array items.
     * @param errorCode ICU error code returned here.
     * @return          A FormattedList containing field information.
     * @stable ICU 64
     ','line_number':222,'multiline':True]
['text':'*
      @internal for MeasureFormat
    ','line_number':239,'multiline':True]
['text':'*
     * @internal constructor made public for testing.
     ','line_number':249,'multiline':True]
['text':'*
     * @internal constructor made public for testing.
     ','line_number':253,'multiline':True]
['text':' U_HIDE_INTERNAL_API ','line_number':257,'multiline':True]
['text':'*
     * Creates a ListFormatter appropriate for a locale and style.
     *
     * @param locale The locale.
     * @param style the style, either "standard", "or", "unit", "unit-narrow", or "unit-short"
     ','line_number':261,'multiline':True]
['text':' #if !UCONFIG_NO_FORMATTING ','line_number':286,'multiline':True]
['text':' U_SHOW_CPLUSPLUS_API ','line_number':288,'multiline':True]
['text':' __LISTFORMATTER_H__','line_number':290,'multiline':False]
