['text':' Â© 2016 and later: Unicode, Inc. and others.','line_number':1,'multiline':False]
['text':' License & terms of use: http://www.unicode.org/copyright.html','line_number':2,'multiline':False]
['text':'
*******************************************************************************
*
*   Copyright (C) 2000-2015, International Business Machines
*   Corporation and others.  All Rights Reserved.
*
*******************************************************************************
*
* File reslist.cpp
*
* Modification History:
*
*   Date        Name        Description
*   02/21/00    weiv        Creation.
*******************************************************************************
','line_number':3,'multiline':True]
['text':' Safer use of UnicodeString.','line_number':20,'multiline':False]
['text':' Less important, but still a good idea.','line_number':25,'multiline':False]
['text':'
 * Align binary data at a 16-byte offset from the start of the resource bundle,
 * to be safe for any data type it may contain.
 ','line_number':52,'multiline':True]
['text':' This numeric constant must be at least 1.','line_number':58,'multiline':False]
['text':' If StringResource.fNumUnitsSaved == 0 then the string occurs only once,','line_number':59,'multiline':False]
['text':' and it makes no sense to move it to the pool bundle.','line_number':60,'multiline':False]
['text':' The larger the threshold for fNumUnitsSaved','line_number':61,'multiline':False]
['text':' the smaller the savings, and the smaller the pool bundle.','line_number':62,'multiline':False]
['text':' We trade some total size reduction to reduce the pool bundle a bit,','line_number':63,'multiline':False]
['text':' so that one can reasonably save data size by','line_number':64,'multiline':False]
['text':' removing bundle files without rebuilding the pool bundle.','line_number':65,'multiline':False]
['text':' This can also help to keep the pool and total (pool+local) string indexes','line_number':66,'multiline':False]
['text':' within 16 bits, that is, within range of Table16 and Array16 containers.','line_number':67,'multiline':False]
['text':' How do we store string values? ','line_number':79,'multiline':True]
['text':' formatVersion 1: int length + UChars + NUL + padding to 4 bytes ','line_number':81,'multiline':True]
['text':' formatVersion 2 & up: optional length in 1..3 UChars + UChars + NUL ','line_number':82,'multiline':True]
['text':' do not store the length explicitly for such strings ','line_number':85,'multiline':True]
['text':'
 * res_none() returns the address of kNoResource,
 * for use in non-error cases when no resource is to be added to the bundle.
 * (NULL is used in error cases.)
 ','line_number':89,'multiline':True]
['text':' TODO: const','line_number':94,'multiline':False]
['text':' dataFormat="ResB" ','line_number':105,'multiline':True]
['text':' formatVersion ','line_number':106,'multiline':True]
['text':' dataVersion take a look at version inside parsed resb','line_number':107,'multiline':True]
['text':' indexed by a major-formatVersion integer ','line_number':110,'multiline':True]
['text':' Remember to update genrb.h GENRB_VERSION when changing the data format.','line_number':116,'multiline':False]
['text':' (Or maybe we should remove GENRB_VERSION and report the ICU version number?)','line_number':117,'multiline':False]
['text':' returns space we need to pad ','line_number':120,'multiline':True]
['text':' TODO: return const pointer, or find another way to express "none"','line_number':146,'multiline':False]
['text':' TODO: clarify that containers adopt new items, even in error cases; use LocalPointer','line_number':183,'multiline':False]
['text':' remember this linenumber to report to the user if there is a duplicate key ','line_number':189,'multiline':True]
['text':' here we need to traverse the list ','line_number':192,'multiline':True]
['text':' is the list still empty? ','line_number':195,'multiline':True]
['text':'
         * formatVersion 1: compare key strings in native-charset order
         * formatVersion 2 and up: compare key strings in ASCII order
         ','line_number':210,'multiline':True]
['text':' we're either in front of the list, or in the middle ','line_number':223,'multiline':True]
['text':' front of the list ','line_number':225,'multiline':True]
['text':' middle of the list ','line_number':228,'multiline':True]
['text':' Key already exists! ERROR! ','line_number':235,'multiline':True]
['text':' end of list ','line_number':242,'multiline':True]
['text':' Some code relies on NUL-termination.','line_number':282,'multiline':False]
['text':' Some code relies on NUL-termination.','line_number':297,'multiline':False]
['text':' Pool bundle string, alias the buffer. Guaranteed NUL-terminated and not empty.','line_number':303,'multiline':False]
['text':' Writing Functions ','line_number':408,'multiline':True]
['text':' This is a duplicate of a pool bundle string or of an earlier-visited string.','line_number':416,'multiline':False]
['text':' Put this string into the set for finding duplicates. ','line_number':426,'multiline':True]
['text':'
             * This string will be stored without an explicit length.
             * Runtime will detect !U16_IS_TRAIL(s[0]) and call u_strlen().
             ','line_number':434,'multiline':True]
['text':' +1 for the NUL ','line_number':446,'multiline':True]
['text':'
         * The resource item word was already precomputed, which means
         * no further data needs to be written.
         * This might be an integer, or an empty string/binary/etc.
         ','line_number':464,'multiline':True]
['text':'bundle','line_number':475,'multiline':True]
['text':'stringSet','line_number':475,'multiline':True]
['text':'errorCode','line_number':476,'multiline':True]
['text':' Neither a string nor a container. ','line_number':477,'multiline':True]
['text':' empty string ','line_number':483,'multiline':True]
['text':' do a binary search for the old, pre-compactKeys() key offset ','line_number':511,'multiline':True]
['text':'
 * Only called for UTF-16 v1 strings and duplicate UTF-16 v2 strings.
 * For unique UTF-16 v2 strings, write16() sees fRes != RES_BOGUS
 * and exits early.
 ','line_number':526,'multiline':True]
['text':'bundle','line_number':532,'multiline':True]
['text':' This is a duplicate. ','line_number':535,'multiline':True]
['text':' Find the smallest table type that fits the data. ','line_number':577,'multiline':True]
['text':' 16-bit count, key offsets and values ','line_number':590,'multiline':True]
['text':' 16-bit count, 16-bit key offsets, 32-bit values ','line_number':598,'multiline':True]
['text':' 32-bit count, key offsets and values ','line_number':602,'multiline':True]
['text':'bundle','line_number':608,'multiline':True]
['text':' A tagged resource has a non-negative key index into the parsed key strings.','line_number':616,'multiline':False]
['text':' compactKeys() built a map from parsed key index to the final key index.','line_number':617,'multiline':False]
['text':' After the mapping, negative key indexes are used for shared pool bundle keys.','line_number':618,'multiline':False]
['text':' If the key index fits into a Key16 for a Table or Table16,','line_number':620,'multiline':False]
['text':' then set the fKey16 field accordingly.','line_number':621,'multiline':False]
['text':' Otherwise keep it at -1.','line_number':622,'multiline':False]
['text':'
     * fRes != RES_BOGUS:
     * The resource item word was already precomputed, which means
     * no further data needs to be written.
     * This might be an integer, or an empty or UTF-16 v2 string,
     * an empty binary, etc.
     ','line_number':637,'multiline':True]
['text':' Compute fRes16 for precomputed as well as just-computed fRes.','line_number':647,'multiline':False]
['text':'bundle','line_number':652,'multiline':True]
['text':' Only a few resource types write 16-bit units. ','line_number':653,'multiline':True]
['text':'
 * Only called for UTF-16 v1 strings, and for aliases.
 * For UTF-16 v2 strings, preWrite() sees fRes != RES_BOGUS
 * and exits early.
 ','line_number':656,'multiline':True]
['text':' Write the UTF-16 v1 string. ','line_number':663,'multiline':True]
['text':' pad == 4 or 8 or 12 ','line_number':686,'multiline':True]
['text':' 16-bit count, 16-bit key offsets, 32-bit values ','line_number':710,'multiline':True]
['text':' 32-bit count, key offsets and values ','line_number':714,'multiline':True]
['text':'
         * The resource item word was already precomputed, which means
         * no further data needs to be written.
         * This might be an integer, or an empty or UTF-16 v2 string,
         * an empty binary, etc.
         ','line_number':723,'multiline':True]
['text':'byteOffset','line_number':736,'multiline':True]
['text':'
 * Only called for UTF-16 v1 strings, and for aliases. For UTF-16 v2 strings,
 * write() sees fWritten and exits early.
 ','line_number':740,'multiline':True]
['text':' Write the UTF-16 v1 string. ','line_number':746,'multiline':True]
['text':' pad == 4 or 8 or 12 ','line_number':795,'multiline':True]
['text':' 16-bit count and even number of 16-bit key offsets need padding before 32-bit resource items ','line_number':816,'multiline':True]
['text':' URES_TABLE32 ','line_number':820,'multiline':True]
['text':'mem','line_number':846,'multiline':True]
['text':'byteOffset','line_number':846,'multiline':True]
['text':'
     * Add padding bytes to fKeys so that fKeysTop is 4-aligned.
     * Safe because the capacity is a multiple of 4.
     ','line_number':860,'multiline':True]
['text':'
     * In URES_TABLE, use all local key offsets that fit into 16 bits,
     * and use the remaining 16-bit offsets for pool key offsets
     * if there are any.
     * If there are no local keys, then use the whole 16-bit space
     * for pool key offsets.
     * Note: This cannot be changed without changing the major formatVersion.
     ','line_number':867,'multiline':True]
['text':' 16-bit indexes work for all pool + local strings.','line_number':919,'multiline':False]
['text':' Set the pool index threshold so that 16-bit indexes work','line_number':922,'multiline':False]
['text':' for some pool strings and some local strings.','line_number':923,'multiline':False]
['text':' If we just default to formatVersion 3','line_number':928,'multiline':False]
['text':' but there are no pool bundle strings to share','line_number':929,'multiline':False]
['text':' and we do not write a pool bundle,','line_number':930,'multiline':False]
['text':' then write formatVersion 2 which is just as good.','line_number':931,'multiline':False]
['text':' pad to multiple of 4 bytes ','line_number':941,'multiline':True]
['text':' total size including the root item ','line_number':947,'multiline':True]
['text':' write the root item ','line_number':1012,'multiline':True]
['text':'
     * formatVersion 1.1 (ICU 2.8):
     * write int32_t indexes[] after root and before the key strings
     * to make it easier to parse resource bundles in icuswap or from Java etc.
     ','line_number':1015,'multiline':True]
['text':'
     * formatVersion 1.2 (ICU 3.6):
     * write indexes[URES_INDEX_ATTRIBUTES] with URES_ATT_NO_FALLBACK set or not set
     * the memset() above initialized all indexes[] to 0
     ','line_number':1027,'multiline':True]
['text':'
     * formatVersion 2.0 (ICU 4.4):
     * more compact string value storage, optional pool bundle
     ','line_number':1035,'multiline':True]
['text':' no pool strings to checksum','line_number':1048,'multiline':False]
['text':' Swap to big-endian so we get the same checksum on all platforms','line_number':1053,'multiline':False]
['text':' (except for charset family, due to the key strings).','line_number':1054,'multiline':False]
['text':' .getBuffer(capacity) returns a mutable buffer','line_number':1057,'multiline':False]
['text':' formatVersion 3 (ICU 56):','line_number':1073,'multiline':False]
['text':' share string values via pool bundle strings','line_number':1074,'multiline':False]
['text':' bits 23..0 -> 31..8','line_number':1075,'multiline':False]
['text':' bits 27..24 -> 15..12','line_number':1076,'multiline':False]
['text':' write the indexes[] ','line_number':1079,'multiline':True]
['text':' write the table key strings ','line_number':1082,'multiline':True]
['text':' write the v2 UTF-16 strings, URES_TABLE16 and URES_ARRAY16 ','line_number':1086,'multiline':True]
['text':' write all of the bundle contents: the root item and its children ','line_number':1089,'multiline':True]
['text':' Opening Functions ','line_number':1102,'multiline':True]
['text':' f16BitUnits must start with a zero for empty resources.','line_number':1158,'multiline':False]
['text':' We might be able to omit it if there are no empty 16-bit resources.','line_number':1159,'multiline':False]
['text':' formatVersion 1.1 and up: start fKeysTop after the root item and indexes[] ','line_number':1177,'multiline':True]
['text':' formatVersion 1 ','line_number':1182,'multiline':True]
['text':' root ','line_number':1185,'multiline':True]
['text':' Closing Functions ','line_number':1196,'multiline':True]
['text':' Misc Functions ','line_number':1209,'multiline':True]
['text':' It is not legal to add new key bytes after compactKeys is run!','line_number':1253,'multiline':False]
['text':' overflow - resize the keys buffer ','line_number':1270,'multiline':True]
['text':' no error: the root table and array items have no keys ','line_number':1293,'multiline':True]
['text':'
     * Compare possibly-negative key offsets. Don't just return lPos - rPos
     * because that is prone to negative-integer underflows.
     ','line_number':1306,'multiline':True]
['text':' compare keys in reverse character order ','line_number':1331,'multiline':True]
['text':' sort equal suffixes by descending key length ','line_number':1338,'multiline':True]
['text':' Sort pool bundle keys first (negative oldpos), and otherwise keys in parsing order. ','line_number':1343,'multiline':True]
['text':'context','line_number':1348,'multiline':True]
['text':'context','line_number':1353,'multiline':True]
['text':' Except for pool bundles, keys might not be used.','line_number':1374,'multiline':False]
['text':' Do not add unused keys to the final bundle.','line_number':1375,'multiline':False]
['text':' negative oldpos ','line_number':1398,'multiline':True]
['text':' skip the key ','line_number':1400,'multiline':True]
['text':' skip the NUL ','line_number':1401,'multiline':True]
['text':' Mark the unused key as deleted','line_number':1407,'multiline':False]
['text':' skip the key ','line_number':1413,'multiline':True]
['text':' skip the NUL ','line_number':1414,'multiline':True]
['text':' Throw away any unused keys from the end','line_number':1419,'multiline':False]
['text':' Sort the keys so that each one is immediately followed by all of its suffixes. ','line_number':1422,'multiline':True]
['text':'
     * Make suffixes point into earlier, longer strings that contain them
     * and mark the old, now unused suffix bytes as deleted.
     ','line_number':1425,'multiline':True]
['text':'
             * This key is not a suffix of the previous one;
             * keep this one and delete the following ones that are
             * suffixes of this one.
             ','line_number':1432,'multiline':True]
['text':' Key string from the pool bundle, do not delete. ','line_number':1442,'multiline':True]
['text':' suffix cannot be longer than the original ','line_number':1457,'multiline':True]
['text':' Is it a suffix of the earlier, longer key? ','line_number':1459,'multiline':True]
['text':' yes, point to the earlier key ','line_number':1462,'multiline':True]
['text':' Mark the suffix as deleted','line_number':1463,'multiline':False]
['text':' not a suffix, restart from here ','line_number':1467,'multiline':True]
['text':'
         * Re-sort by newpos, then modify the key characters array in-place
         * to squeeze out unused bytes, and readjust the newpos offsets.
         ','line_number':1472,'multiline':True]
['text':' skip key offsets that point into the pool bundle rather than this new bundle ','line_number':1482,'multiline':True]
['text':' skip unused bytes ','line_number':1487,'multiline':True]
['text':' adjust the new offsets for keys starting here ','line_number':1489,'multiline':True]
['text':' move the key characters to their new position ','line_number':1493,'multiline':True]
['text':' Re-sort once more, by old offsets for binary searching. ','line_number':1500,'multiline':True]
['text':' key size reduction by limit - newpos ','line_number':1504,'multiline':True]
['text':'context','line_number':1514,'multiline':True]
['text':' compare keys in reverse character order ','line_number':1522,'multiline':True]
['text':' sort equal suffixes by descending string length ','line_number':1529,'multiline':True]
['text':'context','line_number':1534,'multiline':True]
['text':' Make "is suffix of another string" compare greater than a non-suffix. ','line_number':1538,'multiline':True]
['text':' sort by ascending string length ','line_number':1543,'multiline':True]
['text':' sort by descending size reduction','line_number':1548,'multiline':False]
['text':' sort lexically','line_number':1553,'multiline':False]
['text':' will not occur ','line_number':1578,'multiline':True]
['text':' Store the StringResource pointers in an array for','line_number':1589,'multiline':False]
['text':' easy sorting and processing.','line_number':1590,'multiline':False]
['text':' We enumerate a set of strings, so there are no duplicates.','line_number':1591,'multiline':False]
['text':' Sort the strings so that each one is immediately followed by all of its suffixes. ','line_number':1600,'multiline':True]
['text':'
     * Make suffixes point into earlier, longer strings that contain them.
     * Temporarily use fSame and fSuffixOffset for suffix strings to
     * refer to the remaining ones.
     ','line_number':1606,'multiline':True]
['text':'
         * This string is not a suffix of the previous one;
         * write this one and subsume the following ones that are
         * suffixes of this one.
         ','line_number':1612,'multiline':True]
['text':' Whole duplicates of pool strings are already account for in fPoolStringIndexLimit,','line_number':1619,'multiline':False]
['text':' see StringResource::handlePreflightStrings().','line_number':1620,'multiline':False]
['text':' Is it a suffix of the earlier, longer string? ','line_number':1624,'multiline':True]
['text':' Set strings are unique.','line_number':1626,'multiline':False]
['text':' Pool string, skip.','line_number':1628,'multiline':False]
['text':' yes, point to the earlier string ','line_number':1630,'multiline':True]
['text':' Suffix-share res which is a pool string.','line_number':1634,'multiline':False]
['text':' Compute the resource word and collect the maximum.','line_number':1635,'multiline':False]
['text':' write the suffix by itself if we need explicit length ','line_number':1646,'multiline':True]
['text':' not a suffix, restart from here ','line_number':1649,'multiline':True]
['text':'
     * Re-sort the strings by ascending length (except suffixes last)
     * to optimize for URES_TABLE16 and URES_ARRAY16:
     * Keep as many as possible within reach of 16-bit offsets.
     ','line_number':1654,'multiline':True]
['text':' Write strings that are sufficiently shared.','line_number':1665,'multiline':False]
['text':' Avoid writing other strings.','line_number':1666,'multiline':False]
['text':' Maximum pool string index when suffix-sharing the last character.','line_number':1672,'multiline':False]
['text':' not quiet','line_number':1689,'multiline':False]
['text':' Write the non-suffix strings. ','line_number':1700,'multiline':True]
['text':' Write the suffix strings. Make each point to the real string. ','line_number':1730,'multiline':True]
['text':' Set strings are unique.','line_number':1737,'multiline':False]
['text':' Suffixes of pool strings have been set already.','line_number':1740,'multiline':False]
['text':' +1 to account for the initial zero in f16BitUnits','line_number':1748,'multiline':False]
['text':'filter','line_number':1753,'multiline':True]
['text':'path','line_number':1754,'multiline':True]
['text':'bundle','line_number':1755,'multiline':True]
['text':' Only a few resource types (tables) are capable of being filtered.','line_number':1756,'multiline':False]
['text':' Include whole subtree','line_number':1769,'multiline':False]
['text':' no-op','line_number':1770,'multiline':False]
['text':' Reject the whole subtree','line_number':1775,'multiline':False]
['text':' Remove it from the linked list','line_number':1776,'multiline':False]
['text':' Recurse into the child','line_number':1790,'multiline':False]
