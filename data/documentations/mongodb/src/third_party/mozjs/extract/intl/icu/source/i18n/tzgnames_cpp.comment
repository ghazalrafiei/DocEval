['text':' Â© 2016 and later: Unicode, Inc. and others.','line_number':1,'multiline':False]
['text':' License & terms of use: http://www.unicode.org/copyright.html','line_number':2,'multiline':False]
['text':'
*******************************************************************************
* Copyright (C) 2011-2016, International Business Machines Corporation and
* others. All Rights Reserved.
*******************************************************************************
','line_number':3,'multiline':True]
['text':' "{0}"','line_number':51,'multiline':False]
['text':' "{1} ({0})"','line_number':52,'multiline':False]
['text':'*
 * Hash function for partial location name hash key
 ','line_number':66,'multiline':True]
['text':' <tzID>&<mzID>#[L|S]','line_number':71,'multiline':False]
['text':'*
 * Comparer for partial location name hash key
 ','line_number':81,'multiline':True]
['text':' We just check identity of tzID/mzID','line_number':95,'multiline':False]
['text':'*
 * Deleter for GNameInfo
 ','line_number':99,'multiline':True]
['text':'*
 * GNameInfo stores zone name information in the local trie
 ','line_number':107,'multiline':True]
['text':'*
 * GMatchInfo stores zone name match information used by find method
 ','line_number':115,'multiline':True]
['text':' ---------------------------------------------------','line_number':126,'multiline':False]
['text':' The class stores time zone generic name match information','line_number':127,'multiline':False]
['text':' ---------------------------------------------------','line_number':128,'multiline':False]
['text':' vector of MatchEntry','line_number':140,'multiline':False]
['text':' ---------------------------------------------------','line_number':190,'multiline':False]
['text':' GNameSearchHandler','line_number':191,'multiline':False]
['text':' ---------------------------------------------------','line_number':192,'multiline':False]
['text':' matches a requested type','line_number':230,'multiline':False]
['text':' add the match to the vector','line_number':243,'multiline':False]
['text':' give the ownership to the caller','line_number':265,'multiline':False]
['text':' reset','line_number':269,'multiline':False]
['text':' ---------------------------------------------------','line_number':330,'multiline':False]
['text':' TZGNCore - core implmentation of TimeZoneGenericNames','line_number':331,'multiline':False]
['text':'','line_number':332,'multiline':False]
['text':' TimeZoneGenericNames is parallel to TimeZoneNames,','line_number':333,'multiline':False]
['text':' but handles run-time generated time zone names.','line_number':334,'multiline':False]
['text':' This is the main part of this module.','line_number':335,'multiline':False]
['text':' ---------------------------------------------------','line_number':336,'multiline':False]
['text':' TimeZoneNames','line_number':359,'multiline':False]
['text':' Initialize format patterns','line_number':365,'multiline':False]
['text':' OK with fallback warning..','line_number':369,'multiline':False]
['text':' locale display names','line_number':393,'multiline':False]
['text':' hash table for names - no key/value deleters','line_number':396,'multiline':False]
['text':' no value deleter','line_number':409,'multiline':False]
['text':' target region','line_number':411,'multiline':False]
['text':' preload generic names for the default zone','line_number':434,'multiline':False]
['text':'
 * This method updates the cache and must be called with a lock
 ','line_number':509,'multiline':True]
['text':' already checked length above','line_number':522,'multiline':False]
['text':' gEmpty indicate the name is not available','line_number':528,'multiline':False]
['text':' Construct location name','line_number':535,'multiline':False]
['text':' If this is the primary zone in the country, use the country name.','line_number':544,'multiline':False]
['text':' If this is not the primary zone in the country,','line_number':554,'multiline':False]
['text':' use the exemplar city name.','line_number':555,'multiline':False]
['text':' getExemplarLocationName should retur non-empty string','line_number':557,'multiline':False]
['text':' if the time zone is associated with a region','line_number':558,'multiline':False]
['text':' Cache the result','line_number':571,'multiline':False]
['text':' gEmpty to indicate - no location name available','line_number':575,'multiline':False]
['text':' put the name info into the trie','line_number':582,'multiline':False]
['text':' Try to get a name from time zone first','line_number':608,'multiline':False]
['text':' Try meta zone','line_number':616,'multiline':False]
['text':' Check if the zone actually uses daylight saving time around the time','line_number':635,'multiline':False]
['text':' If not BasicTimeZone... only if the instance is not an ICU's implementation.','line_number':661,'multiline':False]
['text':' We may get a wrong answer in edge case, but it should practically work OK.','line_number':662,'multiline':False]
['text':' TODO: revisit this issue later','line_number':687,'multiline':False]
['text':' In CLDR, a same display name is used for both generic and standard','line_number':688,'multiline':False]
['text':' for some meta zones in some locales.  This looks like a data bugs.','line_number':689,'multiline':False]
['text':' For now, we check if the standard name is different from its generic','line_number':690,'multiline':False]
['text':' name below.','line_number':691,'multiline':False]
['text':' Get a name from meta zone','line_number':701,'multiline':False]
['text':' Check if we need to use a partial location format.','line_number':705,'multiline':False]
['text':' This check is done by comparing offset with the meta zone's','line_number':706,'multiline':False]
['text':' golden zone at the given date.','line_number':707,'multiline':False]
['text':' Check offset in the golden zone with wall time.','line_number':715,'multiline':False]
['text':' With getOffset(date, false, offsets1),','line_number':716,'multiline':False]
['text':' you may get incorrect results because of time overlap at DST->STD','line_number':717,'multiline':False]
['text':' transition.','line_number':718,'multiline':False]
['text':' Now we need to use a partial location format','line_number':723,'multiline':False]
['text':'
 * This method updates the cache and must be called with a lock
 ','line_number':763,'multiline':True]
['text':' Use country name','line_number':796,'multiline':False]
['text':' Otherwise, use exemplar city name','line_number':799,'multiline':False]
['text':' This could happen when the time zone is not associated with a country,','line_number':805,'multiline':False]
['text':' and its ID is not hierarchical, for example, CST6CDT.','line_number':806,'multiline':False]
['text':' We use the canonical ID itself as the location for this case.','line_number':807,'multiline':False]
['text':' Add the name to cache','line_number':821,'multiline':False]
['text':' put the name to the local trie as well','line_number':831,'multiline':False]
['text':'
 * This method updates the cache and must be called with a lock,
 * except initializer.
 ','line_number':844,'multiline':True]
['text':' load the generic location name','line_number':850,'multiline':False]
['text':' partial location names','line_number':853,'multiline':False]
['text':'terminator','line_number':861,'multiline':True]
['text':' if this time zone is not the golden zone of the meta zone,','line_number':869,'multiline':False]
['text':' partial location name (such as "PT (Los Angeles)") might be','line_number':870,'multiline':False]
['text':' available.','line_number':871,'multiline':False]
['text':' getPartialLocationName formats a name and put it into the trie','line_number':877,'multiline':False]
['text':' Find matches in the TimeZoneNames first','line_number':899,'multiline':False]
['text':' UBool isLongStandard = FALSE;   // workaround - see the comments below','line_number':908,'multiline':False]
['text':' TODO: Temporary hack (on hack) for short standard name/location name conflict (found in zh_Hant), should be removed after CLDR 21m1 integration','line_number':909,'multiline':False]
['text':' name for a meta zone','line_number':918,'multiline':False]
['text':' isLongStandard = TRUE;','line_number':929,'multiline':False]
['text':' this one is never used for generic, but just in case','line_number':930,'multiline':False]
['text':' TODO: Remove this later, see the comments above.','line_number':931,'multiline':False]
['text':' this one is never used for generic, but just in case','line_number':935,'multiline':False]
['text':' Full match','line_number':949,'multiline':False]
['text':'tzID.setTo(bestMatchTzID);','line_number':951,'multiline':False]
['text':'timeType = bestMatchTimeType;','line_number':952,'multiline':False]
['text':'return bestMatchLen;','line_number':953,'multiline':False]
['text':' TODO Some time zone uses a same name for the long standard name','line_number':955,'multiline':False]
['text':' and the location name. When the match is a long standard name,','line_number':956,'multiline':False]
['text':' then we need to check if the name is same with the location name.','line_number':957,'multiline':False]
['text':' This is probably a data error or a design bug.','line_number':958,'multiline':False]
['text':'
            if (!isLongStandard) {
                tzID.setTo(bestMatchTzID);
                timeType = bestMatchTimeType;
                return bestMatchLen;
            }
','line_number':959,'multiline':True]
['text':' TODO The deprecation of commonlyUsed flag introduced the name','line_number':966,'multiline':False]
['text':' conflict not only for long standard names, but short standard names too.','line_number':967,'multiline':False]
['text':' These short names (found in zh_Hant) should be gone once we clean','line_number':968,'multiline':False]
['text':' up CLDR time zone display name data. Once the short name conflict','line_number':969,'multiline':False]
['text':' problem (with location name) is resolved, we should change the condition','line_number':970,'multiline':False]
['text':' below back to the original one above. -Yoshito (2011-09-14)','line_number':971,'multiline':False]
['text':' Find matches in the local trie','line_number':980,'multiline':False]
['text':' TODO See the above TODO. We use len >= bestMatchLen','line_number':989,'multiline':False]
['text':' because of the long standard/location name collision','line_number':990,'multiline':False]
['text':' problem. If it is also a location name, carrying','line_number':991,'multiline':False]
['text':' timeType = UTZFMT_TIME_TYPE_STANDARD will cause a','line_number':992,'multiline':False]
['text':' problem in SimpleDateFormat','line_number':993,'multiline':False]
['text':' because generic','line_number':996,'multiline':False]
['text':' perfect match','line_number':1031,'multiline':False]
['text':' All names are not yet loaded into the local trie.','line_number':1045,'multiline':False]
['text':' Load all available names into the trie. This could be very heavy.','line_number':1046,'multiline':False]
['text':' now try it again','line_number':1077,'multiline':False]
['text':' Check if the target name typs is really in the TimeZoneNames','line_number':1097,'multiline':False]
['text':' Find matches in the TimeZoneNames','line_number':1107,'multiline':False]
['text':' TZGNCore object cache handling','line_number':1120,'multiline':False]
['text':' Access count - incremented every time up to SWEEP_INTERVAL,','line_number':1125,'multiline':False]
['text':' then reset to 0','line_number':1126,'multiline':False]
['text':' Interval for calling the cache sweep function - every 100 times','line_number':1129,'multiline':False]
['text':' Cache expiration in millisecond. When a cached entry is no','line_number':1132,'multiline':False]
['text':' longer referenced and exceeding this threshold since last','line_number':1133,'multiline':False]
['text':' access time, then the cache entry will be deleted by the sweep','line_number':1134,'multiline':False]
['text':' function. For now, 3 minutes.','line_number':1135,'multiline':False]
['text':'*
 * Cleanup callback func
 ','line_number':1139,'multiline':True]
['text':'*
 * Deleter for TZGNCoreRef
 ','line_number':1152,'multiline':True]
['text':'*
 * Function used for removing unreferrenced cache entries exceeding
 * the expiration time. This function must be called with in the mutex
 * block.
 ','line_number':1163,'multiline':True]
['text':' delete this entry','line_number':1176,'multiline':False]
['text':' Just decrement the reference count','line_number':1190,'multiline':False]
['text':' Create empty hashtable','line_number':1212,'multiline':False]
['text':' Check the cache, if not available, create new one and cache','line_number':1225,'multiline':False]
['text':' Update the reference count','line_number':1269,'multiline':False]
['text':' sweep','line_number':1275,'multiline':False]
['text':' End of mutex locked block','line_number':1279,'multiline':False]
['text':' Just compare if the other object also use the same','line_number':1292,'multiline':False]
['text':' ref entry','line_number':1293,'multiline':False]
['text':' Just increments the reference count','line_number':1303,'multiline':False]
