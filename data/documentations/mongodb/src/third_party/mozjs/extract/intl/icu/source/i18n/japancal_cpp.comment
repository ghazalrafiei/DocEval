['text':' Â© 2016 and later: Unicode, Inc. and others.','line_number':1,'multiline':False]
['text':' License & terms of use: http://www.unicode.org/copyright.html','line_number':2,'multiline':False]
['text':'
*******************************************************************************
* Copyright (C) 2003-2009,2012,2016 International Business Machines Corporation and
* others. All Rights Reserved.
*******************************************************************************
*
* File JAPANCAL.CPP
*
* Modification History:
*  05/16/2003    srl     copied from buddhcal.cpp
*
','line_number':3,'multiline':True]
['text':' getenv() is not available in UWP env','line_number':20,'multiline':False]
['text':' used as the default value of EXTENDED_YEAR','line_number':61,'multiline':False]
['text':' Export the following for use by test code.','line_number':65,'multiline':False]
['text':' Although start date of next Japanese era is planned ahead, a name of','line_number':67,'multiline':False]
['text':' new era might not be available. This implementation allows tester to','line_number':68,'multiline':False]
['text':' check a new era without era names by settings below (in priority order).','line_number':69,'multiline':False]
['text':' By default, such tentative era is disabled.','line_number':70,'multiline':False]
['text':' 1. Environment variable ICU_ENABLE_TENTATIVE_ERA=true or false','line_number':72,'multiline':False]
['text':' UWP doesn't allow access to getenv(), but we can call GetEnvironmentVariableW to do the same thing.','line_number':77,'multiline':False]
['text':' Initialize global Japanese era data','line_number':95,'multiline':False]
['text':' Some platforms don't like to export constants, like old Palm OS and some z/OS configurations. ','line_number':109,'multiline':True]
['text':' Call this again now that the vtable is set up properly.','line_number':118,'multiline':False]
['text':' TODO do we assume we can trust 'era'?  What if it is denormalized?','line_number':152,'multiline':False]
['text':' Find out if we are at the edge of an era','line_number':156,'multiline':False]
['text':' Yes, we're in the first year of this era.','line_number':162,'multiline':False]
['text':' month','line_number':163,'multiline':False]
['text':' return 0-based month','line_number':164,'multiline':False]
['text':' EXTENDED_YEAR in JapaneseCalendar is a Gregorian year','line_number':196,'multiline':False]
['text':' The default value of EXTENDED_YEAR is 1970 (Showa 45)','line_number':197,'multiline':False]
['text':' extended year is a gregorian year, where 1 = 1AD,  0 = 1BC, -1 = 2BC, etc','line_number':208,'multiline':False]
['text':' pin to minimum of year 1 (first year)','line_number':209,'multiline':False]
['text':' add gregorian starting year','line_number':210,'multiline':False]
['text':' Subtract one because year starts at 1','line_number':211,'multiline':False]
['text':'Calendar::timeToFields(theTime, quick, status);','line_number':219,'multiline':False]
['text':' Gregorian year','line_number':221,'multiline':False]
['text':'
Disable pivoting 
','line_number':228,'multiline':True]
['text':' WRONG','line_number':238,'multiline':False]
['text':' max known era, not gCurrentEra','line_number':253,'multiline':False]
['text':'added to avoid warning','line_number':262,'multiline':False]
['text':' Error condition, invalid limitType','line_number':271,'multiline':False]
['text':' error case... any value','line_number':283,'multiline':False]
['text':' max known era, not gCurrentEra','line_number':285,'multiline':False]
['text':' TODO: Investigate what value should be used here - revisit after 4.0.','line_number':286,'multiline':False]
['text':' 1-base','line_number':292,'multiline':False]
['text':' 1-base','line_number':296,'multiline':False]
['text':' Subtract 1, because the next era starts at Jan 1','line_number':298,'multiline':False]
