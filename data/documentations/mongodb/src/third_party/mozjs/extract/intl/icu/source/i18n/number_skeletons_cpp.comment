['text':' Â© 2018 and later: Unicode, Inc. and others.','line_number':1,'multiline':False]
['text':' License & terms of use: http://www.unicode.org/copyright.html','line_number':2,'multiline':False]
['text':' Allow implicit conversion from char16_t* to UnicodeString for this file:','line_number':8,'multiline':False]
['text':' Helpful in toString methods and elsewhere.','line_number':9,'multiline':False]
['text':' Section 1:','line_number':53,'multiline':False]
['text':' Section 2:','line_number':103,'multiline':False]
['text':' Section 3 (concise tokens):','line_number':115,'multiline':False]
['text':' Build the CharsTrie','line_number':133,'multiline':False]
['text':' TODO: Use SLOW or FAST here?','line_number':134,'multiline':False]
['text':' Copy the result into the global constant pointer','line_number':139,'multiline':False]
['text':' for auto-format line wrapping ','line_number':153,'multiline':True]
['text':' anonymous namespace','line_number':163,'multiline':False]
['text':' for objects, throw; for enums, return COUNT','line_number':253,'multiline':False]
['text':' for objects, throw; for enums, return COUNT','line_number':274,'multiline':False]
['text':' for objects, throw; for enums, return COUNT','line_number':299,'multiline':False]
['text':' for objects, throw; for enums, return COUNT','line_number':310,'multiline':False]
['text':' Initialize perror','line_number':457,'multiline':False]
['text':' Populate the UParseError with the error location','line_number':480,'multiline':False]
['text':' Add a trailing whitespace to the end of the skeleton string to make code cleaner.','line_number':503,'multiline':False]
['text':' Primary skeleton parse loop:','line_number':514,'multiline':False]
['text':' Non-separator token; consume it.','line_number':521,'multiline':False]
['text':' We are currently consuming a stem.','line_number':524,'multiline':False]
['text':' Go to the next state in the stem trie.','line_number':525,'multiline':False]
['text':' We are looking at a token or option separator.','line_number':531,'multiline':False]
['text':' If the segment is nonempty, parse it and reset the segment.','line_number':532,'multiline':False]
['text':' Otherwise, make sure it is a valid repeating separator.','line_number':533,'multiline':False]
['text':' The first separator after the start of a token. Parse it as a stem.','line_number':537,'multiline':False]
['text':' A separator after the first separator of a token. Parse it as an option.','line_number':541,'multiline':False]
['text':' Consume the segment:','line_number':550,'multiline':False]
['text':' A separator ('/' or whitespace) following an option separator ('/')','line_number':555,'multiline':False]
['text':' segment.setLength(U16_LENGTH(cp)); // for error message','line_number':556,'multiline':False]
['text':' throw new SkeletonSyntaxException("Unexpected separator character", segment);','line_number':557,'multiline':False]
['text':' Two spaces in a row; this is OK.','line_number':563,'multiline':False]
['text':' Does the current stem forbid options?','line_number':566,'multiline':False]
['text':' segment.setLength(U16_LENGTH(cp)); // for error message','line_number':568,'multiline':False]
['text':' throw new SkeletonSyntaxException("Unexpected option separator", segment);','line_number':569,'multiline':False]
['text':' Does the current stem require an option?','line_number':575,'multiline':False]
['text':' segment.setLength(U16_LENGTH(cp)); // for error message','line_number':587,'multiline':False]
['text':' throw new SkeletonSyntaxException("Stem requires an option", segment);','line_number':588,'multiline':False]
['text':' Consume the separator:','line_number':598,'multiline':False]
['text':' First check for "blueprint" stems, which start with a "signal char"','line_number':610,'multiline':False]
['text':' Now look at the stemsTrie, which is already be pointing at our stem.','line_number':632,'multiline':False]
['text':' throw new SkeletonSyntaxException("Unknown stem", segment);','line_number':636,'multiline':False]
['text':' Stems with meaning on their own, not requiring an option:','line_number':644,'multiline':False]
['text':' allows for scientific options','line_number':656,'multiline':False]
['text':' allows for "precision-integer/@##"','line_number':683,'multiline':False]
['text':' Stems requiring an option:','line_number':747,'multiline':False]
['text':'/// Required options: /////','line_number':796,'multiline':False]
['text':'/// Non-required options: /////','line_number':830,'multiline':False]
['text':' Scientific options','line_number':832,'multiline':False]
['text':' Frac-sig option','line_number':852,'multiline':False]
['text':' If the fracSig option was not found, try normal precision options.','line_number':861,'multiline':False]
['text':' Trailing zeros option','line_number':868,'multiline':False]
['text':' Unknown option','line_number':882,'multiline':False]
['text':' throw new SkeletonSyntaxException("Invalid option", segment);','line_number':883,'multiline':False]
['text':' Supported options','line_number':891,'multiline':False]
['text':' Unsupported options','line_number':941,'multiline':False]
['text':' Remove the trailing space','line_number':959,'multiline':False]
['text':' Use the public APIs to enforce bounds checking','line_number':983,'multiline':False]
['text':' Get the sign display type out of the CharsTrie data structure.','line_number':996,'multiline':False]
['text':' Unlike ICU4J, have to check length manually because ICU4C CurrencyUnit does not check it for us','line_number':1014,'multiline':False]
['text':' Not 3 ascii chars','line_number':1023,'multiline':False]
['text':' throw new SkeletonSyntaxException("Invalid currency", segment);','line_number':1024,'multiline':False]
['text':' Slicing is OK','line_number':1028,'multiline':False]
['text':' NOLINT','line_number':1029,'multiline':False]
['text':' NOTE: The category (type) of the unit is guaranteed to be a valid subtag (alphanumeric)','line_number':1042,'multiline':False]
['text':' http://unicode.org/reports/tr35/#Validity_Data','line_number':1043,'multiline':False]
['text':' throw new SkeletonSyntaxException("Invalid measure unit option", segment);','line_number':1049,'multiline':False]
['text':' Need to do char <-> UChar conversion...','line_number':1054,'multiline':False]
['text':' Note: the largest type as of this writing (Aug 2020) is "volume", which has 33 units.','line_number':1060,'multiline':False]
['text':' More than 30 units in this type?','line_number':1066,'multiline':False]
['text':' throw new SkeletonSyntaxException("Unknown measure unit", segment);','line_number':1078,'multiline':False]
['text':' A little bit of a hack: save the current unit (numerator), call the main measure unit','line_number':1084,'multiline':False]
['text':' parsing code, put back the numerator unit, and put the new unit into per-unit.','line_number':1085,'multiline':False]
['text':' Need to do char <-> UChar conversion...','line_number':1095,'multiline':False]
['text':' throw new SkeletonSyntaxException("Invalid core unit identifier", segment, e);','line_number':1103,'multiline':False]
['text':' Need to do char <-> UChar conversion...','line_number':1111,'multiline':False]
['text':' We do not do any validation of the usage string: it depends on the','line_number':1116,'multiline':False]
['text':' unitPreferenceData in the units resources.','line_number':1117,'multiline':False]
['text':' throw new SkeletonSyntaxException("Invalid fraction stem", segment);','line_number':1151,'multiline':False]
['text':' Use the public APIs to enforce bounds checking','line_number':1155,'multiline':False]
['text':' throw new SkeletonSyntaxException("Invalid significant digits stem", segment);','line_number':1213,'multiline':False]
['text':' Use the public APIs to enforce bounds checking','line_number':1217,'multiline':False]
['text':' NOTE: Other sign displays are not included because they aren't useful in this context','line_number':1261,'multiline':False]
['text':' throw new SkeletonSyntaxException("Invalid scientific stem", segment);','line_number':1282,'multiline':False]
['text':' throw new SkeletonSyntaxException("Invalid integer stem", segment);','line_number':1297,'multiline':False]
['text':' @+, @@+, @@@+','line_number':1322,'multiline':False]
['text':' @#, @##, @###','line_number':1326,'multiline':False]
['text':' @@#, @@##, @@@#','line_number':1327,'multiline':False]
['text':' @, @@, @@@','line_number':1338,'multiline':False]
['text':' The wildcard character is not allowed with the priority annotation','line_number':1344,'multiline':False]
['text':' Invalid digits option for fraction rounder','line_number':1358,'multiline':False]
['text':' withMinDigits','line_number':1363,'multiline':False]
['text':' withMaxDigits','line_number':1368,'multiline':False]
['text':' Digits options with both min and max sig require the priority option','line_number':1371,'multiline':False]
['text':' Utilize DecimalQuantity/double_conversion to format this for us.','line_number':1396,'multiline':False]
['text':' We might need to append extra trailing zeros for min fraction...','line_number':1402,'multiline':False]
['text':' throw new SkeletonSyntaxException("Invalid integer width stem", segment);','line_number':1439,'multiline':False]
['text':' Use the public APIs to enforce bounds checking','line_number':1443,'multiline':False]
['text':' Need to do char <-> UChar conversion...','line_number':1463,'multiline':False]
['text':' This is a skeleton syntax error; don't bubble up the low-level NumberingSystem error','line_number':1470,'multiline':False]
['text':' throw new SkeletonSyntaxException("Unknown numbering system", segment);','line_number':1471,'multiline':False]
['text':' Need to do char <-> UChar conversion...','line_number':1480,'multiline':False]
['text':' Need to do char <-> UChar conversion...','line_number':1486,'multiline':False]
['text':' This is a skeleton syntax error; don't let the low-level decnum error bubble up','line_number':1495,'multiline':False]
['text':' NOTE: The constructor will optimize the decnum for us if possible.','line_number':1500,'multiline':False]
['text':' Utilize DecimalQuantity/double_conversion to format this for us.','line_number':1506,'multiline':False]
['text':' Compact notation generated from custom data (not supported in skeleton)','line_number':1530,'multiline':False]
['text':' The other compact notations are literals','line_number':1531,'multiline':False]
['text':' Default value is not shown in normalized form','line_number':1555,'multiline':False]
['text':' Default value is not shown in normalized form','line_number':1579,'multiline':False]
['text':' status ','line_number':1594,'multiline':True]
['text':' Bogus or Error','line_number':1640,'multiline':False]
['text':' NOTE: Always return true for rounding because the default value depends on other options.','line_number':1648,'multiline':False]
['text':' Default','line_number':1654,'multiline':False]
['text':' No value','line_number':1662,'multiline':False]
['text':' Default value','line_number':1667,'multiline':False]
['text':' Error or Default','line_number':1677,'multiline':False]
['text':' No custom symbols','line_number':1703,'multiline':False]
['text':' Default or Bogus','line_number':1710,'multiline':False]
['text':' Default or Bogus','line_number':1718,'multiline':False]
['text':' Default or Bogus','line_number':1726,'multiline':False]
['text':' Default or Bogus','line_number':1734,'multiline':False]
['text':' Definitions of public API methods (put here for dependency disentanglement)','line_number':1746,'multiline':False]
['text':' Ignore MSVC warning 4661. This is generated for NumberFormatterSettings<>::toSkeleton() as this method','line_number':1749,'multiline':False]
['text':' is defined elsewhere (in number_skeletons.cpp). The compiler is warning that the explicit template instantiation','line_number':1750,'multiline':False]
['text':' inside this single translation unit (CPP file) is incomplete, and thus it isn't sure if the template class is','line_number':1751,'multiline':False]
['text':' fully defined. However, since each translation unit explicitly instantiates all the necessary template classes,','line_number':1752,'multiline':False]
['text':' they will all be passed to the linker, and the linker will still find and export all the class members.','line_number':1753,'multiline':False]
['text':' Declare all classes that implement NumberFormatterSettings','line_number':1769,'multiline':False]
['text':' See https://stackoverflow.com/a/495056/1407170','line_number':1770,'multiline':False]
['text':' Warning 4661.','line_number':1787,'multiline':False]
['text':' #if !UCONFIG_NO_FORMATTING ','line_number':1791,'multiline':True]
