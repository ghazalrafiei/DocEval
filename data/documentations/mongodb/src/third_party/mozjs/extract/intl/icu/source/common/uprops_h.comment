['text':' Â© 2016 and later: Unicode, Inc. and others.','line_number':1,'multiline':False]
['text':' License & terms of use: http://www.unicode.org/copyright.html','line_number':2,'multiline':False]
['text':'
*******************************************************************************
*
*   Copyright (C) 2002-2016, International Business Machines
*   Corporation and others.  All Rights Reserved.
*
*******************************************************************************
*   file name:  uprops.h
*   encoding:   UTF-8
*   tab size:   8 (not used)
*   indentation:4
*
*   created on: 2002feb24
*   created by: Markus W. Scherer
*
*   Constants for mostly non-core Unicode character properties
*   stored in uprops.icu.
','line_number':3,'multiline':True]
['text':' indexes[] entries ','line_number':30,'multiline':True]
['text':' size of the data file (number of 32-bit units after the header) ','line_number':45,'multiline':True]
['text':' maximum values for code values in vector word 0 ','line_number':48,'multiline':True]
['text':' maximum values for code values in vector word 2 ','line_number':50,'multiline':True]
['text':' definitions for the main properties words ','line_number':56,'multiline':True]
['text':' general category shift==0                                0 (5 bits) ','line_number':58,'multiline':True]
['text':' reserved                                                 5 (1 bit) ','line_number':59,'multiline':True]
['text':'  6 (10 bits) ','line_number':60,'multiline':True]
['text':' constants for the storage form of numeric types and values ','line_number':68,'multiline':True]
['text':'* No numeric value. ','line_number':70,'multiline':True]
['text':'* Decimal digits: nv=0..9 ','line_number':72,'multiline':True]
['text':'* Other digits: nv=0..9 ','line_number':74,'multiline':True]
['text':'* Small integers: nv=0..154 ','line_number':76,'multiline':True]
['text':'* Fractions: ((ntv>>4)-12) / ((ntv&0xf)+1) = -1..17 / 1..16 ','line_number':78,'multiline':True]
['text':'*
     * Large integers:
     * ((ntv>>5)-14) * 10^((ntv&0x1f)+2) = (1..9)*(10^2..10^33)
     * (only one significant decimal digit)
     ','line_number':80,'multiline':True]
['text':'*
     * Sexagesimal numbers:
     * ((ntv>>2)-0xbf) * 60^((ntv&3)+1) = (1..9)*(60^1..60^4)
     ','line_number':86,'multiline':True]
['text':'*
     * Fraction-20 values:
     * frac20 = ntv-0x324 = 0..0x17 -> 1|3|5|7 / 20|40|80|160|320|640
     * numerator: num = 2*(frac20&3)+1
     * denominator: den = 20<<(frac20>>2)
     ','line_number':91,'multiline':True]
['text':' 0x300+9*4=0x324','line_number':97,'multiline':False]
['text':'*
     * Fraction-32 values:
     * frac32 = ntv-0x34c = 0..15 -> 1|3|5|7 / 32|64|128|256
     * numerator: num = 2*(frac32&3)+1
     * denominator: den = 32<<(frac32>>2)
     ','line_number':98,'multiline':True]
['text':' 0x324+6*4=0x34c','line_number':104,'multiline':False]
['text':'* No numeric value (yet). ','line_number':105,'multiline':True]
['text':' 0x34c+4*4=0x35c','line_number':106,'multiline':False]
['text':' number of properties vector words ','line_number':117,'multiline':True]
['text':'
 * Properties in vector word 0
 * Bits
 * 31..24   DerivedAge version major/minor one nibble each
 * 23..22   3..1: Bits 21..20 & 7..0 = Script_Extensions index
 *             3: Script value from Script_Extensions
 *             2: Script=Inherited
 *             1: Script=Common
 *             0: Script=bits 21..20 & 7..0
 * 21..20   Bits 9..8 of the UScriptCode, or index to Script_Extensions
 * 19..17   East Asian Width
 * 16.. 8   UBlockCode
 *  7.. 0   UScriptCode, or index to Script_Extensions
 ','line_number':120,'multiline':True]
['text':' derived age: one nibble each for major and minor version numbers ','line_number':135,'multiline':True]
['text':' Script_Extensions: mask includes Script ','line_number':139,'multiline':True]
['text':' The UScriptCode or Script_Extensions index is split across two bit fields.','line_number':143,'multiline':False]
['text':' (Starting with Unicode 13/ICU 66/2019 due to more varied Script_Extensions.)','line_number':144,'multiline':False]
['text':' Shift the high bits right by 12 to assemble the full value.','line_number':145,'multiline':False]
['text':' UPROPS_SCRIPT_X_WITH_COMMON must be the lowest value that involves Script_Extensions. ','line_number':158,'multiline':True]
['text':' namespace','line_number':173,'multiline':False]
['text':' __cplusplus','line_number':175,'multiline':False]
['text':'
 * Properties in vector word 1
 * Each bit encodes one binary property.
 * The following constants represent the bit number, use 1<<UPROPS_XYZ.
 * UPROPS_BINARY_1_TOP<=32!
 *
 * Keep this list of property enums in sync with
 * propListNames[] in icu/source/tools/genprops/props2.c!
 *
 * ICU 2.6/uprops format version 3.2 stores full properties instead of "Other_".
 ','line_number':177,'multiline':True]
['text':' ICU 2.6, uprops format version 3.2 ','line_number':213,'multiline':True]
['text':' new in ICU 3.0 and Unicode 4.0.1 ','line_number':216,'multiline':True]
['text':' new in ICU 3.4 and Unicode 4.1 ','line_number':218,'multiline':True]
['text':' new in ICU 60 and Unicode 10','line_number':220,'multiline':False]
['text':' ==32 - full! ','line_number':221,'multiline':True]
['text':'
 * Properties in vector word 2
 * Bits
 * 31..26   http://www.unicode.org/reports/tr51/#Emoji_Properties
 * 25..20   Line Break
 * 19..15   Sentence Break
 * 14..10   Word Break
 *  9.. 5   Grapheme Cluster Break
 *  4.. 0   Decomposition Type
 ','line_number':224,'multiline':True]
['text':'*
 * Gets the main properties value for a code point.
 * Implemented in uchar.c for uprops.cpp.
 ','line_number':257,'multiline':True]
['text':'*
 * Get a properties vector word for a code point.
 * Implemented in uchar.c for uprops.cpp.
 * @return 0 if no data or illegal argument
 ','line_number':264,'multiline':True]
['text':'*
 * Get the the maximum values for some enum/int properties.
 * Use the same column numbers as for u_getUnicodeProperties().
 * The returned value will contain maximum values stored in the same bit fields
 * as where the enum values are stored in the u_getUnicodeProperties()
 * return values for the same columns.
 *
 * Valid columns are those for properties words that contain enumerated values.
 * (ICU 2.6: columns 0 and 2)
 * For other column numbers, this function will return 0.
 *
 * @internal
 ','line_number':272,'multiline':True]
['text':'*
 * Checks if c is alphabetic, or a decimal digit; implements UCHAR_POSIX_ALNUM.
 * @internal
 ','line_number':288,'multiline':True]
['text':'*
 * Checks if c is in
 * [^\p{space}\p{gc=Control}\p{gc=Surrogate}\p{gc=Unassigned}]
 * with space=\p{Whitespace} and Control=Cc.
 * Implements UCHAR_POSIX_GRAPH.
 * @internal
 ','line_number':295,'multiline':True]
['text':'*
 * Checks if c is in \p{graph}\p{blank} - \p{cntrl}.
 * Implements UCHAR_POSIX_PRINT.
 * @internal
 ','line_number':305,'multiline':True]
['text':'* Some code points. @internal ','line_number':313,'multiline':True]
['text':'*
 * Get the maximum length of a (regular/1.0/extended) character name.
 * @return 0 if no character names available.
 ','line_number':330,'multiline':True]
['text':'*
 * Fills set with characters that are used in Unicode character names.
 * Includes all characters that are used in regular/Unicode 1.0/extended names.
 * Just empties the set if no character names are available.
 * @param sa USetAdder to receive characters.
 ','line_number':337,'multiline':True]
['text':'*
 * Constants for which data and implementation files provide which properties.
 * Used by UnicodeSet for service-specific property enumeration.
 * @internal
 ','line_number':346,'multiline':True]
['text':'* No source, not a supported property. ','line_number':352,'multiline':True]
['text':'* From uchar.c/uprops.icu main trie ','line_number':354,'multiline':True]
['text':'* From uchar.c/uprops.icu properties vectors trie ','line_number':356,'multiline':True]
['text':'* From unames.c/unames.icu ','line_number':358,'multiline':True]
['text':'* From ucase.c/ucase.icu ','line_number':360,'multiline':True]
['text':'* From ubidi_props.c/ubidi.icu ','line_number':362,'multiline':True]
['text':'* From uchar.c/uprops.icu main trie as well as properties vectors trie ','line_number':364,'multiline':True]
['text':'* From ucase.c/ucase.icu as well as unorm.cpp/unorm.icu ','line_number':366,'multiline':True]
['text':'* From normalizer2impl.cpp/nfc.nrm ','line_number':368,'multiline':True]
['text':'* From normalizer2impl.cpp/nfkc.nrm ','line_number':370,'multiline':True]
['text':'* From normalizer2impl.cpp/nfkc_cf.nrm ','line_number':372,'multiline':True]
['text':'* From normalizer2impl.cpp/nfc.nrm canonical iterator data ','line_number':374,'multiline':True]
['text':' Text layout properties.','line_number':376,'multiline':False]
['text':'* One more than the highest UPropertySource (UPROPS_SRC_) constant. ','line_number':380,'multiline':True]
['text':'*
 * @see UPropertySource
 * @internal
 ','line_number':385,'multiline':True]
['text':'*
 * Enumerate uprops.icu's main data trie and add the
 * start of each range of same properties to the set.
 * @internal
 ','line_number':392,'multiline':True]
['text':'*
 * Enumerate uprops.icu's properties vectors trie and add the
 * start of each range of same properties to the set.
 * @internal
 ','line_number':400,'multiline':True]
['text':'*
 * Return a set of characters for property enumeration.
 * For each two consecutive characters (start, limit) in the set,
 * all of the properties for start..limit-1 are all the same.
 *
 * @param sa USetAdder to receive result. Existing contents are lost.
 * @internal
 ','line_number':411,'multiline':True]
['text':'U_CFUNC void U_EXPORT2
uprv_getInclusions(const USetAdder *sa, UErrorCode *pErrorCode);
','line_number':419,'multiline':True]
['text':'*
 * Swap the ICU Unicode character names file. See uchar.c.
 * @internal
 ','line_number':423,'multiline':True]
['text':' implemented in uniset_props.cpp','line_number':444,'multiline':False]
