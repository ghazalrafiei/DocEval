['text':' Â© 2016 and later: Unicode, Inc. and others.','line_number':1,'multiline':False]
['text':' License & terms of use: http://www.unicode.org/copyright.html','line_number':2,'multiline':False]
['text':'
**********************************************************************
* Copyright (c) 2004-2016, International Business Machines
* Corporation and others.  All Rights Reserved.
**********************************************************************
* Author: Alan Liu
* Created: April 26, 2004
* Since: ICU 3.0
**********************************************************************
','line_number':3,'multiline':True]
['text':'*
 * \file
 * \brief C++ API: A unit for measuring a quantity.
 ','line_number':25,'multiline':True]
['text':' namespace number','line_number':39,'multiline':False]
['text':'*
 * Enumeration for unit complexity. There are three levels:
 *
 * - SINGLE: A single unit, optionally with a power and/or SI or binary prefix.
 *           Examples: hectare, square-kilometer, kilojoule, per-second, mebibyte.
 * - COMPOUND: A unit composed of the product of multiple single units. Examples:
 *             meter-per-second, kilowatt-hour, kilogram-meter-per-square-second.
 * - MIXED: A unit composed of the sum of multiple single units. Examples: foot+inch,
 *          hour+minute+second, degree+arcminute+arcsecond.
 *
 * The complexity determines which operations are available. For example, you cannot set the power
 * or prefix of a compound unit.
 *
 * @stable ICU 67
 ','line_number':41,'multiline':True]
['text':'*
     * A single unit, like kilojoule.
     *
     * @stable ICU 67
     ','line_number':57,'multiline':True]
['text':'*
     * A compound unit, like meter-per-second.
     *
     * @stable ICU 67
     ','line_number':64,'multiline':True]
['text':'*
     * A mixed unit, like hour+minute.
     *
     * @stable ICU 67
     ','line_number':71,'multiline':True]
['text':'*
 * Enumeration for SI and binary prefixes, e.g. "kilo-", "nano-", "mebi-".
 *
 * Enum values should be treated as opaque: use umeas_getPrefixPower() and
 * umeas_getPrefixBase() to find their corresponding values.
 *
 * @draft ICU 69
 * @see umeas_getPrefixBase
 * @see umeas_getPrefixPower
 ','line_number':81,'multiline':True]
['text':'*
     * The absence of an SI or binary prefix.
     *
     * The integer representation of this enum value is an arbitrary
     * implementation detail and should not be relied upon: use
     * umeas_getPrefixPower() to obtain meaningful values.
     *
     * @draft ICU 69
     ','line_number':92,'multiline':True]
['text':'*
     * SI prefix: yotta, 10^24.
     *
     * @draft ICU 69
     ','line_number':103,'multiline':True]
['text':'*
     * ICU use only.
     * Used to determine the set of base-10 SI prefixes.
     * @internal
     ','line_number':110,'multiline':True]
['text':'*
     * SI prefix: zetta, 10^21.
     *
     * @draft ICU 69
     ','line_number':117,'multiline':True]
['text':'*
     * SI prefix: exa, 10^18.
     *
     * @draft ICU 69
     ','line_number':124,'multiline':True]
['text':'*
     * SI prefix: peta, 10^15.
     *
     * @draft ICU 69
     ','line_number':131,'multiline':True]
['text':'*
     * SI prefix: tera, 10^12.
     *
     * @draft ICU 69
     ','line_number':138,'multiline':True]
['text':'*
     * SI prefix: giga, 10^9.
     *
     * @draft ICU 69
     ','line_number':145,'multiline':True]
['text':'*
     * SI prefix: mega, 10^6.
     *
     * @draft ICU 69
     ','line_number':152,'multiline':True]
['text':'*
     * SI prefix: kilo, 10^3.
     *
     * @draft ICU 69
     ','line_number':159,'multiline':True]
['text':'*
     * SI prefix: hecto, 10^2.
     *
     * @draft ICU 69
     ','line_number':166,'multiline':True]
['text':'*
     * SI prefix: deka, 10^1.
     *
     * @draft ICU 69
     ','line_number':173,'multiline':True]
['text':'*
     * SI prefix: deci, 10^-1.
     *
     * @draft ICU 69
     ','line_number':180,'multiline':True]
['text':'*
     * SI prefix: centi, 10^-2.
     *
     * @draft ICU 69
     ','line_number':187,'multiline':True]
['text':'*
     * SI prefix: milli, 10^-3.
     *
     * @draft ICU 69
     ','line_number':194,'multiline':True]
['text':'*
     * SI prefix: micro, 10^-6.
     *
     * @draft ICU 69
     ','line_number':201,'multiline':True]
['text':'*
     * SI prefix: nano, 10^-9.
     *
     * @draft ICU 69
     ','line_number':208,'multiline':True]
['text':'*
     * SI prefix: pico, 10^-12.
     *
     * @draft ICU 69
     ','line_number':215,'multiline':True]
['text':'*
     * SI prefix: femto, 10^-15.
     *
     * @draft ICU 69
     ','line_number':222,'multiline':True]
['text':'*
     * SI prefix: atto, 10^-18.
     *
     * @draft ICU 69
     ','line_number':229,'multiline':True]
['text':'*
     * SI prefix: zepto, 10^-21.
     *
     * @draft ICU 69
     ','line_number':236,'multiline':True]
['text':'*
     * SI prefix: yocto, 10^-24.
     *
     * @draft ICU 69
     ','line_number':243,'multiline':True]
['text':'*
     * ICU use only.
     * Used to determine the set of base-10 SI prefixes.
     * @internal
     ','line_number':251,'multiline':True]
['text':' U_HIDE_INTERNAL_API','line_number':257,'multiline':False]
['text':' Cannot conditionalize the following with #ifndef U_HIDE_INTERNAL_API,','line_number':259,'multiline':False]
['text':' used in definitions of non-internal enum values','line_number':260,'multiline':False]
['text':'*
     * ICU use only.
     * Sets the arbitrary offset of the base-1024 binary prefixes' enum values.
     * @internal
     ','line_number':261,'multiline':True]
['text':'*
     * Binary prefix: kibi, 1024^1.
     *
     * @draft ICU 69
     ','line_number':268,'multiline':True]
['text':'*
     * ICU use only.
     * Used to determine the set of base-1024 binary prefixes.
     * @internal
     ','line_number':276,'multiline':True]
['text':' U_HIDE_INTERNAL_API','line_number':282,'multiline':False]
['text':'*
     * Binary prefix: mebi, 1024^2.
     *
     * @draft ICU 69
     ','line_number':284,'multiline':True]
['text':'*
     * Binary prefix: gibi, 1024^3.
     *
     * @draft ICU 69
     ','line_number':291,'multiline':True]
['text':'*
     * Binary prefix: tebi, 1024^4.
     *
     * @draft ICU 69
     ','line_number':298,'multiline':True]
['text':'*
     * Binary prefix: pebi, 1024^5.
     *
     * @draft ICU 69
     ','line_number':305,'multiline':True]
['text':'*
     * Binary prefix: exbi, 1024^6.
     *
     * @draft ICU 69
     ','line_number':312,'multiline':True]
['text':'*
     * Binary prefix: zebi, 1024^7.
     *
     * @draft ICU 69
     ','line_number':319,'multiline':True]
['text':'*
     * Binary prefix: yobi, 1024^8.
     *
     * @draft ICU 69
     ','line_number':326,'multiline':True]
['text':'*
     * ICU use only.
     * Used to determine the set of base-1024 binary prefixes.
     * @internal
     ','line_number':334,'multiline':True]
['text':' U_HIDE_INTERNAL_API','line_number':340,'multiline':False]
['text':'*
 * Returns the base of the factor associated with the given unit prefix: the
 * base is 10 for SI prefixes (kilo, micro) and 1024 for binary prefixes (kibi,
 * mebi).
 *
 * @draft ICU 69
 ','line_number':343,'multiline':True]
['text':'*
 * Returns the exponent of the factor associated with the given unit prefix, for
 * example 3 for kilo, -6 for micro, 1 for kibi, 2 for mebi, 3 for gibi.
 *
 * @draft ICU 69
 ','line_number':352,'multiline':True]
['text':' U_HIDE_DRAFT_API','line_number':360,'multiline':False]
['text':'*
 * A unit such as length, mass, volume, currency, etc.  A unit is
 * coupled with a numeric amount to produce a Measure.
 *
 * @author Alan Liu
 * @stable ICU 3.0
 ','line_number':362,'multiline':True]
['text':'*
     * Default constructor.
     * Populates the instance with the base dimensionless unit.
     * @stable ICU 3.0
     ','line_number':372,'multiline':True]
['text':'*
     * Copy constructor.
     * @stable ICU 3.0
     ','line_number':379,'multiline':True]
['text':'*
     * Move constructor.
     * @stable ICU 67
     ','line_number':385,'multiline':True]
['text':'*
     * Construct a MeasureUnit from a CLDR Core Unit Identifier, defined in UTS
     * 35. (Core unit identifiers and mixed unit identifiers are supported, long
     * unit identifiers are not.) Validates and canonicalizes the identifier.
     *
     * <pre>
     * MeasureUnit example = MeasureUnit::forIdentifier("furlong-per-nanosecond")
     * </pre>
     *
     * @param identifier The CLDR Unit Identifier.
     * @param status Set if the identifier is invalid.
     * @stable ICU 67
     ','line_number':391,'multiline':True]
['text':'*
     * Copy assignment operator.
     * @stable ICU 3.0
     ','line_number':406,'multiline':True]
['text':'*
     * Move assignment operator.
     * @stable ICU 67
     ','line_number':412,'multiline':True]
['text':'*
     * Returns a polymorphic clone of this object.  The result will
     * have the same class as returned by getDynamicClassID().
     * @stable ICU 3.0
     ','line_number':418,'multiline':True]
['text':'*
     * Destructor
     * @stable ICU 3.0
     ','line_number':425,'multiline':True]
['text':'*
     * Equality operator.  Return true if this object is equal
     * to the given object.
     * @stable ICU 3.0
     ','line_number':431,'multiline':True]
['text':'*
     * Inequality operator.  Return true if this object is not equal
     * to the given object.
     * @stable ICU 53
     ','line_number':438,'multiline':True]
['text':'*
     * Get the type.
     *
     * If the unit does not have a type, the empty string is returned.
     *
     * @stable ICU 53
     ','line_number':447,'multiline':True]
['text':'*
     * Get the sub type.
     *
     * If the unit does not have a subtype, the empty string is returned.
     *
     * @stable ICU 53
     ','line_number':456,'multiline':True]
['text':'*
     * Get CLDR Unit Identifier for this MeasureUnit, as defined in UTS 35.
     *
     * @return The string form of this unit, owned by this MeasureUnit.
     * @stable ICU 67
     ','line_number':465,'multiline':True]
['text':'*
     * Compute the complexity of the unit. See UMeasureUnitComplexity for more information.
     *
     * @param status Set if an error occurs.
     * @return The unit complexity.
     * @stable ICU 67
     ','line_number':473,'multiline':True]
['text':'*
     * Creates a MeasureUnit which is this SINGLE unit augmented with the specified prefix.
     * For example, UMEASURE_PREFIX_KILO for "kilo", or UMEASURE_PREFIX_KIBI for "kibi".
     *
     * There is sufficient locale data to format all standard prefixes.
     *
     * NOTE: Only works on SINGLE units. If this is a COMPOUND or MIXED unit, an error will
     * occur. For more information, see UMeasureUnitComplexity.
     *
     * @param prefix The prefix, from UMeasurePrefix.
     * @param status Set if this is not a SINGLE unit or if another error occurs.
     * @return A new SINGLE unit.
     * @draft ICU 69
     ','line_number':483,'multiline':True]
['text':'*
     * Returns the current SI or binary prefix of this SINGLE unit. For example,
     * if the unit has the prefix "kilo", then UMEASURE_PREFIX_KILO is
     * returned.
     *
     * NOTE: Only works on SINGLE units. If this is a COMPOUND or MIXED unit, an error will
     * occur. For more information, see UMeasureUnitComplexity.
     *
     * @param status Set if this is not a SINGLE unit or if another error occurs.
     * @return The prefix of this SINGLE unit, from UMeasurePrefix.
     * @see umeas_getPrefixBase
     * @see umeas_getPrefixPower
     * @draft ICU 69
     ','line_number':499,'multiline':True]
['text':' U_HIDE_DRAFT_API','line_number':514,'multiline':False]
['text':'*
     * Creates a MeasureUnit which is this SINGLE unit augmented with the specified dimensionality
     * (power). For example, if dimensionality is 2, the unit will be squared.
     *
     * NOTE: Only works on SINGLE units. If this is a COMPOUND or MIXED unit, an error will
     * occur. For more information, see UMeasureUnitComplexity.
     *
     * For the base dimensionless unit, withDimensionality does nothing.
     *
     * @param dimensionality The dimensionality (power).
     * @param status Set if this is not a SINGLE unit or if another error occurs.
     * @return A new SINGLE unit.
     * @stable ICU 67
     ','line_number':516,'multiline':True]
['text':'*
     * Gets the dimensionality (power) of this MeasureUnit. For example, if the unit is square,
     * then 2 is returned.
     *
     * NOTE: Only works on SINGLE units. If this is a COMPOUND or MIXED unit, an error will
     * occur. For more information, see UMeasureUnitComplexity.
     *
     * For the base dimensionless unit, getDimensionality returns 0.
     *
     * @param status Set if this is not a SINGLE unit or if another error occurs.
     * @return The dimensionality (power) of this simple unit.
     * @stable ICU 67
     ','line_number':532,'multiline':True]
['text':'*
     * Gets the reciprocal of this MeasureUnit, with the numerator and denominator flipped.
     *
     * For example, if the receiver is "meter-per-second", the unit "second-per-meter" is returned.
     *
     * NOTE: Only works on SINGLE and COMPOUND units. If this is a MIXED unit, an error will
     * occur. For more information, see UMeasureUnitComplexity.
     *
     * @param status Set if this is a MIXED unit or if another error occurs.
     * @return The reciprocal of the target unit.
     * @stable ICU 67
     ','line_number':547,'multiline':True]
['text':'*
     * Gets the product of this unit with another unit. This is a way to build units from
     * constituent parts.
     *
     * The numerator and denominator are preserved through this operation.
     *
     * For example, if the receiver is "kilowatt" and the argument is "hour-per-day", then the
     * unit "kilowatt-hour-per-day" is returned.
     *
     * NOTE: Only works on SINGLE and COMPOUND units. If either unit (receiver and argument) is a
     * MIXED unit, an error will occur. For more information, see UMeasureUnitComplexity.
     *
     * @param other The MeasureUnit to multiply with the target.
     * @param status Set if this or other is a MIXED unit or if another error occurs.
     * @return The product of the target unit with the provided unit.
     * @stable ICU 67
     ','line_number':561,'multiline':True]
['text':'*
     * Gets the list of SINGLE units contained within a MIXED or COMPOUND unit.
     *
     * Examples:
     * - Given "meter-kilogram-per-second", three units will be returned: "meter",
     *   "kilogram", and "per-second".
     * - Given "hour+minute+second", three units will be returned: "hour", "minute",
     *   and "second".
     *
     * If this is a SINGLE unit, an array of length 1 will be returned.
     *
     * @param status Set if an error occurs.
     * @return A pair with the list of units as a LocalArray and the number of units in the list.
     * @draft ICU 68
     ','line_number':581,'multiline':True]
['text':' U_HIDE_DRAFT_API','line_number':597,'multiline':False]
['text':'*
     * getAvailable gets all of the available units.
     * If there are too many units to fit into destCapacity then the
     * error code is set to U_BUFFER_OVERFLOW_ERROR.
     *
     * @param destArray destination buffer.
     * @param destCapacity number of MeasureUnit instances available at dest.
     * @param errorCode ICU error code.
     * @return number of available units.
     * @stable ICU 53
     ','line_number':599,'multiline':True]
['text':'*
     * getAvailable gets all of the available units for a specific type.
     * If there are too many units to fit into destCapacity then the
     * error code is set to U_BUFFER_OVERFLOW_ERROR.
     *
     * @param type the type
     * @param destArray destination buffer.
     * @param destCapacity number of MeasureUnit instances available at dest.
     * @param errorCode ICU error code.
     * @return number of available units for type.
     * @stable ICU 53
     ','line_number':615,'multiline':True]
['text':'*
     * getAvailableTypes gets all of the available types. Caller owns the
     * returned StringEnumeration and must delete it when finished using it.
     *
     * @param errorCode ICU error code.
     * @return the types.
     * @stable ICU 53
     ','line_number':633,'multiline':True]
['text':'*
     * Return the class ID for this class. This is useful only for comparing to
     * a return value from getDynamicClassID(). For example:
     * <pre>
     * .   Base* polymorphic_pointer = createPolymorphicObject();
     * .   if (polymorphic_pointer->getDynamicClassID() ==
     * .       Derived::getStaticClassID()) ...
     * </pre>
     * @return          The class ID for all objects of this class.
     * @stable ICU 53
     ','line_number':643,'multiline':True]
['text':'*
     * Returns a unique class ID POLYMORPHICALLY. Pure virtual override. This
     * method is to implement a simple version of RTTI, since not all C++
     * compilers support genuine RTTI. Polymorphic operator==() and clone()
     * methods call this method.
     *
     * @return          The class ID for this object. All objects of a
     *                  given class have the same class ID.  Objects of
     *                  other classes have different class IDs.
     * @stable ICU 53
     ','line_number':656,'multiline':True]
['text':'*
     * ICU use only.
     * Returns associated array index for this measure unit.
     * @internal
     ','line_number':670,'multiline':True]
['text':' U_HIDE_INTERNAL_API ','line_number':676,'multiline':True]
['text':' All code between the "Start generated createXXX methods" comment and','line_number':678,'multiline':False]
['text':' the "End generated createXXX methods" comment is auto generated code','line_number':679,'multiline':False]
['text':' and must not be edited manually. For instructions on how to correctly','line_number':680,'multiline':False]
['text':' update this code, refer to:','line_number':681,'multiline':False]
['text':' docs/processes/release/tasks/updating-measure-unit.md','line_number':682,'multiline':False]
['text':'','line_number':683,'multiline':False]
['text':' Start generated createXXX methods','line_number':684,'multiline':False]
['text':'*
     * Returns by pointer, unit of acceleration: g-force.
     * Caller owns returned value and must free it.
     * Also see {@link #getGForce()}.
     * @param status ICU error code.
     * @stable ICU 53
     ','line_number':686,'multiline':True]
['text':'*
     * Returns by value, unit of acceleration: g-force.
     * Also see {@link #createGForce()}.
     * @stable ICU 64
     ','line_number':695,'multiline':True]
['text':'*
     * Returns by pointer, unit of acceleration: meter-per-square-second.
     * Caller owns returned value and must free it.
     * Also see {@link #getMeterPerSecondSquared()}.
     * @param status ICU error code.
     * @stable ICU 54
     ','line_number':702,'multiline':True]
['text':'*
     * Returns by value, unit of acceleration: meter-per-square-second.
     * Also see {@link #createMeterPerSecondSquared()}.
     * @stable ICU 64
     ','line_number':711,'multiline':True]
['text':'*
     * Returns by pointer, unit of angle: arc-minute.
     * Caller owns returned value and must free it.
     * Also see {@link #getArcMinute()}.
     * @param status ICU error code.
     * @stable ICU 53
     ','line_number':718,'multiline':True]
['text':'*
     * Returns by value, unit of angle: arc-minute.
     * Also see {@link #createArcMinute()}.
     * @stable ICU 64
     ','line_number':727,'multiline':True]
['text':'*
     * Returns by pointer, unit of angle: arc-second.
     * Caller owns returned value and must free it.
     * Also see {@link #getArcSecond()}.
     * @param status ICU error code.
     * @stable ICU 53
     ','line_number':734,'multiline':True]
['text':'*
     * Returns by value, unit of angle: arc-second.
     * Also see {@link #createArcSecond()}.
     * @stable ICU 64
     ','line_number':743,'multiline':True]
['text':'*
     * Returns by pointer, unit of angle: degree.
     * Caller owns returned value and must free it.
     * Also see {@link #getDegree()}.
     * @param status ICU error code.
     * @stable ICU 53
     ','line_number':750,'multiline':True]
['text':'*
     * Returns by value, unit of angle: degree.
     * Also see {@link #createDegree()}.
     * @stable ICU 64
     ','line_number':759,'multiline':True]
['text':'*
     * Returns by pointer, unit of angle: radian.
     * Caller owns returned value and must free it.
     * Also see {@link #getRadian()}.
     * @param status ICU error code.
     * @stable ICU 54
     ','line_number':766,'multiline':True]
['text':'*
     * Returns by value, unit of angle: radian.
     * Also see {@link #createRadian()}.
     * @stable ICU 64
     ','line_number':775,'multiline':True]
['text':'*
     * Returns by pointer, unit of angle: revolution.
     * Caller owns returned value and must free it.
     * Also see {@link #getRevolutionAngle()}.
     * @param status ICU error code.
     * @stable ICU 56
     ','line_number':782,'multiline':True]
['text':'*
     * Returns by value, unit of angle: revolution.
     * Also see {@link #createRevolutionAngle()}.
     * @stable ICU 64
     ','line_number':791,'multiline':True]
['text':'*
     * Returns by pointer, unit of area: acre.
     * Caller owns returned value and must free it.
     * Also see {@link #getAcre()}.
     * @param status ICU error code.
     * @stable ICU 53
     ','line_number':798,'multiline':True]
['text':'*
     * Returns by value, unit of area: acre.
     * Also see {@link #createAcre()}.
     * @stable ICU 64
     ','line_number':807,'multiline':True]
['text':'*
     * Returns by pointer, unit of area: dunam.
     * Caller owns returned value and must free it.
     * Also see {@link #getDunam()}.
     * @param status ICU error code.
     * @stable ICU 64
     ','line_number':814,'multiline':True]
['text':'*
     * Returns by value, unit of area: dunam.
     * Also see {@link #createDunam()}.
     * @stable ICU 64
     ','line_number':823,'multiline':True]
['text':'*
     * Returns by pointer, unit of area: hectare.
     * Caller owns returned value and must free it.
     * Also see {@link #getHectare()}.
     * @param status ICU error code.
     * @stable ICU 53
     ','line_number':830,'multiline':True]
['text':'*
     * Returns by value, unit of area: hectare.
     * Also see {@link #createHectare()}.
     * @stable ICU 64
     ','line_number':839,'multiline':True]
['text':'*
     * Returns by pointer, unit of area: square-centimeter.
     * Caller owns returned value and must free it.
     * Also see {@link #getSquareCentimeter()}.
     * @param status ICU error code.
     * @stable ICU 54
     ','line_number':846,'multiline':True]
['text':'*
     * Returns by value, unit of area: square-centimeter.
     * Also see {@link #createSquareCentimeter()}.
     * @stable ICU 64
     ','line_number':855,'multiline':True]
['text':'*
     * Returns by pointer, unit of area: square-foot.
     * Caller owns returned value and must free it.
     * Also see {@link #getSquareFoot()}.
     * @param status ICU error code.
     * @stable ICU 53
     ','line_number':862,'multiline':True]
['text':'*
     * Returns by value, unit of area: square-foot.
     * Also see {@link #createSquareFoot()}.
     * @stable ICU 64
     ','line_number':871,'multiline':True]
['text':'*
     * Returns by pointer, unit of area: square-inch.
     * Caller owns returned value and must free it.
     * Also see {@link #getSquareInch()}.
     * @param status ICU error code.
     * @stable ICU 54
     ','line_number':878,'multiline':True]
['text':'*
     * Returns by value, unit of area: square-inch.
     * Also see {@link #createSquareInch()}.
     * @stable ICU 64
     ','line_number':887,'multiline':True]
['text':'*
     * Returns by pointer, unit of area: square-kilometer.
     * Caller owns returned value and must free it.
     * Also see {@link #getSquareKilometer()}.
     * @param status ICU error code.
     * @stable ICU 53
     ','line_number':894,'multiline':True]
['text':'*
     * Returns by value, unit of area: square-kilometer.
     * Also see {@link #createSquareKilometer()}.
     * @stable ICU 64
     ','line_number':903,'multiline':True]
['text':'*
     * Returns by pointer, unit of area: square-meter.
     * Caller owns returned value and must free it.
     * Also see {@link #getSquareMeter()}.
     * @param status ICU error code.
     * @stable ICU 53
     ','line_number':910,'multiline':True]
['text':'*
     * Returns by value, unit of area: square-meter.
     * Also see {@link #createSquareMeter()}.
     * @stable ICU 64
     ','line_number':919,'multiline':True]
['text':'*
     * Returns by pointer, unit of area: square-mile.
     * Caller owns returned value and must free it.
     * Also see {@link #getSquareMile()}.
     * @param status ICU error code.
     * @stable ICU 53
     ','line_number':926,'multiline':True]
['text':'*
     * Returns by value, unit of area: square-mile.
     * Also see {@link #createSquareMile()}.
     * @stable ICU 64
     ','line_number':935,'multiline':True]
['text':'*
     * Returns by pointer, unit of area: square-yard.
     * Caller owns returned value and must free it.
     * Also see {@link #getSquareYard()}.
     * @param status ICU error code.
     * @stable ICU 54
     ','line_number':942,'multiline':True]
['text':'*
     * Returns by value, unit of area: square-yard.
     * Also see {@link #createSquareYard()}.
     * @stable ICU 64
     ','line_number':951,'multiline':True]
['text':'*
     * Returns by pointer, unit of concentr: karat.
     * Caller owns returned value and must free it.
     * Also see {@link #getKarat()}.
     * @param status ICU error code.
     * @stable ICU 54
     ','line_number':958,'multiline':True]
['text':'*
     * Returns by value, unit of concentr: karat.
     * Also see {@link #createKarat()}.
     * @stable ICU 64
     ','line_number':967,'multiline':True]
['text':'*
     * Returns by pointer, unit of concentr: milligram-ofglucose-per-deciliter.
     * Caller owns returned value and must free it.
     * Also see {@link #getMilligramOfglucosePerDeciliter()}.
     * @param status ICU error code.
     * @draft ICU 69
     ','line_number':975,'multiline':True]
['text':'*
     * Returns by value, unit of concentr: milligram-ofglucose-per-deciliter.
     * Also see {@link #createMilligramOfglucosePerDeciliter()}.
     * @draft ICU 69
     ','line_number':984,'multiline':True]
['text':' U_HIDE_DRAFT_API ','line_number':990,'multiline':True]
['text':'*
     * Returns by pointer, unit of concentr: milligram-per-deciliter.
     * Caller owns returned value and must free it.
     * Also see {@link #getMilligramPerDeciliter()}.
     * @param status ICU error code.
     * @stable ICU 57
     ','line_number':992,'multiline':True]
['text':'*
     * Returns by value, unit of concentr: milligram-per-deciliter.
     * Also see {@link #createMilligramPerDeciliter()}.
     * @stable ICU 64
     ','line_number':1001,'multiline':True]
['text':'*
     * Returns by pointer, unit of concentr: millimole-per-liter.
     * Caller owns returned value and must free it.
     * Also see {@link #getMillimolePerLiter()}.
     * @param status ICU error code.
     * @stable ICU 57
     ','line_number':1008,'multiline':True]
['text':'*
     * Returns by value, unit of concentr: millimole-per-liter.
     * Also see {@link #createMillimolePerLiter()}.
     * @stable ICU 64
     ','line_number':1017,'multiline':True]
['text':'*
     * Returns by pointer, unit of concentr: mole.
     * Caller owns returned value and must free it.
     * Also see {@link #getMole()}.
     * @param status ICU error code.
     * @stable ICU 64
     ','line_number':1024,'multiline':True]
['text':'*
     * Returns by value, unit of concentr: mole.
     * Also see {@link #createMole()}.
     * @stable ICU 64
     ','line_number':1033,'multiline':True]
['text':'*
     * Returns by pointer, unit of concentr: percent.
     * Caller owns returned value and must free it.
     * Also see {@link #getPercent()}.
     * @param status ICU error code.
     * @stable ICU 63
     ','line_number':1040,'multiline':True]
['text':'*
     * Returns by value, unit of concentr: percent.
     * Also see {@link #createPercent()}.
     * @stable ICU 64
     ','line_number':1049,'multiline':True]
['text':'*
     * Returns by pointer, unit of concentr: permille.
     * Caller owns returned value and must free it.
     * Also see {@link #getPermille()}.
     * @param status ICU error code.
     * @stable ICU 63
     ','line_number':1056,'multiline':True]
['text':'*
     * Returns by value, unit of concentr: permille.
     * Also see {@link #createPermille()}.
     * @stable ICU 64
     ','line_number':1065,'multiline':True]
['text':'*
     * Returns by pointer, unit of concentr: permillion.
     * Caller owns returned value and must free it.
     * Also see {@link #getPartPerMillion()}.
     * @param status ICU error code.
     * @stable ICU 57
     ','line_number':1072,'multiline':True]
['text':'*
     * Returns by value, unit of concentr: permillion.
     * Also see {@link #createPartPerMillion()}.
     * @stable ICU 64
     ','line_number':1081,'multiline':True]
['text':'*
     * Returns by pointer, unit of concentr: permyriad.
     * Caller owns returned value and must free it.
     * Also see {@link #getPermyriad()}.
     * @param status ICU error code.
     * @stable ICU 64
     ','line_number':1088,'multiline':True]
['text':'*
     * Returns by value, unit of concentr: permyriad.
     * Also see {@link #createPermyriad()}.
     * @stable ICU 64
     ','line_number':1097,'multiline':True]
['text':'*
     * Returns by pointer, unit of consumption: liter-per-100-kilometer.
     * Caller owns returned value and must free it.
     * Also see {@link #getLiterPer100Kilometers()}.
     * @param status ICU error code.
     * @stable ICU 56
     ','line_number':1104,'multiline':True]
['text':'*
     * Returns by value, unit of consumption: liter-per-100-kilometer.
     * Also see {@link #createLiterPer100Kilometers()}.
     * @stable ICU 64
     ','line_number':1113,'multiline':True]
['text':'*
     * Returns by pointer, unit of consumption: liter-per-kilometer.
     * Caller owns returned value and must free it.
     * Also see {@link #getLiterPerKilometer()}.
     * @param status ICU error code.
     * @stable ICU 54
     ','line_number':1120,'multiline':True]
['text':'*
     * Returns by value, unit of consumption: liter-per-kilometer.
     * Also see {@link #createLiterPerKilometer()}.
     * @stable ICU 64
     ','line_number':1129,'multiline':True]
['text':'*
     * Returns by pointer, unit of consumption: mile-per-gallon.
     * Caller owns returned value and must free it.
     * Also see {@link #getMilePerGallon()}.
     * @param status ICU error code.
     * @stable ICU 54
     ','line_number':1136,'multiline':True]
['text':'*
     * Returns by value, unit of consumption: mile-per-gallon.
     * Also see {@link #createMilePerGallon()}.
     * @stable ICU 64
     ','line_number':1145,'multiline':True]
['text':'*
     * Returns by pointer, unit of consumption: mile-per-gallon-imperial.
     * Caller owns returned value and must free it.
     * Also see {@link #getMilePerGallonImperial()}.
     * @param status ICU error code.
     * @stable ICU 57
     ','line_number':1152,'multiline':True]
['text':'*
     * Returns by value, unit of consumption: mile-per-gallon-imperial.
     * Also see {@link #createMilePerGallonImperial()}.
     * @stable ICU 64
     ','line_number':1161,'multiline':True]
['text':'*
     * Returns by pointer, unit of digital: bit.
     * Caller owns returned value and must free it.
     * Also see {@link #getBit()}.
     * @param status ICU error code.
     * @stable ICU 54
     ','line_number':1168,'multiline':True]
['text':'*
     * Returns by value, unit of digital: bit.
     * Also see {@link #createBit()}.
     * @stable ICU 64
     ','line_number':1177,'multiline':True]
['text':'*
     * Returns by pointer, unit of digital: byte.
     * Caller owns returned value and must free it.
     * Also see {@link #getByte()}.
     * @param status ICU error code.
     * @stable ICU 54
     ','line_number':1184,'multiline':True]
['text':'*
     * Returns by value, unit of digital: byte.
     * Also see {@link #createByte()}.
     * @stable ICU 64
     ','line_number':1193,'multiline':True]
['text':'*
     * Returns by pointer, unit of digital: gigabit.
     * Caller owns returned value and must free it.
     * Also see {@link #getGigabit()}.
     * @param status ICU error code.
     * @stable ICU 54
     ','line_number':1200,'multiline':True]
['text':'*
     * Returns by value, unit of digital: gigabit.
     * Also see {@link #createGigabit()}.
     * @stable ICU 64
     ','line_number':1209,'multiline':True]
['text':'*
     * Returns by pointer, unit of digital: gigabyte.
     * Caller owns returned value and must free it.
     * Also see {@link #getGigabyte()}.
     * @param status ICU error code.
     * @stable ICU 54
     ','line_number':1216,'multiline':True]
['text':'*
     * Returns by value, unit of digital: gigabyte.
     * Also see {@link #createGigabyte()}.
     * @stable ICU 64
     ','line_number':1225,'multiline':True]
['text':'*
     * Returns by pointer, unit of digital: kilobit.
     * Caller owns returned value and must free it.
     * Also see {@link #getKilobit()}.
     * @param status ICU error code.
     * @stable ICU 54
     ','line_number':1232,'multiline':True]
['text':'*
     * Returns by value, unit of digital: kilobit.
     * Also see {@link #createKilobit()}.
     * @stable ICU 64
     ','line_number':1241,'multiline':True]
['text':'*
     * Returns by pointer, unit of digital: kilobyte.
     * Caller owns returned value and must free it.
     * Also see {@link #getKilobyte()}.
     * @param status ICU error code.
     * @stable ICU 54
     ','line_number':1248,'multiline':True]
['text':'*
     * Returns by value, unit of digital: kilobyte.
     * Also see {@link #createKilobyte()}.
     * @stable ICU 64
     ','line_number':1257,'multiline':True]
['text':'*
     * Returns by pointer, unit of digital: megabit.
     * Caller owns returned value and must free it.
     * Also see {@link #getMegabit()}.
     * @param status ICU error code.
     * @stable ICU 54
     ','line_number':1264,'multiline':True]
['text':'*
     * Returns by value, unit of digital: megabit.
     * Also see {@link #createMegabit()}.
     * @stable ICU 64
     ','line_number':1273,'multiline':True]
['text':'*
     * Returns by pointer, unit of digital: megabyte.
     * Caller owns returned value and must free it.
     * Also see {@link #getMegabyte()}.
     * @param status ICU error code.
     * @stable ICU 54
     ','line_number':1280,'multiline':True]
['text':'*
     * Returns by value, unit of digital: megabyte.
     * Also see {@link #createMegabyte()}.
     * @stable ICU 64
     ','line_number':1289,'multiline':True]
['text':'*
     * Returns by pointer, unit of digital: petabyte.
     * Caller owns returned value and must free it.
     * Also see {@link #getPetabyte()}.
     * @param status ICU error code.
     * @stable ICU 63
     ','line_number':1296,'multiline':True]
['text':'*
     * Returns by value, unit of digital: petabyte.
     * Also see {@link #createPetabyte()}.
     * @stable ICU 64
     ','line_number':1305,'multiline':True]
['text':'*
     * Returns by pointer, unit of digital: terabit.
     * Caller owns returned value and must free it.
     * Also see {@link #getTerabit()}.
     * @param status ICU error code.
     * @stable ICU 54
     ','line_number':1312,'multiline':True]
['text':'*
     * Returns by value, unit of digital: terabit.
     * Also see {@link #createTerabit()}.
     * @stable ICU 64
     ','line_number':1321,'multiline':True]
['text':'*
     * Returns by pointer, unit of digital: terabyte.
     * Caller owns returned value and must free it.
     * Also see {@link #getTerabyte()}.
     * @param status ICU error code.
     * @stable ICU 54
     ','line_number':1328,'multiline':True]
['text':'*
     * Returns by value, unit of digital: terabyte.
     * Also see {@link #createTerabyte()}.
     * @stable ICU 64
     ','line_number':1337,'multiline':True]
['text':'*
     * Returns by pointer, unit of duration: century.
     * Caller owns returned value and must free it.
     * Also see {@link #getCentury()}.
     * @param status ICU error code.
     * @stable ICU 56
     ','line_number':1344,'multiline':True]
['text':'*
     * Returns by value, unit of duration: century.
     * Also see {@link #createCentury()}.
     * @stable ICU 64
     ','line_number':1353,'multiline':True]
['text':'*
     * Returns by pointer, unit of duration: day.
     * Caller owns returned value and must free it.
     * Also see {@link #getDay()}.
     * @param status ICU error code.
     * @stable ICU 53
     ','line_number':1360,'multiline':True]
['text':'*
     * Returns by value, unit of duration: day.
     * Also see {@link #createDay()}.
     * @stable ICU 64
     ','line_number':1369,'multiline':True]
['text':'*
     * Returns by pointer, unit of duration: day-person.
     * Caller owns returned value and must free it.
     * Also see {@link #getDayPerson()}.
     * @param status ICU error code.
     * @stable ICU 64
     ','line_number':1376,'multiline':True]
['text':'*
     * Returns by value, unit of duration: day-person.
     * Also see {@link #createDayPerson()}.
     * @stable ICU 64
     ','line_number':1385,'multiline':True]
['text':'*
     * Returns by pointer, unit of duration: decade.
     * Caller owns returned value and must free it.
     * Also see {@link #getDecade()}.
     * @param status ICU error code.
     * @stable ICU 65
     ','line_number':1392,'multiline':True]
['text':'*
     * Returns by value, unit of duration: decade.
     * Also see {@link #createDecade()}.
     * @stable ICU 65
     ','line_number':1401,'multiline':True]
['text':'*
     * Returns by pointer, unit of duration: hour.
     * Caller owns returned value and must free it.
     * Also see {@link #getHour()}.
     * @param status ICU error code.
     * @stable ICU 53
     ','line_number':1408,'multiline':True]
['text':'*
     * Returns by value, unit of duration: hour.
     * Also see {@link #createHour()}.
     * @stable ICU 64
     ','line_number':1417,'multiline':True]
['text':'*
     * Returns by pointer, unit of duration: microsecond.
     * Caller owns returned value and must free it.
     * Also see {@link #getMicrosecond()}.
     * @param status ICU error code.
     * @stable ICU 54
     ','line_number':1424,'multiline':True]
['text':'*
     * Returns by value, unit of duration: microsecond.
     * Also see {@link #createMicrosecond()}.
     * @stable ICU 64
     ','line_number':1433,'multiline':True]
['text':'*
     * Returns by pointer, unit of duration: millisecond.
     * Caller owns returned value and must free it.
     * Also see {@link #getMillisecond()}.
     * @param status ICU error code.
     * @stable ICU 53
     ','line_number':1440,'multiline':True]
['text':'*
     * Returns by value, unit of duration: millisecond.
     * Also see {@link #createMillisecond()}.
     * @stable ICU 64
     ','line_number':1449,'multiline':True]
['text':'*
     * Returns by pointer, unit of duration: minute.
     * Caller owns returned value and must free it.
     * Also see {@link #getMinute()}.
     * @param status ICU error code.
     * @stable ICU 53
     ','line_number':1456,'multiline':True]
['text':'*
     * Returns by value, unit of duration: minute.
     * Also see {@link #createMinute()}.
     * @stable ICU 64
     ','line_number':1465,'multiline':True]
['text':'*
     * Returns by pointer, unit of duration: month.
     * Caller owns returned value and must free it.
     * Also see {@link #getMonth()}.
     * @param status ICU error code.
     * @stable ICU 53
     ','line_number':1472,'multiline':True]
['text':'*
     * Returns by value, unit of duration: month.
     * Also see {@link #createMonth()}.
     * @stable ICU 64
     ','line_number':1481,'multiline':True]
['text':'*
     * Returns by pointer, unit of duration: month-person.
     * Caller owns returned value and must free it.
     * Also see {@link #getMonthPerson()}.
     * @param status ICU error code.
     * @stable ICU 64
     ','line_number':1488,'multiline':True]
['text':'*
     * Returns by value, unit of duration: month-person.
     * Also see {@link #createMonthPerson()}.
     * @stable ICU 64
     ','line_number':1497,'multiline':True]
['text':'*
     * Returns by pointer, unit of duration: nanosecond.
     * Caller owns returned value and must free it.
     * Also see {@link #getNanosecond()}.
     * @param status ICU error code.
     * @stable ICU 54
     ','line_number':1504,'multiline':True]
['text':'*
     * Returns by value, unit of duration: nanosecond.
     * Also see {@link #createNanosecond()}.
     * @stable ICU 64
     ','line_number':1513,'multiline':True]
['text':'*
     * Returns by pointer, unit of duration: second.
     * Caller owns returned value and must free it.
     * Also see {@link #getSecond()}.
     * @param status ICU error code.
     * @stable ICU 53
     ','line_number':1520,'multiline':True]
['text':'*
     * Returns by value, unit of duration: second.
     * Also see {@link #createSecond()}.
     * @stable ICU 64
     ','line_number':1529,'multiline':True]
['text':'*
     * Returns by pointer, unit of duration: week.
     * Caller owns returned value and must free it.
     * Also see {@link #getWeek()}.
     * @param status ICU error code.
     * @stable ICU 53
     ','line_number':1536,'multiline':True]
['text':'*
     * Returns by value, unit of duration: week.
     * Also see {@link #createWeek()}.
     * @stable ICU 64
     ','line_number':1545,'multiline':True]
['text':'*
     * Returns by pointer, unit of duration: week-person.
     * Caller owns returned value and must free it.
     * Also see {@link #getWeekPerson()}.
     * @param status ICU error code.
     * @stable ICU 64
     ','line_number':1552,'multiline':True]
['text':'*
     * Returns by value, unit of duration: week-person.
     * Also see {@link #createWeekPerson()}.
     * @stable ICU 64
     ','line_number':1561,'multiline':True]
['text':'*
     * Returns by pointer, unit of duration: year.
     * Caller owns returned value and must free it.
     * Also see {@link #getYear()}.
     * @param status ICU error code.
     * @stable ICU 53
     ','line_number':1568,'multiline':True]
['text':'*
     * Returns by value, unit of duration: year.
     * Also see {@link #createYear()}.
     * @stable ICU 64
     ','line_number':1577,'multiline':True]
['text':'*
     * Returns by pointer, unit of duration: year-person.
     * Caller owns returned value and must free it.
     * Also see {@link #getYearPerson()}.
     * @param status ICU error code.
     * @stable ICU 64
     ','line_number':1584,'multiline':True]
['text':'*
     * Returns by value, unit of duration: year-person.
     * Also see {@link #createYearPerson()}.
     * @stable ICU 64
     ','line_number':1593,'multiline':True]
['text':'*
     * Returns by pointer, unit of electric: ampere.
     * Caller owns returned value and must free it.
     * Also see {@link #getAmpere()}.
     * @param status ICU error code.
     * @stable ICU 54
     ','line_number':1600,'multiline':True]
['text':'*
     * Returns by value, unit of electric: ampere.
     * Also see {@link #createAmpere()}.
     * @stable ICU 64
     ','line_number':1609,'multiline':True]
['text':'*
     * Returns by pointer, unit of electric: milliampere.
     * Caller owns returned value and must free it.
     * Also see {@link #getMilliampere()}.
     * @param status ICU error code.
     * @stable ICU 54
     ','line_number':1616,'multiline':True]
['text':'*
     * Returns by value, unit of electric: milliampere.
     * Also see {@link #createMilliampere()}.
     * @stable ICU 64
     ','line_number':1625,'multiline':True]
['text':'*
     * Returns by pointer, unit of electric: ohm.
     * Caller owns returned value and must free it.
     * Also see {@link #getOhm()}.
     * @param status ICU error code.
     * @stable ICU 54
     ','line_number':1632,'multiline':True]
['text':'*
     * Returns by value, unit of electric: ohm.
     * Also see {@link #createOhm()}.
     * @stable ICU 64
     ','line_number':1641,'multiline':True]
['text':'*
     * Returns by pointer, unit of electric: volt.
     * Caller owns returned value and must free it.
     * Also see {@link #getVolt()}.
     * @param status ICU error code.
     * @stable ICU 54
     ','line_number':1648,'multiline':True]
['text':'*
     * Returns by value, unit of electric: volt.
     * Also see {@link #createVolt()}.
     * @stable ICU 64
     ','line_number':1657,'multiline':True]
['text':'*
     * Returns by pointer, unit of energy: british-thermal-unit.
     * Caller owns returned value and must free it.
     * Also see {@link #getBritishThermalUnit()}.
     * @param status ICU error code.
     * @stable ICU 64
     ','line_number':1664,'multiline':True]
['text':'*
     * Returns by value, unit of energy: british-thermal-unit.
     * Also see {@link #createBritishThermalUnit()}.
     * @stable ICU 64
     ','line_number':1673,'multiline':True]
['text':'*
     * Returns by pointer, unit of energy: calorie.
     * Caller owns returned value and must free it.
     * Also see {@link #getCalorie()}.
     * @param status ICU error code.
     * @stable ICU 54
     ','line_number':1680,'multiline':True]
['text':'*
     * Returns by value, unit of energy: calorie.
     * Also see {@link #createCalorie()}.
     * @stable ICU 64
     ','line_number':1689,'multiline':True]
['text':'*
     * Returns by pointer, unit of energy: electronvolt.
     * Caller owns returned value and must free it.
     * Also see {@link #getElectronvolt()}.
     * @param status ICU error code.
     * @stable ICU 64
     ','line_number':1696,'multiline':True]
['text':'*
     * Returns by value, unit of energy: electronvolt.
     * Also see {@link #createElectronvolt()}.
     * @stable ICU 64
     ','line_number':1705,'multiline':True]
['text':'*
     * Returns by pointer, unit of energy: foodcalorie.
     * Caller owns returned value and must free it.
     * Also see {@link #getFoodcalorie()}.
     * @param status ICU error code.
     * @stable ICU 54
     ','line_number':1712,'multiline':True]
['text':'*
     * Returns by value, unit of energy: foodcalorie.
     * Also see {@link #createFoodcalorie()}.
     * @stable ICU 64
     ','line_number':1721,'multiline':True]
['text':'*
     * Returns by pointer, unit of energy: joule.
     * Caller owns returned value and must free it.
     * Also see {@link #getJoule()}.
     * @param status ICU error code.
     * @stable ICU 54
     ','line_number':1728,'multiline':True]
['text':'*
     * Returns by value, unit of energy: joule.
     * Also see {@link #createJoule()}.
     * @stable ICU 64
     ','line_number':1737,'multiline':True]
['text':'*
     * Returns by pointer, unit of energy: kilocalorie.
     * Caller owns returned value and must free it.
     * Also see {@link #getKilocalorie()}.
     * @param status ICU error code.
     * @stable ICU 54
     ','line_number':1744,'multiline':True]
['text':'*
     * Returns by value, unit of energy: kilocalorie.
     * Also see {@link #createKilocalorie()}.
     * @stable ICU 64
     ','line_number':1753,'multiline':True]
['text':'*
     * Returns by pointer, unit of energy: kilojoule.
     * Caller owns returned value and must free it.
     * Also see {@link #getKilojoule()}.
     * @param status ICU error code.
     * @stable ICU 54
     ','line_number':1760,'multiline':True]
['text':'*
     * Returns by value, unit of energy: kilojoule.
     * Also see {@link #createKilojoule()}.
     * @stable ICU 64
     ','line_number':1769,'multiline':True]
['text':'*
     * Returns by pointer, unit of energy: kilowatt-hour.
     * Caller owns returned value and must free it.
     * Also see {@link #getKilowattHour()}.
     * @param status ICU error code.
     * @stable ICU 54
     ','line_number':1776,'multiline':True]
['text':'*
     * Returns by value, unit of energy: kilowatt-hour.
     * Also see {@link #createKilowattHour()}.
     * @stable ICU 64
     ','line_number':1785,'multiline':True]
['text':'*
     * Returns by pointer, unit of energy: therm-us.
     * Caller owns returned value and must free it.
     * Also see {@link #getThermUs()}.
     * @param status ICU error code.
     * @stable ICU 65
     ','line_number':1792,'multiline':True]
['text':'*
     * Returns by value, unit of energy: therm-us.
     * Also see {@link #createThermUs()}.
     * @stable ICU 65
     ','line_number':1801,'multiline':True]
['text':'*
     * Returns by pointer, unit of force: newton.
     * Caller owns returned value and must free it.
     * Also see {@link #getNewton()}.
     * @param status ICU error code.
     * @stable ICU 64
     ','line_number':1808,'multiline':True]
['text':'*
     * Returns by value, unit of force: newton.
     * Also see {@link #createNewton()}.
     * @stable ICU 64
     ','line_number':1817,'multiline':True]
['text':'*
     * Returns by pointer, unit of force: pound-force.
     * Caller owns returned value and must free it.
     * Also see {@link #getPoundForce()}.
     * @param status ICU error code.
     * @stable ICU 64
     ','line_number':1824,'multiline':True]
['text':'*
     * Returns by value, unit of force: pound-force.
     * Also see {@link #createPoundForce()}.
     * @stable ICU 64
     ','line_number':1833,'multiline':True]
['text':'*
     * Returns by pointer, unit of frequency: gigahertz.
     * Caller owns returned value and must free it.
     * Also see {@link #getGigahertz()}.
     * @param status ICU error code.
     * @stable ICU 54
     ','line_number':1840,'multiline':True]
['text':'*
     * Returns by value, unit of frequency: gigahertz.
     * Also see {@link #createGigahertz()}.
     * @stable ICU 64
     ','line_number':1849,'multiline':True]
['text':'*
     * Returns by pointer, unit of frequency: hertz.
     * Caller owns returned value and must free it.
     * Also see {@link #getHertz()}.
     * @param status ICU error code.
     * @stable ICU 54
     ','line_number':1856,'multiline':True]
['text':'*
     * Returns by value, unit of frequency: hertz.
     * Also see {@link #createHertz()}.
     * @stable ICU 64
     ','line_number':1865,'multiline':True]
['text':'*
     * Returns by pointer, unit of frequency: kilohertz.
     * Caller owns returned value and must free it.
     * Also see {@link #getKilohertz()}.
     * @param status ICU error code.
     * @stable ICU 54
     ','line_number':1872,'multiline':True]
['text':'*
     * Returns by value, unit of frequency: kilohertz.
     * Also see {@link #createKilohertz()}.
     * @stable ICU 64
     ','line_number':1881,'multiline':True]
['text':'*
     * Returns by pointer, unit of frequency: megahertz.
     * Caller owns returned value and must free it.
     * Also see {@link #getMegahertz()}.
     * @param status ICU error code.
     * @stable ICU 54
     ','line_number':1888,'multiline':True]
['text':'*
     * Returns by value, unit of frequency: megahertz.
     * Also see {@link #createMegahertz()}.
     * @stable ICU 64
     ','line_number':1897,'multiline':True]
['text':'*
     * Returns by pointer, unit of graphics: dot.
     * Caller owns returned value and must free it.
     * Also see {@link #getDot()}.
     * @param status ICU error code.
     * @draft ICU 68
     ','line_number':1905,'multiline':True]
['text':'*
     * Returns by value, unit of graphics: dot.
     * Also see {@link #createDot()}.
     * @draft ICU 68
     ','line_number':1914,'multiline':True]
['text':' U_HIDE_DRAFT_API ','line_number':1920,'multiline':True]
['text':'*
     * Returns by pointer, unit of graphics: dot-per-centimeter.
     * Caller owns returned value and must free it.
     * Also see {@link #getDotPerCentimeter()}.
     * @param status ICU error code.
     * @stable ICU 65
     ','line_number':1922,'multiline':True]
['text':'*
     * Returns by value, unit of graphics: dot-per-centimeter.
     * Also see {@link #createDotPerCentimeter()}.
     * @stable ICU 65
     ','line_number':1931,'multiline':True]
['text':'*
     * Returns by pointer, unit of graphics: dot-per-inch.
     * Caller owns returned value and must free it.
     * Also see {@link #getDotPerInch()}.
     * @param status ICU error code.
     * @stable ICU 65
     ','line_number':1938,'multiline':True]
['text':'*
     * Returns by value, unit of graphics: dot-per-inch.
     * Also see {@link #createDotPerInch()}.
     * @stable ICU 65
     ','line_number':1947,'multiline':True]
['text':'*
     * Returns by pointer, unit of graphics: em.
     * Caller owns returned value and must free it.
     * Also see {@link #getEm()}.
     * @param status ICU error code.
     * @stable ICU 65
     ','line_number':1954,'multiline':True]
['text':'*
     * Returns by value, unit of graphics: em.
     * Also see {@link #createEm()}.
     * @stable ICU 65
     ','line_number':1963,'multiline':True]
['text':'*
     * Returns by pointer, unit of graphics: megapixel.
     * Caller owns returned value and must free it.
     * Also see {@link #getMegapixel()}.
     * @param status ICU error code.
     * @stable ICU 65
     ','line_number':1970,'multiline':True]
['text':'*
     * Returns by value, unit of graphics: megapixel.
     * Also see {@link #createMegapixel()}.
     * @stable ICU 65
     ','line_number':1979,'multiline':True]
['text':'*
     * Returns by pointer, unit of graphics: pixel.
     * Caller owns returned value and must free it.
     * Also see {@link #getPixel()}.
     * @param status ICU error code.
     * @stable ICU 65
     ','line_number':1986,'multiline':True]
['text':'*
     * Returns by value, unit of graphics: pixel.
     * Also see {@link #createPixel()}.
     * @stable ICU 65
     ','line_number':1995,'multiline':True]
['text':'*
     * Returns by pointer, unit of graphics: pixel-per-centimeter.
     * Caller owns returned value and must free it.
     * Also see {@link #getPixelPerCentimeter()}.
     * @param status ICU error code.
     * @stable ICU 65
     ','line_number':2002,'multiline':True]
['text':'*
     * Returns by value, unit of graphics: pixel-per-centimeter.
     * Also see {@link #createPixelPerCentimeter()}.
     * @stable ICU 65
     ','line_number':2011,'multiline':True]
['text':'*
     * Returns by pointer, unit of graphics: pixel-per-inch.
     * Caller owns returned value and must free it.
     * Also see {@link #getPixelPerInch()}.
     * @param status ICU error code.
     * @stable ICU 65
     ','line_number':2018,'multiline':True]
['text':'*
     * Returns by value, unit of graphics: pixel-per-inch.
     * Also see {@link #createPixelPerInch()}.
     * @stable ICU 65
     ','line_number':2027,'multiline':True]
['text':'*
     * Returns by pointer, unit of length: astronomical-unit.
     * Caller owns returned value and must free it.
     * Also see {@link #getAstronomicalUnit()}.
     * @param status ICU error code.
     * @stable ICU 54
     ','line_number':2034,'multiline':True]
['text':'*
     * Returns by value, unit of length: astronomical-unit.
     * Also see {@link #createAstronomicalUnit()}.
     * @stable ICU 64
     ','line_number':2043,'multiline':True]
['text':'*
     * Returns by pointer, unit of length: centimeter.
     * Caller owns returned value and must free it.
     * Also see {@link #getCentimeter()}.
     * @param status ICU error code.
     * @stable ICU 53
     ','line_number':2050,'multiline':True]
['text':'*
     * Returns by value, unit of length: centimeter.
     * Also see {@link #createCentimeter()}.
     * @stable ICU 64
     ','line_number':2059,'multiline':True]
['text':'*
     * Returns by pointer, unit of length: decimeter.
     * Caller owns returned value and must free it.
     * Also see {@link #getDecimeter()}.
     * @param status ICU error code.
     * @stable ICU 54
     ','line_number':2066,'multiline':True]
['text':'*
     * Returns by value, unit of length: decimeter.
     * Also see {@link #createDecimeter()}.
     * @stable ICU 64
     ','line_number':2075,'multiline':True]
['text':'*
     * Returns by pointer, unit of length: earth-radius.
     * Caller owns returned value and must free it.
     * Also see {@link #getEarthRadius()}.
     * @param status ICU error code.
     * @draft ICU 68
     ','line_number':2083,'multiline':True]
['text':'*
     * Returns by value, unit of length: earth-radius.
     * Also see {@link #createEarthRadius()}.
     * @draft ICU 68
     ','line_number':2092,'multiline':True]
['text':' U_HIDE_DRAFT_API ','line_number':2098,'multiline':True]
['text':'*
     * Returns by pointer, unit of length: fathom.
     * Caller owns returned value and must free it.
     * Also see {@link #getFathom()}.
     * @param status ICU error code.
     * @stable ICU 54
     ','line_number':2100,'multiline':True]
['text':'*
     * Returns by value, unit of length: fathom.
     * Also see {@link #createFathom()}.
     * @stable ICU 64
     ','line_number':2109,'multiline':True]
['text':'*
     * Returns by pointer, unit of length: foot.
     * Caller owns returned value and must free it.
     * Also see {@link #getFoot()}.
     * @param status ICU error code.
     * @stable ICU 53
     ','line_number':2116,'multiline':True]
['text':'*
     * Returns by value, unit of length: foot.
     * Also see {@link #createFoot()}.
     * @stable ICU 64
     ','line_number':2125,'multiline':True]
['text':'*
     * Returns by pointer, unit of length: furlong.
     * Caller owns returned value and must free it.
     * Also see {@link #getFurlong()}.
     * @param status ICU error code.
     * @stable ICU 54
     ','line_number':2132,'multiline':True]
['text':'*
     * Returns by value, unit of length: furlong.
     * Also see {@link #createFurlong()}.
     * @stable ICU 64
     ','line_number':2141,'multiline':True]
['text':'*
     * Returns by pointer, unit of length: inch.
     * Caller owns returned value and must free it.
     * Also see {@link #getInch()}.
     * @param status ICU error code.
     * @stable ICU 53
     ','line_number':2148,'multiline':True]
['text':'*
     * Returns by value, unit of length: inch.
     * Also see {@link #createInch()}.
     * @stable ICU 64
     ','line_number':2157,'multiline':True]
['text':'*
     * Returns by pointer, unit of length: kilometer.
     * Caller owns returned value and must free it.
     * Also see {@link #getKilometer()}.
     * @param status ICU error code.
     * @stable ICU 53
     ','line_number':2164,'multiline':True]
['text':'*
     * Returns by value, unit of length: kilometer.
     * Also see {@link #createKilometer()}.
     * @stable ICU 64
     ','line_number':2173,'multiline':True]
['text':'*
     * Returns by pointer, unit of length: light-year.
     * Caller owns returned value and must free it.
     * Also see {@link #getLightYear()}.
     * @param status ICU error code.
     * @stable ICU 53
     ','line_number':2180,'multiline':True]
['text':'*
     * Returns by value, unit of length: light-year.
     * Also see {@link #createLightYear()}.
     * @stable ICU 64
     ','line_number':2189,'multiline':True]
['text':'*
     * Returns by pointer, unit of length: meter.
     * Caller owns returned value and must free it.
     * Also see {@link #getMeter()}.
     * @param status ICU error code.
     * @stable ICU 53
     ','line_number':2196,'multiline':True]
['text':'*
     * Returns by value, unit of length: meter.
     * Also see {@link #createMeter()}.
     * @stable ICU 64
     ','line_number':2205,'multiline':True]
['text':'*
     * Returns by pointer, unit of length: micrometer.
     * Caller owns returned value and must free it.
     * Also see {@link #getMicrometer()}.
     * @param status ICU error code.
     * @stable ICU 54
     ','line_number':2212,'multiline':True]
['text':'*
     * Returns by value, unit of length: micrometer.
     * Also see {@link #createMicrometer()}.
     * @stable ICU 64
     ','line_number':2221,'multiline':True]
['text':'*
     * Returns by pointer, unit of length: mile.
     * Caller owns returned value and must free it.
     * Also see {@link #getMile()}.
     * @param status ICU error code.
     * @stable ICU 53
     ','line_number':2228,'multiline':True]
['text':'*
     * Returns by value, unit of length: mile.
     * Also see {@link #createMile()}.
     * @stable ICU 64
     ','line_number':2237,'multiline':True]
['text':'*
     * Returns by pointer, unit of length: mile-scandinavian.
     * Caller owns returned value and must free it.
     * Also see {@link #getMileScandinavian()}.
     * @param status ICU error code.
     * @stable ICU 56
     ','line_number':2244,'multiline':True]
['text':'*
     * Returns by value, unit of length: mile-scandinavian.
     * Also see {@link #createMileScandinavian()}.
     * @stable ICU 64
     ','line_number':2253,'multiline':True]
['text':'*
     * Returns by pointer, unit of length: millimeter.
     * Caller owns returned value and must free it.
     * Also see {@link #getMillimeter()}.
     * @param status ICU error code.
     * @stable ICU 53
     ','line_number':2260,'multiline':True]
['text':'*
     * Returns by value, unit of length: millimeter.
     * Also see {@link #createMillimeter()}.
     * @stable ICU 64
     ','line_number':2269,'multiline':True]
['text':'*
     * Returns by pointer, unit of length: nanometer.
     * Caller owns returned value and must free it.
     * Also see {@link #getNanometer()}.
     * @param status ICU error code.
     * @stable ICU 54
     ','line_number':2276,'multiline':True]
['text':'*
     * Returns by value, unit of length: nanometer.
     * Also see {@link #createNanometer()}.
     * @stable ICU 64
     ','line_number':2285,'multiline':True]
['text':'*
     * Returns by pointer, unit of length: nautical-mile.
     * Caller owns returned value and must free it.
     * Also see {@link #getNauticalMile()}.
     * @param status ICU error code.
     * @stable ICU 54
     ','line_number':2292,'multiline':True]
['text':'*
     * Returns by value, unit of length: nautical-mile.
     * Also see {@link #createNauticalMile()}.
     * @stable ICU 64
     ','line_number':2301,'multiline':True]
['text':'*
     * Returns by pointer, unit of length: parsec.
     * Caller owns returned value and must free it.
     * Also see {@link #getParsec()}.
     * @param status ICU error code.
     * @stable ICU 54
     ','line_number':2308,'multiline':True]
['text':'*
     * Returns by value, unit of length: parsec.
     * Also see {@link #createParsec()}.
     * @stable ICU 64
     ','line_number':2317,'multiline':True]
['text':'*
     * Returns by pointer, unit of length: picometer.
     * Caller owns returned value and must free it.
     * Also see {@link #getPicometer()}.
     * @param status ICU error code.
     * @stable ICU 53
     ','line_number':2324,'multiline':True]
['text':'*
     * Returns by value, unit of length: picometer.
     * Also see {@link #createPicometer()}.
     * @stable ICU 64
     ','line_number':2333,'multiline':True]
['text':'*
     * Returns by pointer, unit of length: point.
     * Caller owns returned value and must free it.
     * Also see {@link #getPoint()}.
     * @param status ICU error code.
     * @stable ICU 59
     ','line_number':2340,'multiline':True]
['text':'*
     * Returns by value, unit of length: point.
     * Also see {@link #createPoint()}.
     * @stable ICU 64
     ','line_number':2349,'multiline':True]
['text':'*
     * Returns by pointer, unit of length: solar-radius.
     * Caller owns returned value and must free it.
     * Also see {@link #getSolarRadius()}.
     * @param status ICU error code.
     * @stable ICU 64
     ','line_number':2356,'multiline':True]
['text':'*
     * Returns by value, unit of length: solar-radius.
     * Also see {@link #createSolarRadius()}.
     * @stable ICU 64
     ','line_number':2365,'multiline':True]
['text':'*
     * Returns by pointer, unit of length: yard.
     * Caller owns returned value and must free it.
     * Also see {@link #getYard()}.
     * @param status ICU error code.
     * @stable ICU 53
     ','line_number':2372,'multiline':True]
['text':'*
     * Returns by value, unit of length: yard.
     * Also see {@link #createYard()}.
     * @stable ICU 64
     ','line_number':2381,'multiline':True]
['text':'*
     * Returns by pointer, unit of light: candela.
     * Caller owns returned value and must free it.
     * Also see {@link #getCandela()}.
     * @param status ICU error code.
     * @draft ICU 68
     ','line_number':2389,'multiline':True]
['text':'*
     * Returns by value, unit of light: candela.
     * Also see {@link #createCandela()}.
     * @draft ICU 68
     ','line_number':2398,'multiline':True]
['text':' U_HIDE_DRAFT_API ','line_number':2404,'multiline':True]
['text':'*
     * Returns by pointer, unit of light: lumen.
     * Caller owns returned value and must free it.
     * Also see {@link #getLumen()}.
     * @param status ICU error code.
     * @draft ICU 68
     ','line_number':2407,'multiline':True]
['text':'*
     * Returns by value, unit of light: lumen.
     * Also see {@link #createLumen()}.
     * @draft ICU 68
     ','line_number':2416,'multiline':True]
['text':' U_HIDE_DRAFT_API ','line_number':2422,'multiline':True]
['text':'*
     * Returns by pointer, unit of light: lux.
     * Caller owns returned value and must free it.
     * Also see {@link #getLux()}.
     * @param status ICU error code.
     * @stable ICU 54
     ','line_number':2424,'multiline':True]
['text':'*
     * Returns by value, unit of light: lux.
     * Also see {@link #createLux()}.
     * @stable ICU 64
     ','line_number':2433,'multiline':True]
['text':'*
     * Returns by pointer, unit of light: solar-luminosity.
     * Caller owns returned value and must free it.
     * Also see {@link #getSolarLuminosity()}.
     * @param status ICU error code.
     * @stable ICU 64
     ','line_number':2440,'multiline':True]
['text':'*
     * Returns by value, unit of light: solar-luminosity.
     * Also see {@link #createSolarLuminosity()}.
     * @stable ICU 64
     ','line_number':2449,'multiline':True]
['text':'*
     * Returns by pointer, unit of mass: carat.
     * Caller owns returned value and must free it.
     * Also see {@link #getCarat()}.
     * @param status ICU error code.
     * @stable ICU 54
     ','line_number':2456,'multiline':True]
['text':'*
     * Returns by value, unit of mass: carat.
     * Also see {@link #createCarat()}.
     * @stable ICU 64
     ','line_number':2465,'multiline':True]
['text':'*
     * Returns by pointer, unit of mass: dalton.
     * Caller owns returned value and must free it.
     * Also see {@link #getDalton()}.
     * @param status ICU error code.
     * @stable ICU 64
     ','line_number':2472,'multiline':True]
['text':'*
     * Returns by value, unit of mass: dalton.
     * Also see {@link #createDalton()}.
     * @stable ICU 64
     ','line_number':2481,'multiline':True]
['text':'*
     * Returns by pointer, unit of mass: earth-mass.
     * Caller owns returned value and must free it.
     * Also see {@link #getEarthMass()}.
     * @param status ICU error code.
     * @stable ICU 64
     ','line_number':2488,'multiline':True]
['text':'*
     * Returns by value, unit of mass: earth-mass.
     * Also see {@link #createEarthMass()}.
     * @stable ICU 64
     ','line_number':2497,'multiline':True]
['text':'*
     * Returns by pointer, unit of mass: grain.
     * Caller owns returned value and must free it.
     * Also see {@link #getGrain()}.
     * @param status ICU error code.
     * @draft ICU 68
     ','line_number':2505,'multiline':True]
['text':'*
     * Returns by value, unit of mass: grain.
     * Also see {@link #createGrain()}.
     * @draft ICU 68
     ','line_number':2514,'multiline':True]
['text':' U_HIDE_DRAFT_API ','line_number':2520,'multiline':True]
['text':'*
     * Returns by pointer, unit of mass: gram.
     * Caller owns returned value and must free it.
     * Also see {@link #getGram()}.
     * @param status ICU error code.
     * @stable ICU 53
     ','line_number':2522,'multiline':True]
['text':'*
     * Returns by value, unit of mass: gram.
     * Also see {@link #createGram()}.
     * @stable ICU 64
     ','line_number':2531,'multiline':True]
['text':'*
     * Returns by pointer, unit of mass: kilogram.
     * Caller owns returned value and must free it.
     * Also see {@link #getKilogram()}.
     * @param status ICU error code.
     * @stable ICU 53
     ','line_number':2538,'multiline':True]
['text':'*
     * Returns by value, unit of mass: kilogram.
     * Also see {@link #createKilogram()}.
     * @stable ICU 64
     ','line_number':2547,'multiline':True]
['text':'*
     * Returns by pointer, unit of mass: metric-ton.
     * Caller owns returned value and must free it.
     * Also see {@link #getMetricTon()}.
     * @param status ICU error code.
     * @stable ICU 54
     ','line_number':2554,'multiline':True]
['text':'*
     * Returns by value, unit of mass: metric-ton.
     * Also see {@link #createMetricTon()}.
     * @stable ICU 64
     ','line_number':2563,'multiline':True]
['text':'*
     * Returns by pointer, unit of mass: microgram.
     * Caller owns returned value and must free it.
     * Also see {@link #getMicrogram()}.
     * @param status ICU error code.
     * @stable ICU 54
     ','line_number':2570,'multiline':True]
['text':'*
     * Returns by value, unit of mass: microgram.
     * Also see {@link #createMicrogram()}.
     * @stable ICU 64
     ','line_number':2579,'multiline':True]
['text':'*
     * Returns by pointer, unit of mass: milligram.
     * Caller owns returned value and must free it.
     * Also see {@link #getMilligram()}.
     * @param status ICU error code.
     * @stable ICU 54
     ','line_number':2586,'multiline':True]
['text':'*
     * Returns by value, unit of mass: milligram.
     * Also see {@link #createMilligram()}.
     * @stable ICU 64
     ','line_number':2595,'multiline':True]
['text':'*
     * Returns by pointer, unit of mass: ounce.
     * Caller owns returned value and must free it.
     * Also see {@link #getOunce()}.
     * @param status ICU error code.
     * @stable ICU 53
     ','line_number':2602,'multiline':True]
['text':'*
     * Returns by value, unit of mass: ounce.
     * Also see {@link #createOunce()}.
     * @stable ICU 64
     ','line_number':2611,'multiline':True]
['text':'*
     * Returns by pointer, unit of mass: ounce-troy.
     * Caller owns returned value and must free it.
     * Also see {@link #getOunceTroy()}.
     * @param status ICU error code.
     * @stable ICU 54
     ','line_number':2618,'multiline':True]
['text':'*
     * Returns by value, unit of mass: ounce-troy.
     * Also see {@link #createOunceTroy()}.
     * @stable ICU 64
     ','line_number':2627,'multiline':True]
['text':'*
     * Returns by pointer, unit of mass: pound.
     * Caller owns returned value and must free it.
     * Also see {@link #getPound()}.
     * @param status ICU error code.
     * @stable ICU 53
     ','line_number':2634,'multiline':True]
['text':'*
     * Returns by value, unit of mass: pound.
     * Also see {@link #createPound()}.
     * @stable ICU 64
     ','line_number':2643,'multiline':True]
['text':'*
     * Returns by pointer, unit of mass: solar-mass.
     * Caller owns returned value and must free it.
     * Also see {@link #getSolarMass()}.
     * @param status ICU error code.
     * @stable ICU 64
     ','line_number':2650,'multiline':True]
['text':'*
     * Returns by value, unit of mass: solar-mass.
     * Also see {@link #createSolarMass()}.
     * @stable ICU 64
     ','line_number':2659,'multiline':True]
['text':'*
     * Returns by pointer, unit of mass: stone.
     * Caller owns returned value and must free it.
     * Also see {@link #getStone()}.
     * @param status ICU error code.
     * @stable ICU 54
     ','line_number':2666,'multiline':True]
['text':'*
     * Returns by value, unit of mass: stone.
     * Also see {@link #createStone()}.
     * @stable ICU 64
     ','line_number':2675,'multiline':True]
['text':'*
     * Returns by pointer, unit of mass: ton.
     * Caller owns returned value and must free it.
     * Also see {@link #getTon()}.
     * @param status ICU error code.
     * @stable ICU 54
     ','line_number':2682,'multiline':True]
['text':'*
     * Returns by value, unit of mass: ton.
     * Also see {@link #createTon()}.
     * @stable ICU 64
     ','line_number':2691,'multiline':True]
['text':'*
     * Returns by pointer, unit of power: gigawatt.
     * Caller owns returned value and must free it.
     * Also see {@link #getGigawatt()}.
     * @param status ICU error code.
     * @stable ICU 54
     ','line_number':2698,'multiline':True]
['text':'*
     * Returns by value, unit of power: gigawatt.
     * Also see {@link #createGigawatt()}.
     * @stable ICU 64
     ','line_number':2707,'multiline':True]
['text':'*
     * Returns by pointer, unit of power: horsepower.
     * Caller owns returned value and must free it.
     * Also see {@link #getHorsepower()}.
     * @param status ICU error code.
     * @stable ICU 53
     ','line_number':2714,'multiline':True]
['text':'*
     * Returns by value, unit of power: horsepower.
     * Also see {@link #createHorsepower()}.
     * @stable ICU 64
     ','line_number':2723,'multiline':True]
['text':'*
     * Returns by pointer, unit of power: kilowatt.
     * Caller owns returned value and must free it.
     * Also see {@link #getKilowatt()}.
     * @param status ICU error code.
     * @stable ICU 53
     ','line_number':2730,'multiline':True]
['text':'*
     * Returns by value, unit of power: kilowatt.
     * Also see {@link #createKilowatt()}.
     * @stable ICU 64
     ','line_number':2739,'multiline':True]
['text':'*
     * Returns by pointer, unit of power: megawatt.
     * Caller owns returned value and must free it.
     * Also see {@link #getMegawatt()}.
     * @param status ICU error code.
     * @stable ICU 54
     ','line_number':2746,'multiline':True]
['text':'*
     * Returns by value, unit of power: megawatt.
     * Also see {@link #createMegawatt()}.
     * @stable ICU 64
     ','line_number':2755,'multiline':True]
['text':'*
     * Returns by pointer, unit of power: milliwatt.
     * Caller owns returned value and must free it.
     * Also see {@link #getMilliwatt()}.
     * @param status ICU error code.
     * @stable ICU 54
     ','line_number':2762,'multiline':True]
['text':'*
     * Returns by value, unit of power: milliwatt.
     * Also see {@link #createMilliwatt()}.
     * @stable ICU 64
     ','line_number':2771,'multiline':True]
['text':'*
     * Returns by pointer, unit of power: watt.
     * Caller owns returned value and must free it.
     * Also see {@link #getWatt()}.
     * @param status ICU error code.
     * @stable ICU 53
     ','line_number':2778,'multiline':True]
['text':'*
     * Returns by value, unit of power: watt.
     * Also see {@link #createWatt()}.
     * @stable ICU 64
     ','line_number':2787,'multiline':True]
['text':'*
     * Returns by pointer, unit of pressure: atmosphere.
     * Caller owns returned value and must free it.
     * Also see {@link #getAtmosphere()}.
     * @param status ICU error code.
     * @stable ICU 63
     ','line_number':2794,'multiline':True]
['text':'*
     * Returns by value, unit of pressure: atmosphere.
     * Also see {@link #createAtmosphere()}.
     * @stable ICU 64
     ','line_number':2803,'multiline':True]
['text':'*
     * Returns by pointer, unit of pressure: bar.
     * Caller owns returned value and must free it.
     * Also see {@link #getBar()}.
     * @param status ICU error code.
     * @stable ICU 65
     ','line_number':2810,'multiline':True]
['text':'*
     * Returns by value, unit of pressure: bar.
     * Also see {@link #createBar()}.
     * @stable ICU 65
     ','line_number':2819,'multiline':True]
['text':'*
     * Returns by pointer, unit of pressure: hectopascal.
     * Caller owns returned value and must free it.
     * Also see {@link #getHectopascal()}.
     * @param status ICU error code.
     * @stable ICU 53
     ','line_number':2826,'multiline':True]
['text':'*
     * Returns by value, unit of pressure: hectopascal.
     * Also see {@link #createHectopascal()}.
     * @stable ICU 64
     ','line_number':2835,'multiline':True]
['text':'*
     * Returns by pointer, unit of pressure: inch-ofhg.
     * Caller owns returned value and must free it.
     * Also see {@link #getInchHg()}.
     * @param status ICU error code.
     * @stable ICU 53
     ','line_number':2842,'multiline':True]
['text':'*
     * Returns by value, unit of pressure: inch-ofhg.
     * Also see {@link #createInchHg()}.
     * @stable ICU 64
     ','line_number':2851,'multiline':True]
['text':'*
     * Returns by pointer, unit of pressure: kilopascal.
     * Caller owns returned value and must free it.
     * Also see {@link #getKilopascal()}.
     * @param status ICU error code.
     * @stable ICU 64
     ','line_number':2858,'multiline':True]
['text':'*
     * Returns by value, unit of pressure: kilopascal.
     * Also see {@link #createKilopascal()}.
     * @stable ICU 64
     ','line_number':2867,'multiline':True]
['text':'*
     * Returns by pointer, unit of pressure: megapascal.
     * Caller owns returned value and must free it.
     * Also see {@link #getMegapascal()}.
     * @param status ICU error code.
     * @stable ICU 64
     ','line_number':2874,'multiline':True]
['text':'*
     * Returns by value, unit of pressure: megapascal.
     * Also see {@link #createMegapascal()}.
     * @stable ICU 64
     ','line_number':2883,'multiline':True]
['text':'*
     * Returns by pointer, unit of pressure: millibar.
     * Caller owns returned value and must free it.
     * Also see {@link #getMillibar()}.
     * @param status ICU error code.
     * @stable ICU 53
     ','line_number':2890,'multiline':True]
['text':'*
     * Returns by value, unit of pressure: millibar.
     * Also see {@link #createMillibar()}.
     * @stable ICU 64
     ','line_number':2899,'multiline':True]
['text':'*
     * Returns by pointer, unit of pressure: millimeter-ofhg.
     * Caller owns returned value and must free it.
     * Also see {@link #getMillimeterOfMercury()}.
     * @param status ICU error code.
     * @stable ICU 54
     ','line_number':2906,'multiline':True]
['text':'*
     * Returns by value, unit of pressure: millimeter-ofhg.
     * Also see {@link #createMillimeterOfMercury()}.
     * @stable ICU 64
     ','line_number':2915,'multiline':True]
['text':'*
     * Returns by pointer, unit of pressure: pascal.
     * Caller owns returned value and must free it.
     * Also see {@link #getPascal()}.
     * @param status ICU error code.
     * @stable ICU 65
     ','line_number':2922,'multiline':True]
['text':'*
     * Returns by value, unit of pressure: pascal.
     * Also see {@link #createPascal()}.
     * @stable ICU 65
     ','line_number':2931,'multiline':True]
['text':'*
     * Returns by pointer, unit of pressure: pound-force-per-square-inch.
     * Caller owns returned value and must free it.
     * Also see {@link #getPoundPerSquareInch()}.
     * @param status ICU error code.
     * @stable ICU 54
     ','line_number':2938,'multiline':True]
['text':'*
     * Returns by value, unit of pressure: pound-force-per-square-inch.
     * Also see {@link #createPoundPerSquareInch()}.
     * @stable ICU 64
     ','line_number':2947,'multiline':True]
['text':'*
     * Returns by pointer, unit of speed: kilometer-per-hour.
     * Caller owns returned value and must free it.
     * Also see {@link #getKilometerPerHour()}.
     * @param status ICU error code.
     * @stable ICU 53
     ','line_number':2954,'multiline':True]
['text':'*
     * Returns by value, unit of speed: kilometer-per-hour.
     * Also see {@link #createKilometerPerHour()}.
     * @stable ICU 64
     ','line_number':2963,'multiline':True]
['text':'*
     * Returns by pointer, unit of speed: knot.
     * Caller owns returned value and must free it.
     * Also see {@link #getKnot()}.
     * @param status ICU error code.
     * @stable ICU 56
     ','line_number':2970,'multiline':True]
['text':'*
     * Returns by value, unit of speed: knot.
     * Also see {@link #createKnot()}.
     * @stable ICU 64
     ','line_number':2979,'multiline':True]
['text':'*
     * Returns by pointer, unit of speed: meter-per-second.
     * Caller owns returned value and must free it.
     * Also see {@link #getMeterPerSecond()}.
     * @param status ICU error code.
     * @stable ICU 53
     ','line_number':2986,'multiline':True]
['text':'*
     * Returns by value, unit of speed: meter-per-second.
     * Also see {@link #createMeterPerSecond()}.
     * @stable ICU 64
     ','line_number':2995,'multiline':True]
['text':'*
     * Returns by pointer, unit of speed: mile-per-hour.
     * Caller owns returned value and must free it.
     * Also see {@link #getMilePerHour()}.
     * @param status ICU error code.
     * @stable ICU 53
     ','line_number':3002,'multiline':True]
['text':'*
     * Returns by value, unit of speed: mile-per-hour.
     * Also see {@link #createMilePerHour()}.
     * @stable ICU 64
     ','line_number':3011,'multiline':True]
['text':'*
     * Returns by pointer, unit of temperature: celsius.
     * Caller owns returned value and must free it.
     * Also see {@link #getCelsius()}.
     * @param status ICU error code.
     * @stable ICU 53
     ','line_number':3018,'multiline':True]
['text':'*
     * Returns by value, unit of temperature: celsius.
     * Also see {@link #createCelsius()}.
     * @stable ICU 64
     ','line_number':3027,'multiline':True]
['text':'*
     * Returns by pointer, unit of temperature: fahrenheit.
     * Caller owns returned value and must free it.
     * Also see {@link #getFahrenheit()}.
     * @param status ICU error code.
     * @stable ICU 53
     ','line_number':3034,'multiline':True]
['text':'*
     * Returns by value, unit of temperature: fahrenheit.
     * Also see {@link #createFahrenheit()}.
     * @stable ICU 64
     ','line_number':3043,'multiline':True]
['text':'*
     * Returns by pointer, unit of temperature: generic.
     * Caller owns returned value and must free it.
     * Also see {@link #getGenericTemperature()}.
     * @param status ICU error code.
     * @stable ICU 56
     ','line_number':3050,'multiline':True]
['text':'*
     * Returns by value, unit of temperature: generic.
     * Also see {@link #createGenericTemperature()}.
     * @stable ICU 64
     ','line_number':3059,'multiline':True]
['text':'*
     * Returns by pointer, unit of temperature: kelvin.
     * Caller owns returned value and must free it.
     * Also see {@link #getKelvin()}.
     * @param status ICU error code.
     * @stable ICU 54
     ','line_number':3066,'multiline':True]
['text':'*
     * Returns by value, unit of temperature: kelvin.
     * Also see {@link #createKelvin()}.
     * @stable ICU 64
     ','line_number':3075,'multiline':True]
['text':'*
     * Returns by pointer, unit of torque: newton-meter.
     * Caller owns returned value and must free it.
     * Also see {@link #getNewtonMeter()}.
     * @param status ICU error code.
     * @stable ICU 64
     ','line_number':3082,'multiline':True]
['text':'*
     * Returns by value, unit of torque: newton-meter.
     * Also see {@link #createNewtonMeter()}.
     * @stable ICU 64
     ','line_number':3091,'multiline':True]
['text':'*
     * Returns by pointer, unit of torque: pound-force-foot.
     * Caller owns returned value and must free it.
     * Also see {@link #getPoundFoot()}.
     * @param status ICU error code.
     * @stable ICU 64
     ','line_number':3098,'multiline':True]
['text':'*
     * Returns by value, unit of torque: pound-force-foot.
     * Also see {@link #createPoundFoot()}.
     * @stable ICU 64
     ','line_number':3107,'multiline':True]
['text':'*
     * Returns by pointer, unit of volume: acre-foot.
     * Caller owns returned value and must free it.
     * Also see {@link #getAcreFoot()}.
     * @param status ICU error code.
     * @stable ICU 54
     ','line_number':3114,'multiline':True]
['text':'*
     * Returns by value, unit of volume: acre-foot.
     * Also see {@link #createAcreFoot()}.
     * @stable ICU 64
     ','line_number':3123,'multiline':True]
['text':'*
     * Returns by pointer, unit of volume: barrel.
     * Caller owns returned value and must free it.
     * Also see {@link #getBarrel()}.
     * @param status ICU error code.
     * @stable ICU 64
     ','line_number':3130,'multiline':True]
['text':'*
     * Returns by value, unit of volume: barrel.
     * Also see {@link #createBarrel()}.
     * @stable ICU 64
     ','line_number':3139,'multiline':True]
['text':'*
     * Returns by pointer, unit of volume: bushel.
     * Caller owns returned value and must free it.
     * Also see {@link #getBushel()}.
     * @param status ICU error code.
     * @stable ICU 54
     ','line_number':3146,'multiline':True]
['text':'*
     * Returns by value, unit of volume: bushel.
     * Also see {@link #createBushel()}.
     * @stable ICU 64
     ','line_number':3155,'multiline':True]
['text':'*
     * Returns by pointer, unit of volume: centiliter.
     * Caller owns returned value and must free it.
     * Also see {@link #getCentiliter()}.
     * @param status ICU error code.
     * @stable ICU 54
     ','line_number':3162,'multiline':True]
['text':'*
     * Returns by value, unit of volume: centiliter.
     * Also see {@link #createCentiliter()}.
     * @stable ICU 64
     ','line_number':3171,'multiline':True]
['text':'*
     * Returns by pointer, unit of volume: cubic-centimeter.
     * Caller owns returned value and must free it.
     * Also see {@link #getCubicCentimeter()}.
     * @param status ICU error code.
     * @stable ICU 54
     ','line_number':3178,'multiline':True]
['text':'*
     * Returns by value, unit of volume: cubic-centimeter.
     * Also see {@link #createCubicCentimeter()}.
     * @stable ICU 64
     ','line_number':3187,'multiline':True]
['text':'*
     * Returns by pointer, unit of volume: cubic-foot.
     * Caller owns returned value and must free it.
     * Also see {@link #getCubicFoot()}.
     * @param status ICU error code.
     * @stable ICU 54
     ','line_number':3194,'multiline':True]
['text':'*
     * Returns by value, unit of volume: cubic-foot.
     * Also see {@link #createCubicFoot()}.
     * @stable ICU 64
     ','line_number':3203,'multiline':True]
['text':'*
     * Returns by pointer, unit of volume: cubic-inch.
     * Caller owns returned value and must free it.
     * Also see {@link #getCubicInch()}.
     * @param status ICU error code.
     * @stable ICU 54
     ','line_number':3210,'multiline':True]
['text':'*
     * Returns by value, unit of volume: cubic-inch.
     * Also see {@link #createCubicInch()}.
     * @stable ICU 64
     ','line_number':3219,'multiline':True]
['text':'*
     * Returns by pointer, unit of volume: cubic-kilometer.
     * Caller owns returned value and must free it.
     * Also see {@link #getCubicKilometer()}.
     * @param status ICU error code.
     * @stable ICU 53
     ','line_number':3226,'multiline':True]
['text':'*
     * Returns by value, unit of volume: cubic-kilometer.
     * Also see {@link #createCubicKilometer()}.
     * @stable ICU 64
     ','line_number':3235,'multiline':True]
['text':'*
     * Returns by pointer, unit of volume: cubic-meter.
     * Caller owns returned value and must free it.
     * Also see {@link #getCubicMeter()}.
     * @param status ICU error code.
     * @stable ICU 54
     ','line_number':3242,'multiline':True]
['text':'*
     * Returns by value, unit of volume: cubic-meter.
     * Also see {@link #createCubicMeter()}.
     * @stable ICU 64
     ','line_number':3251,'multiline':True]
['text':'*
     * Returns by pointer, unit of volume: cubic-mile.
     * Caller owns returned value and must free it.
     * Also see {@link #getCubicMile()}.
     * @param status ICU error code.
     * @stable ICU 53
     ','line_number':3258,'multiline':True]
['text':'*
     * Returns by value, unit of volume: cubic-mile.
     * Also see {@link #createCubicMile()}.
     * @stable ICU 64
     ','line_number':3267,'multiline':True]
['text':'*
     * Returns by pointer, unit of volume: cubic-yard.
     * Caller owns returned value and must free it.
     * Also see {@link #getCubicYard()}.
     * @param status ICU error code.
     * @stable ICU 54
     ','line_number':3274,'multiline':True]
['text':'*
     * Returns by value, unit of volume: cubic-yard.
     * Also see {@link #createCubicYard()}.
     * @stable ICU 64
     ','line_number':3283,'multiline':True]
['text':'*
     * Returns by pointer, unit of volume: cup.
     * Caller owns returned value and must free it.
     * Also see {@link #getCup()}.
     * @param status ICU error code.
     * @stable ICU 54
     ','line_number':3290,'multiline':True]
['text':'*
     * Returns by value, unit of volume: cup.
     * Also see {@link #createCup()}.
     * @stable ICU 64
     ','line_number':3299,'multiline':True]
['text':'*
     * Returns by pointer, unit of volume: cup-metric.
     * Caller owns returned value and must free it.
     * Also see {@link #getCupMetric()}.
     * @param status ICU error code.
     * @stable ICU 56
     ','line_number':3306,'multiline':True]
['text':'*
     * Returns by value, unit of volume: cup-metric.
     * Also see {@link #createCupMetric()}.
     * @stable ICU 64
     ','line_number':3315,'multiline':True]
['text':'*
     * Returns by pointer, unit of volume: deciliter.
     * Caller owns returned value and must free it.
     * Also see {@link #getDeciliter()}.
     * @param status ICU error code.
     * @stable ICU 54
     ','line_number':3322,'multiline':True]
['text':'*
     * Returns by value, unit of volume: deciliter.
     * Also see {@link #createDeciliter()}.
     * @stable ICU 64
     ','line_number':3331,'multiline':True]
['text':'*
     * Returns by pointer, unit of volume: dessert-spoon.
     * Caller owns returned value and must free it.
     * Also see {@link #getDessertSpoon()}.
     * @param status ICU error code.
     * @draft ICU 68
     ','line_number':3339,'multiline':True]
['text':'*
     * Returns by value, unit of volume: dessert-spoon.
     * Also see {@link #createDessertSpoon()}.
     * @draft ICU 68
     ','line_number':3348,'multiline':True]
['text':' U_HIDE_DRAFT_API ','line_number':3354,'multiline':True]
['text':'*
     * Returns by pointer, unit of volume: dessert-spoon-imperial.
     * Caller owns returned value and must free it.
     * Also see {@link #getDessertSpoonImperial()}.
     * @param status ICU error code.
     * @draft ICU 68
     ','line_number':3357,'multiline':True]
['text':'*
     * Returns by value, unit of volume: dessert-spoon-imperial.
     * Also see {@link #createDessertSpoonImperial()}.
     * @draft ICU 68
     ','line_number':3366,'multiline':True]
['text':' U_HIDE_DRAFT_API ','line_number':3372,'multiline':True]
['text':'*
     * Returns by pointer, unit of volume: dram.
     * Caller owns returned value and must free it.
     * Also see {@link #getDram()}.
     * @param status ICU error code.
     * @draft ICU 68
     ','line_number':3375,'multiline':True]
['text':'*
     * Returns by value, unit of volume: dram.
     * Also see {@link #createDram()}.
     * @draft ICU 68
     ','line_number':3384,'multiline':True]
['text':' U_HIDE_DRAFT_API ','line_number':3390,'multiline':True]
['text':'*
     * Returns by pointer, unit of volume: drop.
     * Caller owns returned value and must free it.
     * Also see {@link #getDrop()}.
     * @param status ICU error code.
     * @draft ICU 68
     ','line_number':3393,'multiline':True]
['text':'*
     * Returns by value, unit of volume: drop.
     * Also see {@link #createDrop()}.
     * @draft ICU 68
     ','line_number':3402,'multiline':True]
['text':' U_HIDE_DRAFT_API ','line_number':3408,'multiline':True]
['text':'*
     * Returns by pointer, unit of volume: fluid-ounce.
     * Caller owns returned value and must free it.
     * Also see {@link #getFluidOunce()}.
     * @param status ICU error code.
     * @stable ICU 54
     ','line_number':3410,'multiline':True]
['text':'*
     * Returns by value, unit of volume: fluid-ounce.
     * Also see {@link #createFluidOunce()}.
     * @stable ICU 64
     ','line_number':3419,'multiline':True]
['text':'*
     * Returns by pointer, unit of volume: fluid-ounce-imperial.
     * Caller owns returned value and must free it.
     * Also see {@link #getFluidOunceImperial()}.
     * @param status ICU error code.
     * @stable ICU 64
     ','line_number':3426,'multiline':True]
['text':'*
     * Returns by value, unit of volume: fluid-ounce-imperial.
     * Also see {@link #createFluidOunceImperial()}.
     * @stable ICU 64
     ','line_number':3435,'multiline':True]
['text':'*
     * Returns by pointer, unit of volume: gallon.
     * Caller owns returned value and must free it.
     * Also see {@link #getGallon()}.
     * @param status ICU error code.
     * @stable ICU 54
     ','line_number':3442,'multiline':True]
['text':'*
     * Returns by value, unit of volume: gallon.
     * Also see {@link #createGallon()}.
     * @stable ICU 64
     ','line_number':3451,'multiline':True]
['text':'*
     * Returns by pointer, unit of volume: gallon-imperial.
     * Caller owns returned value and must free it.
     * Also see {@link #getGallonImperial()}.
     * @param status ICU error code.
     * @stable ICU 57
     ','line_number':3458,'multiline':True]
['text':'*
     * Returns by value, unit of volume: gallon-imperial.
     * Also see {@link #createGallonImperial()}.
     * @stable ICU 64
     ','line_number':3467,'multiline':True]
['text':'*
     * Returns by pointer, unit of volume: hectoliter.
     * Caller owns returned value and must free it.
     * Also see {@link #getHectoliter()}.
     * @param status ICU error code.
     * @stable ICU 54
     ','line_number':3474,'multiline':True]
['text':'*
     * Returns by value, unit of volume: hectoliter.
     * Also see {@link #createHectoliter()}.
     * @stable ICU 64
     ','line_number':3483,'multiline':True]
['text':'*
     * Returns by pointer, unit of volume: jigger.
     * Caller owns returned value and must free it.
     * Also see {@link #getJigger()}.
     * @param status ICU error code.
     * @draft ICU 68
     ','line_number':3491,'multiline':True]
['text':'*
     * Returns by value, unit of volume: jigger.
     * Also see {@link #createJigger()}.
     * @draft ICU 68
     ','line_number':3500,'multiline':True]
['text':' U_HIDE_DRAFT_API ','line_number':3506,'multiline':True]
['text':'*
     * Returns by pointer, unit of volume: liter.
     * Caller owns returned value and must free it.
     * Also see {@link #getLiter()}.
     * @param status ICU error code.
     * @stable ICU 53
     ','line_number':3508,'multiline':True]
['text':'*
     * Returns by value, unit of volume: liter.
     * Also see {@link #createLiter()}.
     * @stable ICU 64
     ','line_number':3517,'multiline':True]
['text':'*
     * Returns by pointer, unit of volume: megaliter.
     * Caller owns returned value and must free it.
     * Also see {@link #getMegaliter()}.
     * @param status ICU error code.
     * @stable ICU 54
     ','line_number':3524,'multiline':True]
['text':'*
     * Returns by value, unit of volume: megaliter.
     * Also see {@link #createMegaliter()}.
     * @stable ICU 64
     ','line_number':3533,'multiline':True]
['text':'*
     * Returns by pointer, unit of volume: milliliter.
     * Caller owns returned value and must free it.
     * Also see {@link #getMilliliter()}.
     * @param status ICU error code.
     * @stable ICU 54
     ','line_number':3540,'multiline':True]
['text':'*
     * Returns by value, unit of volume: milliliter.
     * Also see {@link #createMilliliter()}.
     * @stable ICU 64
     ','line_number':3549,'multiline':True]
['text':'*
     * Returns by pointer, unit of volume: pinch.
     * Caller owns returned value and must free it.
     * Also see {@link #getPinch()}.
     * @param status ICU error code.
     * @draft ICU 68
     ','line_number':3557,'multiline':True]
['text':'*
     * Returns by value, unit of volume: pinch.
     * Also see {@link #createPinch()}.
     * @draft ICU 68
     ','line_number':3566,'multiline':True]
['text':' U_HIDE_DRAFT_API ','line_number':3572,'multiline':True]
['text':'*
     * Returns by pointer, unit of volume: pint.
     * Caller owns returned value and must free it.
     * Also see {@link #getPint()}.
     * @param status ICU error code.
     * @stable ICU 54
     ','line_number':3574,'multiline':True]
['text':'*
     * Returns by value, unit of volume: pint.
     * Also see {@link #createPint()}.
     * @stable ICU 64
     ','line_number':3583,'multiline':True]
['text':'*
     * Returns by pointer, unit of volume: pint-metric.
     * Caller owns returned value and must free it.
     * Also see {@link #getPintMetric()}.
     * @param status ICU error code.
     * @stable ICU 56
     ','line_number':3590,'multiline':True]
['text':'*
     * Returns by value, unit of volume: pint-metric.
     * Also see {@link #createPintMetric()}.
     * @stable ICU 64
     ','line_number':3599,'multiline':True]
['text':'*
     * Returns by pointer, unit of volume: quart.
     * Caller owns returned value and must free it.
     * Also see {@link #getQuart()}.
     * @param status ICU error code.
     * @stable ICU 54
     ','line_number':3606,'multiline':True]
['text':'*
     * Returns by value, unit of volume: quart.
     * Also see {@link #createQuart()}.
     * @stable ICU 64
     ','line_number':3615,'multiline':True]
['text':'*
     * Returns by pointer, unit of volume: quart-imperial.
     * Caller owns returned value and must free it.
     * Also see {@link #getQuartImperial()}.
     * @param status ICU error code.
     * @draft ICU 68
     ','line_number':3623,'multiline':True]
['text':'*
     * Returns by value, unit of volume: quart-imperial.
     * Also see {@link #createQuartImperial()}.
     * @draft ICU 68
     ','line_number':3632,'multiline':True]
['text':' U_HIDE_DRAFT_API ','line_number':3638,'multiline':True]
['text':'*
     * Returns by pointer, unit of volume: tablespoon.
     * Caller owns returned value and must free it.
     * Also see {@link #getTablespoon()}.
     * @param status ICU error code.
     * @stable ICU 54
     ','line_number':3640,'multiline':True]
['text':'*
     * Returns by value, unit of volume: tablespoon.
     * Also see {@link #createTablespoon()}.
     * @stable ICU 64
     ','line_number':3649,'multiline':True]
['text':'*
     * Returns by pointer, unit of volume: teaspoon.
     * Caller owns returned value and must free it.
     * Also see {@link #getTeaspoon()}.
     * @param status ICU error code.
     * @stable ICU 54
     ','line_number':3656,'multiline':True]
['text':'*
     * Returns by value, unit of volume: teaspoon.
     * Also see {@link #createTeaspoon()}.
     * @stable ICU 64
     ','line_number':3665,'multiline':True]
['text':' End generated createXXX methods','line_number':3672,'multiline':False]
['text':'*
     * For ICU use only.
     * @internal
     ','line_number':3677,'multiline':True]
['text':'*
     * For ICU use only.
     * @internal
     ','line_number':3683,'multiline':True]
['text':' U_HIDE_INTERNAL_API ','line_number':3689,'multiline':True]
['text':' Used by new draft APIs in ICU 67. If non-null, fImpl is owned by the','line_number':3693,'multiline':False]
['text':' MeasureUnit.','line_number':3694,'multiline':False]
['text':' An index into a static string list in measunit.cpp. If set to -1, fImpl','line_number':3697,'multiline':False]
['text':' is in use instead of fTypeId and fSubTypeId.','line_number':3698,'multiline':False]
['text':' An index into a static string list in measunit.cpp. If set to -1, fImpl','line_number':3700,'multiline':False]
['text':' is in use instead of fTypeId and fSubTypeId.','line_number':3701,'multiline':False]
['text':'*
     * Sets output's typeId and subTypeId according to subType, if subType is a
     * valid/known identifier.
     *
     * @return Whether subType is known to ICU. If false, output was not
     * modified.
     ','line_number':3709,'multiline':True]
['text':'* Internal version of public API ','line_number':3718,'multiline':True]
['text':' For access to findBySubType','line_number':3723,'multiline':False]
['text':' inline impl of @draft ICU 68 method','line_number':3728,'multiline':False]
['text':' U_HIDE_DRAFT_API','line_number':3735,'multiline':False]
['text':' !UNCONFIG_NO_FORMATTING','line_number':3739,'multiline':False]
['text':' U_SHOW_CPLUSPLUS_API ','line_number':3741,'multiline':True]
['text':' __MEASUREUNIT_H__','line_number':3743,'multiline':False]
