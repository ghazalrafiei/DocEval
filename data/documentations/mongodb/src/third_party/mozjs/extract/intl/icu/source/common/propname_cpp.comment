['text':' Â© 2016 and later: Unicode, Inc. and others.','line_number':1,'multiline':False]
['text':' License & terms of use: http://www.unicode.org/copyright.html','line_number':2,'multiline':False]
['text':'
**********************************************************************
* Copyright (c) 2002-2014, International Business Machines
* Corporation and others.  All Rights Reserved.
**********************************************************************
* Author: Alan Liu
* Created: October 30 2002
* Since: ICU 2.4
* 2010nov19 Markus Scherer  Rewrite for formatVersion 2.
**********************************************************************
','line_number':3,'multiline':True]
['text':'*
 * Get the next non-ignorable ASCII character from a property name
 * and lowercases it.
 * @return ((advance count for the name)<<8)|character
 ','line_number':29,'multiline':True]
['text':' Ignore delimiters '-', '_', and ASCII White_Space ','line_number':39,'multiline':True]
['text':'*
 * Get the next non-ignorable EBCDIC character from a property name
 * and lowercases it.
 * @return ((advance count for the name)<<8)|character
 ','line_number':52,'multiline':True]
['text':' Ignore delimiters '-', '_', and EBCDIC White_Space ','line_number':62,'multiline':True]
['text':'*
 * Unicode property names and property value names are compared "loosely".
 *
 * UCD.html 4.0.1 says:
 *   For all property names, property value names, and for property values for
 *   Enumerated, Binary, or Catalog properties, use the following
 *   loose matching rule:
 *
 *   LM3. Ignore case, whitespace, underscore ('_'), and hyphens.
 *
 * This function does just that, for (char *) name strings.
 * It is almost identical to ucnv_compareNames() but also ignores
 * C0 White_Space characters (U+0009..U+000d, and U+0085 on EBCDIC).
 *
 * @internal
 ','line_number':75,'multiline':True]
['text':' If we reach the ends of both strings then they match ','line_number':100,'multiline':True]
['text':' Compare the lowercased characters ','line_number':105,'multiline':True]
['text':' If we reach the ends of both strings then they match ','line_number':126,'multiline':True]
['text':' Compare the lowercased characters ','line_number':131,'multiline':True]
['text':' valueMaps index, initially after numRanges','line_number':149,'multiline':False]
['text':' Read and skip the start and limit of this range.','line_number':151,'multiline':False]
['text':' Skip all entries for this range.','line_number':161,'multiline':False]
['text':' The property does not have named values.','line_number':168,'multiline':False]
['text':' Skip the BytesTrie offset.','line_number':170,'multiline':False]
['text':' Ranges of values.','line_number':173,'multiline':False]
['text':' Read and skip the start and limit of this range.','line_number':175,'multiline':False]
['text':' Skip all entries for this range.','line_number':185,'multiline':False]
['text':' List of values.','line_number':188,'multiline':False]
['text':' Skip nameIndex names.','line_number':209,'multiline':False]
['text':' no name (Property[Value]Aliases.txt has "n/a")','line_number':214,'multiline':False]
['text':' Ignore delimiters '-', '_', and ASCII White_Space.','line_number':227,'multiline':False]
['text':' Not a known property.','line_number':242,'multiline':False]
['text':' Not a known property.','line_number':250,'multiline':False]
['text':' Not a known property.','line_number':275,'multiline':False]
['text':' The property does not have named values.','line_number':279,'multiline':False]
['text':' valueMapIndex is the start of the property's valueMap,','line_number':281,'multiline':False]
['text':' where the first word is the BytesTrie offset.','line_number':282,'multiline':False]
['text':'----------------------------------------------------------------------','line_number':287,'multiline':False]
['text':' Public API implementation','line_number':288,'multiline':False]
