['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 * vim: set ts=8 sts=2 et sw=2 tw=80:
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':1,'multiline':True]
['text':' We use uint32_t instead of bool to ensure MSVC packs these fields','line_number':19,'multiline':False]
['text':' correctly.','line_number':20,'multiline':False]
['text':' offset_ < INVALID_OFFSET means that the label is either bound or has','line_number':23,'multiline':False]
['text':' incoming uses and needs to be bound.','line_number':24,'multiline':False]
['text':' UINT31_MAX.','line_number':32,'multiline':False]
['text':' If the label is bound, all incoming edges have been patched and any','line_number':37,'multiline':False]
['text':' future incoming edges will be immediately patched.','line_number':38,'multiline':False]
['text':' Returns whether the label is not bound, but has incoming uses.','line_number':44,'multiline':False]
['text':' Binds the label, fixing its final position in the code stream.','line_number':46,'multiline':False]
['text':' Marks the label as neither bound nor used.','line_number':55,'multiline':False]
['text':' Sets the label's latest used position.','line_number':60,'multiline':False]
['text':' A label represents a position in an assembly buffer that may or may not have','line_number':70,'multiline':False]
['text':' already been generated. Labels can either be "bound" or "unbound", the','line_number':71,'multiline':False]
['text':' former meaning that its position is known and the latter that its position','line_number':72,'multiline':False]
['text':' is not yet known.','line_number':73,'multiline':False]
['text':'','line_number':74,'multiline':False]
['text':' A jump to an unbound label adds that jump to the label's incoming queue. A','line_number':75,'multiline':False]
['text':' jump to a bound label automatically computes the jump distance. The process','line_number':76,'multiline':False]
['text':' of binding a label automatically corrects all incoming jumps.','line_number':77,'multiline':False]
['text':' Label's destructor asserts that if it has been used it has also been bound.','line_number':88,'multiline':False]
['text':' In the case long-lived labels, however, failed compilation (e.g. OOM) will','line_number':89,'multiline':False]
['text':' trigger this failure innocuously. This Label silences the assertion.','line_number':90,'multiline':False]
['text':' namespace jit','line_number':102,'multiline':False]
['text':' namespace js','line_number':103,'multiline':False]
['text':' jit_Label_h','line_number':105,'multiline':False]
