['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 * vim: set ts=8 sts=2 et sw=2 tw=80:
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':1,'multiline':True]
['text':' MOZ_ASSERT, MOZ_CRASH','line_number':10,'multiline':False]
['text':' mozilla::AssertedCast','line_number':11,'multiline':False]
['text':' uint8_t, uint16_t, uint32_t','line_number':13,'multiline':False]
['text':' TrivialTaggedParserAtomIndex','line_number':16,'multiline':False]
['text':' SystemAllocPolicy','line_number':17,'multiline':False]
['text':' Vector','line_number':18,'multiline':False]
['text':' BindingKind, BindingLocation','line_number':19,'multiline':False]
['text':' JOF_ENVCOORD','line_number':20,'multiline':False]
['text':' ENVCOORD_HOPS_BITS, ENVCOORD_SLOT_BITS, GET_ENVCOORD_HOPS, GET_ENVCOORD_SLOT, ENVCOORD_HOPS_LEN, JOF_OPTYPE, JSOp, LOCALNO_LIMIT','line_number':21,'multiline':False]
['text':' An "environment coordinate" describes how to get from head of the','line_number':25,'multiline':False]
['text':' environment chain to a given lexically-enclosing variable. An environment','line_number':26,'multiline':False]
['text':' coordinate has two dimensions:','line_number':27,'multiline':False]
['text':'  - hops: the number of environment objects on the scope chain to skip','line_number':28,'multiline':False]
['text':'  - slot: the slot on the environment object holding the variable's value','line_number':29,'multiline':False]
['text':' Technically, hops_/slot_ are ENVCOORD_(HOPS|SLOT)_BITS wide.  Since','line_number':34,'multiline':False]
['text':' EnvironmentCoordinate is a temporary value, don't bother with a bitfield as','line_number':35,'multiline':False]
['text':' this only adds overhead.','line_number':36,'multiline':False]
['text':' A detailed kind used for tracking declarations in the Parser. Used for','line_number':79,'multiline':False]
['text':' specific early error semantics and better error messages.','line_number':80,'multiline':False]
['text':' Handled as same as `let` after parsing.','line_number':88,'multiline':False]
['text':' slot to store nonstatic private method','line_number':99,'multiline':False]
['text':' Class field kind.','line_number':102,'multiline':False]
['text':' Used in Parser and BytecodeEmitter to track the kind of a private name.','line_number':147,'multiline':False]
['text':' Used in Parser to track declared names.','line_number':159,'multiline':False]
['text':' If the declared name is a binding, whether the binding is closed','line_number':164,'multiline':False]
['text':' over. Its value is meaningless if the declared name is not a binding','line_number':165,'multiline':False]
['text':' (i.e., a 'var' declared name in a non-var scope).','line_number':166,'multiline':False]
['text':' Only updated for private names (see noteDeclaredPrivateName),','line_number':171,'multiline':False]
['text':' tracks if declaration was instance or static to allow issuing','line_number':172,'multiline':False]
['text':' early errors in the case where we mismatch instance and static','line_number':173,'multiline':False]
['text':' private getter/setters.','line_number':174,'multiline':False]
['text':' Needed for InlineMap.','line_number':186,'multiline':False]
['text':' Used in BytecodeEmitter to map names to locations.','line_number':215,'multiline':False]
['text':' Cannot statically determine where the name lives. Needs to walk the','line_number':219,'multiline':False]
['text':' environment chain to search for the name.','line_number':220,'multiline':False]
['text':' The name lives on the global or is a global lexical binding. Search','line_number':223,'multiline':False]
['text':' for the name on the global scope.','line_number':224,'multiline':False]
['text':' Special mode used only when emitting self-hosted scripts. See','line_number':227,'multiline':False]
['text':' BytecodeEmitter::lookupName.','line_number':228,'multiline':False]
['text':' In a named lambda, the name is the callee itself.','line_number':231,'multiline':False]
['text':' The name is a positional formal parameter name and can be retrieved','line_number':234,'multiline':False]
['text':' directly from the stack using slot_.','line_number':235,'multiline':False]
['text':' The name is not closed over and lives on the frame in slot_.','line_number':238,'multiline':False]
['text':' The name is closed over and lives on an environment hops_ away in slot_.','line_number':241,'multiline':False]
['text':' The name is closed over and lives on an environment hops_ away in slot_,','line_number':244,'multiline':False]
['text':' where one or more of the environments may be a DebugEnvironmentProxy','line_number':245,'multiline':False]
['text':' An imported name in a module.','line_number':248,'multiline':False]
['text':' Cannot statically determine where the synthesized var for Annex','line_number':251,'multiline':False]
['text':' B.3.3 lives.','line_number':252,'multiline':False]
['text':' Where the name lives.','line_number':257,'multiline':False]
['text':' If the name is not Dynamic or DynamicAnnexBVar, the kind of the','line_number':260,'multiline':False]
['text':' binding.','line_number':261,'multiline':False]
['text':' If the name is closed over and accessed via EnvironmentCoordinate, the','line_number':264,'multiline':False]
['text':' number of dynamic environments to skip.','line_number':265,'multiline':False]
['text':'','line_number':266,'multiline':False]
['text':' Otherwise UINT8_MAX.','line_number':267,'multiline':False]
['text':' If the name lives on the frame, the slot frame.','line_number':270,'multiline':False]
['text':'','line_number':271,'multiline':False]
['text':' If the name is closed over and accessed via EnvironmentCoordinate, the','line_number':272,'multiline':False]
['text':' slot on the environment.','line_number':273,'multiline':False]
['text':'','line_number':274,'multiline':False]
['text':' Otherwise 0.','line_number':275,'multiline':False]
['text':' Default constructor for InlineMap.','line_number':286,'multiline':False]
['text':' These types are declared here for BaseScript::CreateLazy.','line_number':391,'multiline':False]
['text':' FunctionBoxes stored in this type are required to be rooted','line_number':395,'multiline':False]
['text':' by the parser','line_number':396,'multiline':False]
['text':' namespace frontend','line_number':399,'multiline':False]
['text':' namespace js','line_number':400,'multiline':False]
['text':' frontend_NameAnalysisTypes_h','line_number':402,'multiline':False]
