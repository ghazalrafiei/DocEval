['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 * vim: set ts=8 sts=2 et sw=2 tw=80:
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':1,'multiline':True]
['text':' Arithmetic operations:','line_number':19,'multiline':False]
['text':' 32-bit immediate always, for patching.','line_number':71,'multiline':False]
['text':' Comparisons:','line_number':442,'multiline':False]
['text':' If the mask fits in a 32-bit immediate, we can use testl with a','line_number':533,'multiline':False]
['text':' 32-bit subreg.','line_number':534,'multiline':False]
['text':' Various move ops:','line_number':564,'multiline':False]
['text':' Note that this instruction sign-extends its 32-bit immediate field to 64','line_number':732,'multiline':False]
['text':' bits and loads the 64-bit value into a 64-bit register.','line_number':733,'multiline':False]
['text':'','line_number':734,'multiline':False]
['text':' Note also that this is similar to the movl_i32r instruction, except that','line_number':735,'multiline':False]
['text':' movl_i32r *zero*-extends its 32-bit immediate, and it has smaller code','line_number':736,'multiline':False]
['text':' size, so it's preferred for values which could use either.','line_number':737,'multiline':False]
['text':' Flow control:','line_number':840,'multiline':False]
['text':' rip-relative addressing.','line_number':843,'multiline':False]
['text':' SSE operations:','line_number':853,'multiline':False]
['text':' While this is called "vmovq", it actually uses the vmovd encoding','line_number':878,'multiline':False]
['text':' with a REX prefix modifying it to be 64-bit.','line_number':879,'multiline':False]
['text':' While this is called "vmovq", it actually uses the vmovd encoding','line_number':899,'multiline':False]
['text':' with a REX prefix modifying it to be 64-bit.','line_number':900,'multiline':False]
['text':' BMI instructions:','line_number':1187,'multiline':False]
['text':' = F3 ','line_number':1196,'multiline':True]
['text':' = 66 ','line_number':1207,'multiline':True]
['text':' = F2 ','line_number':1218,'multiline':True]
['text':' bytes trailing the patch field = ','line_number':1265,'multiline':True]
['text':' namespace X86Encoding','line_number':1385,'multiline':False]
['text':' namespace jit','line_number':1387,'multiline':False]
['text':' namespace js','line_number':1388,'multiline':False]
['text':' jit_x64_BaseAssembler_x64_h ','line_number':1390,'multiline':True]
