['text':' Copyright 2015, VIXL authors','line_number':1,'multiline':False]
['text':' All rights reserved.','line_number':2,'multiline':False]
['text':'','line_number':3,'multiline':False]
['text':' Redistribution and use in source and binary forms, with or without','line_number':4,'multiline':False]
['text':' modification, are permitted provided that the following conditions are met:','line_number':5,'multiline':False]
['text':'','line_number':6,'multiline':False]
['text':'   * Redistributions of source code must retain the above copyright notice,','line_number':7,'multiline':False]
['text':'     this list of conditions and the following disclaimer.','line_number':8,'multiline':False]
['text':'   * Redistributions in binary form must reproduce the above copyright notice,','line_number':9,'multiline':False]
['text':'     this list of conditions and the following disclaimer in the documentation','line_number':10,'multiline':False]
['text':'     and/or other materials provided with the distribution.','line_number':11,'multiline':False]
['text':'   * Neither the name of ARM Limited nor the names of its contributors may be','line_number':12,'multiline':False]
['text':'     used to endorse or promote products derived from this software without','line_number':13,'multiline':False]
['text':'     specific prior written permission.','line_number':14,'multiline':False]
['text':'','line_number':15,'multiline':False]
['text':' THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS CONTRIBUTORS "AS IS" AND','line_number':16,'multiline':False]
['text':' ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED','line_number':17,'multiline':False]
['text':' WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE','line_number':18,'multiline':False]
['text':' DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE','line_number':19,'multiline':False]
['text':' FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL','line_number':20,'multiline':False]
['text':' DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR','line_number':21,'multiline':False]
['text':' SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER','line_number':22,'multiline':False]
['text':' CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,','line_number':23,'multiline':False]
['text':' OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE','line_number':24,'multiline':False]
['text':' OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.','line_number':25,'multiline':False]
['text':' The default NaN values (for FPCR.DN=1).','line_number':33,'multiline':False]
['text':' Floating-point zero values.','line_number':38,'multiline':False]
['text':' Floating-point infinity values.','line_number':42,'multiline':False]
['text':' Float16 definitions.','line_number':206,'multiline':False]
['text':' SimFloat16 definitions.','line_number':219,'multiline':False]
['text':' +0 and -0 should be treated as equal.','line_number':248,'multiline':False]
['text':' namespace internal','line_number':266,'multiline':False]
['text':' Calculate shift required to put mantissa into the most-significant bits','line_number':286,'multiline':False]
['text':' of the destination mantissa.','line_number':287,'multiline':False]
['text':' Shift mantissa and discard implicit '1'.','line_number':290,'multiline':False]
['text':' Adjust the exponent for the shift applied, and rebias.','line_number':294,'multiline':False]
['text':' Convert NaNs as the processor would:','line_number':307,'multiline':False]
['text':'  - The sign is propagated.','line_number':308,'multiline':False]
['text':'  - The payload (mantissa) is transferred entirely, except that the top','line_number':309,'multiline':False]
['text':'    bit is forced to '1', making the result a quiet NaN. The unused','line_number':310,'multiline':False]
['text':'    (low-order) payload bits are set to 0.','line_number':311,'multiline':False]
['text':' Increase bits in mantissa, making low-order bits 0.','line_number':314,'multiline':False]
['text':' Force a quiet NaN.','line_number':316,'multiline':False]
['text':' Increase bits in mantissa, making low-order bits 0.','line_number':320,'multiline':False]
['text':' Change exponent bias.','line_number':323,'multiline':False]
['text':' Only the FPTieEven rounding mode is implemented.','line_number':339,'multiline':False]
['text':' Convert NaNs as the processor would:','line_number':352,'multiline':False]
['text':'  - The sign is propagated.','line_number':353,'multiline':False]
['text':'  - The payload (mantissa) is transferred as much as possible, except','line_number':354,'multiline':False]
['text':'    that the top bit is forced to '1', making the result a quiet NaN.','line_number':355,'multiline':False]
['text':' Force a quiet NaN.','line_number':362,'multiline':False]
['text':' In a C++ cast, any value representable in the target type will be','line_number':369,'multiline':False]
['text':' unchanged. This is always the case for +/-0.0 and infinities.','line_number':370,'multiline':False]
['text':' Convert double-to-float as the processor would, assuming that FPCR.FZ','line_number':376,'multiline':False]
['text':' (flush-to-zero) is not set.','line_number':377,'multiline':False]
['text':' Extract the IEEE-754 double components.','line_number':379,'multiline':False]
['text':' Extract the exponent and remove the IEEE-754 encoding bias.','line_number':381,'multiline':False]
['text':' Extract the mantissa and add the implicit '1' bit.','line_number':384,'multiline':False]
['text':' TODO: We should consider implementing a full FPToDouble(Float16)','line_number':397,'multiline':False]
['text':' conversion function (for performance reasons).','line_number':398,'multiline':False]
['text':' We can rely on implicit float to double conversion here.','line_number':400,'multiline':False]
['text':' Convert NaNs as the processor would:','line_number':415,'multiline':False]
['text':'  - The sign is propagated.','line_number':416,'multiline':False]
['text':'  - The payload (mantissa) is transferred entirely, except that the top','line_number':417,'multiline':False]
['text':'    bit is forced to '1', making the result a quiet NaN. The unused','line_number':418,'multiline':False]
['text':'    (low-order) payload bits are set to 0.','line_number':419,'multiline':False]
['text':' The unused low-order bits should be 0.','line_number':425,'multiline':False]
['text':' Force a quiet NaN.','line_number':426,'multiline':False]
['text':' All other inputs are preserved in a standard cast, because every value','line_number':435,'multiline':False]
['text':' representable using an IEEE-754 float is also representable using an','line_number':436,'multiline':False]
['text':' IEEE-754 double.','line_number':437,'multiline':False]
['text':' Only the FPTieEven rounding mode is implemented.','line_number':451,'multiline':False]
['text':' Convert NaNs as the processor would:','line_number':469,'multiline':False]
['text':'  - The sign is propagated.','line_number':470,'multiline':False]
['text':'  - The payload (mantissa) is transferred as much as possible, except','line_number':471,'multiline':False]
['text':'    that the top bit is forced to '1', making the result a quiet NaN.','line_number':472,'multiline':False]
['text':' Force a quiet NaN;','line_number':476,'multiline':False]
['text':' Convert float-to-half as the processor would, assuming that FPCR.FZ','line_number':488,'multiline':False]
['text':' (flush-to-zero) is not set.','line_number':489,'multiline':False]
['text':' Add the implicit '1' bit to the mantissa.','line_number':491,'multiline':False]
['text':' Only the FPTieEven rounding mode is implemented.','line_number':506,'multiline':False]
['text':' Convert NaNs as the processor would:','line_number':524,'multiline':False]
['text':'  - The sign is propagated.','line_number':525,'multiline':False]
['text':'  - The payload (mantissa) is transferred as much as possible, except','line_number':526,'multiline':False]
['text':'    that the top bit is forced to '1', making the result a quiet NaN.','line_number':527,'multiline':False]
['text':' Force a quiet NaN;','line_number':531,'multiline':False]
['text':' Convert double-to-half as the processor would, assuming that FPCR.FZ','line_number':542,'multiline':False]
['text':' (flush-to-zero) is not set.','line_number':543,'multiline':False]
['text':' Add the implicit '1' bit to the mantissa.','line_number':545,'multiline':False]
['text':' namespace vixl','line_number':555,'multiline':False]
