['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 * vim: set ts=8 sts=2 et sw=2 tw=80:
 *
 * Copyright 2016 Mozilla Foundation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ','line_number':1,'multiline':True]
['text':' JS::MaxStringLength','line_number':26,'multiline':False]
['text':' Misc helpers.','line_number':41,'multiline':False]
['text':' Function body validation.','line_number':173,'multiline':False]
['text':'typed','line_number':272,'multiline':True]
['text':'typed','line_number':277,'multiline':True]
['text':' ENABLE_WASM_SIMD','line_number':1013,'multiline':False]
['text':'isMem=','line_number':1032,'multiline':True]
['text':'isData=','line_number':1038,'multiline':True]
['text':'isMem=','line_number':1045,'multiline':True]
['text':'isMem=','line_number':1053,'multiline':True]
['text':'isData=','line_number':1058,'multiline':True]
['text':'isMem=','line_number':1063,'multiline':True]
['text':' Though thread ops can be used on nonshared memories, we make them','line_number':1171,'multiline':False]
['text':' unavailable if shared memory has been disabled in the prefs, for','line_number':1172,'multiline':False]
['text':' maximum predictability and safety and consistency with JS.','line_number':1173,'multiline':False]
['text':' Section macros.','line_number':1386,'multiline':False]
['text':' If there's a maximum, check it is in range.  The check to exclude','line_number':1763,'multiline':False]
['text':' initial > maximum is carried out by the DecodeLimits call above, so','line_number':1764,'multiline':False]
['text':' we don't repeat it here.','line_number':1765,'multiline':False]
['text':' The rest of the runtime expects table limits to be within a 32-bit range.','line_number':1776,'multiline':False]
['text':' isAsmJS ','line_number':1785,'multiline':True]
['text':' It is valid to store raw pointers in dupSet because moduleName and funcName','line_number':1942,'multiline':False]
['text':' become owned by env->imports on all non-error paths, outliving dupSet.','line_number':1943,'multiline':False]
['text':' The global data offsets will be filled in by ModuleGenerator::init.','line_number':2075,'multiline':False]
['text':' eager ','line_number':2311,'multiline':True]
['text':' canRefFunc ','line_number':2312,'multiline':True]
['text':' eager ','line_number':2445,'multiline':True]
['text':' canFuncRef ','line_number':2445,'multiline':True]
['text':' Too many bugs result from keeping this value zero.  For passive','line_number':2531,'multiline':False]
['text':' or declared segments, there really is no table index, and we should','line_number':2532,'multiline':False]
['text':' never touch the field.','line_number':2533,'multiline':False]
['text':' `ActiveWithTableIndex`, `Declared`, and `Passive` element segments encode','line_number':2542,'multiline':False]
['text':' the type or definition kind of the payload. `Active` element segments are','line_number':2543,'multiline':False]
['text':' restricted to MVP behavior, which assumes only function indices.','line_number':2544,'multiline':False]
['text':' Check constraints on the element type.','line_number':2571,'multiline':False]
['text':' Passive segment element types are checked when used with a','line_number':2585,'multiline':False]
['text':' `table.init` instruction.','line_number':2586,'multiline':False]
['text':' We assume that passive or declared segments may be applied to external','line_number':2606,'multiline':False]
['text':' tables. We can do slightly better: if there are no external tables in','line_number':2607,'multiline':False]
['text':' the module then we don't need to worry about passive or declared','line_number':2608,'multiline':False]
['text':' segments either. But this is a temporary restriction.','line_number':2609,'multiline':False]
['text':' For passive segments we should use InitExpr but we don't really want to','line_number':2616,'multiline':False]
['text':' generalize the ElemSection data structure yet, so instead read the','line_number':2617,'multiline':False]
['text':' required Ref.Func and End here.','line_number':2618,'multiline':False]
['text':' eager ','line_number':2675,'multiline':True]
['text':' canRefFunc ','line_number':2676,'multiline':True]
['text':' Only save the module name if the whole subsection validates.','line_number':2958,'multiline':False]
['text':' Names must refer to real functions and be given in ascending order.','line_number':2987,'multiline':False]
['text':' To encourage fully valid function names subsections; only save names if','line_number':3021,'multiline':False]
['text':' the entire subsection decoded correctly.','line_number':3022,'multiline':False]
['text':' Once started, custom sections do not report validation errors.','line_number':3039,'multiline':False]
['text':' Validate algorithm.','line_number':3082,'multiline':False]
