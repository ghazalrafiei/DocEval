['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 * vim: set ts=8 sts=2 et sw=2 tw=80:
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':1,'multiline':True]
['text':'
 * Check whether the given JSFunction is a self-hosted function whose
 * self-hosted name is the given name.
 ','line_number':17,'multiline':True]
['text':'
 * Returns the name of the cloned function's binding in the self-hosted global.
 *
 * This returns a non-null value only when this is a top level function
 * declaration in the self-hosted global.
 ','line_number':23,'multiline':True]
['text':'
 * Same as GetClonedSelfHostedFunctionName, but `fun` is guaranteed to be an
 * extended function.
 *
 * This function is supposed to be used off-thread, especially the JIT
 * compilation thread, that cannot access JSFunction.flags_, because of
 * a race condition.
 *
 * See Also: WrappedFunction.isExtended_
 ','line_number':31,'multiline':True]
['text':'
 * Uncloned self-hosted functions with `$` prefix are allocated as
 * extended function, to store the original name in `_SetCanonicalName`.
 ','line_number':45,'multiline':True]
['text':' Get the compile options used when compiling self hosted code. ','line_number':57,'multiline':True]
['text':'
 * Calls a self-hosted function by name.
 *
 * This function is only available in debug mode, because it always atomizes
 * its |name| parameter. Use the alternative function below in non-debug code.
 ','line_number':61,'multiline':True]
['text':'
 * Calls a self-hosted function by name.
 ','line_number':71,'multiline':True]
['text':' namespace js ','line_number':85,'multiline':True]
['text':' vm_SelfHosting_h_ ','line_number':87,'multiline':True]
