['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 * vim: set ts=8 sts=2 et sw=2 tw=80:
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':1,'multiline':True]
['text':'
 * Definitions for managing off-thread work using a process wide list of
 * worklist items and pool of threads. Worklist items are engine internal, and
 * are distinct from e.g. web workers.
 ','line_number':7,'multiline':True]
['text':' CompilationStencil, ExtensibleCompilationStencil, CompilationGCOutput','line_number':23,'multiline':False]
['text':' js::OffThreadPromiseTask','line_number':32,'multiline':False]
['text':' namespace jit','line_number':46,'multiline':False]
['text':' namespace wasm','line_number':50,'multiline':False]
['text':' The output is JSScript.','line_number':53,'multiline':False]
['text':' The output is CompilationStencil for script.','line_number':56,'multiline':False]
['text':' The output is module JSObject.','line_number':59,'multiline':False]
['text':' The output is JSScript.','line_number':62,'multiline':False]
['text':' The output is an array of JSScript.','line_number':65,'multiline':False]
['text':' namespace wasm','line_number':84,'multiline':False]
['text':' Per-process state for off thread work items.','line_number':86,'multiline':False]
['text':' A single tier-2 ModuleGenerator job spawns many compilation jobs, and we','line_number':92,'multiline':False]
['text':' do not want to allow more than one such ModuleGenerator to run at a time.','line_number':93,'multiline':False]
['text':' Number of CPUs to treat this machine as having when creating threads.','line_number':96,'multiline':False]
['text':' May be accessed without locking.','line_number':97,'multiline':False]
['text':' Number of threads to create. May be accessed without locking.','line_number':100,'multiline':False]
['text':' Thread stack quota to use when running tasks.','line_number':103,'multiline':False]
['text':' Count of running task by each threadType.','line_number':121,'multiline':False]
['text':' The lists below are all protected by |lock|.','line_number':130,'multiline':False]
['text':' Ion compilation worklist and finished jobs.','line_number':132,'multiline':False]
['text':' wasm worklists.','line_number':136,'multiline':False]
['text':' Count of finished Tier2Generator tasks.','line_number':141,'multiline':False]
['text':' Async tasks that, upon completion, are dispatched back to the JSContext's','line_number':144,'multiline':False]
['text':' owner thread via embedding callbacks instead of a finished list.','line_number':145,'multiline':False]
['text':' Script parsing/emitting worklist and finished jobs.','line_number':148,'multiline':False]
['text':' Parse tasks waiting for an atoms-zone GC to complete.','line_number':152,'multiline':False]
['text':' Source compression worklist of tasks that we do not yet know can start.','line_number':155,'multiline':False]
['text':' Source compression worklist of tasks that can start.','line_number':158,'multiline':False]
['text':' Finished source compression tasks.','line_number':161,'multiline':False]
['text':' GC tasks needing to be done in parallel.','line_number':164,'multiline':False]
['text':' Global list of JSContext for GlobalHelperThreadState to use.','line_number':168,'multiline':False]
['text':' Vector of running HelperThreadTask.','line_number':173,'multiline':False]
['text':' This is used to get the HelperThreadTask that are currently running.','line_number':174,'multiline':False]
['text':' Callback to dispatch a task to a thread pool. Set by','line_number':177,'multiline':False]
['text':' JS::SetHelperThreadTaskCallback. If this is not set the internal thread','line_number':178,'multiline':False]
['text':' pool is used.','line_number':179,'multiline':False]
['text':' The number of tasks dispatched to the thread pool that have not started','line_number':182,'multiline':False]
['text':' running yet.','line_number':183,'multiline':False]
['text':' Helper method for removing items from the vectors below while iterating','line_number':248,'multiline':False]
['text':' over them.','line_number':249,'multiline':False]
['text':' Self-moving is undefined behavior.','line_number':252,'multiline':False]
['text':' Used by a major GC to signal processing enqueued compression tasks.','line_number':376,'multiline':False]
['text':' isMaster ','line_number':431,'multiline':True]
['text':' Condition variable for notifiying the main thread that a helper task has','line_number':438,'multiline':False]
['text':' completed some work.','line_number':439,'multiline':False]
['text':' HelperThreads are shared between all runtimes in the process so explicitly','line_number':500,'multiline':False]
['text':' track which one we are associated with.','line_number':501,'multiline':False]
['text':' The global object to use while parsing.','line_number':504,'multiline':False]
['text':' Callback invoked off thread when the parse finishes.','line_number':507,'multiline':False]
['text':' Holds the final scripts between the invocation of the callback and the','line_number':511,'multiline':False]
['text':' point where FinishOffThreadScript is called, which will destroy the','line_number':512,'multiline':False]
['text':' ParseTask.','line_number':513,'multiline':False]
['text':' Holds the ScriptSourceObjects generated for the script compilation.','line_number':516,'multiline':False]
['text':' The input of the compilation.','line_number':519,'multiline':False]
['text':' The output of the decode task.','line_number':522,'multiline':False]
['text':' The output of the script/module compilation task.','line_number':525,'multiline':False]
['text':' Any errors or warnings produced during compilation. These are reported','line_number':530,'multiline':False]
['text':' when finishing the script.','line_number':531,'multiline':False]
['text':' It is not desirable to eagerly compress: if lazy functions that are tied to','line_number':578,'multiline':False]
['text':' the ScriptSource were to be executed relatively soon after parsing, they','line_number':579,'multiline':False]
['text':' would need to block on decompression, which hurts responsiveness.','line_number':580,'multiline':False]
['text':'','line_number':581,'multiline':False]
['text':' To this end, compression tasks are heap allocated and enqueued in a pending','line_number':582,'multiline':False]
['text':' list by ScriptSource::setSourceCopy. When a major GC occurs, we schedule','line_number':583,'multiline':False]
['text':' pending compression tasks and move the ones that are ready to be compressed','line_number':584,'multiline':False]
['text':' to the worklist. Currently, a compression task is considered ready 2 major','line_number':585,'multiline':False]
['text':' GCs after being enqueued. Completed tasks are handled during the sweeping','line_number':586,'multiline':False]
['text':' phase by AttachCompressedSourcesTask, which runs in parallel with other GC','line_number':587,'multiline':False]
['text':' sweeping tasks.','line_number':588,'multiline':False]
['text':' The runtime that the ScriptSource is associated with, in the sense that','line_number':593,'multiline':False]
['text':' it uses the runtime's immutable string cache.','line_number':594,'multiline':False]
['text':' The major GC number of the runtime when the task was enqueued.','line_number':597,'multiline':False]
['text':' The source to be compressed.','line_number':600,'multiline':False]
['text':' The resultant compressed string. If the compressed string is larger','line_number':603,'multiline':False]
['text':' than the original, or we OOM'd during compression, or nothing else','line_number':604,'multiline':False]
['text':' except the task is holding the ScriptSource alive when scheduled to','line_number':605,'multiline':False]
['text':' compress, this will remain None upon completion.','line_number':606,'multiline':False]
['text':' The majorGCNumber is used for scheduling tasks.','line_number':610,'multiline':False]
['text':' We wait 2 major GCs to start compressing, in order to avoid','line_number':619,'multiline':False]
['text':' immediate compression.','line_number':620,'multiline':False]
['text':' If the refcount is exactly 1, then nothing else is holding on to the','line_number':625,'multiline':False]
['text':' ScriptSource, so no reason to compress it and we should cancel the task.','line_number':626,'multiline':False]
['text':' The work algorithm, aware whether it's compressing one-byte UTF-8 source','line_number':640,'multiline':False]
['text':' text or UTF-16, for CharT either Utf8Unit or char16_t.  Invoked by','line_number':641,'multiline':False]
['text':' work() after doing a type-test of the ScriptSource*.','line_number':642,'multiline':False]
['text':' A PromiseHelperTask is an OffThreadPromiseTask that executes a single job on','line_number':647,'multiline':False]
['text':' a helper thread. Call js::StartOffThreadPromiseHelperTask to submit a','line_number':648,'multiline':False]
['text':' PromiseHelperTask for execution.','line_number':649,'multiline':False]
['text':'','line_number':650,'multiline':False]
['text':' Concrete subclasses must implement execute and OffThreadPromiseTask::resolve.','line_number':651,'multiline':False]
['text':' The helper thread will call execute() to do the main work. Then, the thread','line_number':652,'multiline':False]
['text':' of the JSContext used to create the PromiseHelperTask will call resolve() to','line_number':653,'multiline':False]
['text':' resolve promise according to those results.','line_number':654,'multiline':False]
['text':' To be called on a helper thread and implemented by the derived class.','line_number':659,'multiline':False]
['text':' May be called in the absence of helper threads or off-thread promise','line_number':662,'multiline':False]
['text':' support to synchronously execute and resolve a PromiseTask.','line_number':663,'multiline':False]
['text':'','line_number':664,'multiline':False]
['text':' Warning: After this function returns, 'this' can be deleted at any time, so','line_number':665,'multiline':False]
['text':' the caller must immediately return from the stream callback.','line_number':666,'multiline':False]
['text':' namespace js ','line_number':673,'multiline':True]
['text':' vm_HelperThreadState_h ','line_number':675,'multiline':True]
