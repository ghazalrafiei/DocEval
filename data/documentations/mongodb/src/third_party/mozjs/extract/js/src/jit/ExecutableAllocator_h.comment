['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 * vim: set ts=8 sts=2 et sw=2 tw=80:
 *
 * Copyright (C) 2008 Apple Inc. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY
 * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
 * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 ','line_number':1,'multiline':True]
['text':' for ptrdiff_t','line_number':34,'multiline':False]
['text':' namespace JS','line_number':44,'multiline':False]
['text':' These are reference-counted. A new one starts with a count of 1.','line_number':53,'multiline':False]
['text':' Reference count for automatic reclamation.','line_number':68,'multiline':False]
['text':' Flag that can be used by algorithms operating on pools.','line_number':71,'multiline':False]
['text':' Number of bytes currently allocated for each CodeKind.','line_number':74,'multiline':False]
['text':' Returns the number of bytes that are currently in use (referenced by','line_number':115,'multiline':False]
['text':' live JitCode objects).','line_number':116,'multiline':False]
['text':' alloc() returns a pointer to some memory, and also (by reference) a','line_number':144,'multiline':False]
['text':' pointer to reference-counted pool. The caller owns a reference to the','line_number':145,'multiline':False]
['text':' pool; i.e. alloc() increments the count before returning the object.','line_number':146,'multiline':False]
['text':' On OOM, this will return an Allocation where pages is nullptr.','line_number':158,'multiline':False]
['text':' These are strong references;  they keep pools alive.','line_number':196,'multiline':False]
['text':' All live pools are recorded here, just for stats purposes.  These are','line_number':202,'multiline':False]
['text':' weak references;  they don't keep pools alive.  When a pool is destroyed','line_number':203,'multiline':False]
['text':' its reference is removed from m_pools.','line_number':204,'multiline':False]
['text':' All pools, just for stats purposes.','line_number':208,'multiline':False]
['text':' namespace jit','line_number':211,'multiline':False]
['text':' namespace js','line_number':212,'multiline':False]
['text':' jit_ExecutableAllocator_h ','line_number':214,'multiline':True]
