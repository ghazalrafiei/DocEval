['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 * vim: set ts=8 sts=2 et sw=2 tw=80:
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':1,'multiline':True]
['text':' Implementation of the Intl object and its non-constructor properties. ','line_number':7,'multiline':True]
['text':' js::GetErrorMessage, JSMSG_*','line_number':32,'multiline':False]
['text':' js::PlainObject','line_number':45,'multiline':False]
['text':' js_*_str','line_number':47,'multiline':False]
['text':'******************* Intl *******************','line_number':63,'multiline':True]
['text':' If the first Weekday after Weekend is Sunday (1),','line_number':124,'multiline':False]
['text':' then the last Weekend day is Saturday (7).','line_number':125,'multiline':False]
['text':' Otherwise we'll just take the previous days number.','line_number':126,'multiline':False]
['text':' At the time this code was added, ICU apparently never behaves this','line_number':134,'multiline':False]
['text':' way, so just throw, so that users will report a bug and we can','line_number':135,'multiline':False]
['text':' decide what to do.','line_number':136,'multiline':False]
['text':' This part must be the final part with no trailing data.','line_number':246,'multiline':False]
['text':' This part must be the final part with no trailing data.','line_number':371,'multiline':False]
['text':' 1. Assert: locale is a string.','line_number':391,'multiline':False]
['text':' 2. Assert: style is a string.','line_number':397,'multiline':False]
['text':' 3. Assert: keys is an Array.','line_number':415,'multiline':False]
['text':' 4. Let result be ArrayCreate(0).','line_number':421,'multiline':False]
['text':' UDateTimePatternGenerator will be needed for translations of date and','line_number':439,'multiline':False]
['text':' time fields like "month", "week", "day" etc.','line_number':440,'multiline':False]
['text':' 5. For each element of keys,','line_number':449,'multiline':False]
['text':' 5.a. Perform an implementation dependent algorithm to map a key to a','line_number':464,'multiline':False]
['text':'      corresponding display name.','line_number':465,'multiline':False]
['text':' 5.b. Append the result string to result.','line_number':478,'multiline':False]
['text':' 6. Return result.','line_number':482,'multiline':False]
['text':' Return true if |locale| is the same locale as |otherLocale|.','line_number':519,'multiline':False]
['text':' Also return true if |locale| is the parent locale of |otherLocale|.','line_number':524,'multiline':False]
['text':' 9.2.2 BestAvailableLocale ( availableLocales, locale )','line_number':535,'multiline':False]
['text':' In the spec, [[availableLocales]] is formally a list of all available','line_number':539,'multiline':False]
['text':' locales. But in our implementation, it's an *incomplete* list, not','line_number':540,'multiline':False]
['text':' necessarily including the default locale (and all locales implied by it,','line_number':541,'multiline':False]
['text':' e.g. "de" implied by "de-CH"), if that locale isn't in every','line_number':542,'multiline':False]
['text':' [[availableLocales]] list (because that locale is supported through','line_number':543,'multiline':False]
['text':' fallback, e.g. "de-CH" supported through "de").','line_number':544,'multiline':False]
['text':'','line_number':545,'multiline':False]
['text':' If we're considering the default locale, augment the spec loop with','line_number':546,'multiline':False]
['text':' additional checks to also test whether the current prefix is a prefix of','line_number':547,'multiline':False]
['text':' the default locale.','line_number':548,'multiline':False]
['text':' |dist(chars, p.base())| is equal to |dist(p, rend)|, pick whichever you','line_number':557,'multiline':False]
['text':' find easier to reason about when using reserve iterators.','line_number':558,'multiline':False]
['text':' But always subtract one to convert from the reverse iterator result to','line_number':562,'multiline':False]
['text':' the correspoding forward iterator value, because reserve iterators point','line_number':563,'multiline':False]
['text':' to one element past the forward iterator value.','line_number':564,'multiline':False]
['text':' Step 1.','line_number':568,'multiline':False]
['text':' Step 2.','line_number':571,'multiline':False]
['text':' Step 2.a.','line_number':573,'multiline':False]
['text':' Step 2.b.','line_number':586,'multiline':False]
['text':' Step 2.c.','line_number':600,'multiline':False]
['text':' Step 2.d.','line_number':606,'multiline':False]
['text':' 9.2.2 BestAvailableLocale ( availableLocales, locale )','line_number':614,'multiline':False]
['text':'','line_number':615,'multiline':False]
['text':' Carries an additional third argument in our implementation to provide the','line_number':616,'multiline':False]
['text':' default locale. See the doc-comment in the header file.','line_number':617,'multiline':False]
['text':' The default locale must be in [[AvailableLocales]], and that list must','line_number':728,'multiline':False]
['text':' not contain any locales with Unicode extension sequences, so remove any','line_number':729,'multiline':False]
['text':' present in the candidate.','line_number':730,'multiline':False]
['text':' Certain old-style language tags lack a script code, but in current usage','line_number':743,'multiline':False]
['text':' they *would* include a script code. Map these over to modern forms.','line_number':744,'multiline':False]
['text':' 9.1 Internal slots of Service Constructors','line_number':759,'multiline':False]
['text':'','line_number':760,'multiline':False]
['text':' - [[AvailableLocales]] is a List [...]. The list must include the value','line_number':761,'multiline':False]
['text':'   returned by the DefaultLocale abstract operation (6.2.4), [...].','line_number':762,'multiline':False]
['text':'','line_number':763,'multiline':False]
['text':' That implies we must ignore any candidate which isn't supported by all Intl','line_number':764,'multiline':False]
['text':' service constructors.','line_number':765,'multiline':False]
['text':' Note: We don't test the supported locales of the remaining Intl service','line_number':780,'multiline':False]
['text':' constructors, because the set of supported locales is exactly equal to the','line_number':781,'multiline':False]
['text':' set of supported locales of Intl.DateTimeFormat.','line_number':782,'multiline':False]
['text':' Accept the candidate locale if it is supported by all Intl service','line_number':796,'multiline':False]
['text':' constructors.','line_number':797,'multiline':False]
['text':' Use the actually supported locale instead of the candidate locale. For','line_number':799,'multiline':False]
['text':' example when the candidate locale "en-US-posix" is supported through','line_number':800,'multiline':False]
['text':' "en-US", use "en-US" as the default locale.','line_number':801,'multiline':False]
['text':'','line_number':802,'multiline':False]
['text':' Also prefer the supported locale with more subtags. For example when','line_number':803,'multiline':False]
['text':' requesting "de-CH" and Intl.DateTimeFormat supports "de-CH", but','line_number':804,'multiline':False]
['text':' Intl.Collator only "de", still return "de-CH" as the result.','line_number':805,'multiline':False]
['text':' The |Intl| object is just a plain object with some "static" function','line_number':843,'multiline':False]
['text':' properties and some constructor properties.','line_number':844,'multiline':False]
['text':'*
 * Initializes the Intl Object and its standard built-in properties.
 * Spec: ECMAScript Internationalization API Specification, 8.0, 8.1
 ','line_number':848,'multiline':True]
['text':' Add the constructor properties.','line_number':854,'multiline':False]
