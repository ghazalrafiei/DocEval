['text':' Copyright 2014, ARM Limited','line_number':1,'multiline':False]
['text':' All rights reserved.','line_number':2,'multiline':False]
['text':'','line_number':3,'multiline':False]
['text':' Redistribution and use in source and binary forms, with or without','line_number':4,'multiline':False]
['text':' modification, are permitted provided that the following conditions are met:','line_number':5,'multiline':False]
['text':'','line_number':6,'multiline':False]
['text':'   * Redistributions of source code must retain the above copyright notice,','line_number':7,'multiline':False]
['text':'     this list of conditions and the following disclaimer.','line_number':8,'multiline':False]
['text':'   * Redistributions in binary form must reproduce the above copyright notice,','line_number':9,'multiline':False]
['text':'     this list of conditions and the following disclaimer in the documentation','line_number':10,'multiline':False]
['text':'     and/or other materials provided with the distribution.','line_number':11,'multiline':False]
['text':'   * Neither the name of ARM Limited nor the names of its contributors may be','line_number':12,'multiline':False]
['text':'     used to endorse or promote products derived from this software without','line_number':13,'multiline':False]
['text':'     specific prior written permission.','line_number':14,'multiline':False]
['text':'','line_number':15,'multiline':False]
['text':' THIS SOFTWARE IS PROVIDED BY ARM LIMITED AND CONTRIBUTORS "AS IS" AND ANY','line_number':16,'multiline':False]
['text':' EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED','line_number':17,'multiline':False]
['text':' WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE','line_number':18,'multiline':False]
['text':' DISCLAIMED. IN NO EVENT SHALL ARM LIMITED BE LIABLE FOR ANY DIRECT, INDIRECT,','line_number':19,'multiline':False]
['text':' INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT','line_number':20,'multiline':False]
['text':' LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,','line_number':21,'multiline':False]
['text':' OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF','line_number':22,'multiline':False]
['text':' LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING','line_number':23,'multiline':False]
['text':' NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,','line_number':24,'multiline':False]
['text':' EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.','line_number':25,'multiline':False]
['text':' List of commands supported by the debugger.','line_number':39,'multiline':False]
['text':' Debugger command lines are broken up in token of different type to make','line_number':48,'multiline':False]
['text':' processing easier later on.','line_number':49,'multiline':False]
['text':' Token type.','line_number':54,'multiline':False]
['text':' Token properties.','line_number':62,'multiline':False]
['text':' Tokens often hold one value.','line_number':72,'multiline':False]
['text':' Integer registers (X or W) and their aliases.','line_number':89,'multiline':False]
['text':' Format: wn or xn with 0 <= n < 32 or a name in the aliases list.','line_number':90,'multiline':False]
['text':' Floating point registers (D or S).','line_number':114,'multiline':False]
['text':' Format: sn or dn with 0 <= n < 32.','line_number':115,'multiline':False]
['text':' Non-register identifiers.','line_number':132,'multiline':False]
['text':' Format: Alphanumeric string starting with a letter.','line_number':133,'multiline':False]
['text':' 64-bit address literal.','line_number':155,'multiline':False]
['text':' Format: 0x... with up to 16 hexadecimal digits.','line_number':156,'multiline':False]
['text':' 64-bit decimal integer literal.','line_number':174,'multiline':False]
['text':' Format: n.','line_number':175,'multiline':False]
['text':' Literal describing how to print a chunk of data (up to 64 bits).','line_number':190,'multiline':False]
['text':' Format: .ln','line_number':191,'multiline':False]
['text':' where l (letter) is one of','line_number':192,'multiline':False]
['text':'  * x: hexadecimal','line_number':193,'multiline':False]
['text':'  * s: signed integer','line_number':194,'multiline':False]
['text':'  * u: unsigned integer','line_number':195,'multiline':False]
['text':'  * f: floating point','line_number':196,'multiline':False]
['text':'  * i: instruction','line_number':197,'multiline':False]
['text':' and n (size) is one of 8, 16, 32 and 64. n should be omitted for','line_number':198,'multiline':False]
['text':' instructions.','line_number':199,'multiline':False]
['text':' Tokens which don't fit any of the above.','line_number':241,'multiline':False]
['text':' All debugger commands must subclass DebugCommand and implement Run, Print','line_number':263,'multiline':False]
['text':' and Build. Commands must also define kHelp and kAliases.','line_number':264,'multiline':False]
['text':' Run the command on the given debugger. The command returns true if','line_number':272,'multiline':False]
['text':' execution should move to the next instruction.','line_number':273,'multiline':False]
['text':' For all commands below see their respective kHelp and kAliases in','line_number':287,'multiline':False]
['text':' debugger-a64.cc','line_number':288,'multiline':False]
['text':' Commands which name does not match any of the known commnand.','line_number':403,'multiline':False]
['text':' Commands which name match a known command but the syntax is invalid.','line_number':415,'multiline':False]
['text':' TODO(all): fix this for vector registers.','line_number':645,'multiline':False]
['text':' Read a command. A command will be at most kMaxDebugShellLine char long and','line_number':682,'multiline':False]
['text':' ends with '\n\0'.','line_number':683,'multiline':False]
['text':' TODO: Should this be a utility function?','line_number':684,'multiline':False]
['text':' Remove the newline from the end of the command.','line_number':707,'multiline':False]
['text':' Finish stepping first.','line_number':719,'multiline':False]
['text':' An error occurred.','line_number':731,'multiline':False]
['text':' The break request has now been handled, move to next instruction.','line_number':746,'multiline':False]
['text':' Make the shell point to the brk instruction.','line_number':759,'multiline':False]
['text':' Reset errors.','line_number':766,'multiline':False]
['text':' Overflow.','line_number':770,'multiline':False]
['text':' No digits were parsed.','line_number':775,'multiline':False]
['text':' Non-digit characters present at the end.','line_number':780,'multiline':False]
['text':' Reset errors.','line_number':791,'multiline':False]
['text':' Overflow, undeflow.','line_number':795,'multiline':False]
['text':' No digits were parsed.','line_number':800,'multiline':False]
['text':' Non-digit characters present at the end.','line_number':805,'multiline':False]
['text':' The order is important. For example Identifier::Tokenize would consider','line_number':819,'multiline':False]
['text':' any register to be a valid identifier.','line_number':820,'multiline':False]
['text':' Is it a X register or alias?','line_number':877,'multiline':False]
['text':' Is it a W register or alias?','line_number':884,'multiline':False]
['text':' Reset errors.','line_number':1027,'multiline':False]
['text':' Overflow, etc.','line_number':1031,'multiline':False]
['text':' No digits were parsed.','line_number':1036,'multiline':False]
['text':' There are unexpected (non-digit) characters after the number.','line_number':1041,'multiline':False]
['text':' 'Token.format'.','line_number':1119,'multiline':False]
['text':' Error while parsing the format, push the UnknownToken so an error','line_number':1126,'multiline':False]
['text':' can be accurately reported.','line_number':1127,'multiline':False]
['text':' step [1]','line_number':1237,'multiline':False]
['text':' step n','line_number':1241,'multiline':False]
['text':' disasm [10]','line_number':1260,'multiline':False]
['text':' disasm n','line_number':1264,'multiline':False]
['text':' TODO(all): Add support for instruction disassembly.','line_number':1314,'multiline':False]
['text':' If the target is an identifier there must be no format. This is checked','line_number':1358,'multiline':False]
['text':' in the switch statement below.','line_number':1359,'multiline':False]
['text':' mem addr[.x64] [10]','line_number':1440,'multiline':False]
['text':' mem addr.format [10]','line_number':1445,'multiline':False]
['text':' mem addr[.x64] n','line_number':1446,'multiline':False]
['text':' mem addr.format n','line_number':1461,'multiline':False]
['text':' namespace vixl','line_number':1533,'multiline':False]
['text':' JS_SIMULATOR_ARM64','line_number':1535,'multiline':False]
