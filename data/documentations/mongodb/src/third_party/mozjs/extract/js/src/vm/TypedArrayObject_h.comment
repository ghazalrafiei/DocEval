['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 * vim: set ts=8 sts=2 et sw=2 tw=80:
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':1,'multiline':True]
['text':' js::detail::TypedArrayLengthSlot','line_number':16,'multiline':False]
['text':' js::Scalar::Type','line_number':18,'multiline':False]
['text':'
 * TypedArrayObject
 *
 * The non-templated base class for the specific typed implementations.
 * This class holds all the member variables that are used by
 * the subclasses.
 ','line_number':39,'multiline':True]
['text':' Inline buffers.','line_number':54,'multiline':False]
['text':' Shared buffers.','line_number':59,'multiline':False]
['text':' For typed arrays which can store their data inline, the array buffer','line_number':83,'multiline':False]
['text':' object is created lazily.','line_number':84,'multiline':False]
['text':'
   * Copy all elements from this typed array to vp. vp must point to rooted
   * memory.
   ','line_number':132,'multiline':True]
['text':'
   * Maximum allowed byte length for any typed array.
   ','line_number':143,'multiline':True]
['text':' Initialization bits ','line_number':159,'multiline':True]
['text':' Accessors and functions ','line_number':166,'multiline':True]
['text':' In WebIDL terminology, a BufferSource is either an ArrayBuffer or a typed','line_number':209,'multiline':False]
['text':' array view. In either case, extract the dataPointer/byteLength.','line_number':210,'multiline':False]
['text':' ES2020 draft rev a5375bdad264c8aa264d9c44f57408087761069e','line_number':222,'multiline':False]
['text':' 7.1.16 CanonicalNumericIndexString','line_number':223,'multiline':False]
['text':'','line_number':224,'multiline':False]
['text':' Checks whether or not the string is a canonical numeric index string. If the','line_number':225,'multiline':False]
['text':' string is a canonical numeric index which is not representable as a uint64_t,','line_number':226,'multiline':False]
['text':' the returned index is UINT64_MAX.','line_number':227,'multiline':False]
['text':' A string |s| is a TypedArray index (or: canonical numeric index string) iff','line_number':233,'multiline':False]
['text':' |s| is "-0" or |SameValue(ToString(ToNumber(s)), s)| is true. So check for','line_number':234,'multiline':False]
['text':' any characters which can start the string representation of a number,','line_number':235,'multiline':False]
['text':' including "NaN" and "Infinity".','line_number':236,'multiline':False]
['text':'
 * Implements [[DefineOwnProperty]] for TypedArrays when the property
 * key is a TypedArray index.
 ','line_number':277,'multiline':True]
['text':' namespace js','line_number':312,'multiline':False]
['text':' vm_TypedArrayObject_h ','line_number':319,'multiline':True]
