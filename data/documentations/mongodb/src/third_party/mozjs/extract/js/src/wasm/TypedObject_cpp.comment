['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 * vim: set ts=8 sts=2 et sw=2 tw=80:
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':1,'multiline':True]
['text':' js::GetErrorMessage, JSMSG_*','line_number':17,'multiline':False]
['text':' js::Scalar::Type','line_number':19,'multiline':False]
['text':' js::PlainObject','line_number':25,'multiline':False]
['text':' WasmValueBox','line_number':32,'multiline':False]
['text':'**************************************************************************
 * Typed Prototypes
 *
 * Every type descriptor has an associated prototype. Instances of
 * that type descriptor use this as their prototype. Per the spec,
 * typed object prototypes cannot be mutated.
 ','line_number':50,'multiline':True]
['text':' addProperty','line_number':72,'multiline':False]
['text':' delProperty','line_number':73,'multiline':False]
['text':' enumerate','line_number':74,'multiline':False]
['text':' newEnumerate','line_number':75,'multiline':False]
['text':' resolve','line_number':76,'multiline':False]
['text':' mayResolve','line_number':77,'multiline':False]
['text':' finalize','line_number':78,'multiline':False]
['text':' call','line_number':79,'multiline':False]
['text':' hasInstance','line_number':80,'multiline':False]
['text':' construct','line_number':81,'multiline':False]
['text':' trace','line_number':82,'multiline':False]
['text':'*****************************************************************************
 * Typed objects
 ','line_number':134,'multiline':True]
['text':'/////////////////////////////////////////////////////////////////////////','line_number':179,'multiline':False]
['text':' Tracing instances','line_number':180,'multiline':False]
['text':' namespace','line_number':193,'multiline':False]
['text':'*****************************************************************************
 * Outline typed objects
 ','line_number':200,'multiline':True]
['text':'static','line_number':204,'multiline':True]
['text':'static','line_number':231,'multiline':True]
['text':'static','line_number':238,'multiline':True]
['text':'static','line_number':257,'multiline':True]
['text':' If possible, create an object with inline data.','line_number':263,'multiline':False]
['text':' Initialize the values to their defaults','line_number':275,'multiline':False]
['text':'static','line_number':281,'multiline':True]
['text':' Always create arrays outlined','line_number':284,'multiline':False]
['text':' Initialize the values to their defaults','line_number':291,'multiline':False]
['text':' static ','line_number':297,'multiline':True]
['text':' static ','line_number':302,'multiline':True]
['text':' static ','line_number':317,'multiline':True]
['text':' Special case for property 'length' that loads the length field at the','line_number':353,'multiline':False]
['text':' beginning of the data buffer','line_number':354,'multiline':False]
['text':' Normal case of indexed properties for loading array elements','line_number':363,'multiline':False]
['text':' static ','line_number':385,'multiline':True]
['text':' Temporary hack, (ref T) is not exposable to JS yet but some tests would','line_number':551,'multiline':False]
['text':' like to access it so we erase (ref T) with eqref when loading. This is','line_number':552,'multiline':False]
['text':' safe as (ref T) <: eqref and we're not in the writing case where we','line_number':553,'multiline':False]
['text':' would need to perform a type check.','line_number':554,'multiline':False]
['text':'*****************************************************************************
 * Inline typed objects
 ','line_number':584,'multiline':True]
['text':' static ','line_number':588,'multiline':True]
['text':' static ','line_number':610,'multiline':True]
['text':' static ','line_number':621,'multiline':True]
['text':'*****************************************************************************
 * Typed object classes
 ','line_number':624,'multiline':True]
['text':' lookupProperty','line_number':629,'multiline':False]
['text':' defineProperty','line_number':630,'multiline':False]
['text':' hasProperty','line_number':631,'multiline':False]
['text':' getProperty','line_number':632,'multiline':False]
['text':' setProperty','line_number':633,'multiline':False]
['text':' getOwnPropertyDescriptor','line_number':634,'multiline':False]
['text':' deleteProperty','line_number':635,'multiline':False]
['text':' getElements','line_number':636,'multiline':False]
['text':' funToString','line_number':637,'multiline':False]
['text':' addProperty ','line_number':642,'multiline':True]
['text':' delProperty ','line_number':643,'multiline':True]
['text':' enumerate   ','line_number':644,'multiline':True]
['text':' resolve     ','line_number':646,'multiline':True]
['text':' mayResolve  ','line_number':647,'multiline':True]
['text':' finalize    ','line_number':648,'multiline':True]
['text':' call        ','line_number':649,'multiline':True]
['text':' hasInstance ','line_number':650,'multiline':True]
['text':' construct   ','line_number':651,'multiline':True]
['text':' objectMovedOp ','line_number':655,'multiline':True]
['text':' static ','line_number':671,'multiline':True]
['text':' nDynamicSlots = ','line_number':681,'multiline':True]
