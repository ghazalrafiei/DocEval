['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 * vim: set ts=8 sts=2 et sw=2 tw=80:
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':1,'multiline':True]
['text':' js::jit::FlushICache','line_number':12,'multiline':False]
['text':' Check for some register aliases first.','line_number':19,'multiline':False]
['text':' This must sync with GetPushSizeInBytes just below and also with','line_number':49,'multiline':False]
['text':' MacroAssembler::PushRegsInMask.','line_number':50,'multiline':False]
['text':' See GetPushSizeInBytes.','line_number':60,'multiline':False]
['text':' Compute the size of the dump area for |s.ReduceSetForPush()|, as defined by','line_number':68,'multiline':False]
['text':' MacroAssembler::PushRegsInMask for this target.','line_number':69,'multiline':False]
['text':' PushRegsInMask pushes singles as if they were doubles.  Also we need to','line_number':79,'multiline':False]
['text':' remove singles or doubles which are also pushed as part of a vector','line_number':80,'multiline':False]
['text':' register.','line_number':81,'multiline':False]
['text':' The "+ 1) & ~1" is to take into account the alignment hole below the','line_number':84,'multiline':False]
['text':' double-reg dump area.  See MacroAssembler::PushRegsInMaskSizeInBytes.','line_number':85,'multiline':False]
['text':' See block comment in MacroAssembler.h for further required invariants.','line_number':91,'multiline':False]
['text':' For N in 0..31, if any of sN, dN or qN is a member of `s`, the returned set','line_number':96,'multiline':False]
['text':' will contain all of sN, dN and qN.','line_number':97,'multiline':False]
['text':' namespace jit','line_number':125,'multiline':False]
['text':' namespace js','line_number':126,'multiline':False]
