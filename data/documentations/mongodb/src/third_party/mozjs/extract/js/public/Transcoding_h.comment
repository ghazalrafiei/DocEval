['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*- ','line_number':1,'multiline':True]
['text':' This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':2,'multiline':True]
['text':'
 * Structures and functions for transcoding compiled scripts and functions to
 * and from memory.
 ','line_number':6,'multiline':True]
['text':' mozilla::Range','line_number':14,'multiline':False]
['text':' mozilla::Vector','line_number':15,'multiline':False]
['text':' size_t','line_number':17,'multiline':False]
['text':' uint8_t, uint32_t','line_number':18,'multiline':False]
['text':' Successful encoding / decoding.','line_number':41,'multiline':False]
['text':' A warning message, is set to the message out-param.','line_number':44,'multiline':False]
['text':' There is a pending exception on the context.','line_number':53,'multiline':False]
['text':' Align the bytecode offset for transcoding for the requirement.','line_number':69,'multiline':False]
['text':' Encode JSScript into the buffer.','line_number':87,'multiline':False]
['text':'','line_number':88,'multiline':False]
['text':' If the `buffer` isn't empty, the start of the `buffer` should meet','line_number':89,'multiline':False]
['text':' IsTranscodingBytecodeAligned, and the length should meet','line_number':90,'multiline':False]
['text':' IsTranscodingBytecodeOffsetAligned.','line_number':91,'multiline':False]
['text':'','line_number':92,'multiline':False]
['text':' NOTE: As long as IsTranscodingBytecodeOffsetAligned is met, that means','line_number':93,'multiline':False]
['text':'       there's JS::BytecodeOffsetAlignment+extra bytes in the buffer,','line_number':94,'multiline':False]
['text':'       IsTranscodingBytecodeAligned should be guaranteed to meet by','line_number':95,'multiline':False]
['text':'       malloc, used by MallocAllocPolicy in mozilla::Vector.','line_number':96,'multiline':False]
['text':' Decode JSScript from the buffer.','line_number':101,'multiline':False]
['text':'','line_number':102,'multiline':False]
['text':' The start of `buffer` and `cursorIndex` should meet','line_number':103,'multiline':False]
['text':' IsTranscodingBytecodeAligned and IsTranscodingBytecodeOffsetAligned.','line_number':104,'multiline':False]
['text':' (This should be handled while encoding).','line_number':105,'multiline':False]
['text':' Decode JSScript from the range.','line_number':111,'multiline':False]
['text':'','line_number':112,'multiline':False]
['text':' The start of `range` should meet IsTranscodingBytecodeAligned and','line_number':113,'multiline':False]
['text':' IsTranscodingBytecodeOffsetAligned.','line_number':114,'multiline':False]
['text':' (This should be handled while encoding).','line_number':115,'multiline':False]
['text':' If js::UseOffThreadParseGlobal is true, decode JSScript from the buffer.','line_number':120,'multiline':False]
['text':'','line_number':121,'multiline':False]
['text':' If js::UseOffThreadParseGlobal is false, decode CompilationStencil from the','line_number':122,'multiline':False]
['text':' buffer and instantiate JSScript from it.','line_number':123,'multiline':False]
['text':'','line_number':124,'multiline':False]
['text':' options.useOffThreadParseGlobal should match JS::SetUseOffThreadParseGlobal.','line_number':125,'multiline':False]
['text':'','line_number':126,'multiline':False]
['text':' The start of `buffer` and `cursorIndex` should meet','line_number':127,'multiline':False]
['text':' IsTranscodingBytecodeAligned and IsTranscodingBytecodeOffsetAligned.','line_number':128,'multiline':False]
['text':' (This should be handled while encoding).','line_number':129,'multiline':False]
['text':' If js::UseOffThreadParseGlobal is true, decode JSScript from the buffer.','line_number':135,'multiline':False]
['text':'','line_number':136,'multiline':False]
['text':' If js::UseOffThreadParseGlobal is false, decode CompilationStencil from the','line_number':137,'multiline':False]
['text':' buffer and instantiate JSScript from it.','line_number':138,'multiline':False]
['text':'','line_number':139,'multiline':False]
['text':' And then register an encoder on its script source, such that all functions','line_number':140,'multiline':False]
['text':' can be encoded as they are parsed. This strategy is used to avoid blocking','line_number':141,'multiline':False]
['text':' the main thread in a non-interruptible way.','line_number':142,'multiline':False]
['text':'','line_number':143,'multiline':False]
['text':' See also JS::FinishIncrementalEncoding.','line_number':144,'multiline':False]
['text':'','line_number':145,'multiline':False]
['text':' options.useOffThreadParseGlobal should match JS::SetUseOffThreadParseGlobal.','line_number':146,'multiline':False]
['text':'','line_number':147,'multiline':False]
['text':' The start of `buffer` and `cursorIndex` should meet','line_number':148,'multiline':False]
['text':' IsTranscodingBytecodeAligned and IsTranscodingBytecodeOffsetAligned.','line_number':149,'multiline':False]
['text':' (This should be handled while encoding).','line_number':150,'multiline':False]
['text':' Finish incremental encoding started by one of:','line_number':156,'multiline':False]
['text':'   * JS::CompileAndStartIncrementalEncoding','line_number':157,'multiline':False]
['text':'   * JS::FinishOffThreadScriptAndStartIncrementalEncoding','line_number':158,'multiline':False]
['text':'   * JS::DecodeScriptAndStartIncrementalEncoding','line_number':159,'multiline':False]
['text':'','line_number':160,'multiline':False]
['text':' The |script| argument of |FinishIncrementalEncoding| should be the top-level','line_number':161,'multiline':False]
['text':' script returned from one of the above.','line_number':162,'multiline':False]
['text':'','line_number':163,'multiline':False]
['text':' The |buffer| argument of |FinishIncrementalEncoding| is used for appending','line_number':164,'multiline':False]
['text':' the encoded bytecode into the buffer. If any of these functions failed, the','line_number':165,'multiline':False]
['text':' content of |buffer| would be undefined.','line_number':166,'multiline':False]
['text':'','line_number':167,'multiline':False]
['text':' If js::UseOffThreadParseGlobal is true, |buffer| contains encoded JSScript.','line_number':168,'multiline':False]
['text':'','line_number':169,'multiline':False]
['text':' If js::UseOffThreadParseGlobal is false, |buffer| contains encoded','line_number':170,'multiline':False]
['text':' CompilationStencil.','line_number':171,'multiline':False]
['text':'','line_number':172,'multiline':False]
['text':' If the `buffer` isn't empty, the start of the `buffer` should meet','line_number':173,'multiline':False]
['text':' IsTranscodingBytecodeAligned, and the length should meet','line_number':174,'multiline':False]
['text':' IsTranscodingBytecodeOffsetAligned.','line_number':175,'multiline':False]
['text':'','line_number':176,'multiline':False]
['text':' NOTE: As long as IsTranscodingBytecodeOffsetAligned is met, that means','line_number':177,'multiline':False]
['text':'       there's JS::BytecodeOffsetAlignment+extra bytes in the buffer,','line_number':178,'multiline':False]
['text':'       IsTranscodingBytecodeAligned should be guaranteed to meet by','line_number':179,'multiline':False]
['text':'       malloc, used by MallocAllocPolicy in mozilla::Vector.','line_number':180,'multiline':False]
['text':' Check if the compile options and script's flag matches.','line_number':185,'multiline':False]
['text':'','line_number':186,'multiline':False]
['text':' JS::DecodeScript* and JS::DecodeOffThreadScript internally check this.','line_number':187,'multiline':False]
['text':'','line_number':188,'multiline':False]
['text':' JS::DecodeMultiOffThreadScripts checks some options shared across multiple','line_number':189,'multiline':False]
['text':' scripts. Caller is responsible for checking each script with this API when','line_number':190,'multiline':False]
['text':' using the decoded script instead of compiling a new script wiht the given','line_number':191,'multiline':False]
['text':' options.','line_number':192,'multiline':False]
['text':' namespace JS','line_number':196,'multiline':False]
['text':' js_Transcoding_h ','line_number':198,'multiline':True]
