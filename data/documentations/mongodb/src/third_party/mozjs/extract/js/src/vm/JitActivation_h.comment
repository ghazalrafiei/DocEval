['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 * vim: set ts=8 sts=2 et sw=2 tw=80:
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':1,'multiline':True]
['text':' MOZ_ASSERT','line_number':10,'multiline':False]
['text':' mozilla::Atomic, mozilla::Relaxed','line_number':11,'multiline':False]
['text':' mozilla::Maybe','line_number':12,'multiline':False]
['text':' size_t','line_number':14,'multiline':False]
['text':' uint8_t, uint32_t, uintptr_t','line_number':15,'multiline':False]
['text':' JS_PUBLIC_API','line_number':17,'multiline':False]
['text':' CHECK_OSIPOINT_REGISTERS','line_number':19,'multiline':False]
['text':' js::jit::{JSJitFrameIter,RInstructionResults}','line_number':20,'multiline':False]
['text':' js::jit::RegisterDump','line_number':22,'multiline':False]
['text':' js::jit::RematerializedFrame','line_number':24,'multiline':False]
['text':' JS::GCVector','line_number':25,'multiline':False]
['text':' js::HashMap','line_number':26,'multiline':False]
['text':' js::UniquePtr','line_number':27,'multiline':False]
['text':' js::Activation','line_number':28,'multiline':False]
['text':' js::wasm::Trap','line_number':29,'multiline':False]
['text':' js::wasm::{ExitReason,RegisterState,WasmFrameIter}','line_number':30,'multiline':False]
['text':' js::wasm::{Frame,TrapData}','line_number':31,'multiline':False]
['text':' A JitActivation is used for frames running in Baseline or Ion.','line_number':42,'multiline':False]
['text':' If Baseline, Ion or Wasm code is on the stack, and has called into C++,','line_number':44,'multiline':False]
['text':' this will be aligned to an ExitFrame. The last bit indicates if it's a','line_number':45,'multiline':False]
['text':' wasm frame (bit set to wasm::ExitOrJitEntryFPTag) or not','line_number':46,'multiline':False]
['text':' (bit set to ~wasm::ExitOrJitEntryFPTag).','line_number':47,'multiline':False]
['text':' When hasWasmExitFP(), encodedWasmExitReason_ holds ExitReason.','line_number':50,'multiline':False]
['text':' Rematerialized Ion frames which has info copied out of snapshots. Maps','line_number':55,'multiline':False]
['text':' frame pointers (i.e. packedExitFP_) to a vector of rematerializations of','line_number':56,'multiline':False]
['text':' all inline frames associated with that frame.','line_number':57,'multiline':False]
['text':'','line_number':58,'multiline':False]
['text':' This table is lazily initialized by calling getRematerializedFrame.','line_number':59,'multiline':False]
['text':' This vector is used to remember the outcome of the evaluation of recover','line_number':66,'multiline':False]
['text':' instructions.','line_number':67,'multiline':False]
['text':'','line_number':68,'multiline':False]
['text':' RInstructionResults are appended into this vector when Snapshot values','line_number':69,'multiline':False]
['text':' have to be read, or when the evaluation has to run before some mutating','line_number':70,'multiline':False]
['text':' code.  Each RInstructionResults belongs to one frame which has to bailout','line_number':71,'multiline':False]
['text':' as soon as we get back to it.','line_number':72,'multiline':False]
['text':' If we are bailing out from Ion, then this field should be a non-null','line_number':76,'multiline':False]
['text':' pointer which references the BailoutFrameInfo used to walk the inner','line_number':77,'multiline':False]
['text':' frames. This field is used for all newly constructed JSJitFrameIters to','line_number':78,'multiline':False]
['text':' read the innermost frame information from this bailout data instead of','line_number':79,'multiline':False]
['text':' reading it from the stack.','line_number':80,'multiline':False]
['text':' When profiling is enabled, these fields will be updated to reflect the','line_number':83,'multiline':False]
['text':' last pushed frame for this activation, and if that frame has been','line_number':84,'multiline':False]
['text':' left for a call, the native code site of the call.','line_number':85,'multiline':False]
['text':' When wasm traps, the signal handler records some data for unwinding','line_number':92,'multiline':False]
['text':' purposes. Wasm code can't trap reentrantly.','line_number':93,'multiline':False]
['text':' Used to verify that live registers don't change between a VM call and','line_number':100,'multiline':False]
['text':' the OsiPoint that follows it. Protected to silence Clang warning.','line_number':101,'multiline':False]
['text':' All JitActivations can be profiled.','line_number':111,'multiline':False]
['text':' Look up a rematerialized frame keyed by the fp, rematerializing the','line_number':147,'multiline':False]
['text':' frame if one doesn't already exist. A frame can only be rematerialized','line_number':148,'multiline':False]
['text':' if an IonFrameIterator pointing to the nearest uninlined frame can be','line_number':149,'multiline':False]
['text':' provided, as values need to be read out of snapshots.','line_number':150,'multiline':False]
['text':'','line_number':151,'multiline':False]
['text':' The inlineDepth must be within bounds of the frame pointed to by iter.','line_number':152,'multiline':False]
['text':' Look up a rematerialized frame by the fp. If inlineDepth is out of','line_number':157,'multiline':False]
['text':' bounds of what has been rematerialized, nullptr is returned.','line_number':158,'multiline':False]
['text':' Remove all rematerialized frames associated with the fp top from the','line_number':162,'multiline':False]
['text':' Debugger.','line_number':163,'multiline':False]
['text':' Remove a previous rematerialization by fp.','line_number':170,'multiline':False]
['text':' Register the results of on Ion frame recovery.','line_number':175,'multiline':False]
['text':' Return the pointer to the Ion frame recovery, if it is already registered.','line_number':178,'multiline':False]
['text':' If an Ion frame recovery exists for the |fp| frame exists, then remove it','line_number':181,'multiline':False]
['text':' from the activation.','line_number':182,'multiline':False]
['text':' Return the bailout information if it is registered.','line_number':187,'multiline':False]
['text':' Register the bailout data when it is constructed.','line_number':190,'multiline':False]
['text':' Unregister the bailout data when the frame is reconstructed.','line_number':193,'multiline':False]
['text':' WebAssembly specific attributes.','line_number':208,'multiline':False]
['text':' A filtering of the ActivationIterator to only stop at JitActivations.','line_number':244,'multiline':False]
['text':' namespace jit','line_number':264,'multiline':False]
['text':' namespace js','line_number':266,'multiline':False]
['text':' vm_JitActivation_h','line_number':268,'multiline':False]
