['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 * vim: set ts=8 sts=2 et sw=2 tw=80:
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':1,'multiline':True]
['text':'{{{ check_macroassembler_style','line_number':15,'multiline':False]
['text':' ===============================================================','line_number':35,'multiline':False]
['text':' Logical instructions','line_number':36,'multiline':False]
['text':' ===============================================================','line_number':82,'multiline':False]
['text':' Swap instructions','line_number':83,'multiline':False]
['text':' ===============================================================','line_number':100,'multiline':False]
['text':' Arithmetic instructions','line_number':101,'multiline':False]
['text':' TODO: There's probably a better way to do this.','line_number':242,'multiline':False]
['text':' ===============================================================','line_number':288,'multiline':False]
['text':' Shift functions','line_number':289,'multiline':False]
['text':' ===============================================================','line_number':327,'multiline':False]
['text':' Rotation functions','line_number':328,'multiline':False]
['text':' ===============================================================','line_number':351,'multiline':False]
['text':' Bit counting functions','line_number':352,'multiline':False]
['text':' Equivalent to GCC output of mozilla::CountPopulation32()','line_number':363,'multiline':False]
['text':' ===============================================================','line_number':382,'multiline':False]
['text':' Branch functions','line_number':383,'multiline':False]
['text':' ========================================================================','line_number':1055,'multiline':False]
['text':' Memory access primitives.','line_number':1056,'multiline':False]
['text':' ===============================================================','line_number':1082,'multiline':False]
['text':' Clamping functions.','line_number':1083,'multiline':False]
['text':' If reg is < 0, then we want to clamp to 0.','line_number':1086,'multiline':False]
['text':' If reg is >= 255, then we want to clamp to 255.','line_number':1093,'multiline':False]
['text':'}}} check_macroassembler_style','line_number':1105,'multiline':False]
['text':' ===============================================================','line_number':1106,'multiline':False]
['text':' namespace jit','line_number':1108,'multiline':False]
['text':' namespace js','line_number':1109,'multiline':False]
['text':' jit_mips_shared_MacroAssembler_mips_shared_inl_h ','line_number':1111,'multiline':True]
