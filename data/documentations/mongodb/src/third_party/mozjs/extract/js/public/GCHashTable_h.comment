['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 * vim: set ts=8 sts=2 et sw=2 tw=80:
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':1,'multiline':True]
['text':' Define a reasonable default GC policy for GC-aware Maps.','line_number':22,'multiline':False]
['text':' A GCHashMap is a GC-aware HashMap, meaning that it has additional trace and','line_number':35,'multiline':False]
['text':' sweep methods that know how to visit all keys and values in the table.','line_number':36,'multiline':False]
['text':' HashMaps that contain GC pointers will generally want to use this GCHashMap','line_number':37,'multiline':False]
['text':' specialization instead of HashMap, because this conveniently supports tracing','line_number':38,'multiline':False]
['text':' keys and values, and cleaning up weak entries.','line_number':39,'multiline':False]
['text':'','line_number':40,'multiline':False]
['text':' GCHashMap::trace applies GCPolicy<T>::trace to each entry's key and value.','line_number':41,'multiline':False]
['text':' Most types of GC pointers already have appropriate specializations of','line_number':42,'multiline':False]
['text':' GCPolicy, so they should just work as keys and values. Any struct type with a','line_number':43,'multiline':False]
['text':' default constructor and trace and sweep functions should work as well. If you','line_number':44,'multiline':False]
['text':' need to define your own GCPolicy specialization, generic helpers can be found','line_number':45,'multiline':False]
['text':' in js/public/TracingAPI.h.','line_number':46,'multiline':False]
['text':'','line_number':47,'multiline':False]
['text':' The MapSweepPolicy template parameter controls how the table drops entries','line_number':48,'multiline':False]
['text':' when swept. GCHashMap::sweep applies MapSweepPolicy::needsSweep to each table','line_number':49,'multiline':False]
['text':' entry; if it returns true, the entry is dropped. The default MapSweepPolicy','line_number':50,'multiline':False]
['text':' drops the entry if either the key or value is about to be finalized,','line_number':51,'multiline':False]
['text':' according to its GCPolicy<T>::needsSweep method. (This default is almost','line_number':52,'multiline':False]
['text':' always fine: it's hard to imagine keeping such an entry around anyway.)','line_number':53,'multiline':False]
['text':'','line_number':54,'multiline':False]
['text':' Note that this HashMap only knows *how* to trace and sweep, but it does not','line_number':55,'multiline':False]
['text':' itself cause tracing or sweeping to be invoked. For tracing, it must be used','line_number':56,'multiline':False]
['text':' as Rooted<GCHashMap> or PersistentRooted<GCHashMap>, or barriered and traced','line_number':57,'multiline':False]
['text':' manually. For sweeping, currently it requires an explicit call to','line_number':58,'multiline':False]
['text':' <map>.sweep().','line_number':59,'multiline':False]
['text':' GCHashMap is movable','line_number':104,'multiline':False]
['text':' GCHashMap is not copyable or assignable','line_number':112,'multiline':False]
['text':' namespace JS','line_number':117,'multiline':False]
['text':' HashMap that supports rekeying.','line_number':121,'multiline':False]
['text':'','line_number':122,'multiline':False]
['text':' If your keys are pointers to something like JSObject that can be tenured or','line_number':123,'multiline':False]
['text':' compacted, prefer to use GCHashMap with MovableCellHasher, which takes','line_number':124,'multiline':False]
['text':' advantage of the Zone's stable id table to make rekeying unnecessary.','line_number':125,'multiline':False]
['text':' GCRekeyableHashMap is movable','line_number':163,'multiline':False]
['text':' namespace js','line_number':245,'multiline':False]
['text':' A GCHashSet is a HashSet with an additional trace method that knows','line_number':249,'multiline':False]
['text':' be traced to be kept alive will generally want to use this GCHashSet','line_number':250,'multiline':False]
['text':' specialization in lieu of HashSet.','line_number':251,'multiline':False]
['text':'','line_number':252,'multiline':False]
['text':' Most types of GC pointers can be traced with no extra infrastructure. For','line_number':253,'multiline':False]
['text':' structs and non-gc-pointer members, ensure that there is a specialization of','line_number':254,'multiline':False]
['text':' GCPolicy<T> with an appropriate trace method available to handle the custom','line_number':255,'multiline':False]
['text':' type. Generic helpers can be found in js/public/TracingAPI.h.','line_number':256,'multiline':False]
['text':'','line_number':257,'multiline':False]
['text':' Note that although this HashSet's trace will deal correctly with moved','line_number':258,'multiline':False]
['text':' elements, it does not itself know when to barrier or trace elements. To','line_number':259,'multiline':False]
['text':' function properly it must either be used with Rooted or barriered and traced','line_number':260,'multiline':False]
['text':' manually.','line_number':261,'multiline':False]
['text':' GCHashSet is movable','line_number':301,'multiline':False]
['text':' GCHashSet is not copyable or assignable','line_number':309,'multiline':False]
['text':' namespace JS','line_number':314,'multiline':False]
['text':' namespace js ','line_number':400,'multiline':True]
['text':' Specialize WeakCache for GCHashMap to provide a barriered map that does not','line_number':404,'multiline':False]
['text':' need to be swept immediately.','line_number':405,'multiline':False]
['text':' Create an Enum and sweep the table entries.','line_number':434,'multiline':False]
['text':' Potentially take a lock while the Enum's destructor is called as this can','line_number':439,'multiline':False]
['text':' rehash/resize the table and access the store buffer.','line_number':440,'multiline':False]
['text':' We shouldn't update here.','line_number':465,'multiline':False]
['text':' We shouldn't update here.','line_number':466,'multiline':False]
['text':' This operation is not allowed while barriers are in place as we','line_number':499,'multiline':False]
['text':' may also need to enumerate the set for sweeping.','line_number':500,'multiline':False]
['text':' This operation is not currently allowed while barriers are in place','line_number':526,'multiline':False]
['text':' as it would require iterating the map and the caller expects a','line_number':527,'multiline':False]
['text':' constant time operation.','line_number':528,'multiline':False]
['text':' This operation is not currently allowed while barriers are in place','line_number':534,'multiline':False]
['text':' as it would require iterating the set and the caller expects a','line_number':535,'multiline':False]
['text':' constant time operation.','line_number':536,'multiline':False]
['text':' This operation is not currently allowed while barriers are in place','line_number':553,'multiline':False]
['text':' since it doesn't make sense to clear a cache while it is being swept.','line_number':554,'multiline':False]
['text':' This operation is not currently allowed while barriers are in place','line_number':560,'multiline':False]
['text':' since it doesn't make sense to clear a cache while it is being swept.','line_number':561,'multiline':False]
['text':' This currently supports removing entries during incremental','line_number':567,'multiline':False]
['text':' sweeping. If we allow these tables to be swept incrementally this may','line_number':568,'multiline':False]
['text':' no longer be possible.','line_number':569,'multiline':False]
['text':' Specialize WeakCache for GCHashSet to provide a barriered set that does not','line_number':602,'multiline':False]
['text':' need to be swept immediately.','line_number':603,'multiline':False]
['text':' Create an Enum and sweep the table entries. It's not necessary to take','line_number':630,'multiline':False]
['text':' the store buffer lock yet.','line_number':631,'multiline':False]
['text':' Destroy the Enum, potentially rehashing or resizing the table. Since this','line_number':636,'multiline':False]
['text':' can access the store buffer, we need to take a lock for this if we're','line_number':637,'multiline':False]
['text':' called off main thread.','line_number':638,'multiline':False]
['text':' We shouldn't update here.','line_number':662,'multiline':False]
['text':' This operation is not allowed while barriers are in place as we','line_number':695,'multiline':False]
['text':' may also need to enumerate the set for sweeping.','line_number':696,'multiline':False]
['text':' This operation is not currently allowed while barriers are in place','line_number':722,'multiline':False]
['text':' as it would require iterating the set and the caller expects a','line_number':723,'multiline':False]
['text':' constant time operation.','line_number':724,'multiline':False]
['text':' This operation is not currently allowed while barriers are in place','line_number':730,'multiline':False]
['text':' as it would require iterating the set and the caller expects a','line_number':731,'multiline':False]
['text':' constant time operation.','line_number':732,'multiline':False]
['text':' This operation is not currently allowed while barriers are in place','line_number':749,'multiline':False]
['text':' since it doesn't make sense to clear a cache while it is being swept.','line_number':750,'multiline':False]
['text':' This operation is not currently allowed while barriers are in place','line_number':756,'multiline':False]
['text':' since it doesn't make sense to clear a cache while it is being swept.','line_number':757,'multiline':False]
['text':' This currently supports removing entries during incremental','line_number':763,'multiline':False]
['text':' sweeping. If we allow these tables to be swept incrementally this may','line_number':764,'multiline':False]
['text':' no longer be possible.','line_number':765,'multiline':False]
['text':' namespace JS','line_number':807,'multiline':False]
['text':' GCHashTable_h ','line_number':809,'multiline':True]
