['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 * vim: set ts=8 sts=2 et sw=2 tw=80:
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':1,'multiline':True]
['text':' JS_NewDataView','line_number':25,'multiline':False]
['text':' js::GetErrorMessage, JSMSG_*','line_number':26,'multiline':False]
['text':' bytesPerElement = ','line_number':63,'multiline':True]
['text':' ES2017 draft rev 931261ecef9b047b14daacf82884134da48dfe0f','line_number':70,'multiline':False]
['text':' 24.3.2.1 DataView (extracted part of the main algorithm)','line_number':71,'multiline':False]
['text':' Step 3.','line_number':77,'multiline':False]
['text':' Step 4.','line_number':86,'multiline':False]
['text':' Step 5.','line_number':92,'multiline':False]
['text':' Step 6.','line_number':99,'multiline':False]
['text':' Step 7.','line_number':102,'multiline':False]
['text':' Step 8.a','line_number':110,'multiline':False]
['text':' Step 9.a.','line_number':113,'multiline':False]
['text':' Step 9.b.','line_number':122,'multiline':False]
['text':' Create a DataView object in another compartment.','line_number':163,'multiline':False]
['text':'','line_number':164,'multiline':False]
['text':' ES6 supports creating a DataView in global A (using global A's DataView','line_number':165,'multiline':False]
['text':' constructor) backed by an ArrayBuffer created in global B.','line_number':166,'multiline':False]
['text':'','line_number':167,'multiline':False]
['text':' Our DataViewObject implementation doesn't support a DataView in','line_number':168,'multiline':False]
['text':' compartment A backed by an ArrayBuffer in compartment B. So in this case,','line_number':169,'multiline':False]
['text':' we create the DataView in B (!) and return a cross-compartment wrapper.','line_number':170,'multiline':False]
['text':'','line_number':171,'multiline':False]
['text':' Extra twist: the spec says the new DataView's [[Prototype]] must be','line_number':172,'multiline':False]
['text':' A's DataView.prototype. So even though we're creating the DataView in B,','line_number':173,'multiline':False]
['text':' its [[Prototype]] must be (a cross-compartment wrapper for) the','line_number':174,'multiline':False]
['text':' DataView.prototype in A.','line_number':175,'multiline':False]
['text':' NB: This entails the IsArrayBuffer check','line_number':187,'multiline':False]
['text':' Make sure to get the [[Prototype]] for the created view from this','line_number':195,'multiline':False]
['text':' compartment.','line_number':196,'multiline':False]
['text':' mozilla::NativeEndian doesn't support int8_t/uint8_t types.','line_number':278,'multiline':False]
['text':' https://tc39.github.io/ecma262/#sec-getviewvalue','line_number':341,'multiline':False]
['text':' GetViewValue ( view, requestIndex, isLittleEndian, type )','line_number':342,'multiline':False]
['text':' static ','line_number':344,'multiline':True]
['text':' Step 1. done by the caller','line_number':347,'multiline':False]
['text':' Step 2. unnecessary assert','line_number':348,'multiline':False]
['text':' Step 3.','line_number':350,'multiline':False]
['text':' Step 4.','line_number':356,'multiline':False]
['text':' Steps 5-6.','line_number':359,'multiline':False]
['text':' Steps 7-10.','line_number':366,'multiline':False]
['text':' Steps 11-12.','line_number':373,'multiline':False]
['text':' https://tc39.github.io/ecma262/#sec-setviewvalue','line_number':436,'multiline':False]
['text':' SetViewValue ( view, requestIndex, isLittleEndian, type, value )','line_number':437,'multiline':False]
['text':' static ','line_number':439,'multiline':True]
['text':' Step 1. done by the caller','line_number':442,'multiline':False]
['text':' Step 2. unnecessary assert','line_number':443,'multiline':False]
['text':' Step 3.','line_number':445,'multiline':False]
['text':' Steps 4-5. Call ToBigInt(value) or ToNumber(value) depending on the type.','line_number':451,'multiline':False]
['text':' See the comment in ElementSpecific::doubleToNative.','line_number':457,'multiline':False]
['text':' Step 6.','line_number':462,'multiline':False]
['text':' Steps 7-8.','line_number':465,'multiline':False]
['text':' Steps 9-12.','line_number':472,'multiline':False]
['text':' Steps 13-14.','line_number':479,'multiline':False]
['text':' BigInt proposal 7.26','line_number':609,'multiline':False]
['text':' DataView.prototype.getBigInt64 ( byteOffset [ , littleEndian ] )','line_number':610,'multiline':False]
['text':' BigInt proposal 7.27','line_number':635,'multiline':False]
['text':' DataView.prototype.getBigUint64 ( byteOffset [ , littleEndian ] )','line_number':636,'multiline':False]
['text':' BigInt proposal 7.28','line_number':809,'multiline':False]
['text':' DataView.prototype.setBigInt64 ( byteOffset, value [ , littleEndian ] )','line_number':810,'multiline':False]
['text':' BigInt proposal 7.29','line_number':829,'multiline':False]
['text':' DataView.prototype.setBigUint64 ( byteOffset, value [ , littleEndian ] )','line_number':830,'multiline':False]
['text':' Step 6.','line_number':901,'multiline':False]
['text':' Step 7.','line_number':908,'multiline':False]
['text':' Step 6.','line_number':922,'multiline':False]
['text':' Step 7.','line_number':929,'multiline':False]
['text':' addProperty','line_number':940,'multiline':False]
['text':' delProperty','line_number':941,'multiline':False]
['text':' enumerate','line_number':942,'multiline':False]
['text':' newEnumerate','line_number':943,'multiline':False]
['text':' resolve','line_number':944,'multiline':False]
['text':' mayResolve','line_number':945,'multiline':False]
['text':' finalize','line_number':946,'multiline':False]
['text':' call','line_number':947,'multiline':False]
['text':' hasInstance','line_number':948,'multiline':False]
['text':' construct','line_number':949,'multiline':False]
['text':' trace','line_number':950,'multiline':False]
