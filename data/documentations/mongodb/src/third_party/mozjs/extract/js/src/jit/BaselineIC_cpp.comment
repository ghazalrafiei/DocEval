['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 * vim: set ts=8 sts=2 et sw=2 tw=80:
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':1,'multiline':True]
['text':' JSMSG_*','line_number':40,'multiline':False]
['text':' Class used to emit all Baseline IC fallback code when initializing the','line_number':73,'multiline':False]
['text':' JitRuntime.','line_number':74,'multiline':False]
['text':' Push a payload specialized per compiler needed to execute stubs.','line_number':104,'multiline':False]
['text':' Emits a tail call to a VMFunction wrapper.','line_number':108,'multiline':False]
['text':' Emits a normal (non-tail) call to a VMFunction wrapper.','line_number':115,'multiline':False]
['text':' A stub frame is used when a stub wants to call into the VM without','line_number':121,'multiline':False]
['text':' performing a tail call. This is required for the return address','line_number':122,'multiline':False]
['text':' to pc mapping to work.','line_number':123,'multiline':False]
['text':' JS_JITSPEW','line_number':190,'multiline':False]
['text':' Trace CacheIR stubs.','line_number':195,'multiline':False]
['text':' Fallback stubs use runtime-wide trampoline code we don't need to trace.','line_number':201,'multiline':False]
['text':' constexpr table mapping JSOp to BaselineICFallbackKind. Each value in the','line_number':205,'multiline':False]
['text':' table is either a fallback kind or a sentinel value (NoICValue) indicating','line_number':206,'multiline':False]
['text':' the JSOp is not a JOF_IC op.','line_number':207,'multiline':False]
['text':' Index of the next ICEntry to initialize.','line_number':351,'multiline':False]
['text':' For JOF_IC ops: initialize ICEntries and fallback stubs.','line_number':357,'multiline':False]
['text':' Assert the frontend stored the correct IC index in jump target ops.','line_number':361,'multiline':False]
['text':' Initialize the ICEntry and ICFallbackStub.','line_number':378,'multiline':False]
['text':' Assert all ICEntries have been initialized.','line_number':387,'multiline':False]
['text':' When we enter a baseline fallback stub, if a Warp compilation','line_number':408,'multiline':False]
['text':' exists that transpiled that IC, we notify that compilation. This','line_number':409,'multiline':False]
['text':' helps the bailout code tell whether a bailing instruction hoisted','line_number':410,'multiline':False]
['text':' by LICM would have been executed anyway.','line_number':411,'multiline':False]
['text':' This helper handles ICState updates/transitions while attaching CacheIR','line_number':441,'multiline':False]
['text':' stubs.','line_number':442,'multiline':False]
['text':' We are removing edges from ICStub to gcthings. Perform a barrier to let the','line_number':488,'multiline':False]
['text':' GC know about those edges.','line_number':489,'multiline':False]
['text':' Poison stub code to ensure we don't call this stub again. However, if','line_number':493,'multiline':False]
['text':' this stub can make calls, a pointer to it may be stored in a stub frame','line_number':494,'multiline':False]
['text':' on the stack, so we can't touch the stubCode_ or GC will crash when','line_number':495,'multiline':False]
['text':' tracing this pointer.','line_number':496,'multiline':False]
['text':' prev = ','line_number':506,'multiline':True]
['text':' The first value contains the return addres,','line_number':514,'multiline':False]
['text':' which we pull into ICTailCallReg for tail calls.','line_number':515,'multiline':False]
['text':' |framePushed| isn't tracked precisely in ICStubs, so simply assume it to','line_number':578,'multiline':False]
['text':' be STUB_FRAME_SIZE so that assertions don't fail in leaveStubFrame.','line_number':579,'multiline':False]
['text':' Calls into ion have this extra.','line_number':592,'multiline':False]
['text':'','line_number':614,'multiline':False]
['text':' ToBool_Fallback','line_number':615,'multiline':False]
['text':'','line_number':616,'multiline':False]
['text':' Restore the tail call register.','line_number':635,'multiline':False]
['text':' Push arguments.','line_number':638,'multiline':False]
['text':'','line_number':648,'multiline':False]
['text':' GetElem_Fallback','line_number':649,'multiline':False]
['text':'','line_number':650,'multiline':False]
['text':' |lhs| is [[HomeObject]].[[Prototype]] which must be Object','line_number':692,'multiline':False]
['text':' Restore the tail call register.','line_number':700,'multiline':False]
['text':' Super property getters use a |this| that differs from base object','line_number':703,'multiline':False]
['text':' State: receiver in R0, index in R1, obj on the stack','line_number':705,'multiline':False]
['text':' Ensure stack is fully synced for the expression decompiler.','line_number':707,'multiline':False]
['text':' We need: receiver, index, obj','line_number':708,'multiline':False]
['text':' Push arguments.','line_number':713,'multiline':False]
['text':' Receiver','line_number':714,'multiline':False]
['text':' Index','line_number':715,'multiline':False]
['text':' Obj','line_number':716,'multiline':False]
['text':' Ensure stack is fully synced for the expression decompiler.','line_number':727,'multiline':False]
['text':' Push arguments.','line_number':731,'multiline':False]
['text':' This is the resume point used when bailout rewrites call stack to undo','line_number':744,'multiline':False]
['text':' Ion inlined frames. The return address pushed onto reconstructed stack','line_number':745,'multiline':False]
['text':' will point here.','line_number':746,'multiline':False]
['text':' hasReceiver = ','line_number':763,'multiline':True]
['text':' hasReceiver = ','line_number':767,'multiline':True]
['text':' We cannot attach a stub if the operation executed after the stub','line_number':797,'multiline':False]
['text':' is attached may throw.','line_number':798,'multiline':False]
['text':' Don't try to attach stubs that wish to be hidden. We don't know how to','line_number':848,'multiline':False]
['text':' have different enumerability in the stubs for the moment.','line_number':849,'multiline':False]
['text':' Overwrite the object on the stack (pushed for the decompiler) with the rhs.','line_number':854,'multiline':False]
['text':' The SetObjectElement call might have entered this IC recursively, so try','line_number':862,'multiline':False]
['text':' to transition.','line_number':863,'multiline':False]
['text':' State: R0: object, R1: index, stack: rhs.','line_number':905,'multiline':False]
['text':' For the decompiler, the stack has to be: object, index, rhs,','line_number':906,'multiline':False]
['text':' so we push the index, then overwrite the rhs Value with R0','line_number':907,'multiline':False]
['text':' and push the rhs value.','line_number':908,'multiline':False]
['text':' Push arguments.','line_number':914,'multiline':False]
['text':' RHS','line_number':915,'multiline':False]
['text':' Push index. On x86 and ARM two push instructions are emitted so use a','line_number':917,'multiline':False]
['text':' separate register to store the old stack pointer.','line_number':918,'multiline':False]
['text':' Object.','line_number':921,'multiline':False]
['text':' Push pointer to stack values, so that the stub can overwrite the object','line_number':923,'multiline':False]
['text':' (pushed for the decompiler) with the rhs.','line_number':924,'multiline':False]
['text':'','line_number':937,'multiline':False]
['text':' In_Fallback','line_number':938,'multiline':False]
['text':'','line_number':939,'multiline':False]
['text':' Sync for the decompiler.','line_number':969,'multiline':False]
['text':' Push arguments.','line_number':973,'multiline':False]
['text':'','line_number':984,'multiline':False]
['text':' HasOwn_Fallback','line_number':985,'multiline':False]
['text':'','line_number':986,'multiline':False]
['text':' Sync for the decompiler.','line_number':1010,'multiline':False]
['text':' Push arguments.','line_number':1014,'multiline':False]
['text':'','line_number':1025,'multiline':False]
['text':' CheckPrivate_Fallback','line_number':1026,'multiline':False]
['text':'','line_number':1027,'multiline':False]
['text':' Sync for the decompiler.','line_number':1058,'multiline':False]
['text':' Push arguments.','line_number':1062,'multiline':False]
['text':'','line_number':1073,'multiline':False]
['text':' GetName_Fallback','line_number':1074,'multiline':False]
['text':'','line_number':1075,'multiline':False]
['text':'','line_number':1123,'multiline':False]
['text':' BindName_Fallback','line_number':1124,'multiline':False]
['text':'','line_number':1125,'multiline':False]
['text':'','line_number':1167,'multiline':False]
['text':' GetIntrinsic_Fallback','line_number':1168,'multiline':False]
['text':'','line_number':1169,'multiline':False]
['text':'','line_number':1203,'multiline':False]
['text':' GetProp_Fallback','line_number':1204,'multiline':False]
['text':'','line_number':1205,'multiline':False]
['text':' |val| is [[HomeObject]].[[Prototype]] which must be Object','line_number':1258,'multiline':False]
['text':' Super property getters use a |this| that differs from base object','line_number':1272,'multiline':False]
['text':' Push arguments.','line_number':1274,'multiline':False]
['text':' Ensure stack is fully synced for the expression decompiler.','line_number':1286,'multiline':False]
['text':' Push arguments.','line_number':1289,'multiline':False]
['text':' This is the resume point used when bailout rewrites call stack to undo','line_number':1301,'multiline':False]
['text':' Ion inlined frames. The return address pushed onto reconstructed stack','line_number':1302,'multiline':False]
['text':' will point here.','line_number':1303,'multiline':False]
['text':' hasReceiver = ','line_number':1320,'multiline':True]
['text':' hasReceiver = ','line_number':1324,'multiline':True]
['text':'','line_number':1327,'multiline':False]
['text':' SetProp_Fallback','line_number':1328,'multiline':False]
['text':'','line_number':1329,'multiline':False]
['text':' Overwrite the LHS on the stack (pushed for the decompiler) with the RHS.','line_number':1421,'multiline':False]
['text':' The SetProperty call might have entered this IC recursively, so try','line_number':1429,'multiline':False]
['text':' to transition.','line_number':1430,'multiline':False]
['text':' Ensure stack is fully synced for the expression decompiler.','line_number':1474,'multiline':False]
['text':' Overwrite the RHS value on top of the stack with the object, then push','line_number':1475,'multiline':False]
['text':' the RHS in R1 on top of that.','line_number':1476,'multiline':False]
['text':' Push arguments.','line_number':1480,'multiline':False]
['text':' Push pointer to stack values, so that the stub can overwrite the object','line_number':1484,'multiline':False]
['text':' (pushed for the decompiler) with the RHS.','line_number':1485,'multiline':False]
['text':' This is the resume point used when bailout rewrites call stack to undo','line_number':1499,'multiline':False]
['text':' Ion inlined frames. The return address pushed onto reconstructed stack','line_number':1500,'multiline':False]
['text':' will point here.','line_number':1501,'multiline':False]
['text':'','line_number':1512,'multiline':False]
['text':' Call_Fallback','line_number':1513,'multiline':False]
['text':'','line_number':1514,'multiline':False]
['text':' Ensure vp array is rooted - we may GC in here.','line_number':1530,'multiline':False]
['text':' Transition stub state to megamorphic or generic if warranted.','line_number':1539,'multiline':False]
['text':' Only bother to try optimizing JSOp::Call with CacheIR if the chain is still','line_number':1545,'multiline':False]
['text':' allowed to attach stubs.','line_number':1546,'multiline':False]
['text':' Ensure vp array is rooted - we may GC in here.','line_number':1617,'multiline':False]
['text':' Transition stub state to megamorphic or generic if warranted.','line_number':1625,'multiline':False]
['text':' Try attaching a call stub.','line_number':1628,'multiline':False]
['text':' Try CacheIR first:','line_number':1632,'multiline':False]
['text':' argPtr initially points to the last argument.','line_number':1674,'multiline':False]
['text':' Skip 4 pointers pushed on top of the arguments: the frame descriptor,','line_number':1678,'multiline':False]
['text':' return address, old frame pointer and stub reg.','line_number':1679,'multiline':False]
['text':' We have to push |this|, callee, new.target (if constructing) and argc','line_number':1682,'multiline':False]
['text':' arguments. Handle the number of Values we know statically first.','line_number':1683,'multiline':False]
['text':' If there are no arguments we're done.','line_number':1691,'multiline':False]
['text':' Push argc Values.','line_number':1695,'multiline':False]
['text':' Values are on the stack left-to-right. Calling convention wants them','line_number':1713,'multiline':False]
['text':' right-to-left so duplicate them on the stack in reverse order.','line_number':1714,'multiline':False]
['text':' |this| and callee are pushed last.','line_number':1715,'multiline':False]
['text':' Push a stub frame so that we can perform a non-tail call.','line_number':1720,'multiline':False]
['text':' Use BaselineFrameReg instead of BaselineStackReg, because','line_number':1723,'multiline':False]
['text':' BaselineFrameReg and BaselineStackReg hold the same value just after','line_number':1724,'multiline':False]
['text':' calling enterStubFrame.','line_number':1725,'multiline':False]
['text':' newTarget','line_number':1727,'multiline':False]
['text':' array','line_number':1734,'multiline':False]
['text':' this','line_number':1739,'multiline':False]
['text':' callee','line_number':1744,'multiline':False]
['text':' SpreadCall is not yet supported in Ion, so do not generate asmcode for','line_number':1763,'multiline':False]
['text':' bailout.','line_number':1764,'multiline':False]
['text':' Push a stub frame so that we can perform a non-tail call.','line_number':1768,'multiline':False]
['text':' argc.','line_number':1771,'multiline':False]
['text':' This is the resume point used when bailout rewrites call stack to undo','line_number':1790,'multiline':False]
['text':' Ion inlined frames. The return address pushed onto reconstructed stack','line_number':1791,'multiline':False]
['text':' will point here.','line_number':1792,'multiline':False]
['text':' Load passed-in ThisV into R1 just in case it's needed.  Need to do this','line_number':1803,'multiline':False]
['text':' before we leave the stub frame since that info will be lost.','line_number':1804,'multiline':False]
['text':' Current stack:  [...., ThisV, ActualArgc, CalleeToken, Descriptor ]','line_number':1805,'multiline':False]
['text':' If this is a |constructing| call, if the callee returns a non-object, we','line_number':1810,'multiline':False]
['text':' replace it with the |this| object passed in.','line_number':1811,'multiline':False]
['text':' isSpread = ','line_number':1830,'multiline':True]
['text':' isConstructing = ','line_number':1830,'multiline':True]
['text':' isSpread = ','line_number':1834,'multiline':True]
['text':' isConstructing = ','line_number':1834,'multiline':True]
['text':' isSpread = ','line_number':1838,'multiline':True]
['text':' isConstructing = ','line_number':1838,'multiline':True]
['text':' isSpread = ','line_number':1842,'multiline':True]
['text':' isConstructing = ','line_number':1842,'multiline':True]
['text':'','line_number':1845,'multiline':False]
['text':' GetIterator_Fallback','line_number':1846,'multiline':False]
['text':'','line_number':1847,'multiline':False]
['text':' Sync stack for the decompiler.','line_number':1870,'multiline':False]
['text':'','line_number':1882,'multiline':False]
['text':' OptimizeSpreadCall_Fallback','line_number':1883,'multiline':False]
['text':'','line_number':1884,'multiline':False]
['text':'','line_number':1917,'multiline':False]
['text':' InstanceOf_Fallback','line_number':1918,'multiline':False]
['text':'','line_number':1919,'multiline':False]
['text':' ensure we've recorded at least one failure, so we can detect there was a','line_number':1942,'multiline':False]
['text':' non-optimizable case','line_number':1943,'multiline':False]
['text':' Sync stack for the decompiler.','line_number':1957,'multiline':False]
['text':'','line_number':1971,'multiline':False]
['text':' TypeOf_Fallback','line_number':1972,'multiline':False]
['text':'','line_number':1973,'multiline':False]
['text':'','line_number':2001,'multiline':False]
['text':' ToPropertyKey_Fallback','line_number':2002,'multiline':False]
['text':'','line_number':2003,'multiline':False]
['text':'','line_number':2030,'multiline':False]
['text':' Rest_Fallback','line_number':2031,'multiline':False]
['text':'','line_number':2032,'multiline':False]
['text':'','line_number':2060,'multiline':False]
['text':' UnaryArith_Fallback','line_number':2061,'multiline':False]
['text':'','line_number':2062,'multiline':False]
['text':' Restore the tail call register.','line_number':2129,'multiline':False]
['text':' Ensure stack is fully synced for the expression decompiler.','line_number':2132,'multiline':False]
['text':' Push arguments.','line_number':2135,'multiline':False]
['text':'','line_number':2145,'multiline':False]
['text':' BinaryArith_Fallback','line_number':2146,'multiline':False]
['text':'','line_number':2147,'multiline':False]
['text':' Don't pass lhs/rhs directly, we need the original values when','line_number':2163,'multiline':False]
['text':' generating stubs.','line_number':2164,'multiline':False]
['text':' Perform the arith operation.','line_number':2168,'multiline':False]
['text':' Do an add.','line_number':2171,'multiline':False]
['text':' Restore the tail call register.','line_number':2249,'multiline':False]
['text':' Ensure stack is fully synced for the expression decompiler.','line_number':2252,'multiline':False]
['text':' Push arguments.','line_number':2256,'multiline':False]
['text':'','line_number':2267,'multiline':False]
['text':' Compare_Fallback','line_number':2268,'multiline':False]
['text':'','line_number':2269,'multiline':False]
['text':' Don't pass lhs/rhs directly, we need the original values when','line_number':2282,'multiline':False]
['text':' generating stubs.','line_number':2283,'multiline':False]
['text':' Perform the compare operation.','line_number':2287,'multiline':False]
['text':' Restore the tail call register.','line_number':2346,'multiline':False]
['text':' Ensure stack is fully synced for the expression decompiler.','line_number':2349,'multiline':False]
['text':' Push arguments.','line_number':2353,'multiline':False]
['text':'','line_number':2364,'multiline':False]
['text':' NewArray_Fallback','line_number':2365,'multiline':False]
['text':'','line_number':2366,'multiline':False]
['text':' stub.','line_number':2397,'multiline':False]
['text':'','line_number':2405,'multiline':False]
['text':' NewObject_Fallback','line_number':2406,'multiline':False]
['text':'','line_number':2407,'multiline':False]
['text':' stub.','line_number':2432,'multiline':False]
['text':' namespace jit','line_number':2477,'multiline':False]
['text':' namespace js','line_number':2478,'multiline':False]
