['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 * vim: set ts=8 sts=2 et sw=2 tw=80:
 *
 * Copyright 2015 Mozilla Foundation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ','line_number':1,'multiline':True]
['text':' Return a uint32_t which captures the observed properties of the CPU that','line_number':28,'multiline':False]
['text':' affect compilation. If code compiled now is to be serialized and executed','line_number':29,'multiline':False]
['text':' later, the ObservedCPUFeatures() must be ensured to be the same.','line_number':30,'multiline':False]
['text':' Return the estimated compiled (machine) code size for the given bytecode size','line_number':34,'multiline':False]
['text':' compiled at the given tier.','line_number':35,'multiline':False]
['text':' Compile the given WebAssembly bytecode with the given arguments into a','line_number':39,'multiline':False]
['text':' wasm::Module. On success, the Module is returned. On failure, the returned','line_number':40,'multiline':False]
['text':' SharedModule pointer is null and either:','line_number':41,'multiline':False]
['text':'  - *error points to a string description of the error','line_number':42,'multiline':False]
['text':'  - *error is null and the caller should report out-of-memory.','line_number':43,'multiline':False]
['text':' Attempt to compile the second tier of the given wasm::Module.','line_number':50,'multiline':False]
['text':' Compile the given WebAssembly module which has been broken into three','line_number':55,'multiline':False]
['text':' partitions:','line_number':56,'multiline':False]
['text':'  - envBytes contains a complete ModuleEnvironment that has already been','line_number':57,'multiline':False]
['text':'    copied in from the stream.','line_number':58,'multiline':False]
['text':'  - codeBytes is pre-sized to hold the complete code section when the stream','line_number':59,'multiline':False]
['text':'    completes.','line_number':60,'multiline':False]
['text':'  - The range [codeBytes.begin(), codeBytesEnd) contains the bytes currently','line_number':61,'multiline':False]
['text':'    read from the stream and codeBytesEnd will advance until either','line_number':62,'multiline':False]
['text':'    the stream is cancelled or codeBytesEnd == codeBytes.end().','line_number':63,'multiline':False]
['text':'  - streamEnd contains the final information received after the code section:','line_number':64,'multiline':False]
['text':'    the remaining module bytecodes and maybe a JS::OptimizedEncodingListener.','line_number':65,'multiline':False]
['text':'    When the stream is successfully closed, streamEnd.reached is set.','line_number':66,'multiline':False]
['text':' The ExclusiveWaitableData are notified when CompileStreaming() can make','line_number':67,'multiline':False]
['text':' progress (i.e., codeBytesEnd advances or streamEnd.reached is set).','line_number':68,'multiline':False]
['text':' If cancelled is set to true, compilation aborts and returns null. After','line_number':69,'multiline':False]
['text':' cancellation is set, both ExclusiveWaitableData will be notified and so every','line_number':70,'multiline':False]
['text':' wait() loop must check cancelled.','line_number':71,'multiline':False]
['text':' namespace wasm','line_number':91,'multiline':False]
['text':' namespace js','line_number':92,'multiline':False]
['text':' namespace wasm_compile_h','line_number':94,'multiline':False]
