['text':' This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':1,'multiline':True]
['text':' A typed array with a null buffer has never had its buffer exposed to','line_number':17,'multiline':False]
['text':' become detached.','line_number':18,'multiline':False]
['text':' Shared array buffers are not detachable.','line_number':25,'multiline':False]
['text':'','line_number':26,'multiline':False]
['text':' This check is more expensive than desirable, but IsDetachedBuffer is','line_number':27,'multiline':False]
['text':' only hot for non-shared memory in SetFromNonTypedArray, so there is an','line_number':28,'multiline':False]
['text':' optimization in place there to avoid incurring the cost here.  An','line_number':29,'multiline':False]
['text':' alternative is to give SharedArrayBuffer the same layout as ArrayBuffer.','line_number':30,'multiline':False]
['text':' A function which ensures that the argument is either a typed array or a','line_number':57,'multiline':False]
['text':' cross-compartment wrapper for a typed array and that the typed array involved','line_number':58,'multiline':False]
['text':' has an attached array buffer.  If one of those conditions doesn't hold (wrong','line_number':59,'multiline':False]
['text':' kind of argument, or detached array buffer), an exception is thrown.  The','line_number':60,'multiline':False]
['text':' return value is `true` if the argument is a typed array, `false` if it's a','line_number':61,'multiline':False]
['text':' cross-compartment wrapper for a typed array.','line_number':62,'multiline':False]
['text':' ES2019 draft rev 85ce767c86a1a8ed719fe97e978028bff819d1f2','line_number':73,'multiline':False]
['text':' 7.3.20 SpeciesConstructor ( O, defaultConstructor )','line_number':74,'multiline':False]
['text':'','line_number':75,'multiline':False]
['text':' SpeciesConstructor function optimized for TypedArrays to avoid calling','line_number':76,'multiline':False]
['text':' ConstructorForTypedArray, a non-inlineable runtime function, in the normal','line_number':77,'multiline':False]
['text':' case.','line_number':78,'multiline':False]
['text':' Step 1.','line_number':80,'multiline':False]
['text':' Step 2.','line_number':83,'multiline':False]
['text':' Step 3.','line_number':86,'multiline':False]
['text':' Step 4.','line_number':90,'multiline':False]
['text':' Steps 5.','line_number':94,'multiline':False]
['text':' Step 6.','line_number':97,'multiline':False]
['text':' Step 7.','line_number':101,'multiline':False]
['text':' Step 8.','line_number':105,'multiline':False]
['text':' ES2017 draft rev 6859bb9ccaea9c6ede81d71e5320e3833b92cb3e','line_number':109,'multiline':False]
['text':' 22.2.3.5.1 Runtime Semantics: ValidateTypedArray ( O )','line_number':110,'multiline':False]
['text':' Steps 3-5 (non-wrapped typed arrays). ','line_number':113,'multiline':True]
['text':' GetAttachedArrayBuffer throws for detached array buffers.','line_number':115,'multiline':False]
['text':' Steps 3-5 (wrapped typed arrays). ','line_number':120,'multiline':True]
['text':' Steps 1-2. ','line_number':128,'multiline':True]
['text':' ES2017 draft rev 6859bb9ccaea9c6ede81d71e5320e3833b92cb3e','line_number':132,'multiline':False]
['text':' 22.2.4.6 TypedArrayCreate ( constructor, argumentList )','line_number':133,'multiline':False]
['text':' Step 1.','line_number':135,'multiline':False]
['text':' Step 2.','line_number':138,'multiline':False]
['text':' Step 3.','line_number':141,'multiline':False]
['text':' Step 4.','line_number':153,'multiline':False]
['text':' ES2017 draft rev 6859bb9ccaea9c6ede81d71e5320e3833b92cb3e','line_number':157,'multiline':False]
['text':' 22.2.4.6 TypedArrayCreate ( constructor, argumentList )','line_number':158,'multiline':False]
['text':' Step 1.','line_number':160,'multiline':False]
['text':' Step 2.','line_number':163,'multiline':False]
['text':' Step 3 (not applicable).','line_number':166,'multiline':False]
['text':' Step 4.','line_number':168,'multiline':False]
['text':' ES2017 draft rev 6859bb9ccaea9c6ede81d71e5320e3833b92cb3e','line_number':172,'multiline':False]
['text':' 22.2.4.7 TypedArraySpeciesCreate ( exemplar, argumentList )','line_number':173,'multiline':False]
['text':' Step 1 (omitted).','line_number':175,'multiline':False]
['text':' Steps 2-3.','line_number':177,'multiline':False]
['text':' Step 4.','line_number':180,'multiline':False]
['text':' ES2017 draft rev 6859bb9ccaea9c6ede81d71e5320e3833b92cb3e','line_number':184,'multiline':False]
['text':' 22.2.4.7 TypedArraySpeciesCreate ( exemplar, argumentList )','line_number':185,'multiline':False]
['text':' Step 1 (omitted).','line_number':187,'multiline':False]
['text':' Steps 2-3.','line_number':189,'multiline':False]
['text':' Step 4.','line_number':192,'multiline':False]
['text':' ES6 draft rev30 (2014/12/24) 22.2.3.6 %TypedArray%.prototype.entries()','line_number':196,'multiline':False]
['text':' Step 1.','line_number':198,'multiline':False]
['text':' We need to be a bit careful here, because in the Xray case we want to','line_number':201,'multiline':False]
['text':' create the iterator in our current compartment.','line_number':202,'multiline':False]
['text':'','line_number':203,'multiline':False]
['text':' Before doing that, though, we want to check that we have a typed array','line_number':204,'multiline':False]
['text':' and it does not have a detached array buffer.  We do the latter by just','line_number':205,'multiline':False]
['text':' calling GetAttachedArrayBuffer() and letting it throw if there isn't one.','line_number':206,'multiline':False]
['text':' In the case when we're not sure we have a typed array (e.g. we might have','line_number':207,'multiline':False]
['text':' a cross-compartment wrapper for one), we can go ahead and call','line_number':208,'multiline':False]
['text':' GetAttachedArrayBuffer via IsTypedArrayEnsuringArrayBuffer; that will','line_number':209,'multiline':False]
['text':' throw if we're not actually a wrapped typed array, or if we have a','line_number':210,'multiline':False]
['text':' detached array buffer.','line_number':211,'multiline':False]
['text':' Step 2-6.','line_number':213,'multiline':False]
['text':' Step 7.','line_number':216,'multiline':False]
['text':' ES2021 draft rev 190d474c3d8728653fbf8a5a37db1de34b9c1472','line_number':220,'multiline':False]
['text':' Plus <https://github.com/tc39/ecma262/pull/2221>','line_number':221,'multiline':False]
['text':' 22.2.3.7 %TypedArray%.prototype.every ( callbackfn [ , thisArg ] )','line_number':222,'multiline':False]
['text':', thisArg','line_number':223,'multiline':True]
['text':' Step 1.','line_number':224,'multiline':False]
['text':' Step 2.','line_number':227,'multiline':False]
['text':' If we got here, `this` is either a typed array or a wrapper for one.','line_number':230,'multiline':False]
['text':' Step 3.','line_number':232,'multiline':False]
['text':' Step 4.','line_number':239,'multiline':False]
['text':' Steps 5-6.','line_number':247,'multiline':False]
['text':' Steps 6.b-d.','line_number':249,'multiline':False]
['text':' Step 6.c.','line_number':252,'multiline':False]
['text':' Step 6.d.','line_number':255,'multiline':False]
['text':' Step 7.','line_number':260,'multiline':False]
['text':' ES2018 draft rev ad2d1c60c5dc42a806696d4b58b4dca42d1f7dd4','line_number':264,'multiline':False]
['text':' 22.2.3.8 %TypedArray%.prototype.fill ( value [ , start [ , end ] ] )','line_number':265,'multiline':False]
['text':' This function is not generic.','line_number':267,'multiline':False]
['text':' Step 1.','line_number':273,'multiline':False]
['text':' Step 2.','line_number':276,'multiline':False]
['text':' Step 3.','line_number':279,'multiline':False]
['text':' Step 4.','line_number':282,'multiline':False]
['text':' Step 5.','line_number':290,'multiline':False]
['text':' Step 6.','line_number':293,'multiline':False]
['text':' Step 7.','line_number':298,'multiline':False]
['text':' Step 8.','line_number':301,'multiline':False]
['text':' Step 9.','line_number':306,'multiline':False]
['text':' A typed array previously using inline storage may acquire a','line_number':308,'multiline':False]
['text':' buffer, so we must check with the source.','line_number':309,'multiline':False]
['text':' Step 10.','line_number':316,'multiline':False]
['text':' Step 11.','line_number':321,'multiline':False]
['text':' ES2017 draft rev 6859bb9ccaea9c6ede81d71e5320e3833b92cb3e','line_number':325,'multiline':False]
['text':' %TypedArray%.prototype.filter ( callbackfn [ , thisArg ] )','line_number':326,'multiline':False]
['text':', thisArg','line_number':327,'multiline':True]
['text':' Step 1.','line_number':328,'multiline':False]
['text':' Step 2.','line_number':331,'multiline':False]
['text':' This function is not generic.','line_number':332,'multiline':False]
['text':' We want to make sure that we have an attached buffer, per spec prose.','line_number':333,'multiline':False]
['text':' If we got here, `this` is either a typed array or a wrapper for one.','line_number':336,'multiline':False]
['text':' Step 3.','line_number':338,'multiline':False]
['text':' Step 4.','line_number':345,'multiline':False]
['text':' Step 5.','line_number':351,'multiline':False]
['text':' Step 6.','line_number':354,'multiline':False]
['text':' Step 8.','line_number':357,'multiline':False]
['text':' Steps 7 and 9.e.','line_number':360,'multiline':False]
['text':' Steps 9.a-b.','line_number':362,'multiline':False]
['text':' Step 9.c.','line_number':365,'multiline':False]
['text':' Step 9.d.','line_number':368,'multiline':False]
['text':' Steps 9.d.i-ii.','line_number':370,'multiline':False]
['text':' Step 10.','line_number':375,'multiline':False]
['text':' Steps 11 and 12.b.','line_number':378,'multiline':False]
['text':' Step 12.a.','line_number':380,'multiline':False]
['text':' Step 13.','line_number':384,'multiline':False]
['text':' ES2021 draft rev 190d474c3d8728653fbf8a5a37db1de34b9c1472','line_number':388,'multiline':False]
['text':' Plus <https://github.com/tc39/ecma262/pull/2221>','line_number':389,'multiline':False]
['text':' 22.2.3.10 %TypedArray%.prototype.find ( predicate [ , thisArg ] )','line_number':390,'multiline':False]
['text':', thisArg','line_number':391,'multiline':True]
['text':' Step 1.','line_number':392,'multiline':False]
['text':' Step 2.','line_number':395,'multiline':False]
['text':' If we got here, `this` is either a typed array or a wrapper for one.','line_number':398,'multiline':False]
['text':' Step 3.','line_number':400,'multiline':False]
['text':' Step 4.','line_number':407,'multiline':False]
['text':' Steps 5-6.','line_number':415,'multiline':False]
['text':' Steps 6.a-b.','line_number':417,'multiline':False]
['text':' Steps 6.c-d.','line_number':420,'multiline':False]
['text':' Step 7.','line_number':425,'multiline':False]
['text':' ES2021 draft rev 190d474c3d8728653fbf8a5a37db1de34b9c1472','line_number':429,'multiline':False]
['text':' Plus <https://github.com/tc39/ecma262/pull/2221>','line_number':430,'multiline':False]
['text':' 22.2.3.11 %TypedArray%.prototype.findIndex ( predicate [ , thisArg ] )','line_number':431,'multiline':False]
['text':', thisArg','line_number':432,'multiline':True]
['text':' Step 1.','line_number':433,'multiline':False]
['text':' Step 2.','line_number':436,'multiline':False]
['text':' If we got here, `this` is either a typed array or a wrapper for one.','line_number':439,'multiline':False]
['text':' Step 3.','line_number':441,'multiline':False]
['text':' Step 4.','line_number':448,'multiline':False]
['text':' Steps 5-6.','line_number':456,'multiline':False]
['text':' Steps 6.a-f.','line_number':458,'multiline':False]
['text':' Step 7.','line_number':463,'multiline':False]
['text':' ES2021 draft rev 190d474c3d8728653fbf8a5a37db1de34b9c1472','line_number':467,'multiline':False]
['text':' Plus <https://github.com/tc39/ecma262/pull/2221>','line_number':468,'multiline':False]
['text':' 22.2.3.12 %TypedArray%.prototype.forEach ( callbackfn [ , thisArg ] )','line_number':469,'multiline':False]
['text':', thisArg','line_number':470,'multiline':True]
['text':' Step 1.','line_number':471,'multiline':False]
['text':' Step 2.','line_number':474,'multiline':False]
['text':' If we got here, `this` is either a typed array or a wrapper for one.','line_number':477,'multiline':False]
['text':' Step 3.','line_number':479,'multiline':False]
['text':' Step 4.','line_number':486,'multiline':False]
['text':' Steps 5-6.','line_number':494,'multiline':False]
['text':' Steps 6.a-c.','line_number':496,'multiline':False]
['text':' Step 7.','line_number':500,'multiline':False]
['text':' ES2021 draft rev 190d474c3d8728653fbf8a5a37db1de34b9c1472','line_number':504,'multiline':False]
['text':' Plus <https://github.com/tc39/ecma262/pull/2221>','line_number':505,'multiline':False]
['text':' 22.2.3.14 %TypedArray%.prototype.indexOf ( searchElement [ , fromIndex ] )','line_number':506,'multiline':False]
['text':' Step 2.','line_number':508,'multiline':False]
['text':' Step 1.','line_number':516,'multiline':False]
['text':' Step 3.','line_number':519,'multiline':False]
['text':' Step 4.','line_number':522,'multiline':False]
['text':' Step 5.','line_number':526,'multiline':False]
['text':' Step 6.','line_number':529,'multiline':False]
['text':' Reload O.[[ArrayLength]] in case ToInteger() detached the ArrayBuffer.','line_number':532,'multiline':False]
['text':' This let's us avoid executing the HasProperty operation in step 11.a.','line_number':533,'multiline':False]
['text':' Step 7.','line_number':539,'multiline':False]
['text':' Steps 7-10.','line_number':543,'multiline':False]
['text':' Steps 7-8 are handled implicitly.','line_number':544,'multiline':False]
['text':' Step 9.a.','line_number':547,'multiline':False]
['text':' Step 10.a.','line_number':550,'multiline':False]
['text':' Step 10.b.','line_number':553,'multiline':False]
['text':' Step 11.','line_number':558,'multiline':False]
['text':' Step 11.a (not necessary in our implementation).','line_number':560,'multiline':False]
['text':' Steps 11.b.i-iii.','line_number':563,'multiline':False]
['text':' Step 12.','line_number':568,'multiline':False]
['text':' ES2021 draft rev 190d474c3d8728653fbf8a5a37db1de34b9c1472','line_number':572,'multiline':False]
['text':' Plus <https://github.com/tc39/ecma262/pull/2221>','line_number':573,'multiline':False]
['text':' 22.2.3.15 %TypedArray%.prototype.join ( separator )','line_number':574,'multiline':False]
['text':' Step 2.','line_number':576,'multiline':False]
['text':' Step 1.','line_number':583,'multiline':False]
['text':' Step 3.','line_number':586,'multiline':False]
['text':' Steps 4-5.','line_number':589,'multiline':False]
['text':' Steps 6 and 9.','line_number':592,'multiline':False]
['text':' ToString() might have detached the underlying ArrayBuffer. To avoid','line_number':596,'multiline':False]
['text':' checking for this condition when looping in step 8.c, do it once here.','line_number':597,'multiline':False]
['text':' Omit the 'if' clause in step 8.c, since typed arrays can't have undefined or null elements.','line_number':610,'multiline':False]
['text':' Step 6.','line_number':613,'multiline':False]
['text':' Steps 7-8.','line_number':616,'multiline':False]
['text':' Step 8.b.','line_number':618,'multiline':False]
['text':' Omit the 'if' clause in step 8.c, since typed arrays can't have undefined or null elements.','line_number':621,'multiline':False]
['text':' Steps 8.a and 8.c-d.','line_number':624,'multiline':False]
['text':' Step 9.','line_number':628,'multiline':False]
['text':' ES6 draft (2016/1/11) 22.2.3.15 %TypedArray%.prototype.keys()','line_number':632,'multiline':False]
['text':' Step 1.','line_number':634,'multiline':False]
['text':' See the big comment in TypedArrayEntries for what we're doing here.','line_number':637,'multiline':False]
['text':' Step 2.','line_number':639,'multiline':False]
['text':' Step 3.','line_number':642,'multiline':False]
['text':' ES2021 draft rev 190d474c3d8728653fbf8a5a37db1de34b9c1472','line_number':646,'multiline':False]
['text':' Plus <https://github.com/tc39/ecma262/pull/2221>','line_number':647,'multiline':False]
['text':' 22.2.3.17 %TypedArray%.prototype.lastIndexOf ( searchElement [ , fromIndex ] )','line_number':648,'multiline':False]
['text':', fromIndex','line_number':649,'multiline':True]
['text':' Step 2.','line_number':650,'multiline':False]
['text':' Step 1.','line_number':662,'multiline':False]
['text':' Step 3.','line_number':665,'multiline':False]
['text':' Step 4.','line_number':668,'multiline':False]
['text':' Step 5.','line_number':672,'multiline':False]
['text':' Reload O.[[ArrayLength]] in case ToInteger() detached the ArrayBuffer.','line_number':675,'multiline':False]
['text':' This let's us avoid executing the HasProperty operation in step 9.a.','line_number':676,'multiline':False]
['text':' Steps 6-8.','line_number':682,'multiline':False]
['text':' Step 9.','line_number':685,'multiline':False]
['text':' Step 9.a (not necessary in our implementation).','line_number':687,'multiline':False]
['text':' Steps 9.b.i-iii.','line_number':690,'multiline':False]
['text':' Step 10.','line_number':695,'multiline':False]
['text':' ES2017 draft rev 6859bb9ccaea9c6ede81d71e5320e3833b92cb3e','line_number':699,'multiline':False]
['text':' 22.2.3.19 %TypedArray%.prototype.map ( callbackfn [ , thisArg ] )','line_number':700,'multiline':False]
['text':', thisArg','line_number':701,'multiline':True]
['text':' Step 1.','line_number':702,'multiline':False]
['text':' Step 2.','line_number':705,'multiline':False]
['text':' This function is not generic.','line_number':706,'multiline':False]
['text':' We want to make sure that we have an attached buffer, per spec prose.','line_number':707,'multiline':False]
['text':' If we got here, `this` is either a typed array or a wrapper for one.','line_number':710,'multiline':False]
['text':' Step 3.','line_number':712,'multiline':False]
['text':' Step 4.','line_number':719,'multiline':False]
['text':' Step 5.','line_number':725,'multiline':False]
['text':' Step 6.','line_number':728,'multiline':False]
['text':' Steps 7, 8.a (implicit) and 8.e.','line_number':731,'multiline':False]
['text':' Steps 8.b-c.','line_number':733,'multiline':False]
['text':' Steps 8.d.','line_number':736,'multiline':False]
['text':' Step 9.','line_number':740,'multiline':False]
['text':' ES2021 draft rev 190d474c3d8728653fbf8a5a37db1de34b9c1472','line_number':744,'multiline':False]
['text':' Plus <https://github.com/tc39/ecma262/pull/2221>','line_number':745,'multiline':False]
['text':' 22.2.3.20 %TypedArray%.prototype.reduce ( callbackfn [ , initialValue ] )','line_number':746,'multiline':False]
['text':', initialValue','line_number':747,'multiline':True]
['text':' Step 1.','line_number':748,'multiline':False]
['text':' Step 2.','line_number':751,'multiline':False]
['text':' If we got here, `this` is either a typed array or a wrapper for one.','line_number':754,'multiline':False]
['text':' Step 3.','line_number':756,'multiline':False]
['text':' Step 4.','line_number':763,'multiline':False]
['text':' Step 5.','line_number':769,'multiline':False]
['text':' Step 6.','line_number':773,'multiline':False]
['text':' Steps 7-9.','line_number':776,'multiline':False]
['text':' Step 10.','line_number':779,'multiline':False]
['text':' Step 11.','line_number':784,'multiline':False]
['text':' ES2021 draft rev 190d474c3d8728653fbf8a5a37db1de34b9c1472','line_number':788,'multiline':False]
['text':' Plus <https://github.com/tc39/ecma262/pull/2221>','line_number':789,'multiline':False]
['text':' 22.2.3.21 %TypedArray%.prototype.reduceRight ( callbackfn [ , initialValue ] )','line_number':790,'multiline':False]
['text':', initialValue','line_number':791,'multiline':True]
['text':' Step 1.','line_number':792,'multiline':False]
['text':' Step 2.','line_number':795,'multiline':False]
['text':' If we got here, `this` is either a typed array or a wrapper for one.','line_number':798,'multiline':False]
['text':' Step 3.','line_number':800,'multiline':False]
['text':' Step 4.','line_number':807,'multiline':False]
['text':' Step 5.','line_number':813,'multiline':False]
['text':' Step 6.','line_number':817,'multiline':False]
['text':' Steps 7-9.','line_number':820,'multiline':False]
['text':' Step 10.','line_number':823,'multiline':False]
['text':' Step 11.','line_number':828,'multiline':False]
['text':' ES2021 draft rev 190d474c3d8728653fbf8a5a37db1de34b9c1472','line_number':832,'multiline':False]
['text':' Plus <https://github.com/tc39/ecma262/pull/2221>','line_number':833,'multiline':False]
['text':' 22.2.3.22 %TypedArray%.prototype.reverse ( )','line_number':834,'multiline':False]
['text':' Step 2.','line_number':836,'multiline':False]
['text':' Step 1.','line_number':843,'multiline':False]
['text':' Step 3.','line_number':846,'multiline':False]
['text':' Step 4.','line_number':849,'multiline':False]
['text':' Steps 5-6.','line_number':852,'multiline':False]
['text':' Step 6.a.','line_number':854,'multiline':False]
['text':' Step 6.d.','line_number':857,'multiline':False]
['text':' Step 6.e.','line_number':860,'multiline':False]
['text':' Steps 6.f-g.','line_number':863,'multiline':False]
['text':' Step 7.','line_number':868,'multiline':False]
['text':' ES2017 draft rev 6859bb9ccaea9c6ede81d71e5320e3833b92cb3e','line_number':872,'multiline':False]
['text':' 22.2.3.24 %TypedArray%.prototype.slice ( start, end )','line_number':873,'multiline':False]
['text':' Step 1.','line_number':875,'multiline':False]
['text':' Step 2.','line_number':878,'multiline':False]
['text':' Step 3.','line_number':885,'multiline':False]
['text':' Step 4.','line_number':888,'multiline':False]
['text':' Step 5.','line_number':891,'multiline':False]
['text':' Step 6.','line_number':896,'multiline':False]
['text':' Step 7.','line_number':899,'multiline':False]
['text':' Step 8.','line_number':904,'multiline':False]
['text':' Step 9.','line_number':907,'multiline':False]
['text':' Steps 14-15.','line_number':910,'multiline':False]
['text':' Steps 14.b.ii, 15.b.','line_number':912,'multiline':False]
['text':' A typed array previously using inline storage may acquire a','line_number':914,'multiline':False]
['text':' buffer, so we must check with the source.','line_number':915,'multiline':False]
['text':' Steps 10-13, 15.','line_number':922,'multiline':False]
['text':' Step 14.','line_number':925,'multiline':False]
['text':' Step 14.a.','line_number':927,'multiline':False]
['text':' Step 14.b.','line_number':930,'multiline':False]
['text':' Steps 14.b.i-v.','line_number':932,'multiline':False]
['text':' Step 16.','line_number':938,'multiline':False]
['text':' ES2021 draft rev 190d474c3d8728653fbf8a5a37db1de34b9c1472','line_number':942,'multiline':False]
['text':' Plus <https://github.com/tc39/ecma262/pull/2221>','line_number':943,'multiline':False]
['text':' 22.2.3.25 %TypedArray%.prototype.some ( callbackfn [ , thisArg ] )','line_number':944,'multiline':False]
['text':', thisArg','line_number':945,'multiline':True]
['text':' Step 1.','line_number':946,'multiline':False]
['text':' Step 2.','line_number':949,'multiline':False]
['text':' If we got here, `this` is either a typed array or a wrapper for one.','line_number':952,'multiline':False]
['text':' Step 3.','line_number':954,'multiline':False]
['text':' Step 4.','line_number':961,'multiline':False]
['text':' Steps 5-6.','line_number':969,'multiline':False]
['text':' Steps 6.a-b.','line_number':971,'multiline':False]
['text':' Step 6.c.','line_number':974,'multiline':False]
['text':' Step 6.d.','line_number':977,'multiline':False]
['text':' Step 7.','line_number':982,'multiline':False]
['text':' ES2017 draft rev 6859bb9ccaea9c6ede81d71e5320e3833b92cb3e','line_number':986,'multiline':False]
['text':' 22.2.3.26 TypedArray SortCompare abstract operation','line_number':987,'multiline':False]
['text':' Cases are ordered according to likelihood of occurrence','line_number':988,'multiline':False]
['text':' as opposed to the ordering in the spec.','line_number':989,'multiline':False]
['text':' Step 1.','line_number':991,'multiline':False]
['text':' Step 2 (Implemented in TypedArraySort).','line_number':995,'multiline':False]
['text':' Step 6.','line_number':997,'multiline':False]
['text':' Step 7.','line_number':1001,'multiline':False]
['text':' Steps 8-9.','line_number':1005,'multiline':False]
['text':' Steps 3-4.','line_number':1009,'multiline':False]
['text':' Steps 5, 10.','line_number':1013,'multiline':False]
['text':' TypedArray SortCompare specialization for integer values.','line_number':1017,'multiline':False]
['text':' Step 1.','line_number':1019,'multiline':False]
['text':' Step 2 (Implemented in TypedArraySort).','line_number':1025,'multiline':False]
['text':' Steps 6-7.','line_number':1027,'multiline':False]
['text':' Steps 3-5, 8-9 (Not applicable when sorting integer values).','line_number':1032,'multiline':False]
['text':' Step 10.','line_number':1034,'multiline':False]
['text':' https://tc39.github.io/proposal-bigint/#sec-%typedarray%.prototype.sort','line_number':1038,'multiline':False]
['text':' TypedArray SortCompare specialization for BigInt values.','line_number':1039,'multiline':False]
['text':' Step 1.','line_number':1041,'multiline':False]
['text':' Step 2 (Implemented in TypedArraySort).','line_number':1045,'multiline':False]
['text':' Step 6.','line_number':1047,'multiline':False]
['text':' Step 7.','line_number':1051,'multiline':False]
['text':' Steps 3-5, 8-9 (Not applicable when sorting BigInt values).','line_number':1055,'multiline':False]
['text':' Step 10.','line_number':1057,'multiline':False]
['text':' ES2019 draft rev 8a16cb8d18660a1106faae693f0f39b9f1a30748','line_number':1061,'multiline':False]
['text':' 22.2.3.26 %TypedArray%.prototype.sort ( comparefn )','line_number':1062,'multiline':False]
['text':' This function is not generic.','line_number':1064,'multiline':False]
['text':' Step 1.','line_number':1066,'multiline':False]
['text':' Step 2.','line_number':1072,'multiline':False]
['text':' Step 3.','line_number':1075,'multiline':False]
['text':' Step 4.','line_number':1085,'multiline':False]
['text':' Arrays with less than two elements remain unchanged when sorted.','line_number':1093,'multiline':False]
['text':' signed ','line_number':1102,'multiline':True]
['text':' signed ','line_number':1104,'multiline':True]
['text':' nbytes ','line_number':1107,'multiline':True]
['text':' signed ','line_number':1107,'multiline':True]
['text':' floating ','line_number':1107,'multiline':True]
['text':' nbytes ','line_number':1111,'multiline':True]
['text':' signed ','line_number':1111,'multiline':True]
['text':' floating ','line_number':1111,'multiline':True]
['text':' nbytes ','line_number':1115,'multiline':True]
['text':' signed ','line_number':1115,'multiline':True]
['text':' floating ','line_number':1115,'multiline':True]
['text':' nbytes ','line_number':1119,'multiline':True]
['text':' signed ','line_number':1119,'multiline':True]
['text':' floating ','line_number':1119,'multiline':True]
['text':' nbytes ','line_number':1126,'multiline':True]
['text':' signed ','line_number':1126,'multiline':True]
['text':' floating ','line_number':1126,'multiline':True]
['text':' Include |default| to ensure Ion marks this call as the','line_number':1130,'multiline':False]
['text':' last instruction in the if-statement.','line_number':1131,'multiline':False]
['text':' To satisfy step 2 from TypedArray SortCompare described in 22.2.3.26','line_number':1137,'multiline':False]
['text':' the user supplied comparefn is wrapped.','line_number':1138,'multiline':False]
['text':' Step a.','line_number':1140,'multiline':False]
['text':' Step b.','line_number':1143,'multiline':False]
['text':' It's faster for us to check the typed array's length than to check','line_number':1151,'multiline':False]
['text':' for detached buffers.','line_number':1152,'multiline':False]
['text':' Step c.','line_number':1159,'multiline':False]
['text':' Step d.','line_number':1163,'multiline':False]
['text':' ES2017 draft rev f8a9be8ea4bd97237d176907a1e3080dce20c68f','line_number':1170,'multiline':False]
['text':'   22.2.3.28 %TypedArray%.prototype.toLocaleString ([ reserved1 [ , reserved2 ] ])','line_number':1171,'multiline':False]
['text':' ES2017 Intl draft rev 78bbe7d1095f5ff3760ac4017ed366026e4cb276','line_number':1172,'multiline':False]
['text':'   13.4.1 Array.prototype.toLocaleString ([ locales [ , options ]])','line_number':1173,'multiline':False]
['text':' ValidateTypedArray, then step 1.','line_number':1175,'multiline':False]
['text':' This function is not generic.','line_number':1178,'multiline':False]
['text':' We want to make sure that we have an attached buffer, per spec prose.','line_number':1179,'multiline':False]
['text':' If we got here, `this` is either a typed array or a wrapper for one.','line_number':1182,'multiline':False]
['text':' Step 2.','line_number':1184,'multiline':False]
['text':' Step 4.','line_number':1191,'multiline':False]
['text':' Step 5.','line_number':1195,'multiline':False]
['text':' Steps 6-7.','line_number':1198,'multiline':False]
['text':' Omit the 'if' clause in step 6, since typed arrays can't have undefined','line_number':1199,'multiline':False]
['text':' or null elements.','line_number':1200,'multiline':False]
['text':' Step 3 (reordered).','line_number':1207,'multiline':False]
['text':' We don't (yet?) implement locale-dependent separators.','line_number':1208,'multiline':False]
['text':' Steps 8-9.','line_number':1211,'multiline':False]
['text':' Step 9.a.','line_number':1213,'multiline':False]
['text':' Step 9.b.','line_number':1216,'multiline':False]
['text':' Step 9.c *should* be unreachable: typed array elements are numbers.','line_number':1219,'multiline':False]
['text':' But bug 1079853 means |nextElement| *could* be |undefined|, if the','line_number':1220,'multiline':False]
['text':' previous iteration's step 9.d or step 7 detached |array|'s buffer.','line_number':1221,'multiline':False]
['text':' Conveniently, if this happens, evaluating |nextElement.toLocaleString|','line_number':1222,'multiline':False]
['text':' throws the required TypeError, and the only observable difference is','line_number':1223,'multiline':False]
['text':' the error message. So despite bug 1079853, we can skip step 9.c.','line_number':1224,'multiline':False]
['text':' Step 9.d.','line_number':1226,'multiline':False]
['text':' Step 9.e.','line_number':1233,'multiline':False]
['text':' Step 10.','line_number':1237,'multiline':False]
['text':' ES2020 draft rev dc1e21c454bd316810be1c0e7af0131a2d7f38e9','line_number':1241,'multiline':False]
['text':' 22.2.3.27 %TypedArray%.prototype.subarray ( begin, end )','line_number':1242,'multiline':False]
['text':' Step 1.','line_number':1244,'multiline':False]
['text':' Steps 2-3.','line_number':1247,'multiline':False]
['text':' This function is not generic.','line_number':1248,'multiline':False]
['text':' Step 4.','line_number':1254,'multiline':False]
['text':' Step 5.','line_number':1260,'multiline':False]
['text':' Step 13 (Reordered because otherwise it'd be observable that we reset','line_number':1263,'multiline':False]
['text':' the byteOffset to zero when the underlying array buffer gets detached).','line_number':1264,'multiline':False]
['text':' Step 6.','line_number':1267,'multiline':False]
['text':' Step 7.','line_number':1270,'multiline':False]
['text':' Step 8.','line_number':1274,'multiline':False]
['text':' Step 9.','line_number':1277,'multiline':False]
['text':' Step 10.','line_number':1281,'multiline':False]
['text':' Steps 11-12.','line_number':1284,'multiline':False]
['text':' Step 14.','line_number':1287,'multiline':False]
['text':' Steps 15-16.','line_number':1290,'multiline':False]
['text':' https://tc39.es/proposal-relative-indexing-method','line_number':1294,'multiline':False]
['text':' %TypedArray%.prototype.at ( index )','line_number':1295,'multiline':False]
['text':' Step 1.','line_number':1297,'multiline':False]
['text':' Step 2.','line_number':1300,'multiline':False]
['text':' This function is not generic.','line_number':1301,'multiline':False]
['text':' If we got here, `this` is either a typed array or a wrapper for one.','line_number':1308,'multiline':False]
['text':' Step 3.','line_number':1310,'multiline':False]
['text':' Step 4.','line_number':1313,'multiline':False]
['text':' Steps 5-6.','line_number':1316,'multiline':False]
['text':' Step 7.','line_number':1324,'multiline':False]
['text':' Step 8.','line_number':1329,'multiline':False]
['text':' ES6 draft rev30 (2014/12/24) 22.2.3.30 %TypedArray%.prototype.values()','line_number':1333,'multiline':False]
['text':'','line_number':1334,'multiline':False]
['text':' Uncloned functions with `$` prefix are allocated as extended function','line_number':1335,'multiline':False]
['text':' to store the original name in `SetCanonicalName`.','line_number':1336,'multiline':False]
['text':' Step 1.','line_number':1338,'multiline':False]
['text':' See the big comment in TypedArrayEntries for what we're doing here.','line_number':1341,'multiline':False]
['text':' Step 7.','line_number':1344,'multiline':False]
['text':' ES2021 draft rev 190d474c3d8728653fbf8a5a37db1de34b9c1472','line_number':1349,'multiline':False]
['text':' Plus <https://github.com/tc39/ecma262/pull/2221>','line_number':1350,'multiline':False]
['text':' 22.2.3.13 %TypedArray%.prototype.includes ( searchElement [ , fromIndex ] )','line_number':1351,'multiline':False]
['text':' Step 2.','line_number':1353,'multiline':False]
['text':' Step 1.','line_number':1361,'multiline':False]
['text':' Step 3.','line_number':1364,'multiline':False]
['text':' Step 4.','line_number':1367,'multiline':False]
['text':' Step 5.','line_number':1371,'multiline':False]
['text':' Step 6.','line_number':1374,'multiline':False]
['text':' Steps 7-10.','line_number':1377,'multiline':False]
['text':' Steps 7-8 are handled implicitly.','line_number':1378,'multiline':False]
['text':' Step 9.a','line_number':1381,'multiline':False]
['text':' Step 10.a.','line_number':1384,'multiline':False]
['text':' Step 10.b.','line_number':1387,'multiline':False]
['text':' Step 11.','line_number':1392,'multiline':False]
['text':' Steps 11.a-b.','line_number':1394,'multiline':False]
['text':' Step 11.c.','line_number':1398,'multiline':False]
['text':' Step 12.','line_number':1402,'multiline':False]
['text':' ES2017 draft rev 6859bb9ccaea9c6ede81d71e5320e3833b92cb3e','line_number':1406,'multiline':False]
['text':' 22.2.2.1 %TypedArray%.from ( source [ , mapfn [ , thisArg ] ] )','line_number':1407,'multiline':False]
['text':' Step 1.','line_number':1409,'multiline':False]
['text':' Step 2.','line_number':1412,'multiline':False]
['text':' Step 3.','line_number':1416,'multiline':False]
['text':' Step 3.a.','line_number':1419,'multiline':False]
['text':' Step 3.b.','line_number':1423,'multiline':False]
['text':' Step 4.','line_number':1426,'multiline':False]
['text':' Step 5.','line_number':1430,'multiline':False]
['text':' Step 6.','line_number':1433,'multiline':False]
['text':' Inlined: GetMethod, steps 1-2.','line_number':1434,'multiline':False]
['text':' Step 7.','line_number':1437,'multiline':False]
['text':' Inlined: GetMethod, step 3.','line_number':1438,'multiline':False]
['text':' Inlined: GetMethod, step 4.','line_number':1440,'multiline':False]
['text':' Try to take a fast path when there's no mapper function and the','line_number':1444,'multiline':False]
['text':' constructor is a built-in TypedArray constructor.','line_number':1445,'multiline':False]
['text':' The source is a TypedArray using the default iterator.','line_number':1447,'multiline':False]
['text':' Step 7.a.','line_number':1451,'multiline':False]
['text':' Omitted but we still need to throw if |source| was detached.','line_number':1452,'multiline':False]
['text':' Step 7.b.','line_number':1455,'multiline':False]
['text':' Step 7.c.','line_number':1458,'multiline':False]
['text':' Steps 7.d-f.','line_number':1461,'multiline':False]
['text':' Step 7.g.','line_number':1466,'multiline':False]
['text':' The source is a packed array using the default iterator.','line_number':1470,'multiline':False]
['text':' Steps 7.b-c.','line_number':1474,'multiline':False]
['text':' Steps 7.a, 7.d-f.','line_number':1477,'multiline':False]
['text':' Step 7.g.','line_number':1480,'multiline':False]
['text':' Step 7.a.','line_number':1485,'multiline':False]
['text':' Step 7.b.','line_number':1488,'multiline':False]
['text':' Step 7.c.','line_number':1491,'multiline':False]
['text':' Steps 7.d-e.','line_number':1494,'multiline':False]
['text':' Step 7.e.ii.','line_number':1496,'multiline':False]
['text':' Steps 7.e.iii-iv.','line_number':1499,'multiline':False]
['text':' Step 7.e.v.','line_number':1502,'multiline':False]
['text':' Step 7.f.','line_number':1506,'multiline':False]
['text':' Asserting that `values` is empty here would require removing them one by one from','line_number':1507,'multiline':False]
['text':' the list's start in the loop above. That would introduce unacceptable overhead.','line_number':1508,'multiline':False]
['text':' Additionally, the loop's logic is simple enough not to require the assert.','line_number':1509,'multiline':False]
['text':' Step 7.g.','line_number':1511,'multiline':False]
['text':' Step 8 is an assertion: items is not an Iterator. Testing this is','line_number':1515,'multiline':False]
['text':' literally the very last thing we did, so we don't assert here.','line_number':1516,'multiline':False]
['text':' Step 9.','line_number':1518,'multiline':False]
['text':' Step 10.','line_number':1521,'multiline':False]
['text':' Step 11.','line_number':1524,'multiline':False]
['text':' Steps 12-13.','line_number':1527,'multiline':False]
['text':' Steps 13.a-b.','line_number':1529,'multiline':False]
['text':' Steps 13.c-d.','line_number':1532,'multiline':False]
['text':' Step 13.e.','line_number':1535,'multiline':False]
['text':' Step 14.','line_number':1539,'multiline':False]
['text':' ES2017 draft rev 6859bb9ccaea9c6ede81d71e5320e3833b92cb3e','line_number':1543,'multiline':False]
['text':' 22.2.2.2 %TypedArray%.of ( ...items )','line_number':1544,'multiline':False]
['text':'...items','line_number':1545,'multiline':True]
['text':' Step 1.','line_number':1546,'multiline':False]
['text':' Step 2.','line_number':1549,'multiline':False]
['text':' Step 3.','line_number':1552,'multiline':False]
['text':' Step 4.','line_number':1555,'multiline':False]
['text':' Step 5.','line_number':1559,'multiline':False]
['text':' Steps 6-7.','line_number':1562,'multiline':False]
['text':' Step 8.','line_number':1566,'multiline':False]
['text':' ES 2016 draft Mar 25, 2016 22.2.2.4.','line_number':1570,'multiline':False]
['text':' Step 1.','line_number':1572,'multiline':False]
['text':' ES2018 draft rev 0525bb33861c7f4e9850f8a222c89642947c4b9c','line_number':1577,'multiline':False]
['text':' 22.2.2.1.1 Runtime Semantics: IterableToList( items, method )','line_number':1578,'multiline':False]
['text':' Step 1 (Inlined GetIterator).','line_number':1580,'multiline':False]
['text':' 7.4.1 GetIterator, step 1.','line_number':1582,'multiline':False]
['text':' 7.4.1 GetIterator, step 2.','line_number':1585,'multiline':False]
['text':' 7.4.1 GetIterator, step 3.','line_number':1588,'multiline':False]
['text':' 7.4.1 GetIterator, step 4.','line_number':1592,'multiline':False]
['text':' Step 2.','line_number':1595,'multiline':False]
['text':' Steps 3-4.','line_number':1598,'multiline':False]
['text':' Step 4.a.','line_number':1601,'multiline':False]
['text':' Step 4.b.','line_number':1606,'multiline':False]
['text':' Step 5.','line_number':1612,'multiline':False]
['text':' ES2020 draft rev dc1e21c454bd316810be1c0e7af0131a2d7f38e9','line_number':1616,'multiline':False]
['text':' 24.1.4.3 ArrayBuffer.prototype.slice ( start, end )','line_number':1617,'multiline':False]
['text':' Step 1.','line_number':1619,'multiline':False]
['text':' Steps 2-3,','line_number':1622,'multiline':False]
['text':' This function is not generic.','line_number':1623,'multiline':False]
['text':' Step 4.','line_number':1629,'multiline':False]
['text':' Step 5.','line_number':1633,'multiline':False]
['text':' Step 6.','line_number':1636,'multiline':False]
['text':' Step 7.','line_number':1639,'multiline':False]
['text':' Step 8.','line_number':1643,'multiline':False]
['text':' Step 9.','line_number':1646,'multiline':False]
['text':' Step 10.','line_number':1650,'multiline':False]
['text':' Step 11','line_number':1653,'multiline':False]
['text':' Step 12.','line_number':1656,'multiline':False]
['text':' Steps 13-15.','line_number':1659,'multiline':False]
['text':' Step 15.','line_number':1663,'multiline':False]
['text':' Steps 13-14.','line_number':1669,'multiline':False]
['text':' Step 15.','line_number':1675,'multiline':False]
['text':' Step 16.','line_number':1680,'multiline':False]
['text':' Step 17.','line_number':1684,'multiline':False]
['text':' Steps 18-19.','line_number':1689,'multiline':False]
['text':' Steps 20-22.','line_number':1693,'multiline':False]
['text':' Step 23.','line_number':1696,'multiline':False]
['text':' ES 2016 draft Mar 25, 2016 24.1.3.3.','line_number':1704,'multiline':False]
['text':' Step 1.','line_number':1706,'multiline':False]
['text':' Shared memory and atomics proposal (30 Oct 2016)','line_number':1711,'multiline':False]
['text':' Step 1.','line_number':1713,'multiline':False]
['text':' ES2020 draft rev dc1e21c454bd316810be1c0e7af0131a2d7f38e9','line_number':1718,'multiline':False]
['text':' 24.2.4.3 SharedArrayBuffer.prototype.slice ( start, end )','line_number':1719,'multiline':False]
['text':' Step 1.','line_number':1721,'multiline':False]
['text':' Steps 2-3.','line_number':1724,'multiline':False]
['text':' This function is not generic.','line_number':1725,'multiline':False]
['text':' Step 4.','line_number':1731,'multiline':False]
['text':' Step 5.','line_number':1734,'multiline':False]
['text':' Step 6.','line_number':1737,'multiline':False]
['text':' Step 7.','line_number':1741,'multiline':False]
['text':' Step 8.','line_number':1744,'multiline':False]
['text':' Step 9.','line_number':1748,'multiline':False]
['text':' Step 10','line_number':1751,'multiline':False]
['text':' Step 11.','line_number':1754,'multiline':False]
['text':' Steps 12-13.','line_number':1757,'multiline':False]
['text':' Step 14.','line_number':1767,'multiline':False]
['text':' Step 15.','line_number':1771,'multiline':False]
['text':' Steps 16-18.','line_number':1776,'multiline':False]
['text':' Step 19.','line_number':1779,'multiline':False]
