['text':'**************************************************************************************************

  Zyan Disassembler Library (Zydis)

  Original Author : Florian Bernd

 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.

**************************************************************************************************','line_number':1,'multiline':True]
['text':' ============================================================================================== ','line_number':37,'multiline':True]
['text':' Enums and types                                                                                ','line_number':38,'multiline':True]
['text':' ============================================================================================== ','line_number':39,'multiline':True]
['text':' MSVC does not like types other than (un-)signed int for bit-fields','line_number':41,'multiline':False]
['text':' ---------------------------------------------------------------------------------------------- ','line_number':49,'multiline':True]
['text':' Decoder tree                                                                                   ','line_number':50,'multiline':True]
['text':' ---------------------------------------------------------------------------------------------- ','line_number':51,'multiline':True]
['text':'*
 * @brief   Defines the `ZydisDecoderTreeNodeType` data-type.
 ','line_number':53,'multiline':True]
['text':'*
 * @brief   Values that represent zydis decoder tree node types.
 ','line_number':58,'multiline':True]
['text':'*
     * @brief   Reference to an instruction-definition.
     ','line_number':64,'multiline':True]
['text':'*
     * @brief   Reference to an XOP-map filter.
     ','line_number':68,'multiline':True]
['text':'*
     * @brief   Reference to an VEX-map filter.
     ','line_number':72,'multiline':True]
['text':'*
     * @brief   Reference to an EVEX/MVEX-map filter.
     ','line_number':76,'multiline':True]
['text':'*
     * @brief   Reference to an opcode filter.
     ','line_number':80,'multiline':True]
['text':'*
     * @brief   Reference to an instruction-mode filter.
     ','line_number':84,'multiline':True]
['text':'*
     * @brief   Reference to an compacted instruction-mode filter.
     ','line_number':88,'multiline':True]
['text':'*
     * @brief   Reference to a ModRM.mod filter.
     ','line_number':92,'multiline':True]
['text':'*
     * @brief   Reference to a compacted ModRM.mod filter.
     ','line_number':96,'multiline':True]
['text':'*
     * @brief   Reference to a ModRM.reg filter.
     ','line_number':100,'multiline':True]
['text':'*
     * @brief   Reference to a ModRM.rm filter.
     ','line_number':104,'multiline':True]
['text':'*
     * @brief   Reference to a PrefixGroup1 filter.
     ','line_number':108,'multiline':True]
['text':'*
     * @brief   Reference to a mandatory-prefix filter.
     ','line_number':112,'multiline':True]
['text':'*
     * @brief   Reference to an operand-size filter.
     ','line_number':116,'multiline':True]
['text':'*
     * @brief   Reference to an address-size filter.
     ','line_number':120,'multiline':True]
['text':'*
     * @brief   Reference to a vector-length filter.
     ','line_number':124,'multiline':True]
['text':'*
     * @brief   Reference to an REX/VEX/EVEX.W filter.
     ','line_number':128,'multiline':True]
['text':'*
     * @brief   Reference to an REX/VEX/EVEX.B filter.
     ','line_number':132,'multiline':True]
['text':'*
     * @brief   Reference to an EVEX.b filter.
     ','line_number':136,'multiline':True]
['text':'*
     * @brief   Reference to an MVEX.E filter.
     ','line_number':140,'multiline':True]
['text':'*
     * @brief   Reference to a AMD-mode filter.
     ','line_number':144,'multiline':True]
['text':'*
     * @brief   Reference to a KNC-mode filter.
     ','line_number':148,'multiline':True]
['text':'*
     * @brief   Reference to a MPX-mode filter.
     ','line_number':152,'multiline':True]
['text':'*
     * @brief   Reference to a CET-mode filter.
     ','line_number':156,'multiline':True]
['text':'*
     * @brief   Reference to a LZCNT-mode filter.
     ','line_number':160,'multiline':True]
['text':'*
     * @brief   Reference to a TZCNT-mode filter.
     ','line_number':164,'multiline':True]
['text':'*
     * @brief   Reference to a WBNOINVD-mode filter.
     ','line_number':168,'multiline':True]
['text':'*
     * @brief   Reference to a CLDEMOTE-mode filter.
     ','line_number':172,'multiline':True]
['text':' ---------------------------------------------------------------------------------------------- ','line_number':178,'multiline':True]
['text':'*
 * @brief   Defines the `ZydisDecoderTreeNodeValue` data-type.
 ','line_number':180,'multiline':True]
['text':' ---------------------------------------------------------------------------------------------- ','line_number':185,'multiline':True]
['text':'*
 * @brief   Defines the `ZydisDecoderTreeNode` struct.
 ','line_number':187,'multiline':True]
['text':' ---------------------------------------------------------------------------------------------- ','line_number':196,'multiline':True]
['text':' ---------------------------------------------------------------------------------------------- ','line_number':204,'multiline':True]
['text':' Physical instruction encoding info                                                             ','line_number':205,'multiline':True]
['text':' ---------------------------------------------------------------------------------------------- ','line_number':206,'multiline':True]
['text':'*
 * @brief   Defines the `ZydisInstructionEncodingFlags` data-type.
 ','line_number':208,'multiline':True]
['text':'*
 * @brief   The instruction has an optional modrm byte.
 ','line_number':213,'multiline':True]
['text':'*
 * @brief   The instruction has an optional displacement value.
 ','line_number':218,'multiline':True]
['text':'*
 * @brief   The instruction has an optional immediate value.
 ','line_number':223,'multiline':True]
['text':'*
 * @brief   The instruction has a second optional immediate value.
 ','line_number':228,'multiline':True]
['text':'*
 * @brief   The instruction ignores the value of `modrm.mod` and always assumes `modrm.mod == 3`
 *          ("reg, reg" - form).
 *
 *          Instructions with this flag can't have a SIB byte or a displacement value.
 ','line_number':233,'multiline':True]
['text':'*
 * @brief   Defines the `ZydisInstructionEncodingInfo` struct.
 ','line_number':241,'multiline':True]
['text':'*
     * @brief   Contains flags with information about the physical instruction-encoding.
     ','line_number':246,'multiline':True]
['text':'*
     * @brief   Displacement info.
     ','line_number':250,'multiline':True]
['text':'*
         * @brief   The size of the displacement value.
         ','line_number':255,'multiline':True]
['text':'*
     * @brief   Immediate info.
     ','line_number':260,'multiline':True]
['text':'*
         * @brief   The size of the immediate value.
         ','line_number':265,'multiline':True]
['text':'*
         * @brief   Signals, if the value is signed.
         ','line_number':269,'multiline':True]
['text':'*
         * @brief   Signals, if the value is a relative offset.
         ','line_number':273,'multiline':True]
['text':' ---------------------------------------------------------------------------------------------- ','line_number':280,'multiline':True]
['text':' ============================================================================================== ','line_number':282,'multiline':True]
['text':' Functions                                                                                      ','line_number':283,'multiline':True]
['text':' ============================================================================================== ','line_number':284,'multiline':True]
['text':' ---------------------------------------------------------------------------------------------- ','line_number':286,'multiline':True]
['text':' Decoder tree                                                                                   ','line_number':287,'multiline':True]
['text':' ---------------------------------------------------------------------------------------------- ','line_number':288,'multiline':True]
['text':'*
 * @brief   Returns the root node of the instruction tree.
 *
 * @return  The root node of the instruction tree.
 ','line_number':290,'multiline':True]
['text':'*
 * @brief   Returns the child node of `parent` specified by `index`.
 *
 * @param   parent  The parent node.
 * @param   index   The index of the child node to retrieve.
 *
 * @return  The specified child node.
 ','line_number':297,'multiline':True]
['text':'*
 * @brief   Returns information about optional instruction parts (like modrm, displacement or
 *          immediates) for the instruction that is linked to the given `node`.
 *
 * @param   node    The instruction definition node.
 * @param   info    A pointer to the `ZydisInstructionParts` struct.
 ','line_number':308,'multiline':True]
['text':' ---------------------------------------------------------------------------------------------- ','line_number':318,'multiline':True]
['text':' ============================================================================================== ','line_number':320,'multiline':True]
['text':' ZYDIS_INTERNAL_DECODERDATA_H ','line_number':326,'multiline':True]
