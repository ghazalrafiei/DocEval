['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 * vim: set ts=8 sts=2 et sw=2 tw=80:
 *
 * ***** BEGIN LICENSE BLOCK *****
 * Copyright (C) 2008 Apple Inc. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY
 * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
 * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * ***** END LICENSE BLOCK ***** ','line_number':1,'multiline':True]
['text':' Spew formatting helpers.','line_number':48,'multiline':False]
['text':' AllocPolicy for AssemblerBuffer. OOMs when trying to allocate more than','line_number':84,'multiline':False]
['text':' MaxCodeBytesPerProcess bytes. Use private inheritance to make sure we','line_number':85,'multiline':False]
['text':' explicitly have to expose SystemAllocPolicy methods.','line_number':86,'multiline':False]
['text':' This should only be called with small |space| values to ensure','line_number':134,'multiline':False]
['text':' we don't overflow below.','line_number':135,'multiline':False]
['text':'
   * OOM handling: This class can OOM in the ensureSpace() method trying
   * to allocate a new buffer. In response to an OOM, we need to avoid
   * crashing and report the error. We also want to make it so that
   * users of this class need to check for OOM only at certain points
   * and not after every operation.
   *
   * Our strategy for handling an OOM is to set m_oom, and then clear (but
   * not free) m_buffer, preserving the current buffer. This way, the user
   * can continue assembling into the buffer, deferring OOM checking
   * until the user wants to read code out of the buffer.
   *
   * See also the |buffer| method.
   ','line_number':188,'multiline':True]
['text':' namespace jit','line_number':253,'multiline':False]
['text':' namespace js','line_number':254,'multiline':False]
['text':' jit_x86_shared_AssemblerBuffer_x86_shared_h ','line_number':256,'multiline':True]
