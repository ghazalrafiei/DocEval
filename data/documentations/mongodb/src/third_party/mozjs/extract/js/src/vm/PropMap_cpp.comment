['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 * vim: set ts=8 sts=2 et sw=2 tw=80:
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':1,'multiline':True]
['text':' static','line_number':33,'multiline':False]
['text':' If the first property has a slot number <= MaxSlotNumber, all properties','line_number':36,'multiline':False]
['text':' added later will have a slot number <= CompactPropertyInfo::MaxSlotNumber','line_number':37,'multiline':False]
['text':' so we can use a CompactPropMap.','line_number':38,'multiline':False]
['text':' static','line_number':59,'multiline':False]
['text':' Lookup or create a shared map based on the first property.','line_number':62,'multiline':False]
['text':' prev = ','line_number':73,'multiline':True]
['text':' static','line_number':86,'multiline':False]
['text':' static','line_number':108,'multiline':False]
['text':' Starting at the last map, clone each shared map to a new dictionary map.','line_number':112,'multiline':False]
['text':' We need a read barrier for the map tree, since these are weak','line_number':155,'multiline':False]
['text':' pointers.','line_number':156,'multiline':False]
['text':' The map we've found is unreachable and due to be finalized, so','line_number':166,'multiline':False]
['text':' remove our weak reference to it and don't use it.','line_number':167,'multiline':False]
['text':' If the parent map was full, the child map must have the parent as','line_number':210,'multiline':False]
['text':' |previous| map. Else, the parent and child have the same |previous| map.','line_number':211,'multiline':False]
['text':' static','line_number':262,'multiline':False]
['text':' static','line_number':284,'multiline':False]
['text':' static','line_number':301,'multiline':False]
['text':' static','line_number':325,'multiline':False]
['text':' Custom data properties don't have a slot. Copy the last property's slot','line_number':333,'multiline':False]
['text':' number to simplify the implementation of SharedPropMap::slotSpan.','line_number':334,'multiline':False]
['text':' static','line_number':344,'multiline':False]
['text':' Adding the first property.','line_number':350,'multiline':False]
['text':' Use the next map entry if possible.','line_number':363,'multiline':False]
['text':' The next entry can't be used so look up or create a child map. The child','line_number':382,'multiline':False]
['text':' map is a clone of this map up to mapLength, with the new property stored','line_number':383,'multiline':False]
['text':' as the next entry.','line_number':384,'multiline':False]
['text':' This map is full so look up or create a child map.','line_number':408,'multiline':False]
['text':' As an optimization, pass the table to the new child map, unless adding the','line_number':427,'multiline':False]
['text':' property to it OOMs. Measurements indicate this gets rid of a large number','line_number':428,'multiline':False]
['text':' of PropMapTable allocations because we don't need to create a second table','line_number':429,'multiline':False]
['text':' when the parent map won't be used again as last map.','line_number':430,'multiline':False]
['text':' Trigger a pre-barrier on the parent map to appease the pre-barrier','line_number':434,'multiline':False]
['text':' verifier, because edges from the table are disappearing (even though','line_number':435,'multiline':False]
['text':' these edges are strictly redundant with the |previous| maps).','line_number':436,'multiline':False]
['text':' Private fields are not visible to SetIntegrityLevel.','line_number':454,'multiline':False]
['text':' Make all properties non-configurable; if freezing, make data properties','line_number':459,'multiline':False]
['text':' read-only.','line_number':460,'multiline':False]
['text':' static','line_number':469,'multiline':False]
['text':' Add all maps to a Vector so we can iterate over them in reverse order','line_number':475,'multiline':False]
['text':' (property definition order).','line_number':476,'multiline':False]
['text':' Build a new SharedPropMap by adding each property with the changed','line_number':491,'multiline':False]
['text':' attributes.','line_number':492,'multiline':False]
['text':' Note: for tables currently only sizeof(PropMapTable) is tracked.','line_number':535,'multiline':False]
['text':' A dictionary object's last map contains the table, slot freeList, and','line_number':541,'multiline':False]
['text':' holeCount. These fields always have their initial values for non-last maps.','line_number':542,'multiline':False]
['text':' static','line_number':559,'multiline':False]
['text':' static','line_number':635,'multiline':False]
['text':' After removing a property, rewind map/mapLength so that the last property','line_number':638,'multiline':False]
['text':' is not a hole. This ensures accessing the last property of a map can always','line_number':639,'multiline':False]
['text':' be done without checking for holes.','line_number':640,'multiline':False]
['text':' The dictionary map is empty, return the initial map with mapLength 0.','line_number':653,'multiline':False]
['text':' static','line_number':665,'multiline':False]
['text':' static','line_number':687,'multiline':False]
['text':' The caller must have checked all sparse elements are plain data','line_number':708,'multiline':False]
['text':' properties.','line_number':709,'multiline':False]
['text':' If there are no holes, there's nothing to compact.','line_number':738,'multiline':False]
['text':' Compacting is optional so just return.','line_number':746,'multiline':False]
['text':' Heuristic: only compact if the number of holes >= the number of (non-hole)','line_number':751,'multiline':False]
['text':' entries.','line_number':752,'multiline':False]
['text':' Add all dictionary maps to a Vector so that we can iterate over them in','line_number':757,'multiline':False]
['text':' reverse order (property definition order). If appending to the Vector OOMs,','line_number':758,'multiline':False]
['text':' just return because compacting is optional.','line_number':759,'multiline':False]
['text':' Use two cursors: readMapCursor/readIndexCursor iterates over all properties','line_number':767,'multiline':False]
['text':' starting at the first one, to search for the next non-hole entry.','line_number':768,'multiline':False]
['text':' writeMapCursor/writeIndexCursor is used to write all non-hole keys.','line_number':769,'multiline':False]
['text':'','line_number':770,'multiline':False]
['text':' At the start of the loop, these cursors point to the next property slot to','line_number':771,'multiline':False]
['text':' read/write.','line_number':772,'multiline':False]
['text':' Found a non-hole entry, copy it to its new position and update the','line_number':786,'multiline':False]
['text':' PropMapTable to point to this new entry. Only do this if the read and','line_number':787,'multiline':False]
['text':' write positions are different from each other.','line_number':788,'multiline':False]
['text':' Advance the write cursor.','line_number':804,'multiline':False]
['text':' Advance the read cursor. If there are no more maps to read from, we're','line_number':815,'multiline':False]
['text':' done.','line_number':816,'multiline':False]
['text':' Sanity check: the read cursor skipped holes between properties and holes','line_number':828,'multiline':False]
['text':' at the end of the last map (these are not included in holeCount_).','line_number':829,'multiline':False]
['text':' The write cursor points to the next available slot. If this is at the start','line_number':832,'multiline':False]
['text':' of a new map, use the previous map (which must be full) instead.','line_number':833,'multiline':False]
['text':' Ensure the last map does not have any keys in [mapLength, Capacity).','line_number':841,'multiline':False]
['text':' Convert from set form back to single child form.','line_number':912,'multiline':False]
['text':' Returns a number that's guaranteed to tbe >= the exact number of properties','line_number':928,'multiline':False]
['text':' in this map (including previous maps). This is used to reserve space in the','line_number':929,'multiline':False]
['text':' HashSet when allocating a table for this map.','line_number':930,'multiline':False]
['text':' TODO: The contents of PropMapTable is not currently tracked, only the','line_number':1041,'multiline':False]
['text':' object itself.','line_number':1042,'multiline':False]
['text':' Check dictionary slot free list.','line_number':1132,'multiline':False]
['text':' Some fields must only be set for the last dictionary map.','line_number':1143,'multiline':False]
['text':' The last dictionary map must only have keys up to mapLength.','line_number':1158,'multiline':False]
['text':' All properties must be in the table.','line_number':1164,'multiline':False]
['text':' Shared maps without a previous map never have a table.','line_number':1185,'multiline':False]
['text':' Verify numPreviousMaps is set correctly.','line_number':1191,'multiline':False]
['text':' If a previous map also has a table, it must have fewer entries than the','line_number':1196,'multiline':False]
['text':' last map's table.','line_number':1197,'multiline':False]
['text':' Only the last map can have holes, for entries following mapLength.','line_number':1207,'multiline':False]
['text':' Check slot numbers are within slot span and never decreasing.','line_number':1215,'multiline':False]
['text':' All properties must be in the table.','line_number':1224,'multiline':False]
['text':' DEBUG','line_number':1240,'multiline':False]
