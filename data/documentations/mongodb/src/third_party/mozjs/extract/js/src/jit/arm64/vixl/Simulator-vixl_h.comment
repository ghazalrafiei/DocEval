['text':' Copyright 2015, ARM Limited','line_number':1,'multiline':False]
['text':' All rights reserved.','line_number':2,'multiline':False]
['text':'','line_number':3,'multiline':False]
['text':' Redistribution and use in source and binary forms, with or without','line_number':4,'multiline':False]
['text':' modification, are permitted provided that the following conditions are met:','line_number':5,'multiline':False]
['text':'','line_number':6,'multiline':False]
['text':'   * Redistributions of source code must retain the above copyright notice,','line_number':7,'multiline':False]
['text':'     this list of conditions and the following disclaimer.','line_number':8,'multiline':False]
['text':'   * Redistributions in binary form must reproduce the above copyright notice,','line_number':9,'multiline':False]
['text':'     this list of conditions and the following disclaimer in the documentation','line_number':10,'multiline':False]
['text':'     and/or other materials provided with the distribution.','line_number':11,'multiline':False]
['text':'   * Neither the name of ARM Limited nor the names of its contributors may be','line_number':12,'multiline':False]
['text':'     used to endorse or promote products derived from this software without','line_number':13,'multiline':False]
['text':'     specific prior written permission.','line_number':14,'multiline':False]
['text':'','line_number':15,'multiline':False]
['text':' THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS CONTRIBUTORS "AS IS" AND','line_number':16,'multiline':False]
['text':' ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED','line_number':17,'multiline':False]
['text':' WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE','line_number':18,'multiline':False]
['text':' DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE','line_number':19,'multiline':False]
['text':' FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL','line_number':20,'multiline':False]
['text':' DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR','line_number':21,'multiline':False]
['text':' SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER','line_number':22,'multiline':False]
['text':' CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,','line_number':23,'multiline':False]
['text':' OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE','line_number':24,'multiline':False]
['text':' OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.','line_number':25,'multiline':False]
['text':' Representation of memory, with typed getters and setters for access.','line_number':51,'multiline':False]
['text':' Cast the address using a C-style cast. A reinterpret_cast would be','line_number':56,'multiline':False]
['text':' appropriate, but it can't cast one integral type to another.','line_number':57,'multiline':False]
['text':' Represent a register (r0-r31, v0-v31).','line_number':83,'multiline':False]
['text':' Write the specified value. The value is zero-extended if necessary.','line_number':89,'multiline':False]
['text':' All AArch64 registers are zero-extending.','line_number':94,'multiline':False]
['text':' Insert a typed value into a register, leaving the rest of the register','line_number':101,'multiline':False]
['text':' unchanged. The lane parameter indicates where in the register the value','line_number':102,'multiline':False]
['text':' should be inserted, in the range [ 0, sizeof(value_) / sizeof(T) ), where','line_number':103,'multiline':False]
['text':' 0 represents the least significant bits.','line_number':104,'multiline':False]
['text':' Read the value as the specified type. The value is truncated if necessary.','line_number':114,'multiline':False]
['text':' TODO: Make this return a map of updated bytes, so that we can highlight','line_number':124,'multiline':False]
['text':' updated lanes for load-and-insert. (That never happens for scalar code, but','line_number':125,'multiline':False]
['text':' NEON has some instructions that can update individual lanes.)','line_number':126,'multiline':False]
['text':' Helpers to aid with register tracing.','line_number':138,'multiline':False]
['text':' r0-r31','line_number':145,'multiline':False]
['text':' v0-v31','line_number':146,'multiline':False]
['text':' Representation of a vector register, with typed getters and setters for lanes','line_number':148,'multiline':False]
['text':' and additional information to represent lane state.','line_number':149,'multiline':False]
['text':' NOLINT','line_number':152,'multiline':False]
['text':' When setting a result in a register of size less than Q, the top bits of','line_number':244,'multiline':False]
['text':' the Q register must be cleared.','line_number':245,'multiline':False]
['text':' Saturation state for each lane of a vector.','line_number':253,'multiline':False]
['text':' Getters for saturation state.','line_number':266,'multiline':False]
['text':' Setters for saturation state.','line_number':275,'multiline':False]
['text':' Saturate lanes of a vector based on saturation state.','line_number':294,'multiline':False]
['text':' Getter for rounding state.','line_number':319,'multiline':False]
['text':' Setter for rounding state.','line_number':324,'multiline':False]
['text':' Round lanes of a vector based on rounding state.','line_number':329,'multiline':False]
['text':' Unsigned halve lanes of a vector, and use the saturation state to set the','line_number':337,'multiline':False]
['text':' top bit.','line_number':338,'multiline':False]
['text':' If the operation causes unsigned saturation, the bit shifted into the','line_number':345,'multiline':False]
['text':' most significant bit must be set.','line_number':346,'multiline':False]
['text':' Signed halve lanes of a vector, and use the carry state to set the top bit.','line_number':354,'multiline':False]
['text':' If the operation causes signed saturation, the sign bit must be','line_number':361,'multiline':False]
['text':' inverted.','line_number':362,'multiline':False]
['text':' Allocate one saturation state entry per lane; largest register is type Q,','line_number':373,'multiline':False]
['text':' and lanes can be a minimum of one byte wide.','line_number':374,'multiline':False]
['text':' Allocate one rounding state entry per lane.','line_number':377,'multiline':False]
['text':' The proper way to initialize a simulated system register (such as NZCV) is as','line_number':381,'multiline':False]
['text':' follows:','line_number':382,'multiline':False]
['text':'  SimSystemRegister nzcv = SimSystemRegister::DefaultValueFor(NZCV);','line_number':383,'multiline':False]
['text':' The default constructor represents a register which has no writable bits.','line_number':386,'multiline':False]
['text':' It is not possible to set its value to anything other than 0.','line_number':387,'multiline':False]
['text':' Default system register values.','line_number':408,'multiline':False]
['text':' Most system registers only implement a few of the bits in the word. Other','line_number':423,'multiline':False]
['text':' bits are "read-as-zero, write-ignored". The write_ignore_mask argument','line_number':424,'multiline':False]
['text':' describes the bits which are not modifiable.','line_number':425,'multiline':False]
['text':' Clear the exclusive monitor (like clrex).','line_number':440,'multiline':False]
['text':' Clear the exclusive monitor most of the time.','line_number':446,'multiline':False]
['text':' Advance seed_ using a simple linear congruential generator.','line_number':452,'multiline':False]
['text':' Mark the address range for exclusive access (like load-exclusive).','line_number':456,'multiline':False]
['text':' Return true if the address range is marked (like store-exclusive).','line_number':462,'multiline':False]
['text':' This helper doesn't implicitly clear the monitor.','line_number':463,'multiline':False]
['text':' Be pedantic: Require both the address and the size to match.','line_number':466,'multiline':False]
['text':' We can't accurate simulate the global monitor since it depends on external','line_number':479,'multiline':False]
['text':' influences. Instead, this implementation occasionally causes accesses to','line_number':480,'multiline':False]
['text':' fail, according to kPassProbability.','line_number':481,'multiline':False]
['text':' Advance seed_ using a simple linear congruential generator.','line_number':490,'multiline':False]
['text':' Moz changes.','line_number':511,'multiline':False]
['text':' Run the simulator.','line_number':539,'multiline':False]
['text':' Simulation helpers.','line_number':543,'multiline':False]
['text':' Handle any wasm faults, returning true if the fault was handled.','line_number':558,'multiline':False]
['text':' This method is rather hot so inline the normal (no-wasm) case.','line_number':559,'multiline':False]
['text':' Declare all Visitor functions.','line_number':584,'multiline':False]
['text':' Integer register accessors.','line_number':591,'multiline':False]
['text':' Basic accessor: Read the register as the specified type.','line_number':593,'multiline':False]
['text':' Common specialized accessors for the reg() template.','line_number':605,'multiline':False]
['text':' As above, with parameterized size and return type. The value is','line_number':616,'multiline':False]
['text':' either zero-extended or truncated to fit, as required.','line_number':617,'multiline':False]
['text':' Copy the result and truncate to fit. This assumes a little-endian host.','line_number':632,'multiline':False]
['text':' Use int64_t by default if T is not specified.','line_number':637,'multiline':False]
['text':' Write 'value' into an integer register. The value is zero-extended. This','line_number':648,'multiline':False]
['text':' behaviour matches AArch64 register writes.','line_number':649,'multiline':False]
['text':' Common specialized accessors for the set_reg() template.','line_number':667,'multiline':False]
['text':' As above, with parameterized size and type. The value is either','line_number':680,'multiline':False]
['text':' zero-extended or truncated to fit, as required.','line_number':681,'multiline':False]
['text':' Zero-extend the input.','line_number':686,'multiline':False]
['text':' Write (and possibly truncate) the value.','line_number':691,'multiline':False]
['text':' Common specialized accessors for the set_reg() template.','line_number':705,'multiline':False]
['text':' Commonly-used special cases.','line_number':707,'multiline':False]
['text':' Vector register accessors.','line_number':718,'multiline':False]
['text':' These are equivalent to the integer register accessors, but for vector','line_number':719,'multiline':False]
['text':' registers.','line_number':720,'multiline':False]
['text':' A structure for representing a 128-bit Q register.','line_number':722,'multiline':False]
['text':' Basic accessor: read the register as the specified type.','line_number':725,'multiline':False]
['text':' Common specialized accessors for the vreg() template.','line_number':738,'multiline':False]
['text':' As above, with parameterized size and return type. The value is','line_number':767,'multiline':False]
['text':' either zero-extended or truncated to fit, as required.','line_number':768,'multiline':False]
['text':' Copy the result and truncate to fit. This assumes a little-endian host.','line_number':783,'multiline':False]
['text':' Basic accessor: Write the specified value.','line_number':792,'multiline':False]
['text':' Common specialized accessors for the set_vreg() template.','line_number':809,'multiline':False]
['text':' TODO: Find a way to make the fpcr_ members return the proper types, so','line_number':853,'multiline':False]
['text':' these accessors are not necessary.','line_number':854,'multiline':False]
['text':' Specify relevant register formats for Print(V)Register and related helpers.','line_number':863,'multiline':False]
['text':' The lane size.','line_number':865,'multiline':False]
['text':' The lane count.','line_number':877,'multiline':False]
['text':' Indicate floating-point format lanes. (This flag is only supported for S-','line_number':884,'multiline':False]
['text':' and D-sized lanes.)','line_number':885,'multiline':False]
['text':' Supported combinations.','line_number':888,'multiline':False]
['text':' Scalar types.','line_number':926,'multiline':False]
['text':' Print all registers of the specified types.','line_number':981,'multiline':False]
['text':' As above, but only print the registers that have been updated.','line_number':986,'multiline':False]
['text':' As above, but respect LOG_REG and LOG_VREG.','line_number':990,'multiline':False]
['text':' Print individual register values (after update).','line_number':1002,'multiline':False]
['text':' Like Print* (above), but respect trace_parameters().','line_number':1007,'multiline':False]
['text':' Print memory accesses.','line_number':1018,'multiline':False]
['text':' Like Print* (above), but respect trace_parameters().','line_number':1028,'multiline':False]
['text':' Helper functions for register tracing.','line_number':1050,'multiline':False]
['text':' Clear the simulated local monitor to force the next store-exclusive','line_number':1078,'multiline':False]
['text':' instruction to fail.','line_number':1079,'multiline':False]
['text':' Simulation helpers ------------------------------------','line_number':1101,'multiline':False]
['text':' This doesn't do anything at the moment. We'll need it if we want support','line_number':2337,'multiline':False]
['text':' for cumulative exception bits or floating-point exceptions.','line_number':2338,'multiline':False]
['text':' Pseudo Printf instruction','line_number':2343,'multiline':False]
['text':' Processor state ---------------------------------------','line_number':2346,'multiline':False]
['text':' Simulated monitors for exclusive access instructions.','line_number':2348,'multiline':False]
['text':' Output stream.','line_number':2352,'multiline':False]
['text':' Instruction statistics instrumentation.','line_number':2356,'multiline':False]
['text':' General purpose registers. Register 31 is the stack pointer.','line_number':2359,'multiline':False]
['text':' Vector registers','line_number':2362,'multiline':False]
['text':' Program Status Register.','line_number':2365,'multiline':False]
['text':' bits[31, 27]: Condition flags N, Z, C, and V.','line_number':2366,'multiline':False]
['text':'               (Negative, Zero, Carry, Overflow)','line_number':2367,'multiline':False]
['text':' Floating-Point Control Register','line_number':2370,'multiline':False]
['text':' Only a subset of FPCR features are supported by the simulator. This helper','line_number':2373,'multiline':False]
['text':' checks that the FPCR settings are supported.','line_number':2374,'multiline':False]
['text':'','line_number':2375,'multiline':False]
['text':' This is checked when floating-point instructions are executed, not when','line_number':2376,'multiline':False]
['text':' FPCR is set. This allows generated code to modify FPCR for external','line_number':2377,'multiline':False]
['text':' functions, or to save and restore it when entering and leaving generated','line_number':2378,'multiline':False]
['text':' code.','line_number':2379,'multiline':False]
['text':' No flush-to-zero support.','line_number':2381,'multiline':False]
['text':' Ties-to-even rounding only.','line_number':2382,'multiline':False]
['text':' The simulator does not support half-precision operations so fpcr().AHP()','line_number':2384,'multiline':False]
['text':' is irrelevant, and is not checked here.','line_number':2385,'multiline':False]
['text':' Stack','line_number':2398,'multiline':False]
['text':' Indicates if the pc has been modified by the instruction and should not be','line_number':2405,'multiline':False]
['text':' automatically incremented.','line_number':2406,'multiline':False]
['text':' Standard NaN processing.','line_number':2422,'multiline':False]
['text':' A set of TraceParameters flags.','line_number':2473,'multiline':False]
['text':' Indicates whether the instruction instrumentation is active.','line_number':2476,'multiline':False]
['text':' Indicates whether the exclusive-access warning has been printed.','line_number':2479,'multiline':False]
['text':' Indicates that the simulator ran out of memory at some point.','line_number':2483,'multiline':False]
['text':' Data structures may not be fully allocated.','line_number':2484,'multiline':False]
['text':' True if the simulator ran out of memory during or after construction.','line_number':2488,'multiline':False]
['text':' namespace vixl','line_number':2495,'multiline':False]
['text':' Synchronizes access between main thread and compilation threads.','line_number':2510,'multiline':False]
['text':' For each simulator, record what other thread registered as instruction','line_number':2515,'multiline':False]
['text':' being invalidated.','line_number':2516,'multiline':False]
['text':' Protects the icache and redirection properties of the simulator.','line_number':2555,'multiline':False]
['text':' namespace jit','line_number':2567,'multiline':False]
['text':' namespace js','line_number':2568,'multiline':False]
['text':' JS_SIMULATOR_ARM64','line_number':2570,'multiline':False]
['text':' VIXL_A64_SIMULATOR_A64_H_','line_number':2571,'multiline':False]
