['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 * vim: set ts=8 sts=2 et sw=2 tw=80:
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':1,'multiline':True]
['text':' The Wasm optimization level','line_number':42,'multiline':False]
['text':' Disables some passes that don't work well with wasm.','line_number':43,'multiline':False]
['text':' Take normal option values for not specified values.','line_number':45,'multiline':False]
['text':' wasm has no objects.','line_number':54,'multiline':False]
['text':' The script must not start with a LoopHead op or the code below would be','line_number':63,'multiline':False]
['text':' wrong. See bug 1602681.','line_number':64,'multiline':False]
['text':' If the script is too large to compile on the main thread, we can still','line_number':73,'multiline':False]
['text':' compile it off thread. In these cases, increase the warm-up counter','line_number':74,'multiline':False]
['text':' threshold to improve the compilation's type information and hopefully','line_number':75,'multiline':False]
['text':' avoid later recompilation.','line_number':76,'multiline':False]
['text':' It's more efficient to enter outer loops, rather than inner loops, via OSR.','line_number':93,'multiline':False]
['text':' To accomplish this, we use a slightly higher threshold for inner loops.','line_number':94,'multiline':False]
['text':' Note that the loop depth is always > 0 so we will prefer non-OSR over OSR.','line_number':95,'multiline':False]
['text':' If we're stuck in a long-running loop at a low optimization level, we have','line_number':110,'multiline':False]
['text':' to invalidate to be able to tier up. This is worse than recompiling at','line_number':111,'multiline':False]
['text':' function entry (because in that case we can use the lazy link mechanism and','line_number':112,'multiline':False]
['text':' avoid invalidation completely). Use a very high recompilation threshold for','line_number':113,'multiline':False]
['text':' loop edges so that this only affects very long-running loops.','line_number':114,'multiline':False]
['text':' namespace jit','line_number':136,'multiline':False]
['text':' namespace js','line_number':137,'multiline':False]
