['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 * vim: set ts=8 sts=2 et sw=2 tw=80:
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':1,'multiline':True]
['text':' Test whether m is just leading ones and trailing zeros.','line_number':15,'multiline':False]
['text':' Fold (a+i)&m to (a&m)+i, provided that this doesn't change the result,','line_number':20,'multiline':False]
['text':' since the users of the BitAnd include heap accesses. This will expose','line_number':21,'multiline':False]
['text':' the redundancy for GVN when expressions like this:','line_number':22,'multiline':False]
['text':'   a&m','line_number':23,'multiline':False]
['text':'   (a+1)&m,','line_number':24,'multiline':False]
['text':'   (a+2)&m,','line_number':25,'multiline':False]
['text':' are transformed into this:','line_number':26,'multiline':False]
['text':'   a&m','line_number':27,'multiline':False]
['text':'   (a&m)+1','line_number':28,'multiline':False]
['text':'   (a&m)+2','line_number':29,'multiline':False]
['text':' and it will allow the constants to be folded by the','line_number':30,'multiline':False]
['text':' EffectiveAddressAnalysis pass.','line_number':31,'multiline':False]
['text':'','line_number':32,'multiline':False]
['text':' Putting the add on the outside might seem like it exposes other users of','line_number':33,'multiline':False]
['text':' the expression to the possibility of i32 overflow, if we aren't in wasm','line_number':34,'multiline':False]
['text':' and they aren't naturally truncating. However, since we use MAdd::New','line_number':35,'multiline':False]
['text':' with MIRType::Int32, we make sure that the value is truncated, just as it','line_number':36,'multiline':False]
['text':' would be by the MBitAnd.','line_number':37,'multiline':False]
['text':' The pattern was matched! Produce the replacement expression.','line_number':69,'multiline':False]
['text':' Note that we don't check for MWasmCompareExchangeHeap','line_number':86,'multiline':False]
['text':' or MWasmAtomicBinopHeap, because the backend and the OOB','line_number':87,'multiline':False]
['text':' mechanism don't support non-zero offsets for them yet.','line_number':88,'multiline':False]
