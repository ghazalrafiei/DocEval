['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 * vim: set ts=8 sts=2 et sw=2 tw=80:
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':1,'multiline':True]
['text':' SpiderMonkey initialization and shutdown code. ','line_number':7,'multiline':True]
['text':' JS_HAS_INTL_API','line_number':30,'multiline':False]
['text':' js::AutoNoteSingleThreadedRegion','line_number':32,'multiline':False]
['text':' Assert that each message format has the correct number of braced','line_number':64,'multiline':False]
['text':' parameters.','line_number':65,'multiline':False]
['text':' DEBUG ','line_number':71,'multiline':True]
['text':' namespace JS::detail','line_number':76,'multiline':False]
['text':' Compute the standard NaN value that the hardware generates.','line_number':80,'multiline':False]
['text':' If the NaN generated by hardware operations is not compatible','line_number':87,'multiline':False]
['text':' with our canonical NaN, we must canonicalize every double. This','line_number':88,'multiline':False]
['text':' is implemented for C++ code in Value::bitsFromDouble, but is not','line_number':89,'multiline':False]
['text':' implemented for JIT code.','line_number':90,'multiline':False]
['text':' Determine canonical NaN at startup. It must still match the ValueIsDouble','line_number':97,'multiline':False]
['text':' requirements.','line_number':98,'multiline':False]
['text':' Assert that the NaN generated by hardware operations is','line_number':102,'multiline':False]
['text':' compatible with the canonical NaN we use for JS::Value. This is','line_number':103,'multiline':False]
['text':' true for all of our supported platforms, but not for SPARC.','line_number':104,'multiline':False]
['text':' Verify that our DEBUG setting matches the caller's.','line_number':119,'multiline':False]
['text':' The first invocation of `ProcessCreation` creates a temporary thread','line_number':140,'multiline':False]
['text':' and crashes if that fails, i.e. because we're out of memory. To prevent','line_number':141,'multiline':False]
['text':' that from happening at some later time, get it out of the way during','line_number':142,'multiline':False]
['text':' startup.','line_number':143,'multiline':False]
['text':' Ensure gc::SystemPageSize() works.','line_number':172,'multiline':False]
['text':' Explicitly set the data directory to its default value, but only when we're','line_number':194,'multiline':False]
['text':' sure that we use our in-tree ICU copy. See bug 1527879 and ICU bug','line_number':195,'multiline':False]
['text':' report <https://unicode-org.atlassian.net/browse/ICU-20491>.','line_number':196,'multiline':False]
['text':' JS_HAS_INTL_API','line_number':205,'multiline':False]
['text':' Gecko is too buggy to assert this just yet.','line_number':266,'multiline':False]
['text':' The only difficult-to-address reason for the restriction that you can't','line_number':293,'multiline':False]
['text':' call JS_Init/stuff/JS_ShutDown multiple times is the Windows PRMJ','line_number':294,'multiline':False]
['text':' NowInit initialization code, which uses PR_CallOnce to initialize the','line_number':295,'multiline':False]
['text':' PRMJ_Now subsystem.  (For reinitialization to be permitted, we'd need to','line_number':296,'multiline':False]
['text':' "reset" the called-once status -- doable, but more trouble than it's','line_number':297,'multiline':False]
['text':' worth now.)  Initializing that subsystem from JS_Init eliminates the','line_number':298,'multiline':False]
['text':' problem, but initialization can take a comparatively long time (15ms or','line_number':299,'multiline':False]
['text':' so), so we really don't want to do it in JS_Init, and we really do want','line_number':300,'multiline':False]
['text':' to do it only when PRMJ_Now is eventually called.','line_number':301,'multiline':False]
['text':' JS_HAS_INTL_API','line_number':306,'multiline':False]
['text':' MOZ_VTUNE','line_number':310,'multiline':False]
['text':' context = ','line_number':333,'multiline':True]
