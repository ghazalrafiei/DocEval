['text':'**************************************************************************************************

  Zyan Core Library (Zycore-C)

  Original Author : Florian Bernd

 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.

**************************************************************************************************','line_number':1,'multiline':True]
['text':' ============================================================================================== ','line_number':30,'multiline':True]
['text':' Internal constants                                                                             ','line_number':31,'multiline':True]
['text':' ============================================================================================== ','line_number':32,'multiline':True]
['text':' ============================================================================================== ','line_number':37,'multiline':True]
['text':' Internal macros                                                                                ','line_number':38,'multiline':True]
['text':' ============================================================================================== ','line_number':39,'multiline':True]
['text':'*
 * @brief   Computes the smallest integer value not less than `x`.
 *
 * @param   x   The value.
 *
 * @return  The smallest integer value not less than `x`.
 ','line_number':41,'multiline':True]
['text':'*
 * @brief   Converts bits to bytes.
 *
 * @param   x   The value in bits.
 *
 * @return  The amount of bytes needed to fit `x` bits.
 ','line_number':51,'multiline':True]
['text':'*
 * @brief   Returns the offset of the given bit.
 *
 * @param   index   The bit index.
 *
 * @return  The offset of the given bit.
 ','line_number':61,'multiline':True]
['text':' ============================================================================================== ','line_number':71,'multiline':True]
['text':' Internal functions                                                                             ','line_number':72,'multiline':True]
['text':' ============================================================================================== ','line_number':73,'multiline':True]
['text':' ---------------------------------------------------------------------------------------------- ','line_number':75,'multiline':True]
['text':' Helper functions                                                                               ','line_number':76,'multiline':True]
['text':' ---------------------------------------------------------------------------------------------- ','line_number':77,'multiline':True]
['text':'*
 * @brief   Initializes the given `vector` with `count` "zero"-bytes.
 *
 * @param   vector  A pointer to the `ZyanVector` instance.
 * @param   count   The number of bytes.
 *
 * @return  A zyan status code.
 ','line_number':79,'multiline':True]
['text':' ---------------------------------------------------------------------------------------------- ','line_number':100,'multiline':True]
['text':' Byte operations                                                                                ','line_number':101,'multiline':True]
['text':' ---------------------------------------------------------------------------------------------- ','line_number':102,'multiline':True]
['text':' ---------------------------------------------------------------------------------------------- ','line_number':122,'multiline':True]
['text':' ============================================================================================== ','line_number':124,'multiline':True]
['text':' Exported functions                                                                             ','line_number':125,'multiline':True]
['text':' ============================================================================================== ','line_number':126,'multiline':True]
['text':' ---------------------------------------------------------------------------------------------- ','line_number':128,'multiline':True]
['text':' Constructor and destructor                                                                     ','line_number':129,'multiline':True]
['text':' ---------------------------------------------------------------------------------------------- ','line_number':130,'multiline':True]
['text':' ZYAN_NO_LIBC','line_number':140,'multiline':False]
['text':' ---------------------------------------------------------------------------------------------- ','line_number':192,'multiline':True]
['text':' Logical operations                                                                             ','line_number':193,'multiline':True]
['text':' ---------------------------------------------------------------------------------------------- ','line_number':194,'multiline':True]
['text':' ---------------------------------------------------------------------------------------------- ','line_number':260,'multiline':True]
['text':' Bit access                                                                                     ','line_number':261,'multiline':True]
['text':' ---------------------------------------------------------------------------------------------- ','line_number':262,'multiline':True]
['text':' ---------------------------------------------------------------------------------------------- ','line_number':363,'multiline':True]
['text':' ---------------------------------------------------------------------------------------------- ','line_number':403,'multiline':True]
['text':' Size management                                                                                ','line_number':404,'multiline':True]
['text':' ---------------------------------------------------------------------------------------------- ','line_number':405,'multiline':True]
['text':' ---------------------------------------------------------------------------------------------- ','line_number':449,'multiline':True]
['text':' Memory management                                                                              ','line_number':450,'multiline':True]
['text':' ---------------------------------------------------------------------------------------------- ','line_number':451,'multiline':True]
['text':' ---------------------------------------------------------------------------------------------- ','line_number':463,'multiline':True]
['text':' Information                                                                                    ','line_number':464,'multiline':True]
['text':' ---------------------------------------------------------------------------------------------- ','line_number':465,'multiline':True]
['text':' ---------------------------------------------------------------------------------------------- ','line_number':507,'multiline':True]
['text':' ---------------------------------------------------------------------------------------------- ','line_number':634,'multiline':True]
['text':'ZyanStatus ZyanBitsetToU32(const ZyanBitset* bitset, ZyanU32* value)','line_number':636,'multiline':False]
['text':'{','line_number':637,'multiline':False]
['text':'    if (!bitset)','line_number':638,'multiline':False]
['text':'    {','line_number':639,'multiline':False]
['text':'        return ZYAN_STATUS_INVALID_ARGUMENT;','line_number':640,'multiline':False]
['text':'    }','line_number':641,'multiline':False]
['text':'    if (bitset->size > 32)','line_number':642,'multiline':False]
['text':'    {','line_number':643,'multiline':False]
['text':'        return ZYAN_STATUS_INVALID_OPERATION;','line_number':644,'multiline':False]
['text':'    }','line_number':645,'multiline':False]
['text':'','line_number':646,'multiline':False]
['text':'    // TODO:','line_number':647,'multiline':False]
['text':'','line_number':648,'multiline':False]
['text':'    return ZYAN_STATUS_SUCCESS;','line_number':649,'multiline':False]
['text':'}','line_number':650,'multiline':False]
['text':'','line_number':651,'multiline':False]
['text':'ZyanStatus ZyanBitsetToU64(const ZyanBitset* bitset, ZyanU64* value)','line_number':652,'multiline':False]
['text':'{','line_number':653,'multiline':False]
['text':'    if (!bitset)','line_number':654,'multiline':False]
['text':'    {','line_number':655,'multiline':False]
['text':'        return ZYAN_STATUS_INVALID_ARGUMENT;','line_number':656,'multiline':False]
['text':'    }','line_number':657,'multiline':False]
['text':'    if (bitset->size > 64)','line_number':658,'multiline':False]
['text':'    {','line_number':659,'multiline':False]
['text':'        return ZYAN_STATUS_INVALID_OPERATION;','line_number':660,'multiline':False]
['text':'    }','line_number':661,'multiline':False]
['text':'','line_number':662,'multiline':False]
['text':'    // TODO:','line_number':663,'multiline':False]
['text':'    ','line_number':664,'multiline':False]
['text':'    return ZYAN_STATUS_SUCCESS;','line_number':665,'multiline':False]
['text':'}','line_number':666,'multiline':False]
['text':' ---------------------------------------------------------------------------------------------- ','line_number':668,'multiline':True]
['text':' ============================================================================================== ','line_number':670,'multiline':True]
