['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 * vim: set ts=8 sts=2 et sw=2 tw=80:
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':1,'multiline':True]
['text':' BytecodeEmitter','line_number':9,'multiline':False]
['text':' EmitterScope','line_number':10,'multiline':False]
['text':' JSOp','line_number':11,'multiline':False]
['text':' ScopeKind','line_number':12,'multiline':False]
['text':' TryNoteKind','line_number':13,'multiline':False]
['text':' ES 13.7.4.8 step 2. The initial freshening.','line_number':45,'multiline':False]
['text':'','line_number':46,'multiline':False]
['text':' If an initializer let-declaration may be captured during loop','line_number':47,'multiline':False]
['text':' iteration, the current scope has an environment.  If so, freshen the','line_number':48,'multiline':False]
['text':' current environment to expose distinct bindings for each loop','line_number':49,'multiline':False]
['text':' iteration.','line_number':50,'multiline':False]
['text':' The environment chain only includes an environment for the','line_number':52,'multiline':False]
['text':' for(;;) loop head's let-declaration *if* a scope binding is','line_number':53,'multiline':False]
['text':' captured, thus requiring a fresh environment each iteration. If','line_number':54,'multiline':False]
['text':' a lexical scope exists for the head, it must be the innermost','line_number':55,'multiline':False]
['text':' one. If that scope has closed-over bindings inducing an','line_number':56,'multiline':False]
['text':' environment, recreate the current environment.','line_number':57,'multiline':False]
['text':'              [stack]','line_number':70,'multiline':False]
['text':' Set loop and enclosing "update" offsets, for continue.  Note that we','line_number':103,'multiline':False]
['text':' continue to immediately *before* the block-freshening: continuing must','line_number':104,'multiline':False]
['text':' refresh the block.','line_number':105,'multiline':False]
['text':' ES 13.7.4.8 step 3.e. The per-iteration freshening.','line_number':110,'multiline':False]
['text':' The update code may not be executed at all; it needs its own TDZ','line_number':123,'multiline':False]
['text':' cache.','line_number':124,'multiline':False]
['text':'              [stack] UPDATE','line_number':147,'multiline':False]
['text':'            [stack]','line_number':150,'multiline':False]
['text':' If there is no condition clause and no update clause, mark','line_number':156,'multiline':False]
['text':' the loop-ending "goto" with the location of the "for".','line_number':157,'multiline':False]
['text':' This ensures that the debugger will stop on each loop','line_number':158,'multiline':False]
['text':' iteration.','line_number':159,'multiline':False]
['text':' Emit the loop-closing jump.','line_number':167,'multiline':False]
['text':'              [stack]','line_number':169,'multiline':False]
