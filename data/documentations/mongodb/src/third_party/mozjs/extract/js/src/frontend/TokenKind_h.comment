['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 * vim: set ts=8 sts=2 et sw=2 tw=80:
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':1,'multiline':True]
['text':'
 * List of token kinds and their ranges.
 *
 * The format for each line is:
 *
 *   MACRO(<TOKEN_KIND_NAME>, <DESCRIPTION>)
 *
 * or
 *
 *   RANGE(<TOKEN_RANGE_NAME>, <TOKEN_KIND_NAME>)
 *
 * where ;
 * <TOKEN_KIND_NAME> is a legal C identifier of the token, that will be used in
 * the JS engine source.
 *
 * <DESCRIPTION> is a string that describe about the token, and will be used in
 * error message.
 *
 * <TOKEN_RANGE_NAME> is a legal C identifier of the range that will be used to
 * JS engine source. It should end with `First` or `Last`. This is used to check
 * TokenKind by range-testing:
 *   BinOpFirst <= tt && tt <= BinOpLast
 *
 * Second argument of `RANGE` is the actual value of the <TOKEN_RANGE_NAME>,
 * should be same as one of <TOKEN_KIND_NAME> in other `MACRO`s.
 *
 * To use this macro, define two macros for `MACRO` and `RANGE`, and pass them
 * as arguments.
 *
 *   #define EMIT_TOKEN(name, desc) ...
 *   #define EMIT_RANGE(name, value) ...
 *   FOR_EACH_TOKEN_KIND_WITH_RANGE(EMIT_TOKEN, EMIT_RANGE)
 *   #undef EMIT_TOKEN
 *   #undef EMIT_RANGE
 *
 * If you don't need range data, use FOR_EACH_TOKEN_KIND instead.
 *
 *   #define EMIT_TOKEN(name, desc) ...
 *   FOR_EACH_TOKEN_KIND(EMIT_TOKEN)
 *   #undef EMIT_TOKEN
 *
 * Note that this list does not contain ERROR and LIMIT.
 ','line_number':12,'multiline':True]
['text':' only returned by peekTokenSameLine() ','line_number':58,'multiline':True]
['text':' conditional ','line_number':63,'multiline':True]
['text':' conditional ','line_number':64,'multiline':True]
['text':' increment ','line_number':65,'multiline':True]
['text':' decrement ','line_number':66,'multiline':True]
['text':' member operator ','line_number':67,'multiline':True]
['text':' rest arguments and spread operator ','line_number':68,'multiline':True]
['text':' start of template literal with substitutions ','line_number':82,'multiline':True]
['text':' template literal without substitutions ','line_number':84,'multiline':True]
['text':' contextual keywords ','line_number':124,'multiline':True]
['text':' future reserved words ','line_number':141,'multiline':True]
['text':' reserved words in strict mode ','line_number':146,'multiline':True]
['text':'                                                                   \
   * The following token types occupy contiguous ranges to enable easy \
   * range-testing.                                                    \
   ','line_number':156,'multiline':True]
['text':'                                                                   \
   * Binary operators.                                                 \
   * This list must be kept in the same order in several places:       \
   *   - the binary operators in ParseNode.h                           \
   *   - the precedence list in Parser.cpp                             \
   *   - the JSOp code list in BytecodeEmitter.cpp                     \
   ','line_number':160,'multiline':True]
['text':' escapes to avoid trigraphs warning ','line_number':167,'multiline':True]
['text':' logical or ','line_number':169,'multiline':True]
['text':' logical and ','line_number':170,'multiline':True]
['text':' bitwise-or ','line_number':171,'multiline':True]
['text':' bitwise-xor ','line_number':172,'multiline':True]
['text':' bitwise-and ','line_number':173,'multiline':True]
['text':' Equality operation tokens, per TokenKindIsEquality. ','line_number':175,'multiline':True]
['text':' Relational ops, per TokenKindIsRelational. ','line_number':183,'multiline':True]
['text':' Shift ops, per TokenKindIsShift. ','line_number':197,'multiline':True]
['text':' Unary operation tokens. ','line_number':212,'multiline':True]
['text':' function arrow ','line_number':220,'multiline':True]
['text':' Assignment ops, per TokenKindIsAssignment ','line_number':222,'multiline':True]
['text':' avoid trigraphs warning ','line_number':227,'multiline':True]
['text':' Values of this type are used to index into arrays such as isExprEnding[],','line_number':249,'multiline':False]
['text':' so the first value must be zero.','line_number':250,'multiline':False]
['text':' domain size','line_number':257,'multiline':False]
['text':' namespace frontend','line_number':322,'multiline':False]
['text':' namespace js','line_number':323,'multiline':False]
['text':' frontend_TokenKind_h ','line_number':325,'multiline':True]
