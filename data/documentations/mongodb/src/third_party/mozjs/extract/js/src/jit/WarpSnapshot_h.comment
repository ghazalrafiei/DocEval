['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 * vim: set ts=8 sts=2 et sw=2 tw=80:
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':1,'multiline':True]
['text':' js::FunctionFlags','line_number':18,'multiline':False]
['text':' Wrapper for GC things stored in WarpSnapshot. Asserts the GC pointer is not','line_number':50,'multiline':False]
['text':' nursery-allocated. These pointers must be traced using TraceWarpGCPtr.','line_number':51,'multiline':False]
['text':' Note: no pre-barrier is needed because this is a constant. No post-barrier','line_number':54,'multiline':False]
['text':' is needed because the value is always tenured.','line_number':55,'multiline':False]
['text':' WarpOpSnapshot is the base class for data attached to a single bytecode op by','line_number':73,'multiline':False]
['text':' WarpOracle. This is typically data that WarpBuilder can't read off-thread','line_number':74,'multiline':False]
['text':' without racing.','line_number':75,'multiline':False]
['text':' Bytecode offset.','line_number':86,'multiline':False]
['text':' Template object for JSOp::Arguments.','line_number':119,'multiline':False]
['text':' Note: this can be nullptr if the realm has no template object yet.','line_number':121,'multiline':False]
['text':' The "has RegExpShared" state for JSOp::RegExp's template object.','line_number':138,'multiline':False]
['text':' The object for JSOp::BuiltinObject if it exists at compile-time.','line_number':156,'multiline':False]
['text':' The intrinsic for JSOp::GetIntrinsic if it exists at compile-time.','line_number':176,'multiline':False]
['text':' Target module environment and slot information for JSOp::GetImport.','line_number':194,'multiline':False]
['text':' JSFunction info we don't want to read off-thread for JSOp::Lambda and','line_number':223,'multiline':False]
['text':' JSOp::LambdaArrow.','line_number':224,'multiline':False]
['text':' Informs WarpBuilder that an IC site is cold and execution should bail out.','line_number':250,'multiline':False]
['text':' Information from a Baseline IC stub.','line_number':264,'multiline':False]
['text':' Baseline stub code. Stored here to keep the CacheIRStubInfo alive.','line_number':266,'multiline':False]
['text':' Copied Baseline stub data. Allocated in the same LifoAlloc.','line_number':270,'multiline':False]
['text':' [SMDOC] Warp Nursery Object support','line_number':293,'multiline':False]
['text':'','line_number':294,'multiline':False]
['text':' CacheIR stub data can contain nursery allocated objects. This can happen for','line_number':295,'multiline':False]
['text':' example for GuardSpecificObject/GuardSpecificFunction or GuardProto.','line_number':296,'multiline':False]
['text':'','line_number':297,'multiline':False]
['text':' To support nursery GCs in parallel with off-thread compilation, we use the','line_number':298,'multiline':False]
['text':' following mechanism:','line_number':299,'multiline':False]
['text':'','line_number':300,'multiline':False]
['text':' * When WarpOracle copies stub data, it builds a Vector of nursery objects.','line_number':301,'multiline':False]
['text':'   The nursery object pointers in the stub data are replaced with the','line_number':302,'multiline':False]
['text':'   corresponding index into this Vector.','line_number':303,'multiline':False]
['text':'   See WarpScriptOracle::replaceNurseryPointers.','line_number':304,'multiline':False]
['text':'','line_number':305,'multiline':False]
['text':' * The Vector is copied to the snapshot and, at the end of compilation, to','line_number':306,'multiline':False]
['text':'   the IonScript. The Vector is only accessed on the main thread.','line_number':307,'multiline':False]
['text':'','line_number':308,'multiline':False]
['text':' * The MIR backend never accesses the raw JSObject*. Instead, it uses','line_number':309,'multiline':False]
['text':'   MNurseryObject which will load the object at runtime from the IonScript.','line_number':310,'multiline':False]
['text':'','line_number':311,'multiline':False]
['text':' WarpObjectField is a helper class to encode/decode a stub data field that','line_number':312,'multiline':False]
['text':' either stores an object or a nursery index.','line_number':313,'multiline':False]
['text':' This is a nursery index if the low bit is set. Else it's a JSObject*.','line_number':315,'multiline':False]
['text':' Information for inlining a scripted call IC.','line_number':350,'multiline':False]
['text':' Used for generating the correct guards.','line_number':352,'multiline':False]
['text':' Used for generating the inlined code.','line_number':355,'multiline':False]
['text':' Information for inlining an ordered set of types','line_number':380,'multiline':False]
['text':' Shape for JSOp::Rest.','line_number':399,'multiline':False]
['text':' Global environment for BindGName','line_number':418,'multiline':False]
['text':' Snapshot data for the environment object(s) created in the script's prologue.','line_number':450,'multiline':False]
['text':'','line_number':451,'multiline':False]
['text':' One of:','line_number':452,'multiline':False]
['text':'','line_number':453,'multiline':False]
['text':' * NoEnvironment: No environment object should be set. Leave the slot','line_number':454,'multiline':False]
['text':'   initialized to |undefined|.','line_number':455,'multiline':False]
['text':'','line_number':456,'multiline':False]
['text':' * ConstantObjectEnvironment: Use this JSObject* as environment object.','line_number':457,'multiline':False]
['text':'','line_number':458,'multiline':False]
['text':' * FunctionEnvironment: Use the callee's environment chain. Optionally','line_number':459,'multiline':False]
['text':'   allocate a new NamedLambdaObject and/or CallObject based on','line_number':460,'multiline':False]
['text':'   namedLambdaTemplate and callObjectTemplate.','line_number':461,'multiline':False]
['text':' Snapshot data for a single JSScript.','line_number':466,'multiline':False]
['text':' If the script has a JSOp::ImportMeta op, this is the module to bake in.','line_number':474,'multiline':False]
['text':' Whether this script is for an arrow function.','line_number':477,'multiline':False]
['text':' Captures information from previous bailouts to prevent bailout/recompile','line_number':499,'multiline':False]
['text':' loops.','line_number':500,'multiline':False]
['text':' True if any script in the compilation has the failedBoundsCheck flag. In','line_number':502,'multiline':False]
['text':' this case mark bounds checks as non-movable to prevent hoisting them in','line_number':503,'multiline':False]
['text':' TryEliminateBoundsCheck.','line_number':504,'multiline':False]
['text':' True if any script in the compilation has the failedLexicalCheck flag. In','line_number':507,'multiline':False]
['text':' this case mark lexical checks as non-movable.','line_number':508,'multiline':False]
['text':' Data allocated by WarpOracle on the main thread that's used off-thread by','line_number':521,'multiline':False]
['text':' WarpBuilder to build the MIR graph.','line_number':522,'multiline':False]
['text':' The scripts being compiled.','line_number':524,'multiline':False]
['text':' The global lexical environment and its thisObject(). We don't inline','line_number':527,'multiline':False]
['text':' cross-realm calls so this can be stored once per snapshot.','line_number':528,'multiline':False]
['text':' List of (originally) nursery-allocated objects. Must only be accessed on','line_number':534,'multiline':False]
['text':' the main thread. See also WarpObjectField.','line_number':535,'multiline':False]
['text':' A hash of the stub pointers and entry counts for each of the ICs','line_number':544,'multiline':False]
['text':' in this snapshot.','line_number':545,'multiline':False]
['text':' namespace jit','line_number':585,'multiline':False]
['text':' namespace js','line_number':586,'multiline':False]
['text':' jit_WarpSnapshot_h ','line_number':588,'multiline':True]
