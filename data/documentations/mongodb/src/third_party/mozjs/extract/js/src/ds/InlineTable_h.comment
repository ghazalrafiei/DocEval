['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 * vim: set ts=8 sts=2 et sw=2 tw=80:
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':1,'multiline':True]
['text':' The InlineTable below needs an abstract way of testing keys for','line_number':21,'multiline':False]
['text':' tombstone values, and to set a key in an entry to a tombstone.','line_number':22,'multiline':False]
['text':' This is provided by the KeyPolicy generic type argument, which','line_number':23,'multiline':False]
['text':' has a default implementation for pointers provided below.','line_number':24,'multiline':False]
['text':' A default implementation of a KeyPolicy for some types (only pointer','line_number':26,'multiline':False]
['text':' types for now).','line_number':27,'multiline':False]
['text':'','line_number':28,'multiline':False]
['text':' The `KeyPolicy` type parameter informs an InlineTable of how to','line_number':29,'multiline':False]
['text':' check for tombstone values and to set tombstone values within','line_number':30,'multiline':False]
['text':' the domain of key (entry).','line_number':31,'multiline':False]
['text':'','line_number':32,'multiline':False]
['text':' A `KeyPolicy` for some key type `K` must provide two static methods:','line_number':33,'multiline':False]
['text':'   static bool isTombstone(const K& key);','line_number':34,'multiline':False]
['text':'   static void setToTombstone(K& key);','line_number':35,'multiline':False]
['text':' Zero as tombstone means zero keys are invalid.','line_number':67,'multiline':False]
['text':' Leaves Ptr uninitialized.','line_number':146,'multiline':False]
['text':' Default copy constructor works for this structure.','line_number':154,'multiline':False]
['text':' Indicates whether inlAddPtr is a found result or an add pointer.','line_number':194,'multiline':False]
['text':' The add pointer that's returned here may indicate the limit entry of','line_number':283,'multiline':False]
['text':' the linear space, in which case the |add| operation will initialize','line_number':284,'multiline':False]
['text':' the table if necessary and add the entry there.','line_number':285,'multiline':False]
['text':' Switching to table mode before we add this pointer.','line_number':299,'multiline':False]
['text':' `Nothing` if `isInline_==true`','line_number':348,'multiline':False]
['text':' namespace detail','line_number':424,'multiline':False]
['text':' A map with InlineEntries number of entries kept inline in an array.','line_number':426,'multiline':False]
['text':'','line_number':427,'multiline':False]
['text':' The Key type must be zeroable as zeros are used as tombstone keys.','line_number':428,'multiline':False]
['text':' The Value type must have a default constructor.','line_number':429,'multiline':False]
['text':'','line_number':430,'multiline':False]
['text':' The API is very much like HashMap's.','line_number':431,'multiline':False]
['text':' A set with InlineEntries number of entries kept inline in an array.','line_number':543,'multiline':False]
['text':'','line_number':544,'multiline':False]
['text':' The T type must be zeroable as zeros are used as tombstone keys.','line_number':545,'multiline':False]
['text':' The T type must have a default constructor.','line_number':546,'multiline':False]
['text':'','line_number':547,'multiline':False]
['text':' The API is very much like HashMap's.','line_number':548,'multiline':False]
['text':' namespace js','line_number':642,'multiline':False]
['text':' ds_InlineTable_h','line_number':644,'multiline':False]
