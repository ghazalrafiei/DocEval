['text':' This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':1,'multiline':True]
['text':'*
 * Java program to estimate the memory usage of ICU objects (bug 1585536).
 *
 * It computes for each Intl constructor the amount of allocated memory. We're
 * currently using the maximum memory ("max" in the output) to estimate the
 * memory consumption of ICU objects.
 *
 * Insert before {@code JS_InitWithFailureDiagnostic} in "js.cpp":
 * 
 * <pre>
 * <code>
 * JS_SetICUMemoryFunctions(
 *     [](const void*, size_t size) {
 *       void* ptr = malloc(size);
 *       if (ptr) {
 *         printf("  alloc: %p -> %zu\n", ptr, size);
 *       }
 *       return ptr;
 *     },
 *     [](const void*, void* p, size_t size) {
 *       void* ptr = realloc(p, size);
 *       if (p) {
 *         printf("  realloc: %p -> %p -> %zu\n", p, ptr, size);
 *       } else {
 *         printf("  alloc: %p -> %zu\n", ptr, size);
 *       }
 *       return ptr;
 *     },
 *     [](const void*, void* p) {
 *       if (p) {
 *         printf("  free: %p\n", p);
 *       }
 *       free(p);
 *     });
 * </code>
 * </pre>
 * 
 * Run this script with:
 * {@code java --enable-preview --source=14 IcuMemoryUsage.java $MOZ_JS_SHELL}.
 ','line_number':11,'multiline':True]
['text':' Create a clean slate when starting a new create cycle or before termination.','line_number':69,'multiline':False]
['text':' Only measure the allocation size when creating the second object with the','line_number':74,'multiline':False]
['text':' same locale.','line_number':75,'multiline':False]
['text':' Instantiates UPluralRules and UNumberFormatter','line_number':216,'multiline':False]
['text':' objects.add(Entry.of("PluralRules", "o.select(0)"));','line_number':217,'multiline':False]
['text':' Instantiates only UPluralRules','line_number':218,'multiline':False]
['text':' Loop twice in case the first time we create an object with a new locale','line_number':239,'multiline':False]
['text':' allocates additional memory when loading the locale data.','line_number':240,'multiline':False]
