['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 * vim: set ts=8 sts=2 et sw=2 tw=80:
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':1,'multiline':True]
['text':' MOZ_ASSERT, MOZ_CRASH','line_number':12,'multiline':False]
['text':' js::jit::{InlineFrameIterator,MaybeReadFallback,ReadFrame_Actuals}','line_number':14,'multiline':False]
['text':' js::InterpreterFrame','line_number':15,'multiline':False]
['text':' js::InterpreterFrame::unaliasedForEachActual','line_number':17,'multiline':False]
['text':' :TODO: (Bug 1070962) If we are introspecting the frame which is','line_number':37,'multiline':False]
['text':' being bailed, then we might be in the middle of recovering','line_number':38,'multiline':False]
['text':' instructions. Stacking computeInstructionResults implies that we','line_number':39,'multiline':False]
['text':' might be recovering result twice. In the mean time, to avoid','line_number':40,'multiline':False]
['text':' that, we just return Undefined values for instruction results','line_number':41,'multiline':False]
['text':' which are not yet recovered.','line_number':42,'multiline':False]
['text':' namespace js','line_number':55,'multiline':False]
['text':' vm_FrameIter_inl_h','line_number':57,'multiline':False]
