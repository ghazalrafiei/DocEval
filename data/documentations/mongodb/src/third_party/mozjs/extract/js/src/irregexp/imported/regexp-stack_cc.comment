['text':' Copyright 2009 the V8 project authors. All rights reserved.','line_number':1,'multiline':False]
['text':' Use of this source code is governed by a BSD-style license that can be','line_number':2,'multiline':False]
['text':' found in the LICENSE file.','line_number':3,'multiline':False]
['text':' Irregexp is not reentrant in several ways; in particular, the','line_number':14,'multiline':False]
['text':' RegExpStackScope is not reentrant since the destructor frees allocated','line_number':15,'multiline':False]
['text':' memory. Protect against reentrancy here.','line_number':16,'multiline':False]
['text':' Reset the buffer if it has grown.','line_number':23,'multiline':False]
['text':' Force dynamic stacks prior to archiving. Any growth will do. A dynamic','line_number':34,'multiline':False]
['text':' stack is needed because stack archival & restoration rely on `memory_`','line_number':35,'multiline':False]
['text':' pointing at a fixed-location backing store, whereas the static stack is','line_number':36,'multiline':False]
['text':' tied to a RegExpStack instance.','line_number':37,'multiline':False]
['text':' This stack may not be used after being freed. Just reset to invalid values','line_number':70,'multiline':False]
['text':' to ensure we don't accidentally use old memory areas.','line_number':71,'multiline':False]
['text':' Copy original memory into top of new memory.','line_number':84,'multiline':False]
['text':' namespace internal','line_number':100,'multiline':False]
['text':' namespace v8','line_number':101,'multiline':False]
