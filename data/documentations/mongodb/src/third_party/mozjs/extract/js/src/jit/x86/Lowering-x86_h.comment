['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 * vim: set ts=8 sts=2 et sw=2 tw=80:
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':1,'multiline':True]
['text':' Returns a box allocation with type set to reg1 and payload set to reg2.','line_number':20,'multiline':False]
['text':' It's a trap! On x86, the 1-byte store can only use one of','line_number':24,'multiline':False]
['text':' {al,bl,cl,dl,ah,bh,ch,dh}. That means if the register allocator','line_number':25,'multiline':False]
['text':' gives us one of {edi,esi,ebp,esp}, we're out of luck. (The formatter','line_number':26,'multiline':False]
['text':' will assert on us.) Ideally, we'd just ask the register allocator to','line_number':27,'multiline':False]
['text':' give us one of {al,bl,cl,dl}. For now, just useFixed(al).','line_number':28,'multiline':False]
['text':' namespace jit','line_number':74,'multiline':False]
['text':' namespace js','line_number':75,'multiline':False]
['text':' jit_x86_Lowering_x86_h ','line_number':77,'multiline':True]
