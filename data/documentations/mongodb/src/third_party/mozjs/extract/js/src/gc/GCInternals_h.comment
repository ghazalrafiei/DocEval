['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 * vim: set ts=8 sts=2 et sw=2 tw=80:
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':1,'multiline':True]
['text':'
 * GC-internal definitions.
 ','line_number':7,'multiline':True]
['text':'
 * There are a couple of classes here that serve mostly as "tokens" indicating
 * that a precondition holds. Some functions force the caller to possess such a
 * token because they require the precondition to hold, and it is better to make
 * the precondition explicit at the API entry point than to crash in an
 * assertion later on when it is relied upon.
 ','line_number':23,'multiline':True]
['text':'
 * A class that serves as a token that the nursery in the current thread's zone
 * group is empty.
 ','line_number':40,'multiline':True]
['text':' Check that the nursery is empty.','line_number':50,'multiline':False]
['text':' For subclasses that need to empty the nursery in their constructors.','line_number':53,'multiline':False]
['text':'
 * Evict the nursery upon construction. Serves as a token indicating that the
 * nursery is empty. (See AutoAssertEmptyNursery, above.)
 ','line_number':65,'multiline':True]
['text':' Ensure we're only used from within the GC.','line_number':80,'multiline':False]
['text':' Ensure there is no off-thread parsing running.','line_number':83,'multiline':False]
['text':' Set up a check to assert if we try to start an off-thread parse.','line_number':86,'multiline':False]
['text':' Abstract base class for exclusive heap access for tracing or GC.','line_number':98,'multiline':False]
['text':' During a GC we can check that it's not possible for anything else to be','line_number':124,'multiline':False]
['text':' using the atoms zone.','line_number':125,'multiline':False]
['text':' This class should be used by any code that needs exclusive access to the heap','line_number':148,'multiline':False]
['text':' in order to trace through it.','line_number':149,'multiline':False]
['text':' This class should be used by any code that needs exclusive access to the heap','line_number':158,'multiline':False]
['text':' in order to trace through it.','line_number':159,'multiline':False]
['text':'','line_number':160,'multiline':False]
['text':' This version also empties the nursery after finishing any ongoing GC.','line_number':161,'multiline':False]
['text':'
 * Temporarily disable incremental barriers.
 ','line_number':172,'multiline':True]
['text':' Nasty special case: verification runs a minor GC, which *may* nest','line_number':203,'multiline':False]
['text':' inside of an outer minor GC. This is not allowed by the','line_number':204,'multiline':False]
['text':' gc::Statistics phase tree. So we pause the "real" GC, if in fact one','line_number':205,'multiline':False]
['text':' is in progress.','line_number':206,'multiline':False]
['text':' JS_GC_ZEAL ','line_number':226,'multiline':True]
['text':' TODO: Bug 1650075. Adding XPCONNECT_SHUTDOWN seems to cause crash.','line_number':286,'multiline':False]
['text':' namespace gc ','line_number':302,'multiline':True]
['text':' namespace js ','line_number':303,'multiline':True]
['text':' gc_GCInternals_h ','line_number':305,'multiline':True]
