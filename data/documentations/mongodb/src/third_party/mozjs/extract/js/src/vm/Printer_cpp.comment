['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 * vim: set ts=8 sts=2 et sw=2 tw=80:
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':1,'multiline':True]
['text':' namespace','line_number':39,'multiline':False]
['text':' Simple shortcut to avoid allocating strings.','line_number':61,'multiline':False]
['text':' Include trailing \0 ','line_number':159,'multiline':True]
['text':' s is within the buffer already ','line_number':181,'multiline':True]
['text':' buffer was realloc'ed ','line_number':183,'multiline':True]
['text':' this is where it lives now ','line_number':185,'multiline':True]
['text':' clang-format off','line_number':242,'multiline':False]
['text':' clang-format on','line_number':253,'multiline':False]
['text':' clang-format off','line_number':257,'multiline':False]
['text':' clang-format on','line_number':266,'multiline':False]
['text':' Loop control variables: end points at end of string sentinel. ','line_number':287,'multiline':True]
['text':' Move t forward from s past un-quote-worthy characters. ','line_number':289,'multiline':True]
['text':' Use escapeMap, \u, or \x only if necessary. ','line_number':327,'multiline':True]
['text':'
       * Use \x only if the high byte is 0 and we're in a quoted string,
       * because ECMA-262 allows only \u, not \x, in Unicode identifiers
       * (see bug 621814).
       ','line_number':335,'multiline':True]
['text':' Sprint the closing quote and return the quoted string. ','line_number':346,'multiline':True]
['text':'= '\0' ','line_number':368,'multiline':True]
['text':' = '\0' ','line_number':381,'multiline':True]
['text':'size=','line_number':442,'multiline':True]
['text':'nitems=','line_number':442,'multiline':True]
['text':' This LSprinter might be allocated as part of the same LifoAlloc, so we','line_number':464,'multiline':False]
['text':' should not expect the destructor to be called.','line_number':465,'multiline':False]
['text':' Compute how much data will fit in the current chunk.','line_number':487,'multiline':False]
['text':' If necessary, allocate a new chunk for overflow data.','line_number':495,'multiline':False]
['text':' All fallible operations complete: now fill up existing space, then','line_number':510,'multiline':False]
['text':' overflow space in any new chunk.','line_number':511,'multiline':False]
['text':' tail_ and last are consecutive in memory.  LifoAlloc has no','line_number':522,'multiline':False]
['text':' metadata and is just a bump allocator, so we can cheat by','line_number':523,'multiline':False]
['text':' appending the newly-allocated space to tail_.','line_number':524,'multiline':False]
['text':' Remove the size of the header from the allocated length.','line_number':528,'multiline':False]
['text':' namespace js','line_number':553,'multiline':False]
