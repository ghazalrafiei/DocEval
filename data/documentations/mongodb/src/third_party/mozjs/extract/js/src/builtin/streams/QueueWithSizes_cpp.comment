['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 * vim: set ts=8 sts=2 et sw=2 tw=80:
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':1,'multiline':True]
['text':' Queue-with-sizes operations. ','line_number':7,'multiline':True]
['text':' MOZ_ASSERT','line_number':11,'multiline':False]
['text':' mozilla::Is{Infinite,NaN}','line_number':12,'multiline':False]
['text':' JS_ReportErrorNumberASCII','line_number':14,'multiline':False]
['text':' js::StreamController','line_number':16,'multiline':False]
['text':' JSClass, JSCLASS_HAS_RESERVED_SLOTS','line_number':17,'multiline':False]
['text':' JS::ToNumber','line_number':18,'multiline':False]
['text':' js::GetErrorMessage, JSMSG_*','line_number':19,'multiline':False]
['text':' JS::Rooted','line_number':20,'multiline':False]
['text':' JS::Value, JS::{Number,Object}Value','line_number':21,'multiline':False]
['text':' JSCompartment','line_number':22,'multiline':False]
['text':' JSContext','line_number':23,'multiline':False]
['text':' js::ListObject','line_number':24,'multiline':False]
['text':' js::NativeObject','line_number':25,'multiline':False]
['text':' JSCompartment::wrap','line_number':27,'multiline':False]
['text':' JSContext::check','line_number':28,'multiline':False]
['text':' js::NewBuiltinClassInstance','line_number':29,'multiline':False]
['text':' js::ListObject::*, js::StoreNewListInFixedSlot','line_number':30,'multiline':False]
['text':' js::AutoRealm','line_number':31,'multiline':False]
['text':'** 6.2. Queue-with-sizes operations **************************************','line_number':41,'multiline':True]
['text':'*
 * Streams spec, 6.2.1. DequeueValue ( container ) nothrow
 ','line_number':43,'multiline':True]
['text':' Step 1: Assert: container has [[queue]] and [[queueTotalSize]] internal','line_number':49,'multiline':False]
['text':'         slots (implicit).','line_number':50,'multiline':False]
['text':' Step 2: Assert: queue is not empty.','line_number':51,'multiline':False]
['text':' Step 3. Let pair be the first element of queue.','line_number':54,'multiline':False]
['text':' Step 4. Remove pair from queue, shifting all other elements downward','line_number':58,'multiline':False]
['text':'         (so that the second becomes the first, and so on).','line_number':59,'multiline':False]
['text':' Step 5: Set container.[[queueTotalSize]] to','line_number':62,'multiline':False]
['text':'         container.[[queueTotalSize]] − pair.[[size]].','line_number':63,'multiline':False]
['text':' Step 6: If container.[[queueTotalSize]] < 0, set','line_number':64,'multiline':False]
['text':'         container.[[queueTotalSize]] to 0.','line_number':65,'multiline':False]
['text':'         (This can occur due to rounding errors.)','line_number':66,'multiline':False]
['text':' Step 7: Return pair.[[value]].','line_number':74,'multiline':False]
['text':' Step 1: Assert: container has [[queue]] and [[queueTotalSize]] internal','line_number':79,'multiline':False]
['text':'         slots (implicit).','line_number':80,'multiline':False]
['text':' Step 2: Assert: queue is not empty.','line_number':81,'multiline':False]
['text':' Step 3. Let pair be the first element of queue.','line_number':84,'multiline':False]
['text':' (The value is being discarded, so all we must extract is the size.)','line_number':85,'multiline':False]
['text':' Step 4. Remove pair from queue, shifting all other elements downward','line_number':88,'multiline':False]
['text':'         (so that the second becomes the first, and so on).','line_number':89,'multiline':False]
['text':' Step 5: Set container.[[queueTotalSize]] to','line_number':92,'multiline':False]
['text':'         container.[[queueTotalSize]] − pair.[[size]].','line_number':93,'multiline':False]
['text':' Step 6: If container.[[queueTotalSize]] < 0, set','line_number':94,'multiline':False]
['text':'         container.[[queueTotalSize]] to 0.','line_number':95,'multiline':False]
['text':'         (This can occur due to rounding errors.)','line_number':96,'multiline':False]
['text':' Step 7: Return pair.[[value]].  (omitted because not used)','line_number':104,'multiline':False]
['text':'*
 * Streams spec, 6.2.2. EnqueueValueWithSize ( container, value, size ) throws
 ','line_number':107,'multiline':True]
['text':' Step 1: Assert: container has [[queue]] and [[queueTotalSize]] internal','line_number':115,'multiline':False]
['text':'         slots (implicit).','line_number':116,'multiline':False]
['text':' Step 2: Let size be ? ToNumber(size).','line_number':117,'multiline':False]
['text':' Step 3: If ! IsFiniteNonNegativeNumber(size) is false, throw a RangeError','line_number':123,'multiline':False]
['text':'         exception.','line_number':124,'multiline':False]
['text':' Step 4: Append Record {[[value]]: value, [[size]]: size} as the last','line_number':131,'multiline':False]
['text':'         element of container.[[queue]].','line_number':132,'multiline':False]
['text':' Step 5: Set container.[[queueTotalSize]] to','line_number':147,'multiline':False]
['text':'         container.[[queueTotalSize]] + size.','line_number':148,'multiline':False]
['text':'*
 * Streams spec, 6.2.4. ResetQueue ( container ) nothrow
 ','line_number':155,'multiline':True]
['text':' Step 1: Assert: container has [[queue]] and [[queueTotalSize]] internal','line_number':160,'multiline':False]
['text':'         slots (implicit).','line_number':161,'multiline':False]
['text':' Step 2: Set container.[[queue]] to a new empty List.','line_number':162,'multiline':False]
['text':' Step 3: Set container.[[queueTotalSize]] to 0.','line_number':168,'multiline':False]
