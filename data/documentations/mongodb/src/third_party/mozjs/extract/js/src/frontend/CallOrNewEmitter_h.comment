['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 * vim: set ts=8 sts=2 et sw=2 tw=80:
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':1,'multiline':True]
['text':' TaggedParserAtomIndex','line_number':17,'multiline':False]
['text':' Class for emitting bytecode for call or new expression.','line_number':30,'multiline':False]
['text':'','line_number':31,'multiline':False]
['text':' Usage: (check for the return value is omitted for simplicity)','line_number':32,'multiline':False]
['text':'','line_number':33,'multiline':False]
['text':'   `print(arg);`','line_number':34,'multiline':False]
['text':'     CallOrNewEmitter cone(this, JSOp::Call,','line_number':35,'multiline':False]
['text':'                           CallOrNewEmitter::ArgumentsKind::Other,','line_number':36,'multiline':False]
['text':'                           ValueUsage::WantValue);','line_number':37,'multiline':False]
['text':'     cone.emitNameCallee(print);','line_number':38,'multiline':False]
['text':'     cone.emitThis();','line_number':39,'multiline':False]
['text':'     cone.prepareForNonSpreadArguments();','line_number':40,'multiline':False]
['text':'     emit(arg);','line_number':41,'multiline':False]
['text':'     cone.emitEnd(1, Some(offset_of_callee));','line_number':42,'multiline':False]
['text':'','line_number':43,'multiline':False]
['text':'   `callee.prop(arg1, arg2);`','line_number':44,'multiline':False]
['text':'     CallOrNewEmitter cone(this, JSOp::Call,','line_number':45,'multiline':False]
['text':'                           CallOrNewEmitter::ArgumentsKind::Other,','line_number':46,'multiline':False]
['text':'                           ValueUsage::WantValue);','line_number':47,'multiline':False]
['text':'     PropOpEmitter& poe = cone.prepareForPropCallee(false);','line_number':48,'multiline':False]
['text':'     ... emit `callee.prop` with `poe` here...','line_number':49,'multiline':False]
['text':'     cone.emitThis();','line_number':50,'multiline':False]
['text':'     cone.prepareForNonSpreadArguments();','line_number':51,'multiline':False]
['text':'     emit(arg1);','line_number':52,'multiline':False]
['text':'     emit(arg2);','line_number':53,'multiline':False]
['text':'     cone.emitEnd(2, Some(offset_of_callee));','line_number':54,'multiline':False]
['text':'','line_number':55,'multiline':False]
['text':'   `callee[key](arg);`','line_number':56,'multiline':False]
['text':'     CallOrNewEmitter cone(this, JSOp::Call,','line_number':57,'multiline':False]
['text':'                           CallOrNewEmitter::ArgumentsKind::Other,','line_number':58,'multiline':False]
['text':'                           ValueUsage::WantValue);','line_number':59,'multiline':False]
['text':'     ElemOpEmitter& eoe = cone.prepareForElemCallee(false);','line_number':60,'multiline':False]
['text':'     ... emit `callee[key]` with `eoe` here...','line_number':61,'multiline':False]
['text':'     cone.emitThis();','line_number':62,'multiline':False]
['text':'     cone.prepareForNonSpreadArguments();','line_number':63,'multiline':False]
['text':'     emit(arg);','line_number':64,'multiline':False]
['text':'     cone.emitEnd(1, Some(offset_of_callee));','line_number':65,'multiline':False]
['text':'','line_number':66,'multiline':False]
['text':'   `callee.#method(arg);`','line_number':67,'multiline':False]
['text':'     CallOrNewEmitter cone(this, JSOp::Call,','line_number':68,'multiline':False]
['text':'                           CallOrNewEmitter::ArgumentsKind::Other,','line_number':69,'multiline':False]
['text':'                           ValueUsage::WantValue);','line_number':70,'multiline':False]
['text':'     PrivateOpEmitter& xoe = cone.prepareForPrivateCallee();','line_number':71,'multiline':False]
['text':'     ... emit `callee.#method` with `xoe` here...','line_number':72,'multiline':False]
['text':'     cone.prepareForNonSpreadArguments();','line_number':73,'multiline':False]
['text':'     emit(arg);','line_number':74,'multiline':False]
['text':'     cone.emitEnd(1, Some(offset_of_callee));','line_number':75,'multiline':False]
['text':'','line_number':76,'multiline':False]
['text':'   `(function() { ... })(arg);`','line_number':77,'multiline':False]
['text':'     CallOrNewEmitter cone(this, JSOp::Call,','line_number':78,'multiline':False]
['text':'                           CallOrNewEmitter::ArgumentsKind::Other,','line_number':79,'multiline':False]
['text':'                           ValueUsage::WantValue);','line_number':80,'multiline':False]
['text':'     cone.prepareForFunctionCallee();','line_number':81,'multiline':False]
['text':'     emit(function);','line_number':82,'multiline':False]
['text':'     cone.emitThis();','line_number':83,'multiline':False]
['text':'     cone.prepareForNonSpreadArguments();','line_number':84,'multiline':False]
['text':'     emit(arg);','line_number':85,'multiline':False]
['text':'     cone.emitEnd(1, Some(offset_of_callee));','line_number':86,'multiline':False]
['text':'','line_number':87,'multiline':False]
['text':'   `super(arg);`','line_number':88,'multiline':False]
['text':'     CallOrNewEmitter cone(this, JSOp::Call,','line_number':89,'multiline':False]
['text':'                           CallOrNewEmitter::ArgumentsKind::Other,','line_number':90,'multiline':False]
['text':'                           ValueUsage::WantValue);','line_number':91,'multiline':False]
['text':'     cone.emitSuperCallee();','line_number':92,'multiline':False]
['text':'     cone.emitThis();','line_number':93,'multiline':False]
['text':'     cone.prepareForNonSpreadArguments();','line_number':94,'multiline':False]
['text':'     emit(arg);','line_number':95,'multiline':False]
['text':'     cone.emitEnd(1, Some(offset_of_callee));','line_number':96,'multiline':False]
['text':'','line_number':97,'multiline':False]
['text':'   `(some_other_expression)(arg);`','line_number':98,'multiline':False]
['text':'     CallOrNewEmitter cone(this, JSOp::Call,','line_number':99,'multiline':False]
['text':'                           CallOrNewEmitter::ArgumentsKind::Other,','line_number':100,'multiline':False]
['text':'                           ValueUsage::WantValue);','line_number':101,'multiline':False]
['text':'     cone.prepareForOtherCallee();','line_number':102,'multiline':False]
['text':'     emit(some_other_expression);','line_number':103,'multiline':False]
['text':'     cone.emitThis();','line_number':104,'multiline':False]
['text':'     cone.prepareForNonSpreadArguments();','line_number':105,'multiline':False]
['text':'     emit(arg);','line_number':106,'multiline':False]
['text':'     cone.emitEnd(1, Some(offset_of_callee));','line_number':107,'multiline':False]
['text':'','line_number':108,'multiline':False]
['text':'   `print(...arg);`','line_number':109,'multiline':False]
['text':'     CallOrNewEmitter cone(this, JSOp::SpreadCall,','line_number':110,'multiline':False]
['text':'                           CallOrNewEmitter::ArgumentsKind::SingleSpread,','line_number':111,'multiline':False]
['text':'                           ValueUsage::WantValue);','line_number':112,'multiline':False]
['text':'     cone.emitNameCallee(print);','line_number':113,'multiline':False]
['text':'     cone.emitThis();','line_number':114,'multiline':False]
['text':'     if (cone.wantSpreadOperand()) {','line_number':115,'multiline':False]
['text':'       emit(arg)','line_number':116,'multiline':False]
['text':'     }','line_number':117,'multiline':False]
['text':'     cone.emitSpreadArgumentsTest();','line_number':118,'multiline':False]
['text':'     emit([...arg]);','line_number':119,'multiline':False]
['text':'     cone.emitEnd(1, Some(offset_of_callee));','line_number':120,'multiline':False]
['text':'','line_number':121,'multiline':False]
['text':'   `new f(arg);`','line_number':122,'multiline':False]
['text':'     CallOrNewEmitter cone(this, JSOp::New,','line_number':123,'multiline':False]
['text':'                           CallOrNewEmitter::ArgumentsKind::Other,','line_number':124,'multiline':False]
['text':'                           ValueUsage::WantValue);','line_number':125,'multiline':False]
['text':'     cone.emitNameCallee(f);','line_number':126,'multiline':False]
['text':'     cone.emitThis();','line_number':127,'multiline':False]
['text':'     cone.prepareForNonSpreadArguments();','line_number':128,'multiline':False]
['text':'     emit(arg);','line_number':129,'multiline':False]
['text':'     cone.emitEnd(1, Some(offset_of_callee));','line_number':130,'multiline':False]
['text':'','line_number':131,'multiline':False]
['text':' Specify this for the following case:','line_number':137,'multiline':False]
['text':'','line_number':138,'multiline':False]
['text':'   g(...input);','line_number':139,'multiline':False]
['text':'','line_number':140,'multiline':False]
['text':' This enables optimization to avoid allocating an intermediate array','line_number':141,'multiline':False]
['text':' for spread operation.','line_number':142,'multiline':False]
['text':'','line_number':143,'multiline':False]
['text':' wantSpreadOperand() returns true when this is specified.','line_number':144,'multiline':False]
['text':' Used for default derived class constructors:','line_number':147,'multiline':False]
['text':'','line_number':148,'multiline':False]
['text':'   constructor(...args) {','line_number':149,'multiline':False]
['text':'      super(...args);','line_number':150,'multiline':False]
['text':'   }','line_number':151,'multiline':False]
['text':'','line_number':152,'multiline':False]
['text':' The rest-parameter is directly passed through to the `super` call without','line_number':153,'multiline':False]
['text':' using the iteration protocol.','line_number':154,'multiline':False]
['text':' The opcode for the call or new.','line_number':161,'multiline':False]
['text':' Whether the call is a spread call with single parameter or not.','line_number':164,'multiline':False]
['text':' See the comment in emitSpreadArgumentsTest for more details.','line_number':165,'multiline':False]
['text':' The branch for spread call optimization.','line_number':168,'multiline':False]
['text':' The state of this emitter.','line_number':175,'multiline':False]
['text':'','line_number':176,'multiline':False]
['text':' +-------+   emitNameCallee           +------------+','line_number':177,'multiline':False]
['text':' | Start |-+------------------------->| NameCallee |------+','line_number':178,'multiline':False]
['text':' +-------+ |                          +------------+      |','line_number':179,'multiline':False]
['text':'           |                                              |','line_number':180,'multiline':False]
['text':'           | prepareForPropCallee     +------------+      v','line_number':181,'multiline':False]
['text':'           +------------------------->| PropCallee |----->+','line_number':182,'multiline':False]
['text':'           |                          +------------+      |','line_number':183,'multiline':False]
['text':'           |                                              |','line_number':184,'multiline':False]
['text':'           | prepareForElemCallee     +------------+      v','line_number':185,'multiline':False]
['text':'           +------------------------->| ElemCallee |----->+','line_number':186,'multiline':False]
['text':'           |                          +------------+      |','line_number':187,'multiline':False]
['text':'           |                                              |','line_number':188,'multiline':False]
['text':'           | prepareForPrivateCallee  +---------------+   v','line_number':189,'multiline':False]
['text':'           +------------------------->| PrivateCallee |-->+','line_number':190,'multiline':False]
['text':'           |                          +---------------+   |','line_number':191,'multiline':False]
['text':'           |                                              |','line_number':192,'multiline':False]
['text':'           | prepareForFunctionCallee +----------------+  v','line_number':193,'multiline':False]
['text':'           +------------------------->| FunctionCallee |->+','line_number':194,'multiline':False]
['text':'           |                          +----------------+  |','line_number':195,'multiline':False]
['text':'           |                                              |','line_number':196,'multiline':False]
['text':'           | emitSuperCallee          +-------------+     v','line_number':197,'multiline':False]
['text':'           +------------------------->| SuperCallee |---->+','line_number':198,'multiline':False]
['text':'           |                          +-------------+     |','line_number':199,'multiline':False]
['text':'           |                                              |','line_number':200,'multiline':False]
['text':'           | prepareForOtherCallee    +-------------+     v','line_number':201,'multiline':False]
['text':'           +------------------------->| OtherCallee |---->+','line_number':202,'multiline':False]
['text':'                                      +-------------+     |','line_number':203,'multiline':False]
['text':'                                                          |','line_number':204,'multiline':False]
['text':' +--------------------------------------------------------+','line_number':205,'multiline':False]
['text':' |','line_number':206,'multiline':False]
['text':' | emitThis +------+','line_number':207,'multiline':False]
['text':' +--------->| This |-+','line_number':208,'multiline':False]
['text':'            +------+ |','line_number':209,'multiline':False]
['text':'                     |','line_number':210,'multiline':False]
['text':' +-------------------+','line_number':211,'multiline':False]
['text':' |','line_number':212,'multiline':False]
['text':' | [!isSpread]','line_number':213,'multiline':False]
['text':' |   prepareForNonSpreadArguments    +-----------+ emitEnd +-----+','line_number':214,'multiline':False]
['text':' +------------------------------->+->| Arguments |-------->| End |','line_number':215,'multiline':False]
['text':' |                                ^  +-----------+         +-----+','line_number':216,'multiline':False]
['text':' |                                |','line_number':217,'multiline':False]
['text':' |                                | wantSpreadIteration','line_number':218,'multiline':False]
['text':' |                                |','line_number':219,'multiline':False]
['text':' |                                |         +-----------------+','line_number':220,'multiline':False]
['text':' |                                +---------| SpreadIteration |------+','line_number':221,'multiline':False]
['text':' |                                          +-----------------+      |','line_number':222,'multiline':False]
['text':' | [isSpread]                                                        |','line_number':223,'multiline':False]
['text':' |   wantSpreadOperand +-------------------+ emitSpreadArgumentsTest |','line_number':224,'multiline':False]
['text':' +-------------------->| WantSpreadOperand |-------------------------+','line_number':225,'multiline':False]
['text':'                       +-------------------+','line_number':226,'multiline':False]
['text':' The initial state.','line_number':228,'multiline':False]
['text':' After calling emitNameCallee.','line_number':231,'multiline':False]
['text':' After calling prepareForPropCallee.','line_number':234,'multiline':False]
['text':' After calling prepareForElemCallee.','line_number':237,'multiline':False]
['text':' After calling prepareForPrivateCallee.','line_number':240,'multiline':False]
['text':' After calling prepareForFunctionCallee.','line_number':243,'multiline':False]
['text':' After calling emitSuperCallee.','line_number':246,'multiline':False]
['text':' After calling prepareForOtherCallee.','line_number':249,'multiline':False]
['text':' After calling emitThis.','line_number':252,'multiline':False]
['text':' After calling wantSpreadOperand.','line_number':255,'multiline':False]
['text':' After calling emitSpreadArgumentsTest.','line_number':258,'multiline':False]
['text':' After calling prepareForNonSpreadArguments.','line_number':261,'multiline':False]
['text':' After calling emitEnd.','line_number':264,'multiline':False]
['text':' Used by BytecodeEmitter::emitPipeline to reuse CallOrNewEmitter instance','line_number':318,'multiline':False]
['text':' across multiple chained calls.','line_number':319,'multiline':False]
['text':' See the usage in the comment at the top of the class.','line_number':324,'multiline':False]
['text':' Parameters are the offset in the source code for each character below:','line_number':329,'multiline':False]
['text':'','line_number':330,'multiline':False]
['text':'   callee(arg);','line_number':331,'multiline':False]
['text':'   ^','line_number':332,'multiline':False]
['text':'   |','line_number':333,'multiline':False]
['text':'   beginPos','line_number':334,'multiline':False]
['text':'','line_number':335,'multiline':False]
['text':' Can be Nothing() if not available.','line_number':336,'multiline':False]
['text':' namespace frontend ','line_number':341,'multiline':True]
['text':' namespace js ','line_number':342,'multiline':True]
['text':' frontend_CallOrNewEmitter_h ','line_number':344,'multiline':True]
