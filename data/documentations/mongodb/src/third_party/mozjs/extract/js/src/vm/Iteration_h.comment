['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 * vim: set ts=8 sts=2 et sw=2 tw=80:
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':1,'multiline':True]
['text':'
 * JavaScript iterators.
 ','line_number':10,'multiline':True]
['text':' Object being iterated.  Non-null except in NativeIterator sentinels and','line_number':28,'multiline':False]
['text':' empty property iterators created when |null| or |undefined| is iterated.','line_number':29,'multiline':False]
['text':' Internal iterator object.','line_number':32,'multiline':False]
['text':' The end of GCPtrShapes that appear directly after |this|, as part of an','line_number':35,'multiline':False]
['text':' overall allocation that stores |*this|, shapes, and iterated strings.','line_number':36,'multiline':False]
['text':' Once this has been fully initialized, it also equals the start of iterated','line_number':37,'multiline':False]
['text':' strings.','line_number':38,'multiline':False]
['text':' initialized by constructor','line_number':39,'multiline':False]
['text':' The next property, pointing into an array of strings directly after any','line_number':41,'multiline':False]
['text':' GCPtrShapes that appear directly after |*this|, as part of an overall','line_number':42,'multiline':False]
['text':' allocation that stores |*this|, shapes, and iterated strings.','line_number':43,'multiline':False]
['text':' initialized by constructor','line_number':44,'multiline':False]
['text':' The limit/end of properties to iterate (and, assuming no error occurred','line_number':46,'multiline':False]
['text':' while constructing this NativeIterator, the end of the full allocation','line_number':47,'multiline':False]
['text':' storing |*this|, shapes, and strings).  Beware!  This value may change as','line_number':48,'multiline':False]
['text':' properties are deleted from the observed object.','line_number':49,'multiline':False]
['text':' initialized by constructor','line_number':50,'multiline':False]
['text':' initialized by constructor','line_number':52,'multiline':False]
['text':' For cacheable native iterators, whether the iterator is currently','line_number':55,'multiline':False]
['text':' active.  Not serialized by XDR.','line_number':56,'multiline':False]
['text':' This flag is set when all shapes and properties associated with this','line_number':58,'multiline':False]
['text':' NativeIterator have been initialized, such that |shapesEnd_|, in','line_number':59,'multiline':False]
['text':' addition to being the end of shapes, is also the beginning of','line_number':60,'multiline':False]
['text':' properties.','line_number':61,'multiline':False]
['text':'','line_number':62,'multiline':False]
['text':' This flag is only *not* set when a NativeIterator is in the process','line_number':63,'multiline':False]
['text':' of being constructed.  At such time |shapesEnd_| accounts only for','line_number':64,'multiline':False]
['text':' shapes that have been initialized -- potentially none of them.','line_number':65,'multiline':False]
['text':' Instead, |propertyCursor_| is initialized to the ultimate/actual','line_number':66,'multiline':False]
['text':' start of properties and must be used instead of |propertiesBegin()|,','line_number':67,'multiline':False]
['text':' which asserts that this flag is present to guard against misuse.','line_number':68,'multiline':False]
['text':' This flag indicates that this NativeIterator is currently being used','line_number':71,'multiline':False]
['text':' to enumerate an object's properties and has not yet been closed.','line_number':72,'multiline':False]
['text':' This flag indicates that the object being enumerated by this','line_number':75,'multiline':False]
['text':' |NativeIterator| had a property deleted from it before it was','line_number':76,'multiline':False]
['text':' visited, forcing the properties array in this to be mutated to','line_number':77,'multiline':False]
['text':' remove it.','line_number':78,'multiline':False]
['text':' If any of these bits are set on a |NativeIterator|, it isn't','line_number':81,'multiline':False]
['text':' currently reusable.  (An active |NativeIterator| can't be stolen','line_number':82,'multiline':False]
['text':' *right now*; a |NativeIterator| that's had its properties mutated','line_number':83,'multiline':False]
['text':' can never be reused, because it would give incorrect results.)','line_number':84,'multiline':False]
['text':' While in compartment->enumerators, these form a doubly linked list.','line_number':97,'multiline':False]
['text':' Stores Flags bits in the lower bits and the initial property count above','line_number':101,'multiline':False]
['text':' them.','line_number':102,'multiline':False]
['text':' If true, this iterator may contain indexed properties that came from','line_number':106,'multiline':False]
['text':' objects on the prototype chain. This is used by certain debug assertions.','line_number':107,'multiline':False]
['text':' END OF PROPERTIES','line_number':111,'multiline':False]
['text':' No further fields appear after here *in NativeIterator*, but this class','line_number':113,'multiline':False]
['text':' is always allocated with space tacked on immediately after |this| to','line_number':114,'multiline':False]
['text':' store iterated property names up to |props_end| and |numShapes| shapes','line_number':115,'multiline':False]
['text':' after that.','line_number':116,'multiline':False]
['text':'*
   * Initialize a NativeIterator properly allocated for |props.length()|
   * properties and |numShapes| shapes.
   *
   * Despite being a constructor, THIS FUNCTION CAN REPORT ERRORS.  Users
   * MUST set |*hadError = false| on entry and consider |*hadError| on return
   * to mean this function failed.
   ','line_number':119,'multiline':True]
['text':'* Initialize an |ObjectRealm::enumerators| sentinel. ','line_number':131,'multiline':True]
['text':' We *could* just check the assertion below if we wanted, but the','line_number':164,'multiline':False]
['text':' incompletely-initialized NativeIterator case matters for so little','line_number':165,'multiline':False]
['text':' code that we prefer not imposing the condition-check on every single','line_number':166,'multiline':False]
['text':' user.','line_number':167,'multiline':False]
['text':' This function is called unconditionally on IteratorClose, so','line_number':194,'multiline':False]
['text':' unvisited properties might have been deleted, so we can't assert','line_number':195,'multiline':False]
['text':' this NativeIterator is reusable.  (Should we not bother resetting','line_number':196,'multiline':False]
['text':' the cursor in that case?)','line_number':197,'multiline':False]
['text':' Note: JIT code inlines |propertyCursor_| resetting when an iterator','line_number':199,'multiline':False]
['text':'       ends: see |CodeGenerator::visitIteratorEnd|.','line_number':200,'multiline':False]
['text':' This invokes the pre barrier on this property, since it's no longer','line_number':218,'multiline':False]
['text':' going to be marked, and it ensures that any existing remembered set','line_number':219,'multiline':False]
['text':' entry will be dropped.','line_number':220,'multiline':False]
['text':' No flags are initially set.','line_number':258,'multiline':False]
['text':' Cached NativeIterators are reusable if they're not currently active','line_number':295,'multiline':False]
['text':' and their properties array hasn't been mutated, i.e. if only','line_number':296,'multiline':False]
['text':' |Flags::Initialized| is set.  Using |Flags::NotReusable| to test','line_number':297,'multiline':False]
['text':' would also work, but this formulation is safer against memory','line_number':298,'multiline':False]
['text':' corruption.','line_number':299,'multiline':False]
['text':' The NativeIterator sentinel doesn't have to be linked, because it's','line_number':310,'multiline':False]
['text':' the start of the list.  Anything else added should have been','line_number':311,'multiline':False]
['text':' initialized.','line_number':312,'multiline':False]
['text':' A NativeIterator cannot appear in the enumerator list twice. ','line_number':315,'multiline':True]
['text':' We don't use the fixed slot but the JITs use this constant to load the','line_number':371,'multiline':False]
['text':' private value (the NativeIterator*).','line_number':372,'multiline':False]
['text':'
 * IteratorMore() returns the next iteration value. If no value is available,
 * MagicValue(JS_NO_ITER_VALUE) is returned.
 ','line_number':435,'multiline':True]
['text':'
 * Create an object of the form { value: VALUE, done: DONE }.
 * ES 2017 draft 7.4.7.
 ','line_number':445,'multiline':True]
['text':'
 * Global Iterator constructor.
 * Iterator Helpers proposal 2.1.3.
 ','line_number':452,'multiline':True]
['text':'
 * Wrapper for iterators created via Iterator.from.
 * Iterator Helpers proposal 2.1.3.3.1.1.
 ','line_number':462,'multiline':True]
['text':'
 * Generator-esque object returned by Iterator Helper methods.
 ','line_number':479,'multiline':True]
['text':' The implementation (an instance of one of the generators in','line_number':487,'multiline':False]
['text':' builtin/Iterator.js).','line_number':488,'multiline':False]
['text':' Never null.','line_number':489,'multiline':False]
['text':' namespace js ','line_number':502,'multiline':True]
['text':' vm_Iteration_h ','line_number':504,'multiline':True]
