['text':'!/usr/bin/env python','line_number':1,'multiline':False]
['text':' -*- coding: utf-8 -*-','line_number':2,'multiline':False]
['text':'','line_number':3,'multiline':False]
['text':' This Source Code Form is subject to the terms of the Mozilla Public','line_number':4,'multiline':False]
['text':' License, v. 2.0. If a copy of the MPL was not distributed with this','line_number':5,'multiline':False]
['text':' file, You can obtain one at http://mozilla.org/MPL/2.0/.','line_number':6,'multiline':False]
['text':' From https://docs.python.org/3/library/itertools.html','line_number':74,'multiline':False]
['text':' grouper('ABCDEFG', 3, 'x') --> ABC DEF Gxx"','line_number':77,'multiline':False]
['text':' Group in pairs of ten to not exceed the 80 line column limit.','line_number':158,'multiline':False]
['text':' Sort the subtags by length. That enables using an optimized comparator','line_number':171,'multiline':False]
['text':' for the binary search, which only performs a single |memcmp| for multiple','line_number':172,'multiline':False]
['text':' of two subtag lengths.','line_number':173,'multiline':False]
['text':' Omit the length check if the current length is the maximum length.','line_number':176,'multiline':False]
['text':' The subtags need to be sorted for binary search to work.','line_number':197,'multiline':False]
['text':' Don't emit a binary search for short lists.','line_number':203,'multiline':False]
['text':' Merge duplicate language entries.','line_number':318,'multiline':False]
['text':' |non_default_replacements| is a list and hence not hashable. Convert it','line_number':417,'multiline':False]
['text':' to a string to get a proper hashable value.','line_number':418,'multiline':False]
['text':' Merge duplicate region entries.','line_number':422,'multiline':False]
['text':' Helper class for pattern matching.','line_number':727,'multiline':False]
['text':' Group the mappings by language.','line_number':734,'multiline':False]
['text':' Handle the empty language case first.','line_number':740,'multiline':False]
['text':' Get the mappings and remove them from the dict.','line_number':742,'multiline':False]
['text':' This case only applies for the "hepburn-heploc" -> "alalc97"','line_number':745,'multiline':False]
['text':' mapping, so just inline it here.','line_number':746,'multiline':False]
['text':' Handle sign languages next.','line_number':769,'multiline':False]
['text':' Legacy sign language mappings have the form "sgn-XX" where "XX" is','line_number':773,'multiline':False]
['text':' some region code.','line_number':774,'multiline':False]
['text':' Legacy sign languages are mapped to a single language subtag.','line_number':777,'multiline':False]
['text':' Finally handle all remaining cases.','line_number':794,'multiline':False]
['text':' The remaining mappings have neither script nor region subtags in the source locale.','line_number':796,'multiline':False]
['text':' And they have neither script nor region nor variant subtags in the target locale.','line_number':803,'multiline':False]
['text':' Compact the mappings table by removing empty fields.','line_number':810,'multiline':False]
['text':' Try to combine the remaining cases.','line_number':819,'multiline':False]
['text':' Python can't hash dicts or lists, so use the string representation as the hash key.','line_number':822,'multiline':False]
['text':' Count the variant subtags to determine the sort order.','line_number':848,'multiline':False]
['text':' Alias rules are applied by largest union size first.','line_number':853,'multiline':False]
['text':' Convert grouper object to dict.','line_number':858,'multiline':False]
['text':' Alias rules are applied in alphabetical order','line_number':864,'multiline':False]
['text':' From Unicode BCP 47 locale identifier <https://unicode.org/reports/tr35/>.','line_number':969,'multiline':False]
['text':' CLDR uses "_" as the separator for some elements. Replace it with "-".','line_number':993,'multiline':False]
['text':' Return the tuple (language, script, region, variants) and assert all','line_number':997,'multiline':False]
['text':' subtags are in canonical case.','line_number':998,'multiline':False]
['text':' Canonical case for language subtags is lower case.','line_number':1000,'multiline':False]
['text':' Canonical case for script subtags is title case.','line_number':1003,'multiline':False]
['text':' Canonical case for region subtags is upper case.','line_number':1006,'multiline':False]
['text':' Canonical case for variant subtags is lower case.','line_number':1009,'multiline':False]
['text':' Language ids are interpreted as multi-maps in','line_number':1014,'multiline':False]
['text':' <https://www.unicode.org/reports/tr35/#LocaleId_Canonicalization>.','line_number':1015,'multiline':False]
['text':'','line_number':1016,'multiline':False]
['text':' See UTS35, §Annex C, Definitions - 1. Multimap interpretation.','line_number':1017,'multiline':False]
['text':' Normalize "und" language to None, but keep the rest as is.','line_number':1029,'multiline':False]
['text':' Load the rules from supplementalMetadata.xml.','line_number':1037,'multiline':False]
['text':'','line_number':1038,'multiline':False]
['text':' See UTS35, §Annex C, Definitions - 2. Alias elements.','line_number':1039,'multiline':False]
['text':' See UTS35, §Annex C, Preprocessing.','line_number':1040,'multiline':False]
['text':' Replace '_' by '-'.','line_number':1048,'multiline':False]
['text':' Prefix with "und-".','line_number':1052,'multiline':False]
['text':' Discard all rules where the type is an invalid languageId.','line_number':1056,'multiline':False]
['text':' Multiple, whitespace-separated territory replacements may be present.','line_number':1062,'multiline':False]
['text':' The first element is the default territory replacement.','line_number':1075,'multiline':False]
['text':' Prefix with "und-".','line_number':1078,'multiline':False]
['text':' Helper class for pattern matching.','line_number':1088,'multiline':False]
['text':' UTS 35 defines that canonicalization is applied until a fixed point has','line_number':1102,'multiline':False]
['text':' been reached. This iterative application of the canonicalization algorithm','line_number':1103,'multiline':False]
['text':' is only needed for a relatively small set of rules, so we can precompute','line_number':1104,'multiline':False]
['text':' the transitive closure of all rules here and then perform a single pass','line_number':1105,'multiline':False]
['text':' when canonicalizing language tags at runtime.','line_number':1106,'multiline':False]
['text':' Compute the transitive closure.','line_number':1109,'multiline':False]
['text':' Any case which currently doesn't occur in the CLDR sources isn't supported','line_number':1110,'multiline':False]
['text':' and will lead to throwing an error.','line_number':1111,'multiline':False]
['text':' This case currently only occurs when neither script nor region','line_number':1121,'multiline':False]
['text':' subtags are present. A single variant subtags may be present','line_number':1122,'multiline':False]
['text':' in |type|. And |i_type| definitely has a single variant subtag.','line_number':1123,'multiline':False]
['text':' Should this ever change, update this code accordingly.','line_number':1124,'multiline':False]
['text':' This case happens for the rules','line_number':1135,'multiline':False]
['text':'   "zh-guoyu -> zh",','line_number':1136,'multiline':False]
['text':'   "zh-hakka -> hak", and','line_number':1137,'multiline':False]
['text':'   "und-hakka -> und".','line_number':1138,'multiline':False]
['text':' Given the possible input "zh-guoyu-hakka", the first rule will','line_number':1139,'multiline':False]
['text':' change it to "zh-hakka", and then the second rule can be','line_number':1140,'multiline':False]
['text':' applied. (The third rule isn't applied ever.)','line_number':1141,'multiline':False]
['text':'','line_number':1142,'multiline':False]
['text':' Let's assume there's a hypothetical rule','line_number':1143,'multiline':False]
['text':'   "zh-aaaaa" -> "en"','line_number':1144,'multiline':False]
['text':' And we have the input "zh-aaaaa-hakka", then "zh-aaaaa -> en"','line_number':1145,'multiline':False]
['text':' is applied before "zh-hakka -> hak", because rules are sorted','line_number':1146,'multiline':False]
['text':' alphabetically. That means the overall result is "en":','line_number':1147,'multiline':False]
['text':' "zh-aaaaa-hakka" is first canonicalized to "en-hakka" and then','line_number':1148,'multiline':False]
['text':' "hakka" is removed through the third rule.','line_number':1149,'multiline':False]
['text':'','line_number':1150,'multiline':False]
['text':' No current rule requires to handle this special case, so we','line_number':1151,'multiline':False]
['text':' don't yet support it.','line_number':1152,'multiline':False]
['text':' Combine all variants and remove duplicates.','line_number':1155,'multiline':False]
['text':' Add the variants alphabetically sorted.','line_number':1161,'multiline':False]
['text':' This case currently doesn't occur, so we don't yet support it.','line_number':1173,'multiline':False]
['text':' This case currently only applies for sign language','line_number':1178,'multiline':False]
['text':' replacements. Similar to the language subtag case any other','line_number':1179,'multiline':False]
['text':' combination isn't currently supported.','line_number':1180,'multiline':False]
['text':' This case currently doesn't occur, so we don't yet support it.','line_number':1194,'multiline':False]
['text':' Ensure there are no contradicting rules.','line_number':1199,'multiline':False]
['text':' If |transitive_rules| is not a subset of |rules|, new rules will be added.','line_number':1206,'multiline':False]
['text':' Ensure we only have to iterate more than once for the "guoyo-{hakka,xiang}"','line_number':1209,'multiline':False]
['text':' case. Failing this assertion means either there's a bug when computing the','line_number':1210,'multiline':False]
['text':' stop condition of this loop or a new kind of legacy language tags was added.','line_number':1211,'multiline':False]
['text':' Merge the transitive rules.','line_number':1222,'multiline':False]
['text':' Computes the size of the union of all field value sets.','line_number':1225,'multiline':False]
['text':' Dictionary of legacy mappings, contains raw rules, e.g.','line_number':1236,'multiline':False]
['text':' (None, None, None, "hepburn-heploc") -> (None, None, None, "alalc97").','line_number':1237,'multiline':False]
['text':' Dictionary of simple language subtag mappings, e.g. "in" -> "id".','line_number':1240,'multiline':False]
['text':' Dictionary of complex language subtag mappings, modifying more than one','line_number':1243,'multiline':False]
['text':' subtag, e.g. "sh" -> ("sr", "Latn", None) and "cnr" -> ("sr", None, "ME").','line_number':1244,'multiline':False]
['text':' Dictionary of simple script subtag mappings, e.g. "Qaai" -> "Zinh".','line_number':1247,'multiline':False]
['text':' Dictionary of simple region subtag mappings, e.g. "DD" -> "DE".','line_number':1250,'multiline':False]
['text':' Dictionary of complex region subtag mappings, containing more than one','line_number':1253,'multiline':False]
['text':' replacement, e.g. "SU" -> ("RU", ["AM", "AZ", "BY", ...]).','line_number':1254,'multiline':False]
['text':' Dictionary of aliased variant subtags to a tuple of preferred replacement','line_number':1257,'multiline':False]
['text':' type and replacement, e.g. "arevela" -> ("language", "hy") or','line_number':1258,'multiline':False]
['text':' "aaland" -> ("region", "AX") or "heploc" -> ("variant", "alalc97").','line_number':1259,'multiline':False]
['text':' Preprocess all rules so we can perform a single lookup per subtag at runtime.','line_number':1262,'multiline':False]
['text':' Most mappings are one-to-one and can be encoded through lookup tables.','line_number':1269,'multiline':False]
['text':' We don't yet support this case.','line_number':1274,'multiline':False]
['text':' We don't support removing script subtags.','line_number':1284,'multiline':False]
['text':' We only support one-to-one script mappings for now.','line_number':1289,'multiline':False]
['text':' We don't support removing region subtags.','line_number':1299,'multiline':False]
['text':' We only support one-to-one region mappings for now.','line_number':1304,'multiline':False]
['text':' We only support one-to-one variant mappings for now.','line_number':1323,'multiline':False]
['text':' Alias rules which have multiple input fields must be processed','line_number':1340,'multiline':False]
['text':' first. This applies only to a handful of rules, so our generated','line_number':1341,'multiline':False]
['text':' code adds fast paths to skip these rules in the common case.','line_number':1342,'multiline':False]
['text':' Case 1: Language and at least one variant subtag.','line_number':1344,'multiline':False]
['text':' Case 2: Sign language and a region subtag.','line_number':1348,'multiline':False]
['text':' Case 3: "hepburn-heploc" to "alalc97" canonicalization.','line_number':1352,'multiline':False]
['text':' Any other combination is currently unsupported.','line_number':1360,'multiline':False]
['text':' Remove the empty variant subtags.','line_number':1397,'multiline':False]
['text':' Find all likely subtag entries which don't already contain a region','line_number':1406,'multiline':False]
['text':' subtag and whose target region is in the list of replacement regions.','line_number':1407,'multiline':False]
['text':' The first replacement entry is the default region.','line_number':1417,'multiline':False]
['text':' Find all likely subtag entries whose region matches the default region.','line_number':1420,'multiline':False]
['text':' And finally find those entries which don't use the default region.','line_number':1427,'multiline':False]
['text':' These are the entries we're actually interested in, because those need','line_number':1428,'multiline':False]
['text':' to be handled specially when selecting the correct preferred region.','line_number':1429,'multiline':False]
['text':' If there are no non-default replacements, we can handle the region as','line_number':1436,'multiline':False]
['text':' part of the simple region mapping.','line_number':1437,'multiline':False]
['text':' Match all xml-files in the BCP 47 directory.','line_number':1461,'multiline':False]
['text':' https://www.unicode.org/reports/tr35/#Unicode_locale_identifier','line_number':1464,'multiline':False]
['text':'','line_number':1465,'multiline':False]
['text':' type = alphanum{3,8} (sep alphanum{3,8})* ;','line_number':1466,'multiline':False]
['text':' Mapping from Unicode extension types to dict of deprecated to','line_number':1469,'multiline':False]
['text':' preferred values.','line_number':1470,'multiline':False]
['text':' Unicode BCP 47 U Extension','line_number':1472,'multiline':False]
['text':' Unicode BCP 47 T Extension','line_number':1474,'multiline':False]
['text':' <https://unicode.org/reports/tr35/#Unicode_Locale_Extension_Data_Files>:','line_number':1489,'multiline':False]
['text':'','line_number':1490,'multiline':False]
['text':' The key or type name used by Unicode locale extension with 'u' extension','line_number':1491,'multiline':False]
['text':' syntax or the 't' extensions syntax. When alias below is absent, this name','line_number':1492,'multiline':False]
['text':' can be also used with the old style "@key=type" syntax.','line_number':1493,'multiline':False]
['text':' Ignore the special name:','line_number':1496,'multiline':False]
['text':' - <https://unicode.org/reports/tr35/#CODEPOINTS>','line_number':1497,'multiline':False]
['text':' - <https://unicode.org/reports/tr35/#REORDER_CODE>','line_number':1498,'multiline':False]
['text':' - <https://unicode.org/reports/tr35/#RG_KEY_VALUE>','line_number':1499,'multiline':False]
['text':' - <https://unicode.org/reports/tr35/#SCRIPT_CODE>','line_number':1500,'multiline':False]
['text':' - <https://unicode.org/reports/tr35/#SUBDIVISION_CODE>','line_number':1501,'multiline':False]
['text':' - <https://unicode.org/reports/tr35/#PRIVATE_USE>','line_number':1502,'multiline':False]
['text':' All other names should match the 'type' production.','line_number':1513,'multiline':False]
['text':' <https://unicode.org/reports/tr35/#Unicode_Locale_Extension_Data_Files>:','line_number':1518,'multiline':False]
['text':'','line_number':1519,'multiline':False]
['text':' The preferred value of the deprecated key, type or attribute element.','line_number':1520,'multiline':False]
['text':' When a key, type or attribute element is deprecated, this attribute is','line_number':1521,'multiline':False]
['text':' used for specifying a new canonical form if available.','line_number':1522,'multiline':False]
['text':' <https://unicode.org/reports/tr35/#Unicode_Locale_Extension_Data_Files>:','line_number':1525,'multiline':False]
['text':'','line_number':1526,'multiline':False]
['text':' The BCP 47 form is the canonical form, and recommended. Other aliases are','line_number':1527,'multiline':False]
['text':' included only for backwards compatibility.','line_number':1528,'multiline':False]
['text':' <https://unicode.org/reports/tr35/#Canonical_Unicode_Locale_Identifiers>','line_number':1531,'multiline':False]
['text':'','line_number':1532,'multiline':False]
['text':' Use the bcp47 data to replace keys, types, tfields, and tvalues by their','line_number':1533,'multiline':False]
['text':' canonical forms. See Section 3.6.4 U Extension Data Files) and Section','line_number':1534,'multiline':False]
['text':' 3.7.1 T Extension Data Files. The aliases are in the alias attribute','line_number':1535,'multiline':False]
['text':' value, while the canonical is in the name attribute value.','line_number':1536,'multiline':False]
['text':' 'preferred' contains the new preferred name, 'alias' the compatibility','line_number':1538,'multiline':False]
['text':' name, but then there's this entry where 'preferred' and 'alias' are the','line_number':1539,'multiline':False]
['text':' same. So which one to choose? Assume 'preferred' is the actual canonical','line_number':1540,'multiline':False]
['text':' name.','line_number':1541,'multiline':False]
['text':'','line_number':1542,'multiline':False]
['text':' <type name="islamicc"','line_number':1543,'multiline':False]
['text':'       description="Civil (algorithmic) Arabic calendar"','line_number':1544,'multiline':False]
['text':'       deprecated="true"','line_number':1545,'multiline':False]
['text':'       preferred="islamic-civil"','line_number':1546,'multiline':False]
['text':'       alias="islamic-civil"/>','line_number':1547,'multiline':False]
['text':' Ignore alias entries which don't match the 'type' production.','line_number':1555,'multiline':False]
['text':' See comment above when 'alias' and 'preferred' are both present.','line_number':1559,'multiline':False]
['text':' Skip over entries where 'name' and 'alias' are equal.','line_number':1566,'multiline':False]
['text':'','line_number':1567,'multiline':False]
['text':' <type name="pst8pdt"','line_number':1568,'multiline':False]
['text':'       description="POSIX style time zone for US Pacific Time"','line_number':1569,'multiline':False]
['text':'       alias="PST8PDT"','line_number':1570,'multiline':False]
['text':'       since="1.8"/>','line_number':1571,'multiline':False]
['text':' Find subdivision and region replacements.','line_number':1580,'multiline':False]
['text':'','line_number':1581,'multiline':False]
['text':' <https://www.unicode.org/reports/tr35/#Canonical_Unicode_Locale_Identifiers>','line_number':1582,'multiline':False]
['text':'','line_number':1583,'multiline':False]
['text':' Replace aliases in special key values:','line_number':1584,'multiline':False]
['text':'   - If there is an 'sd' or 'rg' key, replace any subdivision alias','line_number':1585,'multiline':False]
['text':'     in its value in the same way, using subdivisionAlias data.','line_number':1586,'multiline':False]
['text':' Take the first replacement when multiple ones are present.','line_number':1594,'multiline':False]
['text':' Skip over invalid replacements.','line_number':1597,'multiline':False]
['text':'','line_number':1598,'multiline':False]
['text':' <subdivisionAlias type="fi01" replacement="AX" reason="overlong"/>','line_number':1599,'multiline':False]
['text':'','line_number':1600,'multiline':False]
['text':' It's not entirely clear to me if CLDR actually wants to use','line_number':1601,'multiline':False]
['text':' "axzzzz" as the replacement for this case.','line_number':1602,'multiline':False]
['text':' 'subdivisionAlias' applies to 'rg' and 'sd' keys.','line_number':1606,'multiline':False]
['text':' unicode_language_subtag = alpha{2,3} | alpha{5,8} ;','line_number':1752,'multiline':False]
['text':' unicode_script_subtag = alpha{4} ;','line_number':1755,'multiline':False]
['text':' unicode_region_subtag = (alpha{2} | digit{3}) ;','line_number':1758,'multiline':False]
['text':' Map deprecated language subtags.','line_number':1884,'multiline':False]
['text':' Map deprecated script subtags.','line_number':1895,'multiline':False]
['text':' Map deprecated region subtags.','line_number':1899,'multiline':False]
['text':' Assume no complex region mappings are needed for now.','line_number':1903,'multiline':False]
['text':' https://unicode.org/reports/tr35/#Likely_Subtags','line_number':1910,'multiline':False]
['text':' Step 1: Canonicalize.','line_number':1913,'multiline':False]
['text':' Step 2: Lookup.','line_number':1920,'multiline':False]
['text':' Step 3: Return.','line_number':1933,'multiline':False]
['text':' https://unicode.org/reports/tr35/#Likely_Subtags','line_number':1940,'multiline':False]
['text':' Step 1: Add likely subtags.','line_number':1942,'multiline':False]
['text':' Step 2: Remove variants (doesn't apply here).','line_number':1945,'multiline':False]
['text':' Step 3: Find a match.','line_number':1947,'multiline':False]
['text':' Step 4: Return maximized if no match found.','line_number':1957,'multiline':False]
['text':' Canonicalize the input tag.','line_number':1961,'multiline':False]
['text':' Update the expected result if necessary.','line_number':1964,'multiline':False]
['text':' Canonicalize the expected output.','line_number':1968,'multiline':False]
['text':' Sanity check: This should match the result of |addLikelySubtags|.','line_number':1971,'multiline':False]
['text':' |likely_subtags| contains non-canonicalized tags, so canonicalize it first.','line_number':1976,'multiline':False]
['text':' Add test data for |Intl.Locale.prototype.maximize()|.','line_number':1981,'multiline':False]
['text':' Use the maximalized tags as the input for the remove likely-subtags test.','line_number':1991,'multiline':False]
['text':' Add test data for |Intl.Locale.prototype.minimize()|.','line_number':1996,'multiline':False]
['text':' Determine current CLDR version from ICU.','line_number':2053,'multiline':False]
['text':' Read zone and link infos.','line_number':2244,'multiline':False]
['text':' Remove the placeholder time zone "Factory".','line_number':2248,'multiline':False]
['text':' Merge with backzone data.','line_number':2252,'multiline':False]
['text':' zoneinfo64.txt contains the supported time zones by ICU. This data is','line_number':2415,'multiline':False]
['text':' generated from tzdata files, it doesn't include "backzone" in stock ICU.','line_number':2416,'multiline':False]
['text':' timezoneTypes.txt contains the canonicalization information for ICU. This','line_number':2419,'multiline':False]
['text':' data is generated from CLDR files. It includes data about time zones from','line_number':2420,'multiline':False]
['text':' tzdata's "backzone" file.','line_number':2421,'multiline':False]
['text':' Remove the placeholder time zone "Factory".','line_number':2424,'multiline':False]
['text':' See also <https://github.com/eggert/tz/blob/master/factory>.','line_number':2425,'multiline':False]
['text':' Remove the ICU placeholder time zone "Etc/Unknown".','line_number':2429,'multiline':False]
['text':' See also <https://unicode.org/reports/tr35/#Time_Zone_Identifiers>.','line_number':2430,'multiline':False]
['text':' Remove any outdated ICU links.','line_number':2434,'multiline':False]
['text':' Information in zoneinfo64 should be a superset of timezoneTypes.','line_number':2441,'multiline':False]
['text':' zoneinfo64.txt only defines the supported time zones by ICU, the canonicalization','line_number':2459,'multiline':False]
['text':' rules are defined through timezoneTypes.txt. Merge both to get the actual zones','line_number':2460,'multiline':False]
['text':' and links used by ICU.','line_number':2461,'multiline':False]
['text':' Per spec we must recognize only IANA time zones and links, but ICU','line_number':2488,'multiline':False]
['text':' recognizes various legacy, non-IANA time zones and links. Compute these','line_number':2489,'multiline':False]
['text':' non-IANA time zones and links.','line_number':2490,'multiline':False]
['text':' Most legacy, non-IANA time zones and links are in the icuzones file.','line_number':2492,'multiline':False]
['text':' Remove the ICU placeholder time zone "Etc/Unknown".','line_number':2495,'multiline':False]
['text':' See also <https://unicode.org/reports/tr35/#Time_Zone_Identifiers>.','line_number':2496,'multiline':False]
['text':' A handful of non-IANA zones/links are not in icuzones and must be added','line_number':2499,'multiline':False]
['text':' manually so that we won't invoke ICU with them.','line_number':2500,'multiline':False]
['text':' Current ICU is up-to-date with IANA, so this dict is empty.','line_number':2531,'multiline':False]
['text':' All IANA zones should be present in ICU.','line_number':2569,'multiline':False]
['text':' Normally zones in backzone are also present as links in one of the other','line_number':2571,'multiline':False]
['text':' time zone files. The only exception to this rule is the Asia/Hanoi time','line_number':2572,'multiline':False]
['text':' zone, this zone is only present in the backzone file.','line_number':2573,'multiline':False]
['text':' Zones which are only present in ICU?','line_number':2581,'multiline':False]
['text':' Zones which are marked as links in ICU.','line_number':2589,'multiline':False]
['text':' Remove unnecessary UTC mappings.','line_number':2592,'multiline':False]
['text':' All links should be present in ICU.','line_number':2614,'multiline':False]
['text':' Links which are only present in ICU?','line_number':2622,'multiline':False]
['text':' IANA links which have a different target in ICU.','line_number':2631,'multiline':False]
['text':' IANA links which are zones in ICU.','line_number':2637,'multiline':False]
['text':' Remove unnecessary UTC mappings.','line_number':2645,'multiline':False]
['text':' Remove all legacy ICU time zones.','line_number':2669,'multiline':False]
['text':' NOQA: E501','line_number':2734,'multiline':False]
['text':' Link not changed in backzone.','line_number':2754,'multiline':False]
['text':' Link has a new target.','line_number':2756,'multiline':False]
['text':' Keep stable zones and links with updated target.','line_number':2759,'multiline':False]
['text':' Read zone and link infos.','line_number':2854,'multiline':False]
['text':' Read zone and link infos.','line_number':2890,'multiline':False]
['text':' TODO: Accept or ignore the placeholder time zone "Factory"?','line_number':2981,'multiline':False]
['text':' Skip entry if no currency information is available.','line_number':3049,'multiline':False]
['text':' Skip all entries without minorUnits or which use the default minorUnits.','line_number':3058,'multiline':False]
['text':' Merge duplicate keys.','line_number':3252,'multiline':False]
['text':' The current resource table.','line_number':3370,'multiline':False]
['text':' List of parent tables when parsing.','line_number':3373,'multiline':False]
['text':' Track multi-line comments state.','line_number':3376,'multiline':False]
['text':' Remove leading and trailing whitespace.','line_number':3380,'multiline':False]
['text':' Skip over comments.','line_number':3383,'multiline':False]
['text':' Try to match the start of a table, e.g. `length{` or `meter{`.','line_number':3396,'multiline':False]
['text':' Try to match the end of a table.','line_number':3406,'multiline':False]
['text':' Try to match a table entry, e.g. `dnam{"meter"}`.','line_number':3412,'multiline':False]
['text':' Remove the top-level language identifier table.','line_number':3425,'multiline':False]
['text':' Add all units for the three display formats "units", "unitsNarrow", and "unitsShort".','line_number':3428,'multiline':False]
['text':' But exclude the pseudo-units "compound" and "ccoordinate".','line_number':3429,'multiline':False]
['text':' Find the rule set for the "unit_tree".','line_number':3477,'multiline':False]
['text':' Compute the list of included units from that rule set. The regular expression must match','line_number':3485,'multiline':False]
['text':' "+/*/length/meter" and mustn't match either "-/*" or "+/*/compound".','line_number':3486,'multiline':False]
['text':' Read all possible ICU unit identifiers from the "unit/root.txt" resource.','line_number':3719,'multiline':False]
['text':' Compute the set of effectively supported ICU unit identifiers.','line_number':3723,'multiline':False]
['text':' Read the list of units we're including into the ICU data file.','line_number':3726,'multiline':False]
['text':' Both sets must match to avoid resource loading errors at runtime.','line_number':3730,'multiline':False]
['text':' Not exactly an error, but we currently don't have a use case where we need to support','line_number':3740,'multiline':False]
['text':' more units than required by ECMA-402.','line_number':3741,'multiline':False]
['text':' The current resource table.','line_number':3778,'multiline':False]
['text':' List of parent tables when parsing.','line_number':3781,'multiline':False]
['text':' Track multi-line comments state.','line_number':3784,'multiline':False]
['text':' Remove leading and trailing whitespace.','line_number':3788,'multiline':False]
['text':' Skip over comments.','line_number':3791,'multiline':False]
['text':' Try to match the start of a table, e.g. `latn{`.','line_number':3804,'multiline':False]
['text':' Try to match the end of a table.','line_number':3814,'multiline':False]
['text':' Try to match a table entry, e.g. `desc{"0123456789"}`.','line_number':3820,'multiline':False]
['text':' Remove the two top-level "numberingSystems" tables.','line_number':3835,'multiline':False]
['text':' Assert all numbering systems use base 10.','line_number':3839,'multiline':False]
['text':' Return the numbering systems.','line_number':3842,'multiline':False]
['text':' Read all possible ICU unit identifiers from the "misc/numberingSystems.txt" resource.','line_number':3932,'multiline':False]
['text':' Assert ICU includes support for all required numbering systems. If this assertion fails,','line_number':3942,'multiline':False]
['text':' something is broken in ICU.','line_number':3943,'multiline':False]
['text':' Assert the spec requires support for all numbering systems with simple digit mappings. If','line_number':3948,'multiline':False]
['text':' this assertion fails, file a PR at <https://github.com/tc39/ecma402> to include any new','line_number':3949,'multiline':False]
['text':' numbering systems.','line_number':3950,'multiline':False]
['text':' This script must reside in js/src/builtin/intl to work correctly.','line_number':3961,'multiline':False]
['text':' ICU doesn't include the backzone file by default, but we still like to','line_number':4005,'multiline':False]
['text':' use the backzone time zone names to avoid user confusion. This does lead','line_number':4006,'multiline':False]
['text':' to formatting "historic" dates (pre-1970 era) with the wrong time zone,','line_number':4007,'multiline':False]
['text':' but that's probably acceptable for now.','line_number':4008,'multiline':False]
['text':' NOQA: E501','line_number':4029,'multiline':False]
