['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 * vim: set ts=8 sts=2 et sw=2 tw=80:
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':1,'multiline':True]
['text':' Profiling-related API ','line_number':7,'multiline':True]
['text':' getpid()','line_number':17,'multiline':False]
['text':' Thread-unsafe error management ','line_number':39,'multiline':True]
['text':'
 * Start or stop whatever platform- and configuration-specific profiling
 * backends are available.
 ','line_number':104,'multiline':True]
['text':'
 * Pause/resume whatever profiling mechanism is currently compiled
 * in, if applicable. This will not affect things like dtrace.
 *
 * Do not mix calls to these APIs with calls to the individual
 * profilers' pause/resume functions, because only overall state is
 * tracked, not the state of each profiler.
 ','line_number':149,'multiline':True]
['text':' Usage: DumpProfile([filename[, profileName]]) ','line_number':262,'multiline':True]
['text':' Keep users of the old shark API happy. ','line_number':354,'multiline':True]
['text':' Wrapper for various macros to stop warnings coming from their expansions. ','line_number':381,'multiline':True]
['text':' If these _Pragmas cause warnings  \
                                            for you, try disabling ccache. ','line_number':385,'multiline':True]
['text':' MOZ_CALLGRIND ','line_number':431,'multiline':True]
['text':'
 * Code for starting and stopping |perf|, the Linux profiler.
 *
 * Output from profiling is written to mozperf.data in your cwd.
 *
 * To enable, set MOZ_PROFILE_WITH_PERF=1 in your environment.
 *
 * To pass additional parameters to |perf record|, provide them in the
 * MOZ_PROFILE_PERF_FLAGS environment variable.  If this variable does not
 * exist, we default it to "--call-graph".  (If you don't want --call-graph but
 * don't want to pass any other args, define MOZ_PROFILE_PERF_FLAGS to the empty
 * string.)
 *
 * If you include --pid or --output in MOZ_PROFILE_PERF_FLAGS, you're just
 * asking for trouble.
 *
 * Our split-on-spaces logic is lame, so don't expect MOZ_PROFILE_PERF_FLAGS to
 * work if you pass an argument which includes a space (e.g.
 * MOZ_PROFILE_PERF_FLAGS="-e 'foo bar'").
 ','line_number':435,'multiline':True]
['text':' Bail if MOZ_PROFILE_WITH_PERF is empty or undefined.','line_number':471,'multiline':False]
['text':'
   * Delete mozperf.data the first time through -- we're going to append to it
   * later on, so we want it to be clean when we start out.
   ','line_number':477,'multiline':True]
['text':' perf record --pid $mainPID --output=$outfile $MOZ_PROFILE_PERF_FLAGS ','line_number':493,'multiline':True]
['text':' Split |flags2| on spaces.','line_number':515,'multiline':False]
['text':' Reached only if execlp fails. ','line_number':531,'multiline':True]
['text':' Give perf a chance to warm up. ','line_number':538,'multiline':True]
['text':' Try to reap the process anyway.','line_number':555,'multiline':False]
['text':' __linux__ ','line_number':565,'multiline':True]
