['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 * vim: set ts=8 sts=2 et sw=2 tw=80:
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':1,'multiline':True]
['text':' ArgTs ','line_number':20,'multiline':True]
['text':' Args ','line_number':23,'multiline':True]
['text':' A generic task used to dispatch work to the helper thread system.','line_number':35,'multiline':False]
['text':' Users override the pure-virtual run() method.','line_number':36,'multiline':False]
['text':' The state of the parallel computation.','line_number':43,'multiline':False]
['text':' The task is idle. Either start() has not been called or join() has','line_number':45,'multiline':False]
['text':' returned.','line_number':46,'multiline':False]
['text':' The task has been started but has not yet begun running on a helper','line_number':49,'multiline':False]
['text':' thread.','line_number':50,'multiline':False]
['text':' The task is currently running on a helper thread.','line_number':53,'multiline':False]
['text':' The task has finished running but has not yet been joined by the main','line_number':56,'multiline':False]
['text':' thread.','line_number':57,'multiline':False]
['text':' Amount of time this task took to execute.','line_number':63,'multiline':False]
['text':' A flag to signal a request for early completion of the off-thread task.','line_number':69,'multiline':False]
['text':' Derived classes must override this to ensure that join() gets called','line_number':81,'multiline':False]
['text':' before members get destructed.','line_number':82,'multiline':False]
['text':' Time spent in the most recent invocation of this task.','line_number':85,'multiline':False]
['text':' The simple interface to a parallel task works exactly like pthreads.','line_number':88,'multiline':False]
['text':' If multiple tasks are to be started or joined at once, it is more','line_number':92,'multiline':False]
['text':' efficient to take the helper thread lock once and use these methods.','line_number':93,'multiline':False]
['text':' Instead of dispatching to a helper, run the task on the current thread.','line_number':98,'multiline':False]
['text':' If the task is not already running, either start it or run it on the main','line_number':101,'multiline':False]
['text':' thread if that fails.','line_number':102,'multiline':False]
['text':' Cancel a dispatched task before it started executing.','line_number':105,'multiline':False]
['text':' Set the cancel flag and wait for the task to finish.','line_number':108,'multiline':False]
['text':' Report whether the task is idle. This means either before start() has been','line_number':111,'multiline':False]
['text':' called or after join() has been called.','line_number':112,'multiline':False]
['text':' Report whether the task has been started. This means after start() has been','line_number':118,'multiline':False]
['text':' called but before the task has run to completion. The task may not yet have','line_number':119,'multiline':False]
['text':' started running.','line_number':120,'multiline':False]
['text':' Override this method to provide the task's functionality.','line_number':131,'multiline':False]
['text':' Don't lock here because that adds extra synchronization in debug','line_number':138,'multiline':False]
['text':' builds that may hide bugs. There's no race if the assertion passes.','line_number':139,'multiline':False]
['text':' Implement the HelperThreadTask interface.','line_number':168,'multiline':False]
['text':' namespace js ','line_number':175,'multiline':True]
['text':' gc_GCParallelTask_h ','line_number':176,'multiline':True]
