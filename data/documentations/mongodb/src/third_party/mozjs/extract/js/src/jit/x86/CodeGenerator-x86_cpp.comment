['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 * vim: set ts=8 sts=2 et sw=2 tw=80:
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':1,'multiline':True]
['text':' On x86, the input operand and the output payload have the same','line_number':85,'multiline':False]
['text':' virtual register. All that needs to be written is the type tag for','line_number':86,'multiline':False]
['text':' the type definition.','line_number':87,'multiline':False]
['text':' Note that for unbox, the type and payload indexes are switched on the','line_number':106,'multiline':False]
['text':' inputs.','line_number':107,'multiline':False]
['text':' Note: If spectreValueMasking is disabled, then this instruction will','line_number':126,'multiline':False]
['text':' default to a no-op as long as the lowering allocate the same register for','line_number':127,'multiline':False]
['text':' the output and the payload.','line_number':128,'multiline':False]
['text':' Save eax and edx before they're clobbered below.','line_number':204,'multiline':False]
['text':' Load |oldval| and |newval| into |expected| resp. |replacement|.','line_number':216,'multiline':False]
['text':' Use `esi` as a temp register.','line_number':218,'multiline':False]
['text':' |newval| is stored in `edx`, which is already pushed onto the stack.','line_number':225,'multiline':False]
['text':' Move the result from `edx:eax` to `ecx:ebx`.','line_number':243,'multiline':False]
['text':' OutOfLineCallVM tracks the currently pushed stack entries as reported by','line_number':246,'multiline':False]
['text':' |masm.framePushed()|. We mustn't have any additional entries on the stack','line_number':247,'multiline':False]
['text':' which weren't previously recorded by the safepoint, otherwise the GC','line_number':248,'multiline':False]
['text':' complains when tracing the Ion frames, because the stack frames don't','line_number':249,'multiline':False]
['text':' have their expected layout.','line_number':250,'multiline':False]
['text':' Use `edx:eax`, which are both already on the stack, as temp registers.','line_number':255,'multiline':False]
['text':' Couldn't create the BigInt. Restore `edx:eax` and call into the VM.','line_number':266,'multiline':False]
['text':' At this point `edx:eax` must have been restored to their original values.','line_number':271,'multiline':False]
['text':' Save edx before it's clobbered below.','line_number':292,'multiline':False]
['text':' Move the result from `edx:eax` to `ecx:ebx`.','line_number':308,'multiline':False]
['text':' OutOfLineCallVM tracks the currently pushed stack entries as reported by','line_number':311,'multiline':False]
['text':' |masm.framePushed()|. We mustn't have any additional entries on the stack','line_number':312,'multiline':False]
['text':' which weren't previously recorded by the safepoint, otherwise the GC','line_number':313,'multiline':False]
['text':' complains when tracing the Ion frames, because the stack frames don't','line_number':314,'multiline':False]
['text':' have their expected layout.','line_number':315,'multiline':False]
['text':' Use `edx`, which is already on the stack, as a temp register.','line_number':320,'multiline':False]
['text':' Couldn't create the BigInt. Restore `edx` and call into the VM.','line_number':329,'multiline':False]
['text':' At this point `edx` must have been restored to its original value.','line_number':334,'multiline':False]
['text':' Save edx before it's clobbered below.','line_number':358,'multiline':False]
['text':' Move the result from `edx:eax` to `ecx:ebx`.','line_number':382,'multiline':False]
['text':' OutOfLineCallVM tracks the currently pushed stack entries as reported by','line_number':385,'multiline':False]
['text':' |masm.framePushed()|. We mustn't have any additional entries on the stack','line_number':386,'multiline':False]
['text':' which weren't previously recorded by the safepoint, otherwise the GC','line_number':387,'multiline':False]
['text':' complains when tracing the Ion frames, because the stack frames don't','line_number':388,'multiline':False]
['text':' have their expected layout.','line_number':389,'multiline':False]
['text':' Use `edx`, which is already on the stack, as a temp register.','line_number':394,'multiline':False]
['text':' Couldn't create the BigInt. Restore `edx` and call into the VM.','line_number':403,'multiline':False]
['text':' At this point `edx` must have been restored to its original value.','line_number':408,'multiline':False]
['text':' Save edx before it's clobbered below.','line_number':430,'multiline':False]
['text':' See ../CodeGenerator.cpp for more information.','line_number':455,'multiline':False]
['text':' Beware: convertUInt32ToDouble clobbers input.','line_number':466,'multiline':False]
['text':' Beware: convertUInt32ToFloat32 clobbers input.','line_number':479,'multiline':False]
['text':' Lowering has set things up so that we can use a BaseIndex form if the','line_number':499,'multiline':False]
['text':' pointer is constant and the offset is zero, or if the pointer is zero.','line_number':500,'multiline':False]
['text':' Lowering has set things up so that we can use a BaseIndex form if the','line_number':531,'multiline':False]
['text':' pointer is constant and the offset is zero, or if the pointer is zero.','line_number':532,'multiline':False]
['text':' eax and edx will be overwritten every time through the loop but','line_number':689,'multiline':False]
['text':' memoryBase and ptr must remain live for a possible second iteration.','line_number':690,'multiline':False]
['text':' Here the `value` register acts as a temp, we'll restore it below.','line_number':743,'multiline':False]
['text':' namespace jit','line_number':806,'multiline':False]
['text':' namespace js','line_number':807,'multiline':False]
['text':' Push double.','line_number':863,'multiline':False]
['text':' Check exponent to avoid fp exceptions.','line_number':867,'multiline':False]
['text':' Load double, perform 64-bit truncation.','line_number':870,'multiline':False]
['text':' Load low word, pop double and jump back.','line_number':873,'multiline':False]
['text':' Try to convert doubles representing integers within 2^32 of a signed','line_number':884,'multiline':False]
['text':' integer, by adding/subtracting 2^32 and then trying to convert to int32.','line_number':885,'multiline':False]
['text':' This has to be an exact conversion, as otherwise the truncation works','line_number':886,'multiline':False]
['text':' incorrectly on the modified value.','line_number':887,'multiline':False]
['text':' Push float32, but subtracts 64 bits so that the value popped by fisttp','line_number':963,'multiline':False]
['text':' fits','line_number':964,'multiline':False]
['text':' Check exponent to avoid fp exceptions.','line_number':968,'multiline':False]
['text':' Load float, perform 32-bit truncation.','line_number':971,'multiline':False]
['text':' Load low word, pop 64bits and jump back.','line_number':974,'multiline':False]
['text':' Try to convert float32 representing integers within 2^32 of a signed','line_number':985,'multiline':False]
['text':' integer, by adding/subtracting 2^32 and then trying to convert to int32.','line_number':986,'multiline':False]
['text':' This has to be an exact conversion, as otherwise the truncation works','line_number':987,'multiline':False]
['text':' incorrectly on the modified value.','line_number':988,'multiline':False]
['text':' Handle divide by zero.','line_number':1137,'multiline':False]
['text':' We can use WasmTlsReg as temp register because we preserved it before.','line_number':1140,'multiline':False]
['text':' Handle an integer overflow exception from INT64_MIN / -1.','line_number':1148,'multiline':False]
['text':' output in edx:eax, move to output register.','line_number':1177,'multiline':False]
['text':' Prevent divide by zero.','line_number':1198,'multiline':False]
['text':' We can use WasmTlsReg as temp register because we preserved it before.','line_number':1201,'multiline':False]
['text':' output in edx:eax, move to output register.','line_number':1223,'multiline':False]
['text':' Callers handle division by zero and integer overflow.','line_number':1233,'multiline':False]
['text':' Sign extend the lhs into rdx to make rdx:rax.','line_number':1238,'multiline':False]
['text':' Create and return the result.','line_number':1243,'multiline':False]
['text':' Callers handle division by zero and integer overflow.','line_number':1251,'multiline':False]
['text':' Sign extend the lhs into rdx to make edx:eax.','line_number':1256,'multiline':False]
['text':' Move the remainder from edx.','line_number':1261,'multiline':False]
['text':' Create and return the result.','line_number':1264,'multiline':False]
