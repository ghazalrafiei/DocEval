['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 * vim: set ts=8 sts=2 et sw=2 tw=80:
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':1,'multiline':True]
['text':' REGEXP_*_FLAG','line_number':16,'multiline':False]
['text':' js::GetErrorMessage, JSMSG_*','line_number':20,'multiline':False]
['text':' js::ReportOverRecursed','line_number':21,'multiline':False]
['text':' JS::GetBuiltinClass','line_number':22,'multiline':False]
['text':' JS::RegExpFlags','line_number':24,'multiline':False]
['text':' js_*_str','line_number':34,'multiline':False]
['text':' = nullptr ','line_number':68,'multiline':True]
['text':' MatchPairs ','line_number':87,'multiline':True]
['text':' RegExpObject ','line_number':111,'multiline':True]
['text':' static ','line_number':113,'multiline':True]
['text':' static ','line_number':123,'multiline':True]
['text':' Determine whether tracing is happening during normal marking.  We need to','line_number':158,'multiline':False]
['text':' test all the following conditions, since:','line_number':159,'multiline':False]
['text':'','line_number':160,'multiline':False]
['text':'   1. During TraceRuntime, RuntimeHeapIsBusy() is true, but the','line_number':161,'multiline':False]
['text':'      tracer might not be a marking tracer.','line_number':162,'multiline':False]
['text':'   2. When a write barrier executes, isMarkingTracer is true, but','line_number':163,'multiline':False]
['text':'      RuntimeHeapIsBusy() will be false.','line_number':164,'multiline':False]
['text':' static ','line_number':243,'multiline':True]
['text':' The lastIndex property alone is writable but non-configurable. ','line_number':267,'multiline':True]
['text':' If this is a re-initialization with an existing RegExpShared, 'flags'','line_number':278,'multiline':False]
['text':' may not match getShared()->flags, so forget the RegExpShared.','line_number':279,'multiline':False]
['text':' Note: leaves the string buffer empty if no escaping need be performed.','line_number':366,'multiline':False]
['text':' There's a forward slash that needs escaping.','line_number':381,'multiline':False]
['text':' This is the first char we've seen that needs escaping,','line_number':383,'multiline':False]
['text':' copy everything up to this point.','line_number':384,'multiline':False]
['text':' There's LineTerminator that needs escaping.','line_number':398,'multiline':False]
['text':' This is the first char we've seen that needs escaping,','line_number':400,'multiline':False]
['text':' copy everything up to this point.','line_number':401,'multiline':False]
['text':' ES6 draft rev32 21.2.3.2.4.','line_number':430,'multiline':False]
['text':' Step 2.','line_number':432,'multiline':False]
['text':' We may never need to use |sb|. Start using it lazily.','line_number':437,'multiline':False]
['text':' Step 3.','line_number':452,'multiline':False]
['text':' ES6 draft rev32 21.2.5.14. Optimized for RegExpObject.','line_number':456,'multiline':False]
['text':' Steps 3-4.','line_number':459,'multiline':False]
['text':' Step 7.','line_number':466,'multiline':False]
['text':' Steps 5-7.','line_number':478,'multiline':False]
['text':' ES 2016 draft Mar 25, 2016 21.2.1 SyntaxCharacter. ','line_number':507,'multiline':True]
['text':' RegExpShared ','line_number':553,'multiline':True]
['text':' Discard code to avoid holding onto ExecutablePools.','line_number':559,'multiline':False]
['text':' We can also purge the tables used by JIT code.','line_number':580,'multiline':False]
['text':' static ','line_number':599,'multiline':True]
['text':' We start by interpreting regexps, then compile them once they are','line_number':605,'multiline':False]
['text':' sufficiently hot. For very long input strings, we tier up eagerly.','line_number':606,'multiline':False]
['text':' Fall back to bytecode if native codegen is not available.','line_number':613,'multiline':False]
['text':' static ','line_number':633,'multiline':True]
['text':' TODO: Add tracelogger support','line_number':640,'multiline':False]
['text':' Compile the code at point-of-use. ','line_number':642,'multiline':True]
['text':'
   * Ensure sufficient memory for output vector.
   * No need to initialize it. The RegExp engine fills them in on a match.
   ','line_number':647,'multiline':True]
['text':'
   * Ensure sufficient memory for output vector.
   * No need to initialize it. The RegExp engine fills them in on a match.
   ','line_number':660,'multiline':True]
['text':' Check if we must simulate the interruption','line_number':675,'multiline':False]
['text':' Execute can return RegExpRunStatus_Error:
       *
       *  1. If the native stack overflowed
       *  2. If the backtrack stack overflowed
       *  3. If an interrupt was requested during execution.
       *
       * In the first two cases, we want to throw an error. In the
       * third case, we want to handle the interrupt and try again.
       * We cap the number of times we will retry.
       ','line_number':682,'multiline':True]
['text':' If this regexp is being executed by recovery instructions','line_number':693,'multiline':False]
['text':' while bailing out to handle an exception, there may already','line_number':694,'multiline':False]
['text':' be an exception pending. If so, just return that exception','line_number':695,'multiline':False]
['text':' instead of reporting a new one.','line_number':696,'multiline':False]
['text':' The initial execution may have been interpreted, or the','line_number':705,'multiline':False]
['text':' interrupt may have triggered a GC that discarded jitcode.','line_number':706,'multiline':False]
['text':' To maximize the chance of succeeding before being','line_number':707,'multiline':False]
['text':' interrupted again, we want to ensure we are compiled.','line_number':708,'multiline':False]
['text':' If we have run out of retries, this regexp takes too long to execute.','line_number':716,'multiline':False]
['text':' static ','line_number':744,'multiline':True]
['text':' The irregexp parser returns named capture information in the form','line_number':750,'multiline':False]
['text':' of an ArrayObject, where even elements store the capture name and','line_number':751,'multiline':False]
['text':' odd elements store the corresponding capture index. We create a','line_number':752,'multiline':False]
['text':' template object with a property for each capture name, and store','line_number':753,'multiline':False]
['text':' the capture indices as a heap-allocated array.','line_number':754,'multiline':False]
['text':' Create a plain template object.','line_number':758,'multiline':False]
['text':' Initialize the properties of the template.','line_number':765,'multiline':False]
['text':' Allocate the capture index array.','line_number':777,'multiline':False]
['text':' Populate the capture index array','line_number':785,'multiline':False]
['text':' First part checks size_t overflow.','line_number':821,'multiline':False]
['text':' static ','line_number':853,'multiline':True]
['text':' RegExpRealm ','line_number':878,'multiline':True]
['text':' Create template array object ','line_number':892,'multiline':True]
['text':' The |indices| array only has a |groups| property. ','line_number':901,'multiline':True]
['text':' Set dummy index property ','line_number':913,'multiline':True]
['text':' Set dummy input property ','line_number':922,'multiline':True]
['text':' Set dummy groups property ','line_number':931,'multiline':True]
['text':' Set dummy indices property ','line_number':941,'multiline':True]
['text':' Functions ','line_number':1004,'multiline':True]
['text':' Unlike RegExpAlloc, all clones must use |regex|'s group.','line_number':1007,'multiline':False]
['text':' NB: Keep this in sync with CloneScriptRegExpObject. ','line_number':1111,'multiline':True]
['text':' NB: Keep this in sync with XDRScriptRegExpObject. ','line_number':1143,'multiline':True]
['text':'
 * Regular Expressions.
 ','line_number':1157,'multiline':True]
['text':' We can fail because of OOM or over-recursion even if the syntax is valid.','line_number':1304,'multiline':False]
