['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 * vim: set ts=8 sts=2 et sw=2 tw=80:
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':1,'multiline':True]
['text':' JS::GetBuiltinClass','line_number':12,'multiline':False]
['text':' js::MaybeHasInterestingSymbolProperty','line_number':23,'multiline':False]
['text':' Get the GC kind to use for scripted 'new', empty object literals ({}), and','line_number':28,'multiline':False]
['text':' the |Object| constructor.','line_number':29,'multiline':False]
['text':' namespace js','line_number':32,'multiline':False]
['text':' static ','line_number':46,'multiline':True]
['text':' Increase the slots to SLOT_CAPACITY_MIN to decrease the likelihood','line_number':54,'multiline':False]
['text':' the dynamic slots need to get increased again. ArrayObjects ignore','line_number':55,'multiline':False]
['text':' this because slots are uncommon in that case.','line_number':56,'multiline':False]
['text':' static ','line_number':69,'multiline':True]
['text':' Assert we're on the main thread. ','line_number':81,'multiline':True]
['text':' Normally, the number of fixed slots given an object is the maximum','line_number':136,'multiline':False]
['text':' permitted for its size class. For array buffers and non-shared typed','line_number':137,'multiline':False]
['text':' arrays we only use enough to cover the class reserved slots, so that','line_number':138,'multiline':False]
['text':' the remaining space in the object's allocation is available for the','line_number':139,'multiline':False]
['text':' buffer's data.','line_number':140,'multiline':False]
['text':' This function is meant to be called from allocation fast paths.','line_number':160,'multiline':False]
['text':'','line_number':161,'multiline':False]
['text':' If we do have an allocation metadata builder, it can cause a GC, so the','line_number':162,'multiline':False]
['text':' object must be rooted. The usual way to do this would be to make our callers','line_number':163,'multiline':False]
['text':' pass a HandleObject, but that would require them to pay the cost of rooting','line_number':164,'multiline':False]
['text':' the object unconditionally, even though collecting metadata is rare. Instead,','line_number':165,'multiline':False]
['text':' SetNewObjectMetadata's contract is that the caller must use the pointer','line_number':166,'multiline':False]
['text':' returned in place of the pointer passed. If a GC occurs, the returned pointer','line_number':167,'multiline':False]
['text':' may be the passed pointer, relocated by GC. If no GC could occur, it's just','line_number':168,'multiline':False]
['text':' passed through. We root nothing unless necessary.','line_number':169,'multiline':False]
['text':' The metadata builder is invoked for each object created on the active','line_number':175,'multiline':False]
['text':' thread, except when analysis/compilation is active, to avoid recursion.','line_number':176,'multiline':False]
['text':' Don't collect metadata on objects that represent metadata.','line_number':180,'multiline':False]
['text':' namespace js','line_number':192,'multiline':False]
['text':'
   * The global is read-barriered so that it is kept live by access through
   * the Realm. When accessed through a JSObject, however, the global will be
   * already kept live by the black JSObject's group pointer, so does not
   * need to be read-barriered.
   ','line_number':195,'multiline':True]
['text':' [[Extensible]] for ordinary non-proxy objects is an object flag.','line_number':207,'multiline':False]
['text':' Return whether looking up a method on 'obj' definitely resolves to the','line_number':257,'multiline':False]
['text':' original specified native function. The method may conservatively return','line_number':258,'multiline':False]
['text':' 'false' in the case of proxies or other non-native objects.','line_number':259,'multiline':False]
['text':' Return whether 'obj' definitely has no @@toPrimitive method.','line_number':272,'multiline':False]
['text':' ES6 draft rev 28 (2014 Oct 14) 7.1.14 ','line_number':301,'multiline':True]
['text':'
 * Return true if this is a compiler-created internal function accessed by
 * its own object. Such a function object must not be accessible to script
 * or embedding code.
 ','line_number':311,'multiline':True]
['text':'
 * Make an object with the specified prototype. If parent is null, it will
 * default to the prototype's global if the prototype is non-null.
 ','line_number':336,'multiline':True]
['text':' namespace detail','line_number':363,'multiline':False]
['text':' Make an object with the prototype set according to the cached prototype or','line_number':413,'multiline':False]
['text':' Object.prototype.','line_number':414,'multiline':False]
['text':'
 * Create a native instance of the given class with parent and proto set
 * according to the context's active global.
 ','line_number':448,'multiline':True]
['text':' Used to optimize calls to (new Object())','line_number':491,'multiline':False]
['text':'
 * As for gc::GetGCObjectKind, where numElements is a guess at the final size of
 * the object, zero if the final size is unknown. This should only be used for
 * objects that do not require any fixed slots.
 ','line_number':494,'multiline':True]
['text':' Returns ESClass::Other if the value isn't an object, or if the object','line_number':513,'multiline':False]
['text':' isn't of one of the enumerated classes.  Otherwise returns the appropriate','line_number':514,'multiline':False]
['text':' class.','line_number':515,'multiline':False]
['text':' ES6 rev 24 (2014 April 27) 7.2.5 IsConstructor','line_number':548,'multiline':False]
['text':' namespace js ','line_number':562,'multiline':True]
['text':' vm_JSObject_inl_h ','line_number':595,'multiline':True]
