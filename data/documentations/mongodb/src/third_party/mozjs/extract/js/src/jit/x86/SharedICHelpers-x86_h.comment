['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 * vim: set ts=8 sts=2 et sw=2 tw=80:
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':1,'multiline':True]
['text':' Distance from stack top to the top Value inside an IC stub (this is the','line_number':18,'multiline':False]
['text':' return address).','line_number':19,'multiline':False]
['text':' The stub pointer must already be in ICStubReg.','line_number':31,'multiline':False]
['text':' Call the stubcode.','line_number':32,'multiline':False]
['text':' Ion frames do not save and restore the frame pointer. If we called','line_number':41,'multiline':False]
['text':' into Ion, we have to restore the stack pointer from the frame descriptor.','line_number':42,'multiline':False]
['text':' If we performed a VM call, the descriptor has been popped already so','line_number':43,'multiline':False]
['text':' in that case we use the frame pointer.','line_number':44,'multiline':False]
['text':' The return address is on top of the stack, followed by the frame','line_number':57,'multiline':False]
['text':' descriptor. Use a pop instruction to overwrite the frame descriptor','line_number':58,'multiline':False]
['text':' with the return address. Note that pop increments the stack pointer','line_number':59,'multiline':False]
['text':' before computing the address.','line_number':60,'multiline':False]
['text':' Load next stub into ICStubReg','line_number':71,'multiline':False]
['text':' Return address is already loaded, just jump to the next stubcode.','line_number':74,'multiline':False]
['text':' namespace jit','line_number':78,'multiline':False]
['text':' namespace js','line_number':79,'multiline':False]
['text':' jit_x86_SharedICHelpers_x86_h ','line_number':81,'multiline':True]
