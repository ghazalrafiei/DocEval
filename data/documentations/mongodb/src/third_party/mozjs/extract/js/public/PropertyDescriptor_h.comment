['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*- ','line_number':1,'multiline':True]
['text':' This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':2,'multiline':True]
['text':' Property descriptors and flags. ','line_number':6,'multiline':True]
['text':' MOZ_ASSERT, MOZ_ASSERT_IF','line_number':11,'multiline':False]
['text':' mozilla::EnumSet','line_number':12,'multiline':False]
['text':' mozilla::Maybe','line_number':13,'multiline':False]
['text':' uint8_t','line_number':15,'multiline':False]
['text':' JS_PUBLIC_API','line_number':17,'multiline':False]
['text':' JS{Getter,Setter}Op','line_number':19,'multiline':False]
['text':' JS::Handle, js::{,Mutable}WrappedPtrOperations','line_number':20,'multiline':False]
['text':' JS::Value','line_number':21,'multiline':False]
['text':' Property attributes, set in JSPropertySpec and passed to API functions.
 *
 * The data structure in which some of these values are stored only uses a
 * uint8_t to store the relevant information.  Proceed with caution if trying to
 * reorder or change the the first byte worth of flags.
 ','line_number':27,'multiline':True]
['text':'* The property is visible in for/in loops. ','line_number':34,'multiline':True]
['text':'*
 * The property is non-writable.  This flag is only valid for data properties.
 ','line_number':37,'multiline':True]
['text':'*
 * The property is non-configurable: it can't be deleted, and if it's an
 * accessor descriptor, its getter and setter can't be changed.
 ','line_number':42,'multiline':True]
['text':'*
 * Resolve hooks and enumerate hooks must pass this flag when calling
 * JS_Define* APIs to reify lazily-defined properties.
 *
 * JSPROP_RESOLVING is used only with property-defining APIs. It tells the
 * engine to skip the resolve hook when performing the lookup at the beginning
 * of property definition. This keeps the resolve hook from accidentally
 * triggering itself: unchecked recursion.
 *
 * For enumerate hooks, triggering the resolve hook would be merely silly, not
 * fatal, except in some cases involving non-configurable properties.
 ','line_number':48,'multiline':True]
['text':' (higher flags are unused; add to JSPROP_FLAGS_MASK if ever defined) ','line_number':62,'multiline':True]
['text':' 6.1.7.1 Property Attributes','line_number':69,'multiline':False]
['text':' The descriptor is [[Configurable]] := true.','line_number':71,'multiline':False]
['text':' The descriptor is [[Enumerable]] := true.','line_number':74,'multiline':False]
['text':' The descriptor is [[Writable]] := true. Only valid for data descriptors.','line_number':77,'multiline':False]
['text':' Re-use all EnumSet constructors.','line_number':82,'multiline':False]
['text':'*
 * A structure that represents a property on an object, or the absence of a
 * property.  Use {,Mutable}Handle<PropertyDescriptor> to interact with
 * instances of this structure rather than interacting directly with member
 * fields.
 ','line_number':93,'multiline':True]
['text':' Construct a new complete DataDescriptor.','line_number':138,'multiline':False]
['text':' This constructor is only provided for legacy code!','line_number':150,'multiline':False]
['text':' Construct a new complete AccessorDescriptor.','line_number':165,'multiline':False]
['text':' Note: This means JSPROP_GETTER and JSPROP_SETTER are always set.','line_number':166,'multiline':False]
['text':' This constructor is only provided for legacy code!','line_number':180,'multiline':False]
['text':' Construct a new incomplete empty PropertyDescriptor.','line_number':216,'multiline':False]
['text':' Using the spec syntax this would be { }. Specific fields like [[Value]]','line_number':217,'multiline':False]
['text':' can be added with e.g., setValue.','line_number':218,'multiline':False]
['text':' Non-standard flag, which is set when defining properties in a resolve hook.','line_number':305,'multiline':False]
['text':' namespace JS','line_number':352,'multiline':False]
['text':' namespace js','line_number':435,'multiline':False]
['text':'
 * ES6 draft rev 32 (2015 Feb 2) 6.2.4.4 FromPropertyDescriptor(Desc).
 *
 * If desc.isNothing(), then vp is set to undefined.
 ','line_number':443,'multiline':True]
['text':' namespace JS','line_number':452,'multiline':False]
['text':' js_PropertyDescriptor_h ','line_number':454,'multiline':True]
