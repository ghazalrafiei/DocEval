['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 * vim: set ts=8 sts=2 et sw=2 tw=80:
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':1,'multiline':True]
['text':' These offsets are specific to nunboxing, and capture offsets into the','line_number':25,'multiline':False]
['text':' components of a js::Value.','line_number':26,'multiline':False]
['text':' Size of MIPS32 general purpose registers is 32 bits.','line_number':27,'multiline':False]
['text':' Size of each bailout table entry.','line_number':36,'multiline':False]
['text':' For MIPS this is 2 instructions relative call.','line_number':37,'multiline':False]
['text':' MIPS32 can have two types of floating-point coprocessors modes:','line_number':40,'multiline':False]
['text':' - FR=0 mode/ 32-bit FPRs - Historical default, there are 32 single','line_number':41,'multiline':False]
['text':' precision registers and pairs of even and odd float registers are used as','line_number':42,'multiline':False]
['text':' double precision registers. Example: f0 (double) is composed of','line_number':43,'multiline':False]
['text':' f0 and f1 (single). Loongson3A FPU running in this mode doesn't allow','line_number':44,'multiline':False]
['text':' use of odd registers for single precision arithmetic.','line_number':45,'multiline':False]
['text':' - FR=1 mode/ 64-bit FPRs - In this case, there are 32 double precision','line_number':46,'multiline':False]
['text':' register which can also be used as single precision registers. More info','line_number':47,'multiline':False]
['text':' https://dmz-portal.imgtec.com/wiki/MIPS_O32_ABI_-_FR0_and_FR1_Interlinking','line_number':48,'multiline':False]
['text':' Currently we enable 16 even single precision registers which can be also can','line_number':50,'multiline':False]
['text':' be used as double precision registers. It enables jit code to run even on','line_number':51,'multiline':False]
['text':' Loongson3A. It does not support FR=1 mode because MacroAssembler threats odd','line_number':52,'multiline':False]
['text':' single precision registers as high parts of even double precision registers.','line_number':53,'multiline':False]
['text':' When saving all registers we only need to do is save double registers.','line_number':78,'multiline':False]
['text':' Single registers are not dominating any smaller registers, thus masking','line_number':265,'multiline':False]
['text':' is enough to convert an allocatable set into a set of register list all','line_number':266,'multiline':False]
['text':' single register available.','line_number':267,'multiline':False]
['text':' In order to handle functions such as int(*)(int, double) where the first','line_number':277,'multiline':False]
['text':' argument is a general purpose register, and the second argument is a floating','line_number':278,'multiline':False]
['text':' point register, we have to store the double content into 2 general purpose','line_number':279,'multiline':False]
['text':' registers, namely a2 and a3.','line_number':280,'multiline':False]
['text':' namespace jit','line_number':283,'multiline':False]
['text':' namespace js','line_number':284,'multiline':False]
['text':' jit_mips32_Architecture_mips32_h ','line_number':286,'multiline':True]
