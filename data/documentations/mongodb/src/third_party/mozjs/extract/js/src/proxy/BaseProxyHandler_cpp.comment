['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 * vim: set ts=8 sts=2 et sw=2 tw=80:
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':1,'multiline':True]
['text':' js::GetErrorMessage, JSMSG_*','line_number':9,'multiline':False]
['text':' js_*_str','line_number':13,'multiline':False]
['text':' This method is not covered by any spec, but we follow ES 2016','line_number':33,'multiline':False]
['text':' (February 11, 2016) 9.1.7.1 fairly closely.','line_number':34,'multiline':False]
['text':' Step 2. (Step 1 is a superfluous assertion.)','line_number':36,'multiline':False]
['text':' Non-standard: Use our faster hasOwn trap.','line_number':37,'multiline':False]
['text':' Step 3.','line_number':42,'multiline':False]
['text':' The spec calls this variable "parent", but that word has weird','line_number':47,'multiline':False]
['text':' connotations in SpiderMonkey, so let's go with "proto".','line_number':48,'multiline':False]
['text':' Step 4.','line_number':49,'multiline':False]
['text':' Step 5.,5.a.','line_number':55,'multiline':False]
['text':' Step 6.','line_number':60,'multiline':False]
['text':' This method is not covered by any spec, but we follow ES 2016','line_number':81,'multiline':False]
['text':' (January 21, 2016) 9.1.8 fairly closely.','line_number':82,'multiline':False]
['text':' Step 2. (Step 1 is a superfluous assertion.)','line_number':84,'multiline':False]
['text':' Step 3.','line_number':93,'multiline':False]
['text':' The spec calls this variable "parent", but that word has weird','line_number':95,'multiline':False]
['text':' connotations in SpiderMonkey, so let's go with "proto".','line_number':96,'multiline':False]
['text':' Step 3.a.','line_number':97,'multiline':False]
['text':' Step 3.b.','line_number':103,'multiline':False]
['text':' Step 3.c.','line_number':109,'multiline':False]
['text':' Step 4.','line_number':113,'multiline':False]
['text':' Step 5.','line_number':119,'multiline':False]
['text':' Step 6.','line_number':123,'multiline':False]
['text':' Step 7.','line_number':129,'multiline':False]
['text':' This method is not covered by any spec, but we follow ES6 draft rev 28','line_number':139,'multiline':False]
['text':' (2014 Oct 14) 9.1.9 fairly closely, adapting it slightly for','line_number':140,'multiline':False]
['text':' SpiderMonkey's particular foibles.','line_number':141,'multiline':False]
['text':' Steps 2-3.  (Step 1 is a superfluous assertion.)','line_number':143,'multiline':False]
['text':' The rest is factored out into a separate function with a weird name.','line_number':152,'multiline':False]
['text':' This algorithm continues just below.','line_number':153,'multiline':False]
['text':' Step 4.','line_number':164,'multiline':False]
['text':' The spec calls this variable "parent", but that word has weird','line_number':166,'multiline':False]
['text':' connotations in SpiderMonkey, so let's go with "proto".','line_number':167,'multiline':False]
['text':' Step 4.d.','line_number':176,'multiline':False]
['text':' Step 5.','line_number':185,'multiline':False]
['text':' Steps 5.a-b.','line_number':187,'multiline':False]
['text':' Steps 5.c-d.','line_number':196,'multiline':False]
['text':' Step 5.e.','line_number':202,'multiline':False]
['text':' Step 5.e.i.','line_number':204,'multiline':False]
['text':' Step 5.e.ii.','line_number':209,'multiline':False]
['text':' Steps 5.e.iii-iv. and 5.f.i.','line_number':215,'multiline':False]
['text':' Step 6.','line_number':228,'multiline':False]
['text':' Select only the enumerable properties through in-place iteration. ','line_number':253,'multiline':True]
['text':' GetPropertyKeys will invoke getOwnEnumerablePropertyKeys along the proto','line_number':289,'multiline':False]
['text':' chain for us.','line_number':290,'multiline':False]
['text':' Disallow sets of protos on proxies with dynamic prototypes but no hook.','line_number':374,'multiline':False]
['text':' This keeps us away from the footgun of having the first proto set opt','line_number':375,'multiline':False]
['text':' you out of having dynamic protos altogether.','line_number':376,'multiline':False]
['text':' (NotifyGCNukeWrapper() only needs to be called on CCWs.)','line_number':404,'multiline':False]
['text':' The proxy is about to be replaced, so we need to do any necessary','line_number':406,'multiline':False]
['text':' cleanup first.','line_number':407,'multiline':False]
['text':' We don't need to call finalize here because the CCW finalizer doesn't do','line_number':421,'multiline':False]
['text':' anything. Skipping finalize means that |wrapper| doesn't need to be rooted','line_number':422,'multiline':False]
['text':' to pass the hazard analysis, which is needed because this method is called','line_number':423,'multiline':False]
['text':' from some tricky places inside transplanting where rooting can be','line_number':424,'multiline':False]
['text':' difficult.','line_number':425,'multiline':False]
