['text':' Copyright 2013, ARM Limited','line_number':1,'multiline':False]
['text':' All rights reserved.','line_number':2,'multiline':False]
['text':'','line_number':3,'multiline':False]
['text':' Redistribution and use in source and binary forms, with or without','line_number':4,'multiline':False]
['text':' modification, are permitted provided that the following conditions are met:','line_number':5,'multiline':False]
['text':'','line_number':6,'multiline':False]
['text':'   * Redistributions of source code must retain the above copyright notice,','line_number':7,'multiline':False]
['text':'     this list of conditions and the following disclaimer.','line_number':8,'multiline':False]
['text':'   * Redistributions in binary form must reproduce the above copyright notice,','line_number':9,'multiline':False]
['text':'     this list of conditions and the following disclaimer in the documentation','line_number':10,'multiline':False]
['text':'     and/or other materials provided with the distribution.','line_number':11,'multiline':False]
['text':'   * Neither the name of ARM Limited nor the names of its contributors may be','line_number':12,'multiline':False]
['text':'     used to endorse or promote products derived from this software without','line_number':13,'multiline':False]
['text':'     specific prior written permission.','line_number':14,'multiline':False]
['text':'','line_number':15,'multiline':False]
['text':' THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS CONTRIBUTORS "AS IS" AND','line_number':16,'multiline':False]
['text':' ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED','line_number':17,'multiline':False]
['text':' WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE','line_number':18,'multiline':False]
['text':' DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE','line_number':19,'multiline':False]
['text':' FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL','line_number':20,'multiline':False]
['text':' DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR','line_number':21,'multiline':False]
['text':' SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER','line_number':22,'multiline':False]
['text':' CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,','line_number':23,'multiline':False]
['text':' OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE','line_number':24,'multiline':False]
['text':' OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.','line_number':25,'multiline':False]
['text':' MOZ_ASSERT','line_number':31,'multiline':False]
['text':' SprintfLiteral','line_number':32,'multiline':False]
['text':' size_t','line_number':34,'multiline':False]
['text':' uint8_t, uint32_t','line_number':35,'multiline':False]
['text':' strstr','line_number':36,'multiline':False]
['text':' vixl::{HINT, NOP, ImmHint_offset}','line_number':38,'multiline':False]
['text':' VIXL_ASSERT','line_number':39,'multiline':False]
['text':' vixl::{Instruction, NumShortBranchRangeTypes, Instr, ImmBranchRangeType}','line_number':40,'multiline':False]
['text':' jit::Label','line_number':42,'multiline':False]
['text':' jit::AssemblerShared','line_number':43,'multiline':False]
['text':' jit::DisassemblerSpew','line_number':44,'multiline':False]
['text':' jit::BufferOffset','line_number':45,'multiline':False]
['text':' jit::AssemblerBufferWithConstantPools','line_number':46,'multiline':False]
['text':' Base class for vixl::Assembler, for isolating Moz-specific changes to VIXL.','line_number':66,'multiline':False]
['text':' Buffer initialization constants.','line_number':68,'multiline':False]
['text':' Helper function for use with the ARMBuffer.','line_number':108,'multiline':False]
['text':' The MacroAssembler must create an AutoJitContextAlloc before initializing the buffer.','line_number':109,'multiline':False]
['text':' Return the Instruction at a given byte offset.','line_number':114,'multiline':False]
['text':' Return the byte offset of a bound label.','line_number':119,'multiline':False]
['text':' Get the buffer offset of the next inserted instruction. This may flush','line_number':128,'multiline':False]
['text':' constant pools.','line_number':129,'multiline':False]
['text':' Get the next usable buffer offset. Note that a constant pool may be placed','line_number':134,'multiline':False]
['text':' here before the next instruction is emitted.','line_number':135,'multiline':False]
['text':' Allocate memory in the buffer by forwarding to armbuffer_.','line_number':140,'multiline':False]
['text':' Propagate OOM errors.','line_number':141,'multiline':False]
['text':' If not, then fix disassembly ','line_number':148,'multiline':True]
['text':' The target information in the instruction is likely garbage, so remove it.','line_number':187,'multiline':False]
['text':' The target label will in any case be printed if we have it.','line_number':188,'multiline':False]
['text':'','line_number':189,'multiline':False]
['text':' The format of the instruction disassembly is /.*#.*/.  Strip the # and later.','line_number':190,'multiline':False]
['text':' The instruction will have the form /^.*pc\+0/ followed by junk that we','line_number':217,'multiline':False]
['text':' don't need; try to strip it.','line_number':218,'multiline':False]
['text':' Emit the instruction, returning its offset.','line_number':238,'multiline':False]
['text':' TODO: isBranch is obsolete and should be removed.','line_number':241,'multiline':False]
['text':' Emit the instruction at |at|.','line_number':260,'multiline':False]
['text':' TODO: Assert that the buffer already has the instruction marked as a branch.','line_number':267,'multiline':False]
['text':' Emit data inline in the instruction stream.','line_number':271,'multiline':False]
['text':' Size of the code generated in bytes, including pools.','line_number':278,'multiline':False]
['text':' Move the pool into the instruction stream.','line_number':283,'multiline':False]
['text':' Inhibit pool flushing for the given number of instructions.','line_number':288,'multiline':False]
['text':' Generating more than |maxInst| instructions in a no-pool region','line_number':289,'multiline':False]
['text':' triggers an assertion within the ARMBuffer.','line_number':290,'multiline':False]
['text':' Does not nest.','line_number':291,'multiline':False]
['text':' Marks the end of a no-pool region.','line_number':296,'multiline':False]
['text':' Static interface used by IonAssemblerBufferWithConstantPools.','line_number':309,'multiline':False]
['text':' Functions for managing Labels and linked lists of Label uses.','line_number':321,'multiline':False]
['text':' Get the next Label user in the linked list of Label uses.','line_number':323,'multiline':False]
['text':' Return an unassigned BufferOffset when the end of the list is reached.','line_number':324,'multiline':False]
['text':' Patch the instruction at cur to link to the instruction at next.','line_number':327,'multiline':False]
['text':' Link the current (not-yet-emitted) instruction to the specified label,','line_number':330,'multiline':False]
['text':' then return a raw offset to be encoded in the instruction.','line_number':331,'multiline':False]
['text':' A common implementation for the LinkAndGet<Type>OffsetTo helpers.','line_number':337,'multiline':False]
['text':' The buffer into which code and relocation info are generated.','line_number':342,'multiline':False]
['text':' namespace vixl','line_number':347,'multiline':False]
['text':' jit_arm64_vixl_MozBaseAssembler_vixl_h','line_number':350,'multiline':False]
