['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 * vim: set ts=8 sts=2 et sw=2 tw=80:
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':1,'multiline':True]
['text':' [SMDOC] JSON Structured Spewer','line_number':30,'multiline':False]
['text':'','line_number':31,'multiline':False]
['text':' This spewer design has two goals:','line_number':32,'multiline':False]
['text':'','line_number':33,'multiline':False]
['text':'   1. Provide a spew mechanism that has first-class support for slicing and','line_number':34,'multiline':False]
['text':'      dicing output. This means that filtering by script and channel should be','line_number':35,'multiline':False]
['text':'      the dominant output mechanism.','line_number':36,'multiline':False]
['text':'   2. Provide a simple powerful mechanism for getting information out of the','line_number':37,'multiline':False]
['text':'      compiler and into tools. I'm inspired by tools like CacheIR analyzer,','line_number':38,'multiline':False]
['text':'      IR Hydra, and the upcoming tracelogger integration into','line_number':39,'multiline':False]
['text':'      profiler.firefox.com.','line_number':40,'multiline':False]
['text':'','line_number':41,'multiline':False]
['text':' The spewer has four main control knobs, all currently set as','line_number':42,'multiline':False]
['text':' environment variables. All but the first are optional. When the spewer is','line_number':43,'multiline':False]
['text':' activated through the browser, it is synchronized with the gecko profiler','line_number':44,'multiline':False]
['text':' start and stop routines. Setting SPEW=AtStartup activates the spewer at','line_number':45,'multiline':False]
['text':' startup instead of profiler start, but profiler stop will still deactivate','line_number':46,'multiline':False]
['text':' the spewer.','line_number':47,'multiline':False]
['text':'','line_number':48,'multiline':False]
['text':'   SPEW: Activates the spewer. The value provided is interpreted as a comma','line_number':49,'multiline':False]
['text':'         separated list that selects channels by name. Currently there's no','line_number':50,'multiline':False]
['text':'         mapping between internal and external names, so the channel names','line_number':51,'multiline':False]
['text':'         are exactly those described in STRUCTURED_CHANNEL_LIST below.','line_number':52,'multiline':False]
['text':'','line_number':53,'multiline':False]
['text':'   SPEW_FILE: Selects the file to write to. An absolute path.','line_number':54,'multiline':False]
['text':'','line_number':55,'multiline':False]
['text':'   SPEW_FILTER: A string which is matched against 'signature' constructed or a','line_number':56,'multiline':False]
['text':'        JSScript, currently connsisting of filename:line:col.','line_number':57,'multiline':False]
['text':'','line_number':58,'multiline':False]
['text':'        Matching in this version is merely finding the string in','line_number':59,'multiline':False]
['text':'        in question in the 'signature'','line_number':60,'multiline':False]
['text':'','line_number':61,'multiline':False]
['text':'   SPEW_UPLOAD: If this variable is set as well as MOZ_UPLOAD_DIR, output goes','line_number':62,'multiline':False]
['text':'        to $MOZ_UPLOAD_DIR/spew_output* to ease usage with Treeherder.','line_number':63,'multiline':False]
['text':'','line_number':64,'multiline':False]
['text':' Other notes:','line_number':65,'multiline':False]
['text':' - Thread safety is provided by opening a new spewer file for every thread.','line_number':66,'multiline':False]
['text':' - Each file is prefixed with the PID to handle multiple processes.','line_number':67,'multiline':False]
['text':' - Files are opened lazily, just before the first write to them.','line_number':68,'multiline':False]
['text':' Structured spew channels','line_number':79,'multiline':False]
['text':' A filter is used to select what channel is enabled','line_number':88,'multiline':False]
['text':'','line_number':89,'multiline':False]
['text':' To save memory, JSScripts do not have their own filters, but instead have','line_number':90,'multiline':False]
['text':' a single bit which tracks if that script has opted into spewing.','line_number':91,'multiline':False]
['text':' Indicates what spew channel is enabled.','line_number':93,'multiline':False]
['text':' Return true iff any channel is enabled.','line_number':97,'multiline':False]
['text':' Return true iff spew is enabled for this channel for','line_number':102,'multiline':False]
['text':' the script this was created for.','line_number':103,'multiline':False]
['text':' Returns true if we have enabled a new channel, false otherwise.','line_number':106,'multiline':False]
['text':' Assert that we are not going to set the channel to','line_number':108,'multiline':False]
['text':' SpewChannel::Disabled.','line_number':109,'multiline':False]
['text':' Check if the spewer is enabled for a particular script, used to power','line_number':150,'multiline':False]
['text':' script level filtering.','line_number':151,'multiline':False]
['text':' A generic printf like spewer that logs the formatted string.','line_number':154,'multiline':False]
['text':' Returns true iff the channel is enabled for the given script.','line_number':158,'multiline':False]
['text':' In order to support lazy initialization, and simultaneously support a','line_number':163,'multiline':False]
['text':' failure to open a log file being non-fatal (as lazily reporting failure','line_number':164,'multiline':False]
['text':' would be hard, we have an akward set of states to represent.','line_number':165,'multiline':False]
['text':'','line_number':166,'multiline':False]
['text':' We need to handle:','line_number':167,'multiline':False]
['text':' - Output file not initialized, and not yet attempted','line_number':168,'multiline':False]
['text':' - Output file not intialized, attempted, and failed.','line_number':169,'multiline':False]
['text':' - Output file initialized, JSON writer ready for input.','line_number':170,'multiline':False]
['text':'','line_number':171,'multiline':False]
['text':' Because Fprinter doesn't record whether or not its initialization was','line_number':172,'multiline':False]
['text':' attempted, we keep track of that here.','line_number':173,'multiline':False]
['text':'','line_number':174,'multiline':False]
['text':' The contract we require is that ensureInitializationAttempted() be called','line_number':175,'multiline':False]
['text':' just before any attempte to write. This will ensure the file open is','line_number':176,'multiline':False]
['text':' attemped in the right place.','line_number':177,'multiline':False]
['text':' Indicates the number of times spewing has been enabled. If','line_number':180,'multiline':False]
['text':' spewingEnabled_ is greater than zero, then spewing is enabled.','line_number':181,'multiline':False]
['text':' Globally selected channel.','line_number':187,'multiline':False]
['text':' Channel Names','line_number':192,'multiline':False]
['text':' Get channel name','line_number':195,'multiline':False]
['text':' Call just before writes to the output are expected.','line_number':198,'multiline':False]
['text':'','line_number':199,'multiline':False]
['text':' Avoids opening files that will remain empty','line_number':200,'multiline':False]
['text':'','line_number':201,'multiline':False]
['text':' Returns true iff we are able to write now.','line_number':202,'multiline':False]
['text':' Using flags, choose the enabled channels for this spewer.','line_number':207,'multiline':False]
['text':' Returns true iff the channels is enabled','line_number':210,'multiline':False]
['text':' Start a record','line_number':215,'multiline':False]
['text':' An RAII class for accessing the structured spewer.','line_number':222,'multiline':False]
['text':'','line_number':223,'multiline':False]
['text':' This class prefixes the spew with channel and location information.','line_number':224,'multiline':False]
['text':'','line_number':225,'multiline':False]
['text':' Before writing with this Spewer, it must be checked: ie.','line_number':226,'multiline':False]
['text':'','line_number':227,'multiline':False]
['text':'     {','line_number':228,'multiline':False]
['text':'       AutoSpew x(...);','line_number':229,'multiline':False]
['text':'       if (x) {','line_number':230,'multiline':False]
['text':'          x->property("lalala", y);','line_number':231,'multiline':False]
['text':'       }','line_number':232,'multiline':False]
['text':'     }','line_number':233,'multiline':False]
['text':'','line_number':234,'multiline':False]
['text':' As the selected channel may not be enabled.','line_number':235,'multiline':False]
['text':'','line_number':236,'multiline':False]
['text':' Note: If the lifespan of two AutoSpewers overlap, then the output','line_number':237,'multiline':False]
['text':'  may not be well defined JSON. These spewers should be given as','line_number':238,'multiline':False]
['text':'  short a lifespan as possible.','line_number':239,'multiline':False]
['text':'','line_number':240,'multiline':False]
['text':'  As well, this class cannot be copied or assigned to ensure the','line_number':241,'multiline':False]
['text':'  correct number of destructors fire.','line_number':242,'multiline':False]
['text':' An RAII class for setting a structured spewer's channel.','line_number':271,'multiline':False]
['text':'','line_number':272,'multiline':False]
['text':' This class is used to set a spewer's channel and then automatically','line_number':273,'multiline':False]
['text':' unset the channel when AutoSpewChannel goes out of scope.','line_number':274,'multiline':False]
['text':' namespace js','line_number':289,'multiline':False]
['text':' jit_StructuredSpewer_h ','line_number':292,'multiline':True]
