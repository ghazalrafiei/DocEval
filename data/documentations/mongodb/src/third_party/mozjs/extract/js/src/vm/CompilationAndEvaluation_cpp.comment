['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 * vim: set ts=8 sts=2 et sw=2 tw=80:
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':1,'multiline':True]
['text':' Same-thread compilation and evaluation APIs. ','line_number':7,'multiline':True]
['text':' mozilla::None, mozilla::Some','line_number':11,'multiline':False]
['text':' mozilla::IsAscii','line_number':12,'multiline':False]
['text':' mozilla::Utf8Unit','line_number':13,'multiline':False]
['text':' std::move','line_number':15,'multiline':False]
['text':' JS_PUBLIC_API','line_number':17,'multiline':False]
['text':' frontend::CompileGlobalScript','line_number':19,'multiline':False]
['text':' for frontened::{CompilationStencil, BorrowingCompilationStencil, CompilationGCOutput}','line_number':20,'multiline':False]
['text':' frontend::FullParseHandler','line_number':21,'multiline':False]
['text':' frontend::UsedNameTracker','line_number':22,'multiline':False]
['text':' frontend::Parser, frontend::ParseGoal','line_number':23,'multiline':False]
['text':' JS::UTF8Chars, JS::UTF8CharsToNewTwoByteCharsZ','line_number':24,'multiline':False]
['text':' js::GetErrorMessage, JSMSG_*','line_number':25,'multiline':False]
['text':' JS::Rooted','line_number':26,'multiline':False]
['text':' JS::SourceText','line_number':27,'multiline':False]
['text':' JS::HandleObject, JS::MutableHandleScript','line_number':28,'multiline':False]
['text':' js::MallocArena, JS::UniqueTwoByteChars','line_number':29,'multiline':False]
['text':' JS::Value','line_number':30,'multiline':False]
['text':' js::FileContents, js::ReadCompleteFile','line_number':31,'multiline':False]
['text':' js::StringBuffer','line_number':32,'multiline':False]
['text':' js::CreateNonSyntacticEnvironmentChain','line_number':33,'multiline':False]
['text':' js::FunctionFlags','line_number':34,'multiline':False]
['text':' js::Execute','line_number':35,'multiline':False]
['text':' JSContext','line_number':36,'multiline':False]
['text':' js::DebugAPI','line_number':38,'multiline':False]
['text':' JSContext::check','line_number':39,'multiline':False]
['text':' Return true on any out-of-memory error or non-EOF-related syntax error, so','line_number':187,'multiline':False]
['text':' our caller doesn't try to collect more buffered source.','line_number':188,'multiline':False]
['text':' foldConstants = ','line_number':210,'multiline':True]
['text':' syntaxParser = ','line_number':212,'multiline':True]
['text':' We ran into an error. If it was because we ran out of source, we','line_number':214,'multiline':False]
['text':' return false so our caller knows to try to collect more buffered','line_number':215,'multiline':False]
['text':' source.','line_number':216,'multiline':False]
['text':' If the name is an identifier, we can just add it to source text.','line_number':261,'multiline':False]
['text':' Otherwise we'll have to set it manually later.','line_number':262,'multiline':False]
['text':' Remember the position of ")".','line_number':287,'multiline':False]
['text':' A compiled function has a burned-in environment chain, so if no exotic','line_number':321,'multiline':False]
['text':' environment was requested, we can use the global lexical environment','line_number':322,'multiline':False]
['text':' directly and not need to worry about any potential non-syntactic scope.','line_number':323,'multiline':False]
['text':' Make sure the static scope chain matches up when we have a','line_number':335,'multiline':False]
['text':' non-syntactic scope.','line_number':336,'multiline':False]
['text':' When the function name isn't a valid identifier, the generated function','line_number':364,'multiline':False]
['text':' source in srcBuf won't include the name, so name the function manually.','line_number':365,'multiline':False]
['text':' There is no equivalent of cross-compartment wrappers for scripts. If the','line_number':436,'multiline':False]
['text':' introduction script and ScriptSourceObject are in different compartments,','line_number':437,'multiline':False]
['text':' we would be creating a cross-compartment script reference, which is','line_number':438,'multiline':False]
['text':' forbidden. We can still store a CCW to the script source object though.','line_number':439,'multiline':False]
['text':' Set the private value to that of the script or module that this source is','line_number':450,'multiline':False]
['text':' part of, if any.','line_number':451,'multiline':False]
