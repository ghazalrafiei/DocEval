['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 * vim: set ts=8 sts=2 et sw=2 tw=80:
 *
 * Copyright 2015 Mozilla Foundation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ','line_number':1,'multiline':True]
['text':' FuncCompileInput contains the input for compiling a single function.','line_number':37,'multiline':False]
['text':' CompiledCode contains the resulting code and metadata for a set of compiled','line_number':67,'multiline':False]
['text':' input functions or stubs.','line_number':68,'multiline':False]
['text':' The cranelift reusable data resets itself lazily.','line_number':100,'multiline':False]
['text':' The CompileTaskState of a ModuleGenerator contains the mutable state shared','line_number':118,'multiline':False]
['text':' between helper threads executing CompileTasks. Each CompileTask started on a','line_number':119,'multiline':False]
['text':' helper thread eventually either ends up in the 'finished' list or increments','line_number':120,'multiline':False]
['text':' 'numFailed'.','line_number':121,'multiline':False]
['text':' A CompileTask holds a batch of input functions that are to be compiled on a','line_number':141,'multiline':False]
['text':' helper thread as well as, eventually, the results of compilation.','line_number':142,'multiline':False]
['text':' A ModuleGenerator encapsulates the creation of a wasm module. During the','line_number':169,'multiline':False]
['text':' lifetime of a ModuleGenerator, a sequence of FunctionGenerators are created','line_number':170,'multiline':False]
['text':' and destroyed to compile the individual function bodies. After generating all','line_number':171,'multiline':False]
['text':' functions, ModuleGenerator::finish() must be called to complete the','line_number':172,'multiline':False]
['text':' compilation and extract the resulting wasm module.','line_number':173,'multiline':False]
['text':' Constant parameters','line_number':185,'multiline':False]
['text':' Data that is moved into the result of finish()','line_number':192,'multiline':False]
['text':' Data scoped to the ModuleGenerator's lifetime','line_number':197,'multiline':False]
['text':' Parallel compilation','line_number':211,'multiline':False]
['text':' Assertions','line_number':219,'multiline':False]
['text':' Before finishFuncDefs() is called, compileFuncDef() must be called once','line_number':251,'multiline':False]
['text':' for each funcIndex in the range [0, env->numFuncDefs()).','line_number':252,'multiline':False]
['text':' Must be called after the last compileFuncDef() and before finishModule()','line_number':258,'multiline':False]
['text':' or finishTier2().','line_number':259,'multiline':False]
['text':' If env->mode is Once or Tier1, finishModule() must be called to generate','line_number':263,'multiline':False]
['text':' a new Module. Otherwise, if env->mode is Tier2, finishTier2() must be','line_number':264,'multiline':False]
['text':' called to augment the given Module with tier 2 code.','line_number':265,'multiline':False]
['text':' namespace wasm','line_number':273,'multiline':False]
['text':' namespace js','line_number':274,'multiline':False]
['text':' wasm_generator_h','line_number':276,'multiline':False]
