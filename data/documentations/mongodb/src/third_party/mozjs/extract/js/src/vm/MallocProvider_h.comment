['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 * vim: set ts=8 sts=2 et sw=2 tw=80:
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':1,'multiline':True]
['text':'
 * Hierarchy of SpiderMonkey system memory allocators:
 *
 *   - System {m,c,re}alloc/new/free: Overridden by jemalloc in most
 *     environments. Do not use these functions directly.
 *
 *   - js_{m,c,re}alloc/new/free: Wraps the system allocators and adds a
 *     failure injection framework for use by the fuzzers as well as templated,
 *     typesafe variants. See js/public/Utility.h.
 *
 *   - AllocPolicy: An interface for the js allocators, for use with templates.
 *     These allocators are for system memory whose lifetime is not associated
 *     with a GC thing. See js/public/AllocPolicy.h.
 *
 *       - SystemAllocPolicy: No extra functionality over bare allocators.
 *
 *       - TempAllocPolicy: Adds automatic error reporting to the provided
 *         JSContext when allocations fail.
 *
 *       - ZoneAllocPolicy: Forwards to the Zone MallocProvider.
 *
 *   - MallocProvider. A mixin base class that handles automatically updating
 *     the GC's state in response to allocations that are tied to a GC lifetime
 *     or are for a particular GC purpose. These allocators must only be used
 *     for memory that will be freed when a GC thing is swept.
 *
 *       - gc::Zone:  Automatically triggers zone GC.
 *       - JSRuntime: Automatically triggers full GC.
 *       - JSContext: Dispatches directly to the runtime.
 ','line_number':7,'multiline':True]
['text':' MOZ_ALWAYS_INLINE','line_number':41,'multiline':False]
['text':' MOZ_LIKELY, MOZ_UNLIKELY','line_number':42,'multiline':False]
['text':' size_t','line_number':44,'multiline':False]
['text':' uint8_t','line_number':45,'multiline':False]
['text':' AllocFunction','line_number':47,'multiline':False]
['text':' UniquePtr','line_number':48,'multiline':False]
['text':' js_malloc, MallocArena, CalculateAllocSize, CalculateAllocSizeWithExtra, JS::FreePolicy','line_number':49,'multiline':False]
['text':' For compatibility we do not account for realloc that decreases','line_number':78,'multiline':False]
['text':' previously allocated memory.','line_number':79,'multiline':False]
['text':' The Default implementation is a no-op which can be overridden by the','line_number':248,'multiline':False]
['text':' client.','line_number':249,'multiline':False]
['text':' namespace js ','line_number':253,'multiline':True]
['text':' vm_MallocProvider_h ','line_number':255,'multiline':True]
