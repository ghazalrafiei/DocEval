['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 * vim: set ts=8 sts=2 et sw=2 tw=80:
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':1,'multiline':True]
['text':' This address is a magic number made to cause crashes while indicating that we','line_number':34,'multiline':False]
['text':' are making an attempt to mark the stack during a bailout.','line_number':35,'multiline':False]
['text':' We don't have an exit frame.','line_number':48,'multiline':False]
['text':'exceptionInfo=','line_number':72,'multiline':True]
['text':' popProfilerFrame = ','line_number':79,'multiline':True]
['text':' This condition was wrong when we entered this bailout function, but it','line_number':82,'multiline':False]
['text':' might be true now. A GC might have reclaimed all the Jit code and','line_number':83,'multiline':False]
['text':' invalidated all frames which are currently on the stack. As we are','line_number':84,'multiline':False]
['text':' already in a bailout, we could not switch to an invalidation','line_number':85,'multiline':False]
['text':' bailout. When the code of an IonScript which is on the stack is','line_number':86,'multiline':False]
['text':' invalidated (see InvalidateActivation), we remove references to it and','line_number':87,'multiline':False]
['text':' increment the reference counter for each activation that appear on the','line_number':88,'multiline':False]
['text':' stack. As the bailed frame is one of them, we have to decrement it now.','line_number':89,'multiline':False]
['text':' NB: Commentary on how |lastProfilingFrame| is set from bailouts.','line_number':95,'multiline':False]
['text':'','line_number':96,'multiline':False]
['text':' Once we return to jitcode, any following frames might get clobbered,','line_number':97,'multiline':False]
['text':' but the current frame will not (as it will be clobbered "in-place"','line_number':98,'multiline':False]
['text':' with a baseline frame that will share the same frame prefix).','line_number':99,'multiline':False]
['text':' However, there may be multiple baseline frames unpacked from this','line_number':100,'multiline':False]
['text':' single Ion frame, which means we will need to once again reset','line_number':101,'multiline':False]
['text':' |lastProfilingFrame| to point to the correct unpacked last frame','line_number':102,'multiline':False]
['text':' in |FinishBailoutToBaseline|.','line_number':103,'multiline':False]
['text':'','line_number':104,'multiline':False]
['text':' In the case of error, the jitcode will jump immediately to an','line_number':105,'multiline':False]
['text':' exception handler, which will unwind the frames and properly set','line_number':106,'multiline':False]
['text':' the |lastProfilingFrame| to point to the frame being resumed into','line_number':107,'multiline':False]
['text':' (see |AutoResetLastProfilerFrameOnReturnFromException|).','line_number':108,'multiline':False]
['text':'','line_number':109,'multiline':False]
['text':' In both cases, we want to temporarily set the |lastProfilingFrame|','line_number':110,'multiline':False]
['text':' to the current frame being bailed out, and then fix it up later.','line_number':111,'multiline':False]
['text':' We don't have an exit frame.','line_number':127,'multiline':False]
['text':' Note: the frame size must be computed before we return from this function.','line_number':141,'multiline':False]
['text':'exceptionInfo=','line_number':148,'multiline':True]
['text':' Update the bailout kind.','line_number':152,'multiline':False]
['text':' If the bailout failed, then bailout trampoline will pop the','line_number':158,'multiline':False]
['text':' current frame and jump straight to exception handling code when','line_number':159,'multiline':False]
['text':' this function returns.  Any Gecko Profiler entry pushed for this','line_number':160,'multiline':False]
['text':' frame will be silently forgotten.','line_number':161,'multiline':False]
['text':'','line_number':162,'multiline':False]
['text':' We call ExitScript here to ensure that if the ionScript had Gecko','line_number':163,'multiline':False]
['text':' Profiler instrumentation, then the entry for it is popped.','line_number':164,'multiline':False]
['text':'','line_number':165,'multiline':False]
['text':' However, if the bailout was during argument check, then a','line_number':166,'multiline':False]
['text':' pseudostack frame would not have been pushed in the first','line_number':167,'multiline':False]
['text':' place, so don't pop anything in that case.','line_number':168,'multiline':False]
['text':' popProfilerFrame = ','line_number':171,'multiline':True]
['text':' Make the frame being bailed out the top profiled frame.','line_number':186,'multiline':False]
['text':' We can be propagating debug mode exceptions without there being an','line_number':211,'multiline':False]
['text':' actual exception pending. For instance, when we return false from an','line_number':212,'multiline':False]
['text':' operation callback like a timeout handler.','line_number':213,'multiline':False]
['text':' Overwrite the kind so HandleException after the bailout returns','line_number':236,'multiline':False]
['text':' false, jumping directly to the exception tail.','line_number':237,'multiline':False]
['text':' Make the frame being bailed out the top profiled frame.','line_number':251,'multiline':False]
['text':' Initialize the decl env Object, call object, and any arguments obj of the','line_number':260,'multiline':False]
['text':' current frame.','line_number':261,'multiline':False]
['text':' Ion does not compile eval scripts.','line_number':263,'multiline':False]
['text':' Ion does not handle extra var environments due to parameter','line_number':267,'multiline':False]
['text':' expressions yet.','line_number':268,'multiline':False]
