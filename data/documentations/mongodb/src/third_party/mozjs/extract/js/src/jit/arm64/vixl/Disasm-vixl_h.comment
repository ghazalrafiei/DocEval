['text':' Copyright 2015, ARM Limited','line_number':1,'multiline':False]
['text':' All rights reserved.','line_number':2,'multiline':False]
['text':'','line_number':3,'multiline':False]
['text':' Redistribution and use in source and binary forms, with or without','line_number':4,'multiline':False]
['text':' modification, are permitted provided that the following conditions are met:','line_number':5,'multiline':False]
['text':'','line_number':6,'multiline':False]
['text':'   * Redistributions of source code must retain the above copyright notice,','line_number':7,'multiline':False]
['text':'     this list of conditions and the following disclaimer.','line_number':8,'multiline':False]
['text':'   * Redistributions in binary form must reproduce the above copyright notice,','line_number':9,'multiline':False]
['text':'     this list of conditions and the following disclaimer in the documentation','line_number':10,'multiline':False]
['text':'     and/or other materials provided with the distribution.','line_number':11,'multiline':False]
['text':'   * Neither the name of ARM Limited nor the names of its contributors may be','line_number':12,'multiline':False]
['text':'     used to endorse or promote products derived from this software without','line_number':13,'multiline':False]
['text':'     specific prior written permission.','line_number':14,'multiline':False]
['text':'','line_number':15,'multiline':False]
['text':' THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS CONTRIBUTORS "AS IS" AND','line_number':16,'multiline':False]
['text':' ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED','line_number':17,'multiline':False]
['text':' WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE','line_number':18,'multiline':False]
['text':' DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE','line_number':19,'multiline':False]
['text':' FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL','line_number':20,'multiline':False]
['text':' DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR','line_number':21,'multiline':False]
['text':' SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER','line_number':22,'multiline':False]
['text':' CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,','line_number':23,'multiline':False]
['text':' OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE','line_number':24,'multiline':False]
['text':' OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.','line_number':25,'multiline':False]
['text':' Declare all Visitor functions.','line_number':45,'multiline':False]
['text':' Default output functions.  The functions below implement a default way of','line_number':53,'multiline':False]
['text':' printing elements in the disassembly. A sub-class can override these to','line_number':54,'multiline':False]
['text':' customize the disassembly output.','line_number':55,'multiline':False]
['text':' Prints the name of a register.','line_number':57,'multiline':False]
['text':' TODO: This currently doesn't allow renaming of V registers.','line_number':58,'multiline':False]
['text':' Prints a PC-relative offset. This is used for example when disassembling','line_number':62,'multiline':False]
['text':' branches to immediate offsets.','line_number':63,'multiline':False]
['text':' Prints an address, in the general case. It can be code or data. This is','line_number':67,'multiline':False]
['text':' used for example to print the target address of an ADR instruction.','line_number':68,'multiline':False]
['text':' Prints the address of some code.','line_number':72,'multiline':False]
['text':' This is used for example to print the target address of a branch to an','line_number':73,'multiline':False]
['text':' immediate offset.','line_number':74,'multiline':False]
['text':' A sub-class can for example override this method to lookup the address and','line_number':75,'multiline':False]
['text':' print an appropriate name.','line_number':76,'multiline':False]
['text':' Prints the address of some data.','line_number':80,'multiline':False]
['text':' This is used for example to print the source address of a load literal','line_number':81,'multiline':False]
['text':' instruction.','line_number':82,'multiline':False]
['text':' Same as the above, but for addresses that are not relative to the code','line_number':86,'multiline':False]
['text':' buffer. They are currently not used by VIXL.','line_number':87,'multiline':False]
['text':' Get/Set the offset that should be added to code addresses when printing','line_number':96,'multiline':False]
['text':' code-relative addresses in the AppendCodeRelative<Type>AddressToOutput()','line_number':97,'multiline':False]
['text':' helpers.','line_number':98,'multiline':False]
['text':' Below is an example of how a branch immediate instruction in memory at','line_number':99,'multiline':False]
['text':' address 0xb010200 would disassemble with different offsets.','line_number':100,'multiline':False]
['text':' Base address | Disassembly','line_number':101,'multiline':False]
['text':'          0x0 | 0xb010200:  b #+0xcc  (addr 0xb0102cc)','line_number':102,'multiline':False]
['text':'      0x10000 | 0xb000200:  b #+0xcc  (addr 0xb0002cc)','line_number':103,'multiline':False]
['text':'    0xb010200 |       0x0:  b #+0xcc  (addr 0xcc)','line_number':104,'multiline':False]
['text':' namespace vixl','line_number':179,'multiline':False]
['text':' VIXL_A64_DISASM_A64_H','line_number':181,'multiline':False]
