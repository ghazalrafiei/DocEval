['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 * vim: set ts=8 sts=2 et sw=2 tw=80:
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':1,'multiline':True]
['text':' namespace frontend','line_number':33,'multiline':False]
['text':' Don't let buggy code read past our buffer','line_number':123,'multiline':False]
['text':' Don't let buggy code read past our buffer','line_number':140,'multiline':False]
['text':' Don't let buggy code read past our buffer','line_number':152,'multiline':False]
['text':' Record logical failures of XDR.','line_number':189,'multiline':False]
['text':'
 * XDR serialization state.  All data is encoded in native endian, except
 * bytecode.
 ','line_number':199,'multiline':True]
['text':' No default copy constructor or copying assignment, because |buf|','line_number':217,'multiline':False]
['text':' is an internal pointer.','line_number':218,'multiline':False]
['text':' Peek the `sizeof(T)` bytes and return the pointer to `*pptr`.','line_number':267,'multiline':False]
['text':' The caller is responsible for aligning the buffer by calling `align32`.','line_number':268,'multiline':False]
['text':' Peek uint32_t data.','line_number':281,'multiline':False]
['text':'
   * Use SFINAE to refuse any specialization which is not an enum.  Uses of
   * this function do not have to specialize the type of the enumerated field
   * as C++ will extract the parameterized from the argument list.
   ','line_number':335,'multiline':True]
['text':' Mix the enumeration value with a random magic number, such that a','line_number':342,'multiline':False]
['text':' corruption with a low-ranged value (like 0) is less likely to cause a','line_number':343,'multiline':False]
['text':' miss-interpretation of the XDR content and instead cause a failure.','line_number':344,'multiline':False]
['text':' Fail in debug, but only soft-fail in release','line_number':376,'multiline':False]
['text':' While encoding, code the given data to the buffer.','line_number':403,'multiline':False]
['text':' While decoding, borrow the buffer and return it to `*data`.','line_number':404,'multiline':False]
['text':'','line_number':405,'multiline':False]
['text':' The data can have extra bytes after `sizeof(T)`, and the caller should','line_number':406,'multiline':False]
['text':' provide the entire data length as `length`.','line_number':407,'multiline':False]
['text':'','line_number':408,'multiline':False]
['text':' The caller is responsible for aligning the buffer by calling `align32`.','line_number':409,'multiline':False]
['text':' Prefer using a variant below that is encoding aware.','line_number':425,'multiline':False]
['text':' Transcode null-terminated strings. When decoding, a new buffer is','line_number':432,'multiline':False]
['text':' allocated and ownership is returned to caller.','line_number':433,'multiline':False]
['text':'','line_number':434,'multiline':False]
['text':' NOTE: Throws if string longer than JSString::MAX_LENGTH.','line_number':435,'multiline':False]
['text':' Note, when providing an JSContext, where isJSContext is false,','line_number':478,'multiline':False]
['text':' then the initialization of the ScriptSourceObject would remain','line_number':479,'multiline':False]
['text':' incomplete. Thus, the sourceObjectOut must be used to finish the','line_number':480,'multiline':False]
['text':' initialization with ScriptSourceObject::initFromOptions after the','line_number':481,'multiline':False]
['text':' decoding.','line_number':482,'multiline':False]
['text':'','line_number':483,'multiline':False]
['text':' When providing a sourceObjectOut pointer, you have to ensure that it is','line_number':484,'multiline':False]
['text':' marked by the GC to avoid dangling pointers.','line_number':485,'multiline':False]
['text':'
 * The structure of the Stencil XDR buffer is:
 *
 * 1. Header
 *   a. Version
 *   b. ScriptSource
 *   d. Alignment padding
 * 2. Stencil
 *   a. CompilationStencil
 ','line_number':504,'multiline':True]
['text':'
 * The stencil decoder accepts `range` as input.
 *
 * The decoded stencils are outputted to the default-initialized
 * `stencil` parameter of `codeStencil` method.
 *
 * The decoded stencils borrow the input `buffer`/`range`, and the consumer
 * has to keep the buffer alive while the decoded stencils are alive.
 ','line_number':515,'multiline':True]
['text':' NOTE: If buffer is empty, buffer.begin() doesn't point valid buffer.','line_number':554,'multiline':False]
['text':' namespace js ','line_number':597,'multiline':True]
['text':' vm_Xdr_h ','line_number':599,'multiline':True]
