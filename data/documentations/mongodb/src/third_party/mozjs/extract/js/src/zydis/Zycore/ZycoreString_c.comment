['text':'**************************************************************************************************

  Zyan Core Library (Zycore-C)

  Original Author : Florian Bernd

 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.

**************************************************************************************************','line_number':1,'multiline':True]
['text':' ============================================================================================== ','line_number':30,'multiline':True]
['text':' Internal macros                                                                                ','line_number':31,'multiline':True]
['text':' ============================================================================================== ','line_number':32,'multiline':True]
['text':'*
 * @brief   Writes a terminating '\0' character at the end of the string data.
 ','line_number':34,'multiline':True]
['text':'*
 * @brief   Checks for a terminating '\0' character at the end of the string data.
 ','line_number':40,'multiline':True]
['text':' ============================================================================================== ','line_number':46,'multiline':True]
['text':' Exported functions                                                                             ','line_number':47,'multiline':True]
['text':' ============================================================================================== ','line_number':48,'multiline':True]
['text':' ---------------------------------------------------------------------------------------------- ','line_number':50,'multiline':True]
['text':' Constructor and destructor                                                                     ','line_number':51,'multiline':True]
['text':' ---------------------------------------------------------------------------------------------- ','line_number':52,'multiline':True]
['text':' ZYAN_NO_LIBC','line_number':62,'multiline':False]
['text':' Some of the string code relies on `sizeof(char) == 1`','line_number':77,'multiline':False]
['text':' Some of the string code relies on `sizeof(char) == 1`','line_number':97,'multiline':False]
['text':' ---------------------------------------------------------------------------------------------- ','line_number':120,'multiline':True]
['text':' Duplication                                                                                    ','line_number':121,'multiline':True]
['text':' ---------------------------------------------------------------------------------------------- ','line_number':122,'multiline':True]
['text':' ZYAN_NO_LIBC','line_number':133,'multiline':False]
['text':' ---------------------------------------------------------------------------------------------- ','line_number':181,'multiline':True]
['text':' Concatenation                                                                                  ','line_number':182,'multiline':True]
['text':' ---------------------------------------------------------------------------------------------- ','line_number':183,'multiline':True]
['text':' ZYAN_NO_LIBC','line_number':194,'multiline':False]
['text':' ---------------------------------------------------------------------------------------------- ','line_number':245,'multiline':True]
['text':' Views                                                                                          ','line_number':246,'multiline':True]
['text':' ---------------------------------------------------------------------------------------------- ','line_number':247,'multiline':True]
['text':' ---------------------------------------------------------------------------------------------- ','line_number':332,'multiline':True]
['text':' Character access                                                                               ','line_number':333,'multiline':True]
['text':' ---------------------------------------------------------------------------------------------- ','line_number':334,'multiline':True]
['text':' Don't allow direct access to the terminating '\0' character','line_number':343,'multiline':False]
['text':' Don't allow direct access to the terminating '\0' character','line_number':363,'multiline':False]
['text':' Don't allow direct access to the terminating '\0' character','line_number':379,'multiline':False]
['text':' ---------------------------------------------------------------------------------------------- ','line_number':388,'multiline':True]
['text':' Insertion                                                                                      ','line_number':389,'multiline':True]
['text':' ---------------------------------------------------------------------------------------------- ','line_number':390,'multiline':True]
['text':' Don't allow insertion after the terminating '\0' character','line_number':404,'multiline':False]
['text':' Don't allow insertion after the terminating '\0' character','line_number':430,'multiline':False]
['text':' Don't allow access to the terminating '\0' character','line_number':436,'multiline':False]
['text':' ---------------------------------------------------------------------------------------------- ','line_number':449,'multiline':True]
['text':' Appending                                                                                      ','line_number':450,'multiline':True]
['text':' ---------------------------------------------------------------------------------------------- ','line_number':451,'multiline':True]
['text':' Don't allow access to the terminating '\0' character','line_number':477,'multiline':False]
['text':' ---------------------------------------------------------------------------------------------- ','line_number':492,'multiline':True]
['text':' Deletion                                                                                       ','line_number':493,'multiline':True]
['text':' ---------------------------------------------------------------------------------------------- ','line_number':494,'multiline':True]
['text':' Don't allow removal of the terminating '\0' character','line_number':503,'multiline':False]
['text':' Don't allow removal of the terminating '\0' character','line_number':522,'multiline':False]
['text':' `ZyanVector` guarantees a minimum capacity of 1 element/character','line_number':542,'multiline':False]
['text':' ---------------------------------------------------------------------------------------------- ','line_number':551,'multiline':True]
['text':' Searching                                                                                      ','line_number':552,'multiline':True]
['text':' ---------------------------------------------------------------------------------------------- ','line_number':553,'multiline':True]
['text':' Don't allow access to the terminating '\0' character','line_number':574,'multiline':False]
['text':' This solution assumes that characters are represented using ASCII representation, i.e.,','line_number':634,'multiline':False]
['text':' codes for 'a', 'b', 'c', .. 'z' are 97, 98, 99, .. 122 respectively. And codes for 'A',','line_number':635,'multiline':False]
['text':' 'B', 'C', .. 'Z' are 65, 66, .. 95 respectively.','line_number':636,'multiline':False]
['text':' Don't allow access to the terminating '\0' character','line_number':643,'multiline':False]
['text':' Don't allow access to the terminating '\0' character','line_number':711,'multiline':False]
['text':' This solution assumes that characters are represented using ASCII representation, i.e.,','line_number':773,'multiline':False]
['text':' codes for 'a', 'b', 'c', .. 'z' are 97, 98, 99, .. 122 respectively. And codes for 'A',','line_number':774,'multiline':False]
['text':' 'B', 'C', .. 'Z' are 65, 66, .. 95 respectively.','line_number':775,'multiline':False]
['text':' Don't allow access to the terminating '\0' character','line_number':782,'multiline':False]
['text':' ---------------------------------------------------------------------------------------------- ','line_number':831,'multiline':True]
['text':' Comparing                                                                                      ','line_number':832,'multiline':True]
['text':' ---------------------------------------------------------------------------------------------- ','line_number':833,'multiline':True]
['text':' This solution assumes that characters are represented using ASCII representation, i.e.,','line_number':883,'multiline':False]
['text':' codes for 'a', 'b', 'c', .. 'z' are 97, 98, 99, .. 122 respectively. And codes for 'A',','line_number':884,'multiline':False]
['text':' 'B', 'C', .. 'Z' are 65, 66, .. 95 respectively.','line_number':885,'multiline':False]
['text':' ---------------------------------------------------------------------------------------------- ','line_number':931,'multiline':True]
['text':' Case conversion                                                                                ','line_number':932,'multiline':True]
['text':' ---------------------------------------------------------------------------------------------- ','line_number':933,'multiline':True]
['text':' This solution assumes that characters are represented using ASCII representation, i.e.,','line_number':947,'multiline':False]
['text':' codes for 'a', 'b', 'c', .. 'z' are 97, 98, 99, .. 122 respectively. And codes for 'A',','line_number':948,'multiline':False]
['text':' 'B', 'C', .. 'Z' are 65, 66, .. 95 respectively.','line_number':949,'multiline':False]
['text':' Don't allow access to the terminating '\0' character','line_number':956,'multiline':False]
['text':' This solution assumes that characters are represented using ASCII representation, i.e.,','line_number':988,'multiline':False]
['text':' codes for 'a', 'b', 'c', .. 'z' are 97, 98, 99, .. 122 respectively. And codes for 'A',','line_number':989,'multiline':False]
['text':' 'B', 'C', .. 'Z' are 65, 66, .. 95 respectively.','line_number':990,'multiline':False]
['text':' Don't allow access to the terminating '\0' character','line_number':997,'multiline':False]
['text':' ---------------------------------------------------------------------------------------------- ','line_number':1017,'multiline':True]
['text':' Memory management                                                                              ','line_number':1018,'multiline':True]
['text':' ---------------------------------------------------------------------------------------------- ','line_number':1019,'multiline':True]
['text':' ---------------------------------------------------------------------------------------------- ','line_number':1054,'multiline':True]
['text':' Information                                                                                    ','line_number':1055,'multiline':True]
['text':' ---------------------------------------------------------------------------------------------- ','line_number':1056,'multiline':True]
['text':' ---------------------------------------------------------------------------------------------- ','line_number':1096,'multiline':True]
['text':' ============================================================================================== ','line_number':1098,'multiline':True]
