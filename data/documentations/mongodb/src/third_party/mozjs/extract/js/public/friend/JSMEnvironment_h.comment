['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 * vim: set ts=8 sts=2 et sw=2 tw=80:
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':1,'multiline':True]
['text':'
 * Functionality provided for the JSM component loader in Gecko, that requires
 * its own unique manner of global environment and currently requires assistance
 * from SpiderMonkey to do so.
 *
 * Embedders who aren't Gecko can ignore this header.
 ','line_number':7,'multiline':True]
['text':' JS_PUBLIC_API','line_number':18,'multiline':False]
['text':' JS::StackGCVector','line_number':20,'multiline':False]
['text':' A 'JSMEnvironment' refers to an environment chain constructed for JSM loading','line_number':23,'multiline':False]
['text':' in a shared global. Internally it is a NonSyntacticVariablesObject with a','line_number':24,'multiline':False]
['text':' corresponding extensible LexicalEnvironmentObject that is accessible by','line_number':25,'multiline':False]
['text':' JS_ExtensibleLexicalEnvironment. The |this| value of that lexical environment','line_number':26,'multiline':False]
['text':' is the NSVO itself.','line_number':27,'multiline':False]
['text':'','line_number':28,'multiline':False]
['text':' Normal global environment (ES6):     JSM "global" environment:','line_number':29,'multiline':False]
['text':'','line_number':30,'multiline':False]
['text':'                                      * - extensible lexical environment','line_number':31,'multiline':False]
['text':'                                      |   (code runs in this environment;','line_number':32,'multiline':False]
['text':'                                      |    `let/const` bindings go here)','line_number':33,'multiline':False]
['text':'                                      |','line_number':34,'multiline':False]
['text':'                                      * - JSMEnvironment (=== `this`)','line_number':35,'multiline':False]
['text':'                                      |   (`var` bindings go here)','line_number':36,'multiline':False]
['text':'                                      |','line_number':37,'multiline':False]
['text':' * - extensible lexical environment   * - extensible lexical environment','line_number':38,'multiline':False]
['text':' |   (code runs in this environment;  |   (empty)','line_number':39,'multiline':False]
['text':' |    `let/const` bindings go here)   |','line_number':40,'multiline':False]
['text':' |                                    |','line_number':41,'multiline':False]
['text':' * - actual global (=== `this`)       * - shared JSM global','line_number':42,'multiline':False]
['text':'     (var bindings go here; and           (Object, Math, etc. live here)','line_number':43,'multiline':False]
['text':'      Object, Math, etc. live here)','line_number':44,'multiline':False]
['text':'*
 * Allocate a new environment in the current compartment that is compatible with
 * JSM shared loading.
 ','line_number':48,'multiline':True]
['text':'*
 * Execute the given script (copied into the current compartment if necessary)
 * in the given JSMEnvironment.  The script must have been compiled for
 * hasNonSyntacticScope.  The |jsmEnv| must have been previously allocated by
 * |NewJSMEnvironment|.
 *
 * NOTE: The associated extensible lexical environment is reused.
 ','line_number':54,'multiline':True]
['text':' Additionally, target objects may be specified as required by the Gecko','line_number':66,'multiline':False]
['text':' subscript loader. These are wrapped in non-syntactic WithEnvironments and','line_number':67,'multiline':False]
['text':' temporarily placed on the environment chain.','line_number':68,'multiline':False]
['text':'','line_number':69,'multiline':False]
['text':' See also: JS::CloneAndExecuteScript(...)','line_number':70,'multiline':False]
['text':' Used by native methods to determine the JSMEnvironment of caller if possible','line_number':75,'multiline':False]
['text':' by looking at stack frames. Returns nullptr if top frame isn't a scripted','line_number':76,'multiline':False]
['text':' caller in a JSM.','line_number':77,'multiline':False]
['text':'','line_number':78,'multiline':False]
['text':' NOTE: This may find NonSyntacticVariablesObject generated by other embedding','line_number':79,'multiline':False]
['text':' such as a Gecko FrameScript. Caller can check the compartment if needed.','line_number':80,'multiline':False]
['text':'*
 * Determine if obj is a JSMEnvironment
 *
 * NOTE: This may return true for an NonSyntacticVariablesObject generated by
 * other embedding such as a Gecko FrameScript. Caller can check compartment.
 ','line_number':83,'multiline':True]
['text':' namespace JS','line_number':91,'multiline':False]
['text':' js_friend_JSMEnvironment_h','line_number':93,'multiline':False]
