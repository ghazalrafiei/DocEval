['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*- ','line_number':1,'multiline':True]
['text':' vim: set ts=8 sts=2 et sw=2 tw=80: ','line_number':2,'multiline':True]
['text':' This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':3,'multiline':True]
['text':' Iterator over ranges of integers ','line_number':7,'multiline':True]
['text':' It is disputable whether these type definitions are correct, since','line_number':25,'multiline':False]
['text':' operator* doesn't return a reference at all. Also, the iterator_category','line_number':26,'multiline':False]
['text':' can be at most std::input_iterator_tag (rather than','line_number':27,'multiline':False]
['text':' std::bidrectional_iterator_tag, as it might seem), because it is a stashing','line_number':28,'multiline':False]
['text':' iterator. See also, e.g.,','line_number':29,'multiline':False]
['text':' https://stackoverflow.com/questions/50909701/what-should-be-iterator-category-for-a-stashing-iterator','line_number':30,'multiline':False]
['text':' This intentionally returns a value rather than a reference, to make','line_number':44,'multiline':False]
['text':' mozilla::ReverseIterator work with it. Still, std::reverse_iterator cannot','line_number':45,'multiline':False]
['text':' be used with IntegerIterator because it still is a "stashing iterator". See','line_number':46,'multiline':False]
['text':' Bug 1175485.','line_number':47,'multiline':False]
['text':' Increment and decrement operators ','line_number':50,'multiline':True]
['text':' Comparison operators ','line_number':71,'multiline':True]
['text':' namespace detail','line_number':170,'multiline':False]
['text':' namespace mozilla','line_number':190,'multiline':False]
['text':' mozilla_IntegerRange_h','line_number':192,'multiline':False]
