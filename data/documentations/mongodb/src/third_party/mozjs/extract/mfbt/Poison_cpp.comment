['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*- ','line_number':1,'multiline':True]
['text':' vim: set ts=8 sts=2 et sw=2 tw=80: ','line_number':2,'multiline':True]
['text':' This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':3,'multiline':True]
['text':'
 * A poison value that can be used to fill a memory space with
 * an address that leads to a safe crash when dereferenced.
 ','line_number':7,'multiline':True]
['text':' Freed memory is filled with a poison value, which we arrange to','line_number':31,'multiline':False]
['text':' form a pointer either to an always-unmapped region of the address','line_number':32,'multiline':False]
['text':' space, or to a page that has been reserved and rendered','line_number':33,'multiline':False]
['text':' inaccessible via OS primitives.  See tests/TestPoisonArea.cpp for','line_number':34,'multiline':False]
['text':' extensive discussion of the requirements for this page.  The code','line_number':35,'multiline':False]
['text':' from here to 'class FreeList' needs to be kept in sync with that','line_number':36,'multiline':False]
['text':' file.','line_number':37,'multiline':False]
['text':' OS/2 doesn't support allocation at an arbitrary address,','line_number':69,'multiline':False]
['text':' so return an address that is known to be invalid.','line_number':70,'multiline':False]
['text':' There's no reliable way to probe an address in the system','line_number':77,'multiline':False]
['text':' arena other than by touching it and seeing if a trap occurs.','line_number':78,'multiline':False]
['text':' Page size is fixed at 4k.','line_number':83,'multiline':False]
['text':' __wasi__','line_number':108,'multiline':False]
['text':' system dependencies','line_number':139,'multiline':False]
['text':' Use the hardware-inaccessible region.','line_number':146,'multiline':False]
['text':' We have to avoid 64-bit constants and shifts by 32 bits, since this','line_number':147,'multiline':False]
['text':' code is compiled in 32-bit mode, although it is never executed there.','line_number':148,'multiline':False]
['text':' First see if we can allocate the preferred poison address from the OS.','line_number':153,'multiline':False]
['text':' success - inaccessible page allocated','line_number':157,'multiline':False]
['text':' That didn't work, so see if the preferred address is within a range','line_number':161,'multiline':False]
['text':' of permanently inacessible memory.','line_number':162,'multiline':False]
['text':' success - selected page cannot be usable memory','line_number':164,'multiline':False]
['text':' The preferred address is already in use.  Did the OS give us a','line_number':171,'multiline':False]
['text':' consolation prize?','line_number':172,'multiline':False]
['text':' It didn't, so try to allocate again, without any constraint on','line_number':177,'multiline':False]
['text':' the address.','line_number':178,'multiline':False]
['text':' can't happen','line_number':188,'multiline':False]
['text':' Poison is used so pervasively throughout the codebase that we decided it was','line_number':194,'multiline':False]
['text':' best to actually use ordered dynamic initialization of globals (AKA static','line_number':195,'multiline':False]
['text':' constructors) for this. This way everything will have properly initialized','line_number':196,'multiline':False]
['text':' poison -- except other dynamic initialization code in libmozglue, which there','line_number':197,'multiline':False]
['text':' shouldn't be much of. (libmozglue is one of the first things loaded, and','line_number':198,'multiline':False]
['text':' specifically comes before libxul, so nearly all gecko code runs strictly','line_number':199,'multiline':False]
['text':' after this.)','line_number':200,'multiline':False]
