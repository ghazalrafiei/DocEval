['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*- ','line_number':1,'multiline':True]
['text':' vim: set ts=8 sts=2 et sw=2 tw=80: ','line_number':2,'multiline':True]
['text':' This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':3,'multiline':True]
['text':' Iterator over contiguous enum values ','line_number':7,'multiline':True]
['text':'
 * Implements generator functions that create a range to iterate over the values
 * of a scoped or unscoped enum. Unlike IntegerRange, which can only function on
 * the underlying integral type, the elements of the generated sequence will
 * have the type of the enum in question.
 *
 * Note that the enum values should be contiguous in the iterated range;
 * unfortunately there exists no way for EnumeratedRange to enforce this
 * either dynamically or at compile time.
 ','line_number':9,'multiline':True]
['text':' Increment and decrement operators ','line_number':47,'multiline':True]
['text':' Comparison operators ','line_number':68,'multiline':True]
['text':' namespace detail','line_number':155,'multiline':False]
['text':' Enums can have an unsigned underlying type, which makes some of the','line_number':158,'multiline':False]
['text':' comparisons below always true or always false. Temporarily disable','line_number':159,'multiline':False]
['text':' -Wtype-limits to avoid breaking -Werror builds.','line_number':160,'multiline':False]
['text':' Create a range to iterate from aBegin to aEnd, exclusive.','line_number':165,'multiline':False]
['text':' Create a range to iterate from EnumType(0) to aEnd, exclusive. EnumType(0)','line_number':173,'multiline':False]
['text':' should exist, but note that there is no way for us to ensure that it does!','line_number':174,'multiline':False]
['text':' Create a range to iterate from aBegin to aEnd, inclusive.','line_number':180,'multiline':False]
['text':'','line_number':181,'multiline':False]
['text':' NOTE: This internally constructs a value that is one past `aEnd`, so the','line_number':182,'multiline':False]
['text':' enumeration needs to either have a fixed underlying type, or `aEnd + 1` must','line_number':183,'multiline':False]
['text':' be inside the range of the enumeration, in order to not be undefined','line_number':184,'multiline':False]
['text':' behavior.','line_number':185,'multiline':False]
['text':'','line_number':186,'multiline':False]
['text':' See bug 1614512.','line_number':187,'multiline':False]
['text':' namespace mozilla','line_number':203,'multiline':False]
['text':' mozilla_EnumeratedRange_h','line_number':205,'multiline':False]
