['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*- ','line_number':1,'multiline':True]
['text':' vim: set ts=8 sts=2 et sw=2 tw=80: ','line_number':2,'multiline':True]
['text':' This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':3,'multiline':True]
['text':' for std::function','line_number':13,'multiline':False]
['text':'//////////////////////////////////////////////////////////','line_number':17,'multiline':False]
['text':' Utf8.h','line_number':18,'multiline':False]
['text':'//////////////////////////////////////////////////////////','line_number':19,'multiline':False]
['text':' If the first byte is ASCII, it's the only one in the code point.  Have a','line_number':29,'multiline':False]
['text':' fast path that avoids all the rest of the work and looping in that case.','line_number':30,'multiline':False]
['text':' for std::shared_ptr','line_number':47,'multiline':False]
['text':' for UConverter','line_number':48,'multiline':False]
['text':' Thread-local instance of a UTF-8 converter','line_number':66,'multiline':False]
['text':' ucnv_fromUnicode is a stateful operation ','line_number':76,'multiline':True]
['text':' TRIPLE_BYTE_REPLACEMENT_CHAR','line_number':89,'multiline':False]
['text':' DOUBLE_BYTE_REPLACEMENT_CHAR','line_number':95,'multiline':False]
['text':' SINGLE_BYTE_REPLACEMENT_CHAR','line_number':100,'multiline':False]
['text':' REPLACEMENT CHAR','line_number':103,'multiline':False]
['text':' We do not need to handle it, as the problematic character will be','line_number':112,'multiline':False]
['text':' replaced with a REPLACEMENT CHARACTER.','line_number':113,'multiline':False]
['text':' REPLACEMENT CHAR','line_number':119,'multiline':False]
['text':' Thread-local instance of a UTF-8 converter','line_number':150,'multiline':False]
['text':' We do not need to handle it, as the problematic character will be','line_number':161,'multiline':False]
['text':' replaced with a REPLACEMENT CHARACTER.','line_number':162,'multiline':False]
['text':' REPLACEMENT CHAR','line_number':167,'multiline':False]
['text':' Thread-local instance of a UTF-8 converter','line_number':188,'multiline':False]
['text':'//////////////////////////////////////////////////////////','line_number':206,'multiline':False]
['text':' TextUtils.h','line_number':207,'multiline':False]
['text':'//////////////////////////////////////////////////////////','line_number':208,'multiline':False]
['text':' Not a surrogate','line_number':223,'multiline':False]
['text':' high surrogate','line_number':232,'multiline':False]
['text':' The next code unit is a low surrogate. Advance position.','line_number':237,'multiline':False]
['text':' The next code unit is not a low surrogate. Don't advance','line_number':244,'multiline':False]
['text':' position and treat the high surrogate as unpaired.','line_number':245,'multiline':False]
['text':' fall through','line_number':246,'multiline':False]
['text':' Unpaired, fall through','line_number':248,'multiline':False]
['text':' Unpaired surrogate','line_number':250,'multiline':False]
['text':'//////////////////////////////////////////////////////////','line_number':256,'multiline':False]
['text':' Latin1.h','line_number':257,'multiline':False]
['text':'//////////////////////////////////////////////////////////','line_number':258,'multiline':False]
['text':' ASCII','line_number':269,'multiline':False]
['text':' non-overlong 2-byte','line_number':275,'multiline':False]
['text':' excluding overlongs','line_number':283,'multiline':False]
['text':' straight 3-byte','line_number':286,'multiline':False]
['text':' excluding surrogates','line_number':291,'multiline':False]
['text':' planes 1-3','line_number':299,'multiline':False]
['text':' planes 4-15','line_number':303,'multiline':False]
['text':' plane 16','line_number':308,'multiline':False]
['text':' !MOZ_HAS_JSRUST()','line_number':322,'multiline':False]
