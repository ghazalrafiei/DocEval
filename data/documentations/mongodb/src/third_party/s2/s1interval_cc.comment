['text':' Copyright 2005 Google Inc. All Rights Reserved.','line_number':1,'multiline':False]
['text':' Return the center in the range (-Pi, Pi].','line_number':15,'multiline':False]
['text':' Empty intervals have a negative length.','line_number':23,'multiline':False]
['text':' Singleton.','line_number':28,'multiline':False]
['text':' Handles empty and full.','line_number':29,'multiline':False]
['text':' Singleton.','line_number':35,'multiline':False]
['text':' Works for empty, full, and singleton intervals.','line_number':49,'multiline':False]
['text':' Works for empty, full, and singleton intervals.','line_number':56,'multiline':False]
['text':' It might be helpful to compare the structure of these tests to','line_number':68,'multiline':False]
['text':' the simpler Contains(double) method above.','line_number':69,'multiline':False]
['text':' Every non-empty inverted interval contains Pi.','line_number':93,'multiline':False]
['text':' Compute the distance from "a" to "b" in the range [0, 2*Pi).','line_number':112,'multiline':False]
['text':' This is equivalent to (remainder(b - a - M_PI, 2 * M_PI) + M_PI),','line_number':113,'multiline':False]
['text':' except that it is more numerically stable (it does not lose','line_number':114,'multiline':False]
['text':' precision for very small positive distances).','line_number':115,'multiline':False]
['text':' We want to ensure that if b == Pi and a == (-Pi + eps),','line_number':118,'multiline':False]
['text':' the return result is approximately 2*Pi and not zero.','line_number':119,'multiline':False]
['text':' this includes the case *this is empty','line_number':124,'multiline':False]
['text':' maximum possible distance on S1','line_number':125,'multiline':False]
['text':' The Hausdorff distance is realized by either two hi() endpoints or two','line_number':131,'multiline':False]
['text':' lo() endpoints, whichever is farther apart.','line_number':132,'multiline':False]
['text':' Compute distance from p to each endpoint.','line_number':151,'multiline':False]
['text':' Adding a point can never turn a non-full interval into a full one.','line_number':159,'multiline':False]
['text':' Check whether this interval will be full after expansion, allowing','line_number':179,'multiline':False]
['text':' for a 1-bit rounding error when computing each endpoint.','line_number':180,'multiline':False]
['text':' The y.is_full() case is handled correctly in all cases by the code','line_number':189,'multiline':False]
['text':' below, but can follow three separate code paths depending on whether','line_number':190,'multiline':False]
['text':' this interval is inverted, is non-inverted but contains Pi, or neither.','line_number':191,'multiline':False]
['text':' Either this interval contains y, or the union of the two','line_number':196,'multiline':False]
['text':' intervals is the Full() interval.','line_number':197,'multiline':False]
['text':' is_full() code path','line_number':198,'multiline':False]
['text':' This interval contains neither endpoint of y.  This means that either y','line_number':205,'multiline':False]
['text':' contains all of this interval, or the two intervals are disjoint.','line_number':206,'multiline':False]
['text':' Check which pair of endpoints are closer together.','line_number':209,'multiline':False]
['text':' The y.is_full() case is handled correctly in all cases by the code','line_number':220,'multiline':False]
['text':' below, but can follow three separate code paths depending on whether','line_number':221,'multiline':False]
['text':' this interval is inverted, is non-inverted but contains Pi, or neither.','line_number':222,'multiline':False]
['text':' Either this interval contains y, or the region of intersection','line_number':227,'multiline':False]
['text':' consists of two disjoint subintervals.  In either case, we want','line_number':228,'multiline':False]
['text':' to return the shorter of the two original intervals.','line_number':229,'multiline':False]
['text':' is_full() code path','line_number':230,'multiline':False]
['text':' This interval contains neither endpoint of y.  This means that either y','line_number':237,'multiline':False]
['text':' contains all of this interval, or the two intervals are disjoint.','line_number':238,'multiline':False]
['text':' is_empty() okay here','line_number':240,'multiline':False]
