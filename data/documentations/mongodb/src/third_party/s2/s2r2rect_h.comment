['text':' Copyright 2005 Google Inc. All Rights Reserved.','line_number':1,'multiline':False]
['text':' TODO: Create an r2.h and move this definition into it.','line_number':15,'multiline':False]
['text':' This class is a stopgap measure that allows some of the S2 spherical','line_number':18,'multiline':False]
['text':' geometry machinery to be applied to planar geometry.  An S2R2Rect','line_number':19,'multiline':False]
['text':' represents a closed axis-aligned rectangle in the (x,y) plane, but it also','line_number':20,'multiline':False]
['text':' happens to be a subtype of S2Region, which means that you can use an','line_number':21,'multiline':False]
['text':' S2RegionCoverer to approximate it as a collection of S2CellIds.','line_number':22,'multiline':False]
['text':'','line_number':23,'multiline':False]
['text':' With respect to the S2Cell decomposition, an S2R2Rect is interpreted as a','line_number':24,'multiline':False]
['text':' region of (s,t)-space on face 0.  In particular, the rectangle [0,1]x[0,1]','line_number':25,'multiline':False]
['text':' corresponds to the S2CellId that covers all of face 0.  This means that','line_number':26,'multiline':False]
['text':' only rectangles that are subsets of [0,1]x[0,1] can be approximated using','line_number':27,'multiline':False]
['text':' the S2RegionCoverer interface.','line_number':28,'multiline':False]
['text':'','line_number':29,'multiline':False]
['text':' The S2R2Rect class is also a convenient way to find the (s,t)-region','line_number':30,'multiline':False]
['text':' covered by a given S2CellId (see the FromCell and FromCellId methods).','line_number':31,'multiline':False]
['text':'','line_number':32,'multiline':False]
['text':' TODO: If the geometry library is extended to have better support for planar','line_number':33,'multiline':False]
['text':' geometry, then this class should no longer be necessary.','line_number':34,'multiline':False]
['text':'','line_number':35,'multiline':False]
['text':' This class is intended to be copied by value as desired.  It uses','line_number':36,'multiline':False]
['text':' the default copy constructor and assignment operator, however it is','line_number':37,'multiline':False]
['text':' not a "plain old datatype" (POD) because it has virtual functions.','line_number':38,'multiline':False]
['text':' Construct a rectangle from the given lower-left and upper-right points.','line_number':41,'multiline':False]
['text':' Construct a rectangle from the given intervals in x and y.  The two','line_number':44,'multiline':False]
['text':' intervals must either be both empty or both non-empty.','line_number':45,'multiline':False]
['text':' Construct a rectangle that corresponds to the boundary of the given cell','line_number':48,'multiline':False]
['text':' is (s,t)-space.  Such rectangles are always a subset of [0,1]x[0,1].','line_number':49,'multiline':False]
['text':' Construct a rectangle from a center point and size in each dimension.','line_number':53,'multiline':False]
['text':' Both components of size should be non-negative, i.e. this method cannot','line_number':54,'multiline':False]
['text':' be used to create an empty rectangle.','line_number':55,'multiline':False]
['text':' Convenience method to construct a rectangle containing a single point.','line_number':59,'multiline':False]
['text':' Convenience method to construct the minimal bounding rectangle containing','line_number':62,'multiline':False]
['text':' the two given points.  This is equivalent to starting with an empty','line_number':63,'multiline':False]
['text':' rectangle and calling AddPoint() twice.  Note that it is different than','line_number':64,'multiline':False]
['text':' the S2R2Rect(lo, hi) constructor, where the first point is always','line_number':65,'multiline':False]
['text':' used as the lower-left corner of the resulting rectangle.','line_number':66,'multiline':False]
['text':' Accessor methods.','line_number':69,'multiline':False]
['text':' The canonical empty rectangle.  Use is_empty() to test for empty','line_number':77,'multiline':False]
['text':' rectangles, since they have more than one representation.','line_number':78,'multiline':False]
['text':' Return true if the rectangle is valid, which essentially just means','line_number':81,'multiline':False]
['text':' that if the bound for either axis is empty then both must be.','line_number':82,'multiline':False]
['text':' Return true if the rectangle is empty, i.e. it contains no points at all.','line_number':85,'multiline':False]
['text':' Return the k-th vertex of the rectangle (k = 0,1,2,3) in CCW order.','line_number':88,'multiline':False]
['text':' Vertex 0 is in the lower-left corner.','line_number':89,'multiline':False]
['text':' Return the center of the rectangle in (x,y)-space','line_number':92,'multiline':False]
['text':' (in general this is not the center of the region on the sphere).','line_number':93,'multiline':False]
['text':' Return the width and height of this rectangle in (x,y)-space.  Empty','line_number':96,'multiline':False]
['text':' rectangles have a negative width and height.','line_number':97,'multiline':False]
['text':' Return true if the rectangle contains the given point.  Note that','line_number':100,'multiline':False]
['text':' rectangles are closed regions, i.e. they contain their boundary.','line_number':101,'multiline':False]
['text':' Return true if and only if the given point is contained in the interior','line_number':104,'multiline':False]
['text':' of the region (i.e. the region excluding its boundary).','line_number':105,'multiline':False]
['text':' Return true if and only if the rectangle contains the given other','line_number':108,'multiline':False]
['text':' rectangle.','line_number':109,'multiline':False]
['text':' Return true if and only if the interior of this rectangle contains all','line_number':112,'multiline':False]
['text':' points of the given other rectangle (including its boundary).','line_number':113,'multiline':False]
['text':' Return true if this rectangle and the given other rectangle have any','line_number':116,'multiline':False]
['text':' points in common.','line_number':117,'multiline':False]
['text':' Return true if and only if the interior of this rectangle intersects','line_number':120,'multiline':False]
['text':' any point (including the boundary) of the given other rectangle.','line_number':121,'multiline':False]
['text':' Increase the size of the bounding rectangle to include the given point.','line_number':124,'multiline':False]
['text':' The rectangle is expanded by the minimum amount possible.','line_number':125,'multiline':False]
['text':' Return a rectangle that contains all points whose x-distance from this','line_number':128,'multiline':False]
['text':' rectangle is at most margin.x(), and whose y-distance from this rectangle','line_number':129,'multiline':False]
['text':' is at most margin.y().  Note that any expansion of an empty interval','line_number':130,'multiline':False]
['text':' remains empty, and both components of the given margin must be','line_number':131,'multiline':False]
['text':' non-negative.','line_number':132,'multiline':False]
['text':' Return the smallest rectangle containing the union of this rectangle and','line_number':135,'multiline':False]
['text':' the given rectangle.','line_number':136,'multiline':False]
['text':' Return the smallest rectangle containing the intersection of this','line_number':139,'multiline':False]
['text':' rectangle and the given rectangle.','line_number':140,'multiline':False]
['text':' Return true if two rectangles contains the same set of points.','line_number':143,'multiline':False]
['text':' Return true if the x- and y-intervals of the two rectangles are the same','line_number':146,'multiline':False]
['text':' up to the given tolerance (see r1interval.h for details).','line_number':147,'multiline':False]
['text':' Return the unit-length S2Point corresponding to the given point "p" in','line_number':150,'multiline':False]
['text':' the (s,t)-plane.  "p" need not be restricted to the range [0,1]x[0,1].','line_number':151,'multiline':False]
['text':'//////////////////////////////////////////////////////////////////////','line_number':154,'multiline':False]
['text':' S2Region interface (see s2region.h for details):','line_number':155,'multiline':False]
['text':' The same as Contains() below, just virtual.','line_number':161,'multiline':False]
['text':' The x/y ranges must either be both empty or both non-empty.','line_number':191,'multiline':False]
['text':' UTIL_GEOMETRY_S2R2RECT_H_','line_number':205,'multiline':False]
