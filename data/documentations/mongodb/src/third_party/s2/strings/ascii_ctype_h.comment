['text':' Copyright 2007 Google Inc. All Rights Reserved.','line_number':1,'multiline':False]
['text':' ----------------------------------------------------------------------','line_number':8,'multiline':False]
['text':' ascii_isalpha()','line_number':9,'multiline':False]
['text':' ascii_isdigit()','line_number':10,'multiline':False]
['text':' ascii_isalnum()','line_number':11,'multiline':False]
['text':' ascii_isspace()','line_number':12,'multiline':False]
['text':' ascii_ispunct()','line_number':13,'multiline':False]
['text':' ascii_isblank()','line_number':14,'multiline':False]
['text':' ascii_iscntrl()','line_number':15,'multiline':False]
['text':' ascii_isxdigit()','line_number':16,'multiline':False]
['text':' ascii_isprint()','line_number':17,'multiline':False]
['text':' ascii_isgraph()','line_number':18,'multiline':False]
['text':' ascii_isupper()','line_number':19,'multiline':False]
['text':' ascii_islower()','line_number':20,'multiline':False]
['text':' ascii_tolower()','line_number':21,'multiline':False]
['text':' ascii_toupper()','line_number':22,'multiline':False]
['text':'     The ctype.h versions of these routines are slow with some','line_number':23,'multiline':False]
['text':'     compilers and/or architectures, perhaps because of locale','line_number':24,'multiline':False]
['text':'     issues.  These versions work for ascii only: they return','line_number':25,'multiline':False]
['text':'     false for everything above \x7f (which means they return','line_number':26,'multiline':False]
['text':'     false for any byte from any non-ascii UTF8 character).','line_number':27,'multiline':False]
['text':'','line_number':28,'multiline':False]
['text':' The individual bits do not have names because the array definition','line_number':29,'multiline':False]
['text':' is already tightly coupled to this, and names would make it harder','line_number':30,'multiline':False]
['text':' to read and debug.','line_number':31,'multiline':False]
['text':'','line_number':32,'multiline':False]
['text':' This is an example of the benchmark times from the unittest:','line_number':33,'multiline':False]
['text':' $ ascii_ctype_test --benchmarks=all --heap_check=','line_number':34,'multiline':False]
['text':' Benchmark           Time(ns)    CPU(ns) Iterations','line_number':35,'multiline':False]
['text':' --------------------------------------------------','line_number':36,'multiline':False]
['text':' BM_Identity              121        120    5785985 2027.0 MB/s','line_number':37,'multiline':False]
['text':' BM_isalpha              1603       1597     511027  152.9 MB/s','line_number':38,'multiline':False]
['text':' BM_ascii_isalpha         223        224    3111595 1088.5 MB/s','line_number':39,'multiline':False]
['text':' BM_isdigit               181        183    3825722 1336.4 MB/s','line_number':40,'multiline':False]
['text':' BM_ascii_isdigit         236        239    2929312 1023.3 MB/s','line_number':41,'multiline':False]
['text':' BM_isalnum              1623       1615     460596  151.2 MB/s','line_number':42,'multiline':False]
['text':' BM_ascii_isalnum         253        255    2745518  959.1 MB/s','line_number':43,'multiline':False]
['text':' BM_isspace              1264       1258     555639  194.1 MB/s','line_number':44,'multiline':False]
['text':' BM_ascii_isspace         253        255    2745507  959.1 MB/s','line_number':45,'multiline':False]
['text':' BM_ispunct              1324       1317     555639  185.3 MB/s','line_number':46,'multiline':False]
['text':' BM_ascii_ispunct         252        255    2745507  959.1 MB/s','line_number':47,'multiline':False]
['text':' BM_isblank              1433       1426     511027  171.2 MB/s','line_number':48,'multiline':False]
['text':' BM_ascii_isblank         253        254    2745518  960.5 MB/s','line_number':49,'multiline':False]
['text':' BM_iscntrl              1643       1634     530383  149.4 MB/s','line_number':50,'multiline':False]
['text':' BM_ascii_iscntrl         252        255    2745518  959.1 MB/s','line_number':51,'multiline':False]
['text':' BM_isxdigit             1826       1817     414265  134.3 MB/s','line_number':52,'multiline':False]
['text':' BM_ascii_isxdigit        258        260    2692712  939.3 MB/s','line_number':53,'multiline':False]
['text':' BM_isprint              1677       1669     419224  146.2 MB/s','line_number':54,'multiline':False]
['text':' BM_ascii_isprint         237        239    2929312 1021.8 MB/s','line_number':55,'multiline':False]
['text':' BM_isgraph              1436       1429     507324  170.9 MB/s','line_number':56,'multiline':False]
['text':' BM_ascii_isgraph         237        239    2929312 1021.8 MB/s','line_number':57,'multiline':False]
['text':' BM_isupper              1550       1544     463647  158.1 MB/s','line_number':58,'multiline':False]
['text':' BM_ascii_isupper         237        239    2929312 1021.8 MB/s','line_number':59,'multiline':False]
['text':' BM_islower              1301       1294     538544  188.7 MB/s','line_number':60,'multiline':False]
['text':' BM_ascii_islower         237        239    2929312 1023.3 MB/s','line_number':61,'multiline':False]
['text':' BM_isascii               182        181    3846746 1345.7 MB/s','line_number':62,'multiline':False]
['text':' BM_ascii_isascii         209        211    3318039 1159.1 MB/s','line_number':63,'multiline':False]
['text':' BM_tolower              1743       1764     397786  138.4 MB/s','line_number':64,'multiline':False]
['text':' BM_ascii_tolower         210        211    3318039 1155.8 MB/s','line_number':65,'multiline':False]
['text':' BM_toupper              1742       1764     397788  138.4 MB/s','line_number':66,'multiline':False]
['text':' BM_ascii_toupper         212        211    3302401 1156.9 MB/s','line_number':67,'multiline':False]
['text':'','line_number':68,'multiline':False]
['text':' ----------------------------------------------------------------------','line_number':69,'multiline':False]
['text':' STRINGS_ASCII_CTYPE_H__','line_number':95,'multiline':False]
