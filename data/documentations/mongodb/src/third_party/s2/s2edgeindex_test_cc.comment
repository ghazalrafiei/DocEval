['text':' Copyright 2009 Google Inc. All Rights Reserved.','line_number':1,'multiline':False]
['text':' Generates a random edge whose center is in the given cap.','line_number':38,'multiline':False]
['text':' Pick the edge center at random.','line_number':41,'multiline':False]
['text':' Pick two random points in a suitably sized cap about the edge center.','line_number':43,'multiline':False]
['text':' Generates "num_edges" random edges, of length at most','line_number':52,'multiline':False]
['text':' "edge_length_meters_max" and each of whose center is in a randomly located','line_number':53,'multiline':False]
['text':' cap with radius "cap_span_meters", and puts results into "edges".','line_number':54,'multiline':False]
['text':' Generates random edges and tests, for each edge,','line_number':142,'multiline':False]
['text':' that all those that cross are candidates.','line_number':143,'multiline':False]
['text':' A diamond loop around 0,180.','line_number':157,'multiline':False]
['text':' = 5km/6400km','line_number':205,'multiline':False]
['text':' At least one candidate','line_number':215,'multiline':False]
['text':' About 32 edges','line_number':220,'multiline':False]
['text':' = 5km/6400km','line_number':245,'multiline':False]
['text':' Trigger the quad tree computation','line_number':259,'multiline':False]
['text':' MICROBENCHMARKS (and related structures)','line_number':276,'multiline':False]
['text':' Generates a bunch of random edges and tests each against all others for','line_number':278,'multiline':False]
['text':' crossings. This is just for benchmarking; there's no correctness testing in','line_number':279,'multiline':False]
['text':' this function. Set "cutoff_level" negative to apply brute force checking.','line_number':280,'multiline':False]
['text':' "Sparse" tests are those where we expect relatively few segment crossings.','line_number':316,'multiline':False]
['text':' In general the segment lengths are short (< 300m) and the random segments','line_number':317,'multiline':False]
['text':' are distributed over caps of radius 5-50km.','line_number':318,'multiline':False]
['text':' These benchmarks are used to find the right trade-off between brute force','line_number':346,'multiline':False]
['text':' and quad tree.','line_number':347,'multiline':False]
['text':' To compute kQuadTreeInsertionCost','line_number':349,'multiline':False]
['text':' = 5km/6400km','line_number':355,'multiline':False]
['text':' To compute kQuadTreeFindCost','line_number':366,'multiline':False]
['text':' = 5km/6400km','line_number':371,'multiline':False]
