['text':' Copyright 2005 Google Inc. All Rights Reserved.','line_number':1,'multiline':False]
['text':' An S1Interval represents a closed interval on a unit circle (also known','line_number':20,'multiline':False]
['text':' as a 1-dimensional sphere).  It is capable of representing the empty','line_number':21,'multiline':False]
['text':' interval (containing no points), the full interval (containing all','line_number':22,'multiline':False]
['text':' points), and zero-length intervals (containing a single point).','line_number':23,'multiline':False]
['text':'','line_number':24,'multiline':False]
['text':' Points are represented by the angle they make with the positive x-axis in','line_number':25,'multiline':False]
['text':' the range [-Pi, Pi].  An interval is represented by its lower and upper','line_number':26,'multiline':False]
['text':' bounds (both inclusive, since the interval is closed).  The lower bound may','line_number':27,'multiline':False]
['text':' be greater than the upper bound, in which case the interval is "inverted"','line_number':28,'multiline':False]
['text':' (i.e. it passes through the point (-1, 0)).','line_number':29,'multiline':False]
['text':'','line_number':30,'multiline':False]
['text':' Note that the point (-1, 0) has two valid representations, Pi and -Pi.','line_number':31,'multiline':False]
['text':' The normalized representation of this point internally is Pi, so that','line_number':32,'multiline':False]
['text':' endpoints of normal intervals are in the range (-Pi, Pi].  However, we','line_number':33,'multiline':False]
['text':' take advantage of the point -Pi to construct two special intervals:','line_number':34,'multiline':False]
['text':' the Full() interval is [-Pi, Pi], and the Empty() interval is [Pi, -Pi].','line_number':35,'multiline':False]
['text':'','line_number':36,'multiline':False]
['text':' This class is intended to be copied by value as desired.  It uses','line_number':37,'multiline':False]
['text':' the default copy constructor and assignment operator.','line_number':38,'multiline':False]
['text':' Constructor.  Both endpoints must be in the range -Pi to Pi inclusive.','line_number':41,'multiline':False]
['text':' The value -Pi is converted internally to Pi except for the Full()','line_number':42,'multiline':False]
['text':' and Empty() intervals.','line_number':43,'multiline':False]
['text':' The default constructor creates an empty interval.','line_number':46,'multiline':False]
['text':'','line_number':47,'multiline':False]
['text':' Note: Don't construct an interval using the default constructor and','line_number':48,'multiline':False]
['text':' set_lo()/set_hi().  If you need to set both endpoints, use the','line_number':49,'multiline':False]
['text':' constructor above:','line_number':50,'multiline':False]
['text':'','line_number':51,'multiline':False]
['text':'   lng_bounds_ = S1Interval(lng_lo, lng_hi);','line_number':52,'multiline':False]
['text':' Returns the empty interval.','line_number':55,'multiline':False]
['text':' Returns the full interval.','line_number':58,'multiline':False]
['text':' Convenience method to construct an interval containing a single point.','line_number':61,'multiline':False]
['text':' Convenience method to construct the minimal interval containing','line_number':64,'multiline':False]
['text':' the two given points.  This is equivalent to starting with an empty','line_number':65,'multiline':False]
['text':' interval and calling AddPoint() twice, but it is more efficient.','line_number':66,'multiline':False]
['text':' Methods to modify one endpoint of an existing S1Interval.  Requires that','line_number':74,'multiline':False]
['text':' the resulting S1Interval is valid.  This implies you cannot call this','line_number':75,'multiline':False]
['text':' method on an Empty() or Full() interval, since these intervals do not','line_number':76,'multiline':False]
['text':' have any endpoints.','line_number':77,'multiline':False]
['text':'','line_number':78,'multiline':False]
['text':' Do not use these methods if you want to replace both endpoints of the','line_number':79,'multiline':False]
['text':' interval; use a constructor instead.  For example:','line_number':80,'multiline':False]
['text':'','line_number':81,'multiline':False]
['text':'   *lng_bounds = S1Interval(lng_lo, lng_hi);','line_number':82,'multiline':False]
['text':' An interval is valid if neither bound exceeds Pi in absolute value,','line_number':86,'multiline':False]
['text':' and the value -Pi appears only in the Empty() and Full() intervals.','line_number':87,'multiline':False]
['text':' Return true if the interval contains all points on the unit circle.','line_number':90,'multiline':False]
['text':' Return true if the interval is empty, i.e. it contains no points.','line_number':93,'multiline':False]
['text':' Return true if lo() > hi().  (This is true for empty intervals.)','line_number':96,'multiline':False]
['text':' Return the midpoint of the interval.  For full and empty intervals,','line_number':99,'multiline':False]
['text':' the result is arbitrary.','line_number':100,'multiline':False]
['text':' Return the length of the interval.  The length of an empty interval','line_number':103,'multiline':False]
['text':' is negative.','line_number':104,'multiline':False]
['text':' Return the complement of the interior of the interval.  An interval and','line_number':107,'multiline':False]
['text':' its complement have the same boundary but do not share any interior','line_number':108,'multiline':False]
['text':' values.  The complement operator is not a bijection, since the complement','line_number':109,'multiline':False]
['text':' of a singleton interval (containing a single value) is the same as the','line_number':110,'multiline':False]
['text':' complement of an empty interval.','line_number':111,'multiline':False]
['text':' Return the midpoint of the complement of the interval. For full and empty','line_number':114,'multiline':False]
['text':' intervals, the result is arbitrary. For a singleton interval (containing a','line_number':115,'multiline':False]
['text':' single point), the result is its antipodal point on S1.','line_number':116,'multiline':False]
['text':' Return true if the interval (which is closed) contains the point 'p'.','line_number':119,'multiline':False]
['text':' Return true if the interior of the interval contains the point 'p'.','line_number':122,'multiline':False]
['text':' Return true if the interval contains the given interval 'y'.','line_number':125,'multiline':False]
['text':' Works for empty, full, and singleton intervals.','line_number':126,'multiline':False]
['text':' Returns true if the interior of this interval contains the entire','line_number':129,'multiline':False]
['text':' interval 'y'.  Note that x.InteriorContains(x) is true only when','line_number':130,'multiline':False]
['text':' x is the empty or full interval, and x.InteriorContains(S1Interval(p,p))','line_number':131,'multiline':False]
['text':' is equivalent to x.InteriorContains(p).','line_number':132,'multiline':False]
['text':' Return true if the two intervals contain any points in common.','line_number':135,'multiline':False]
['text':' Note that the point +/-Pi has two representations, so the intervals','line_number':136,'multiline':False]
['text':' [-Pi,-3] and [2,Pi] intersect, for example.','line_number':137,'multiline':False]
['text':' Return true if the interior of this interval contains any point of the','line_number':140,'multiline':False]
['text':' interval 'y' (including its boundary).  Works for empty, full, and','line_number':141,'multiline':False]
['text':' singleton intervals.','line_number':142,'multiline':False]
['text':' Return the Hausdorff distance to the given interval 'y'. For two','line_number':145,'multiline':False]
['text':' S1Intervals x and y, this distance is defined by','line_number':146,'multiline':False]
['text':'     h(x, y) = max_{p in x} min_{q in y} d(p, q),','line_number':147,'multiline':False]
['text':' where d(.,.) is measured along S1.','line_number':148,'multiline':False]
['text':' Expand the interval by the minimum amount necessary so that it','line_number':151,'multiline':False]
['text':' contains the given point "p" (an angle in the range [-Pi, Pi]).','line_number':152,'multiline':False]
['text':' Return an interval that contains all points with a distance "radius" of a','line_number':155,'multiline':False]
['text':' point in this interval.  Note that the expansion of an empty interval is','line_number':156,'multiline':False]
['text':' always empty.  The radius must be non-negative.','line_number':157,'multiline':False]
['text':' Return the smallest interval that contains this interval and the','line_number':160,'multiline':False]
['text':' given interval "y".','line_number':161,'multiline':False]
['text':' Return the smallest interval that contains the intersection of this','line_number':164,'multiline':False]
['text':' interval with "y".  Note that the region of intersection may','line_number':165,'multiline':False]
['text':' consist of two disjoint intervals.','line_number':166,'multiline':False]
['text':' Return true if two intervals contains the same set of points.','line_number':169,'multiline':False]
['text':' Return true if the length of the symmetric difference between the two','line_number':172,'multiline':False]
['text':' intervals is at most the given tolerance.','line_number':173,'multiline':False]
['text':' Internal constructor that assumes that both arguments are in the','line_number':179,'multiline':False]
['text':' correct range, i.e. normalization from -Pi to Pi is already done.','line_number':180,'multiline':False]
['text':' Return true if the interval (which is closed) contains the point 'p'.','line_number':183,'multiline':False]
['text':' Skips the normalization of 'p' from -Pi to Pi.','line_number':184,'multiline':False]
['text':' UTIL_GEOMETRY_S1INTERVAL_H_','line_number':227,'multiline':False]
