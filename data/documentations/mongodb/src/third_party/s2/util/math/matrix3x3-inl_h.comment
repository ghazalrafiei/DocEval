['text':'','line_number':1,'multiline':False]
['text':' Copyright 2003 Google, Inc.','line_number':2,'multiline':False]
['text':'','line_number':3,'multiline':False]
['text':'','line_number':4,'multiline':False]
['text':' A simple class to handle 3x3 matrices','line_number':5,'multiline':False]
['text':' The aim of this class is to be able to manipulate 3x3 matrices','line_number':6,'multiline':False]
['text':' and 3D vectors as naturally as possible and make calculations','line_number':7,'multiline':False]
['text':' readable.','line_number':8,'multiline':False]
['text':' For that reason, the operators +, -, * are overloaded.','line_number':9,'multiline':False]
['text':' (Reading a = a + b*2 - c is much easier to read than','line_number':10,'multiline':False]
['text':' a = Sub(Add(a, Mul(b,2)),c)   )','line_number':11,'multiline':False]
['text':'','line_number':12,'multiline':False]
['text':' Please be careful about overflows when using those matrices wth integer types','line_number':13,'multiline':False]
['text':' The calculations are carried with VType. eg : if you are using uint8 as the','line_number':14,'multiline':False]
['text':' base type, all values will be modulo 256.','line_number':15,'multiline':False]
['text':' This feature is necessary to use the class in a more general framework with','line_number':16,'multiline':False]
['text':' VType != plain old data type.','line_number':17,'multiline':False]
['text':' Initialize the matrix to 0','line_number':40,'multiline':False]
['text':' Constructor explicitly setting the values of all the coefficient of','line_number':47,'multiline':False]
['text':' the matrix','line_number':48,'multiline':False]
['text':' Copy constructor','line_number':65,'multiline':False]
['text':' Casting constructor','line_number':80,'multiline':False]
['text':' Change the value of all the coefficients of the matrix','line_number':94,'multiline':False]
['text':' Copy','line_number':113,'multiline':False]
['text':' Compare','line_number':129,'multiline':False]
['text':' Matrix addition','line_number':142,'multiline':False]
['text':' Matrix subtration','line_number':158,'multiline':False]
['text':' Matrix multiplication by a scalar','line_number':174,'multiline':False]
['text':' Matrix addition','line_number':190,'multiline':False]
['text':' Matrix subtraction','line_number':195,'multiline':False]
['text':' Change the sign of all the coefficients in the matrix','line_number':200,'multiline':False]
['text':' Matrix multiplication by a scalar','line_number':207,'multiline':False]
['text':' Matrix multiplication','line_number':216,'multiline':False]
['text':' Multiplication of a matrix by a vector','line_number':232,'multiline':False]
['text':' Return the determinant of the matrix','line_number':240,'multiline':False]
['text':' Return the trace of the matrix','line_number':250,'multiline':False]
['text':' Return a pointer to the data array for interface with other libraries','line_number':255,'multiline':False]
['text':' like opencv','line_number':256,'multiline':False]
['text':' Return matrix element (i,j) with 0<=i<=2 0<=j<=2','line_number':264,'multiline':False]
['text':' Return matrix element (i/3,i%3) with 0<=i<=8 (access concatenated rows).','line_number':280,'multiline':False]
['text':' Return the transposed matrix','line_number':292,'multiline':False]
['text':' Return the transposed of the matrix of the cofactors','line_number':299,'multiline':False]
['text':' (Useful for inversion for example)','line_number':300,'multiline':False]
['text':' Matrix inversion','line_number':315,'multiline':False]
['text':' Return the vector 3D at row i','line_number':322,'multiline':False]
['text':' Return the vector 3D at col i','line_number':329,'multiline':False]
['text':' Create a matrix from 3 row vectors','line_number':336,'multiline':False]
['text':' Create a matrix from 3 column vectors','line_number':347,'multiline':False]
['text':' Set the vector in row i to be v1','line_number':358,'multiline':False]
['text':' Set the vector in column i to be v1','line_number':367,'multiline':False]
['text':' Return a matrix M close to the original but verifying MtM = I','line_number':376,'multiline':False]
['text':' (useful to compensate for errors in a rotation matrix)','line_number':377,'multiline':False]
['text':' Return the identity matrix','line_number':386,'multiline':False]
['text':' Return a matrix full of zeros','line_number':395,'multiline':False]
['text':' Return a diagonal matrix with the coefficients in v','line_number':400,'multiline':False]
['text':' Return the matrix vvT','line_number':407,'multiline':False]
['text':' Return a matrix M such that:','line_number':414,'multiline':False]
['text':' for each u,  M * u = v.CrossProd(u)','line_number':415,'multiline':False]
['text':' Returns v.Transpose() * (*this) * u','line_number':433,'multiline':False]
['text':' Use the 3x3 matrix as a projective transform for 2d points','line_number':438,'multiline':False]
['text':' Return the Frobenius norm of the matrix: sqrt(sum(aij^2))','line_number':444,'multiline':False]
['text':' Finds the eigen values of the matrix. Return the number of real eigenvalues','line_number':455,'multiline':False]
['text':' found','line_number':456,'multiline':False]
['text':' NOLINT','line_number':458,'multiline':False]
['text':' characteristic polynomial is','line_number':459,'multiline':False]
['text':' x^3 + (a11*a22+a22*a33+a33*a11)*x^2 - trace(A)*x - det(A)','line_number':460,'multiline':False]
['text':' Finds the eigen values and associated eigen vectors of a','line_number':475,'multiline':False]
['text':' symmetric positive definite 3x3 matrix,eigen values are','line_number':476,'multiline':False]
['text':' sorted in decreasing order, eig_val corresponds to the','line_number':477,'multiline':False]
['text':' columns of the eig_vec matrix.','line_number':478,'multiline':False]
['text':' Note: The routine will only use the lower diagonal part','line_number':479,'multiline':False]
['text':' of the matrix, i.e.','line_number':480,'multiline':False]
['text':' |  a00,          |','line_number':481,'multiline':False]
['text':' |  a10, a11,     |','line_number':482,'multiline':False]
['text':' |  a20, a21, a22 |','line_number':483,'multiline':False]
['text':' Compute characteristic polynomial coefficients','line_number':486,'multiline':False]
['text':' Root finding','line_number':496,'multiline':False]
['text':' Assume R^3 <Q^3 so there are three real roots','line_number':499,'multiline':False]
['text':' Sort eigen value in decreasing order','line_number':508,'multiline':False]
['text':' Compute eigenvectors','line_number':513,'multiline':False]
['text':' Make e2 and e3 point in the same direction as e1','line_number':530,'multiline':False]
['text':' Return true is one of the elements of the matrix is NaN','line_number':538,'multiline':False]
['text':' TODO(user): Matrix3x3<T> does not actually satisfy the definition of a','line_number':571,'multiline':False]
['text':' POD type even when T is a POD. Pretending that Matrix3x3<T> is a POD','line_number':572,'multiline':False]
['text':' probably won't cause immediate problems, but eventually this should be fixed.','line_number':573,'multiline':False]
['text':' UTIL_MATH_MATRIX3X3_INL_H__','line_number':576,'multiline':False]
