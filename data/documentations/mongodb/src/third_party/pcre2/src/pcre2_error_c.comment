['text':'************************************************
*      Perl-Compatible Regular Expressions       *
************************************************','line_number':1,'multiline':True]
['text':' PCRE is a library of functions to support regular expressions whose syntax
and semantics are as close as possible to those of the Perl 5 language.

                       Written by Philip Hazel
     Original API code Copyright (c) 1997-2012 University of Cambridge
          New API code Copyright (c) 2016-2021 University of Cambridge

-----------------------------------------------------------------------------
Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:

    * Redistributions of source code must retain the above copyright notice,
      this list of conditions and the following disclaimer.

    * Redistributions in binary form must reproduce the above copyright
      notice, this list of conditions and the following disclaimer in the
      documentation and/or other materials provided with the distribution.

    * Neither the name of the University of Cambridge nor the names of its
      contributors may be used to endorse or promote products derived from
      this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
POSSIBILITY OF SUCH DAMAGE.
-----------------------------------------------------------------------------
','line_number':5,'multiline':True]
['text':' The texts of compile-time error messages. Compile-time error numbers start
at COMPILE_ERROR_BASE (100).

This used to be a table of strings, but in order to reduce the number of
relocations needed when a shared library is loaded dynamically, it is now one
long string. We cannot use a table of offsets, because the lengths of inserts
such as XSTRING(MAX_NAME_SIZE) are not known. Instead,
pcre2_get_error_message() counts through to the one it wants - this isn't a
performance issue because these strings are used only when there is an error.

Each substring ends with \0 to insert a null character. This includes the final
substring, so that the whole string ends with \0\0, which can be detected when
counting through. ','line_number':51,'multiline':True]
['text':' 5 ','line_number':71,'multiline':True]
['text':' 10 ','line_number':77,'multiline':True]
['text':' 15 ','line_number':83,'multiline':True]
['text':' 20 ','line_number':89,'multiline':True]
['text':' 25 ','line_number':95,'multiline':True]
['text':' 30 ','line_number':101,'multiline':True]
['text':' 35 ','line_number':107,'multiline':True]
['text':' 40 ','line_number':113,'multiline':True]
['text':' 45 ','line_number':119,'multiline':True]
['text':' 50 ','line_number':125,'multiline':True]
['text':' 55 ','line_number':131,'multiline':True]
['text':' "an argument is not allowed for (*ACCEPT), (*FAIL), or (*COMMIT)\0" ','line_number':136,'multiline':True]
['text':' Was the above ','line_number':137,'multiline':True]
['text':' 60 ','line_number':138,'multiline':True]
['text':' 65 ','line_number':144,'multiline':True]
['text':' 70 ','line_number':154,'multiline':True]
['text':' 75 ','line_number':160,'multiline':True]
['text':' 80 ','line_number':166,'multiline':True]
['text':' 85 ','line_number':172,'multiline':True]
['text':' 90 ','line_number':178,'multiline':True]
['text':' 95 ','line_number':184,'multiline':True]
['text':' Match-time and UTF error texts are in the same format. ','line_number':192,'multiline':True]
['text':' 5 ','line_number':200,'multiline':True]
['text':' 10 ','line_number':206,'multiline':True]
['text':' 15 ','line_number':212,'multiline':True]
['text':' 20 ','line_number':218,'multiline':True]
['text':' 25 ','line_number':224,'multiline':True]
['text':' 30 ','line_number':230,'multiline':True]
['text':' 35 ','line_number':236,'multiline':True]
['text':' Never returned by PCRE2 itself ','line_number':239,'multiline':True]
['text':' 40 ','line_number':242,'multiline':True]
['text':' 45 ','line_number':248,'multiline':True]
['text':' 50 ','line_number':254,'multiline':True]
['text':' 55 ','line_number':260,'multiline':True]
['text':' 60 ','line_number':266,'multiline':True]
['text':' 65 ','line_number':272,'multiline':True]
['text':'************************************************
*            Return error message                *
************************************************','line_number':278,'multiline':True]
['text':' This function copies an error message into a buffer whose units are of an
appropriate width. Error numbers are positive for compile-time errors, and
negative for match-time errors (except for UTF errors), but the numbers are all
distinct.

Arguments:
  enumber       error number
  buffer        where to put the message (zero terminated)
  size          size of the buffer in code units

Returns:        length of message if all is well
                negative on error
','line_number':282,'multiline':True]
['text':' Compile error ','line_number':305,'multiline':True]
['text':' Match or UTF error ','line_number':310,'multiline':True]
['text':' Invalid error number ','line_number':315,'multiline':True]
['text':' Empty message list ','line_number':317,'multiline':True]
['text':' Terminate partial message ','line_number':331,'multiline':True]
['text':' End of pcre2_error.c ','line_number':341,'multiline':True]
