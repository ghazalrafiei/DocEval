['text':'************************************************
*       Perl-Compatible Regular Expressions      *
************************************************','line_number':1,'multiline':True]
['text':' This is the public header file for the PCRE library, second API, to be
#included by applications that call PCRE2 functions.

           Copyright (c) 2016-2021 University of Cambridge

-----------------------------------------------------------------------------
Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:

    * Redistributions of source code must retain the above copyright notice,
      this list of conditions and the following disclaimer.

    * Redistributions in binary form must reproduce the above copyright
      notice, this list of conditions and the following disclaimer in the
      documentation and/or other materials provided with the distribution.

    * Neither the name of the University of Cambridge nor the names of its
      contributors may be used to endorse or promote products derived from
      this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
POSSIBILITY OF SUCH DAMAGE.
-----------------------------------------------------------------------------
','line_number':5,'multiline':True]
['text':' The current PCRE version information. ','line_number':42,'multiline':True]
['text':' When an application links to a PCRE DLL in Windows, the symbols that are
imported have to be identified as such. When building PCRE2, the appropriate
export setting is defined in pcre2_internal.h, which includes this file. So we
don't change existing definitions of PCRE2_EXP_DECL. ','line_number':49,'multiline':True]
['text':' By default, we use the standard "extern" declarations. ','line_number':60,'multiline':True]
['text':' When compiling with the MSVC compiler, it is sometimes necessary to include
a "calling convention" before exported function names. (This is secondhand
information; I know nothing about MSVC myself). For example, something like

  void __cdecl function(....)

might be needed. In order so make this easy, all the exported functions have
PCRE2_CALL_CONVENTION just before their names. It is rarely needed; if not
set, we ensure here that it has no effect. ','line_number':70,'multiline':True]
['text':' Have to include limits.h, stdlib.h, and inttypes.h to ensure that size_t and
uint8_t, UCHAR_MAX, etc are defined. Some systems that do have inttypes.h do
not have stdint.h, which is why we use inttypes.h, which according to the C
standard is a superset of stdint.h. If inttypes.h is not available the build
will break and the relevant values must be provided by some other means. ','line_number':84,'multiline':True]
['text':' Allow for C++ users compiling this directly. ','line_number':94,'multiline':True]
['text':' The following option bits can be passed to pcre2_compile(), pcre2_match(),
or pcre2_dfa_match(). PCRE2_NO_UTF_CHECK affects only the function to which it
is passed. Put these bits at the most significant end of the options word so
others can be added next to them ','line_number':100,'multiline':True]
['text':' The following option bits can be passed only to pcre2_compile(). However,
they may affect compilation, JIT compilation, and/or interpretive execution.
The following tags indicate which:

C   alters what is compiled by pcre2_compile()
J   alters what is compiled by pcre2_jit_compile()
M   is inspected during pcre2_match() execution
D   is inspected during pcre2_dfa_match() execution
','line_number':109,'multiline':True]
['text':' C       ','line_number':119,'multiline':True]
['text':' C       ','line_number':120,'multiline':True]
['text':' C       ','line_number':121,'multiline':True]
['text':' C       ','line_number':122,'multiline':True]
['text':'   J M D ','line_number':123,'multiline':True]
['text':' C       ','line_number':124,'multiline':True]
['text':' C       ','line_number':125,'multiline':True]
['text':' C       ','line_number':126,'multiline':True]
['text':'   J M D ','line_number':127,'multiline':True]
['text':' C J M   ','line_number':128,'multiline':True]
['text':' C       ','line_number':129,'multiline':True]
['text':' C       ','line_number':130,'multiline':True]
['text':' C       ','line_number':131,'multiline':True]
['text':' C       ','line_number':132,'multiline':True]
['text':' C       ','line_number':133,'multiline':True]
['text':' C       ','line_number':134,'multiline':True]
['text':'   J M D ','line_number':135,'multiline':True]
['text':' C J M D ','line_number':136,'multiline':True]
['text':' C       ','line_number':137,'multiline':True]
['text':' C J M D ','line_number':138,'multiline':True]
['text':' C       ','line_number':139,'multiline':True]
['text':'   J M D ','line_number':140,'multiline':True]
['text':' C       ','line_number':141,'multiline':True]
['text':'   J M D ','line_number':142,'multiline':True]
['text':' C       ','line_number':143,'multiline':True]
['text':' C       ','line_number':144,'multiline':True]
['text':'   J M D ','line_number':145,'multiline':True]
['text':' An additional compile options word is available in the compile context. ','line_number':147,'multiline':True]
['text':' C ','line_number':149,'multiline':True]
['text':' C ','line_number':150,'multiline':True]
['text':' C ','line_number':151,'multiline':True]
['text':' C ','line_number':152,'multiline':True]
['text':' C ','line_number':153,'multiline':True]
['text':' C ','line_number':154,'multiline':True]
['text':' C ','line_number':155,'multiline':True]
['text':' These are for pcre2_jit_compile(). ','line_number':157,'multiline':True]
['text':' For full matching ','line_number':159,'multiline':True]
['text':' These are for pcre2_match(), pcre2_dfa_match(), pcre2_jit_match(), and
pcre2_substitute(). Some are allowed only for one of the functions, and in
these cases it is noted below. Note that PCRE2_ANCHORED, PCRE2_ENDANCHORED and
PCRE2_NO_UTF_CHECK can also be passed to these functions (though
pcre2_jit_match() ignores the latter since it bypasses all sanity checks). ','line_number':164,'multiline':True]
['text':' ) These two must be kept ','line_number':172,'multiline':True]
['text':' ) adjacent to each other. ','line_number':173,'multiline':True]
['text':' pcre2_dfa_match() only ','line_number':176,'multiline':True]
['text':' pcre2_dfa_match() only ','line_number':177,'multiline':True]
['text':' pcre2_substitute() only ','line_number':178,'multiline':True]
['text':' pcre2_substitute() only ','line_number':179,'multiline':True]
['text':' pcre2_substitute() only ','line_number':180,'multiline':True]
['text':' pcre2_substitute() only ','line_number':181,'multiline':True]
['text':' pcre2_substitute() only ','line_number':182,'multiline':True]
['text':' Not for pcre2_dfa_match() ','line_number':183,'multiline':True]
['text':' pcre2_substitute() only ','line_number':185,'multiline':True]
['text':' pcre2_substitute() only ','line_number':186,'multiline':True]
['text':' pcre2_substitute() only ','line_number':187,'multiline':True]
['text':' Options for pcre2_pattern_convert(). ','line_number':189,'multiline':True]
['text':' Newline and \R settings, for use in compile contexts. The newline values
must be kept in step with values set in config.h and both sets must all be
greater than zero. ','line_number':199,'multiline':True]
['text':' Error codes for pcre2_compile(). Some of these are also used by
pcre2_pattern_convert(). ','line_number':213,'multiline':True]
['text':' Error 159 is obsolete and should now never occur ','line_number':274,'multiline':True]
['text':' "Expected" matching error codes: no match and partial match. ','line_number':318,'multiline':True]
['text':' Error codes for UTF-8 validity checks ','line_number':323,'multiline':True]
['text':' Error codes for UTF-16 validity checks ','line_number':347,'multiline':True]
['text':' Error codes for UTF-32 validity checks ','line_number':353,'multiline':True]
['text':' Miscellaneous error codes for pcre2[_dfa]_match(), substring extraction
functions, context functions, and serializing functions. They are in numerical
order. Originally they were in alphabetical order too, but now that PCRE2 is
released, the numbers must not be changed. ','line_number':358,'multiline':True]
['text':' Name was changed ','line_number':364,'multiline':True]
['text':' Never used by PCRE2 itself ','line_number':371,'multiline':True]
['text':' Obsolete synonym ','line_number':388,'multiline':True]
['text':' Request types for pcre2_pattern_info() ','line_number':404,'multiline':True]
['text':' Obsolete synonym ','line_number':428,'multiline':True]
['text':' Request types for pcre2_config(). ','line_number':435,'multiline':True]
['text':' Obsolete synonym ','line_number':445,'multiline':True]
['text':' Obsolete ','line_number':446,'multiline':True]
['text':' Types for code units in patterns and subject strings. ','line_number':456,'multiline':True]
['text':' The PCRE2_SIZE type is used for all string lengths and offsets in PCRE2,
including pattern offsets for errors and subject offsets after a match. We
define special values to indicate zero-terminated strings and unset offsets in
the offset vector (ovector). ','line_number':466,'multiline':True]
['text':' Generic types for opaque structures and JIT callback functions. These
declarations are defined in a macro that is expanded for each width later. ','line_number':476,'multiline':True]
['text':' The structures for passing out data via callout functions. We use structures
so that new fields can be added on the end in future versions, without changing
the API of the function, thereby allowing old clients to work without
modification. Define the generic versions in a macro; the width-specific
versions are generated from this macro below. ','line_number':504,'multiline':True]
['text':' Flags for the callout_flags field. These are cleared after a callout. ','line_number':510,'multiline':True]
['text':' Set for each bumpalong ','line_number':512,'multiline':True]
['text':' Set after a backtrack ','line_number':513,'multiline':True]
['text':' Identifies version of block ','line_number':517,'multiline':True]
['text':' ------------------------ Version 0 ------------------------------- ','line_number':518,'multiline':True]
['text':' Number compiled into pattern ','line_number':519,'multiline':True]
['text':' Max current capture ','line_number':520,'multiline':True]
['text':' Most recently closed capture ','line_number':521,'multiline':True]
['text':' The offset vector ','line_number':522,'multiline':True]
['text':' Pointer to current mark or NULL ','line_number':523,'multiline':True]
['text':' The subject being matched ','line_number':524,'multiline':True]
['text':' The length of the subject ','line_number':525,'multiline':True]
['text':' Offset to start of this match attempt ','line_number':526,'multiline':True]
['text':' Where we currently are in the subject ','line_number':527,'multiline':True]
['text':' Offset to next item in the pattern ','line_number':528,'multiline':True]
['text':' Length of next item in the pattern ','line_number':529,'multiline':True]
['text':' ------------------- Added for Version 1 -------------------------- ','line_number':530,'multiline':True]
['text':' Offset to string within pattern ','line_number':531,'multiline':True]
['text':' Length of string compiled into pattern ','line_number':532,'multiline':True]
['text':' String compiled into pattern ','line_number':533,'multiline':True]
['text':' ------------------- Added for Version 2 -------------------------- ','line_number':534,'multiline':True]
['text':' See above for list ','line_number':535,'multiline':True]
['text':' ------------------------------------------------------------------ ','line_number':536,'multiline':True]
['text':' Identifies version of block ','line_number':540,'multiline':True]
['text':' ------------------------ Version 0 ------------------------------- ','line_number':541,'multiline':True]
['text':' Offset to next item in the pattern ','line_number':542,'multiline':True]
['text':' Length of next item in the pattern ','line_number':543,'multiline':True]
['text':' Number compiled into pattern ','line_number':544,'multiline':True]
['text':' Offset to string within pattern ','line_number':545,'multiline':True]
['text':' Length of string compiled into pattern ','line_number':546,'multiline':True]
['text':' String compiled into pattern ','line_number':547,'multiline':True]
['text':' ------------------------------------------------------------------ ','line_number':548,'multiline':True]
['text':' Identifies version of block ','line_number':552,'multiline':True]
['text':' ------------------------ Version 0 ------------------------------- ','line_number':553,'multiline':True]
['text':' Pointer to input subject string ','line_number':554,'multiline':True]
['text':' Pointer to output buffer ','line_number':555,'multiline':True]
['text':' Changed portion of the output ','line_number':556,'multiline':True]
['text':' Pointer to current ovector ','line_number':557,'multiline':True]
['text':' Count of pairs set in ovector ','line_number':558,'multiline':True]
['text':' Substitution number ','line_number':559,'multiline':True]
['text':' ------------------------------------------------------------------ ','line_number':560,'multiline':True]
['text':' List the generic forms of all other functions in macros, which will be
expanded for each width below. Start with functions that give general
information. ','line_number':564,'multiline':True]
['text':' Functions for manipulating contexts. ','line_number':572,'multiline':True]
['text':' Functions concerned with compiling a pattern to PCRE internal code. ','line_number':646,'multiline':True]
['text':' Functions that give information about a compiled pattern. ','line_number':660,'multiline':True]
['text':' Functions for running a match and inspecting the result. ','line_number':670,'multiline':True]
['text':' Convenience functions for handling matched substrings. ','line_number':698,'multiline':True]
['text':' Functions for serializing / deserializing compiled patterns. ','line_number':729,'multiline':True]
['text':' Convenience function for match + substitute. ','line_number':744,'multiline':True]
['text':' Functions for converting pattern source strings. ','line_number':753,'multiline':True]
['text':' Functions for JIT processing ','line_number':763,'multiline':True]
['text':' Other miscellaneous functions. ','line_number':781,'multiline':True]
['text':' Define macros that generate width-specific names from generic versions. The
three-level macro scheme is necessary to get the macros expanded when we want
them to be. First we get the width from PCRE2_LOCAL_WIDTH, which is used for
generating three versions of everything below. After that, PCRE2_SUFFIX will be
re-defined to use PCRE2_CODE_UNIT_WIDTH, for use when macros such as
pcre2_compile are called by application code. ','line_number':791,'multiline':True]
['text':' Data types ','line_number':803,'multiline':True]
['text':' Data blocks ','line_number':821,'multiline':True]
['text':' Functions: the complete list in alphabetical order ','line_number':833,'multiline':True]
['text':' Keep this old function name for backwards compatibility ','line_number':907,'multiline':True]
['text':' Keep this obsolete function for backwards compatibility: it is now a noop. ','line_number':910,'multiline':True]
['text':' Now generate all three sets of width-specific structures and function
prototypes. ','line_number':913,'multiline':True]
['text':' Undefine the list macros; they are no longer needed. ','line_number':946,'multiline':True]
['text':' PCRE2_CODE_UNIT_WIDTH must be defined. If it is 8, 16, or 32, redefine
PCRE2_SUFFIX to use it. If it is 0, undefine the other macros and make
PCRE2_SUFFIX a no-op. Otherwise, generate an error. ','line_number':965,'multiline':True]
['text':' PCRE2_CODE_UNIT_WIDTH is defined ','line_number':973,'multiline':True]
['text':' PCRE2_CODE_UNIT_WIDTH is defined ','line_number':985,'multiline':True]
['text':' extern "C" ','line_number':988,'multiline':True]
['text':' PCRE2_H_IDEMPOTENT_GUARD ','line_number':991,'multiline':True]
['text':' End of pcre2.h ','line_number':993,'multiline':True]
