['text':'!/usr/bin/env python','line_number':1,'multiline':False]
['text':'','line_number':2,'multiline':False]
['text':' Public Domain 2014-present MongoDB, Inc.','line_number':3,'multiline':False]
['text':' Public Domain 2008-2014 WiredTiger, Inc.','line_number':4,'multiline':False]
['text':'','line_number':5,'multiline':False]
['text':' This is free and unencumbered software released into the public domain.','line_number':6,'multiline':False]
['text':'','line_number':7,'multiline':False]
['text':' Anyone is free to copy, modify, publish, use, compile, sell, or','line_number':8,'multiline':False]
['text':' distribute this software, either in source code form or as a compiled','line_number':9,'multiline':False]
['text':' binary, for any purpose, commercial or non-commercial, and by any','line_number':10,'multiline':False]
['text':' means.','line_number':11,'multiline':False]
['text':'','line_number':12,'multiline':False]
['text':' In jurisdictions that recognize copyright laws, the author or authors','line_number':13,'multiline':False]
['text':' of this software dedicate any and all copyright interest in the','line_number':14,'multiline':False]
['text':' software to the public domain. We make this dedication for the benefit','line_number':15,'multiline':False]
['text':' of the public at large and to the detriment of our heirs and','line_number':16,'multiline':False]
['text':' successors. We intend this dedication to be an overt act of','line_number':17,'multiline':False]
['text':' relinquishment in perpetuity of all present and future rights to this','line_number':18,'multiline':False]
['text':' software under copyright law.','line_number':19,'multiline':False]
['text':'','line_number':20,'multiline':False]
['text':' THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,','line_number':21,'multiline':False]
['text':' EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF','line_number':22,'multiline':False]
['text':' MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.','line_number':23,'multiline':False]
['text':' IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR','line_number':24,'multiline':False]
['text':' OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,','line_number':25,'multiline':False]
['text':' ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR','line_number':26,'multiline':False]
['text':' OTHER DEALINGS IN THE SOFTWARE.','line_number':27,'multiline':False]
['text':' test_hs06.py','line_number':33,'multiline':False]
['text':' Verify that triggering history store usage does not cause a spike in memory usage','line_number':34,'multiline':False]
['text':' to form an update chain from the history store contents.','line_number':35,'multiline':False]
['text':'','line_number':36,'multiline':False]
['text':' The required value should be fetched from the history store and then passed straight','line_number':37,'multiline':False]
['text':' back to the user without putting together an update chain.','line_number':38,'multiline':False]
['text':'','line_number':39,'multiline':False]
['text':' TODO: Uncomment the checks after the main portion of the relevant history','line_number':40,'multiline':False]
['text':' project work is complete.','line_number':41,'multiline':False]
['text':' Force a small cache.','line_number':43,'multiline':False]
['text':' Create a small table.','line_number':69,'multiline':False]
['text':' Load 1Mb of data.','line_number':81,'multiline':False]
['text':' Load another 1Mb of data with a later timestamp.','line_number':89,'multiline':False]
['text':' Write a version of the data to disk.','line_number':95,'multiline':False]
['text':' Check the checkpoint wrote the expected values. We should get the stable data by','line_number':99,'multiline':False]
['text':' default.','line_number':100,'multiline':False]
['text':' Also check with an explicit read timestamp.','line_number':106,'multiline':False]
['text':' At least for the moment, we can also read the unstable values out of the checkpoint','line_number':113,'multiline':False]
['text':' if we ask for them.','line_number':114,'multiline':False]
['text':' Check what happens if we explicitly read the checkpoint with no timestamp.','line_number':121,'multiline':False]
['text':' Should get the most recent data.','line_number':122,'multiline':False]
['text':' (A timestamp string of "0" is explicitly allowed here to override the checkpoint's','line_number':123,'multiline':False]
['text':' own timestamp.)','line_number':124,'multiline':False]
['text':' Whenever we request something out of cache of timestamp 2, we should','line_number':133,'multiline':False]
['text':' be reading it straight from the history store without initialising a full','line_number':134,'multiline':False]
['text':' update chain of every version of the data.','line_number':135,'multiline':False]
['text':' Non-page related memory usage shouldn't spike significantly.','line_number':143,'multiline':False]
['text':'','line_number':144,'multiline':False]
['text':' Prior to this change, this type of workload would use a lot of memory','line_number':145,'multiline':False]
['text':' to recreate update lists for each page.','line_number':146,'multiline':False]
['text':'','line_number':147,'multiline':False]
['text':' This check could be more aggressive but to avoid potential flakiness,','line_number':148,'multiline':False]
['text':' lets just ensure that it hasn't doubled.','line_number':149,'multiline':False]
['text':'','line_number':150,'multiline':False]
['text':' TODO: Uncomment this once the project work is done.','line_number':151,'multiline':False]
['text':' self.assertLessEqual(end_usage, (start_usage * 2))','line_number':152,'multiline':False]
['text':' WT-5336 causing the read at timestamp 4 returning the value committed at timestamp 5 or 3','line_number':154,'multiline':False]
['text':' FLCS doesn't support modify, so just skip over this test.','line_number':156,'multiline':False]
['text':' Create a small table.','line_number':160,'multiline':False]
['text':' Create initial large values.','line_number':165,'multiline':False]
['text':' Load 1Mb of data.','line_number':169,'multiline':False]
['text':' Load a slight modification with a later timestamp.','line_number':177,'multiline':False]
['text':' And another.','line_number':185,'multiline':False]
['text':' Now write something completely different.','line_number':193,'multiline':False]
['text':' Now the latest version will get written to the data file.','line_number':199,'multiline':False]
['text':' Whenever we request something of timestamp 3, this should be a modify','line_number':206,'multiline':False]
['text':' op. We should be looking forwards in the history store until we find the','line_number':207,'multiline':False]
['text':' newest whole update (timestamp 4).','line_number':208,'multiline':False]
['text':'','line_number':209,'multiline':False]
['text':' t5: value1 (full update on page)','line_number':210,'multiline':False]
['text':' t4: full update in hs','line_number':211,'multiline':False]
['text':' t3: (reverse delta in hs) <= We're querying for t4 so we begin here.','line_number':212,'multiline':False]
['text':' t2: value2 (full update in hs)','line_number':213,'multiline':False]
['text':' Whenever we request something of timestamp 4, this should be a full','line_number':223,'multiline':False]
['text':' update. We should get it from las directly.','line_number':224,'multiline':False]
['text':'','line_number':225,'multiline':False]
['text':' t5: value1 (full update)','line_number':226,'multiline':False]
['text':' t4: full update in las <= We're querying for t4 and we return.','line_number':227,'multiline':False]
['text':' t3: (reverse delta in las)','line_number':228,'multiline':False]
['text':' t2: value2 (full update in las)','line_number':229,'multiline':False]
['text':' Create a small table.','line_number':236,'multiline':False]
['text':' Load prepared data and leave it in a prepared state.','line_number':255,'multiline':False]
['text':' Write some more to cause eviction of the prepared data.','line_number':264,'multiline':False]
['text':' Try to read every key of the prepared data again.','line_number':272,'multiline':False]
['text':' Ensure that we read the history store to find the prepared update and','line_number':273,'multiline':False]
['text':' return a prepare conflict as appropriate.','line_number':274,'multiline':False]
['text':' Specifically check that we can read between commit and durable.','line_number':287,'multiline':False]
['text':' Create a small table.','line_number':299,'multiline':False]
['text':' Load 1Mb of data.','line_number':315,'multiline':False]
['text':' Do two different updates to the same key with the same timestamp.','line_number':323,'multiline':False]
['text':' We want to make sure that the second value is the one that is visible even after eviction.','line_number':324,'multiline':False]
['text':' Write a newer value on top.','line_number':331,'multiline':False]
['text':' Ensure that we see the last of the two updates that got applied.','line_number':337,'multiline':False]
['text':' FLCS doesn't support modify, so just skip over this test.','line_number':344,'multiline':False]
['text':' Create a small table.','line_number':348,'multiline':False]
['text':' Load 1Mb of data.','line_number':356,'multiline':False]
['text':' Apply three sets of modifies.','line_number':364,'multiline':False]
['text':' They specifically need to be in separate modify calls.','line_number':365,'multiline':False]
['text':' Write a newer value on top.','line_number':380,'multiline':False]
['text':' Go back and read. We should get the initial value with the 3 modifies applied on top.','line_number':386,'multiline':False]
['text':' FLCS doesn't support modify, so just skip over this test.','line_number':393,'multiline':False]
['text':' Create a small table.','line_number':397,'multiline':False]
['text':' Load 5Mb of data.','line_number':405,'multiline':False]
['text':' Apply three sets of modifies.','line_number':414,'multiline':False]
['text':' Since the stable timestamp is still at 1, there will be no birthmark record.','line_number':427,'multiline':False]
['text':' History store instantiation should choose this update since it is the most recent.','line_number':428,'multiline':False]
['text':' We want to check that it gets converted into a standard update as appropriate.','line_number':429,'multiline':False]
['text':' Make a bunch of updates to another table to flush everything out of cache.','line_number':436,'multiline':False]
['text':' Go back and read. We should get the initial value with the 3 modifies applied on top.','line_number':451,'multiline':False]
['text':' FLCS doesn't support modify, so just skip over this test.','line_number':458,'multiline':False]
['text':' Create a small table.','line_number':462,'multiline':False]
['text':' Load 5Mb of data.','line_number':470,'multiline':False]
['text':' The base update is at timestamp 1.','line_number':475,'multiline':False]
['text':' When we history store evict these pages, the base update is the only thing behind','line_number':476,'multiline':False]
['text':' the stable timestamp.','line_number':477,'multiline':False]
['text':' Apply three sets of modifies.','line_number':484,'multiline':False]
['text':' Make a bunch of updates to another table to flush everything out of cache.','line_number':503,'multiline':False]
['text':' Go back and read.','line_number':518,'multiline':False]
['text':' FLCS doesn't support modify, so just skip over this test.','line_number':525,'multiline':False]
['text':' Create a small table.','line_number':529,'multiline':False]
['text':' Base update.','line_number':542,'multiline':False]
['text':' Apply three sets of modifies.','line_number':548,'multiline':False]
['text':' This is the one we want to be selected by the checkpoint.','line_number':561,'multiline':False]
['text':' Apply another update and evict the pages with the modifies out of cache.','line_number':568,'multiline':False]
['text':' Checkpoint such that the modifies will be selected. When we grab it from the history','line_number':574,'multiline':False]
['text':' store, we'll need to unflatten it before using it for reconciliation.','line_number':575,'multiline':False]
['text':' Check that the correct value is visible after checkpoint.','line_number':585,'multiline':False]
