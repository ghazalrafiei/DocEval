['text':'!/usr/bin/env python','line_number':1,'multiline':False]
['text':'','line_number':2,'multiline':False]
['text':' Public Domain 2014-present MongoDB, Inc.','line_number':3,'multiline':False]
['text':' Public Domain 2008-2014 WiredTiger, Inc.','line_number':4,'multiline':False]
['text':'','line_number':5,'multiline':False]
['text':' This is free and unencumbered software released into the public domain.','line_number':6,'multiline':False]
['text':'','line_number':7,'multiline':False]
['text':' Anyone is free to copy, modify, publish, use, compile, sell, or','line_number':8,'multiline':False]
['text':' distribute this software, either in source code form or as a compiled','line_number':9,'multiline':False]
['text':' binary, for any purpose, commercial or non-commercial, and by any','line_number':10,'multiline':False]
['text':' means.','line_number':11,'multiline':False]
['text':'','line_number':12,'multiline':False]
['text':' In jurisdictions that recognize copyright laws, the author or authors','line_number':13,'multiline':False]
['text':' of this software dedicate any and all copyright interest in the','line_number':14,'multiline':False]
['text':' software to the public domain. We make this dedication for the benefit','line_number':15,'multiline':False]
['text':' of the public at large and to the detriment of our heirs and','line_number':16,'multiline':False]
['text':' successors. We intend this dedication to be an overt act of','line_number':17,'multiline':False]
['text':' relinquishment in perpetuity of all present and future rights to this','line_number':18,'multiline':False]
['text':' software under copyright law.','line_number':19,'multiline':False]
['text':'','line_number':20,'multiline':False]
['text':' THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,','line_number':21,'multiline':False]
['text':' EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF','line_number':22,'multiline':False]
['text':' MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.','line_number':23,'multiline':False]
['text':' IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR','line_number':24,'multiline':False]
['text':' OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,','line_number':25,'multiline':False]
['text':' ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR','line_number':26,'multiline':False]
['text':' OTHER DEALINGS IN THE SOFTWARE.','line_number':27,'multiline':False]
['text':' test_checkpoint10.py','line_number':37,'multiline':False]
['text':' Test what happens if we create an inconsistent checkpoint and then try to','line_number':38,'multiline':False]
['text':' open it for read. No timestamps in this version.','line_number':39,'multiline':False]
['text':' Reopening and unnamed checkpoints will not work as intended because the reopen makes','line_number':56,'multiline':False]
['text':' a new checkpoint.','line_number':57,'multiline':False]
['text':' "expected" is a list of maps from values to counts of values.','line_number':85,'multiline':False]
['text':'self.session.begin_transaction()','line_number':90,'multiline':False]
['text':'for v in seen:','line_number':97,'multiline':False]
['text':'    self.prout("seen {}: {}".format(v if self.value_format == '8t' else v[0], seen[v]))','line_number':98,'multiline':False]
['text':'self.session.rollback_transaction()','line_number':100,'multiline':False]
['text':' Create a table.','line_number':109,'multiline':False]
['text':' Write some data.','line_number':123,'multiline':False]
['text':' Write this data out now so we aren't waiting for it while trying to','line_number':125,'multiline':False]
['text':' race with the later data.','line_number':126,'multiline':False]
['text':' Write some more data, and hold the transaction open.','line_number':129,'multiline':False]
['text':' Checkpoint in the background.','line_number':136,'multiline':False]
['text':' Wait for checkpoint to start before committing.','line_number':145,'multiline':False]
['text':' Reopen if desired to cycle the write generations.','line_number':158,'multiline':False]
['text':' There are two states we should be able to produce: one with the original','line_number':162,'multiline':False]
['text':' data and one with the additional data.','line_number':163,'multiline':False]
['text':'','line_number':164,'multiline':False]
['text':' It is ok to see either in the checkpoint (since the checkpoint could','line_number':165,'multiline':False]
['text':' reasonably include or not include the second txn) but not ok to see','line_number':166,'multiline':False]
['text':' an intermediate state.','line_number':167,'multiline':False]
['text':' For FLCS, because the table expands under uncommitted data, we should','line_number':172,'multiline':False]
['text':' see zeros once the additional data's been written (that is, always strictly','line_number':173,'multiline':False]
['text':' before the checkpoint) if we don't see the actual values.','line_number':174,'multiline':False]
['text':' Now read the checkpoint.','line_number':178,'multiline':False]
['text':' If we haven't died yet, pretend to crash and run RTS to see if the','line_number':181,'multiline':False]
['text':' checkpoint was inconsistent.','line_number':182,'multiline':False]
['text':' (This only works if we didn't reopen the connection, so don't bother if we did.)','line_number':183,'multiline':False]
['text':'','line_number':184,'multiline':False]
['text':' Disable this crosscheck until we have a more reliable way to generate inconsistent','line_number':185,'multiline':False]
['text':' checkpoints (checkpoints with a torn transaction) on demand. The current method','line_number':186,'multiline':False]
['text':' waits until the checkpoint has started to begin committing, but there's still a','line_number':187,'multiline':False]
['text':' race where the checkpoint thread starts another checkpoint after the commit is','line_number':188,'multiline':False]
['text':' finished. Consequently, occasional failures occur in the testbed, which are a waste','line_number':189,'multiline':False]
['text':' of everyone's time.','line_number':190,'multiline':False]
['text':'if not self.do_reopen:','line_number':191,'multiline':False]
['text':'    simulate_crash_restart(self, ".", "RESTART")','line_number':192,'multiline':False]
['text':'','line_number':193,'multiline':False]
['text':'    # Make sure we did get an inconsistent checkpoint.','line_number':194,'multiline':False]
['text':'    stat_cursor = self.session.open_cursor('statistics:', None, None)','line_number':195,'multiline':False]
['text':'    inconsistent_ckpt = stat_cursor[stat.conn.txn_rts_inconsistent_ckpt][2]','line_number':196,'multiline':False]
['text':'    stat_cursor.close()','line_number':197,'multiline':False]
['text':'    self.assertGreater(inconsistent_ckpt, 0)','line_number':198,'multiline':False]
