['text':'!/usr/bin/env python','line_number':1,'multiline':False]
['text':'','line_number':2,'multiline':False]
['text':' Public Domain 2014-present MongoDB, Inc.','line_number':3,'multiline':False]
['text':' Public Domain 2008-2014 WiredTiger, Inc.','line_number':4,'multiline':False]
['text':'','line_number':5,'multiline':False]
['text':' This is free and unencumbered software released into the public domain.','line_number':6,'multiline':False]
['text':'','line_number':7,'multiline':False]
['text':' Anyone is free to copy, modify, publish, use, compile, sell, or','line_number':8,'multiline':False]
['text':' distribute this software, either in source code form or as a compiled','line_number':9,'multiline':False]
['text':' binary, for any purpose, commercial or non-commercial, and by any','line_number':10,'multiline':False]
['text':' means.','line_number':11,'multiline':False]
['text':'','line_number':12,'multiline':False]
['text':' In jurisdictions that recognize copyright laws, the author or authors','line_number':13,'multiline':False]
['text':' of this software dedicate any and all copyright interest in the','line_number':14,'multiline':False]
['text':' software to the public domain. We make this dedication for the benefit','line_number':15,'multiline':False]
['text':' of the public at large and to the detriment of our heirs and','line_number':16,'multiline':False]
['text':' successors. We intend this dedication to be an overt act of','line_number':17,'multiline':False]
['text':' relinquishment in perpetuity of all present and future rights to this','line_number':18,'multiline':False]
['text':' software under copyright law.','line_number':19,'multiline':False]
['text':'','line_number':20,'multiline':False]
['text':' THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,','line_number':21,'multiline':False]
['text':' EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF','line_number':22,'multiline':False]
['text':' MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.','line_number':23,'multiline':False]
['text':' IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR','line_number':24,'multiline':False]
['text':' OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,','line_number':25,'multiline':False]
['text':' ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR','line_number':26,'multiline':False]
['text':' OTHER DEALINGS IN THE SOFTWARE.','line_number':27,'multiline':False]
['text':'','line_number':28,'multiline':False]
['text':' test_verbose03.py','line_number':35,'multiline':False]
['text':' Tests that when enabling JSON-encoded messages through the event handler interface, valid JSON','line_number':36,'multiline':False]
['text':' is produced. Valid messages are those that can be successfully parsed as JSON (meeting the JSON','line_number':37,'multiline':False]
['text':' standard) and subscribe to an expected schema (i.e. meet expected fields and types).','line_number':38,'multiline':False]
['text':' The maximum number of lines we will read from stdout/stderr in any given context.','line_number':40,'multiline':False]
['text':' Clean the stdout/stderr resource before yielding the context to the execution block. We only want to','line_number':45,'multiline':False]
['text':' capture the verbose output of the using context (ignoring any previous output up to this point).','line_number':46,'multiline':False]
['text':' Create a new connection with JSON format enabled.','line_number':51,'multiline':False]
['text':' Yield the connection resource to the execution context, allowing it to perform any necessary','line_number':59,'multiline':False]
['text':' operations on the connection (for generating the expected message output).','line_number':60,'multiline':False]
['text':' Read the contents of stdout/stderr to extract our messages.','line_number':62,'multiline':False]
['text':' Split the output into their individual messages. We want validate the contents of each message','line_number':64,'multiline':False]
['text':' to ensure we've only generated JSON messages.','line_number':65,'multiline':False]
['text':' If we've read the maximum number of characters, its likely that the last line is truncated ('...'). In this','line_number':69,'multiline':False]
['text':' case, trim the last message as we can't parse it.','line_number':70,'multiline':False]
['text':' Test the contents of each verbose message, ensuring we can successfully parse the JSON and that is subscribes','line_number':73,'multiline':False]
['text':' to the expected schema.','line_number':74,'multiline':False]
['text':' Close the connection resource and clean up the contents of the stdout/stderr file, flushing out the','line_number':84,'multiline':False]
['text':' verbose output that occurred during the execution of this context.','line_number':85,'multiline':False]
['text':' Test use cases passing sets of verbose categories, ensuring the verbose messages follow a valid JSON schema.','line_number':92,'multiline':False]
['text':' Close the initial connection. We will be opening new connections with different verbosity settings throughout','line_number':94,'multiline':False]
['text':' this test.','line_number':95,'multiline':False]
['text':' Test passing a single verbose category, 'api'.','line_number':102,'multiline':False]
['text':' Perform a set of simple API operations (table creations and cursor operations) to generate verbose API','line_number':104,'multiline':False]
['text':' messages.','line_number':105,'multiline':False]
['text':' Test passing multiple verbose categories, being 'api' & 'version'.','line_number':114,'multiline':False]
['text':' Perform a set of simple API operations (table creations and cursor operations) to generate verbose API','line_number':116,'multiline':False]
['text':' messages. Beyond opening the connection resource, we shouldn't need to do anything special for the version','line_number':117,'multiline':False]
['text':' category.','line_number':118,'multiline':False]
['text':' Test use cases generating error messages, ensuring the messages follow a valid JSON schema.','line_number':126,'multiline':False]
['text':' Close the initial connection. We will be opening new connections with different verbosity settings throughout','line_number':128,'multiline':False]
['text':' this test.','line_number':129,'multiline':False]
['text':' Test generating an error message, ensuring the JSON output is valid.','line_number':135,'multiline':False]
['text':' Attempt to begin a read transaction with an invalid timestamp, inorder to produce an error message.','line_number':137,'multiline':False]
['text':' We intend to generate a WiredTigerError. Catch and move forward.','line_number':145,'multiline':False]
