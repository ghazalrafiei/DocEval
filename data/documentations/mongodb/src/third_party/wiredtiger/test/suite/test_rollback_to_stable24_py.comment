['text':'!/usr/bin/env python','line_number':1,'multiline':False]
['text':'','line_number':2,'multiline':False]
['text':' Public Domain 2014-present MongoDB, Inc.','line_number':3,'multiline':False]
['text':' Public Domain 2008-2014 WiredTiger, Inc.','line_number':4,'multiline':False]
['text':'','line_number':5,'multiline':False]
['text':' This is free and unencumbered software released into the public domain.','line_number':6,'multiline':False]
['text':'','line_number':7,'multiline':False]
['text':' Anyone is free to copy, modify, publish, use, compile, sell, or','line_number':8,'multiline':False]
['text':' distribute this software, either in source code form or as a compiled','line_number':9,'multiline':False]
['text':' binary, for any purpose, commercial or non-commercial, and by any','line_number':10,'multiline':False]
['text':' means.','line_number':11,'multiline':False]
['text':'','line_number':12,'multiline':False]
['text':' In jurisdictions that recognize copyright laws, the author or authors','line_number':13,'multiline':False]
['text':' of this software dedicate any and all copyright interest in the','line_number':14,'multiline':False]
['text':' software to the public domain. We make this dedication for the benefit','line_number':15,'multiline':False]
['text':' of the public at large and to the detriment of our heirs and','line_number':16,'multiline':False]
['text':' successors. We intend this dedication to be an overt act of','line_number':17,'multiline':False]
['text':' relinquishment in perpetuity of all present and future rights to this','line_number':18,'multiline':False]
['text':' software under copyright law.','line_number':19,'multiline':False]
['text':'','line_number':20,'multiline':False]
['text':' THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,','line_number':21,'multiline':False]
['text':' EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF','line_number':22,'multiline':False]
['text':' MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.','line_number':23,'multiline':False]
['text':' IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR','line_number':24,'multiline':False]
['text':' OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,','line_number':25,'multiline':False]
['text':' ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR','line_number':26,'multiline':False]
['text':' OTHER DEALINGS IN THE SOFTWARE.','line_number':27,'multiline':False]
['text':' test_rollback_to_stable24.py','line_number':33,'multiline':False]
['text':' Exercise a recno-counting bug in column store.','line_number':34,'multiline':False]
['text':'','line_number':35,'multiline':False]
['text':' Prior to August 2021 a cell for which there's a pending stable update was counted (in the','line_number':36,'multiline':False]
['text':' column-store RTS code) as having RLE count 1 regardless of what the actual count was.','line_number':37,'multiline':False]
['text':'','line_number':38,'multiline':False]
['text':' In order to exploit this we have to do janky things with timestamps, but I think they're','line_number':39,'multiline':False]
['text':' allowable.','line_number':40,'multiline':False]
['text':'','line_number':41,'multiline':False]
['text':' Construct a cell with RLE count of 3 by writing 3 copies of aaaaaa at timestamp 10.','line_number':42,'multiline':False]
['text':' Then at the next key write bbbbbb at timestamp 10 and cccccc at timestamp 50.','line_number':43,'multiline':False]
['text':' Evict the page to reconcile it and produce the RLE cell.','line_number':44,'multiline':False]
['text':'','line_number':45,'multiline':False]
['text':' Then post an update to the first key of the RLE cell at timestamp 30 (to dddddd), and roll','line_number':46,'multiline':False]
['text':' back to 40.','line_number':47,'multiline':False]
['text':'','line_number':48,'multiline':False]
['text':' Reading at 40, we should at that point see dddddd and two aaaaaa's followed by bbbbbb, but','line_number':49,'multiline':False]
['text':' with the bad counting we get a key error on the second key.','line_number':50,'multiline':False]
['text':'','line_number':51,'multiline':False]
['text':' This happens because it goes to process key 4 but thinks it's on key 2; it finds that it','line_number':52,'multiline':False]
['text':' needs to roll back the value it's looking at (the cccccc from timestamp 50) but because it','line_number':53,'multiline':False]
['text':' thinks it's on key to it asks the history store for key 2 and finds nothing. (The bbbbbb','line_number':54,'multiline':False]
['text':' from timestamp 10 is in the history store, but under key 4; there's nothing in the history','line_number':55,'multiline':False]
['text':' store for key 2.) So it issues a tombstone, and issues it for key 2, so key 2 improperly','line_number':56,'multiline':False]
['text':' disappears.','line_number':57,'multiline':False]
['text':'','line_number':58,'multiline':False]
['text':' Run this test on rows as well as columns to help make sure the test itself is valid (and','line_number':59,'multiline':False]
['text':' stays so over time...)','line_number':60,'multiline':False]
['text':'','line_number':61,'multiline':False]
['text':' Don't run it on FLCS because FLCS doesn't do RLE encoding so there's no point.','line_number':62,'multiline':False]
['text':' Create a table without logging.','line_number':82,'multiline':False]
['text':' Pin oldest timestamp to 5.','line_number':86,'multiline':False]
['text':' Start stable timestamp at 5.','line_number':89,'multiline':False]
['text':' Write some keys at time 10.','line_number':100,'multiline':False]
['text':' Update key 4 at time 50.','line_number':108,'multiline':False]
['text':' Evict the page to force reconciliation.','line_number':115,'multiline':False]
['text':' Search the key to evict it.','line_number':118,'multiline':False]
['text':' Now update key 1 at time 30.','line_number':125,'multiline':False]
['text':' Roll back to 40.','line_number':132,'multiline':False]
['text':' Now read at 40.','line_number':136,'multiline':False]
