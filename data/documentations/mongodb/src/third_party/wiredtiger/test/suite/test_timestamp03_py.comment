['text':'!/usr/bin/env python','line_number':1,'multiline':False]
['text':'','line_number':2,'multiline':False]
['text':' Public Domain 2014-present MongoDB, Inc.','line_number':3,'multiline':False]
['text':' Public Domain 2008-2014 WiredTiger, Inc.','line_number':4,'multiline':False]
['text':'','line_number':5,'multiline':False]
['text':' This is free and unencumbered software released into the public domain.','line_number':6,'multiline':False]
['text':'','line_number':7,'multiline':False]
['text':' Anyone is free to copy, modify, publish, use, compile, sell, or','line_number':8,'multiline':False]
['text':' distribute this software, either in source code form or as a compiled','line_number':9,'multiline':False]
['text':' binary, for any purpose, commercial or non-commercial, and by any','line_number':10,'multiline':False]
['text':' means.','line_number':11,'multiline':False]
['text':'','line_number':12,'multiline':False]
['text':' In jurisdictions that recognize copyright laws, the author or authors','line_number':13,'multiline':False]
['text':' of this software dedicate any and all copyright interest in the','line_number':14,'multiline':False]
['text':' software to the public domain. We make this dedication for the benefit','line_number':15,'multiline':False]
['text':' of the public at large and to the detriment of our heirs and','line_number':16,'multiline':False]
['text':' successors. We intend this dedication to be an overt act of','line_number':17,'multiline':False]
['text':' relinquishment in perpetuity of all present and future rights to this','line_number':18,'multiline':False]
['text':' software under copyright law.','line_number':19,'multiline':False]
['text':'','line_number':20,'multiline':False]
['text':' THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,','line_number':21,'multiline':False]
['text':' EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF','line_number':22,'multiline':False]
['text':' MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.','line_number':23,'multiline':False]
['text':' IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR','line_number':24,'multiline':False]
['text':' OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,','line_number':25,'multiline':False]
['text':' ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR','line_number':26,'multiline':False]
['text':' OTHER DEALINGS IN THE SOFTWARE.','line_number':27,'multiline':False]
['text':'','line_number':28,'multiline':False]
['text':' test_timestamp03.py','line_number':29,'multiline':False]
['text':'   Timestamps: checkpoints','line_number':30,'multiline':False]
['text':'','line_number':31,'multiline':False]
['text':' Binary values.','line_number':69,'multiline':False]
['text':' Check that a cursor (optionally started in a new transaction), sees the','line_number':79,'multiline':False]
['text':' expected values.','line_number':80,'multiline':False]
['text':' Search for the expected items as well as iterating','line_number':89,'multiline':False]
['text':'','line_number':95,'multiline':False]
['text':' Take a backup of the database and verify that the value we want to','line_number':96,'multiline':False]
['text':' check exists in the tables the expected number of times.','line_number':97,'multiline':False]
['text':'','line_number':98,'multiline':False]
['text':' In FLCS the values are bytes, which are numbers, but the tests below are via','line_number':113,'multiline':False]
['text':' string inclusion rather than just equality of values. Not sure why that is, but','line_number':114,'multiline':False]
['text':' I'm going to assume there's a reason for it and not change things. Compensate.','line_number':115,'multiline':False]
['text':' Count how many times the check_value is present in the','line_number':119,'multiline':False]
['text':' logged timestamp table.','line_number':120,'multiline':False]
['text':' Count how many times the check_value is present in the','line_number':126,'multiline':False]
['text':' not logged timestamp table','line_number':127,'multiline':False]
['text':' Count how many times the check_value is present in the','line_number':133,'multiline':False]
['text':' logged non-timestamp table.','line_number':134,'multiline':False]
['text':' Count how many times the check_value is present in the','line_number':140,'multiline':False]
['text':' not logged non-timestamp table.','line_number':141,'multiline':False]
['text':' Check that a cursor sees the expected values after a checkpoint.','line_number':153,'multiline':False]
['text':' Take a checkpoint.  Make a copy of the database.  Open the','line_number':158,'multiline':False]
['text':' copy and verify whether or not the expected data is in there.','line_number':159,'multiline':False]
['text':'','line_number':173,'multiline':False]
['text':' Open four tables:','line_number':174,'multiline':False]
['text':' 1. Table is logged and uses timestamps.','line_number':175,'multiline':False]
['text':' 2. Table is not logged and uses timestamps.','line_number':176,'multiline':False]
['text':' 3. Table is logged and does not use timestamps.','line_number':177,'multiline':False]
['text':' 4. Table is not logged and does not use timestamps.','line_number':178,'multiline':False]
['text':'','line_number':179,'multiline':False]
['text':' Insert keys 1..100 each with timestamp=key, in some order','line_number':190,'multiline':False]
['text':' Scenario: 1','line_number':204,'multiline':False]
['text':' Check that we see all the inserted values as per transaction','line_number':205,'multiline':False]
['text':' visibility when reading with out the read_timestamp.','line_number':206,'multiline':False]
['text':' All tables should see all the values.','line_number':207,'multiline':False]
['text':' Scenario: 2','line_number':217,'multiline':False]
['text':' Check that we see the inserted values as per the timestamp.','line_number':218,'multiline':False]
['text':' Tables using the timestamps should see the values as per the given read_timestamp.','line_number':220,'multiline':False]
['text':' Logged tables don't use timestamps, so will always see the most recent value.','line_number':221,'multiline':False]
['text':' Tables not using the timestamps should see all the values.','line_number':226,'multiline':False]
['text':' Bump the oldest_timestamp, we're not going back...','line_number':232,'multiline':False]
['text':' Scenario: 3','line_number':238,'multiline':False]
['text':' Check that we see all the data values after moving the oldest_timestamp','line_number':239,'multiline':False]
['text':' to the current timestamp','line_number':240,'multiline':False]
['text':' All tables should see all the values.','line_number':241,'multiline':False]
['text':' Update the keys and checkpoint using the stable_timestamp.','line_number':251,'multiline':False]
['text':' Make sure a timestamp cursor is the last one to update.  This','line_number':255,'multiline':False]
['text':' tests the scenario for a bug we found where recovery replayed','line_number':256,'multiline':False]
['text':' the last record written into the log.','line_number':257,'multiline':False]
['text':' Scenario: 4','line_number':267,'multiline':False]
['text':' Check that we don't see the updated data of timestamp tables','line_number':268,'multiline':False]
['text':' with the read_timestamp as oldest_timestamp','line_number':269,'multiline':False]
['text':' Tables using the timestamps should see old values (i.e. value) only','line_number':270,'multiline':False]
['text':' Tables not using the timestamps should see updated values (i.e. value2).','line_number':275,'multiline':False]
['text':' Scenario: 4a','line_number':281,'multiline':False]
['text':' This scenario is same as earlier one with read_timestamp earlier than','line_number':282,'multiline':False]
['text':' oldest_timestamp and using the option of rounding read_timestamp to','line_number':283,'multiline':False]
['text':' the oldest_timestamp','line_number':284,'multiline':False]
['text':' Tables not using the timestamps should see updated values (i.e. value2).','line_number':292,'multiline':False]
['text':' Scenario: 5','line_number':300,'multiline':False]
['text':' Check that we see the updated values as per the timestamp.','line_number':301,'multiline':False]
['text':' Construct expected values.','line_number':302,'multiline':False]
['text':' update expected value','line_number':305,'multiline':False]
['text':' Tables using the timestamps should see the updated values as per','line_number':307,'multiline':False]
['text':' the given read_timestamp','line_number':308,'multiline':False]
['text':' Tables not using the timestamps should see all the data values as','line_number':309,'multiline':False]
['text':' updated values (i.e. value2).','line_number':310,'multiline':False]
['text':' Take a checkpoint using the given configuration.  Then verify','line_number':320,'multiline':False]
['text':' whether value2 appears in a copy of that data or not.','line_number':321,'multiline':False]
['text':' if use_timestamp is false, then all updates will be checkpointed.','line_number':324,'multiline':False]
['text':' Checkpoint will happen with stable_timestamp=100.','line_number':327,'multiline':False]
['text':' only table_ts_log and table_ts_nolog will have old values when logging is enabled','line_number':328,'multiline':False]
['text':' Take a checkpoint using the given configuration.  Then verify','line_number':331,'multiline':False]
['text':' whether value2 appears in a copy of that data or not.','line_number':332,'multiline':False]
['text':' if use_timestamp is false, then all updates will be checkpointed.','line_number':335,'multiline':False]
['text':' Checkpoint will happen with stable_timestamp=100.','line_number':338,'multiline':False]
['text':' only table_ts_nolog will have old values when logging is enabled','line_number':339,'multiline':False]
['text':' table_ts_nolog will not have any new values (i.e. value2)','line_number':341,'multiline':False]
['text':' table_ts_log will have all new values','line_number':347,'multiline':False]
['text':' Update the stable_timestamp to the latest, but not the','line_number':353,'multiline':False]
['text':' oldest_timestamp and make sure we can see the data.  Once the','line_number':354,'multiline':False]
['text':' stable_timestamp is moved we should see all keys with value2.','line_number':355,'multiline':False]
['text':' Scenario: 7','line_number':359,'multiline':False]
['text':' Update the keys and log_flush with out checkpoint.','line_number':360,'multiline':False]
['text':' Make sure a timestamp cursor is the last one to update.','line_number':364,'multiline':False]
['text':'','line_number':365,'multiline':False]
['text':' Flush the log but don't checkpoint','line_number':375,'multiline':False]
['text':' Take a backup and then verify whether value3 appears in a copy','line_number':378,'multiline':False]
['text':' of that data or not.  Both tables that are logged should see','line_number':379,'multiline':False]
['text':' all the data regardless of timestamps.  Both tables that are not','line_number':380,'multiline':False]
['text':' logged should not see any of it.','line_number':381,'multiline':False]
