['text':'-
 * Public Domain 2014-present MongoDB, Inc.
 * Public Domain 2008-2014 WiredTiger, Inc.
 *
 * This is free and unencumbered software released into the public domain.
 *
 * Anyone is free to copy, modify, publish, use, compile, sell, or
 * distribute this software, either in source code form or as a compiled
 * binary, for any purpose, commercial or non-commercial, and by any
 * means.
 *
 * In jurisdictions that recognize copyright laws, the author or authors
 * of this software dedicate any and all copyright interest in the
 * software to the public domain. We make this dedication for the benefit
 * of the public at large and to the detriment of our heirs and
 * successors. We intend this dedication to be an overt act of
 * relinquishment in perpetuity of all present and future rights to this
 * software under copyright law.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 * IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR
 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 * OTHER DEALINGS IN THE SOFTWARE.
 ','line_number':1,'multiline':True]
['text':'
 * JIRA ticket reference: WT-3135 Test case description: Each set of data is ordered and contains
 * five elements (0-4). We insert elements 1 and 3, and then do search_near and search for each
 * element. For each set of data, we perform these tests first using a custom collator, and second
 * using a custom collator and extractor. In each case there are index keys having variable length.
 * Failure mode: In the reported test case, the custom compare routine is given a truncated key to
 * compare, and the unpack functions return errors because the truncation appeared in the middle of
 * a key.
 ','line_number':30,'multiline':True]
['text':'
 * item_str_equal --
 *     TODO: Add a comment describing this function.
 ','line_number':46,'multiline':True]
['text':'
 * compare_int --
 *     TODO: Add a comment describing this function.
 ','line_number':56,'multiline':True]
['text':'
 * index_compare_primary --
 *     TODO: Add a comment describing this function.
 ','line_number':66,'multiline':True]
['text':'
 * index_compare_S --
 *     TODO: Add a comment describing this function.
 ','line_number':90,'multiline':True]
['text':'
 * index_compare_u --
 *     TODO: Add a comment describing this function.
 ','line_number':118,'multiline':True]
['text':'
 * index_extractor_u --
 *     TODO: Add a comment describing this function.
 ','line_number':146,'multiline':True]
['text':'
 * search_using_str --
 *     Check search() and search_near() using the test string indicated by test_index.
 ','line_number':166,'multiline':True]
['text':'
 * search_using_item --
 *     Check search() and search_near() using the test string indicated by test_index against a
 *     table containing a variable sized item.
 ','line_number':207,'multiline':True]
['text':'
 * test_one_set --
 *     For each set of data, perform tests.
 ','line_number':255,'multiline':True]
['text':'
     * Part 1: Using a custom collator, insert some elements and verify results from search_near.
     ','line_number':266,'multiline':True]
['text':' Insert only elements #1 and #3. ','line_number':276,'multiline':True]
['text':' Check all elements in def_collator index. ','line_number':286,'multiline':True]
['text':' Check all elements in custom_collator index ','line_number':292,'multiline':True]
['text':'
     * Part 2: perform the same checks using a custom collator and extractor.
     ','line_number':299,'multiline':True]
['text':'
 * main --
 *     TODO: Add a comment describing this function.
 ','line_number':334,'multiline':True]
['text':' Add any collators and extractors used by tests ','line_number':354,'multiline':True]
