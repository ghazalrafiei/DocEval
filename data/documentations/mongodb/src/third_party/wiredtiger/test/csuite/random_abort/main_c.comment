['text':'-
 * Public Domain 2014-present MongoDB, Inc.
 * Public Domain 2008-2014 WiredTiger, Inc.
 *
 * This is free and unencumbered software released into the public domain.
 *
 * Anyone is free to copy, modify, publish, use, compile, sell, or
 * distribute this software, either in source code form or as a compiled
 * binary, for any purpose, commercial or non-commercial, and by any
 * means.
 *
 * In jurisdictions that recognize copyright laws, the author or authors
 * of this software dedicate any and all copyright interest in the
 * software to the public domain. We make this dedication for the benefit
 * of the public at large and to the detriment of our heirs and
 * successors. We intend this dedication to be an overt act of
 * relinquishment in perpetuity of all present and future rights to this
 * software under copyright law.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 * IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR
 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 * OTHER DEALINGS IN THE SOFTWARE.
 ','line_number':1,'multiline':True]
['text':' Program working dir ','line_number':34,'multiline':True]
['text':'
 * These two names for the URI and file system must be maintained in tandem.
 ','line_number':36,'multiline':True]
['text':'
 * A minimum width of 10, along with zero filling, means that all the keys sort according to their
 * integer value, making each thread's key space distinct.
 ','line_number':76,'multiline':True]
['text':'
 * Maximum number of modifications that are allowed to perform cursor modify operation.
 ','line_number':82,'multiline':True]
['text':'
 * STR_MAX_VAL is set to MAX_VAL - 1 to account for the extra null character.
 ','line_number':88,'multiline':True]
['text':'
 * usage --
 *     TODO: Add a comment describing this function.
 ','line_number':96,'multiline':True]
['text':'
 * thread_run --
 *     TODO: Add a comment describing this function.
 ','line_number':113,'multiline':True]
['text':'
     * Set up a large value putting our id in it. Write it in there a bunch of times, but the rest
     * of the buffer can just be zero.
     ','line_number':157,'multiline':True]
['text':'
     * Keep a separate file with the records we wrote for checking.
     ','line_number':164,'multiline':True]
['text':'
         * Set to line buffering. But that is advisory only. We've seen cases where the result files
         * end up with partial lines.
         ','line_number':171,'multiline':True]
['text':' Make alternate threads operate on the column-store table. ','line_number':180,'multiline':True]
['text':'
     * Write our portion of the key space until we're killed.
     ','line_number':189,'multiline':True]
['text':' Record number 0 is invalid for columnar store, check it. ','line_number':194,'multiline':True]
['text':'
         * The value is the insert- with key appended.
         ','line_number':198,'multiline':True]
['text':'
         * Every 30th record write a very large record that exceeds the log buffer size. This forces
         * us to use the unbuffered path.
         ','line_number':209,'multiline':True]
['text':'
         * Save the key separately for checking later.
         ','line_number':225,'multiline':True]
['text':'
         * If configured, run compaction on database after each epoch of 100000 operations.
         ','line_number':231,'multiline':True]
['text':'
             * We may have several sessions trying to compact the same URI, in this case, EBUSY is
             * returned.
             ','line_number':240,'multiline':True]
['text':'
         * Decide what kind of operation can be performed on the already inserted data.
         ','line_number':247,'multiline':True]
['text':' Save the key separately for checking later.','line_number':260,'multiline':True]
['text':'
             * Make sure the modify operation is carried out in an snapshot isolation level with
             * explicit transaction.
             ','line_number':271,'multiline':True]
['text':'
                     * In case if we couldn't able to generate modify vectors, treat this change as
                     * a normal update operation.
                     ','line_number':287,'multiline':True]
['text':'
             * Save the key and new value separately for checking later.
             ','line_number':299,'multiline':True]
['text':' Dead code. To catch any op type misses ','line_number':305,'multiline':True]
['text':' NOTREACHED ','line_number':308,'multiline':True]
['text':'
 * fill_db --
 *     Child process creates the database and table, and then creates worker threads to add data
 *     until it is killed by the parent.
 ','line_number':313,'multiline':True]
['text':'
     * The threads never exit, so the child will just wait here until it is killed.
     ','line_number':356,'multiline':True]
['text':'
     * NOTREACHED
     ','line_number':361,'multiline':True]
['text':'
 * handler --
 *     TODO: Add a comment describing this function.
 ','line_number':372,'multiline':True]
['text':'
     * The core file will indicate why the child exited. Choose EINVAL here.
     ','line_number':383,'multiline':True]
['text':'
 * recover_and_verify --
 *     TODO: Add a comment describing this function.
 ','line_number':389,'multiline':True]
['text':'
         * Every alternative thread is operated on column-store table. Make sure that proper cursor
         * is used for verification of recovered records.
         ','line_number':418,'multiline':True]
['text':'
         * For every key in the saved file, verify that the key exists in the table after recovery.
         * If we're doing in-memory log buffering we never expect a record missing in the middle,
         * but records may be missing at the end. If we did write-no-sync, we expect every key to
         * have been recovered.
         ','line_number':444,'multiline':True]
['text':'
             * Consider anything other than clear success in getting the key to be EOF. We've seen
             * file system issues where the file ends with zeroes on a 4K boundary and does not
             * return EOF but a ret of zero.
             ','line_number':452,'multiline':True]
['text':'
             * If we're unlucky, the last line may be a partially written key at the end that can
             * result in a false negative error for a missing record. Detect it.
             ','line_number':459,'multiline':True]
['text':'
                 * If it is delete operation, make sure the record doesn't exist.
                 ','line_number':470,'multiline':True]
['text':'
                 * Consider anything other than clear success in getting the key to be EOF. We've
                 * seen file system issues where the file ends with zeroes on a 4K boundary and does
                 * not return EOF but a ret of zero.
                 ','line_number':475,'multiline':True]
['text':'
                 * If we're unlucky, the last line may be a partially written key at the end that
                 * can result in a false negative error for a missing record. Detect it.
                 ','line_number':483,'multiline':True]
['text':'
                     * We should never find an existing key after we have detected one missing for
                     * the thread.
                     ','line_number':505,'multiline':True]
['text':'
                 * If it is insert only operation, make sure the record exists
                 ','line_number':520,'multiline':True]
['text':'
                     * We should never find an existing key after we have detected one missing for
                     * the thread.
                     ','line_number':540,'multiline':True]
['text':'
                 * If it is modify operation, make sure value of the fetched record matches with
                 * saved.
                 ','line_number':549,'multiline':True]
['text':'
                 * Consider anything other than clear success in getting the key to be EOF. We've
                 * seen file system issues where the file ends with zeroes on a 4K boundary and does
                 * not return EOF but a ret of zero.
                 ','line_number':556,'multiline':True]
['text':'
                 * If we're unlucky, the last line may be a partially written key and value at the
                 * end that can result in a false negative error for a missing record. Detect the
                 * key.
                 ','line_number':564,'multiline':True]
['text':'
                     * We should never find an existing key after we have detected one missing for
                     * the thread.
                     ','line_number':592,'multiline':True]
['text':'
                         * Once the key exist in the database, there is no way that fetched data can
                         * mismatch with saved.
                         ','line_number':605,'multiline':True]
['text':' Dead code. To catch any op type misses ','line_number':616,'multiline':True]
['text':'
 * main --
 *     TODO: Add a comment describing this function.
 ','line_number':635,'multiline':True]
['text':' The working directory when we started ','line_number':650,'multiline':True]
['text':'
     * If the user wants to verify they need to tell us how many threads there were so we can find
     * the old record files.
     ','line_number':705,'multiline':True]
['text':' Remember the current working directory. ','line_number':714,'multiline':True]
['text':' Create the database, run the test, and fail. ','line_number':717,'multiline':True]
['text':' Create the test's home directory. ','line_number':719,'multiline':True]
['text':' Set up the test subdirectories. ','line_number':722,'multiline':True]
['text':' Set up LazyFS. ','line_number':728,'multiline':True]
['text':' Set up the rest of the test. ','line_number':732,'multiline':True]
['text':'
         * Fork a child to insert as many items. We will then randomly kill the child, run recovery
         * and make sure all items we wrote exist after recovery runs.
         ','line_number':751,'multiline':True]
['text':' child ','line_number':760,'multiline':True]
['text':' NOTREACHED ','line_number':762,'multiline':True]
['text':' parent ','line_number':765,'multiline':True]
['text':'
         * Sleep for the configured amount of time before killing the child. Start the timeout from
         * the time we notice that the child workers have created their record files. That allows
         * the test to run correctly on really slow machines.
         ','line_number':766,'multiline':True]
['text':'
                 * Wait for each record file to exist.
                 ','line_number':774,'multiline':True]
['text':'
         * !!! It should be plenty long enough to make sure more than
         * one log file exists.  If wanted, that check would be added
         * here.
         ','line_number':793,'multiline':True]
['text':'
     * !!! If we wanted to take a copy of the directory before recovery,
     * this is the place to do it.
     ','line_number':803,'multiline':True]
['text':' Copy the data to a separate folder for debugging purpose. ','line_number':810,'multiline':True]
['text':'
     * Clear the cache, if we are using LazyFS. Do this after we save the data for debugging
     * purposes, so that we can see what we might have lost. If we are using LazyFS, the underlying
     * directory shows the state that we'd get after we clear the cache.
     ','line_number':813,'multiline':True]
['text':'
     * Recover the database and verify whether all the records from all threads are present or not?
     ','line_number':821,'multiline':True]
['text':'
     * Clean up.
     ','line_number':826,'multiline':True]
['text':' Clean up the test directory. ','line_number':830,'multiline':True]
['text':' At this point, we are inside `home`, which we intend to delete. cd to the parent dir. ','line_number':834,'multiline':True]
['text':' Clean up LazyFS. ','line_number':838,'multiline':True]
['text':' Delete the work directory. ','line_number':842,'multiline':True]
