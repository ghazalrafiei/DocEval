['text':' Copyright (c) 2010-2012 extras developers. See LICENSE for details.','line_number':1,'multiline':False]
['text':' try_import('thing', foo) returns foo if 'thing' doesn't exist.','line_number':77,'multiline':False]
['text':' try_import('thing') returns None if 'thing' doesn't exist.','line_number':83,'multiline':False]
['text':' try_import('thing', foo) imports 'thing' and returns it if it's a','line_number':88,'multiline':False]
['text':' module that exists.','line_number':89,'multiline':False]
['text':' try_import('thing.another', foo) imports 'thing' and returns it if','line_number':95,'multiline':False]
['text':' it's a module that exists.','line_number':96,'multiline':False]
['text':' try_import('thing.another', foo) imports 'thing' and returns foo if','line_number':102,'multiline':False]
['text':' 'another' doesn't exist.','line_number':103,'multiline':False]
['text':' try_import('thing.object') imports 'thing' and returns','line_number':109,'multiline':False]
['text':' 'thing.object' if 'thing' is a module and 'object' is not.','line_number':110,'multiline':False]
['text':' the error callback is called on failures.','line_number':116,'multiline':False]
['text':' the error callback is called on failures to find an object','line_number':120,'multiline':False]
['text':' inside an existing module.','line_number':121,'multiline':False]
['text':' the error callback is not called on success.','line_number':125,'multiline':False]
['text':' try_imports('thing', foo) returns foo if 'thing' doesn't exist.','line_number':132,'multiline':False]
['text':' try_imports('thing') returns None if 'thing' doesn't exist.','line_number':143,'multiline':False]
['text':' try_imports('thing', foo) imports 'thing' and returns it if it's a','line_number':151,'multiline':False]
['text':' module that exists.','line_number':152,'multiline':False]
['text':' try_imports('thing.another', foo) imports 'thing' and returns it if','line_number':158,'multiline':False]
['text':' it's a module that exists.','line_number':159,'multiline':False]
['text':' try_imports('thing.another', foo) imports 'thing' and returns foo if','line_number':165,'multiline':False]
['text':' 'another' doesn't exist.','line_number':166,'multiline':False]
['text':' One error for every class that doesn't exist.','line_number':177,'multiline':False]
