['text':'-
 * Public Domain 2014-present MongoDB, Inc.
 * Public Domain 2008-2014 WiredTiger, Inc.
 *
 * This is free and unencumbered software released into the public domain.
 *
 * Anyone is free to copy, modify, publish, use, compile, sell, or
 * distribute this software, either in source code form or as a compiled
 * binary, for any purpose, commercial or non-commercial, and by any
 * means.
 *
 * In jurisdictions that recognize copyright laws, the author or authors
 * of this software dedicate any and all copyright interest in the
 * software to the public domain. We make this dedication for the benefit
 * of the public at large and to the detriment of our heirs and
 * successors. We intend this dedication to be an overt act of
 * relinquishment in perpetuity of all present and future rights to this
 * software under copyright law.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 * IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR
 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 * OTHER DEALINGS IN THE SOFTWARE.
 ','line_number':1,'multiline':True]
['text':'
 * testutil_die --
 *     Report an error and abort.
 ','line_number':44,'multiline':True]
['text':' Flush output to be sure it doesn't mix with fatal errors. ','line_number':53,'multiline':True]
['text':' Allow test programs to cleanup on fatal error. ','line_number':69,'multiline':True]
['text':' Drop core. ','line_number':73,'multiline':True]
['text':'
 * testutil_set_progname --
 *     Set the global program name for error handling.
 ','line_number':78,'multiline':True]
['text':'
     * On some Windows environments, such as Cygwin, argv[0] can use '/' as a path delimiter instead
     * of '\\', so check both just in case.
     ','line_number':86,'multiline':True]
['text':'
 * testutil_work_dir_from_path --
 *     Takes a buffer, its size and the intended work directory. Creates the full intended work
 *     directory in buffer.
 ','line_number':101,'multiline':True]
['text':' If no directory is provided, use the default. ','line_number':109,'multiline':True]
['text':'
 * testutil_deduce_build_dir --
 *     Deduce the build directory.
 ','line_number':119,'multiline':True]
['text':' This condition is when the full path name is used for argv0. ','line_number':135,'multiline':True]
['text':'
 * testutil_build_dir --
 *     Get the build directory.
 ','line_number':158,'multiline':True]
['text':'
     * To keep it simple, in order to get the build directory we require the user to set the build
     * directory from the command line options. We unfortunately can't depend on a known/constant
     * build directory (the user could have multiple out-of-source build directories). There's also
     * not really any OS-agnostic mechanisms we can here use to discover the build directory the
     * calling test binary exists in.
     ','line_number':165,'multiline':True]
['text':'
 * testutil_progress --
 *     Print a progress message to the progress file.
 ','line_number':178,'multiline':True]
['text':'
 * testutil_cleanup --
 *     Delete the existing work directory and free the options structure.
 ','line_number':197,'multiline':True]
['text':'
     * Make sure to close the progress file before we attempt to delete it; otherwise we will get an
     * error on Windows.
     ','line_number':207,'multiline':True]
['text':'
 * testutil_copy_data --
 *     Copy the data to a backup folder. Usually, the data copy is cleaned up by a call to
 *     testutil_clean_test_artifacts.
 ','line_number':224,'multiline':True]
['text':'
 * testutil_copy_data_opt --
 *     Copy the data to a backup folder. Directories and files with the specified "readonly prefix"
 *     will be hard-linked instead of copied for efficiency on supported platforms.
 ','line_number':243,'multiline':True]
['text':'
 * testutil_clean_test_artifacts --
 *     Clean any temporary files and folders created during test execution
 ','line_number':264,'multiline':True]
['text':'
 * testutil_create_backup_directory --
 *     TODO: Add a comment describing this function.
 ','line_number':286,'multiline':True]
['text':'
 * testutil_verify_src_backup --
 *     Verify a backup source home directory against a backup directory for changes to blocks that
 *     are not marked as changed. If an ID is given, then the backup directory is only compared
 *     against that ID, otherwise walk and compare against all IDs.
 ','line_number':304,'multiline':True]
['text':'
     * If we are given a source ID, use it. Otherwise query the backup and check against all IDs
     * that exist in the system.
     ','line_number':324,'multiline':True]
['text':'
         * Even if expected, we may not find any backup IDs depending on scheduling of backups,
         * checkpoints and killing of a process. So backup IDs may not have been saved to disk. If
         * opening the backup query cursor gets EINVAL there is nothing to do.
         ','line_number':329,'multiline':True]
['text':' Go through each id and open a backup cursor on it to test incremental values. ','line_number':354,'multiline':True]
['text':' We only want to check ranges for files. So if it is a full file copy, ignore. ','line_number':365,'multiline':True]
['text':'
                 * The file may not exist in the backup directory. If the stat call doesn't succeed
                 * skip this file. If we're skipping changed blocks go to the next one.
                 ','line_number':370,'multiline':True]
['text':'
                 * If the block is changed we cannot check it (for differences, for example). The
                 * source id may be older and we've already copied the block, or not, so we don't
                 * know if it should be different or not. But if a block is indicated as unchanged
                 * then it better be identical.
                 ','line_number':376,'multiline':True]
['text':' Compare the unchanged chunk. ','line_number':383,'multiline':True]
['text':'
 * testutil_copy_file --
 *     Copy a single file into the backup directories.
 ','line_number':405,'multiline':True]
['text':'
     * Save another copy of the original file to make debugging recovery errors easier.
     ','line_number':420,'multiline':True]
['text':'
 * testutil_copy_if_exists --
 *     Copy a file into a directory if it exists.
 ','line_number':432,'multiline':True]
['text':'
 * testutil_verify_model --
 *     Run the model verification tool on the database. The database must be closed, and it has to
 *     be created with debug logging and with log file removal set to false.
 ','line_number':446,'multiline':True]
['text':'
 * testutil_is_flag_set --
 *     Return if an environment variable flag is set.
 ','line_number':462,'multiline':True]
['text':'
     * This is a boolean test. So if the environment variable is set to any value other than 0, we
     * return success.
     ','line_number':475,'multiline':True]
['text':'
 * testutil_print_command_line --
 *     Print command line arguments for csuite tests.
 ','line_number':486,'multiline':True]
['text':'
 * testutil_is_dir_store --
 *     Check if the external storage is dir_store.
 ','line_number':501,'multiline':True]
['text':'
 * testutil_wiredtiger_open --
 *     Call wiredtiger_open with the tiered storage configuration if enabled.
 ','line_number':514,'multiline':True]
['text':'
 * testutil_sleep_wait --
 *     Wait for a process up to a number of seconds.
 ','line_number':538,'multiline':True]
['text':'
 * testutil_time_us --
 *     Return the number of microseconds since the epoch.
 ','line_number':565,'multiline':True]
['text':'
 * testutil_pareto --
 *     Given a random value, a range and a skew percentage. Return a value between [0 and range).
 ','line_number':578,'multiline':True]
['text':'
     * This Pareto calculation chooses out of range values about
     * 2% of the time, from my testing. That will lead to the
     * first item in the table being "hot".
     ','line_number':592,'multiline':True]
['text':'
 * dcalloc --
 *     Call calloc, dying on failure.
 ','line_number':602,'multiline':True]
['text':'
 * dmalloc --
 *     Call malloc, dying on failure.
 ','line_number':616,'multiline':True]
['text':'
 * drealloc --
 *     Call realloc, dying on failure.
 ','line_number':630,'multiline':True]
['text':'
 * dstrdup --
 *     Call strdup, dying on failure.
 ','line_number':644,'multiline':True]
['text':'
 * dstrndup --
 *     Call emulating strndup, dying on failure. Don't use actual strndup here as it is not
 *     supported within MSVC.
 ','line_number':658,'multiline':True]
['text':'
 * example_setup --
 *     Set the program name, create a home directory for the example programs.
 ','line_number':673,'multiline':True]
['text':' Unused variable ','line_number':682,'multiline':True]
['text':'
     * Create a clean test directory for this run of the test program if the environment variable
     * isn't already set (as is done by make check).
     ','line_number':686,'multiline':True]
['text':'
 * is_mounted --
 *     Check whether the given directory (other than /) is mounted. Works only on Linux.
 ','line_number':696,'multiline':True]
['text':'
 * testutil_system --
 *     A convenience function that combines snprintf, system, and testutil_check.
 ','line_number':718,'multiline':True]
