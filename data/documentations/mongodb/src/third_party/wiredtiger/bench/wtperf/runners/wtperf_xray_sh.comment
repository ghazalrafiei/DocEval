['text':'!/bin/bash','line_number':1,'multiline':False]
['text':' wtperf_xray.sh - run wtperf regression tests with xray profiling and generate','line_number':3,'multiline':False]
['text':' profiling information.','line_number':4,'multiline':False]
['text':'','line_number':5,'multiline':False]
['text':' This script assumes it is running in the directory with the wtperf executable.','line_number':6,'multiline':False]
['text':'','line_number':7,'multiline':False]
['text':' Usage','line_number':8,'multiline':False]
['text':' wtperf_xray.sh <wtperf-config-file> [-h output-directory] [wtperf other args]','line_number':9,'multiline':False]
['text':'','line_number':10,'multiline':False]
['text':' This script checks the first argument after the wtperf configuration to see','line_number':11,'multiline':False]
['text':' whether a home directory is being specified with the -h flag. If so, this','line_number':12,'multiline':False]
['text':' script will write its output files to that directory. Otherwise it will','line_number':13,'multiline':False]
['text':' default to WT_TEST (wtperf's default).','line_number':14,'multiline':False]
['text':'','line_number':15,'multiline':False]
['text':' Environment variables','line_number':16,'multiline':False]
['text':' XRAY_BINARY --','line_number':17,'multiline':False]
['text':'	The binary to use to inspect the xray log. (default: llvm-xray)','line_number':18,'multiline':False]
['text':' FLAME_GRAPH_PATH --','line_number':19,'multiline':False]
['text':'	The path to your copy of Brendan Gregg's FlameGraph script. (optional)','line_number':20,'multiline':False]
['text':'','line_number':21,'multiline':False]
['text':' When this is complete you can find information in the following files:','line_number':22,'multiline':False]
['text':' wtperf_account.txt --','line_number':23,'multiline':False]
['text':'	The top 10 functions where the workload is spending the most time along','line_number':24,'multiline':False]
['text':'	with a count, min, max and some percentiles for each one.','line_number':25,'multiline':False]
['text':' wtperf_stacks.txt --','line_number':26,'multiline':False]
['text':'	The top 10 stack traces where the workload is spending the most time.','line_number':27,'multiline':False]
['text':'	This calculation is done separately per thread.','line_number':28,'multiline':False]
['text':' wtperf_graph.svg --','line_number':29,'multiline':False]
['text':'	A function call graph showing what functions call each other. The edges','line_number':30,'multiline':False]
['text':'	are labelled and coloured proportionally to represent the ratio of time','line_number':31,'multiline':False]
['text':'	spent in each function call.','line_number':32,'multiline':False]
['text':' wtperf_flame.svg --','line_number':33,'multiline':False]
['text':'	A graph visualising stack traces and the time spent within each stack','line_number':34,'multiline':False]
['text':'	frame. If FLAME_GRAPH_PATH is not specified, this graph won't be','line_number':35,'multiline':False]
['text':'	generated.','line_number':36,'multiline':False]
['text':'','line_number':37,'multiline':False]
['text':' By default, wtperf uses WT_TEST as its home directory.','line_number':48,'multiline':False]
['text':' Check symbols to ensure we've compiled with XRay.','line_number':57,'multiline':False]
['text':' Use the -per-thread-stacks option to get the top 10 stacks for each thread.','line_number':101,'multiline':False]
['text':' We could use the -aggregate-threads flag here so get the top stacks for all threads (omitting duplicates).','line_number':102,'multiline':False]
['text':' Generate a DOT graph.','line_number':107,'multiline':False]
['text':' This file can be inspected in the Google Chrome Trace Viewer.','line_number':113,'multiline':False]
['text':' It seems to take a long time to generate this so just disable it for now.','line_number':114,'multiline':False]
['text':' $xray_bin convert -symbolize -instr_map=./wtperf -output-format=trace_event $xray_log | gzip > wtperf_trace.txt.gz','line_number':115,'multiline':False]
