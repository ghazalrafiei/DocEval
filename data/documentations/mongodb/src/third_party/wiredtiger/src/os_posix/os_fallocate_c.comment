['text':'-
 * Copyright (c) 2014-present MongoDB, Inc.
 * Copyright (c) 2008-2014 WiredTiger, Inc.
 *	All rights reserved.
 *
 * See the file LICENSE for redistribution information.
 ','line_number':1,'multiline':True]
['text':'
 * WT_CALL_FUNCTION --
 *	Call the underlying fallocate function, wrapped in a macro so there's only a single copy of
 * the mmap support code.
 ','line_number':16,'multiline':True]
['text':'
 * __posix_std_fallocate --
 *     Linux fallocate call.
 ','line_number':48,'multiline':True]
['text':'
 * __posix_sys_fallocate --
 *     Linux fallocate call (system call version).
 ','line_number':65,'multiline':True]
['text':'
 * __posix_posix_fallocate --
 *     POSIX fallocate call.
 ','line_number':82,'multiline':True]
['text':'
 * __wt_posix_file_extend --
 *     Extend the file.
 ','line_number':99,'multiline':True]
['text':'
     * The first file extension call: figure out what this system has.
     *
     * This function is configured as a locking call, so we know we're single-threaded through here.
     * Set the nolock function first, then publish the NULL replacement to ensure the handle
     * functions are always correct.
     *
     * We've seen Linux systems where posix_fallocate has corrupted existing file data (even though
     * that is explicitly disallowed by POSIX). FreeBSD and Solaris support posix_fallocate, and so
     * far we've seen no problems leaving it unlocked. Check for fallocate (and the system call
     * version of fallocate) first to avoid locking on Linux if at all possible.
     ','line_number':106,'multiline':True]
['text':'
     * Use the POSIX ftruncate call if there's nothing else, it can extend files. Note ftruncate
     * requires locking.
     ','line_number':139,'multiline':True]
