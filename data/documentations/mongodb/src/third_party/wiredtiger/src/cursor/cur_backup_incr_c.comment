['text':'-
 * Copyright (c) 2014-present MongoDB, Inc.
 * Copyright (c) 2008-2014 WiredTiger, Inc.
 *	All rights reserved.
 *
 * See the file LICENSE for redistribution information.
 ','line_number':1,'multiline':True]
['text':'
 * __wt_backup_load_incr --
 *     Load the incremental.
 ','line_number':11,'multiline':True]
['text':'
 * __curbackup_incr_blkmod --
 *     Get the block modifications for a tree from its metadata and fill in the backup cursor's
 *     information with it.
 ','line_number':26,'multiline':True]
['text':' Check if this is a file with no checkpointed content. ','line_number':45,'multiline':True]
['text':'
         * First see if we have information for this source identifier.
         ','line_number':56,'multiline':True]
['text':'
         * We found a match. If we have a name, then there should be granularity and nbits. The
         * granularity should be set to something. But nbits may be 0 if there are no blocks
         * currently modified.
         ','line_number':62,'multiline':True]
['text':'
         * The rename configuration string component was added later. So don't error if we don't
         * find it in the string. If we don't have it, we're not doing a rename. Otherwise rename
         * forces full copies, there is no need to traverse the blocks information.
         ','line_number':79,'multiline':True]
['text':'
             * We found a match. Load the block information into the cursor.
             ','line_number':93,'multiline':True]
['text':'
 * __curbackup_incr_next --
 *     WT_CURSOR->next method for the btree cursor type when configured with incremental_backup.
 ','line_number':112,'multiline':True]
['text':'
         * We don't have this object's incremental information or it's a forced file copy. If this
         * is a log file, use the full pathname that may include the log path.
         ','line_number':137,'multiline':True]
['text':'
         * By setting this to true, the next call will detect we're done in the code for the
         * incremental cursor below and return WT_NOTFOUND.
         ','line_number':152,'multiline':True]
['text':'
             * We don't have this object's incremental information, and it's not a full file copy.
             * Get a list of the block modifications for the file. The block modifications are from
             * the incremental identifier starting point. Walk the list looking for one with a
             * source of our id.
             ','line_number':162,'multiline':True]
['text':'
             * There are several cases where we do not have block modification information for
             * the file. They are described and handled as follows:
             *
             * 1. Renamed file. Always return the whole file information.
             * 2. Newly created file without checkpoint information. Return the whole
             *    file information.
             * 3. File created and checkpointed before incremental backups were configured.
             *    Return no file information as it was copied in the initial full backup.
             * 4. File that has not been modified since the previous incremental backup.
             *    Return no file information as there is no new information.
             ','line_number':169,'multiline':True]
['text':' We have initialized incremental information. ','line_number':194,'multiline':True]
['text':' The bit offset can be less than or equal to but never greater than the number of bits. ','line_number':198,'multiline':True]
['text':' Look for the next chunk that had modifications. ','line_number':200,'multiline':True]
['text':'
                 * Care must be taken to leave the bit_offset field set to the next offset bit so
                 * that the next call is set to the correct offset.
                 ','line_number':204,'multiline':True]
['text':' We either have this object's incremental information or we're done. ','line_number':218,'multiline':True]
['text':'
 * __wt_curbackup_free_incr --
 *     Free the duplicate backup cursor for a file-based incremental backup.
 ','line_number':237,'multiline':True]
['text':'
 * __wt_curbackup_open_incr --
 *     Initialize the duplicate backup cursor for a file-based incremental backup.
 ','line_number':254,'multiline':True]
['text':'
     * Inherit from the backup cursor but reset specific functions for incremental.
     ','line_number':274,'multiline':True]
['text':' All WiredTiger owned files are full file copies. ','line_number':282,'multiline':True]
['text':'
     * Set up the incremental backup information, if we are not forcing a full file copy. We need an
     * open cursor on the file. Open the backup checkpoint, confirming it exists.
     ','line_number':294,'multiline':True]
['text':'
         * Incremental cursors use file cursors, but in a non-standard way. Turn off cursor caching
         * as we open the cursor.
         ','line_number':301,'multiline':True]
