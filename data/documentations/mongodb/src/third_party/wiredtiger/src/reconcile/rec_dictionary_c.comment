['text':'-
 * Copyright (c) 2014-present MongoDB, Inc.
 * Copyright (c) 2008-2014 WiredTiger, Inc.
 *	All rights reserved.
 *
 * See the file LICENSE for redistribution information.
 ','line_number':1,'multiline':True]
['text':'
 * __rec_dictionary_skip_search --
 *     Search a dictionary skiplist.
 ','line_number':11,'multiline':True]
['text':'
     * Start at the highest skip level, then go as far as possible at each level before stepping
     * down to the next.
     ','line_number':21,'multiline':True]
['text':' Empty levels ','line_number':26,'multiline':True]
['text':'
         * Return any exact matches: we don't care in what search level we found a match.
         ','line_number':32,'multiline':True]
['text':' Exact match ','line_number':35,'multiline':True]
['text':' Drop down a level ','line_number':37,'multiline':True]
['text':' Keep going at this level ','line_number':40,'multiline':True]
['text':'
 * __rec_dictionary_skip_search_stack --
 *     Search a dictionary skiplist, returning an insert/remove stack.
 ','line_number':46,'multiline':True]
['text':'
     * Start at the highest skip level, then go as far as possible at each level before stepping
     * down to the next.
     ','line_number':57,'multiline':True]
['text':' Drop down a level ','line_number':63,'multiline':True]
['text':' Keep going at this level ','line_number':65,'multiline':True]
['text':'
 * __rec_dictionary_skip_insert --
 *     Insert an entry into the dictionary skip-list.
 ','line_number':68,'multiline':True]
['text':' Insert the new entry into the skiplist. ','line_number':78,'multiline':True]
['text':'
 * __wt_rec_dictionary_init --
 *     Allocate and initialize the dictionary.
 ','line_number':86,'multiline':True]
['text':' Free any previous dictionary. ','line_number':95,'multiline':True]
['text':'
 * __wt_rec_dictionary_free --
 *     Free the dictionary.
 ','line_number':109,'multiline':True]
['text':'
     * We don't correct dictionary_slots when we fail during allocation, but that's OK, the value is
     * either NULL or a memory reference to be free'd.
     ','line_number':121,'multiline':True]
['text':'
 * __wt_rec_dictionary_reset --
 *     Reset the dictionary when reconciliation restarts and when crossing a page boundary (a
 *     potential split).
 ','line_number':130,'multiline':True]
['text':'
 * __wt_rec_dictionary_lookup --
 *     Check the dictionary for a matching value on this page.
 ','line_number':144,'multiline':True]
['text':' Search the dictionary, and return any match we find. ','line_number':158,'multiline':True]
['text':'
     * We're not doing value replacement in the dictionary. We stop adding new entries if we run out
     * of empty dictionary slots (but continue to use the existing entries). I can't think of any
     * reason a leaf page value is more likely to be seen because it was seen more recently than
     * some other value: if we find working sets where that's not the case, it shouldn't be too
     * difficult to maintain a pointer which is the next dictionary slot to re-use.
     ','line_number':172,'multiline':True]
['text':'
     * Set the hash value, we'll add this entry into the dictionary when we write it into the page's
     * disk image buffer (because that's when we know where on the page it will be written).
     ','line_number':182,'multiline':True]
['text':' Not necessary, just cautious. ','line_number':187,'multiline':True]
