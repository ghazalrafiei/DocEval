['text':'-
 * Copyright (c) 2014-present MongoDB, Inc.
 * Copyright (c) 2008-2014 WiredTiger, Inc.
 *	All rights reserved.
 *
 * See the file LICENSE for redistribution information.
 ','line_number':1,'multiline':True]
['text':' Version file ','line_number':9,'multiline':True]
['text':' Locking file ','line_number':10,'multiline':True]
['text':' Base configuration ','line_number':12,'multiline':True]
['text':' Base config temp ','line_number':13,'multiline':True]
['text':' User configuration ','line_number':15,'multiline':True]
['text':'
 * Backup related WiredTiger files.
 ','line_number':17,'multiline':True]
['text':' Backup tmp file ','line_number':20,'multiline':True]
['text':' Export backup file ','line_number':21,'multiline':True]
['text':' Hot backup file ','line_number':22,'multiline':True]
['text':' Log incremental backup ','line_number':23,'multiline':True]
['text':' Log incremental source ','line_number':24,'multiline':True]
['text':' Metadata metadata ','line_number':26,'multiline':True]
['text':' Turtle temp file ','line_number':27,'multiline':True]
['text':' Metadata alias ','line_number':29,'multiline':True]
['text':' Metadata table ','line_number':30,'multiline':True]
['text':' Metadata copy ','line_number':31,'multiline':True]
['text':' Metadata table URI ','line_number':32,'multiline':True]
['text':' History store table ','line_number':34,'multiline':True]
['text':' History store table URI ','line_number':35,'multiline':True]
['text':' Chunk cache metadata table ','line_number':37,'multiline':True]
['text':' Chunk cache metadata table URI ','line_number':38,'multiline':True]
['text':' System URI prefix ','line_number':40,'multiline':True]
['text':' Checkpoint timestamp name ','line_number':41,'multiline':True]
['text':' Checkpoint timestamp URI ','line_number':42,'multiline':True]
['text':' Oldest timestamp name ','line_number':43,'multiline':True]
['text':' Oldest timestamp URI ','line_number':44,'multiline':True]
['text':' Checkpoint wall time ','line_number':45,'multiline':True]
['text':' Checkpoint write generation ','line_number':46,'multiline':True]
['text':' List of snapshots ','line_number':47,'multiline':True]
['text':' Snapshot minimum ','line_number':48,'multiline':True]
['text':' Snapshot maximum ','line_number':49,'multiline':True]
['text':' Snapshot count ','line_number':50,'multiline':True]
['text':' Checkpoint snapshot URI ','line_number':51,'multiline':True]
['text':' Checkpoint wall time ','line_number':52,'multiline':True]
['text':' Checkpoint write generation ','line_number':53,'multiline':True]
['text':' Base write gen URI ','line_number':54,'multiline':True]
['text':' Base write gen name ','line_number':55,'multiline':True]
['text':' Check whether a string is a legal URI for a btree object ','line_number':57,'multiline':True]
['text':'
 * Optimize comparisons against the metafile URI, flag handles that reference the metadata file.
 ','line_number':60,'multiline':True]
['text':' Metadata file ID ','line_number':64,'multiline':True]
['text':' Version keys ','line_number':67,'multiline':True]
['text':'
 * As a result of a data format change WiredTiger is not able to start on versions below 3.2.0, as
 * it will write out a data format that is not readable by those versions. These version numbers
 * provide such mechanism.
 ','line_number':70,'multiline':True]
['text':' Minimum version we can start on. ','line_number':75,'multiline':True]
['text':'
 * WT_WITH_TURTLE_LOCK --
 *	Acquire the turtle file lock, perform an operation, drop the lock.
 ','line_number':77,'multiline':True]
['text':'
 * Block based incremental backup structure. These live in the connection.
 ','line_number':87,'multiline':True]
['text':' User's name for this backup. ','line_number':92,'multiline':True]
['text':' Granularity of this backup. ','line_number':93,'multiline':True]
['text':' AUTOMATIC FLAG VALUE GENERATION START 0 ','line_number':94,'multiline':True]
['text':' There is no checkpoint, always do full file ','line_number':95,'multiline':True]
['text':' This entry is active ','line_number':96,'multiline':True]
['text':' This entry is valid ','line_number':97,'multiline':True]
['text':' AUTOMATIC FLAG VALUE GENERATION STOP 8 ','line_number':98,'multiline':True]
['text':'
 * Block modifications from an incremental identifier going forward.
 ','line_number':102,'multiline':True]
['text':'
 * At the default granularity, this is enough for blocks in a 2G file.
 ','line_number':105,'multiline':True]
['text':' Initial bits for bitmap. ','line_number':108,'multiline':True]
['text':' Number of bits in bitstring ','line_number':113,'multiline':True]
['text':' Zero bit offset for bitstring ','line_number':115,'multiline':True]
['text':' AUTOMATIC FLAG VALUE GENERATION START 0 ','line_number':117,'multiline':True]
['text':' Entry is from a rename ','line_number':118,'multiline':True]
['text':' Entry is valid ','line_number':119,'multiline':True]
['text':' AUTOMATIC FLAG VALUE GENERATION STOP 32 ','line_number':120,'multiline':True]
['text':'
 * WT_CKPT --
 *	Encapsulation of checkpoint information, shared by the metadata, the
 * btree engine, and the block manager.
 ','line_number':124,'multiline':True]
['text':' Name or NULL ','line_number':135,'multiline':True]
['text':'
     * Each internal checkpoint name is appended with a generation to make it a unique name. We're
     * solving two problems: when two checkpoints are taken quickly, the timer may not be unique
     * and/or we can even see time travel on the second checkpoint if we snapshot the time
     * in-between nanoseconds rolling over. Second, if we reset the generational counter when new
     * checkpoints arrive, we could logically re-create specific checkpoints, racing with cursors
     * open on those checkpoints. I can't think of any way to return incorrect results by racing
     * with those cursors, but it's simpler not to worry about it.
     ','line_number':137,'multiline':True]
['text':' Checkpoint order ','line_number':146,'multiline':True]
['text':' Wall clock time ','line_number':148,'multiline':True]
['text':' Checkpoint size ','line_number':150,'multiline':True]
['text':' Write generation ','line_number':152,'multiline':True]
['text':' Runtime write generation. ','line_number':153,'multiline':True]
['text':' Block-stored metadata ','line_number':155,'multiline':True]
['text':' Block-stored checkpoint ','line_number':156,'multiline':True]
['text':' Validity window ','line_number':160,'multiline':True]
['text':' Checkpoint cookie string ','line_number':162,'multiline':True]
['text':' Checkpoint cookie raw ','line_number':163,'multiline':True]
['text':' Block manager private ','line_number':165,'multiline':True]
['text':' AUTOMATIC FLAG VALUE GENERATION START 0 ','line_number':167,'multiline':True]
['text':' Checkpoint to be added ','line_number':168,'multiline':True]
['text':' Return list of modified blocks ','line_number':169,'multiline':True]
['text':' Checkpoint to be deleted ','line_number':170,'multiline':True]
['text':' Checkpoint is a fake ','line_number':171,'multiline':True]
['text':' Checkpoint requires update ','line_number':172,'multiline':True]
['text':' AUTOMATIC FLAG VALUE GENERATION STOP 32 ','line_number':173,'multiline':True]
['text':'
 * WT_CKPT_SNAPSHOT --
 *     Snapshot and timestamp information associated with a checkpoint.
 ','line_number':177,'multiline':True]
