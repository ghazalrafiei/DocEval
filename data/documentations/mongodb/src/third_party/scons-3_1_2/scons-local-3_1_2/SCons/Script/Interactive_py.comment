['text':'','line_number':1,'multiline':False]
['text':' Copyright (c) 2001 - 2019 The SCons Foundation','line_number':2,'multiline':False]
['text':'','line_number':3,'multiline':False]
['text':' Permission is hereby granted, free of charge, to any person obtaining','line_number':4,'multiline':False]
['text':' a copy of this software and associated documentation files (the','line_number':5,'multiline':False]
['text':' "Software"), to deal in the Software without restriction, including','line_number':6,'multiline':False]
['text':' without limitation the rights to use, copy, modify, merge, publish,','line_number':7,'multiline':False]
['text':' distribute, sublicense, and/or sell copies of the Software, and to','line_number':8,'multiline':False]
['text':' permit persons to whom the Software is furnished to do so, subject to','line_number':9,'multiline':False]
['text':' the following conditions:','line_number':10,'multiline':False]
['text':'','line_number':11,'multiline':False]
['text':' The above copyright notice and this permission notice shall be included','line_number':12,'multiline':False]
['text':' in all copies or substantial portions of the Software.','line_number':13,'multiline':False]
['text':'','line_number':14,'multiline':False]
['text':' THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY','line_number':15,'multiline':False]
['text':' KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE','line_number':16,'multiline':False]
['text':' WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND','line_number':17,'multiline':False]
['text':' NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE','line_number':18,'multiline':False]
['text':' LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION','line_number':19,'multiline':False]
['text':' OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION','line_number':20,'multiline':False]
['text':' WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.','line_number':21,'multiline':False]
['text':' TODO:','line_number':30,'multiline':False]
['text':'','line_number':31,'multiline':False]
['text':' This has the potential to grow into something with a really big life','line_number':32,'multiline':False]
['text':' of its own, which might or might not be a good thing.  Nevertheless,','line_number':33,'multiline':False]
['text':' here are some enhancements that will probably be requested some day','line_number':34,'multiline':False]
['text':' and are worth keeping in mind (assuming this takes off):','line_number':35,'multiline':False]
['text':' ','line_number':36,'multiline':False]
['text':' - A command to re-read / re-load the SConscript files.  This may','line_number':37,'multiline':False]
['text':'   involve allowing people to specify command-line options (e.g. -f,','line_number':38,'multiline':False]
['text':'   -I, --no-site-dir) that affect how the SConscript files are read.','line_number':39,'multiline':False]
['text':'','line_number':40,'multiline':False]
['text':' - Additional command-line options on the "build" command.','line_number':41,'multiline':False]
['text':'','line_number':42,'multiline':False]
['text':'   Of the supported options that seemed to make sense (after a quick','line_number':43,'multiline':False]
['text':'   pass through the list), the ones that seemed likely enough to be','line_number':44,'multiline':False]
['text':'   used are listed in the man page and have explicit test scripts.','line_number':45,'multiline':False]
['text':'','line_number':46,'multiline':False]
['text':'   These had code changed in Script/Main.py to support them, but didn't','line_number':47,'multiline':False]
['text':'   seem likely to be used regularly, so had no test scripts added:','line_number':48,'multiline':False]
['text':'','line_number':49,'multiline':False]
['text':'       build --diskcheck=*','line_number':50,'multiline':False]
['text':'       build --implicit-cache=*','line_number':51,'multiline':False]
['text':'       build --implicit-deps-changed=*','line_number':52,'multiline':False]
['text':'       build --implicit-deps-unchanged=*','line_number':53,'multiline':False]
['text':'','line_number':54,'multiline':False]
['text':'   These look like they should "just work" with no changes to the','line_number':55,'multiline':False]
['text':'   existing code, but like those above, look unlikely to be used and','line_number':56,'multiline':False]
['text':'   therefore had no test scripts added:','line_number':57,'multiline':False]
['text':'','line_number':58,'multiline':False]
['text':'       build --random','line_number':59,'multiline':False]
['text':'','line_number':60,'multiline':False]
['text':'   These I'm not sure about.  They might be useful for individual','line_number':61,'multiline':False]
['text':'   "build" commands, and may even work, but they seem unlikely enough','line_number':62,'multiline':False]
['text':'   that we'll wait until they're requested before spending any time on','line_number':63,'multiline':False]
['text':'   writing test scripts for them, or investigating whether they work.','line_number':64,'multiline':False]
['text':'','line_number':65,'multiline':False]
['text':'       build -q [???  is there a useful analog to the exit status?]','line_number':66,'multiline':False]
['text':'       build --duplicate=','line_number':67,'multiline':False]
['text':'       build --profile=','line_number':68,'multiline':False]
['text':'       build --max-drift=','line_number':69,'multiline':False]
['text':'       build --warn=*','line_number':70,'multiline':False]
['text':'       build --Y','line_number':71,'multiline':False]
['text':'','line_number':72,'multiline':False]
['text':' - Most of the SCons command-line options that the "build" command','line_number':73,'multiline':False]
['text':'   supports should be settable as default options that apply to all','line_number':74,'multiline':False]
['text':'   subsequent "build" commands.  Maybe a "set {option}" command that','line_number':75,'multiline':False]
['text':'   maps to "SetOption('{option}')".','line_number':76,'multiline':False]
['text':'','line_number':77,'multiline':False]
['text':' - Need something in the 'help' command that prints the -h output.','line_number':78,'multiline':False]
['text':'','line_number':79,'multiline':False]
['text':' - A command to run the configure subsystem separately (must see how','line_number':80,'multiline':False]
['text':'   this interacts with the new automake model).','line_number':81,'multiline':False]
['text':'','line_number':82,'multiline':False]
['text':' - Command-line completion of target names; maybe even of SCons options?','line_number':83,'multiline':False]
['text':'   Completion is something that's supported by the Python cmd module,','line_number':84,'multiline':False]
['text':'   so this should be doable without too much trouble.','line_number':85,'multiline':False]
['text':'','line_number':86,'multiline':False]
['text':' If the user didn't specify any targets on the command line,','line_number':173,'multiline':False]
['text':' use the list of default targets.','line_number':174,'multiline':False]
['text':' Call each of the Node's alter_targets() methods, which may','line_number':185,'multiline':False]
['text':' provide additional targets that ended up as part of the build','line_number':186,'multiline':False]
['text':' (the canonical example being a VariantDir() when we're building','line_number':187,'multiline':False]
['text':' from a source directory) and which we therefore need their','line_number':188,'multiline':False]
['text':' state cleared, too.','line_number':189,'multiline':False]
['text':' Clean up so that we can perform the next build correctly.','line_number':195,'multiline':False]
['text':'','line_number':196,'multiline':False]
['text':' We do this by walking over all the children of the targets,','line_number':197,'multiline':False]
['text':' and clearing their state.','line_number':198,'multiline':False]
['text':'','line_number':199,'multiline':False]
['text':' We currently have to re-scan each node to find their','line_number':200,'multiline':False]
['text':' children, because built nodes have already been partially','line_number':201,'multiline':False]
['text':' cleared and don't remember their children.  (In scons','line_number':202,'multiline':False]
['text':' 0.96.1 and earlier, this wasn't the case, and we didn't','line_number':203,'multiline':False]
['text':' have to re-scan the nodes.)','line_number':204,'multiline':False]
['text':'','line_number':205,'multiline':False]
['text':' Because we have to re-scan each node, we can't clear the','line_number':206,'multiline':False]
['text':' nodes as we walk over them, because we may end up rescanning','line_number':207,'multiline':False]
['text':' a cleared node as we scan a later node.  Therefore, only','line_number':208,'multiline':False]
['text':' store the list of nodes that need to be cleared as we walk','line_number':209,'multiline':False]
['text':' the tree, and clear them in a separate pass.','line_number':210,'multiline':False]
['text':'','line_number':211,'multiline':False]
['text':' XXX: Someone more familiar with the inner workings of scons','line_number':212,'multiline':False]
['text':' may be able to point out a more efficient way to do this.','line_number':213,'multiline':False]
['text':' If this file is in a VariantDir and has a','line_number':227,'multiline':False]
['text':' corresponding source file in the source tree, remember the','line_number':228,'multiline':False]
['text':' node in the source tree, too.  This is needed in','line_number':229,'multiline':False]
['text':' particular to clear cached implicit dependencies on the','line_number':230,'multiline':False]
['text':' source file, since the scanner will scan it if the','line_number':231,'multiline':False]
['text':' VariantDir was created with duplicate=0.','line_number':232,'multiline':False]
['text':' Call node.clear() to clear most of the state','line_number':251,'multiline':False]
['text':' node.clear() doesn't reset node.state, so call','line_number':253,'multiline':False]
['text':' node.set_state() to reset it manually','line_number':254,'multiline':False]
['text':' Debug:  Uncomment to verify that all Taskmaster reference','line_number':258,'multiline':False]
['text':' counts have been reset to zero.','line_number':259,'multiline':False]
['text':'if node.ref_count != 0:','line_number':260,'multiline':False]
['text':'    from SCons.Debug import Trace','line_number':261,'multiline':False]
['text':'    Trace('node %s, ref_count %s !!!\n' % (node, node.ref_count))','line_number':262,'multiline':False]
['text':' If help_<arg>() exists, then call it.','line_number':280,'multiline':False]
['text':' If bare 'help' is called, print this class's doc','line_number':330,'multiline':False]
['text':' string (if it has one).','line_number':331,'multiline':False]
['text':' Per "[Python-Dev] subprocess insufficiently platform-independent?"','line_number':347,'multiline':False]
['text':' http://mail.python.org/pipermail/python-dev/2008-August/081979.html "+','line_number':348,'multiline':False]
['text':' Doing the right thing with an argument list currently','line_number':349,'multiline':False]
['text':' requires different shell= values on Windows and Linux.','line_number':350,'multiline':False]
['text':' Local Variables:','line_number':372,'multiline':False]
['text':' tab-width:4','line_number':373,'multiline':False]
['text':' indent-tabs-mode:nil','line_number':374,'multiline':False]
['text':' End:','line_number':375,'multiline':False]
['text':' vim: set expandtab tabstop=4 shiftwidth=4:','line_number':376,'multiline':False]
