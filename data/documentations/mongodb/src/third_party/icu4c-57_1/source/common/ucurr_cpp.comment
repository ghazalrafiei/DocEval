['text':'
**********************************************************************
* Copyright (c) 2002-2016, International Business Machines
* Corporation and others.  All Rights Reserved.
**********************************************************************
','line_number':1,'multiline':True]
['text':'#define UCURR_DEBUG_EQUIV 1','line_number':31,'multiline':False]
['text':'#define UCURR_DEBUG 1','line_number':35,'multiline':False]
['text':' const because it's a reference to a resource bundle string. ','line_number':41,'multiline':True]
['text':'------------------------------------------------------------','line_number':46,'multiline':False]
['text':' Constants','line_number':47,'multiline':False]
['text':' Default currency meta data of last resort.  We try to use the','line_number':49,'multiline':False]
['text':' defaults encoded in the meta data resource bundle.  If there is a','line_number':50,'multiline':False]
['text':' configuration/build error and these are not available, we use these','line_number':51,'multiline':False]
['text':' hard-coded defaults (which should be identical).','line_number':52,'multiline':False]
['text':' POW10[i] = 10^i, i=0..MAX_POW10','line_number':55,'multiline':False]
['text':' Defines equivalent currency symbols.','line_number':61,'multiline':False]
['text':'------------------------------------------------------------','line_number':71,'multiline':False]
['text':' Resource tags','line_number':72,'multiline':False]
['text':'','line_number':73,'multiline':False]
['text':' Tag for meta-data, in root.','line_number':76,'multiline':False]
['text':' Tag for map from countries to currencies, in root.','line_number':79,'multiline':False]
['text':' Tag for default meta-data, in CURRENCY_META','line_number':82,'multiline':False]
['text':' Variant for legacy pre-euro mapping in CurrencyMap','line_number':85,'multiline':False]
['text':' Variant for legacy euro mapping in CurrencyMap','line_number':88,'multiline':False]
['text':' Variant delimiter','line_number':91,'multiline':False]
['text':' Variant for legacy euro mapping in CurrencyMap','line_number':95,'multiline':False]
['text':'static const char VAR_DELIM_EURO[] = "_EURO";','line_number':96,'multiline':False]
['text':' Tag for localized display names (symbols) of currencies','line_number':102,'multiline':False]
['text':' ISO codes mapping table','line_number':108,'multiline':False]
['text':' Currency symbol equivalances','line_number':112,'multiline':False]
['text':' EquivIterator iterates over all strings that are equivalent to a given','line_number':118,'multiline':False]
['text':' string, s. Note that EquivIterator will never yield s itself.','line_number':119,'multiline':False]
['text':' Constructor. hash stores the equivalence relationships; s is the string','line_number':122,'multiline':False]
['text':' for which we find equivalent strings.','line_number':123,'multiline':False]
['text':' next returns the next equivalent string or NULL if there are no more.','line_number':130,'multiline':False]
['text':' If s has no equivalent strings, next returns NULL on the first call.','line_number':131,'multiline':False]
['text':' makeEquivalent makes lhs and rhs equivalent by updating the equivalence','line_number':155,'multiline':False]
['text':' relations in hash accordingly.','line_number':156,'multiline':False]
['text':' already equivalent','line_number':165,'multiline':False]
['text':' Already equivalent','line_number':176,'multiline':False]
['text':' Not equivalent. Must join.','line_number':182,'multiline':False]
['text':' Neither lhs or rhs belong to an equivalence circle, so we form','line_number':186,'multiline':False]
['text':' a new equivalnce circle of just lhs and rhs.','line_number':187,'multiline':False]
['text':' lhs belongs to an equivalence circle, but rhs does not, so we link','line_number':191,'multiline':False]
['text':' rhs into lhs' circle.','line_number':192,'multiline':False]
['text':' rhs belongs to an equivlance circle, but lhs does not, so we link','line_number':196,'multiline':False]
['text':' lhs into rhs' circle.','line_number':197,'multiline':False]
['text':' Both lhs and rhs belong to different equivalnce circles. We link','line_number':201,'multiline':False]
['text':' them together to form one single, larger equivalnce circle.','line_number':202,'multiline':False]
['text':' countEquivalent counts how many strings are equivalent to s.','line_number':216,'multiline':False]
['text':' hash stores all the equivalnce relations.','line_number':217,'multiline':False]
['text':' countEquivalent does not include s itself in the count.','line_number':218,'multiline':False]
['text':'------------------------------------------------------------','line_number':237,'multiline':False]
['text':' Code','line_number':238,'multiline':False]
['text':'*
 * Cleanup callback func
 ','line_number':240,'multiline':True]
['text':'*
 * Cleanup callback func
 ','line_number':254,'multiline':True]
['text':'*
 * Deleter for OlsonToMetaMappingEntry
 ','line_number':266,'multiline':True]
['text':'*
 * Deleter for gCurrSymbolsEquiv.
 ','line_number':275,'multiline':True]
['text':'*
 * Unfortunately, we have to convert the UChar* currency code to char*
 * to use it as a resource key.
 ','line_number':284,'multiline':True]
['text':'*
 * Internal function to look up currency data.  Result is an array of
 * four integers.  The first is the fraction digits.  The second is the
 * rounding increment, or 0 if none.  The rounding increment is in
 * units of 10^(-fraction_digits).  The third and fourth are the same
 * except that they are those used in cash transations ( cashDigits
 * and cashRounding ).
 ','line_number':295,'multiline':True]
['text':' Get CurrencyMeta resource out of root locale file.  [This may','line_number':313,'multiline':False]
['text':' move out of the root locale file later; if it does, update this','line_number':314,'multiline':False]
['text':' code.]','line_number':315,'multiline':False]
['text':' Config/build error; return hard-coded defaults','line_number':321,'multiline':False]
['text':' Look up our currency, or if that's not available, then DEFAULT','line_number':325,'multiline':False]
['text':' local error code: soft failure','line_number':327,'multiline':False]
['text':' Config/build error; return hard-coded defaults','line_number':335,'multiline':False]
['text':' Config/build error; return hard-coded defaults','line_number':343,'multiline':False]
['text':' -------------------------------------','line_number':357,'multiline':False]
['text':'*
 * @see VARIANT_IS_EURO
 * @see VARIANT_IS_PREEURO
 ','line_number':359,'multiline':True]
['text':' !!! this is internal only, assumes buffer is not null and capacity is sufficient','line_number':367,'multiline':False]
['text':' Extract the country name and variant name.  We only','line_number':368,'multiline':False]
['text':' recognize two variant names, EURO and PREEURO.','line_number':369,'multiline':False]
['text':' ------------------------------------------','line_number':385,'multiline':False]
['text':'','line_number':386,'multiline':False]
['text':' Registration','line_number':387,'multiline':False]
['text':'','line_number':388,'multiline':False]
['text':'-------------------------------------------','line_number':389,'multiline':False]
['text':' don't use ICUService since we don't need fallback','line_number':391,'multiline':False]
['text':' register for the first time ','line_number':428,'multiline':True]
['text':' register cleanup of the mutex ','line_number':465,'multiline':True]
['text':' This doesn't need to be thread safe. It's for u_cleanup only. ','line_number':478,'multiline':True]
['text':' -------------------------------------','line_number':488,'multiline':False]
['text':' -------------------------------------','line_number':501,'multiline':False]
['text':' UCONFIG_NO_SERVICE ','line_number':511,'multiline':True]
['text':' -------------------------------------','line_number':513,'multiline':False]
['text':'*
 * Release all static memory held by currency.
 ','line_number':515,'multiline':True]
['text':'The declaration here is needed so currency_cleanup(void)
 * can call this function.
 ','line_number':518,'multiline':True]
['text':'
     * There might be some cached currency data or isoCodes data.
     ','line_number':529,'multiline':True]
['text':' -------------------------------------','line_number':540,'multiline':False]
['text':' there is a currency keyword. Try to see if it's valid','line_number':555,'multiline':False]
['text':' Normalize the currency keyword value to upper case. ','line_number':557,'multiline':True]
['text':' get country or country_variant in `id'','line_number':562,'multiline':False]
['text':' Remove variants, which is only needed for registration.','line_number':578,'multiline':False]
['text':' Look up the CurrencyMap element in the root bundle.','line_number':584,'multiline':False]
['text':'
                Get the second item when PREEURO is requested, and this is a known Euro country.
                If the requested variant is PREEURO, and this isn't a Euro country, assume
                that the country changed over to the Euro in the future. This is probably
                an old version of ICU that hasn't been updated yet. The latest currency is
                probably correct.
                ','line_number':591,'multiline':True]
['text':' We don't know about it.  Check to see if we support the variant.','line_number':612,'multiline':False]
['text':' There is nothing to fallback to. Report the failure/warning if possible.','line_number':618,'multiline':False]
['text':' end registration','line_number':635,'multiline':False]
['text':'*
 * Modify the given locale name by removing the rightmost _-delimited
 * element.  If there is none, empty the string ("" == root).
 * NOTE: The string "root" is not recognized; do not use it.
 * @return TRUE if the fallback happened; FALSE if locale is already
 * root ("").
 ','line_number':637,'multiline':True]
['text':'
    char *i = uprv_strrchr(loc, '_');
    if (i == NULL) {
        i = loc;
    }
    *i = 0;
 ','line_number':650,'multiline':True]
['text':' fillin','line_number':665,'multiline':False]
['text':' fillin','line_number':666,'multiline':False]
['text':' Look up the Currencies resource for the given locale.  The','line_number':669,'multiline':False]
['text':' Currencies locale data looks like this:','line_number':670,'multiline':False]
['text':'|en {','line_number':671,'multiline':False]
['text':'|  Currencies {','line_number':672,'multiline':False]
['text':'|    USD { "US$", "US Dollar" }','line_number':673,'multiline':False]
['text':'|    CHF { "Sw F", "Swiss Franc" }','line_number':674,'multiline':False]
['text':'|    INR { "=0#Rs|1#Re|1<Rs", "=0#Rupees|1#Rupee|1<Rupees" }','line_number':675,'multiline':False]
['text':'|    //...','line_number':676,'multiline':False]
['text':'|  }','line_number':677,'multiline':False]
['text':'|}','line_number':678,'multiline':False]
['text':' In the future, resource bundles may implement multi-level','line_number':690,'multiline':False]
['text':' fallback.  That is, if a currency is not found in the en_US','line_number':691,'multiline':False]
['text':' Currencies data, then the en Currencies data will be searched.','line_number':692,'multiline':False]
['text':' Currently, if a Currencies datum exists in en_US and en, the','line_number':693,'multiline':False]
['text':' en_US entry hides that in en.','line_number':694,'multiline':False]
['text':' We want multi-level fallback for this resource, so we implement','line_number':696,'multiline':False]
['text':' it manually.','line_number':697,'multiline':False]
['text':' Use a separate UErrorCode here that does not propagate out of','line_number':699,'multiline':False]
['text':' this function.','line_number':700,'multiline':False]
['text':' Normalize the keyword value to uppercase ','line_number':713,'multiline':True]
['text':' Fetch resource with multi-level resource inheritance fallback','line_number':722,'multiline':False]
['text':' If we've succeeded we're done.  Otherwise, try to fallback.','line_number':728,'multiline':False]
['text':' If that fails (because we are already at root) then exit.','line_number':729,'multiline':False]
['text':' We no longer support choice format data in names.  Data should not contain','line_number':737,'multiline':False]
['text':' choice patterns.','line_number':738,'multiline':False]
['text':' If we fail to find a match, use the ISO 4217 code','line_number':745,'multiline':False]
['text':' Should == ISO_CURRENCY_CODE_LENGTH, but maybe not...?','line_number':746,'multiline':False]
['text':' fillin','line_number':756,'multiline':False]
['text':' Look up the Currencies resource for the given locale.  The','line_number':758,'multiline':False]
['text':' Currencies locale data looks like this:','line_number':759,'multiline':False]
['text':'|en {','line_number':760,'multiline':False]
['text':'|  CurrencyPlurals {','line_number':761,'multiline':False]
['text':'|    USD{','line_number':762,'multiline':False]
['text':'|      one{"US dollar"}','line_number':763,'multiline':False]
['text':'|      other{"US dollars"}','line_number':764,'multiline':False]
['text':'|    }','line_number':765,'multiline':False]
['text':'|  }','line_number':766,'multiline':False]
['text':'|}','line_number':767,'multiline':False]
['text':' Use a separate UErrorCode here that does not propagate out of','line_number':773,'multiline':False]
['text':' this function.','line_number':774,'multiline':False]
['text':' Fetch resource with multi-level resource inheritance fallback','line_number':793,'multiline':False]
['text':'  fall back to "other"','line_number':798,'multiline':False]
['text':' fall back to long name in Currencies','line_number':803,'multiline':False]
['text':' If we've succeeded we're done.  Otherwise, try to fallback.','line_number':810,'multiline':False]
['text':' If that fails (because we are already at root) then exit.','line_number':811,'multiline':False]
['text':' If we fail to find a match, use the ISO 4217 code','line_number':821,'multiline':False]
['text':' Should == ISO_CURRENCY_CODE_LENGTH, but maybe not...?','line_number':822,'multiline':False]
['text':'========================================================================','line_number':828,'multiline':False]
['text':' Following are structure and function for parsing currency names','line_number':829,'multiline':False]
['text':' TODO: a better way to define this?','line_number':833,'multiline':False]
['text':' key','line_number':837,'multiline':False]
['text':' value','line_number':838,'multiline':False]
['text':' value length','line_number':839,'multiline':False]
['text':' flags','line_number':840,'multiline':False]
['text':' Comparason function used in quick sort.','line_number':853,'multiline':False]
['text':' Give a locale, return the maximum number of currency names associated with','line_number':876,'multiline':False]
['text':' this locale.','line_number':877,'multiline':False]
['text':' It gets currency names from resource bundles using fallback.','line_number':878,'multiline':False]
['text':' It is the maximum number because in the fallback chain, some of the ','line_number':879,'multiline':False]
['text':' currency names are duplicated.','line_number':880,'multiline':False]
['text':' For example, given locale as "en_US", the currency names get from resource','line_number':881,'multiline':False]
['text':' bundle in "en_US" and "en" are duplicated. The fallback mechanism will count','line_number':882,'multiline':False]
['text':' all currency names in "en_US" and "en".','line_number':883,'multiline':False]
['text':' TODO: ures_openDirect?','line_number':895,'multiline':False]
['text':' currency symbol','line_number':903,'multiline':False]
['text':' iso code','line_number':907,'multiline':False]
['text':' long name','line_number':908,'multiline':False]
['text':' currency plurals','line_number':912,'multiline':False]
['text':' Collect all available currency names associated with the given locale','line_number':947,'multiline':False]
['text':' (enable fallback chain).','line_number':948,'multiline':False]
['text':' Read currenc names defined in resource bundle "Currencies" and','line_number':949,'multiline':False]
['text':' "CurrencyPlural", enable fallback chain.','line_number':950,'multiline':False]
['text':' return the malloc-ed currency name arrays and the total number of currency','line_number':951,'multiline':False]
['text':' names in the array.','line_number':952,'multiline':False]
['text':' Look up the Currencies resource for the given locale.','line_number':962,'multiline':False]
['text':' Get maximum currency name count first.','line_number':971,'multiline':False]
['text':' currency name','line_number':985,'multiline':False]
['text':' currency ISO code','line_number':986,'multiline':False]
['text':' Using hash to remove duplicates caused by locale fallback','line_number':994,'multiline':False]
['text':' TODO: ures_openDirect','line_number':999,'multiline':False]
['text':' TODO: uhash_put wont change key/value?','line_number':1007,'multiline':False]
['text':' Add currency symbol.','line_number':1019,'multiline':False]
['text':' Add equivalent symbols','line_number':1024,'multiline':False]
['text':' Add currency long name.','line_number':1036,'multiline':False]
['text':' put (iso, 3, and iso) in to array','line_number':1044,'multiline':False]
['text':' Add currency ISO code.','line_number':1045,'multiline':False]
['text':' Must convert iso[] into Unicode','line_number':1048,'multiline':False]
['text':' currency plurals','line_number':1056,'multiline':False]
['text':' Using hash to remove duplicated ISO codes in fallback chain.','line_number':1063,'multiline':False]
['text':' TODO: remove duplicates between singular name and ','line_number':1077,'multiline':False]
['text':' currency long name?','line_number':1078,'multiline':False]
['text':' quick sort the struct','line_number':1100,'multiline':False]
['text':' fail on hashtable errors','line_number':1128,'multiline':False]
['text':' @param  currencyNames: currency names array','line_number':1139,'multiline':False]
['text':' @param  indexInCurrencyNames: the index of the character in currency names ','line_number':1140,'multiline':False]
['text':'         array against which the comparison is done','line_number':1141,'multiline':False]
['text':' @param  key: input text char to compare against','line_number':1142,'multiline':False]
['text':' @param  begin(IN/OUT): the begin index of matching range in currency names array','line_number':1143,'multiline':False]
['text':' @param  end(IN/OUT): the end index of matching range in currency names array.','line_number':1144,'multiline':False]
['text':' compute mid point.','line_number':1156,'multiline':False]
['text':' Find a match, and looking for ranges','line_number':1167,'multiline':False]
['text':' Now do two more binary searches. First, on the left side for','line_number':1168,'multiline':False]
['text':' the greatest L such that CurrencyNameStruct[L] < key.','line_number':1169,'multiline':False]
['text':' Now for the second search, finding the least R such that','line_number':1203,'multiline':False]
['text':' key < CurrencyNameStruct[R].','line_number':1204,'multiline':False]
['text':' now, found the range. check whether there is exact match','line_number':1237,'multiline':False]
['text':' find range and exact match.','line_number':1239,'multiline':False]
['text':' find range, but no exact match.','line_number':1241,'multiline':False]
['text':' failed to find range.','line_number':1247,'multiline':False]
['text':' Linear search "text" in "currencyNames".','line_number':1251,'multiline':False]
['text':' @param  begin, end: the begin and end index in currencyNames, within which','line_number':1252,'multiline':False]
['text':'         range should the search be performed.','line_number':1253,'multiline':False]
['text':' @param  textLen: the length of the text to be compared','line_number':1254,'multiline':False]
['text':' @param  maxMatchLen(IN/OUT): passing in the computed max matching length','line_number':1255,'multiline':False]
['text':'                              pass out the new max  matching length','line_number':1256,'multiline':False]
['text':' @param  maxMatchIndex: the index in currencyName which has the longest','line_number':1257,'multiline':False]
['text':'                        match with input text.','line_number':1258,'multiline':False]
['text':' Find longest match between "text" and currency names in "currencyNames".','line_number':1280,'multiline':False]
['text':' @param  total_currency_count: total number of currency names in CurrencyNames.','line_number':1281,'multiline':False]
['text':' @param  textLen: the length of the text to be compared','line_number':1282,'multiline':False]
['text':' @param  maxMatchLen: passing in the computed max matching length','line_number':1283,'multiline':False]
['text':'                              pass out the new max  matching length','line_number':1284,'multiline':False]
['text':' @param  maxMatchIndex: the index in currencyName which has the longest','line_number':1285,'multiline':False]
['text':'                        match with input text.','line_number':1286,'multiline':False]
['text':' It is a variant of binary search.','line_number':1297,'multiline':False]
['text':' For example, given the currency names in currencyNames array are:','line_number':1298,'multiline':False]
['text':' A AB ABC AD AZ B BB BBEX BBEXYZ BS C D E....','line_number':1299,'multiline':False]
['text':' and the input text is BBEXST','line_number':1300,'multiline':False]
['text':' The first round binary search search "B" in the text against','line_number':1301,'multiline':False]
['text':' the first char in currency names, and find the first char matching range','line_number':1302,'multiline':False]
['text':' to be "B BB BBEX BBEXYZ BS" (and the maximum matching "B").','line_number':1303,'multiline':False]
['text':' The 2nd round binary search search the second "B" in the text against','line_number':1304,'multiline':False]
['text':' the 2nd char in currency names, and narrow the matching range to','line_number':1305,'multiline':False]
['text':' "BB BBEX BBEXYZ" (and the maximum matching "BB").','line_number':1306,'multiline':False]
['text':' The 3rd round returnes the range as "BBEX BBEXYZ" (without changing','line_number':1307,'multiline':False]
['text':' maximum matching).','line_number':1308,'multiline':False]
['text':' The 4th round returns the same range (the maximum matching is "BBEX").','line_number':1309,'multiline':False]
['text':' The 5th round returns no matching range.','line_number':1310,'multiline':False]
['text':' matchIndex saves the one with exact match till the current point.','line_number':1312,'multiline':False]
['text':' [binarySearchBegin, binarySearchEnd] saves the matching range.','line_number':1313,'multiline':False]
['text':' did not find the range','line_number':1317,'multiline':False]
['text':' find an exact match for text from text[0] to text[index] ','line_number':1321,'multiline':False]
['text':' in currencyNames array.','line_number':1322,'multiline':False]
['text':' linear search if within threshold.','line_number':1327,'multiline':False]
['text':'========================= currency name cache =====================','line_number':1337,'multiline':False]
['text':'key','line_number':1339,'multiline':False]
['text':' currency names, case insensitive','line_number':1340,'multiline':False]
['text':' value','line_number':1341,'multiline':False]
['text':' currency name count','line_number':1342,'multiline':False]
['text':' currency symbols and ISO code, case sensitive','line_number':1343,'multiline':False]
['text':' value','line_number':1344,'multiline':False]
['text':' count','line_number':1345,'multiline':False]
['text':' reference count.','line_number':1346,'multiline':False]
['text':' reference count is set to 1 when an entry is put to cache.','line_number':1347,'multiline':False]
['text':' it increases by 1 before accessing, and decreased by 1 after accessing.','line_number':1348,'multiline':False]
['text':' The entry is deleted when ref count is zero, which means ','line_number':1349,'multiline':False]
['text':' the entry is replaced out of cache and no process is accessing it.','line_number':1350,'multiline':False]
['text':' Reserve 10 cache entries.','line_number':1357,'multiline':False]
['text':' Using an index to indicate which entry to be replaced when cache is full.','line_number':1359,'multiline':False]
['text':' It is a simple round-robin replacement strategy.','line_number':1360,'multiline':False]
['text':' Cache deletion','line_number':1365,'multiline':False]
['text':' Cache clean up','line_number':1385,'multiline':False]
['text':' in order to handle racing correctly,','line_number':1419,'multiline':False]
['text':' not putting 'search' in a separate function.','line_number':1420,'multiline':False]
['text':' check again.','line_number':1444,'multiline':False]
['text':' insert new entry to ','line_number':1454,'multiline':False]
['text':' currentCacheEntryIndex % CURRENCY_NAME_CACHE_NUM','line_number':1455,'multiline':False]
['text':' and remove the existing entry ','line_number':1456,'multiline':False]
['text':' currentCacheEntryIndex % CURRENCY_NAME_CACHE_NUM','line_number':1457,'multiline':False]
['text':' from cache.','line_number':1458,'multiline':False]
['text':' delete if the ref count is zero','line_number':1462,'multiline':False]
['text':' one for cache, one for reference','line_number':1474,'multiline':False]
['text':' case in-sensitive comparision against currency names','line_number':1501,'multiline':False]
['text':' not name only','line_number':1511,'multiline':False]
['text':' case sensitive comparison against currency symbols and ISO code.','line_number':1512,'multiline':False]
['text':' decrease reference count','line_number':1533,'multiline':False]
['text':' remove ','line_number':1536,'multiline':False]
['text':'*
 * Internal method.  Given a currency ISO code and a locale, return
 * the "static" currency name.  This is usually the same as the
 * UCURR_SYMBOL_NAME, but if the latter is a choice format, then the
 * format is applied to the number 2.0 (to yield the more common
 * plural) to return a static name.
 *
 * This is used for backward compatibility with old currency logic in
 * DecimalFormat and DecimalFormatSymbols.
 ','line_number':1543,'multiline':True]
['text':' If the meta data is invalid, return 0.0','line_number':1618,'multiline':False]
['text':' A rounding value of 0 or 1 indicates no rounding.','line_number':1622,'multiline':False]
['text':' Return (increment) / 10^(fracDigits).  The only actual rounding data,','line_number':1624,'multiline':False]
['text':' as of this writing, is CHF { 2, 5 }.','line_number':1625,'multiline':False]
['text':' UCurrCurrencyType ','line_number':1637,'multiline':True]
['text':'
Please keep this list in alphabetical order.
You can look at the CLDR supplemental data or ISO-4217 for the meaning of some
of these items.
ISO-4217: http://www.iso.org/iso/en/prods-services/popstds/currencycodeslist.html
','line_number':1641,'multiline':True]
['text':' Leave here to denote the end of the list.','line_number':1950,'multiline':False]
['text':'pErrorCode','line_number':1957,'multiline':True]
['text':' Count the number of items matching the type we are looking for. ','line_number':1962,'multiline':True]
['text':'pErrorCode','line_number':1974,'multiline':True]
['text':' Find the next in the list that matches the type we are looking for. ','line_number':1978,'multiline':True]
['text':' Currency codes are only 3 chars long ','line_number':1984,'multiline':True]
['text':' We enumerated too far. ','line_number':1989,'multiline':True]
['text':'pErrorCode','line_number':1997,'multiline':True]
['text':' Look up the CurrencyMap element in the root bundle.','line_number':2011,'multiline':False]
['text':' process each entry in currency map ','line_number':2016,'multiline':False]
['text':' get the currency resource','line_number':2018,'multiline':False]
['text':' process each currency ','line_number':2020,'multiline':False]
['text':' get the currency resource','line_number':2023,'multiline':False]
['text':' get the ISO code','line_number':2031,'multiline':False]
['text':' get from date','line_number':2039,'multiline':False]
['text':' get to date','line_number':2052,'multiline':False]
['text':' Note: gIsoCodes is const. Once set up here it is never altered,','line_number':2115,'multiline':False]
['text':'       and read only access is safe without synchronization.','line_number':2116,'multiline':False]
['text':' local variables','line_number':2211,'multiline':False]
['text':' get country or country_variant in `id'','line_number':2215,'multiline':False]
['text':'uint32_t variantType =','line_number':2216,'multiline':True]
['text':' Remove variants, which is only needed for registration.','line_number':2223,'multiline':False]
['text':' Look up the CurrencyMap element in the root bundle.','line_number':2230,'multiline':False]
['text':' Using the id derived from the local, get the currency data','line_number':2234,'multiline':False]
['text':' process each currency to see which one is valid for the given date','line_number':2237,'multiline':False]
['text':' get the currency resource','line_number':2242,'multiline':False]
['text':' get the from date','line_number':2245,'multiline':False]
['text':' close open resources','line_number':2279,'multiline':False]
['text':' end For loop','line_number':2283,'multiline':False]
['text':' end if (U_SUCCESS(localStatus))','line_number':2284,'multiline':False]
['text':' Check for errors','line_number':2288,'multiline':False]
['text':' There is nothing to fallback to. ','line_number':2291,'multiline':False]
['text':' Report the failure/warning if possible.','line_number':2292,'multiline':False]
['text':' no errors','line_number':2298,'multiline':False]
['text':' If we got here, either error code is invalid or','line_number':2304,'multiline':False]
['text':' some argument passed is no good.','line_number':2305,'multiline':False]
['text':' check the arguments passed','line_number':2323,'multiline':False]
['text':' local variables','line_number':2326,'multiline':False]
['text':' get country or country_variant in `id'','line_number':2331,'multiline':False]
['text':'uint32_t variantType =','line_number':2332,'multiline':True]
['text':' Remove variants, which is only needed for registration.','line_number':2338,'multiline':False]
['text':' Look up the CurrencyMap element in the root bundle.','line_number':2345,'multiline':False]
['text':' Using the id derived from the local, get the currency data','line_number':2349,'multiline':False]
['text':' process each currency to see which one is valid for the given date','line_number':2352,'multiline':False]
['text':' requested index is out of bounds','line_number':2358,'multiline':False]
['text':' get the currency resource','line_number':2365,'multiline':False]
['text':' get the from date','line_number':2369,'multiline':False]
['text':' close open resources','line_number':2411,'multiline':False]
['text':' check for loop exit','line_number':2415,'multiline':False]
['text':' end For loop','line_number':2421,'multiline':False]
['text':' Check for errors','line_number':2426,'multiline':False]
['text':' There is nothing to fallback to. ','line_number':2429,'multiline':False]
['text':' Report the failure/warning if possible.','line_number':2430,'multiline':False]
['text':' no errors','line_number':2436,'multiline':False]
['text':' write out the currency value','line_number':2439,'multiline':False]
['text':' return null terminated currency string','line_number':2448,'multiline':False]
['text':' illegal argument encountered','line_number':2453,'multiline':False]
['text':' If we got here, either error code is invalid or','line_number':2459,'multiline':False]
['text':' some argument passed is no good.','line_number':2460,'multiline':False]
['text':' Resolve region','line_number':2475,'multiline':False]
['text':' Read value from supplementalData','line_number':2479,'multiline':False]
['text':' With commonlyUsed=true, we do not put','line_number':2512,'multiline':False]
['text':' currencies for other regions in the','line_number':2513,'multiline':False]
['text':' result list.','line_number':2514,'multiline':False]
['text':' Currently, an empty ARRAY is mixed in.','line_number':2524,'multiline':False]
['text':' optimize - use the utf-8 string ','line_number':2536,'multiline':True]
['text':' Do nothing here...','line_number':2556,'multiline':False]
['text':' Currently active currency for the target country','line_number':2562,'multiline':False]
['text':' This could happen if no valid region is supplied in the input','line_number':2575,'multiline':False]
['text':' locale. In this case, we use the CLDR's default.','line_number':2576,'multiline':False]
['text':' Consolidate the list','line_number':2581,'multiline':False]
['text':' #if !UCONFIG_NO_FORMATTING ','line_number':2637,'multiline':True]
['text':'eof','line_number':2639,'multiline':False]
