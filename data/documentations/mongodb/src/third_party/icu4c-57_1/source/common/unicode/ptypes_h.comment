['text':'
******************************************************************************
*
*   Copyright (C) 1997-2012, International Business Machines
*   Corporation and others.  All Rights Reserved.
*
******************************************************************************
*
*  FILE NAME : ptypes.h
*
*   Date        Name        Description
*   05/13/98    nos         Creation (content moved here from ptypes.h).
*   03/02/99    stephen     Added AS400 support.
*   03/30/99    stephen     Added Linux support.
*   04/13/99    stephen     Reworked for autoconf.
*   09/18/08    srl         Moved basic types back to ptypes.h from platform.h
******************************************************************************
','line_number':1,'multiline':True]
['text':'*
 * \file
 * \brief C API: Definitions of integer types of various widths
 ','line_number':20,'multiline':True]
['text':'*
 * \def __STDC_LIMIT_MACROS
 * According to the Linux stdint.h, the ISO C99 standard specifies that in C++ implementations
 * macros like INT32_MIN and UINTPTR_MAX should only be defined if explicitly requested.
 * We need to define __STDC_LIMIT_MACROS before including stdint.h in C++ code
 * that uses such limit macros.
 * @internal
 ','line_number':28,'multiline':True]
['text':' NULL, size_t, wchar_t ','line_number':40,'multiline':True]
['text':'
 * If all compilers provided all of the C99 headers and types,
 * we would just unconditionally #include <stdint.h> here
 * and not need any of the stuff after including platform.h.
 ','line_number':43,'multiline':True]
['text':' Find out if we have stdint.h etc. ','line_number':49,'multiline':True]
['text':'===========================================================================','line_number':52,'multiline':True]
['text':' Generic data types                                                        ','line_number':53,'multiline':True]
['text':'===========================================================================','line_number':54,'multiline':True]
['text':' If your platform does not have the <stdint.h> header, you may
   need to edit the typedefs in the #else section below.
   Use #if...#else...#endif with predefined compiler macros if possible. ','line_number':56,'multiline':True]
['text':'
 * We mostly need <stdint.h> (which defines the standard integer types) but not <inttypes.h>.
 * <inttypes.h> includes <stdint.h> and adds the printf/scanf helpers PRId32, SCNx16 etc.
 * which we almost never use, plus stuff like imaxabs() which we never use.
 ','line_number':61,'multiline':True]
['text':' The features header is needed to get (u)int64_t sometimes. ','line_number':69,'multiline':True]
['text':' z/OS has <stdint.h>, but some versions are missing uint8_t (APAR PK62248). ','line_number':71,'multiline':True]
['text':' U_PLATFORM == U_PF_OS390 ','line_number':76,'multiline':True]
['text':' neither U_HAVE_STDINT_H nor U_HAVE_INTTYPES_H ','line_number':82,'multiline':True]
['text':' U_HAVE_STDINT_H / U_HAVE_INTTYPES_H ','line_number':124,'multiline':True]
['text':' _PTYPES_H ','line_number':126,'multiline':True]
