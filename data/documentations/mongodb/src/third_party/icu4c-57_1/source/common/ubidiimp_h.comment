['text':'
******************************************************************************
*
*   Copyright (C) 1999-2016, International Business Machines
*   Corporation and others.  All Rights Reserved.
*
******************************************************************************
*   file name:  ubidiimp.h
*   encoding:   US-ASCII
*   tab size:   8 (not used)
*   indentation:4
*
*   created on: 1999aug06
*   created by: Markus W. Scherer, updated by Matitiahu Allouche
','line_number':1,'multiline':True]
['text':' miscellaneous definitions ---------------------------------------------- ','line_number':25,'multiline':True]
['text':'  Comparing the description of the BiDi algorithm with this implementation
    is easier with the same names for the BiDi types in the code as there.
    See UCharDirection in uchar.h .
','line_number':30,'multiline':True]
['text':'  0 ','line_number':35,'multiline':True]
['text':'  1 ','line_number':36,'multiline':True]
['text':'  2 ','line_number':37,'multiline':True]
['text':'  3 ','line_number':38,'multiline':True]
['text':'  4 ','line_number':39,'multiline':True]
['text':'  5 ','line_number':40,'multiline':True]
['text':'  6 ','line_number':41,'multiline':True]
['text':'  7 ','line_number':42,'multiline':True]
['text':'  8 ','line_number':43,'multiline':True]
['text':'  9 ','line_number':44,'multiline':True]
['text':' 10 ','line_number':45,'multiline':True]
['text':' 11 ','line_number':46,'multiline':True]
['text':' 12 ','line_number':47,'multiline':True]
['text':' 13 ','line_number':48,'multiline':True]
['text':' 14 ','line_number':49,'multiline':True]
['text':' 15 ','line_number':50,'multiline':True]
['text':' 16 ','line_number':51,'multiline':True]
['text':' 17 ','line_number':52,'multiline':True]
['text':' 18 ','line_number':53,'multiline':True]
['text':' 19 ','line_number':54,'multiline':True]
['text':' 20 ','line_number':55,'multiline':True]
['text':' 21 ','line_number':56,'multiline':True]
['text':' 22 ','line_number':57,'multiline':True]
['text':' EN after W7 ','line_number':58,'multiline':True]
['text':' 23 ','line_number':58,'multiline':True]
['text':' EN not subject to W7 ','line_number':59,'multiline':True]
['text':' 24 ','line_number':59,'multiline':True]
['text':'  Sometimes, bit values are more appropriate
    to deal with directionality properties.
    Abbreviations in these macro names refer to names
    used in the BiDi algorithm.
','line_number':63,'multiline':True]
['text':' special flag for multiple runs from explicit embedding codes ','line_number':71,'multiline':True]
['text':' are there any characters that are LTR or RTL? ','line_number':74,'multiline':True]
['text':' explicit embedding codes ','line_number':80,'multiline':True]
['text':' explicit isolate codes ','line_number':83,'multiline':True]
['text':' paragraph and segment separators ','line_number':88,'multiline':True]
['text':' all types that are counted as White Space or Neutral in some steps ','line_number':91,'multiline':True]
['text':' types that are neutrals or could becomes neutrals in (Wn) ','line_number':94,'multiline':True]
['text':'
 *  These types may be changed to "e",
 *  the embedding type (L or R) of the run,
 *  in the BiDi algorithm (N2)
 ','line_number':97,'multiline':True]
['text':' the dirProp's L and R are defined to 0 and 1 values in UCharDirection ','line_number':104,'multiline':True]
['text':'
 *  The following bit is used for the directional isolate status.
 *  Stack entries corresponding to isolate sequences are greater than ISOLATE.
 ','line_number':109,'multiline':True]
['text':' number of paras entries allocated initially without malloc ','line_number':122,'multiline':True]
['text':' number of isolate entries allocated initially without malloc ','line_number':124,'multiline':True]
['text':' number of isolate run entries for paired brackets allocated initially without malloc ','line_number':126,'multiline':True]
['text':' Run structure for reordering --------------------------------------------- ','line_number':132,'multiline':True]
['text':' flags for Opening.flags ','line_number':145,'multiline':True]
['text':' position of opening bracket ','line_number':151,'multiline':True]
['text':' matching char or -position of closing bracket ','line_number':152,'multiline':True]
['text':' position of last strong char found before opening ','line_number':153,'multiline':True]
['text':' bits for L or R/AL found within the pair ','line_number':154,'multiline':True]
['text':' L or R according to last strong char before opening ','line_number':155,'multiline':True]
['text':' to complete a nice multiple of 4 chars ','line_number':156,'multiline':True]
['text':' position of char determining context ','line_number':160,'multiline':True]
['text':' index of first opening entry for this run ','line_number':161,'multiline':True]
['text':' index after last opening entry for this run ','line_number':162,'multiline':True]
['text':' level of this run ','line_number':163,'multiline':True]
['text':' bidi class of last strong char found in this run ','line_number':164,'multiline':True]
['text':' bidi class of last base char found in this run ','line_number':165,'multiline':True]
['text':' L or R to use as context for following openings ','line_number':166,'multiline':True]
['text':' array of opening entries which should be enough in most cases; no malloc() ','line_number':171,'multiline':True]
['text':' pointer to current array of entries ','line_number':173,'multiline':True]
['text':' number of allocated entries ','line_number':174,'multiline':True]
['text':' index of last used entry ','line_number':175,'multiline':True]
['text':' array of nested isolated sequence entries; can never excess UBIDI_MAX_EXPLICIT_LEVEL
       + 1 for index 0, + 1 for before the first isolated sequence ','line_number':176,'multiline':True]
['text':' reordering mode for NUMBERS_SPECIAL ','line_number':179,'multiline':True]
['text':' first character of the run; b31 indicates even/odd level ','line_number':190,'multiline':True]
['text':' last visual position of the run +1 ','line_number':191,'multiline':True]
['text':' if >0, flags for inserting LRM/RLM before/after run,
                               if <0, count of bidi controls within run            ','line_number':192,'multiline':True]
['text':' in a Run, logicalStart will get this bit set if the run level is odd ','line_number':196,'multiline':True]
['text':'* BiDi control code points ','line_number':211,'multiline':True]
['text':' InsertPoints structure for noting where to put BiDi marks ---------------- ','line_number':230,'multiline':True]
['text':' position in text ','line_number':233,'multiline':True]
['text':' flag for LRM/RLM, before/after ','line_number':234,'multiline':True]
['text':' number of points allocated ','line_number':238,'multiline':True]
['text':' number of points used ','line_number':239,'multiline':True]
['text':' number of points confirmed ','line_number':240,'multiline':True]
['text':' for eventual memory shortage ','line_number':241,'multiline':True]
['text':' pointer to array of points ','line_number':242,'multiline':True]
['text':' UBiDi structure ----------------------------------------------------------- ','line_number':246,'multiline':True]
['text':' pointer to parent paragraph object (pointer to self if this object is
     * a paragraph object); set to NULL in a newly opened object; set to a
     * real value after a successful execution of ubidi_setPara or ubidi_setLine
     ','line_number':249,'multiline':True]
['text':' alias pointer to the current text ','line_number':257,'multiline':True]
['text':' length of the current text ','line_number':260,'multiline':True]
['text':' if the UBIDI_OPTION_STREAMING option is set, this is the length
     * of text actually processed by ubidi_setPara, which may be shorter than
     * the original length.
     * Otherwise, it is identical to the original length.
     ','line_number':263,'multiline':True]
['text':' if the UBIDI_OPTION_REMOVE_CONTROLS option is set, and/or
     * marks are allowed to be inserted in one of the reordering mode, the
     * length of the result string may be different from the processed length.
     ','line_number':270,'multiline':True]
['text':' memory sizes in bytes ','line_number':276,'multiline':True]
['text':' allocated memory ','line_number':279,'multiline':True]
['text':' indicators for whether memory may be allocated after ubidi_open() ','line_number':287,'multiline':True]
['text':' arrays with one value per text-character ','line_number':290,'multiline':True]
['text':' are we performing an approximation of the "inverse BiDi" algorithm? ','line_number':294,'multiline':True]
['text':' are we using the basic algorithm or its variation? ','line_number':297,'multiline':True]
['text':' UBIDI_REORDER_xxx values must be ordered so that all the regular
     * logical to visual modes come first, and all inverse BiDi modes
     * come last.
     ','line_number':300,'multiline':True]
['text':' bitmask for reordering options ','line_number':306,'multiline':True]
['text':' must block separators receive level 0? ','line_number':309,'multiline':True]
['text':' the paragraph level ','line_number':312,'multiline':True]
['text':' original paraLevel when contextual ','line_number':314,'multiline':True]
['text':' must be one of UBIDI_DEFAULT_xxx or 0 if not contextual ','line_number':315,'multiline':True]
['text':' context data ','line_number':318,'multiline':True]
['text':' the following is set in ubidi_setPara, used in processPropertySeq ','line_number':324,'multiline':True]
['text':' pointer to levels state table pair ','line_number':325,'multiline':True]
['text':' the overall paragraph or line directionality - see UBiDiDirection ','line_number':327,'multiline':True]
['text':' flags is a bit set for which directional properties are in the text ','line_number':330,'multiline':True]
['text':' lastArabicPos is index to the last AL in the text, -1 if none ','line_number':333,'multiline':True]
['text':' characters after trailingWSStart are WS and are ','line_number':336,'multiline':True]
['text':' implicitly at the paraLevel (rule (L1)) - levels may not reflect that ','line_number':337,'multiline':True]
['text':' fields for paragraph handling ','line_number':340,'multiline':True]
['text':' set in getDirProps() ','line_number':341,'multiline':True]
['text':' filled in getDirProps() ','line_number':342,'multiline':True]
['text':' for relatively short text, we only need a tiny array of paras (no malloc()) ','line_number':345,'multiline':True]
['text':' fields for line reordering ','line_number':348,'multiline':True]
['text':' ==-1: runs not set up yet ','line_number':349,'multiline':True]
['text':' for non-mixed text, we only need a tiny array of runs (no malloc()) ','line_number':352,'multiline':True]
['text':' maximum or current nesting depth of isolate sequences ','line_number':355,'multiline':True]
['text':' Within resolveExplicitLevels() and checkExplicitLevels(), this is the maximal
       nesting encountered.
       Within resolveImplicitLevels(), this is the index of the current isolates
       stack entry. ','line_number':356,'multiline':True]
['text':' for simple text, have a small stack (no malloc()) ','line_number':363,'multiline':True]
['text':' for inverse Bidi with insertion of directional marks ','line_number':366,'multiline':True]
['text':' for option UBIDI_OPTION_REMOVE_CONTROLS ','line_number':369,'multiline':True]
['text':' for Bidi class callback ','line_number':372,'multiline':True]
['text':' action pointer ','line_number':373,'multiline':True]
['text':' context pointer ','line_number':374,'multiline':True]
['text':' Macros for initial checks at function entry ','line_number':389,'multiline':True]
['text':' helper function to (re)allocate memory if allowed ','line_number':426,'multiline':True]
['text':' helper macros for each allocated array in UBiDi ','line_number':430,'multiline':True]
['text':' additional macros used by ubidi_open() - always allow allocation ','line_number':443,'multiline':True]
