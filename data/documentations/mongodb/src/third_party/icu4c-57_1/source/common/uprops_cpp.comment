['text':'
*******************************************************************************
*
*   Copyright (C) 2002-2016, International Business Machines
*   Corporation and others.  All Rights Reserved.
*
*******************************************************************************
*   file name:  uprops.cpp
*   encoding:   US-ASCII
*   tab size:   8 (not used)
*   indentation:4
*
*   created on: 2002feb24
*   created by: Markus W. Scherer
*
*   Implementations for mostly non-core Unicode character properties
*   stored in uprops.icu.
*
*   With the APIs implemented here, almost all properties files and
*   their associated implementation files are used from this file,
*   including those for normalization and case mappings.
','line_number':1,'multiline':True]
['text':' general properties API functions ----------------------------------------- ','line_number':41,'multiline':True]
['text':' SRC_PROPSVEC column, or "source" if mask==0','line_number':48,'multiline':False]
['text':'which','line_number':53,'multiline':True]
['text':' systematic, directly stored properties ','line_number':54,'multiline':True]
['text':'prop','line_number':58,'multiline':True]
['text':'prop','line_number':62,'multiline':True]
['text':'which','line_number':62,'multiline':True]
['text':'prop','line_number':66,'multiline':True]
['text':'which','line_number':66,'multiline':True]
['text':'prop','line_number':70,'multiline':True]
['text':'which','line_number':70,'multiline':True]
['text':'prop','line_number':79,'multiline':True]
['text':'which','line_number':79,'multiline':True]
['text':' By definition, Full_Composition_Exclusion is the same as NFC_QC=No.','line_number':80,'multiline':False]
['text':' UCHAR_NF*_INERT properties','line_number':87,'multiline':False]
['text':'prop','line_number':93,'multiline':True]
['text':'prop','line_number':106,'multiline':True]
['text':'which','line_number':106,'multiline':True]
['text':' c has a decomposition ','line_number':114,'multiline':True]
['text':' single BMP code point ','line_number':116,'multiline':True]
['text':' single supplementary code point ','line_number':120,'multiline':True]
['text':' protect against bad input ','line_number':125,'multiline':True]
['text':' single code point ','line_number':128,'multiline':True]
['text':' guess some large but stack-friendly capacity ','line_number':133,'multiline':True]
['text':'prop','line_number':151,'multiline':True]
['text':'which','line_number':151,'multiline':True]
['text':' The ReorderingBuffer must be in a block because its destructor','line_number':160,'multiline':False]
['text':' needs to release dest's buffer before we look at its contents.','line_number':161,'multiline':False]
['text':' Small destCapacity for NFKC_CF(c).','line_number':163,'multiline':False]
['text':'prop','line_number':179,'multiline':True]
['text':'which','line_number':179,'multiline':True]
['text':'prop','line_number':188,'multiline':True]
['text':'which','line_number':188,'multiline':True]
['text':'prop','line_number':192,'multiline':True]
['text':'which','line_number':192,'multiline':True]
['text':'prop','line_number':196,'multiline':True]
['text':'which','line_number':196,'multiline':True]
['text':'prop','line_number':200,'multiline':True]
['text':'which','line_number':200,'multiline':True]
['text':'prop','line_number':204,'multiline':True]
['text':'which','line_number':204,'multiline':True]
['text':'
     * column and mask values for binary properties from u_getUnicodeProperties().
     * Must be in order of corresponding UProperty,
     * and there must be exactly one entry per binary UProperty.
     *
     * Properties with mask==0 are handled in code.
     * For them, column is the UPropertySource value.
     ','line_number':209,'multiline':True]
['text':' UCHAR_LOWERCASE','line_number':239,'multiline':False]
['text':' UCHAR_SOFT_DOTTED','line_number':244,'multiline':False]
['text':' UCHAR_UPPERCASE','line_number':247,'multiline':False]
['text':' UCHAR_CASE_SENSITIVE','line_number':251,'multiline':False]
['text':' UCHAR_NFD_INERT','line_number':254,'multiline':False]
['text':' UCHAR_NFKD_INERT','line_number':255,'multiline':False]
['text':' UCHAR_NFC_INERT','line_number':256,'multiline':False]
['text':' UCHAR_NFKC_INERT','line_number':257,'multiline':False]
['text':' UCHAR_CASED','line_number':266,'multiline':False]
['text':' UCHAR_CASE_IGNORABLE','line_number':267,'multiline':False]
['text':' UCHAR_CHANGES_WHEN_LOWERCASED','line_number':268,'multiline':False]
['text':' UCHAR_CHANGES_WHEN_UPPERCASED','line_number':269,'multiline':False]
['text':' UCHAR_CHANGES_WHEN_TITLECASED','line_number':270,'multiline':False]
['text':' UCHAR_CHANGES_WHEN_CASEMAPPED','line_number':272,'multiline':False]
['text':' c is range-checked in the functions that are called from here ','line_number':282,'multiline':True]
['text':' not a known binary property ','line_number':284,'multiline':True]
['text':' SRC_PROPSVEC column, or "source" if mask==0','line_number':298,'multiline':False]
['text':' =maxValue if getMaxValueFromShift() is used','line_number':300,'multiline':False]
['text':'which','line_number':305,'multiline':True]
['text':' systematic, directly stored properties ','line_number':306,'multiline':True]
['text':'which','line_number':310,'multiline':True]
['text':'which','line_number':314,'multiline':True]
['text':'prop','line_number':318,'multiline':True]
['text':'which','line_number':318,'multiline':True]
['text':'prop','line_number':322,'multiline':True]
['text':'which','line_number':322,'multiline':True]
['text':'prop','line_number':326,'multiline':True]
['text':'prop','line_number':335,'multiline':True]
['text':'which','line_number':335,'multiline':True]
['text':'prop','line_number':340,'multiline':True]
['text':'which','line_number':340,'multiline':True]
['text':'prop','line_number':344,'multiline':True]
['text':'which','line_number':344,'multiline':True]
['text':'prop','line_number':348,'multiline':True]
['text':'which','line_number':348,'multiline':True]
['text':'prop','line_number':352,'multiline':True]
['text':'which','line_number':352,'multiline':True]
['text':'prop','line_number':357,'multiline':True]
['text':'which','line_number':357,'multiline':True]
['text':'
 * Map some of the Grapheme Cluster Break values to Hangul Syllable Types.
 * Hangul_Syllable_Type is fully redundant with a subset of Grapheme_Cluster_Break.
 ','line_number':362,'multiline':True]
['text':' U_GCB_OTHER ','line_number':367,'multiline':True]
['text':' U_GCB_CONTROL ','line_number':368,'multiline':True]
['text':' U_GCB_CR ','line_number':369,'multiline':True]
['text':' U_GCB_EXTEND ','line_number':370,'multiline':True]
['text':' U_GCB_L ','line_number':371,'multiline':True]
['text':' U_GCB_LF ','line_number':372,'multiline':True]
['text':' U_GCB_LV ','line_number':373,'multiline':True]
['text':' U_GCB_LVT ','line_number':374,'multiline':True]
['text':' U_GCB_T ','line_number':375,'multiline':True]
['text':' U_GCB_V ','line_number':376,'multiline':True]
['text':'
     * Omit GCB values beyond what we need for hst.
     * The code below checks for the array length.
     ','line_number':377,'multiline':True]
['text':'prop','line_number':383,'multiline':True]
['text':'which','line_number':383,'multiline':True]
['text':' see comments on gcbToHst[] above ','line_number':384,'multiline':True]
['text':'prop','line_number':398,'multiline':True]
['text':'prop','line_number':408,'multiline':True]
['text':'which','line_number':408,'multiline':True]
['text':'prop','line_number':418,'multiline':True]
['text':'which','line_number':418,'multiline':True]
['text':'
     * column, mask and shift values for int-value properties from u_getUnicodeProperties().
     * Must be in order of corresponding UProperty,
     * and there must be exactly one entry per int UProperty.
     *
     * Properties with mask==0 are handled in code.
     * For them, column is the UPropertySource value.
     ','line_number':424,'multiline':True]
['text':' UCHAR_NFD_QUICK_CHECK: max=1=YES -- never "maybe", only "no" or "yes"','line_number':444,'multiline':False]
['text':' UCHAR_NFKD_QUICK_CHECK: max=1=YES -- never "maybe", only "no" or "yes"','line_number':446,'multiline':False]
['text':' UCHAR_NFC_QUICK_CHECK: max=2=MAYBE','line_number':448,'multiline':False]
['text':' UCHAR_NFKC_QUICK_CHECK: max=2=MAYBE','line_number':450,'multiline':False]
['text':' undefined','line_number':473,'multiline':False]
['text':'which','line_number':477,'multiline':True]
['text':' all binary/enum/int properties have a minimum value of 0 ','line_number':478,'multiline':True]
['text':' maximum TRUE for all binary properties','line_number':485,'multiline':False]
['text':' undefined','line_number':491,'multiline':False]
['text':' undefined ','line_number':497,'multiline':True]
['text':' undefined ','line_number':506,'multiline':True]
['text':' undefined ','line_number':554,'multiline':True]
['text':' Compute the FC_NFKC_Closure on the fly:','line_number':570,'multiline':False]
['text':' We have the API for complete coverage of Unicode properties, although','line_number':571,'multiline':False]
['text':' this value by itself is not useful via API.','line_number':572,'multiline':False]
['text':' (What could be useful is a custom normalization table that combines','line_number':573,'multiline':False]
['text':' case folding and NFKC.)','line_number':574,'multiline':False]
['text':' For the derivation, see Unicode's DerivedNormalizationProps.txt.','line_number':575,'multiline':False]
['text':' first: b = NFKC(Fold(a))','line_number':581,'multiline':False]
['text':' c does not change at all under CaseFolding+NFKC','line_number':588,'multiline':False]
['text':' second: c = NFKC(Fold(b))','line_number':599,'multiline':False]
['text':' if (c != b) add the mapping from a to c','line_number':602,'multiline':False]
