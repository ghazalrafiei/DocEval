['text':'
*******************************************************************************
*
*   Copyright (C) 2005-2016, International Business Machines
*   Corporation and others.  All Rights Reserved.
*
*******************************************************************************
*   file name:  ucasemap.cpp
*   encoding:   US-ASCII
*   tab size:   8 (not used)
*   indentation:4
*
*   created on: 2005may06
*   created by: Markus W. Scherer
*
*   Case mapping service object and functions using it.
','line_number':1,'multiline':True]
['text':' UCaseMap service object -------------------------------------------------- ','line_number':38,'multiline':True]
['text':' Do not call ubrk_close() so that we do not depend on all of the BreakIterator code.','line_number':69,'multiline':False]
['text':' we only really need the language code for case mappings ','line_number':97,'multiline':True]
['text':'pErrorCode','line_number':112,'multiline':True]
['text':' UTF-8 string case mappings ----------------------------------------------- ','line_number':116,'multiline':True]
['text':' TODO(markus): Move to a new, separate utf8case.c file. ','line_number':118,'multiline':True]
['text':' append a full case mapping result, see UCASE_MAX_STRING_LENGTH ','line_number':120,'multiline':True]
['text':' decode the result ','line_number':128,'multiline':True]
['text':' (not) original code point ','line_number':130,'multiline':True]
['text':' append the result ','line_number':142,'multiline':True]
['text':' code point ','line_number':144,'multiline':True]
['text':' overflow, nothing written ','line_number':148,'multiline':True]
['text':' string ','line_number':152,'multiline':True]
['text':' we might have an overflow, but we know the actual length ','line_number':159,'multiline':True]
['text':' preflight ','line_number':162,'multiline':True]
['text':' reset for backward iteration ','line_number':183,'multiline':True]
['text':' reset for forward iteration ','line_number':187,'multiline':True]
['text':' continue current iteration direction ','line_number':191,'multiline':True]
['text':'
 * Case-maps [srcStart..srcLimit[ but takes
 * context [0..srcLength[ into account.
 ','line_number':209,'multiline':True]
['text':' case mapping loop ','line_number':226,'multiline':True]
['text':' fast path version of appendResult() for ASCII results ','line_number':242,'multiline':True]
['text':' Use the C++ abstract base class to minimize dependencies.','line_number':271,'multiline':False]
['text':' TODO: Change UCaseMap.iter to store a BreakIterator directly.','line_number':272,'multiline':False]
['text':' set up local variables ','line_number':275,'multiline':True]
['text':' titlecasing loop ','line_number':284,'multiline':True]
['text':' find next index where to titlecase ','line_number':286,'multiline':True]
['text':'
         * Unicode 4 & 5 section 3.13 Default Case Operations:
         *
         * R3  toTitlecase(X): Find the word boundaries based on Unicode Standard Annex
         * #29, "Text Boundaries." Between each pair of word boundaries, find the first
         * cased character F. If F exists, map F to default_title(F); then map each
         * subsequent character C to default_lower(C).
         *
         * In this implementation, segment [prev..index[ into 3 parts:
         * a) uncased characters (copy as-is) [prev..titleStart[
         * b) first case letter (titlecase)         [titleStart..titleLimit[
         * c) subsequent characters (lowercase)                 [titleLimit..index[
         ','line_number':297,'multiline':True]
['text':' find and copy uncased characters [prev..titleStart[ ','line_number':311,'multiline':True]
['text':' Adjust the titlecasing index (titleStart) to the next cased character. ','line_number':315,'multiline':True]
['text':'
                         * only uncased characters in [prev..index[
                         * stop with titleStart==titleLimit==index
                         ','line_number':319,'multiline':True]
['text':' cased letter at [titleStart..titleLimit[ ','line_number':327,'multiline':True]
['text':' titlecase c which is from [titleStart..titleLimit[ ','line_number':340,'multiline':True]
['text':' Special case Dutch IJ titlecasing ','line_number':346,'multiline':True]
['text':' lowercase [titleLimit..index[ ','line_number':355,'multiline':True]
['text':' Normal operation: Lowercase the rest of the word. ','line_number':358,'multiline':True]
['text':' Optionally just copy the rest of the word unchanged. ','line_number':367,'multiline':True]
['text':' case mapping loop ','line_number':431,'multiline':True]
['text':' fast path version of appendResult() for ASCII results ','line_number':444,'multiline':True]
['text':' check argument values ','line_number':473,'multiline':True]
['text':' get the string length ','line_number':486,'multiline':True]
['text':' check for overlapping source and destination ','line_number':491,'multiline':True]
['text':' public API functions ','line_number':504,'multiline':True]
