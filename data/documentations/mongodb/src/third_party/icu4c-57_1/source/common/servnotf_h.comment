['text':'*
 *******************************************************************************
 * Copyright (C) 2001-2014, International Business Machines Corporation and    *
 * others. All Rights Reserved.                                                *
 *******************************************************************************
 ','line_number':1,'multiline':True]
['text':'
 * Allow the declaration of APIs with pointers to BreakIterator
 * even when break iteration is removed from the build.
 ','line_number':16,'multiline':True]
['text':'*
 * <p>Abstract implementation of a notification facility.  Clients add
 * EventListeners with addListener and remove them with removeListener.
 * Notifiers call notifyChanged when they wish to notify listeners.
 * This queues the listener list on the notification thread, which
 * eventually dequeues the list and calls notifyListener on each
 * listener in the list.</p>
 *
 * <p>Subclasses override acceptsListener and notifyListener 
 * to add type-safe notification.  AcceptsListener should return
 * true if the listener is of the appropriate type; ICUNotifier
 * itself will ensure the listener is non-null and that the
 * identical listener is not already registered with the Notifier.
 * NotifyListener should cast the listener to the appropriate 
 * type and call the appropriate method on the listener.
 ','line_number':55,'multiline':True]
['text':'*
     * Add a listener to be notified when notifyChanged is called.
     * The listener must not be null. AcceptsListener must return
     * true for the listener.  Attempts to concurrently
     * register the identical listener more than once will be
     * silently ignored.  
     ','line_number':80,'multiline':True]
['text':'*
     * Stop notifying this listener.  The listener must
     * not be null.  Attemps to remove a listener that is
     * not registered will be silently ignored.
     ','line_number':89,'multiline':True]
['text':'*
     * ICU doesn't spawn its own threads.  All listeners are notified in
     * the thread of the caller.  Misbehaved listeners can therefore
     * indefinitely block the calling thread.  Callers should beware of
     * deadlock situations.  
     ','line_number':96,'multiline':True]
['text':'*
     * Subclasses implement this to return TRUE if the listener is
     * of the appropriate type.
     ','line_number':105,'multiline':True]
['text':'*
     * Subclasses implement this to notify the listener.
     ','line_number':111,'multiline':True]
['text':' UCONFIG_NO_SERVICE ','line_number':119,'multiline':True]
['text':' ICUNOTIF_H ','line_number':122,'multiline':True]
