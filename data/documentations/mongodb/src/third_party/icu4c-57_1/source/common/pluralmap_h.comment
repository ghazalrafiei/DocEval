['text':'
******************************************************************************
* Copyright (C) 2015, International Business Machines Corporation and
* others. All Rights Reserved.
******************************************************************************
*
* File pluralmap.h - PluralMap class that maps plural categories to values.
******************************************************************************
','line_number':1,'multiline':True]
['text':'*
     * The names of all the plural categories. NONE is not an actual plural
     * category, but rather represents the absense of a plural category.
     ','line_number':23,'multiline':True]
['text':'*
     * Converts a category name such as "zero", "one", "two", "few", "many"
     * or "other" to a category enum. Returns NONE for an unrecognized
     * category name.
     ','line_number':38,'multiline':True]
['text':'*
     * Converts a category name such as "zero", "one", "two", "few", "many"
     * or "other" to a category enum.  Returns NONE for urecongized
     * category name.
     ','line_number':45,'multiline':True]
['text':'*
     * Converts a category to a name.
     * Passing NONE or CATEGORY_COUNT for category returns NULL.
     ','line_number':52,'multiline':True]
['text':'*
 * A Map of plural categories to values. It maintains ownership of the
 * values.
 *
 * Type T is the value type. T must provide the followng:
 * 1) Default constructor
 * 2) Copy constructor
 * 3) Assignment operator
 * 4) Must extend UMemory
 ','line_number':59,'multiline':True]
['text':'*
     * Other category is maps to a copy of the default value.
     ','line_number':72,'multiline':True]
['text':'*
     * Other category is mapped to otherVariant.
     ','line_number':79,'multiline':True]
['text':' do nothing','line_number':107,'multiline':False]
['text':'*
     * Removes all mappings and makes 'other' point to the default value.
     ','line_number':119,'multiline':True]
['text':'*
     * Iterates through the mappings in this instance, set index to NONE
     * prior to using. Call next repeatedly to get the values until it
     * returns NULL. Each time next returns, caller may pass index
     * to getCategoryName() to get the name of the plural category.
     * When this function returns NULL, index is CATEGORY_COUNT
     ','line_number':130,'multiline':True]
['text':'*
     * non const version of next.
     ','line_number':150,'multiline':True]
['text':'*
     * Returns the 'other' variant.
     * Same as calling get(OTHER).
     ','line_number':158,'multiline':True]
['text':'*
     * Returns the value associated with a category.
     * If no value found, or v is NONE or CATEGORY_COUNT, falls
     * back to returning the value for the 'other' category.
     ','line_number':166,'multiline':True]
['text':'*
     * Convenience routine to get the value by category name. Otherwise
     * works just like get(Category).
     ','line_number':179,'multiline':True]
['text':'*
     * Convenience routine to get the value by category name as a
     * UnicodeString. Otherwise works just like get(category).
     ','line_number':187,'multiline':True]
['text':'*
     * Returns a pointer to the value associated with a category
     * that caller can safely modify. If the value was defaulting to the 'other'
     * variant because no explicit value was stored, this method creates a
     * new value using the default constructor at the returned pointer.
     *
     * @param category the category with the value to change.
     * @param status error returned here if index is NONE or CATEGORY_COUNT
     *  or memory could not be allocated, or any other error happens.
     ','line_number':195,'multiline':True]
['text':'*
     * Convenience routine to get a mutable pointer to a value by category name.
     * Otherwise works just like getMutable(Category, UErrorCode &).
     * reports an error if the category name is invalid.
     ','line_number':211,'multiline':True]
['text':'*
     * Just like getMutable(Category, UErrorCode &) but copies defaultValue to
     * returned pointer if it was defaulting to the 'other' variant
     * because no explicit value was stored.
     ','line_number':222,'multiline':True]
['text':'*
     * Returns TRUE if this object equals rhs.
     ','line_number':234,'multiline':True]
