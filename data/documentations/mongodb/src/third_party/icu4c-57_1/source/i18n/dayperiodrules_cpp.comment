['text':'
*******************************************************************************
* Copyright (C) 2016, International Business Machines
* Corporation and others.  All Rights Reserved.
*******************************************************************************
* dayperiodrules.cpp
*
* created on: 2016-01-20
* created by: kazede
','line_number':1,'multiline':True]
['text':' TODO: AFTER is deprecated in CLDR 29. Remove.','line_number':38,'multiline':False]
['text':' namespace','line_number':43,'multiline':False]
['text':' Initialize sub-sinks.','line_number':46,'multiline':False]
['text':' Entry point.','line_number':53,'multiline':False]
['text':' Allocate one more than needed to skip [0]. See comment in parseSetNum().','line_number':60,'multiline':False]
['text':' Data root -> locales.','line_number':72,'multiline':False]
['text':' Data root -> rules.','line_number':85,'multiline':False]
['text':' Data root -> rules -> a rule set.','line_number':99,'multiline':False]
['text':' Data root -> rules -> a rule set -> a period (e.g. "morning1").','line_number':126,'multiline':False]
['text':' Key-value pairs (e.g. before{6:00}) will be captured here.','line_number':127,'multiline':False]
['text':' Arrays (e.g. before{6:00, 24:00}) will be redirected to the next sink.','line_number':128,'multiline':False]
['text':' Data root -> rules -> a rule set -> a period -> a cutoff type.','line_number':157,'multiline':False]
['text':' Will enter this sink if 2+ times appear in a single cutoff type (e.g. before{6:00, 24:00}).','line_number':158,'multiline':False]
['text':' Members.','line_number':169,'multiline':False]
['text':' [0] thru [24]: 24 is allowed in "before 24".','line_number':170,'multiline':False]
['text':' "Path" to data.','line_number':172,'multiline':False]
['text':' Helpers.','line_number':177,'multiline':False]
['text':' Rule set number must not be zero. (0 is used to indicate "not found" by hashmap.)','line_number':204,'multiline':False]
['text':' Currently ICU data conveniently starts numbering rule sets from 1.','line_number':205,'multiline':False]
['text':' Translate the cutoffs[] array to day period rules.','line_number':228,'multiline':False]
['text':' AT cutoffs must be either midnight or noon.','line_number':233,'multiline':False]
['text':' Bad data.','line_number':240,'multiline':False]
['text':' FROM/AFTER and BEFORE must come in a pair.','line_number':245,'multiline':False]
['text':' We've gone around the array once and can't find a BEFORE.','line_number':250,'multiline':False]
['text':' Translate "before" to CUTOFF_TYPE_BEFORE, for example.','line_number':264,'multiline':False]
['text':' Gets the numerical value of the hour from the Unicode string.','line_number':279,'multiline':False]
['text':' `time` must look like "x:00" or "xx:00".','line_number':286,'multiline':False]
['text':' If length is wrong or `time` doesn't end with ":00", error out.','line_number':287,'multiline':False]
['text':' If `time` doesn't begin with a number in [0, 24], error out.','line_number':295,'multiline':False]
['text':' Note: "24:00" is possible in "before 24:00".','line_number':296,'multiline':False]
['text':' struct DayPeriodRulesDataSink','line_number':317,'multiline':False]
['text':' Out-of-line virtual destructors.','line_number':333,'multiline':False]
['text':' namespace','line_number':355,'multiline':False]
['text':' Get the largest rule set number (so we allocate enough objects).','line_number':366,'multiline':False]
['text':' Populate rules.','line_number':370,'multiline':False]
['text':' If the entire day period rules data doesn't conform to spec (even if the part we want','line_number':380,'multiline':False]
['text':' does), return NULL.','line_number':381,'multiline':False]
['text':' Treat empty string as root.','line_number':391,'multiline':False]
['text':' NB there is no rule set 0 and 0 is returned upon lookup failure.','line_number':400,'multiline':False]
['text':' name and parentName can't be the same pointer, so fill in parent then copy to child.','line_number':404,'multiline':False]
['text':' Saves a lookup in the hash table.','line_number':407,'multiline':False]
['text':' If day period for hour 0 is UNKNOWN then day period for all hours are UNKNOWN.','line_number':417,'multiline':False]
['text':' Data doesn't exist even with fallback.','line_number':418,'multiline':False]
['text':' Can't obtain startHour or endHour; bail out.','line_number':437,'multiline':False]
['text':' dayPeriod wraps around midnight. Shift midPoint by 12 hours, in the direction that','line_number':443,'multiline':False]
['text':' lands it in [0, 24).','line_number':444,'multiline':False]
['text':' dayPeriod wraps around midnight. Start hour is later than end hour.','line_number':462,'multiline':False]
['text':' dayPeriod doesn't exist in rule set; set error and exit.','line_number':476,'multiline':False]
['text':' dayPeriod wraps around midnight. End hour is before start hour.','line_number':489,'multiline':False]
['text':' i o'clock is when a new period starts, therefore when the old period ends.','line_number':492,'multiline':False]
['text':' dayPeriod doesn't exist in rule set; set error and exit.','line_number':504,'multiline':False]
