['text':'
**********************************************************************
*   Copyright (C) 2001-2008,2010 IBM and others. All rights reserved.
**********************************************************************
*   Date        Name        Description
*  03/22/2000   helena      Creation.
**********************************************************************
','line_number':1,'multiline':True]
['text':' public constructors and destructors -----------------------------------','line_number':20,'multiline':False]
['text':' public get and set methods ----------------------------------------','line_number':46,'multiline':False]
['text':' the c++ breakiterator may not make use of ubreakiterator.','line_number':128,'multiline':False]
['text':' so we'll have to keep track of it ourselves.','line_number':129,'multiline':False]
['text':' Well, gee... the Constructors that take a BreakIterator','line_number':131,'multiline':False]
['text':' all cast the BreakIterator to a UBreakIterator and','line_number':132,'multiline':False]
['text':' pass it to the corresponding usearch_openFromXXX','line_number':133,'multiline':False]
['text':' routine, so there's no reason not to do this.','line_number':134,'multiline':False]
['text':'','line_number':135,'multiline':False]
['text':' Besides, a UBreakIterator is a BreakIterator, so','line_number':136,'multiline':False]
['text':' any subclass of BreakIterator should work fine here...','line_number':137,'multiline':False]
['text':' operator overloading ----------------------------------------------','line_number':177,'multiline':False]
['text':' public methods ----------------------------------------------------','line_number':196,'multiline':False]
['text':' not enough characters to match','line_number':248,'multiline':False]
['text':' switching direction. ','line_number':254,'multiline':False]
['text':' if matchedIndex == USEARCH_DONE, it means that either a ','line_number':255,'multiline':False]
['text':' setOffset has been called or that previous ran off the text','line_number':256,'multiline':False]
['text':' string. the iterator would have been set to offset 0 if a ','line_number':257,'multiline':False]
['text':' match is not found.','line_number':258,'multiline':False]
['text':' there's no need to set the collation element iterator','line_number':261,'multiline':False]
['text':' the next call to next will set the offset.','line_number':262,'multiline':False]
['text':' if matchlength is 0 we are at the start of the iteration','line_number':268,'multiline':False]
['text':' switching direction. ','line_number':297,'multiline':False]
['text':' if matchedIndex == USEARCH_DONE, it means that either a ','line_number':298,'multiline':False]
['text':' setOffset has been called or that next ran off the text','line_number':299,'multiline':False]
['text':' string. the iterator would have been set to offset textLength if ','line_number':300,'multiline':False]
['text':' a match is not found.','line_number':301,'multiline':False]
['text':' not enough characters to match','line_number':309,'multiline':False]
['text':' protected constructors and destructors -----------------------------','line_number':341,'multiline':False]
['text':' protected methods ------------------------------------------------------','line_number':396,'multiline':False]
['text':' by default no errors should be returned here since offsets are within ','line_number':430,'multiline':False]
['text':' range.','line_number':431,'multiline':False]
['text':' #if !UCONFIG_NO_COLLATION ','line_number':443,'multiline':True]
