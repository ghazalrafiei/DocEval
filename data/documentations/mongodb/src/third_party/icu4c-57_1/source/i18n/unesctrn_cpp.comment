['text':'
 **********************************************************************
 *   Copyright (c) 2001-2011, International Business Machines
 *   Corporation and others.  All Rights Reserved.
 **********************************************************************
 *   Date        Name        Description
 *   11/19/2001  aliu        Creation.
 **********************************************************************
 ','line_number':1,'multiline':True]
['text':'*
 * Special character marking the end of the spec[] array.
 ','line_number':24,'multiline':True]
['text':' Unicode: "U+10FFFF" hex, min=4, max=6','line_number':29,'multiline':False]
['text':'U','line_number':31,'multiline':True]
['text':'+','line_number':31,'multiline':True]
['text':' Java: "\\uFFFF" hex, min=4, max=4','line_number':35,'multiline':False]
['text':'\','line_number':37,'multiline':True]
['text':'u','line_number':37,'multiline':True]
['text':' C: "\\uFFFF" hex, min=4, max=4; \\U0010FFFF hex, min=8, max=8','line_number':41,'multiline':False]
['text':'\','line_number':43,'multiline':True]
['text':'u','line_number':43,'multiline':True]
['text':'\','line_number':44,'multiline':True]
['text':'U','line_number':44,'multiline':True]
['text':' XML: "&#x10FFFF;" hex, min=1, max=6','line_number':48,'multiline':False]
['text':'&','line_number':50,'multiline':True]
['text':'#','line_number':50,'multiline':True]
['text':'x','line_number':50,'multiline':True]
['text':';','line_number':50,'multiline':True]
['text':' XML10: "&#1114111;" dec, min=1, max=7 (not really "Hex-Any")','line_number':54,'multiline':False]
['text':'&','line_number':56,'multiline':True]
['text':'#','line_number':56,'multiline':True]
['text':';','line_number':56,'multiline':True]
['text':' Perl: "\\x{263A}" hex, min=1, max=6','line_number':60,'multiline':False]
['text':'\','line_number':62,'multiline':True]
['text':'x','line_number':62,'multiline':True]
['text':'{','line_number':62,'multiline':True]
['text':'}','line_number':62,'multiline':True]
['text':' All: Java, C, Perl, XML, XML10, Unicode','line_number':66,'multiline':False]
['text':'U','line_number':68,'multiline':True]
['text':'+','line_number':68,'multiline':True]
['text':' Unicode','line_number':68,'multiline':False]
['text':'\','line_number':69,'multiline':True]
['text':'u','line_number':69,'multiline':True]
['text':' Java','line_number':69,'multiline':False]
['text':'\','line_number':70,'multiline':True]
['text':'U','line_number':70,'multiline':True]
['text':' C (surrogates)','line_number':70,'multiline':False]
['text':'&','line_number':71,'multiline':True]
['text':'#','line_number':71,'multiline':True]
['text':'x','line_number':71,'multiline':True]
['text':';','line_number':71,'multiline':True]
['text':' XML','line_number':71,'multiline':False]
['text':'&','line_number':72,'multiline':True]
['text':'#','line_number':72,'multiline':True]
['text':';','line_number':72,'multiline':True]
['text':' XML10','line_number':72,'multiline':False]
['text':'\','line_number':73,'multiline':True]
['text':'x','line_number':73,'multiline':True]
['text':'{','line_number':73,'multiline':True]
['text':'}','line_number':73,'multiline':True]
['text':' Perl','line_number':73,'multiline':False]
['text':' Check for memory allocation error. ','line_number':86,'multiline':False]
['text':'*
 * Factory methods.  Ignore the context.
 ','line_number':93,'multiline':True]
['text':'context','line_number':96,'multiline':True]
['text':'context','line_number':99,'multiline':True]
['text':'context','line_number':102,'multiline':True]
['text':'context','line_number':105,'multiline':True]
['text':'context','line_number':108,'multiline':True]
['text':'context','line_number':111,'multiline':True]
['text':'context','line_number':114,'multiline':True]
['text':'*
 * Registers standard variants with the system.  Called by
 * Transliterator during initialization.
 ','line_number':118,'multiline':True]
['text':'*
 * Constructor.  Takes the encoded spec array.
 ','line_number':140,'multiline':True]
['text':'*
 * Copy constructor.
 ','line_number':150,'multiline':True]
['text':'*
 * Transliterator API.
 ','line_number':162,'multiline':True]
['text':'*
 * Implements {@link Transliterator#handleTransliterate}.
 ','line_number':169,'multiline':True]
['text':' Loop over the forms in spec[].  Exit this loop when we','line_number':179,'multiline':False]
['text':' match one of the specs.  Exit the outer loop if a','line_number':180,'multiline':False]
['text':' partial match is detected and isIncremental is true.','line_number':181,'multiline':False]
['text':' Read the header','line_number':184,'multiline':False]
['text':' s is a copy of start that is advanced over the','line_number':191,'multiline':False]
['text':' characters as we parse them.','line_number':192,'multiline':False]
['text':' We've already matched a character.  This is','line_number':199,'multiline':False]
['text':' a partial match, so we return if in','line_number':200,'multiline':False]
['text':' incremental mode.  In non-incremental mode,','line_number':201,'multiline':False]
['text':' go to the next spec.','line_number':202,'multiline':False]
['text':' Check for partial match in incremental mode.','line_number':222,'multiline':False]
['text':' Check for partial match in incremental mode.','line_number':245,'multiline':False]
['text':' At this point, we have a match','line_number':260,'multiline':False]
['text':' The following break statement leaves the','line_number':264,'multiline':False]
['text':' loop that is traversing the forms in','line_number':265,'multiline':False]
['text':' spec[].  We then parse the next input','line_number':266,'multiline':False]
['text':' character.','line_number':267,'multiline':False]
['text':' #if !UCONFIG_NO_TRANSLITERATION ','line_number':289,'multiline':True]
['text':'eof','line_number':291,'multiline':False]
