['text':'
*******************************************************************************
* Copyright (C) 2012-2014, International Business Machines
* Corporation and others.  All Rights Reserved.
*******************************************************************************
* collationdatabuilder.h
*
* created on: 2012apr01
* created by: Markus W. Scherer
','line_number':1,'multiline':True]
['text':'*
 * Low-level CollationData builder.
 * Takes (character, CE) pairs and builds them into runtime data structures.
 * Supports characters with context prefixes and contraction suffixes.
 ','line_number':40,'multiline':True]
['text':'*
     * Collation element modifier. Interface class for a modifier
     * that changes a tailoring builder's temporary CEs to final CEs.
     * Called for every non-special CE32 and every expansion CE.
     ','line_number':47,'multiline':True]
['text':'* Returns a new CE to replace the non-special input CE32, or else Collation::NO_CE. ','line_number':55,'multiline':True]
['text':'* Returns a new CE to replace the input CE, or else Collation::NO_CE. ','line_number':57,'multiline':True]
['text':'*
     * @return TRUE if this builder has mappings (e.g., add() has been called)
     ','line_number':73,'multiline':True]
['text':'*
     * @return TRUE if c has CEs in this builder
     ','line_number':78,'multiline':True]
['text':'*
     * @return the three-byte primary if c maps to a single such CE and has no context data,
     * otherwise returns 0.
     ','line_number':83,'multiline':True]
['text':'*
     * @return the single CE for c.
     * Sets an error code if c does not have a single CE.
     ','line_number':89,'multiline':True]
['text':'*
     * Encodes the ces as either the returned ce32 by itself,
     * or by storing an expansion, with the returned ce32 referring to that.
     *
     * add(p, s, ces, cesLength) = addCE32(p, s, encodeCEs(ces, cesLength))
     ','line_number':99,'multiline':True]
['text':'*
     * Sets three-byte-primary CEs for a range of code points in code point order,
     * if it is worth doing; otherwise no change is made.
     * None of the code points in the range should have complex mappings so far
     * (expansions/contractions/prefixes).
     * @param start first code point
     * @param end last code point (inclusive)
     * @param primary primary weight for 'start'
     * @param step per-code point primary-weight increment
     * @param errorCode ICU in/out error code
     * @return TRUE if an OFFSET_TAG range was used for start..end
     ','line_number':109,'multiline':True]
['text':'*
     * Sets three-byte-primary CEs for a range of code points in code point order.
     * Sets range values if that is worth doing, or else individual values.
     * None of the code points in the range should have complex mappings so far
     * (expansions/contractions/prefixes).
     * @param start first code point
     * @param end last code point (inclusive)
     * @param primary primary weight for 'start'
     * @param step per-code point primary-weight increment
     * @param errorCode ICU in/out error code
     * @return the next primary after 'end': start primary incremented by ((end-start)+1)*step
     ','line_number':125,'multiline':True]
['text':'*
     * Copies all mappings from the src builder, with modifications.
     * This builder here must not be built yet, and should be empty.
     ','line_number':141,'multiline':True]
['text':'*
     * Looks up CEs for s and appends them to the ces array.
     * Does not handle normalization: s should be in FCD form.
     *
     * Does not write completely ignorable CEs.
     * Does not write beyond Collation::MAX_EXPANSION_LENGTH.
     *
     * @return incremented cesLength
     ','line_number':154,'multiline':True]
['text':'*
     * Copies base contractions to a list of ConditionalCE32.
     * Sets cond->next to the index of the first new item
     * and returns the index of the last new item.
     ','line_number':197,'multiline':True]
['text':' 0 <= i < CollationData::JAMO_CE32S_LENGTH = 19 + 21 + 27','line_number':222,'multiline':False]
['text':' i < 27','line_number':227,'multiline':False]
['text':'* @see Collation::BUILDER_DATA_TAG ','line_number':231,'multiline':True]
['text':' vector of ConditionalCE32','line_number':240,'multiline':False]
['text':' Characters that have context (prefixes or contraction suffixes).','line_number':241,'multiline':False]
['text':' Serialized UCharsTrie structures for finalized contexts.','line_number':243,'multiline':False]
['text':' !UCONFIG_NO_COLLATION','line_number':256,'multiline':False]
['text':' __COLLATIONDATABUILDER_H__','line_number':257,'multiline':False]
