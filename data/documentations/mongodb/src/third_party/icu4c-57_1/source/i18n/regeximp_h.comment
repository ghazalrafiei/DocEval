['text':'','line_number':1,'multiline':False]
['text':'   Copyright (C) 2002-2015 International Business Machines Corporation','line_number':2,'multiline':False]
['text':'   and others. All rights reserved.','line_number':3,'multiline':False]
['text':'','line_number':4,'multiline':False]
['text':'   file:  regeximp.h','line_number':5,'multiline':False]
['text':'','line_number':6,'multiline':False]
['text':'           ICU Regular Expressions,','line_number':7,'multiline':False]
['text':'               Definitions of constant values used in the compiled form of','line_number':8,'multiline':False]
['text':'               a regular expression pattern.','line_number':9,'multiline':False]
['text':'','line_number':10,'multiline':False]
['text':' For debugging, define REGEX_DEBUG','line_number':25,'multiline':False]
['text':' To define with configure,','line_number':26,'multiline':False]
['text':'   CPPFLAGS="-DREGEX_DEBUG" ./runConfigureICU --enable-debug --disable-release Linux ','line_number':27,'multiline':False]
['text':'','line_number':30,'multiline':False]
['text':'  debugging options.  Enable one or more of the three #defines immediately following','line_number':31,'multiline':False]
['text':'','line_number':32,'multiline':False]
['text':'#define REGEX_SCAN_DEBUG','line_number':34,'multiline':False]
['text':'  End of #defines inteded to be directly set.','line_number':38,'multiline':False]
['text':'','line_number':50,'multiline':False]
['text':'  Opcode types     In the compiled form of the regexp, these are the type, or opcodes,','line_number':51,'multiline':False]
['text':'                   of the entries.','line_number':52,'multiline':False]
['text':'','line_number':53,'multiline':False]
['text':' For multi-operand ops, most non-first words.','line_number':55,'multiline':False]
['text':' For multi-operand ops, negative operand values.','line_number':56,'multiline':False]
['text':' Force a backtrack, as if a match test had failed.','line_number':57,'multiline':False]
['text':' Value field is the 21 bit unicode char to match','line_number':59,'multiline':False]
['text':' Value field is index of string start','line_number':60,'multiline':False]
['text':' Value field is string length (code units)','line_number':61,'multiline':False]
['text':' Value field is pattern position to push','line_number':62,'multiline':False]
['text':' Value field is capture group number.','line_number':64,'multiline':False]
['text':' Value field is capture group number','line_number':65,'multiline':False]
['text':' Value field is index of set in array of sets.','line_number':66,'multiline':False]
['text':' Value field is index of set in array of sets.','line_number':67,'multiline':False]
['text':' Value field is destination position in','line_number':69,'multiline':False]
['text':'   the pattern.','line_number':70,'multiline':False]
['text':' Stop match operation,  No match.','line_number':71,'multiline':False]
['text':' Operand:  JMP destination location','line_number':73,'multiline':False]
['text':' Value field:  0:  \b    1:  \B','line_number':74,'multiline':False]
['text':' Conditional JMP_SAV,','line_number':76,'multiline':False]
['text':'    Used in (x)+, breaks loop on zero length match.','line_number':77,'multiline':False]
['text':'    Operand:  Jmp destination.','line_number':78,'multiline':False]
['text':' \z   Unconditional end of line.','line_number':80,'multiline':False]
['text':' ., in the . matches any mode.','line_number':82,'multiline':False]
['text':' Value field:  0:  \d    1:  \D','line_number':83,'multiline':False]
['text':' Value field:  1:  multi-line mode.','line_number':84,'multiline':False]
['text':' Also for \Z','line_number':85,'multiline':False]
['text':' Counter Inits for {Interval} loops.','line_number':87,'multiline':False]
['text':'   2 kinds, normal and non-greedy.','line_number':88,'multiline':False]
['text':'   These are 4 word opcodes.  See description.','line_number':89,'multiline':False]
['text':'    First Operand:  Data loc of counter variable','line_number':90,'multiline':False]
['text':'    2nd   Operand:  Pat loc of the URX_CTR_LOOPx','line_number':91,'multiline':False]
['text':'                    at the end of the loop.','line_number':92,'multiline':False]
['text':'    3rd   Operand:  Minimum count.','line_number':93,'multiline':False]
['text':'    4th   Operand:  Max count, -1 for unbounded.','line_number':94,'multiline':False]
['text':' '.' operator in UNIX_LINES mode, only \n marks end of line.','line_number':96,'multiline':False]
['text':' Loop Ops for {interval} loops.','line_number':98,'multiline':False]
['text':'   Also in three flavors.','line_number':99,'multiline':False]
['text':'   Operand is loc of corresponding CTR_INIT.','line_number':100,'multiline':False]
['text':' '^' operator, test for start of line in multi-line','line_number':102,'multiline':False]
['text':'      plus UNIX_LINES mode.','line_number':103,'multiline':False]
['text':' Operand value in multi-operand ops that refers','line_number':105,'multiline':False]
['text':'   back into compiled pattern code, and thus must','line_number':106,'multiline':False]
['text':'   be relocated when inserting/deleting ops in code.','line_number':107,'multiline':False]
['text':' Store the stack ptr.  Operand is location within','line_number':109,'multiline':False]
['text':'   matcher data (not stack data) to store it.','line_number':110,'multiline':False]
['text':' Load the stack pointer.  Operand is location','line_number':111,'multiline':False]
['text':'   to load from.','line_number':112,'multiline':False]
['text':' Back Reference.  Parameter is the index of the','line_number':113,'multiline':False]
['text':'   capture group variables in the state stack frame.','line_number':114,'multiline':False]
['text':' Store the input location.  Operand is location','line_number':115,'multiline':False]
['text':'   within the matcher stack frame.','line_number':116,'multiline':False]
['text':' Conditional JMP.','line_number':117,'multiline':False]
['text':'   First Operand:  JMP target location.','line_number':118,'multiline':False]
['text':'   Second Operand:  Data location containing an','line_number':119,'multiline':False]
['text':'     input position.  If current input position ==','line_number':120,'multiline':False]
['text':'     saved input position, FAIL rather than taking','line_number':121,'multiline':False]
['text':'     the JMP','line_number':122,'multiline':False]
['text':' Starting a LookAround expression.','line_number':123,'multiline':False]
['text':'   Save InputPos and SP in static data.','line_number':124,'multiline':False]
['text':'   Operand:  Static data offset for the save','line_number':125,'multiline':False]
['text':' Ending a Lookaround expression.','line_number':126,'multiline':False]
['text':'   Restore InputPos and Stack to saved values.','line_number':127,'multiline':False]
['text':'   Operand:  Static data offset for saved data.','line_number':128,'multiline':False]
['text':' Test for case-insensitive match of a literal character.','line_number':129,'multiline':False]
['text':'   Operand:  the literal char.','line_number':130,'multiline':False]
['text':' Case insensitive string compare.','line_number':131,'multiline':False]
['text':'   First Operand:  Index of start of string in string literals','line_number':132,'multiline':False]
['text':'   Second Operand (next word in compiled code):','line_number':133,'multiline':False]
['text':'     the length of the string.','line_number':134,'multiline':False]
['text':' Case insensitive back reference.','line_number':135,'multiline':False]
['text':'   Parameter is the index of the','line_number':136,'multiline':False]
['text':'   capture group variables in the state stack frame.','line_number':137,'multiline':False]
['text':' $ in multi-line mode.','line_number':138,'multiline':False]
['text':' ^ in multi-line mode.','line_number':139,'multiline':False]
['text':' LookBehind Start.','line_number':140,'multiline':False]
['text':'   Paramater is data location','line_number':141,'multiline':False]
['text':' LookBehind Continue.','line_number':142,'multiline':False]
['text':'   Param 0:  the data location','line_number':143,'multiline':False]
['text':'   Param 1:  The minimum length of the look-behind match','line_number':144,'multiline':False]
['text':'   Param 2:  The max length of the look-behind match','line_number':145,'multiline':False]
['text':' LookBehind End.','line_number':146,'multiline':False]
['text':'   Parameter is the data location.','line_number':147,'multiline':False]
['text':'     Check that match ended at the right spot,','line_number':148,'multiline':False]
['text':'     Restore original input string len.','line_number':149,'multiline':False]
['text':' Negative LookBehind Continue','line_number':150,'multiline':False]
['text':'   Param 0:  the data location','line_number':151,'multiline':False]
['text':'   Param 1:  The minimum length of the look-behind match','line_number':152,'multiline':False]
['text':'   Param 2:  The max     length of the look-behind match','line_number':153,'multiline':False]
['text':'   Param 3:  The pattern loc following the look-behind block.','line_number':154,'multiline':False]
['text':' Negative LookBehind end','line_number':155,'multiline':False]
['text':'   Parameter is the data location.','line_number':156,'multiline':False]
['text':'   Check that the match ended at the right spot.','line_number':157,'multiline':False]
['text':' Reference to a prebuilt set (e.g. \w), negated','line_number':158,'multiline':False]
['text':'   Operand is index of set in array of sets.','line_number':159,'multiline':False]
['text':' Init a [set]* loop.','line_number':160,'multiline':False]
['text':'   Operand is the sets index in array of user sets.','line_number':161,'multiline':False]
['text':' Continue a [set]* or OneChar* loop.','line_number':162,'multiline':False]
['text':'   Operand is a matcher static data location.','line_number':163,'multiline':False]
['text':'   Must always immediately follow  LOOP_x_I instruction.','line_number':164,'multiline':False]
['text':' .*, initialization of the optimized loop.','line_number':165,'multiline':False]
['text':'   Operand value:','line_number':166,'multiline':False]
['text':'      bit 0:','line_number':167,'multiline':False]
['text':'         0:  Normal (. doesn't match new-line) mode.','line_number':168,'multiline':False]
['text':'         1:  . matches new-line mode.','line_number':169,'multiline':False]
['text':'      bit 1:  controls what new-lines are recognized by this operation.','line_number':170,'multiline':False]
['text':'         0:  All Unicode New-lines','line_number':171,'multiline':False]
['text':'         1:  UNIX_LINES, \u000a only.','line_number':172,'multiline':False]
['text':' \b or \B in UREGEX_UWORD mode, using Unicode style','line_number':173,'multiline':False]
['text':'   word boundaries.','line_number':174,'multiline':False]
['text':' $ end of input test, in UNIX_LINES mode.','line_number':175,'multiline':False]
['text':' $ end of input test, in MULTI_LINE and UNIX_LINES mode.','line_number':176,'multiline':False]
['text':' Value field:  0:  \h    1:  \H','line_number':177,'multiline':False]
['text':' Any line break sequence.','line_number':178,'multiline':False]
['text':' Value field:  0:  \v    1:  \V','line_number':179,'multiline':False]
['text':' Keep this list of opcode names in sync with the above enum','line_number':183,'multiline':False]
['text':'   Used for debug printing only.','line_number':184,'multiline':False]
['text':'','line_number':247,'multiline':False]
['text':'  Convenience macros for assembling and disassembling a compiled operation.','line_number':248,'multiline':False]
['text':'','line_number':249,'multiline':False]
['text':'','line_number':254,'multiline':False]
['text':'  Access to Unicode Sets composite character properties','line_number':255,'multiline':False]
['text':'     The sets are accessed by the match engine for things like \w (word boundary)','line_number':256,'multiline':False]
['text':'','line_number':257,'multiline':False]
['text':' Sets for finding grapheme cluster boundaries.','line_number':264,'multiline':False]
['text':' Flag bit to reverse sense of set','line_number':275,'multiline':False]
['text':'   membership test.','line_number':276,'multiline':False]
['text':'','line_number':280,'multiline':False]
['text':'  Match Engine State Stack Frame Layout.','line_number':281,'multiline':False]
['text':'','line_number':282,'multiline':False]
['text':' Header','line_number':284,'multiline':False]
['text':' Position of next character in the input string','line_number':285,'multiline':False]
['text':' Position of next Op in the compiled pattern','line_number':286,'multiline':False]
['text':' (int64_t for UVector64, values fit in an int32_t)','line_number':287,'multiline':False]
['text':' Remainder','line_number':288,'multiline':False]
['text':' Extra state, for capture group start/ends','line_number':289,'multiline':False]
['text':'   atomic parentheses, repeat counts, etc.','line_number':290,'multiline':False]
['text':'   Locations assigned at pattern compile time.','line_number':291,'multiline':False]
['text':'   Variable-length array.','line_number':292,'multiline':False]
['text':' number of UVector elements in the header','line_number':294,'multiline':False]
['text':'','line_number':297,'multiline':False]
['text':'  Start-Of-Match type.  Used by find() to quickly scan to positions where a','line_number':298,'multiline':False]
['text':'                        match might start before firing up the full match engine.','line_number':299,'multiline':False]
['text':'','line_number':300,'multiline':False]
['text':' No hint available.','line_number':302,'multiline':False]
['text':' Match starts with a literal code point.','line_number':303,'multiline':False]
['text':' Match starts with something matching a set.','line_number':304,'multiline':False]
['text':' Match starts at start of buffer only (^ or \A)','line_number':305,'multiline':False]
['text':' Match starts with ^ in multi-line mode.','line_number':306,'multiline':False]
['text':' Match starts with a literal string.','line_number':307,'multiline':False]
['text':'','line_number':318,'multiline':False]
['text':'  8 bit set, to fast-path latin-1 set membership tests.','line_number':319,'multiline':False]
['text':'','line_number':320,'multiline':False]
['text':' No bounds checking!  This is deliberate.','line_number':335,'multiline':False]
['text':'  Case folded UText Iterator helper class.','line_number':358,'multiline':False]
['text':'  Wraps a UText, provides a case-folded enumeration over its contents.','line_number':359,'multiline':False]
['text':'  Used in implementing case insensitive matching constructs.','line_number':360,'multiline':False]
['text':'  Implementation in rematch.cpp','line_number':361,'multiline':False]
['text':' Next case folded character','line_number':368,'multiline':False]
['text':' True if last char returned from next() and the','line_number':370,'multiline':False]
['text':'  next to be returned both originated from a string','line_number':371,'multiline':False]
['text':'  folding of the same code point from the orignal UText.','line_number':372,'multiline':False]
['text':' Case folded UChar * string iterator.','line_number':383,'multiline':False]
['text':'  Wraps a UChar  *, provides a case-folded enumeration over its contents.','line_number':384,'multiline':False]
['text':'  Used in implementing case insensitive matching constructs.','line_number':385,'multiline':False]
['text':'  Implementation in rematch.cpp','line_number':386,'multiline':False]
['text':' Next case folded character','line_number':393,'multiline':False]
['text':' True if last char returned from next() and the','line_number':395,'multiline':False]
['text':'  next to be returned both originated from a string','line_number':396,'multiline':False]
['text':'  folding of the same code point from the orignal UText.','line_number':397,'multiline':False]
['text':' Return the current input buffer index.','line_number':399,'multiline':False]
