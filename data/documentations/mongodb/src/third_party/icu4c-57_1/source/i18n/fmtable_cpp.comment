['text':'
*******************************************************************************
* Copyright (C) 1997-2016, International Business Machines Corporation and
* others. All Rights Reserved.
*******************************************************************************
*
* File FMTABLE.CPP
*
* Modification History:
*
*   Date        Name        Description
*   03/25/97    clhuang     Initial Implementation.
********************************************************************************
','line_number':1,'multiline':True]
['text':' *****************************************************************************','line_number':33,'multiline':False]
['text':' class Formattable','line_number':34,'multiline':False]
['text':' *****************************************************************************','line_number':35,'multiline':False]
['text':'-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.','line_number':42,'multiline':False]
['text':' NOTE: As of 3.0, there are limitations to the UObject API.  It does','line_number':44,'multiline':False]
['text':' not (yet) support cloning, operator=, nor operator==.  To','line_number':45,'multiline':False]
['text':' work around this, I implement some simple inlines here.  Later','line_number':46,'multiline':False]
['text':' these can be modified or removed.  [alan]','line_number':47,'multiline':False]
['text':' NOTE: These inlines assume that all fObjects are in fact instances','line_number':49,'multiline':False]
['text':' of the Measure class, which is true as of 3.0.  [alan]','line_number':50,'multiline':False]
['text':' Return TRUE if *a == *b.','line_number':52,'multiline':False]
['text':' LATER: return *a == *b;','line_number':54,'multiline':False]
['text':' Return a clone of *a.','line_number':58,'multiline':False]
['text':' LATER: return a->clone();','line_number':60,'multiline':False]
['text':' Return TRUE if *a is an instance of Measure.','line_number':64,'multiline':False]
['text':'*
 * Creates a new Formattable array and copies the values from the specified
 * original.
 * @param array the original array
 * @param count the original array count
 * @return the new Formattable array.
 ','line_number':69,'multiline':True]
['text':' Don't memcpy!','line_number':80,'multiline':False]
['text':'-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.','line_number':85,'multiline':False]
['text':'*
 * Set 'ec' to 'err' only if 'ec' is not already set to a failing UErrorCode.
 ','line_number':87,'multiline':True]
['text':'','line_number':96,'multiline':False]
['text':'  Common initialization code, shared by constructors.','line_number':97,'multiline':False]
['text':'  Put everything into a known state.','line_number':98,'multiline':False]
['text':'','line_number':99,'multiline':False]
['text':' -------------------------------------','line_number':108,'multiline':False]
['text':' default constructor.','line_number':109,'multiline':False]
['text':' Creates a formattable object with a long value 0.','line_number':110,'multiline':False]
['text':' -------------------------------------','line_number':116,'multiline':False]
['text':' Creates a formattable object with a Date instance.','line_number':117,'multiline':False]
['text':'isDate','line_number':119,'multiline':True]
['text':' -------------------------------------','line_number':126,'multiline':False]
['text':' Creates a formattable object with a double value.','line_number':127,'multiline':False]
['text':' -------------------------------------','line_number':136,'multiline':False]
['text':' Creates a formattable object with an int32_t value.','line_number':137,'multiline':False]
['text':' -------------------------------------','line_number':145,'multiline':False]
['text':' Creates a formattable object with an int64_t value.','line_number':146,'multiline':False]
['text':' -------------------------------------','line_number':155,'multiline':False]
['text':' Creates a formattable object with a decimal number value from a string.','line_number':156,'multiline':False]
['text':' -------------------------------------','line_number':164,'multiline':False]
['text':' Creates a formattable object with a UnicodeString instance.','line_number':165,'multiline':False]
['text':' -------------------------------------','line_number':174,'multiline':False]
['text':' Creates a formattable object with a UnicodeString* value.','line_number':175,'multiline':False]
['text':' (adopting symantics)','line_number':176,'multiline':False]
['text':' -------------------------------------','line_number':192,'multiline':False]
['text':' -------------------------------------','line_number':203,'multiline':False]
['text':' copy constructor','line_number':204,'multiline':False]
['text':' -------------------------------------','line_number':214,'multiline':False]
['text':' assignment operator','line_number':215,'multiline':False]
['text':' Disposes the current formattable value/setting.','line_number':222,'multiline':False]
['text':' Sets the correct data type for this value.','line_number':225,'multiline':False]
['text':' Sets each element in the array one by one and records the array count.','line_number':230,'multiline':False]
['text':' Sets the string value.','line_number':236,'multiline':False]
['text':' Sets the double value.','line_number':240,'multiline':False]
['text':' Sets the long value.','line_number':245,'multiline':False]
['text':' Sets the Date value.','line_number':249,'multiline':False]
['text':' TODO: use internal digit list','line_number':259,'multiline':False]
['text':' -------------------------------------','line_number':272,'multiline':False]
['text':' Returns FALSE if the data types are different.','line_number':281,'multiline':False]
['text':' Compares the actual data values.','line_number':284,'multiline':False]
['text':' Checks each element for equality.','line_number':305,'multiline':False]
['text':' TODO:  compare digit lists if numeric.','line_number':322,'multiline':False]
['text':' -------------------------------------','line_number':326,'multiline':False]
['text':' -------------------------------------','line_number':333,'multiline':False]
['text':' Deletes the data value if necessary.','line_number':337,'multiline':False]
['text':' destruct, don't deallocate','line_number':362,'multiline':False]
['text':' -------------------------------------','line_number':372,'multiline':False]
['text':' Gets the data type of this Formattable object. ','line_number':373,'multiline':False]
['text':' -------------------------------------','line_number':392,'multiline':False]
['text':'Formattable::getLong(UErrorCode* status) const','line_number':394,'multiline':False]
['text':' loses fraction','line_number':422,'multiline':False]
['text':' TODO Later replace this with instanceof call','line_number':429,'multiline':False]
['text':' -------------------------------------','line_number':441,'multiline':False]
['text':' Maximum int that can be represented exactly in a double.  (53 bits)','line_number':442,'multiline':False]
['text':'    Larger ints may be rounded to a near-by value as not all are representable.','line_number':443,'multiline':False]
['text':' TODO:  move this constant elsewhere, possibly configure it for different','line_number':444,'multiline':False]
['text':'        floating point formats, if any non-standard ones are still in use.','line_number':445,'multiline':False]
['text':' -------------------------------------','line_number':493,'multiline':False]
['text':' loses precision','line_number':503,'multiline':False]
['text':' TODO Later replace this with instanceof call','line_number':512,'multiline':False]
['text':' -------------------------------------','line_number':529,'multiline':False]
['text':' Sets the value to a double value d.','line_number':530,'multiline':False]
['text':' -------------------------------------','line_number':540,'multiline':False]
['text':' Sets the value to a long value l.','line_number':541,'multiline':False]
['text':' -------------------------------------','line_number':551,'multiline':False]
['text':' Sets the value to an int64 value ll.','line_number':552,'multiline':False]
['text':' -------------------------------------','line_number':562,'multiline':False]
['text':' Sets the value to a Date instance d.','line_number':563,'multiline':False]
['text':' -------------------------------------','line_number':573,'multiline':False]
['text':' Sets the value to a string value stringToCopy.','line_number':574,'multiline':False]
['text':' -------------------------------------','line_number':584,'multiline':False]
['text':' Sets the value to an array of Formattable objects.','line_number':585,'multiline':False]
['text':' -------------------------------------','line_number':596,'multiline':False]
['text':' Adopts the stringToAdopt value.','line_number':597,'multiline':False]
['text':' -------------------------------------','line_number':607,'multiline':False]
['text':' Adopts the array value and its count.','line_number':608,'multiline':False]
['text':' -------------------------------------','line_number':626,'multiline':False]
['text':' -------------------------------------','line_number':643,'multiline':False]
['text':' -------------------------------------','line_number':658,'multiline':False]
['text':' -------------------------------------','line_number':673,'multiline':False]
['text':' -------------------------------------','line_number':686,'multiline':False]
['text':' Gets the bogus string, ensures mondo bogosity.','line_number':687,'multiline':False]
['text':' cast away const :-( ','line_number':692,'multiline':True]
['text':' --------------------------------------','line_number':696,'multiline':False]
['text':' getDecimalNumber returns "" for error cases','line_number':707,'multiline':False]
['text':' No decimal number for the formattable yet.  Which means the value was','line_number':716,'multiline':False]
['text':' set directly by the user as an int, int64 or double.  If the value came','line_number':717,'multiline':False]
['text':' from parsing, or from the user setting a decimal number, fDecimalNum','line_number':718,'multiline':False]
['text':' would already be set.','line_number':719,'multiline':False]
['text':'','line_number':720,'multiline':False]
['text':' TODO: use internal digit list','line_number':721,'multiline':False]
['text':' The formattable's value is not a numeric type.','line_number':738,'multiline':False]
['text':' ---------------------------------------','line_number':767,'multiline':False]
['text':' don't delete','line_number':771,'multiline':False]
['text':' allow adoptDigitList(NULL) to clear','line_number':777,'multiline':False]
['text':' Set the value into the Union of simple type values.','line_number':781,'multiline':False]
['text':' Cannot use the set() functions because they would delete the fDecimalNum value,','line_number':782,'multiline':False]
['text':' ---------------------------------------','line_number':797,'multiline':False]
['text':' Copy the input string and nul-terminate it.','line_number':805,'multiline':False]
['text':'    The decNumber library requires nul-terminated input.  StringPiece input','line_number':806,'multiline':False]
['text':'    is not guaranteed nul-terminated.  Too bad.','line_number':807,'multiline':False]
['text':'    CharString automatically adds the nul.','line_number':808,'multiline':False]
['text':' TODO: use getInternalDigitList','line_number':809,'multiline':False]
['text':' String didn't contain a decimal number.','line_number':817,'multiline':False]
['text':' Note that we do not hang on to the caller's input string.','line_number':821,'multiline':False]
['text':' If we are asked for the string, we will regenerate one from fDecimalNum.','line_number':822,'multiline':False]
['text':'----------------------------------------------------','line_number':826,'multiline':False]
['text':' console I/O','line_number':827,'multiline':False]
['text':'----------------------------------------------------','line_number':828,'multiline':False]
['text':' not : public UObject because all methods are static ','line_number':837,'multiline':True]
['text':' private - forbid instantiation','line_number':842,'multiline':False]
['text':' This is for debugging purposes only.  This will send a displayable','line_number':845,'multiline':False]
['text':' form of the Formattable object to the output stream.','line_number':846,'multiline':False]
['text':' Creates a DateFormat instance for formatting the','line_number':856,'multiline':False]
['text':' Date instance.','line_number':857,'multiline':False]
['text':' Output the double as is.','line_number':865,'multiline':False]
['text':' Output the double as is.','line_number':869,'multiline':False]
['text':' Output the double as is.  Please see UnicodeString console','line_number':873,'multiline':False]
['text':' I/O routine for more details.','line_number':874,'multiline':False]
['text':' Recursively calling the console I/O routine for each element in the array.','line_number':882,'multiline':False]
['text':' Not a recognizable Formattable object.','line_number':890,'multiline':False]
['text':' ---- UFormattable implementation ---- ','line_number':901,'multiline':True]
['text':' avoid bogosity by checking the type first.','line_number':980,'multiline':False]
['text':' This should return a valid string','line_number':988,'multiline':False]
['text':' returns non-const Formattable','line_number':1016,'multiline':False]
['text':' #if !UCONFIG_NO_FORMATTING ','line_number':1047,'multiline':True]
['text':'eof','line_number':1049,'multiline':False]
