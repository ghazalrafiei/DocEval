['text':'
 **********************************************************************
 * Copyright (C) 2001-2011, International Business Machines Corporation
 * and others. All Rights Reserved.
 **********************************************************************
 *   Date        Name        Description
 *   07/26/01    aliu        Creation.
 **********************************************************************
 ','line_number':1,'multiline':True]
['text':'*
     * UnicodeFunctor API.  Cast 'this' to a UnicodeMatcher* pointer
     * and return the pointer.
     * @return the UnicodeMatcher pointer.
     ','line_number':35,'multiline':True]
['text':'*
     * Implement UnicodeFunctor
     * @return a copy of the object.
     ','line_number':42,'multiline':True]
['text':'*
     * Implement UnicodeMatcher
     * @param text the text to be matched
     * @param offset on input, the index into text at which to begin
     * matching.  On output, the limit of the matched text.  The
     * number of matched characters is the output value of offset
     * minus the input value.  Offset should always point to the
     * HIGH SURROGATE (leading code unit) of a pair of surrogates,
     * both on entry and upon return.
     * @param limit the limit index of text to be matched.  Greater
     * than offset for a forward direction match, less than offset for
     * a backward direction match.  The last character to be
     * considered for matching will be text.charAt(limit-1) in the
     * forward direction or text.charAt(limit+1) in the backward
     * direction.
     * @param incremental  if TRUE, then assume further characters may
     * be inserted at limit and check for partial matching.  Otherwise
     * assume the text as given is complete.
     * @return a match degree value indicating a full match, a partial
     * match, or a mismatch.  If incremental is FALSE then
     * U_PARTIAL_MATCH should never be returned.
     ','line_number':48,'multiline':True]
['text':'*
     * Implement UnicodeMatcher
     * @param result            Output param to receive the pattern.
     * @param escapeUnprintable if True then escape the unprintable characters.
     * @return                  A reference to 'result'.
     ','line_number':75,'multiline':True]
['text':'*
     * Implement UnicodeMatcher
     * @param v    the given index value.
     * @return     true if this rule matches the given index value.
     ','line_number':84,'multiline':True]
['text':'*
     * Implement UnicodeMatcher
     ','line_number':91,'multiline':True]
['text':'*
     * UnicodeFunctor API
     ','line_number':96,'multiline':True]
['text':'*
     * ICU "poor man's RTTI", returns a UClassID for the actual class.
     ','line_number':101,'multiline':True]
['text':'*
     * ICU "poor man's RTTI", returns a UClassID for this class.
     ','line_number':106,'multiline':True]
['text':' owned','line_number':113,'multiline':False]
['text':' #if !UCONFIG_NO_TRANSLITERATION ','line_number':122,'multiline':True]
