['text':'
********************************************************************************
*   Copyright (C) 2005-2016, International Business Machines
*   Corporation and others.  All Rights Reserved.
********************************************************************************
*
* File WINNMFMT.CPP
*
********************************************************************************
','line_number':1,'multiline':True]
['text':'
 * Turns a string of the form "3;2;0" into the grouping UINT
 * needed for NUMBERFMT and CURRENCYFMT. If the string does not
 * end in ";0" then the return value should be multiplied by 10.
 * (e.g. "3" => 30, "3;2" => 320)
 ','line_number':53,'multiline':True]
['text':' Resolve actual locale to be used later','line_number':144,'multiline':False]
['text':' Due to the arguments causing a result to be <= 23 characters (+2 for NULL and minus),
    we don't need to reallocate the buffer. ','line_number':254,'multiline':True]
['text':' Just to make sure of the above statement, we add this assert ','line_number':260,'multiline':True]
['text':' The following code is not used because _vscwprintf isn't available on MinGW at the moment.','line_number':262,'multiline':False]
['text':'if (result < 0) {
        int newLength;

        va_start(args, fmt);
        newLength = _vscwprintf(fmt, args);
        va_end(args);

        nBuffer = NEW_ARRAY(UChar, newLength + 1);

        va_start(args, fmt);
        result = _vsnwprintf(nBuffer, newLength + 1, fmt, args);
        va_end(args);
    }','line_number':263,'multiline':True]
['text':' vswprintf is sensitive to the locale set by setlocale. For some locales','line_number':277,'multiline':False]
['text':' it doesn't use "." as the decimal separator, which is what GetNumberFormatW','line_number':278,'multiline':False]
['text':' and GetCurrencyFormatW both expect to see.','line_number':279,'multiline':False]
['text':'','line_number':280,'multiline':False]
['text':' To fix this, we scan over the string and replace the first non-digits, except','line_number':281,'multiline':False]
['text':' for a leading "-", with a "."','line_number':282,'multiline':False]
['text':'','line_number':283,'multiline':False]
['text':' Note: (nBuffer[0] == L'-') will evaluate to 1 if there is a leading '-' in the','line_number':284,'multiline':False]
['text':' number, and 0 otherwise.','line_number':285,'multiline':False]
['text':'if (nBuffer != nStackBuffer) {
        DELETE_ARRAY(nBuffer);
    }','line_number':350,'multiline':True]
['text':' #if !UCONFIG_NO_FORMATTING ','line_number':359,'multiline':True]
['text':' U_PLATFORM_USES_ONLY_WIN32_API','line_number':361,'multiline':False]
