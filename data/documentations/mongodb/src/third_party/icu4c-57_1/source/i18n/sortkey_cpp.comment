['text':'
*******************************************************************************
* Copyright (C) 1996-2012, International Business Machines Corporation and
* others. All Rights Reserved.
*******************************************************************************
','line_number':1,'multiline':True]
['text':'===============================================================================','line_number':7,'multiline':False]
['text':'','line_number':8,'multiline':False]
['text':' File sortkey.cpp','line_number':9,'multiline':False]
['text':'','line_number':10,'multiline':False]
['text':'','line_number':11,'multiline':False]
['text':'','line_number':12,'multiline':False]
['text':' Created by: Helena Shih','line_number':13,'multiline':False]
['text':'','line_number':14,'multiline':False]
['text':' Modification History:','line_number':15,'multiline':False]
['text':'','line_number':16,'multiline':False]
['text':'  Date         Name          Description','line_number':17,'multiline':False]
['text':'','line_number':18,'multiline':False]
['text':'  6/20/97      helena        Java class name change.','line_number':19,'multiline':False]
['text':'  6/23/97      helena        Added comments to make code more readable.','line_number':20,'multiline':False]
['text':'  6/26/98      erm           Canged to use byte arrays instead of UnicodeString','line_number':21,'multiline':False]
['text':'  7/31/98      erm           hashCode: minimum inc should be 2 not 1,','line_number':22,'multiline':False]
['text':'                             Cleaned up operator=','line_number':23,'multiline':False]
['text':' 07/12/99      helena        HPUX 11 CC port.','line_number':24,'multiline':False]
['text':' 03/06/01      synwee        Modified compareTo, to handle the result of','line_number':25,'multiline':False]
['text':'                             2 string similar in contents, but one is longer','line_number':26,'multiline':False]
['text':'                             than the other','line_number':27,'multiline':False]
['text':'===============================================================================','line_number':28,'multiline':False]
['text':' A hash code of kInvalidHashCode indicates that the hash code needs','line_number':41,'multiline':False]
['text':' to be computed. A hash code of kEmptyHashCode is used for empty keys','line_number':42,'multiline':False]
['text':' and for any key whose computed hash code is kInvalidHashCode.','line_number':43,'multiline':False]
['text':' The "bogus hash code" replaces a separate fBogus flag.','line_number':46,'multiline':False]
['text':' Create a collation key from a bit array.','line_number':57,'multiline':False]
['text':' U_ASSERT(newLength >= 0 && newLength <= getCapacity());','line_number':113,'multiline':False]
['text':' set the key to an empty state','line_number':118,'multiline':False]
['text':' set the key to a "bogus" or invalid state','line_number':128,'multiline':False]
['text':' Bitwise comparison for the collation keys.','line_number':170,'multiline':False]
['text':' Bitwise comparison for the collation keys.','line_number':178,'multiline':False]
['text':' are we comparing the same string','line_number':186,'multiline':False]
['text':' are we comparing different lengths?','line_number':192,'multiline':False]
['text':' Create a copy of the byte array.','line_number':222,'multiline':False]
['text':' (Cribbed from UnicodeString)','line_number':262,'multiline':False]
['text':' We cache the hashCode; when it becomes invalid, due to any change to the','line_number':263,'multiline':False]
['text':' string, we note this by setting it to kInvalidHashCode. [LIU]','line_number':264,'multiline':False]
['text':' Note: This method is semantically const, but physically non-const.','line_number':266,'multiline':False]
['text':' #if !UCONFIG_NO_COLLATION ','line_number':285,'multiline':True]
