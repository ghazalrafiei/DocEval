['text':'
*******************************************************************************
*   Copyright (C) 2004-2015, International Business Machines
*   Corporation and others.  All Rights Reserved.
*******************************************************************************
*   file name:  uregex.cpp
','line_number':1,'multiline':True]
['text':' Text from setText()','line_number':42,'multiline':False]
['text':' Length provided by user with setText(), which','line_number':43,'multiline':False]
['text':'  may be -1.','line_number':44,'multiline':False]
['text':' "rexp" in ASCII','line_number':48,'multiline':False]
['text':'----------------------------------------------------------------------------------------','line_number':80,'multiline':False]
['text':'','line_number':81,'multiline':False]
['text':'   validateRE    Do boilerplate style checks on API function parameters.','line_number':82,'multiline':False]
['text':'                 Return TRUE if they look OK.','line_number':83,'multiline':False]
['text':'----------------------------------------------------------------------------------------','line_number':84,'multiline':False]
['text':' !!! Not sure how to update this with the new UText backing, which is stored in re->fMatcher anyway','line_number':93,'multiline':False]
['text':'----------------------------------------------------------------------------------------','line_number':101,'multiline':False]
['text':'','line_number':102,'multiline':False]
['text':'    uregex_open','line_number':103,'multiline':False]
['text':'','line_number':104,'multiline':False]
['text':'----------------------------------------------------------------------------------------','line_number':105,'multiline':False]
['text':'','line_number':138,'multiline':False]
['text':' Make a copy of the pattern string, so we can return it later if asked.','line_number':139,'multiline':False]
['text':'    For compiling the pattern, we will use a UText wrapper around','line_number':140,'multiline':False]
['text':'    this local copy, to avoid making even more copies.','line_number':141,'multiline':False]
['text':'','line_number':142,'multiline':False]
['text':'','line_number':151,'multiline':False]
['text':' Compile the pattern','line_number':152,'multiline':False]
['text':'','line_number':153,'multiline':False]
['text':'','line_number':165,'multiline':False]
['text':' Create the matcher object','line_number':166,'multiline':False]
['text':'','line_number':167,'multiline':False]
['text':'----------------------------------------------------------------------------------------','line_number':179,'multiline':False]
['text':'','line_number':180,'multiline':False]
['text':'    uregex_openUText','line_number':181,'multiline':False]
['text':'','line_number':182,'multiline':False]
['text':'----------------------------------------------------------------------------------------','line_number':183,'multiline':False]
['text':'','line_number':222,'multiline':False]
['text':' Make a copy of the pattern string, so we can return it later if asked.','line_number':223,'multiline':False]
['text':'    For compiling the pattern, we will use a read-only UText wrapper','line_number':224,'multiline':False]
['text':'    around this local copy, to avoid making even more copies.','line_number':225,'multiline':False]
['text':'','line_number':226,'multiline':False]
['text':'','line_number':234,'multiline':False]
['text':' Compile the pattern','line_number':235,'multiline':False]
['text':'','line_number':236,'multiline':False]
['text':'','line_number':248,'multiline':False]
['text':' Create the matcher object','line_number':249,'multiline':False]
['text':'','line_number':250,'multiline':False]
['text':'----------------------------------------------------------------------------------------','line_number':262,'multiline':False]
['text':'','line_number':263,'multiline':False]
['text':'    uregex_close','line_number':264,'multiline':False]
['text':'','line_number':265,'multiline':False]
['text':'----------------------------------------------------------------------------------------','line_number':266,'multiline':False]
['text':'----------------------------------------------------------------------------------------','line_number':278,'multiline':False]
['text':'','line_number':279,'multiline':False]
['text':'    uregex_clone','line_number':280,'multiline':False]
['text':'','line_number':281,'multiline':False]
['text':'----------------------------------------------------------------------------------------','line_number':282,'multiline':False]
['text':' Note:  fText is not cloned.','line_number':307,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':315,'multiline':False]
['text':'','line_number':316,'multiline':False]
['text':'    uregex_pattern','line_number':317,'multiline':False]
['text':'','line_number':318,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':319,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':336,'multiline':False]
['text':'','line_number':337,'multiline':False]
['text':'    uregex_patternUText','line_number':338,'multiline':False]
['text':'','line_number':339,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':340,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':349,'multiline':False]
['text':'','line_number':350,'multiline':False]
['text':'    uregex_flags','line_number':351,'multiline':False]
['text':'','line_number':352,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':353,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':365,'multiline':False]
['text':'','line_number':366,'multiline':False]
['text':'    uregex_setText','line_number':367,'multiline':False]
['text':'','line_number':368,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':369,'multiline':False]
['text':' reset() made a shallow clone, so we don't need this copy','line_number':395,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':399,'multiline':False]
['text':'','line_number':400,'multiline':False]
['text':'    uregex_setUText','line_number':401,'multiline':False]
['text':'','line_number':402,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':403,'multiline':False]
['text':' only fill it in on request','line_number':421,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':429,'multiline':False]
['text':'','line_number':430,'multiline':False]
['text':'    uregex_getText','line_number':431,'multiline':False]
['text':'','line_number':432,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':433,'multiline':False]
['text':' need to fill in the text','line_number':444,'multiline':False]
['text':' because the UText owns it','line_number':450,'multiline':False]
['text':' buffer overflow error','line_number':453,'multiline':False]
['text':' should already be set but just in case','line_number':458,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':469,'multiline':False]
['text':'','line_number':470,'multiline':False]
['text':'    uregex_getUText','line_number':471,'multiline':False]
['text':'','line_number':472,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':473,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':486,'multiline':False]
['text':'','line_number':487,'multiline':False]
['text':'    uregex_refreshUText','line_number':488,'multiline':False]
['text':'','line_number':489,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':490,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':503,'multiline':False]
['text':'','line_number':504,'multiline':False]
['text':'    uregex_matches','line_number':505,'multiline':False]
['text':'','line_number':506,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':507,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':533,'multiline':False]
['text':'','line_number':534,'multiline':False]
['text':'    uregex_lookingAt','line_number':535,'multiline':False]
['text':'','line_number':536,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':537,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':564,'multiline':False]
['text':'','line_number':565,'multiline':False]
['text':'    uregex_find','line_number':566,'multiline':False]
['text':'','line_number':567,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':568,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':595,'multiline':False]
['text':'','line_number':596,'multiline':False]
['text':'    uregex_findNext','line_number':597,'multiline':False]
['text':'','line_number':598,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':599,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':611,'multiline':False]
['text':'','line_number':612,'multiline':False]
['text':'    uregex_groupCount','line_number':613,'multiline':False]
['text':'','line_number':614,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':615,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':628,'multiline':False]
['text':'','line_number':629,'multiline':False]
['text':'    uregex_groupNumberFromName','line_number':630,'multiline':False]
['text':'','line_number':631,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':632,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':658,'multiline':False]
['text':'','line_number':659,'multiline':False]
['text':'    uregex_group','line_number':660,'multiline':False]
['text':'','line_number':661,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':662,'multiline':False]
['text':' If preflighting or if we already have the text as UChars,','line_number':679,'multiline':False]
['text':' this is a little cheaper than extracting from the UText','line_number':680,'multiline':False]
['text':'','line_number':682,'multiline':False]
['text':' Pick up the range of characters from the matcher','line_number':683,'multiline':False]
['text':'','line_number':684,'multiline':False]
['text':'','line_number':691,'multiline':False]
['text':' Trim length based on buffer capacity','line_number':692,'multiline':False]
['text':'','line_number':693,'multiline':False]
['text':'','line_number':705,'multiline':False]
['text':' Copy capture group to user's buffer','line_number':706,'multiline':False]
['text':'','line_number':707,'multiline':False]
['text':' Note edge cases:','line_number':718,'multiline':False]
['text':'   Group didn't match: start == end == -1. UText trims to 0, UText gives zero length result.','line_number':719,'multiline':False]
['text':'   Zero Length Match: start == end.','line_number':720,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':728,'multiline':False]
['text':'','line_number':729,'multiline':False]
['text':'    uregex_groupUText','line_number':730,'multiline':False]
['text':'','line_number':731,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':732,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':748,'multiline':False]
['text':'','line_number':749,'multiline':False]
['text':'    uregex_start','line_number':750,'multiline':False]
['text':'','line_number':751,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':752,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':772,'multiline':False]
['text':'','line_number':773,'multiline':False]
['text':'    uregex_end','line_number':774,'multiline':False]
['text':'','line_number':775,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':776,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':796,'multiline':False]
['text':'','line_number':797,'multiline':False]
['text':'    uregex_reset','line_number':798,'multiline':False]
['text':'','line_number':799,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':800,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':820,'multiline':False]
['text':'','line_number':821,'multiline':False]
['text':'    uregex_setRegion','line_number':822,'multiline':False]
['text':'','line_number':823,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':824,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':846,'multiline':False]
['text':'','line_number':847,'multiline':False]
['text':'    uregex_setRegionAndStart','line_number':848,'multiline':False]
['text':'','line_number':849,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':850,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':864,'multiline':False]
['text':'','line_number':865,'multiline':False]
['text':'    uregex_regionStart','line_number':866,'multiline':False]
['text':'','line_number':867,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':868,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':886,'multiline':False]
['text':'','line_number':887,'multiline':False]
['text':'    uregex_regionEnd','line_number':888,'multiline':False]
['text':'','line_number':889,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':890,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':908,'multiline':False]
['text':'','line_number':909,'multiline':False]
['text':'    uregex_hasTransparentBounds','line_number':910,'multiline':False]
['text':'','line_number':911,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':912,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':924,'multiline':False]
['text':'','line_number':925,'multiline':False]
['text':'    uregex_useTransparentBounds','line_number':926,'multiline':False]
['text':'','line_number':927,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':928,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':941,'multiline':False]
['text':'','line_number':942,'multiline':False]
['text':'    uregex_hasAnchoringBounds','line_number':943,'multiline':False]
['text':'','line_number':944,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':945,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':957,'multiline':False]
['text':'','line_number':958,'multiline':False]
['text':'    uregex_useAnchoringBounds','line_number':959,'multiline':False]
['text':'','line_number':960,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':961,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':974,'multiline':False]
['text':'','line_number':975,'multiline':False]
['text':'    uregex_hitEnd','line_number':976,'multiline':False]
['text':'','line_number':977,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':978,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':990,'multiline':False]
['text':'','line_number':991,'multiline':False]
['text':'    uregex_requireEnd','line_number':992,'multiline':False]
['text':'','line_number':993,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':994,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':1006,'multiline':False]
['text':'','line_number':1007,'multiline':False]
['text':'    uregex_setTimeLimit','line_number':1008,'multiline':False]
['text':'','line_number':1009,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':1010,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':1023,'multiline':False]
['text':'','line_number':1024,'multiline':False]
['text':'    uregex_getTimeLimit','line_number':1025,'multiline':False]
['text':'','line_number':1026,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':1027,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':1041,'multiline':False]
['text':'','line_number':1042,'multiline':False]
['text':'    uregex_setStackLimit','line_number':1043,'multiline':False]
['text':'','line_number':1044,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':1045,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':1058,'multiline':False]
['text':'','line_number':1059,'multiline':False]
['text':'    uregex_getStackLimit','line_number':1060,'multiline':False]
['text':'','line_number':1061,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':1062,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':1075,'multiline':False]
['text':'','line_number':1076,'multiline':False]
['text':'    uregex_setMatchCallback','line_number':1077,'multiline':False]
['text':'','line_number':1078,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':1079,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':1092,'multiline':False]
['text':'','line_number':1093,'multiline':False]
['text':'    uregex_getMatchCallback','line_number':1094,'multiline':False]
['text':'','line_number':1095,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':1096,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':1109,'multiline':False]
['text':'','line_number':1110,'multiline':False]
['text':'    uregex_setMatchProgressCallback','line_number':1111,'multiline':False]
['text':'','line_number':1112,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':1113,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':1126,'multiline':False]
['text':'','line_number':1127,'multiline':False]
['text':'    uregex_getMatchCallback','line_number':1128,'multiline':False]
['text':'','line_number':1129,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':1130,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':1143,'multiline':False]
['text':'','line_number':1144,'multiline':False]
['text':'    uregex_replaceAll','line_number':1145,'multiline':False]
['text':'','line_number':1146,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':1147,'multiline':False]
['text':' Note: Seperate error code variables for findNext() and appendReplacement()','line_number':1170,'multiline':False]
['text':'       are used so that destination buffer overflow errors','line_number':1171,'multiline':False]
['text':'       in appendReplacement won't stop findNext() from working.','line_number':1172,'multiline':False]
['text':'       appendReplacement() and appendTail() special case incoming buffer','line_number':1173,'multiline':False]
['text':'       overflow errors, continuing to return the correct length.','line_number':1174,'multiline':False]
['text':' If anything went wrong with the findNext(), make that error trump','line_number':1183,'multiline':False]
['text':'   whatever may have happened with the append() operations.','line_number':1184,'multiline':False]
['text':'   Errors in findNext() are not expected.','line_number':1185,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':1193,'multiline':False]
['text':'','line_number':1194,'multiline':False]
['text':'    uregex_replaceAllUText','line_number':1195,'multiline':False]
['text':'','line_number':1196,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':1197,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':1217,'multiline':False]
['text':'','line_number':1218,'multiline':False]
['text':'    uregex_replaceFirst','line_number':1219,'multiline':False]
['text':'','line_number':1220,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':1221,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':1254,'multiline':False]
['text':'','line_number':1255,'multiline':False]
['text':'    uregex_replaceFirstUText','line_number':1256,'multiline':False]
['text':'','line_number':1257,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':1258,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':1278,'multiline':False]
['text':'','line_number':1279,'multiline':False]
['text':'    uregex_appendReplacement','line_number':1280,'multiline':False]
['text':'','line_number':1281,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':1282,'multiline':False]
['text':'','line_number':1285,'multiline':False]
['text':'  Dummy class, because these functions need to be friends of class RegexMatcher,','line_number':1286,'multiline':False]
['text':'               and stand-alone C functions don't work as friends','line_number':1287,'multiline':False]
['text':'','line_number':1288,'multiline':False]
['text':'','line_number':1321,'multiline':False]
['text':'  Move a character to an output buffer, with bounds checking on the index.','line_number':1322,'multiline':False]
['text':'      Index advances even if capacity is exceeded, for preflight size computations.','line_number':1323,'multiline':False]
['text':'      This little sequence is used a LOT.','line_number':1324,'multiline':False]
['text':'','line_number':1325,'multiline':False]
['text':'','line_number':1334,'multiline':False]
['text':'  appendReplacement, the actual implementation.','line_number':1335,'multiline':False]
['text':'','line_number':1336,'multiline':False]
['text':' If we come in with a buffer overflow error, don't suppress the operation.','line_number':1344,'multiline':False]
['text':'  A series of appendReplacements, appendTail need to correctly preflight','line_number':1345,'multiline':False]
['text':'  the buffer size when an overflow happens somewhere in the middle.','line_number':1346,'multiline':False]
['text':'','line_number':1353,'multiline':False]
['text':' Validate all paramters','line_number':1354,'multiline':False]
['text':'','line_number':1355,'multiline':False]
['text':' If it wasn't supplied by the caller,  get the length of the replacement text.','line_number':1378,'multiline':False]
['text':'   TODO:  slightly smarter logic in the copy loop could watch for the NUL on','line_number':1379,'multiline':False]
['text':'          the fly and avoid this step.','line_number':1380,'multiline':False]
['text':' Copy input string from the end of previous match to start of current match','line_number':1385,'multiline':False]
['text':' !!!: Would like a better way to do this!','line_number':1393,'multiline':False]
['text':' ignore','line_number':1403,'multiline':False]
['text':' scan the replacement text, looking for substitutions ($n) and \escapes.','line_number':1410,'multiline':False]
['text':' Common case, no substitution, no escaping,','line_number':1416,'multiline':False]
['text':'  just copy the char to the dest buf.','line_number':1417,'multiline':False]
['text':' Backslash Escape.  Copy the following char out without further checks.','line_number':1423,'multiline':False]
['text':'                    Note:  Surrogate pairs don't need any special handling','line_number':1424,'multiline':False]
['text':'                           The second half wont be a '$' or a '\', and','line_number':1425,'multiline':False]
['text':'                           will move to the dest normally on the next','line_number':1426,'multiline':False]
['text':'                           loop iteration.','line_number':1427,'multiline':False]
['text':'U','line_number':1433,'multiline':True]
['text':'u','line_number':1433,'multiline':True]
['text':' We have a \udddd or \Udddddddd escape sequence.','line_number':1434,'multiline':False]
['text':' Index is updated by unescapeAt','line_number':1437,'multiline':False]
['text':' Length of replacement text','line_number':1438,'multiline':False]
['text':' Note:  if the \u escape was invalid, just fall through and','line_number':1450,'multiline':False]
['text':'        treat it as a plain \<anything> escape.','line_number':1451,'multiline':False]
['text':' Plain backslash escape.  Just put out the escaped character.','line_number':1454,'multiline':False]
['text':' We've got a $.  Pick up the following capture group name or number.','line_number':1461,'multiline':False]
['text':' For numbers, consume only digits that produce a valid capture group for the pattern.','line_number':1462,'multiline':False]
['text':' Scan for Named Capture Group, ${name}.','line_number':1493,'multiline':False]
['text':' A..Z','line_number':1502,'multiline':False]
['text':' a..z','line_number':1503,'multiline':False]
['text':' 0..9','line_number':1504,'multiline':False]
['text':' Name not defined by pattern.','line_number':1509,'multiline':False]
['text':' Character was something other than a name char or a closing '}'','line_number':1513,'multiline':False]
['text':' $ not followed by {name} or digits.','line_number':1518,'multiline':False]
['text':' Finally, append the capture group data to the destination.','line_number':1523,'multiline':False]
['text':' Ignore buffer overflow when extracting the group.  We need to','line_number':1528,'multiline':False]
['text':'   continue on to get full size of the untruncated result.  We will','line_number':1529,'multiline':False]
['text':'   raise our own buffer overflow error at the end.','line_number':1530,'multiline':False]
['text':' bad group number or name.','line_number':1536,'multiline':False]
['text':'','line_number':1541,'multiline':False]
['text':'  Nul Terminate the dest buffer if possible.','line_number':1542,'multiline':False]
['text':'  Set the appropriate buffer overflow or not terminated error, if needed.','line_number':1543,'multiline':False]
['text':'','line_number':1544,'multiline':False]
['text':'','line_number':1555,'multiline':False]
['text':' Return an updated dest buffer and capacity to the caller.','line_number':1556,'multiline':False]
['text':'','line_number':1557,'multiline':False]
['text':' If we came in with a buffer overflow, make sure we go out with one also.','line_number':1568,'multiline':False]
['text':'   (A zero length match right at the end of the previous match could','line_number':1569,'multiline':False]
['text':'    make this function succeed even though a previous call had overflowed the buf)','line_number':1570,'multiline':False]
['text':'','line_number':1578,'multiline':False]
['text':'   appendReplacement   the actual API function,','line_number':1579,'multiline':False]
['text':'','line_number':1580,'multiline':False]
['text':'','line_number':1594,'multiline':False]
['text':'   uregex_appendReplacementUText...can just use the normal C++ method','line_number':1595,'multiline':False]
['text':'','line_number':1596,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':1607,'multiline':False]
['text':'','line_number':1608,'multiline':False]
['text':'    uregex_appendTail','line_number':1609,'multiline':False]
['text':'','line_number':1610,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':1611,'multiline':False]
['text':' If we come in with a buffer overflow error, don't suppress the operation.','line_number':1618,'multiline':False]
['text':'  A series of appendReplacements, appendTail need to correctly preflight','line_number':1619,'multiline':False]
['text':'  the buffer size when an overflow happens somewhere in the middle.','line_number':1620,'multiline':False]
['text':' We've overflowed the dest buffer.','line_number':1672,'multiline':False]
['text':'  If the total input string length is known, we can','line_number':1673,'multiline':False]
['text':'    compute the total buffer size needed without scanning through the string.','line_number':1674,'multiline':False]
['text':' The most recent call to find() succeeded.','line_number':1686,'multiline':False]
['text':' The last call to find() on this matcher failed().','line_number':1689,'multiline':False]
['text':'   Look back to the end of the last find() that succeeded for src index.','line_number':1690,'multiline':False]
['text':' There has been no successful match with this matcher.','line_number':1693,'multiline':False]
['text':'   We want to copy the whole string.','line_number':1694,'multiline':False]
['text':'','line_number':1702,'multiline':False]
['text':'  NUL terminate the output string, if possible, otherwise issue the','line_number':1703,'multiline':False]
['text':'   appropriate error or warning.','line_number':1704,'multiline':False]
['text':'','line_number':1705,'multiline':False]
['text':'','line_number':1714,'multiline':False]
['text':' Update the user's buffer ptr and capacity vars to reflect the','line_number':1715,'multiline':False]
['text':'   amount used.','line_number':1716,'multiline':False]
['text':'','line_number':1717,'multiline':False]
['text':'','line_number':1734,'multiline':False]
['text':'   appendTail   the actual API function','line_number':1735,'multiline':False]
['text':'','line_number':1736,'multiline':False]
['text':'','line_number':1747,'multiline':False]
['text':'   uregex_appendTailUText...can just use the normal C++ method','line_number':1748,'multiline':False]
['text':'','line_number':1749,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':1759,'multiline':False]
['text':'','line_number':1760,'multiline':False]
['text':'    copyString     Internal utility to copy a string to an output buffer,','line_number':1761,'multiline':False]
['text':'                   while managing buffer overflow and preflight size','line_number':1762,'multiline':False]
['text':'                   computation.  NUL termination is added to destination,','line_number':1763,'multiline':False]
['text':'                   and the NUL is counted in the output size.','line_number':1764,'multiline':False]
['text':'','line_number':1765,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':1766,'multiline':False]
['text':'  Destination buffer.','line_number':1768,'multiline':False]
['text':'  Total capacity of dest buffer','line_number':1769,'multiline':False]
['text':'  Index into dest buffer.  Updated on return.','line_number':1770,'multiline':False]
['text':'    Update not clipped to destCapacity.','line_number':1771,'multiline':False]
['text':'  Pointer to source string','line_number':1772,'multiline':False]
['text':'  Source string len.','line_number':1773,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':1797,'multiline':False]
['text':'','line_number':1798,'multiline':False]
['text':'    uregex_split','line_number':1799,'multiline':False]
['text':'','line_number':1800,'multiline':False]
['text':'------------------------------------------------------------------------------','line_number':1801,'multiline':False]
['text':'','line_number':1809,'multiline':False]
['text':' Reset for the input text','line_number':1810,'multiline':False]
['text':'','line_number':1811,'multiline':False]
['text':'','line_number':1820,'multiline':False]
['text':' Loop through the input text, searching for the delimiter pattern','line_number':1821,'multiline':False]
['text':'','line_number':1822,'multiline':False]
['text':' Index of the field being processed.','line_number':1823,'multiline':False]
['text':' Next available position in destBuf;','line_number':1824,'multiline':False]
['text':' Want to ignore any buffer overflow errors so that the strings are still counted','line_number':1826,'multiline':False]
['text':' There are one or zero output strings left.','line_number':1829,'multiline':False]
['text':' Fill the last output string with whatever is left from the input, then exit the loop.','line_number':1830,'multiline':False]
['text':'  ( i will be == destFieldsCapacity if we filled the output array while processing','line_number':1831,'multiline':False]
['text':'    capture groups of the delimiter expression, in which case we will discard the','line_number':1832,'multiline':False]
['text':'    last capture group saved in favor of the unprocessed remainder of the','line_number':1833,'multiline':False]
['text':'    input string.)','line_number':1834,'multiline':False]
['text':' No fields are left.  Recycle the last one for holding the trailing part of','line_number':1837,'multiline':False]
['text':'   the input string.','line_number':1838,'multiline':False]
['text':' We found another delimiter.  Move everything from where we started looking','line_number':1851,'multiline':False]
['text':'  up until the start of the delimiter into the next output string.','line_number':1852,'multiline':False]
['text':' If the delimiter pattern has capturing parentheses, the captured','line_number':1864,'multiline':False]
['text':'  text goes out into the next n destination strings.','line_number':1865,'multiline':False]
['text':' If we've run out of output string slots, bail out.','line_number':1868,'multiline':False]
['text':' Set up to extract the capture group contents into the dest buffer.','line_number':1874,'multiline':False]
['text':' Record the space used in the output string buffer.','line_number':1882,'multiline':False]
['text':'  +1 for the NUL that terminates the string.','line_number':1883,'multiline':False]
['text':' The delimiter was at the end of the string.','line_number':1892,'multiline':False]
['text':' Output an empty string, and then we are done.','line_number':1893,'multiline':False]
['text':' We ran off the end of the input while looking for the next delimiter.','line_number':1910,'multiline':False]
['text':' All the remaining text goes into the current output string.','line_number':1911,'multiline':False]
['text':' Zero out any unused portion of the destFields array','line_number':1919,'multiline':False]
['text':'','line_number':1934,'multiline':False]
['text':'   uregex_split   The actual API function','line_number':1935,'multiline':False]
['text':'','line_number':1936,'multiline':False]
['text':'','line_number':1961,'multiline':False]
['text':'   uregex_splitUText...can just use the normal C++ method','line_number':1962,'multiline':False]
['text':'','line_number':1963,'multiline':False]
['text':' !UCONFIG_NO_REGULAR_EXPRESSIONS','line_number':1974,'multiline':False]
