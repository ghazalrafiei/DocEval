['text':'
**********************************************************************
*   Copyright (c) 2001-2012, International Business Machines Corporation
*   and others.  All Rights Reserved.
**********************************************************************
*   Date        Name        Description
*   07/23/01    aliu        Creation.
**********************************************************************
','line_number':1,'multiline':True]
['text':'*
 * Destructor
 ','line_number':50,'multiline':True]
['text':'*
 * Implement UnicodeFunctor
 ','line_number':56,'multiline':True]
['text':'*
 * UnicodeFunctor API.  Cast 'this' to a UnicodeMatcher* pointer
 * and return the pointer.
 ','line_number':63,'multiline':True]
['text':'*
 * UnicodeFunctor API.  Cast 'this' to a UnicodeReplacer* pointer
 * and return the pointer.
 ','line_number':74,'multiline':True]
['text':'*
 * Implement UnicodeMatcher
 ','line_number':85,'multiline':True]
['text':' Match in the reverse direction','line_number':95,'multiline':False]
['text':' Record the match position, but adjust for a normal','line_number':114,'multiline':False]
['text':' forward start, limit, and only if a prior match does not','line_number':115,'multiline':False]
['text':' exist -- we want the rightmost match.','line_number':116,'multiline':False]
['text':' We've reached the context limit without a mismatch and','line_number':124,'multiline':False]
['text':' without completing our match.','line_number':125,'multiline':False]
['text':' Don't need the cursor < limit check if','line_number':131,'multiline':False]
['text':' incremental is TRUE (because it's done above); do need','line_number':132,'multiline':False]
['text':' it otherwise.','line_number':133,'multiline':False]
['text':' Record the match position','line_number':148,'multiline':False]
['text':'*
 * Implement UnicodeMatcher
 ','line_number':157,'multiline':True]
['text':'(','line_number':166,'multiline':True]
['text':')','line_number':179,'multiline':True]
['text':' Flush quoteBuf out to result','line_number':181,'multiline':False]
['text':'*
 * Implement UnicodeMatcher
 ','line_number':187,'multiline':True]
['text':'*
 * Implement UnicodeMatcher
 ','line_number':199,'multiline':True]
['text':'*
 * UnicodeReplacer API
 ','line_number':215,'multiline':True]
['text':'cursor','line_number':221,'multiline':True]
['text':' Copy segment with out-of-band data','line_number':225,'multiline':False]
['text':' If there was no match, that means that a quantifier','line_number':227,'multiline':False]
['text':' matched zero-length.  E.g., x (a)* y matched "xy".','line_number':228,'multiline':False]
['text':' delete original text','line_number':236,'multiline':False]
['text':'*
 * UnicodeReplacer API
 ','line_number':241,'multiline':True]
['text':'escapeUnprintable','line_number':245,'multiline':True]
['text':' assert(segmentNumber > 0);','line_number':246,'multiline':False]
['text':'$','line_number':248,'multiline':True]
['text':'*
 * Remove any match info.  This must be called before performing a
 * set of matches with this segment.
 ','line_number':253,'multiline':True]
['text':'*
 * Union the set of all characters that may output by this object
 * into the given set.
 * @param toUnionTo the set into which to union the output characters
 ','line_number':261,'multiline':True]
['text':'toUnionTo','line_number':266,'multiline':True]
['text':' The output of this replacer varies; it is the source text between','line_number':267,'multiline':False]
['text':' matchStart and matchLimit.  Since this varies depending on the','line_number':268,'multiline':False]
['text':' input text, we can't compute it here.  We can either do nothing','line_number':269,'multiline':False]
['text':' or we can add ALL characters to the set.  It's probably more useful','line_number':270,'multiline':False]
['text':' to do nothing.','line_number':271,'multiline':False]
['text':'*
 * Implement UnicodeFunctor
 ','line_number':274,'multiline':True]
['text':' #if !UCONFIG_NO_TRANSLITERATION ','line_number':292,'multiline':True]
['text':'eof','line_number':294,'multiline':False]
