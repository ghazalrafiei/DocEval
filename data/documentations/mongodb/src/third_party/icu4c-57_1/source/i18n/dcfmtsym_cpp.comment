['text':'
*******************************************************************************
* Copyright (C) 1997-2015, International Business Machines Corporation and
* others. All Rights Reserved.
*******************************************************************************
*
* File DCFMTSYM.CPP
*
* Modification History:
*
*   Date        Name        Description
*   02/19/97    aliu        Converted from java.
*   03/18/97    clhuang     Implemented with C++ APIs.
*   03/27/97    helena      Updated to pass the simple test after code review.
*   08/26/97    aliu        Added currency/intl currency symbol support.
*   07/20/98    stephen     Slightly modified initialization of monetarySeparator
********************************************************************************
','line_number':1,'multiline':True]
['text':' *****************************************************************************','line_number':39,'multiline':False]
['text':' class DecimalFormatSymbols','line_number':40,'multiline':False]
['text':' *****************************************************************************','line_number':41,'multiline':False]
['text':' -------------------------------------','line_number':58,'multiline':False]
['text':' Initializes this with the decimal format symbols in the default locale.','line_number':59,'multiline':False]
['text':' -------------------------------------','line_number':68,'multiline':False]
['text':' Initializes this with the decimal format symbols in the desired locale.','line_number':69,'multiline':False]
['text':' -------------------------------------','line_number':96,'multiline':False]
['text':' -------------------------------------','line_number':102,'multiline':False]
['text':' copy constructor','line_number':103,'multiline':False]
['text':' -------------------------------------','line_number':111,'multiline':False]
['text':' assignment operator','line_number':112,'multiline':False]
['text':' fastCopyFrom is safe, see docs on fSymbols','line_number':119,'multiline':False]
['text':' -------------------------------------','line_number':135,'multiline':False]
['text':' -------------------------------------','line_number':167,'multiline':False]
['text':' Native zero digit is deprecated from CLDR - get it from the numbering system ','line_number':177,'multiline':True]
['text':' Pattern digit character is deprecated from CLDR - use # by default always ','line_number':178,'multiline':True]
['text':' currency symbol - We don't really try to load this directly from CLDR until we know the currency ','line_number':181,'multiline':True]
['text':' intl currency symbol - We don't really try to load this directly from CLDR until we know the currency ','line_number':182,'multiline':True]
['text':' Escape padding character - not in CLDR ','line_number':186,'multiline':True]
['text':' Significant digit symbol - not in CLDR ','line_number':189,'multiline':True]
['text':' one digit - get it from the numbering system ','line_number':191,'multiline':True]
['text':' two digit - get it from the numbering system ','line_number':192,'multiline':True]
['text':' three digit - get it from the numbering system ','line_number':193,'multiline':True]
['text':' four digit - get it from the numbering system ','line_number':194,'multiline':True]
['text':' five digit - get it from the numbering system ','line_number':195,'multiline':True]
['text':' six digit - get it from the numbering system ','line_number':196,'multiline':True]
['text':' seven digit - get it from the numbering system ','line_number':197,'multiline':True]
['text':' eight digit - get it from the numbering system ','line_number':198,'multiline':True]
['text':' nine digit - get it from the numbering system ','line_number':199,'multiline':True]
['text':' Multiplication (x) symbol for exponents ','line_number':200,'multiline':True]
['text':' First initialize all the symbols to the fallbacks for anything we can't find','line_number':227,'multiline':False]
['text':'','line_number':230,'multiline':False]
['text':' Next get the numbering system for this locale and set zero digit','line_number':231,'multiline':False]
['text':' and the digit string based on the numbering system for the locale','line_number':232,'multiline':False]
['text':'','line_number':233,'multiline':False]
['text':' If we can't find the symbol in the numbering system specific resources,','line_number':273,'multiline':False]
['text':' use the "latn" numbering system as the fallback.','line_number':274,'multiline':False]
['text':' If monetary decimal or grouping were not explicitly set, then set them to be the','line_number':296,'multiline':False]
['text':' same as their non-monetary counterparts.','line_number':297,'multiline':False]
['text':' Obtain currency data from the currency API.  This is strictly','line_number':306,'multiline':False]
['text':' for backward compatibility; we don't use DecimalFormatSymbols','line_number':307,'multiline':False]
['text':' for currency data anymore.','line_number':308,'multiline':False]
['text':' don't propagate failures out','line_number':309,'multiline':False]
['text':' else use the default values. ','line_number':319,'multiline':True]
['text':'load the currency data','line_number':327,'multiline':False]
['text':'Currency Codes are always 3 chars long','line_number':328,'multiline':False]
['text':' An explicit currency was requested ','line_number':337,'multiline':True]
['text':' the length is 3 if more data is present','line_number':342,'multiline':False]
['text':'pattern.setTo(TRUE, currPattern, currPatternLen);','line_number':354,'multiline':False]
['text':' else An explicit currency was requested and is unknown or locale data is malformed. ','line_number':358,'multiline':True]
['text':' ucurr_* API will get the correct value later on. ','line_number':359,'multiline':True]
['text':' else ignore the error if no currency','line_number':361,'multiline':False]
['text':' Currency Spacing.','line_number':363,'multiline':False]
['text':'
     * These strings used to be in static arrays, but the HP/UX aCC compiler
     * cannot initialize a static array with class constructors.
     *  markus 2000may25
     ','line_number':400,'multiline':True]
['text':' '.' decimal separator','line_number':405,'multiline':False]
['text':'     group (thousands) separator','line_number':406,'multiline':False]
['text':' ';' pattern separator','line_number':407,'multiline':False]
['text':' '%' percent sign','line_number':408,'multiline':False]
['text':' '0' native 0 digit','line_number':409,'multiline':False]
['text':' '1' native 1 digit','line_number':410,'multiline':False]
['text':' '2' native 2 digit','line_number':411,'multiline':False]
['text':' '3' native 3 digit','line_number':412,'multiline':False]
['text':' '4' native 4 digit','line_number':413,'multiline':False]
['text':' '5' native 5 digit','line_number':414,'multiline':False]
['text':' '6' native 6 digit','line_number':415,'multiline':False]
['text':' '7' native 7 digit','line_number':416,'multiline':False]
['text':' '8' native 8 digit','line_number':417,'multiline':False]
['text':' '9' native 9 digit','line_number':418,'multiline':False]
['text':' '#' pattern digit','line_number':419,'multiline':False]
['text':' '+' plus sign','line_number':420,'multiline':False]
['text':' '-' minus sign','line_number':421,'multiline':False]
['text':' 'OX' currency symbol','line_number':422,'multiline':False]
['text':' '.' monetary decimal separator','line_number':424,'multiline':False]
['text':' 'E' exponential','line_number':425,'multiline':False]
['text':' '%o' per mill','line_number':426,'multiline':False]
['text':' '*' pad escape symbol','line_number':427,'multiline':False]
['text':' 'oo' infinite','line_number':428,'multiline':False]
['text':' SUB NaN','line_number':429,'multiline':False]
['text':' '@' significant digit','line_number':430,'multiline':False]
['text':' ','line_number':431,'multiline':False]
['text':' 'x' multiplication symbol for exponents','line_number':432,'multiline':False]
['text':' always empty.','line_number':449,'multiline':False]
['text':' #if !UCONFIG_NO_FORMATTING ','line_number':470,'multiline':True]
['text':'eof','line_number':472,'multiline':False]
