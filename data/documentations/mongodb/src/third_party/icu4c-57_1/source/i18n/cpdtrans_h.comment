['text':'
**********************************************************************
*   Copyright (C) 1999-2011, International Business Machines
*   Corporation and others.  All Rights Reserved.
**********************************************************************
*   Date        Name        Description
*   11/17/99    aliu        Creation.
**********************************************************************
','line_number':1,'multiline':True]
['text':'*
 * A transliterator that is composed of two or more other
 * transliterator objects linked together.  For example, if one
 * transliterator transliterates from script A to script B, and
 * another transliterates from script B to script C, the two may be
 * combined to form a new transliterator from A to C.
 *
 * <p>Composed transliterators may not behave as expected.  For
 * example, inverses may not combine to form the identity
 * transliterator.  See the class documentation for {@link
 * Transliterator} for details.
 *
 * @author Alan Liu
 ','line_number':24,'multiline':True]
['text':'*
     * Constructs a new compound transliterator given an array of
     * transliterators.  The array of transliterators may be of any
     * length, including zero or one, however, useful compound
     * transliterators have at least two components.
     * @param transliterators array of <code>Transliterator</code>
     * objects
     * @param transliteratorCount The number of
     * <code>Transliterator</code> objects in transliterators.
     * @param adoptedFilter the filter.  Any character for which
     * <tt>filter.contains()</tt> returns <tt>false</tt> will not be
     * altered by this transliterator.  If <tt>filter</tt> is
     * <tt>null</tt> then no filtering is applied.
     ','line_number':48,'multiline':True]
['text':'*
     * Constructs a new compound transliterator.
     * @param id compound ID
     * @param dir either UTRANS_FORWARD or UTRANS_REVERSE
     * @param adoptedFilter a global filter for this compound transliterator
     * or NULL
     ','line_number':66,'multiline':True]
['text':'*
     * Constructs a new compound transliterator in the FORWARD
     * direction with a NULL filter.
     ','line_number':79,'multiline':True]
['text':'*
     * Destructor.
     ','line_number':86,'multiline':True]
['text':'*
     * Copy constructor.
     ','line_number':91,'multiline':True]
['text':'*
     * Transliterator API.
     ','line_number':96,'multiline':True]
['text':'*
     * Returns the number of transliterators in this chain.
     * @return number of transliterators in this chain.
     ','line_number':101,'multiline':True]
['text':'*
     * Returns the transliterator at the given index in this chain.
     * @param idx index into chain, from 0 to <code>getCount() - 1</code>
     * @return transliterator at the given index
     ','line_number':107,'multiline':True]
['text':'*
     * Sets the transliterators.
     ','line_number':114,'multiline':True]
['text':'*
     * Adopts the transliterators.
     ','line_number':120,'multiline':True]
['text':'*
     * Override Transliterator:
     * Create a rule string that can be passed to createFromRules()
     * to recreate this transliterator.
     * @param result the string to receive the rules.  Previous
     * contents will be deleted.
     * @param escapeUnprintable if TRUE then convert unprintable
     * character to their hex escape representations, \uxxxx or
     * \Uxxxxxxxx.  Unprintable characters are those other than
     * U+000A, U+0020..U+007E.
     ','line_number':126,'multiline':True]
['text':'*
     * Implement Transliterator framework
     ','line_number':141,'multiline':True]
['text':'*
     * Override Transliterator framework
     ','line_number':147,'multiline':True]
['text':'*
     * Implements {@link Transliterator#handleTransliterate}.
     ','line_number':153,'multiline':True]
['text':'*
     * ICU "poor man's RTTI", returns a UClassID for the actual class.
     ','line_number':161,'multiline':True]
['text':'*
     * ICU "poor man's RTTI", returns a UClassID for this class.
     ','line_number':166,'multiline':True]
['text':' @internal ','line_number':171,'multiline':True]
['text':' to access private ct','line_number':177,'multiline':False]
['text':'*
     * Assignment operator.
     ','line_number':179,'multiline':True]
['text':'*
     * Private constructor for Transliterator.
     ','line_number':184,'multiline':True]
['text':'*
     * Return the IDs of the given list of transliterators, concatenated
     * with ';' delimiting them.  Equivalent to the perlish expression
     * join(';', map($_.getID(), transliterators).
     ','line_number':213,'multiline':True]
['text':' #if !UCONFIG_NO_TRANSLITERATION ','line_number':228,'multiline':True]
