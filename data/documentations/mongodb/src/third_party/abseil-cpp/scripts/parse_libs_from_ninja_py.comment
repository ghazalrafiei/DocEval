['text':'!/usr/bin/env python3','line_number':1,'multiline':False]
['text':' This is the list of libraries that are desired to be extracted out of the','line_number':10,'multiline':False]
['text':' ninja file','line_number':11,'multiline':False]
['text':' this is the path for cmake to use to generate abseil native ninja file.','line_number':60,'multiline':False]
['text':' This will loop through the ninja file looking for the specified target libs.','line_number':127,'multiline':False]
['text':' A pass throught he ninja file may find one ore more libraries but must find','line_number':128,'multiline':False]
['text':' at least one or else an exception is raised.','line_number':129,'multiline':False]
['text':'','line_number':130,'multiline':False]
['text':' For each library found, the dependent libraries are added as libraries to find, and','line_number':131,'multiline':False]
['text':' so several passes the the ninja file may be required as new dependencies are found.','line_number':132,'multiline':False]
['text':' found an interesting line with potential, ninja build edges always start with','line_number':140,'multiline':False]
['text':' "build {targets}"','line_number':141,'multiline':False]
['text':' if the line does not contain our target lib or we already found this before','line_number':150,'multiline':False]
['text':' then this line is not interesting and continue on','line_number':151,'multiline':False]
['text':' else we have found a new library so lets parse out the source files and dependent','line_number':157,'multiline':False]
['text':' libraries. Ninja format use spaces as delimiters and $ as an escape. The loop below','line_number':158,'multiline':False]
['text':' while extract the spaces which should be exacped and put them in the tokens.','line_number':159,'multiline':False]
['text':' the dependent liraries will be listed after the explicit deps separator '||'','line_number':172,'multiline':False]
['text':' The source files should be after the "build" identifier, target name, and rule,','line_number':178,'multiline':False]
['text':' and before the dependencies for example:','line_number':179,'multiline':False]
['text':'','line_number':180,'multiline':False]
['text':' build absl/base/libabsl_strerror.a: CXX_STATIC_LIBRARY_LINKER__strerror_','line_number':181,'multiline':False]
['text':'','line_number':182,'multiline':False]
['text':' This would fail if the build edge listed multiple output targets, but this so far has not been','line_number':183,'multiline':False]
['text':' the case with abseil.','line_number':184,'multiline':False]
['text':' because the source files are listed object file inputs to the static lib','line_number':188,'multiline':False]
['text':' we need strip the cmake output dir, and the object file extension','line_number':189,'multiline':False]
['text':' now extract the library dependencies','line_number':198,'multiline':False]
['text':' When we have found a lib add it to our list of found libs and also','line_number':205,'multiline':False]
['text':' add any new dependencies we found to our target list.','line_number':206,'multiline':False]
