['text':'','line_number':1,'multiline':False]
['text':' detail/config.hpp','line_number':2,'multiline':False]
['text':' ~~~~~~~~~~~~~~~~~','line_number':3,'multiline':False]
['text':'','line_number':4,'multiline':False]
['text':' Copyright (c) 2003-2018 Christopher M. Kohlhoff (chris at kohlhoff dot com)','line_number':5,'multiline':False]
['text':'','line_number':6,'multiline':False]
['text':' Distributed under the Boost Software License, Version 1.0. (See accompanying','line_number':7,'multiline':False]
['text':' file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)','line_number':8,'multiline':False]
['text':'','line_number':9,'multiline':False]
['text':' MongoDB modification. We want this standalone, and we want separate','line_number':14,'multiline':False]
['text':' compilation for what we can to cut down on compile times.','line_number':15,'multiline':False]
['text':' We cannot set these outside of the ASIO drop, because a system copy of ASIO might not have been','line_number':16,'multiline':False]
['text':' built with ASIO_SEPARATE_COMPILATION.','line_number':17,'multiline':False]
['text':' TODO: Remove this once we have a mechanism for injecting third party includes and CPPDEFINES into','line_number':18,'multiline':False]
['text':' individual scons objects.','line_number':19,'multiline':False]
['text':' MongoDB','line_number':20,'multiline':False]
['text':' MongoDB','line_number':21,'multiline':False]
['text':' defined(ASIO_STANDALONE)','line_number':34,'multiline':False]
['text':' defined(ASIO_STANDALONE)','line_number':38,'multiline':False]
['text':' Default to a header-only implementation. The user must specifically request','line_number':40,'multiline':False]
['text':' separate compilation by defining either ASIO_SEPARATE_COMPILATION or','line_number':41,'multiline':False]
['text':' ASIO_DYN_LINK (as a DLL/shared library implies separate compilation).','line_number':42,'multiline':False]
['text':' !defined(ASIO_DYN_LINK)','line_number':47,'multiline':False]
['text':' !defined(ASIO_SEPARATE_COMPILATION)','line_number':48,'multiline':False]
['text':' !defined(ASIO_HEADER_ONLY)','line_number':49,'multiline':False]
['text':' defined(ASIO_HEADER_ONLY)','line_number':53,'multiline':False]
['text':' We need to import/export our code only if the user has specifically asked','line_number':55,'multiline':False]
['text':' for it by defining ASIO_DYN_LINK.','line_number':56,'multiline':False]
['text':' Export if this is our own source, otherwise import.','line_number':58,'multiline':False]
['text':' defined(ASIO_SOURCE)','line_number':61,'multiline':False]
['text':' defined(ASIO_SOURCE)','line_number':63,'multiline':False]
['text':' defined(ASIO_DYN_LINK)','line_number':64,'multiline':False]
['text':' defined(_MSC_VER) || defined(__BORLANDC__) || defined(__CODEGEARC__)','line_number':65,'multiline':False]
['text':' defined(ASIO_HEADER_ONLY)','line_number':66,'multiline':False]
['text':' If ASIO_DECL isn't defined yet define it now.','line_number':68,'multiline':False]
['text':' !defined(ASIO_DECL)','line_number':71,'multiline':False]
['text':' Microsoft Visual C++ detection.','line_number':73,'multiline':False]
['text':' defined(ASIO_HAS_BOOST_CONFIG) && defined(BOOST_MSVC)','line_number':80,'multiline':False]
['text':' !defined(ASIO_MSVC)','line_number':81,'multiline':False]
['text':' Clang / libc++ detection.','line_number':83,'multiline':False]
['text':' defined(_LIBCPP_VERSION)','line_number':90,'multiline':False]
['text':' __has_include(<__config>)','line_number':91,'multiline':False]
['text':' (__cplusplus >= 201103)','line_number':92,'multiline':False]
['text':' defined(__clang__)','line_number':93,'multiline':False]
['text':' Android platform detection.','line_number':95,'multiline':False]
['text':' defined(__ANDROID__)','line_number':98,'multiline':False]
['text':' Support move construction and assignment on compilers known to allow it.','line_number':100,'multiline':False]
['text':' __has_feature(__cxx_rvalue_references__)','line_number':106,'multiline':False]
['text':' defined(__clang__)','line_number':107,'multiline':False]
['text':' defined(__GXX_EXPERIMENTAL_CXX0X__)','line_number':112,'multiline':False]
['text':' ((__GNUC__ == 4) && (__GNUC_MINOR__ >= 5)) || (__GNUC__ > 4)','line_number':113,'multiline':False]
['text':' defined(__GNUC__)','line_number':114,'multiline':False]
['text':' (_MSC_VER >= 1700)','line_number':118,'multiline':False]
['text':' defined(ASIO_MSVC)','line_number':119,'multiline':False]
['text':' defined(__INTEL_COMPILER) && (__INTEL_COMPILER >= 1500)','line_number':123,'multiline':False]
['text':' defined(__ICL) && (__ICL >= 1500)','line_number':126,'multiline':False]
['text':' defined(__INTEL_CXX11_MODE__)','line_number':127,'multiline':False]
['text':' !defined(ASIO_DISABLE_MOVE)','line_number':128,'multiline':False]
['text':' !defined(ASIO_HAS_MOVE)','line_number':129,'multiline':False]
['text':' If ASIO_MOVE_CAST isn't defined, and move support is available, define','line_number':131,'multiline':False]
['text':' ASIO_MOVE_ARG and ASIO_MOVE_CAST to take advantage of rvalue','line_number':132,'multiline':False]
['text':' references and perfect forwarding.','line_number':133,'multiline':False]
['text':' defined(ASIO_HAS_MOVE) && !defined(ASIO_MOVE_CAST)','line_number':139,'multiline':False]
['text':' If ASIO_MOVE_CAST still isn't defined, default to a C++03-compatible','line_number':141,'multiline':False]
['text':' implementation. Note that older g++ and MSVC versions don't like it when you','line_number':142,'multiline':False]
['text':' pass a non-member function through a const reference, so for most compilers','line_number':143,'multiline':False]
['text':' we'll play it safe and stick with the old approach of passing the handler by','line_number':144,'multiline':False]
['text':' value.','line_number':145,'multiline':False]
['text':' ((__GNUC__ == 4) && (__GNUC_MINOR__ >= 1)) || (__GNUC__ > 4)','line_number':150,'multiline':False]
['text':' ((__GNUC__ == 4) && (__GNUC_MINOR__ >= 1)) || (__GNUC__ > 4)','line_number':152,'multiline':False]
['text':' (_MSC_VER >= 1400)','line_number':156,'multiline':False]
['text':' (_MSC_VER >= 1400)','line_number':158,'multiline':False]
['text':' !defined(ASIO_MOVE_CAST)','line_number':164,'multiline':False]
['text':' Support variadic templates on compilers known to allow it.','line_number':166,'multiline':False]
['text':' __has_feature(__cxx_variadic_templates__)','line_number':172,'multiline':False]
['text':' defined(__clang__)','line_number':173,'multiline':False]
['text':' defined(__GXX_EXPERIMENTAL_CXX0X__)','line_number':178,'multiline':False]
['text':' ((__GNUC__ == 4) && (__GNUC_MINOR__ >= 3)) || (__GNUC__ > 4)','line_number':179,'multiline':False]
['text':' defined(__GNUC__)','line_number':180,'multiline':False]
['text':' (_MSC_VER >= 1900)','line_number':184,'multiline':False]
['text':' defined(ASIO_MSVC)','line_number':185,'multiline':False]
['text':' !defined(ASIO_DISABLE_VARIADIC_TEMPLATES)','line_number':186,'multiline':False]
['text':' !defined(ASIO_HAS_VARIADIC_TEMPLATES)','line_number':187,'multiline':False]
['text':' Support deleted functions on compilers known to allow it.','line_number':189,'multiline':False]
['text':' defined(__GXX_EXPERIMENTAL_CXX0X__)','line_number':195,'multiline':False]
['text':' ((__GNUC__ == 4) && (__GNUC_MINOR__ >= 7)) || (__GNUC__ > 4)','line_number':196,'multiline':False]
['text':' defined(__GNUC__)','line_number':197,'multiline':False]
['text':' __has_feature(__cxx_deleted_functions__)','line_number':201,'multiline':False]
['text':' defined(__clang__)','line_number':202,'multiline':False]
['text':' (_MSC_VER >= 1900)','line_number':206,'multiline':False]
['text':' defined(ASIO_MSVC)','line_number':207,'multiline':False]
['text':' !defined(ASIO_DELETED)','line_number':210,'multiline':False]
['text':' !defined(ASIO_DELETED)','line_number':211,'multiline':False]
['text':' Support constexpr on compilers known to allow it.','line_number':213,'multiline':False]
['text':' __has_feature(__cxx_constexr__)','line_number':219,'multiline':False]
['text':' defined(__clang__)','line_number':220,'multiline':False]
['text':' defined(__GXX_EXPERIMENTAL_CXX0X__)','line_number':225,'multiline':False]
['text':' ((__GNUC__ == 4) && (__GNUC_MINOR__ >= 6)) || (__GNUC__ > 4)','line_number':226,'multiline':False]
['text':' defined(__GNUC__)','line_number':227,'multiline':False]
['text':' (_MSC_VER >= 1900)','line_number':231,'multiline':False]
['text':' defined(ASIO_MSVC)','line_number':232,'multiline':False]
['text':' !defined(ASIO_DISABLE_CONSTEXPR)','line_number':233,'multiline':False]
['text':' !defined(ASIO_HAS_CONSTEXPR)','line_number':234,'multiline':False]
['text':' defined(ASIO_HAS_CONSTEXPR)','line_number':238,'multiline':False]
['text':' defined(ASIO_HAS_CONSTEXPR)','line_number':240,'multiline':False]
['text':' !defined(ASIO_CONSTEXPR)','line_number':241,'multiline':False]
['text':' Support noexcept on compilers known to allow it.','line_number':243,'multiline':False]
['text':' __has_feature(__cxx_noexcept__)','line_number':253,'multiline':False]
['text':' defined(__GXX_EXPERIMENTAL_CXX0X__)','line_number':259,'multiline':False]
['text':' ((__GNUC__ == 4) && (__GNUC_MINOR__ >= 7)) || (__GNUC__ > 4)','line_number':260,'multiline':False]
['text':' (_MSC_VER >= 1900)','line_number':265,'multiline':False]
['text':' defined(ASIO_MSVC)','line_number':266,'multiline':False]
['text':' !defined(ASIO_DISABLE_NOEXCEPT)','line_number':267,'multiline':False]
['text':' !defined(ASIO_NOEXCEPT)','line_number':270,'multiline':False]
['text':' !defined(ASIO_NOEXCEPT_OR_NOTHROW)','line_number':273,'multiline':False]
['text':' !defined(ASIO_NOEXCEPT)','line_number':274,'multiline':False]
['text':' Support automatic type deduction on compilers known to support it.','line_number':276,'multiline':False]
['text':' __has_feature(__cxx_decltype__)','line_number':282,'multiline':False]
['text':' defined(__clang__)','line_number':283,'multiline':False]
['text':' defined(__GXX_EXPERIMENTAL_CXX0X__)','line_number':288,'multiline':False]
['text':' ((__GNUC__ == 4) && (__GNUC_MINOR__ >= 6)) || (__GNUC__ > 4)','line_number':289,'multiline':False]
['text':' defined(__GNUC__)','line_number':290,'multiline':False]
['text':' (_MSC_VER >= 1700)','line_number':294,'multiline':False]
['text':' defined(ASIO_MSVC)','line_number':295,'multiline':False]
['text':' !defined(ASIO_DISABLE_DECLTYPE)','line_number':296,'multiline':False]
['text':' !defined(ASIO_HAS_DECLTYPE)','line_number':297,'multiline':False]
['text':' Support alias templates on compilers known to allow it.','line_number':299,'multiline':False]
['text':' __has_feature(__cxx_alias_templates__)','line_number':305,'multiline':False]
['text':' defined(__clang__)','line_number':306,'multiline':False]
['text':' defined(__GXX_EXPERIMENTAL_CXX0X__)','line_number':311,'multiline':False]
['text':' ((__GNUC__ == 4) && (__GNUC_MINOR__ >= 7)) || (__GNUC__ > 4)','line_number':312,'multiline':False]
['text':' defined(__GNUC__)','line_number':313,'multiline':False]
['text':' (_MSC_VER >= 1900)','line_number':317,'multiline':False]
['text':' defined(ASIO_MSVC)','line_number':318,'multiline':False]
['text':' !defined(ASIO_DISABLE_ALIAS_TEMPLATES)','line_number':319,'multiline':False]
['text':' !defined(ASIO_HAS_ALIAS_TEMPLATES)','line_number':320,'multiline':False]
['text':' Standard library support for system errors.','line_number':322,'multiline':False]
['text':' __has_include(<system_error>)','line_number':331,'multiline':False]
['text':' (__cplusplus >= 201103)','line_number':332,'multiline':False]
['text':' defined(__clang__)','line_number':333,'multiline':False]
['text':' defined(__GXX_EXPERIMENTAL_CXX0X__)','line_number':338,'multiline':False]
['text':' ((__GNUC__ == 4) && (__GNUC_MINOR__ >= 6)) || (__GNUC__ > 4)','line_number':339,'multiline':False]
['text':' defined(__GNUC__)','line_number':340,'multiline':False]
['text':' (_MSC_VER >= 1700)','line_number':344,'multiline':False]
['text':' defined(ASIO_MSVC)','line_number':345,'multiline':False]
['text':' !defined(ASIO_DISABLE_STD_SYSTEM_ERROR)','line_number':346,'multiline':False]
['text':' !defined(ASIO_HAS_STD_SYSTEM_ERROR)','line_number':347,'multiline':False]
['text':' Compliant C++11 compilers put noexcept specifiers on error_category members.','line_number':349,'multiline':False]
['text':' __has_feature(__cxx_noexcept__)','line_number':356,'multiline':False]
['text':' defined(__GXX_EXPERIMENTAL_CXX0X__)','line_number':361,'multiline':False]
['text':' ((__GNUC__ == 4) && (__GNUC_MINOR__ >= 7)) || (__GNUC__ > 4)','line_number':362,'multiline':False]
['text':' (_MSC_VER >= 1900)','line_number':366,'multiline':False]
['text':' defined(ASIO_MSVC)','line_number':367,'multiline':False]
['text':' !defined(ASIO_ERROR_CATEGORY_NOEXCEPT)','line_number':370,'multiline':False]
['text':' !defined(ASIO_ERROR_CATEGORY_NOEXCEPT)','line_number':371,'multiline':False]
['text':' Standard library support for arrays.','line_number':373,'multiline':False]
['text':' __has_include(<array>)','line_number':382,'multiline':False]
['text':' (__cplusplus >= 201103)','line_number':383,'multiline':False]
['text':' defined(__clang__)','line_number':384,'multiline':False]
['text':' defined(__GXX_EXPERIMENTAL_CXX0X__)','line_number':389,'multiline':False]
['text':' ((__GNUC__ == 4) && (__GNUC_MINOR__ >= 3)) || (__GNUC__ > 4)','line_number':390,'multiline':False]
['text':' defined(__GNUC__)','line_number':391,'multiline':False]
['text':' (_MSC_VER >= 1600)','line_number':395,'multiline':False]
['text':' defined(ASIO_MSVC)','line_number':396,'multiline':False]
['text':' !defined(ASIO_DISABLE_STD_ARRAY)','line_number':397,'multiline':False]
['text':' !defined(ASIO_HAS_STD_ARRAY)','line_number':398,'multiline':False]
['text':' Standard library support for shared_ptr and weak_ptr.','line_number':400,'multiline':False]
['text':' (__cplusplus >= 201103)','line_number':408,'multiline':False]
['text':' defined(__clang__)','line_number':409,'multiline':False]
['text':' defined(__GXX_EXPERIMENTAL_CXX0X__)','line_number':414,'multiline':False]
['text':' ((__GNUC__ == 4) && (__GNUC_MINOR__ >= 3)) || (__GNUC__ > 4)','line_number':415,'multiline':False]
['text':' defined(__GNUC__)','line_number':416,'multiline':False]
['text':' (_MSC_VER >= 1600)','line_number':420,'multiline':False]
['text':' defined(ASIO_MSVC)','line_number':421,'multiline':False]
['text':' !defined(ASIO_DISABLE_STD_SHARED_PTR)','line_number':422,'multiline':False]
['text':' !defined(ASIO_HAS_STD_SHARED_PTR)','line_number':423,'multiline':False]
['text':' Standard library support for allocator_arg_t.','line_number':425,'multiline':False]
['text':' (__cplusplus >= 201103)','line_number':433,'multiline':False]
['text':' defined(__clang__)','line_number':434,'multiline':False]
['text':' defined(__GXX_EXPERIMENTAL_CXX0X__)','line_number':439,'multiline':False]
['text':' ((__GNUC__ == 4) && (__GNUC_MINOR__ >= 6)) || (__GNUC__ > 4)','line_number':440,'multiline':False]
['text':' defined(__GNUC__)','line_number':441,'multiline':False]
['text':' (_MSC_VER >= 1600)','line_number':445,'multiline':False]
['text':' defined(ASIO_MSVC)','line_number':446,'multiline':False]
['text':' !defined(ASIO_DISABLE_STD_ALLOCATOR_ARG)','line_number':447,'multiline':False]
['text':' !defined(ASIO_HAS_STD_ALLOCATOR_ARG)','line_number':448,'multiline':False]
['text':' Standard library support for atomic operations.','line_number':450,'multiline':False]
['text':' __has_include(<atomic>)','line_number':459,'multiline':False]
['text':' (__cplusplus >= 201103)','line_number':460,'multiline':False]
['text':' defined(__clang__)','line_number':461,'multiline':False]
['text':' defined(__GXX_EXPERIMENTAL_CXX0X__)','line_number':466,'multiline':False]
['text':' ((__GNUC__ == 4) && (__GNUC_MINOR__ >= 7)) || (__GNUC__ > 4)','line_number':467,'multiline':False]
['text':' defined(__GNUC__)','line_number':468,'multiline':False]
['text':' (_MSC_VER >= 1700)','line_number':472,'multiline':False]
['text':' defined(ASIO_MSVC)','line_number':473,'multiline':False]
['text':' !defined(ASIO_DISABLE_STD_ATOMIC)','line_number':474,'multiline':False]
['text':' !defined(ASIO_HAS_STD_ATOMIC)','line_number':475,'multiline':False]
['text':' Standard library support for chrono. Some standard libraries (such as the','line_number':477,'multiline':False]
['text':' libstdc++ shipped with gcc 4.6) provide monotonic_clock as per early C++0x','line_number':478,'multiline':False]
['text':' drafts, rather than the eventually standardised name of steady_clock.','line_number':479,'multiline':False]
['text':' __has_include(<chrono>)','line_number':488,'multiline':False]
['text':' (__cplusplus >= 201103)','line_number':489,'multiline':False]
['text':' defined(__clang__)','line_number':490,'multiline':False]
['text':' ((__GNUC__ == 4) && (__GNUC_MINOR__ == 6))','line_number':497,'multiline':False]
['text':' defined(__GXX_EXPERIMENTAL_CXX0X__)','line_number':498,'multiline':False]
['text':' ((__GNUC__ == 4) && (__GNUC_MINOR__ >= 6)) || (__GNUC__ > 4)','line_number':499,'multiline':False]
['text':' defined(__GNUC__)','line_number':500,'multiline':False]
['text':' (_MSC_VER >= 1700)','line_number':504,'multiline':False]
['text':' defined(ASIO_MSVC)','line_number':505,'multiline':False]
['text':' !defined(ASIO_DISABLE_STD_CHRONO)','line_number':506,'multiline':False]
['text':' !defined(ASIO_HAS_STD_CHRONO)','line_number':507,'multiline':False]
['text':' Boost support for chrono.','line_number':509,'multiline':False]
['text':' (BOOST_VERSION >= 104700)','line_number':514,'multiline':False]
['text':' !defined(ASIO_DISABLE_BOOST_CHRONO)','line_number':515,'multiline':False]
['text':' !defined(ASIO_HAS_BOOST_CHRONO)','line_number':516,'multiline':False]
['text':' Some form of chrono library is available.','line_number':518,'multiline':False]
['text':' defined(ASIO_HAS_STD_CHRONO)','line_number':523,'multiline':False]
['text':' || defined(ASIO_HAS_BOOST_CHRONO)','line_number':524,'multiline':False]
['text':' !defined(ASIO_HAS_CHRONO)','line_number':525,'multiline':False]
['text':' Boost support for the DateTime library.','line_number':527,'multiline':False]
['text':' !defined(ASIO_DISABLE_BOOST_DATE_TIME)','line_number':531,'multiline':False]
['text':' !defined(ASIO_HAS_BOOST_DATE_TIME)','line_number':532,'multiline':False]
['text':' Standard library support for addressof.','line_number':534,'multiline':False]
['text':' (__cplusplus >= 201103)','line_number':542,'multiline':False]
['text':' defined(__clang__)','line_number':543,'multiline':False]
['text':' defined(__GXX_EXPERIMENTAL_CXX0X__)','line_number':548,'multiline':False]
['text':' ((__GNUC__ == 4) && (__GNUC_MINOR__ >= 6)) || (__GNUC__ > 4)','line_number':549,'multiline':False]
['text':' defined(__GNUC__)','line_number':550,'multiline':False]
['text':' (_MSC_VER >= 1700)','line_number':554,'multiline':False]
['text':' defined(ASIO_MSVC)','line_number':555,'multiline':False]
['text':' !defined(ASIO_DISABLE_STD_ADDRESSOF)','line_number':556,'multiline':False]
['text':' !defined(ASIO_HAS_STD_ADDRESSOF)','line_number':557,'multiline':False]
['text':' Standard library support for the function class.','line_number':559,'multiline':False]
['text':' (__cplusplus >= 201103)','line_number':567,'multiline':False]
['text':' defined(__clang__)','line_number':568,'multiline':False]
['text':' defined(__GXX_EXPERIMENTAL_CXX0X__)','line_number':573,'multiline':False]
['text':' ((__GNUC__ == 4) && (__GNUC_MINOR__ >= 5)) || (__GNUC__ > 4)','line_number':574,'multiline':False]
['text':' defined(__GNUC__)','line_number':575,'multiline':False]
['text':' (_MSC_VER >= 1700)','line_number':579,'multiline':False]
['text':' defined(ASIO_MSVC)','line_number':580,'multiline':False]
['text':' !defined(ASIO_DISABLE_STD_FUNCTION)','line_number':581,'multiline':False]
['text':' !defined(ASIO_HAS_STD_FUNCTION)','line_number':582,'multiline':False]
['text':' Standard library support for type traits.','line_number':584,'multiline':False]
['text':' __has_include(<type_traits>)','line_number':593,'multiline':False]
['text':' (__cplusplus >= 201103)','line_number':594,'multiline':False]
['text':' defined(__clang__)','line_number':595,'multiline':False]
['text':' defined(__GXX_EXPERIMENTAL_CXX0X__)','line_number':600,'multiline':False]
['text':' ((__GNUC__ == 4) && (__GNUC_MINOR__ >= 5)) || (__GNUC__ > 4)','line_number':601,'multiline':False]
['text':' defined(__GNUC__)','line_number':602,'multiline':False]
['text':' (_MSC_VER >= 1700)','line_number':606,'multiline':False]
['text':' defined(ASIO_MSVC)','line_number':607,'multiline':False]
['text':' !defined(ASIO_DISABLE_STD_TYPE_TRAITS)','line_number':608,'multiline':False]
['text':' !defined(ASIO_HAS_STD_TYPE_TRAITS)','line_number':609,'multiline':False]
['text':' Standard library support for the nullptr_t type.','line_number':611,'multiline':False]
['text':' __has_feature(__cxx_rvalue_references__)','line_number':617,'multiline':False]
['text':' defined(__GXX_EXPERIMENTAL_CXX0X__)','line_number':622,'multiline':False]
['text':' ((__GNUC__ == 4) && (__GNUC_MINOR__ >= 6)) || (__GNUC__ > 4)','line_number':623,'multiline':False]
['text':' defined(__GNUC__)','line_number':624,'multiline':False]
['text':' (_MSC_VER >= 1700)','line_number':628,'multiline':False]
['text':' defined(ASIO_MSVC)','line_number':629,'multiline':False]
['text':' !defined(ASIO_DISABLE_NULLPTR)','line_number':630,'multiline':False]
['text':' !defined(ASIO_HAS_NULLPTR)','line_number':631,'multiline':False]
['text':' Standard library support for the C++11 allocator additions.','line_number':633,'multiline':False]
['text':' (__cplusplus >= 201103)','line_number':641,'multiline':False]
['text':' defined(__GXX_EXPERIMENTAL_CXX0X__)','line_number':646,'multiline':False]
['text':' ((__GNUC__ == 4) && (__GNUC_MINOR__ >= 7)) || (__GNUC__ > 4)','line_number':647,'multiline':False]
['text':' defined(__GNUC__)','line_number':648,'multiline':False]
['text':' (_MSC_VER >= 1800)','line_number':652,'multiline':False]
['text':' defined(ASIO_MSVC)','line_number':653,'multiline':False]
['text':' !defined(ASIO_DISABLE_CXX11_ALLOCATORS)','line_number':654,'multiline':False]
['text':' !defined(ASIO_HAS_CXX11_ALLOCATORS)','line_number':655,'multiline':False]
['text':' Standard library support for the cstdint header.','line_number':657,'multiline':False]
['text':' (__cplusplus >= 201103)','line_number':665,'multiline':False]
['text':' defined(__clang__)','line_number':666,'multiline':False]
['text':' defined(__GXX_EXPERIMENTAL_CXX0X__)','line_number':671,'multiline':False]
['text':' ((__GNUC__ == 4) && (__GNUC_MINOR__ >= 5)) || (__GNUC__ > 4)','line_number':672,'multiline':False]
['text':' defined(__GNUC__)','line_number':673,'multiline':False]
['text':' (_MSC_VER >= 1700)','line_number':677,'multiline':False]
['text':' defined(ASIO_MSVC)','line_number':678,'multiline':False]
['text':' !defined(ASIO_DISABLE_CSTDINT)','line_number':679,'multiline':False]
['text':' !defined(ASIO_HAS_CSTDINT)','line_number':680,'multiline':False]
['text':' Standard library support for the thread class.','line_number':682,'multiline':False]
['text':' __has_include(<thread>)','line_number':691,'multiline':False]
['text':' (__cplusplus >= 201103)','line_number':692,'multiline':False]
['text':' defined(__clang__)','line_number':693,'multiline':False]
['text':' defined(__GXX_EXPERIMENTAL_CXX0X__)','line_number':698,'multiline':False]
['text':' ((__GNUC__ == 4) && (__GNUC_MINOR__ >= 7)) || (__GNUC__ > 4)','line_number':699,'multiline':False]
['text':' defined(__GNUC__)','line_number':700,'multiline':False]
['text':' (_MSC_VER >= 1700)','line_number':704,'multiline':False]
['text':' defined(ASIO_MSVC)','line_number':705,'multiline':False]
['text':' !defined(ASIO_DISABLE_STD_THREAD)','line_number':706,'multiline':False]
['text':' !defined(ASIO_HAS_STD_THREAD)','line_number':707,'multiline':False]
['text':' Standard library support for the mutex and condition variable classes.','line_number':709,'multiline':False]
['text':' __has_include(<mutex>)','line_number':718,'multiline':False]
['text':' (__cplusplus >= 201103)','line_number':719,'multiline':False]
['text':' defined(__clang__)','line_number':720,'multiline':False]
['text':' defined(__GXX_EXPERIMENTAL_CXX0X__)','line_number':725,'multiline':False]
['text':' ((__GNUC__ == 4) && (__GNUC_MINOR__ >= 7)) || (__GNUC__ > 4)','line_number':726,'multiline':False]
['text':' defined(__GNUC__)','line_number':727,'multiline':False]
['text':' (_MSC_VER >= 1700)','line_number':731,'multiline':False]
['text':' defined(ASIO_MSVC)','line_number':732,'multiline':False]
['text':' !defined(ASIO_DISABLE_STD_MUTEX_AND_CONDVAR)','line_number':733,'multiline':False]
['text':' !defined(ASIO_HAS_STD_MUTEX_AND_CONDVAR)','line_number':734,'multiline':False]
['text':' Standard library support for the call_once function.','line_number':736,'multiline':False]
['text':' __has_include(<mutex>)','line_number':745,'multiline':False]
['text':' (__cplusplus >= 201103)','line_number':746,'multiline':False]
['text':' defined(__clang__)','line_number':747,'multiline':False]
['text':' defined(__GXX_EXPERIMENTAL_CXX0X__)','line_number':752,'multiline':False]
['text':' ((__GNUC__ == 4) && (__GNUC_MINOR__ >= 7)) || (__GNUC__ > 4)','line_number':753,'multiline':False]
['text':' defined(__GNUC__)','line_number':754,'multiline':False]
['text':' (_MSC_VER >= 1700)','line_number':758,'multiline':False]
['text':' defined(ASIO_MSVC)','line_number':759,'multiline':False]
['text':' !defined(ASIO_DISABLE_STD_CALL_ONCE)','line_number':760,'multiline':False]
['text':' !defined(ASIO_HAS_STD_CALL_ONCE)','line_number':761,'multiline':False]
['text':' Standard library support for futures.','line_number':763,'multiline':False]
['text':' __has_include(<mutex>)','line_number':772,'multiline':False]
['text':' (__cplusplus >= 201103)','line_number':773,'multiline':False]
['text':' defined(__clang__)','line_number':774,'multiline':False]
['text':' defined(__GXX_EXPERIMENTAL_CXX0X__)','line_number':779,'multiline':False]
['text':' ((__GNUC__ == 4) && (__GNUC_MINOR__ >= 7)) || (__GNUC__ > 4)','line_number':780,'multiline':False]
['text':' defined(__GNUC__)','line_number':781,'multiline':False]
['text':' (_MSC_VER >= 1700)','line_number':785,'multiline':False]
['text':' defined(ASIO_MSVC)','line_number':786,'multiline':False]
['text':' !defined(ASIO_DISABLE_STD_FUTURE)','line_number':787,'multiline':False]
['text':' !defined(ASIO_HAS_STD_FUTURE)','line_number':788,'multiline':False]
['text':' Standard library support for std::string_view.','line_number':790,'multiline':False]
['text':' __has_include(<string_view>)','line_number':798,'multiline':False]
['text':' (__cplusplus >= 201402)','line_number':799,'multiline':False]
['text':' defined(ASIO_HAS_CLANG_LIBCXX)','line_number':800,'multiline':False]
['text':' __has_include(<string_view>)','line_number':804,'multiline':False]
['text':' (__cplusplus >= 201703)','line_number':805,'multiline':False]
['text':' defined(ASIO_HAS_CLANG_LIBCXX)','line_number':806,'multiline':False]
['text':' (__cplusplus >= 201703)','line_number':811,'multiline':False]
['text':' (__GNUC__ >= 7)','line_number':812,'multiline':False]
['text':' (_MSC_VER >= 1910 && _MSVC_LANG >= 201703)','line_number':816,'multiline':False]
['text':' defined(ASIO_MSVC)','line_number':817,'multiline':False]
['text':' !defined(ASIO_DISABLE_STD_STRING_VIEW)','line_number':818,'multiline':False]
['text':' !defined(ASIO_HAS_STD_STRING_VIEW)','line_number':819,'multiline':False]
['text':' Standard library support for std::experimental::string_view.','line_number':821,'multiline':False]
['text':' __has_include(<experimental/string_view>)','line_number':830,'multiline':False]
['text':' (__cplusplus >= 201402)','line_number':831,'multiline':False]
['text':' (_LIBCPP_VERSION < 7000)','line_number':832,'multiline':False]
['text':' defined(ASIO_HAS_CLANG_LIBCXX)','line_number':833,'multiline':False]
['text':' __has_include(<experimental/string_view>)','line_number':837,'multiline':False]
['text':' (__cplusplus >= 201402)','line_number':838,'multiline':False]
['text':' // defined(ASIO_HAS_CLANG_LIBCXX)','line_number':839,'multiline':False]
['text':' defined(__clang__)','line_number':840,'multiline':False]
['text':' (__cplusplus >= 201402)','line_number':845,'multiline':False]
['text':' ((__GNUC__ == 4) && (__GNUC_MINOR__ >= 9)) || (__GNUC__ > 4)','line_number':846,'multiline':False]
['text':' defined(__GNUC__)','line_number':847,'multiline':False]
['text':' !defined(ASIO_DISABLE_STD_EXPERIMENTAL_STRING_VIEW)','line_number':848,'multiline':False]
['text':' !defined(ASIO_HAS_STD_EXPERIMENTAL_STRING_VIEW)','line_number':849,'multiline':False]
['text':' Standard library has a string_view that we can use.','line_number':851,'multiline':False]
['text':' defined(ASIO_HAS_STD_EXPERIMENTAL_STRING_VIEW)','line_number':858,'multiline':False]
['text':' !defined(ASIO_DISABLE_STRING_VIEW)','line_number':859,'multiline':False]
['text':' !defined(ASIO_HAS_STRING_VIEW)','line_number':860,'multiline':False]
['text':' Standard library support for iostream move construction and assignment.','line_number':862,'multiline':False]
['text':' defined(__GXX_EXPERIMENTAL_CXX0X__)','line_number':869,'multiline':False]
['text':' (__GNUC__ > 4)','line_number':870,'multiline':False]
['text':' defined(__GNUC__)','line_number':871,'multiline':False]
['text':' (_MSC_VER >= 1700)','line_number':875,'multiline':False]
['text':' defined(ASIO_MSVC)','line_number':876,'multiline':False]
['text':' !defined(ASIO_DISABLE_STD_IOSTREAM_MOVE)','line_number':877,'multiline':False]
['text':' !defined(ASIO_HAS_STD_IOSTREAM_MOVE)','line_number':878,'multiline':False]
['text':' Standard library has invoke_result (which supersedes result_of).','line_number':880,'multiline':False]
['text':' (_MSC_VER >= 1911 && _MSVC_LANG >= 201703)','line_number':886,'multiline':False]
['text':' defined(ASIO_MSVC)','line_number':887,'multiline':False]
['text':' !defined(ASIO_DISABLE_STD_INVOKE_RESULT)','line_number':888,'multiline':False]
['text':' !defined(ASIO_HAS_STD_INVOKE_RESULT)','line_number':889,'multiline':False]
['text':' Windows App target. Windows but with a limited API.','line_number':891,'multiline':False]
['text':' WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_APP)','line_number':898,'multiline':False]
['text':' && !WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_DESKTOP)','line_number':899,'multiline':False]
['text':' defined(_WIN32_WINNT) && (_WIN32_WINNT >= 0x0603)','line_number':900,'multiline':False]
['text':' !defined(ASIO_WINDOWS_APP)','line_number':901,'multiline':False]
['text':' Legacy WinRT target. Windows App is preferred.','line_number':903,'multiline':False]
['text':' WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_APP)','line_number':911,'multiline':False]
['text':' && !WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_DESKTOP)','line_number':912,'multiline':False]
['text':' defined(__cplusplus_winrt)','line_number':913,'multiline':False]
['text':' !defined(ASIO_WINDOWS_APP)','line_number':914,'multiline':False]
['text':' !defined(ASIO_WINDOWS_RUNTIME)','line_number':915,'multiline':False]
['text':' Windows target. Excludes WinRT but includes Windows App targets.','line_number':917,'multiline':False]
['text':' defined(ASIO_HAS_BOOST_CONFIG) && defined(BOOST_WINDOWS)','line_number':926,'multiline':False]
['text':' !defined(ASIO_WINDOWS_RUNTIME)','line_number':927,'multiline':False]
['text':' !defined(ASIO_WINDOWS)','line_number':928,'multiline':False]
['text':' Windows: target OS version.','line_number':930,'multiline':False]
['text':' defined(_MSC_VER) || defined(__BORLANDC__)','line_number':939,'multiline':False]
['text':' defined(_MSC_VER) || defined(__BORLANDC__)','line_number':943,'multiline':False]
['text':' !defined(_WIN32_WINNT) && !defined(_WIN32_WINDOWS)','line_number':945,'multiline':False]
['text':' Needed for correct types in winsock2.h','line_number':949,'multiline':False]
['text':' !defined(_WINSOCK2API_)','line_number':950,'multiline':False]
['text':' !defined(_WINSOCK2API_)','line_number':952,'multiline':False]
['text':' defined(_WIN32) && !defined(WIN32)','line_number':953,'multiline':False]
['text':' defined(_MSC_VER)','line_number':954,'multiline':False]
['text':' Needed for correct types in winsock2.h','line_number':958,'multiline':False]
['text':' !defined(_WINSOCK2API_)','line_number':959,'multiline':False]
['text':' !defined(_WINSOCK2API_)','line_number':961,'multiline':False]
['text':' defined(__WIN32__) && !defined(WIN32)','line_number':962,'multiline':False]
['text':' defined(__BORLANDC__)','line_number':963,'multiline':False]
['text':' !defined(__USE_W32_SOCKETS)','line_number':967,'multiline':False]
['text':' defined(__CYGWIN__)','line_number':968,'multiline':False]
['text':' defined(ASIO_WINDOWS) || defined(__CYGWIN__)','line_number':969,'multiline':False]
['text':' Windows: minimise header inclusion.','line_number':971,'multiline':False]
['text':' !defined(WIN32_LEAN_AND_MEAN)','line_number':976,'multiline':False]
['text':' !defined(ASIO_NO_WIN32_LEAN_AND_MEAN)','line_number':977,'multiline':False]
['text':' defined(ASIO_WINDOWS) || defined(__CYGWIN__)','line_number':978,'multiline':False]
['text':' Windows: suppress definition of "min" and "max" macros.','line_number':980,'multiline':False]
['text':' !defined(NOMINMAX)','line_number':985,'multiline':False]
['text':' !defined(ASIO_NO_NOMINMAX)','line_number':986,'multiline':False]
['text':' defined(ASIO_WINDOWS) || defined(__CYGWIN__)','line_number':987,'multiline':False]
['text':' Windows: IO Completion Ports.','line_number':989,'multiline':False]
['text':' !defined(ASIO_DISABLE_IOCP)','line_number':996,'multiline':False]
['text':' !defined(UNDER_CE) && !defined(ASIO_WINDOWS_APP)','line_number':997,'multiline':False]
['text':' defined(_WIN32_WINNT) && (_WIN32_WINNT >= 0x0400)','line_number':998,'multiline':False]
['text':' defined(ASIO_WINDOWS) || defined(__CYGWIN__)','line_number':999,'multiline':False]
['text':' !defined(ASIO_HAS_IOCP)','line_number':1000,'multiline':False]
['text':' On POSIX (and POSIX-like) platforms we need to include unistd.h in order to','line_number':1002,'multiline':False]
['text':' get access to the various platform feature macros, e.g. to be able to test','line_number':1003,'multiline':False]
['text':' for threads support.','line_number':1004,'multiline':False]
['text':' !defined(ASIO_HAS_BOOST_CONFIG)','line_number':1018,'multiline':False]
['text':' !defined(ASIO_HAS_UNISTD_H)','line_number':1019,'multiline':False]
['text':' defined(ASIO_HAS_UNISTD_H)','line_number':1022,'multiline':False]
['text':' Linux: epoll, eventfd and timerfd.','line_number':1024,'multiline':False]
['text':' LINUX_VERSION_CODE >= KERNEL_VERSION(2,5,45)','line_number':1031,'multiline':False]
['text':' !defined(ASIO_DISABLE_EPOLL)','line_number':1032,'multiline':False]
['text':' !defined(ASIO_HAS_EPOLL)','line_number':1033,'multiline':False]
['text':' LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,22)','line_number':1038,'multiline':False]
['text':' !defined(ASIO_DISABLE_EVENTFD)','line_number':1039,'multiline':False]
['text':' !defined(ASIO_HAS_EVENTFD)','line_number':1040,'multiline':False]
['text':' (__GLIBC__ > 2) || (__GLIBC__ == 2 && __GLIBC_MINOR__ >= 8)','line_number':1045,'multiline':False]
['text':' defined(ASIO_HAS_EPOLL)','line_number':1046,'multiline':False]
['text':' !defined(ASIO_HAS_TIMERFD)','line_number':1047,'multiline':False]
['text':' defined(__linux__)','line_number':1048,'multiline':False]
['text':' Mac OS X, FreeBSD, NetBSD, OpenBSD: kqueue.','line_number':1050,'multiline':False]
['text':' !defined(ASIO_DISABLE_KQUEUE)','line_number':1058,'multiline':False]
['text':' !defined(ASIO_HAS_KQUEUE)','line_number':1059,'multiline':False]
['text':' (defined(__MACH__) && defined(__APPLE__))','line_number':1060,'multiline':False]
['text':'   || defined(__FreeBSD__)','line_number':1061,'multiline':False]
['text':'   || defined(__NetBSD__)','line_number':1062,'multiline':False]
['text':'   || defined(__OpenBSD__)','line_number':1063,'multiline':False]
['text':' Solaris: /dev/poll.','line_number':1065,'multiline':False]
['text':' !defined(ASIO_DISABLE_DEV_POLL)','line_number':1070,'multiline':False]
['text':' !defined(ASIO_HAS_DEV_POLL)','line_number':1071,'multiline':False]
['text':' defined(__sun)','line_number':1072,'multiline':False]
['text':' Serial ports.','line_number':1074,'multiline':False]
['text':' !defined(ASIO_DISABLE_SERIAL_PORT)','line_number':1083,'multiline':False]
['text':' !defined(__SYMBIAN32__)','line_number':1084,'multiline':False]
['text':' defined(ASIO_HAS_IOCP)','line_number':1085,'multiline':False]
['text':'   || !defined(ASIO_WINDOWS)','line_number':1086,'multiline':False]
['text':'   && !defined(ASIO_WINDOWS_RUNTIME)','line_number':1087,'multiline':False]
['text':'   && !defined(__CYGWIN__)','line_number':1088,'multiline':False]
['text':' !defined(ASIO_HAS_SERIAL_PORT)','line_number':1089,'multiline':False]
['text':' Windows: stream handles.','line_number':1091,'multiline':False]
['text':' defined(ASIO_HAS_IOCP)','line_number':1096,'multiline':False]
['text':' !defined(ASIO_DISABLE_WINDOWS_STREAM_HANDLE)','line_number':1097,'multiline':False]
['text':' !defined(ASIO_HAS_WINDOWS_STREAM_HANDLE)','line_number':1098,'multiline':False]
['text':' Windows: random access handles.','line_number':1100,'multiline':False]
['text':' defined(ASIO_HAS_IOCP)','line_number':1105,'multiline':False]
['text':' !defined(ASIO_DISABLE_WINDOWS_RANDOM_ACCESS_HANDLE)','line_number':1106,'multiline':False]
['text':' !defined(ASIO_HAS_WINDOWS_RANDOM_ACCESS_HANDLE)','line_number':1107,'multiline':False]
['text':' Windows: object handles.','line_number':1109,'multiline':False]
['text':' !defined(UNDER_CE) && !defined(ASIO_WINDOWS_APP)','line_number':1115,'multiline':False]
['text':' defined(ASIO_WINDOWS) || defined(__CYGWIN__)','line_number':1116,'multiline':False]
['text':' !defined(ASIO_DISABLE_WINDOWS_OBJECT_HANDLE)','line_number':1117,'multiline':False]
['text':' !defined(ASIO_HAS_WINDOWS_OBJECT_HANDLE)','line_number':1118,'multiline':False]
['text':' Windows: OVERLAPPED wrapper.','line_number':1120,'multiline':False]
['text':' defined(ASIO_HAS_IOCP)','line_number':1125,'multiline':False]
['text':' !defined(ASIO_DISABLE_WINDOWS_OVERLAPPED_PTR)','line_number':1126,'multiline':False]
['text':' !defined(ASIO_HAS_WINDOWS_OVERLAPPED_PTR)','line_number':1127,'multiline':False]
['text':' POSIX: stream-oriented file descriptors.','line_number':1129,'multiline':False]
['text':' !defined(ASIO_WINDOWS)','line_number':1136,'multiline':False]
['text':'   && !defined(ASIO_WINDOWS_RUNTIME)','line_number':1137,'multiline':False]
['text':'   && !defined(__CYGWIN__)','line_number':1138,'multiline':False]
['text':' !defined(ASIO_DISABLE_POSIX_STREAM_DESCRIPTOR)','line_number':1139,'multiline':False]
['text':' !defined(ASIO_HAS_POSIX_STREAM_DESCRIPTOR)','line_number':1140,'multiline':False]
['text':' UNIX domain sockets.','line_number':1142,'multiline':False]
['text':' !defined(ASIO_WINDOWS)','line_number':1149,'multiline':False]
['text':'   && !defined(ASIO_WINDOWS_RUNTIME)','line_number':1150,'multiline':False]
['text':'   && !defined(__CYGWIN__)','line_number':1151,'multiline':False]
['text':' !defined(ASIO_DISABLE_LOCAL_SOCKETS)','line_number':1152,'multiline':False]
['text':' !defined(ASIO_HAS_LOCAL_SOCKETS)','line_number':1153,'multiline':False]
['text':' Can use sigaction() instead of signal().','line_number':1155,'multiline':False]
['text':' !defined(ASIO_WINDOWS)','line_number':1162,'multiline':False]
['text':'   && !defined(ASIO_WINDOWS_RUNTIME)','line_number':1163,'multiline':False]
['text':'   && !defined(__CYGWIN__)','line_number':1164,'multiline':False]
['text':' !defined(ASIO_DISABLE_SIGACTION)','line_number':1165,'multiline':False]
['text':' !defined(ASIO_HAS_SIGACTION)','line_number':1166,'multiline':False]
['text':' Can use signal().','line_number':1168,'multiline':False]
['text':' !defined(UNDER_CE)','line_number':1173,'multiline':False]
['text':' !defined(ASIO_DISABLE_SIGNAL)','line_number':1174,'multiline':False]
['text':' !defined(ASIO_HAS_SIGNAL)','line_number':1175,'multiline':False]
['text':' Can use getaddrinfo() and getnameinfo().','line_number':1177,'multiline':False]
['text':' defined(UNDER_CE)','line_number':1185,'multiline':False]
['text':' (__MAC_OS_X_VERSION_MIN_REQUIRED >= 1050)','line_number':1190,'multiline':False]
['text':' defined(__MAC_OS_X_VERSION_MIN_REQUIRED)','line_number':1191,'multiline':False]
['text':' defined(__MAC_OS_X_VERSION_MIN_REQUIRED)','line_number':1193,'multiline':False]
['text':' defined(__MACH__) && defined(__APPLE__)','line_number':1194,'multiline':False]
['text':' defined(__MACH__) && defined(__APPLE__)','line_number':1196,'multiline':False]
['text':' !defined(ASIO_DISABLE_GETADDRINFO)','line_number':1197,'multiline':False]
['text':' !defined(ASIO_HAS_GETADDRINFO)','line_number':1198,'multiline':False]
['text':' Whether standard iostreams are disabled.','line_number':1200,'multiline':False]
['text':' !defined(BOOST_NO_IOSTREAM)','line_number':1204,'multiline':False]
['text':' !defined(ASIO_NO_IOSTREAM)','line_number':1205,'multiline':False]
['text':' Whether exception handling is disabled.','line_number':1207,'multiline':False]
['text':' !defined(BOOST_NO_EXCEPTIONS)','line_number':1211,'multiline':False]
['text':' !defined(ASIO_NO_EXCEPTIONS)','line_number':1212,'multiline':False]
['text':' Whether the typeid operator is supported.','line_number':1214,'multiline':False]
['text':' !defined(BOOST_NO_TYPEID)','line_number':1218,'multiline':False]
['text':' !defined(ASIO_NO_TYPEID)','line_number':1219,'multiline':False]
['text':' Threads.','line_number':1221,'multiline':False]
['text':' defined(ASIO_HAS_BOOST_CONFIG) && defined(BOOST_HAS_THREADS)','line_number':1239,'multiline':False]
['text':' !defined(ASIO_DISABLE_THREADS)','line_number':1240,'multiline':False]
['text':' !defined(ASIO_HAS_THREADS)','line_number':1241,'multiline':False]
['text':' POSIX threads.','line_number':1243,'multiline':False]
['text':' defined(ASIO_HAS_BOOST_CONFIG) && defined(BOOST_HAS_PTHREADS)','line_number':1250,'multiline':False]
['text':' defined(ASIO_HAS_THREADS)','line_number':1251,'multiline':False]
['text':' !defined(ASIO_HAS_PTHREADS)','line_number':1252,'multiline':False]
['text':' Helper to prevent macro expansion.','line_number':1254,'multiline':False]
['text':' Helper to define in-class constants.','line_number':1257,'multiline':False]
['text':' !defined(ASIO_DISABLE_BOOST_STATIC_CONSTANT)','line_number':1262,'multiline':False]
['text':' !defined(ASIO_DISABLE_BOOST_STATIC_CONSTANT)','line_number':1265,'multiline':False]
['text':' !defined(ASIO_STATIC_CONSTANT)','line_number':1266,'multiline':False]
['text':' Boost array library.','line_number':1268,'multiline':False]
['text':' !defined(ASIO_DISABLE_BOOST_ARRAY)','line_number':1272,'multiline':False]
['text':' !defined(ASIO_HAS_BOOST_ARRAY)','line_number':1273,'multiline':False]
['text':' Boost assert macro.','line_number':1275,'multiline':False]
['text':' !defined(ASIO_DISABLE_BOOST_ASSERT)','line_number':1279,'multiline':False]
['text':' !defined(ASIO_HAS_BOOST_ASSERT)','line_number':1280,'multiline':False]
['text':' Boost limits header.','line_number':1282,'multiline':False]
['text':' !defined(ASIO_DISABLE_BOOST_LIMITS)','line_number':1286,'multiline':False]
['text':' !defined(ASIO_HAS_BOOST_LIMITS)','line_number':1287,'multiline':False]
['text':' Boost throw_exception function.','line_number':1289,'multiline':False]
['text':' !defined(ASIO_DISABLE_BOOST_THROW_EXCEPTION)','line_number':1293,'multiline':False]
['text':' !defined(ASIO_HAS_BOOST_THROW_EXCEPTION)','line_number':1294,'multiline':False]
['text':' Boost regex library.','line_number':1296,'multiline':False]
['text':' !defined(ASIO_DISABLE_BOOST_REGEX)','line_number':1300,'multiline':False]
['text':' !defined(ASIO_HAS_BOOST_REGEX)','line_number':1301,'multiline':False]
['text':' Boost bind function.','line_number':1303,'multiline':False]
['text':' !defined(ASIO_DISABLE_BOOST_BIND)','line_number':1307,'multiline':False]
['text':' !defined(ASIO_HAS_BOOST_BIND)','line_number':1308,'multiline':False]
['text':' Boost's BOOST_WORKAROUND macro.','line_number':1310,'multiline':False]
['text':' !defined(ASIO_DISABLE_BOOST_WORKAROUND)','line_number':1314,'multiline':False]
['text':' !defined(ASIO_HAS_BOOST_WORKAROUND)','line_number':1315,'multiline':False]
['text':' Microsoft Visual C++'s secure C runtime library.','line_number':1317,'multiline':False]
['text':' defined(ASIO_MSVC)','line_number':1324,'multiline':False]
['text':' && (ASIO_MSVC >= 1400)','line_number':1325,'multiline':False]
['text':' && !defined(UNDER_CE)','line_number':1326,'multiline':False]
['text':' !defined(ASIO_DISABLE_SECURE_RTL)','line_number':1327,'multiline':False]
['text':' !defined(ASIO_HAS_SECURE_RTL)','line_number':1328,'multiline':False]
['text':' Handler hooking. Disabled for ancient Borland C++ and gcc compilers.','line_number':1330,'multiline':False]
['text':' (__GNUC__ >= 3)','line_number':1336,'multiline':False]
['text':' !defined(__BORLANDC__)','line_number':1339,'multiline':False]
['text':' !defined(ASIO_DISABLE_HANDLER_HOOKS)','line_number':1340,'multiline':False]
['text':' !defined(ASIO_HAS_HANDLER_HOOKS)','line_number':1341,'multiline':False]
['text':' Support for the __thread keyword extension.','line_number':1343,'multiline':False]
['text':' defined(__INTEL_COMPILER) && (__INTEL_COMPILER >= 1100)','line_number':1354,'multiline':False]
['text':' && !(defined(__clang__) && defined(__ANDROID__))','line_number':1355,'multiline':False]
['text':' ((__GNUC__ == 3) && (__GNUC_MINOR__ >= 3)) || (__GNUC__ > 3)','line_number':1356,'multiline':False]
['text':' defined(__GNUC__) && (defined(__i386__) || defined(__x86_64__))','line_number':1357,'multiline':False]
['text':' defined(__linux__)','line_number':1358,'multiline':False]
['text':' (_MSC_VER >= 1700)','line_number':1363,'multiline':False]
['text':' defined(ASIO_MSVC) && defined(ASIO_WINDOWS_RUNTIME)','line_number':1364,'multiline':False]
['text':' !defined(ASIO_DISABLE_THREAD_KEYWORD_EXTENSION)','line_number':1365,'multiline':False]
['text':' !defined(ASIO_THREAD_KEYWORD)','line_number':1368,'multiline':False]
['text':' Support for POSIX ssize_t typedef.','line_number':1370,'multiline':False]
['text':' defined(__linux__)','line_number':1375,'multiline':False]
['text':'   || (defined(__MACH__) && defined(__APPLE__))','line_number':1376,'multiline':False]
['text':' !defined(ASIO_DISABLE_SSIZE_T)','line_number':1377,'multiline':False]
['text':' Helper macros to manage the transition away from the old services-based API.','line_number':1379,'multiline':False]
['text':' defined(ASIO_ENABLE_OLD_SERVICES)','line_number':1392,'multiline':False]
['text':' ASIO_SVC_T is defined at each point of use.','line_number':1397,'multiline':False]
['text':' ASIO_SVC_T1 is defined at each point of use.','line_number':1402,'multiline':False]
['text':' defined(ASIO_ENABLE_OLD_SERVICES)','line_number':1404,'multiline':False]
['text':' Helper macros to manage transition away from error_code return values.','line_number':1406,'multiline':False]
['text':' defined(ASIO_NO_DEPRECATED)','line_number':1410,'multiline':False]
['text':' defined(ASIO_NO_DEPRECATED)','line_number':1413,'multiline':False]
['text':' Newer gcc, clang need special treatment to suppress unused typedef warnings.','line_number':1415,'multiline':False]
['text':' (__clang_major__ >= 7)','line_number':1420,'multiline':False]
['text':' ((__clang_major__ == 3) && (__clang_minor__ >= 6))','line_number':1424,'multiline':False]
['text':'   || (__clang_major__ > 3)','line_number':1425,'multiline':False]
['text':' ((__GNUC__ == 4) && (__GNUC_MINOR__ >= 8)) || (__GNUC__ > 4)','line_number':1429,'multiline':False]
['text':' defined(__GNUC__)','line_number':1430,'multiline':False]
['text':' !defined(ASIO_UNUSED_TYPEDEF)','line_number':1433,'multiline':False]
['text':' Some versions of gcc generate spurious warnings about unused variables.','line_number':1435,'multiline':False]
['text':' (__GNUC__ >= 4)','line_number':1439,'multiline':False]
['text':' defined(__GNUC__)','line_number':1440,'multiline':False]
['text':' !defined(ASIO_UNUSED_VARIABLE)','line_number':1443,'multiline':False]
['text':' Support co_await on compilers known to allow it.','line_number':1445,'multiline':False]
['text':' defined(_RESUMABLE_FUNCTIONS_SUPPORTED)','line_number':1452,'multiline':False]
['text':' (_MSC_FULL_VER >= 190023506)','line_number':1453,'multiline':False]
['text':' defined(ASIO_MSVC)','line_number':1454,'multiline':False]
['text':' !defined(ASIO_DISABLE_CO_AWAIT)','line_number':1455,'multiline':False]
['text':' __has_include(<experimental/coroutine>)','line_number':1460,'multiline':False]
['text':' (__cpp_coroutines >= 201703)','line_number':1461,'multiline':False]
['text':' defined(__clang__)','line_number':1462,'multiline':False]
['text':' !defined(ASIO_HAS_CO_AWAIT)','line_number':1463,'multiline':False]
['text':' ASIO_DETAIL_CONFIG_HPP','line_number':1465,'multiline':False]
