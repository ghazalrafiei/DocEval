['text':'','line_number':1,'multiline':False]
['text':' uses_executor.hpp','line_number':2,'multiline':False]
['text':' ~~~~~~~~~~~~~~~~~','line_number':3,'multiline':False]
['text':'','line_number':4,'multiline':False]
['text':' Copyright (c) 2003-2018 Christopher M. Kohlhoff (chris at kohlhoff dot com)','line_number':5,'multiline':False]
['text':'','line_number':6,'multiline':False]
['text':' Distributed under the Boost Software License, Version 1.0. (See accompanying','line_number':7,'multiline':False]
['text':' file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)','line_number':8,'multiline':False]
['text':'','line_number':9,'multiline':False]
['text':' defined(_MSC_VER) && (_MSC_VER >= 1200)','line_number':16,'multiline':False]
['text':'/ A special type, similar to std::nothrow_t, used to disambiguate','line_number':25,'multiline':False]
['text':'/ constructors that accept executor arguments.','line_number':26,'multiline':False]
['text':'*
 * The executor_arg_t struct is an empty structure type used as a unique type
 * to disambiguate constructor and function overloading. Specifically, some
 * types have constructors with executor_arg_t as the first argument,
 * immediately followed by an argument of a type that satisfies the Executor
 * type requirements.
 ','line_number':27,'multiline':True]
['text':'/ Constructor.','line_number':36,'multiline':False]
['text':'/ A special value, similar to std::nothrow, used to disambiguate constructors','line_number':42,'multiline':False]
['text':'/ that accept executor arguments.','line_number':43,'multiline':False]
['text':'*
 * See asio::executor_arg_t and asio::uses_executor
 * for more information.
 ','line_number':44,'multiline':True]
['text':'/ The uses_executor trait detects whether a type T has an associated executor','line_number':54,'multiline':False]
['text':'/ that is convertible from type Executor.','line_number':55,'multiline':False]
['text':'*
 * Meets the BinaryTypeTrait requirements. The Asio library provides a
 * definition that is derived from false_type. A program may specialize this
 * template to derive from true_type for a user-defined type T that can be
 * constructed with an executor, where the first argument of a constructor has
 * type executor_arg_t and the second argument is convertible from type
 * Executor.
 ','line_number':56,'multiline':True]
['text':' namespace asio','line_number':67,'multiline':False]
['text':' ASIO_USES_EXECUTOR_HPP','line_number':71,'multiline':False]
