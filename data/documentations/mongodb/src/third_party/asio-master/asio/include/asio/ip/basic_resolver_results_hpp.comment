['text':'','line_number':1,'multiline':False]
['text':' ip/basic_resolver_results.hpp','line_number':2,'multiline':False]
['text':' ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~','line_number':3,'multiline':False]
['text':'','line_number':4,'multiline':False]
['text':' Copyright (c) 2003-2018 Christopher M. Kohlhoff (chris at kohlhoff dot com)','line_number':5,'multiline':False]
['text':'','line_number':6,'multiline':False]
['text':' Distributed under the Boost Software License, Version 1.0. (See accompanying','line_number':7,'multiline':False]
['text':' file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)','line_number':8,'multiline':False]
['text':'','line_number':9,'multiline':False]
['text':' defined(_MSC_VER) && (_MSC_VER >= 1200)','line_number':16,'multiline':False]
['text':' defined(ASIO_WINDOWS_RUNTIME)','line_number':27,'multiline':False]
['text':'/ A range of entries produced by a resolver.','line_number':34,'multiline':False]
['text':'*
 * The asio::ip::basic_resolver_results class template is used to define
 * a range over the results returned by a resolver.
 *
 * The iterator's value_type, obtained when a results iterator is dereferenced,
 * is: @code const basic_resolver_entry<InternetProtocol> @endcode
 *
 * @note For backward compatibility, basic_resolver_results is derived from
 * basic_resolver_iterator. This derivation is deprecated.
 *
 * @par Thread Safety
 * @e Distinct @e objects: Safe.@n
 * @e Shared @e objects: Unsafe.
 ','line_number':35,'multiline':True]
['text':' !defined(ASIO_NO_DEPRECATED)','line_number':53,'multiline':False]
['text':' !defined(ASIO_NO_DEPRECATED)','line_number':55,'multiline':False]
['text':'/ The protocol type associated with the results.','line_number':58,'multiline':False]
['text':'/ The endpoint type associated with the results.','line_number':61,'multiline':False]
['text':'/ The type of a value in the results range.','line_number':64,'multiline':False]
['text':'/ The type of a const reference to a value in the range.','line_number':67,'multiline':False]
['text':'/ The type of a non-const reference to a value in the range.','line_number':70,'multiline':False]
['text':'/ The type of an iterator into the range.','line_number':73,'multiline':False]
['text':'/ The type of an iterator into the range.','line_number':76,'multiline':False]
['text':'/ Type used to represent the distance between two iterators in the range.','line_number':79,'multiline':False]
['text':'/ Type used to represent a count of the elements in the range.','line_number':82,'multiline':False]
['text':'/ Default constructor creates an empty range.','line_number':85,'multiline':False]
['text':'/ Copy constructor.','line_number':90,'multiline':False]
['text':'/ Move constructor.','line_number':97,'multiline':False]
['text':' defined(ASIO_HAS_MOVE) || defined(GENERATING_DOCUMENTATION)','line_number':103,'multiline':False]
['text':'/ Assignment operator.','line_number':105,'multiline':False]
['text':'/ Move-assignment operator.','line_number':113,'multiline':False]
['text':' defined(ASIO_HAS_MOVE) || defined(GENERATING_DOCUMENTATION)','line_number':120,'multiline':False]
['text':' Create results from an addrinfo list returned by getaddrinfo.','line_number':123,'multiline':False]
['text':' For memcpy.','line_number':143,'multiline':False]
['text':' Create results from an endpoint, host name and service name.','line_number':158,'multiline':False]
['text':' Create results from a sequence of endpoints, host and service name.','line_number':170,'multiline':False]
['text':' Create results from a Windows Runtime list of EndpointPair objects.','line_number':191,'multiline':False]
['text':' defined(ASIO_WINDOWS_RUNTIME)','line_number':229,'multiline':False]
['text':' !defined(GENERATING_DOCUMENTATION)','line_number':230,'multiline':False]
['text':'/ Get the number of entries in the results range.','line_number':232,'multiline':False]
['text':'/ Get the maximum number of entries permitted in a results range.','line_number':238,'multiline':False]
['text':'/ Determine whether the results range is empty.','line_number':244,'multiline':False]
['text':'/ Obtain a begin iterator for the results range.','line_number':250,'multiline':False]
['text':'/ Obtain an end iterator for the results range.','line_number':258,'multiline':False]
['text':'/ Obtain a begin iterator for the results range.','line_number':264,'multiline':False]
['text':'/ Obtain an end iterator for the results range.','line_number':270,'multiline':False]
['text':'/ Swap the results range with another.','line_number':276,'multiline':False]
['text':'/ Test two iterators for equality.','line_number':288,'multiline':False]
['text':'/ Test two iterators for inequality.','line_number':295,'multiline':False]
['text':' namespace ip','line_number':306,'multiline':False]
['text':' namespace asio','line_number':307,'multiline':False]
['text':' ASIO_IP_BASIC_RESOLVER_RESULTS_HPP','line_number':311,'multiline':False]
