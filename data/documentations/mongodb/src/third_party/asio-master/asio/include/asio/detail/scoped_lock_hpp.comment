['text':'','line_number':1,'multiline':False]
['text':' detail/scoped_lock.hpp','line_number':2,'multiline':False]
['text':' ~~~~~~~~~~~~~~~~~~~~~~','line_number':3,'multiline':False]
['text':'','line_number':4,'multiline':False]
['text':' Copyright (c) 2003-2018 Christopher M. Kohlhoff (chris at kohlhoff dot com)','line_number':5,'multiline':False]
['text':'','line_number':6,'multiline':False]
['text':' Distributed under the Boost Software License, Version 1.0. (See accompanying','line_number':7,'multiline':False]
['text':' file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)','line_number':8,'multiline':False]
['text':'','line_number':9,'multiline':False]
['text':' defined(_MSC_VER) && (_MSC_VER >= 1200)','line_number':16,'multiline':False]
['text':' Helper class to lock and unlock a mutex automatically.','line_number':25,'multiline':False]
['text':' Tag type used to distinguish constructors.','line_number':31,'multiline':False]
['text':' Constructor adopts a lock that is already held.','line_number':34,'multiline':False]
['text':' Constructor acquires the lock.','line_number':41,'multiline':False]
['text':' Destructor releases the lock.','line_number':49,'multiline':False]
['text':' Explicitly acquire the lock.','line_number':56,'multiline':False]
['text':' Explicitly release the lock.','line_number':66,'multiline':False]
['text':' Test whether the lock is held.','line_number':76,'multiline':False]
['text':' Get the underlying mutex.','line_number':82,'multiline':False]
['text':' The underlying mutex.','line_number':89,'multiline':False]
['text':' Whether the mutex is currently locked or unlocked.','line_number':92,'multiline':False]
['text':' namespace detail','line_number':96,'multiline':False]
['text':' namespace asio','line_number':97,'multiline':False]
['text':' ASIO_DETAIL_SCOPED_LOCK_HPP','line_number':101,'multiline':False]
