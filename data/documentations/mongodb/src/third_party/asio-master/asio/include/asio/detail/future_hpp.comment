['text':'','line_number':1,'multiline':False]
['text':' detail/future.hpp','line_number':2,'multiline':False]
['text':' ~~~~~~~~~~~~~~~~~','line_number':3,'multiline':False]
['text':'','line_number':4,'multiline':False]
['text':' Copyright (c) 2003-2018 Christopher M. Kohlhoff (chris at kohlhoff dot com)','line_number':5,'multiline':False]
['text':'','line_number':6,'multiline':False]
['text':' Distributed under the Boost Software License, Version 1.0. (See accompanying','line_number':7,'multiline':False]
['text':' file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)','line_number':8,'multiline':False]
['text':'','line_number':9,'multiline':False]
['text':' defined(_MSC_VER) && (_MSC_VER >= 1200)','line_number':16,'multiline':False]
['text':' Even though the future header is available, libstdc++ may not implement the','line_number':21,'multiline':False]
['text':' std::future class itself. However, we need to have already included the','line_number':22,'multiline':False]
['text':' future header to reliably test for _GLIBCXX_HAS_GTHREADS.','line_number':23,'multiline':False]
['text':' defined(_GLIBCXX_HAS_GTHREADS)','line_number':27,'multiline':False]
['text':' defined(__GNUC__) && !defined(ASIO_HAS_CLANG_LIBCXX)','line_number':28,'multiline':False]
['text':' defined(__GNUC__) && !defined(ASIO_HAS_CLANG_LIBCXX)','line_number':30,'multiline':False]
['text':' defined(ASIO_HAS_STD_FUTURE)','line_number':31,'multiline':False]
['text':' ASIO_DETAIL_FUTURE_HPP','line_number':33,'multiline':False]
