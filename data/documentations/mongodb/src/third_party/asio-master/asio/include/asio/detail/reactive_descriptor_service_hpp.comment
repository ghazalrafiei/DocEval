['text':'','line_number':1,'multiline':False]
['text':' detail/reactive_descriptor_service.hpp','line_number':2,'multiline':False]
['text':' ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~','line_number':3,'multiline':False]
['text':'','line_number':4,'multiline':False]
['text':' Copyright (c) 2003-2018 Christopher M. Kohlhoff (chris at kohlhoff dot com)','line_number':5,'multiline':False]
['text':'','line_number':6,'multiline':False]
['text':' Distributed under the Boost Software License, Version 1.0. (See accompanying','line_number':7,'multiline':False]
['text':' file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)','line_number':8,'multiline':False]
['text':'','line_number':9,'multiline':False]
['text':' defined(_MSC_VER) && (_MSC_VER >= 1200)','line_number':16,'multiline':False]
['text':' The native type of a descriptor.','line_number':48,'multiline':False]
['text':' The implementation type of the descriptor.','line_number':51,'multiline':False]
['text':' Default constructor.','line_number':56,'multiline':False]
['text':' Only this service will have access to the internal values.','line_number':64,'multiline':False]
['text':' The native descriptor representation.','line_number':67,'multiline':False]
['text':' The current state of the descriptor.','line_number':70,'multiline':False]
['text':' Per-descriptor data used by the reactor.','line_number':73,'multiline':False]
['text':' Constructor.','line_number':77,'multiline':False]
['text':' Destroy all user-defined handler objects owned by the service.','line_number':81,'multiline':False]
['text':' Construct a new descriptor implementation.','line_number':84,'multiline':False]
['text':' Move-construct a new descriptor implementation.','line_number':87,'multiline':False]
['text':' Move-assign from another descriptor implementation.','line_number':91,'multiline':False]
['text':' Destroy a descriptor implementation.','line_number':96,'multiline':False]
['text':' Assign a native descriptor to a descriptor implementation.','line_number':99,'multiline':False]
['text':' Determine whether the descriptor is open.','line_number':104,'multiline':False]
['text':' Destroy a descriptor implementation.','line_number':110,'multiline':False]
['text':' Get the native descriptor representation.','line_number':114,'multiline':False]
['text':' Release ownership of the native descriptor representation.','line_number':120,'multiline':False]
['text':' Cancel all operations associated with the descriptor.','line_number':123,'multiline':False]
['text':' Perform an IO control command on the descriptor.','line_number':127,'multiline':False]
['text':' Gets the non-blocking mode of the descriptor.','line_number':137,'multiline':False]
['text':' Sets the non-blocking mode of the descriptor.','line_number':143,'multiline':False]
['text':' Gets the non-blocking mode of the native descriptor implementation.','line_number':152,'multiline':False]
['text':' Sets the non-blocking mode of the native descriptor implementation.','line_number':158,'multiline':False]
['text':' Wait for the descriptor to become ready to read, ready to write, or to have','line_number':167,'multiline':False]
['text':' pending error conditions.','line_number':168,'multiline':False]
['text':' Asynchronously wait for the descriptor to become ready to read, ready to','line_number':191,'multiline':False]
['text':' write, or to have pending error conditions.','line_number':192,'multiline':False]
['text':' Allocate and construct an operation to wrap the handler.','line_number':200,'multiline':False]
['text':' Write some data to the descriptor.','line_number':232,'multiline':False]
['text':' Wait until data can be written without blocking.','line_number':244,'multiline':False]
['text':' Wait for descriptor to become ready.','line_number':248,'multiline':False]
['text':' Start an asynchronous write. The data being sent must be valid for the','line_number':254,'multiline':False]
['text':' lifetime of the asynchronous operation.','line_number':255,'multiline':False]
['text':' Allocate and construct an operation to wrap the handler.','line_number':263,'multiline':False]
['text':' Start an asynchronous wait until data can be written without blocking.','line_number':278,'multiline':False]
['text':' Allocate and construct an operation to wrap the handler.','line_number':286,'multiline':False]
['text':' Read some data from the stream. Returns the number of bytes read.','line_number':299,'multiline':False]
['text':' Wait until data can be read without blocking.','line_number':311,'multiline':False]
['text':' Wait for descriptor to become ready.','line_number':315,'multiline':False]
['text':' Start an asynchronous read. The buffer for the data being read must be','line_number':321,'multiline':False]
['text':' valid for the lifetime of the asynchronous operation.','line_number':322,'multiline':False]
['text':' Allocate and construct an operation to wrap the handler.','line_number':330,'multiline':False]
['text':' Wait until data can be read without blocking.','line_number':345,'multiline':False]
['text':' Allocate and construct an operation to wrap the handler.','line_number':353,'multiline':False]
['text':' Start the asynchronous operation.','line_number':367,'multiline':False]
['text':' The selector that performs event demultiplexing for the service.','line_number':371,'multiline':False]
['text':' namespace detail','line_number':375,'multiline':False]
['text':' namespace asio','line_number':376,'multiline':False]
['text':' defined(ASIO_HEADER_ONLY)','line_number':382,'multiline':False]
['text':' !defined(ASIO_WINDOWS)','line_number':384,'multiline':False]
['text':'   && !defined(ASIO_WINDOWS_RUNTIME)','line_number':385,'multiline':False]
['text':'   && !defined(__CYGWIN__)','line_number':386,'multiline':False]
['text':' ASIO_DETAIL_REACTIVE_DESCRIPTOR_SERVICE_HPP','line_number':388,'multiline':False]
