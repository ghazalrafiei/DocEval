['text':'','line_number':1,'multiline':False]
['text':' generic/stream_protocol.hpp','line_number':2,'multiline':False]
['text':' ~~~~~~~~~~~~~~~~~~~~~~~~~~~','line_number':3,'multiline':False]
['text':'','line_number':4,'multiline':False]
['text':' Copyright (c) 2003-2018 Christopher M. Kohlhoff (chris at kohlhoff dot com)','line_number':5,'multiline':False]
['text':'','line_number':6,'multiline':False]
['text':' Distributed under the Boost Software License, Version 1.0. (See accompanying','line_number':7,'multiline':False]
['text':' file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)','line_number':8,'multiline':False]
['text':'','line_number':9,'multiline':False]
['text':' defined(_MSC_VER) && (_MSC_VER >= 1200)','line_number':16,'multiline':False]
['text':'/ Encapsulates the flags needed for a generic stream-oriented socket.','line_number':32,'multiline':False]
['text':'*
 * The asio::generic::stream_protocol class contains flags necessary for
 * stream-oriented sockets of any address family and protocol.
 *
 * @par Examples
 * Constructing using a native address family and socket protocol:
 * @code stream_protocol p(AF_INET, IPPROTO_TCP); @endcode
 * Constructing from a specific protocol type:
 * @code stream_protocol p(asio::ip::tcp::v4()); @endcode
 *
 * @par Thread Safety
 * @e Distinct @e objects: Safe.@n
 * @e Shared @e objects: Safe.
 *
 * @par Concepts:
 * Protocol.
 ','line_number':33,'multiline':True]
['text':'/ Construct a protocol object for a specific address family and protocol.','line_number':53,'multiline':False]
['text':'/ Construct a generic protocol object from a specific protocol.','line_number':60,'multiline':False]
['text':'*
   * @throws @c bad_cast Thrown if the source protocol is not stream-oriented.
   ','line_number':61,'multiline':True]
['text':'/ Obtain an identifier for the type of the protocol.','line_number':76,'multiline':False]
['text':'/ Obtain an identifier for the protocol.','line_number':82,'multiline':False]
['text':'/ Obtain an identifier for the protocol family.','line_number':88,'multiline':False]
['text':'/ Compare two protocols for equality.','line_number':94,'multiline':False]
['text':'/ Compare two protocols for inequality.','line_number':100,'multiline':False]
['text':'/ The type of an endpoint.','line_number':106,'multiline':False]
['text':'/ The generic socket type.','line_number':109,'multiline':False]
['text':'/ The generic socket iostream type.','line_number':113,'multiline':False]
['text':' !defined(ASIO_NO_IOSTREAM)','line_number':115,'multiline':False]
['text':' namespace generic','line_number':122,'multiline':False]
['text':' namespace asio','line_number':123,'multiline':False]
['text':' ASIO_GENERIC_STREAM_PROTOCOL_HPP','line_number':127,'multiline':False]
