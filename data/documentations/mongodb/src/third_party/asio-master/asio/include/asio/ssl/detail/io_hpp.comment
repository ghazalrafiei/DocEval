['text':'','line_number':1,'multiline':False]
['text':' ssl/detail/io.hpp','line_number':2,'multiline':False]
['text':' ~~~~~~~~~~~~~~~~~','line_number':3,'multiline':False]
['text':'','line_number':4,'multiline':False]
['text':' Copyright (c) 2003-2018 Christopher M. Kohlhoff (chris at kohlhoff dot com)','line_number':5,'multiline':False]
['text':'','line_number':6,'multiline':False]
['text':' Distributed under the Boost Software License, Version 1.0. (See accompanying','line_number':7,'multiline':False]
['text':' file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)','line_number':8,'multiline':False]
['text':'','line_number':9,'multiline':False]
['text':' defined(_MSC_VER) && (_MSC_VER >= 1200)','line_number':16,'multiline':False]
['text':' If the input buffer is empty then we need to read some more data from','line_number':39,'multiline':False]
['text':' the underlying transport.','line_number':40,'multiline':False]
['text':' Pass the new input data to the engine.','line_number':45,'multiline':False]
['text':' Try the operation again.','line_number':48,'multiline':False]
['text':' Get output data from the engine and write it to the underlying','line_number':53,'multiline':False]
['text':' transport.','line_number':54,'multiline':False]
['text':' Try the operation again.','line_number':58,'multiline':False]
['text':' Get output data from the engine and write it to the underlying','line_number':63,'multiline':False]
['text':' transport.','line_number':64,'multiline':False]
['text':' Operation is complete. Return result to caller.','line_number':68,'multiline':False]
['text':' Operation is complete. Return result to caller.','line_number':74,'multiline':False]
['text':' Operation failed. Return result to caller.','line_number':80,'multiline':False]
['text':' defined(ASIO_HAS_MOVE)','line_number':125,'multiline':False]
['text':' Called after at least one async operation.','line_number':132,'multiline':False]
['text':' If the input buffer already has data in it we can pass it to the','line_number':139,'multiline':False]
['text':' engine and then retry the operation immediately.','line_number':140,'multiline':False]
['text':' The engine wants more data to be read from input. However, we','line_number':147,'multiline':False]
['text':' cannot allow more than one read operation at a time on the','line_number':148,'multiline':False]
['text':' underlying transport. The pending_read_ timer's expiry is set to','line_number':149,'multiline':False]
['text':' pos_infin if a read is in progress, and neg_infin otherwise.','line_number':150,'multiline':False]
['text':' Prevent other read operations from being started.','line_number':153,'multiline':False]
['text':' Start reading some data from the underlying transport.','line_number':156,'multiline':False]
['text':' Wait until the current read operation completes.','line_number':163,'multiline':False]
['text':' Yield control until asynchronous operation completes. Control','line_number':167,'multiline':False]
['text':' resumes at the "default:" label below.','line_number':168,'multiline':False]
['text':' The engine wants some data to be written to the output. However, we','line_number':174,'multiline':False]
['text':' cannot allow more than one write operation at a time on the','line_number':175,'multiline':False]
['text':' underlying transport. The pending_write_ timer's expiry is set to','line_number':176,'multiline':False]
['text':' pos_infin if a write is in progress, and neg_infin otherwise.','line_number':177,'multiline':False]
['text':' Prevent other write operations from being started.','line_number':180,'multiline':False]
['text':' Start writing all the data to the underlying transport.','line_number':183,'multiline':False]
['text':' Wait until the current write operation completes.','line_number':190,'multiline':False]
['text':' Yield control until asynchronous operation completes. Control','line_number':194,'multiline':False]
['text':' resumes at the "default:" label below.','line_number':195,'multiline':False]
['text':' The SSL operation is done and we can invoke the handler, but we','line_number':200,'multiline':False]
['text':' have to keep in mind that this function might be being called from','line_number':201,'multiline':False]
['text':' the async operation's initiating function. In this case we're not','line_number':202,'multiline':False]
['text':' allowed to call the handler directly. Instead, issue a zero-sized','line_number':203,'multiline':False]
['text':' read so the handler runs "as-if" posted using io_context::post().','line_number':204,'multiline':False]
['text':' Yield control until asynchronous operation completes. Control','line_number':211,'multiline':False]
['text':' resumes at the "default:" label below.','line_number':212,'multiline':False]
['text':' Continue on to run handler directly.','line_number':217,'multiline':False]
['text':' Timer cancellation, no data transferred.','line_number':224,'multiline':False]
['text':' Add received data to the engine's input.','line_number':232,'multiline':False]
['text':' Release any waiting read operations.','line_number':237,'multiline':False]
['text':' Try the operation again.','line_number':240,'multiline':False]
['text':' Release any waiting write operations.','line_number':245,'multiline':False]
['text':' Try the operation again.','line_number':248,'multiline':False]
['text':' Release any waiting write operations.','line_number':253,'multiline':False]
['text':' Fall through to call handler.','line_number':256,'multiline':False]
['text':' Pass the result to the handler.','line_number':260,'multiline':False]
['text':' Our work here is done.','line_number':265,'multiline':False]
['text':' Operation failed. Pass the result to the handler.','line_number':270,'multiline':False]
['text':'private:','line_number':275,'multiline':False]
['text':' namespace detail','line_number':337,'multiline':False]
['text':' namespace ssl','line_number':338,'multiline':False]
['text':' namespace asio','line_number':368,'multiline':False]
['text':' ASIO_SSL_DETAIL_IO_HPP','line_number':372,'multiline':False]
