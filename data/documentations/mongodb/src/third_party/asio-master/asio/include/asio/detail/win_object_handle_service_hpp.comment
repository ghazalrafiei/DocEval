['text':'','line_number':1,'multiline':False]
['text':' detail/win_object_handle_service.hpp','line_number':2,'multiline':False]
['text':' ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~','line_number':3,'multiline':False]
['text':'','line_number':4,'multiline':False]
['text':' Copyright (c) 2003-2018 Christopher M. Kohlhoff (chris at kohlhoff dot com)','line_number':5,'multiline':False]
['text':' Copyright (c) 2011 Boris Schaeling (boris@highscore.de)','line_number':6,'multiline':False]
['text':'','line_number':7,'multiline':False]
['text':' Distributed under the Boost Software License, Version 1.0. (See accompanying','line_number':8,'multiline':False]
['text':' file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)','line_number':9,'multiline':False]
['text':'','line_number':10,'multiline':False]
['text':' defined(_MSC_VER) && (_MSC_VER >= 1200)','line_number':17,'multiline':False]
['text':' The native type of an object handle.','line_number':38,'multiline':False]
['text':' The implementation type of the object handle.','line_number':41,'multiline':False]
['text':' Default constructor.','line_number':45,'multiline':False]
['text':' Only this service will have access to the internal values.','line_number':56,'multiline':False]
['text':' The native object handle representation. May be accessed or modified','line_number':59,'multiline':False]
['text':' without locking the mutex.','line_number':60,'multiline':False]
['text':' The handle used to unregister the wait operation. The mutex must be','line_number':63,'multiline':False]
['text':' locked when accessing or modifying this member.','line_number':64,'multiline':False]
['text':' The operations waiting on the object handle. If there is a registered','line_number':67,'multiline':False]
['text':' wait then the mutex must be locked when accessing or modifying this','line_number':68,'multiline':False]
['text':' member','line_number':69,'multiline':False]
['text':' The service instance that owns the object handle implementation.','line_number':72,'multiline':False]
['text':' Pointers to adjacent handle implementations in linked list. The mutex','line_number':75,'multiline':False]
['text':' must be locked when accessing or modifying these members.','line_number':76,'multiline':False]
['text':' Constructor.','line_number':81,'multiline':False]
['text':' Destroy all user-defined handler objects owned by the service.','line_number':85,'multiline':False]
['text':' Construct a new handle implementation.','line_number':88,'multiline':False]
['text':' Move-construct a new handle implementation.','line_number':91,'multiline':False]
['text':' Move-assign from another handle implementation.','line_number':95,'multiline':False]
['text':' Destroy a handle implementation.','line_number':100,'multiline':False]
['text':' Assign a native handle to a handle implementation.','line_number':103,'multiline':False]
['text':' Determine whether the handle is open.','line_number':107,'multiline':False]
['text':' Destroy a handle implementation.','line_number':113,'multiline':False]
['text':' Get the native handle representation.','line_number':117,'multiline':False]
['text':' Cancel all operations associated with the handle.','line_number':123,'multiline':False]
['text':' Perform a synchronous wait for the object to enter a signalled state.','line_number':127,'multiline':False]
['text':'/ Start an asynchronous wait.','line_number':131,'multiline':False]
['text':' Allocate and construct an operation to wrap the handler.','line_number':135,'multiline':False]
['text':' Helper function to start an asynchronous wait operation.','line_number':149,'multiline':False]
['text':' Helper function to register a wait operation.','line_number':152,'multiline':False]
['text':' Callback function invoked when the registered wait completes.','line_number':156,'multiline':False]
['text':' The io_context implementation used to post completions.','line_number':160,'multiline':False]
['text':' Mutex to protect access to internal state.','line_number':163,'multiline':False]
['text':' The head of a linked list of all implementations.','line_number':166,'multiline':False]
['text':' Flag to indicate that the dispatcher has been shut down.','line_number':169,'multiline':False]
['text':' namespace detail','line_number':173,'multiline':False]
['text':' namespace asio','line_number':174,'multiline':False]
['text':' defined(ASIO_HEADER_ONLY)','line_number':180,'multiline':False]
['text':' defined(ASIO_HAS_WINDOWS_OBJECT_HANDLE)','line_number':182,'multiline':False]
['text':' ASIO_DETAIL_WIN_OBJECT_HANDLE_SERVICE_HPP','line_number':184,'multiline':False]
