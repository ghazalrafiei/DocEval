['text':'','line_number':1,'multiline':False]
['text':' detail/handler_type_requirements.hpp','line_number':2,'multiline':False]
['text':' ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~','line_number':3,'multiline':False]
['text':'','line_number':4,'multiline':False]
['text':' Copyright (c) 2003-2018 Christopher M. Kohlhoff (chris at kohlhoff dot com)','line_number':5,'multiline':False]
['text':'','line_number':6,'multiline':False]
['text':' Distributed under the Boost Software License, Version 1.0. (See accompanying','line_number':7,'multiline':False]
['text':' file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)','line_number':8,'multiline':False]
['text':'','line_number':9,'multiline':False]
['text':' defined(_MSC_VER) && (_MSC_VER >= 1200)','line_number':16,'multiline':False]
['text':' Older versions of gcc have difficulty compiling the sizeof expressions where','line_number':20,'multiline':False]
['text':' we test the handler type requirements. We'll disable checking of handler type','line_number':21,'multiline':False]
['text':' requirements for those compilers, but otherwise enable it by default.','line_number':22,'multiline':False]
['text':' !defined(__GNUC__) || (__GNUC__ >= 4)','line_number':26,'multiline':False]
['text':' !defined(ASIO_DISABLE_HANDLER_TYPE_REQUIREMENTS)','line_number':27,'multiline':False]
['text':' With C++0x we can use a combination of enhanced SFINAE and static_assert to','line_number':29,'multiline':False]
['text':' generate better template error messages. As this technique is not yet widely','line_number':30,'multiline':False]
['text':' portable, we'll only enable it for tested compilers.','line_number':31,'multiline':False]
['text':' defined(__GXX_EXPERIMENTAL_CXX0X__)','line_number':37,'multiline':False]
['text':' ((__GNUC__ == 4) && (__GNUC_MINOR__ >= 5)) || (__GNUC__ > 4)','line_number':38,'multiline':False]
['text':' defined(__GNUC__)','line_number':39,'multiline':False]
['text':' (_MSC_VER >= 1600)','line_number':43,'multiline':False]
['text':' defined(ASIO_MSVC)','line_number':44,'multiline':False]
['text':' __has_feature(cxx_static_assert)','line_number':48,'multiline':False]
['text':' defined(__clang__)','line_number':49,'multiline':False]
['text':' !defined(ASIO_DISABLE_HANDLER_TYPE_REQUIREMENTS)','line_number':50,'multiline':False]
['text':' defined(ASIO_ENABLE_HANDLER_TYPE_REQUIREMENTS)','line_number':54,'multiline':False]
['text':' defined(ASIO_ENABLE_HANDLER_TYPE_REQUIREMENTS_ASSERT)','line_number':106,'multiline':False]
['text':' defined(ASIO_ENABLE_HANDLER_TYPE_REQUIREMENTS_ASSERT)','line_number':110,'multiline':False]
['text':' defined(ASIO_HAS_MOVE)','line_number':119,'multiline':False]
['text':' defined(ASIO_HAS_MOVE)','line_number':122,'multiline':False]
['text':' !defined(ASIO_ENABLE_HANDLER_TYPE_REQUIREMENTS)','line_number':493,'multiline':False]
['text':' !defined(ASIO_ENABLE_HANDLER_TYPE_REQUIREMENTS)','line_number':551,'multiline':False]
['text':' namespace detail','line_number':553,'multiline':False]
['text':' namespace asio','line_number':554,'multiline':False]
['text':' ASIO_DETAIL_HANDLER_TYPE_REQUIREMENTS_HPP','line_number':556,'multiline':False]
