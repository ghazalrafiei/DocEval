['text':'','line_number':1,'multiline':False]
['text':' detail/impl/win_object_handle_service.ipp','line_number':2,'multiline':False]
['text':' ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~','line_number':3,'multiline':False]
['text':'','line_number':4,'multiline':False]
['text':' Copyright (c) 2003-2018 Christopher M. Kohlhoff (chris at kohlhoff dot com)','line_number':5,'multiline':False]
['text':' Copyright (c) 2011 Boris Schaeling (boris@highscore.de)','line_number':6,'multiline':False]
['text':'','line_number':7,'multiline':False]
['text':' Distributed under the Boost Software License, Version 1.0. (See accompanying','line_number':8,'multiline':False]
['text':' file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)','line_number':9,'multiline':False]
['text':'','line_number':10,'multiline':False]
['text':' defined(_MSC_VER) && (_MSC_VER >= 1200)','line_number':17,'multiline':False]
['text':' Setting this flag to true prevents new objects from being registered, and','line_number':44,'multiline':False]
['text':' new asynchronous wait operations from being started. We only need to worry','line_number':45,'multiline':False]
['text':' about cleaning up the operations that are currently in progress.','line_number':46,'multiline':False]
['text':' Insert implementation into linked list of all implementations.','line_number':65,'multiline':False]
['text':' Insert implementation into linked list of all implementations.','line_number':83,'multiline':False]
['text':' We must not hold the lock while calling UnregisterWaitEx. This is because','line_number':100,'multiline':False]
['text':' the registered callback function might be invoked while we are waiting for','line_number':101,'multiline':False]
['text':' UnregisterWaitEx to complete.','line_number':102,'multiline':False]
['text':' Remove implementation from linked list of all implementations.','line_number':124,'multiline':False]
['text':' Insert implementation into linked list of all implementations.','line_number':144,'multiline':False]
['text':' We must not hold the lock while calling UnregisterWaitEx. This is because','line_number':152,'multiline':False]
['text':' the registered callback function might be invoked while we are waiting for','line_number':153,'multiline':False]
['text':' UnregisterWaitEx to complete.','line_number':154,'multiline':False]
['text':' Remove implementation from linked list of all implementations.','line_number':169,'multiline':False]
['text':' We must not hold the lock while calling UnregisterWaitEx. This is','line_number':195,'multiline':False]
['text':' because the registered callback function might be invoked while we are','line_number':196,'multiline':False]
['text':' waiting for UnregisterWaitEx to complete.','line_number':197,'multiline':False]
['text':' We must not hold the lock while calling UnregisterWaitEx. This is','line_number':247,'multiline':False]
['text':' because the registered callback function might be invoked while we are','line_number':248,'multiline':False]
['text':' waiting for UnregisterWaitEx to complete.','line_number':249,'multiline':False]
['text':' We must not hold the lock while calling UnregisterWaitEx. This is','line_number':299,'multiline':False]
['text':' because the registered callback function might be invoked while we are','line_number':300,'multiline':False]
['text':' waiting for UnregisterWaitEx to complete.','line_number':301,'multiline':False]
['text':' Only the first operation to be queued gets to register a wait callback.','line_number':353,'multiline':False]
['text':' Subsequent operations have to wait for the first to finish.','line_number':354,'multiline':False]
['text':' namespace detail','line_number':442,'multiline':False]
['text':' namespace asio','line_number':443,'multiline':False]
['text':' defined(ASIO_HAS_WINDOWS_OBJECT_HANDLE)','line_number':447,'multiline':False]
['text':' ASIO_DETAIL_IMPL_WIN_OBJECT_HANDLE_SERVICE_IPP','line_number':449,'multiline':False]
