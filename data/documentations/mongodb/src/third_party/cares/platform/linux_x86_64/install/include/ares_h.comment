['text':' Copyright 1998 by the Massachusetts Institute of Technology.
 * Copyright (C) 2007-2013 by Daniel Stenberg
 *
 * Permission to use, copy, modify, and distribute this
 * software and its documentation for any purpose and without
 * fee is hereby granted, provided that the above copyright
 * notice appear in all copies and that both that copyright
 * notice and this permission notice appear in supporting
 * documentation, and that the name of M.I.T. not be used in
 * advertising or publicity pertaining to distribution of the
 * software without specific, written prior permission.
 * M.I.T. makes no representations about the suitability of
 * this software for any purpose.  It is provided "as is"
 * without express or implied warranty.
 ','line_number':2,'multiline':True]
['text':' c-ares version defines   ','line_number':21,'multiline':True]
['text':' c-ares build definitions ','line_number':22,'multiline':True]
['text':' c-ares rules enforcement ','line_number':23,'multiline':True]
['text':'
 * Define WIN32 when build target is Win32 API
 ','line_number':25,'multiline':True]
['text':' HP-UX systems version 9, 10 and 11 lack sys/select.h and so does oldish
   libc5-based Linux systems. Only include it on system that are known to
   require it! ','line_number':36,'multiline':True]
['text':' To aid with linking against a static c-ares build, lets tell the microsoft
 * compiler to pull in needed dependencies ','line_number':66,'multiline':True]
['text':'
** c-ares external API function linkage decorations.
','line_number':86,'multiline':True]
['text':' Server error codes (ARES_ENODATA indicates no relevant answer) ','line_number':107,'multiline':True]
['text':' Locally generated error codes ','line_number':115,'multiline':True]
['text':' ares_getnameinfo error codes ','line_number':128,'multiline':True]
['text':' ares_getaddrinfo error codes ','line_number':131,'multiline':True]
['text':' Uninitialized library error code ','line_number':135,'multiline':True]
['text':' introduced in 1.7.0 ','line_number':136,'multiline':True]
['text':' ares_library_init error codes ','line_number':138,'multiline':True]
['text':' introduced in 1.7.0 ','line_number':139,'multiline':True]
['text':' introduced in 1.7.0 ','line_number':140,'multiline':True]
['text':' More error codes ','line_number':142,'multiline':True]
['text':' introduced in 1.7.0 ','line_number':143,'multiline':True]
['text':' More ares_getaddrinfo error codes ','line_number':145,'multiline':True]
['text':' introduced in 1.?.0 ','line_number':146,'multiline':True]
['text':' Flag values ','line_number':148,'multiline':True]
['text':' Option mask values ','line_number':159,'multiline':True]
['text':' Nameinfo flag values ','line_number':180,'multiline':True]
['text':' Reserved for future use ','line_number':193,'multiline':True]
['text':' Addrinfo flag values ','line_number':198,'multiline':True]
['text':' Reserved for future use ','line_number':208,'multiline':True]
['text':' ares_getsock() can return info about this
                                  many sockets ','line_number':217,'multiline':True]
['text':' c-ares library initialization flag values ','line_number':223,'multiline':True]
['text':'
 * Typedef our socket type
 ','line_number':229,'multiline':True]
['text':' ares_socket_typedef ','line_number':242,'multiline':True]
['text':' NOTE about the ares_options struct to users and developers.

   This struct will remain looking like this. It will not be extended nor
   shrunk in future releases, but all new options will be set by ares_set_*()
   options instead of with the ares_init_options() function.

   Eventually (in a galaxy far far away), all options will be settable by
   ares_set_*() options and the ares_init_options() function will become
   deprecated.

   When new options are added to c-ares, they are not added to this
   struct. And they are not "saved" with the ares_save_options() function but
   instead we encourage the use of the ares_dup() function. Needless to say,
   if you add config options to c-ares you need to make sure ares_dup()
   duplicates this new option.

 ','line_number':251,'multiline':True]
['text':' in seconds or milliseconds, depending on options ','line_number':270,'multiline':True]
['text':' These next 3 configure local binding for the out-going socket
 * connection.  Use these to specify source IP and/or network device
 * on multi-homed systems.
 ','line_number':368,'multiline':True]
['text':' local_ip6 should be 16 bytes in length ','line_number':374,'multiline':True]
['text':' local_dev_name should be null terminated. ','line_number':378,'multiline':True]
['text':'
 * Virtual function set to have user-managed socket IO.
 * Note that all functions need to be defined, and when
 * set, the library will not do any bind nor set any
 * socket options, assuming the client handles these
 * through either socket creation or the
 * ares_sock_config_callback call.
 ','line_number':402,'multiline':True]
['text':'
 * NOTE: before c-ares 1.7.0 we would most often use the system in6_addr
 * struct below when ares itself was built, but many apps would use this
 * private version since the header checked a HAVE_* define for it. Starting
 * with 1.7.0 we always declare and use our own to stop relying on the
 * system's one.
 ','line_number':517,'multiline':True]
['text':' plength excludes null termination ','line_number':544,'multiline':True]
['text':' length excludes null termination ','line_number':546,'multiline':True]
['text':' length excludes null termination ','line_number':566,'multiline':True]
['text':' NOTE: This structure is a superset of ares_txt_reply
 ','line_number':569,'multiline':True]
['text':' 1 - if start of new record
   * 0 - if a chunk in the same record ','line_number':575,'multiline':True]
['text':'
 * Similar to addrinfo, but with extra ttl and missing canonname.
 ','line_number':608,'multiline':True]
['text':'
 * alias - label of the resource record.
 * name - value (canonical name) of the resource record.
 * See RFC2181 10.1.1. CNAME terminology.
 ','line_number':622,'multiline':True]
['text':'
** Parse the buffer, starting at *abuf and of length alen bytes, previously
** obtained from an ares_search call.  Put the results in *host, if nonnull.
** Also, if addrttls is nonnull, put up to *naddrttls IPv4 addresses along with
** their TTLs in that array, and set *naddrttls to the number of addresses
** so written.
','line_number':647,'multiline':True]
['text':' Incomming string format: host[:port][,host[:port]]... ','line_number':743,'multiline':True]
['text':' ARES__H ','line_number':764,'multiline':True]
