['text':' LibTomCrypt, modular cryptographic library -- Tom St Denis
 *
 * LibTomCrypt is a library that provides various cryptographic
 * algorithms in a highly modular and flexible manner.
 *
 * The library is free for all purposes without any express
 * guarantee it works.
 ','line_number':1,'multiline':True]
['text':' ---- NUMBER THEORY ---- ','line_number':10,'multiline':True]
['text':' Indicates standard output formats that can be read e.g. by OpenSSL or GnuTLS ','line_number':17,'multiline':True]
['text':' internal helper functions ','line_number':23,'multiline':True]
['text':'* Number of OID digits in use ','line_number':34,'multiline':True]
['text':' LTC_SOURCE ','line_number':39,'multiline':True]
['text':' ---- RSA ---- ','line_number':41,'multiline':True]
['text':'* RSA PKCS style key ','line_number':44,'multiline':True]
['text':'* Type of key, PK_PRIVATE or PK_PUBLIC ','line_number':46,'multiline':True]
['text':'* The public exponent ','line_number':48,'multiline':True]
['text':'* The private exponent ','line_number':50,'multiline':True]
['text':'* The modulus ','line_number':52,'multiline':True]
['text':'* The p factor of N ','line_number':54,'multiline':True]
['text':'* The q factor of N ','line_number':56,'multiline':True]
['text':'* The 1/q mod p CRT param ','line_number':58,'multiline':True]
['text':'* The d mod (p - 1) CRT param ','line_number':60,'multiline':True]
['text':'* The d mod (q - 1) CRT param ','line_number':62,'multiline':True]
['text':' These use PKCS #1 v2.0 padding ','line_number':76,'multiline':True]
['text':' These can be switched between PKCS #1 v2.x and PKCS #1 v1.5 paddings ','line_number':92,'multiline':True]
['text':' PKCS #1 import/export ','line_number':119,'multiline':True]
['text':' ---- Katja ---- ','line_number':140,'multiline':True]
['text':' Min and Max KAT key sizes (in bits) ','line_number':143,'multiline':True]
['text':'* Katja PKCS style key ','line_number':147,'multiline':True]
['text':'* Type of key, PK_PRIVATE or PK_PUBLIC ','line_number':149,'multiline':True]
['text':'* The private exponent ','line_number':151,'multiline':True]
['text':'* The modulus ','line_number':153,'multiline':True]
['text':'* The p factor of N ','line_number':155,'multiline':True]
['text':'* The q factor of N ','line_number':157,'multiline':True]
['text':'* The 1/q mod p CRT param ','line_number':159,'multiline':True]
['text':'* The d mod (p - 1) CRT param ','line_number':161,'multiline':True]
['text':'* The d mod (q - 1) CRT param ','line_number':163,'multiline':True]
['text':'* The pq param ','line_number':165,'multiline':True]
['text':' These use PKCS #1 v2.0 padding ','line_number':177,'multiline':True]
['text':' PKCS #1 import/export ','line_number':189,'multiline':True]
['text':' ---- DH Routines ---- ','line_number':195,'multiline':True]
['text':' internal helper functions ','line_number':235,'multiline':True]
['text':' LTC_MDH ','line_number':239,'multiline':True]
['text':' ---- ECC Routines ---- ','line_number':242,'multiline':True]
['text':' size of our temp buffers for exported keys ','line_number':245,'multiline':True]
['text':' max private key size ','line_number':248,'multiline':True]
['text':'* Structure defines a NIST GF(p) curve ','line_number':251,'multiline':True]
['text':'* The size of the curve in octets ','line_number':253,'multiline':True]
['text':'* name of curve ','line_number':256,'multiline':True]
['text':'* The prime that defines the field the curve is in (encoded in hex) ','line_number':259,'multiline':True]
['text':'* The fields B param (hex) ','line_number':262,'multiline':True]
['text':'* The order of the curve (hex) ','line_number':265,'multiline':True]
['text':'* The x co-ordinate of the base point on the curve (hex) ','line_number':268,'multiline':True]
['text':'* The y co-ordinate of the base point on the curve (hex) ','line_number':271,'multiline':True]
['text':'* A point on a ECC curve, stored in Jacbobian format such that (x,y,z) => (x/z^2, y/z^3, 1) when interpretted as affine ','line_number':275,'multiline':True]
['text':'* The x co-ordinate ','line_number':277,'multiline':True]
['text':'* The y co-ordinate ','line_number':280,'multiline':True]
['text':'* The z co-ordinate ','line_number':283,'multiline':True]
['text':'* An ECC key ','line_number':287,'multiline':True]
['text':'* Type of key, PK_PRIVATE or PK_PUBLIC ','line_number':289,'multiline':True]
['text':'* Index into the ltc_ecc_sets[] for the parameters of this curve; if -1, then this key is using user supplied curve in dp ','line_number':292,'multiline':True]
['text':'* pointer to domain parameters; either points to NIST curves (identified by idx >= 0) or user supplied curve ','line_number':295,'multiline':True]
['text':'* The public key ','line_number':298,'multiline':True]
['text':'* The private key ','line_number':301,'multiline':True]
['text':'* the ECC params provided ','line_number':305,'multiline':True]
['text':' low level functions ','line_number':352,'multiline':True]
['text':' point ops (mp == montgomery digit) ','line_number':357,'multiline':True]
['text':' R = 2P ','line_number':359,'multiline':True]
['text':' R = P + Q ','line_number':362,'multiline':True]
['text':' optimized point multiplication using fixed point cache (HAC algorithm 14.117) ','line_number':367,'multiline':True]
['text':' functions for saving/loading/freeing/adding to fixed point cache ','line_number':370,'multiline':True]
['text':' lock/unlock all points currently in fixed point cache ','line_number':376,'multiline':True]
['text':' R = kG ','line_number':380,'multiline':True]
['text':' kA*A + kB*B = C ','line_number':384,'multiline':True]
['text':' Shamir's trick with optimized point multiplication using fixed point cache ','line_number':391,'multiline':True]
['text':' map P to affine from projective ','line_number':400,'multiline':True]
['text':' Max diff between group and modulus size in bytes ','line_number':407,'multiline':True]
['text':' Max DSA group size in bytes (default allows 4k-bit groups) ','line_number':410,'multiline':True]
['text':'* DSA key structure ','line_number':413,'multiline':True]
['text':'* The key type, PK_PRIVATE or PK_PUBLIC ','line_number':415,'multiline':True]
['text':'* The order of the sub-group used in octets ','line_number':418,'multiline':True]
['text':'* The generator  ','line_number':421,'multiline':True]
['text':'* The prime used to generate the sub-group ','line_number':424,'multiline':True]
['text':'* The large prime that generats the field the contains the sub-group ','line_number':427,'multiline':True]
['text':'* The private key ','line_number':430,'multiline':True]
['text':'* The public key ','line_number':433,'multiline':True]
['text':' internal helper functions ','line_number':480,'multiline':True]
['text':' DER handling ','line_number':491,'multiline':True]
['text':'  0 ','line_number':494,'multiline':True]
['text':'  5 ','line_number':500,'multiline':True]
['text':' 10 ','line_number':506,'multiline':True]
['text':' 15 ','line_number':512,'multiline':True]
['text':' 20 ','line_number':518,'multiline':True]
['text':'* A LTC ASN.1 list type ','line_number':522,'multiline':True]
['text':'* The LTC ASN.1 enumerated type identifier ','line_number':524,'multiline':True]
['text':'* The data to encode or place for decoding ','line_number':526,'multiline':True]
['text':'* The size of the input or resulting output ','line_number':528,'multiline':True]
['text':'* The used flag, this is used by the CHOICE ASN.1 type to indicate which choice was made ','line_number':530,'multiline':True]
['text':'* prev/next entry in the list ','line_number':532,'multiline':True]
['text':' SEQUENCE ','line_number':546,'multiline':True]
['text':' internal helper functions ','line_number':562,'multiline':True]
['text':' SUBJECT PUBLIC KEY INFO ','line_number':565,'multiline':True]
['text':' LTC_SOURCE ','line_number':573,'multiline':True]
['text':' SET ','line_number':575,'multiline':True]
['text':' VA list handy helpers with triplets of <type, size, data> ','line_number':584,'multiline':True]
['text':' FLEXI DECODER handle unknown list decoder ','line_number':588,'multiline':True]
['text':' BOOLEAN ','line_number':594,'multiline':True]
['text':' INTEGER ','line_number':600,'multiline':True]
['text':' INTEGER -- handy for 0..2^32-1 values ','line_number':605,'multiline':True]
['text':' BIT STRING ','line_number':610,'multiline':True]
['text':' OCTET STRING ','line_number':621,'multiline':True]
['text':' OBJECT IDENTIFIER ','line_number':628,'multiline':True]
['text':' IA5 STRING ','line_number':636,'multiline':True]
['text':' TELETEX STRING ','line_number':646,'multiline':True]
['text':' internal helper functions ','line_number':652,'multiline':True]
['text':' LTC_SOURCE ','line_number':655,'multiline':True]
['text':' PRINTABLE STRING ','line_number':658,'multiline':True]
['text':' UTF-8 ','line_number':668,'multiline':True]
['text':' please note that it might happen that LTC_WCHAR_MAX is undefined ','line_number':676,'multiline':True]
['text':' internal helper functions ','line_number':689,'multiline':True]
['text':' LTC_SOURCE ','line_number':691,'multiline':True]
['text':' CHOICE ','line_number':695,'multiline':True]
['text':' UTCTime ','line_number':699,'multiline':True]
['text':' year ','line_number':701,'multiline':True]
['text':' month ','line_number':702,'multiline':True]
['text':' day ','line_number':703,'multiline':True]
['text':' hour ','line_number':704,'multiline':True]
['text':' minute ','line_number':705,'multiline':True]
['text':' second ','line_number':706,'multiline':True]
['text':' timezone offset direction 0 == +, 1 == - ','line_number':707,'multiline':True]
['text':' timezone offset hours ','line_number':708,'multiline':True]
['text':' timezone offset minutes ','line_number':709,'multiline':True]
['text':' GeneralizedTime ','line_number':720,'multiline':True]
['text':' year ','line_number':722,'multiline':True]
['text':' month ','line_number':723,'multiline':True]
['text':' day ','line_number':724,'multiline':True]
['text':' hour ','line_number':725,'multiline':True]
['text':' minute ','line_number':726,'multiline':True]
['text':' second ','line_number':727,'multiline':True]
['text':' fractional seconds ','line_number':728,'multiline':True]
['text':' timezone offset direction 0 == +, 1 == - ','line_number':729,'multiline':True]
['text':' timezone offset hours ','line_number':730,'multiline':True]
['text':' timezone offset minutes ','line_number':731,'multiline':True]
['text':' ref:         HEAD -> master, tag: v1.18.2 ','line_number':745,'multiline':True]
['text':' git commit:  7e7eb695d581782f04b24dc444cbfde86af59853 ','line_number':746,'multiline':True]
['text':' commit time: 2018-07-01 22:49:01 +0200 ','line_number':747,'multiline':True]
