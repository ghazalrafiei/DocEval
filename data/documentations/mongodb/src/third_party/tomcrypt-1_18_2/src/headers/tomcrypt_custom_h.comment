['text':' LibTomCrypt, modular cryptographic library -- Tom St Denis
 *
 * LibTomCrypt is a library that provides various cryptographic
 * algorithms in a highly modular and flexible manner.
 *
 * The library is free for all purposes without any express
 * guarantee it works.
 ','line_number':1,'multiline':True]
['text':' macros for various libc functions you can change for embedded targets ','line_number':13,'multiline':True]
['text':' A memory compare function that has to run in constant time,
 * c.f. mem_neq() API summary.
 ','line_number':39,'multiline':True]
['text':' shortcut to disable automatic inclusion ','line_number':63,'multiline':True]
['text':' LTC_NOTHING ','line_number':73,'multiline':True]
['text':' Easy button? ','line_number':75,'multiline':True]
['text':' The minimal set of functionality to run the tests ','line_number':118,'multiline':True]
['text':' Enable self-test test vector checking ','line_number':133,'multiline':True]
['text':' Enable extended self-tests ','line_number':137,'multiline':True]
['text':' #define LTC_TEST_EXT ','line_number':138,'multiline':True]
['text':' Use small code where possible ','line_number':140,'multiline':True]
['text':' #define LTC_SMALL_CODE ','line_number':141,'multiline':True]
['text':' clean the stack of functions which put private information on stack ','line_number':143,'multiline':True]
['text':' #define LTC_CLEAN_STACK ','line_number':144,'multiline':True]
['text':' disable all file related functions ','line_number':146,'multiline':True]
['text':' #define LTC_NO_FILE ','line_number':147,'multiline':True]
['text':' disable all forms of ASM ','line_number':149,'multiline':True]
['text':' #define LTC_NO_ASM ','line_number':150,'multiline':True]
['text':' disable FAST mode ','line_number':152,'multiline':True]
['text':' #define LTC_NO_FAST ','line_number':153,'multiline':True]
['text':' disable BSWAP on x86 ','line_number':155,'multiline':True]
['text':' #define LTC_NO_BSWAP ','line_number':156,'multiline':True]
['text':' ---> math provider? <--- ','line_number':158,'multiline':True]
['text':' LibTomMath ','line_number':161,'multiline':True]
['text':' #define LTM_DESC ','line_number':162,'multiline':True]
['text':' TomsFastMath ','line_number':164,'multiline':True]
['text':' #define TFM_DESC ','line_number':165,'multiline':True]
['text':' GNU Multiple Precision Arithmetic Library ','line_number':167,'multiline':True]
['text':' #define GMP_DESC ','line_number':168,'multiline':True]
['text':' LTC_NO_MATH ','line_number':170,'multiline':True]
['text':' ---> Symmetric Block Ciphers <--- ','line_number':172,'multiline':True]
['text':' _TABLES tells it to use tables during setup, _SMALL means to use the smaller scheduled key format
 * (saves 4KB of ram), _ALL_TABLES enables all tables during setup ','line_number':182,'multiline':True]
['text':' #define LTC_TWOFISH_ALL_TABLES ','line_number':187,'multiline':True]
['text':' #define LTC_TWOFISH_SMALL ','line_number':191,'multiline':True]
['text':' LTC_DES includes EDE triple-DES ','line_number':192,'multiline':True]
['text':' stream ciphers ','line_number':206,'multiline':True]
['text':' LTC_NO_CIPHERS ','line_number':211,'multiline':True]
['text':' ---> Block Cipher Modes of Operation <--- ','line_number':214,'multiline':True]
['text':' F8 chaining mode ','line_number':223,'multiline':True]
['text':' LRW mode ','line_number':226,'multiline':True]
['text':' like GCM mode this will enable 16 8x128 tables [64KB] that make
    * seeking very fast.
    ','line_number':229,'multiline':True]
['text':' XTS mode ','line_number':235,'multiline':True]
['text':' LTC_NO_MODES ','line_number':238,'multiline':True]
['text':' ---> One-Way Hash Functions <--- ','line_number':240,'multiline':True]
['text':' LTC_NO_HASHES ','line_number':266,'multiline':True]
['text':' ---> MAC functions <--- ','line_number':269,'multiline':True]
['text':' ---> Encrypt + Authenticate Modes <--- ','line_number':282,'multiline':True]
['text':' Use 64KiB tables ','line_number':292,'multiline':True]
['text':' USE SSE2? requires GCC works on x86_32 and x86_64','line_number':297,'multiline':True]
['text':' #define LTC_GCM_TABLES_SSE2 ','line_number':299,'multiline':True]
['text':' LTC_NO_MACS ','line_number':302,'multiline':True]
['text':' --> Pseudo Random Number Generators <--- ','line_number':305,'multiline':True]
['text':' Yarrow ','line_number':308,'multiline':True]
['text':' a PRNG that simply reads from an available system source ','line_number':311,'multiline':True]
['text':' The RC4 stream cipher based PRNG ','line_number':314,'multiline':True]
['text':' The ChaCha20 stream cipher based PRNG ','line_number':317,'multiline':True]
['text':' Fortuna PRNG ','line_number':320,'multiline':True]
['text':' Greg's SOBER128 stream cipher based PRNG ','line_number':323,'multiline':True]
['text':' the *nix style /dev/random device ','line_number':326,'multiline':True]
['text':' try /dev/urandom before trying /dev/random
 * are you sure you want to disable this? http://www.2uo.de/myths-about-urandom/ ','line_number':328,'multiline':True]
['text':' rng_get_bytes() ','line_number':331,'multiline':True]
['text':' rng_make_prng() ','line_number':333,'multiline':True]
['text':' enable the ltc_rng hook to integrate e.g. embedded hardware RNG's easily ','line_number':336,'multiline':True]
['text':' #define LTC_PRNG_ENABLE_LTC_RNG ','line_number':337,'multiline':True]
['text':' LTC_NO_PRNGS ','line_number':339,'multiline':True]
['text':' which descriptor of AES to use?  ','line_number':343,'multiline':True]
['text':' 0 = rijndael_enc 1 = aes_enc, 2 = rijndael [full], 3 = aes [full] ','line_number':344,'multiline':True]
['text':' reseed every N calls to the read function ','line_number':356,'multiline':True]
['text':' number of pools (4..32) can save a bit of ram by lowering the count ','line_number':361,'multiline':True]
['text':' LTC_FORTUNA ','line_number':365,'multiline':True]
['text':' ---> Public Key Crypto <--- ','line_number':368,'multiline':True]
['text':' Include RSA support ','line_number':371,'multiline':True]
['text':' Include Diffie-Hellman support ','line_number':374,'multiline':True]
['text':' is_prime fails for GMP ','line_number':375,'multiline':True]
['text':' Supported Key Sizes ','line_number':377,'multiline':True]
['text':' tfm has a problem in fp_isprime for larger key sizes ','line_number':384,'multiline':True]
['text':' Include Katja (a Rabin variant like RSA) ','line_number':391,'multiline':True]
['text':' #define LTC_MKAT ','line_number':392,'multiline':True]
['text':' Digital Signature Algorithm ','line_number':394,'multiline':True]
['text':' ECC ','line_number':397,'multiline':True]
['text':' use Shamir's trick for point mul (speeds up signature verification) ','line_number':400,'multiline':True]
['text':' do we want fixed point ECC ','line_number':407,'multiline':True]
['text':' #define LTC_MECC_FP ','line_number':408,'multiline':True]
['text':' LTC_NO_PK ','line_number':410,'multiline':True]
['text':' Enable RSA blinding when doing private key operations by default ','line_number':413,'multiline':True]
['text':' LTC_NO_RSA_BLINDING ','line_number':415,'multiline':True]
['text':' Enable RSA CRT hardening when doing private key operations by default ','line_number':418,'multiline':True]
['text':' LTC_NO_RSA_CRT_HARDENING ','line_number':420,'multiline':True]
['text':' Enable ECC timing resistant version by default ','line_number':423,'multiline':True]
['text':' PKCS #1 (RSA) and #5 (Password Handling) stuff ','line_number':427,'multiline':True]
['text':' Include ASN.1 DER (required by DSA/RSA) ','line_number':433,'multiline':True]
['text':' LTC_NO_PKCS ','line_number':436,'multiline':True]
['text':' misc stuff ','line_number':438,'multiline':True]
['text':' Various tidbits of modern neatoness ','line_number':441,'multiline':True]
['text':' ... and it's URL safe version ','line_number':443,'multiline':True]
['text':' Keep LTC_NO_HKDF for compatibility reasons
 * superseeded by LTC_NO_MISC','line_number':446,'multiline':True]
['text':' HKDF Key Derivation/Expansion stuff ','line_number':449,'multiline':True]
['text':' LTC_NO_HKDF ','line_number':451,'multiline':True]
['text':' LTC_NO_MISC ','line_number':457,'multiline':True]
['text':' cleanup ','line_number':459,'multiline':True]
['text':' Supported ECC Key Sizes ','line_number':462,'multiline':True]
['text':' Maximum recursion limit when processing nested ASN.1 types. ','line_number':477,'multiline':True]
['text':' Include the MPI functionality?  (required by the PK algorithms) ','line_number':483,'multiline':True]
['text':' iterations limit for retry-loops ','line_number':487,'multiline':True]
['text':' THREAD management ','line_number':548,'multiline':True]
['text':' default no functions ','line_number':563,'multiline':True]
['text':' Debuggers ','line_number':574,'multiline':True]
['text':' define this if you use Valgrind, note: it CHANGES the way SOBER-128 and RC4 work (see the code) ','line_number':576,'multiline':True]
['text':' #define LTC_VALGRIND ','line_number':577,'multiline':True]
['text':' buffer size for reading from a file via fread(..) ','line_number':582,'multiline':True]
['text':' ref:         HEAD -> master, tag: v1.18.2 ','line_number':588,'multiline':True]
['text':' git commit:  7e7eb695d581782f04b24dc444cbfde86af59853 ','line_number':589,'multiline':True]
['text':' commit time: 2018-07-01 22:49:01 +0200 ','line_number':590,'multiline':True]
