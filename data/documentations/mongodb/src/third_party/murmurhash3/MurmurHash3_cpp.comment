['text':'-----------------------------------------------------------------------------','line_number':1,'multiline':False]
['text':' MurmurHash3 was written by Austin Appleby, and is placed in the public','line_number':2,'multiline':False]
['text':' domain. The author hereby disclaims copyright to this source code.','line_number':3,'multiline':False]
['text':' Note - The x86 and x64 versions do _not_ produce the same results, as the','line_number':5,'multiline':False]
['text':' algorithms are optimized for their respective platforms. You can still','line_number':6,'multiline':False]
['text':' compile and run any of them on any platform, but your performance with the','line_number':7,'multiline':False]
['text':' non-native version will be less than optimal.','line_number':8,'multiline':False]
['text':'-----------------------------------------------------------------------------','line_number':19,'multiline':False]
['text':' Platform-specific functions and macros','line_number':20,'multiline':False]
['text':' Microsoft Visual Studio','line_number':22,'multiline':False]
['text':' Other compilers','line_number':46,'multiline':False]
['text':' defined(_MSC_VER)','line_number':48,'multiline':False]
['text':' !defined(_MSC_VER)','line_number':75,'multiline':False]
['text':'-----------------------------------------------------------------------------','line_number':88,'multiline':False]
['text':' Block read - if your platform needs to do endian-swapping or can only','line_number':89,'multiline':False]
['text':' handle aligned reads, do the conversion here','line_number':90,'multiline':False]
['text':' Block write - opposite of getblock, force little endian and do unaligned write.','line_number':109,'multiline':False]
['text':'-----------------------------------------------------------------------------','line_number':117,'multiline':False]
['text':' Finalization mix - force all bits of a hash block to avalanche','line_number':118,'multiline':False]
['text':'----------','line_number':131,'multiline':False]
['text':' namespace','line_number':144,'multiline':False]
['text':'-----------------------------------------------------------------------------','line_number':146,'multiline':False]
['text':'----------','line_number':159,'multiline':False]
['text':' body','line_number':160,'multiline':False]
['text':'----------','line_number':177,'multiline':False]
['text':' tail','line_number':178,'multiline':False]
['text':'----------','line_number':192,'multiline':False]
['text':' finalization','line_number':193,'multiline':False]
['text':'-----------------------------------------------------------------------------','line_number':202,'multiline':False]
['text':'----------','line_number':220,'multiline':False]
['text':' body','line_number':221,'multiline':False]
['text':'----------','line_number':249,'multiline':False]
['text':' tail','line_number':250,'multiline':False]
['text':'----------','line_number':285,'multiline':False]
['text':' finalization','line_number':286,'multiline':False]
['text':'-----------------------------------------------------------------------------','line_number':307,'multiline':False]
['text':'----------','line_number':321,'multiline':False]
['text':' body','line_number':322,'multiline':False]
['text':'----------','line_number':340,'multiline':False]
['text':' tail','line_number':341,'multiline':False]
['text':'----------','line_number':370,'multiline':False]
['text':' finalization','line_number':371,'multiline':False]
['text':'-----------------------------------------------------------------------------','line_number':388,'multiline':False]
