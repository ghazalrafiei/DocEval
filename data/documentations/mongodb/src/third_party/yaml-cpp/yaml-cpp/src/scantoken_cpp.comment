['text':' IWYU pragma: keep','line_number':8,'multiline':False]
['text':' IWYU pragma: keep','line_number':9,'multiline':False]
['text':' IWYU pragma: keep','line_number':11,'multiline':False]
['text':'/////////////////////////////////////////////////////////////////////','line_number':15,'multiline':False]
['text':' Specialization for scanning specific tokens','line_number':16,'multiline':False]
['text':' Directive','line_number':18,'multiline':False]
['text':' . Note: no semantic checking is done here (that's for the parser to do)','line_number':19,'multiline':False]
['text':' pop indents and simple keys','line_number':24,'multiline':False]
['text':' store pos and eat indicator','line_number':31,'multiline':False]
['text':' read name','line_number':35,'multiline':False]
['text':' read parameters','line_number':39,'multiline':False]
['text':' first get rid of whitespace','line_number':41,'multiline':False]
['text':' break on newline or comment','line_number':45,'multiline':False]
['text':' now read parameter','line_number':49,'multiline':False]
['text':' DocStart','line_number':60,'multiline':False]
['text':' eat','line_number':67,'multiline':False]
['text':' DocEnd','line_number':73,'multiline':False]
['text':' eat','line_number':80,'multiline':False]
['text':' FlowStart','line_number':86,'multiline':False]
['text':' flows can be simple keys','line_number':88,'multiline':False]
['text':' eat','line_number':93,'multiline':False]
['text':' FlowEnd','line_number':103,'multiline':False]
['text':' we might have a solo entry in the flow context','line_number':108,'multiline':False]
['text':' eat','line_number':119,'multiline':False]
['text':' check that it matches the start','line_number':123,'multiline':False]
['text':' FlowEntry','line_number':133,'multiline':False]
['text':' we might have a solo entry in the flow context','line_number':135,'multiline':False]
['text':' eat','line_number':146,'multiline':False]
['text':' BlockEntry','line_number':152,'multiline':False]
['text':' we better be in the block context!','line_number':154,'multiline':False]
['text':' can we put it here?','line_number':158,'multiline':False]
['text':' eat','line_number':166,'multiline':False]
['text':' Key','line_number':172,'multiline':False]
['text':' handle keys diffently in the block context (and manage indents)','line_number':174,'multiline':False]
['text':' can only put a simple key here if we're in block context','line_number':182,'multiline':False]
['text':' eat','line_number':185,'multiline':False]
['text':' Value','line_number':191,'multiline':False]
['text':' and check that simple key','line_number':193,'multiline':False]
['text':' can't follow a simple key with another simple key (dunno why, though - it','line_number':198,'multiline':False]
['text':' seems fine)','line_number':199,'multiline':False]
['text':' handle values diffently in the block context (and manage indents)','line_number':202,'multiline':False]
['text':' can only put a simple key here if we're in block context','line_number':210,'multiline':False]
['text':' eat','line_number':214,'multiline':False]
['text':' AnchorOrAlias','line_number':220,'multiline':False]
['text':' insert a potential simple key','line_number':225,'multiline':False]
['text':' eat the indicator','line_number':230,'multiline':False]
['text':' now eat the content','line_number':235,'multiline':False]
['text':' we need to have read SOMETHING!','line_number':239,'multiline':False]
['text':' and needs to end correctly','line_number':244,'multiline':False]
['text':' and we're done','line_number':249,'multiline':False]
['text':' Tag','line_number':255,'multiline':False]
['text':' insert a potential simple key','line_number':257,'multiline':False]
['text':' eat the indicator','line_number':264,'multiline':False]
['text':' is there a suffix?','line_number':282,'multiline':False]
['text':' eat the indicator','line_number':284,'multiline':False]
['text':' PlainScalar','line_number':294,'multiline':False]
['text':' set up the scanning parameters','line_number':298,'multiline':False]
['text':' insert a potential simple key','line_number':311,'multiline':False]
['text':' can have a simple key only if we ended the scalar by starting a new line','line_number':317,'multiline':False]
['text':' finally, check and see if we ended on an illegal character','line_number':321,'multiline':False]
['text':' if(Exp::IllegalCharInScalar.Matches(INPUT))','line_number':322,'multiline':False]
['text':'	throw ParserException(INPUT.mark(), ErrorMsg::CHAR_IN_SCALAR);','line_number':323,'multiline':False]
['text':' QuotedScalar','line_number':330,'multiline':False]
['text':' peek at single or double quote (don't eat because we need to preserve (for','line_number':334,'multiline':False]
['text':' the time being) the input position)','line_number':335,'multiline':False]
['text':' setup the scanning parameters','line_number':339,'multiline':False]
['text':' insert a potential simple key','line_number':352,'multiline':False]
['text':' now eat that opening quote','line_number':357,'multiline':False]
['text':' and scan','line_number':360,'multiline':False]
['text':' BlockScalarToken','line_number':370,'multiline':False]
['text':' . These need a little extra processing beforehand.','line_number':371,'multiline':False]
['text':' . We need to scan the line where the indicator is (this doesn't count as part','line_number':372,'multiline':False]
['text':' of the scalar),','line_number':373,'multiline':False]
['text':'   and then we need to figure out what level of indentation we'll be using.','line_number':374,'multiline':False]
['text':' eat block indicator ('|' or '>')','line_number':382,'multiline':False]
['text':' eat chomping/indentation indicators','line_number':387,'multiline':False]
['text':' now eat whitespace','line_number':405,'multiline':False]
['text':' and comments to the end of the line','line_number':409,'multiline':False]
['text':' if it's not a line break, then we ran into a bad character inline','line_number':414,'multiline':False]
['text':' set the initial indentation','line_number':418,'multiline':False]
['text':' simple keys always ok after block scalars (since we're gonna start a new','line_number':428,'multiline':False]
['text':' line anyways)','line_number':429,'multiline':False]
['text':' namespace YAML','line_number':437,'multiline':False]
