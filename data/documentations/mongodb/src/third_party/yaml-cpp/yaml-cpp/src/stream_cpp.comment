['text':' uis_start','line_number':50,'multiline':False]
['text':' uis_utfbe_b1','line_number':51,'multiline':False]
['text':' uis_utf32be_b2','line_number':52,'multiline':False]
['text':' uis_utf32be_bom3','line_number':53,'multiline':False]
['text':' uis_utf32be','line_number':54,'multiline':False]
['text':' uis_utf16be','line_number':55,'multiline':False]
['text':' uis_utf16be_bom1','line_number':56,'multiline':False]
['text':' uis_utfle_bom1','line_number':57,'multiline':False]
['text':' uis_utf16le_bom2','line_number':58,'multiline':False]
['text':' uis_utf32le_bom3','line_number':59,'multiline':False]
['text':' uis_utf16le','line_number':60,'multiline':False]
['text':' uis_utf32le','line_number':61,'multiline':False]
['text':' uis_utf8_imp','line_number':62,'multiline':False]
['text':' uis_utf16le_imp','line_number':63,'multiline':False]
['text':' uis_utf32le_imp3','line_number':64,'multiline':False]
['text':' uis_utf8_bom1','line_number':65,'multiline':False]
['text':' uis_utf8_bom2','line_number':66,'multiline':False]
['text':' uis_utf8','line_number':67,'multiline':False]
['text':' uis_error','line_number':68,'multiline':False]
['text':' uict00,           uictBB,           uictBF,           uictEF,','line_number':72,'multiline':False]
['text':' uictFE,           uictFF,           uictAscii,        uictOther','line_number':73,'multiline':False]
['text':' uict00, uictBB, uictBF, uictEF, uictFE, uictFF, uictAscii, uictOther','line_number':113,'multiline':False]
['text':' We are not allowed to queue the Stream::eof() codepoint, so','line_number':161,'multiline':False]
['text':' replace it with CP_REPLACEMENT_CHARACTER','line_number':162,'multiline':False]
['text':' Determine (or guess) the character-set by reading the BOM, if any.  See','line_number':197,'multiline':False]
['text':' the YAML specification for the determination algorithm.','line_number':198,'multiline':False]
['text':' get','line_number':257,'multiline':False]
['text':' . Extracts a character from the stream and updates our position','line_number':258,'multiline':False]
['text':' get','line_number':272,'multiline':False]
['text':' . Extracts 'n' characters from the stream and updates our position','line_number':273,'multiline':False]
['text':' eat','line_number':282,'multiline':False]
['text':' . Eats 'n' characters and updates our position.','line_number':283,'multiline':False]
['text':' signal end of stream','line_number':319,'multiline':False]
['text':' Trailing (low) surrogate...ugh, wrong order','line_number':347,'multiline':False]
['text':' ch is a leading (high) surrogate','line_number':351,'multiline':False]
['text':' Four byte UTF-8 code point','line_number':353,'multiline':False]
['text':' Read the trailing (low) surrogate','line_number':355,'multiline':False]
['text':' Trouble...not a low surrogate.  Dump a REPLACEMENT CHARACTER into the','line_number':366,'multiline':False]
['text':' stream.','line_number':367,'multiline':False]
['text':' Deal with the next UTF-16 unit','line_number':370,'multiline':False]
['text':' Easiest case: queue the codepoint and return','line_number':372,'multiline':False]
['text':' Start the loop over with the new high surrogate','line_number':376,'multiline':False]
['text':' Select the payload bits from the high surrogate','line_number':382,'multiline':False]
['text':' Include bits from low surrogate','line_number':386,'multiline':False]
['text':' Add the surrogacy offset','line_number':389,'multiline':False]
['text':' namespace YAML','line_number':442,'multiline':False]
