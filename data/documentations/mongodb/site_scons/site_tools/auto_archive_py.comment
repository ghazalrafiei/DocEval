['text':' Copyright 2020 MongoDB Inc.','line_number':1,'multiline':False]
['text':'','line_number':2,'multiline':False]
['text':' Permission is hereby granted, free of charge, to any person obtaining','line_number':3,'multiline':False]
['text':' a copy of this software and associated documentation files (the','line_number':4,'multiline':False]
['text':' "Software"), to deal in the Software without restriction, including','line_number':5,'multiline':False]
['text':' without limitation the rights to use, copy, modify, merge, publish,','line_number':6,'multiline':False]
['text':' distribute, sublicense, and/or sell copies of the Software, and to','line_number':7,'multiline':False]
['text':' permit persons to whom the Software is furnished to do so, subject to','line_number':8,'multiline':False]
['text':' the following conditions:','line_number':9,'multiline':False]
['text':'','line_number':10,'multiline':False]
['text':' The above copyright notice and this permission notice shall be included','line_number':11,'multiline':False]
['text':' in all copies or substantial portions of the Software.','line_number':12,'multiline':False]
['text':'','line_number':13,'multiline':False]
['text':' THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY','line_number':14,'multiline':False]
['text':' KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE','line_number':15,'multiline':False]
['text':' WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND','line_number':16,'multiline':False]
['text':' NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE','line_number':17,'multiline':False]
['text':' LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION','line_number':18,'multiline':False]
['text':' OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION','line_number':19,'multiline':False]
['text':' WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.','line_number':20,'multiline':False]
['text':'','line_number':21,'multiline':False]
['text':' Verify we didn't get a None or empty string for any argument','line_number':81,'multiline':False]
['text':' TODO: silent roles shouldn't be included here','line_number':94,'multiline':False]
['text':' Find all the files directly contained in the component DAG for entry and','line_number':110,'multiline':False]
['text':' it's dependencies.','line_number':111,'multiline':False]
['text':' Now we will call the scanner to find the transtive files of any files that','line_number':124,'multiline':False]
['text':' we found from the component DAG.','line_number':125,'multiline':False]
['text':' scan_for_transitive_install is memoized so it's safe to call it in','line_number':134,'multiline':False]
['text':' this loop. If it hasn't already run for a file we need to run it','line_number':135,'multiline':False]
['text':' anyway.','line_number':136,'multiline':False]
['text':' Setting the AIB_NO_ARCHIVE attribute to True prevents outputs from an','line_number':139,'multiline':False]
['text':' AutoInstall builder from being included into archives produced by this','line_number':140,'multiline':False]
['text':' tool','line_number':141,'multiline':False]
['text':' Usage:','line_number':142,'multiline':False]
['text':' node = env.AutoInstall(...)','line_number':143,'multiline':False]
['text':' setattr(node[0].attributes, 'AIB_NO_ARCHIVE', True)','line_number':144,'multiline':False]
['text':' TODO: perhaps caching of packages / tarballs should be','line_number':177,'multiline':False]
['text':' configurable? It's possible someone would want to do it.','line_number':178,'multiline':False]
['text':' Get the path elements that make up both DESTDIR and PREFIX. Then','line_number':193,'multiline':False]
['text':' iterate the dest_dir_elems with the prefix path elements','line_number':194,'multiline':False]
['text':' stripped off the end of the path converting them to strings for','line_number':195,'multiline':False]
['text':' joining to make the common_ancestor.','line_number':196,'multiline':False]
['text':'','line_number':197,'multiline':False]
['text':' We pass the common_ancestor to tar via -C so that $PREFIX is','line_number':198,'multiline':False]
['text':' preserved in the tarball.','line_number':199,'multiline':False]
['text':' pigz is the parallel implementation of gizp,','line_number':211,'multiline':False]
['text':' it uses all available cores on the machine.','line_number':212,'multiline':False]
['text':' if available we use it to speedup compression.','line_number':213,'multiline':False]
['text':' If we are just being invoked for our signature, we can omit the indirect dependencies','line_number':234,'multiline':False]
['text':' found by expanding the transitive dependencies, since we really only have a hard dependency','line_number':235,'multiline':False]
['text':' on our direct dependencies.','line_number':236,'multiline':False]
['text':' Pre-process what should be in the archive. We need to pass the','line_number':244,'multiline':False]
['text':' set of known installed files along to the transitive dependency','line_number':245,'multiline':False]
['text':' walk so we can filter out files that aren't in the install','line_number':246,'multiline':False]
['text':' directory.','line_number':247,'multiline':False]
['text':' Collect all the installed files for our entry. This is doing a pure DAG','line_number':250,'multiline':False]
['text':' walk idea of what should be. So we filter out any that are not in the','line_number':251,'multiline':False]
['text':' installed set.','line_number':252,'multiline':False]
['text':' TODO: relpath is costly, and we do it for every file in the archive here.','line_number':257,'multiline':False]
['text':' We should find a way to avoid the repeated relpath invocation, probably by','line_number':258,'multiline':False]
['text':' bucketing by directory.','line_number':259,'multiline':False]
['text':' This is not great for ninja, essentially we are doing realtime operations here, which is','line_number':265,'multiline':False]
['text':' not terrible for scons CommandActionGenerators, because the generation happens right before','line_number':266,'multiline':False]
['text':' executing the command. However, this means for ninja that the realtime things happen during','line_number':267,'multiline':False]
['text':' ninja generation, and are far removed from ninja execution. Even if we split this into a','line_number':268,'multiline':False]
['text':' separate action for ninja's sake, there would still be issues because the reason to make','line_number':269,'multiline':False]
['text':' such a filelist is to prevent creating command lines which are too long, and actions must','line_number':270,'multiline':False]
['text':' be converted to command lines for ninja. When the ninja tool is able to process scons','line_number':271,'multiline':False]
['text':' callbacks in order and not via aggregation then this could be moved to a simple Textfile call.','line_number':272,'multiline':False]
['text':' TODO: $BUILD_ROOT should be $VARIANT_DIR after we fix our dir','line_number':339,'multiline':False]
['text':' setup later on.','line_number':340,'multiline':False]
