['text':' Copyright 2020 MongoDB Inc.','line_number':1,'multiline':False]
['text':'','line_number':2,'multiline':False]
['text':' Permission is hereby granted, free of charge, to any person obtaining','line_number':3,'multiline':False]
['text':' a copy of this software and associated documentation files (the','line_number':4,'multiline':False]
['text':' "Software"), to deal in the Software without restriction, including','line_number':5,'multiline':False]
['text':' without limitation the rights to use, copy, modify, merge, publish,','line_number':6,'multiline':False]
['text':' distribute, sublicense, and/or sell copies of the Software, and to','line_number':7,'multiline':False]
['text':' permit persons to whom the Software is furnished to do so, subject to','line_number':8,'multiline':False]
['text':' the following conditions:','line_number':9,'multiline':False]
['text':'','line_number':10,'multiline':False]
['text':' The above copyright notice and this permission notice shall be included','line_number':11,'multiline':False]
['text':' in all copies or substantial portions of the Software.','line_number':12,'multiline':False]
['text':'','line_number':13,'multiline':False]
['text':' THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY','line_number':14,'multiline':False]
['text':' KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE','line_number':15,'multiline':False]
['text':' WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND','line_number':16,'multiline':False]
['text':' NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE','line_number':17,'multiline':False]
['text':' LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION','line_number':18,'multiline':False]
['text':' OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION','line_number':19,'multiline':False]
['text':' WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.','line_number':20,'multiline':False]
['text':'','line_number':21,'multiline':False]
['text':' Strip suffix','line_number':79,'multiline':False]
['text':' We currently create two types of commands: legacy and verbose','line_number':87,'multiline':False]
['text':' ex legacy command: cancelable_operation_context_test','line_number':88,'multiline':False]
['text':' ex verbose command: db_unittest_test_cancelable_operation_context_test','line_number':89,'multiline':False]
['text':' i.e. Verbose incorporates the name of the unittest binary, while','line_number':90,'multiline':False]
['text':' legacy only has the source file name.','line_number':91,'multiline':False]
['text':' We always create the verbose command, but we only create the legacy','line_number':92,'multiline':False]
['text':' command if there isn't a conflict between the target_name and','line_number':93,'multiline':False]
['text':' source_name. Legacy commands must be unique','line_number':94,'multiline':False]
['text':' We assume tests are provable by default, but some tests may not','line_number':126,'multiline':False]
['text':' be. Such tests can be tagged with UNDECIDABLE_TEST=True. If a','line_number':127,'multiline':False]
['text':' test isn't provable, we disable caching its results and require','line_number':128,'multiline':False]
['text':' it to be always rebuilt.','line_number':129,'multiline':False]
['text':' TODO: Should we enable proof at the file level?','line_number':147,'multiline':False]
['text':' Used for Ninja generator to collect the test execution aliases','line_number':155,'multiline':False]
['text':' TODO: Should we have some sort of prefix_xdir for the output location for these? Something like','line_number':168,'multiline':False]
['text':' $PREFIX_VARCACHE and which in our build is pre-populated to $PREFIX/var/cache/mongo or similar?','line_number':169,'multiline':False]
['text':' Keeping this here for later, but it only works if cmd.exe is','line_number':174,'multiline':False]
['text':' launched with /V, and SCons doesn't do that.','line_number':175,'multiline':False]
['text':'','line_number':176,'multiline':False]
['text':' env["PROOF_ANALYZER_COMMAND"] = "set /p nextErrorLevel=<${SOURCES[1]} & if \"!nextErrorLevel!\"==\"0 \" (type nul > $TARGET) else (exit 1)"','line_number':177,'multiline':False]
['text':'','line_number':178,'multiline':False]
['text':' Instead, use grep! I mean findstr.','line_number':179,'multiline':False]
['text':' TODO: Condition this on verbosity','line_number':185,'multiline':False]
