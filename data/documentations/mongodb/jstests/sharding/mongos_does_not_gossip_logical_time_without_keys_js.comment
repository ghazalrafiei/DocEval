['text':'*
 * Tests that mongos does not gossip cluster time metadata until at least one key is created on the
 * config server, and that it does not block waiting for keys at startup.
 ','line_number':1,'multiline':True]
['text':' clusterTime must be greater than the uninitialzed value.','line_number':11,'multiline':False]
['text':' TODO: SERVER-31986 this check can be done only for authenticated connections that do not','line_number':12,'multiline':False]
['text':' have advance_cluster_time privilege.','line_number':13,'multiline':False]
['text':' The signature must have been signed by a key with a valid generation.','line_number':18,'multiline':False]
['text':' Verify there are keys in the config server eventually, since mongos doesn't block for keys at','line_number':26,'multiline':False]
['text':' startup, and that once there are, mongos sends $clusterTime with a signature in responses.','line_number':27,'multiline':False]
['text':' Enable the failpoint, remove all keys, and restart the config servers with the failpoint','line_number':37,'multiline':False]
['text':' still enabled to guarantee there are no keys.','line_number':38,'multiline':False]
['text':' signal ','line_number':47,'multiline':True]
['text':' forRestart ','line_number':47,'multiline':True]
['text':' Limit the max time between refreshes on the config server, so new keys are created quickly.','line_number':51,'multiline':False]
['text':' Disable the failpoint.','line_number':58,'multiline':False]
['text':' Mongos should restart with no problems.','line_number':64,'multiline':False]
['text':' Eventually mongos will discover the new keys, and start signing cluster times.','line_number':67,'multiline':False]
['text':' 60 seconds.','line_number':71,'multiline':False]
['text':' There may be a delay between the creation of the first and second keys, but mongos will start','line_number':73,'multiline':False]
['text':' signing after seeing the first key, so there is only guaranteed to be one at this point.','line_number':74,'multiline':False]
