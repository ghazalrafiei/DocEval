['text':'*
 * Tests that a collection with allowMigrations: false in config.collections prohibits committing a
 * moveChunk and disables the balancer.
 * Also tests that the _configsvrSetAllowMigrations commands updates the 'allowMigrations' field and
 * bumps the collection version.
 *
 * @tags: [
 *   does_not_support_stepdowns,
 * ]
 ','line_number':1,'multiline':True]
['text':' Resets database dbName and enables sharding and establishes shard0 as primary, test case agnostic','line_number':19,'multiline':False]
['text':' Test the _configsvrSetAllowMigrations internal command directly','line_number':28,'multiline':False]
['text':' Use _configsvrSetAllowMigrations to forbid migrations from happening','line_number':40,'multiline':False]
['text':' Check that allowMigrations has been set to 'false' on the configsvr config.collections.','line_number':44,'multiline':False]
['text':' Check that the collection version has been bumped and the shard has refreshed.','line_number':47,'multiline':False]
['text':' Use _configsvrSetAllowMigrations to allow migrations to happen','line_number':50,'multiline':False]
['text':' Check that allowMigrations has been unset (that implies migrations are allowed) on the','line_number':54,'multiline':False]
['text':' configsvr config.collections.','line_number':55,'multiline':False]
['text':' Check that the collection version has been bumped and the shard has refreshed.','line_number':58,'multiline':False]
['text':' Check that _configsvrSetAllowMigrations validates the 'collectionUUID' parameter if passed','line_number':61,'multiline':False]
['text':' Check that the collection version has not changed.','line_number':74,'multiline':False]
['text':' Check that _configsvrSetAllowMigrations validates the 'collectionUUID' parameter if passed','line_number':77,'multiline':False]
['text':' Check that the collection version has been bumped and the shard has refreshed.','line_number':86,'multiline':False]
['text':' Tests that moveChunk does not succeed when {allowMigrations: false}','line_number':90,'multiline':False]
['text':' Confirm that an inProgress moveChunk fails once {allowMigrations: false}','line_number':103,'multiline':False]
['text':' {allowMigrations: false} is set, sending a new moveChunk command should also fail.','line_number':117,'multiline':False]
['text':' Confirm shard0 reports {allowMigrations: false} in the local cache as well','line_number':122,'multiline':False]
['text':' Tests {allowMigrations: false} disables balancing for collB and does not interfere with balancing','line_number':127,'multiline':False]
['text':' for collA.','line_number':128,'multiline':False]
['text':'','line_number':129,'multiline':False]
['text':' collBSetParams specify the field(s) that will be set on the collB in config.collections.','line_number':130,'multiline':False]
['text':' 1MB','line_number':145,'multiline':False]
['text':' Split both collections into 4 chunks so balancing can occur.','line_number':147,'multiline':False]
['text':' Confirm the chunks are initially unbalanced. All chunks should start out on shard0','line_number':158,'multiline':False]
['text':' (primary shard for the database).','line_number':159,'multiline':False]
['text':' 10min timeout ','line_number':179,'multiline':True]
['text':' Test that collB remains unbalanced.','line_number':187,'multiline':False]
['text':' Test cases that should disable the balancer.','line_number':198,'multiline':False]
['text':' allowMigrations ','line_number':199,'multiline':True]
['text':' allowMigrations ','line_number':200,'multiline':True]
['text':' allowMigrations ','line_number':201,'multiline':True]
