['text':'*
 * Test that reset placement history loads the correct snapshot. This is actually a test for
 * ensuring that an aggregation run on a local shard with snapshot read concern will only see the
 * snapshot data
 *
 * @tags: [
 *   assumes_balancer_off,
 *   does_not_support_stepdowns,
 * ]
 ','line_number':2,'multiline':True]
['text':'The test will attempt to simulate a fresh initialization of the placement history (empty
 * placement history and a non-empty catalog.collections/databases). While this is ok for the
 * purpose of the test, it will be caught as a routing table inconsistency and the check should be
 * disabled','line_number':26,'multiline':True]
['text':' shard 2 collections - part of the snapshot','line_number':40,'multiline':False]
['text':' Starts parallel shell to run the command that will hang.','line_number':44,'multiline':False]
['text':' shard collection - not part of the snapshot','line_number':53,'multiline':False]
['text':' cleanup the placement history (so that it will only contain the documents inserted by the','line_number':56,'multiline':False]
['text':' reset command once the failpont is turned off).','line_number':57,'multiline':False]
['text':' unhang the reset placement history','line_number':60,'multiline':False]
['text':' reset placement history will register all the data found in the snapshot read of','line_number':65,'multiline':False]
['text':' config.collection. The insertion of the third collection happened','line_number':66,'multiline':False]
['text':' after we read the snapshot so it should not be registered (note: this is only because we','line_number':67,'multiline':False]
['text':' forced a cleanup of the placement history, otherwise the third collection would have been','line_number':68,'multiline':False]
['text':' registered as part of the insertion)','line_number':69,'multiline':False]
