['text':'*
 * Test for the ReshardingTest fixture itself.
 *
 * Verifies that the background thread running the reshardCollection command will retry when mongos
 * reports an error caused by a network error from the primary shard.
 *
 * Incompatible with a config shard because it uses a sequence of fail points to test the
 * resharding test fixture, which doesn't work when the first shard is the config server. This only
 * tests the testing fixture, so it wouldn't add meaningful coverage for a config shard.
 * @tags: [
 *   requires_persistence,
 *   uses_atclustertime,
 *   config_shard_incompatible,
 * ]
 ','line_number':1,'multiline':True]
['text':' We use awaitCloneTimestampChosen() for syntactic convenience to wait for the','line_number':40,'multiline':False]
['text':' _shardsvrReshardCollection command to have been received by the primary shard.','line_number':41,'multiline':False]
['text':' Mongos uses the ARS for running the _shardsvrReshardCollection command and will retry up','line_number':44,'multiline':False]
['text':' to 3 times on a network error. We restart the server more than that many times to','line_number':45,'multiline':False]
['text':' exercise the logic of the ReshardingTest fixture needing to retry the whole','line_number':46,'multiline':False]
['text':' reshardCollection command.','line_number':47,'multiline':False]
