['text':' Tests that $merge respects the writeConcern set on the original aggregation command.','line_number':1,'multiline':False]
['text':' Enable sharding on the test DB and ensure its primary is shard0.','line_number':13,'multiline':False]
['text':' Split the target collection at {_id: 10} so that there'll be doc $merge-ed to both shards.','line_number':18,'multiline':False]
['text':' Make sure that there are only 2 nodes up so w:3 writes will always time out.','line_number':23,'multiline':False]
['text':' Test that $merge correctly returns a WC error.','line_number':27,'multiline':False]
['text':' When either mode is "fail", a different error rather than WC error is thrown.','line_number':29,'multiline':False]
['text':' $merge writeConcern errors are handled differently from normal writeConcern','line_number':60,'multiline':False]
['text':' errors. Rather than returing ok:1 and a WriteConcernError, the entire operation','line_number':61,'multiline':False]
['text':' fails.','line_number':62,'multiline':False]
['text':' Restart the stopped node and verify that the $merge's now pass.','line_number':67,'multiline':False]
['text':' Skip the combination of merge modes which will fail depending on the contents of the','line_number':71,'multiline':False]
['text':' source and target collection, as this will cause the assertion below to trip.','line_number':72,'multiline':False]
['text':' Ensure that the write concern is satisfied within a reasonable amount of time. This','line_number':89,'multiline':False]
['text':' prevents the test from hanging if for some reason the write concern can't be','line_number':90,'multiline':False]
['text':' satisfied.','line_number':91,'multiline':False]
['text':' Test that when both collections are unsharded, all writes are directed to the primary shard.','line_number':97,'multiline':False]
['text':' Shard the source collection and continue to expect writes to the primary shard.','line_number':101,'multiline':False]
['text':' Shard the target collection, however make sure that all writes go to the primary shard by','line_number':105,'multiline':False]
['text':' splitting the collection at {_id: 10} and keeping all values in the same chunk.','line_number':106,'multiline':False]
['text':' Write a few documents to the source collection which will be $merge-ed to the second shard.','line_number':111,'multiline':False]
['text':' Verify that either shard can produce a WriteConcernError since writes are going to both.','line_number':114,'multiline':False]
['text':' Verify that either shard can produce a WriteConcernError when the CatalogCache is empty.','line_number':118,'multiline':False]
