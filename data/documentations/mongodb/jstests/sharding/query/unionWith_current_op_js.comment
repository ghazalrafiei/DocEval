['text':'*
 * Tests to verify that the current op output shows all the sub-pipelines of a $unionWith. In this
 * test we also validate that current op shows the expected stages and comment.
 *
 * In 5.1, new behavior was introduced regarding reading from an unsharded collection on the primary
 * shard. This behavior affects which operations are logged.
 *  @tags: [ requires_fcv_51 ]
 ','line_number':1,'multiline':True]
['text':' Shard shardedColl on {x:1}, split it at {x:0}, and move chunk {x:1} to shard1.','line_number':22,'multiline':False]
['text':' Insert one document on each shard.','line_number':25,'multiline':False]
['text':' Run the 'command' in a parallel shell.','line_number':59,'multiline':False]
['text':' Wait for the parallel shell to hit the failpoint and verify that the 'comment' field is','line_number':64,'multiline':False]
['text':' present in $currentOp.','line_number':65,'multiline':False]
['text':' Verify that MongoS has an operation running for the base aggregation.','line_number':72,'multiline':False]
['text':' Unset the failpoint to unblock the command and join with the parallel shell.','line_number':96,'multiline':False]
['text':' Test that the current op shows all the sub-pipelines when a sharded collection unions with','line_number':101,'multiline':False]
['text':' another sharded collection. Also validate that the 'comment' is attached to all the related','line_number':102,'multiline':False]
['text':' operations.','line_number':103,'multiline':False]
['text':' We expect to see the merging half of the pipeline still running because the $unionWith hasn't','line_number':118,'multiline':False]
['text':' finished, even though we should have exhaused the input cursors by the time we're looking at','line_number':119,'multiline':False]
['text':' the union sub-pipeline.','line_number':120,'multiline':False]
['text':' Test that the current op shows all the sub-pipelines when a sharded collection unions with an','line_number':128,'multiline':False]
['text':' unsharded collection which in-turn unions with another sharded collection. Also validate that','line_number':129,'multiline':False]
['text':' the 'comment' is attached to all the related operations.','line_number':130,'multiline':False]
['text':' the $unionWith on the unsharded collection is run on the primary shard and can be','line_number':151,'multiline':False]
['text':' executed as a local read, which will not be logged.','line_number':152,'multiline':False]
['text':' Test that the current op shows all the sub-pipelines when an unsharded collection unions with a','line_number':158,'multiline':False]
['text':' sharded collection which in-turn unions with another sharded collection. Also validate that the','line_number':159,'multiline':False]
['text':' 'comment' is attached to all the related operations.','line_number':160,'multiline':False]
['text':' Note that we don't expect any operation on 'shardedColl1' since the failpoint being used','line_number':180,'multiline':False]
['text':' will only block commands on the "deepest" namespace, which is 'shardedColl2' for this','line_number':181,'multiline':False]
['text':' command. The cursors on 'shardedColl1' will have been exhausted by the time the command','line_number':182,'multiline':False]
['text':' on 'shardedColl2' is started. Note there will still be a $mergeCursors stage around that','line_number':183,'multiline':False]
['text':' exhausted those cursors, but it will not get its own current op entry because it's a','line_number':184,'multiline':False]
['text':' sub-pipeline on the same host and operation as the pipeline for unshardedColl.','line_number':185,'multiline':False]
