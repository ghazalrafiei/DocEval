['text':'*
 * Tests that coordinateCommitTransaction returns the decision once the decision has been written
 * with the client's writeConcern.
 * @tags: [uses_transactions, uses_multi_shard_transaction]
 ','line_number':1,'multiline':True]
['text':' Set priority of secondaries to 0 so that the primary does not change during each','line_number':16,'multiline':False]
['text':' testcase.','line_number':17,'multiline':False]
['text':' Disallow chaining to force both secondaries to sync from the primary. The testcase for','line_number':19,'multiline':False]
['text':' writeConcern "majority" disables replication on one of the secondaries, with chaining','line_number':20,'multiline':False]
['text':' that would effectively disable replication on both secondaries, causing the testcase to','line_number':21,'multiline':False]
['text':' to fail since writeConcern is unsatsifiable.','line_number':22,'multiline':False]
['text':' The default WC is majority and stopServerReplication will prevent satisfying any majority writes.','line_number':40,'multiline':False]
['text':' Make both shards have chunks for the collection so that two-phase commit is required.','line_number':46,'multiline':False]
['text':' Do an insert to force a refresh so the transaction doesn't fail due to StaleConfig.','line_number':50,'multiline':False]
['text':'
 * Runs commitTransaction on the mongos in a parallel shell, and asserts that it works.
 ','line_number':53,'multiline':True]
['text':'
 * Runs a transaction to inserts the given docs.
 ','line_number':67,'multiline':True]
['text':'
 * Returns the 'decision' inside the coordinator doc with the given 'lsid' and 'txnNumber'
 * on this connection. Returns null if the coordinator doc does not exist or does not have
 * the 'decision' field.
 ','line_number':82,'multiline':True]
['text':'
 * Returns true if the given 'decision' represents a commit decision.
 ','line_number':93,'multiline':True]
['text':'
 * Returns the number of coordinator replica set nodes that have written the commit decision
 * to the config.transactions collection.
 ','line_number':100,'multiline':True]
['text':'
 * Asserts that the coordinator doc has been replicated to the given number of nodes.
 ','line_number':120,'multiline':True]
['text':'
 * Asserts that the coordinator doc has been majority replicated.
 ','line_number':127,'multiline':True]
['text':'
 * Returns an array of nodes that we can stop replication on and still allow writes on
 * the replica set to satsify the given write concern.
 ','line_number':134,'multiline':True]
['text':' Start a transaction that inserts documents.','line_number':147,'multiline':False]
['text':' Turn on the failpoint to pause coordinateCommit right before the coordinator persists','line_number':152,'multiline':False]
['text':' the decision so we can disable replication on the nodes that are not needed for satifying','line_number':153,'multiline':False]
['text':' the write concern.','line_number':154,'multiline':False]
['text':' Turn on the failpoint to pause coordinateCommit right before the coordinator deletes','line_number':158,'multiline':False]
['text':' its coordinator doc so we can check the doc has been majority committed before it gets','line_number':159,'multiline':False]
['text':' deleted.','line_number':160,'multiline':False]
['text':' Run commitTransaction with the given writeConcern. Disable replication on necessary nodes','line_number':163,'multiline':False]
['text':' right before it persists the decision.','line_number':164,'multiline':False]
