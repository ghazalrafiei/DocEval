['text':'*
 * Verifies the fsync with lock+unlock command on mongos.
 * @tags: [
 *   requires_fsync,
 *   uses_parallel_shell,
 * ]
 ','line_number':1,'multiline':True]
['text':' Start the transaction and insert a document.','line_number':39,'multiline':False]
['text':' lock then unlock','line_number':58,'multiline':False]
['text':' Make sure writes are blocked. Spawn a write operation in a separate shell and make sure it','line_number':61,'multiline':False]
['text':' is blocked. There is really no way to do that currently, so just check that the write didn't','line_number':62,'multiline':False]
['text':' go through.','line_number':63,'multiline':False]
['text':' Make sure reads can still run even though there is a pending write and also that the write','line_number':72,'multiline':False]
['text':' didn't get through.','line_number':73,'multiline':False]
['text':' ensure writers are allowed after the cluster is unlocked','line_number':79,'multiline':False]
['text':' Ensure that distributed transactions are blocked when the cluster is locked','line_number':84,'multiline':False]
['text':' Verify that txns are unsuccessful when cluster is locked.','line_number':89,'multiline':False]
['text':' Verify that txns are successful after cluster is unlocked.','line_number':96,'multiline':False]
['text':' Ensure that fsync (lock: false) still works by performing a write after invoking the command,','line_number':99,'multiline':False]
['text':' and checking the write is successful, showing the cluster does not need to be unlocked.','line_number':100,'multiline':False]
['text':' unlock before lock should fail','line_number':111,'multiline':False]
['text':' Make sure the lock and unlock commands still work as expected after transitioning to a dedicated','line_number':118,'multiline':False]
['text':' config server.','line_number':119,'multiline':False]
