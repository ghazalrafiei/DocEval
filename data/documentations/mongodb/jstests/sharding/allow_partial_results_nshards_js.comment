['text':'*
 * Confirms that, for a query with 'allowPartialResults' enabled, the 'nShards' log entry reflects
 * the number of shards that were actually available during each find or getMore operation.
 * @tags: [
 *   requires_replication,
 *   requires_sharding,
 * ]
 ','line_number':1,'multiline':True]
['text':' This test looks for exact matches in log output, which does not account for implicit sessions.','line_number':10,'multiline':False]
['text':' Prevent the mongo shell from gossiping its cluster time, since this will increase the amount','line_number':13,'multiline':False]
['text':' of data logged for each op. For some of the testcases below, including the cluster time would','line_number':14,'multiline':False]
['text':' cause them to be truncated at the 512-byte RamLog limit, and some of the fields we need to','line_number':15,'multiline':False]
['text':' check would be lost.','line_number':16,'multiline':False]
['text':' Skip the following checks across the cluster at the end, since the test shuts down a shard.','line_number':19,'multiline':False]
['text':' Set up a 2-shard single-node replicaset cluster.','line_number':24,'multiline':False]
['text':' Obtain a connection to the test database on mongoS, and to the test collection.','line_number':27,'multiline':False]
['text':' Enable sharding on the the test database and ensure that the primary is on shard0.','line_number':31,'multiline':False]
['text':' Shard the collection on _id, split at {_id:0}, and move the upper chunk to the second shard.','line_number':35,'multiline':False]
['text':' Insert 10 documents on each shard, in the range [-10, 10).','line_number':38,'multiline':False]
['text':' Set the slowms threshold to -1 on mongoS, so that all operations will be logged.','line_number':43,'multiline':False]
['text':' Helper to find a logline containing all the specified fields. Throws if no such line exists.','line_number':46,'multiline':False]
['text':' Issue a query with {allowPartialResults:true} on the collection. We sort by {_id:1} so that all','line_number':75,'multiline':False]
['text':' results from shard0 will be returned before any from shard1. We also set a small batchSize so','line_number':76,'multiline':False]
['text':' that not all results are returned at once.','line_number':77,'multiline':False]
['text':' Confirm that the cursor did not report partial results, and that the command logs {nShards:2}.','line_number':88,'multiline':False]
['text':' Issue a getMore with the same batchSize...','line_number':92,'multiline':False]
['text':' ... and confirm that nShards is still 2.','line_number':101,'multiline':False]
['text':' Now stop shard0.','line_number':105,'multiline':False]
['text':' Issue another getMore with a higher batchSize.','line_number':108,'multiline':False]
['text':' We record the number of shards at the outset of the getMore, so this should again result in a','line_number':113,'multiline':False]
['text':' logline with nShards:2. But the larger batchSize burns through all results that mongoS buffered','line_number':114,'multiline':False]
['text':' from shard0 before it went down, and when we attempt to acquire a new batch from the shard we','line_number':115,'multiline':False]
['text':' discover that it is no longer available. We therefore return {partialResultsReturned:true}.','line_number':116,'multiline':False]
['text':' When we issue the next getMore, shard0 has already been marked as unavailable...','line_number':120,'multiline':False]
['text':' ... so nShards is now 1. The 'partialResultsReturned' cursor field remains true.','line_number':124,'multiline':False]
['text':' Finally, issue the original 'find' command again...','line_number':128,'multiline':False]
['text':' ... and confirm that nShards is 1 now that one shard is down.','line_number':132,'multiline':False]
