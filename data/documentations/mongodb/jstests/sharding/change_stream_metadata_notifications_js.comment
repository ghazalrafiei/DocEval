['text':' Tests metadata notifications of change streams on sharded collections.','line_number':1,'multiline':False]
['text':' @tags: [','line_number':2,'multiline':False]
['text':'   requires_majority_read_concern,','line_number':3,'multiline':False]
['text':' ]','line_number':4,'multiline':False]
['text':' Enable sharding on the test DB and ensure its primary is st.shard0.shardName.','line_number':19,'multiline':False]
['text':' Shard the test collection on a field called 'shardKey'.','line_number':23,'multiline':False]
['text':' Split the collection into 2 chunks: [MinKey, 0), [0, MaxKey].','line_number':27,'multiline':False]
['text':' Move the [0, MaxKey] chunk to st.shard1.shardName.','line_number':31,'multiline':False]
['text':' Write a document to each chunk.','line_number':35,'multiline':False]
['text':' We awaited the replication of the first writes, so the change stream shouldn't return them.','line_number':41,'multiline':False]
['text':' Drop the collection and test that we return a "drop" entry, followed by an "invalidate"','line_number':46,'multiline':False]
['text':' entry.','line_number':47,'multiline':False]
['text':' Test that we see the two writes that happened before the collection drop.','line_number':50,'multiline':False]
['text':' Store the collection drop invalidate token for for subsequent tests.','line_number':76,'multiline':False]
['text':' Verify that even after filtering out all events, the cursor still returns the invalidate resume','line_number':82,'multiline':False]
['text':' token of the dropped collection.','line_number':83,'multiline':False]
['text':' With an explicit collation, test that we can resume from before the collection drop.','line_number':92,'multiline':False]
['text':' Test that we can resume the change stream without specifying an explicit collation.','line_number':117,'multiline':False]
['text':' Recreate and shard the collection.','line_number':124,'multiline':False]
['text':' Shard the test collection on shardKey.','line_number':127,'multiline':False]
['text':' Test that resuming the change stream on the recreated collection succeeds, since we will not','line_number':131,'multiline':False]
['text':' attempt to inherit the collection's default collation and can therefore ignore the new UUID.','line_number':132,'multiline':False]
['text':' Recreate the collection as unsharded and open a change stream on it.','line_number':139,'multiline':False]
['text':' Drop the database and verify that the stream returns a collection drop followed by an','line_number':144,'multiline':False]
['text':' invalidate.','line_number':145,'multiline':False]
['text':' Store the token to be used as 'resumeAfter' token by other change streams.','line_number':151,'multiline':False]
['text':' Store the database drop invalidate token for other change streams.','line_number':163,'multiline':False]
['text':' Verify that even after filtering out all events, the cursor still returns the invalidate resume','line_number':166,'multiline':False]
['text':' token of the dropped database.','line_number':167,'multiline':False]
