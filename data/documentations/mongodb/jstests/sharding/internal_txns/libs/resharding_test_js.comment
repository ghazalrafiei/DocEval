['text':'
 * Utilities for performing a set of retryable or non-retryable internal transactions during or
 * before a resharding operation, and verifying that the transaction history is correctly
 * transferred or not transferred to the recipient shard.
 *
 * Example usage:
 *      const transactionTest = new InternalTransactionReshardingTest();
 *      transactionTest.runTest*(...);
 *      transactionTest.stop();
 *
 * Note that this fixture does not support resetting the collection after each runTest() call so it
 * is illegal to do more than one runTest() call.
 ','line_number':1,'multiline':True]
['text':' Helpers for defining transaction test cases.','line_number':93,'multiline':False]
['text':' Define the retryable insert, update and delete statements to be run in the test internal','line_number':108,'multiline':False]
['text':' transaction. Prior to resharding, these write statements will be routed to donor0.','line_number':109,'multiline':False]
['text':' If testing a prepared and/or large transaction, define additional insert statements to','line_number':148,'multiline':False]
['text':' make the transaction a prepared and/or large transaction.','line_number':149,'multiline':False]
['text':' Define the retryable findAndModify statement to be run in the test internal transaction.','line_number':190,'multiline':False]
['text':' Prior to resharding, the write statement will be routed to donor0.','line_number':191,'multiline':False]
['text':' If testing a prepared and/or large transaction, define additional insert statements to','line_number':222,'multiline':False]
['text':' make the transaction a prepared and/or large transaction.','line_number':223,'multiline':False]
['text':' Prior to resharding, the insert statements below will be routed to donor0.','line_number':250,'multiline':False]
['text':' Use stmtId -1 to get test coverage for "applyOps" entries without a stmtId.','line_number':255,'multiline':False]
['text':' Prior to resharding, this insert statement below will be routed to donor1.','line_number':265,'multiline':False]
['text':'
     * Runs the commands defined inside 'testCase' in an internal transaction of the specified
     * type.
     ','line_number':310,'multiline':True]
['text':' isTxnCommitted ','line_number':345,'multiline':True]
['text':'
     * Retries the commands defined inside 'testCase' in an internal transaction of the specified
     * type. If this retry is expected to fail, asserts that the command to start the transaction
     * fails with an IncompleteTransactionHistory error.
     ','line_number':348,'multiline':True]
['text':' Give the session a different txnUUID to simulate a retry from a different mongos.','line_number':367,'multiline':False]
['text':' The transaction has already committed and the statement in this command','line_number':376,'multiline':False]
['text':' is not retryable so do not retry it.','line_number':377,'multiline':False]
['text':' isTxnCommitted ','line_number':397,'multiline':True]
['text':'
     * Retries the commands specified inside 'testCase' as retryable writes. If this retry is
     * expected to fail, asserts that all commands fail with an IncompleteTransactionHistory error.
     ','line_number':401,'multiline':True]
['text':' The statement in this command is not retryable so do not retry it.','line_number':423,'multiline':False]
['text':' isTxnCommitted ','line_number':439,'multiline':True]
['text':'
     * Runs the commands defined in each 'testCase' inside an internal transaction of the specified
     * type while resharding is running in the background.
     * - If the type is non-retryable, verifies that none of the transactions has a
     *   config.transactions entry on the recipient if the recipient is not also a donor.
     * - If the type is retryable, verifies that the retryable write statements in each transaction
     *   are retryable on the recipient after resharding completes regardless of whether the
     *   transaction committed or aborted on the donor(s).
     ','line_number':442,'multiline':True]
['text':' The cloneTimestamp is the boundary for whether a retryable write statement will','line_number':458,'multiline':False]
['text':' be retryable after the resharding operation completes.','line_number':459,'multiline':False]
['text':' Refresh the mongos so that write statements are routed to the recipient on retries.','line_number':487,'multiline':False]
['text':' isRetryAfterAbort ','line_number':495,'multiline':True]
['text':' Also retry the write statements as retryable writes.','line_number':497,'multiline':False]
['text':' signal ','line_number':502,'multiline':True]
['text':'forRestart ','line_number':502,'multiline':True]
['text':' isRetryAfterAbort ','line_number':509,'multiline':True]
['text':' Also retry the write statements as retryable writes.','line_number':510,'multiline':False]
['text':'
     * Runs the commands specified in each 'testCase' inside an internal transaction of the
     * specified and then runs resharding to completion.
     * - If the type is non-retryable, verifies that none of the transactions has a
     *   config.transactions entry on the recipient if the recipient is not also a donor.
     * - If the type is retryable, verifies that none of the retryable write statements in each
     *   transaction is retryable on the recipient unless the transaction aborts without prepare
     *   on the donor.
     ','line_number':516,'multiline':True]
['text':' Refresh the mongos so that write statements are routed to the recipient on retries.','line_number':550,'multiline':False]
['text':' To make retryable writes and transactions that existed prior to resharding not retryable','line_number':552,'multiline':False]
['text':' after resharding, each recipient performs a snapshot read of the the config.transactions','line_number':553,'multiline':False]
['text':' collection and then writes a dead-end noop oplog entry for every retryable write and','line_number':554,'multiline':False]
['text':' transaction that it finds. Therefore, a transaction that does not have a','line_number':555,'multiline':False]
['text':' config.transactions entry (i.e. an aborted unprepared transaction) is expected to be','line_number':556,'multiline':False]
['text':' retryable after resharding.','line_number':557,'multiline':False]
['text':' isRetryAfterAbort ','line_number':566,'multiline':True]
['text':' Also retry the write statements as retryable writes.','line_number':568,'multiline':False]
['text':' signal ','line_number':573,'multiline':True]
['text':'forRestart ','line_number':573,'multiline':True]
['text':' isRetryAfterAbort ','line_number':581,'multiline':True]
['text':' Also retry the write statements as retryable writes.','line_number':582,'multiline':False]
['text':' Helpers for testing retryable internal transactions with resharding. Each helper defines','line_number':591,'multiline':False]
['text':' transaction test cases using the makeTransactionOptions*() helpers above and runs one','line_number':592,'multiline':False]
['text':' of the testTransactions*Resharding() helpers above.','line_number':593,'multiline':False]
