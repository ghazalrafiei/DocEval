['text':'
 * Test that a retryable write or retryable internal transaction that is initiated while the
 * session has an open retryable internal transaction (i.e. one that has not committed or aborted)
 * is blocked until the transaction commits or aborts and does not cause any write statements that
 * have already executed to execute again.
 *
 * @tags: [requires_fcv_60, uses_transactions]
 ','line_number':1,'multiline':True]
['text':'
 * Runs a write statement inside a retryable internal transaction and then runs 'retryFunc' to
 * resend the write statement while the transaction is still open. Verifies that the retry is
 * blocked until the transaction commits or aborts and does not cause the write statement to execute
 * more than once.
 ','line_number':52,'multiline':True]
['text':' Start a retryable internal transaction.','line_number':64,'multiline':False]
['text':' A prepared transaction cannot be interrupted by a retry so retry and wait for it to block','line_number':89,'multiline':False]
['text':' behind the internal transaction above.','line_number':90,'multiline':False]
['text':' The retry should block behind the prepared transaction.','line_number':107,'multiline':False]
['text':' The retry should complete without blocking.','line_number':111,'multiline':False]
['text':' Commit or abort the internal transaction, and verify that the write statement executed','line_number':119,'multiline':False]
['text':' exactly once despite the concurrent retry, whether or not the retry interrupted the original','line_number':120,'multiline':False]
['text':' attempt.','line_number':121,'multiline':False]
['text':' The retry should have interrupted the original attempt.','line_number':127,'multiline':False]
['text':' Ensure mongos has learned of the new primary.','line_number':135,'multiline':False]
