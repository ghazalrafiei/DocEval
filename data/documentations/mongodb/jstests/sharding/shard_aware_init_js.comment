['text':'*
 * Tests for shard aware initialization during process startup (for standalone) and transition
 * to primary (for replica set nodes).
 * Note: test will deliberately cause a mongod instance to terminate abruptly and mongod instance
 * without journaling will complain about unclean shutdown.
 * @tags: [requires_persistence]
 ','line_number':1,'multiline':True]
['text':'*
 * Runs a series of test on the mongod instance mongodConn is pointing to. Notes that the
 * test can restart the mongod instance several times so mongodConn can end up with a broken
 * connection after.
 *
 * awaitVersionUpdate is used with the replset invocation of this test to ensure that our
 * initial write to the admin.system.version collection is fully flushed out of the oplog before
 * restarting.  That allows our standalone corrupting update to see the write (and cause us to
 * fail on startup).
 ','line_number':16,'multiline':True]
['text':'*
     * Restarts the server without --shardsvr and replace the shardIdentity doc with a valid
     * document. Then, restarts the server again with --shardsvr. This also returns a
     * connection to the server after the last restart.
     ','line_number':34,'multiline':True]
['text':' With Recover to a Timestamp, writes to a replica set member may not be written to','line_number':41,'multiline':False]
['text':' disk in the collection, but are instead re-applied from the oplog at startup. When','line_number':42,'multiline':False]
['text':' restarting with `--shardsvr`, the update to the `shardIdentity` document is not','line_number':43,'multiline':False]
['text':' processed. Turning off `--replSet` guarantees the update is written out to the','line_number':44,'multiline':False]
['text':' collection and the test no longer relies on replication recovery from performing','line_number':45,'multiline':False]
['text':' the update with `--shardsvr` on.','line_number':46,'multiline':False]
['text':' Simulate the upsert that is performed by a config server on addShard.','line_number':75,'multiline':False]
['text':' Should not be allowed to remove the shardIdentity document','line_number':94,'multiline':False]
['text':'','line_number':98,'multiline':False]
['text':' Test normal startup','line_number':99,'multiline':False]
['text':'','line_number':100,'multiline':False]
['text':' disable snapshotting to force the stable timestamp forward with or without the','line_number':104,'multiline':False]
['text':' majority commit point.  This simplifies forcing out our corrupted write to','line_number':105,'multiline':False]
['text':' admin.system.version','line_number':106,'multiline':False]
['text':'','line_number':121,'multiline':False]
['text':' Test shardIdentity doc without configsvrConnectionString, resulting into parse error','line_number':122,'multiline':False]
['text':'','line_number':123,'multiline':False]
['text':' Note: modification of the shardIdentity is allowed only when not running with --shardsvr','line_number':125,'multiline':False]
['text':' The manipulation of `--replSet` is explained in `restartAndFixShardIdentityDoc`.','line_number':127,'multiline':False]
['text':' We call MongoRunner.stopMongod() using a former connection to the server that is','line_number':147,'multiline':False]
['text':' configured with the same port in order to be able to assert on the server's exit code.','line_number':148,'multiline':False]
['text':'','line_number':151,'multiline':False]
['text':' Test that it is possible to fix the invalid shardIdentity doc by not passing --shardsvr','line_number':152,'multiline':False]
['text':'','line_number':153,'multiline':False]
