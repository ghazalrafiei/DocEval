['text':' Test that ongoing operations in a transaction are interrupted when the transaction expires.','line_number':1,'multiline':False]
['text':'','line_number':2,'multiline':False]
['text':' @tags: [','line_number':3,'multiline':False]
['text':'   # The test runs commands that are not allowed with security token: endSession, setParameter.','line_number':4,'multiline':False]
['text':'   not_allowed_with_signed_security_token,','line_number':5,'multiline':False]
['text':'   uses_transactions','line_number':6,'multiline':False]
['text':' ]','line_number':7,'multiline':False]
['text':' Need the original 'transactionLifetimeLimitSeconds' value so that we can reset it back at the','line_number':27,'multiline':False]
['text':' end of the test.','line_number':28,'multiline':False]
['text':' Decrease transactionLifetimeLimitSeconds so it expires faster','line_number':33,'multiline':False]
['text':' Clear ramlog so checkLog can't find log messages from the previous times this test was run.','line_number':54,'multiline':False]
['text':' Deserialize the session ID from its string representation.','line_number':59,'multiline':False]
['text':' Must ensure that the transactionLifetimeLimitSeconds is reset so that it does not impact','line_number':91,'multiline':False]
['text':' other tests in the suite.','line_number':92,'multiline':False]
