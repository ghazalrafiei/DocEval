['text':'*
 * Verifies that $or queries on clustered collections produce plans with IXSCAN and
 * CLUSTERED_IXSCAN stages when possible.
 * @tags: [
 *   requires_fcv_71,
 *  # Explain for the aggregate command cannot run within a multi-document transaction.
 *  does_not_support_transactions,
 *  # Refusing to run a test that issues an aggregation command with explain because it may return
 *  # incomplete results if interrupted by a stepdown.
 *  does_not_support_stepdowns
 * ]
 ','line_number':1,'multiline':True]
['text':' Create a clustered collection and create indexes.','line_number':26,'multiline':False]
['text':' Insert documents, and store them to be used later in the test.','line_number':33,'multiline':False]
['text':' Test different find queries. With and without a sort, and with and without a projection.','line_number':48,'multiline':False]
['text':'  Create the document set that we expect.','line_number':51,'multiline':False]
['text':' Confirm we only skipped 1 document.','line_number':53,'multiline':False]
['text':' Remove the document that was skipped.','line_number':55,'multiline':False]
['text':' $or query which uses a clustered collection scan plan for one branch and secondary index plan for','line_number':75,'multiline':False]
['text':' the other, and returns no matching documents.','line_number':76,'multiline':False]
['text':'$or query which uses a clustered collection scan plan and secondary index plan, and each predicate','line_number':79,'multiline':False]
['text':' matches some of the documents.','line_number':80,'multiline':False]
['text':' $or query which uses a clustered collection scan plan and secondary index plan, and some','line_number':84,'multiline':False]
['text':' documents match both predicates.','line_number':85,'multiline':False]
['text':'  $or query that uses two clustered collection scan plans.','line_number':89,'multiline':False]
['text':' $or query that uses two secondary index scan plans.','line_number':93,'multiline':False]
['text':' TODO SERVER-77601 add coll.find(query).sort({_id: 1}) to 'queries'.','line_number':98,'multiline':False]
['text':' If there is a 'SHARD_MERGE' stage or 'shards', then we should expect more than our','line_number':143,'multiline':False]
['text':' 'expectedStageCount', since each stage will appear for each shard.','line_number':144,'multiline':False]
['text':' There won't be a 'FETCH' stage if we have a 'COUNT' or 'GROUP' stage with just index scan','line_number':148,'multiline':False]
['text':' plans.','line_number':149,'multiline':False]
['text':' Classic engine doesn't have a GROUP stage like SBE for $group.','line_number':157,'multiline':False]
['text':' Validate all the stages appear the correct number of times in the winning plan.','line_number':162,'multiline':False]
['text':' If we have GROUP stage we are in an aggregation pipeline.','line_number':183,'multiline':False]
['text':' Validates that we use an OR stage with the correct plans for each child branch.','line_number':201,'multiline':False]
['text':' $or with a CLUSTERED_IXSCAN stage and a IXSCAN stage.','line_number':212,'multiline':False]
['text':' $or with two IXSCAN stages.','line_number':225,'multiline':False]
['text':' This is an optimization for IXSCAN for count queries that does not exist for plans with','line_number':230,'multiline':False]
['text':' clustered indexes.','line_number':231,'multiline':False]
['text':' $or with 2 CLUSTERED_IXSCAN stages.','line_number':235,'multiline':False]
['text':' $or with many children branches that are either IXSCAN or CLUSTERED_IXSCAN stages. Note that we','line_number':248,'multiline':False]
['text':'  expect our IXSCAN nodes to be optimized down to one stage.','line_number':249,'multiline':False]
['text':' $or with many children branches that are either IXSCAN or CLUSTERED_IXSCAN stages.','line_number':256,'multiline':False]
['text':' $or query where the branch of the clustered collection scan is not a leaf node.','line_number':263,'multiline':False]
['text':' $or inside an $and should not change, and still use a FETCH with an IXSCAN.','line_number':270,'multiline':False]
['text':' $or that can't use the clustered collection nor another index should still fallback to COLLSCAN.','line_number':277,'multiline':False]
['text':'$or inside an $elemMatch that is not indexed should not change, and still use a COLLSCAN.','line_number':290,'multiline':False]
['text':' $or inside an $elemMatch that is indexed should use only IXSCAN.','line_number':297,'multiline':False]
['text':' TODO SERVER-77601 remove this function, once supported in SBE.','line_number':306,'multiline':False]
['text':' We prevented allowing MERGE_SORT plans with clustered collection scans, so the plan should','line_number':307,'multiline':False]
['text':' fallback to using a collection scan.','line_number':308,'multiline':False]
['text':'','line_number':336,'multiline':False]
['text':' These tests validate that $or queries with a text index work.','line_number':337,'multiline':False]
['text':'','line_number':338,'multiline':False]
['text':' Basic case $or with text and a clustered collection scan.','line_number':340,'multiline':False]
['text':' $or with a text index work with a clustered collection scan plan and a secondary index scan plan.','line_number':347,'multiline':False]
['text':' We expected 2 IXSCAN nodes because the TEXT_MATCH stage has a IXSCAN node child, and there is an','line_number':348,'multiline':False]
['text':' index scan plan for the {a: 9} predicate.','line_number':349,'multiline':False]
['text':' $or inside an and with a text index works.','line_number':356,'multiline':False]
['text':' $or inside an or with a text index works.','line_number':363,'multiline':False]
['text':' $or with a text index and an unindexed field should still fail.','line_number':370,'multiline':False]
