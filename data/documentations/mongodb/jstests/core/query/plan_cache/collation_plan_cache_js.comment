['text':' Integration testing for the plan cache and index filter commands with collation.','line_number':1,'multiline':False]
['text':'','line_number':2,'multiline':False]
['text':' @tags: [','line_number':3,'multiline':False]
['text':'   # The test runs commands that are not allowed with security token: planCacheClear,','line_number':4,'multiline':False]
['text':'   # planCacheClearFilters, planCacheListFilters, planCacheSetFilter.','line_number':5,'multiline':False]
['text':'   not_allowed_with_signed_security_token,','line_number':6,'multiline':False]
['text':'   assumes_read_concern_unchanged,','line_number':7,'multiline':False]
['text':'   # This test attempts to perform queries and introspect the server's plan cache entries. The','line_number':8,'multiline':False]
['text':'   # former operation may be routed to a secondary in the replica set, whereas the latter must be','line_number':9,'multiline':False]
['text':'   # routed to the primary.','line_number':10,'multiline':False]
['text':'   assumes_read_preference_unchanged,','line_number':11,'multiline':False]
['text':'   # Make sure to obtain stable counts. Background tasks may create plan cache entries.','line_number':12,'multiline':False]
['text':'   assumes_standalone_mongod,','line_number':13,'multiline':False]
['text':'   assumes_unsharded_collection,','line_number':14,'multiline':False]
['text':'   does_not_support_stepdowns,','line_number':15,'multiline':False]
['text':'   # Plan cache state is node-local and will not get migrated alongside tenant data.','line_number':16,'multiline':False]
['text':'   tenant_migration_incompatible,','line_number':17,'multiline':False]
['text':'   # This test checks a new field "solutionHash" in $planCacheStats, not available in previous','line_number':18,'multiline':False]
['text':'   # versions.','line_number':19,'multiline':False]
['text':'   requires_fcv_72,','line_number':20,'multiline':False]
['text':'   multiversion_incompatible,','line_number':21,'multiline':False]
['text':' ]','line_number':22,'multiline':False]
['text':'
 * A helper to get all the cache entries that match a specified 'keyHash' representing the
 * planCacheKey of a cached plan.
 ','line_number':33,'multiline':True]
['text':' We need two indexes that each query can use so that a plan cache entry is created.','line_number':43,'multiline':False]
['text':' We need an index with a different collation, so that string comparisons affect the query','line_number':47,'multiline':False]
['text':' shape.','line_number':48,'multiline':False]
['text':' Run a query so that an entry is inserted into the cache.','line_number':52,'multiline':False]
['text':' The query shape should have been added.','line_number':57,'multiline':False]
['text':' Run a query so that an entry is inserted into the cache.','line_number':83,'multiline':False]
['text':' The query should have cached plans.','line_number':88,'multiline':False]
['text':' A query with a different collation should have no cached plans.','line_number':94,'multiline':False]
['text':' Cache the query, then assert that different collations lead to different hashes.','line_number':98,'multiline':False]
['text':' A query with different string locations should have no cached plans.','line_number':105,'multiline':False]
['text':' clearPlansByQuery().','line_number':112,'multiline':False]
['text':' Passing a query with an empty collation object should throw.','line_number':114,'multiline':False]
['text':' Passing a query with an invalid collation object should throw.','line_number':120,'multiline':False]
['text':' Run a query so that an entry is inserted into the cache.','line_number':126,'multiline':False]
['text':' Dropping a query shape with a different collation should have no effect.','line_number':132,'multiline':False]
['text':' Dropping a query shape with different string locations should clear the cache.','line_number':137,'multiline':False]
['text':' Run a query so that an entry is inserted into the cache.','line_number':142,'multiline':False]
['text':' Dropping query shape using the same filter.','line_number':148,'multiline':False]
['text':' 'collation' parameter is not allowed with 'query' parameter for 'planCacheClear'.','line_number':153,'multiline':False]
['text':' Index filter commands.','line_number':157,'multiline':False]
['text':' planCacheSetFilter should fail if 'collation' is an empty object.','line_number':159,'multiline':False]
['text':' planCacheSetFilter should fail if 'collation' is an invalid object.','line_number':165,'multiline':False]
['text':' Set a plan cache filter.','line_number':171,'multiline':False]
['text':' Check the plan cache filter was added.','line_number':178,'multiline':False]
['text':' planCacheClearFilters should fail if 'collation' is an empty object.','line_number':203,'multiline':False]
['text':' planCacheSetFilter should fail if 'collation' is an invalid object.','line_number':208,'multiline':False]
['text':' Clearing a plan cache filter with no collation should have no effect.','line_number':213,'multiline':False]
['text':' Clearing a plan cache filter with a different collation should have no effect.','line_number':219,'multiline':False]
['text':' Clearing a plan cache filter with different string locations should have no effect.','line_number':226,'multiline':False]
['text':' Clear plan cache filter.','line_number':233,'multiline':False]
