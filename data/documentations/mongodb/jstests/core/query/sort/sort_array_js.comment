['text':' @tags: [','line_number':1,'multiline':False]
['text':'   does_not_support_stepdowns,','line_number':2,'multiline':False]
['text':'   requires_non_retryable_writes,','line_number':3,'multiline':False]
['text':' ]','line_number':4,'multiline':False]
['text':'*
 * Tests for sorting documents by fields that contain arrays.
 ','line_number':6,'multiline':True]
['text':'*
 * Runs a $match-$sort-$project query as both a find and then an aggregate. Asserts that the
 * result set, after being converted to an array, is equal to 'expected'. Also asserts that the
 * find plan either uses the SORT stage and the agg plan uses the "$sort" agg stage or does not use
 * either dependent on the value of expectBlockingSort.
 ','line_number':13,'multiline':True]
['text':' If there was a hint specified, make sure we get the same results with the hint.','line_number':23,'multiline':False]
['text':' Sanity check that a sort on "_id" is usually pushed down into the query layer, but that','line_number':50,'multiline':False]
['text':' $_internalInhibitOptimization prevents this from happening. This makes sure that this test is','line_number':51,'multiline':False]
['text':' actually exercising the agg blocking sort implementation.','line_number':52,'multiline':False]
['text':' Ascending sort, without an index.','line_number':58,'multiline':False]
['text':' Descending sort, without an index.','line_number':71,'multiline':False]
['text':' Descending sort, in the presence of an index.','line_number':85,'multiline':False]
['text':' Descending sort, in the presence of an index with [minKey, maxKey] bounds has a non-blocking','line_number':94,'multiline':False]
['text':' sort.','line_number':95,'multiline':False]
['text':' Ascending sort, in the presence of an index with [minKey, maxKey] bounds has a non-blocking sort.','line_number':104,'multiline':False]
['text':' Compound mixed ascending/descending sorts, without an index. Sort key for doc with _id: 0 is','line_number':117,'multiline':False]
['text':' {'': 0, '': 9}. Sort key for doc with _id: 1 is {'': 0, '': 8}.','line_number':118,'multiline':False]
['text':' Sort key for doc with _id: 0 is {'': 4, '': 7}. Sort key for doc with _id: 1 is {'': 1, '':','line_number':127,'multiline':False]
['text':' 7}.','line_number':128,'multiline':False]
['text':' Compound mixed ascending/descending sorts, with an index. Ascending and Descending sorts in the','line_number':139,'multiline':False]
['text':' presence of an index with all fields having [minKey, maxKey] bounds has a non-blocking sort.','line_number':140,'multiline':False]
['text':' Since there are bounds on "x.y", and since "x.y" shares a prefix with "x.z", this index cannot','line_number':155,'multiline':False]
['text':' provide the sort.','line_number':156,'multiline':False]
['text':' Since there are bounds on "x.y" this index cannot provide the sort.','line_number':165,'multiline':False]
['text':' Since there are bounds on "x.y" and "x.z", this index cannot provide the sort.','line_number':174,'multiline':False]
['text':' Since there are bounds on 'x.y', and since 'x.y' shares a prefix with 'x', the index cannot','line_number':185,'multiline':False]
['text':' provide a sort on the multikey field 'x'.','line_number':186,'multiline':False]
['text':' Since multikey index,'d', has no shared prefixes with 'e', the index can provide a sort on the','line_number':195,'multiline':False]
['text':' multikey field 'e'.','line_number':196,'multiline':False]
['text':' Test that a multikey index can provide a sort over a non-multikey field.','line_number':204,'multiline':False]
['text':' Test that we can correctly sort by an array field in agg when there are additional fields not','line_number':218,'multiline':False]
['text':' involved in the sort pattern.','line_number':219,'multiline':False]
['text':' Test a sort over the trailing field of a compound index, where the two fields of the index','line_number':234,'multiline':False]
['text':' share a path prefix. This is designed as a regression test for SERVER-31858.','line_number':235,'multiline':False]
['text':' Test that an indexed and unindexed sort return the same thing for a path "a.x" which','line_number':249,'multiline':False]
['text':' traverses through an array.','line_number':250,'multiline':False]
['text':' Now repeat the test with multiple entries along the path "a.x".','line_number':279,'multiline':False]
['text':' Sort with an index on "a.x".','line_number':292,'multiline':False]
