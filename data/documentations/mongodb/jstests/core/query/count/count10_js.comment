['text':' Test that interrupting a count returns an error code.','line_number':1,'multiline':False]
['text':'','line_number':2,'multiline':False]
['text':' @tags: [','line_number':3,'multiline':False]
['text':'   # This test attempts to perform a count command and find it using the currentOp command. The','line_number':4,'multiline':False]
['text':'   # former operation may be routed to a secondary in the replica set, whereas the latter must be','line_number':5,'multiline':False]
['text':'   # routed to the primary.','line_number':6,'multiline':False]
['text':'   assumes_read_preference_unchanged,','line_number':7,'multiline':False]
['text':'   # The aggregation stage $currentOp cannot run with a readConcern other than 'local'','line_number':8,'multiline':False]
['text':'   assumes_read_concern_unchanged,','line_number':9,'multiline':False]
['text':'   does_not_support_stepdowns,','line_number':10,'multiline':False]
['text':'   does_not_support_repeated_reads,','line_number':11,'multiline':False]
['text':'   # Uses $where operator','line_number':12,'multiline':False]
['text':'   requires_scripting,','line_number':13,'multiline':False]
['text':'   uses_multiple_connections,','line_number':14,'multiline':False]
['text':'   uses_parallel_shell,','line_number':15,'multiline':False]
['text':' ]','line_number':16,'multiline':False]
['text':' Start a parallel shell which repeatedly checks for a count','line_number':27,'multiline':False]
['text':' query using db.currentOp(). As soon as the op is found,','line_number':28,'multiline':False]
['text':' kill it via db.killOp().','line_number':29,'multiline':False]
['text':' Check that we found the count op. If not, return false so','line_number':44,'multiline':False]
['text':' that assert.soon will retry.','line_number':45,'multiline':False]
['text':' Found the count op. Try to kill it.','line_number':54,'multiline':False]
