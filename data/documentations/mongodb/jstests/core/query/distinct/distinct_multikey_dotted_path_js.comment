['text':'*
 * Test distinct() on multikey indexes using a dotted path.
 *
 * Assumes the collection is not sharded, because sharding the collection could result in different
 * plans being chosen on different shards (for example, if an index is multikey on one shard but
 * not another).
 * Doesn't support stepdowns because it runs explain() on an aggregation (which can apparently
 * return incomplete results).
 * @tags: [
 *   assumes_unsharded_collection,
 *   does_not_support_stepdowns,
 * ]
 ','line_number':1,'multiline':True]
['text':' Run an agg pipeline with a $group, and convert the results so they're equivalent','line_number':34,'multiline':False]
['text':' to what a distinct() would return.','line_number':35,'multiline':False]
['text':' Note that $group will treat an array as its own key rather than unwinding it. This means','line_number':36,'multiline':False]
['text':' that a $group on a field that's multikey will have different behavior than a distinct(), so','line_number':37,'multiline':False]
['text':' we only use this function for non-multikey fields.','line_number':38,'multiline':False]
['text':' Be sure a distinct scan is used when the index is not multi key.','line_number':44,'multiline':False]
['text':' TODO SERVER-14832: Returning 'null' here is inconsistent with the behavior when no index','line_number':47,'multiline':False]
['text':' is present.','line_number':48,'multiline':False]
['text':' Do an equivalent query using $group.','line_number':54,'multiline':False]
['text':' Distinct with a predicate.','line_number':62,'multiline':False]
['text':' Make the index multi key.','line_number':78,'multiline':False]
['text':' Empty array is indexed as 'undefined'.','line_number':81,'multiline':False]
['text':' We should still use the index as long as the path we distinct() on is never an array','line_number':84,'multiline':False]
['text':' index.','line_number':85,'multiline':False]
['text':' TODO SERVER-14832: Returning 'null' and 'undefined' here is inconsistent with the','line_number':88,'multiline':False]
['text':' behavior when no index is present.','line_number':89,'multiline':False]
['text':' Not running same query with $group now that the field is multikey. See comment above.','line_number':95,'multiline':False]
['text':' We cannot use the DISTINCT_SCAN optimization when there is a multikey path in the key and','line_number':98,'multiline':False]
['text':' there is a predicate. The reason is that we may have a predicate like {a: 4}, and two','line_number':99,'multiline':False]
['text':' documents: {a: [4, 5]}, {a: [4, 6]}. With a DISTINCT_SCAN, we would "skip over" one of the','line_number':100,'multiline':False]
['text':' documents, and leave out either '5' or '6', rather than providing the correct result of','line_number':101,'multiline':False]
['text':' [4, 5, 6]. The test below is for a similar case.','line_number':102,'multiline':False]
['text':' Not running same query with $group now that the field is multikey. See comment above.','line_number':113,'multiline':False]
['text':' Perform a distinct on a path where the last component is multikey.','line_number':116,'multiline':False]
['text':' From the document with no 'b' field. TODO SERVER-14832: this is','line_number':122,'multiline':False]
['text':' inconsistent with behavior when no index is present.','line_number':123,'multiline':False]
['text':' Not running same query with $group now that the field is multikey. See comment above.','line_number':138,'multiline':False]
['text':' Not running same query with $group now that the field is multikey. See comment above.','line_number':158,'multiline':False]
['text':' If the path we distinct() on includes an array index, a COLLSCAN should be used,','line_number':161,'multiline':False]
['text':' even if an index is available on the prefix to the array component ("a.b" in this case).','line_number':162,'multiline':False]
['text':' Will not attempt the equivalent query with aggregation, since $group by "a.b.0" will','line_number':170,'multiline':False]
['text':' only treat '0' as a field name (not array index).','line_number':171,'multiline':False]
['text':' Creating an index on "a.b.0" and doing a distinct on it should be able to use DISTINCT_SCAN.','line_number':174,'multiline':False]
['text':' Will not attempt the equivalent query with aggregation, since $group by "a.b.0" will','line_number':184,'multiline':False]
['text':' only treat '0' as a field name (not array index).','line_number':185,'multiline':False]
['text':' Inserting an array on "a", creating an index on "a.b.0", and doing a distinct on it should use an','line_number':188,'multiline':False]
['text':' IXSCAN, as "a" is now multikey. See explanation above about why a DISTINCT_SCAN cannot be used','line_number':189,'multiline':False]
['text':' when the path given is multikey.','line_number':190,'multiline':False]
['text':' Make "a" multikey in order to ensure that a DISTINCT_SCAN plan on "a.b.0" is not legal.','line_number':196,'multiline':False]
['text':' Will not attempt the equivalent query with aggregation, since $group by "a.b.0" will','line_number':204,'multiline':False]
['text':' only treat '0' as a field name (not array index).','line_number':205,'multiline':False]
