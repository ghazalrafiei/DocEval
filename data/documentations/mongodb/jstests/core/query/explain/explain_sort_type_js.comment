['text':'*
 * Test that explain reports the sort algorithm used for a blocking sort -- either "simple" or
 * "default".
 *
 * @tags: [
 *   # Shard filtering may be required if the collection is sharded, which could affect the query
 *   # planner's selection of the "simple" versus "default" sort algorithm.
 *   assumes_unsharded_collection,
 *   # This test uses a non-retryable multi-update command.
 *   requires_non_retryable_writes,
 * ]
 ','line_number':1,'multiline':True]
['text':' Without any indexes, the plan is to scan the collection and run a blocking SORT. This can use the','line_number':27,'multiline':False]
['text':' simple sort algorithm.','line_number':28,'multiline':False]
['text':' If sort key metadata is requested, then we still allow the "simple" algorithm.','line_number':45,'multiline':False]
['text':' When the blokcing sort is covered, operating on index key data, we use the "default" algorithm.','line_number':62,'multiline':False]
['text':' Verify that the plan involves an IXSCAN but no fetch.','line_number':67,'multiline':False]
['text':' If metadata other than "sortKey" is needed, then we fall back to the "default" algorithm. Here we','line_number':75,'multiline':False]
['text':' show that when "textScore" metadata is attached to the documents in the result set, the sort uses','line_number':76,'multiline':False]
['text':' the "default" algorithm.','line_number':77,'multiline':False]
