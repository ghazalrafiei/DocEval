['text':' Test sorting with text score metadata.','line_number':1,'multiline':False]
['text':' $meta sort specification should be rejected if it has additional keys.','line_number':12,'multiline':False]
['text':' $meta sort specification should be rejected if the type of meta sort is not known.','line_number':19,'multiline':False]
['text':' Sort spefication should be rejected if a $-keyword other than $meta is used.','line_number':26,'multiline':False]
['text':' Sort spefication should be rejected if it is a string, not an object with $meta.','line_number':33,'multiline':False]
['text':' Sort by the text score.','line_number':40,'multiline':False]
['text':' Sort by {_id descending, score} and verify the order is right.','line_number':49,'multiline':False]
['text':' Can $meta sort by text score without a meta projection using either find or agg.','line_number':58,'multiline':False]
['text':' $meta-sort by text score fails if there is no $text predicate, for both find and agg.','line_number':71,'multiline':False]
['text':' Test a sort pattern like {<field>: {$meta: "textScore"}} is legal even if <field> is explicitly','line_number':77,'multiline':False]
['text':' included by the projection. Test that this is true for both the find and aggregate commands.','line_number':78,'multiline':False]
['text':' Test that both find and agg can $meta-project the textScore with a non-$meta sort on the same','line_number':92,'multiline':False]
['text':' field. The semantics of find are that the sort logically occurs before the projection, so we','line_number':93,'multiline':False]
['text':' expect the data to be sorted according the values that were present prior to the $meta','line_number':94,'multiline':False]
['text':' projection.','line_number':95,'multiline':False]
['text':' Test that an aggregate command with a $project-then-$sort pipeline can sort on the','line_number':110,'multiline':False]
['text':' $meta-projected data without repeating the $meta operator in the $sort.','line_number':111,'multiline':False]
