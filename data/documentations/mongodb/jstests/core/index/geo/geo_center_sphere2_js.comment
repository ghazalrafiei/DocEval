['text':' @tags: [','line_number':1,'multiline':False]
['text':'   requires_getmore,','line_number':2,'multiline':False]
['text':' ]','line_number':3,'multiline':False]
['text':'','line_number':5,'multiline':False]
['text':' Tests the error handling of spherical queries','line_number':6,'multiline':False]
['text':' along with multi-location documents.','line_number':7,'multiline':False]
['text':' This is necessary since the error handling must manage','line_number':8,'multiline':False]
['text':' multiple documents, and so requires simultaneous testing.','line_number':9,'multiline':False]
['text':'','line_number':10,'multiline':False]
['text':' km','line_number':32,'multiline':False]
['text':' radians; earth radius from geoconstants.h','line_number':33,'multiline':False]
['text':' TODO: Wrapping uses the error value to figure out what would overlap...','line_number':35,'multiline':False]
['text':' Get a start point that doesn't require wrapping','line_number':45,'multiline':False]
['text':' TODO: Are we a bit too aggressive with wrapping issues?','line_number':46,'multiline':False]
['text':' $centerSphere','line_number':104,'multiline':False]
['text':' $nearSphere','line_number':107,'multiline':False]
['text':' print( "Dist from : " + results[i].loc[j] + " to " + startPoint + " is "','line_number':123,'multiline':False]
['text':' + minNewDistance + " vs " + radius )','line_number':124,'multiline':False]
['text':' Test $geoNear.','line_number':131,'multiline':False]
