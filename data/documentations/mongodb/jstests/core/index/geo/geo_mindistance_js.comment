['text':' Test $minDistance option for $near and $nearSphere queries, and the $geoNear aggregation stage.','line_number':1,'multiline':False]
['text':' @tags: [','line_number':2,'multiline':False]
['text':'   requires_fastcount,','line_number':3,'multiline':False]
['text':'   requires_getmore,','line_number':4,'multiline':False]
['text':' ]','line_number':5,'multiline':False]
['text':'*
 * Asserts that two numeric values are equal within some absolute error.
 ','line_number':14,'multiline':True]
['text':'*
 * Count documents within some radius of (0, 0), in kilometers. With this function we can use
 * the existing $maxDistance option to test the newer $minDistance option's behavior.
 ','line_number':21,'multiline':True]
['text':' $geoNear's distances are in meters for geoJSON points.','line_number':26,'multiline':False]
['text':'','line_number':42,'multiline':False]
['text':' Setup.','line_number':43,'multiline':False]
['text':'','line_number':44,'multiline':False]
['text':'*
 * Make 121 points from long, lat = (0, 0) (in Gulf of Guinea) to (10, 10) (inland Nigeria).
 ','line_number':46,'multiline':True]
['text':'','line_number':59,'multiline':False]
['text':' Test $near with GeoJSON point (required for $near with 2dsphere index). min/maxDistance are','line_number':60,'multiline':False]
['text':' in meters.','line_number':61,'multiline':False]
['text':'','line_number':62,'multiline':False]
['text':'','line_number':83,'multiline':False]
['text':' $nearSphere with 2dsphere index can take a legacy or GeoJSON point. First test $nearSphere','line_number':84,'multiline':False]
['text':' with legacy point. min/maxDistance are in radians.','line_number':85,'multiline':False]
['text':'','line_number':86,'multiline':False]
['text':'','line_number':110,'multiline':False]
['text':' Test $nearSphere with GeoJSON point. min/maxDistance are in meters.','line_number':111,'multiline':False]
['text':'','line_number':112,'multiline':False]
['text':'','line_number':132,'multiline':False]
['text':' Test $geoNear aggregation stage with GeoJSON point. Distances are in meters.','line_number':133,'multiline':False]
['text':'','line_number':134,'multiline':False]
['text':'','line_number':164,'multiline':False]
['text':' Test $geoNear aggregation stage with legacy point. Distances are in radians.','line_number':165,'multiline':False]
['text':'','line_number':166,'multiline':False]
['text':' Test minDistance for 2d index with $near.','line_number':202,'multiline':False]
['text':' Test minDistance for 2d index with $nearSphere. Distances are in radians.','line_number':206,'multiline':False]
['text':' Test minDistance for 2d index with $geoNear stage and spherical=false.','line_number':210,'multiline':False]
['text':' Test minDistance for 2d index with $geoNear stage and spherical=true. Distances are in','line_number':229,'multiline':False]
['text':' radians.','line_number':230,'multiline':False]
