['text':' @tags: [','line_number':1,'multiline':False]
['text':'   # The test runs commands that are not allowed with security token: mapReduce.','line_number':2,'multiline':False]
['text':'   not_allowed_with_signed_security_token,','line_number':3,'multiline':False]
['text':'   # This test attempts to perform write operations and get index usage statistics using the','line_number':4,'multiline':False]
['text':'   # $indexStats stage. The former operation must be routed to the primary in a replica set,','line_number':5,'multiline':False]
['text':'   # whereas the latter may be routed to a secondary.','line_number':6,'multiline':False]
['text':'   assumes_read_preference_unchanged,','line_number':7,'multiline':False]
['text':'   # Cannot implicitly shard accessed collections because of following errmsg: A single','line_number':8,'multiline':False]
['text':'   # update/delete on a sharded collection must contain an exact match on _id or contain the shard','line_number':9,'multiline':False]
['text':'   # key.','line_number':10,'multiline':False]
['text':'   assumes_unsharded_collection,','line_number':11,'multiline':False]
['text':'   does_not_support_stepdowns,','line_number':12,'multiline':False]
['text':'   does_not_support_repeated_reads,','line_number':13,'multiline':False]
['text':'   requires_non_retryable_writes,','line_number':14,'multiline':False]
['text':'   # Tenant migrations passthrough suites automatically retry operations on TenantMigrationAborted','line_number':15,'multiline':False]
['text':'   # errors.','line_number':16,'multiline':False]
['text':'   tenant_migration_incompatible,','line_number':17,'multiline':False]
['text':'   # TODO SERVER-67639: Verify $indexStats works for queries that are eligible for CQF.','line_number':18,'multiline':False]
['text':'   cqf_experimental_incompatible,','line_number':19,'multiline':False]
['text':'   # Uses mapReduce command.','line_number':20,'multiline':False]
['text':'   requires_scripting,','line_number':21,'multiline':False]
['text':'   references_foreign_collection,','line_number':22,'multiline':False]
['text':' ]','line_number':23,'multiline':False]
['text':'','line_number':73,'multiline':False]
['text':' Confirm no index stats object exists prior to index creation.','line_number':74,'multiline':False]
['text':'','line_number':75,'multiline':False]
['text':'','line_number':79,'multiline':False]
['text':' Create indexes.','line_number':80,'multiline':False]
['text':'','line_number':81,'multiline':False]
['text':' Tracks expected index access for "a_1".','line_number':84,'multiline':False]
['text':' Tracks expected index access for "b_1_c_1".','line_number':85,'multiline':False]
['text':'','line_number':87,'multiline':False]
['text':' Confirm a stats object exists post index creation (with 0 count).','line_number':88,'multiline':False]
['text':'','line_number':89,'multiline':False]
['text':'','line_number':93,'multiline':False]
['text':' Confirm index stats tick on find().','line_number':94,'multiline':False]
['text':'','line_number':95,'multiline':False]
['text':'','line_number':101,'multiline':False]
['text':' Confirm index stats tick on findAndModify() update.','line_number':102,'multiline':False]
['text':'','line_number':103,'multiline':False]
['text':'','line_number':110,'multiline':False]
['text':' Confirm index stats tick on findAndModify() delete.','line_number':111,'multiline':False]
['text':'','line_number':112,'multiline':False]
['text':'','line_number':119,'multiline':False]
['text':' Confirm $and operation ticks indexes for winning plan, but not rejected plans.','line_number':120,'multiline':False]
['text':'','line_number':121,'multiline':False]
['text':' We cannot use explain() to determine which indexes would be used for this query, since','line_number':123,'multiline':False]
['text':' 1) explain() will not bump the access counters','line_number':124,'multiline':False]
['text':' 2) explain() always runs the multi planner, and the multi planner may choose a different','line_number':125,'multiline':False]
['text':' index each run. We therefore run the query, and check that only one of the indexes has its','line_number':126,'multiline':False]
['text':' counter bumped (assuming we never choose an index intersection plan).','line_number':127,'multiline':False]
['text':' Plan using index A was chosen. Index B should not have been used (assuming no index','line_number':130,'multiline':False]
['text':' intersection plans are used).','line_number':131,'multiline':False]
['text':' Plan using index B was chosen. Index A should not have been used (assuming no index','line_number':134,'multiline':False]
['text':' intersection plans are used).','line_number':135,'multiline':False]
['text':'','line_number':142,'multiline':False]
['text':' Confirm index stats tick on distinct().','line_number':143,'multiline':False]
['text':'','line_number':144,'multiline':False]
['text':'','line_number':150,'multiline':False]
['text':' Confirm index stats tick on aggregate w/ match.','line_number':151,'multiline':False]
['text':'','line_number':152,'multiline':False]
['text':'','line_number':158,'multiline':False]
['text':' Confirm index stats tick on mapReduce with query.','line_number':159,'multiline':False]
['text':'','line_number':160,'multiline':False]
['text':'','line_number':176,'multiline':False]
['text':' Confirm index stats tick on update().','line_number':177,'multiline':False]
['text':'','line_number':178,'multiline':False]
['text':'','line_number':183,'multiline':False]
['text':' Confirm index stats tick on remove().','line_number':184,'multiline':False]
['text':'','line_number':185,'multiline':False]
['text':'','line_number':190,'multiline':False]
['text':' Confirm multiple index $or operation ticks all involved indexes.','line_number':191,'multiline':False]
['text':'','line_number':192,'multiline':False]
['text':'','line_number':199,'multiline':False]
['text':' Confirm index stats object does not exist post index drop.','line_number':200,'multiline':False]
['text':'','line_number':201,'multiline':False]
['text':'','line_number':206,'multiline':False]
['text':' Confirm index stats object exists with count 0 once index is recreated.','line_number':207,'multiline':False]
['text':'','line_number':208,'multiline':False]
['text':'','line_number':212,'multiline':False]
['text':' Confirm that retrieval fails if $indexStats is not in the first pipeline position.','line_number':213,'multiline':False]
['text':'','line_number':214,'multiline':False]
['text':'','line_number':219,'multiline':False]
['text':' Confirm index use is recorded for $lookup.','line_number':220,'multiline':False]
['text':'','line_number':221,'multiline':False]
['text':'','line_number':252,'multiline':False]
['text':' Confirm index use is recorded for partially pushed down pipelines with a $lookup stage','line_number':253,'multiline':False]
['text':'','line_number':254,'multiline':False]
['text':'','line_number':293,'multiline':False]
['text':' Confirm index use is recorded for $graphLookup.','line_number':294,'multiline':False]
['text':'','line_number':295,'multiline':False]
['text':' Be sure to use a different value here to make sure','line_number':301,'multiline':False]
['text':' $graphLookup doesn't cache the query.','line_number':302,'multiline':False]
['text':'','line_number':326,'multiline':False]
['text':' Confirm that index 'hidden' status can be found in '$indexStats'.','line_number':327,'multiline':False]
['text':'','line_number':328,'multiline':False]
['text':'','line_number':335,'multiline':False]
['text':' Confirm the index usage stats will be reset on hiding and unhiding the index.','line_number':336,'multiline':False]
['text':'','line_number':337,'multiline':False]
['text':' When the index is not hidden, the stats keep counting.','line_number':342,'multiline':False]
['text':' On modifying an index's definition (i.e. hiding or unhiding an index), the usage stats of the','line_number':347,'multiline':False]
['text':' index will be reset to zero.','line_number':348,'multiline':False]
['text':' Confirm that the stats don't tick after the index is hidden.','line_number':352,'multiline':False]
