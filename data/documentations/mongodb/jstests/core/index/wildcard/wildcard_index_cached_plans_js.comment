['text':'*
 * Test that cached plans which use wildcard indexes work.
 *
 * @tags: [
 *   # This test attempts to perform queries and introspect the server's plan cache entries using
 *   # the $planCacheStats aggregation source. Both operations must be routed to the primary, and
 *   # the latter only supports 'local' readConcern.
 *   assumes_read_preference_unchanged,
 *   assumes_read_concern_unchanged,
 *   does_not_support_stepdowns,
 *   # If the balancer is on and chunks are moved, the plan cache can have entries with isActive:
 *   # false when the test assumes they are true because the query has already been run many times.
 *   assumes_balancer_off,
 *   inspects_whether_plan_cache_entry_is_active,
 *   requires_fcv_62,
 *   # Plan cache state is node-local and will not get migrated alongside tenant data.
 *   tenant_migration_incompatible,
 *   # Makes checks based on which engine is used. This can change if an index is implicitly
 *   # created.
 *   assumes_no_implicit_index_creation,
 * ]
 ','line_number':1,'multiline':True]
['text':' In order for the plan cache to be used, there must be more than one plan available. Insert','line_number':61,'multiline':False]
['text':' data into the collection such that the b.$** index will be far more selective than the index','line_number':62,'multiline':False]
['text':' on 'a' for the query {a: 1, b: 1}.','line_number':63,'multiline':False]
['text':' The plan cache should be empty.','line_number':73,'multiline':False]
['text':' Run the query twice, once to create the cache entry, and again to make the cache entry','line_number':76,'multiline':False]
['text':' active.','line_number':77,'multiline':False]
['text':' The plan cache should no longer be empty. Check that the chosen plan uses the b.$** index.','line_number':82,'multiline':False]
['text':' Should be at least two plans: one using the {a: 1} index and the other using the b.$**','line_number':87,'multiline':False]
['text':' index.','line_number':88,'multiline':False]
['text':' The SBE plan string should contain the name of the b.$** index.','line_number':112,'multiline':False]
['text':' Run the query again. This time it should use the cached plan. We should get the same result','line_number':116,'multiline':False]
['text':' as earlier.','line_number':117,'multiline':False]
['text':' Now run a query where b is null. This should have a different shape key from the previous','line_number':120,'multiline':False]
['text':' query since $** indexes are sparse.','line_number':121,'multiline':False]
['text':' There should only have been one solution for the above query, so it would get cached only by','line_number':129,'multiline':False]
['text':' the SBE plan cache.','line_number':130,'multiline':False]
['text':' Check that indexability discriminators work with collations.','line_number':140,'multiline':False]
['text':' Create wildcard index with a collation.','line_number':142,'multiline':False]
['text':' Run a query which uses a different collation from that of the index, but does not use','line_number':147,'multiline':False]
['text':' string bounds.','line_number':148,'multiline':False]
['text':' Run a query which uses a different collation from that of the index and does have string','line_number':156,'multiline':False]
['text':' bounds.','line_number':157,'multiline':False]
['text':' Check that the shapes are different since the query which matches on a string will not','line_number':163,'multiline':False]
['text':' be eligible to use the b.$** index (since the index has a different collation).','line_number':164,'multiline':False]
['text':' Check that indexability discriminators work with partial wildcard indexes.','line_number':169,'multiline':False]
['text':' Run a query for a value included by the partial filter expression.','line_number':175,'multiline':False]
['text':' Run a query which tries to get a value not included by the partial filter expression.','line_number':181,'multiline':False]
['text':' Check that the shapes are different since the query which searches for a value not','line_number':186,'multiline':False]
['text':' included by the partial filter expression won't be eligible to use the $** index.','line_number':187,'multiline':False]
