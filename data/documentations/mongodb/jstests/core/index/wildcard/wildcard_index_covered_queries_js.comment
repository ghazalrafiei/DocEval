['text':'*
 * Test that $** indexes can provide a covered solution, given an appropriate query and projection.
 *
 * Cannot implicitly shard accessed collections, because queries on a sharded collection cannot be
 * covered unless they include the shard key. Does not support stepdowns because the test issues
 * getMores, which the stepdown/kill_primary passthroughs will reject.
 *
 * @tags: [
 *   assumes_unsharded_collection,
 *   does_not_support_stepdowns,
 * ]
 ','line_number':1,'multiline':True]
['text':' Confirms that the $** index can answer the given query and projection, that it produces a','line_number':22,'multiline':False]
['text':' covered solution, and that the results are identical to those obtained by a COLLSCAN. If','line_number':23,'multiline':False]
['text':' 'shouldFailToCover' is true, inverts the assertion and confirms that the given query and','line_number':24,'multiline':False]
['text':' projection do *not* produce a covered plan.','line_number':25,'multiline':False]
['text':' Obtain the explain output for the given query and projection. We run the explain with','line_number':27,'multiline':False]
['text':' 'executionStats' so that we can subsequently validate the number of documents examined.','line_number':28,'multiline':False]
['text':' Verify that the $** index provided the winning solution for this query.','line_number':32,'multiline':False]
['text':' Verify that the solution is covered, and that no documents were examined. If the argument','line_number':37,'multiline':False]
['text':' 'shouldFailToCover' is true, invert the validation to confirm that it is NOT covered.','line_number':38,'multiline':False]
['text':' Verify that the query covered by the $** index produces the same results as a COLLSCAN.','line_number':42,'multiline':False]
['text':' Create a new collection and build a $** index on it.','line_number':47,'multiline':False]
['text':' Verify that the $** index can cover an exact match on an integer value.','line_number':69,'multiline':False]
['text':' Verify that the $** index can cover an exact match on a string value.','line_number':72,'multiline':False]
['text':' Verify that the $** index can cover a range query for integer values.','line_number':75,'multiline':False]
['text':' Verify that the $** index can cover a range query for string values.','line_number':78,'multiline':False]
['text':' Verify that the $** index can cover an $in query for integer values.','line_number':81,'multiline':False]
['text':' Verify that the $** index can cover an $in query for string values.','line_number':84,'multiline':False]
['text':' Verify that the compound wildcard index can cover a query on all fields in the index.','line_number':88,'multiline':False]
['text':' Verify that attempting to project the virtual $_path field from the $** keyPattern will','line_number':92,'multiline':False]
['text':' produce an error, as it is a dollar-prefixed name.','line_number':93,'multiline':False]
['text':' Verify that predicates which produce inexact-fetch bounds are not covered by a $** index.','line_number':99,'multiline':False]
