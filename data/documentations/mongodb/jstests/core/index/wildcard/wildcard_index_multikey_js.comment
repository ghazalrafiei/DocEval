['text':'*
 * Tests that queries using a multikey $** index, return correct results.
 * @tags: [
 *   assumes_balancer_off,
 *   assumes_read_concern_local,
 *   does_not_support_stepdowns,
 * ]
 ','line_number':1,'multiline':True]
['text':' Template document which defines the 'schema' of the documents in the test collection.','line_number':21,'multiline':False]
['text':' Insert a set of documents into the collection, based on the template document and populated','line_number':28,'multiline':False]
['text':' with an increasing sequence of values. This is to ensure that the range of values present for','line_number':29,'multiline':False]
['text':' each field in the dataset is not entirely homogeneous.','line_number':30,'multiline':False]
['text':' Set of operations which will be applied to each field in the index in turn.','line_number':53,'multiline':False]
['text':' Given a keyPattern and (optional) pathProjection, this function builds a $** index on the','line_number':65,'multiline':False]
['text':' collection and then tests each of the match expression in the 'operationList' on each indexed','line_number':66,'multiline':False]
['text':' field in turn. The 'expectedPaths' argument lists the set of paths which we expect to have','line_number':67,'multiline':False]
['text':' been indexed based on the spec; this function will confirm that only the appropriate paths','line_number':68,'multiline':False]
['text':' are present in the $** index.','line_number':69,'multiline':False]
['text':' Verify the expected behaviour for every combination of path and operator.','line_number':78,'multiline':False]
['text':' Runs a single wildcard query test. If 'expectedPath' is non-null, verifies that there is an','line_number':91,'multiline':False]
['text':' indexed solution that uses the $** index with the given path object. If 'expectedPath' is','line_number':92,'multiline':False]
['text':' null, verifies that no indexed solution was found. If 'explainStats' is non-empty, verifies','line_number':93,'multiline':False]
['text':' that the query's explain output reflects the given stats.','line_number':94,'multiline':False]
['text':' Explain the query, and determine whether an indexed solution is available.','line_number':96,'multiline':False]
['text':' Verify that the explain output reflects the given 'explainStats'.','line_number':99,'multiline':False]
['text':' If we expect the current path to have been excluded based on the $** keyPattern','line_number':106,'multiline':False]
['text':' or projection, confirm that no indexed solution was found.','line_number':107,'multiline':False]
['text':' Verify that the winning plan uses the $** index with the expected path.','line_number':112,'multiline':False]
['text':' Verify that the results obtained from the $** index are identical to a COLLSCAN.','line_number':116,'multiline':False]
['text':' Test a $** index that indexes the entire document.','line_number':120,'multiline':False]
['text':' Test a $** index on a single subtree.','line_number':122,'multiline':False]
['text':' Test a $** index which includes a subset of paths.','line_number':127,'multiline':False]
['text':' Test a $** index which excludes a subset of paths.','line_number':132,'multiline':False]
['text':' Test compound wildcard indexes.','line_number':138,'multiline':False]
['text':' Sanity check that a few queries which need to be planned specially in the multikey case','line_number':150,'multiline':False]
['text':' return the correct results.','line_number':151,'multiline':False]
['text':' Fieldname-or-array-index query tests.','line_number':177,'multiline':False]
['text':' Insert some documents that exhibit a mix of numeric fieldnames and array indices.','line_number':189,'multiline':False]
['text':'
     * Multikey Metadata Keys:
     * {'': 1, '': 'a'}
     * {'': 1, '': 'a.0'}
     * {'': 1, '': 'a.b'}
     * {'': 1, '': 'a.b.1.c.2.d'}
     * Keys:
     * {'': 'a.b.c', '': 1}         // _id: 1, a,b multikey
     * {'': 'a.b.c', '': 0}         // _id: 2, a,b multikey
     * {'': 'a.b.c', '': 1}         // _id: 2, a,b multikey
     * {'': 'a.0.b.1.c', '': 1}     // _id: 3, '0, 1' are fieldnames, a.0 multikey
     * {'': 'a.0.d', '': 1}         // _id: 3, '0' is fieldname, a.0 multikey
     * {'': 'a.b.1.c', '': 1}       // _id: 4, '1' is fieldname, a,b multikey
     * {'': 'a.b.1.c.2.d', '': 0}   // _id: 5, a,b,a.b.1.c.2.d multikey, '1' is fieldname
     * {'': 'a.b.1.c.2.d', '': 1}   // _id: 5
     * {'': 'a.b.1.c.2.d', '': 2}   // _id: 5
     * {'': 'a.b.1.c.2.d', '': 3}   // _id: 5
     * {'': 'a.b.1.c.2.d.e', '': 1} // _id: 5
     ','line_number':197,'multiline':True]
['text':' Test that a query with multiple numeric path components returns all relevant documents,','line_number':218,'multiline':False]
['text':' whether the numeric path component refers to a fieldname or array index in each doc:','line_number':219,'multiline':False]
['text':'','line_number':220,'multiline':False]
['text':' _id:1 will be captured by the special fieldname-or-array-index bounds 'a.b.c', but will be','line_number':221,'multiline':False]
['text':' filtered out by the INEXACT_FETCH since it has no array index or fieldname 'b.1'.','line_number':222,'multiline':False]
['text':' _id:2 will match both 'a.0' and 'b.1' by array index.','line_number':223,'multiline':False]
['text':' _id:3 will match both 'a.0' and 'b.1' by fieldname.','line_number':224,'multiline':False]
['text':' _id:4 will match 'a.0' by array index and 'b.1' by fieldname.','line_number':225,'multiline':False]
['text':' _id:5 is not captured by the special fieldname-or-array-index bounds.','line_number':226,'multiline':False]
['text':'','line_number':227,'multiline':False]
['text':' We examine the solution's 'nReturned' versus 'totalDocsExamined' to confirm this.','line_number':228,'multiline':False]
['text':' totalDocsExamined: [_id:1, _id:2, _id:3, _id:4], nReturned: [_id:2, _id:3, _id:4]','line_number':229,'multiline':False]
['text':' Test that we can query a primitive value at a specific array index.','line_number':234,'multiline':False]
['text':' Test that a $** index can't be used for a query through more than 8 nested array indices.','line_number':239,'multiline':False]
['text':' We can query up to a depth of 8 arrays via specific indices, but not through 9 or more.','line_number':242,'multiline':False]
['text':' Test that a query with multiple positional path components following a multikey component','line_number':248,'multiline':False]
['text':' cannot use a wildcard index.','line_number':249,'multiline':False]
['text':' Test that fieldname-or-array-index queries do not inappropriately trim predicates; that is,','line_number':253,'multiline':False]
['text':' all predicates on the field are added to a FETCH filter above the IXSCAN.','line_number':254,'multiline':False]
['text':' Test that the $** index doesn't trim predicates when planning across multiple nested $and/$or','line_number':288,'multiline':False]
['text':' expressions on various fieldname-or-array-index paths.','line_number':289,'multiline':False]
['text':' Verify that the expected number of documents were matched, and the $** index was used.','line_number':297,'multiline':False]
['text':' Matched documents: [_id:2, _id:3, _id:5, _id:6]','line_number':298,'multiline':False]
['text':' Confirm that a collection scan produces the same results.','line_number':304,'multiline':False]
['text':' Verify that when "a" is not multikey, a query with multiple successive positional path','line_number':331,'multiline':False]
['text':' components following "a" can use the wildcard index.','line_number':332,'multiline':False]
['text':' Verify that an existence query with a positional path component can use the wildcard index.','line_number':347,'multiline':False]
['text':' Verify that an existence query with two successive numeric path components, but where one is','line_number':355,'multiline':False]
['text':' not spelled like a BSON array index, can use a wildcard index.','line_number':356,'multiline':False]
['text':' Verify that multiple successive positional path components preclude use of the wildcard index','line_number':364,'multiline':False]
['text':' when "a" is multikey.','line_number':365,'multiline':False]
