['text':'*
 * Test the behavior of $geoNear queries on time-series measurements.
 *
 * $geoNear has a lot of options, which can combine in surprising ways. For example, specifying
 * the query point as GeoJSON implicitly makes it a spherical query, but with different units
 * than if you pass 'spherical: true' explicitly.
 *
 * To ensure we get these cases right, this test runs all of its assertions on a normal collection
 * first, to ensure the test itself is correct. Then it runs the same assertions on a timeseries
 * collection (both with, and without, a 2dsphere index).
 *
 * @tags: [
 *   # Explain of a resolved view must be executed by mongos.
 *   directly_against_shardsvrs_incompatible,
 *   # Refusing to run a test that issues an aggregation command with explain because it may return
 *   # incomplete results if interrupted by a stepdown.
 *   does_not_support_stepdowns,
 *   # Time series geo functionality requires pipeline optimization
 *   requires_pipeline_optimization,
 *   # We need a timeseries collection.
 *   requires_timeseries,
 * ]
 ','line_number':1,'multiline':True]
['text':' Value is taken from geoconstants.h.','line_number':31,'multiline':False]
['text':' When these points are interpreted as spherical coordinates, [long, lat],','line_number':39,'multiline':False]
['text':' the units are interpreted as degrees.','line_number':40,'multiline':False]
['text':' Include a few extra docs with no 'loc' field.','line_number':49,'multiline':False]
['text':' $geoNear queries should exclude these even when there is no minDistance/maxDistance.','line_number':50,'multiline':False]
['text':' Insert in a random order to ensure queries are really sorting.','line_number':54,'multiline':False]
['text':' Make sure results are ordered by flat (planar) distance.','line_number':62,'multiline':False]
['text':' [180, 0] is closer to [0, 0] than [0, 9], in flat geometry.','line_number':63,'multiline':False]
['text':' For the rest of the examples, query from [0, 0] because it makes distances more convenient.','line_number':77,'multiline':False]
['text':' Test entire collection.','line_number':79,'multiline':False]
['text':' Since we don't support '2d' index on time-series metrics, and '2dsphere' indexes can't','line_number':105,'multiline':False]
['text':' answer flat queries, we always expect a collscan for timeseries.','line_number':106,'multiline':False]
['text':' Limit number of results with $limit.','line_number':113,'multiline':False]
['text':' Upper bound distance with maxDistance.','line_number':141,'multiline':False]
['text':' Lower bound distance with minDistance.','line_number':171,'multiline':False]
['text':' Bound distance with both minDistance/maxDistance.','line_number':201,'multiline':False]
['text':' Test interaction of distanceMultiplier with minDistance/maxDistance.','line_number':229,'multiline':False]
['text':' 'query' option is not allowed on time-series collection.','line_number':258,'multiline':False]
['text':' Must not specify 'query' for $geoNear on a time-series collection; use $match instead','line_number':271,'multiline':False]
['text':' 'includeLocs' is not implemented.','line_number':279,'multiline':False]
['text':' $geoNear 'includeLocs' is not supported on time-series metrics','line_number':291,'multiline':False]
['text':' Test entire collection.','line_number':301,'multiline':False]
['text':' Without a maxDistance we have to unpack every bucket and sort the events.','line_number':327,'multiline':False]
['text':' However, we do include a $geoWithin predicate to filter out any non-geo documents.','line_number':328,'multiline':False]
['text':' This means we end up doing an index scan, which might or might not be beneficial','line_number':329,'multiline':False]
['text':' depending on how many buckets it allows us to exclude.','line_number':330,'multiline':False]
['text':' We progressively scan larger and larger portions of the index.','line_number':337,'multiline':False]
['text':' Limit number of results with $limit.','line_number':341,'multiline':False]
['text':' Without a maxDistance we have to unpack every bucket and sort the events.','line_number':363,'multiline':False]
['text':' But, at least with a $limit stage we can do a top-k sort (although this doesn't','line_number':364,'multiline':False]
['text':' seem to show up in explain()).','line_number':365,'multiline':False]
['text':' Upper bound distance with maxDistance.','line_number':375,'multiline':False]
['text':' With maxDistance we can generate a $geoWithin predicate, which can use an index when','line_number':399,'multiline':False]
['text':' available.','line_number':400,'multiline':False]
['text':' Lower bound distance with minDistance.','line_number':410,'multiline':False]
['text':' Bound distance with both minDistance/maxDistance.','line_number':444,'multiline':False]
['text':' Test interaction of distanceMultiplier with minDistance/maxDistance.','line_number':476,'multiline':False]
['text':' 'query' option is not allowed on time-series collections.','line_number':509,'multiline':False]
['text':' Must not specify 'query' for $geoNear on a time-series collection; use $match instead','line_number':521,'multiline':False]
['text':' Instead use $match.','line_number':528,'multiline':False]
['text':' The additional $match predicate should be pushed down and combined with the geo','line_number':546,'multiline':False]
['text':' predicate. That is, the initial $cursor stage should include both.','line_number':547,'multiline':False]
['text':' 'includeLocs' is not implemented.','line_number':558,'multiline':False]
['text':' $geoNear 'includeLocs' is not supported on time-series metrics','line_number':569,'multiline':False]
['text':' There are three different ways to specify a spherical query.','line_number':579,'multiline':False]
['text':' GeoJSON, implicitly uses spherical geometry.','line_number':581,'multiline':False]
['text':' GeoJSON, with explicit spherical: true.','line_number':585,'multiline':False]
['text':' [x, y] point, but with explicit spherical: true.','line_number':591,'multiline':False]
['text':' In this case, the resulting distances are expressed in radians by default, so we scale up','line_number':592,'multiline':False]
['text':' the query results by 'earthRadiusMeters' before comparing with the expectedresult.','line_number':593,'multiline':False]
['text':' We also scale down the maxDistance/minDistance bounds.','line_number':594,'multiline':False]
['text':' Test $geoNear query results in several contexts:','line_number':601,'multiline':False]
['text':' 1. on a normal collection, with a 2dsphere index','line_number':602,'multiline':False]
['text':' 2. on a timeseries collection, with no index','line_number':603,'multiline':False]
['text':' 3. on a timeseries collection, with a 2dsphere index on measurements','line_number':604,'multiline':False]
['text':' 1. Test a normal collection with a 2dsphere index.','line_number':606,'multiline':False]
['text':'    This is our baseline that ensures runExamples() is making correct assertions.','line_number':607,'multiline':False]
['text':' Actually, we also need a '2d' index for the flat examples to succeed.','line_number':613,'multiline':False]
['text':' isTimeseries ','line_number':617,'multiline':True]
['text':' has2dsphereIndex ','line_number':617,'multiline':True]
['text':' 2. Test a timeseries collection, with no index.','line_number':620,'multiline':False]
['text':'    This ensures that the rewrite of $geoNear to $geoWithin + $sort is correct.','line_number':621,'multiline':False]
['text':'    But it's a naive / unrealistic query plan.','line_number':622,'multiline':False]
['text':' isTimeseries ','line_number':629,'multiline':True]
['text':' has2dsphereIndex ','line_number':629,'multiline':True]
['text':' 3. Test a timeseries collection, with a 2dsphere index on measurements.','line_number':632,'multiline':False]
['text':'    This should work if $geoWithin is indexed correctly.','line_number':633,'multiline':False]
['text':' Make sure the 2dsphere index exists. (If the collection is implicitly sharded then we will','line_number':640,'multiline':False]
['text':' also see an implicitly created index.)','line_number':641,'multiline':False]
['text':' isTimeseries ','line_number':649,'multiline':True]
['text':' has2dsphereIndex ','line_number':649,'multiline':True]
