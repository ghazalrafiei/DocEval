['text':'*
 * Tests that the internal parameter "$_resumeAfter" validates the type of the 'recordId' for
 * clustered and non clustered collections.
 * @tags: [
 *   # Queries on mongoS may not request or provide a resume token.
 *   assumes_against_mongod_not_mongos,
 *   cannot_run_during_upgrade_downgrade,
 * ]
 ','line_number':1,'multiline':True]
['text':' Insert some documents.','line_number':25,'multiline':False]
['text':' When given the recordId of the last record in the collection, we should receive a null','line_number':30,'multiline':False]
['text':' resumeToken.','line_number':31,'multiline':False]
['text':' Note that we don't perform an exact equality on 'postBatchResumeToken' because depending on','line_number':43,'multiline':False]
['text':' the configuration, it may contain additional fields (such as '$initialSyncId').','line_number':44,'multiline':False]
['text':' Run the same query under an explain.','line_number':56,'multiline':False]
['text':' Run the same query under an explain.','line_number':74,'multiline':False]
['text':'  Confirm $_resumeAfter will fail for clustered collections if the recordId is Long.','line_number':83,'multiline':False]
['text':' Confirm $_resumeAfter will fail with 'KeyNotFound' if given a non existent recordId.','line_number':91,'multiline':False]
['text':' Confirm $_resumeAfter will fail for normal collections if it is of type BinData.','line_number':98,'multiline':False]
['text':' Confirm $_resumeAfter token will fail with 'KeyNotFound' if given a non existent recordId.','line_number':106,'multiline':False]
['text':' Confirm $_resumeAfter token will fail with 'KeyNotFound' if given a null recordId.','line_number':113,'multiline':False]
['text':' Confirm $_resumeAfter will fail to parse if collection does not exist.','line_number':120,'multiline':False]
['text':' TODO(SERVER-77873): remove "featureFlagReshardingImprovements"','line_number':136,'multiline':False]
