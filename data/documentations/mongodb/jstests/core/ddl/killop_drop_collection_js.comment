['text':'*
 * A killOp command issued against a collection drop should not interfere with the drop and allow it
 * to complete. Interrupting a collection drop could leave the database in an inconsistent state.
 * This test confirms that killOp won't interrupt a collection drop, and that the drop occurs
 * successfully.
 *
 * @tags: [
 *   # The test runs commands that are not allowed with security token: fsyncUnlock.
 *   not_allowed_with_signed_security_token,
 *   assumes_superuser_permissions,
 *   # Uses index building in background
 *   requires_background_index,
 *   uses_parallel_shell
 * ]
 ','line_number':1,'multiline':True]
['text':' Attempt to fsyncLock the database, aborting early if the storage engine doesn't support it.','line_number':26,'multiline':False]
['text':' Kick off a drop on the collection.','line_number':36,'multiline':False]
['text':' The drop will occasionally, and legitimately be interrupted by killOp (and not succeed).','line_number':39,'multiline':False]
['text':' Ensure that the collection has been dropped.','line_number':44,'multiline':False]
['text':' Ensure that the collection hasn't been dropped.','line_number':48,'multiline':False]
['text':' Wait for the drop operation to appear in the db.currentOp() output.','line_number':56,'multiline':False]
['text':' Issue a killOp for the drop command, then unlock the server. We expect that the drop','line_number':73,'multiline':False]
['text':' operation was *not* killed, and that the collection was dropped successfully.','line_number':74,'multiline':False]
