['text':' Cannot implicitly shard accessed collections because of collection existing when none','line_number':1,'multiline':False]
['text':' expected.','line_number':2,'multiline':False]
['text':' @tags: [','line_number':3,'multiline':False]
['text':'   assumes_no_implicit_collection_creation_after_drop,','line_number':4,'multiline':False]
['text':'   requires_fastcount,','line_number':5,'multiline':False]
['text':'   requires_non_retryable_commands,','line_number':6,'multiline':False]
['text':'   requires_non_retryable_writes,','line_number':7,'multiline':False]
['text':'   requires_fastcount,','line_number':8,'multiline':False]
['text':' ]','line_number':9,'multiline':False]
['text':' Test basic inserts and updates with document validation.','line_number':11,'multiline':False]
['text':'*
 * Runs a series of document validation tests using the validator 'validator', which should
 * enforce the existence of a field "a".
 ','line_number':22,'multiline':True]
['text':' Create a collection with document validator 'validator'.','line_number':29,'multiline':False]
['text':' The default validation level/action are OMITTED from "listCollections".','line_number':31,'multiline':False]
['text':' (After a collMod they do appear, see below).','line_number':32,'multiline':False]
['text':' Insert and upsert documents that will pass validation.','line_number':37,'multiline':False]
['text':' Insert and upsert documents that will not pass validation.','line_number':43,'multiline':False]
['text':' Assert that we can remove the document that passed validation.','line_number':52,'multiline':False]
['text':' Check that we can only update documents that pass validation. We insert a valid and an','line_number':55,'multiline':False]
['text':' invalid document, then set the validator.','line_number':56,'multiline':False]
['text':' After collMod, the default validation level/action are INCLUDED in "listCollections".','line_number':61,'multiline':False]
['text':' Assert that updates on a conforming document succeed when they affect fields not involved','line_number':66,'multiline':False]
['text':' in validator.','line_number':67,'multiline':False]
['text':' Add a new field.','line_number':68,'multiline':False]
['text':' In-place update.','line_number':72,'multiline':False]
['text':' Out-of-place update.','line_number':76,'multiline':False]
['text':' No-op update.','line_number':80,'multiline':False]
['text':' Verify those same updates will fail on non-conforming document.','line_number':85,'multiline':False]
['text':' A no-op update of an invalid doc will succeed.','line_number':97,'multiline':False]
['text':' Verify that we can't make a conforming document fail validation, but can update a','line_number':102,'multiline':False]
['text':' non-conforming document to pass validation.','line_number':103,'multiline':False]
['text':' Modify the collection to remove the document validator.','line_number':117,'multiline':False]
['text':' Verify that no validation is applied to updates.','line_number':120,'multiline':False]
['text':' Run the test with a normal validator.','line_number':135,'multiline':False]
['text':' Run the test again with an equivalent JSON Schema.','line_number':138,'multiline':False]
['text':'*
 * Run a series of document validation tests involving collation using the validator
 * 'validator', which should enforce that the field "a" has the value "xyz".
 ','line_number':141,'multiline':True]
['text':' An insert that matches the validator should succeed.','line_number':150,'multiline':False]
['text':' A normal validator should respect the collation and the inserts should succeed. A JSON','line_number':155,'multiline':False]
['text':' Schema validator ignores the collation and the inserts should fail.','line_number':156,'multiline':False]
['text':' Test an insert and an update that should always fail.','line_number':168,'multiline':False]
['text':' A normal validator expands leaf arrays, such that if "a" is an array containing "xyz", it','line_number':174,'multiline':False]
['text':' matches {a: "xyz"}. A JSON Schema validator does not expand leaf arrays and treats arrays','line_number':175,'multiline':False]
['text':' as a single array value.','line_number':176,'multiline':False]
['text':' The validator is allowed to contain $expr.','line_number':185,'multiline':False]
['text':' The validator will generate detailed errors when $expr throws.','line_number':194,'multiline':False]
['text':' The validator supports $expr with the date extraction expressions (with a timezone','line_number':202,'multiline':False]
['text':' specified).','line_number':203,'multiline':False]
['text':' The validator supports $expr with a $dateToParts expression.','line_number':211,'multiline':False]
['text':' The validator supports $expr with $dateToString expression.','line_number':234,'multiline':False]
['text':' The validator supports $expr with $dateFromParts expression.','line_number':256,'multiline':False]
['text':' The validator supports $expr with $dateFromString expression.','line_number':272,'multiline':False]
['text':' The validator can contain an $expr that may throw at runtime.','line_number':287,'multiline':False]
['text':' The validator can contain an $expr that respects the collation.','line_number':297,'multiline':False]
['text':' Create collection with validator that uses case insensitive collation.','line_number':299,'multiline':False]
['text':' Recreate a collection with a simple validator.','line_number':306,'multiline':False]
['text':' Insert a document that fails validation.','line_number':310,'multiline':False]
['text':' Verify that the document validation error attribute 'failingDocumentId' equals to the document','line_number':313,'multiline':False]
['text':' '_id' attribute.','line_number':314,'multiline':False]
['text':' Insert a valid document.','line_number':324,'multiline':False]
['text':' Issues the update command and returns the response.','line_number':327,'multiline':False]
['text':' Issues the findAndModify command and returns the response.','line_number':332,'multiline':False]
['text':' Attempt to update the document by replacing it with a document that does not pass validation.','line_number':338,'multiline':False]
['text':' Verify that the document validation error attribute 'failingDocumentId' equals to the','line_number':341,'multiline':False]
['text':' document '_id' attribute.','line_number':342,'multiline':False]
