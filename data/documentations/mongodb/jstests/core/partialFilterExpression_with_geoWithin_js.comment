['text':' @tags: [requires_non_retryable_writes, requires_fcv_51]','line_number':1,'multiline':False]
['text':' The first collection ensures our changes work with a variety of types (polygon, point,','line_number':8,'multiline':False]
['text':' linestring) and guarantees some shapes are not inside our index (bigPoly20).','line_number':9,'multiline':False]
['text':' Create index to cover Texas and Southern California.','line_number':103,'multiline':False]
['text':' Search for points only located in a smaller region within our larger index, in this case','line_number':108,'multiline':False]
['text':' Texas.','line_number':109,'multiline':False]
['text':' Test index maintenace to make sure a doc is removed from index when it is no longer in the','line_number':120,'multiline':False]
['text':' $geoWithin bounds.','line_number':121,'multiline':False]
['text':' Test using { $geoWithin: { $geometry : ...}} query on a collection indexed on $centerSphere','line_number':134,'multiline':False]
['text':' shape. This works because both centersphere and a Geo-JSON polygon define regions using','line_number':135,'multiline':False]
['text':' spherical-geometry.','line_number':136,'multiline':False]
['text':' Point corresponding to UWS of Manhattan.','line_number':142,'multiline':False]
['text':' Point corresponding to Downtown Brooklyn.','line_number':144,'multiline':False]
['text':' Polygon roughly representing the UWS of Manhattan.','line_number':146,'multiline':False]
['text':' We expect to only find one matching result because we only have one point in our collection','line_number':161,'multiline':False]
['text':' inside the limits of our polygon (or in other words, inside the UWS of Manhattan ).','line_number':162,'multiline':False]
