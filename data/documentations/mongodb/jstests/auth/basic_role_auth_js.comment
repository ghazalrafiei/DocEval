['text':'*
 * This file tests basic authorization for different roles in stand alone and sharded
 * environment. This file covers all types of operations except commands.
 ','line_number':1,'multiline':True]
['text':'*
 * Data structure that contains all the users that are going to be used in the tests.
 * The structure is as follows:
 * 1st level field name: database names.
 * 2nd level field name: user names.
 * 3rd level is an object that has the format:
 *     { pwd: <password>, roles: [<list of roles>] }
 * @tags: [requires_sharding]
 ','line_number':6,'multiline':True]
['text':' Constants that lists the privileges of a given role.','line_number':39,'multiline':False]
['text':'*
 * Checks whether an error occurs after running an operation.
 *
 * @param shouldPass {Boolean} true means that the operation should succeed.
 * @param opFunc {function()} a function object which contains the operation to perform.
 ','line_number':48,'multiline':True]
['text':'*
 * Runs a series of operations against the db provided.
 *
 * @param db {DB} the database object to use.
 * @param allowedActions {Object} the lists of operations that are allowed for the
 *     current user. The data structure is represented as a map with the presence of
 *     a field name means that the operation is allowed and not allowed if it is
 *     not present. The list of field names are: insert, update, remove, query, killOp,
 *     currentOp, index_r, index_w, profile_r, profile_w, user_r, user_w, killCursor,
 *     fsync_unlock.
 ','line_number':70,'multiline':True]
['text':' Unauthorized','line_number':133,'multiline':False]
['text':' Test for kill cursor','line_number':161,'multiline':False]
['text':' Create cursor from db2.','line_number':173,'multiline':False]
['text':' admin users can do anything they want.','line_number':181,'multiline':False]
['text':' users can kill their own cursors','line_number':186,'multiline':False]
['text':' Special case, no-auth','line_number':192,'multiline':False]
['text':' Issue killCursor command from db.','line_number':203,'multiline':False]
['text':' Note: fsyncUnlock is not supported in mongos.','line_number':212,'multiline':False]
['text':' List of tests to run. Has the format:','line_number':225,'multiline':False]
['text':'','line_number':226,'multiline':False]
['text':' {','line_number':227,'multiline':False]
['text':'   name: {String} description of the test','line_number':228,'multiline':False]
['text':'   test: {function(Mongo)} the test function to run which accepts a Mongo connection','line_number':229,'multiline':False]
['text':'                           object.','line_number':230,'multiline':False]
['text':' }','line_number':231,'multiline':False]
['text':' role change should affect users already authenticated.','line_number':414,'multiline':False]
['text':' role change should affect active connections.','line_number':417,'multiline':False]
['text':' role change should also affect new connections.','line_number':422,'multiline':False]
['text':'*
 * Driver method for setting up the test environment, running them, cleanup
 * after every test and keeping track of test failures.
 *
 * @param conn {Mongo} a connection to a mongod or mongos to test.
 ','line_number':447,'multiline':True]
['text':' We already registered this user.','line_number':472,'multiline':False]
