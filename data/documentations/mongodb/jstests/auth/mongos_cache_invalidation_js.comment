['text':'*
 * This tests that updates to user and role definitions made on one mongos propagate properly
 * to other mongoses.
 * @tags: [requires_sharding]
 ','line_number':1,'multiline':True]
['text':' initial data','line_number':36,'multiline':False]
['text':' initial data','line_number':37,'multiline':False]
['text':'*
 * At this point we have 3 handles to the "test" database, each of which are on connections to
 * different mongoses.  "db1", "db2", and "db3" are all auth'd as spencer@test and will be used
 * to verify that user and role data changes get propaged to their mongoses.
 * "db2" is connected to a mongos with a 5 second user cache invalidation interval,
 * while "db3" is connected to a mongos with a 10 minute cache invalidation interval.
 ','line_number':61,'multiline':True]
['text':' At first db3 should still think we're unauthorized because it hasn't invalidated it's cache.','line_number':78,'multiline':False]
['text':' Changing the value of the invalidation interval should make it invalidate its cache quickly.','line_number':80,'multiline':False]
['text':' Set the invalidation interval back for the rest of the tests','line_number':86,'multiline':False]
['text':' s0/db1 should update its cache instantly','line_number':104,'multiline':False]
['text':' s1/db2 should update its cache in 10 seconds.','line_number':108,'multiline':False]
['text':' Additional 5 seconds of buffer in case of slow update ','line_number':119,'multiline':True]
['text':' We manually invalidate the cache on s2/db3.','line_number':121,'multiline':False]
['text':' s0/db1 should update its cache instantly','line_number':133,'multiline':False]
['text':' s1/db2 should update its cache in 10 seconds.','line_number':137,'multiline':False]
['text':' Additional 5 seconds of buffer in case of slow update ','line_number':145,'multiline':True]
['text':' We manually invalidate the cache on s1/db3.','line_number':147,'multiline':False]
['text':' s0/db1 should update its cache instantly','line_number':161,'multiline':False]
['text':' s1/db2 should update its cache in 10 seconds.','line_number':164,'multiline':False]
['text':' Additional 5 seconds of buffer in case of slow update ','line_number':171,'multiline':True]
['text':' We manually invalidate the cache on s1/db3.','line_number':173,'multiline':False]
['text':' SERVER-13850','line_number':179,'multiline':False]
['text':' At this point db3 still thinks "spencer" has readWrite.  Use it to add a different role','line_number':186,'multiline':False]
['text':' and make sure it doesn't add back readWrite','line_number':187,'multiline':False]
['text':' modifying "spencer" should force db3 to update its cache entry for "spencer"','line_number':194,'multiline':False]
['text':' Make sure nothing changes from invalidating the cache','line_number':197,'multiline':False]
['text':' s0/db1 should update its cache instantly','line_number':213,'multiline':False]
['text':' s1/db2 should update its cache in 10 seconds.','line_number':216,'multiline':False]
['text':' Additional 5 seconds of buffer in case of slow update ','line_number':223,'multiline':True]
['text':' We manually invalidate the cache on s2/db3.','line_number':225,'multiline':False]
['text':' Create a previously unauthenticated user which is not in the authorization cached','line_number':235,'multiline':False]
['text':' Authenticate as the uncached user','line_number':241,'multiline':False]
['text':' Put connection to config server back into default state before shutdown','line_number':252,'multiline':False]
