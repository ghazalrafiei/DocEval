['text':'*
 * Tests for the $match swapping optimization's ability to handle fields renamed in $project or
 * $addFields.
 * @tags: [
 *   do_not_wrap_aggregations_in_facets,
 *   requires_pipeline_optimization,
 * ]
 ','line_number':1,'multiline':True]
['text':' Test that a $match can result in index usage after moving past a field renamed by $project.','line_number':17,'multiline':False]
['text':' Test that a $match can result in index usage after moving past a field renamed by $addFields.','line_number':23,'multiline':False]
['text':' Test that a $match with $type can result in index usage after moving past a field renamed by','line_number':29,'multiline':False]
['text':' $project.','line_number':30,'multiline':False]
['text':' Test that a partially dependent match can split, with a rename applied, resulting in index','line_number':36,'multiline':False]
['text':' usage.','line_number':37,'multiline':False]
['text':' Test that a match can swap past several renames, resulting in index usage.','line_number':43,'multiline':False]
['text':' Test that a $match can result in index usage after moving past a dotted array path renamed by','line_number':59,'multiline':False]
['text':' a $map inside a $project.','line_number':60,'multiline':False]
['text':' Test that a $match can result in index usage after moving past a dotted array path renamed by','line_number':71,'multiline':False]
['text':' a $map inside an $addFields. This time the match expression is partially dependent and should','line_number':72,'multiline':False]
['text':' get split.','line_number':73,'multiline':False]
['text':' Test that match swapping behaves correctly when a $map contains a rename but also computes a','line_number':85,'multiline':False]
['text':' new field.','line_number':86,'multiline':False]
['text':' Test that a $match can result in index usage by moving past a rename of a field inside','line_number':103,'multiline':False]
['text':' two-levels of arrays. The rename is expressed using nested $map inside a $project.','line_number':104,'multiline':False]
['text':' Test that a $match can result in index usage by moving past a rename of a field inside','line_number':134,'multiline':False]
['text':' two-levels of arrays. The rename is expressed using nested $map inside an $addFields.','line_number':135,'multiline':False]
['text':' Test that we correctly match on the subfield of a renamed field. Here, a match on "x.b.c"','line_number':169,'multiline':False]
['text':' follows an "a" to "x" rename. When we move the match stage in front of the rename, the match','line_number':170,'multiline':False]
['text':' should also get rewritten to use "a.b.c" as its filter.','line_number':171,'multiline':False]
['text':' Test that we correctly match on the subfield of a renamed field when the rename results from','line_number':180,'multiline':False]
['text':' a $map operation. Here, a match on "d.e.c" follows an "a.b" to "d.e" rename. When we move the','line_number':181,'multiline':False]
['text':' match stage in front of the renaming $map operation, the match should also get rewritten to','line_number':182,'multiline':False]
['text':' use "a.b.c" as its filter.','line_number':183,'multiline':False]
['text':' Test multiple renames. Designed to reproduce SERVER-32690.','line_number':195,'multiline':False]
['text':' We expect that the $match stage has been split into two, since one predicate has an','line_number':200,'multiline':False]
['text':' applicable rename that allows swapping, while the other does not.','line_number':201,'multiline':False]
