['text':'*
 * Test how $setWindowFields desugars.
 *
 * We handle partitionBy and sortBy by generating a separate $sort stage.
 *
 * @tags: [
 *   # We assume the pipeline is not split into a shardsPart and mergerPart.
 *   assumes_unsharded_collection,
 *   # We're testing the explain plan, not the query results, so the facet passthrough would fail.
 *   do_not_wrap_aggregations_in_facets,
 * ]
 ','line_number':1,'multiline':True]
['text':' Use .explain() to see what the stage desugars to.','line_number':18,'multiline':False]
['text':' The result is formatted as explain-output, which differs from MQL syntax in some cases:','line_number':19,'multiline':False]
['text':' for example {$sort: {a: 1}} explains as {$sort: {sortKey: {a: 1}}}.','line_number':20,'multiline':False]
['text':' prevent stages from being absorbed into the .find() layer','line_number':23,'multiline':False]
['text':' The first two stages should be the .find() cursor and the inhibit-optimization stage;','line_number':31,'multiline':False]
['text':' the rest of the stages are what the user's 'stage' expanded to.','line_number':32,'multiline':False]
['text':' Often, the desugared stages include a generated temporary name.','line_number':38,'multiline':False]
['text':' When this happens, it's always in the first stage, an $addFields.','line_number':39,'multiline':False]
['text':' No partitionBy and no sortBy means we don't need to sort the input.','line_number':47,'multiline':False]
['text':' 'sortBy' becomes an explicit $sort stage.','line_number':52,'multiline':False]
['text':' 'partitionBy' a field becomes an explicit $sort stage.','line_number':58,'multiline':False]
['text':' 'partitionBy' an expression becomes $set + $sort + $unset.','line_number':64,'multiline':False]
['text':' Also, the _internal stage reads from the already-computed field.','line_number':65,'multiline':False]
['text':' $sort first by partitionBy, then sortBy, because we sort within each partition.','line_number':75,'multiline':False]
