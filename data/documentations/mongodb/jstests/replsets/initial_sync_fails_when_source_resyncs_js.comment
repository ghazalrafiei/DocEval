['text':'*
 * Tests that initial sync will abort an attempt if the sync source enters initial sync during
 * cloning. This test will timeout if the attempt is not aborted.
 ','line_number':1,'multiline':True]
['text':' The default WC is majority and this test can't satisfy majority writes.','line_number':16,'multiline':False]
['text':' Add some data to be cloned.','line_number':20,'multiline':False]
['text':' This test is specifically testing that the cloners detect the source going into initial','line_number':29,'multiline':False]
['text':' sync mode, so we turn off the oplog fetcher to ensure that we don't inadvertently test','line_number':30,'multiline':False]
['text':' that instead.','line_number':31,'multiline':False]
['text':' The code handling this case is common to all cloners, so run it only for the stage most likely','line_number':41,'multiline':False]
['text':' to see an error.','line_number':42,'multiline':False]
['text':' Set us up to hang before finish so we can check status.','line_number':46,'multiline':False]
['text':' Set us up to stop right before the given stage.','line_number':54,'multiline':False]
['text':' Release the initial failpoint.','line_number':57,'multiline':False]
['text':' We hold the source in initial sync mode.','line_number':64,'multiline':False]
['text':' Wait for the source to go into initial sync.','line_number':69,'multiline':False]
['text':' The initial sync should have failed.','line_number':77,'multiline':False]
['text':' Release the sync node oplog fetcher so the test completes.','line_number':79,'multiline':False]
['text':' Release the initial sync source so the test completes.','line_number':84,'multiline':False]
['text':' Wait for the fassert to stop the initial sync node.','line_number':88,'multiline':False]
['text':' We skip validation and dbhashes because the initial sync failed so the initial sync node is','line_number':91,'multiline':False]
['text':' invalid and unreachable.','line_number':92,'multiline':False]
