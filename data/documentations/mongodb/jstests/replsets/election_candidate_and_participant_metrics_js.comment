['text':'*
 * This test checks that the metrics around election candidates and participants are set and updated
 * correctly. We test this with a two node replica set by forcing multiple election handoffs and
 * checking the 'electionCandidateMetrics' and 'electionParticipantMetrics' fields of replSetStatus
 * after each handoff.
 ','line_number':1,'multiline':True]
['text':' Make sure there are no election timeouts firing for the duration of the test. This helps','line_number':15,'multiline':False]
['text':' ensure that the test will only pass if the election handoff succeeds.','line_number':16,'multiline':False]
['text':' Check that the 'electionCandidateMetrics' section of the replSetGetStatus response after','line_number':28,'multiline':False]
['text':' replica set startup has all of the required fields and that they are set correctly.','line_number':29,'multiline':False]
['text':' The node runs its own election before receiving the configuration, so 'electionTimeoutMillis' is','line_number':60,'multiline':False]
['text':' set to the default value.','line_number':61,'multiline':False]
['text':' Check that the 'electionCandidateMetrics' section of the replSetGetStatus response for the new','line_number':75,'multiline':False]
['text':' primary has all of the required fields and that they are set correctly.','line_number':76,'multiline':False]
['text':' Since the previous primary's ID is 0, we directly assert that 0 is stored in the','line_number':108,'multiline':False]
['text':' priorPrimaryMemberId field.','line_number':109,'multiline':False]
['text':' TODO (SERVER-45274): Re-enable this assertion.','line_number':110,'multiline':False]
['text':' assert.eq(newPrimaryElectionCandidateMetrics.priorPrimaryMemberId, 0);','line_number':111,'multiline':False]
['text':' The new primary should not have its 'electionParticipantMetrics' field set, since it was the','line_number':115,'multiline':False]
['text':' candidate in this election and did not vote for any other node.','line_number':116,'multiline':False]
['text':' Check that the 'electionParticipantMetrics' section of the replSetGetStatus response for the','line_number':127,'multiline':False]
['text':' original primary has all of the required fields and that they are set correctly.','line_number':128,'multiline':False]
['text':' Since the node voted for the new primary, we directly assert that its voteReason is equal to','line_number':145,'multiline':False]
['text':' empty string.','line_number':146,'multiline':False]
['text':' The original primary should not have its 'electionCandidateMetrics' field set, since it was not a','line_number':163,'multiline':False]
['text':' candidate in this election.','line_number':164,'multiline':False]
['text':' testElectionHandoff steps down the primary with a non-zero step down period, so we need to','line_number':169,'multiline':False]
['text':' unfreeze the node to allow it to initiate an election again.','line_number':170,'multiline':False]
['text':' Step up the original primary.','line_number':172,'multiline':False]
['text':' Check that the original primary's metrics are also being set properly after the second election.','line_number':180,'multiline':False]
['text':' TODO (SERVER-45274): Re-enable this assertion.','line_number':187,'multiline':False]
['text':' assert.eq(originalPrimaryElectionCandidateMetrics.priorPrimaryMemberId, 1);','line_number':188,'multiline':False]
['text':' The other node should not have an electionCandidateMetrics, as it just stepped down.','line_number':195,'multiline':False]
['text':' Check that the primary that just stepped down has its 'electionParticipantMetrics' field set','line_number':200,'multiline':False]
['text':' correctly.','line_number':201,'multiline':False]
['text':' Since the election participant metrics are only set in the real election, set up a failpoint that','line_number':208,'multiline':False]
['text':' tells a voting node to vote yes in the dry run election and no in the real election.','line_number':209,'multiline':False]
['text':' The new primary might still be processing the reconfig via heartbeat from the original primary's','line_number':213,'multiline':False]
['text':' reconfig on step up. Wait for config replication first so it doesn't interfere with the step up','line_number':214,'multiline':False]
['text':' on the new primary below.','line_number':215,'multiline':False]
['text':' Attempt to step up the new primary a second time. Due to the failpoint, the current primary','line_number':218,'multiline':False]
['text':' should vote no, and as a result the election should fail.','line_number':219,'multiline':False]
['text':' Make sure the step up failed and for the right reason.','line_number':221,'multiline':False]
['text':' Check that the metrics in 'electionParticipantMetrics' were updated for the original primary','line_number':232,'multiline':False]
['text':' after the second election that it participated in.','line_number':233,'multiline':False]
