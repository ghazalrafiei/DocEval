['text':'*
 * Check that on a loss of primary, another node doesn't assume primary if it is stale. We force a
 * stepDown to test this.
 *
 * This test also checks that the serverStatus command metrics replSetStepDown and
 * replSetStepDownWithForce are incremented correctly.
 *
 * This test requires the fsync command to force a secondary to be stale.
 * @tags: [requires_fsync]
 ','line_number':1,'multiline':True]
['text':' We are bypassing collection validation because this test runs "shutdown" command so the server is','line_number':14,'multiline':False]
['text':' expected to be down when MongoRunner.stopMongod is called.','line_number':15,'multiline':False]
['text':' The default WC is majority and this test can't satisfy majority writes.','line_number':28,'multiline':False]
['text':' do a write','line_number':32,'multiline':False]
['text':' In the event of any error, we have to unlock any nodes that we have fsyncLocked.','line_number':37,'multiline':False]
['text':' lock secondaries','line_number':53,'multiline':False]
['text':' do another write','line_number':66,'multiline':False]
['text':' this should fail, so we don't need to try/catch','line_number':77,'multiline':False]
['text':' Check that the 'total' and 'failed' fields of 'replSetStepDown' have been incremented in','line_number':82,'multiline':False]
['text':' serverStatus and that they have not been incremented for 'replSetStepDownWithForce'.','line_number':83,'multiline':False]
['text':' This section checks that the metrics are incremented accurately when the command fails due to','line_number':102,'multiline':False]
['text':' an error occurring before stepDown is called in the replication coordinator, such as due to','line_number':103,'multiline':False]
['text':' bad values or type mismatches in the arguments, or checkReplEnabledForCommand returning a bad','line_number':104,'multiline':False]
['text':' status. The stepdown period being negative is one example of such an error, but success in','line_number':105,'multiline':False]
['text':' this case gives us confidence that the behavior in the other cases is the same.','line_number':106,'multiline':False]
['text':' Stepdown should fail because the stepdown period is negative','line_number':108,'multiline':False]
['text':' Check that the 'total' and 'failed' fields of 'replSetStepDown' and','line_number':113,'multiline':False]
['text':' 'replSetStepDownWithForce' have been incremented in serverStatus.','line_number':114,'multiline':False]
['text':' Check that the 'total' fields of 'replSetStepDown' and 'replSetStepDownWithForce' have been','line_number':138,'multiline':False]
['text':' incremented in serverStatus and that their 'failed' fields have not been incremented.','line_number':139,'multiline':False]
['text':' Check that the 'electionCandidateMetrics' section of the replSetGetStatus response has been','line_number':165,'multiline':False]
['text':' cleared, since the node is no longer primary.','line_number':166,'multiline':False]
['text':' This section checks that the metrics are incremented accurately when the command fails due to','line_number':171,'multiline':False]
['text':' an error while stepping down. This is one reason the replSetStepDown command could fail once','line_number':172,'multiline':False]
['text':' we call stepDown in the replication coordinator, but success in this case gives us confidence','line_number':173,'multiline':False]
['text':' that the behavior in the other cases is the same.','line_number':174,'multiline':False]
['text':' Stepdown should fail because the node is no longer primary','line_number':176,'multiline':False]
['text':' Check that the 'total' and 'failed' fields of 'replSetStepDown' and','line_number':182,'multiline':False]
['text':' 'replSetStepDownWithForce' have been incremented in serverStatus.','line_number':183,'multiline':False]
['text':' 'n0' may have just voted for 'n1', preventing it from becoming primary for the first 30 seconds','line_number':214,'multiline':False]
['text':' of this assert.soon','line_number':215,'multiline':False]
['text':' Add arbiter for shutdown tests','line_number':239,'multiline':False]
['text':' this should fail because the primary can't reach an up-to-date secondary (because the only','line_number':272,'multiline':False]
['text':' secondary is down)','line_number':273,'multiline':False]
['text':' on windows, javascript and the server perceive time differently, to compensate here we use 2750ms','line_number':276,'multiline':False]
