['text':' Tests the scenario described in SERVER-27534.','line_number':1,'multiline':False]
['text':' 1. Send a single insert command with a large number of documents and the {ordered: true} option.','line_number':2,'multiline':False]
['text':' 2. Force the thread processing the insert command to hang in between insert batches. (Inserts are','line_number':3,'multiline':False]
['text':'    typically split into batches of 64, and the server yields locks between batches.)','line_number':4,'multiline':False]
['text':' 3. Disconnect the original primary from the network, forcing another node to step up.','line_number':5,'multiline':False]
['text':' 4. Insert a single document on the new primary.','line_number':6,'multiline':False]
['text':' 5. Return the original primary to the network and force it to step up by disconnecting the','line_number':7,'multiline':False]
['text':'    primary that replaced it. The original primary has to roll back any batches from step 1','line_number':8,'multiline':False]
['text':'    that were inserted locally but did not get majority committed before the insert in step 4.','line_number':9,'multiline':False]
['text':' 6. Unpause the thread performing the insert from step 1. If it continues to insert batches even','line_number':10,'multiline':False]
['text':'    though there was a rollback, those inserts will violate the {ordered: true} option.','line_number':11,'multiline':False]
['text':' The test starts with node 0 as the primary.','line_number':28,'multiline':False]
['text':' The default WC is majority and stopServerReplication will prevent satisfying any majority writes.','line_number':32,'multiline':False]
['text':' Prevent any writes to node 0 (the primary) from replicating to nodes 1 and 2.','line_number':42,'multiline':False]
['text':' Allow the primary to insert the first 5 batches of documents. After that, the fail point','line_number':46,'multiline':False]
['text':' activates, and the client thread hangs until the fail point gets turned off.','line_number':47,'multiline':False]
['text':' In a background thread, issue an insert command to the primary that will insert 10 batches of','line_number':51,'multiline':False]
['text':' documents.','line_number':52,'multiline':False]
['text':' Insert elements [{idx: 0}, {idx: 1}, ..., {idx: numToInsert - 1}].','line_number':54,'multiline':False]
['text':' Wait long enough to guarantee that all 5 batches of inserts have executed and the primary is','line_number':65,'multiline':False]
['text':' hung on the "hangDuringBatchInsert" fail point.','line_number':66,'multiline':False]
['text':' Make sure the insert command is, in fact, running in the background.','line_number':69,'multiline':False]
['text':' Completely isolate the current primary (node 0), forcing it to step down.','line_number':72,'multiline':False]
['text':' Wait for node 1, the only other eligible node, to become the new primary.','line_number':76,'multiline':False]
['text':' Issue a write to the new primary.','line_number':82,'multiline':False]
['text':' Isolate node 1, forcing it to step down as primary, and reconnect node 0, allowing it to step','line_number':86,'multiline':False]
['text':' up again.','line_number':87,'multiline':False]
['text':' Wait for node 0 to become primary again.','line_number':91,'multiline':False]
['text':' Allow the batch insert to continue.','line_number':95,'multiline':False]
['text':' Wait until the insert command is done.','line_number':98,'multiline':False]
['text':' Any discontinuity in the "idx" values is an error. If an "idx" document failed to insert, all','line_number':107,'multiline':False]
['text':' the of "idx" documents after it should also have failed to insert, because the insert','line_number':108,'multiline':False]
['text':' specified {ordered: 1}. Note, if none of the inserts were successful, that's fine.','line_number':109,'multiline':False]
['text':' Reconnect the remaining disconnected nodes, so we can exit.','line_number':114,'multiline':False]
