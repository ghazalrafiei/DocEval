['text':'
 * Tests that nodes in initial sync are considered a part of the liveness majority. This test starts
 * with a two-node replica set. We then add a secondary and force it to hang in initial sync. We
 * proceed to remove all communication for the other secondary. We verify that the primary does not
 * step down and no elections were called, since the node in initial sync contributes to the
 * liveness majority. Finally, we verify that nodes in initial sync are able to vote in an election.
 * This is done by stepping down the primary, waiting for it to become a secondary, and allowing it
 * to run for primary again. Since the other secondary is disconnected, the primary must receive a
 * vote from the initial sync node to get elected again.
 ','line_number':1,'multiline':True]
['text':' Add the new node with votes:0 and then give it votes:1 to avoid 'newlyAdded' and mimic a resync,','line_number':34,'multiline':False]
['text':' where a node is in initial sync with 1 vote.','line_number':35,'multiline':False]
['text':' force ','line_number':38,'multiline':True]
['text':' wait ','line_number':38,'multiline':True]
['text':' Verify that the primary should not step down due to not seeing a quorum. This is because the','line_number':48,'multiline':False]
['text':' primary should be receiving heartbeats from the initial sync node. We specifically look for the','line_number':49,'multiline':False]
['text':' 'Can't see a majority of the set, relinquishing primary' log message.','line_number':50,'multiline':False]
['text':' attrs ','line_number':51,'multiline':True]
['text':' Verify that the term is still 1, so the primary did not call any elections.','line_number':55,'multiline':False]
['text':' Step down the primary and prevent it from running for elections with a high freeze timeout.','line_number':59,'multiline':False]
['text':' Unfreeze the primary so that it can run for election. It should immediately run for election as','line_number':64,'multiline':False]
['text':' no other nodes are able to call for an election.','line_number':65,'multiline':False]
['text':' Verify that the primary was elected.','line_number':68,'multiline':False]
['text':' Verify that the term has incremented due to the last election.','line_number':71,'multiline':False]
['text':' Verify that initial sync node voted in the election and sets the correct term in its','line_number':75,'multiline':False]
['text':' electionParticipantMetrics field.','line_number':76,'multiline':False]
['text':' The disconnected secondary did not vote in the last election, so its electionParticipantMetrics','line_number':81,'multiline':False]
['text':' field should not be set.','line_number':82,'multiline':False]
['text':' Since the primary sends a shut down command to all secondaries in `rst.stopSet()`, we reconnect','line_number':87,'multiline':False]
['text':' the disconnected secondary to the primary to allow it to be shut down.','line_number':88,'multiline':False]
