['text':'*
 * Tests that initial sync successfully applies a prepare oplog entry during oplog application phase
 * of initial sync.  Additionally, we will test that a background index build interleaves without
 * hanging.
 *
 * @tags: [
 *   uses_prepare_transaction,
 *   uses_transactions,
 * ]
 ','line_number':1,'multiline':True]
['text':' Increase the election timeout so that we do not accidentally trigger an election while the','line_number':20,'multiline':False]
['text':' secondary is restarting.','line_number':21,'multiline':False]
['text':' The default WC is majority and this test can't satisfy majority writes.','line_number':29,'multiline':False]
['text':' Restart the secondary with startClean set to true so that it goes through initial sync. Also','line_number':42,'multiline':False]
['text':' restart the node with a failpoint turned on that will pause initial sync. This way we can do','line_number':43,'multiline':False]
['text':' some writes on the sync source while initial sync is paused and know that its operations','line_number':44,'multiline':False]
['text':' won't be copied during collection cloning. Instead, the writes must be applied during oplog','line_number':45,'multiline':False]
['text':' application.','line_number':46,'multiline':False]
['text':' signal ','line_number':47,'multiline':True]
['text':' wait ','line_number':58,'multiline':True]
['text':' Wait for failpoint to be reached so we know that collection cloning is paused.','line_number':60,'multiline':False]
['text':' Perform writes while collection cloning is paused so that we know they must be applied during','line_number':69,'multiline':False]
['text':' the oplog application stage of initial sync.','line_number':70,'multiline':False]
['text':' Make the index build hang on the primary so that only a startIndexBuild oplog entry is','line_number':73,'multiline':False]
['text':' replicated and initial sync gets to the prepared-txn reconstruct stage with the index build','line_number':74,'multiline':False]
['text':' still running.','line_number':75,'multiline':False]
['text':' Prepare a transaction while collection cloning is paused so that its oplog entry must be','line_number':88,'multiline':False]
['text':' applied during the oplog application phase of initial sync.','line_number':89,'multiline':False]
['text':' Resume initial sync.','line_number':96,'multiline':False]
['text':' Unblock index build.','line_number':100,'multiline':False]
['text':' Let the primary finish its index build and replicate a commit to the secondary.','line_number':101,'multiline':False]
['text':' Wait for the secondary to complete initial sync.','line_number':104,'multiline':False]
['text':' Make sure that while reading from the node that went through initial sync, we can't read','line_number':112,'multiline':False]
['text':' changes to the documents from the prepared transaction after initial sync. Also, make','line_number':113,'multiline':False]
['text':' sure that the writes that happened when collection cloning was paused happened.','line_number':114,'multiline':False]
['text':' Wait for the prepared transaction oplog entry to be majority committed before committing the','line_number':118,'multiline':False]
['text':' transaction.','line_number':119,'multiline':False]
['text':' Make sure that we can see the data from the committed transaction on the secondary.','line_number':128,'multiline':False]
