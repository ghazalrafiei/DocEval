['text':' SERVER-7200 On startup, replica set nodes delete oplog state past the oplog delete point and','line_number':1,'multiline':False]
['text':' apply any remaining unapplied ops before coming up as a secondary. If the op fails to apply, the','line_number':2,'multiline':False]
['text':' server must fail to start up.','line_number':3,'multiline':False]
['text':'','line_number':4,'multiline':False]
['text':' @tags: [','line_number':5,'multiline':False]
['text':'   requires_persistence,','line_number':6,'multiline':False]
['text':' ]','line_number':7,'multiline':False]
['text':' Waits for PRIMARY state.','line_number':15,'multiline':False]
['text':' Wait for the commit point to reach the top of the oplog so that the stableTS can advance.','line_number':17,'multiline':False]
['text':' Restart as a standalone node.','line_number':23,'multiline':False]
['text':' appliedThrough','line_number':44,'multiline':False]
['text':' minvalid:','line_number':50,'multiline':False]
['text':' This weird mechanism is the only way to bypass mongod's attempt to fill in null','line_number':55,'multiline':False]
['text':' Timestamps.','line_number':56,'multiline':False]
['text':' Restart in replSet mode again.','line_number':64,'multiline':False]
