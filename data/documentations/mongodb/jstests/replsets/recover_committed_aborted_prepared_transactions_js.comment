['text':'*
 * 1. Test that rollback can successfully recover committed prepared transactions that were prepared
 * before the stable timestamp and committed between the stable timestamp and the common point.
 * 2. Test that rollback can successfully recover aborted prepared transactions that were prepared
 * and aborted between the stable timestamp and the common point.
 *
 * @tags: [
 *   uses_prepare_transaction,
 *   uses_transactions,
 * ]
 ','line_number':1,'multiline':True]
['text':' Create collection we're using beforehand.','line_number':21,'multiline':False]
['text':' Start two different sessions on the primary.','line_number':27,'multiline':False]
['text':' Prepare a transaction on the first session which will be committed eventually.','line_number':42,'multiline':False]
['text':' Prevent the stable timestamp from moving beyond the following prepared transactions so','line_number':47,'multiline':False]
['text':' that when we replay the oplog from the stable timestamp, we correctly recover them.','line_number':48,'multiline':False]
['text':' The following transactions will be prepared before the common point, so they must be in','line_number':52,'multiline':False]
['text':' prepare after rollback recovery.','line_number':53,'multiline':False]
['text':' Prepare another transaction on the second session which will be aborted.','line_number':55,'multiline':False]
['text':' Commit the first transaction.','line_number':60,'multiline':False]
['text':' Abort the second transaction.','line_number':63,'multiline':False]
['text':' Check that we have two transactions in the transactions table.','line_number':66,'multiline':False]
['text':' The following write will be rolled back.','line_number':69,'multiline':False]
['text':' Make sure there are two transactions in the transactions table.','line_number':83,'multiline':False]
['text':' Make sure we can see the first two writes and the insert from the first prepared transaction.','line_number':86,'multiline':False]
['text':' Make sure we cannot see the insert from the second prepared transaction or the writes after','line_number':87,'multiline':False]
['text':' transitionToRollbackOperations.','line_number':88,'multiline':False]
['text':' Get the correct members after the topology changes.','line_number':95,'multiline':False]
['text':' Make sure we can successfully run a prepared transaction on the same first session after','line_number':102,'multiline':False]
['text':' going through rollback. This ensures that the session state has properly been restored.','line_number':103,'multiline':False]
['text':' The next transaction on this session should have a txnNumber of 1. We explicitly set this','line_number':107,'multiline':False]
['text':' since createSessionWithGivenId does not restore the current txnNumber in the shell.','line_number':108,'multiline':False]
['text':' Make sure we can successfully retry the commitTransaction command after rollback.','line_number':114,'multiline':False]
['text':' Retrying the abortTransaction command should fail with a NoSuchTransaction error.','line_number':121,'multiline':False]
['text':' Make sure we can see the insert after committing the prepared transaction.','line_number':129,'multiline':False]
