['text':'*
 * Test the dbCheck command.
 *
 * @tags: [
 *   # We need persistence as we temporarily restart nodes as standalones.
 *   requires_persistence,
 *   assumes_against_mongod_not_mongos,
 *   # snapshotRead:false behavior has been removed in 6.2
 *   requires_fcv_62,
 *   featureFlagSecondaryIndexChecksInDbCheck,
 * ]
 ','line_number':1,'multiline':True]
['text':' This test injects inconsistencies between replica set members; do not fail because of expected','line_number':27,'multiline':False]
['text':' dbHash differences.','line_number':28,'multiline':False]
['text':' Name for a collection which takes multiple batches to check and which shouldn't be modified','line_number':42,'multiline':False]
['text':' by any of the tests.','line_number':43,'multiline':False]
['text':' Check that everything in the health log shows a successful and complete check with no found','line_number':49,'multiline':False]
['text':' inconsistencies.','line_number':50,'multiline':False]
['text':' Assert no errors (i.e., found inconsistencies).','line_number':71,'multiline':False]
['text':' Assert no failures (i.e., checks that failed to complete).','line_number':77,'multiline':False]
['text':' Finds an entry with data.batchStart === MinKey, and then matches its batchEnd against','line_number':83,'multiline':False]
['text':' another document's batchStart, and so on, and then checks that the result of that search','line_number':84,'multiline':False]
['text':' has data.batchEnd === MaxKey.','line_number':85,'multiline':False]
['text':' Check that the total of all batches in the health log on `conn` is equal to the total number','line_number':103,'multiline':False]
['text':' of documents and bytes in `coll`.','line_number':104,'multiline':False]
['text':' Returns a document with fields "totalDocs" and "totalBytes", representing the total size of','line_number':106,'multiline':False]
['text':' the batches in the health log.','line_number':107,'multiline':False]
['text':' Calculate the size on the client side, because collection.dataSize is not necessarily the','line_number':130,'multiline':False]
['text':' sum of the document sizes.','line_number':131,'multiline':False]
['text':' First check behavior when everything is consistent.','line_number':137,'multiline':False]
['text':' "dbCheck no longer supports snapshotRead:false"','line_number':162,'multiline':False]
['text':' "dbCheck no longer supports snapshotRead:false"','line_number':165,'multiline':False]
['text':' Same thing, but now with concurrent updates.','line_number':169,'multiline':False]
['text':' Add enough documents that dbCheck will take a few seconds.','line_number':176,'multiline':False]
['text':' Omit check for total counts, which might have changed with concurrent updates.','line_number':192,'multiline':False]
['text':' Test the various other parameters.','line_number':201,'multiline':False]
['text':' Clean up for the test.','line_number':206,'multiline':False]
['text':' dbCheck evaluates some exit conditions like maxCount and maxBytes at batch boundary.','line_number':232,'multiline':False]
['text':' The batch boundary isn't generally deterministic (e.g. can be time-dependent per','line_number':233,'multiline':False]
['text':' maxBatchTimeMillis) hence the greater-than-or-equal comparisons.','line_number':234,'multiline':False]
['text':' Run a dbCheck on just a subset of the documents','line_number':241,'multiline':False]
['text':' Now, clear the health logs again,','line_number':256,'multiline':False]
['text':' Do the same with a count constraint. We expect it to reach the count limit before','line_number':261,'multiline':False]
['text':' reaching maxKey.','line_number':262,'multiline':False]
['text':' Finally, do the same with a size constraint.','line_number':274,'multiline':False]
['text':' Validate custom maxDocsPerBatch','line_number':290,'multiline':False]
['text':' Validate maxDbCheckMBperSec.','line_number':304,'multiline':False]
['text':' Insert nDocs, each slightly larger than the maxDbCheckMBperSec value (1MB), which is the','line_number':311,'multiline':False]
['text':' default value, while maxBatchTimeMillis is defaulted to 1 second. Consequently, we will','line_number':312,'multiline':False]
['text':' have only 1MB per batch.','line_number':313,'multiline':False]
['text':' DbCheck logs (nDocs + 1) batches to account for each batch hitting the time deadline','line_number':324,'multiline':False]
['text':' after processing only one document. Then, DbCheck will run an additional empty batch','line_number':325,'multiline':False]
['text':' at the end to confirm that there are no more documents.','line_number':326,'multiline':False]
['text':' DbCheck logs (nDocs) batches to account for each batch hitting the time deadline after','line_number':343,'multiline':False]
['text':' processing only one document.','line_number':344,'multiline':False]
['text':' Extra index check's implementation is different from 'dataConsistency' as it doesn't need','line_number':345,'multiline':False]
['text':' to run an additional empty batch at the end to confirm that there are no more documents.','line_number':346,'multiline':False]
['text':' Now, test some unusual cases where the command should fail.','line_number':357,'multiline':False]
['text':' Test stepdown.','line_number':388,'multiline':False]
['text':' Step down the primary.','line_number':396,'multiline':False]
['text':' Wait for the cluster to come up.','line_number':399,'multiline':False]
['text':' Find the node we ran dbCheck on.','line_number':402,'multiline':False]
['text':' Check that it's still responding.','line_number':409,'multiline':False]
['text':' And that our dbCheck completed.','line_number':416,'multiline':False]
['text':' Just add an extra document, and test that it catches it.','line_number':422,'multiline':False]
['text':' Create the collection on the primary.','line_number':430,'multiline':False]
