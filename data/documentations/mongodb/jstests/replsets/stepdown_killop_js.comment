['text':' Ensure stepDown operations that are waiting for replication can be interrupted with killOp()','line_number':1,'multiline':False]
['text':' 1. Start up a 3 node set (1 arbiter).','line_number':2,'multiline':False]
['text':' 2. Stop replication on the SECONDARY using a fail point.','line_number':3,'multiline':False]
['text':' 3. Do one write and then spin up a second shell which asks the PRIMARY to StepDown.','line_number':4,'multiline':False]
['text':' 4. Once StepDown has begun, attempt to do writes and confirm that they fail with','line_number':5,'multiline':False]
['text':' NotWritablePrimary.','line_number':6,'multiline':False]
['text':' 5. Kill the stepDown operation.','line_number':7,'multiline':False]
['text':' 6. Writes should become allowed again and the primary should stay primary.','line_number':8,'multiline':False]
['text':' The default WC is majority and stopServerReplication will prevent satisfying any majority writes.','line_number':26,'multiline':False]
['text':' do a write then ask the PRIMARY to stepdown','line_number':38,'multiline':False]
['text':'interrupted','line_number':45,'multiline':True]
['text':' kill the stepDown and ensure that that unblocks writes to the db','line_number':75,'multiline':False]
