['text':'*
 * Initial sync runs in several phases - the first 3 are as follows:
 * 1) fetches the last oplog entry (op_start1) on the source;
 * 2) copies all non-local databases from the source; and
 * 3) fetches and applies operations from the source after op_start1.
 *
 * This test upserts documents with both the "update" and "applyOps" commands on the source between
 * phases 2 and 3; these operations should be treated as inserts on the syncing node and applied
 * successfully.
 ','line_number':1,'multiline':True]
['text':' Add a secondary node with priority: 0 and votes: 0 so that we prevent elections while','line_number':30,'multiline':False]
['text':' it is syncing from the primary.','line_number':31,'multiline':False]
['text':' alwaysUpsert is true by default; test with the default value and an explicit value ','line_number':67,'multiline':True]
['text':' It writes a regular op: 'u' entry. The update is treated as
     * an upsert by the primary. Ensure it is treated that way by the secondary when it applies
     * the oplog entry during initial sync.
     ','line_number':69,'multiline':True]
['text':' The interesting scenario for alwaysUpsert: false is if the document is deleted on the primary
 * after updating. When the secondary attempts to apply the oplog entry during initial sync,
 * it will fail to update. Ensure that initial sync proceeds anyway.
 ','line_number':78,'multiline':True]
['text':' Don't increment numDocuments, since we deleted the document we just inserted.','line_number':85,'multiline':False]
