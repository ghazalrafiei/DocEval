['text':'*
 * Tests that the election metric for average number of catchup ops is being set correctly. We test
 * this by electing a node to be primary twice and forcing it to catch up each time.
 ','line_number':1,'multiline':True]
['text':' The default WC is majority and this test can't satisfy majority writes.','line_number':16,'multiline':False]
['text':' Block until the primary finishes drain mode.','line_number':25,'multiline':False]
['text':' Wait until the new primary completes the transition to primary and writes a no-op.','line_number':27,'multiline':False]
['text':' Check that metrics associated with catchup have been set correctly in both replSetGetStatus and','line_number':35,'multiline':False]
['text':' serverStatus.','line_number':36,'multiline':False]
['text':' numCatchUpOps should be 4 because the 'foo' collection is implicitly created during the 3','line_number':40,'multiline':False]
['text':' inserts, and that's where the additional oplog entry comes from.','line_number':41,'multiline':False]
['text':' Step up another node temporarily.','line_number':48,'multiline':False]
['text':' Step up the testNode and force it to catchup again.','line_number':52,'multiline':False]
['text':' numCatchUpOps is now 3 due to the 'foo' collection already being created.','line_number':64,'multiline':False]
