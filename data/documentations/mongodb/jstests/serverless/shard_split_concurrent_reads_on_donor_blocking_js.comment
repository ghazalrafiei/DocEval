['text':'*
 * Tests that the donor
 * - blocks reads with atClusterTime/afterClusterTime >= blockOpTime that are executed while the
 *   split is in the blocking state but does not block linearizable reads.
 *
 * @tags: [
 *   incompatible_with_eft,
 *   incompatible_with_macos,
 *   incompatible_with_windows_tls,
 *   requires_majority_read_concern,
 *   requires_persistence,
 *   serverless,
 *   requires_fcv_63
 * ]
 ','line_number':1,'multiline':True]
['text':'*
 * Tests that in the blocking state, the donor blocks reads with atClusterTime/afterClusterTime >=
 * blockOpTime but does not block linearizable reads.
 ','line_number':28,'multiline':True]
['text':' Increase timeout because blocking in the critical section contributes to operation latency.','line_number':66,'multiline':False]
['text':' Wait for the split to enter the blocking state.','line_number':79,'multiline':False]
['text':' Wait for the last oplog entry on the primary to be visible in the committed snapshot view of','line_number':82,'multiline':False]
['text':' the oplog on all secondaries to ensure that snapshot reads on the secondaries with','line_number':83,'multiline':False]
['text':' unspecified atClusterTime have read timestamp >= blockOpTime.','line_number':84,'multiline':False]
['text':' check on primary','line_number':93,'multiline':False]
['text':' check on secondaries','line_number':97,'multiline':False]
