['text':'*
 * Test that tenant migration recipient rejects conflicting recipientSyncData commands.
 *
 * @tags: [
 *   incompatible_with_macos,
 *   # Shard merge protocol will be tested by
 *   # tenant_migration_shard_merge_conflicting_recipient_sync_data_cmds.js.
 *   incompatible_with_shard_merge,
 *   requires_fcv_52,
 *   incompatible_with_windows_tls,
 *   requires_majority_read_concern,
 *   requires_persistence,
 *   serverless,
 *   requires_fcv_71,
 * ]
 ','line_number':1,'multiline':True]
['text':'*
 * Runs recipientSyncData on the given host and returns the response.
 ','line_number':48,'multiline':True]
['text':'*
 * Returns an array of currentOp entries for the TenantMigrationRecipientService instances that
 * match the given query.
 ','line_number':71,'multiline':True]
['text':' Enable the failpoint to stop the tenant migration after persisting the state doc.','line_number':80,'multiline':False]
['text':' Test migrations with different migrationIds but identical settings.','line_number':87,'multiline':False]
['text':' Enable failPoint to pause the migration just as it starts.','line_number':90,'multiline':False]
['text':' Start the conflicting recipientSyncData cmds.','line_number':94,'multiline':False]
['text':' One instance is expected as the tenantId conflict is still unresolved.','line_number':117,'multiline':False]
['text':' Check responses for both commands. One will return with','line_number':126,'multiline':False]
['text':' ErrorCodes.ConflictingOperationInProgress, and the other with a','line_number':127,'multiline':False]
['text':' TestData.stopFailPointErrorCode (a failpoint indicating that we have persisted the document).','line_number':128,'multiline':False]
['text':' One of the two instances should have been cleaned up, and therefore only one will remain.','line_number':140,'multiline':False]
['text':' Only one instance should have succeeded in persisting the state doc, other should have failed','line_number':145,'multiline':False]
['text':' with ErrorCodes.ConflictingOperationInProgress.','line_number':146,'multiline':False]
['text':' Run another recipientSyncData cmd for the tenant. Since the previous migration hasn't been','line_number':149,'multiline':False]
['text':' garbage collected, the migration is considered as active. So this command should fail with','line_number':150,'multiline':False]
['text':' ErrorCodes.ConflictingOperationInProgress.','line_number':151,'multiline':False]
['text':' Collection count should remain the same.','line_number':159,'multiline':False]
['text':'*
 * Tests that if the client runs multiple recipientSyncData commands that would start conflicting
 * migrations, only one of the migrations will start and succeed.
 ','line_number':164,'multiline':True]
['text':' Start the conflicting recipientSyncData cmds.','line_number':169,'multiline':False]
['text':' Test reusing a migrationId with different migration settings.','line_number':219,'multiline':False]
['text':' Test different tenantIds.','line_number':221,'multiline':False]
['text':' Test different donor connection strings.','line_number':234,'multiline':False]
['text':' Test different read preference.','line_number':247,'multiline':False]
