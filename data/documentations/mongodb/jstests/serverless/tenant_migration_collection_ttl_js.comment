['text':'*
 * Tests that the collection TTL is suspended during tenant migration to
 * avoid consistency errors as the data synchronization phase may operate
 * concurrently with TTL deletions.
 *
 * @tags: [
 *   incompatible_with_macos,
 *   incompatible_with_windows_tls,
 *   requires_majority_read_concern,
 *   requires_persistence,
 *   serverless,
 *   requires_fcv_71,
 * ]
 ','line_number':1,'multiline':True]
['text':' Set the delay before a donor state doc is garbage collected to be short to speed','line_number':22,'multiline':False]
['text':' up the test.','line_number':23,'multiline':False]
['text':' Set the TTL interval large enough to decrease the probability of races.','line_number':25,'multiline':False]
['text':' Allow reads on recipient before migration completes for testing.','line_number':27,'multiline':False]
['text':' Allow non-timestamped reads on donor after migration completes for testing.','line_number':29,'multiline':False]
['text':' This test relies on ttl monitor deletion to be delayed long enough to observe documents prior','line_number':36,'multiline':False]
['text':' to being deleted. That result is unintuitively achieved better with a large awaitData timeout','line_number':37,'multiline':False]
['text':' than a slow ttl monitor.','line_number':38,'multiline':False]
['text':' Timestamp to use in TTL.','line_number':52,'multiline':False]
['text':' This creates an array of tuples.','line_number':54,'multiline':False]
['text':' Create TTL index.','line_number':63,'multiline':False]
['text':' Wait for one TTL pass.','line_number':75,'multiline':False]
['text':' Use "countDocuments" instead of "count" to ensure that we get an accurate','line_number':83,'multiline':False]
['text':' count instead of an approximate count from metadata. Otherwise, the count','line_number':84,'multiline':False]
['text':' can be inaccurate if a TTL pass happens concurrently with the count call when','line_number':85,'multiline':False]
['text':' the access blocker is blocking writes. In this case, the TTL delete will fail and','line_number':86,'multiline':False]
['text':' be rolled back, but count calls before the rollback is applied will still reflect','line_number':87,'multiline':False]
['text':' the delete.','line_number':88,'multiline':False]
['text':' All documents should expire on the donor but not on the recipient.','line_number':147,'multiline':False]
['text':' Data should be consistent after the migration commits.','line_number':157,'multiline':False]
['text':' Tests that:','line_number':166,'multiline':False]
['text':' 1. At the recipient, the TTL deletions are suspended until migration is forgotten.','line_number':167,'multiline':False]
['text':' 2. At the donor, TTL deletions are suspended during blocking state. This verifies that','line_number':168,'multiline':False]
['text':'    the TTL mechanism respects the same MTAB mechanism as normal updates.','line_number':169,'multiline':False]
['text':' We start the test right after the donor TTL cycle.','line_number':184,'multiline':False]
['text':' The TTL timeout is intentionally shorter than TTL interval to let the documents to be subject','line_number':186,'multiline':False]
['text':' of TTL in the first round. It also should be long enough to let the startMigration() finish','line_number':187,'multiline':False]
['text':' before the timeout expires.','line_number':188,'multiline':False]
['text':' At a very slow machine, there is a chance that a TTL cycle happened at the donor','line_number':197,'multiline':False]
['text':' before it entered the blocking phase. This flag is set when there was a race.','line_number':198,'multiline':False]
['text':' Tests that:','line_number':205,'multiline':False]
['text':' 1. TTL is suspended at the recipient','line_number':206,'multiline':False]
['text':' 2. As there was no race with TTL cycle at the donor, TTL is suspended as well.','line_number':207,'multiline':False]
['text':' Tests that the TTL cleanup was suspended during the tenant migration.','line_number':217,'multiline':False]
['text':' After the tenant migration is aborted, the TTL cleanup is restored.','line_number':225,'multiline':False]
