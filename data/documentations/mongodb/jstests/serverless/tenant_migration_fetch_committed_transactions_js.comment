['text':'*
 * Tests that the migration recipient will retrieve committed transactions on the donor
 * with lastWriteOpTime <= the stored startApplyingOpTime. The recipient should store
 * these committed transaction entries in its own 'config.transactions' collection.
 *
 * @tags: [
 *   incompatible_with_macos,
 *   incompatible_with_windows_tls,
 *   requires_majority_read_concern,
 *   requires_persistence,
 *   serverless,
 *   requires_fcv_71,
 *   incompatible_with_shard_merge,
 * ]
 ','line_number':1,'multiline':True]
['text':' The recipient should have replaced the 'lastWriteOpTime' and 'lastWriteDate' fields.','line_number':50,'multiline':False]
['text':' Test that the client can retry the first 'commitTransaction' on the recipient.','line_number':54,'multiline':False]
['text':' We prepare the transaction so that 'abortTransaction' will update the transactions table.','line_number':94,'multiline':False]
['text':' We should later see that the recipient will not update its transactions table with this','line_number':95,'multiline':False]
['text':' entry, since we only fetch committed transactions.','line_number':96,'multiline':False]
['text':' Verify that the recipient has fetched and written the committed transaction entry','line_number':134,'multiline':False]
['text':' belonging to the migrating tenant from the donor.','line_number':135,'multiline':False]
