['text':' Tests that the data cloning phase of initial sync does not clone the change collection documents','line_number':1,'multiline':False]
['text':' and when the initial sync has completed the change collection and oplog entries are exactly same','line_number':2,'multiline':False]
['text':' in the new secondary.','line_number':3,'multiline':False]
['text':' @tags: [','line_number':4,'multiline':False]
['text':'   requires_fcv_62,','line_number':5,'multiline':False]
['text':' ]','line_number':6,'multiline':False]
['text':'','line_number':7,'multiline':False]
['text':' User id and the associated tenant id.','line_number':17,'multiline':False]
['text':' Create a connection to the primary node for the tenant.','line_number':23,'multiline':False]
['text':' Enable the change stream for the tenant.','line_number':27,'multiline':False]
['text':' Get the change collection on the primary node for the tenant.','line_number':30,'multiline':False]
['text':' The document 'mdbStockPriceDoc' is inserted before starting the initial sync. As such the','line_number':38,'multiline':False]
['text':' document 'mdbStockPriceDoc' should not be cloned in the secondary after initial sync is complete.','line_number':39,'multiline':False]
['text':' Add a new secondary to the replica set and block the initial sync after the data cloning is done.','line_number':43,'multiline':False]
['text':' Hang after the data cloning phase is completed.','line_number':46,'multiline':False]
['text':' Wait for the cloning phase to complete. The cloning phase should not clone documents of the','line_number':52,'multiline':False]
['text':' change collection from the primary.','line_number':53,'multiline':False]
['text':' The document 'tslaStockPriceDoc' is inserted in the primary after the data cloning phase has','line_number':65,'multiline':False]
['text':' completed, as such this should be inserted in the secondary's change change collection.','line_number':66,'multiline':False]
['text':' Unblock the initial sync process.','line_number':70,'multiline':False]
['text':' Wait for the initial sync to complete.','line_number':74,'multiline':False]
['text':' Create a connection to the secondary node for the tenant.','line_number':77,'multiline':False]
['text':' Verify that the document 'mdbStockPriceDoc' does not exist and the document 'tslaStockPriceDoc'','line_number':81,'multiline':False]
['text':' exists in the secondary's change collection.','line_number':82,'multiline':False]
['text':' Get the timestamp of the first and the last entry from the secondary's oplog.','line_number':90,'multiline':False]
['text':' The change collection gets created at the data cloning phase and documents are written to the','line_number':96,'multiline':False]
['text':' oplog only after the data cloning is done. And so, the change collection already exists in place','line_number':97,'multiline':False]
['text':' to capture oplog entries. As such, the change collection entries and the oplog entries for','line_number':98,'multiline':False]
['text':' timestamp range ('startOplogTimestamp', 'endOplogTimestamp'] must be the same.','line_number':99,'multiline':False]
['text':' The state of the change collection after the initial sync is not consistent with the primary.','line_number':106,'multiline':False]
['text':' This is because the change collection's data is never cloned to the secondary, only it's creation','line_number':107,'multiline':False]
['text':' is cloned. As such, we will skip the db hash check on the change collection.','line_number':108,'multiline':False]
['text':' signal ','line_number':109,'multiline':True]
['text':' forRestart ','line_number':109,'multiline':True]
