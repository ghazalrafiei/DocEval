['text':'*
 * Tests that tenant migration donor reliably unblocks blocked reads and writes when the migration
 * completes or is interrupted when the state doc collection is dropped.
 *
 * @tags: [
 *   incompatible_with_macos,
 *   incompatible_with_windows_tls,
 *   requires_majority_read_concern,
 *   requires_persistence,
 *   serverless,
 *   requires_fcv_71,
 * ]
 ','line_number':1,'multiline':True]
['text':' Disallow chaining to force both secondaries to sync from the primary. One of the test','line_number':60,'multiline':False]
['text':' cases below disables replication on one of the secondaries, with chaining it would','line_number':61,'multiline':False]
['text':' effectively disable replication on both secondaries, causing the migration to hang since','line_number':62,'multiline':False]
['text':' majority write concern is unsatsifiable.','line_number':63,'multiline':False]
['text':' Run a read command against one of the secondaries, and wait for it to block.','line_number':109,'multiline':False]
['text':' Disable snapshotting on that secondary, and wait for the migration to abort and be garbage','line_number':119,'multiline':False]
['text':' collected. That way the secondary is guaranteed to observe the write to set expireAt before','line_number':120,'multiline':False]
['text':' learning that the abortOpTime has been majority committed.','line_number':121,'multiline':False]
['text':' donorNodes ','line_number':128,'multiline':True]
['text':' recipientNodes ','line_number':128,'multiline':True]
['text':' Run a read command against one of the secondaries, and wait for it to block.','line_number':160,'multiline':False]
['text':' Disable snapshotting on that secondary, and wait for the migration to commit and be garbage','line_number':170,'multiline':False]
['text':' collected. That way the secondary is guaranteed to observe the write to set expireAt before','line_number':171,'multiline':False]
['text':' learning that the commitOpTime has been majority committed.','line_number':172,'multiline':False]
['text':' donorNodes ','line_number':179,'multiline':True]
['text':' recipientNodes ','line_number':179,'multiline':True]
['text':' Run a read command and a write command against the primary, and wait for them to block.','line_number':209,'multiline':False]
['text':' Cannot delete the donor state doc since it has not been marked as garbage collectable.','line_number':223,'multiline':False]
['text':' Cannot mark the state doc as garbage collectable before the migration commits or aborts.','line_number':226,'multiline':False]
['text':' Can drop the state doc collection but this will not cause all blocked reads and writes to','line_number':230,'multiline':False]
['text':' hang.','line_number':231,'multiline':False]
