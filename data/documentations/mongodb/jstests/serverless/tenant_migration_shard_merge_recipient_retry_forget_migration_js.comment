['text':'*
 * Tests that a recipientForgetMigration is received after the recipient state doc has been deleted
 * for shard merge protocol.
 *
 * @tags: [
 *   incompatible_with_macos,
 *   incompatible_with_windows_tls,
 *   requires_majority_read_concern,
 *   requires_persistence,
 *   requires_shard_merge,
 *   serverless,
 *   requires_fcv_71,
 * ]
 ','line_number':1,'multiline':True]
['text':' Not doing a migration before writing to the recipient to mimic that a migration has completed and','line_number':32,'multiline':False]
['text':' the state doc has been garbage collected.','line_number':33,'multiline':False]
['text':' Run a delayed/retried recipientForgetMigration command after the state doc has been deleted.','line_number':63,'multiline':False]
['text':' Block the recipient before it updates the state doc with an expireAt field.','line_number':66,'multiline':False]
['text':' Test that we can still read from the recipient.','line_number':76,'multiline':False]
['text':' Step up a new recipient primary before the state doc is truly marked as garbage collectable.','line_number':82,'multiline':False]
['text':' The new primary should skip all tenant migration steps but wait for another','line_number':86,'multiline':False]
['text':' recipientForgetMigration command.','line_number':87,'multiline':False]
['text':' Test that we can still read from the recipient.','line_number':93,'multiline':False]
['text':' Test that we can retry the recipientForgetMigration on the new primary.','line_number':96,'multiline':False]
