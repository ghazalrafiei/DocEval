['text':'*
 * Tests that the donor
 * - does not rejects reads with atClusterTime/afterClusterTime >= blockOpTime reads and
 * linearizable reads after the split aborts.
 *
 * @tags: [
 *   incompatible_with_eft,
 *   incompatible_with_macos,
 *   incompatible_with_windows_tls,
 *   requires_majority_read_concern,
 *   requires_persistence,
 *   serverless,
 *   requires_fcv_63
 * ]
 ','line_number':1,'multiline':True]
['text':'*
 * Tests that after the split abort, the donor does not reject linearizable reads or reads with
 * atClusterTime/afterClusterTime >= blockOpTime.
 ','line_number':30,'multiline':True]
['text':' Force the donor to preserve all snapshot history to ensure that transactional reads do not','line_number':76,'multiline':False]
['text':' fail with TransientTransactionError "Read timestamp is older than the oldest available','line_number':77,'multiline':False]
['text':' timestamp".','line_number':78,'multiline':False]
['text':' Wait for the last oplog entry on the primary to be visible in the committed snapshot view of','line_number':97,'multiline':False]
['text':' the oplog on all the secondaries. This is to ensure that snapshot reads on secondaries with','line_number':98,'multiline':False]
['text':' unspecified atClusterTime have read timestamp >= abortTimestamp.','line_number':99,'multiline':False]
