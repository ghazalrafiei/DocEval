['text':'*
 * Tests that the recipient only rejects with writes between when cloning is done and when it
 * receives and reaches the rejectReadsBeforeTimestamp since no read is allowed in that time window.
 *
 * @tags: [
 *   incompatible_with_macos,
 *   incompatible_with_windows_tls,
 *   requires_majority_read_concern,
 *   requires_persistence,
 *   serverless,
 *   # The error code for a rejected recipient command invoked during the reject phase was changed.
 *   requires_fcv_71,
 * ]
 ','line_number':1,'multiline':True]
['text':' Write before cloning is done.','line_number':69,'multiline':False]
['text':' Write after cloning is done should fail with IllegalOperation since no read is allowed.','line_number':77,'multiline':False]
['text':' Write after the recipient applied data past the rejectReadsBeforeTimestamp.','line_number':84,'multiline':False]
['text':' Write after the migration committed.','line_number':90,'multiline':False]
['text':' Write after the migration is forgotten.','line_number':95,'multiline':False]
['text':' Force the recipient to abort the migration right before it responds to the first','line_number':121,'multiline':False]
['text':' recipientSyncData (i.e. before it receives returnAfterReachingTimestamp in the second','line_number':122,'multiline':False]
['text':' recipientSyncData).','line_number':123,'multiline':False]
['text':' Write after the migration aborted.','line_number':131,'multiline':False]
['text':' Write after the migration is forgotten.','line_number':137,'multiline':False]
['text':' Force the donor to abort the migration right after the recipient responds to the second','line_number':164,'multiline':False]
['text':' recipientSyncData.','line_number':165,'multiline':False]
['text':' Write after the migration aborted.','line_number':172,'multiline':False]
['text':' Write after the migration is forgotten.','line_number':177,'multiline':False]
