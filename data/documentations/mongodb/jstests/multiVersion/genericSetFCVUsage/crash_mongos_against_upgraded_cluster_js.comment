['text':' A mongos participating in a cluster that has been upgraded both a binary and FCV version above it','line_number':1,'multiline':False]
['text':' should crash.','line_number':2,'multiline':False]
['text':'','line_number':3,'multiline':False]
['text':' This kind of scenario can happen when a user forgets to upgrade the mongos binary and then calls','line_number':4,'multiline':False]
['text':' setFCV(upgrade), leaving the still downgraded mongos unable to communicate. Rather than the','line_number':5,'multiline':False]
['text':' mongos logging incompatible server version errors endlessly, we've chosen to crash it.','line_number':6,'multiline':False]
['text':' Assert that a mongos using the downgraded binary version will crash when connecting to a','line_number':17,'multiline':False]
['text':' cluster running on the 'latest' binary version with the 'latest' FCV.','line_number':18,'multiline':False]
['text':' Assert that a mongos using the downgraded binary version will successfully connect to a','line_number':24,'multiline':False]
['text':' cluster running on the 'latest' binary version with the downgraded FCV.','line_number':25,'multiline':False]
['text':' wait until all config server nodes are downgraded','line_number':29,'multiline':False]
['text':' awaitReplication waits for all secondaries to replicate primary's latest opTime which will','line_number':30,'multiline':False]
['text':' guarantee propagation of the write to the admin.system.version collection which triggers the','line_number':31,'multiline':False]
['text':' change FCV.','line_number':32,'multiline':False]
['text':' Ensure that the 'downgradeVersion' binary mongos can perform reads and writes to the shards','line_number':42,'multiline':False]
['text':' in the cluster.','line_number':43,'multiline':False]
['text':' Assert that the 'downgradeVersion' binary mongos will crash after the cluster is upgraded to','line_number':49,'multiline':False]
['text':' 'latestFCV'.','line_number':50,'multiline':False]
