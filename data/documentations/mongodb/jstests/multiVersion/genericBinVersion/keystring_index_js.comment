['text':'*
 * Regression test that ensure there have been no KeyString encoding changes between last-lts the
 * current version. Has the following procedure:
 * - Start mongod with the last-lts version.
 * - For each index type, create a new collection, insert documents, and create an index.
 * - Shutdown mongod and restart with the latest version.
 * - Run validate.
 * - Drop all collections.
 * - Recreate all indexes.
 * - Shuwdown mongod and restart with the last-lts version.
 * - Run validate.
 *
 * The following index types are tested:
 * - btree
 * - 2d
 * - 2dsphere
 * - text
 * - hashed*
 * - wildcard*
 * * These indexes are only created as v2 and non-unique because v1 does not support these features.
 *
 * For each index type, a v1 unique, v2 unique, v1 non-unique and v2 non-unique index
 * is considered except for hashed and wildcard, which only consider the v2 non-unique case.
 ','line_number':1,'multiline':True]
['text':' This is the name of the index.','line_number':31,'multiline':False]
['text':' This function is called to create documents, which are then inserted into the collection.','line_number':33,'multiline':False]
['text':' This is the index key specification.','line_number':39,'multiline':False]
['text':' This optional parameter specifies extra options to give to the createIndex helper.','line_number':41,'multiline':False]
['text':' e.g. collection.createIndexes(spec, createIndexOptions)','line_number':42,'multiline':False]
['text':' -----','line_number':105,'multiline':False]
['text':' We will first start up a last-lts version mongod, populate the database, upgrade, then','line_number':120,'multiline':False]
['text':' validate.','line_number':121,'multiline':False]
['text':' Restart the mongod with the latest binary version on the old version's data files.','line_number':136,'multiline':False]
['text':' Validate all the indexes.','line_number':145,'multiline':False]
['text':' Next, we will repopulate the database with the latest version then downgrade and run validate.','line_number':148,'multiline':False]
['text':' Populate the database using the config specified by the indexTypes array.','line_number':166,'multiline':False]
['text':' Create a new collection and index for each indexType in the array.','line_number':168,'multiline':False]
['text':' Try unique and non-unique.','line_number':170,'multiline':False]
['text':' Try index-version 1 and 2.','line_number':172,'multiline':False]
['text':' We only run V2 non-unique for hashed and wildCard because they don't exist in','line_number':176,'multiline':False]
['text':' v1.','line_number':177,'multiline':False]
['text':' Assert that the correct index type was created.','line_number':209,'multiline':False]
['text':' Drop all user created collections in a database.','line_number':217,'multiline':False]
['text':' Insert numDocs documents into the collection by calling getDoc.','line_number':246,'multiline':False]
['text':' NOTE: Documents returned from getDoc are inserted more than once.','line_number':247,'multiline':False]
['text':' fibonacci numbers are used because the fibonnaci sequence is a','line_number':250,'multiline':False]
['text':' exponentially growing sequence that allows us to create documents','line_number':251,'multiline':False]
['text':' that are duplicated X number of times, for many small values of X and','line_number':252,'multiline':False]
['text':' a few large values of X.','line_number':253,'multiline':False]
['text':' Inserts numDocs into the collection by calling getDoc.','line_number':264,'multiline':False]
['text':' NOTE: getDoc is called exactly numDocs times.','line_number':265,'multiline':False]
