['text':'*
 * Test that variable-type fields are found correctly in upgraded timeseries collections with dirty
 * data.
 *
 * Specifically, tests handling of the 'TimeseriesBucketsMayHaveMixedSchemaData' metadata flag that
 * is set in the 5.0 -> 6.0 upgrade. The test inserts data into a timeseries collection on 5.0, then
 * upgrades through every following version to ensure that the data is still queryable.
 ','line_number':1,'multiline':True]
['text':' Note that this list will need to be kept up to date as versions are added/dropped.','line_number':13,'multiline':False]
['text':'
 * Creates a collection, populates it with `docs`, runs the `query` and ensures that the result set
 * is equal to `results`. Also checks that the bounds at `path` formed by the min & max of the
 * control values for the path `path` are equal to `bounds`. In order to do this we assert that only
 * one bucket was created.
 ','line_number':20,'multiline':True]
['text':' Setup our DB & our collections.','line_number':41,'multiline':False]
['text':' Construct our pipelines for later use.','line_number':49,'multiline':False]
['text':' Populate the collection with documents.','line_number':54,'multiline':False]
['text':' We may need to upgrade through several versions to reach the latest. This ensures that each','line_number':57,'multiline':False]
['text':' subsequent upgrade preserves the mixed-schema data upon upgrading.','line_number':58,'multiline':False]
['text':' Set the fcv if needed.','line_number':63,'multiline':False]
['text':' We failed due to requiring 'confirm: true' on the command. This will only','line_number':67,'multiline':False]
['text':' occur on 7.0+ nodes that have 'enableTestCommands' set to false. Retry the','line_number':68,'multiline':False]
['text':' setFCV command with 'confirm: true'.','line_number':69,'multiline':False]
['text':' We need to ensure that the FCV is committed to the oplog before we shut down.','line_number':76,'multiline':False]
['text':' Otherwise the nodes may start up post-upgrade and check FCV before reconstructing the','line_number':77,'multiline':False]
['text':' journal, which will raise an invalid version error because they will see the old FCV.','line_number':78,'multiline':False]
['text':' Confirm expected results.','line_number':85,'multiline':False]
['text':' Check that we only have one bucket.','line_number':89,'multiline':False]
['text':' Check that the bounds are what we expect.','line_number':92,'multiline':False]
['text':' 'a.b' is missing in the bounds even though it appears in the events.','line_number':99,'multiline':False]
['text':' 'a.b' is missing in the bounds even though it appears in the events. The bounds it is missing','line_number':106,'multiline':False]
['text':' in are arrays on both sides.','line_number':107,'multiline':False]
['text':' 'a.b' appears in the bounds which are arrays. But it doesn't appear in every pair of bounds.','line_number':114,'multiline':False]
['text':' And the relevant value of 'a.b' does not appear in the bounds despite being present in the','line_number':115,'multiline':False]
['text':' events.','line_number':116,'multiline':False]
['text':' 'a.b' appears in the bounds but not the relevant side of the bounds.','line_number':123,'multiline':False]
['text':' We query the upper bound for 'a.b', but 'a.b' only appears in the lower bound.','line_number':134,'multiline':False]
['text':' We query the lower bound for 'a.b', but 'a.b' only appears in the upper bound.','line_number':145,'multiline':False]
['text':' 'a.b' appears in the bounds but the matching values appear in neither side of the bounds.','line_number':156,'multiline':False]
['text':' 'a.0' doesn't appear in the bounds.','line_number':163,'multiline':False]
['text':' We test arrays wrapping objects and objects wrapping arrays as different ways of achieving','line_number':177,'multiline':False]
['text':' multiple bounds on 'a.b'.','line_number':178,'multiline':False]
