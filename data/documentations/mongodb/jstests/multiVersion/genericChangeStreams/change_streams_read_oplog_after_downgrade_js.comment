['text':'*
 * Verifies that a change stream which is resumed on a downgraded binary does not crash
 * the server, even when reading oplog entries which the downgraded binary may not understand.
 *
 * @tags: [uses_change_streams, requires_replication]
 ','line_number':1,'multiline':True]
['text':' Checking UUID consistency uses cached connections, which are not valid across restarts or','line_number':9,'multiline':False]
['text':' stepdowns.','line_number':10,'multiline':False]
['text':' Start a sharded cluster with latest binaries.','line_number':16,'multiline':False]
['text':'  Define a set of standard write tests. These tests will be run for every new version and should','line_number':39,'multiline':False]
['text':'  not be modified. Each test case should have a function with field name 'generateOpLogEntry'','line_number':40,'multiline':False]
['text':'  which takes a collection object as input.','line_number':41,'multiline':False]
['text':' Basic insert case.','line_number':43,'multiline':False]
['text':' Op-style update.','line_number':59,'multiline':False]
['text':' Replacement style update.','line_number':74,'multiline':False]
['text':' Pipeline style update (delta type diff).','line_number':84,'multiline':False]
['text':' Pipeline style update (replacement style diff).','line_number':105,'multiline':False]
['text':' Basic delete.','line_number':116,'multiline':False]
['text':' Basic createIndex.','line_number':126,'multiline':False]
['text':' Basic dropIndex.','line_number':136,'multiline':False]
['text':' Basic collMod.','line_number':146,'multiline':False]
['text':' Basic reshardCollection.','line_number':161,'multiline':False]
['text':' The list of test cases against which to test the downgraded change stream. Any time a change is','line_number':172,'multiline':False]
['text':' made to the existing oplog format, or whenever a new oplog entry type is created, a test-case','line_number':173,'multiline':False]
['text':' should be added here which generates an example of the new or modified entry.','line_number':174,'multiline':False]
['text':' Concatenate the standard tests with the custom latest-version tests to produce the final set of','line_number':177,'multiline':False]
['text':' test-cases that will be run.','line_number':178,'multiline':False]
['text':' The list of all the change stream variations against which the above test cases need to be run.','line_number':181,'multiline':False]
['text':' Each entry should have function with field name 'watch' which opens a new change stream.','line_number':182,'multiline':False]
['text':' With all the options enabled.','line_number':216,'multiline':False]
['text':'*
 * For each test case and change stream variation, generates the oplog entries to be tested and
 * creates an augmented test-case containing a resume token which marks the start of the test, and a
 * sentinel entry that marks the end of the test. These will be used post-downgrade to run each of
 * the test cases in isolation.
 ','line_number':232,'multiline':True]
['text':' Find the oplog entry for the document inserted above, and return its timestamp.','line_number':243,'multiline':False]
['text':' We write a sentinel entry before each test case so that the resumed changestreams will have a','line_number':251,'multiline':False]
['text':' known point at which to stop while running each test.','line_number':252,'multiline':False]
['text':' Capture the 'resumeToken' when the sentinel entry is found. We use the token to resume','line_number':260,'multiline':False]
['text':' the stream rather than the 'testStartTime' because resuming from a token adds more stages','line_number':261,'multiline':False]
['text':' to the $changeStream pipeline, which increases our coverage.','line_number':262,'multiline':False]
['text':' Start a change stream on the sentinel entry for each test case.','line_number':279,'multiline':False]
['text':' The termination for the change stream of the current test case will be the','line_number':283,'multiline':False]
['text':' sentinel entry for the next test case.','line_number':284,'multiline':False]
['text':' We copy this for debugging purposes only.','line_number':286,'multiline':False]
['text':' Run the test case's 'generateOpLogEntry' function, which will create the actual oplog','line_number':292,'multiline':False]
['text':' entry to be tested.','line_number':293,'multiline':False]
['text':' Insert a sentinel to separate this test-case from the next.','line_number':296,'multiline':False]
['text':'*
 * Validates that resuming each of the change stream will not crash the server. The 'changeStreams'
 * should be an array and each entry should have fields 'watch', 'resumeToken' and
 * 'endSentinelEntry'.
 ','line_number':302,'multiline':True]
['text':' Keep calling 'getmore' until the sentinal entry for the next test is found or until the','line_number':312,'multiline':False]
['text':' change stream throws an error.','line_number':313,'multiline':False]
['text':' Validate that the error returned was not a consequence of server crash.','line_number':325,'multiline':False]
['text':' Obtain the list of change stream tests and the associated tokens from which to resume after the','line_number':336,'multiline':False]
['text':' cluster has been downgraded.','line_number':337,'multiline':False]
['text':' Downgrade the entire cluster to the 'downgradeVersion' binVersion.','line_number':343,'multiline':False]
['text':' Refresh our reference to the sharded collection post-downgrade.','line_number':348,'multiline':False]
['text':' Resume all the change streams that were created on latest version and validate that the','line_number':351,'multiline':False]
['text':' change stream doesn't crash the server after downgrade.','line_number':352,'multiline':False]
['text':' Test resuming change streams after downgrading the cluster to 'last-continuous'.','line_number':356,'multiline':False]
['text':' Upgrade the entire cluster back to the latest version.','line_number':359,'multiline':False]
['text':' Test resuming change streams after downgrading the cluster to 'last-lts'.','line_number':364,'multiline':False]
