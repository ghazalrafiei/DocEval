['text':'*
 * Util functions around resharding in fsm workloads.
 ','line_number':1,'multiline':True]
['text':'*
 * Run reshardCollection until reaching the expected times of resharding.
 * @param {Object} $config FSM workload config.
 * @param {*} db DB connection.
 * @param {String} collName Collection name to run resharding on.
 * @param {*} connCache connections to mongo.
 * @param {Boolean} sameKeyResharding Whether or not to do a same-key resharding.
 ','line_number':5,'multiline':True]
['text':' reshardingMinimumOperationDurationMillis is set to 30 seconds when there are stepdowns.','line_number':14,'multiline':False]
['text':' So in order to limit the overall time for the test, we limit the number of resharding','line_number':15,'multiline':False]
['text':' operations to maxReshardingExecutions.','line_number':16,'multiline':False]
['text':' Race to retry.','line_number':44,'multiline':False]
['text':' Unexpected error.','line_number':48,'multiline':False]
['text':' If resharding fails with SnapshotUnavailable, then $config will be incorrect. But','line_number':56,'multiline':False]
['text':' its fine since reshardCollection will succeed if the new shard key matches the','line_number':57,'multiline':False]
['text':' existing one.','line_number':58,'multiline':False]
['text':' Without explicitly refreshing mongoses, retries of retryable write statements','line_number':66,'multiline':False]
['text':' would always be routed to the donor shards. Non-deterministically refreshing','line_number':67,'multiline':False]
['text':' enables us to have test coverage for retrying against both the donor and','line_number':68,'multiline':False]
['text':' recipient shards.','line_number':69,'multiline':False]
