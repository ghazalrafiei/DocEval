['text':' workloads = list of workload filenames','line_number':6,'multiline':False]
['text':' args.tid = the thread identifier','line_number':7,'multiline':False]
['text':' args.tenantId = the tenant id','line_number':8,'multiline':False]
['text':' args.data = map of workload -> 'this' parameter passed to the FSM state functions','line_number':9,'multiline':False]
['text':' args.host = the address to make a new connection to','line_number':10,'multiline':False]
['text':' args.latch = CountDownLatch instance for starting all threads','line_number':11,'multiline':False]
['text':' args.dbName = the database name','line_number':12,'multiline':False]
['text':' args.collName = the collection name','line_number':13,'multiline':False]
['text':' args.cluster = connection strings for all cluster nodes (see cluster.js for format)','line_number':14,'multiline':False]
['text':' args.clusterOptions = the configuration of the cluster','line_number':15,'multiline':False]
['text':' args.seed = seed for the random number generator','line_number':16,'multiline':False]
['text':' args.errorLatch = CountDownLatch instance that threads count down when they error','line_number':17,'multiline':False]
['text':' args.sessionOptions = the options to start a session with','line_number':18,'multiline':False]
['text':' run = callback that takes a map of workloads to their associated $config','line_number':19,'multiline':False]
['text':' The global 'TestData' object may still be undefined if the concurrency suite isn't being','line_number':28,'multiline':False]
['text':' run by resmoke.py (e.g. if it is being run via a parallel shell in the backup/restore','line_number':29,'multiline':False]
['text':' tests).','line_number':30,'multiline':False]
['text':' Running a callback passed through testData before running fsm worker theads.','line_number':34,'multiline':False]
['text':' Can be added to yml files as the following example:','line_number':35,'multiline':False]
['text':' fsmPreOverridesLoadedCallback: '','line_number':36,'multiline':False]
['text':'     testingReplication = true;','line_number':37,'multiline':False]
['text':'     await import("jstests/libs/override_methods/network_error_and_txn_override.js");','line_number':38,'multiline':False]
['text':'     ...','line_number':39,'multiline':False]
['text':' '','line_number':40,'multiline':False]
['text':' The implicit database connection created within the thread's scope','line_number':46,'multiline':False]
['text':' is unneeded, so forcibly clean it up.','line_number':47,'multiline':False]
['text':' Retry operations that fail due to in-progress background operations. Load this early','line_number':64,'multiline':False]
['text':' so that later overrides can be retried.','line_number':65,'multiline':False]
['text':' JavaScript objects backed by C++ objects (e.g. BSON values from a command','line_number':73,'multiline':False]
['text':' response) do not serialize correctly when passed through the Thread','line_number':74,'multiline':False]
['text':' constructor. To work around this behavior, we instead pass a stringified form','line_number':75,'multiline':False]
['text':' of the JavaScript object through the Thread constructor and use eval()','line_number':76,'multiline':False]
['text':' to rehydrate it.','line_number':77,'multiline':False]
['text':' The initialClusterTime property was removed from SessionOptions in a','line_number':81,'multiline':False]
['text':' later revision of the Driver's specification, so we remove the property','line_number':82,'multiline':False]
['text':' and call advanceClusterTime() ourselves.','line_number':83,'multiline':False]
['text':' The initialOperationTime property was removed from SessionOptions in a','line_number':91,'multiline':False]
['text':' later revision of the Driver's specification, so we remove the property','line_number':92,'multiline':False]
['text':' and call advanceOperationTime() ourselves.','line_number':93,'multiline':False]
['text':' Unset the explicit read preference so set_read_preference_secondary.js can do','line_number':100,'multiline':False]
['text':' the right thing based on the DB.','line_number':101,'multiline':False]
['text':' We import set_read_preference_secondary.js in order to avoid running','line_number':104,'multiline':False]
['text':' commands against the "admin" and "config" databases via mongos with','line_number':105,'multiline':False]
['text':' readPreference={mode: "secondary"} when there's only a single node in','line_number':106,'multiline':False]
['text':' the CSRS.','line_number':107,'multiline':False]
['text':' In sharded environments, mongos is acting as a proxy for the mongo shell and','line_number':126,'multiline':False]
['text':' therefore has a different outbound port than the 'whatsmyuri' command returns.','line_number':127,'multiline':False]
['text':' Operations that run after a "dropDatabase" command has been issued may fail with','line_number':173,'multiline':False]
['text':' a "DatabaseDropPending" error response if they would create a new collection on','line_number':174,'multiline':False]
['text':' that database while we're waiting for a majority of nodes in the replica set to','line_number':175,'multiline':False]
['text':' confirm it has been dropped. We load the','line_number':176,'multiline':False]
['text':' implicitly_retry_on_database_drop_pending.js file to make it so that the clients','line_number':177,'multiline':False]
['text':' started by the concurrency framework automatically retry their operation in the','line_number':178,'multiline':False]
['text':' face of this particular error response.','line_number':179,'multiline':False]
['text':' to normalize','line_number':190,'multiline':False]
['text':' Copy any modifications that were made to $config.data','line_number':192,'multiline':False]
['text':' during the setup function of the workload (see caveat','line_number':193,'multiline':False]
['text':' below).','line_number':194,'multiline':False]
['text':' XXX: Changing the order of extend calls causes problems','line_number':196,'multiline':False]
['text':' for workloads that reference $super.','line_number':197,'multiline':False]
['text':' Suppose you have workloads A and B, where workload B extends','line_number':198,'multiline':False]
['text':' workload A. The $config.data of workload B can define a','line_number':199,'multiline':False]
['text':' function that closes over the $config object of workload A','line_number':200,'multiline':False]
['text':' (known as $super to workload B). This reference is lost when','line_number':201,'multiline':False]
['text':' the config object is serialized to BSON, which results in','line_number':202,'multiline':False]
['text':' undefined variables in the derived workload.','line_number':203,'multiline':False]
['text':' Object.extend() defines all properties added to the destination object as','line_number':207,'multiline':False]
['text':' configurable, enumerable, and writable. To prevent workloads from changing','line_number':208,'multiline':False]
['text':' the iterations and threadCount properties in their state functions, we redefine','line_number':209,'multiline':False]
['text':' them here as non-configurable and non-writable.','line_number':210,'multiline':False]
['text':' Converts any exceptions to a return status. In order for the','line_number':233,'multiline':False]
['text':' parent thread to call countDown() on our behalf, we must throw','line_number':234,'multiline':False]
['text':' an exception. Nothing prior to (and including) args.latch.countDown()','line_number':235,'multiline':False]
['text':' should be wrapped in a try/catch statement.','line_number':236,'multiline':False]
['text':' wait for all threads to start','line_number':238,'multiline':False]
['text':' Kill this worker thread's session to ensure any possible idle cursors left open by','line_number':254,'multiline':False]
['text':' the workload are closed.','line_number':255,'multiline':False]
['text':' TODO SERVER-74993: Remove this.','line_number':256,'multiline':False]
['text':' Ignore errors from killSessions.','line_number':263,'multiline':False]
['text':' Avoid retention of connection object','line_number':267,'multiline':False]
