['text':'*
     * Calls 'func' with the print() function overridden to be a no-op.
     *
     * This function is useful for silencing JavaScript backtraces that would otherwise be logged
     * from doassert() being called, even when the JavaScript exception is ultimately caught and
     * handled.
     ','line_number':5,'multiline':True]
['text':' Returns if the code is one that could come from a session being killed.','line_number':22,'multiline':False]
['text':' Returns true if the transaction can be retried with a higher transaction number after the','line_number':27,'multiline':False]
['text':' given error.','line_number':28,'multiline':False]
['text':' Don't retry the entire transaction on commit errors that aren't labeled as transient','line_number':35,'multiline':False]
['text':' transaction errors because it's unknown if the commit succeeded. commitTransaction is','line_number':36,'multiline':False]
['text':' individually retryable and should be retried at a lower level (e.g.','line_number':37,'multiline':False]
['text':' network_error_and_txn_override.js or commitTransactionWithRetries()), so any','line_number':38,'multiline':False]
['text':' error that reached here must not be transient.','line_number':39,'multiline':False]
['text':' A network error before commit is considered a transient txn error. Network errors during','line_number':46,'multiline':False]
['text':' commit should be handled at the same level as retries of retryable writes.','line_number':47,'multiline':False]
['text':' Commits the transaction active on the given session, retrying on killed session errors if','line_number':60,'multiline':False]
['text':' configured to do so. Also retries commitTransaction on FailedToSatisfyReadPreference error.','line_number':61,'multiline':False]
['text':' Throws if the commit fails and cannot be retried.','line_number':62,'multiline':False]
['text':' If commit fails with a killed session code, the commit must be retried because it is','line_number':67,'multiline':False]
['text':' unknown if the interrupted commit succeeded. This is safe because commitTransaction','line_number':68,'multiline':False]
['text':' is a retryable write.','line_number':69,'multiline':False]
['text':' Use assert.commandWorked() because it throws an exception in the format expected by','line_number':89,'multiline':False]
['text':' the caller of this function if the commit failed. Committing may fail with a','line_number':90,'multiline':False]
['text':' transient error that can be retried on at a higher level, so suppress unnecessary','line_number':91,'multiline':False]
['text':' logging.','line_number':92,'multiline':False]
['text':' Use a "signature" value that won't typically match a value assigned in normal use. This way','line_number':101,'multiline':False]
['text':' the wtimeout set by this override is distinguishable in the server logs.','line_number':102,'multiline':False]
['text':'*
     * Runs 'func' inside of a transaction started with 'txnOptions', and automatically retries
     * until it either succeeds or the server returns a non-TransientTransactionError error
     * response. If retryOnKilledSession is true, the transaction will be automatically retried on
     * error codes that may come from a killed session as well. There is a probability of
     * 'prepareProbability' that the transaction is prepared before committing.
     *
     * The caller should take care to ensure 'func' doesn't modify any captured variables in a
     * speculative fashion where calling it multiple times would lead to unintended behavior. The
     * transaction started by the withTxnAndAutoRetry() function is only known to have committed
     * after the withTxnAndAutoRetry() function returns.
     ','line_number':105,'multiline':True]
['text':' Committing a manually prepared transaction isn't currently supported when sessions might','line_number':127,'multiline':False]
['text':' be killed.','line_number':128,'multiline':False]
['text':' We need to call abortTransaction_forTesting() in order to update the mongo','line_number':161,'multiline':False]
['text':' shell's state such that it agrees no transaction is currently in progress on','line_number':162,'multiline':False]
['text':' this session.','line_number':163,'multiline':False]
['text':' The transaction may have implicitly been aborted by the server or killed by','line_number':164,'multiline':False]
['text':' the kill_session helper and will therefore return a','line_number':165,'multiline':False]
['text':' NoSuchTransaction/Interrupted error code.','line_number':166,'multiline':False]
