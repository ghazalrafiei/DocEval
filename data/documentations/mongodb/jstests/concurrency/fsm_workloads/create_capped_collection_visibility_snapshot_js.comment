['text':'*
 * create_capped_collection_visibility_snapshot.js
 *
 * Repeatedly creates a capped collection, while concurrent readers try to establish a capped
 * visibility snapshot.
 *
 * @tags: [
 *  requires_capped,
 *  # This test works on a capped collection, which do not support sharding.
 *  assumes_unsharded_collection,
 * ]
 ','line_number':1,'multiline':True]
['text':' Use the workload name as a prefix for the collection name,','line_number':17,'multiline':False]
['text':' since the workload name is assumed to be unique.','line_number':18,'multiline':False]
['text':' multiple of 256; larger than 4096 default','line_number':26,'multiline':False]
['text':' Avoid concurrency issues with two threads attempting to drop and recreate the same','line_number':38,'multiline':False]
['text':' collection simultaneously. Limit DDL activity on one collection to a single thread.','line_number':39,'multiline':False]
['text':'','line_number':40,'multiline':False]
['text':' If we allow multiple threads to interact with the same collection the document insert','line_number':41,'multiline':False]
['text':' performed at the end could potentially create an uncapped collection if another','line_number':42,'multiline':False]
['text':' thread just dropped the collection.','line_number':43,'multiline':False]
['text':' We temporarily reduce the query yield iterations to force yield/restore on getMore.','line_number':81,'multiline':False]
