['text':'*
 * findAndModify_update_grow.js
 *
 * Each thread inserts a single document into a collection, and then
 * repeatedly performs the findAndModify command. Checks that document
 * moves don't happen and that large changes in document size are handled
 * correctly.
 ','line_number':1,'multiline':True]
['text':' Use the workload name as the field name (since it is assumed','line_number':17,'multiline':False]
['text':' to be unique) to avoid any potential issues with large keys','line_number':18,'multiline':False]
['text':' and indexes on the collection.','line_number':19,'multiline':False]
['text':' Use 32-bit integer for representing 'length' property','line_number':27,'multiline':False]
['text':' to ensure $mul does integer multiplication','line_number':28,'multiline':False]
['text':' When the size of the document starts to near the 16MB limit,','line_number':45,'multiline':False]
['text':' start over with a new document','line_number':46,'multiline':False]
['text':' 4MB ','line_number':47,'multiline':True]
['text':' Get the DiskLoc of the document before its potential move','line_number':51,'multiline':False]
['text':' fetch document of smallest size','line_number':55,'multiline':False]
['text':' Increase the length of the 'findAndModify_update_grow' string','line_number':59,'multiline':False]
['text':' to double the size of the overall document','line_number':60,'multiline':False]
['text':' fetch document of smallest size','line_number':71,'multiline':False]
['text':' Get the DiskLoc of the document after its potential move','line_number':92,'multiline':False]
['text':' Even though the document has at least doubled in size, the document','line_number':96,'multiline':False]
['text':' must never move.','line_number':97,'multiline':False]
