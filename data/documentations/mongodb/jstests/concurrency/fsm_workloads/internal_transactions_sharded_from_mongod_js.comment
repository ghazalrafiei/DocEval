['text':'*
 * Runs insert, update, delete and findAndModify commands against a sharded collection inside
 * single-shard and cross-shard internal transactions started on a shard using all the available
 * client session settings. Only runs on sharded clusters.
 *
 * @tags: [
 *  requires_fcv_60,
 *  requires_sharding,
 *  uses_transactions,
 *  antithesis_incompatible
 * ]
 ','line_number':1,'multiline':True]
['text':' The client is either not using a session or is using a session without retryable writes','line_number':22,'multiline':False]
['text':' enabled. Therefore, when a write is interrupted due to stepdown/kill/terminate, they','line_number':23,'multiline':False]
['text':' cannot retry the write to verify if it has been executed or not.','line_number':24,'multiline':False]
['text':' Exclude kNoClientSession since a (casually consistent) session is required.','line_number':33,'multiline':False]
['text':' Make the mongos do an insert against both shards to make bump its clusterTime.','line_number':40,'multiline':False]
['text':' Bump the clusterTime on the mongos so that when causal consistency is required, the reads','line_number':59,'multiline':False]
['text':' performed by the document checks will have afterClusterTime greater than the timestamp of','line_number':60,'multiline':False]
['text':' the writes done by the transaction.','line_number':61,'multiline':False]
['text':' When causal consistency is required, the verifyDocuments state would perform','line_number':101,'multiline':False]
['text':' reads against mongos with afterClusterTime equal to the max of the clusterTimes','line_number':102,'multiline':False]
['text':' of all sessions that it has created on the shard that it uses to run internal','line_number':103,'multiline':False]
['text':' transactions from. Bump the clusterTime on the mongos after the shard has','line_number':104,'multiline':False]
['text':' recovered so that the mongos can gossip the clusterTime correctly to the other','line_number':105,'multiline':False]
['text':' shard; otherwise when the next state is the verifyDocuments state, the','line_number':106,'multiline':False]
['text':' afterClusterTime in the command could be higher than the clusterTime known to','line_number':107,'multiline':False]
['text':' that shard and that would cause the command to fail.','line_number':108,'multiline':False]
['text':' If a shard node that is acting as a router for an internal transaction is','line_number':119,'multiline':False]
['text':' killed/terminated/stepped down or the transaction's session is killed while running a','line_number':120,'multiline':False]
['text':' non-retryable transaction, the transaction would be left in-progress since nothing','line_number':121,'multiline':False]
['text':' would aborted it. Such dangling transactions can cause the CheckReplDBHash hook to hang','line_number':122,'multiline':False]
['text':' as the fsyncLock command requires taking the global S lock and it cannot do that while','line_number':123,'multiline':False]
['text':' there is an in-progress transaction.','line_number':124,'multiline':False]
