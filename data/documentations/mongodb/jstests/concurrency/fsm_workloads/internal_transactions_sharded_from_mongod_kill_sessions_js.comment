['text':'*
 * Runs insert, update, delete and findAndModify commands against a sharded collection inside
 * single-shard and cross-shard internal transactions started on a shard using all the available
 * client session settings, and occasionally kills a random session on the shard. Only runs on
 * sharded clusters.
 *
 * @tags: [
 *  requires_fcv_60,
 *  requires_sharding,
 *  uses_transactions,
 *  antithesis_incompatible
 * ]
 ','line_number':1,'multiline':True]
['text':' Insert initial documents during setup instead of the init state, otherwise the insert could','line_number':27,'multiline':False]
['text':' get interrupted by the killSession state.','line_number':28,'multiline':False]
['text':' The transaction API does not abort internal transactions that are interrupted after they','line_number':31,'multiline':False]
['text':' have started to commit. The first retry of that transaction will abort the open transaction,','line_number':32,'multiline':False]
['text':' but will block if it happens again on that retry, so we lower the','line_number':33,'multiline':False]
['text':' transactionLifetimeLimitSeconds so subsequent retries do not block indefinitely (24 hours).','line_number':34,'multiline':False]
['text':' The client is either not using a session or is using a session without retryable writes','line_number':38,'multiline':False]
['text':' enabled. Therefore, when a write is interrupted, they cannot retry the write to verify if','line_number':39,'multiline':False]
['text':' it has been executed or not.','line_number':40,'multiline':False]
['text':' Force both mongoses to refresh the router info "config" database so that the','line_number':69,'multiline':False]
['text':' aggregate command for $listSessions is routed correctly.','line_number':70,'multiline':False]
['text':' Refreshing the logical session cache may trigger sharding the sessions','line_number':89,'multiline':False]
['text':' collection, which can fail with 18630 or 18631 if its session is killed while','line_number':90,'multiline':False]
['text':' running DBClientBase::getCollectionInfos() or DBClientBase::getIndexSpecs(),','line_number':91,'multiline':False]
['text':' respectively. This means the collection is not set up, so retry.','line_number':92,'multiline':False]
['text':' When causal consistency is required, the verifyDocuments state would perform','line_number':132,'multiline':False]
['text':' reads against mongos with afterClusterTime equal to the max of the','line_number':133,'multiline':False]
['text':' clusterTimes of all sessions that it has created on the shard that it uses to','line_number':134,'multiline':False]
['text':' run internal transactions from. Bump the clusterTime on the mongos after the','line_number':135,'multiline':False]
['text':' shard has recovered so that the mongos can gossip the clusterTime correctly','line_number':136,'multiline':False]
['text':' to the other shard; otherwise when the next state is the verifyDocuments','line_number':137,'multiline':False]
['text':' state, the afterClusterTime in the command could be higher than the','line_number':138,'multiline':False]
['text':' clusterTime known to that shard and that would cause the command to fail.','line_number':139,'multiline':False]
['text':' This session was killed when running either listSessions or killSesssions.','line_number':144,'multiline':False]
['text':' We should retry.','line_number':145,'multiline':False]
