['text':'*
 * Runs refineCollectionShardKey and CRUD operations concurrently.
 *
 * @tags: [requires_persistence, requires_sharding]
 ','line_number':1,'multiline':True]
['text':' The organization of documents in every collection is as follows:','line_number':9,'multiline':False]
['text':'','line_number':10,'multiline':False]
['text':' (i)   Reserved for find:   {tid: tid, a:  0, b:  0} -->> {tid: tid, a: 24, b: 24}','line_number':11,'multiline':False]
['text':' (ii)  Reserved for remove: {tid: tid, a: 25, b: 25} -->> {tid: tid, a: 49, b: 49}','line_number':12,'multiline':False]
['text':' (iii) Reserved for update: {tid: tid, a: 50, b: 50} -->> {tid: tid, a: 74, b: 74}','line_number':13,'multiline':False]
['text':' (iv)  Reserved for insert: {tid: tid, a: 75, b: 75} -->> ...','line_number':14,'multiline':False]
['text':'','line_number':15,'multiline':False]
['text':' This organization prevents CRUD operations from interfering with one another and allows one','line_number':16,'multiline':False]
['text':' to assert for expected behavior.','line_number':17,'multiline':False]
['text':' Insert documents into all possible collections suffixed with this.latch.getCount()','line_number':37,'multiline':False]
['text':' that could receive CRUD operations over the course of the FSM workload.','line_number':38,'multiline':False]
['text':' Randomly add 1 to this.latch.getCount() to increase the odds of inserting into a','line_number':50,'multiline':False]
['text':' collection that has just been refined.','line_number':51,'multiline':False]
['text':' Randomly add 1 to this.latch.getCount() to increase the odds of finding in a','line_number':67,'multiline':False]
['text':' collection that has just been refined.','line_number':68,'multiline':False]
['text':' Randomly add 1 to this.latch.getCount() to increase the odds of updating in a','line_number':83,'multiline':False]
['text':' collection that has just been refined.','line_number':84,'multiline':False]
['text':' Randomly add 1 to this.latch.getCount() to increase the odds of removing from a','line_number':105,'multiline':False]
['text':' collection that has just been refined.','line_number':106,'multiline':False]
['text':' There is a race that could occur where two threads run refineCollectionShardKey','line_number':130,'multiline':False]
['text':' concurrently on the same collection. Since the epoch of the collection changes,','line_number':131,'multiline':False]
['text':' the later thread may receive a StaleEpoch error, which is an acceptable error.','line_number':132,'multiline':False]
['text':' Occasionally flush the router's cached metadata to verify the metadata for the refined','line_number':143,'multiline':False]
['text':' collections can be successfully loaded.','line_number':144,'multiline':False]
['text':' Use a CountDownLatch as if it were a std::atomic<long long> shared between all of the','line_number':197,'multiline':False]
['text':' threads. The collection name is suffixed with the current this.latch.getCount() value','line_number':198,'multiline':False]
['text':' when concurrent CRUD operations are run against it. With every refineCollectionShardKey,','line_number':199,'multiline':False]
['text':' call this.latch.countDown() and run CRUD operations against the new collection suffixed','line_number':200,'multiline':False]
['text':' with this.latch.getCount(). This bypasses the need to drop and reshard the current','line_number':201,'multiline':False]
['text':' collection with every refineCollectionShardKey since it cannot be achieved in an atomic','line_number':202,'multiline':False]
['text':' fashion under the FSM infrastructure (meaning CRUD operations would fail).','line_number':203,'multiline':False]
['text':' Proactively create and shard all possible collections suffixed with this.latch.getCount()','line_number':207,'multiline':False]
['text':' that could receive CRUD operations over the course of the FSM workload. This prevents the','line_number':208,'multiline':False]
['text':' race that could occur between sharding a collection and creating an index on the new','line_number':209,'multiline':False]
['text':' shard key (if this step were done after every refineCollectionShardKey).','line_number':210,'multiline':False]
