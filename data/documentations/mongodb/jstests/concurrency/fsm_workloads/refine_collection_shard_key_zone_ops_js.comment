['text':'*
 * Runs refineCollectionShardKey and zone operations concurrently.
 *
 * States:
 *  - sendZoneToOtherShard: Picks a random zone assigned to this thread, removes it from the
 *    current shard, and assigns it to the other shard. Verifies via querying the config server
 *    that the first shard no longer has said zone, and that the second shard now has said zone.
 *
 *  - swapZoneRange: Removes the ranges from each of the zones assigned to this thread, and swaps
 *    them, such that each range is now assigned to the opposite zone. Verifies that the zones
 *    have swapped ranges by querying the config server.
 *
 *  - refineCollectionShardKey - Refines the collection's shard key and decreases the latch count
 *    such that the next latch collection will be targeted by the test.
 *
 * @tags: [requires_persistence, requires_sharding]
 ','line_number':1,'multiline':True]
['text':' Assume that we only have two zones owned by the thread for a given collection.','line_number':101,'multiline':False]
['text':' Swap the zone ranges by first setting both to null, then reversing the values such that','line_number':110,'multiline':False]
['text':' the first zone's range will now be associated with the second zone, and vice versa.','line_number':111,'multiline':False]
['text':' Verify that the commands set the correct data on the config server.','line_number':139,'multiline':False]
['text':' We assume here that we only have two shards.','line_number':175,'multiline':False]
['text':' Move the zone to the other shard.','line_number':182,'multiline':False]
['text':' Verify that the zone exists only on the new shard.','line_number':188,'multiline':False]
['text':' During the process of attempting to swap the zone range, the collection may','line_number':209,'multiline':False]
['text':' become refined. Retrying swapping the zone range will allow us to target the','line_number':210,'multiline':False]
['text':' shard key in its refined state.','line_number':211,'multiline':False]
['text':' Try swapping the zone range only once more.','line_number':220,'multiline':False]
['text':' There is a race that could occur where two threads run refineCollectionShardKey','line_number':236,'multiline':False]
['text':' concurrently on the same collection. Since the epoch of the collection changes,','line_number':237,'multiline':False]
['text':' the later thread may receive a StaleEpoch error, which is an acceptable error.','line_number':238,'multiline':False]
['text':' Use a CountDownLatch as if it were a std::atomic<long long> shared between all of the','line_number':261,'multiline':False]
['text':' threads. The collection name is suffixed with the current this.latch.getCount() value','line_number':262,'multiline':False]
['text':' when concurrent operations are run against it. With every refineCollectionShardKey, call','line_number':263,'multiline':False]
['text':' this.latch.countDown() and run CRUD operations against the new collection suffixed with','line_number':264,'multiline':False]
['text':' this.latch.getCount(). This bypasses the need to drop and reshard the current collection','line_number':265,'multiline':False]
['text':' with every refineCollectionShardKey since it cannot be achieved in an atomic fashion','line_number':266,'multiline':False]
['text':' fashion under the FSM infrastructure (meaning operations could fail).','line_number':267,'multiline':False]
['text':' Proactively create and shard all possible collections suffixed with this.latch.getCount()','line_number':275,'multiline':False]
['text':' that could receive CRUD operations over the course of the FSM workload. This prevents the','line_number':276,'multiline':False]
['text':' race that could occur between sharding a collection and creating an index on the new','line_number':277,'multiline':False]
['text':' shard key (if this step were done after every refineCollectionShardKey).','line_number':278,'multiline':False]
['text':' Create a name for the zone that guarantees that the zone will never be touched','line_number':285,'multiline':False]
['text':' by other threads for this test.','line_number':286,'multiline':False]
['text':' Add the zone to one random shard.','line_number':290,'multiline':False]
['text':' Assign a range to the zone.','line_number':295,'multiline':False]
['text':' Shard the collection, implicitly creating chunks to match the created zones.','line_number':309,'multiline':False]
