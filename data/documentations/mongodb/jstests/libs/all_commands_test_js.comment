['text':'*
 * A library for testing behaviors over the set of all available commands.
 * Users of this library must declare the expected results for all commands and pass
 * them into a cmdMap object.
 *
 * Each entry in the map should have at least the following fields:
 *      {
 *          command: {<command object, e.g. 'find: test, filter: {a: 1}'>}
 *          skip: <reason string> // optional field
 *      }
 *
 * All the logic about how exactly a test should run is defined by the user.
 * See the 'testAllCommands' function.
 ','line_number':1,'multiline':True]
['text':'*
     * Verifies that the command map contains an entry for every command that exists on the server.
     * This is already called in 'testAllCommands', so there is no need to call this directly.
     *
     * @param {Object} conn The shell connection to run the suite over.
     * @param {map} cmdMap A map of all commands, with their invocations and expected behavior.
     ','line_number':16,'multiline':True]
['text':' Make sure that all valid commands are covered in the cmdMap.','line_number':28,'multiline':False]
['text':'*
     * The runner function for this library.
     * Use the 'skip' option for tests that should not run.
     *
     * @param {Object} conn The shell connection to run the suite over.
     * @param {map} cmdMap A map of all commands, with their invocations and expected behavior.
     * @param {function} testFn A user-defined function to execute on every command.
     ','line_number':41,'multiline':True]
['text':' First check that the map contains all available commands.','line_number':50,'multiline':False]
['text':' Coverage already guaranteed above, but check again just in case.','line_number':56,'multiline':False]
['text':' Run logic specified by caller.','line_number':64,'multiline':False]
