['text':' Group docs in config.chunks by coll UUID (sorting by minKey), then join with docs in','line_number':20,'multiline':False]
['text':' config.collections.','line_number':21,'multiline':False]
['text':'*
     * For each existing namespace at the time of the invocation, retrieves metadata (uuid and
     * placement at shard level) from both its routing table and the information persisted
     * config.placementHistory, represented as in the following schema:
     * {
     *   nss : <string>
     *   placement: <array of {uuid, shards, source [routing table | placement history] } objects>
     * }
     *','line_number':85,'multiline':True]
['text':' 1.1  Current placement metadata on existing collections','line_number':96,'multiline':False]
['text':' 1.2 Current placement metadata on existing databases','line_number':123,'multiline':False]
['text':' 2. Outer join with config.placementHistory to retrieve the most recent document ','line_number':143,'multiline':False]
['text':'    for each logged namespace.','line_number':144,'multiline':False]
['text':' 2.1 The initialization markers of config.placementHistory are skipped.','line_number':151,'multiline':False]
['text':' 2.2 Namespaces that are recorded as "dropped" are also skipped.      ','line_number':170,'multiline':False]
['text':' 3. Merge current and historical placement metadata on a namespace into a single doc.','line_number':184,'multiline':False]
['text':' Invariant check.','line_number':203,'multiline':False]
['text':' Information missing from either the routing table or placement history.','line_number':208,'multiline':False]
['text':' Group docs in config.chunks by coll UUID (sorting by minKey), then join with docs in','line_number':226,'multiline':False]
['text':' config.collections.','line_number':227,'multiline':False]
