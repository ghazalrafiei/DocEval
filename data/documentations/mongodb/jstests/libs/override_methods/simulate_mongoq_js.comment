['text':'*
 * Simulates the mongoq requests by overriding the runCommand method to set security token on
 * connection, so that the requests send by client will pass the tenant information to server
 * through the security token.
 ','line_number':1,'multiline':True]
['text':' If 'username' already exists, then attempts to create a user with the same name','line_number':22,'multiline':False]
['text':' will fail with error code 51003.','line_number':23,'multiline':False]
['text':' Create a user which has root role root role implicitely grand ActionType::useTenant','line_number':30,'multiline':False]
['text':' in order to use a security token.','line_number':31,'multiline':False]
['text':' Create a user for tenant for setting security token on connections.','line_number':37,'multiline':False]
['text':' The following commands are going to be allowed in serverless mode but stil not ready for','line_number':114,'multiline':False]
['text':' per-tenant yet.','line_number':115,'multiline':False]
['text':' `killCursors`,','line_number':116,'multiline':False]
['text':' `connectionStatus`,','line_number':117,'multiline':False]
['text':' `connPoolStats`,','line_number':118,'multiline':False]
['text':' `top`,','line_number':119,'multiline':False]
['text':' `endSessions`,','line_number':121,'multiline':False]
['text':' Override the runCommand to inject security token and check for the response has the right nss and','line_number':128,'multiline':False]
['text':' db name.','line_number':129,'multiline':False]
['text':' Actually run the provided command.','line_number':147,'multiline':False]
['text':' Remove the tenant prefix from errMsg in the result since tests','line_number':150,'multiline':False]
['text':' assume the command was run against the original database.','line_number':151,'multiline':False]
