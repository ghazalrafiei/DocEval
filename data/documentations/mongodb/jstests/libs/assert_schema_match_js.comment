['text':'*
 * Wraps 'schema' in a $jsonSchema predicate and asserts the validity of 'doc' against schema via a
 * variety of different methods:
 *
 *  - find command
 *  - aggregation command via $match
 *  - insert command with a $jsonSchema validator
 *  - update command with a $jsonSchema validator (if possible)
 *
 * Asserts that 'doc' matches 'schema' if and only if 'valid' is true. Drops 'coll' in the process,
 * so do not pass a collection whose contents you wish to preserve.
 ','line_number':1,'multiline':True]
['text':' Test that after inserting 'doc', we can find it again using $jsonSchema in the find command','line_number':18,'multiline':False]
['text':' iff 'valid' is true.','line_number':19,'multiline':False]
['text':' Test that after inserting 'doc', we can find it again using $jsonSchema in an aggregation','line_number':25,'multiline':False]
['text':' $match stage iff 'valid' is true.','line_number':26,'multiline':False]
['text':' Test that 'doc' can be inserted into a collection using 'schema' as its document validator','line_number':30,'multiline':False]
['text':' iff 'valid' is true. We explicitly use runCommand to issue the drop to avoid an implicit','line_number':31,'multiline':False]
['text':' collection creation in sharded_collections_jscore_passthrough.','line_number':32,'multiline':False]
['text':' Test that we can update an existing document to look like 'doc' when the collection has','line_number':44,'multiline':False]
['text':' 'schema' as its document validator in "strict" mode iff 'valid' is true.','line_number':45,'multiline':False]
['text':' Before applying the update, remove the _id field if it exists, or the replacement-style','line_number':51,'multiline':False]
['text':' update will fail.','line_number':52,'multiline':False]
