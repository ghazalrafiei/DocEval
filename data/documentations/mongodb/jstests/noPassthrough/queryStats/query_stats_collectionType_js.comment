['text':'*
 * Test that collectionType is returned properly in $queryStats. Checks for collection types
 * "collection", "view", "timeseries", "nonExistent", and "virtual". Type "changeStream" is covered
 * in query_stats_changeStreams.js.
 * @tags: [requires_fcv_72]
 ','line_number':1,'multiline':True]
['text':' We create one collection for each corresponding type reported by query stats.','line_number':12,'multiline':False]
['text':' We create an additional view over the existing view to test full view resolution. We use','line_number':18,'multiline':False]
['text':' the $setWindowFields stage since it desugars into multiple stages, to make sure the query','line_number':19,'multiline':False]
['text':' shape produced is restricted to the user-provided query.','line_number':20,'multiline':False]
['text':' Next we run queries over each of the collection types to generate query stats.','line_number':32,'multiline':False]
['text':' Base _collection has a few simple documents.','line_number':34,'multiline':False]
['text':' View _view is over _collection.','line_number':42,'multiline':False]
['text':' View _viewOverView is over _view.','line_number':47,'multiline':False]
['text':' Run an empty find to make sure filter in query stats key is recorded as empty.','line_number':49,'multiline':False]
['text':' We test with $densify since it desugars into multiple stages, again to ensure the query','line_number':51,'multiline':False]
['text':' shape calculated is restricted to the user-provided query. (In this case, the desugared','line_number':52,'multiline':False]
['text':' $densify is acceptable, as long as the view pipeline is ignored).','line_number':53,'multiline':False]
['text':' Timeseries collection _timeseries.','line_number':56,'multiline':False]
['text':' Run an empty aggregate to ensure pipeline in query stats key is recorded as empty.','line_number':62,'multiline':False]
['text':' QueryStats should still be collected for queries run on nonexistent collections.','line_number':65,'multiline':False]
['text':' Verify that we have two query stats entries for the collection type. This assumes we have','line_number':70,'multiline':False]
['text':' executed one find and one agg query for the given collection type.','line_number':71,'multiline':False]
['text':' We should see one entry for find() and one for aggregate()','line_number':78,'multiline':False]
['text':' for each collection type. The queries account for the fact','line_number':79,'multiline':False]
['text':' that find() queries over views are rewritten to','line_number':80,'multiline':False]
['text':' aggregate(). Ie, the query shapes are different because the','line_number':81,'multiline':False]
['text':' queries are different.','line_number':82,'multiline':False]
['text':' Run commands that should be tracked as "virtual" collection type.','line_number':92,'multiline':False]
['text':' Verify the queries on "virtual" collection types were tracked appropriately. This includes','line_number':100,'multiline':False]
['text':' the 3 queries directly run above, in addition to 1 entry for the $queryStats aggregations','line_number':101,'multiline':False]
['text':' run for the test.','line_number':102,'multiline':False]
['text':' Verify that, for views, we capture the original query before it's rewritten. The view would','line_number':106,'multiline':False]
['text':' include a $match stage with $gt predicate on 'v'. The viewOnView would include the same','line_number':107,'multiline':False]
['text':' $match stage, the $setWindowFields stage, and the $project stage. The timeseries would','line_number':108,'multiline':False]
['text':' include the bucket unpacking stages.','line_number':109,'multiline':False]
['text':' TODO Implement this in SERVER-76263.','line_number':190,'multiline':False]
