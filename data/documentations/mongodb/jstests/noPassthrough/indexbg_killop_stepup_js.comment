['text':'*
 * Confirms that aborting a background index build on a secondary during step up does not leave the
 * node in an inconsistent state.
 *
 * @tags: [
 *   requires_replication,
 * ]
 ','line_number':1,'multiline':True]
['text':' Don't log slow operations on secondary. See SERVER-44821.','line_number':16,'multiline':False]
['text':' When the index build starts, find its op id.','line_number':37,'multiline':False]
['text':' Step up the secondary and hang the process.','line_number':48,'multiline':False]
['text':' Wait for the index build to write the oplog entry indicating the primary is ready to commit.','line_number':51,'multiline':False]
['text':' Wait for replication to ensure the step up does not fail due to a lagged secondary.','line_number':54,'multiline':False]
['text':' Kill the index build on the secondary as it is stepping up.','line_number':68,'multiline':False]
['text':' Finish the step up.','line_number':71,'multiline':False]
['text':' Wait for the index build to be aborted before asserting that it doesn't exist.','line_number':77,'multiline':False]
['text':' Although the index is aborted on the secondary that's stepping up, as of','line_number':81,'multiline':False]
['text':' featureFlagIndexBuildGracefulErrorHandling we abort builds on secondaries (that is, we replicate','line_number':82,'multiline':False]
['text':' 'abortIndexBuild') asynchronously wrt the index builder thread on the primary. Wait for the','line_number':83,'multiline':False]
['text':' secondaries to complete the abort.','line_number':84,'multiline':False]
