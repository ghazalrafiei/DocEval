['text':'*
 * Tests that using an aggregation cursor when the underlying PlanExecutor has been killed results
 * in an error. Also tests that if the pipeline has already read all results from a collection
 * before the collection is dropped, the aggregation should succeed.
 *
 * This test issues getMores on aggregation cursors and expects the getMore to cause the aggregation
 * to request more documents from the collection. If the pipeline is wrapped in a $facet stage, all
 * results will be computed in the initial request and buffered in the results array, preventing the
 * pipeline from requesting more documents.
 * @tags: [
 *   do_not_wrap_aggregations_in_facets,
 *   requires_capped,
 * ]
 ','line_number':1,'multiline':True]
['text':' This test runs a getMore in a parallel shell, which will not inherit the implicit session of','line_number':17,'multiline':False]
['text':' the cursor establishing command.','line_number':18,'multiline':False]
['text':' The DocumentSourceCursor which wraps PlanExecutors will batch results internally. We use the','line_number':21,'multiline':False]
['text':' 'internalDocumentSourceCursorBatchSizeBytes' parameter to disable this behavior so that we','line_number':22,'multiline':False]
['text':' can easily pause a pipeline in a state where it will need to request more results from the','line_number':23,'multiline':False]
['text':' PlanExecutor.','line_number':24,'multiline':False]
['text':' Make sure the number of results is greater than the batchSize to ensure the results','line_number':33,'multiline':False]
['text':' cannot all fit in one batch.','line_number':34,'multiline':False]
['text':'*
 * Populates both 'sourceCollection' and 'foreignCollection' with values of 'local' and
 * 'foreign' in the range [0, 'numMatches').
 ','line_number':40,'multiline':True]
['text':' We want to be able to pause a $lookup stage in a state where it has returned some but','line_number':50,'multiline':False]
['text':' not all of the results for a single lookup, so we need to insert at least','line_number':51,'multiline':False]
['text':' 'numMatches' matches for each source document.','line_number':52,'multiline':False]
['text':' Check that there are no cursors still open on the source collection. If any are found, the','line_number':59,'multiline':False]
['text':' test will fail and print a list of idle cursors. This should be called each time we','line_number':60,'multiline':False]
['text':' expect a cursor to have been destroyed.','line_number':61,'multiline':False]
['text':' Test that dropping the source collection between an aggregate and a getMore will cause an','line_number':84,'multiline':False]
['text':' aggregation pipeline to fail during the getMore if it needs to fetch more results from the','line_number':85,'multiline':False]
['text':' collection.','line_number':86,'multiline':False]
['text':' Make sure the cursors were cleaned up.','line_number':98,'multiline':False]
['text':' Test that dropping the source collection between an aggregate and a getMore will *not* cause','line_number':101,'multiline':False]
['text':' an aggregation pipeline to fail during the getMore if it *does not need* to fetch more','line_number':102,'multiline':False]
['text':' results from the collection.','line_number':103,'multiline':False]
['text':'','line_number':104,'multiline':False]
['text':' The test expects that the $sort will execute in the agg layer, and will not be pushed down into','line_number':105,'multiline':False]
['text':' the PlanStage layer. We add an $_internalInhibitOptimization stage to enforce this.','line_number':106,'multiline':False]
['text':' Test that dropping a $lookup stage's foreign collection between an aggregate and a getMore','line_number':121,'multiline':False]
['text':' will *not* cause an aggregation pipeline to fail during the getMore if it needs to fetch more','line_number':122,'multiline':False]
['text':' results from the foreign collection. It will instead return no matches for subsequent','line_number':123,'multiline':False]
['text':' lookups, as if the foreign collection was empty.','line_number':124,'multiline':False]
['text':' Make sure the cursors were cleaned up.','line_number':151,'multiline':False]
['text':' Test that a $lookup stage will properly clean up its cursor if it becomes invalidated between','line_number':154,'multiline':False]
['text':' batches of a single lookup. This is the same scenario as above, but with the $lookup stage','line_number':155,'multiline':False]
['text':' left in a state where it has returned some but not all of the matches for a single lookup.','line_number':156,'multiline':False]
['text':' Use an $unwind stage to allow the $lookup stage to return some but not all of the','line_number':169,'multiline':False]
['text':' results for a single lookup.','line_number':170,'multiline':False]
['text':' Make sure the cursors were cleaned up.','line_number':185,'multiline':False]
['text':' Test that dropping a $graphLookup stage's foreign collection between an aggregate and a','line_number':188,'multiline':False]
['text':' getMore will *not* cause an aggregation pipeline to fail during the getMore if it needs to','line_number':189,'multiline':False]
['text':' fetch more results from the foreign collection. It will instead return no matches for','line_number':190,'multiline':False]
['text':' subsequent lookups, as if the foreign collection was empty.','line_number':191,'multiline':False]
['text':' Make sure the cursors were cleaned up.','line_number':218,'multiline':False]
['text':' Test that the getMore still succeeds if the $graphLookup is followed by an $unwind on the','line_number':221,'multiline':False]
['text':' 'as' field and the collection is dropped between the initial request and a getMore.','line_number':222,'multiline':False]
['text':' Make sure the cursors were cleaned up.','line_number':251,'multiline':False]
['text':' Test that dropping the database will kill an aggregation's cursor, causing a subsequent','line_number':254,'multiline':False]
['text':' getMore to fail.','line_number':255,'multiline':False]
['text':' Test that killing an aggregation's cursor by inserting enough documents to force a truncation','line_number':269,'multiline':False]
['text':' of a capped collection will cause a subsequent getMore to fail.','line_number':270,'multiline':False]
['text':' Fill up about half of the collection.','line_number':277,'multiline':False]
['text':' Start an aggregation.','line_number':281,'multiline':False]
['text':' Insert enough to force a truncation.','line_number':284,'multiline':False]
['text':' Test that killing an aggregation's cursor via the killCursors command will cause a subsequent','line_number':294,'multiline':False]
['text':' getMore to fail.','line_number':295,'multiline':False]
['text':' Test that killing an aggregation's operation via the killOp command will cause a getMore to','line_number':310,'multiline':False]
['text':' fail.','line_number':311,'multiline':False]
['text':' Use a failpoint to cause a getMore to hang indefinitely.','line_number':315,'multiline':False]
['text':' Start a getMore and wait for it to hang.','line_number':328,'multiline':False]
['text':' Wait until we know the failpoint has been reached.','line_number':334,'multiline':False]
['text':' Kill the operation.','line_number':337,'multiline':False]
['text':' Test that a cursor timeout of an aggregation's cursor will cause a subsequent getMore to','line_number':351,'multiline':False]
['text':' fail.','line_number':352,'multiline':False]
['text':' Wait until the idle cursor background job has killed the aggregation cursor.','line_number':359,'multiline':False]
['text':' Test that a cursor will properly be cleaned up on server shutdown.','line_number':380,'multiline':False]
