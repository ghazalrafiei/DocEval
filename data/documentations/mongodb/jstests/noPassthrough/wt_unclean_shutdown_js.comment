['text':'*
 * This test is only for the WiredTiger storage engine. Test to reproduce recovery bugs in WT from
 * WT-2696 and WT-2706.  Have several threads inserting unique data.  Kill -9 mongod.  After
 * restart and recovery verify that all expected records inserted are there and no records in the
 * middle of the data set are lost.
 *
 * @tags: [requires_wiredtiger]
 ','line_number':1,'multiline':True]
['text':' Skip this test if not running with the "wiredTiger" storage engine.','line_number':12,'multiline':False]
['text':' Modify some WT settings:','line_number':24,'multiline':False]
['text':' - Disable checkpoints based on log size so that we know no checkpoint gets written.','line_number':25,'multiline':False]
['text':' - Explicitly set checkpoints to 60 seconds in case the default ever changes.','line_number':26,'multiline':False]
['text':' - Turn off archiving and compression for easier debugging if there is a failure.','line_number':27,'multiline':False]
['text':' - Make the maximum file size small to encourage lots of file changes.  WT-2706 was','line_number':28,'multiline':False]
['text':' related to log file switches.','line_number':29,'multiline':False]
['text':' Create a record larger than 128K which is the threshold to doing an unbuffered log','line_number':39,'multiline':False]
['text':' write in WiredTiger.','line_number':40,'multiline':False]
['text':' One of the bugs, WT-2696, was related to large records that used the unbuffered','line_number':45,'multiline':False]
['text':' log code.  Periodically insert the large record to stress that code path.','line_number':46,'multiline':False]
['text':' Terminate the loop when mongod is killed.','line_number':54,'multiline':False]
['text':' Return i, the last record we were trying to insert.  It is possible that mongod gets','line_number':58,'multiline':False]
['text':' killed in the middle but not finding a record at the end is okay.  We're only','line_number':59,'multiline':False]
['text':' interested in records missing in the middle.','line_number':60,'multiline':False]
['text':' Start the insert workload threads with partitioned input spaces.','line_number':64,'multiline':False]
['text':' We don't run long enough for threads to overlap.  Adjust the per thread value if needed.','line_number':65,'multiline':False]
['text':' Sleep for sometime less than a minute so that mongod has not yet written a checkpoint.','line_number':76,'multiline':False]
['text':' That will force WT to run recovery all the way from the beginning and we can detect missing','line_number':77,'multiline':False]
['text':' records.  Sleep for 40 seconds to generate plenty of workload.','line_number':78,'multiline':False]
['text':' Mongod needs an unclean shutdown so that WT recovery is forced on restart and we can detect','line_number':81,'multiline':False]
['text':' any missing records.','line_number':82,'multiline':False]
['text':' Retrieve the start and end data from each thread.','line_number':85,'multiline':False]
['text':' Restart the mongod.  This forces WT to run recovery.','line_number':92,'multiline':False]
['text':' Verify that every item between start and end for every thread exists in the collection now','line_number':100,'multiline':False]
['text':' that recovery has completed.','line_number':101,'multiline':False]
['text':' For each start and end, verify every data item exists.','line_number':104,'multiline':False]
['text':' The verification is a bit complex.  We only want to fail if records in the middle','line_number':110,'multiline':False]
['text':' of the range are missing.  Records at the end may be missing due to when mongod','line_number':111,'multiline':False]
['text':' was killed and records in memory are lost.  It is only a bug if a record is missing','line_number':112,'multiline':False]
['text':' and a subsequent record exists.','line_number':113,'multiline':False]
