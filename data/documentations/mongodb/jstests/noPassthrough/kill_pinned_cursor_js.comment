['text':' @tags: [','line_number':1,'multiline':False]
['text':'   does_not_support_stepdowns,','line_number':2,'multiline':False]
['text':'   requires_getmore,','line_number':3,'multiline':False]
['text':'   requires_replication,','line_number':4,'multiline':False]
['text':' ]','line_number':5,'multiline':False]
['text':'','line_number':6,'multiline':False]
['text':' Uses getMore to pin an open cursor.','line_number':7,'multiline':False]
['text':'','line_number':8,'multiline':False]
['text':' Does not support stepdowns because if a stepdown were to occur between running find() and','line_number':9,'multiline':False]
['text':' calling killCursors on the cursor ID returned by find(), the killCursors might be sent to','line_number':10,'multiline':False]
['text':' different node than the one which has the cursor. This would result in the node returning','line_number':11,'multiline':False]
['text':' "CursorNotFound."','line_number':12,'multiline':False]
['text':'','line_number':13,'multiline':False]
['text':' Test killing a pinned cursor. Since cursors are generally pinned for short periods while result','line_number':14,'multiline':False]
['text':' batches are generated, this requires some special machinery to keep a cursor permanently pinned.','line_number':15,'multiline':False]
['text':' This test runs manual getMores using different connections, which will not inherit the','line_number':17,'multiline':False]
['text':' implicit session of the cursor establishing command.','line_number':18,'multiline':False]
['text':' Enables the specified 'failPointName', executes 'runGetMoreFunc' function in a parallel','line_number':25,'multiline':False]
['text':' shell, waits for the the failpoint to be hit, then kills the cursor and confirms that the','line_number':26,'multiline':False]
['text':' kill was successful.','line_number':27,'multiline':False]
['text':' Kill the cursor associated with the command and assert that the kill succeeded.','line_number':31,'multiline':False]
['text':' Test that killing the pinned cursor before it starts building the batch results in a','line_number':50,'multiline':False]
['text':' CursorKilled exception on a replica set.','line_number':51,'multiline':False]
['text':' We expect that the operation will get interrupted and fail.','line_number':58,'multiline':False]
['text':' Check the case where a killCursor is run as we're building a getMore batch on mongod.','line_number':64,'multiline':False]
['text':' Force yield to occur on every PlanExecutor iteration, so that the getMore is guaranteed','line_number':69,'multiline':False]
['text':' to check for interrupts.','line_number':70,'multiline':False]
['text':' Run the equivalent test on the mongos. This time, we will force the shards to hang as','line_number':77,'multiline':False]
['text':' well. This is so that we can guarantee that the mongos is checking for interruption at','line_number':78,'multiline':False]
['text':' the appropriate time, and not just propagating an error it receives from the mongods.','line_number':79,'multiline':False]
['text':' Check this case where the interrupt comes in after the batch has been built, and is about to','line_number':93,'multiline':False]
['text':' be returned. This is relevant for both mongod and mongos.','line_number':94,'multiline':False]
['text':' Test that, if the pinned cursor is killed after it has finished building a batch, that','line_number':99,'multiline':False]
['text':' batch is returned to the client but a subsequent getMore will fail with a','line_number':100,'multiline':False]
['text':' 'CursorNotFound' error.','line_number':101,'multiline':False]
['text':' We expect that the first getMore will succeed, while the second fails because the','line_number':105,'multiline':False]
['text':' cursor has been killed.','line_number':106,'multiline':False]
