['text':'*
 * Tests that we don't hit a 4-way deadlock between an index builder, prepared transaction, step
 * down and an operation taking MODE_IS collection lock.
 *
 * This tests the following scenario:
 * 1) Starts and index build.
 * 2) Prepares a transaction which holds the collection lock in IX mode.
 * 3) Waits for the index build to attempt to acquire the collection lock in X mode to commit, but
 *    blocks behind the prepared transaction due to a collection lock conflict.
 * 4) Starts an operation which takes a MODE_IS collection lock (and RSTL in MODE_IX), and is not
 *    killed by step down.
 * 5) Steps down the primary, which enqueues the RSTL in X mode.
 * 6) Ensures the index build does not block waiting indefinitely for collection MODE_X lock, and is
 *    not blocking the operation taking collection lock in MODE_IS, which in turn would block
 *    stepdown by holding the RSTL in MODE_IX.
 *
 * @tags: [
 *   uses_prepare_transaction,
 *   uses_transactions,
 * ]
 ','line_number':1,'multiline':True]
['text':' Populate collection to trigger an index build.','line_number':39,'multiline':False]
['text':' Enable fail point which makes hybrid index build hang before taking locks for commit.','line_number':42,'multiline':False]
['text':' Get opId and ensure it is the one for the above index build.','line_number':52,'multiline':False]
['text':' Wait the index build to enqueue MODE_X collection lock.','line_number':71,'multiline':False]
['text':' Wait for the above operation to block trying to acquire MODE_IS lock, or to succeed. The first','line_number':99,'multiline':False]
['text':' part is required to reproduce the deadlock, but if the deadlock is fixed the operation is','line_number':100,'multiline':False]
['text':' expected to succeed.','line_number':101,'multiline':False]
['text':' If the deadlock is fixed, we don't expect to find the operation, as it will have acquired','line_number':109,'multiline':False]
['text':' locks and completed.','line_number':110,'multiline':False]
['text':' If there is a deadlock, the stepdown command is expected to timeout.','line_number':117,'multiline':False]
['text':' Wait for threads to join.','line_number':123,'multiline':False]
