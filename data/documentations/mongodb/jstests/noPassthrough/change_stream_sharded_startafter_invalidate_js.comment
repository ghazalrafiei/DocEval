['text':' Attempt to resume a change stream from the resume token for an "invalidate" event when the "drop"','line_number':1,'multiline':False]
['text':' event that caused the invalidation is the last thing in the primary shard's oplog. There should','line_number':2,'multiline':False]
['text':' be no error creating the new change stream, which should initially see no events. Reproduces the','line_number':3,'multiline':False]
['text':' bug described in SERVER-41196.','line_number':4,'multiline':False]
['text':' @tags: [','line_number':5,'multiline':False]
['text':'   requires_sharding,','line_number':6,'multiline':False]
['text':'   uses_change_streams,','line_number':7,'multiline':False]
['text':' ]','line_number':8,'multiline':False]
['text':' The edge case we are testing occurs on an unsharded collection in a sharded cluster. We','line_number':9,'multiline':False]
['text':' create a cluster with just one shard to ensure the test never blocks for another shard.','line_number':10,'multiline':False]
['text':' Start a change stream that matches on the invalidate event.','line_number':18,'multiline':False]
['text':' Create the collection by inserting into it and then drop the collection, thereby generating','line_number':21,'multiline':False]
['text':' an invalidate event.','line_number':22,'multiline':False]
['text':' Resuming the change stream using the invalidate event allows us to see events after the drop.','line_number':28,'multiline':False]
['text':' The PBRT returned with the first (empty) batch should match the resume token we supplied.','line_number':31,'multiline':False]
['text':' Initially, there should be no events visible after the drop.','line_number':34,'multiline':False]
['text':' Add one last event and make sure the change stream sees it.','line_number':37,'multiline':False]
['text':' Drop the collection before running the subsequent test.','line_number':45,'multiline':False]
['text':' Start a change stream on 'mongosColl', then create and drop the collection.','line_number':49,'multiline':False]
['text':' Wait until we see the invalidation, and store the associated resume token.','line_number':54,'multiline':False]
['text':' Recreate and then immediately drop the collection again to make sure that change stream when','line_number':61,'multiline':False]
['text':' opened with the invalidate resume token sees this invalidate event.','line_number':62,'multiline':False]
['text':' Open the change stream using the invalidate resume token and verify that the change stream','line_number':66,'multiline':False]
['text':' sees the invalidated event from the second collection drop.','line_number':67,'multiline':False]
