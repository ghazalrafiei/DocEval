['text':'*
 * Tests index usage with durable history across restarts.
 *
 * @tags: [
 *     requires_persistence,
 *     requires_replication,
 * ]
 ','line_number':1,'multiline':True]
['text':' To control durable history more predictably, disable the checkpoint thread.','line_number':16,'multiline':False]
['text':' The write concern guarantees the stable and oldest timestamp are bumped.','line_number':41,'multiline':False]
['text':' The index does not exist yet.','line_number':70,'multiline':False]
['text':' The index is only available for use as of the 'createIndexTS'.','line_number':77,'multiline':False]
['text':' Rebuild the index without finishing it.','line_number':82,'multiline':False]
['text':' Get a timestamp after starting the index build but before the commit timestamp of the index','line_number':88,'multiline':False]
['text':' build.','line_number':89,'multiline':False]
['text':' To control durable history more predictably, disable the checkpoint thread.','line_number':102,'multiline':False]
['text':' restart ','line_number':106,'multiline':True]
['text':' Found index from unfinished build.','line_number':109,'multiline':False]
['text':' Resetting unfinished index.','line_number':115,'multiline':False]
['text':' Index build restarting.','line_number':118,'multiline':False]
['text':' The index is being re-created.','line_number':124,'multiline':False]
['text':' It's possible to read prior to the most recent DDL operation for the collection.','line_number':126,'multiline':False]
['text':'','line_number':127,'multiline':False]
['text':' At oldestTs, the index did not exist, so queries for the index at that timestamp will return','line_number':128,'multiline':False]
['text':' BadValue.','line_number':129,'multiline':False]
['text':'','line_number':130,'multiline':False]
['text':' At createIndexTS, the index did exist, so queries for the index at that timestamp will be','line_number':131,'multiline':False]
['text':' successful.','line_number':132,'multiline':False]
['text':'','line_number':133,'multiline':False]
['text':' At preIndexCommitTS, the new index has not finished being created yet, so queries for the index','line_number':134,'multiline':False]
['text':' at that timestamp will return BadValue.','line_number':135,'multiline':False]
['text':'','line_number':136,'multiline':False]
['text':' Etc.','line_number':137,'multiline':False]
['text':'','line_number':138,'multiline':False]
['text':' Find queries should all return the result one would expect based on the state of the catalog at','line_number':139,'multiline':False]
['text':' that point in time. When the feature flag is disabled, these find queries will instead return','line_number':140,'multiline':False]
['text':' SnapshotUnavailable.','line_number':141,'multiline':False]
['text':' Take a checkpoint to persist the new catalog entry of the index being rebuilt.','line_number':150,'multiline':False]
['text':' To control durable history more predictably, disable the checkpoint thread.','line_number':158,'multiline':False]
['text':' restart ','line_number':162,'multiline':True]
['text':' Startup recovery will rebuild the index in the background. Wait for the index build to finish.','line_number':166,'multiline':False]
['text':' Demonstrate that durable history can be used across a restart with a finished index.','line_number':185,'multiline':False]
['text':' Drop the index and demonstrate the durable history can be used across a restart for reads with','line_number':201,'multiline':False]
['text':' times prior to the drop.','line_number':202,'multiline':False]
['text':' Take a checkpoint to persist the new catalog entry of the index being rebuilt.','line_number':206,'multiline':False]
['text':' To control durable history more predictably, disable the checkpoint thread.','line_number':214,'multiline':False]
['text':' restart ','line_number':218,'multiline':True]
['text':' Test that we can read using the dropped index on timestamps before the drop','line_number':220,'multiline':False]
