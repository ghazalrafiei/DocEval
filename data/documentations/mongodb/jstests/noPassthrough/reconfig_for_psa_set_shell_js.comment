['text':'*
 * Tests the 'reconfigForPSASet()' shell function and makes sure that reconfig will succeed while
 * preserving majority reads.
 *
 * @tags: [requires_replication]
 ','line_number':1,'multiline':True]
['text':' Start up a PSA set with the secondary having 'votes: 0' and 'priority: 0'.','line_number':10,'multiline':False]
['text':' Store the old config so that we can reset to it after every successful reconfig.','line_number':21,'multiline':False]
['text':' Verify that directly calling the standard 'rs.reconfig()' function to give the secondary 'votes:','line_number':24,'multiline':False]
['text':' 1' and 'priority: 1' will fail.','line_number':25,'multiline':False]
['text':' Wait for all 'newlyAdded' fields to be removed and for the new config to be committed.','line_number':45,'multiline':False]
['text':' Reset the config back to the original config.','line_number':54,'multiline':False]
['text':' Succeed with a reconfig to a standard PSA set, where the secondary has 'votes: 1' and 'priority:','line_number':68,'multiline':False]
['text':' 1'.','line_number':69,'multiline':False]
['text':' shouldSucceed ','line_number':71,'multiline':True]
['text':' Fail when 'memberIndex' does not refer to a node in the new config.','line_number':73,'multiline':False]
['text':' shouldSucceed ','line_number':75,'multiline':True]
['text':' Fail when the node in the new config at 'memberIndex' is not a voter.','line_number':77,'multiline':False]
['text':' shouldSucceed ','line_number':81,'multiline':True]
['text':' Test that reconfigToPSASet() will succeed when we are adding a new node at a specific','line_number':83,'multiline':False]
['text':' 'memberIndex'.','line_number':84,'multiline':False]
['text':' First remove the node at index 1 to simulate a two-node replica set.','line_number':87,'multiline':False]
['text':' Attempt to add a node and assert that the reconfigToPSASet() call is successful.','line_number':94,'multiline':False]
['text':' shouldSucceed ','line_number':99,'multiline':True]
['text':' Test that reconfigToPSASet() will succeed even if the priority of the node is 0 in the final','line_number':101,'multiline':False]
['text':' config.','line_number':102,'multiline':False]
['text':' shouldSucceed ','line_number':107,'multiline':True]
['text':' endPriority ','line_number':107,'multiline':True]
['text':' Test that reconfigToPSASet() will fail if the node at 'memberIndex' exists in the old config but','line_number':109,'multiline':False]
['text':' was a voter. It should fail because this is not the use case of the helper function.','line_number':110,'multiline':False]
['text':' First turn the secondary into a voting node but with priority 0.','line_number':113,'multiline':False]
['text':' Now attempt a reconfig to give the secondary priority 1 via the reconfigForPSASet() function.','line_number':120,'multiline':False]
['text':' This should fail because this function should not be used if the secondary is a voter in the old','line_number':121,'multiline':False]
['text':' config.','line_number':122,'multiline':False]
['text':' shouldSucceed ','line_number':125,'multiline':True]
