['text':' Test resuming a change stream on a node other than the one it was started on. Accomplishes this','line_number':1,'multiline':False]
['text':' by triggering a stepdown.','line_number':2,'multiline':False]
['text':' This test uses the WiredTiger storage engine, which does not support running without journaling.','line_number':3,'multiline':False]
['text':' @tags: [','line_number':4,'multiline':False]
['text':'   requires_majority_read_concern,','line_number':5,'multiline':False]
['text':'   requires_replication,','line_number':6,'multiline':False]
['text':' ]','line_number':7,'multiline':False]
['text':' Be sure we'll only read from the primary.','line_number':23,'multiline':False]
['text':' Open a changeStream on the primary.','line_number':26,'multiline':False]
['text':' Be sure we can read from the change stream. Use {w: "majority"} so that we're still','line_number':31,'multiline':False]
['text':' guaranteed to be able to read after the failover.','line_number':32,'multiline':False]
['text':' Make the primary step down','line_number':40,'multiline':False]
['text':' Now wait for another primary to be elected.','line_number':43,'multiline':False]
['text':' Be sure we got a different node that the previous primary.','line_number':45,'multiline':False]
['text':' Now resume using the resume token from the first change (before the failover).','line_number':58,'multiline':False]
['text':' Be sure we can read the 2nd and 3rd changes.','line_number':62,'multiline':False]
['text':' Unfreeze the original primary so that it can stand for election again.','line_number':81,'multiline':False]
