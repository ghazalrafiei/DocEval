['text':'*
 * Tests that we don't hit 3 way deadlock between an index builder, prepared transaction, and step
 * down.
 *
 * This tests the following scenario:
 * 1) Starts and index build.
 * 2) Prepares a transaction which holds the collection lock in IX mode.
 * 3) Waits for the index build to attempt to acquire the collection lock in S mode to stop writes,
 *    but blocks behind the prepared transaction due to a collection lock conflict.
 * 4) Steps down the primary, which enqueues the RSTL in X mode.
 * 5) Ensures the index build has released its RSTL lock before taking the MODE_S lock, and does not
 *    block stepDown.
 *
 * @tags: [
 *   uses_prepare_transaction,
 *   uses_transactions,
 * ]
 ','line_number':1,'multiline':True]
['text':' Clear the log.','line_number':39,'multiline':False]
['text':' Enable fail point which makes the index build to hang before taking a MODE_S lock to block','line_number':42,'multiline':False]
['text':' writes.','line_number':43,'multiline':False]
['text':' Unblock the index build, which will cause it to hang acquiring the collection S lock.','line_number':69,'multiline':False]
['text':' Allow the primary to be re-elected, and wait for it.','line_number':82,'multiline':False]
