['text':' Test setUserWriteBlockMode command.','line_number':1,'multiline':False]
['text':'','line_number':2,'multiline':False]
['text':' @tags: [','line_number':3,'multiline':False]
['text':'   creates_and_authenticates_user,','line_number':4,'multiline':False]
['text':'   requires_auth,','line_number':5,'multiline':False]
['text':'   requires_fcv_60,','line_number':6,'multiline':False]
['text':'   requires_non_retryable_commands,','line_number':7,'multiline':False]
['text':'   requires_persistence,','line_number':8,'multiline':False]
['text':'   requires_replication,','line_number':9,'multiline':False]
['text':' ]','line_number':10,'multiline':False]
['text':' For this test to work, we expect the state of the connection to be maintained as:','line_number':24,'multiline':False]
['text':' One db: "testSetUserWriteBlockMode1"','line_number':25,'multiline':False]
['text':' Three collections:','line_number':26,'multiline':False]
['text':'       * set_user_write_block_mode_coll1','line_number':27,'multiline':False]
['text':'       * set_user_write_block_mode_coll2','line_number':28,'multiline':False]
['text':'       * set_user_write_block_mode_coll3','line_number':29,'multiline':False]
['text':' One index: "index" w/ pattern {"b": 1} on db.coll1','line_number':30,'multiline':False]
['text':' One document: {a: 0, b: 0} on db.coll1','line_number':31,'multiline':False]
['text':' Ensure we successfully maintained state from last run.','line_number':56,'multiline':False]
['text':' Test CUD','line_number':77,'multiline':False]
['text':' Test create index on empty and non-empty colls, collMod, drop index.','line_number':84,'multiline':False]
['text':' Test create, rename (both to a non-existent and an existing target), drop collection.','line_number':92,'multiline':False]
['text':' Test dropping a (non-empty) database.','line_number':100,'multiline':False]
['text':' Test CUD','line_number':105,'multiline':False]
['text':' Test create, collMod, drop index.','line_number':110,'multiline':False]
['text':' Test create, rename (both to a non-existent and an existing target), drop collection.','line_number':121,'multiline':False]
['text':' Test dropping a database.','line_number':128,'multiline':False]
['text':' Ensure we successfully maintained state on this run.','line_number':132,'multiline':False]
['text':' Checks that an unprivileged user's operations can be logged on the profiling collection.','line_number':136,'multiline':False]
['text':' Enable profiling.','line_number':143,'multiline':False]
['text':' Perform a find() as an unprivileged user.','line_number':146,'multiline':False]
['text':' Check that the find() was logged on the profiling collection.','line_number':152,'multiline':False]
['text':' Restore the original profiling level.','line_number':157,'multiline':False]
['text':' Ensure that without setUserWriteBlockMode, both users are privileged for CUD ops','line_number':166,'multiline':False]
['text':' Ensure that the non-privileged user cannot run setUserWriteBlockMode','line_number':172,'multiline':False]
['text':' Now with setUserWriteBlockMode enabled, ensure that only the bypassUser can CUD','line_number':182,'multiline':False]
['text':' Ensure that attempting to enabling write blocking again is a no-op under various','line_number':186,'multiline':False]
['text':' circumstances','line_number':187,'multiline':False]
['text':' Ensure that profiling works while user writes are blocked.','line_number':194,'multiline':False]
['text':' Restarting the cluster has no impact, as write block state is durable','line_number':197,'multiline':False]
['text':' Now disable userWriteBlockMode and ensure both users can CUD again','line_number':209,'multiline':False]
['text':' Test that enabling write blocking while there is an active index build on a user collection','line_number':216,'multiline':False]
['text':' (i.e. non-internal) will cause the index build to fail.','line_number':217,'multiline':False]
['text':' We use config.system.sessions because it is a collection in an internal DB (config) which','line_number':225,'multiline':False]
['text':' is sharded, meaning index builds will be handled by the shard servers. Indexes on','line_number':226,'multiline':False]
['text':' non-sharded collections in internal DBs are built by the config server, which doesn't','line_number':227,'multiline':False]
['text':' have the UserWriteBlockModeOpObserver installed.','line_number':228,'multiline':False]
['text':' Test that index builds on user collections spawned by both non-privileged and privileged','line_number':246,'multiline':False]
['text':' users will be aborted on enableWriteBlockMode.','line_number':247,'multiline':False]
['text':' asAdmin ','line_number':248,'multiline':True]
['text':' asAdmin ','line_number':254,'multiline':True]
['text':' Test that index builds on non-user (internal collections) won't be aborted on','line_number':261,'multiline':False]
['text':' enableWriteBlockMode.','line_number':262,'multiline':False]
['text':' asAdmin ','line_number':263,'multiline':True]
['text':' Ensure index was not successfully created on user db, but was on internal db.','line_number':270,'multiline':False]
['text':' Test that index builds which hang before commit will block activation of','line_number':279,'multiline':False]
['text':' enableWriteBlockMode.','line_number':280,'multiline':False]
['text':' asAdmin ','line_number':283,'multiline':True]
['text':' asAdmin ','line_number':290,'multiline':True]
['text':' Wait, and ensure that the setUserWriteBlockMode has not finished yet (it must wait for','line_number':295,'multiline':False]
['text':' the index build to finish).','line_number':296,'multiline':False]
['text':' Test that serverStatus will produce WriteBlockState.UNKNOWN when the global lock is held.','line_number':309,'multiline':False]
['text':' Validate that setting user write blocking fails on standalones','line_number':320,'multiline':False]
['text':' Test on a replset','line_number':332,'multiline':False]
['text':' Test on a sharded cluster','line_number':337,'multiline':False]
