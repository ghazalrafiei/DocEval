['text':' Tests the availability and correctness of query settings server status metrics. It does so by','line_number':1,'multiline':False]
['text':' creating a sharded cluster environment and verifying that the metrics:','line_number':2,'multiline':False]
['text':' * increment / decrement as expected on inserts / updates / deletions','line_number':3,'multiline':False]
['text':' * are propagated throughout all mongod / mongos nodes','line_number':4,'multiline':False]
['text':' * are restored to their previous values on upon restarts','line_number':5,'multiline':False]
['text':'','line_number':6,'multiline':False]
['text':' @tags: [','line_number':7,'multiline':False]
['text':'   featureFlagQuerySettings','line_number':8,'multiline':False]
['text':' ]','line_number':9,'multiline':False]
['text':' Creating the collection, because some sharding passthrough suites are failing when explain','line_number':20,'multiline':False]
['text':' command is issued on the nonexistent database and collection.','line_number':21,'multiline':False]
['text':' Extends the `jstests/libs/fixture_helpers.js::mapOnEachShardNode()` function to also process','line_number':34,'multiline':False]
['text':' mongos instances from the current test instance. It runs the `func()` function over all the','line_number':35,'multiline':False]
['text':' mongod and mongos nodes in the cluster, returning an array according to the defined mapping.','line_number':36,'multiline':False]
['text':' Call `assertQueryShapeConfiguration()` on each mongos instance to ensure that the changes','line_number':45,'multiline':False]
['text':' introduced by the `setQuerySettings` command have been correctly propagated throughout the','line_number':46,'multiline':False]
['text':' whole cluster.','line_number':47,'multiline':False]
['text':' Ensure that each node emits the exact same query settings metrics, then validate them using','line_number':52,'multiline':False]
['text':' the provided `assertionFunc()` assertion.','line_number':53,'multiline':False]
['text':' Check that all the expected nodes have emitted their own set of metrics.','line_number':56,'multiline':False]
['text':' Since the test is running in a sharded cluster environment, the number of data points should','line_number':57,'multiline':False]
['text':' equal 2 (noMongos) + 2 (noShards) * 3 (noNodesPerReplSet) = 8.','line_number':58,'multiline':False]
['text':' Expect both the count and the size to be zero, as this is a newly created replica set.','line_number':67,'multiline':False]
['text':' Keep track of the previous size from now on to verify that it increases/decreases as expected.','line_number':82,'multiline':False]
['text':' Insert the bigger entry and verify that the count increases to 1 and that the size is now','line_number':85,'multiline':False]
['text':' greater than 0.','line_number':86,'multiline':False]
['text':' Replace the query setting with a smaller one and ensure that the size decreases while the','line_number':98,'multiline':False]
['text':' count remains unchanged.','line_number':99,'multiline':False]
['text':' Restart the cluster and ensure that the metrics remain unchanged.','line_number':116,'multiline':False]
['text':' refresh the db reference so it's possible to later','line_number':118,'multiline':False]
['text':' call 'clusterParamRefreshSecs.restore()'','line_number':119,'multiline':False]
['text':' forRestart','line_number':120,'multiline':True]
['text':' forRestart ','line_number':122,'multiline':True]
['text':' Delete the entry and expect the count to be zero and the size to have decreased.','line_number':138,'multiline':False]
['text':' Since the cluster parameter holds additional data, other than the provided query settings,','line_number':139,'multiline':False]
['text':' the size is not expected to go back to zero. (ie: `clusterParameterTime`)','line_number':140,'multiline':False]
