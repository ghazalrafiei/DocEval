['text':'*
 * Verifies that the validate hook is able to upgrade the feature compatibility version of the
 * server regardless of what state any previous upgrades or downgrades have left it in (besides
 * the isCleaningServerMetadata state, where we must complete the downgrade before upgrading).
 ','line_number':1,'multiline':True]
['text':' We skip doing the data consistency checks while terminating the cluster because they conflict','line_number':7,'multiline':False]
['text':' with the counts of the number of times the "validate" command is run.','line_number':8,'multiline':False]
['text':' NOTE: once modules are imported they are cached, so we need to run this in a parallel shell.','line_number':43,'multiline':False]
['text':' We terminate the processes to ensure that the next call to rawMongoProgramOutput()','line_number':53,'multiline':False]
['text':' will return all of their output.','line_number':54,'multiline':False]
['text':' Insert a document so the "validate" command has some actual work to do.','line_number':69,'multiline':False]
['text':' Run the additional setup function to put the server into the desired state.','line_number':72,'multiline':False]
['text':' The validate hook should leave the server with a feature compatibility version of','line_number':78,'multiline':False]
['text':' 'expectedAtTeardownFCV' and no targetVersion.','line_number':79,'multiline':False]
['text':' Since the additionalSetupFn() function may run the setFeatureCompatibilityVersion','line_number':92,'multiline':False]
['text':' command and we don't have a guarantee those log messages were cleared when','line_number':93,'multiline':False]
['text':' clearRawMongoProgramOutput() was called, we assert 'expectedSetLastLTSFCV' and','line_number':94,'multiline':False]
['text':' 'expectedSetLatestFCV' as lower bounds.','line_number':95,'multiline':False]
['text':' We create a separate connection to the server exclusively for running the','line_number':109,'multiline':False]
['text':' setFeatureCompatibilityVersion command so only that operation is ever interrupted by','line_number':110,'multiline':False]
['text':' the checkForInterruptFail failpoint.','line_number':111,'multiline':False]
['text':'isCleaningServerMetadata','line_number':152,'multiline':True]
['text':' If the setFCV command was interrupted while in the isCleaningServerMetadata','line_number':153,'multiline':False]
['text':' state, we must complete the FCV downgrade successfully.','line_number':154,'multiline':False]
['text':' Either upgrade the feature compatibility version so we can try downgrading again,','line_number':165,'multiline':False]
['text':' or downgrade the feature compatibility version so we can try upgrading again.','line_number':166,'multiline':False]
['text':' Note that we're using 'conn' rather than 'setFCVConn' to avoid the upgrade being','line_number':167,'multiline':False]
['text':' interrupted.','line_number':168,'multiline':False]
['text':' testStandaloneInLatestFCV','line_number':184,'multiline':False]
['text':' testStandaloneInLastLTSFCV','line_number':188,'multiline':False]
['text':' testStandaloneWithInterruptedFCVDowngrade','line_number':195,'multiline':False]
['text':' testStandaloneWithInterruptedFCVUpgrade','line_number':200,'multiline':False]
