['text':'*
 * Tests a multi-document transaction requiring more cache than available fails with the expected
 * error code instead of a generic WriteConflictException.
 *
 * @tags: [
 *   requires_persistence,
 *   requires_wiredtiger,
 *   requires_replication,
 * ]
 ','line_number':1,'multiline':True]
['text':' Scale the load in proportion to WT cache size, to reduce test run time.','line_number':31,'multiline':False]
['text':' A single collection can only have up to 64 indexes. Cap at _id + 1 text index + 62 indexes.','line_number':32,'multiline':False]
['text':' Retry the transaction until we eventually hit the TransactionTooLargeForCache. Only retry on','line_number':41,'multiline':False]
['text':' WriteConflict error, which is the only expected error besides TransactionTooLargeForCache.','line_number':42,'multiline':False]
['text':' Keep inserting documents in the transaction until we eventually hit the cache limit.','line_number':46,'multiline':False]
['text':' The error should not have a transient transaction error label. At this point the error must','line_number':66,'multiline':False]
['text':' have been TransactionTooLargeForCache. We do this check here to avoid having to check','line_number':67,'multiline':False]
['text':' exception types in the outermost catch, in case this assertion fires.','line_number':68,'multiline':False]
