['text':'*
 * Tests that the compact command is interruptible in the storage engine (WT) layer.
 * Loads data such that the storage engine compact command finds data to compress and actually runs.
 * Pauses a compact command in the MDB layer, sets interrupt via killOp, and then releases the
 * command to discover the interrupt in the storage engine layer.
 *
 * @tags: [
 *     requires_persistence,
 * ]
 ','line_number':1,'multiline':True]
['text':'*
 * Loads 30000 * 20 documents into collection <dbName>.<collName> via 20 threads.
 * Tags each insert with a thread ID. Then deletes half the data, by thread ID, to create holes such
 * that WT::compact finds compaction work to do.
 ','line_number':15,'multiline':True]
['text':' This is a sufficient amount of data for WT::compact to run. If the data size is too','line_number':34,'multiline':False]
['text':' small, WT::compact skips.','line_number':35,'multiline':False]
['text':' This also needs to be large enough to pass the "available bytes" check in WT-11332.','line_number':36,'multiline':False]
['text':' Make sure that WT::compact did not skip because of too little data.','line_number':119,'multiline':False]
