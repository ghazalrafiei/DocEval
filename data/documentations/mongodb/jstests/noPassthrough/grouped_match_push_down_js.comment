['text':' Tests classic planner rule to push-down $match with filters on renamed fields with dotted paths','line_number':1,'multiline':False]
['text':' over $group and $project in aggregation pipelines.','line_number':2,'multiline':False]
['text':' Given the root stage of agg explain's JSON representation of a query plan ('root'), returns','line_number':13,'multiline':False]
['text':' the pipeline stage names included in the plan in order of execution. The resulting array includes','line_number':14,'multiline':False]
['text':' only first-level stages (does not include stages within $group, $lookup, $union etc).','line_number':15,'multiline':False]
['text':' Given the winningplan from the explain output of a query, this method returns the array of the','line_number':27,'multiline':False]
['text':' stage names lowered into SBE.','line_number':28,'multiline':False]
['text':' Gets the sequence of stages from an explain output.','line_number':41,'multiline':False]
['text':' Takes as input the full explain outputs (from the root) as well as the nested explain output from','line_number':42,'multiline':False]
['text':' a shard. The function returns a tuple of the extracted stage sequence from explain outputs as','line_number':43,'multiline':False]
['text':' well as the recognized system configuration. The system configuration is used to identify the','line_number':44,'multiline':False]
['text':' expected result to compare against.','line_number':45,'multiline':False]
['text':' Varying expected plan depeding on the query engine.','line_number':50,'multiline':False]
['text':' Asserts end-to-end the optimization of group-project-match stage sequence.','line_number':60,'multiline':False]
['text':' It evaluates the correctness of the result, as well as whether the','line_number':61,'multiline':False]
['text':' optimization rules have been applied correctly.','line_number':62,'multiline':False]
['text':' Asserts whether the provided aggregation pipeline has the expected sequence of stages.','line_number':68,'multiline':False]
['text':' The function parses explain outputs, and treats each explain output variation accordingly.','line_number':69,'multiline':False]
['text':' Asserts whether the provided aggregation pipeline outputs the correct set of results.','line_number':86,'multiline':False]
['text':' The function requires access to the collection to run the query.','line_number':87,'multiline':False]
['text':' Asserts that a sequence of stages group, project, match over a rename on a dotted path (depth','line_number':101,'multiline':False]
['text':' 3) will push the predicate before the group stage.','line_number':102,'multiline':False]
['text':' Asserts that the optimization over group, project, match over a renamed dotted path will push','line_number':117,'multiline':False]
['text':' down the predicate while the dotted notation is kept to 2 levels.','line_number':118,'multiline':False]
['text':' Asserts that the optimization over group, project, match over a renamed dotted path will not','line_number':134,'multiline':False]
['text':' push down the predicate when the rename stage renames a dotted path with depth more than 3.','line_number':135,'multiline':False]
