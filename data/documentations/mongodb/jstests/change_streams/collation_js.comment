['text':'*
 * Tests that a change stream can take a user-specified collation, does not inherit the collection's
 * default collation, and uses the simple collation if none is provided.
 ','line_number':1,'multiline':True]
['text':' Test that you can open a change stream before the collection exists, and it will use the','line_number':27,'multiline':False]
['text':' simple collation. Tag this stream as 'doNotModifyInPassthroughs', since only individual','line_number':28,'multiline':False]
['text':' collections have the concept of a default collation.','line_number':29,'multiline':False]
['text':' Create the collection with a non-default collation. The stream should continue to use the','line_number':40,'multiline':False]
['text':' simple collation.','line_number':41,'multiline':False]
['text':' Test that $changeStream will not implicitly adopt the default collation of the collection on','line_number':54,'multiline':False]
['text':' which it is run. Tag this stream as 'doNotModifyInPassthroughs'; whole-db and cluster-wide','line_number':55,'multiline':False]
['text':' streams do not have default collations.','line_number':56,'multiline':False]
['text':' Test that a collation can be explicitly specified for the $changeStream. This does not need','line_number':62,'multiline':False]
['text':' to be tagged 'doNotModifyInPassthroughs', since whole-db and cluster-wide changeStreams will','line_number':63,'multiline':False]
['text':' use an explicit collation if present.','line_number':64,'multiline':False]
['text':' 'didNotInheritCollationStream' should not have inherited the collection's case-insensitive','line_number':74,'multiline':False]
['text':' default collation, and should only see the second insert.  'explicitCaseInsensitiveStream'','line_number':75,'multiline':False]
['text':' should see both inserts.','line_number':76,'multiline':False]
['text':' Test that the collation does not apply to the scan over the oplog.','line_number':81,'multiline':False]
['text':' We must recreate the explicitCaseInsensitiveStream and set 'doNotModifyInPassthroughs'. Whole','line_number':85,'multiline':False]
['text':' db and cluster-wide streams use the simple collation while scanning the oplog, but they don't','line_number':86,'multiline':False]
['text':' filter the oplog by collection name. The subsequent $match stage which we inject into the','line_number':87,'multiline':False]
['text':' pipeline to filter for a specific collection will obey the pipeline's case-insensitive','line_number':88,'multiline':False]
['text':' collation, meaning that 'cHaNgE_sTrEaM_cAsE_iNsEnSiTiVe' will match','line_number':89,'multiline':False]
['text':' 'change_stream_case_insensitive'.','line_number':90,'multiline':False]
['text':' The case-insensitive stream should not see the first insert (to the other collection), only','line_number':101,'multiline':False]
['text':' the second. We do not expect to see the insert in 'didNotInheritCollationStream'.','line_number':102,'multiline':False]
['text':' Test that creating a collection without a collation does not invalidate any change streams','line_number':105,'multiline':False]
['text':' that were opened before the collection existed.','line_number':106,'multiline':False]
['text':' Test that creating a collection and explicitly specifying the simple collation does not','line_number':123,'multiline':False]
['text':' invalidate any change streams that were opened before the collection existed.','line_number':124,'multiline':False]
['text':' Test that creating a change stream with a non-default collation, then creating a collection','line_number':142,'multiline':False]
['text':' with the same collation will not invalidate the change stream.','line_number':143,'multiline':False]
['text':' Test that creating a change stream with a non-default collation, then creating a collection','line_number':160,'multiline':False]
['text':' with *a different* collation will not invalidate the change stream.','line_number':161,'multiline':False]
['text':' Test that creating a change stream with a non-default collation against a collection that has','line_number':182,'multiline':False]
['text':' a non-simple default collation will use the collation specified on the operation.','line_number':183,'multiline':False]
['text':' Test that collation is supported by the shell helper. Test that creating a change stream with','line_number':204,'multiline':False]
['text':' a non-default collation against a collection that has a simple default collation will use the','line_number':205,'multiline':False]
['text':' collation specified on the operation.','line_number':206,'multiline':False]
['text':' Test that we can resume a change stream on a collection that has been dropped without','line_number':223,'multiline':False]
['text':' requiring the user to explicitly specify the collation.','line_number':224,'multiline':False]
['text':' Insert a second document to see after resuming.','line_number':240,'multiline':False]
['text':' Drop the collection to invalidate the stream.','line_number':243,'multiline':False]
['text':' Test that a $changeStream is allowed to resume on the dropped collection with an explicit','line_number':246,'multiline':False]
['text':' collation, even if it doesn't match the original collection's default collation.','line_number':247,'multiline':False]
['text':' Test that a pipeline without an explicit collation is allowed to resume the change stream','line_number':255,'multiline':False]
['text':' after the collection has been dropped, and it will use the simple collation. Do not','line_number':256,'multiline':False]
['text':' modify this in the passthrough suite(s) since only individual collections have the','line_number':257,'multiline':False]
['text':' concept of a default collation.','line_number':258,'multiline':False]
['text':' Test that the default collation of a new version of the collection is not applied when','line_number':274,'multiline':False]
['text':' resuming a change stream from before a collection drop.','line_number':275,'multiline':False]
['text':' Insert a second document to see after resuming.','line_number':291,'multiline':False]
['text':' Recreate the collection with a different collation.','line_number':294,'multiline':False]
['text':' Verify that the stream sees the insert before the drop and then is exhausted. We won't','line_number':299,'multiline':False]
['text':' see the invalidate because the pipeline has a $match stage after the $changeStream.','line_number':300,'multiline':False]
['text':' Only single-collection streams will be exhausted from the drop. Use 'next()' instead of','line_number':303,'multiline':False]
['text':' 'isExhausted()' to force a getMore since the previous getMore may not include the','line_number':304,'multiline':False]
['text':' collection drop, which is more likely with sharded collections on slow machines.','line_number':305,'multiline':False]
['text':' Test that a pipeline with an explicit collation is allowed to resume from before the','line_number':310,'multiline':False]
['text':' collection is dropped and recreated.','line_number':311,'multiline':False]
['text':' Only single-collection streams will be exhausted from the drop. Use 'next()' instead of','line_number':318,'multiline':False]
['text':' 'isExhausted()' to force a getMore since the previous getMore may not include the','line_number':319,'multiline':False]
['text':' collection drop, which is more likely with sharded collections on slow machines.','line_number':320,'multiline':False]
['text':' Test that a pipeline without an explicit collation is allowed to resume, even though the','line_number':325,'multiline':False]
['text':' collection has been recreated with the same default collation as it had previously. Do','line_number':326,'multiline':False]
['text':' not modify this command in the passthrough suite(s) since only individual collections','line_number':327,'multiline':False]
['text':' have the concept of a default collation.','line_number':328,'multiline':False]
