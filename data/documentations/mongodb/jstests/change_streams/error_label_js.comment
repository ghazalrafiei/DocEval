['text':'*
 * Test that an erroneous Change Stream pipeline responds with an error that includes the
 * "NonResumableChangeStreamError" label.
 ','line_number':1,'multiline':True]
['text':' Drop and recreate the collections to be used in this set of tests.','line_number':8,'multiline':False]
['text':' Attaching a projection to the Change Stream that filters out the resume token (stored in the','line_number':11,'multiline':False]
['text':' _id field) guarantees a ChangeStreamFatalError as soon as we get the first change.','line_number':12,'multiline':False]
['text':' Call hasNext() until it throws an error or unexpectedly returns true. We need the','line_number':17,'multiline':False]
['text':' assert.soon() to keep trying here, because the above insert command isn't immediately','line_number':18,'multiline':False]
['text':' observable to the change stream in sharded configurations.','line_number':19,'multiline':False]
['text':' The hasNext() sends a getMore command, which should generate a ChangeStreamFatalError reply','line_number':25,'multiline':False]
['text':' that includes the NonResumableChangeStreamError errorLabel.','line_number':26,'multiline':False]
