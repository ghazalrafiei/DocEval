['text':' Test that a pipeline of the form [{$changeStream: {}}, {$match: ...}] can rewrite the 'namespace'','line_number':1,'multiline':False]
['text':' and apply it to oplog-format documents in order to filter out results as early as possible,','line_number':2,'multiline':False]
['text':' specifially for the newly added events that are behind the 'showExpandedEvents' flag.','line_number':3,'multiline':False]
['text':'','line_number':4,'multiline':False]
['text':' @tags: [','line_number':5,'multiline':False]
['text':'   requires_fcv_60,','line_number':6,'multiline':False]
['text':'   requires_pipeline_optimization,','line_number':7,'multiline':False]
['text':'   requires_sharding,','line_number':8,'multiline':False]
['text':'   uses_change_streams,','line_number':9,'multiline':False]
['text':'   change_stream_does_not_expect_txns,','line_number':10,'multiline':False]
['text':'   assumes_unsharded_collection,','line_number':11,'multiline':False]
['text':'   assumes_read_preference_unchanged','line_number':12,'multiline':False]
['text':' ]','line_number':13,'multiline':False]
['text':' A helper that opens a change stream on the whole cluster with the user supplied match expression','line_number':42,'multiline':False]
['text':' 'userMatchExpr' and validates that:','line_number':43,'multiline':False]
['text':' 1. for each shard, the events are seen in that order as specified in 'expectedResult'','line_number':44,'multiline':False]
['text':' 2. the filtering is been done at oplog level','line_number':45,'multiline':False]
['text':' Enable a failpoint that will prevent $expr match expressions from generating $_internalExprEq','line_number':57,'multiline':False]
['text':' or similar expressions. This ensures that the following test-cases only exercise the $expr','line_number':58,'multiline':False]
['text':' rewrites.','line_number':59,'multiline':False]
['text':' shardKey ','line_number':67,'multiline':True]
['text':' splitAt ','line_number':67,'multiline':True]
['text':' Create a sharded collection in the "other" database.','line_number':69,'multiline':False]
['text':' shardKey ','line_number':71,'multiline':True]
['text':' splitAt ','line_number':71,'multiline':True]
['text':' Create some new collections to ensure that test cases has sufficient namespaces to verify','line_number':73,'multiline':False]
['text':' that the namespace filtering is working correctly.','line_number':74,'multiline':False]
['text':' shardKey ','line_number':75,'multiline':True]
['text':' splitAt ','line_number':75,'multiline':True]
['text':' Open a change stream and store the resume token. This resume token will be used to replay the','line_number':77,'multiline':False]
['text':' stream after this point.','line_number':78,'multiline':False]
['text':' For each collection, do a bunch of write operations, specifically 'create', 'createIndexes',','line_number':82,'multiline':False]
['text':' 'dropIndexes' and 'collMod' so that we can validate the pushdown optimizations later on.','line_number':83,'multiline':False]
['text':' These events from unmonitored collection should not been seen unexpectedly.','line_number':94,'multiline':False]
['text':' This group of tests ensures that the '$match' on a particular namespace object only sees its','line_number':100,'multiline':False]
['text':' documents and only required document(s) are returned at the oplog for each shard.','line_number':101,'multiline':False]
['text':' expectedOplogRetDocsForEachShard ','line_number':109,'multiline':True]
['text':' expectedOplogRetDocsForEachShard ','line_number':118,'multiline':True]
['text':' expectedOplogRetDocsForEachShard ','line_number':129,'multiline':True]
['text':' Ensure that the '$match' on the namespace with only db component should not emit any document and','line_number':131,'multiline':False]
['text':' the oplog should not return any documents.','line_number':132,'multiline':False]
['text':' expectedOplogRetDocsForEachShard ','line_number':136,'multiline':True]
['text':' expectedOplogRetDocsForEachShard ','line_number':140,'multiline':True]
['text':' Ensure that the namespace object with 'unknown' collection does not exists and the oplog cursor','line_number':142,'multiline':False]
['text':' returns 0 document.','line_number':143,'multiline':False]
['text':' expectedOplogRetDocsForEachShard ','line_number':147,'multiline':True]
['text':' expectedOplogRetDocsForEachShard ','line_number':151,'multiline':True]
['text':' Ensure that the namespace object with flipped fields does not match with the namespace object and','line_number':153,'multiline':False]
['text':' the oplog cursor returns 0 document.','line_number':154,'multiline':False]
['text':' expectedOplogRetDocsForEachShard ','line_number':158,'multiline':True]
['text':' expectedOplogRetDocsForEachShard ','line_number':162,'multiline':True]
['text':' Ensure that the empty namespace object does not match with the namespace object and the oplog','line_number':164,'multiline':False]
['text':' cursor returns 0 document.','line_number':165,'multiline':False]
['text':' expectedOplogRetDocsForEachShard ','line_number':167,'multiline':True]
['text':' expectedOplogRetDocsForEachShard ','line_number':171,'multiline':True]
['text':' Ensure the '$match' on namespace's db should return documents for all collection and oplog should','line_number':173,'multiline':False]
['text':' return all documents for each shard.','line_number':174,'multiline':False]
['text':' expectedOplogRetDocsForEachShard ','line_number':189,'multiline':True]
['text':' expectedOplogRetDocsForEachShard ','line_number':204,'multiline':True]
['text':' These cases ensure that the '$match' on regex of namespace' db, should return documents for all','line_number':206,'multiline':False]
['text':' collection and oplog should return all documents for each shard.','line_number':207,'multiline':False]
['text':' expectedOplogRetDocsForEachShard ','line_number':222,'multiline':True]
['text':' expectedOplogRetDocsForEachShard ','line_number':238,'multiline':True]
['text':' expectedOplogRetDocsForEachShard ','line_number':253,'multiline':True]
['text':' expectedOplogRetDocsForEachShard ','line_number':272,'multiline':True]
['text':' expectedOplogRetDocsForEachShard ','line_number':287,'multiline':True]
['text':' expectedOplogRetDocsForEachShard ','line_number':310,'multiline':True]
['text':' expectedOplogRetDocsForEachShard ','line_number':325,'multiline':True]
['text':' expectedOplogRetDocsForEachShard ','line_number':348,'multiline':True]
['text':' expectedOplogRetDocsForEachShard ','line_number':363,'multiline':True]
['text':' expectedOplogRetDocsForEachShard ','line_number':385,'multiline':True]
['text':' Ensure that the '$match' on non-existing db should not return any document and oplog should not','line_number':387,'multiline':False]
['text':' return any document for each shard.','line_number':388,'multiline':False]
['text':' expectedOplogRetDocsForEachShard ','line_number':392,'multiline':True]
['text':' expectedOplogRetDocsForEachShard ','line_number':396,'multiline':True]
['text':' Ensure that the '$match' on empty db should not return any document and oplog should not return','line_number':398,'multiline':False]
['text':' any document for each shard.','line_number':399,'multiline':False]
['text':' expectedOplogRetDocsForEachShard ','line_number':401,'multiline':True]
['text':' expectedOplogRetDocsForEachShard ','line_number':405,'multiline':True]
['text':' Ensure that the '$match' on sub field of db should not return any document and oplog should not','line_number':407,'multiline':False]
['text':' return any document for each shard.','line_number':408,'multiline':False]
['text':' expectedOplogRetDocsForEachShard ','line_number':412,'multiline':True]
['text':' expectedOplogRetDocsForEachShard ','line_number':416,'multiline':True]
['text':' This group of tests ensures that the '$match' on collection field path should emit only the','line_number':418,'multiline':False]
['text':' required documents and oplog should return only required document(s) for each shard.','line_number':419,'multiline':False]
['text':' expectedOplogRetDocsForEachShard ','line_number':427,'multiline':True]
['text':' expectedOplogRetDocsForEachShard ','line_number':435,'multiline':True]
['text':' Ensure that the '$match' on sub field of collection should not return any document and oplog','line_number':437,'multiline':False]
['text':' should not return any document for each shard.','line_number':438,'multiline':False]
['text':' expectedOplogRetDocsForEachShard ','line_number':442,'multiline':True]
['text':' expectedOplogRetDocsForEachShard ','line_number':446,'multiline':True]
['text':' Ensure that '$in' on db should return all documents and oplog should return all documents for','line_number':448,'multiline':False]
['text':' each shard.','line_number':449,'multiline':False]
['text':' expectedOplogRetDocsForEachShard ','line_number':464,'multiline':True]
['text':' expectedOplogRetDocsForEachShard ','line_number':479,'multiline':True]
['text':' Ensure that an empty '$in' on db path should not match any collection and oplog should not return','line_number':481,'multiline':False]
['text':' any document for each shard.','line_number':482,'multiline':False]
['text':' expectedOplogRetDocsForEachShard ','line_number':486,'multiline':True]
['text':' expectedOplogRetDocsForEachShard ','line_number':490,'multiline':True]
['text':' Ensure that '$in' with invalid db cannot be rewritten and oplog should return all documents for','line_number':492,'multiline':False]
['text':' each shard.','line_number':493,'multiline':False]
['text':' expectedOplogRetDocsForEachShard ','line_number':508,'multiline':True]
['text':' Ensure that '$expr' with mix of valid and invalid db names should return required documents at','line_number':510,'multiline':False]
['text':' the oplog for each shard.','line_number':511,'multiline':False]
['text':' expectedOplogRetDocsForEachShard ','line_number':526,'multiline':True]
['text':' Ensure that '$in' on db path with mix of string and regex can be rewritten and oplog should','line_number':528,'multiline':False]
['text':' return '0' document for each shard.','line_number':529,'multiline':False]
['text':' expectedOplogRetDocsForEachShard ','line_number':533,'multiline':True]
['text':' expectedOplogRetDocsForEachShard ','line_number':546,'multiline':True]
['text':' Ensure that '$in' on regex of multiple collections should return the required documents and oplog','line_number':548,'multiline':False]
['text':' should return required documents for each shard.','line_number':549,'multiline':False]
['text':' expectedOplogRetDocsForEachShard ','line_number':564,'multiline':True]
['text':' expectedOplogRetDocsForEachShard ','line_number':588,'multiline':True]
['text':' This group of tests ensures that '$in' and equivalent '$expr' expression on regex of matching all','line_number':590,'multiline':False]
['text':' collections should return all documents and oplog should return all documents for each shard.','line_number':591,'multiline':False]
['text':' expectedOplogRetDocsForEachShard ','line_number':609,'multiline':True]
['text':' expectedOplogRetDocsForEachShard ','line_number':636,'multiline':True]
['text':' These group of tests ensure that '$nin' and equivalent '$expr' expression on matching db name','line_number':638,'multiline':False]
['text':' should only return documents from unmonitored db and oplog should return only required documents','line_number':639,'multiline':False]
['text':' from unmonitored db.','line_number':640,'multiline':False]
['text':' expectedOplogRetDocsForEachShard ','line_number':644,'multiline':True]
['text':' expectedOplogRetDocsForEachShard ','line_number':660,'multiline':True]
['text':' expectedOplogRetDocsForEachShard ','line_number':665,'multiline':True]
['text':' expectedOplogRetDocsForEachShard ','line_number':684,'multiline':True]
['text':' Ensure that '$nin' and equivalent '$expr' expression on multiple collections should return the','line_number':686,'multiline':False]
['text':' required documents and oplog should return required documents for each shard.','line_number':687,'multiline':False]
['text':' expectedOplogRetDocsForEachShard ','line_number':692,'multiline':True]
['text':' expectedOplogRetDocsForEachShard ','line_number':700,'multiline':True]
['text':' Ensure that '$nin' with invalid collection cannot be rewritten and oplog should return all','line_number':702,'multiline':False]
['text':' documents for each shard.','line_number':703,'multiline':False]
['text':' expectedOplogRetDocsForEachShard ','line_number':716,'multiline':True]
['text':'','line_number':718,'multiline':False]
['text':' The below tests are special cases where the pushdown optimizations are not enabled.','line_number':719,'multiline':False]
['text':'','line_number':720,'multiline':False]
['text':' The sharding operations are generally logged as no-op operations in the oplog and are only','line_number':721,'multiline':False]
['text':' emitted by the primary shard of the db. The pushdown optimizations are not enabled for no-op','line_number':722,'multiline':False]
['text':' operations. Similarly, operations on views also do not make use of any optimizations.','line_number':723,'multiline':False]
['text':'','line_number':724,'multiline':False]
['text':' Open a change stream and store the resume token. This resume token will be used to replay the','line_number':731,'multiline':False]
['text':' stream after this point.','line_number':732,'multiline':False]
['text':' The shardCollection command may produce an additional no-op oplog entries like','line_number':736,'multiline':False]
['text':' 'migrateChunkToNewShard' which is always read by the change stream. So each of the 'shardColl'','line_number':737,'multiline':False]
['text':' would add two no-op oplog entries, in addition to the 'create' operation.','line_number':738,'multiline':False]
['text':' shard key ','line_number':740,'multiline':True]
['text':' split at ','line_number':741,'multiline':True]
['text':' move the chunk containing {shardKey: 1} to its own shard. This should result in
                  'migrateChunkToNewShard' oplog entry ','line_number':744,'multiline':True]
['text':' shard key ','line_number':750,'multiline':True]
['text':' split at ','line_number':751,'multiline':True]
['text':' move the chunk containing {shardKey: 1} to its own shard. This should result in
                  'migrateChunkToNewShard' oplog entry ','line_number':754,'multiline':True]
['text':' shard key ','line_number':760,'multiline':True]
['text':' split at ','line_number':761,'multiline':True]
['text':' move the chunk containing {shardKey: 1} to its own shard. This should result in
                  'migrateChunkToNewShard' oplog entry ','line_number':764,'multiline':True]
['text':' Operations on views are treated as a special case and the pushdown optimizations does not work on','line_number':769,'multiline':False]
['text':' the views. So all the below 4 operations should be returned from the oplog scan.','line_number':770,'multiline':False]
['text':' Ensure that the '$match' on the namespace with only db component should not emit any document. We','line_number':777,'multiline':False]
['text':' should always see the 8 documents (4 from views + 2 for each shardCollection + 2 for each','line_number':778,'multiline':False]
['text':' migrateChunkToNewShard) on shard0, and 2 documents on shard1. The 'create' operations that do','line_number':779,'multiline':False]
['text':' undergo pushdown optimization and should only be returned when the match filter matches.','line_number':780,'multiline':False]
['text':' expectedOplogRetDocsForEachShard ','line_number':784,'multiline':True]
['text':' expectedOplogRetDocsForEachShard ','line_number':788,'multiline':True]
['text':' expectedOplogRetDocsForEachShard ','line_number':793,'multiline':True]
['text':' expectedOplogRetDocsForEachShard ','line_number':798,'multiline':True]
['text':' expectedOplogRetDocsForEachShard ','line_number':803,'multiline':True]
['text':' expectedOplogRetDocsForEachShard ','line_number':814,'multiline':True]
['text':' Create a new change stream and resume token for replaying the stream after this point.','line_number':816,'multiline':False]
['text':' The test cases below verify the behavior of regex matches with escaped characters on collections','line_number':820,'multiline':False]
['text':' with special names (e.g. containing dots). This exercises the fix for SERVER-67715.','line_number':821,'multiline':False]
['text':' shardKey ','line_number':823,'multiline':True]
['text':'splitAt ','line_number':823,'multiline':True]
['text':' shardKey ','line_number':832,'multiline':True]
['text':'splitAt ','line_number':832,'multiline':True]
['text':' Ensure that a regex match properly respects escaped characters (here, testing that the escaped','line_number':840,'multiline':False]
['text':' "." character is treated as a literal dot). Note that we expect 5 extra oplog entries on shard0:','line_number':841,'multiline':False]
['text':'  - 1 from the "create" event (which only appears on shard0)','line_number':842,'multiline':False]
['text':'  - 4 no-op entries from sharding the two collections that are not affected by the filter pushdown','line_number':843,'multiline':False]
['text':'    (2 "shardCollection" + 2 "migrateChunkToNewShard")','line_number':844,'multiline':False]
['text':' expectedOplogRetDocsForEachShard ','line_number':857,'multiline':True]
