['text':'!/usr/bin/env python3','line_number':1,'multiline':False]
['text':' the current state of all files, contain the cmd_entry, hashes, successes','line_number':100,'multiline':False]
['text':' the current state cycles being tracked','line_number':103,'multiline':False]
['text':' we never use a test_dir in check mode, since no files are copied in that mode.','line_number':219,'multiline':False]
['text':' make a directory in the output location that we can store the state of the the','line_number':223,'multiline':False]
['text':' header dep and source file the compile command was run with, delete old results','line_number':224,'multiline':False]
['text':' we need to lock on specific file io because GIL does not cover system io, so two threads','line_number':242,'multiline':False]
['text':' could be doing io on the same file at the same time.','line_number':243,'multiline':False]
['text':' before we run IWYU, we take a guess at the likely header by swapping .cpp for .h','line_number':291,'multiline':False]
['text':' so it may not be a real header. After IWYU runs we know exactly where to add the pragmas','line_number':292,'multiline':False]
['text':' in case we got it wrong the first time around','line_number':293,'multiline':False]
['text':' we load in the file content operate on it, and then write it back out','line_number':297,'multiline':False]
['text':' copy each required header from our source tree into our test dir','line_number':373,'multiline':False]
['text':' this does cost some time, but the alternative (everything operating in the real source tree)','line_number':374,'multiline':False]
['text':' was much longer due to constant failures.','line_number':375,'multiline':False]
['text':' need to create dirs for outputs','line_number':381,'multiline':False]
['text':' pylint: disable=global-statement','line_number':395,'multiline':False]
['text':' There might be faster ways to store this like serialization or','line_number':472,'multiline':False]
['text':' what not, but having human readable json is good for debugging.','line_number':473,'multiline':False]
['text':' on a full build this takes around 10 seconds to write out.','line_number':474,'multiline':False]
['text':' atomic move operation prevents ctrl+c mashing from','line_number':477,'multiline':False]
['text':' destroying everything, at least we can keep the original','line_number':478,'multiline':False]
['text':' data safe from emotional outbursts.','line_number':479,'multiline':False]
['text':' we only skip if the matching mode was successful last time, otherwise we assume we need to rerun','line_number':508,'multiline':False]
['text':' first time we could be executing a real command so we make sure the dir','line_number':549,'multiline':False]
['text':' so the compiler is not mad','line_number':550,'multiline':False]
['text':' setup up command for fast depfile generation','line_number':557,'multiline':False]
['text':' if successful, record the latest deps with there hashes, otherwise try again later','line_number':570,'multiline':False]
['text':' if the dep command failed the context will through an execption, we will ignore just','line_number':586,'multiline':False]
['text':' that case','line_number':587,'multiline':False]
['text':' assert we are working with a pure clang++ build','line_number':606,'multiline':False]
['text':' swap out for our tool and add in extra options for IWYU','line_number':612,'multiline':False]
['text':' mimic the PATH we normally use in our build','line_number':618,'multiline':False]
['text':' IWYU has some bugs about forward declares I am assuming, because in some cases even though','line_number':625,'multiline':False]
['text':' we have passed --no_fwd_decls it still sometimes recommend forward declares and sometimes they','line_number':626,'multiline':False]
['text':' are wrong and cause compilation errors.','line_number':627,'multiline':False]
['text':' IWYU has weird exit codes, where a >=2 is considered success:','line_number':637,'multiline':False]
['text':' https://github.com/include-what-you-use/include-what-you-use/blob/clang_12/iwyu_globals.h#L27-L34','line_number':638,'multiline':False]
['text':' save the output for debug or inspection later','line_number':655,'multiline':False]
['text':' we want to capture the header deps again because IWYU may have changed them','line_number':693,'multiline':False]
['text':' our test compile has failed so we need to report and setup for debug','line_number':703,'multiline':False]
['text':' calculate the hashes of the deps used to create','line_number':713,'multiline':False]
['text':' this successful compile.','line_number':714,'multiline':False]
['text':' if we failed, the depfile may not have been generated, so check for it','line_number':728,'multiline':False]
['text':' ignore it','line_number':729,'multiline':False]
['text':' step 1','line_number':748,'multiline':False]
['text':' if we have deps from a previous that should be a good enough indicator','line_number':752,'multiline':False]
['text':' of how dependency heavy it is, and its worth just taking that over','line_number':753,'multiline':False]
['text':' needing to invoke the compiler.','line_number':754,'multiline':False]
['text':' step 1','line_number':776,'multiline':False]
['text':' step 2','line_number':780,'multiline':False]
['text':' step 3','line_number':784,'multiline':False]
['text':' success!','line_number':789,'multiline':False]
['text':' step 1','line_number':805,'multiline':False]
['text':' step 2','line_number':809,'multiline':False]
['text':' the changes will be done in an isolated test dir so not to conflict with','line_number':815,'multiline':False]
['text':' other concurrent processes.','line_number':816,'multiline':False]
['text':' a first round of pragmas to make sure IWYU doesn't fail or remove things we dont want','line_number':819,'multiline':False]
['text':' step 3','line_number':822,'multiline':False]
['text':' now we can extract exactly what files IWYU operated on and copy only those back','line_number':827,'multiline':False]
['text':' step 4','line_number':835,'multiline':False]
['text':' a final round of pragmas for the next time this is run through IWYU','line_number':839,'multiline':False]
['text':' step 5','line_number':842,'multiline':False]
['text':' pylint: disable=global-statement','line_number':863,'multiline':False]
['text':' ctrl+c tru to shutdown as fast as possible.','line_number':869,'multiline':False]
['text':' load in any data from prior runs','line_number':876,'multiline':False]
['text':' load in the compile commands','line_number':881,'multiline':False]
['text':' assert the generated source code has been generated','line_number':885,'multiline':False]
['text':' We can optimize the order we process things by processing source files','line_number':919,'multiline':False]
['text':' with the least number of dependencies first. This is a cost up front','line_number':920,'multiline':False]
['text':' but will result in huge gains in the amount of re-processing to be done.','line_number':921,'multiline':False]
['text':' create and run the dependency check jobs','line_number':927,'multiline':False]
['text':' this loop will keep looping until a full run produce no new changes.','line_number':947,'multiline':False]
['text':' create and run the IWYU jobs','line_number':954,'multiline':False]
['text':' process the results','line_number':966,'multiline':False]
['text':' any result which implies there could be changes required sets the','line_number':970,'multiline':False]
['text':' next loop','line_number':971,'multiline':False]
['text':' if a file is considered done for this loop, update the status bar','line_number':975,'multiline':False]
['text':' resubmit jobs which may have a better change to run later','line_number':980,'multiline':False]
['text':' handle a failure case, excpetion quickly drops us out of this loop.','line_number':983,'multiline':False]
