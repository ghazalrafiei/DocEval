['text':'!/usr/bin/env python3','line_number':1,'multiline':False]
['text':' pylint: disable=wrong-import-position','line_number':11,'multiline':False]
['text':' Get relative imports to work when the package is not installed on the PYTHONPATH.','line_number':30,'multiline':False]
['text':'#############################################################################','line_number':37,'multiline':False]
['text':'','line_number':38,'multiline':False]
['text':' Constants for clang-format','line_number':39,'multiline':False]
['text':'','line_number':40,'multiline':False]
['text':'','line_number':41,'multiline':False]
['text':' Expected version of clang-format','line_number':43,'multiline':False]
['text':' Name of clang-format as a binary','line_number':48,'multiline':False]
['text':' TODO: Move clang format to the v4 toolchain','line_number':53,'multiline':False]
['text':'#############################################################################','line_number':57,'multiline':False]
['text':' Download from file','line_number':65,'multiline':False]
['text':' Retry download up to 5 times.','line_number':69,'multiline':False]
['text':' Check the clang-format the user specified','line_number':90,'multiline':False]
['text':' Check the environment variable','line_number':98,'multiline':False]
['text':' Check for the binary in the expected toolchain directory on non-windows systems','line_number':105,'multiline':False]
['text':' Check the users' PATH environment variable now','line_number':113,'multiline':False]
['text':' Check for various versions staring with binaries with version specific suffixes in the','line_number':115,'multiline':False]
['text':' user's path','line_number':116,'multiline':False]
['text':' If Windows, try to grab it from Program Files','line_number':127,'multiline':False]
['text':' Check both native Program Files and WOW64 version','line_number':128,'multiline':False]
['text':' Have not found it yet, download it from the web','line_number':148,'multiline':False]
['text':' Download a new version if the cache is empty or stale and set permissions (0755)','line_number':158,'multiline':False]
['text':' Validate we have the correct version','line_number':169,'multiline':False]
['text':' We only can fail here if the user specified a clang-format binary and it is the wrong','line_number':170,'multiline':False]
['text':' version','line_number':171,'multiline':False]
['text':' Get formatted file as clang-format would format the file','line_number':197,'multiline':False]
['text':' Take a lock to ensure diffs do not get mixed when printed to the screen','line_number':209,'multiline':False]
['text':' Update the file with clang-format','line_number':229,'multiline':False]
['text':' We have to tell `clang-format` to format on standard input due to its file type','line_number':230,'multiline':False]
['text':' determiner.  `--assume-filename` doesn't work directly on files, but only on standard','line_number':231,'multiline':False]
['text':' input.  Thus we have to open the file as the subprocess's standard input. Then we record','line_number':232,'multiline':False]
['text':' that formatted standard output back into the file.  We can't use the `-i` option, due to','line_number':233,'multiline':False]
['text':' the fact that `clang-format` believes that many of our C++ headers are Objective-C code.','line_number':234,'multiline':False]
['text':' Version 3.8 generates files like foo.cpp~RF83372177.TMP when it formats foo.cpp','line_number':250,'multiline':False]
['text':' on Windows, we must clean these up','line_number':251,'multiline':False]
['text':' Patch may have files that we do not want to check which is fine','line_number':296,'multiline':False]
['text':' Validate that user passes valid commits','line_number':370,'multiline':False]
['text':' Validate the user is on a local branch that has the right merge base','line_number':384,'multiline':False]
['text':' Validate the user has no pending changes','line_number':388,'multiline':False]
['text':' We assume the target branch is master, it could be a different branch if needed for testing','line_number':401,'multiline':False]
['text':' Everything looks good so lets start going through all the commits','line_number':408,'multiline':False]
['text':' Go through all the commits the user made on the local branch and migrate to a new branch','line_number':425,'multiline':False]
['text':' that is based on post_reformat commits instead','line_number':426,'multiline':False]
['text':' Format each of the files by checking out just a single commit from the user's branch','line_number':432,'multiline':False]
['text':' Format each file needed if it was not deleted','line_number':437,'multiline':False]
['text':' Check if anything needed reformatting, and if so amend the commit','line_number':450,'multiline':False]
['text':' Rebase our new commit on top the post-reformat commit','line_number':456,'multiline':False]
['text':' Checkout the new branch with the reformatted commits','line_number':459,'multiline':False]
['text':' Note: we will not name as a branch until we are done with all commits on the local branch','line_number':460,'multiline':False]
['text':' Copy each file from the reformatted commit on top of the post reformat','line_number':463,'multiline':False]
['text':' If the file was deleted in the commit we are reformatting, we need to delete it again','line_number':468,'multiline':False]
['text':' The file has been added or modified, continue as normal','line_number':473,'multiline':False]
['text':' Create a new commit onto clang-formatted branch','line_number':485,'multiline':False]
['text':' Create a new branch to mark the hashes we have been using','line_number':490,'multiline':False]
