['text':' Copyright (C) 2018-present MongoDB, Inc.','line_number':1,'multiline':False]
['text':'','line_number':2,'multiline':False]
['text':' This program is free software: you can redistribute it and/or modify','line_number':3,'multiline':False]
['text':' it under the terms of the Server Side Public License, version 1,','line_number':4,'multiline':False]
['text':' as published by MongoDB, Inc.','line_number':5,'multiline':False]
['text':'','line_number':6,'multiline':False]
['text':' This program is distributed in the hope that it will be useful,','line_number':7,'multiline':False]
['text':' but WITHOUT ANY WARRANTY; without even the implied warranty of','line_number':8,'multiline':False]
['text':' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the','line_number':9,'multiline':False]
['text':' Server Side Public License for more details.','line_number':10,'multiline':False]
['text':'','line_number':11,'multiline':False]
['text':' You should have received a copy of the Server Side Public License','line_number':12,'multiline':False]
['text':' along with this program. If not, see','line_number':13,'multiline':False]
['text':' <http://www.mongodb.com/licensing/server-side-public-license>.','line_number':14,'multiline':False]
['text':'','line_number':15,'multiline':False]
['text':' As a special exception, the copyright holders give permission to link the','line_number':16,'multiline':False]
['text':' code of portions of this program with the OpenSSL library under certain','line_number':17,'multiline':False]
['text':' conditions as described in each individual source file and distribute','line_number':18,'multiline':False]
['text':' linked combinations including the program with the OpenSSL library. You','line_number':19,'multiline':False]
['text':' must comply with the Server Side Public License in all respects for','line_number':20,'multiline':False]
['text':' all of the code used other than as permitted herein. If you modify file(s)','line_number':21,'multiline':False]
['text':' with this exception, you may extend this exception to your version of the','line_number':22,'multiline':False]
['text':' file(s), but you are not obligated to do so. If you do not wish to do so,','line_number':23,'multiline':False]
['text':' delete this exception statement from your version. If you delete this','line_number':24,'multiline':False]
['text':' exception statement from all source files in the program, then also delete','line_number':25,'multiline':False]
['text':' it in the license file.','line_number':26,'multiline':False]
['text':'','line_number':27,'multiline':False]
['text':' type: (ast.Field) -> bool','line_number':41,'multiline':False]
['text':' type: (ast.Field) -> str','line_number':48,'multiline':False]
['text':' Use the storage type for the constructor argument since the generated code will use std::move.','line_number':51,'multiline':False]
['text':' type: (ast.Struct) -> List[str]','line_number':58,'multiline':False]
['text':' Since this contains defaults, we need to push this to the end of the list.','line_number':63,'multiline':False]
['text':' type: (str) -> None','line_number':76,'multiline':False]
['text':' type: (bool) -> str','line_number':88,'multiline':False]
['text':' type: ignore','line_number':91,'multiline':False]
['text':' type: ignore','line_number':92,'multiline':False]
['text':' pylint: disable=too-many-instance-attributes','line_number':98,'multiline':False]
['text':' type: (str, str, List[str], str, bool, bool, bool, Optional[str]) -> None','line_number':102,'multiline':False]
['text':' pylint: disable=too-many-arguments','line_number':103,'multiline':False]
['text':' type: () -> str','line_number':115,'multiline':False]
['text':' type: () -> str','line_number':140,'multiline':False]
['text':' type: (Optional[str]) -> str','line_number':159,'multiline':False]
['text':' type: () -> Optional[str]','line_number':172,'multiline':False]
['text':' type: (bool) -> MethodInfo','line_number':182,'multiline':False]
['text':' type: (bool) -> MethodInfo','line_number':188,'multiline':False]
['text':' type: () -> MethodInfo','line_number':194,'multiline':False]
['text':' type: () -> MethodInfo','line_number':200,'multiline':False]
['text':' type: () -> MethodInfo','line_number':206,'multiline':False]
['text':' type: () -> MethodInfo','line_number':212,'multiline':False]
['text':' type: () -> MethodInfo','line_number':218,'multiline':False]
['text':' type: () -> MethodInfo','line_number':224,'multiline':False]
['text':' type: () -> Optional[MethodInfo]','line_number':230,'multiline':False]
['text':' type: () -> Optional[MethodInfo]','line_number':236,'multiline':False]
['text':' type: () -> Optional[MethodInfo]','line_number':242,'multiline':False]
['text':' type: (writer.IndentedTextWriter) -> None','line_number':248,'multiline':False]
['text':' type: (writer.IndentedTextWriter) -> None','line_number':254,'multiline':False]
['text':' type: (writer.IndentedTextWriter) -> None','line_number':260,'multiline':False]
['text':' type: (writer.IndentedTextWriter, str, str) -> None','line_number':266,'multiline':False]
['text':' type: (ast.Struct) -> None','line_number':275,'multiline':False]
['text':' type: (bool) -> MethodInfo','line_number':280,'multiline':False]
['text':' type: (bool) -> MethodInfo','line_number':285,'multiline':False]
['text':' type: () -> MethodInfo','line_number':290,'multiline':False]
['text':' type: () -> MethodInfo','line_number':300,'multiline':False]
['text':' type: () -> MethodInfo','line_number':310,'multiline':False]
['text':' type: () -> MethodInfo','line_number':323,'multiline':False]
['text':' type: () -> MethodInfo','line_number':329,'multiline':False]
['text':' type: () -> MethodInfo','line_number':337,'multiline':False]
['text':' type: () -> Optional[MethodInfo]','line_number':345,'multiline':False]
['text':' type: () -> Optional[MethodInfo]','line_number':349,'multiline':False]
['text':' type: () -> Optional[MethodInfo]','line_number':353,'multiline':False]
['text':' type: (writer.IndentedTextWriter) -> None','line_number':357,'multiline':False]
['text':' type: (writer.IndentedTextWriter) -> None','line_number':361,'multiline':False]
['text':' type: (writer.IndentedTextWriter) -> None','line_number':365,'multiline':False]
['text':' type: (writer.IndentedTextWriter, str, str) -> None','line_number':369,'multiline':False]
['text':' type: (ast.Command) -> None','line_number':377,'multiline':False]
['text':' type: () -> Optional[MethodInfo]','line_number':384,'multiline':False]
['text':' type: () -> Optional[MethodInfo]','line_number':390,'multiline':False]
['text':' type: () -> Optional[MethodInfo]','line_number':397,'multiline':False]
['text':' type: (ast.Command) -> None','line_number':407,'multiline':False]
['text':' type: () -> MethodInfo','line_number':414,'multiline':False]
['text':' type: () -> MethodInfo','line_number':421,'multiline':False]
['text':' Commands that require namespaces require it as a parameter to serialize()','line_number':422,'multiline':False]
['text':' type: (writer.IndentedTextWriter) -> None','line_number':428,'multiline':False]
['text':' type: (writer.IndentedTextWriter, str, str) -> None','line_number':432,'multiline':False]
['text':' type: (ast.Command, bool) -> str','line_number':437,'multiline':False]
['text':' Use the storage type for the constructor argument since the generated code will use std::move.','line_number':440,'multiline':False]
['text':' type: (ast.Command) -> None','line_number':452,'multiline':False]
['text':' type: (bool) -> MethodInfo','line_number':459,'multiline':False]
['text':' type: (bool) -> MethodInfo','line_number':467,'multiline':False]
['text':' type: () -> MethodInfo','line_number':475,'multiline':False]
['text':' type: () -> MethodInfo','line_number':482,'multiline':False]
['text':' type: () -> MethodInfo','line_number':488,'multiline':False]
['text':' type: (writer.IndentedTextWriter) -> None','line_number':494,'multiline':False]
['text':' type: (writer.IndentedTextWriter) -> None','line_number':498,'multiline':False]
['text':' type: (writer.IndentedTextWriter) -> None','line_number':502,'multiline':False]
['text':' type: (writer.IndentedTextWriter, str, str) -> None','line_number':506,'multiline':False]
['text':' TODO: should the name of the first element be validated??','line_number':507,'multiline':False]
['text':' type: (ast.Command) -> None','line_number':515,'multiline':False]
['text':' type: (bool) -> MethodInfo','line_number':529,'multiline':False]
['text':' type: (bool) -> MethodInfo','line_number':536,'multiline':False]
['text':' type: () -> MethodInfo','line_number':543,'multiline':False]
['text':' type: () -> MethodInfo','line_number':550,'multiline':False]
['text':' type: () -> MethodInfo','line_number':556,'multiline':False]
['text':' type: (writer.IndentedTextWriter) -> None','line_number':562,'multiline':False]
['text':' type: (writer.IndentedTextWriter) -> None','line_number':568,'multiline':False]
['text':' type: (writer.IndentedTextWriter) -> None','line_number':572,'multiline':False]
['text':' type: (writer.IndentedTextWriter, str, str) -> None','line_number':583,'multiline':False]
['text':' TODO: should the name of the first element be validated??','line_number':584,'multiline':False]
['text':' type: (ast.Command) -> None','line_number':601,'multiline':False]
['text':' type: (bool) -> MethodInfo','line_number':615,'multiline':False]
['text':' type: (bool) -> MethodInfo','line_number':622,'multiline':False]
['text':' type: () -> MethodInfo','line_number':629,'multiline':False]
['text':' type: () -> MethodInfo','line_number':636,'multiline':False]
['text':' type: () -> MethodInfo','line_number':642,'multiline':False]
['text':' type: (writer.IndentedTextWriter) -> None','line_number':648,'multiline':False]
['text':' type: (writer.IndentedTextWriter) -> None','line_number':656,'multiline':False]
['text':' type: (writer.IndentedTextWriter) -> None','line_number':660,'multiline':False]
['text':' type: (writer.IndentedTextWriter, str, str) -> None','line_number':665,'multiline':False]
['text':' type: (ast.Struct) -> StructTypeInfoBase','line_number':678,'multiline':False]
