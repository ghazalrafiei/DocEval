['text':' Copyright (C) 2018-present MongoDB, Inc.','line_number':1,'multiline':False]
['text':'','line_number':2,'multiline':False]
['text':' This program is free software: you can redistribute it and/or modify','line_number':3,'multiline':False]
['text':' it under the terms of the Server Side Public License, version 1,','line_number':4,'multiline':False]
['text':' as published by MongoDB, Inc.','line_number':5,'multiline':False]
['text':'','line_number':6,'multiline':False]
['text':' This program is distributed in the hope that it will be useful,','line_number':7,'multiline':False]
['text':' but WITHOUT ANY WARRANTY; without even the implied warranty of','line_number':8,'multiline':False]
['text':' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the','line_number':9,'multiline':False]
['text':' Server Side Public License for more details.','line_number':10,'multiline':False]
['text':'','line_number':11,'multiline':False]
['text':' You should have received a copy of the Server Side Public License','line_number':12,'multiline':False]
['text':' along with this program. If not, see','line_number':13,'multiline':False]
['text':' <http://www.mongodb.com/licensing/server-side-public-license>.','line_number':14,'multiline':False]
['text':'','line_number':15,'multiline':False]
['text':' As a special exception, the copyright holders give permission to link the','line_number':16,'multiline':False]
['text':' code of portions of this program with the OpenSSL library under certain','line_number':17,'multiline':False]
['text':' conditions as described in each individual source file and distribute','line_number':18,'multiline':False]
['text':' linked combinations including the program with the OpenSSL library. You','line_number':19,'multiline':False]
['text':' must comply with the Server Side Public License in all respects for','line_number':20,'multiline':False]
['text':' all of the code used other than as permitted herein. If you modify file(s)','line_number':21,'multiline':False]
['text':' with this exception, you may extend this exception to your version of the','line_number':22,'multiline':False]
['text':' file(s), but you are not obligated to do so. If you do not wish to do so,','line_number':23,'multiline':False]
['text':' delete this exception statement from your version. If you delete this','line_number':24,'multiline':False]
['text':' exception statement from all source files in the program, then also delete','line_number':25,'multiline':False]
['text':' it in the license file.','line_number':26,'multiline':False]
['text':'','line_number':27,'multiline':False]
['text':' type: (IDLSpec, errors.ParserErrorCollection) -> None','line_number':47,'multiline':False]
['text':' type: () -> None','line_number':63,'multiline':False]
['text':' type: SymbolTable','line_number':65,'multiline':False]
['text':' type: Optional[Global]','line_number':66,'multiline':False]
['text':' type: Optional[Import]','line_number':67,'multiline':False]
['text':' type: List[ServerParameter]','line_number':68,'multiline':False]
['text':' type: List[ConfigOption]','line_number':69,'multiline':False]
['text':' type: List[FeatureFlag]','line_number':70,'multiline':False]
['text':' type: (str) -> List[str]','line_number':74,'multiline':False]
['text':' Ban array<variant<..., array<...>, ...>> types.','line_number':85,'multiline':False]
['text':' type: (str) -> str','line_number':94,'multiline':False]
['text':' V1 restriction, ban nested array types to reduce scope.','line_number':102,'multiline':False]
['text':' type: (List[Any], Any) -> Iterator[Tuple[Any, Any]]','line_number':110,'multiline':False]
['text':' type: (Dict[Any, List[Any]]) -> Iterator[Tuple[Any, Any]]','line_number':116,'multiline':False]
['text':' type: () -> None','line_number':130,'multiline':False]
['text':' type: List[Command]','line_number':132,'multiline':False]
['text':' type: List[Enum]','line_number':133,'multiline':False]
['text':' type: List[Struct]','line_number':134,'multiline':False]
['text':' type: List[Type]','line_number':135,'multiline':False]
['text':' type: List[Struct]','line_number':136,'multiline':False]
['text':' type: List[Struct]','line_number':137,'multiline':False]
['text':' type: (errors.ParserContext, common.SourceLocation, str, str) -> bool','line_number':140,'multiline':False]
['text':' type: (errors.ParserContext, Enum) -> None','line_number':160,'multiline':False]
['text':' type: (errors.ParserContext, Struct) -> None','line_number':166,'multiline':False]
['text':' type: (errors.ParserContext, Type) -> None','line_number':172,'multiline':False]
['text':' type: (errors.ParserContext, Command) -> None','line_number':178,'multiline':False]
['text':' type: (Struct) -> None','line_number':185,'multiline':False]
['text':' type: (Struct) -> None','line_number':190,'multiline':False]
['text':' type: (errors.ParserContext, SymbolTable) -> None','line_number':195,'multiline':False]
['text':' type: (str) -> Struct','line_number':220,'multiline':False]
['text':' type: (str) -> Struct','line_number':228,'multiline':False]
['text':' type: (str) -> Struct','line_number':236,'multiline':False]
['text':' type: (errors.ParserContext, common.SourceLocation, str, str) -> Optional[Union[Enum, Struct, Type]]','line_number':244,'multiline':False]
['text':' type: (errors.ParserContext, common.SourceLocation, str, FieldType) -> Optional[Union[Enum, Struct, Type]]','line_number':251,'multiline':False]
['text':' There was an error.','line_number':260,'multiline':False]
['text':' Check if we are adding a duplicate first field name since that would','line_number':269,'multiline':False]
['text':' cause parsing ambiguity.','line_number':270,'multiline':False]
['text':' If alternative_type is an array, element type could be Struct or Type.','line_number':287,'multiline':False]
['text':' The caller should've already stripped "array<...>" from type_name, this may be an','line_number':312,'multiline':False]
['text':' illegal nested array like "array<array<...>>".','line_number':313,'multiline':False]
['text':' type: (str, int, int) -> None','line_number':347,'multiline':False]
['text':' type: str','line_number':349,'multiline':False]
['text':' type: List[str]','line_number':350,'multiline':False]
['text':' type: ConfigGlobal','line_number':351,'multiline':False]
['text':' type: (str, int, int) -> None','line_number':360,'multiline':False]
['text':' type: List[str]','line_number':362,'multiline':False]
['text':' These are not part of the IDL syntax but are produced by the parser.','line_number':364,'multiline':False]
['text':' List of imports with structs.','line_number':365,'multiline':False]
['text':' type: List[str]','line_number':366,'multiline':False]
['text':' All imports directly or indirectly included','line_number':367,'multiline':False]
['text':' type: List[str]','line_number':368,'multiline':False]
['text':' type: (str, int, int) -> None','line_number':383,'multiline':False]
['text':' type: str','line_number':385,'multiline':False]
['text':' type: str','line_number':386,'multiline':False]
['text':' type: List[str]','line_number':387,'multiline':False]
['text':' type: str','line_number':388,'multiline':False]
['text':' type: str','line_number':389,'multiline':False]
['text':' type: str','line_number':390,'multiline':False]
['text':' type: str','line_number':391,'multiline':False]
['text':' type: bool','line_number':392,'multiline':False]
['text':' type: str','line_number':393,'multiline':False]
['text':' type: bool','line_number':394,'multiline':False]
['text':' type: (Union[Struct, Type]) -> None','line_number':403,'multiline':False]
['text':' cpp_type can't be set here for array of variants as element_type.cpp_type is not set yet.','line_number':414,'multiline':False]
['text':' type: (str, int, int) -> None','line_number':421,'multiline':False]
['text':' type: List[Type]','line_number':425,'multiline':False]
['text':' type: List[Struct]','line_number':426,'multiline':False]
['text':' type: (str, int, int) -> None','line_number':438,'multiline':False]
['text':' Don't lint gt/lt as bad attibute names.','line_number':440,'multiline':False]
['text':' pylint: disable=C0103','line_number':441,'multiline':False]
['text':' type: Expression','line_number':442,'multiline':False]
['text':' type: Expression','line_number':443,'multiline':False]
['text':' type: Expression','line_number':444,'multiline':False]
['text':' type: Expression','line_number':445,'multiline':False]
['text':' type: str','line_number':446,'multiline':False]
['text':' type: (str, int, int) -> None','line_number':472,'multiline':False]
['text':' type: str','line_number':474,'multiline':False]
['text':' type: str','line_number':475,'multiline':False]
['text':' type: str','line_number':476,'multiline':False]
['text':' type: FieldType','line_number':477,'multiline':False]
['text':' type: bool','line_number':478,'multiline':False]
['text':' type: bool','line_number':479,'multiline':False]
['text':' type: str','line_number':480,'multiline':False]
['text':' type: bool','line_number':481,'multiline':False]
['text':' type: int','line_number':482,'multiline':False]
['text':' type: Validator','line_number':483,'multiline':False]
['text':' type: bool','line_number':484,'multiline':False]
['text':' type: Optional[bool]','line_number':485,'multiline':False]
['text':' type: Optional[str]','line_number':486,'multiline':False]
['text':' type: bool','line_number':487,'multiline':False]
['text':' type: Optional[bool]','line_number':488,'multiline':False]
['text':' type: Optional[bool]','line_number':489,'multiline':False]
['text':' type: bool','line_number':490,'multiline':False]
['text':' Internal fields - not generated by parser','line_number':492,'multiline':False]
['text':' type: bool','line_number':493,'multiline':False]
['text':' type: bool','line_number':494,'multiline':False]
['text':' type: Optional[str]','line_number':496,'multiline':False]
['text':' type: bool','line_number':498,'multiline':False]
['text':' type: (str, int, int) -> None','line_number':511,'multiline':False]
['text':' type: str','line_number':513,'multiline':False]
['text':' type: str','line_number':514,'multiline':False]
['text':' type: (str, int, int) -> None','line_number':527,'multiline':False]
['text':' type: str','line_number':529,'multiline':False]
['text':' type: str','line_number':530,'multiline':False]
['text':' type: (str, int, int) -> None','line_number':543,'multiline':False]
['text':' type: str','line_number':545,'multiline':False]
['text':' type: str','line_number':546,'multiline':False]
['text':' type: bool','line_number':547,'multiline':False]
['text':' type: bool','line_number':548,'multiline':False]
['text':' type: bool','line_number':549,'multiline':False]
['text':' type: bool','line_number':550,'multiline':False]
['text':' type: List[ChainedType]','line_number':551,'multiline':False]
['text':' type: List[ChainedStruct]','line_number':552,'multiline':False]
['text':' type: List[Field]','line_number':553,'multiline':False]
['text':' type: bool','line_number':554,'multiline':False]
['text':' type: bool','line_number':555,'multiline':False]
['text':' type: str','line_number':556,'multiline':False]
['text':' type: bool','line_number':557,'multiline':False]
['text':' type: bool','line_number':558,'multiline':False]
['text':' type: Optional[str]','line_number':559,'multiline':False]
['text':' pylint: disable=invalid-name','line_number':560,'multiline':False]
['text':' type: bool','line_number':561,'multiline':False]
['text':' Command only property','line_number':563,'multiline':False]
['text':' type: str','line_number':564,'multiline':False]
['text':' Internal property that is not represented as syntax. An imported struct is read from an','line_number':566,'multiline':False]
['text':' imported file, and no code is generated for it.','line_number':567,'multiline':False]
['text':' type: bool','line_number':568,'multiline':False]
['text':' Internal property: cpp_namespace from globals section','line_number':570,'multiline':False]
['text':' type: str','line_number':571,'multiline':False]
['text':' type: bool','line_number':573,'multiline':False]
['text':' type: (str, int, int) -> None','line_number':582,'multiline':False]
['text':' type: str','line_number':585,'multiline':False]
['text':' type: List[str]','line_number':586,'multiline':False]
['text':' This is a parser only field so users can add new agg stages.','line_number':587,'multiline':False]
['text':' type: str','line_number':588,'multiline':False]
['text':' type: () -> str','line_number':593,'multiline':False]
['text':' type: ignore','line_number':603,'multiline':False]
['text':' type: (str, int, int) -> None','line_number':610,'multiline':False]
['text':' type: str','line_number':613,'multiline':False]
['text':' type: Privilege','line_number':614,'multiline':False]
['text':' type: () -> str','line_number':619,'multiline':False]
['text':' type: ignore','line_number':628,'multiline':False]
['text':' type: (str, int, int) -> None','line_number':635,'multiline':False]
['text':' type: bool','line_number':638,'multiline':False]
['text':' type: bool','line_number':639,'multiline':False]
['text':' type: AccessCheck','line_number':640,'multiline':False]
['text':' type: List[AccessCheck]','line_number':641,'multiline':False]
['text':' type: (str, int, int) -> None','line_number':666,'multiline':False]
['text':' type: str','line_number':668,'multiline':False]
['text':' type: str','line_number':669,'multiline':False]
['text':' type: str','line_number':670,'multiline':False]
['text':' type: FieldType','line_number':671,'multiline':False]
['text':' type: str','line_number':672,'multiline':False]
['text':' type: str','line_number':673,'multiline':False]
['text':' type: bool','line_number':674,'multiline':False]
['text':' type: AccessChecks','line_number':675,'multiline':False]
['text':' type: (str, int, int) -> None','line_number':683,'multiline':False]
['text':' type: str','line_number':685,'multiline':False]
['text':' type: bool','line_number':686,'multiline':False]
['text':' type: bool','line_number':687,'multiline':False]
['text':' type: (str, int, int) -> None','line_number':699,'multiline':False]
['text':' type: str','line_number':701,'multiline':False]
['text':' type: str','line_number':702,'multiline':False]
['text':' type: str','line_number':703,'multiline':False]
['text':' type: Dict[str, Any]','line_number':704,'multiline':False]
['text':' type: (str, int, int) -> None','line_number':727,'multiline':False]
['text':' type: str','line_number':729,'multiline':False]
['text':' type: str','line_number':730,'multiline':False]
['text':' type: str','line_number':731,'multiline':False]
['text':' type: List[EnumValue]','line_number':732,'multiline':False]
['text':' Internal property that is not represented as syntax. An imported enum is read from an','line_number':734,'multiline':False]
['text':' imported file, and no code is generated for it.','line_number':735,'multiline':False]
['text':' type: bool','line_number':736,'multiline':False]
['text':' Internal property: cpp_namespace from globals section','line_number':738,'multiline':False]
['text':' type: str','line_number':739,'multiline':False]
['text':' type: (str, int, int) -> None','line_number':748,'multiline':False]
['text':' type: str','line_number':750,'multiline':False]
['text':' type: str','line_number':751,'multiline':False]
['text':' type: str','line_number':752,'multiline':False]
['text':' type: str','line_number':753,'multiline':False]
['text':' type: str','line_number':754,'multiline':False]
['text':' type: (str, int, int) -> None','line_number':771,'multiline':False]
['text':' type: str','line_number':773,'multiline':False]
['text':' type: (Union[FieldTypeSingle, FieldTypeVariant]) -> None','line_number':786,'multiline':False]
['text':' type: Union[FieldTypeSingle, FieldTypeVariant]','line_number':788,'multiline':False]
['text':' type: (str, int, int) -> None','line_number':802,'multiline':False]
['text':' type: List[FieldType]','line_number':804,'multiline':False]
['text':' type: (str, int, int) -> None','line_number':817,'multiline':False]
['text':' type: str','line_number':820,'multiline':False]
['text':' type: str','line_number':821,'multiline':False]
['text':' type: bool','line_number':822,'multiline':False]
['text':' type: (str, int, int) -> None','line_number':841,'multiline':False]
['text':' type: str','line_number':844,'multiline':False]
['text':' type: str','line_number':845,'multiline':False]
['text':' type: bool','line_number':846,'multiline':False]
['text':' type: bool','line_number':847,'multiline':False]
['text':' type: bool','line_number':848,'multiline':False]
['text':' type: (str, int, int) -> None','line_number':857,'multiline':False]
['text':' type: str','line_number':859,'multiline':False]
['text':' type: List[str]','line_number':860,'multiline':False]
['text':' type: str','line_number':861,'multiline':False]
['text':' type: str','line_number':862,'multiline':False]
['text':' type: str','line_number':863,'multiline':False]
['text':' type: ServerParameterClass','line_number':864,'multiline':False]
['text':' type: Condition','line_number':865,'multiline':False]
['text':' type: List[str]','line_number':866,'multiline':False]
['text':' type: bool','line_number':867,'multiline':False]
['text':' type: bool','line_number':868,'multiline':False]
['text':' type: Expression','line_number':869,'multiline':False]
['text':' Only valid if cpp_varname is specified.','line_number':871,'multiline':False]
['text':' type: Validator','line_number':872,'multiline':False]
['text':' type: str','line_number':873,'multiline':False]
['text':' type: (str, int, int) -> None','line_number':882,'multiline':False]
['text':' type: str','line_number':884,'multiline':False]
['text':' type: str','line_number':885,'multiline':False]
['text':' type: str','line_number':886,'multiline':False]
['text':' type: Expression','line_number':887,'multiline':False]
['text':' type: str','line_number':888,'multiline':False]
['text':' pylint: disable=C0103','line_number':889,'multiline':False]
['text':' type: Expression','line_number':890,'multiline':False]
['text':' type: (str, int, int) -> None','line_number':899,'multiline':False]
['text':' type: str','line_number':902,'multiline':False]
['text':' type: str','line_number':903,'multiline':False]
['text':' type: str','line_number':904,'multiline':False]
['text':' type: (str, int, int) -> None','line_number':913,'multiline':False]
['text':' type: str','line_number':915,'multiline':False]
['text':' type: List[str]','line_number':916,'multiline':False]
['text':' type: GlobalInitializer','line_number':917,'multiline':False]
['text':' type: (str, int, int) -> None','line_number':926,'multiline':False]
['text':' type: str','line_number':928,'multiline':False]
['text':' type: List[str]','line_number':929,'multiline':False]
['text':' type: str','line_number':930,'multiline':False]
['text':' type: str','line_number':931,'multiline':False]
['text':' type: List[str]','line_number':932,'multiline':False]
['text':' type: Expression','line_number':934,'multiline':False]
['text':' type: str','line_number':935,'multiline':False]
['text':' type: str','line_number':936,'multiline':False]
['text':' type: str','line_number':937,'multiline':False]
['text':' type: str','line_number':938,'multiline':False]
['text':' type: Condition','line_number':939,'multiline':False]
['text':' type: List[str]','line_number':941,'multiline':False]
['text':' type: List[str]','line_number':942,'multiline':False]
['text':' type: bool','line_number':943,'multiline':False]
['text':' type: bool','line_number':944,'multiline':False]
['text':' type: Expression','line_number':945,'multiline':False]
['text':' type: Expression','line_number':946,'multiline':False]
['text':' type: List[str]','line_number':947,'multiline':False]
['text':' type: str','line_number':948,'multiline':False]
['text':' type: str','line_number':950,'multiline':False]
['text':' type: str','line_number':951,'multiline':False]
['text':' type: Validator','line_number':952,'multiline':False]
