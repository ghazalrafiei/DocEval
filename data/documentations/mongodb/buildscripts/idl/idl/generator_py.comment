['text':' Copyright (C) 2018-present MongoDB, Inc.','line_number':1,'multiline':False]
['text':'','line_number':2,'multiline':False]
['text':' This program is free software: you can redistribute it and/or modify','line_number':3,'multiline':False]
['text':' it under the terms of the Server Side Public License, version 1,','line_number':4,'multiline':False]
['text':' as published by MongoDB, Inc.','line_number':5,'multiline':False]
['text':'','line_number':6,'multiline':False]
['text':' This program is distributed in the hope that it will be useful,','line_number':7,'multiline':False]
['text':' but WITHOUT ANY WARRANTY; without even the implied warranty of','line_number':8,'multiline':False]
['text':' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the','line_number':9,'multiline':False]
['text':' Server Side Public License for more details.','line_number':10,'multiline':False]
['text':'','line_number':11,'multiline':False]
['text':' You should have received a copy of the Server Side Public License','line_number':12,'multiline':False]
['text':' along with this program. If not, see','line_number':13,'multiline':False]
['text':' <http://www.mongodb.com/licensing/server-side-public-license>.','line_number':14,'multiline':False]
['text':'','line_number':15,'multiline':False]
['text':' As a special exception, the copyright holders give permission to link the','line_number':16,'multiline':False]
['text':' code of portions of this program with the OpenSSL library under certain','line_number':17,'multiline':False]
['text':' conditions as described in each individual source file and distribute','line_number':18,'multiline':False]
['text':' linked combinations including the program with the OpenSSL library. You','line_number':19,'multiline':False]
['text':' must comply with the Server Side Public License in all respects for','line_number':20,'multiline':False]
['text':' all of the code used other than as permitted herein. If you modify file(s)','line_number':21,'multiline':False]
['text':' with this exception, you may extend this exception to your version of the','line_number':22,'multiline':False]
['text':' file(s), but you are not obligated to do so. If you do not wish to do so,','line_number':23,'multiline':False]
['text':' delete this exception statement from your version. If you delete this','line_number':24,'multiline':False]
['text':' exception statement from all source files in the program, then also delete','line_number':25,'multiline':False]
['text':' it in the license file.','line_number':26,'multiline':False]
['text':'','line_number':27,'multiline':False]
['text':' Doesn't participate in ownership','line_number':48,'multiline':False]
['text':' Participates in non-exclusive ownership','line_number':49,'multiline':False]
['text':' Takes ownership of underlying data','line_number':50,'multiline':False]
['text':' type: (ast.Field) -> str','line_number':54,'multiline':False]
['text':' type: (ast.Field) -> str','line_number':60,'multiline':False]
['text':' type: (ast.Field) -> str','line_number':66,'multiline':False]
['text':' type: (ast.Field) -> str','line_number':72,'multiline':False]
['text':' type: (ast.Field) -> bool','line_number':78,'multiline':False]
['text':' type: (ast.Field) -> str','line_number':89,'multiline':False]
['text':' type: (ast.Field) -> str','line_number':96,'multiline':False]
['text':' type: (ast.Field) -> str','line_number':102,'multiline':False]
['text':' type: (str, List[str]) -> str','line_number':111,'multiline':False]
['text':' type: (str, str, ast.Type) -> str','line_number':118,'multiline':False]
['text':' Deduplicate the types in the array.','line_number':120,'multiline':False]
['text':' Skip BSON validation for 'any' types since they are required to validate the','line_number':124,'multiline':False]
['text':' BSONElement.','line_number':125,'multiline':False]
['text':' Skip BSON validation for 'chain' types since they process the raw BSONObject the','line_number':126,'multiline':False]
['text':' encapsulating IDL struct parser is passed.','line_number':127,'multiline':False]
['text':' type: (ast.Struct) -> List[ast.Field]','line_number':142,'multiline':False]
['text':' type: (ast.Struct) -> List[ast.Field]','line_number':147,'multiline':False]
['text':' type: (writer.IndentedTextWriter) -> None','line_number':162,'multiline':False]
['text':' type: writer.IndentedTextWriter','line_number':164,'multiline':False]
['text':' type: List[ast.Field]','line_number':165,'multiline':False]
['text':' type: (str) -> None','line_number':169,'multiline':False]
['text':' type: (ast.Field, str) -> None','line_number':175,'multiline':False]
['text':' type: () -> None','line_number':181,'multiline':False]
['text':' type: (ast.Field) -> str','line_number':187,'multiline':False]
['text':' type: (ast.Field) -> str','line_number':193,'multiline':False]
['text':' type: (str) -> str','line_number':199,'multiline':False]
['text':' type: (str) -> str','line_number':204,'multiline':False]
['text':' type: (writer.IndentedTextWriter, List[ast.Field]) -> None','line_number':219,'multiline':False]
['text':' type: (str) -> None','line_number':239,'multiline':False]
['text':' type: (ast.Field, str) -> None','line_number':244,'multiline':False]
['text':' type: () -> None','line_number':264,'multiline':False]
['text':' Don't output dead code we know is unused','line_number':271,'multiline':False]
['text':' To build this bitmask, we assume less then 64 fields. If we exceed this count, we will need a new approach','line_number':275,'multiline':False]
['text':' If 'field.default' is true, the fields(members) gets initialized with the default','line_number':293,'multiline':False]
['text':' value in the class definition. So, it's ok to skip setting the field to','line_number':294,'multiline':False]
['text':' default value here.','line_number':295,'multiline':False]
['text':' type: (writer.IndentedTextWriter, List[ast.Field]) -> None','line_number':316,'multiline':False]
['text':' type: (writer.IndentedTextWriter, ast.Struct) -> _FieldUsageCheckerBase','line_number':323,'multiline':False]
['text':' Only use the fast field usage checker if we never expect extra fields that we need to ignore','line_number':325,'multiline':False]
['text':' but still wish to do duplicate detection on.','line_number':326,'multiline':False]
['text':' Turn a python string into a C++ literal.','line_number':333,'multiline':False]
['text':' type: (str) -> str','line_number':335,'multiline':False]
['text':' Turn a list of pything strings into a C++ initializer list.','line_number':346,'multiline':False]
['text':' type: (List[str]) -> str','line_number':348,'multiline':False]
['text':' Translate an ast.Expression into C++ code.','line_number':355,'multiline':False]
['text':' type: (ast.Expression) -> str','line_number':357,'multiline':False]
['text':' Wrap in a lambda to let the compiler enforce constexprness for us.','line_number':361,'multiline':False]
['text':' The optimization pass should end up inlining it.','line_number':362,'multiline':False]
['text':' type: (writer.IndentedTextWriter) -> None','line_number':375,'multiline':False]
['text':' type: writer.IndentedTextWriter','line_number':377,'multiline':False]
['text':' type: (str) -> None','line_number':380,'multiline':False]
['text':' type: () -> None','line_number':385,'multiline':False]
['text':' type: () -> None','line_number':390,'multiline':False]
['text':' type: (str) -> None','line_number':402,'multiline':False]
['text':' type: (str) -> None','line_number':407,'multiline':False]
['text':' type: (str) -> writer.NamespaceScopeBlock','line_number':412,'multiline':False]
['text':' type: (str, bool, str) -> writer.IndentedScopedBlock','line_number':419,'multiline':False]
['text':' type: (str) -> None','line_number':428,'multiline':False]
['text':' type: (Mapping[str,str]) -> writer.TemplateContext','line_number':436,'multiline':False]
['text':' type: (str, str) -> Union[writer.IndentedScopedBlock,writer.EmptyBlock]','line_number':441,'multiline':False]
['text':' type: (str, bool, bool) -> Union[writer.IndentedScopedBlock,writer.EmptyBlock]','line_number':449,'multiline':False]
['text':' type: (bool) -> Union[writer.IndentedScopedBlock,writer.EmptyBlock]','line_number':468,'multiline':False]
['text':' type: (ast.Condition, bool) -> writer.WriterBlock','line_number':476,'multiline':False]
['text':' type: List[writer.WriterBlock]','line_number':482,'multiline':False]
['text':' type: (str) -> writer.IndentedScopedBlock','line_number':506,'multiline':False]
['text':' type: (ast.Struct) -> None','line_number':512,'multiline':False]
['text':' type: (ast.Struct) -> None','line_number':524,'multiline':False]
['text':' type: (ast.Struct) -> None','line_number':531,'multiline':False]
['text':' type: (ast.Struct) -> None','line_number':545,'multiline':False]
['text':' type: () -> None','line_number':564,'multiline':False]
['text':' type: () -> None','line_number':580,'multiline':False]
['text':' type: (ast.Struct) -> None','line_number':593,'multiline':False]
['text':' type: (ast.Struct, ast.Field) -> None','line_number':608,'multiline':False]
['text':' Generate a getter that disables xvalue for view types (i.e. StringData), constructed','line_number':624,'multiline':False]
['text':' optional types, and non-primitive types.','line_number':625,'multiline':False]
['text':' Support mutable accessors','line_number':635,'multiline':False]
['text':' type: (ast.Field) -> None','line_number':649,'multiline':False]
['text':' Declare method implemented in C++ file.','line_number':665,'multiline':False]
['text':' type: (ast.Field) -> None','line_number':673,'multiline':False]
['text':' type: () -> None','line_number':691,'multiline':False]
['text':' type: (ast.Field) -> None','line_number':697,'multiline':False]
['text':' Struct fields are allowed to specify default: true so that the member gets default-','line_number':703,'multiline':False]
['text':' constructed.','line_number':704,'multiline':False]
['text':' type: (ast.Struct) -> None','line_number':717,'multiline':False]
['text':' type: (ast.Field) -> None','line_number':723,'multiline':False]
['text':' Use a bitfield to save space','line_number':727,'multiline':False]
['text':' type: (ast.Struct) -> None','line_number':731,'multiline':False]
['text':' Initialize constexpr for command alias if specified in the IDL spec.','line_number':754,'multiline':False]
['text':' type: (ast.Struct) -> None','line_number':766,'multiline':False]
['text':' type: (ast.Enum) -> None','line_number':779,'multiline':False]
['text':' type: (ast.Enum) -> None','line_number':792,'multiline':False]
['text':' type: (ast.Command) -> None','line_number':806,'multiline':False]
['text':' type: (ast.Command) -> None','line_number':817,'multiline':False]
['text':' type: (ast.Struct) -> None','line_number':828,'multiline':False]
['text':' type: () -> None','line_number':838,'multiline':False]
['text':' type: (ast.Struct) -> None','line_number':845,'multiline':False]
['text':' type: (str, str, ast.Expression, ast.Condition) -> None','line_number':869,'multiline':False]
['text':' type: (str, str, ast.Condition) -> None','line_number':881,'multiline':False]
['text':' type: (ast.IDLAST) -> None','line_number':901,'multiline':False]
['text':' type: (ast.ServerParameter) -> None','line_number':919,'multiline':False]
['text':' Explicit custom constructor.','line_number':933,'multiline':False]
['text':' Inherit base constructor.','line_number':936,'multiline':False]
['text':' If override_validate is set, provide an override definition. Otherwise, it will inherit','line_number':949,'multiline':False]
['text':' from the base ServerParameter implementation.','line_number':950,'multiline':False]
['text':' The reset() and getClusterParameterTime() methods must be custom implemented for','line_number':956,'multiline':False]
['text':' specialized cluster server parameters. Provide the declarations here.','line_number':957,'multiline':False]
['text':' type: () -> None','line_number':974,'multiline':False]
['text':' type: (str) -> writer.IndentedScopedBlock','line_number':979,'multiline':False]
['text':' type: (str, str) -> None','line_number':985,'multiline':False]
['text':' type: (str, str, str, *str) -> None','line_number':992,'multiline':False]
['text':' type: (str, str) -> None','line_number':999,'multiline':False]
['text':' type: (bool, Union[str, bool]) -> None','line_number':1005,'multiline':False]
['text':' type: (ast.Command) -> None','line_number':1014,'multiline':False]
['text':' public requires special indentation that aligns with the class definition.','line_number':1018,'multiline':False]
['text':' Inherit base constructor.','line_number':1023,'multiline':False]
['text':' type: (ast.Command) -> None','line_number':1034,'multiline':False]
['text':' Write type alias for InvocationBase.','line_number':1043,'multiline':False]
['text':' Write type aliases for Request and Reply.','line_number':1051,'multiline':False]
['text':' Generate a constructor for generated derived class if command alias is specified.','line_number':1055,'multiline':False]
['text':' Generate a destructor for generated derived class.','line_number':1064,'multiline':False]
['text':' Write apiVersions() and deprecatedApiVersions() functions.','line_number':1069,'multiline':False]
['text':' Wrte authorization contract code','line_number':1073,'multiline':False]
['text':' Write InvocationBaseGen class.','line_number':1080,'multiline':False]
['text':' type: (ast.IDLAST) -> None','line_number':1084,'multiline':False]
['text':' Generate system includes first','line_number':1091,'multiline':False]
['text':' Generate user includes second','line_number':1108,'multiline':False]
['text':' Include this for TypedCommand only if a base class will be generated for a command in this','line_number':1135,'multiline':False]
['text':' file.','line_number':1136,'multiline':False]
['text':' Include serialization options only if there is a struct which is part of a query shape.','line_number':1140,'multiline':False]
['text':' Generate namespace','line_number':1154,'multiline':False]
['text':' Alias the reply type as a named type for commands','line_number':1175,'multiline':False]
['text':' Generate a sorted list of string constants','line_number':1181,'multiline':False]
['text':' Write constructor','line_number':1187,'multiline':False]
['text':' Write serialization','line_number':1191,'multiline':False]
['text':' Write deserialization','line_number':1194,'multiline':False]
['text':' Write getters & setters','line_number':1202,'multiline':False]
['text':' Generate getters for any constexpr/compile-time struct data','line_number':1213,'multiline':False]
['text':' Write private validators','line_number':1225,'multiline':False]
['text':' declare internal_only fields first','line_number':1240,'multiline':False]
['text':' Write command member variables','line_number':1245,'multiline':False]
['text':' Write member variables','line_number':1252,'multiline':False]
['text':' Write the HasMember member variable. Note that this is a noop class in','line_number':1258,'multiline':False]
['text':' non-debug builds, and is marked MONGO_COMPILER_NO_UNIQUE_ADDRESS so that the','line_number':1259,'multiline':False]
['text':' compiler knows that it should be optimized to take up no space when possible.','line_number':1260,'multiline':False]
['text':' Write constexpr struct data','line_number':1264,'multiline':False]
['text':' Write a base class for each command in API Version 1.','line_number':1281,'multiline':False]
['text':' Specialize `mongo::idlEnumCount<E>` for each enum `E``.','line_number':1286,'multiline':False]
['text':' type: (writer.IndentedTextWriter, str) -> None','line_number':1303,'multiline':False]
['text':' type: (str, ast.Field, ast.Type, str) -> str','line_number':1309,'multiline':False]
['text':' Custom method, call the method on object.','line_number':1329,'multiline':False]
['text':' Call a static class method with the signature:','line_number':1333,'multiline':False]
['text':' Class Class::method(StringData value)','line_number':1334,'multiline':False]
['text':' or','line_number':1335,'multiline':False]
['text':' Class::method(const BSONObj& value)','line_number':1336,'multiline':False]
['text':' For fields which are enums, pass a IDLParserContext','line_number':1342,'multiline':False]
['text':' BSONObjects are allowed to be pass through without deserialization','line_number':1359,'multiline':False]
['text':' Call a static class method with the signature:','line_number':1363,'multiline':False]
['text':' Class Class::method(const BSONElement& value)','line_number':1364,'multiline':False]
['text':' type: (ast.Field, str, ast.Type, str) -> None','line_number':1373,'multiline':False]
['text':' _gen_variant_deserializer generates code to parse the variant into the variable "_" + field.cpp_name,','line_number':1398,'multiline':False]
['text':' so we create a local variable '_tmp'','line_number':1399,'multiline':False]
['text':' and change cpp_name (for the duration of the _gen_variant_deserializer call) to 'tmp' so we can pass '_tmp'','line_number':1400,'multiline':False]
['text':' to values.push_back below.','line_number':1401,'multiline':False]
['text':' type: (ast.Field, str, str) -> str','line_number':1435,'multiline':False]
['text':' If the array is empty, we can't infer its element type. Use the first','line_number':1447,'multiline':False]
['text':' array type as a fallback to cover that case.','line_number':1448,'multiline':False]
['text':' Start inner switch statement, for each type the first element could be.','line_number':1456,'multiline':False]
['text':' Each copy of the array deserialization code gets an anonymous block.','line_number':1461,'multiline':False]
['text':' End of inner switch.','line_number':1476,'multiline':False]
['text':' End of "case Array:".','line_number':1479,'multiline':False]
['text':' End of outer switch statement.','line_number':1518,'multiline':False]
['text':' Used by _gen_array_deserializer for arrays of variant.','line_number':1521,'multiline':False]
['text':' type: (ast.Field, str, _FieldUsageCheckerBase) -> None','line_number':1556,'multiline':False]
['text':' type: (ast.Field, ast.Type, str, str, _FieldUsageCheckerBase, str, bool, bool, Optional[Callable[[], None]]) -> None','line_number':1567,'multiline':False]
['text':' Internal-only types aren't serialized or deserialized.','line_number':1574,'multiline':False]
['text':' type: (ast.Field, str) -> None','line_number':1597,'multiline':False]
['text':' Do not generate a predicate check since we always call these deserializers.','line_number':1611,'multiline':False]
['text':' Do not generate a new parser context, reuse the current one since we are not','line_number':1614,'multiline':False]
['text':' entering a nested document.','line_number':1615,'multiline':False]
['text':' We must invoke the boost::optional constructor when setting optional view','line_number':1641,'multiline':False]
['text':' types','line_number':1642,'multiline':False]
['text':' No need for explicit validation as setter will throw for us.','line_number':1647,'multiline':False]
['text':' expectPrefix is only included in commands, and we need this value to set','line_number':1652,'multiline':False]
['text':' the state in the local SerializerFlags object','line_number':1653,'multiline':False]
['text':' if we explicitly set _dollarTenant, we know we have a non-prefixed tenantId','line_number':1659,'multiline':False]
['text':' type: (ast.Field, str) -> None','line_number':1669,'multiline':False]
['text':' TODO: add support for sequence length checks, today we allow an empty document sequence','line_number':1677,'multiline':False]
['text':' because we do not give a way for IDL specifications to specify if they allow empty','line_number':1678,'multiline':False]
['text':' sequences or require non-empty sequences.','line_number':1679,'multiline':False]
['text':' Either we are deserializing BSON Objects or IDL structs','line_number':1683,'multiline':False]
['text':' type: (ast.Struct) -> None','line_number':1708,'multiline':False]
['text':' Get the Command element if we need it for later in the deserializer to get the','line_number':1714,'multiline':False]
['text':' namespace','line_number':1715,'multiline':False]
['text':' type: (struct_types.MethodInfo, bool, bool) -> List[str]','line_number':1723,'multiline':False]
['text':' type: List[str]','line_number':1741,'multiline':False]
['text':' Note that in generate() we push internal_only types to the front when building','line_number':1744,'multiline':False]
['text':' declarations. However, constructor.args loses that information as the Args() object is','line_number':1745,'multiline':False]
['text':' constructed via a list of strings, so the order that internal_only types appear in the','line_number':1746,'multiline':False]
['text':' init list is subject to the order in the hardcoded list passed to the constructor.','line_number':1747,'multiline':False]
['text':' For now, _serializationContext is the only internal_only type, so additional work','line_number':1748,'multiline':False]
['text':' around this will be deferred.','line_number':1749,'multiline':False]
['text':' this obj is passed in as a boost::optional, so we set the default if no value','line_number':1758,'multiline':False]
['text':' local _serializationContext obj used to init other structs, so it needs to be','line_number':1761,'multiline':False]
['text':' initialized first; don't move in the event a boost::none is supplied','line_number':1762,'multiline':False]
['text':' type: (ast.Struct, struct_types.MethodInfo, bool) -> None','line_number':1770,'multiline':False]
['text':' Serialize non-has fields first','line_number':1776,'multiline':False]
['text':' Initialize int and other primitive fields to -1 to prevent Coverity warnings.','line_number':1777,'multiline':False]
['text':' As per _gen_initializer_vars(), we initialize _serializationContext first,','line_number':1784,'multiline':False]
['text':' before anything else in the initializer list because it can be consumed by','line_number':1785,'multiline':False]
['text':' other member variables in this list.','line_number':1786,'multiline':False]
['text':' If the current field is a nested struct, we need to pass the initialized','line_number':1788,'multiline':False]
['text':' _serializationContext into the nested struct.','line_number':1789,'multiline':False]
['text':' Serialize the _dbName field second.','line_number':1796,'multiline':False]
['text':' Use the class member to perform the initialization instead of the constructor','line_number':1797,'multiline':False]
['text':' argument, since we're guaranteed to have already written the initializer for the member earlier','line_number':1798,'multiline':False]
['text':' in the list via _gen_initializer_vars above.','line_number':1799,'multiline':False]
['text':' type: (ast.Struct) -> None','line_number':1823,'multiline':False]
['text':' print(struct.name + ": "+  str(required_constructor.args))','line_number':1833,'multiline':False]
['text':' type: (ast.Struct) -> None','line_number':1837,'multiline':False]
['text':' type: (ast.Struct, str, str) -> None','line_number':1868,'multiline':False]
['text':' Generate namespace check now that "$db" has been read or defaulted','line_number':1879,'multiline':False]
['text':' type: (ast.Struct, str, str) -> _FieldUsageCheckerBase','line_number':1883,'multiline':False]
['text':' Update the serialization context whether or not we received a tenantId object','line_number':1892,'multiline':False]
['text':' inject a context into the IDLParserContext that tags the class as a command request','line_number':1894,'multiline':False]
['text':' if a non-default serialization context was passed in via the IDLParserContext,','line_number':1905,'multiline':False]
['text':' use that to set the local serialization context, otherwise set it to a command','line_number':1906,'multiline':False]
['text':' request','line_number':1907,'multiline':False]
['text':' set the local serializer flags according to the constexpr set by is_command_reply','line_number':1923,'multiline':False]
['text':' type: List[ast.Field]','line_number':1930,'multiline':False]
['text':' type: List[str]','line_number':1931,'multiline':False]
['text':' type: () -> None','line_number':1938,'multiline':False]
['text':' Do not parse chained fields as fields since they are actually chained types.','line_number':1953,'multiline':False]
['text':' Internal only fields are not parsed from BSON objects','line_number':1956,'multiline':False]
['text':' Deserialization of 'expectPrefix' modifies the deserializationContext and how','line_number':1963,'multiline':False]
['text':' certain other fields are then deserialized.','line_number':1964,'multiline':False]
['text':' Such dependent fields include those which "deserialize_with_tenant" and','line_number':1965,'multiline':False]
['text':' any complex struct type.','line_number':1966,'multiline':False]
['text':' In practice, this typically only occurs on Command structs.','line_number':1967,'multiline':False]
['text':' Get the Command element if we need it for later in the deserializer to get the','line_number':1987,'multiline':False]
['text':' namespace','line_number':1988,'multiline':False]
['text':' End of for fields','line_number':1999,'multiline':False]
['text':' Generate strict check for extranous fields','line_number':2000,'multiline':False]
['text':' For commands, check if this is a well known command field that the IDL parser','line_number':2002,'multiline':False]
['text':' should ignore regardless of strict mode.','line_number':2003,'multiline':False]
['text':' Ditto for command replies','line_number':2008,'multiline':False]
['text':' Handle the deferred fields after their possible dependencies have been processed.','line_number':2020,'multiline':False]
['text':' Parse chained structs if not inlined','line_number':2028,'multiline':False]
['text':' Parse chained types always here','line_number':2029,'multiline':False]
['text':' Simply generate deserializers since these are all 'any' types','line_number':2035,'multiline':False]
['text':' type: (ast.Struct, struct_types.MethodInfo, struct_types.MethodInfo, _StructDataOwnership) -> None','line_number':2045,'multiline':False]
['text':' type: (str, ast.Expression, ast.Field, str) -> None','line_number':2090,'multiline':False]
['text':' type: (ast.Struct, ast.Field, Tuple[str, str]) -> None','line_number':2098,'multiline':False]
['text':' type: (ast.Struct) -> None','line_number':2134,'multiline':False]
['text':' Fields without validators are implemented in the header.','line_number':2138,'multiline':False]
['text':' type: (ast.Struct) -> None','line_number':2145,'multiline':False]
['text':' Name of the variable that we are deserialzing from','line_number':2162,'multiline':False]
['text':' If the struct contains no fields, there's nothing to deserialize, so we write an empty function stub.','line_number':2166,'multiline':False]
['text':' if the only field is an internal only field, there's also nothing to deserialize','line_number':2169,'multiline':False]
['text':' Deserialize all the fields','line_number':2173,'multiline':False]
['text':' Check for required fields','line_number':2177,'multiline':False]
['text':' type: (ast.Struct) -> None','line_number':2187,'multiline':False]
['text':' Commands that have concatentate_with_db namespaces require db name as a parameter','line_number':2189,'multiline':False]
['text':' 'Empty' structs (those with no fields) don't need to be deserialized','line_number':2190,'multiline':False]
['text':' Deserialize all the fields','line_number':2203,'multiline':False]
['text':' Iterate through the document sequences if we have any','line_number':2207,'multiline':False]
['text':' Only parse document sequence fields here','line_number':2217,'multiline':False]
['text':' End of for fields','line_number':2235,'multiline':False]
['text':' Generate strict check for extranous fields','line_number':2236,'multiline':False]
['text':' Check for required fields','line_number':2250,'multiline':False]
['text':' type: (ast.Field) -> None','line_number':2257,'multiline':False]
['text':' Generate custom serialization','line_number':2260,'multiline':False]
['text':' Is this a scalar bson C++ type?','line_number':2269,'multiline':False]
['text':' Object types need to go through the generic custom serialization code below','line_number':2272,'multiline':False]
['text':' It should be invoked as 'function(subject, ...args);'','line_number':2325,'multiline':False]
['text':' It should be invoked as 'subject.method(...args);'','line_number':2328,'multiline':False]
['text':' Array variants - we pass an array builder','line_number':2333,'multiline':False]
['text':' Non-array variants - we pass the field name they should use, and a BSONObjBuilder.','line_number':2344,'multiline':False]
['text':' Just directly call the serializer for chained structs without opening up a','line_number':2354,'multiline':False]
['text':' nested document.','line_number':2355,'multiline':False]
['text':' type: (ast.Field) -> None','line_number':2369,'multiline':False]
['text':' Just directly call the serializer for chained structs without opening up a nested','line_number':2380,'multiline':False]
['text':' document.','line_number':2381,'multiline':False]
['text':' type: (ast.Field) -> None','line_number':2421,'multiline':False]
['text':' type: (ast.Field, Dict[str, str], str) -> None','line_number':2432,'multiline':False]
['text':' type: (ast.Field) -> None','line_number':2484,'multiline':False]
['text':' Is this a scalar bson C++ type?','line_number':2489,'multiline':False]
['text':' Introduce a new scope for required nested object serialization.','line_number':2499,'multiline':False]
['text':' For array of variants, is_variant == is_array == True.','line_number':2508,'multiline':False]
['text':' Generate default serialization','line_number':2513,'multiline':False]
['text':' Note: BSONObjBuilder::append, which all three branches use, has overrides for std::vector also','line_number':2514,'multiline':False]
['text':' serializeLiteral expects an ImplicitValue, which can't be constructed with an int64_t','line_number':2520,'multiline':False]
['text':' If using field.always_serialize, field.optional must also be true. Add an else block','line_number':2538,'multiline':False]
['text':' that appends null when the optional field is not initialized.','line_number':2539,'multiline':False]
['text':' type: (ast.Struct, bool) -> None','line_number':2545,'multiline':False]
['text':' Check all required fields have been specified','line_number':2550,'multiline':False]
['text':' Serialize the namespace as the first field','line_number':2560,'multiline':False]
['text':' Internal-only types aren't serialized or deserialized.','line_number':2563,'multiline':False]
['text':' If fields are meant to be ignored during deserialization, there is no need to','line_number':2571,'multiline':False]
['text':' serialize. Ignored fields have no backing storage.','line_number':2572,'multiline':False]
['text':' The $db injected field should only be inject when serializing to OpMsgRequest. In the','line_number':2579,'multiline':False]
['text':' BSON case, it will be injected in the generic command layer.','line_number':2580,'multiline':False]
['text':' Serialize fields that can be document sequence as document sequences so as not to','line_number':2584,'multiline':False]
['text':' generate the BSON body >= 16 MB.','line_number':2585,'multiline':False]
['text':' Internal-only types aren't serialized or deserialized, while expectPrefix should not','line_number':2589,'multiline':False]
['text':' be serialized','line_number':2590,'multiline':False]
['text':' Add a blank line after each block','line_number':2596,'multiline':False]
['text':' Append passthrough elements','line_number':2599,'multiline':False]
['text':' type: (ast.Struct) -> None','line_number':2608,'multiline':False]
['text':' type: (ast.Struct) -> None','line_number':2617,'multiline':False]
['text':' type: (ast.Struct) -> None','line_number':2628,'multiline':False]
['text':' _gen_serializer_method_variant expects builder to be a pointer.','line_number':2649,'multiline':False]
['text':' Add a blank line after each block','line_number':2675,'multiline':False]
['text':' type: (ast.Struct) -> None','line_number':2679,'multiline':False]
['text':' type: (ast.Struct) -> None','line_number':2704,'multiline':False]
['text':' Internal only fields are not parsed from BSON objects','line_number':2708,'multiline':False]
['text':' Declare constexp for commmand alias if specified in the IDL spec.','line_number':2722,'multiline':False]
['text':' type: (ast.Struct) -> None','line_number':2729,'multiline':False]
['text':' None means access_checks was not specified, empty list means it has "none: true"','line_number':2735,'multiline':False]
['text':' type: (ast.Enum) -> None','line_number':2756,'multiline':False]
['text':' type: (ast.Struct, str, bool) -> None','line_number':2769,'multiline':False]
['text':' Internal only fields are not parsed from BSON objects','line_number':2781,'multiline':False]
['text':' type: (ast.Struct) -> None','line_number':2795,'multiline':False]
['text':' type: (ast.Struct) -> None','line_number':2804,'multiline':False]
['text':' type: (ast.ServerParameter) -> None','line_number':2822,'multiline':False]
['text':' type: (ast.ServerParameter) -> None','line_number':2831,'multiline':False]
['text':' Specialized cluster parameters should also provide the implementation of setFromString().','line_number':2851,'multiline':False]
['text':' type: (ast.ServerParameter) -> None','line_number':2862,'multiline':False]
['text':' Only need to call setDefault() if we haven't in-place initialized the declared var.','line_number':2891,'multiline':False]
['text':' type: (ast.ServerParameter) -> None','line_number':2898,'multiline':False]
['text':' type: (int, ast.ServerParameter) -> None','line_number':2906,'multiline':False]
['text':' type: (List[ast.ServerParameter], str) -> None','line_number':2917,'multiline':False]
['text':' Definitions for specialized server parameters.','line_number':2921,'multiline':False]
['text':' Optional storage declarations.','line_number':2925,'multiline':False]
['text':' ServerParameter instances.','line_number':2936,'multiline':False]
['text':' type: (ast.ConfigOption, str) -> None','line_number':2961,'multiline':False]
['text':' Derive cpp_vartype from arg_vartype if needed.','line_number':2964,'multiline':False]
['text':' Mark option as coming from IDL autogenerated code.','line_number':2968,'multiline':False]
['text':' Setup initializer for storing configured options in their variables.','line_number':3059,'multiline':False]
['text':' type: (ast.IDLAST, str) -> None','line_number':3079,'multiline':False]
['text':' type: List[ast.ConfigOption]','line_number':3094,'multiline':False]
['text':' type: Dict[str, List[ast.ConfigOption]]','line_number':3095,'multiline':False]
['text':' pylint: disable=consider-using-ternary','line_number':3107,'multiline':False]
['text':' If all options are guarded by non-passing #ifdefs, then params will be unused.','line_number':3138,'multiline':False]
['text':' type: (ast.IDLAST, str) -> None','line_number':3147,'multiline':False]
['text':' Include platform/basic.h','line_number':3152,'multiline':False]
['text':' Generate include for generated header first','line_number':3156,'multiline':False]
['text':' Generate system includes second','line_number':3160,'multiline':False]
['text':' Generate mongo includes third','line_number':3171,'multiline':False]
['text':' Generate namespace','line_number':3199,'multiline':False]
['text':' Write known fields declaration for command','line_number':3215,'multiline':False]
['text':' Write constructor','line_number':3219,'multiline':False]
['text':' Write field validators','line_number':3223,'multiline':False]
['text':' Write serializer','line_number':3233,'multiline':False]
['text':' Write OpMsgRequest serializer','line_number':3237,'multiline':False]
['text':' Write toBSON','line_number':3241,'multiline':False]
['text':' Write field lookup methods','line_number':3246,'multiline':False]
['text':' type: (ast.IDLAST) -> str','line_number':3257,'multiline':False]
['text':' type: (ast.IDLAST, str) -> None','line_number':3270,'multiline':False]
['text':' Generate structs','line_number':3275,'multiline':False]
['text':' type: (ast.IDLAST, str, str) -> str','line_number':3281,'multiline':False]
['text':' type: (ast.IDLAST, str, str, str) -> None','line_number':3294,'multiline':False]
['text':' Generate structs','line_number':3298,'multiline':False]
['text':' type: (ast.IDLAST, str, str, str, str) -> None','line_number':3304,'multiline':False]
['text':' Normalize to POSIX style for consistency across Windows and POSIX.','line_number':3315,'multiline':False]
