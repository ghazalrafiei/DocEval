['text':'!/usr/bin/env python3','line_number':1,'multiline':False]
['text':'','line_number':2,'multiline':False]
['text':' Copyright (C) 2018-present MongoDB, Inc.','line_number':3,'multiline':False]
['text':'','line_number':4,'multiline':False]
['text':' This program is free software: you can redistribute it and/or modify','line_number':5,'multiline':False]
['text':' it under the terms of the Server Side Public License, version 1,','line_number':6,'multiline':False]
['text':' as published by MongoDB, Inc.','line_number':7,'multiline':False]
['text':'','line_number':8,'multiline':False]
['text':' This program is distributed in the hope that it will be useful,','line_number':9,'multiline':False]
['text':' but WITHOUT ANY WARRANTY; without even the implied warranty of','line_number':10,'multiline':False]
['text':' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the','line_number':11,'multiline':False]
['text':' Server Side Public License for more details.','line_number':12,'multiline':False]
['text':'','line_number':13,'multiline':False]
['text':' You should have received a copy of the Server Side Public License','line_number':14,'multiline':False]
['text':' along with this program. If not, see','line_number':15,'multiline':False]
['text':' <http://www.mongodb.com/licensing/server-side-public-license>.','line_number':16,'multiline':False]
['text':'','line_number':17,'multiline':False]
['text':' As a special exception, the copyright holders give permission to link the','line_number':18,'multiline':False]
['text':' code of portions of this program with the OpenSSL library under certain','line_number':19,'multiline':False]
['text':' conditions as described in each individual source file and distribute','line_number':20,'multiline':False]
['text':' linked combinations including the program with the OpenSSL library. You','line_number':21,'multiline':False]
['text':' must comply with the Server Side Public License in all respects for','line_number':22,'multiline':False]
['text':' all of the code used other than as permitted herein. If you modify file(s)','line_number':23,'multiline':False]
['text':' with this exception, you may extend this exception to your version of the','line_number':24,'multiline':False]
['text':' file(s), but you are not obligated to do so. If you do not wish to do so,','line_number':25,'multiline':False]
['text':' delete this exception statement from your version. If you delete this','line_number':26,'multiline':False]
['text':' exception statement from all source files in the program, then also delete','line_number':27,'multiline':False]
['text':' it in the license file.','line_number':28,'multiline':False]
['text':'','line_number':29,'multiline':False]
['text':' import package so that it works regardless of whether we run as a module or file','line_number':35,'multiline':False]
['text':' All YAML tests assume 4 space indent','line_number':46,'multiline':False]
['text':' type: (int) -> str','line_number':51,'multiline':False]
['text':' type: (int, str) -> str','line_number':61,'multiline':False]
['text':' Create a text wrap for common types.','line_number':71,'multiline':False]
['text':' type: () -> None','line_number':124,'multiline':False]
['text':' type: () -> None','line_number':129,'multiline':False]
['text':' type: () -> None','line_number':149,'multiline':False]
['text':' type: () -> None','line_number':158,'multiline':False]
['text':' Test supported types','line_number':172,'multiline':False]
['text':' Test supported numeric types','line_number':188,'multiline':False]
['text':' Test object','line_number':207,'multiline':False]
['text':' Test 'any'','line_number':220,'multiline':False]
['text':' Test 'chain'','line_number':233,'multiline':False]
['text':' Test supported bindata_subtype','line_number':246,'multiline':False]
['text':' type: () -> None','line_number':260,'multiline':False]
['text':' Test bad bson type name','line_number':263,'multiline':False]
['text':' Test bad cpp_type name','line_number':273,'multiline':False]
['text':' Test unsupported serialization','line_number':284,'multiline':False]
['text':' Test the std prefix 8 and 16-byte integers fail','line_number':334,'multiline':False]
['text':' Test bindata_subtype missing','line_number':346,'multiline':False]
['text':' Test fake bindata_subtype is wrong','line_number':357,'multiline':False]
['text':' Test deprecated bindata_subtype 'binary', and 'uuid_old' are wrong','line_number':369,'multiline':False]
['text':' Test bindata_subtype on wrong type','line_number':390,'multiline':False]
['text':' Test bindata with default','line_number':402,'multiline':False]
['text':' Test bindata in list of types','line_number':414,'multiline':False]
['text':' Test bindata in list of types','line_number':426,'multiline':False]
['text':' Test 'any' in list of types','line_number':438,'multiline':False]
['text':' Test object in list of types','line_number':450,'multiline':False]
['text':' Test fake in list of types','line_number':462,'multiline':False]
['text':' Test 'chain' in list of types','line_number':474,'multiline':False]
['text':' Test unsupported serialization','line_number':486,'multiline':False]
['text':' Test 'any' serialization needs deserializer','line_number':514,'multiline':False]
['text':' Test 'chain' serialization needs deserializer','line_number':524,'multiline':False]
['text':' Test 'string' serialization needs deserializer','line_number':535,'multiline':False]
['text':' Test 'date' serialization needs deserializer','line_number':546,'multiline':False]
['text':' Test 'chain' serialization needs serializer','line_number':556,'multiline':False]
['text':' Test list of bson types needs deserializer','line_number':567,'multiline':False]
['text':' Test array as name','line_number':579,'multiline':False]
['text':' type: () -> None','line_number':591,'multiline':False]
['text':' Setup some common types','line_number':594,'multiline':False]
['text':' type: () -> None','line_number':624,'multiline':False]
['text':' Setup some common types','line_number':627,'multiline':False]
['text':' Test array as name','line_number':638,'multiline':False]
['text':' type: () -> None','line_number':659,'multiline':False]
['text':' Setup some common types','line_number':662,'multiline':False]
['text':' Test multiple BSON serialization type Object.','line_number':716,'multiline':False]
['text':' type: () -> None','line_number':737,'multiline':False]
['text':' Setup some common types','line_number':740,'multiline':False]
['text':' Enums are banned in variants for now.','line_number':794,'multiline':False]
['text':' At most one array can have BSON serialization type NumberInt.','line_number':851,'multiline':False]
['text':' For multiple BSON serialization type Objects they must have different field names','line_number':882,'multiline':False]
['text':' for their first field.','line_number':883,'multiline':False]
['text':' At most one type can have BSON serialization type NumberInt.','line_number':904,'multiline':False]
['text':' type: () -> None','line_number':919,'multiline':False]
['text':' Setup some common types','line_number':922,'multiline':False]
['text':' Short type','line_number':925,'multiline':False]
['text':' Long type','line_number':935,'multiline':False]
['text':' Long type with default','line_number':946,'multiline':False]
['text':' Test array as field type','line_number':958,'multiline':False]
['text':' Test array as field type','line_number':968,'multiline':False]
['text':' Test always_serialize with optional','line_number':987,'multiline':False]
['text':' Test field of a struct type with default=true','line_number':1000,'multiline':False]
['text':' type: () -> None','line_number':1018,'multiline':False]
['text':' Setup some common types','line_number':1021,'multiline':False]
['text':' Test field of a struct type with a non-true default','line_number':1045,'multiline':False]
['text':' Test array as field name','line_number':1063,'multiline':False]
['text':' Test recursive array as field type','line_number':1074,'multiline':False]
['text':' Test inherited default with array','line_number':1085,'multiline':False]
['text':' Test non-inherited default with array','line_number':1096,'multiline':False]
['text':' Test bindata with default','line_number':1109,'multiline':False]
['text':' Test default and optional for the same field','line_number':1122,'multiline':False]
['text':' Test always_serialize without optional for the same field','line_number':1136,'multiline':False]
['text':' Test duplicate comparison order','line_number':1150,'multiline':False]
['text':' Test field marked with non_const_getter in immutable struct','line_number':1167,'multiline':False]
['text':' type: () -> None','line_number':1181,'multiline':False]
['text':' type: () -> None','line_number':1201,'multiline':False]
['text':' Setup some common types','line_number':1203,'multiline':False]
['text':' Chaining only','line_number':1216,'multiline':False]
['text':' type: () -> None','line_number':1227,'multiline':False]
['text':' Setup some common types','line_number':1229,'multiline':False]
['text':' Chaining with strict struct','line_number':1241,'multiline':False]
['text':' Non-'any' type as chained type','line_number':1252,'multiline':False]
['text':' Chaining and fields only with same name','line_number':1263,'multiline':False]
['text':' Non-existent chained type','line_number':1276,'multiline':False]
['text':' A regular field as a chained type','line_number':1289,'multiline':False]
['text':' Array of chained types','line_number':1301,'multiline':False]
['text':' type: () -> None','line_number':1313,'multiline':False]
['text':' Setup some common types','line_number':1315,'multiline':False]
['text':' A struct with only chaining','line_number':1341,'multiline':False]
['text':' Chaining struct's fields and explicit fields','line_number':1352,'multiline':False]
['text':' Chained types and structs','line_number':1365,'multiline':False]
['text':' Non-strict chained struct','line_number':1380,'multiline':False]
['text':' Inline Chained struct with strict true','line_number':1393,'multiline':False]
['text':' Inline Chained struct with strict true and inline_chained_structs defaulted','line_number':1414,'multiline':False]
['text':' type: () -> None','line_number':1434,'multiline':False]
['text':' Setup some common types','line_number':1436,'multiline':False]
['text':' Non-existing chained struct','line_number':1462,'multiline':False]
['text':' Type as chained struct','line_number':1474,'multiline':False]
['text':' Struct as chained type','line_number':1486,'multiline':False]
['text':' Duplicated field names across chained struct's fields and fields','line_number':1498,'multiline':False]
['text':' Duplicated field names across chained structs','line_number':1512,'multiline':False]
['text':' Chained struct with strict true','line_number':1525,'multiline':False]
['text':' Chained struct with nested chained struct','line_number':1547,'multiline':False]
['text':' Chained struct with nested chained type','line_number':1568,'multiline':False]
['text':' type: () -> None','line_number':1590,'multiline':False]
['text':' Test int','line_number':1593,'multiline':False]
['text':' Test int - non continuous','line_number':1606,'multiline':False]
['text':' Test string','line_number':1618,'multiline':False]
['text':' type: () -> None','line_number':1632,'multiline':False]
['text':' Test wrong type','line_number':1635,'multiline':False]
['text':' Test int - dups','line_number':1646,'multiline':False]
['text':' Test int - non-integer value','line_number':1658,'multiline':False]
['text':' Test string - dups','line_number':1670,'multiline':False]
['text':' type: () -> None','line_number':1683,'multiline':False]
['text':' Test array of enums','line_number':1696,'multiline':False]
['text':' type: () -> None','line_number':1707,'multiline':False]
['text':' Setup some common types','line_number':1710,'multiline':False]
['text':' type: () -> None','line_number':1733,'multiline':False]
['text':' Setup some common types','line_number':1736,'multiline':False]
['text':' Commands cannot be fields in other commands','line_number':1738,'multiline':False]
['text':' Commands cannot be fields in structs','line_number':1759,'multiline':False]
['text':' Commands cannot have a field as the same name','line_number':1778,'multiline':False]
['text':' Reply type must be resolvable','line_number':1791,'multiline':False]
['text':' Reply type must be a struct','line_number':1803,'multiline':False]
['text':' type: () -> None','line_number':1816,'multiline':False]
['text':' Setup some common types','line_number':1819,'multiline':False]
['text':' type: () -> None','line_number':1856,'multiline':False]
['text':' Setup some common types','line_number':1859,'multiline':False]
['text':' A struct','line_number':1871,'multiline':False]
['text':' A non-array type','line_number':1883,'multiline':False]
['text':' An array of a scalar','line_number':1898,'multiline':False]
['text':' An array of 'any'','line_number':1913,'multiline':False]
['text':' type: () -> None','line_number':1929,'multiline':False]
['text':' Setup some common types','line_number':1931,'multiline':False]
['text':' string','line_number':1934,'multiline':False]
['text':' array of string','line_number':1948,'multiline':False]
['text':' type: () -> None','line_number':1963,'multiline':False]
['text':' Setup some common types','line_number':1965,'multiline':False]
['text':' supports_doc_sequence must be a bool','line_number':1968,'multiline':False]
['text':' type: () -> None','line_number':1983,'multiline':False]
['text':' server parameter with storage.','line_number':1986,'multiline':False]
['text':' Also try valid set_at values.','line_number':1987,'multiline':False]
['text':' server parameter with storage and optional fields.','line_number':1998,'multiline':False]
['text':' Cluster server parameter with storage.','line_number':2016,'multiline':False]
['text':' Bound setting with arbitrary expression default and validators.','line_number':2034,'multiline':False]
['text':' Specialized SCPs.','line_number':2055,'multiline':False]
['text':' Default without data.','line_number':2117,'multiline':False]
['text':' type: () -> None','line_number':2129,'multiline':False]
['text':' Invalid set_at values.','line_number':2132,'multiline':False]
['text':' Mix of specialized with bound storage.','line_number':2142,'multiline':False]
['text':' type: () -> None','line_number':2154,'multiline':False]
['text':' Every field.','line_number':2157,'multiline':False]
['text':' Required fields only.','line_number':2185,'multiline':False]
['text':' List and enum variants.','line_number':2195,'multiline':False]
['text':' Positional variants.','line_number':2211,'multiline':False]
['text':' With implicit short name.','line_number':2223,'multiline':False]
['text':' Expressions in default, implicit, and validators.','line_number':2234,'multiline':False]
['text':' type: () -> None','line_number':2250,'multiline':False]
['text':' Invalid source.','line_number':2253,'multiline':False]
['text':' dottedName is not valid as a shortName.','line_number':2305,'multiline':False]
['text':' Invalid shortname using boost::po format directly.','line_number':2316,'multiline':False]
['text':' Invalid single names, must be single alpha char.','line_number':2327,'multiline':False]
['text':' Single names require a valid short name.','line_number':2339,'multiline':False]
['text':' type: () -> None','line_number':2351,'multiline':False]
['text':' feature flag can default to false without a version (shouldBeFCVGated can be true or false)','line_number':2354,'multiline':False]
['text':' if shouldBeFCVGated: true, feature flag can default to true with a version','line_number':2375,'multiline':False]
['text':' if shouldBeFCVGated: false, we do not need a version','line_number':2387,'multiline':False]
['text':' if shouldBeFCVGated: true and default: true, a version is required','line_number':2398,'multiline':False]
['text':' false is not allowed with a version and shouldBeFCVGated: true','line_number':2409,'multiline':False]
['text':' false is not allowed with a version and shouldBeFCVGated: false','line_number':2421,'multiline':False]
['text':' if shouldBeFCVGated is false, a version is not allowed','line_number':2433,'multiline':False]
['text':' type: () -> None','line_number':2446,'multiline':False]
['text':' Test none','line_number':2478,'multiline':False]
['text':' Test simple with access check','line_number':2493,'multiline':False]
['text':' Test simple with privilege','line_number':2509,'multiline':False]
['text':' type: () -> None','line_number':2550,'multiline':False]
['text':' Test simple with bad access check','line_number':2581,'multiline':False]
['text':' Test simple with bad access check with privilege','line_number':2598,'multiline':False]
['text':' Test simple with bad access check with privilege','line_number':2617,'multiline':False]
['text':' Test simple with access check and privileges','line_number':2636,'multiline':False]
['text':' Test simple with privilege with duplicate action_type','line_number':2654,'multiline':False]
['text':' complex with duplicate check','line_number':2673,'multiline':False]
['text':' complex with duplicate priv','line_number':2691,'multiline':False]
['text':' api_version != "" but not access_check','line_number':2713,'multiline':False]
['text':' Validating query_shape_anonymize relies on std::string','line_number':2772,'multiline':False]
['text':' pylint: disable=invalid-name','line_number':2897,'multiline':False]
['text':' type: () -> None','line_number':2899,'multiline':False]
['text':' Setup some common types','line_number':2902,'multiline':False]
['text':' Test strict and unsafe_dangerous_disable_extra_field_duplicate_checks are not allowed','line_number':2914,'multiline':False]
['text':' Test inheritance is prohibited through structs','line_number':2927,'multiline':False]
['text':' Test inheritance is prohibited through commands','line_number':2940,'multiline':False]
