['text':' Copyright 2021 The HuggingFace Team. All rights reserved.','line_number':1,'multiline':False]
['text':'','line_number':2,'multiline':False]
['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':3,'multiline':False]
['text':' you may not use this file except in compliance with the License.','line_number':4,'multiline':False]
['text':' You may obtain a copy of the License at','line_number':5,'multiline':False]
['text':'','line_number':6,'multiline':False]
['text':'     http://www.apache.org/licenses/LICENSE-2.0','line_number':7,'multiline':False]
['text':'','line_number':8,'multiline':False]
['text':' Unless required by applicable law or agreed to in writing, software','line_number':9,'multiline':False]
['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':10,'multiline':False]
['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':11,'multiline':False]
['text':' See the License for the specific language governing permissions and','line_number':12,'multiline':False]
['text':' limitations under the License.','line_number':13,'multiline':False]
['text':' use a spawn pool, which should trigger a warning if different than fork','line_number':87,'multiline':False]
['text':' force batch_decode to internally create a spawn pool, which should trigger a warning if different than fork','line_number':94,'multiline':False]
['text':' speech is longer','line_number':114,'multiline':False]
['text':' this is most likely not correctly set yet','line_number':128,'multiline':False]
['text':' overwrite because of `input_values`','line_number':244,'multiline':False]
['text':' signature.parameters is an OrderedDict => so arg_names order is deterministic','line_number':251,'multiline':False]
['text':' overwrite because of `input_values`','line_number':257,'multiline':False]
['text':' dummy loss function','line_number':290,'multiline':False]
['text':' compute cosine similarity of projected and projected_quantized states','line_number':300,'multiline':False]
['text':' transform the loss function to get the gradients','line_number':307,'multiline':False]
['text':' compute loss, outputs and gradients for unfrozen model','line_number':310,'multiline':False]
['text':' compare to loss, outputs and gradients for frozen model','line_number':313,'multiline':False]
['text':' ensure that the outputs and losses remain precisely equal','line_number':318,'multiline':False]
['text':' ensure that the dicts of gradients contain the same keys','line_number':326,'multiline':False]
['text':' ensure that the gradients of the feature extractor layers are precisely zero when frozen and contain non-zero entries when unfrozen','line_number':329,'multiline':False]
['text':' ensure that the gradients of all unfrozen layers remain equal, i.e. all layers excluding the frozen 'feature_extractor'','line_number':339,'multiline':False]
['text':' because of overlap mask don't have to add up exactly to `mask_prob * sequence_length`, but have to be smaller or equal','line_number':379,'multiline':False]
['text':' mask half of the input','line_number':407,'multiline':False]
['text':' each value in vector consits of same value','line_number':422,'multiline':False]
['text':' BTC => (BxT)C','line_number':427,'multiline':False]
['text':' take negative vectors from sampled indices','line_number':428,'multiline':False]
['text':' make sure no negatively sampled vector is actually a positive one','line_number':436,'multiline':False]
['text':' make sure that full vectors are sampled and not values of vectors','line_number':440,'multiline':False]
['text':' => this means that `unique()` yields a single value for `hidden_size` dim','line_number':441,'multiline':False]
['text':' each value in vector consits of same value','line_number':452,'multiline':False]
['text':' second half of last input tensor is padded','line_number':454,'multiline':False]
['text':' make sure that no padding tokens are sampled','line_number':466,'multiline':False]
['text':' BTC => (BxT)C','line_number':469,'multiline':False]
['text':' take negative vectors from sampled indices','line_number':470,'multiline':False]
['text':' make sure no negatively sampled vector is actually a positive one','line_number':478,'multiline':False]
['text':' make sure that full vectors are sampled and not just slices of vectors','line_number':482,'multiline':False]
['text':' => this means that `unique()` yields a single value for `hidden_size` dim','line_number':483,'multiline':False]
['text':' automatic decoding with librispeech','line_number':493,'multiline':False]
['text':' compute cosine similarity','line_number':552,'multiline':False]
['text':' retrieve cosine sim of masked features','line_number':557,'multiline':False]
['text':' ... now compare to randomly initialized model','line_number':560,'multiline':False]
['text':' compute cosine similarity','line_number':571,'multiline':False]
['text':' retrieve cosine sim of masked features','line_number':576,'multiline':False]
['text':' a pretrained wav2vec2 model has learned to predict the quantized latent states','line_number':579,'multiline':False]
['text':' => the cosine similarity between quantized states and predicted states > 0.5','line_number':580,'multiline':False]
['text':' a random wav2vec2 model has not learned to predict the quantized latent states','line_number':581,'multiline':False]
['text':' => the cosine similarity between quantized states and predicted states is very likely < 0.1','line_number':582,'multiline':False]
['text':' test user-managed pool','line_number':619,'multiline':False]
['text':' user-managed pool + num_processes should trigger a warning','line_number':625,'multiline':False]
