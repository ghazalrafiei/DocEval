['text':' coding=utf-8','line_number':1,'multiline':False]
['text':' Copyright 2021 Google AI and HuggingFace Inc. team.','line_number':2,'multiline':False]
['text':'','line_number':3,'multiline':False]
['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':4,'multiline':False]
['text':' you may not use this file except in compliance with the License.','line_number':5,'multiline':False]
['text':' You may obtain a copy of the License at','line_number':6,'multiline':False]
['text':'','line_number':7,'multiline':False]
['text':'     http://www.apache.org/licenses/LICENSE-2.0','line_number':8,'multiline':False]
['text':'','line_number':9,'multiline':False]
['text':' Unless required by applicable law or agreed to in writing, software','line_number':10,'multiline':False]
['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':11,'multiline':False]
['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':12,'multiline':False]
['text':' See the License for the specific language governing permissions and','line_number':13,'multiline':False]
['text':' limitations under the License.','line_number':14,'multiline':False]
['text':' fmt: skip','line_number':52,'multiline':False]
['text':' check if input_ids, attention_mask and token_type_ids are returned','line_number':68,'multiline':False]
['text':' cannot use default save_and_load_tokenzier test method because tokenzier has no vocab','line_number':85,'multiline':False]
['text':' safety check on max_len default value so we are sure the test works','line_number':87,'multiline':False]
['text':' Now let's start the test','line_number':93,'multiline':False]
['text':' Isolate this from the other tests because we save additional tokens/etc','line_number':97,'multiline':False]
['text':' Isolate this from the other tests because we save additional tokens/etc','line_number':113,'multiline':False]
['text':' We can add a new special token for Canine as follows:','line_number':120,'multiline':False]
['text':' a special token for Canine can be defined as follows:','line_number':146,'multiline':False]
['text':' a special token for Canine can be defined as follows:','line_number':186,'multiline':False]
['text':' a special token for Canine can be defined as follows:','line_number':215,'multiline':False]
['text':' the following checks allow us to verify that our test works as expected, i.e. that the tokenizer takes','line_number':227,'multiline':False]
['text':' into account the new value of additional_special_tokens given in the "tokenizer_config.json" and','line_number':228,'multiline':False]
['text':' "special_tokens_map.json" files','line_number':229,'multiline':False]
['text':' self.assertIn("an_additional_special_token",tokenizer_without_change_in_init.get_vocab()) # ByT5Tokenization no vocab','line_number':232,'multiline':False]
['text':' Now we test that we can change the value of additional_special_tokens in the from_pretrained','line_number':242,'multiline':False]
['text':' self.assertIn(new_token_2,tokenizer.get_vocab()) # ByT5Tokenization no vocab','line_number':249,'multiline':False]
['text':' cannot use default `test_tokenizers_common_ids_setters` method because tokenizer has no vocab','line_number':268,'multiline':False]
['text':' tokenizer has a fixed vocab_size (namely all possible unicode code points)','line_number':305,'multiline':False]
['text':' CanineTokenizer does not support do_lower_case = True, as each character has its own Unicode code point','line_number':309,'multiline':False]
['text':' ("b" and "B" for example have different Unicode code points)','line_number':310,'multiline':False]
['text':' CanineModel does not support the get_input_embeddings nor the get_vocab method','line_number':314,'multiline':False]
['text':' CanineModel does not support the get_input_embeddings nor the get_vocab method','line_number':318,'multiline':False]
['text':' tokenizer can be instantiated without any pretrained files, so no need for pretrained tokenizer list','line_number':322,'multiline':False]
['text':' tokenizer does not have vocabulary','line_number':326,'multiline':False]
['text':' inputs cannot be pretokenized since ids depend on whole input string and not just on single characters','line_number':330,'multiline':False]
['text':' tests all ids in vocab => vocab doesn't exist so unnecessary to test','line_number':334,'multiline':False]
