['text':' coding=utf-8','line_number':1,'multiline':False]
['text':' Copyright 2023 The HuggingFace Inc. team. All rights reserved.','line_number':2,'multiline':False]
['text':'','line_number':3,'multiline':False]
['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':4,'multiline':False]
['text':' you may not use this file except in compliance with the License.','line_number':5,'multiline':False]
['text':' You may obtain a copy of the License at','line_number':6,'multiline':False]
['text':'','line_number':7,'multiline':False]
['text':'     http://www.apache.org/licenses/LICENSE-2.0','line_number':8,'multiline':False]
['text':'','line_number':9,'multiline':False]
['text':' Unless required by applicable law or agreed to in writing, software','line_number':10,'multiline':False]
['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':11,'multiline':False]
['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':12,'multiline':False]
['text':' See the License for the specific language governing permissions and','line_number':13,'multiline':False]
['text':' limitations under the License.','line_number':14,'multiline':False]
['text':' Copied from tests.models.llama.test_modeling_llama.LlamaModelTester with Llama->Persimmon','line_number':50,'multiline':False]
['text':' first forward pass','line_number':218,'multiline':False]
['text':' create hypothetical multiple next token and extent to next_input_ids','line_number':228,'multiline':False]
['text':' append to next input_ids and','line_number':232,'multiline':False]
['text':' select random slice','line_number':252,'multiline':False]
['text':' test that outputs are equal for slice','line_number':259,'multiline':False]
['text':' TODO (ydshieh): check why these two fail. Fix them or skip them in a better way.','line_number':286,'multiline':False]
['text':' "text-generation": PersimmonForCausalLM,','line_number':287,'multiline':False]
['text':' "zero-shot": PersimmonForSequenceClassification,','line_number':288,'multiline':False]
['text':' Copied from tests.models.llama.test_modeling_llama.LlamaModelTest.setUp with Llama->Persimmon','line_number':298,'multiline':False]
['text':' Copied from tests.models.llama.test_modeling_llama.LlamaModelTest.test_config','line_number':303,'multiline':False]
['text':' Copied from tests.models.llama.test_modeling_llama.LlamaModelTest.test_model','line_number':307,'multiline':False]
['text':' Copied from tests.models.llama.test_modeling_llama.LlamaModelTest.test_model_various_embeddings','line_number':312,'multiline':False]
['text':' Copied from tests.models.llama.test_modeling_llama.LlamaModelTest.test_llama_sequence_classification_model with Llama->Persimmon,llama->persimmon','line_number':319,'multiline':False]
['text':' Copied from tests.models.llama.test_modeling_llama.LlamaModelTest.test_llama_sequence_classification_model_for_single_label with Llama->Persimmon,llama->persimmon','line_number':332,'multiline':False]
['text':' Copied from tests.models.llama.test_modeling_llama.LlamaModelTest.test_llama_sequence_classification_model_for_multi_label with Llama->Persimmon,llama->persimmon','line_number':346,'multiline':False]
['text':' Copied from tests.models.llama.test_modeling_llama.LlamaModelTest.test_save_load_fast_init_from_base','line_number':363,'multiline':False]
['text':' Copied from tests.models.llama.test_modeling_llama.LlamaModelTest.test_model_rope_scaling with Llama->Persimmon','line_number':368,'multiline':False]
['text':' Fixed seed at init time so the two models get the same random weights','line_number':374,'multiline':False]
['text':' Fixed seed at init time so the two models get the same random weights','line_number':381,'multiline':False]
['text':' Dynamic scaling does not change the RoPE embeddings until it receives an input longer than the original','line_number':389,'multiline':False]
['text':' maximum sequence length, so the outputs for the short input should match.','line_number':390,'multiline':False]
['text':' The output should be different for long inputs','line_number':396,'multiline':False]
['text':' change dtype to `torch.float32` before calling `mean` to avoid `nan` values','line_number':413,'multiline':False]
['text':' fmt: off','line_number':415,'multiline':False]
['text':' fmt: on','line_number':420,'multiline':False]
['text':' greedy generation outputs','line_number':439,'multiline':False]
