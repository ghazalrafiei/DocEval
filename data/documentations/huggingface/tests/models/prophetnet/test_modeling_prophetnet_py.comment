['text':' coding=utf-8','line_number':1,'multiline':False]
['text':' Copyright 2020 The HuggingFace Inc. team, The Microsoft Research team.','line_number':2,'multiline':False]
['text':'','line_number':3,'multiline':False]
['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':4,'multiline':False]
['text':' you may not use this file except in compliance with the License.','line_number':5,'multiline':False]
['text':' You may obtain a copy of the License at','line_number':6,'multiline':False]
['text':'','line_number':7,'multiline':False]
['text':'     http://www.apache.org/licenses/LICENSE-2.0','line_number':8,'multiline':False]
['text':'','line_number':9,'multiline':False]
['text':' Unless required by applicable law or agreed to in writing, software','line_number':10,'multiline':False]
['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':11,'multiline':False]
['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':12,'multiline':False]
['text':' See the License for the specific language governing permissions and','line_number':13,'multiline':False]
['text':' limitations under the License.','line_number':14,'multiline':False]
['text':' For common tests','line_number':52,'multiline':False]
['text':' For common tests','line_number':78,'multiline':False]
['text':' encoder, decoder_main, decoder_ngram','line_number':108,'multiline':False]
['text':' make sure that lm_labels are correctly padded from the right','line_number':193,'multiline':False]
['text':' add casaul pad token mask','line_number':196,'multiline':False]
['text':' first item','line_number':202,'multiline':False]
['text':' items before diagonal','line_number':206,'multiline':False]
['text':' pad items after diagonal','line_number':210,'multiline':False]
['text':' all items after square','line_number':216,'multiline':False]
['text':' There should be `num_layers` key value embeddings stored in decoder_past','line_number':244,'multiline':False]
['text':' There should be a self attn key, a self attn value, a cross attn key and a cross attn value stored in each decoder_past tuple','line_number':246,'multiline':False]
['text':' cross-attention + uni-directional self-attention','line_number':247,'multiline':False]
['text':' load state dict copies weights but does not tie them','line_number':349,'multiline':False]
['text':' check that models has less parameters','line_number':375,'multiline':False]
['text':' check that outputs are equal','line_number':381,'multiline':False]
['text':' check that outputs after saving and loading are equal','line_number':388,'multiline':False]
['text':' check that models has less parameters','line_number':395,'multiline':False]
['text':' check that outputs are equal','line_number':408,'multiline':False]
['text':' check encoder','line_number':465,'multiline':False]
['text':' check decoder','line_number':474,'multiline':False]
['text':' main stream','line_number':475,'multiline':False]
['text':' predict stream','line_number':481,'multiline':False]
['text':' For common tests','line_number':545,'multiline':False]
['text':' For common tests','line_number':574,'multiline':False]
['text':' decoder_main, decoder_ngram','line_number':606,'multiline':False]
['text':' first forward pass','line_number':679,'multiline':False]
['text':' create hypothetical next token and extent to next_input_ids','line_number':689,'multiline':False]
['text':' append to next input_ids and','line_number':692,'multiline':False]
['text':' select random slice','line_number':698,'multiline':False]
['text':' test that outputs are equal for slice','line_number':703,'multiline':False]
['text':' create attention mask','line_number':715,'multiline':False]
['text':' first forward pass','line_number':721,'multiline':False]
['text':' create hypothetical next token and extent to next_input_ids','line_number':724,'multiline':False]
['text':' change a random masked slice from input_ids','line_number':727,'multiline':False]
['text':' append to next input_ids and attn_mask','line_number':732,'multiline':False]
['text':' get two different outputs','line_number':739,'multiline':False]
['text':' select random slice','line_number':743,'multiline':False]
['text':' test that outputs are equal for slice','line_number':748,'multiline':False]
['text':' For common tests','line_number':776,'multiline':False]
['text':' For common tests','line_number':804,'multiline':False]
['text':' TODO: Fix the failed tests','line_number':908,'multiline':False]
['text':' Get `ValueError: AttributeError: 'NoneType' object has no attribute 'new_ones'` or `AssertionError`.','line_number':913,'multiline':False]
['text':' `ProphetNetConfig` was never used in pipeline tests: cannot create a simple','line_number':914,'multiline':False]
['text':' tokenizer.','line_number':915,'multiline':False]
['text':' methods overwrite method in `test_modeling_common.py`','line_number':982,'multiline':False]
['text':' check that output_attentions also work using config','line_number':1006,'multiline':False]
['text':' loss is at first position','line_number':1031,'multiline':False]
['text':' loss is added to beginning','line_number':1033,'multiline':False]
['text':' decoder attentions','line_number':1037,'multiline':False]
['text':' cross attentions','line_number':1046,'multiline':False]
['text':' Check attention is always last and order is fine','line_number':1059,'multiline':False]
['text':' decoder cannot keep gradients','line_number':1091,'multiline':False]
['text':' no need to test all models as different heads yield the same functionality','line_number':1096,'multiline':False]
['text':' decoder cannot keep gradients','line_number':1146,'multiline':False]
['text':' and it's not used enough to be worth fixing :)','line_number':1149,'multiline':False]
['text':' encoder-decoder outputs','line_number':1177,'multiline':False]
['text':'        self.assertTrue(torch.allclose(output_predited_logits[:, :3, :3], expected_slice, atol=1e-4))','line_number':1228,'multiline':False]
['text':' encoder outputs','line_number':1231,'multiline':False]
['text':'        self.assertTrue(torch.allclose(encoder_outputs[:, :3, :3], expected_encoder_outputs_slice, atol=1e-4))','line_number':1238,'multiline':False]
['text':' decoder outputs','line_number':1241,'multiline':False]
['text':'        self.assertTrue(torch.allclose(next_first_stream_logits[:, :3, :3], expected_slice, atol=1e-4))','line_number':1246,'multiline':False]
['text':' actually 98 tokens are used. max_length=100 contains bos and eos.','line_number':1286,'multiline':False]
