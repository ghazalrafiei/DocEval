['text':' coding=utf-8','line_number':1,'multiline':False]
['text':' Copyright 2018 The Google AI Language Team Authors and The HuggingFace Inc. team.','line_number':2,'multiline':False]
['text':' Copyright (c) 2018, NVIDIA CORPORATION.  All rights reserved.','line_number':3,'multiline':False]
['text':'','line_number':4,'multiline':False]
['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':5,'multiline':False]
['text':' you may not use this file except in compliance with the License.','line_number':6,'multiline':False]
['text':' You may obtain a copy of the License at','line_number':7,'multiline':False]
['text':'','line_number':8,'multiline':False]
['text':'     http://www.apache.org/licenses/LICENSE-2.0','line_number':9,'multiline':False]
['text':'','line_number':10,'multiline':False]
['text':' Unless required by applicable law or agreed to in writing, software','line_number':11,'multiline':False]
['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':12,'multiline':False]
['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':13,'multiline':False]
['text':' See the License for the specific language governing permissions and','line_number':14,'multiline':False]
['text':' limitations under the License.','line_number':15,'multiline':False]
['text':' Prepare optimizer and schedule (linear warmup and decay)','line_number':91,'multiline':False]
['text':' Check if saved optimizer or scheduler states exist','line_number':105,'multiline':False]
['text':' Load in optimizer and scheduler states','line_number':109,'multiline':False]
['text':' multi-gpu training (should be after apex fp16 initialization)','line_number':121,'multiline':False]
['text':' Distributed training (should be after apex fp16 initialization)','line_number':125,'multiline':False]
['text':' Train!','line_number':131,'multiline':False]
['text':' Check if continuing training from a checkpoint','line_number':148,'multiline':False]
['text':' set global_step to gobal_step of last saved checkpoint from model path','line_number':151,'multiline':False]
['text':' Added here for reproductibility','line_number':169,'multiline':False]
['text':' Skip past any already trained steps if resuming training','line_number':175,'multiline':False]
['text':' model outputs are always tuple in transformers (see doc)','line_number':204,'multiline':False]
['text':' mean() to average on multi-gpu parallel (not distributed) training','line_number':208,'multiline':False]
['text':' Update learning rate schedule','line_number':226,'multiline':False]
['text':' Log metrics','line_number':230,'multiline':False]
['text':' Only evaluate when single GPU otherwise metrics may not average well','line_number':232,'multiline':False]
['text':' Save model checkpoint','line_number':241,'multiline':False]
['text':' Take care of distributed/parallel training','line_number':244,'multiline':False]
['text':' Note that DistributedSampler samples randomly','line_number':277,'multiline':False]
['text':' multi-gpu evaluate','line_number':281,'multiline':False]
['text':' Eval!','line_number':285,'multiline':False]
['text':' XLNet and XLM use more arguments for their predictions','line_number':309,'multiline':False]
['text':' for lang_id-sensitive xlm models','line_number':312,'multiline':False]
['text':' Some models (XLNet, XLM) use 5 arguments for their predictions, while the other "simpler"','line_number':325,'multiline':False]
['text':' models only use two.','line_number':326,'multiline':False]
['text':' Compute predictions','line_number':352,'multiline':False]
['text':' XLNet and XLM use a more complex post-processing procedure','line_number':361,'multiline':False]
['text':' Compute the F1 and exact scores.','line_number':398,'multiline':False]
['text':' Make sure only the first process in distributed training process the dataset, and the others will use the cache','line_number':405,'multiline':False]
['text':' Load data features from cache or dataset file','line_number':408,'multiline':False]
['text':' Init features and dataset from cache if it exists','line_number':419,'multiline':False]
['text':' Make sure only the first process in distributed training process the dataset, and the others will use the cache','line_number':465,'multiline':False]
['text':' Required parameters','line_number':476,'multiline':False]
['text':' Other parameters','line_number':499,'multiline':False]
['text':' Setup distant debugging if needed','line_number':695,'multiline':False]
['text':' Distant debugging - see https://code.visualstudio.com/docs/python/debugging#_attach-to-a-local-script','line_number':697,'multiline':False]
['text':' Setup CUDA, GPU & distributed training','line_number':704,'multiline':False]
['text':' Initializes the distributed backend which will take care of sychronizing nodes/GPUs','line_number':708,'multiline':False]
['text':' Setup logging','line_number':715,'multiline':False]
['text':' Set the verbosity to info of the Transformers logger (on main process only):','line_number':729,'multiline':False]
['text':' Set seed','line_number':734,'multiline':False]
['text':' Load pretrained model and tokenizer','line_number':737,'multiline':False]
['text':' Make sure only the first process in distributed training will download model & vocab','line_number':739,'multiline':False]
['text':' SquadDataset is not compatible with Fast tokenizers which have a smarter overflow handeling','line_number':751,'multiline':False]
['text':' Make sure only the first process in distributed training will download model & vocab','line_number':761,'multiline':False]
['text':' Before we do anything with models, we want to ensure that we get fp16 execution of torch.einsum if args.fp16 is set.','line_number':768,'multiline':False]
['text':' Otherwise it'll default to "promote" mode, and we'll get fp32 operations. Note that running `--fp16_opt_level="O2"` will','line_number':769,'multiline':False]
['text':' remove the need for this code, but it is still valid.','line_number':770,'multiline':False]
['text':' Training','line_number':779,'multiline':False]
['text':' Save the trained model and the tokenizer','line_number':785,'multiline':False]
['text':' Save a trained model, configuration and tokenizer using `save_pretrained()`.','line_number':788,'multiline':False]
['text':' They can then be reloaded using `from_pretrained()`','line_number':789,'multiline':False]
['text':' Take care of distributed/parallel training','line_number':790,'multiline':False]
['text':' Good practice: save your training arguments together with the trained model','line_number':795,'multiline':False]
['text':' Load a trained model and vocabulary that you have fine-tuned','line_number':798,'multiline':False]
['text':' , force_download=True)','line_number':799,'multiline':False]
['text':' SquadDataset is not compatible with Fast tokenizers which have a smarter overflow handeling','line_number':801,'multiline':False]
['text':' So we use use_fast=False here for now until Fast-tokenizer-compatible-examples are out','line_number':802,'multiline':False]
['text':' Evaluation - we can ask to evaluate all the checkpoints (sub-directories) in a directory','line_number':806,'multiline':False]
['text':' Reload the model','line_number':825,'multiline':False]
['text':' , force_download=True)','line_number':827,'multiline':False]
['text':' Evaluate','line_number':830,'multiline':False]
