['text':'!/usr/bin/env python','line_number':1,'multiline':False]
['text':' coding=utf-8','line_number':2,'multiline':False]
['text':' Copyright 2021 The HuggingFace Inc. team. All rights reserved.','line_number':3,'multiline':False]
['text':'','line_number':4,'multiline':False]
['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':5,'multiline':False]
['text':' you may not use this file except in compliance with the License.','line_number':6,'multiline':False]
['text':' You may obtain a copy of the License at','line_number':7,'multiline':False]
['text':'','line_number':8,'multiline':False]
['text':'     http://www.apache.org/licenses/LICENSE-2.0','line_number':9,'multiline':False]
['text':'','line_number':10,'multiline':False]
['text':' Unless required by applicable law or agreed to in writing, software','line_number':11,'multiline':False]
['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':12,'multiline':False]
['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':13,'multiline':False]
['text':' See the License for the specific language governing permissions and','line_number':14,'multiline':False]
['text':' limitations under the License.','line_number':15,'multiline':False]
['text':' You can also adapt this script on your own text classification task. Pointers for this are left as comments.','line_number':17,'multiline':False]
['text':' Reduce the amount of console output from TF','line_number':45,'multiline':False]
['text':' noqa: E402','line_number':46,'multiline':False]
['text':' region Helper classes','line_number':52,'multiline':False]
['text':' Hugging Face models have a save_pretrained() method that saves both the weights and the necessary','line_number':54,'multiline':False]
['text':' metadata to allow them to be loaded as a pretrained model in future. This is a simple Keras callback','line_number':55,'multiline':False]
['text':' that saves the model with this method after each epoch.','line_number':56,'multiline':False]
['text':' endregion','line_number':65,'multiline':False]
['text':' region Command-line arguments','line_number':68,'multiline':False]
['text':' endregion','line_number':201,'multiline':False]
['text':' region Argument parsing','line_number':205,'multiline':False]
['text':' See all possible arguments in src/transformers/training_args.py','line_number':206,'multiline':False]
['text':' or by passing the --help flag to this script.','line_number':207,'multiline':False]
['text':' We now keep distinct sets of args, for a cleaner separation of concerns.','line_number':208,'multiline':False]
['text':' If we pass only one argument to the script and it's the path to a json file,','line_number':212,'multiline':False]
['text':' let's parse it to get our arguments.','line_number':213,'multiline':False]
['text':' Sending telemetry. Tracking the example usage helps us better allocate resources to maintain them. The','line_number':227,'multiline':False]
['text':' information sent is the one passed as arguments along with your Python/PyTorch versions.','line_number':228,'multiline':False]
['text':' endregion','line_number':233,'multiline':False]
['text':' region Checkpoints','line_number':235,'multiline':False]
['text':' Detecting last checkpoint.','line_number':236,'multiline':False]
['text':' endregion','line_number':251,'multiline':False]
['text':' region Logging','line_number':253,'multiline':False]
['text':' endregion','line_number':262,'multiline':False]
['text':' region Loading data','line_number':264,'multiline':False]
['text':' For CSV/JSON files, this script will use the 'label' field as the label and the 'sentence1' and optionally','line_number':265,'multiline':False]
['text':' 'sentence2' fields as inputs if they exist. If not, the first two fields not named label are used if at least two','line_number':266,'multiline':False]
['text':' columns are provided. Note that the term 'sentence' can be slightly misleading, as they often contain more than','line_number':267,'multiline':False]
['text':' a single grammatical sentence, when the task requires it.','line_number':268,'multiline':False]
['text':'','line_number':269,'multiline':False]
['text':' If the CSVs/JSONs contain only one non-label column, the script does single sentence classification on this','line_number':270,'multiline':False]
['text':' single column. You can easily tweak this behavior (see below)','line_number':271,'multiline':False]
['text':'','line_number':272,'multiline':False]
['text':' In distributed training, the load_dataset function guarantee that only one local process can concurrently','line_number':273,'multiline':False]
['text':' download the dataset.','line_number':274,'multiline':False]
['text':' Loading a dataset from local csv files','line_number':282,'multiline':False]
['text':' Loading a dataset from local json files','line_number':290,'multiline':False]
['text':' See more about loading any type of standard or custom dataset at','line_number':292,'multiline':False]
['text':' https://huggingface.co/docs/datasets/loading_datasets.','line_number':293,'multiline':False]
['text':' endregion','line_number':294,'multiline':False]
['text':' region Label preprocessing','line_number':296,'multiline':False]
['text':' If you've passed us a training set, we try to infer your labels from it','line_number':297,'multiline':False]
['text':' By default we assume that if your label column looks like a float then you're doing regression,','line_number':299,'multiline':False]
['text':' and if not then you're doing classification. This is something you may want to change!','line_number':300,'multiline':False]
['text':' A useful fast method:','line_number':305,'multiline':False]
['text':' https://huggingface.co/docs/datasets/package_reference/main_classes.html#datasets.Dataset.unique','line_number':306,'multiline':False]
['text':' Let's sort it for determinism','line_number':308,'multiline':False]
['text':' If you haven't passed a training set, we read label info from the saved model (this happens later)','line_number':310,'multiline':False]
['text':' endregion','line_number':315,'multiline':False]
['text':' region Load model config and tokenizer','line_number':317,'multiline':False]
['text':' endregion','line_number':348,'multiline':False]
['text':' region Dataset preprocessing','line_number':350,'multiline':False]
['text':' Again, we try to have some nice defaults but don't hesitate to tweak to your use case.','line_number':351,'multiline':False]
['text':' Ensure that our labels match the model's, if it has some pre-specified','line_number':371,'multiline':False]
['text':' Use the model's labels','line_number':376,'multiline':False]
['text':' Now we've established our label2id, let's overwrite the model config with it.','line_number':388,'multiline':False]
['text':' Just load the data from the model','line_number':395,'multiline':False]
['text':' Tokenize the texts','line_number':403,'multiline':False]
['text':' Map labels to IDs','line_number':409,'multiline':False]
['text':' endregion','line_number':416,'multiline':False]
['text':' region Load pretrained model','line_number':419,'multiline':False]
['text':' Set seed before initializing model','line_number':420,'multiline':False]
['text':'','line_number':422,'multiline':False]
['text':' In distributed training, the .from_pretrained methods guarantee that only one local process can concurrently','line_number':423,'multiline':False]
['text':' download model & vocab.','line_number':424,'multiline':False]
['text':' endregion','line_number':437,'multiline':False]
['text':' region Convert data to a tf.data.Dataset','line_number':439,'multiline':False]
['text':' model.prepare_tf_dataset() wraps a Hugging Face dataset in a tf.data.Dataset which is ready to use in','line_number':474,'multiline':False]
['text':' training. This is the recommended way to use a Hugging Face dataset when training with Keras. You can also','line_number':475,'multiline':False]
['text':' use the lower-level dataset.to_tf_dataset() method, but you will have to specify things like column names','line_number':476,'multiline':False]
['text':' yourself if you use this method, whereas they are automatically inferred from the model input names when','line_number':477,'multiline':False]
['text':' using model.prepare_tf_dataset()','line_number':478,'multiline':False]
['text':' For more info see the docs:','line_number':479,'multiline':False]
['text':' https://huggingface.co/docs/transformers/main/en/main_classes/model#transformers.TFPreTrainedModel.prepare_tf_dataset','line_number':480,'multiline':False]
['text':' https://huggingface.co/docs/datasets/main/en/package_reference/main_classes#datasets.Dataset.to_tf_dataset','line_number':481,'multiline':False]
['text':' endregion','line_number':491,'multiline':False]
['text':' region Optimizer, loss and compilation','line_number':493,'multiline':False]
['text':' Transformers models compute the right loss for their task by default when labels are passed, and will','line_number':520,'multiline':False]
['text':' use this for training unless you specify your own loss function in compile().','line_number':521,'multiline':False]
['text':' endregion','line_number':523,'multiline':False]
['text':' region Preparing push_to_hub and model card','line_number':525,'multiline':False]
['text':' endregion','line_number':545,'multiline':False]
['text':' region Training and validation','line_number':547,'multiline':False]
['text':' endregion','line_number':570,'multiline':False]
['text':' region Prediction','line_number':572,'multiline':False]
['text':' endregion','line_number':587,'multiline':False]
['text':' If we're not pushing to hub, at least save a local copy when we're done','line_number':590,'multiline':False]
