['text':' coding=utf-8','line_number':1,'multiline':False]
['text':' Copyright (c) Facebook, Inc. and its affiliates.','line_number':2,'multiline':False]
['text':' Copyright (c) HuggingFace Inc. team.','line_number':3,'multiline':False]
['text':'','line_number':4,'multiline':False]
['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':5,'multiline':False]
['text':' you may not use this file except in compliance with the License.','line_number':6,'multiline':False]
['text':' You may obtain a copy of the License at','line_number':7,'multiline':False]
['text':'','line_number':8,'multiline':False]
['text':'     http://www.apache.org/licenses/LICENSE-2.0','line_number':9,'multiline':False]
['text':'','line_number':10,'multiline':False]
['text':' Unless required by applicable law or agreed to in writing, software','line_number':11,'multiline':False]
['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':12,'multiline':False]
['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':13,'multiline':False]
['text':' See the License for the specific language governing permissions and','line_number':14,'multiline':False]
['text':' limitations under the License.','line_number':15,'multiline':False]
['text':' Prepare optimizer and schedule (linear warmup and decay)','line_number':87,'multiline':False]
['text':' multi-gpu training (should be after apex fp16 initialization)','line_number':108,'multiline':False]
['text':' Distributed training (should be after apex fp16 initialization)','line_number':112,'multiline':False]
['text':' Train!','line_number':118,'multiline':False]
['text':' Added here for reproductibility','line_number':137,'multiline':False]
['text':' model outputs are always tuple in transformers (see doc)','line_number':152,'multiline':False]
['text':' mean() to average on multi-gpu parallel training','line_number':156,'multiline':False]
['text':' Update learning rate schedule','line_number':174,'multiline':False]
['text':' Only evaluate when single GPU otherwise metrics may not average well','line_number':182,'multiline':False]
['text':' Save model checkpoint','line_number':199,'multiline':False]
['text':' Take care of distributed/parallel training','line_number':205,'multiline':False]
['text':' Loop to handle MNLI double evaluation (matched, mis-matched)','line_number':236,'multiline':False]
['text':' Note that DistributedSampler samples randomly','line_number':244,'multiline':False]
['text':' multi-gpu eval','line_number':250,'multiline':False]
['text':' Eval!','line_number':254,'multiline':False]
['text':' model outputs are always tuple in transformers (see doc)','line_number':277,'multiline':False]
['text':' Required parameters','line_number':316,'multiline':False]
['text':' Other parameters','line_number':339,'multiline':False]
['text':' Setup distant debugging if needed','line_number':450,'multiline':False]
['text':' Distant debugging - see https://code.visualstudio.com/docs/python/debugging#_attach-to-a-local-script','line_number':452,'multiline':False]
['text':' Setup CUDA, GPU & distributed training','line_number':459,'multiline':False]
['text':' Initializes the distributed backend which will take care of sychronizing nodes/GPUs','line_number':463,'multiline':False]
['text':' Setup logging','line_number':471,'multiline':False]
['text':' Set the verbosity to info of the Transformers logger (on main process only):','line_number':485,'multiline':False]
['text':' Set seed','line_number':490,'multiline':False]
['text':' Load pretrained model and tokenizer','line_number':493,'multiline':False]
['text':' Make sure only the first process in distributed training will download model & vocab','line_number':495,'multiline':False]
['text':' Setup model','line_number':497,'multiline':False]
['text':' Make sure only the first process in distributed training will download model & vocab','line_number':514,'multiline':False]
['text':' Training','line_number':520,'multiline':False]
['text':' Saving best-practices: if you use defaults names for the model, you can reload it using from_pretrained()','line_number':532,'multiline':False]
['text':' Save a trained model, configuration and tokenizer using `save_pretrained()`.','line_number':535,'multiline':False]
['text':' They can then be reloaded using `from_pretrained()`','line_number':536,'multiline':False]
['text':' Take care of distributed/parallel training','line_number':539,'multiline':False]
['text':' Good practice: save your training arguments together with the trained model','line_number':543,'multiline':False]
['text':' Load a trained model and vocabulary that you have fine-tuned','line_number':546,'multiline':False]
['text':' Evaluation','line_number':552,'multiline':False]
