['text':' coding=utf-8','line_number':1,'multiline':False]
['text':' Copyright 2018 The Google AI Language Team Authors and The HuggingFace Inc. team.','line_number':2,'multiline':False]
['text':' Copyright (c) 2018, NVIDIA CORPORATION.  All rights reserved.','line_number':3,'multiline':False]
['text':'','line_number':4,'multiline':False]
['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':5,'multiline':False]
['text':' you may not use this file except in compliance with the License.','line_number':6,'multiline':False]
['text':' You may obtain a copy of the License at','line_number':7,'multiline':False]
['text':'','line_number':8,'multiline':False]
['text':'     http://www.apache.org/licenses/LICENSE-2.0','line_number':9,'multiline':False]
['text':'','line_number':10,'multiline':False]
['text':' Unless required by applicable law or agreed to in writing, software','line_number':11,'multiline':False]
['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':12,'multiline':False]
['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':13,'multiline':False]
['text':' See the License for the specific language governing permissions and','line_number':14,'multiline':False]
['text':' limitations under the License.','line_number':15,'multiline':False]
['text':' Prepare optimizer and schedule (linear warmup and decay)','line_number':121,'multiline':False]
['text':' Check if saved optimizer or scheduler states exist','line_number':153,'multiline':False]
['text':' Load in optimizer and scheduler states','line_number':157,'multiline':False]
['text':' multi-gpu training (should be after apex fp16 initialization)','line_number':168,'multiline':False]
['text':' Distributed training (should be after apex fp16 initialization)','line_number':172,'multiline':False]
['text':' Train!','line_number':181,'multiline':False]
['text':' Distillation','line_number':194,'multiline':False]
['text':' Global TopK','line_number':199,'multiline':False]
['text':' Check if continuing training from a checkpoint','line_number':204,'multiline':False]
['text':' set global_step to global_step of last saved checkpoint from model path','line_number':206,'multiline':False]
['text':' Added here for reproducibility','line_number':227,'multiline':False]
['text':' Skip past any already trained steps if resuming training','line_number':231,'multiline':False]
['text':' Global TopK','line_number':248,'multiline':False]
['text':' Or an indefinitely low quantity','line_number':251,'multiline':False]
['text':' Sort all the values to get the global topK','line_number':254,'multiline':False]
['text':' XLM, DistilBERT, RoBERTa, and XLM-RoBERTa don't use segment_ids','line_number':268,'multiline':False]
['text':' model outputs are always tuple in transformers (see doc)','line_number':274,'multiline':False]
['text':' Distillation loss','line_number':276,'multiline':False]
['text':' Regularization','line_number':295,'multiline':False]
['text':' mean() to average on multi-gpu parallel training','line_number':301,'multiline':False]
['text':' last step in epoch but step is always smaller than gradient_accumulation_steps','line_number':313,'multiline':False]
['text':' Update learning rate schedule','line_number':340,'multiline':False]
['text':' Only evaluate when single GPU otherwise metrics may not average well','line_number':348,'multiline':False]
['text':' Save model checkpoint','line_number':385,'multiline':False]
['text':' Take care of distributed/parallel training','line_number':391,'multiline':False]
['text':' Loop to handle MNLI double evaluation (matched, mis-matched)','line_number':416,'multiline':False]
['text':' Note that DistributedSampler samples randomly','line_number':428,'multiline':False]
['text':' multi-gpu eval','line_number':432,'multiline':False]
['text':' Eval!','line_number':436,'multiline':False]
['text':' Global TopK','line_number':445,'multiline':False]
['text':' XLM, DistilBERT, RoBERTa, and XLM-RoBERTa don't use segment_ids','line_number':458,'multiline':False]
['text':' Make sure only the first process in distributed training process the dataset, and the others will use the cache','line_number':508,'multiline':False]
['text':' Load data features from cache or dataset file','line_number':512,'multiline':False]
['text':' HACK(label indices are swapped in RoBERTa pretrained model)','line_number':529,'multiline':False]
['text':' Make sure only the first process in distributed training process the dataset, and the others will use the cache','line_number':546,'multiline':False]
['text':' Convert to Tensors and build dataset','line_number':548,'multiline':False]
['text':' Required parameters','line_number':564,'multiline':False]
['text':' Other parameters','line_number':600,'multiline':False]
['text':' Pruning parameters','line_number':655,'multiline':False]
['text':' Distillation parameters (optional)','line_number':722,'multiline':False]
['text':' Regularization','line_number':809,'multiline':False]
['text':' Setup CUDA, GPU & distributed training','line_number':824,'multiline':False]
['text':' Initializes the distributed backend which will take care of synchronizing nodes/GPUs','line_number':828,'multiline':False]
['text':' Setup logging','line_number':835,'multiline':False]
['text':' Set seed','line_number':850,'multiline':False]
['text':' Prepare GLUE task','line_number':853,'multiline':False]
['text':' Load pretrained model and tokenizer','line_number':862,'multiline':False]
['text':' Make sure only the first process in distributed training will download model & vocab','line_number':864,'multiline':False]
['text':' Make sure only the first process in distributed training will download model & vocab','line_number':906,'multiline':False]
['text':' Training','line_number':912,'multiline':False]
['text':' Saving best-practices: if you use defaults names for the model, you can reload it using from_pretrained()','line_number':918,'multiline':False]
['text':' Save a trained model, configuration and tokenizer using `save_pretrained()`.','line_number':921,'multiline':False]
['text':' They can then be reloaded using `from_pretrained()`','line_number':922,'multiline':False]
['text':' Take care of distributed/parallel training','line_number':925,'multiline':False]
['text':' Good practice: save your training arguments together with the trained model','line_number':929,'multiline':False]
['text':' Load a trained model and vocabulary that you have fine-tuned','line_number':932,'multiline':False]
['text':' Evaluation','line_number':937,'multiline':False]
