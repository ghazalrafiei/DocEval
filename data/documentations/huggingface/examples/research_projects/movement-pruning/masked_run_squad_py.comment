['text':' coding=utf-8','line_number':1,'multiline':False]
['text':' Copyright 2018 The Google AI Language Team Authors and The HuggingFace Inc. team.','line_number':2,'multiline':False]
['text':' Copyright (c) 2018, NVIDIA CORPORATION.  All rights reserved.','line_number':3,'multiline':False]
['text':'','line_number':4,'multiline':False]
['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':5,'multiline':False]
['text':' you may not use this file except in compliance with the License.','line_number':6,'multiline':False]
['text':' You may obtain a copy of the License at','line_number':7,'multiline':False]
['text':'','line_number':8,'multiline':False]
['text':'     http://www.apache.org/licenses/LICENSE-2.0','line_number':9,'multiline':False]
['text':'','line_number':10,'multiline':False]
['text':' Unless required by applicable law or agreed to in writing, software','line_number':11,'multiline':False]
['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':12,'multiline':False]
['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':13,'multiline':False]
['text':' See the License for the specific language governing permissions and','line_number':14,'multiline':False]
['text':' limitations under the License.','line_number':15,'multiline':False]
['text':' Prepare optimizer and schedule (linear warmup and decay)','line_number':129,'multiline':False]
['text':' Check if saved optimizer or scheduler states exist','line_number':161,'multiline':False]
['text':' Load in optimizer and scheduler states','line_number':165,'multiline':False]
['text':' multi-gpu training (should be after apex fp16 initialization)','line_number':176,'multiline':False]
['text':' Distributed training (should be after apex fp16 initialization)','line_number':180,'multiline':False]
['text':' Train!','line_number':189,'multiline':False]
['text':' Distillation','line_number':202,'multiline':False]
['text':' Global TopK','line_number':207,'multiline':False]
['text':' Check if continuing training from a checkpoint','line_number':212,'multiline':False]
['text':' set global_step to global_step of last saved checkpoint from model path','line_number':214,'multiline':False]
['text':' Added here for reproducibility','line_number':233,'multiline':False]
['text':' Skip past any already trained steps if resuming training','line_number':239,'multiline':False]
['text':' Global TopK','line_number':256,'multiline':False]
['text':' Or an indefinitely low quantity','line_number':259,'multiline':False]
['text':' Sort all the values to get the global topK','line_number':262,'multiline':False]
['text':' model outputs are always tuple in transformers (see doc)','line_number':296,'multiline':False]
['text':' Distillation loss','line_number':299,'multiline':False]
['text':' Regularization','line_number':322,'multiline':False]
['text':' mean() to average on multi-gpu parallel training','line_number':328,'multiline':False]
['text':' Update learning rate schedule','line_number':366,'multiline':False]
['text':' Log metrics','line_number':370,'multiline':False]
['text':' Only evaluate when single GPU otherwise metrics may not average well','line_number':372,'multiline':False]
['text':' Save model checkpoint','line_number':407,'multiline':False]
['text':' Take care of distributed/parallel training','line_number':412,'multiline':False]
['text':' Note that DistributedSampler samples randomly','line_number':444,'multiline':False]
['text':' multi-gpu eval','line_number':448,'multiline':False]
['text':' Eval!','line_number':452,'multiline':False]
['text':' Global TopK','line_number':459,'multiline':False]
['text':' XLNet and XLM use more arguments for their predictions','line_number':479,'multiline':False]
['text':' for lang_id-sensitive xlm models','line_number':482,'multiline':False]
['text':' Some models (XLNet, XLM) use 5 arguments for their predictions, while the other "simpler"','line_number':506,'multiline':False]
['text':' models only use two.','line_number':507,'multiline':False]
['text':' Compute predictions','line_number':533,'multiline':False]
['text':' XLNet and XLM use a more complex post-processing procedure','line_number':542,'multiline':False]
['text':' Compute the F1 and exact scores.','line_number':579,'multiline':False]
['text':' Make sure only the first process in distributed training process the dataset, and the others will use the cache','line_number':586,'multiline':False]
['text':' Load data features from cache or dataset file','line_number':589,'multiline':False]
['text':' Init features and dataset from cache if it exists','line_number':605,'multiline':False]
['text':' Make sure only the first process in distributed training process the dataset, and the others will use the cache','line_number':651,'multiline':False]
['text':' Required parameters','line_number':662,'multiline':False]
['text':' Other parameters','line_number':685,'multiline':False]
['text':' Pruning parameters','line_number':774,'multiline':False]
['text':' Distillation parameters (optional)','line_number':841,'multiline':False]
['text':' Regularization','line_number':959,'multiline':False]
['text':' Setup distant debugging if needed','line_number':982,'multiline':False]
['text':' Distant debugging - see https://code.visualstudio.com/docs/python/debugging#_attach-to-a-local-script','line_number':984,'multiline':False]
['text':' Setup CUDA, GPU & distributed training','line_number':991,'multiline':False]
['text':' Initializes the distributed backend which will take care of synchronizing nodes/GPUs','line_number':995,'multiline':False]
['text':' Setup logging','line_number':1002,'multiline':False]
['text':' Set seed','line_number':1017,'multiline':False]
['text':' Load pretrained model and tokenizer','line_number':1020,'multiline':False]
['text':' Make sure only the first process in distributed training will download model & vocab','line_number':1022,'multiline':False]
['text':' Make sure only the first process in distributed training will download model & vocab','line_number':1063,'multiline':False]
['text':' Before we do anything with models, we want to ensure that we get fp16 execution of torch.einsum if args.fp16 is set.','line_number':1070,'multiline':False]
['text':' Otherwise it'll default to "promote" mode, and we'll get fp32 operations. Note that running `--fp16_opt_level="O2"` will','line_number':1071,'multiline':False]
['text':' remove the need for this code, but it is still valid.','line_number':1072,'multiline':False]
['text':' Training','line_number':1081,'multiline':False]
['text':' Save the trained model and the tokenizer','line_number':1087,'multiline':False]
['text':' Save a trained model, configuration and tokenizer using `save_pretrained()`.','line_number':1090,'multiline':False]
['text':' They can then be reloaded using `from_pretrained()`','line_number':1091,'multiline':False]
['text':' Take care of distributed/parallel training','line_number':1092,'multiline':False]
['text':' Good practice: save your training arguments together with the trained model','line_number':1097,'multiline':False]
['text':' Load a trained model and vocabulary that you have fine-tuned','line_number':1100,'multiline':False]
['text':' , force_download=True)','line_number':1101,'multiline':False]
['text':' Evaluation - we can ask to evaluate all the checkpoints (sub-directories) in a directory','line_number':1105,'multiline':False]
['text':' Reload the model','line_number':1124,'multiline':False]
['text':' , force_download=True)','line_number':1126,'multiline':False]
['text':' Evaluate','line_number':1129,'multiline':False]
