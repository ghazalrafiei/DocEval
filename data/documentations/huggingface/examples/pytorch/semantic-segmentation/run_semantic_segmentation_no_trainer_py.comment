['text':' coding=utf-8','line_number':1,'multiline':False]
['text':' Copyright 2022 The HuggingFace Inc. team. All rights reserved.','line_number':2,'multiline':False]
['text':'','line_number':3,'multiline':False]
['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':4,'multiline':False]
['text':' you may not use this file except in compliance with the License.','line_number':5,'multiline':False]
['text':' You may obtain a copy of the License at','line_number':6,'multiline':False]
['text':'','line_number':7,'multiline':False]
['text':'     http://www.apache.org/licenses/LICENSE-2.0','line_number':8,'multiline':False]
['text':'','line_number':9,'multiline':False]
['text':' Unless required by applicable law or agreed to in writing, software','line_number':10,'multiline':False]
['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':11,'multiline':False]
['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':12,'multiline':False]
['text':' See the License for the specific language governing permissions and','line_number':13,'multiline':False]
['text':' limitations under the License.','line_number':14,'multiline':False]
['text':' Will error if the minimal version of Transformers is not installed. Remove at your own risks.','line_number':52,'multiline':False]
['text':' avoid using underflow conversion','line_number':166,'multiline':False]
['text':' Sanity checks','line_number':316,'multiline':False]
['text':' Sending telemetry. Tracking the example usage helps us better allocate resources to maintain them. The','line_number':332,'multiline':False]
['text':' information sent is the one passed as arguments along with your Python/PyTorch versions.','line_number':333,'multiline':False]
['text':' Initialize the accelerator. We will let the accelerator handle device placement for us in this example.','line_number':336,'multiline':False]
['text':' If we're using tracking, we also need to initialize it here and it will by default pick up all supported trackers','line_number':337,'multiline':False]
['text':' in the environment','line_number':338,'multiline':False]
['text':' If passed along, set the training seed now.','line_number':355,'multiline':False]
['text':' We set device_specific to True as we want different data augmentation per device.','line_number':356,'multiline':False]
['text':' Handle the repository creation','line_number':360,'multiline':False]
['text':' Retrieve of infer repo_name','line_number':363,'multiline':False]
['text':' Create repo and retrieve repo_id','line_number':367,'multiline':False]
['text':' Clone repo locally','line_number':369,'multiline':False]
['text':' Load dataset','line_number':381,'multiline':False]
['text':' In distributed training, the load_dataset function guarantees that only one local process can concurrently','line_number':382,'multiline':False]
['text':' download the dataset.','line_number':383,'multiline':False]
['text':' TODO support datasets from local folders','line_number':384,'multiline':False]
['text':' Rename column names to standardized names (only "image" and "label" need to be present)','line_number':387,'multiline':False]
['text':' If we don't have a validation split, split off a percentage of train as validation.','line_number':393,'multiline':False]
['text':' Prepare label mappings.','line_number':400,'multiline':False]
['text':' We'll include these in the model's config to get human readable labels in the Inference API.','line_number':401,'multiline':False]
['text':' Load pretrained model and image processor','line_number':412,'multiline':False]
['text':' Preprocessing the datasets','line_number':423,'multiline':False]
['text':' Define torchvision transforms to be applied to each image + target.','line_number':424,'multiline':False]
['text':' Not that straightforward in torchvision: https://github.com/pytorch/vision/issues/9','line_number':425,'multiline':False]
['text':' Currently based on official torchvision references: https://github.com/pytorch/vision/blob/main/references/segmentation/transforms.py','line_number':426,'multiline':False]
['text':' We instead set the target size as (shortest_edge, shortest_edge) to here to ensure all images are batchable.','line_number':428,'multiline':False]
['text':' Define torchvision transform to be applied to each image.','line_number':442,'multiline':False]
['text':' jitter = ColorJitter(brightness=0.25, contrast=0.25, saturation=0.25, hue=0.1)','line_number':443,'multiline':False]
['text':' Optimizer','line_number':493,'multiline':False]
['text':' Figure out how many steps we should save the Accelerator states','line_number':501,'multiline':False]
['text':' Scheduler and math around the number of training steps.','line_number':506,'multiline':False]
['text':' Prepare everything with our `accelerator`.','line_number':520,'multiline':False]
['text':' We need to recalculate our total training steps as the size of the training dataloader may have changed.','line_number':525,'multiline':False]
['text':' Afterwards we recalculate our number of training epochs','line_number':529,'multiline':False]
['text':' Instantiate metric','line_number':532,'multiline':False]
['text':' We need to initialize the trackers we use, and also store our configuration.','line_number':535,'multiline':False]
['text':' The trackers initializes automatically on the main process.','line_number':536,'multiline':False]
['text':' TensorBoard cannot log Enums, need the raw value','line_number':539,'multiline':False]
['text':' Train!','line_number':543,'multiline':False]
['text':' Only show the progress bar once on each machine.','line_number':553,'multiline':False]
['text':' Potentially load in the weights and states from a previous save','line_number':558,'multiline':False]
['text':' Get the most recent checkpoint','line_number':564,'multiline':False]
['text':' Sorts folders by date modified, most recent checkpoint is the last','line_number':567,'multiline':False]
['text':' Extract `epoch_{i}` or `step_{i}`','line_number':573,'multiline':False]
['text':' need to multiply `gradient_accumulation_steps` to reflect real steps','line_number':581,'multiline':False]
['text':' update the progress_bar if load from checkpoint','line_number':587,'multiline':False]
['text':' We skip the first `n` batches in the dataloader when resuming from a checkpoint','line_number':595,'multiline':False]
['text':' We keep track of the loss at each epoch','line_number':603,'multiline':False]
['text':' Checks if the accelerator has performed an optimization step behind the scenes','line_number':611,'multiline':False]
['text':' we've already reduced the labels before','line_number':663,'multiline':False]
