['text':' coding=utf-8','line_number':1,'multiline':False]
['text':' Copyright 2020 The HuggingFace Inc. team.','line_number':2,'multiline':False]
['text':'','line_number':3,'multiline':False]
['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':4,'multiline':False]
['text':' you may not use this file except in compliance with the License.','line_number':5,'multiline':False]
['text':' You may obtain a copy of the License at','line_number':6,'multiline':False]
['text':'','line_number':7,'multiline':False]
['text':'     http://www.apache.org/licenses/LICENSE-2.0','line_number':8,'multiline':False]
['text':'','line_number':9,'multiline':False]
['text':' Unless required by applicable law or agreed to in writing, software','line_number':10,'multiline':False]
['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':11,'multiline':False]
['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':12,'multiline':False]
['text':' See the License for the specific language governing permissions and','line_number':13,'multiline':False]
['text':' limitations under the License.','line_number':14,'multiline':False]
['text':' Path is set with the intent you should run this script from the root of the repo.','line_number':45,'multiline':False]
['text':' Matches is_xxx_available()','line_number':49,'multiline':False]
['text':' Catches a one-line _import_struct = {xxx}','line_number':51,'multiline':False]
['text':' Catches a line with a key-values pattern: "bla": ["foo", "bar"]','line_number':53,'multiline':False]
['text':' Catches a line if not is_foo_available','line_number':55,'multiline':False]
['text':' Catches a line _import_struct["bla"].append("foo")','line_number':57,'multiline':False]
['text':' Catches a line _import_struct["bla"].extend(["foo", "bar"]) or _import_struct["bla"] = ["foo", "bar"]','line_number':59,'multiline':False]
['text':' Catches a line with an object between quotes and a comma:     "MyModel",','line_number':61,'multiline':False]
['text':' Catches a line with objects between brackets only:    ["foo", "bar"],','line_number':63,'multiline':False]
['text':' Catches a line with from foo import bar, bla, boo','line_number':65,'multiline':False]
['text':' Catches a line with try:','line_number':67,'multiline':False]
['text':' Catches a line with else:','line_number':69,'multiline':False]
['text':' Get the to `_import_structure` definition.','line_number':108,'multiline':False]
['text':' If this is a traditional init, just return.','line_number':113,'multiline':False]
['text':' First grab the objects without a specific backend in _import_structure','line_number':117,'multiline':False]
['text':' If we have everything on a single line, let's deal with it.','line_number':121,'multiline':False]
['text':' Those are stored with the key "none".','line_number':137,'multiline':False]
['text':' Let's continue with backend-specific objects in _import_structure','line_number':140,'multiline':False]
['text':' If the line is an if not is_backend_available, we grab all objects associated.','line_number':142,'multiline':False]
['text':' Check if the backend declaration is inside a try block:','line_number':144,'multiline':False]
['text':' Scroll until we hit the else block of try-except-else','line_number':151,'multiline':False]
['text':' Until we unindent, add backend objects to the list','line_number':158,'multiline':False]
['text':' At this stage we are in the TYPE_CHECKING part, first grab the objects without a specific backend','line_number':183,'multiline':False]
['text':' Let's continue with backend-specific objects','line_number':200,'multiline':False]
['text':' If the line is an if is_backend_available, we grab all objects associated.','line_number':202,'multiline':False]
['text':' Check if the backend declaration is inside a try block:','line_number':204,'multiline':False]
['text':' Scroll until we hit the else block of try-except-else','line_number':211,'multiline':False]
['text':' Until we unindent, add backend objects to the list','line_number':218,'multiline':False]
['text':' If one backend is missing from the other part of the init, error early.','line_number':254,'multiline':False]
['text':' Find all errors.','line_number':259,'multiline':False]
['text':' Duplicate imports in any half.','line_number':261,'multiline':False]
['text':' Missing imports in either part of the init.','line_number':269,'multiline':False]
['text':' Ignore private modules','line_number':308,'multiline':False]
['text':' Ignore leftovers from branches (empty folders apart from pycache)','line_number':312,'multiline':False]
['text':' This is to make sure the transformers module imported is the one in the repo.','line_number':341,'multiline':False]
['text':' This contains all the base keys of the _import_structure object defined in the init, but if the user is missing','line_number':347,'multiline':False]
['text':' some optional dependencies, they may not have all of them. Thus we read the init to read all additions and','line_number':348,'multiline':False]
['text':' (potentiall re-) add them.','line_number':349,'multiline':False]
