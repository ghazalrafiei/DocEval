['text':' Pipelines','line_number':17,'multiline':False]
['text':'audio)、[コンピューター ビジョン](#computer-vision)、[自然言語処理](#natural-language-processing)、および [マルチモーダル](#multimodal) タスクで使用できます。 ','line_number':28,'multiline':False]
['text':'# The pipeline abstraction','line_number':30,'multiline':False]
['text':' KeyDataset (only *pt*) will simply return the item in the dict returned by the dataset item','line_number':74,'multiline':False]
['text':' as we're not interested in the *target* part of the dataset. For sentence pair use KeyPairDataset','line_number':75,'multiline':False]
['text':' {"text": "NUMBER TEN FRESH NELLY IS WAITING ON YOU GOOD NIGHT HUSBAND"}','line_number':78,'multiline':False]
['text':' {"text": ....}','line_number':79,'multiline':False]
['text':' ....','line_number':80,'multiline':False]
['text':' This could come from a dataset, a database, a queue or HTTP request','line_number':93,'multiline':False]
['text':' in a server','line_number':94,'multiline':False]
['text':' Caveat: because this is iterative, you cannot use `num_workers > 1` variable','line_number':95,'multiline':False]
['text':' to use multiple threads to preprocess data. You can still have 1 thread that','line_number':96,'multiline':False]
['text':' does the preprocessing while the main runs the big inference','line_number':97,'multiline':False]
['text':' {"text": "NUMBER TEN FRESH NELLY IS WAITING ON YOU GOOD NIGHT HUSBAND"}','line_number':103,'multiline':False]
['text':' {"text": ....}','line_number':104,'multiline':False]
['text':' ....','line_number':105,'multiline':False]
['text':'# Pipeline batching','line_number':111,'multiline':False]
['text':' [{'label': 'POSITIVE', 'score': 0.9998743534088135}]','line_number':126,'multiline':False]
['text':' Exactly the same output as before, but the content are passed','line_number':127,'multiline':False]
['text':' as batches to the model','line_number':128,'multiline':False]
['text':' On GTX 970','line_number':168,'multiline':False]
['text':' (bs, n_heads, q_length, dim_per_head)','line_number':221,'multiline':False]
['text':'# Pipeline chunk batching','line_number':245,'multiline':False]
['text':'# Pipeline custom code','line_number':276,'multiline':False]
['text':' Your code goes here','line_number':291,'multiline':False]
['text':' And here','line_number':293,'multiline':False]
['text':' or if you use *pipeline* function, then:','line_number':297,'multiline':False]
['text':'# Implementing a pipeline','line_number':303,'multiline':False]
['text':'# Audio','line_number':307,'multiline':False]
['text':'## AudioClassificationPipeline','line_number':311,'multiline':False]
['text':'## AutomaticSpeechRecognitionPipeline','line_number':317,'multiline':False]
['text':'## TextToAudioPipeline','line_number':323,'multiline':False]
['text':'## ZeroShotAudioClassificationPipeline','line_number':330,'multiline':False]
['text':'# Computer vision','line_number':336,'multiline':False]
['text':'## DepthEstimationPipeline','line_number':340,'multiline':False]
['text':'## ImageClassificationPipeline','line_number':345,'multiline':False]
['text':'## ImageSegmentationPipeline','line_number':351,'multiline':False]
['text':'## ImageToImagePipeline','line_number':357,'multiline':False]
['text':'## ObjectDetectionPipeline','line_number':363,'multiline':False]
['text':'## VideoClassificationPipeline','line_number':369,'multiline':False]
['text':'## ZeroShotImageClassificationPipeline','line_number':375,'multiline':False]
['text':'## ZeroShotObjectDetectionPipeline','line_number':381,'multiline':False]
['text':'# Natural Language Processing','line_number':387,'multiline':False]
['text':'## ConversationalPipeline','line_number':391,'multiline':False]
['text':'## FillMaskPipeline','line_number':399,'multiline':False]
['text':'## NerPipeline','line_number':405,'multiline':False]
['text':'## QuestionAnsweringPipeline','line_number':411,'multiline':False]
['text':'## SummarizationPipeline','line_number':417,'multiline':False]
['text':'## TableQuestionAnsweringPipeline','line_number':423,'multiline':False]
['text':'## TextClassificationPipeline','line_number':428,'multiline':False]
['text':'## TextGenerationPipeline','line_number':434,'multiline':False]
['text':'## Text2TextGenerationPipeline','line_number':440,'multiline':False]
['text':'## TokenClassificationPipeline','line_number':446,'multiline':False]
['text':'## TranslationPipeline','line_number':452,'multiline':False]
['text':'## ZeroShotClassificationPipeline','line_number':458,'multiline':False]
['text':'# Multimodal','line_number':464,'multiline':False]
['text':'## DocumentQuestionAnsweringPipeline','line_number':468,'multiline':False]
['text':'## FeatureExtractionPipeline','line_number':474,'multiline':False]
['text':'## ImageToTextPipeline','line_number':480,'multiline':False]
['text':'## VisualQuestionAnsweringPipeline','line_number':486,'multiline':False]
['text':'# Parent class: `Pipeline`','line_number':492,'multiline':False]
