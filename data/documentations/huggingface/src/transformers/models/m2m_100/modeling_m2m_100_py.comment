['text':' coding=utf-8','line_number':1,'multiline':False]
['text':' Copyright 2021 The Fairseq Authors and The HuggingFace Inc. team. All rights reserved.','line_number':2,'multiline':False]
['text':'','line_number':3,'multiline':False]
['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':4,'multiline':False]
['text':' you may not use this file except in compliance with the License.','line_number':5,'multiline':False]
['text':' You may obtain a copy of the License at','line_number':6,'multiline':False]
['text':'','line_number':7,'multiline':False]
['text':'     http://www.apache.org/licenses/LICENSE-2.0','line_number':8,'multiline':False]
['text':'','line_number':9,'multiline':False]
['text':' Unless required by applicable law or agreed to in writing, software','line_number':10,'multiline':False]
['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':11,'multiline':False]
['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':12,'multiline':False]
['text':' See the License for the specific language governing permissions and','line_number':13,'multiline':False]
['text':' limitations under the License.','line_number':14,'multiline':False]
['text':' See all M2M100 models at https://huggingface.co/models?filter=m2m_100','line_number':54,'multiline':False]
['text':' Copied from transformers.models.bart.modeling_bart.shift_tokens_right','line_number':58,'multiline':False]
['text':' replace possible -100 values in labels by `pad_token_id`','line_number':69,'multiline':False]
['text':' The series of casts and type-conversions here are carefully balanced to both work with ONNX export and XLA.','line_number':80,'multiline':False]
['text':' in forward put the weights on the correct dtype and device of the param','line_number':99,'multiline':False]
['text':' zero pad','line_number':118,'multiline':False]
['text':' Create the position ids from the input token ids. Any padded tokens remain padded.','line_number':131,'multiline':False]
['text':' expand embeddings if needed','line_number':139,'multiline':False]
['text':' Copied from transformers.models.bart.modeling_bart.BartAttention with Bart->M2M100','line_number':164,'multiline':False]
['text':' if key_value_states are provided this layer is used as a cross-attention layer','line_number':213,'multiline':False]
['text':' for the decoder','line_number':214,'multiline':False]
['text':' get query proj','line_number':219,'multiline':False]
['text':' get key, value proj','line_number':221,'multiline':False]
['text':' `past_key_value[0].shape[2] == key_value_states.shape[1]`','line_number':222,'multiline':False]
['text':' is checking that the `sequence_length` of the `past_key_value` is the same as','line_number':223,'multiline':False]
['text':' the provided `key_value_states` to support prefix tuning','line_number':224,'multiline':False]
['text':' reuse k,v, cross_attentions','line_number':230,'multiline':False]
['text':' cross_attentions','line_number':234,'multiline':False]
['text':' reuse k, v, self_attention','line_number':238,'multiline':False]
['text':' self_attention','line_number':244,'multiline':False]
['text':' if cross_attention save Tuple(torch.Tensor, torch.Tensor) of all cross attention key/value_states.','line_number':249,'multiline':False]
['text':' Further calls to cross_attention layer can then reuse all cross-attention','line_number':250,'multiline':False]
['text':' key/value_states (first "if" case)','line_number':251,'multiline':False]
['text':' if uni-directional self-attention (decoder) save Tuple(torch.Tensor, torch.Tensor) of','line_number':252,'multiline':False]
['text':' all previous decoder key/value_states. Further calls to uni-directional self-attention','line_number':253,'multiline':False]
['text':' can concat previous decoder key/value_states to current projected key/value_states (third "elif" case)','line_number':254,'multiline':False]
['text':' if encoder bi-directional self-attention `past_key_value` is always `None`','line_number':255,'multiline':False]
['text':' this operation is a bit awkward, but it's required to','line_number':292,'multiline':False]
['text':' make sure that attn_weights keeps its gradient.','line_number':293,'multiline':False]
['text':' In order to do so, attn_weights have to be reshaped','line_number':294,'multiline':False]
['text':' twice and have to be reused in the following','line_number':295,'multiline':False]
['text':' Use the `embed_dim` from the config (stored in the class) rather than `hidden_state` because `attn_output` can be','line_number':314,'multiline':False]
['text':' partitioned across GPUs when using tensor-parallelism.','line_number':315,'multiline':False]
['text':' Copied from transformers.models.mbart.modeling_mbart.MBartEncoderLayer with MBart->M2M100, MBART->M2M100','line_number':323,'multiline':False]
['text':' Copied from transformers.models.mbart.modeling_mbart.MBartDecoderLayer with MBart->M2M100, MBART->M2M100','line_number':397,'multiline':False]
['text':' Self Attention','line_number':461,'multiline':False]
['text':' decoder uni-directional self-attention cached key/values tuple is at positions 1,2','line_number':462,'multiline':False]
['text':' add present self-attn cache to positions 1,2 of present_key_value tuple','line_number':464,'multiline':False]
['text':' Cross-Attention Block','line_number':475,'multiline':False]
['text':' cross_attn cached key/values tuple is at positions 3,4 of present_key_value tuple','line_number':482,'multiline':False]
['text':' add cross-attn to positions 3,4 of present_key_value tuple','line_number':495,'multiline':False]
['text':' Fully Connected','line_number':498,'multiline':False]
['text':' Initialize weights and apply final processing','line_number':694,'multiline':False]
['text':' retrieve input_ids and inputs_embeds','line_number':749,'multiline':False]
['text':' expand attention_mask','line_number':770,'multiline':False]
['text':' [bsz, seq_len] -> [bsz, 1, tgt_seq_len, src_seq_len]','line_number':772,'multiline':False]
['text':' check if head_mask has a correct number of layers specified if desired','line_number':778,'multiline':False]
['text':' add LayerDrop (see https://arxiv.org/abs/1909.11556 for description)','line_number':791,'multiline':False]
['text':' under deepspeed zero3 all gpus must run in sync','line_number':796,'multiline':False]
['text':' Initialize weights and apply final processing','line_number':865,'multiline':False]
['text':' retrieve input_ids and inputs_embeds','line_number':955,'multiline':False]
['text':' past_key_values_length','line_number':966,'multiline':False]
['text':' create causal mask','line_number':972,'multiline':False]
['text':' [bsz, seq_len] -> [bsz, 1, tgt_seq_len, src_seq_len]','line_number':973,'multiline':False]
['text':' expand encoder attention mask','line_number':978,'multiline':False]
['text':' [bsz, seq_len] -> [bsz, 1, tgt_seq_len, src_seq_len]','line_number':980,'multiline':False]
['text':' embed positions','line_number':985,'multiline':False]
['text':' decoder layers','line_number':1000,'multiline':False]
['text':' check if head_mask/cross_attn_head_mask has a correct number of layers specified if desired','line_number':1006,'multiline':False]
['text':' add LayerDrop (see https://arxiv.org/abs/1909.11556 for description)','line_number':1020,'multiline':False]
['text':' under deepspeed zero3 all gpus must run in sync','line_number':1025,'multiline':False]
['text':' add hidden states from the last decoder layer','line_number':1071,'multiline':False]
['text':' Initialize weights and apply final processing','line_number':1107,'multiline':False]
['text':' If the user passed a tuple for encoder_outputs, we wrap it in a BaseModelOutput when return_dict=True','line_number':1170,'multiline':False]
['text':' decoder outputs consists of (dec_features, past_key_value, dec_hidden, dec_attn)','line_number':1178,'multiline':False]
['text':' Initialize weights and apply final processing','line_number':1221,'multiline':False]
['text':' move labels to the correct device to enable PP','line_number':1295,'multiline':False]
['text':' cut decoder_input_ids if past is used','line_number':1328,'multiline':False]
['text':' Some generation methods already pass only the last input ID','line_number':1332,'multiline':False]
['text':' Default to old behavior: keep only final ID','line_number':1336,'multiline':False]
['text':' encoder_outputs is defined. input_ids not needed','line_number':1342,'multiline':False]
['text':' change this to avoid caching (presumably for debugging)','line_number':1350,'multiline':False]
