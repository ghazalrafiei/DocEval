['text':' coding=utf-8','line_number':1,'multiline':False]
['text':' Copyright 2020 The Microsoft Authors and The HuggingFace Inc. team.','line_number':2,'multiline':False]
['text':'','line_number':3,'multiline':False]
['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':4,'multiline':False]
['text':' you may not use this file except in compliance with the License.','line_number':5,'multiline':False]
['text':' You may obtain a copy of the License at','line_number':6,'multiline':False]
['text':'','line_number':7,'multiline':False]
['text':'     http://www.apache.org/licenses/LICENSE-2.0','line_number':8,'multiline':False]
['text':'','line_number':9,'multiline':False]
['text':' Unless required by applicable law or agreed to in writing, software','line_number':10,'multiline':False]
['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':11,'multiline':False]
['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':12,'multiline':False]
['text':' See the License for the specific language governing permissions and','line_number':13,'multiline':False]
['text':' limitations under the License.','line_number':14,'multiline':False]
['text':' See all XLMProphetNet models at https://huggingface.co/models?filter=xprophetnet','line_number':49,'multiline':False]
['text':' Copied from src.transformers.models.prophetnet.modeling_prophetnet.PROPHETNET_START_DOCSTRING with ProphetNetConfig->XLMProphetNetConfig','line_number':52,'multiline':False]
['text':' Copied from src.transformers.models.prophetnet.modeling_prophetnet.PROPHETNET_INPUTS_DOCSTRING with ProphetNet->XLMProphetNet','line_number':72,'multiline':False]
['text':' Copied from src.transformers.models.prophetnet.modeling_prophetnet.PROPHETNET_STANDALONE_INPUTS_DOCSTRING with ProphetNet->XLMProphetNet','line_number':147,'multiline':False]
['text':' Copied from transformers.models.prophetnet.modeling_prophetnet.softmax','line_number':182,'multiline':False]
['text':' Copied from transformers.models.prophetnet.modeling_prophetnet.ngram_attention_bias','line_number':190,'multiline':False]
['text':' create bias','line_number':199,'multiline':False]
['text':' Copied from transformers.models.prophetnet.modeling_prophetnet.compute_relative_buckets','line_number':208,'multiline':False]
['text':' Copied from transformers.models.prophetnet.modeling_prophetnet.compute_all_stream_relative_buckets','line_number':236,'multiline':False]
['text':' main stream','line_number':241,'multiline':False]
['text':' predicting stream','line_number':245,'multiline':False]
['text':' get both position buckets','line_number':250,'multiline':False]
['text':' Copied from transformers.models.prophetnet.modeling_prophetnet.ProphetNetSeq2SeqLMOutput with ProphetNet->XLMProphetNet all-casing','line_number':261,'multiline':False]
['text':' Copied from transformers.models.prophetnet.modeling_prophetnet.ProphetNetSeq2SeqModelOutput with ProphetNet->XLMProphetNet all-casing','line_number':347,'multiline':False]
['text':' Copied from transformers.models.prophetnet.modeling_prophetnet.ProphetNetDecoderModelOutput with ProphetNet->XLMProphetNet all-casing','line_number':434,'multiline':False]
['text':' Copied from transformers.models.prophetnet.modeling_prophetnet.ProphetNetDecoderLMOutput with ProphetNet->XLMProphetNet all-casing','line_number':495,'multiline':False]
['text':' Copied from transformers.models.prophetnet.modeling_prophetnet.ProphetNetPreTrainedModel with ProphetNet->XLMProphetNet','line_number':557,'multiline':False]
['text':' shift inputs to the right','line_number':582,'multiline':False]
['text':' replace possible -100 values in labels by `pad_token_id`','line_number':588,'multiline':False]
['text':' Copied from transformers.models.prophetnet.modeling_prophetnet.ProphetNetPositionalEmbeddings with ProphetNet->XLMProphetNet','line_number':596,'multiline':False]
['text':' position_ids is the same for every token when decoding a single step','line_number':615,'multiline':False]
['text':' Without the int() cast, it doesn't work in some cases when exporting to ONNX','line_number':616,'multiline':False]
['text':' retrieve position_ids from input_ids / attention_mask','line_number':626,'multiline':False]
['text':' make sure position_ids are not bigger then max_length','line_number':631,'multiline':False]
['text':' Copied from transformers.models.prophetnet.modeling_prophetnet.ProphetNetAttention with ProphetNet->XLMProphetNet','line_number':640,'multiline':False]
['text':' if key_value_states are provided this layer is used as a cross-attention layer','line_number':682,'multiline':False]
['text':' for the decoder','line_number':683,'multiline':False]
['text':' previous time steps are cached - no need to recompute key and value if they are static','line_number':691,'multiline':False]
['text':' reuse k,v, cross_attentions','line_number':695,'multiline':False]
['text':' cross_attentions','line_number':699,'multiline':False]
['text':' self_attention','line_number':703,'multiline':False]
['text':' if cross_attention save Tuple(torch.Tensor, torch.Tensor) of all cross attention key/value_states.','line_number':708,'multiline':False]
['text':' Further calls to cross_attention layer can then reuse all cross-attention','line_number':709,'multiline':False]
['text':' key/value_states (first "if" case)','line_number':710,'multiline':False]
['text':' if encoder bi-directional self-attention `past_key_value` is always `None`','line_number':711,'multiline':False]
['text':' project states into the correct shape','line_number':714,'multiline':False]
['text':' This is part of a workaround to get around fork/join parallelism not supporting Optional types.','line_number':725,'multiline':False]
['text':' don't attend to padding symbols','line_number':732,'multiline':False]
['text':' apply head_mask also on attn_weights_reshaped which is used for n-gram attention inside the model','line_number':750,'multiline':False]
['text':' Copied from transformers.models.prophetnet.modeling_prophetnet.ProphetNetFeedForward with ProphetNet->XLMProphetNet','line_number':770,'multiline':False]
['text':' Copied from transformers.models.prophetnet.modeling_prophetnet.ProphetNetNgramSelfAttention with ProphetNet->XLMProphetNet','line_number':794,'multiline':False]
['text':' key, value, query projection','line_number':811,'multiline':False]
['text':' out projection','line_number':816,'multiline':False]
['text':' rel position embeddings','line_number':819,'multiline':False]
['text':' for onnx runtime','line_number':822,'multiline':False]
['text':' project','line_number':848,'multiline':False]
['text':' normalize','line_number':853,'multiline':False]
['text':' reshape','line_number':856,'multiline':False]
['text':' chunk into main stream and predict stream','line_number':866,'multiline':False]
['text':' saved states are stored with shape (batch_size, num_attn_heads, seq_len, head_dim)','line_number':877,'multiline':False]
['text':' Update cache','line_number':884,'multiline':False]
['text':' get seq_length of main stream only','line_number':887,'multiline':False]
['text':' MAIN-STREAM','line_number':890,'multiline':False]
['text':' main attn weights','line_number':891,'multiline':False]
['text':' [batch_size, number_heads, sequence_length, head_dimesion]','line_number':892,'multiline':False]
['text':' x [batch_size, number_heads, head_dimesion, sequence_length]','line_number':893,'multiline':False]
['text':' -> [batch_size, number_heads, sequence_length, sequence_length]','line_number':894,'multiline':False]
['text':' retrieve relative position embeddings for each layer -> see paper for more details','line_number':897,'multiline':False]
['text':' project to attn_output','line_number':923,'multiline':False]
['text':' [batch_size, number_heads, sequence_length, sequence_length]','line_number':924,'multiline':False]
['text':' x [batch_size, number_heads, sequence_length, head_dimesion]','line_number':925,'multiline':False]
['text':' -> [batch_size, number_heads, sequence_length, head_dimesion]','line_number':926,'multiline':False]
['text':' reshape so that num_heads dim is merged into last `head_dim` axis','line_number':928,'multiline':False]
['text':' PREDICT-STREAM','line_number':932,'multiline':False]
['text':' [batch_size, ngram, number_heads, sequence_length, head_dimesion]','line_number':933,'multiline':False]
['text':' [batch_size, ngram, number_heads, 2*sequence_length, head_dimesion]','line_number':938,'multiline':False]
['text':' [batch_size, sequence_length, ngram, hidden_size]','line_number':941,'multiline':False]
['text':' [batch_size, number_heads, ngram, 2*sequence_length, head_dimesion]','line_number':944,'multiline':False]
['text':' [batch_size, ngram, number_heads, sequence_length, head_dimesion]','line_number':949,'multiline':False]
['text':' x [batch_size, ngram, number_heads, 2*sequence_length, head_dimesion]','line_number':950,'multiline':False]
['text':' -> [batch_size, ngram, number_heads, sequence_length, 2*sequence_length]','line_number':951,'multiline':False]
['text':' retrieve relative position embeddings for each layer -> see paper for more details','line_number':954,'multiline':False]
['text':' [batch_size, ngram, number_heads, sequence_length, predict_relative_pos_embeddings]','line_number':955,'multiline':False]
['text':' [batch_size, ngram, number_heads, sequence_length, 2*sequence_length]','line_number':960,'multiline':False]
['text':' Permuting Predict attention mask to [batch_size, ngram, number_heads, sequence_length, 2*sequence_length]','line_number':964,'multiline':False]
['text':' project to attention output','line_number':985,'multiline':False]
['text':' [batch_size, ngram, number_heads, sequence_length, 2*sequence_length]','line_number':986,'multiline':False]
['text':' x [batch_size, ngram, number_heads, 2*sequence_length, head_dimesion]','line_number':987,'multiline':False]
['text':' -> [batch_size, ngram, number_heads, sequence_length, head_dimesion]','line_number':988,'multiline':False]
['text':' reshape so that num_heads dim is merged into last `head_dim` axis','line_number':993,'multiline':False]
['text':' [batch_size, ngram, number_heads, sequence_length, head_dimesion] -> [batch_size, ngram, sequence_length, hidden_size]','line_number':994,'multiline':False]
['text':' concat to single attn output','line_number':999,'multiline':False]
['text':' [batch_size, (1+ngram)*sequence_length, hidden_size]','line_number':1000,'multiline':False]
['text':' reshape into better form for `config.output_attentions`','line_number':1002,'multiline':False]
['text':' input hidden_states [batch_size, sequence_length, hidden_size]','line_number':1012,'multiline':False]
['text':' input attn_weights [batch_size, num_heads, sequence_length, sequence_length]','line_number':1013,'multiline':False]
['text':' input position_ids [batch_size, sequence_length] or [1,1]','line_number':1014,'multiline':False]
['text':' [batch_size, sequence_length, sequence_length+1]','line_number':1026,'multiline':False]
['text':' [batch_size, sequence_length, num_buckets * num_heads]','line_number':1032,'multiline':False]
['text':' [batch_size, num_heads, sequence_length, num_buckets]','line_number':1038,'multiline':False]
['text':' [batch_size * num_heads * sequence_length, sequence_length]','line_number':1042,'multiline':False]
['text':' [batch_size * num_heads * sequence_length, sequence_length]','line_number':1047,'multiline':False]
['text':' input hidden_states [batch_size, sequence_length, ngram, hidden_size]','line_number':1057,'multiline':False]
['text':' input attn_weights [batch_size, ngram, num_heads, sequence_length, 2*sequence_length]','line_number':1058,'multiline':False]
['text':' input position_ids [batch_size, sequence_length] or [1,1]','line_number':1059,'multiline':False]
['text':' input predict_relative_position_buckets [batch_size, sequence_length, 2*sequence_length] or None','line_number':1060,'multiline':False]
['text':' [batch_size, ngram, sequence_length, hidden_size]','line_number':1081,'multiline':False]
['text':' [batch_size, ngram, sequence_length, num_buckets, num_heads]','line_number':1085,'multiline':False]
['text':' [batch_size * ngram * sequence_length * num_heads, num_buckets]','line_number':1090,'multiline':False]
['text':' [ngram, batch_size, num_heads * sequence_length, -1]','line_number':1092,'multiline':False]
['text':' [ngram * batch_size * num_heads * sequence_length, -1]','line_number':1097,'multiline':False]
['text':' [batch_size, gram, num_heads, sequence_length, -1]','line_number':1106,'multiline':False]
['text':' Copied from transformers.models.prophetnet.modeling_prophetnet.ProphetNetEncoderLayer with ProphetNet->XLMProphetNet, Prophetnet->XLMProphetnet','line_number':1114,'multiline':False]
['text':' 1st residual block','line_number':1122,'multiline':False]
['text':' 2nd residual block','line_number':1126,'multiline':False]
['text':' 1st residual block','line_number':1137,'multiline':False]
['text':' 2nd residual block','line_number':1146,'multiline':False]
['text':' Copied from transformers.models.prophetnet.modeling_prophetnet.ProphetNetDecoderLayer with Prophetnet->XLMProphetnet, ProphetNet->XLMProphetNet','line_number':1158,'multiline':False]
['text':' 1st residual block','line_number':1166,'multiline':False]
['text':' 2nd residual block','line_number':1170,'multiline':False]
['text':' 3rd residual block','line_number':1175,'multiline':False]
['text':' 1st residual block','line_number':1195,'multiline':False]
['text':' decoder uni-directional self-attention cached key/values tuple is at positions 1,2','line_number':1196,'multiline':False]
['text':' cross_attn cached key/values tuple is at positions 3,4 of present_key_value tuple','line_number':1210,'multiline':False]
['text':' 2nd residual block','line_number':1214,'multiline':False]
['text':' add cross-attn to positions 3,4 of present_key_value tuple','line_number':1225,'multiline':False]
['text':' 3rd residual block','line_number':1228,'multiline':False]
['text':' Copied from transformers.models.prophetnet.modeling_prophetnet.ProphetNetEncoder with microsoft/prophetnet-large-uncased->patrickvonplaten/xprophetnet-large-uncased-standalone, ProphetNet->XLMProphetNet, PROPHETNET->XLM_PROPHETNET','line_number':1247,'multiline':False]
['text':' Initialize weights and apply final processing','line_number':1269,'multiline':False]
['text':' prepare attention mask','line_number':1320,'multiline':False]
['text':' check if head_mask has a correct number of layers specified if desired','line_number':1338,'multiline':False]
['text':' Copied from transformers.models.prophetnet.modeling_prophetnet.ProphetNetDecoder with microsoft/prophetnet-large-uncased->patrickvonplaten/xprophetnet-large-uncased-standalone, ProphetNet->XLMProphetNet, PROPHETNET->XLM_PROPHETNET,','line_number':1382,'multiline':False]
['text':' Initialize weights and apply final processing','line_number':1411,'multiline':False]
['text':' add position embeddings','line_number':1509,'multiline':False]
['text':' prepare attention mask','line_number':1514,'multiline':False]
['text':' prepare encoder attention mask','line_number':1533,'multiline':False]
['text':' init attentions, hidden_states and cache with empty tuples','line_number':1549,'multiline':False]
['text':' check if head_mask/cross_attn_head_mask has a correct number of layers specified if desired','line_number':1566,'multiline':False]
['text':' grad cannot be kept because tensor is sliced','line_number':1575,'multiline':False]
['text':' split last_hidden_state for return','line_number':1635,'multiline':False]
['text':' buffer relative buckets','line_number':1673,'multiline':False]
['text':' get causal mask','line_number':1690,'multiline':False]
['text':' add usual attention mask','line_number':1703,'multiline':False]
['text':' get causal mask','line_number':1714,'multiline':False]
['text':' add usual attention mask','line_number':1731,'multiline':False]
['text':' predicted stream attention_mask should always be 0','line_number':1737,'multiline':False]
['text':' Copied from transformers.models.prophetnet.modeling_prophetnet.ProphetNetModel with microsoft/prophetnet-large-uncased->patrickvonplaten/xprophetnet-large-uncased-standalone, ProphetNet->XLMProphetNet, PROPHETNET->XLM_PROPHETNET','line_number':1751,'multiline':False]
['text':' Initialize weights and apply final processing','line_number':1769,'multiline':False]
['text':' decoder outputs consists of (dec_features, past_key_values, dec_hidden, dec_attn)','line_number':1849,'multiline':False]
['text':' Copied from transformers.models.prophetnet.modeling_prophetnet.ProphetNetForConditionalGeneration with microsoft/prophetnet-large-uncased->patrickvonplaten/xprophetnet-large-uncased-standalone, ProphetNet->XLMProphetNet, PROPHETNET->XLM_PROPHETNET','line_number':1886,'multiline':False]
['text':' Initialize weights and apply final processing','line_number':1898,'multiline':False]
['text':' get decoder inputs from shifting lm labels to the right','line_number':1963,'multiline':False]
['text':' To use .view in loss computation, make sure that logits is contiguous.','line_number':1993,'multiline':False]
['text':' first step, decoder_cached_states are empty','line_number':2064,'multiline':False]
['text':' encoder_outputs is defined. input_ids not needed','line_number':2066,'multiline':False]
['text':' Copied from transformers.models.bart.modeling_bart.BartForConditionalGeneration._reorder_cache','line_number':2081,'multiline':False]
['text':' cached cross_attention states don't have to be reordered -> they are always the same','line_number':2085,'multiline':False]
['text':' Copied from transformers.models.prophetnet.modeling_prophetnet.ProphetNetForCausalLM with microsoft/prophetnet-large-uncased->patrickvonplaten/xprophetnet-large-uncased-standalone, ProphetNet->XLMProphetNet, PROPHETNET->XLM_PROPHETNET','line_number':2104,'multiline':False]
['text':' set config for CLM','line_number':2113,'multiline':False]
['text':' Initialize weights and apply final processing','line_number':2125,'multiline':False]
['text':' decoder outputs consists of (dec_features, past_key_values, dec_hidden, dec_attn)','line_number':2240,'multiline':False]
['text':' if model is used as a decoder in encoder-decoder model, the decoder attention mask is created on the fly','line_number':2321,'multiline':False]
['text':' first step, decoder_cached_states are empty','line_number':2327,'multiline':False]
['text':' encoder_outputs is defined. input_ids not needed','line_number':2329,'multiline':False]
['text':' Copied from transformers.models.bart.modeling_bart.BartForCausalLM._reorder_cache','line_number':2337,'multiline':False]
['text':' Copied from transformers.models.prophetnet.modeling_prophetnet.ProphetNetDecoderWrapper with ProphetNet->XLMProphetNet, prophetnet->XLMProphetNet','line_number':2347,'multiline':False]
['text':' Initialize weights and apply final processing','line_number':2360,'multiline':False]
