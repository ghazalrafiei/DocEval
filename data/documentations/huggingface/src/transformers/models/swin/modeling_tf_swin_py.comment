['text':' coding=utf-8','line_number':1,'multiline':False]
['text':' Copyright 2022 Microsoft Research and The HuggingFace Inc. team. All rights reserved.','line_number':2,'multiline':False]
['text':'','line_number':3,'multiline':False]
['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':4,'multiline':False]
['text':' you may not use this file except in compliance with the License.','line_number':5,'multiline':False]
['text':' You may obtain a copy of the License at','line_number':6,'multiline':False]
['text':'','line_number':7,'multiline':False]
['text':'     http://www.apache.org/licenses/LICENSE-2.0','line_number':8,'multiline':False]
['text':'','line_number':9,'multiline':False]
['text':' Unless required by applicable law or agreed to in writing, software','line_number':10,'multiline':False]
['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':11,'multiline':False]
['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':12,'multiline':False]
['text':' See the License for the specific language governing permissions and','line_number':13,'multiline':False]
['text':' limitations under the License.','line_number':14,'multiline':False]
['text':' General docstring','line_number':51,'multiline':False]
['text':' Base docstring','line_number':54,'multiline':False]
['text':' Image classification docstring','line_number':58,'multiline':False]
['text':' See all Swin models at https://huggingface.co/models?filter=swin','line_number':65,'multiline':False]
['text':' drop_path, TFSwinPatchEmbeddings, TFSwinPatchMerging and TFSwinDropPath are tensorflow','line_number':68,'multiline':False]
['text':' implementations of PyTorch functionalities in the timm library.','line_number':69,'multiline':False]
['text':' work with diff dim tensors, not just 2D ConvNets','line_number':262,'multiline':False]
['text':' replace the masked visual tokens by mask_tokens','line_number':324,'multiline':False]
['text':' pad the input to be divisible by self.patch_size, if needed','line_number':379,'multiline':False]
['text':' B,C,H,W -> B,H,W,C','line_number':382,'multiline':False]
['text':' B,H,W,C -> B,C,H,W','line_number':387,'multiline':False]
['text':' Use same default epsilon as PyTorch','line_number':427,'multiline':False]
['text':' `dim` is height * width','line_number':442,'multiline':False]
['text':' pad input to be disible by width and height, if needed','line_number':446,'multiline':False]
['text':' [batch_size, height/2, width/2, num_channels]','line_number':448,'multiline':False]
['text':' [batch_size, height/2, width/2, num_channels]','line_number':450,'multiline':False]
['text':' [batch_size, height/2, width/2, num_channels]','line_number':452,'multiline':False]
['text':' [batch_size, height/2, width/2, num_channels]','line_number':454,'multiline':False]
['text':' batch_size height/2 width/2 4*num_channels','line_number':456,'multiline':False]
['text':' batch_size height/2*width/2 4*C','line_number':460,'multiline':False]
['text':' get pair-wise relative position index for each token inside the window','line_number':541,'multiline':False]
['text':' Take the dot product between "query" and "key" to get the raw attention scores.','line_number':590,'multiline':False]
['text':' Apply the attention mask is (precomputed for all layers in SwinModel call() function)','line_number':606,'multiline':False]
['text':' Normalize the attention scores to probabilities.','line_number':616,'multiline':False]
['text':' This is actually dropping out entire tokens to attend to, which might','line_number':619,'multiline':False]
['text':' seem a bit unusual, but is taken from the original Transformer paper.','line_number':620,'multiline':False]
['text':' Mask heads if we want to','line_number':623,'multiline':False]
['text':' add attentions if we output them','line_number':687,'multiline':False]
['text':' calculate attention mask for SW-MSA','line_number':780,'multiline':False]
['text':' if window size is larger than input resolution, we don't partition windows','line_number':821,'multiline':False]
['text':' pad hidden_states to multiples of window size','line_number':832,'multiline':False]
['text':' cyclic shift','line_number':836,'multiline':False]
['text':' partition windows','line_number':842,'multiline':False]
['text':' reverse cyclic shift','line_number':858,'multiline':False]
['text':' patch merging layer','line_number':930,'multiline':False]
['text':' rearrange b (h w) c -> b c h w','line_number':1026,'multiline':False]
['text':' rearrange b (h w) c -> b c h w','line_number':1047,'multiline':False]
['text':' Prepare head mask if needed','line_number':1253,'multiline':False]
['text':' 1.0 in head_mask indicate we keep the head','line_number':1254,'multiline':False]
['text':' attention_probs has shape bsz x n_heads x N x N','line_number':1255,'multiline':False]
['text':' input head_mask has shape [num_heads] or [num_hidden_layers x num_heads]','line_number':1256,'multiline':False]
['text':' and head_mask is converted to shape [num_hidden_layers x batch x num_heads x seq_length x seq_length]','line_number':1257,'multiline':False]
['text':' When the number of output channels >= 2, PyTorch's PixelShuffle and','line_number':1388,'multiline':False]
['text':' TF's depth_to_space differ in their output as the order of channels selected for combining','line_number':1389,'multiline':False]
['text':' is a permutation of the other c.f.','line_number':1390,'multiline':False]
['text':' https://stackoverflow.com/questions/68272502/tf-depth-to-space-not-same-as-torchs-pixelshuffle-when-output-channels-1','line_number':1391,'multiline':False]
['text':' B,C,H,W -> B,H,W,C','line_number':1411,'multiline':False]
['text':' B,H,W,C -> B,C,H,W','line_number':1415,'multiline':False]
['text':' Reshape to (batch_size, num_channels, height, width)','line_number':1499,'multiline':False]
['text':' Reconstruct pixel values','line_number':1505,'multiline':False]
['text':' Swap axes as metric calculation reduces over the final dimension','line_number':1518,'multiline':False]
['text':' Classifier head','line_number':1566,'multiline':False]
