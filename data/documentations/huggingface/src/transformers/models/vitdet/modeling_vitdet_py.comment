['text':' coding=utf-8','line_number':1,'multiline':False]
['text':' Copyright 2023 Meta AI and The HuggingFace Inc. team. All rights reserved.','line_number':2,'multiline':False]
['text':'','line_number':3,'multiline':False]
['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':4,'multiline':False]
['text':' you may not use this file except in compliance with the License.','line_number':5,'multiline':False]
['text':' You may obtain a copy of the License at','line_number':6,'multiline':False]
['text':'','line_number':7,'multiline':False]
['text':'     http://www.apache.org/licenses/LICENSE-2.0','line_number':8,'multiline':False]
['text':'','line_number':9,'multiline':False]
['text':' Unless required by applicable law or agreed to in writing, software','line_number':10,'multiline':False]
['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':11,'multiline':False]
['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':12,'multiline':False]
['text':' See the License for the specific language governing permissions and','line_number':13,'multiline':False]
['text':' limitations under the License.','line_number':14,'multiline':False]
['text':' General docstring','line_number':41,'multiline':False]
['text':' See all ViTDet models at https://huggingface.co/models?filter=vitdet','line_number':47,'multiline':False]
['text':' Initialize absolute positional embedding with pretrain image size.','line_number':71,'multiline':False]
['text':' (batch_size, num_channels, height, width) -> (batch_size, height, width, num_channels)','line_number':126,'multiline':False]
['text':' add position embeddings','line_number':128,'multiline':False]
['text':' (batch_size, height, width, num_channels) -> (batch_size, num_channels, height, width)','line_number':132,'multiline':False]
['text':' Interpolate rel pos if needed.','line_number':154,'multiline':False]
['text':' Interpolate rel position embeddings.','line_number':156,'multiline':False]
['text':' Scale the coords with short length if shapes for q and k are different.','line_number':166,'multiline':False]
['text':' initialize relative positional embeddings','line_number':240,'multiline':False]
['text':' qkv with shape (3, batch_size, num_heads, height * width, num_channels)','line_number':246,'multiline':False]
['text':' queries, keys and values have shape (batch_size * num_heads, height * width, num_channels)','line_number':248,'multiline':False]
['text':' Copied from transformers.models.beit.modeling_beit.drop_path','line_number':277,'multiline':False]
['text':' work with diff dim tensors, not just 2D ConvNets','line_number':291,'multiline':False]
['text':' binarize','line_number':293,'multiline':False]
['text':' Copied from transformers.models.beit.modeling_beit.BeitDropPath','line_number':298,'multiline':False]
['text':' Use a residual block with bottleneck channel as dim // 2','line_number':476,'multiline':False]
['text':' Window partition','line_number':496,'multiline':False]
['text':' add self attentions if we output attention weights','line_number':506,'multiline':False]
['text':' Reverse window partition','line_number':508,'multiline':False]
['text':' first residual connection','line_number':512,'multiline':False]
['text':' stochastic depth decay rule','line_number':533,'multiline':False]
['text':' Upcast the input in `fp32` and cast it back to desired `dtype` to avoid','line_number':623,'multiline':False]
['text':' `trunc_normal_cpu` not implemented in `half` issues','line_number':624,'multiline':False]
['text':' zero init last norm layer.','line_number':659,'multiline':False]
['text':' Initialize weights and apply final processing','line_number':710,'multiline':False]
['text':' Prepare head mask if needed','line_number':764,'multiline':False]
['text':' 1.0 in head_mask indicate we keep the head','line_number':765,'multiline':False]
['text':' attention_probs has shape bsz x n_heads x N x N','line_number':766,'multiline':False]
['text':' input head_mask has shape [num_heads] or [num_hidden_layers x num_heads]','line_number':767,'multiline':False]
['text':' and head_mask is converted to shape [num_hidden_layers x batch x num_heads x seq_length x seq_length]','line_number':768,'multiline':False]
['text':' initialize weights and apply final processing','line_number':807,'multiline':False]
