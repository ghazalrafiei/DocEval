['text':' coding=utf-8','line_number':1,'multiline':False]
['text':' Copyright 2022 The Google Flax Team Authors and The HuggingFace Inc. team.','line_number':2,'multiline':False]
['text':'','line_number':3,'multiline':False]
['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':4,'multiline':False]
['text':' you may not use this file except in compliance with the License.','line_number':5,'multiline':False]
['text':' You may obtain a copy of the License at','line_number':6,'multiline':False]
['text':'','line_number':7,'multiline':False]
['text':'     http://www.apache.org/licenses/LICENSE-2.0','line_number':8,'multiline':False]
['text':'','line_number':9,'multiline':False]
['text':' Unless required by applicable law or agreed to in writing, software','line_number':10,'multiline':False]
['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':11,'multiline':False]
['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':12,'multiline':False]
['text':' See the License for the specific language governing permissions and','line_number':13,'multiline':False]
['text':' limitations under the License.','line_number':14,'multiline':False]
['text':' Copied from transformers.models.roberta.modeling_flax_roberta.create_position_ids_from_input_ids','line_number':53,'multiline':False]
['text':' The series of casts and type-conversions here are carefully balanced to both work with ONNX export and XLA.','line_number':65,'multiline':False]
['text':' Copied from transformers.models.bert.modeling_flax_bert.FlaxBertEmbeddings with Bert->RobertaPreLayerNorm','line_number':139,'multiline':False]
['text':' the dtype of the computation','line_number':144,'multiline':False]
['text':' Embed','line_number':169,'multiline':False]
['text':' Sum all embeddings','line_number':174,'multiline':False]
['text':' Layer Norm','line_number':177,'multiline':False]
['text':' Copied from transformers.models.bert.modeling_flax_bert.FlaxBertSelfAttention with Bert->RobertaPreLayerNorm','line_number':183,'multiline':False]
['text':' the dtype of the computation','line_number':187,'multiline':False]
['text':' Copied from transformers.models.bart.modeling_flax_bart.FlaxBartAttention._concatenate_to_cache','line_number':225,'multiline':False]
['text':' detect if we're initializing by absence of existing cache data.','line_number':232,'multiline':False]
['text':' update key, value caches with our new 1d spatial slices','line_number':240,'multiline':False]
['text':' causal mask for cached decoder self-attention: our single query position should only attend to those key positions that have already been generated and cached, not the remaining zero elements.','line_number':249,'multiline':False]
['text':' if key_value_states are provided this layer is used as a cross-attention layer','line_number':267,'multiline':False]
['text':' for the decoder','line_number':268,'multiline':False]
['text':' get query proj','line_number':272,'multiline':False]
['text':' get key, value proj','line_number':274,'multiline':False]
['text':' cross_attentions','line_number':276,'multiline':False]
['text':' self_attention','line_number':280,'multiline':False]
['text':' handle cache prepare causal attention mask','line_number':288,'multiline':False]
['text':' combine masks if needed','line_number':301,'multiline':False]
['text':' During fast autoregressive decoding, we feed one position at a time,','line_number':310,'multiline':False]
['text':' and cache the keys and values step by step.','line_number':311,'multiline':False]
['text':' Convert the boolean attention mask to an attention bias.','line_number':317,'multiline':False]
['text':' attention mask in the form of attention bias','line_number':319,'multiline':False]
['text':' Mask heads if we want to','line_number':344,'multiline':False]
['text':' the dtype of the computation','line_number':357,'multiline':False]
['text':' Attention mask comes in as attention_mask.shape == (*batch_sizes, kv_length)','line_number':395,'multiline':False]
['text':' FLAX expects: attention_mask.shape == (*batch_sizes, 1, 1, kv_length) such that it is broadcastable','line_number':396,'multiline':False]
['text':' with attn_weights.shape == (*batch_sizes, num_heads, q_length, kv_length)','line_number':397,'multiline':False]
['text':' the dtype of the computation','line_number':420,'multiline':False]
['text':' the dtype of the computation','line_number':440,'multiline':False]
['text':' Copied from transformers.models.bert.modeling_flax_bert.FlaxBertLayer with Bert->RobertaPreLayerNorm','line_number':457,'multiline':False]
['text':' the dtype of the computation','line_number':460,'multiline':False]
['text':' Self Attention','line_number':480,'multiline':False]
['text':' Cross-Attention Block','line_number':491,'multiline':False]
['text':' Copied from transformers.models.bert.modeling_flax_bert.FlaxBertLayerCollection with Bert->RobertaPreLayerNorm','line_number':515,'multiline':False]
['text':' the dtype of the computation','line_number':518,'multiline':False]
['text':' Check if head_mask has a correct number of layers specified if desired','line_number':551,'multiline':False]
['text':' Copied from transformers.models.bert.modeling_flax_bert.FlaxBertEncoder with Bert->RobertaPreLayerNorm','line_number':598,'multiline':False]
['text':' the dtype of the computation','line_number':601,'multiline':False]
['text':' Copied from transformers.models.bert.modeling_flax_bert.FlaxBertPooler with Bert->RobertaPreLayerNorm','line_number':638,'multiline':False]
['text':' the dtype of the computation','line_number':641,'multiline':False]
['text':' Copied from transformers.models.roberta.modeling_flax_roberta.FlaxRobertaLMHead with Roberta->RobertaPreLayerNorm','line_number':656,'multiline':False]
['text':' Copied from transformers.models.roberta.modeling_flax_roberta.FlaxRobertaClassificationHead with Roberta->RobertaPreLayerNorm','line_number':692,'multiline':False]
['text':' take <s> token (equiv. to [CLS])','line_number':716,'multiline':False]
['text':' Copied from transformers.models.roberta.modeling_flax_roberta.FlaxRobertaPreTrainedModel with ROBERTA->ROBERTA_PRELAYERNORM,Roberta->RobertaPreLayerNorm,roberta->roberta_prelayernorm','line_number':725,'multiline':False]
['text':' Copied from transformers.models.bert.modeling_flax_bert.FlaxBertPreTrainedModel.enable_gradient_checkpointing','line_number':750,'multiline':False]
['text':' init input tensors','line_number':759,'multiline':False]
['text':' Copied from transformers.models.bart.modeling_flax_bart.FlaxBartDecoderPreTrainedModel.init_cache','line_number':800,'multiline':False]
['text':' init input variables to retrieve cache','line_number':810,'multiline':False]
['text':' init input tensors if not passed','line_number':844,'multiline':False]
['text':' Handle any PRNG if needed','line_number':857,'multiline':False]
['text':' if past_key_values are passed then cache is already initialized a private flag init_cache has to be passed','line_number':865,'multiline':False]
['text':' down to ensure cache is used. It has to be made sure that cache is marked as mutable so that it can be','line_number':866,'multiline':False]
['text':' changed by FlaxRobertaPreLayerNormAttention module','line_number':867,'multiline':False]
['text':' add updated cache to model output','line_number':891,'multiline':False]
['text':' the dtype of the computation','line_number':920,'multiline':False]
['text':' make sure `token_type_ids` is correctly initialized when not passed','line_number':949,'multiline':False]
['text':' make sure `position_ids` is correctly initialized when not passed','line_number':953,'multiline':False]
['text':' if pooled is None, don't return it','line_number':977,'multiline':False]
['text':' Copied from transformers.models.roberta.modeling_flax_roberta.FlaxRobertaModel with Roberta->RobertaPreLayerNorm','line_number':995,'multiline':False]
['text':' Copied from transformers.models.roberta.modeling_flax_roberta.FlaxRobertaForMaskedLMModule with Roberta->RobertaPreLayerNorm,roberta->roberta_prelayernorm','line_number':1008,'multiline':False]
['text':' Model','line_number':1035,'multiline':False]
['text':' Compute the prediction scores','line_number':1056,'multiline':False]
['text':' Copied from transformers.models.roberta.modeling_flax_roberta.FlaxRobertaForMaskedLM with Roberta->RobertaPreLayerNorm','line_number':1072,'multiline':False]
['text':' Copied from transformers.models.roberta.modeling_flax_roberta.FlaxRobertaForSequenceClassificationModule with Roberta->RobertaPreLayerNorm,roberta->roberta_prelayernorm','line_number':1086,'multiline':False]
['text':' Model','line_number':1113,'multiline':False]
['text':' Copied from transformers.models.roberta.modeling_flax_roberta.FlaxRobertaForSequenceClassification with Roberta->RobertaPreLayerNorm','line_number':1146,'multiline':False]
['text':' Copied from transformers.models.bert.modeling_flax_bert.FlaxBertForMultipleChoiceModule with Bert->RobertaPreLayerNorm, with self.bert->self.roberta_prelayernorm','line_number':1159,'multiline':False]
['text':' Model','line_number':1192,'multiline':False]
['text':' Copied from transformers.models.roberta.modeling_flax_roberta.FlaxRobertaForMultipleChoice with Roberta->RobertaPreLayerNorm','line_number':1228,'multiline':False]
['text':' Copied from transformers.models.bert.modeling_flax_bert.FlaxBertForTokenClassificationModule with Bert->RobertaPreLayerNorm, with self.bert->self.roberta_prelayernorm','line_number':1245,'multiline':False]
['text':' Model','line_number':1278,'multiline':False]
['text':' Copied from transformers.models.roberta.modeling_flax_roberta.FlaxRobertaForTokenClassification with Roberta->RobertaPreLayerNorm','line_number':1312,'multiline':False]
['text':' Copied from transformers.models.bert.modeling_flax_bert.FlaxBertForQuestionAnsweringModule with Bert->RobertaPreLayerNorm, with self.bert->self.roberta_prelayernorm','line_number':1325,'multiline':False]
['text':' Model','line_number':1352,'multiline':False]
['text':' Copied from transformers.models.roberta.modeling_flax_roberta.FlaxRobertaForQuestionAnswering with Roberta->RobertaPreLayerNorm','line_number':1390,'multiline':False]
['text':' Copied from transformers.models.roberta.modeling_flax_roberta.FlaxRobertaForCausalLMModule with Roberta->RobertaPreLayerNorm,roberta->roberta_prelayernorm','line_number':1403,'multiline':False]
['text':' Model','line_number':1433,'multiline':False]
['text':' Compute the prediction scores','line_number':1457,'multiline':False]
['text':' Copied from transformers.models.roberta.modeling_flax_roberta.FlaxRobertaForCausalLM with Roberta->RobertaPreLayerNorm','line_number':1478,'multiline':False]
['text':' initializing the cache','line_number':1483,'multiline':False]
['text':' Note that usually one would have to put 0's in the attention_mask for x > input_ids.shape[-1] and x < cache_length.','line_number':1487,'multiline':False]
['text':' But since the decoder uses a causal mask, those positions are masked anyway.','line_number':1488,'multiline':False]
['text':' Thus, we can create a single static attention_mask here, which is more efficient for compilation','line_number':1489,'multiline':False]
