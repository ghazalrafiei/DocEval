['text':' coding=utf-8','line_number':1,'multiline':False]
['text':' Copyright 2021 The Facebook, Inc. and The HuggingFace Inc. team. All rights reserved.','line_number':2,'multiline':False]
['text':'','line_number':3,'multiline':False]
['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':4,'multiline':False]
['text':' you may not use this file except in compliance with the License.','line_number':5,'multiline':False]
['text':' You may obtain a copy of the License at','line_number':6,'multiline':False]
['text':'','line_number':7,'multiline':False]
['text':'     http://www.apache.org/licenses/LICENSE-2.0','line_number':8,'multiline':False]
['text':'','line_number':9,'multiline':False]
['text':' Unless required by applicable law or agreed to in writing, software','line_number':10,'multiline':False]
['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':11,'multiline':False]
['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':12,'multiline':False]
['text':' See the License for the specific language governing permissions and','line_number':13,'multiline':False]
['text':' limitations under the License.','line_number':14,'multiline':False]
['text':' See all Blenderbot models at https://huggingface.co/models?filter=blenderbot','line_number':58,'multiline':False]
['text':' Copied from transformers.models.bart.modeling_bart.shift_tokens_right','line_number':62,'multiline':False]
['text':' replace possible -100 values in labels by `pad_token_id`','line_number':73,'multiline':False]
['text':' Copied from transformers.models.bart.modeling_bart.BartAttention with Bart->Blenderbot','line_number':96,'multiline':False]
['text':' if key_value_states are provided this layer is used as a cross-attention layer','line_number':145,'multiline':False]
['text':' for the decoder','line_number':146,'multiline':False]
['text':' get query proj','line_number':151,'multiline':False]
['text':' get key, value proj','line_number':153,'multiline':False]
['text':' `past_key_value[0].shape[2] == key_value_states.shape[1]`','line_number':154,'multiline':False]
['text':' is checking that the `sequence_length` of the `past_key_value` is the same as','line_number':155,'multiline':False]
['text':' the provided `key_value_states` to support prefix tuning','line_number':156,'multiline':False]
['text':' reuse k,v, cross_attentions','line_number':162,'multiline':False]
['text':' cross_attentions','line_number':166,'multiline':False]
['text':' reuse k, v, self_attention','line_number':170,'multiline':False]
['text':' self_attention','line_number':176,'multiline':False]
['text':' if cross_attention save Tuple(torch.Tensor, torch.Tensor) of all cross attention key/value_states.','line_number':181,'multiline':False]
['text':' Further calls to cross_attention layer can then reuse all cross-attention','line_number':182,'multiline':False]
['text':' key/value_states (first "if" case)','line_number':183,'multiline':False]
['text':' if uni-directional self-attention (decoder) save Tuple(torch.Tensor, torch.Tensor) of','line_number':184,'multiline':False]
['text':' all previous decoder key/value_states. Further calls to uni-directional self-attention','line_number':185,'multiline':False]
['text':' can concat previous decoder key/value_states to current projected key/value_states (third "elif" case)','line_number':186,'multiline':False]
['text':' if encoder bi-directional self-attention `past_key_value` is always `None`','line_number':187,'multiline':False]
['text':' this operation is a bit awkward, but it's required to','line_number':224,'multiline':False]
['text':' make sure that attn_weights keeps its gradient.','line_number':225,'multiline':False]
['text':' In order to do so, attn_weights have to be reshaped','line_number':226,'multiline':False]
['text':' twice and have to be reused in the following','line_number':227,'multiline':False]
['text':' Use the `embed_dim` from the config (stored in the class) rather than `hidden_state` because `attn_output` can be','line_number':246,'multiline':False]
['text':' partitioned across GPUs when using tensor-parallelism.','line_number':247,'multiline':False]
['text':' Copied from transformers.models.mbart.modeling_mbart.MBartEncoderLayer with MBart->Blenderbot, MBART->BLENDERBOT','line_number':258,'multiline':False]
['text':' Copied from transformers.models.mbart.modeling_mbart.MBartDecoderLayer with MBart->Blenderbot, MBART->BLENDERBOT','line_number':329,'multiline':False]
['text':' Self Attention','line_number':393,'multiline':False]
['text':' decoder uni-directional self-attention cached key/values tuple is at positions 1,2','line_number':394,'multiline':False]
['text':' add present self-attn cache to positions 1,2 of present_key_value tuple','line_number':396,'multiline':False]
['text':' Cross-Attention Block','line_number':407,'multiline':False]
['text':' cross_attn cached key/values tuple is at positions 3,4 of present_key_value tuple','line_number':414,'multiline':False]
['text':' add cross-attn to positions 3,4 of present_key_value tuple','line_number':427,'multiline':False]
['text':' Fully Connected','line_number':430,'multiline':False]
['text':' Initialize weights and apply final processing','line_number':652,'multiline':False]
['text':' retrieve input_ids and inputs_embeds','line_number':707,'multiline':False]
['text':' expand attention_mask','line_number':727,'multiline':False]
['text':' [bsz, seq_len] -> [bsz, 1, tgt_seq_len, src_seq_len]','line_number':729,'multiline':False]
['text':' check if head_mask has a correct number of layers specified if desired','line_number':735,'multiline':False]
['text':' add LayerDrop (see https://arxiv.org/abs/1909.11556 for description)','line_number':745,'multiline':False]
['text':' skip the layer','line_number':749,'multiline':False]
['text':' add final layer norm','line_number':776,'multiline':False]
['text':' Initialize weights and apply final processing','line_number':819,'multiline':False]
['text':' retrieve input_ids and inputs_embeds','line_number':916,'multiline':False]
['text':' past_key_values_length','line_number':927,'multiline':False]
['text':' expand encoder attention mask','line_number':937,'multiline':False]
['text':' [bsz, seq_len] -> [bsz, 1, tgt_seq_len, src_seq_len]','line_number':939,'multiline':False]
['text':' embed positions','line_number':944,'multiline':False]
['text':' decoder layers','line_number':957,'multiline':False]
['text':' check if head_mask/cross_attn_head_mask has a correct number of layers specified if desired','line_number':963,'multiline':False]
['text':' add LayerDrop (see https://arxiv.org/abs/1909.11556 for description)','line_number':972,'multiline':False]
['text':' add final layer norm','line_number':1020,'multiline':False]
['text':' add hidden states from the last decoder layer','line_number':1023,'multiline':False]
['text':' Initialize weights and apply final processing','line_number':1059,'multiline':False]
['text':' If the user passed a tuple for encoder_outputs, we wrap it in a BaseModelOutput when return_dict=True','line_number':1145,'multiline':False]
['text':' decoder outputs consists of (dec_features, past_key_value, dec_hidden, dec_attn)','line_number':1153,'multiline':False]
['text':' Initialize weights and apply final processing','line_number':1198,'multiline':False]
['text':' cut decoder_input_ids if past is used','line_number':1335,'multiline':False]
['text':' Some generation methods already pass only the last input ID','line_number':1339,'multiline':False]
['text':' Default to old behavior: keep only final ID','line_number':1343,'multiline':False]
['text':' encoder_outputs is defined. input_ids not needed','line_number':1349,'multiline':False]
['text':' change this to avoid caching (presumably for debugging)','line_number':1357,'multiline':False]
['text':' cached cross_attention states don't have to be reordered -> they are always the same','line_number':1364,'multiline':False]
['text':' Copied from transformers.models.bart.modeling_bart.BartDecoderWrapper with Bart->Blenderbot','line_number':1372,'multiline':False]
['text':' Copied from transformers.models.bart.modeling_bart.BartForCausalLM with Bart->Blenderbot, facebook/bart-base->facebook/blenderbot-400M-distill','line_number':1387,'multiline':False]
['text':' Initialize weights and apply final processing','line_number':1400,'multiline':False]
['text':' decoder outputs consists of (dec_features, layer_state, dec_hidden, dec_attn)','line_number':1529,'multiline':False]
['text':' if model is used as a decoder in encoder-decoder model, the decoder attention mask is created on the fly','line_number':1569,'multiline':False]
['text':' Some generation methods already pass only the last input ID','line_number':1576,'multiline':False]
['text':' Default to old behavior: keep only final ID','line_number':1580,'multiline':False]
['text':' first step, decoder_cached_states are empty','line_number':1584,'multiline':False]
['text':' encoder_outputs is defined. input_ids not needed','line_number':1586,'multiline':False]
