['text':' coding=utf-8','line_number':1,'multiline':False]
['text':' Copyright 2022 The Fairseq Authors and The HuggingFace Inc. team. All rights reserved.','line_number':2,'multiline':False]
['text':'','line_number':3,'multiline':False]
['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':4,'multiline':False]
['text':' you may not use this file except in compliance with the License.','line_number':5,'multiline':False]
['text':' You may obtain a copy of the License at','line_number':6,'multiline':False]
['text':'','line_number':7,'multiline':False]
['text':'     http://www.apache.org/licenses/LICENSE-2.0','line_number':8,'multiline':False]
['text':'','line_number':9,'multiline':False]
['text':' Unless required by applicable law or agreed to in writing, software','line_number':10,'multiline':False]
['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':11,'multiline':False]
['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':12,'multiline':False]
['text':' See the License for the specific language governing permissions and','line_number':13,'multiline':False]
['text':' limitations under the License.','line_number':14,'multiline':False]
['text':' Base model docstring','line_number':53,'multiline':False]
['text':' See all MVP models at https://huggingface.co/models?filter=mvp','line_number':72,'multiline':False]
['text':' Copied from transformers.models.bart.modeling_bart.shift_tokens_right','line_number':76,'multiline':False]
['text':' replace possible -100 values in labels by `pad_token_id`','line_number':87,'multiline':False]
['text':' Copied from transformers.models.bart.modeling_bart.BartLearnedPositionalEmbedding with Bart->MVP','line_number':93,'multiline':False]
['text':' MVP is set up so that if padding_idx is specified then offset the embedding ids by 2','line_number':100,'multiline':False]
['text':' and adjust num_embeddings appropriately. Other models don't have this hack','line_number':101,'multiline':False]
['text':' if key_value_states are provided this layer is used as a cross-attention layer','line_number':161,'multiline':False]
['text':' for the decoder','line_number':162,'multiline':False]
['text':' get query proj','line_number':167,'multiline':False]
['text':' get key, value proj','line_number':169,'multiline':False]
['text':' reuse k,v, cross_attentions','line_number':171,'multiline':False]
['text':' cross_attentions','line_number':175,'multiline':False]
['text':' reuse k, v, self_attention','line_number':179,'multiline':False]
['text':' self_attention','line_number':185,'multiline':False]
['text':' if cross_attention save Tuple(torch.Tensor, torch.Tensor) of all cross attention key/value_states.','line_number':190,'multiline':False]
['text':' Further calls to cross_attention layer can then reuse all cross-attention','line_number':191,'multiline':False]
['text':' key/value_states (first "if" case)','line_number':192,'multiline':False]
['text':' if uni-directional self-attention (decoder) save Tuple(torch.Tensor, torch.Tensor) of','line_number':193,'multiline':False]
['text':' all previous decoder key/value_states. Further calls to uni-directional self-attention','line_number':194,'multiline':False]
['text':' can concat previous decoder key/value_states to current projected key/value_states (third "elif" case)','line_number':195,'multiline':False]
['text':' if encoder bi-directional self-attention `past_key_value` is always `None`','line_number':196,'multiline':False]
['text':' this operation is a bit awkward, but it's required to','line_number':240,'multiline':False]
['text':' make sure that attn_weights keeps its gradient.','line_number':241,'multiline':False]
['text':' In order to do so, attn_weights have to be reshaped','line_number':242,'multiline':False]
['text':' twice and have to be reused in the following','line_number':243,'multiline':False]
['text':' Use the `embed_dim` from the config (stored in the class) rather than `hidden_state` because `attn_output` can be','line_number':262,'multiline':False]
['text':' partitioned aross GPUs when using tensor-parallelism.','line_number':263,'multiline':False]
['text':' Self Attention','line_number':408,'multiline':False]
['text':' decoder uni-directional self-attention cached key/values tuple is at positions 1,2','line_number':409,'multiline':False]
['text':' add present self-attn cache to positions 1,2 of present_key_value tuple','line_number':411,'multiline':False]
['text':' Cross-Attention Block','line_number':424,'multiline':False]
['text':' cross_attn cached key/values tuple is at positions 3,4 of present_key_value tuple','line_number':430,'multiline':False]
['text':' add cross-attn to positions 3,4 of present_key_value tuple','line_number':445,'multiline':False]
['text':' Fully Connected','line_number':448,'multiline':False]
['text':' Copied from transformers.models.bart.modeling_bart.BartClassificationHead with Bart->MVP','line_number':468,'multiline':False]
['text':' Initialize weights and apply final processing','line_number':798,'multiline':False]
['text':' retrieve input_ids and inputs_embeds','line_number':859,'multiline':False]
['text':' layer-wise prompt','line_number':881,'multiline':False]
['text':' expand attention_mask','line_number':886,'multiline':False]
['text':' [bsz, seq_len] -> [bsz, 1, tgt_seq_len, src_seq_len]','line_number':888,'multiline':False]
['text':' check if head_mask has a correct number of layers specified if desired','line_number':894,'multiline':False]
['text':' add LayerDrop (see https://arxiv.org/abs/1909.11556 for description)','line_number':905,'multiline':False]
['text':' skip the layer','line_number':909,'multiline':False]
['text':' Initialize weights and apply final processing','line_number':995,'multiline':False]
['text':' retrieve input_ids and inputs_embeds','line_number':1091,'multiline':False]
['text':' past_key_values_length','line_number':1104,'multiline':False]
['text':' expand encoder attention mask','line_number':1114,'multiline':False]
['text':' [bsz, seq_len] -> [bsz, 1, tgt_seq_len, src_seq_len]','line_number':1116,'multiline':False]
['text':' embed positions','line_number':1121,'multiline':False]
['text':' layer-wise prompt','line_number':1129,'multiline':False]
['text':' decoder layers','line_number':1142,'multiline':False]
['text':' check if head_mask/cross_attn_head_mask has a correct number of layers specified if desired','line_number':1148,'multiline':False]
['text':' add LayerDrop (see https://arxiv.org/abs/1909.11556 for description)','line_number':1158,'multiline':False]
['text':' add hidden states from the last decoder layer','line_number':1210,'multiline':False]
['text':' Initialize weights and apply final processing','line_number':1248,'multiline':False]
['text':' different to other models, Mvp automatically creates decoder_input_ids from','line_number':1298,'multiline':False]
['text':' input_ids if no decoder_input_ids are provided','line_number':1299,'multiline':False]
['text':' If the user passed a tuple for encoder_outputs, we wrap it in a BaseModelOutput when return_dict=True','line_number':1329,'multiline':False]
['text':' decoder outputs consists of (dec_features, past_key_value, dec_hidden, dec_attn)','line_number':1337,'multiline':False]
['text':' Initialize weights and apply final processing','line_number':1380,'multiline':False]
['text':' cut decoder_input_ids if past is used','line_number':1506,'multiline':False]
['text':' Some generation methods already pass only the last input ID','line_number':1510,'multiline':False]
['text':' Default to old behavior: keep only final ID','line_number':1514,'multiline':False]
['text':' encoder_outputs is defined. input_ids not needed','line_number':1520,'multiline':False]
['text':' change this to avoid caching (presumably for debugging)','line_number':1528,'multiline':False]
['text':' cached cross_attention states don't have to be reordered -> they are always the same','line_number':1538,'multiline':False]
['text':' Initialize weights and apply final processing','line_number':1566,'multiline':False]
['text':' last hidden state','line_number':1623,'multiline':False]
['text':' Initialize weights and apply final processing','line_number':1692,'multiline':False]
['text':' If we are on multi-GPU, split add a dimension','line_number':1760,'multiline':False]
['text':' sometimes the start/end positions are outside our model inputs, we ignore these terms','line_number':1765,'multiline':False]
['text':' Copied from transformers.models.bart.modeling_bart.BartDecoderWrapper with Bart->Mvp','line_number':1796,'multiline':False]
['text':' Initialize weights and apply final processing','line_number':1823,'multiline':False]
['text':' decoder outputs consists of (dec_features, layer_state, dec_hidden, dec_attn)','line_number':1955,'multiline':False]
['text':' if model is used as a decoder in encoder-decoder model, the decoder attention mask is created on the fly','line_number':1994,'multiline':False]
['text':' Some generation methods already pass only the last input ID','line_number':2001,'multiline':False]
['text':' Default to old behavior: keep only final ID','line_number':2005,'multiline':False]
['text':' first step, decoder_cached_states are empty','line_number':2009,'multiline':False]
['text':' encoder_outputs is defined. input_ids not needed','line_number':2011,'multiline':False]
