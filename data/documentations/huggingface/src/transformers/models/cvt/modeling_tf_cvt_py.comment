['text':' coding=utf-8','line_number':1,'multiline':False]
['text':' Copyright 2022 Microsoft Research and The HuggingFace Inc. team. All rights reserved.','line_number':2,'multiline':False]
['text':'','line_number':3,'multiline':False]
['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':4,'multiline':False]
['text':' you may not use this file except in compliance with the License.','line_number':5,'multiline':False]
['text':' You may obtain a copy of the License at','line_number':6,'multiline':False]
['text':'','line_number':7,'multiline':False]
['text':'     http://www.apache.org/licenses/LICENSE-2.0','line_number':8,'multiline':False]
['text':'','line_number':9,'multiline':False]
['text':' Unless required by applicable law or agreed to in writing, software','line_number':10,'multiline':False]
['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':11,'multiline':False]
['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':12,'multiline':False]
['text':' See the License for the specific language governing permissions and','line_number':13,'multiline':False]
['text':' limitations under the License.','line_number':14,'multiline':False]
['text':' General docstring','line_number':48,'multiline':False]
['text':' See all Cvt models at https://huggingface.co/models?filter=cvt','line_number':58,'multiline':False]
['text':' Using the same default epsilon as PyTorch','line_number':168,'multiline':False]
['text':' "batch_size, height, width, num_channels -> batch_size, (height*width), num_channels"','line_number':179,'multiline':False]
['text':' "batch_size, (height*width), num_channels -> batch_size, height, width, num_channels"','line_number':185,'multiline':False]
['text':' Using the same default epsilon as PyTorch, TF uses (1 - pytorch momentum)','line_number':217,'multiline':False]
['text':' "batch_size, height, width, num_channels -> batch_size, (height*width), num_channels"','line_number':242,'multiline':False]
['text':' "batch_size, (height*width), num_channels -> batch_size, height, width, num_channels"','line_number':373,'multiline':False]
['text':' "batch_size, num_heads, hidden_size, head_dim -> batch_size, hidden_size, (num_heads*head_dim)"','line_number':397,'multiline':False]
['text':' Using `layers.Activation` instead of `tf.identity` to better control `training` behaviour.','line_number':610,'multiline':False]
['text':' Using the same default epsilon as PyTorch','line_number':616,'multiline':False]
['text':' in Cvt, layernorm is applied before self-attention','line_number':622,'multiline':False]
['text':' first residual connection','line_number':626,'multiline':False]
['text':' in Cvt, layernorm is also applied after self-attention','line_number':629,'multiline':False]
['text':' second residual connection is done here','line_number':633,'multiline':False]
['text':' "batch_size, height, width, num_channels -> batch_size, (height*width), num_channels"','line_number':725,'multiline':False]
['text':' "batch_size, (height*width), num_channels -> batch_size, height, width, num_channels"','line_number':741,'multiline':False]
['text':' When running on CPU, `tf.keras.layers.Conv2D` doesn't support (batch_size, num_channels, height, width)','line_number':785,'multiline':False]
['text':' as input format. So change the input format to (batch_size, height, width, num_channels).','line_number':786,'multiline':False]
['text':' Change back to (batch_size, num_channels, height, width) format to have uniformity in the modules','line_number':795,'multiline':False]
['text':' Using same default epsilon as in the original implementation.','line_number':1008,'multiline':False]
['text':' Classifier head','line_number':1011,'multiline':False]
['text':' rearrange "batch_size, num_channels, height, width -> batch_size, (height*width), num_channels"','line_number':1074,'multiline':False]
