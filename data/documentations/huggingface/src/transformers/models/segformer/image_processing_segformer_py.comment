['text':' coding=utf-8','line_number':1,'multiline':False]
['text':' Copyright 2022 The HuggingFace Inc. team. All rights reserved.','line_number':2,'multiline':False]
['text':'','line_number':3,'multiline':False]
['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':4,'multiline':False]
['text':' you may not use this file except in compliance with the License.','line_number':5,'multiline':False]
['text':' You may obtain a copy of the License at','line_number':6,'multiline':False]
['text':'','line_number':7,'multiline':False]
['text':'     http://www.apache.org/licenses/LICENSE-2.0','line_number':8,'multiline':False]
['text':'','line_number':9,'multiline':False]
['text':' Unless required by applicable law or agreed to in writing, software','line_number':10,'multiline':False]
['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':11,'multiline':False]
['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':12,'multiline':False]
['text':' See the License for the specific language governing permissions and','line_number':13,'multiline':False]
['text':' limitations under the License.','line_number':14,'multiline':False]
['text':' Copied from transformers.models.vit.image_processing_vit.ViTImageProcessor.resize','line_number':133,'multiline':False]
['text':' Copied from transformers.models.beit.image_processing_beit.BeitImageProcessor.reduce_label','line_number':182,'multiline':False]
['text':' Avoid using underflow conversion','line_number':185,'multiline':False]
['text':' All transformations expect numpy arrays.','line_number':234,'multiline':False]
['text':' Add channel dimension if missing - needed for certain transformations','line_number':270,'multiline':False]
['text':' reduce zero label if needed','line_number':279,'multiline':False]
['text':' Remove extra channel dimension if added for processing','line_number':290,'multiline':False]
['text':' Copied from transformers.models.beit.image_processing_beit.BeitImageProcessor.post_process_semantic_segmentation with Beit->Segformer','line_number':440,'multiline':False]
['text':' TODO: add support for other frameworks','line_number':457,'multiline':False]
['text':' Resize logits and compute semantic segmentation maps','line_number':460,'multiline':False]
