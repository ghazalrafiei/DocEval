['text':' coding=utf-8','line_number':1,'multiline':False]
['text':' Copyright 2022 Meta Platforms, Inc. and The HuggingFace Inc. team. All rights reserved.','line_number':2,'multiline':False]
['text':'','line_number':3,'multiline':False]
['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':4,'multiline':False]
['text':' you may not use this file except in compliance with the License.','line_number':5,'multiline':False]
['text':' You may obtain a copy of the License at','line_number':6,'multiline':False]
['text':'','line_number':7,'multiline':False]
['text':'     http://www.apache.org/licenses/LICENSE-2.0','line_number':8,'multiline':False]
['text':'','line_number':9,'multiline':False]
['text':' Unless required by applicable law or agreed to in writing, software','line_number':10,'multiline':False]
['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':11,'multiline':False]
['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':12,'multiline':False]
['text':' See the License for the specific language governing permissions and','line_number':13,'multiline':False]
['text':' limitations under the License.','line_number':14,'multiline':False]
['text':' Copied from transformers.models.swin.modeling_swin.window_partition','line_number':101,'multiline':False]
['text':' Copied from transformers.models.swin.modeling_swin.window_reverse','line_number':114,'multiline':False]
['text':' Copied from transformers.models.swin.modeling_swin.drop_path','line_number':125,'multiline':False]
['text':' work with diff dim tensors, not just 2D ConvNets','line_number':139,'multiline':False]
['text':' binarize','line_number':141,'multiline':False]
['text':' Copied from transformers.models.swin.modeling_swin.SwinPatchEmbeddings','line_number':178,'multiline':False]
['text':' pad the input to be divisible by self.patch_size, if needed','line_number':216,'multiline':False]
['text':' Copied from transformers.models.swin.modeling_swin.SwinPatchMerging','line_number':226,'multiline':False]
['text':' `dim` is height * width','line_number':257,'multiline':False]
['text':' pad input to be disible by width and height, if needed','line_number':261,'multiline':False]
['text':' [batch_size, height/2, width/2, num_channels]','line_number':263,'multiline':False]
['text':' [batch_size, height/2, width/2, num_channels]','line_number':265,'multiline':False]
['text':' [batch_size, height/2, width/2, num_channels]','line_number':267,'multiline':False]
['text':' [batch_size, height/2, width/2, num_channels]','line_number':269,'multiline':False]
['text':' batch_size height/2 width/2 4*num_channels','line_number':271,'multiline':False]
['text':' batch_size height/2*width/2 4*C','line_number':273,'multiline':False]
['text':' Copied from transformers.models.swin.modeling_swin.SwinDropPath with Swin->MaskFormerSwin','line_number':281,'multiline':False]
['text':' Copied from transformers.models.swin.modeling_swin.SwinSelfAttention with Swin->MaskFormerSwin','line_number':296,'multiline':False]
['text':' get pair-wise relative position index for each token inside the window','line_number':316,'multiline':False]
['text':' Take the dot product between "query" and "key" to get the raw attention scores.','line_number':354,'multiline':False]
['text':' Apply the attention mask is (precomputed for all layers in MaskFormerSwinModel forward() function)','line_number':368,'multiline':False]
['text':' Normalize the attention scores to probabilities.','line_number':376,'multiline':False]
['text':' This is actually dropping out entire tokens to attend to, which might','line_number':379,'multiline':False]
['text':' seem a bit unusual, but is taken from the original Transformer paper.','line_number':380,'multiline':False]
['text':' Mask heads if we want to','line_number':383,'multiline':False]
['text':' Copied from transformers.models.swin.modeling_swin.SwinSelfOutput with Swin->MaskFormerSwin','line_number':397,'multiline':False]
['text':' Copied from transformers.models.swin.modeling_swin.SwinAttention with Swin->MaskFormerSwin','line_number':411,'multiline':False]
['text':' Prune linear layers','line_number':426,'multiline':False]
['text':' Update hyper params and store pruned heads','line_number':432,'multiline':False]
['text':' add attentions if we output them','line_number':446,'multiline':False]
['text':' Copied from transformers.models.swin.modeling_swin.SwinIntermediate with Swin->MaskFormerSwin','line_number':450,'multiline':False]
['text':' Copied from transformers.models.swin.modeling_swin.SwinOutput with Swin->MaskFormerSwin','line_number':466,'multiline':False]
['text':' calculate attention mask for SW-MSA','line_number':496,'multiline':False]
['text':' pad hidden_states to multiples of window size','line_number':538,'multiline':False]
['text':' cyclic shift','line_number':542,'multiline':False]
['text':' partition windows','line_number':548,'multiline':False]
['text':' add self attentions if we output attention weights','line_number':561,'multiline':False]
['text':' B height' width' C','line_number':566,'multiline':False]
['text':' reverse cyclic shift','line_number':568,'multiline':False]
['text':' Copied from transformers.models.swin.modeling_swin.SwinStage.__init__ with Swin->MaskFormerSwin','line_number':592,'multiline':False]
['text':' patch merging layer','line_number':610,'multiline':False]
['text':' Copied from transformers.models.swin.modeling_swin.SwinEncoder.__init__ with Swin->MaskFormerSwin','line_number':648,'multiline':False]
['text':' Copied from transformers.models.swin.modeling_swin.SwinPreTrainedModel with Swin->MaskFormerSwin, swin->model','line_number':727,'multiline':False]
['text':' Slightly different from the TF version which uses truncated_normal for initialization','line_number':742,'multiline':False]
['text':' cf https://github.com/pytorch/pytorch/pull/5617','line_number':743,'multiline':False]
['text':' Prepare head mask if needed','line_number':793,'multiline':False]
['text':' 1.0 in head_mask indicate we keep the head','line_number':794,'multiline':False]
['text':' attention_probs has shape bsz x n_heads x N x N','line_number':795,'multiline':False]
['text':' input head_mask has shape [num_heads] or [num_hidden_layers x num_heads]','line_number':796,'multiline':False]
['text':' and head_mask is converted to shape [num_hidden_layers x batch x num_heads x seq_length x seq_length]','line_number':797,'multiline':False]
['text':' Initialize weights and apply final processing','line_number':857,'multiline':False]
['text':' we skip the stem','line_number':877,'multiline':False]
['text':' we need to reshape the hidden states to their original spatial dimensions','line_number':880,'multiline':False]
['text':' spatial dimensions contains all the heights and widths of each stage, including after the embeddings','line_number':881,'multiline':False]
['text':' the last element corespond to the layer's last block output but before patch merging','line_number':888,'multiline':False]
['text':' the pixel decoder (FPN) expects 3D tensors (features)','line_number':891,'multiline':False]
['text':' reshape "b (h w) d -> b d h w"','line_number':893,'multiline':False]
