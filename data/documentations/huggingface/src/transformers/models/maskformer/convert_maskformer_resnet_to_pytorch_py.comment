['text':' coding=utf-8','line_number':1,'multiline':False]
['text':' Copyright 2022 The HuggingFace Inc. team.','line_number':2,'multiline':False]
['text':'','line_number':3,'multiline':False]
['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':4,'multiline':False]
['text':' you may not use this file except in compliance with the License.','line_number':5,'multiline':False]
['text':' You may obtain a copy of the License at','line_number':6,'multiline':False]
['text':'','line_number':7,'multiline':False]
['text':'     http://www.apache.org/licenses/LICENSE-2.0','line_number':8,'multiline':False]
['text':'','line_number':9,'multiline':False]
['text':' Unless required by applicable law or agreed to in writing, software','line_number':10,'multiline':False]
['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':11,'multiline':False]
['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':12,'multiline':False]
['text':' See the License for the specific language governing permissions and','line_number':13,'multiline':False]
['text':' limitations under the License.','line_number':14,'multiline':False]
['text':' TODO add support for ResNet-C backbone, which uses a "deeplab" stem','line_number':39,'multiline':False]
['text':' TODO','line_number':62,'multiline':False]
['text':' stem','line_number':82,'multiline':False]
['text':' fmt: off','line_number':83,'multiline':False]
['text':' fmt: on','line_number':89,'multiline':False]
['text':' stages','line_number':90,'multiline':False]
['text':' shortcut','line_number':93,'multiline':False]
['text':' 3 convs','line_number':125,'multiline':False]
['text':' FPN','line_number':158,'multiline':False]
['text':' fmt: off','line_number':159,'multiline':False]
['text':' fmt: on','line_number':172,'multiline':False]
['text':' Transformer decoder','line_number':174,'multiline':False]
['text':' fmt: off','line_number':175,'multiline':False]
['text':' self-attention out projection','line_number':177,'multiline':False]
['text':' cross-attention out projection','line_number':180,'multiline':False]
['text':' MLP 1','line_number':183,'multiline':False]
['text':' MLP 2','line_number':186,'multiline':False]
['text':' layernorm 1 (self-attention layernorm)','line_number':189,'multiline':False]
['text':' layernorm 2 (cross-attention layernorm)','line_number':192,'multiline':False]
['text':' layernorm 3 (final layernorm)','line_number':195,'multiline':False]
['text':' fmt: on','line_number':201,'multiline':False]
['text':' heads on top','line_number':203,'multiline':False]
['text':' fmt: off','line_number':204,'multiline':False]
['text':' fmt: on','line_number':216,'multiline':False]
['text':' we split up the matrix of each encoder layer into queries, keys and values','line_number':226,'multiline':False]
['text':' fmt: off','line_number':228,'multiline':False]
['text':' read in weights + bias of self-attention input projection layer (in the original implementation, this is a single matrix + bias)','line_number':231,'multiline':False]
['text':' next, add query, keys and values (in that order) to the state dict','line_number':234,'multiline':False]
['text':' read in weights + bias of cross-attention input projection layer (in the original implementation, this is a single matrix + bias)','line_number':241,'multiline':False]
['text':' next, add query, keys and values (in that order) to the state dict','line_number':244,'multiline':False]
['text':' fmt: on','line_number':251,'multiline':False]
['text':' We will verify our results on an image of cute cats','line_number':254,'multiline':False]
['text':' load original state_dict','line_number':270,'multiline':False]
['text':' rename keys','line_number':275,'multiline':False]
['text':' update to torch tensors','line_number':281,'multiline':False]
['text':' load ðŸ¤— model','line_number':285,'multiline':False]
['text':' verify results','line_number':291,'multiline':False]
['text':' Required parameters','line_number':356,'multiline':False]
