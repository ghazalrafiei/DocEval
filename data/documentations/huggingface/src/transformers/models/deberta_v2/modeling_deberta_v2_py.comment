['text':' coding=utf-8','line_number':1,'multiline':False]
['text':' Copyright 2020 Microsoft and the Hugging Face Inc. team.','line_number':2,'multiline':False]
['text':'','line_number':3,'multiline':False]
['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':4,'multiline':False]
['text':' you may not use this file except in compliance with the License.','line_number':5,'multiline':False]
['text':' You may obtain a copy of the License at','line_number':6,'multiline':False]
['text':'','line_number':7,'multiline':False]
['text':'     http://www.apache.org/licenses/LICENSE-2.0','line_number':8,'multiline':False]
['text':'','line_number':9,'multiline':False]
['text':' Unless required by applicable law or agreed to in writing, software','line_number':10,'multiline':False]
['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':11,'multiline':False]
['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':12,'multiline':False]
['text':' See the License for the specific language governing permissions and','line_number':13,'multiline':False]
['text':' limitations under the License.','line_number':14,'multiline':False]
['text':' Copied from transformers.models.deberta.modeling_deberta.ContextPooler','line_number':55,'multiline':False]
['text':' We "pool" the model by simply taking the hidden state corresponding','line_number':64,'multiline':False]
['text':' to the first token.','line_number':65,'multiline':False]
['text':' Copied from transformers.models.deberta.modeling_deberta.XSoftmax with deberta->deberta_v2','line_number':78,'multiline':False]
['text':' Copied from transformers.models.deberta.modeling_deberta.DropoutContext','line_number':142,'multiline':False]
['text':' Copied from transformers.models.deberta.modeling_deberta.get_mask','line_number':151,'multiline':False]
['text':' Copied from transformers.models.deberta.modeling_deberta.XDropout','line_number':171,'multiline':False]
['text':' StableDropout only calls this function when training.','line_number':200,'multiline':False]
['text':' TODO: We should check if the opset_version being used to export','line_number':202,'multiline':False]
['text':' is > 12 here, but there's no good way to do that. As-is, if the','line_number':203,'multiline':False]
['text':' opset_version < 12, export will fail with a CheckerError.','line_number':204,'multiline':False]
['text':' Once https://github.com/pytorch/pytorch/issues/78391 is fixed, do something like:','line_number':205,'multiline':False]
['text':' if opset_version < 12:','line_number':206,'multiline':False]
['text':'   return torch.onnx.symbolic_opset9.dropout(g, input, dropout_p, train)','line_number':207,'multiline':False]
['text':' Copied from transformers.models.deberta.modeling_deberta.StableDropout','line_number':211,'multiline':False]
['text':' Copied from transformers.models.deberta.modeling_deberta.DebertaSelfOutput with DebertaLayerNorm->LayerNorm','line_number':261,'multiline':False]
['text':' Copied from transformers.models.deberta.modeling_deberta.DebertaAttention with Deberta->DebertaV2','line_number':276,'multiline':False]
['text':' Copied from transformers.models.bert.modeling_bert.BertIntermediate with Bert->DebertaV2','line_number':313,'multiline':False]
['text':' Copied from transformers.models.deberta.modeling_deberta.DebertaOutput with DebertaLayerNorm->LayerNorm','line_number':329,'multiline':False]
['text':' Copied from transformers.models.deberta.modeling_deberta.DebertaLayer with Deberta->DebertaV2','line_number':345,'multiline':False]
['text':' Copied from transformers.models.deberta.modeling_deberta.c2p_dynamic_expand','line_number':595,'multiline':False]
['text':' Copied from transformers.models.deberta.modeling_deberta.p2c_dynamic_expand','line_number':601,'multiline':False]
['text':' Copied from transformers.models.deberta.modeling_deberta.pos_dynamic_expand','line_number':607,'multiline':False]
['text':' Take the dot product between "query" and "key" to get the raw attention scores.','line_number':711,'multiline':False]
['text':' bsz x height x length x dimension','line_number':732,'multiline':False]
['text':' bsz x height x query x key','line_number':764,'multiline':False]
['text':' .split(self.all_head_size, dim=-1)','line_number':783,'multiline':False]
['text':' .split(self.all_head_size, dim=-1)','line_number':787,'multiline':False]
['text':' content->position','line_number':790,'multiline':False]
['text':' position->content','line_number':802,'multiline':False]
['text':' Copied from transformers.models.deberta.modeling_deberta.DebertaEmbeddings with DebertaLayerNorm->LayerNorm','line_number':829,'multiline':False]
['text':' position_ids (1, len position emb) is contiguous in memory and exported when serialized','line_number':854,'multiline':False]
['text':' Copied from transformers.models.deberta.modeling_deberta.DebertaPreTrainedModel with Deberta->DebertaV2','line_number':906,'multiline':False]
['text':' Slightly different from the TF version which uses truncated_normal for initialization','line_number':921,'multiline':False]
['text':' cf https://github.com/pytorch/pytorch/pull/5617','line_number':922,'multiline':False]
['text':' Copied from transformers.models.deberta.modeling_deberta.DebertaModel with Deberta->DebertaV2','line_number':997,'multiline':False]
['text':' Initialize weights and apply final processing','line_number':1006,'multiline':False]
['text':' Initialize weights and apply final processing','line_number':1119,'multiline':False]
['text':' Copied from transformers.models.deberta.modeling_deberta.DebertaForMaskedLM.forward with Deberta->DebertaV2','line_number':1135,'multiline':False]
['text':' -100 index = padding token','line_number':1173,'multiline':False]
['text':' Copied from transformers.models.deberta.modeling_deberta.DebertaPredictionHeadTransform with Deberta->DebertaV2','line_number':1188,'multiline':False]
['text':' Copied from transformers.models.deberta.modeling_deberta.DebertaLMPredictionHead with Deberta->DebertaV2','line_number':1208,'multiline':False]
['text':' The output weights are the same as the input embeddings, but there is','line_number':1215,'multiline':False]
['text':' an output-only bias for each token.','line_number':1216,'multiline':False]
['text':' Need a link between the two variables so that the bias is correctly resized with `resize_token_embeddings`','line_number':1221,'multiline':False]
['text':' copied from transformers.models.bert.BertOnlyMLMHead with bert -> deberta','line_number':1230,'multiline':False]
['text':' Initialize weights and apply final processing','line_number':1264,'multiline':False]
['text':' Copied from transformers.models.deberta.modeling_deberta.DebertaForSequenceClassification.forward with Deberta->DebertaV2','line_number':1279,'multiline':False]
['text':' regression task','line_number':1320,'multiline':False]
['text':' Copied from transformers.models.deberta.modeling_deberta.DebertaForTokenClassification with Deberta->DebertaV2','line_number':1367,'multiline':False]
['text':' Initialize weights and apply final processing','line_number':1377,'multiline':False]
['text':' Initialize weights and apply final processing','line_number':1449,'multiline':False]
['text':' Copied from transformers.models.deberta.modeling_deberta.DebertaForQuestionAnswering.forward with Deberta->DebertaV2','line_number':1460,'multiline':False]
['text':' If we are on multi-GPU, split add a dimension','line_number':1506,'multiline':False]
['text':' sometimes the start/end positions are outside our model inputs, we ignore these terms','line_number':1511,'multiline':False]
