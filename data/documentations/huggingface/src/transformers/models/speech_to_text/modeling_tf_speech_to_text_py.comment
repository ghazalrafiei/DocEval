['text':' coding=utf-8','line_number':1,'multiline':False]
['text':' Copyright 2021 The Fairseq Authors and The HuggingFace Inc. team. All rights reserved.','line_number':2,'multiline':False]
['text':'','line_number':3,'multiline':False]
['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':4,'multiline':False]
['text':' you may not use this file except in compliance with the License.','line_number':5,'multiline':False]
['text':' You may obtain a copy of the License at','line_number':6,'multiline':False]
['text':'','line_number':7,'multiline':False]
['text':'     http://www.apache.org/licenses/LICENSE-2.0','line_number':8,'multiline':False]
['text':'','line_number':9,'multiline':False]
['text':' Unless required by applicable law or agreed to in writing, software','line_number':10,'multiline':False]
['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':11,'multiline':False]
['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':12,'multiline':False]
['text':' See the License for the specific language governing permissions and','line_number':13,'multiline':False]
['text':' limitations under the License.','line_number':14,'multiline':False]
['text':' See all Speech2Text models at https://huggingface.co/models?filter=speech_to_text','line_number':60,'multiline':False]
['text':' Copied from transformers.models.bart.modeling_tf_bart.shift_tokens_right','line_number':67,'multiline':False]
['text':' replace possible -100 values in labels by `pad_token_id`','line_number':75,'multiline':False]
['text':' "Verify that `labels` has only positive values and -100"','line_number':82,'multiline':False]
['text':' Make sure the assertion op is called by wrapping the result in an identity no-op','line_number':85,'multiline':False]
['text':' Copied from transformers.models.bart.modeling_tf_bart._make_causal_mask','line_number':92,'multiline':False]
['text':' Copied from transformers.models.bart.modeling_tf_bart._expand_mask','line_number':110,'multiline':False]
['text':' TF Conv1D assumes Batch x Time x Channels, same as the input','line_number':150,'multiline':False]
['text':' equivalent to `padding=k // 2` on PT's `nn.Conv1d`','line_number':153,'multiline':False]
['text':' GLU over the Channel dimension','line_number':166,'multiline':False]
['text':' zero pad','line_number':201,'multiline':False]
['text':' Create the position ids from the input token ids. Any padded tokens remain padded.','line_number':209,'multiline':False]
['text':' Matt: The PyTorch code does a lot of work to cache the embeddings, setting the cached values as a','line_number':212,'multiline':False]
['text':' model attribute in the forward pass. This is extremely forbidden in TF, which wants forward calls to be','line_number':213,'multiline':False]
['text':' idempotent. TF doesn't need that caching anyway, since it can just store constants during compilation,','line_number':214,'multiline':False]
['text':' so we just remove all of that code.','line_number':215,'multiline':False]
['text':' Copied from transformers.models.bart.modeling_tf_bart.TFBartAttention with Bart->Speech2Text','line_number':238,'multiline':False]
['text':' if key_value_states are provided this layer is used as a cross-attention layer','line_number':284,'multiline':False]
['text':' for the decoder','line_number':285,'multiline':False]
['text':' get query proj','line_number':289,'multiline':False]
['text':' get key, value proj','line_number':291,'multiline':False]
['text':' reuse k,v, cross_attentions','line_number':293,'multiline':False]
['text':' cross_attentions','line_number':297,'multiline':False]
['text':' reuse k, v, self_attention','line_number':301,'multiline':False]
['text':' self_attention','line_number':307,'multiline':False]
['text':' if cross_attention save Tuple(tf.Tensor, tf.Tensor) of all cross attention key/value_states.','line_number':312,'multiline':False]
['text':' Further calls to cross_attention layer can then reuse all cross-attention','line_number':313,'multiline':False]
['text':' key/value_states (first "if" case)','line_number':314,'multiline':False]
['text':' if uni-directional self-attention (decoder) save Tuple(tf.Tensor, tf.Tensor) of','line_number':315,'multiline':False]
['text':' all previous decoder key/value_states. Further calls to uni-directional self-attention','line_number':316,'multiline':False]
['text':' can concat previous decoder key/value_states to current projected key/value_states (third "elif" case)','line_number':317,'multiline':False]
['text':' if encoder bi-directional self-attention `past_key_value` is always `None`','line_number':318,'multiline':False]
['text':' Self Attention','line_number':544,'multiline':False]
['text':' decoder uni-directional self-attention cached key/values tuple is at positions 1,2','line_number':545,'multiline':False]
['text':' add present self-attn cache to positions 1,2 of present_key_value tuple','line_number':547,'multiline':False]
['text':' Cross-Attention Block','line_number':558,'multiline':False]
['text':' cross_attn cached key/values tuple is at positions 3,4 of present_key_value tuple','line_number':565,'multiline':False]
['text':' add cross-attn to positions 3,4 of present_key_value tuple','line_number':578,'multiline':False]
['text':' Fully Connected','line_number':581,'multiline':False]
['text':' generate creates 3D attention mask, because of the shape of input_features','line_number':823,'multiline':False]
['text':' convert it to 2D if thats the case','line_number':824,'multiline':False]
['text':' subsample attention mask if necessary','line_number':888,'multiline':False]
['text':' check attention mask and invert','line_number':900,'multiline':False]
['text':' [bsz, seq_len] -> [bsz, 1, tgt_seq_len, src_seq_len]','line_number':902,'multiline':False]
['text':' check if head_mask has a correct number of layers specified if desired','line_number':908,'multiline':False]
['text':' add LayerDrop (see https://arxiv.org/abs/1909.11556 for description)','line_number':922,'multiline':False]
['text':' skip the layer','line_number':924,'multiline':False]
['text':' past_key_values_length','line_number':1091,'multiline':False]
['text':' [bsz, seq_len] -> [bsz, 1, tgt_seq_len, src_seq_len]','line_number':1100,'multiline':False]
['text':' expand encoder attention mask','line_number':1111,'multiline':False]
['text':' [bsz, seq_len] -> [bsz, 1, tgt_seq_len, src_seq_len]','line_number':1113,'multiline':False]
['text':' embed positions','line_number':1116,'multiline':False]
['text':' decoder layers','line_number':1122,'multiline':False]
['text':' check if head_mask and cross_attn_head_mask have a correct number of layers specified if desired','line_number':1128,'multiline':False]
['text':' add LayerDrop (see https://arxiv.org/abs/1909.11556 for description)','line_number':1141,'multiline':False]
['text':' If the user passed a tuple for encoder_outputs, we wrap it in a TFBaseModelOutput when return_dict=True','line_number':1260,'multiline':False]
['text':' If the user passed a TFBaseModelOutput for encoder_outputs, we wrap it in a tuple when return_dict=False','line_number':1267,'multiline':False]
['text':' downsample encoder attention mask','line_number':1271,'multiline':False]
['text':' decoder outputs consists of (dec_features, past_key_value, dec_hidden, dec_attn)','line_number':1279,'multiline':False]
['text':' TODO (Joao): investigate why Speech2Text has numerical issues in XLA generate','line_number':1421,'multiline':False]
['text':' cut decoder_input_ids if past is used','line_number':1578,'multiline':False]
['text':' needs to be passed to make Keras.layer.__call__ happy','line_number':1583,'multiline':False]
['text':' change this to avoid caching (presumably for debugging)','line_number':1591,'multiline':False]
