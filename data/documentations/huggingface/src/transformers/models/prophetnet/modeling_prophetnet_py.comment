['text':' coding=utf-8','line_number':1,'multiline':False]
['text':' Copyright 2020 The Microsoft Authors and The HuggingFace Inc. team.','line_number':2,'multiline':False]
['text':'','line_number':3,'multiline':False]
['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':4,'multiline':False]
['text':' you may not use this file except in compliance with the License.','line_number':5,'multiline':False]
['text':' You may obtain a copy of the License at','line_number':6,'multiline':False]
['text':'','line_number':7,'multiline':False]
['text':'     http://www.apache.org/licenses/LICENSE-2.0','line_number':8,'multiline':False]
['text':'','line_number':9,'multiline':False]
['text':' Unless required by applicable law or agreed to in writing, software','line_number':10,'multiline':False]
['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':11,'multiline':False]
['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':12,'multiline':False]
['text':' See the License for the specific language governing permissions and','line_number':13,'multiline':False]
['text':' limitations under the License.','line_number':14,'multiline':False]
['text':' See all ProphetNet models at https://huggingface.co/models?filter=prophetnet','line_number':48,'multiline':False]
['text':' create bias','line_number':193,'multiline':False]
['text':' main stream','line_number':233,'multiline':False]
['text':' predicting stream','line_number':237,'multiline':False]
['text':' get both position buckets','line_number':242,'multiline':False]
['text':' shift inputs to the right','line_number':569,'multiline':False]
['text':' replace possible -100 values in labels by `pad_token_id`','line_number':575,'multiline':False]
['text':' position_ids is the same for every token when decoding a single step','line_number':601,'multiline':False]
['text':' Without the int() cast, it doesn't work in some cases when exporting to ONNX','line_number':602,'multiline':False]
['text':' retrieve position_ids from input_ids / attention_mask','line_number':612,'multiline':False]
['text':' make sure position_ids are not bigger then max_length','line_number':617,'multiline':False]
['text':' if key_value_states are provided this layer is used as a cross-attention layer','line_number':667,'multiline':False]
['text':' for the decoder','line_number':668,'multiline':False]
['text':' previous time steps are cached - no need to recompute key and value if they are static','line_number':676,'multiline':False]
['text':' reuse k,v, cross_attentions','line_number':680,'multiline':False]
['text':' cross_attentions','line_number':684,'multiline':False]
['text':' self_attention','line_number':688,'multiline':False]
['text':' if cross_attention save Tuple(torch.Tensor, torch.Tensor) of all cross attention key/value_states.','line_number':693,'multiline':False]
['text':' Further calls to cross_attention layer can then reuse all cross-attention','line_number':694,'multiline':False]
['text':' key/value_states (first "if" case)','line_number':695,'multiline':False]
['text':' if encoder bi-directional self-attention `past_key_value` is always `None`','line_number':696,'multiline':False]
['text':' project states into the correct shape','line_number':699,'multiline':False]
['text':' This is part of a workaround to get around fork/join parallelism not supporting Optional types.','line_number':710,'multiline':False]
['text':' don't attend to padding symbols','line_number':717,'multiline':False]
['text':' apply head_mask also on attn_weights_reshaped which is used for n-gram attention inside the model','line_number':735,'multiline':False]
['text':' key, value, query projection','line_number':794,'multiline':False]
['text':' out projection','line_number':799,'multiline':False]
['text':' rel position embeddings','line_number':802,'multiline':False]
['text':' for onnx runtime','line_number':805,'multiline':False]
['text':' project','line_number':831,'multiline':False]
['text':' normalize','line_number':836,'multiline':False]
['text':' reshape','line_number':839,'multiline':False]
['text':' chunk into main stream and predict stream','line_number':849,'multiline':False]
['text':' saved states are stored with shape (batch_size, num_attn_heads, seq_len, head_dim)','line_number':860,'multiline':False]
['text':' Update cache','line_number':867,'multiline':False]
['text':' get seq_length of main stream only','line_number':870,'multiline':False]
['text':' MAIN-STREAM','line_number':873,'multiline':False]
['text':' main attn weights','line_number':874,'multiline':False]
['text':' [batch_size, number_heads, sequence_length, head_dimesion]','line_number':875,'multiline':False]
['text':' x [batch_size, number_heads, head_dimesion, sequence_length]','line_number':876,'multiline':False]
['text':' -> [batch_size, number_heads, sequence_length, sequence_length]','line_number':877,'multiline':False]
['text':' retrieve relative position embeddings for each layer -> see paper for more details','line_number':880,'multiline':False]
['text':' project to attn_output','line_number':906,'multiline':False]
['text':' [batch_size, number_heads, sequence_length, sequence_length]','line_number':907,'multiline':False]
['text':' x [batch_size, number_heads, sequence_length, head_dimesion]','line_number':908,'multiline':False]
['text':' -> [batch_size, number_heads, sequence_length, head_dimesion]','line_number':909,'multiline':False]
['text':' reshape so that num_heads dim is merged into last `head_dim` axis','line_number':911,'multiline':False]
['text':' PREDICT-STREAM','line_number':915,'multiline':False]
['text':' [batch_size, ngram, number_heads, sequence_length, head_dimesion]','line_number':916,'multiline':False]
['text':' [batch_size, ngram, number_heads, 2*sequence_length, head_dimesion]','line_number':921,'multiline':False]
['text':' [batch_size, sequence_length, ngram, hidden_size]','line_number':924,'multiline':False]
['text':' [batch_size, number_heads, ngram, 2*sequence_length, head_dimesion]','line_number':927,'multiline':False]
['text':' [batch_size, ngram, number_heads, sequence_length, head_dimesion]','line_number':932,'multiline':False]
['text':' x [batch_size, ngram, number_heads, 2*sequence_length, head_dimesion]','line_number':933,'multiline':False]
['text':' -> [batch_size, ngram, number_heads, sequence_length, 2*sequence_length]','line_number':934,'multiline':False]
['text':' retrieve relative position embeddings for each layer -> see paper for more details','line_number':937,'multiline':False]
['text':' [batch_size, ngram, number_heads, sequence_length, predict_relative_pos_embeddings]','line_number':938,'multiline':False]
['text':' [batch_size, ngram, number_heads, sequence_length, 2*sequence_length]','line_number':943,'multiline':False]
['text':' Permuting Predict attention mask to [batch_size, ngram, number_heads, sequence_length, 2*sequence_length]','line_number':947,'multiline':False]
['text':' project to attention output','line_number':968,'multiline':False]
['text':' [batch_size, ngram, number_heads, sequence_length, 2*sequence_length]','line_number':969,'multiline':False]
['text':' x [batch_size, ngram, number_heads, 2*sequence_length, head_dimesion]','line_number':970,'multiline':False]
['text':' -> [batch_size, ngram, number_heads, sequence_length, head_dimesion]','line_number':971,'multiline':False]
['text':' reshape so that num_heads dim is merged into last `head_dim` axis','line_number':976,'multiline':False]
['text':' [batch_size, ngram, number_heads, sequence_length, head_dimesion] -> [batch_size, ngram, sequence_length, hidden_size]','line_number':977,'multiline':False]
['text':' concat to single attn output','line_number':982,'multiline':False]
['text':' [batch_size, (1+ngram)*sequence_length, hidden_size]','line_number':983,'multiline':False]
['text':' reshape into better form for `config.output_attentions`','line_number':985,'multiline':False]
['text':' input hidden_states [batch_size, sequence_length, hidden_size]','line_number':995,'multiline':False]
['text':' input attn_weights [batch_size, num_heads, sequence_length, sequence_length]','line_number':996,'multiline':False]
['text':' input position_ids [batch_size, sequence_length] or [1,1]','line_number':997,'multiline':False]
['text':' [batch_size, sequence_length, sequence_length+1]','line_number':1009,'multiline':False]
['text':' [batch_size, sequence_length, num_buckets * num_heads]','line_number':1015,'multiline':False]
['text':' [batch_size, num_heads, sequence_length, num_buckets]','line_number':1021,'multiline':False]
['text':' [batch_size * num_heads * sequence_length, sequence_length]','line_number':1025,'multiline':False]
['text':' [batch_size * num_heads * sequence_length, sequence_length]','line_number':1030,'multiline':False]
['text':' input hidden_states [batch_size, sequence_length, ngram, hidden_size]','line_number':1040,'multiline':False]
['text':' input attn_weights [batch_size, ngram, num_heads, sequence_length, 2*sequence_length]','line_number':1041,'multiline':False]
['text':' input position_ids [batch_size, sequence_length] or [1,1]','line_number':1042,'multiline':False]
['text':' input predict_relative_position_buckets [batch_size, sequence_length, 2*sequence_length] or None','line_number':1043,'multiline':False]
['text':' [batch_size, ngram, sequence_length, hidden_size]','line_number':1064,'multiline':False]
['text':' [batch_size, ngram, sequence_length, num_buckets, num_heads]','line_number':1068,'multiline':False]
['text':' [batch_size * ngram * sequence_length * num_heads, num_buckets]','line_number':1073,'multiline':False]
['text':' [ngram, batch_size, num_heads * sequence_length, -1]','line_number':1075,'multiline':False]
['text':' [ngram * batch_size * num_heads * sequence_length, -1]','line_number':1080,'multiline':False]
['text':' [batch_size, gram, num_heads, sequence_length, -1]','line_number':1089,'multiline':False]
['text':' 1st residual block','line_number':1104,'multiline':False]
['text':' 2nd residual block','line_number':1108,'multiline':False]
['text':' 1st residual block','line_number':1119,'multiline':False]
['text':' 2nd residual block','line_number':1128,'multiline':False]
['text':' 1st residual block','line_number':1147,'multiline':False]
['text':' 2nd residual block','line_number':1151,'multiline':False]
['text':' 3rd residual block','line_number':1156,'multiline':False]
['text':' 1st residual block','line_number':1176,'multiline':False]
['text':' decoder uni-directional self-attention cached key/values tuple is at positions 1,2','line_number':1177,'multiline':False]
['text':' cross_attn cached key/values tuple is at positions 3,4 of present_key_value tuple','line_number':1191,'multiline':False]
['text':' 2nd residual block','line_number':1195,'multiline':False]
['text':' add cross-attn to positions 3,4 of present_key_value tuple','line_number':1206,'multiline':False]
['text':' 3rd residual block','line_number':1209,'multiline':False]
['text':' Initialize weights and apply final processing','line_number':1249,'multiline':False]
['text':' prepare attention mask','line_number':1300,'multiline':False]
['text':' check if head_mask has a correct number of layers specified if desired','line_number':1318,'multiline':False]
['text':' Initialize weights and apply final processing','line_number':1390,'multiline':False]
['text':' add position embeddings','line_number':1488,'multiline':False]
['text':' prepare attention mask','line_number':1493,'multiline':False]
['text':' prepare encoder attention mask','line_number':1512,'multiline':False]
['text':' init attentions, hidden_states and cache with empty tuples','line_number':1528,'multiline':False]
['text':' check if head_mask/cross_attn_head_mask has a correct number of layers specified if desired','line_number':1545,'multiline':False]
['text':' grad cannot be kept because tensor is sliced','line_number':1554,'multiline':False]
['text':' split last_hidden_state for return','line_number':1614,'multiline':False]
['text':' buffer relative buckets','line_number':1652,'multiline':False]
['text':' get causal mask','line_number':1669,'multiline':False]
['text':' add usual attention mask','line_number':1682,'multiline':False]
['text':' get causal mask','line_number':1693,'multiline':False]
['text':' add usual attention mask','line_number':1710,'multiline':False]
['text':' predicted stream attention_mask should always be 0','line_number':1716,'multiline':False]
['text':' Initialize weights and apply final processing','line_number':1747,'multiline':False]
['text':' decoder outputs consists of (dec_features, past_key_values, dec_hidden, dec_attn)','line_number':1827,'multiline':False]
['text':' Initialize weights and apply final processing','line_number':1875,'multiline':False]
['text':' get decoder inputs from shifting lm labels to the right','line_number':1940,'multiline':False]
['text':' To use .view in loss computation, make sure that logits is contiguous.','line_number':1970,'multiline':False]
['text':' first step, decoder_cached_states are empty','line_number':2041,'multiline':False]
['text':' encoder_outputs is defined. input_ids not needed','line_number':2043,'multiline':False]
['text':' Copied from transformers.models.bart.modeling_bart.BartForConditionalGeneration._reorder_cache','line_number':2058,'multiline':False]
['text':' cached cross_attention states don't have to be reordered -> they are always the same','line_number':2062,'multiline':False]
['text':' set config for CLM','line_number':2089,'multiline':False]
['text':' Initialize weights and apply final processing','line_number':2101,'multiline':False]
['text':' decoder outputs consists of (dec_features, past_key_values, dec_hidden, dec_attn)','line_number':2216,'multiline':False]
['text':' if model is used as a decoder in encoder-decoder model, the decoder attention mask is created on the fly','line_number':2297,'multiline':False]
['text':' first step, decoder_cached_states are empty','line_number':2303,'multiline':False]
['text':' encoder_outputs is defined. input_ids not needed','line_number':2305,'multiline':False]
['text':' Copied from transformers.models.bart.modeling_bart.BartForCausalLM._reorder_cache','line_number':2313,'multiline':False]
['text':' Initialize weights and apply final processing','line_number':2335,'multiline':False]
