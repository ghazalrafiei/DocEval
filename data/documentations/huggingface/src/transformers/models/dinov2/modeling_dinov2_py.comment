['text':' coding=utf-8','line_number':1,'multiline':False]
['text':' Copyright 2023 Meta AI and The HuggingFace Inc. team. All rights reserved.','line_number':2,'multiline':False]
['text':'','line_number':3,'multiline':False]
['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':4,'multiline':False]
['text':' you may not use this file except in compliance with the License.','line_number':5,'multiline':False]
['text':' You may obtain a copy of the License at','line_number':6,'multiline':False]
['text':'','line_number':7,'multiline':False]
['text':'     http://www.apache.org/licenses/LICENSE-2.0','line_number':8,'multiline':False]
['text':'','line_number':9,'multiline':False]
['text':' Unless required by applicable law or agreed to in writing, software','line_number':10,'multiline':False]
['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':11,'multiline':False]
['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':12,'multiline':False]
['text':' See the License for the specific language governing permissions and','line_number':13,'multiline':False]
['text':' limitations under the License.','line_number':14,'multiline':False]
['text':' General docstring','line_number':49,'multiline':False]
['text':' Base docstring','line_number':52,'multiline':False]
['text':' Image classification docstring','line_number':56,'multiline':False]
['text':' See all DINOv2 models at https://huggingface.co/models?filter=dinov2','line_number':63,'multiline':False]
['text':' we add a small number to avoid floating point error in the interpolation','line_number':101,'multiline':False]
['text':' see discussion at https://github.com/facebookresearch/dino/issues/8','line_number':102,'multiline':False]
['text':' add the [CLS] token to the embedded patch tokens','line_number':126,'multiline':False]
['text':' add positional encoding to each token','line_number':130,'multiline':False]
['text':' Copied from transformers.models.vit.modeling_vit.ViTSelfAttention with ViT->Dinov2','line_number':171,'multiline':False]
['text':' Take the dot product between "query" and "key" to get the raw attention scores.','line_number':205,'multiline':False]
['text':' Normalize the attention scores to probabilities.','line_number':210,'multiline':False]
['text':' This is actually dropping out entire tokens to attend to, which might','line_number':213,'multiline':False]
['text':' seem a bit unusual, but is taken from the original Transformer paper.','line_number':214,'multiline':False]
['text':' Mask heads if we want to','line_number':217,'multiline':False]
['text':' Copied from transformers.models.vit.modeling_vit.ViTSelfOutput with ViT->Dinov2','line_number':232,'multiline':False]
['text':' Copied from transformers.models.vit.modeling_vit.ViTAttention with ViT->Dinov2','line_number':251,'multiline':False]
['text':' Prune linear layers','line_number':266,'multiline':False]
['text':' Update hyper params and store pruned heads','line_number':272,'multiline':False]
['text':' add attentions if we output them','line_number':287,'multiline':False]
['text':' Copied from transformers.models.beit.modeling_beit.drop_path','line_number':300,'multiline':False]
['text':' work with diff dim tensors, not just 2D ConvNets','line_number':314,'multiline':False]
['text':' binarize','line_number':316,'multiline':False]
['text':' Copied from transformers.models.beit.modeling_beit.BeitDropPath','line_number':321,'multiline':False]
['text':' in Dinov2, layernorm is applied before self-attention','line_number':399,'multiline':False]
['text':' add self attentions if we output attention weights','line_number':406,'multiline':False]
['text':' first residual connection','line_number':408,'multiline':False]
['text':' in Dinov2, layernorm is also applied after self-attention','line_number':411,'multiline':False]
['text':' second residual connection','line_number':416,'multiline':False]
['text':' Copied from transformers.models.vit.modeling_vit.ViTEncoder with ViT->Dinov2','line_number':424,'multiline':False]
['text':' Upcast the input in `fp32` and cast it back to desired `dtype` to avoid','line_number':490,'multiline':False]
['text':' `trunc_normal_cpu` not implemented in `half` issues','line_number':491,'multiline':False]
['text':' Initialize weights and apply final processing','line_number':588,'multiline':False]
['text':' Prepare head mask if needed','line_number':628,'multiline':False]
['text':' 1.0 in head_mask indicate we keep the head','line_number':629,'multiline':False]
['text':' attention_probs has shape bsz x n_heads x N x N','line_number':630,'multiline':False]
['text':' input head_mask has shape [num_heads] or [num_hidden_layers x num_heads]','line_number':631,'multiline':False]
['text':' and head_mask is converted to shape [num_hidden_layers x batch x num_heads x seq_length x seq_length]','line_number':632,'multiline':False]
['text':' Classifier head','line_number':674,'multiline':False]
['text':' Initialize weights and apply final processing','line_number':679,'multiline':False]
['text':' batch_size, sequence_length, hidden_size','line_number':714,'multiline':False]
['text':' move labels to correct device to enable model parallelism','line_number':725,'multiline':False]
['text':' Initialize weights and apply final processing','line_number':777,'multiline':False]
['text':' this was actually a bug in the original implementation that we copied here,','line_number':839,'multiline':False]
['text':' cause normally the order is height, width','line_number':840,'multiline':False]
