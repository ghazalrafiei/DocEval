['text':' coding=utf-8','line_number':1,'multiline':False]
['text':' Copyright 2023 The Pop2Piano Authors and The HuggingFace Inc. team.','line_number':2,'multiline':False]
['text':'','line_number':3,'multiline':False]
['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':4,'multiline':False]
['text':' you may not use this file except in compliance with the License.','line_number':5,'multiline':False]
['text':' You may obtain a copy of the License at','line_number':6,'multiline':False]
['text':'','line_number':7,'multiline':False]
['text':'     http://www.apache.org/licenses/LICENSE-2.0','line_number':8,'multiline':False]
['text':'','line_number':9,'multiline':False]
['text':' Unless required by applicable law or agreed to in writing, software','line_number':10,'multiline':False]
['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':11,'multiline':False]
['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':12,'multiline':False]
['text':' See the License for the specific language governing permissions and','line_number':13,'multiline':False]
['text':' limitations under the License.','line_number':14,'multiline':False]
['text':' offset with onset','line_number':55,'multiline':False]
['text':' Time shift after previous note_on','line_number':58,'multiline':False]
['text':' Load the vocab','line_number':107,'multiline':False]
['text':' create mappings for encoder','line_number':111,'multiline':False]
['text':' Taken from the original code','line_number':243,'multiline':False]
['text':' Please see https://github.com/sweetcocoa/pop2piano/blob/fac11e8dcfc73487513f4588e8d0c22a22f2fdc5/midi_tokenizer.py#L257','line_number':244,'multiline':False]
['text':' force offset if no offset for each pitch','line_number':287,'multiline':False]
['text':' Save the encoder.','line_number':351,'multiline':False]
['text':' check if notes is a pretty_midi object or not, if yes then extract the attributes and put them into a numpy','line_number':389,'multiline':False]
['text':' array.','line_number':390,'multiline':False]
['text':' to round up all the values to the closest int values.','line_number':396,'multiline':False]
['text':' truncation','line_number':420,'multiline':False]
['text':' check if it is batched or not','line_number':548,'multiline':False]
['text':' it is batched if its a list containing a list of `pretty_midi.Notes` where the outer list contains all the','line_number':549,'multiline':False]
['text':' batches and the inner list contains all Notes for a single batch. Otherwise if np.ndarray is passed it will be','line_number':550,'multiline':False]
['text':' considered batched if it has shape of `[batch_size, seqence_length, 4]` or ndim=3.','line_number':551,'multiline':False]
['text':' get the truncation and padding strategy','line_number':554,'multiline':False]
['text':' If the user has not explicitly mentioned `return_attention_mask` as False, we change it to True','line_number':565,'multiline':False]
['text':' since we already have truncated sequnences we are just left to do padding','line_number':581,'multiline':False]
['text':' check if they have attention_masks(attention_mask, attention_mask_beatsteps, attention_mask_extrapolated_beatstep) or not','line_number':621,'multiline':False]
['text':' if we are processing batched inputs then we must need attention_masks','line_number':628,'multiline':False]
['text':' check for length mismatch between inputs_embeds, beatsteps and extrapolated_beatstep','line_number':635,'multiline':False]
['text':' since we know about the number of examples in token_ids from attention_mask','line_number':637,'multiline':False]
['text':' if there is no attention mask present then it's surely a single example','line_number':654,'multiline':False]
['text':' check for zeros(since token_ids are seperated by zero arrays)','line_number':665,'multiline':False]
['text':' check where the whole example ended by searching for eos_token_id and getting the upper bound','line_number':675,'multiline':False]
['text':' if attention mask is present then mask out real array/tensor','line_number':680,'multiline':False]
['text':' 1 represents the zero array','line_number':708,'multiline':False]
