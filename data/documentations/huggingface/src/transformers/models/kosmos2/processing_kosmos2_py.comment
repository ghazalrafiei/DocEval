['text':' coding=utf-8','line_number':1,'multiline':False]
['text':' Copyright 2023 Microsoft Research and The HuggingFace Inc. team. All rights reserved.','line_number':2,'multiline':False]
['text':'','line_number':3,'multiline':False]
['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':4,'multiline':False]
['text':' you may not use this file except in compliance with the License.','line_number':5,'multiline':False]
['text':' You may obtain a copy of the License at','line_number':6,'multiline':False]
['text':'','line_number':7,'multiline':False]
['text':'     http://www.apache.org/licenses/LICENSE-2.0','line_number':8,'multiline':False]
['text':'','line_number':9,'multiline':False]
['text':' Unless required by applicable law or agreed to in writing, software','line_number':10,'multiline':False]
['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':11,'multiline':False]
['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':12,'multiline':False]
['text':' See the License for the specific language governing permissions and','line_number':13,'multiline':False]
['text':' limitations under the License.','line_number':14,'multiline':False]
['text':' Use the id of the first token after <unk>','line_number':177,'multiline':False]
['text':' To see if we need one more `0` (for `<s>`) at the beginning of `image_embeds_position_mask`.','line_number':181,'multiline':False]
['text':' The first (actual) `<image>` token is always at the 1st or 2nd place (after `<s>` if any). Here we look','line_number':184,'multiline':False]
['text':' for the second `<image>` token (which indicate the first image token).','line_number':185,'multiline':False]
['text':' Add `image_embeds_position_mask`: the leading and trailing `0` are for `boi` and `eoi` tokens. The `1` indicates','line_number':188,'multiline':False]
['text':' the places of image tokens.','line_number':189,'multiline':False]
['text':' loop over `encoding["input_ids"]`','line_number':193,'multiline':False]
['text':' not batched -> (changed to) batch of size 1','line_number':197,'multiline':False]
['text':' change the ids for the fake `<image>` tokens in `input_ids`','line_number':202,'multiline':False]
['text':' for `<s>`','line_number':208,'multiline':False]
['text':' trailing part (which are not related to the image)','line_number':210,'multiline':False]
['text':' un-batch if necessary','line_number':252,'multiline':False]
['text':' update (with the target tensor type if specified)','line_number':258,'multiline':False]
['text':' `bbox` is the bounding boxes for a single <phrase> </phrase> pair','line_number':289,'multiline':False]
['text':' Add `<image> ... (fake) image tokens ... </image>`','line_number':310,'multiline':False]
['text':' Add `<object> <patch_idx_xxxx> <patch_idx_yyy> </object>` after `<phrase> phrase text </phrase>`','line_number':313,'multiline':False]
['text':' These are fake `<image>` tokens enclosed between (the actual) `<image>` token and `</image>`.','line_number':338,'multiline':False]
['text':' make batch to simplify processing logic','line_number':342,'multiline':False]
['text':' un-batch if necessary','line_number':377,'multiline':False]
['text':' Copied from transformers.models.blip.processing_blip.BlipProcessor.batch_decode with BertTokenizerFast->PreTrainedTokenizer','line_number':383,'multiline':False]
['text':' Copied from transformers.models.blip.processing_blip.BlipProcessor.decode with BertTokenizerFast->PreTrainedTokenizer','line_number':391,'multiline':False]
['text':' Copied from transformers.models.blip.processing_blip.BlipProcessor.model_input_names','line_number':406,'multiline':False]
['text':' insert object's patch index tokens','line_number':422,'multiline':False]
['text':' the found `<phrase> ... </phrase>` pairs.','line_number':423,'multiline':False]
['text':' A phrase without bbox','line_number':430,'multiline':False]
['text':' A phrase with a single bbox','line_number':433,'multiline':False]
['text':' A phrase could have multiple bboxes','line_number':437,'multiline':False]
['text':' `bbox` being an empty list','line_number':445,'multiline':False]
['text':' remaining','line_number':450,'multiline':False]
['text':' already computed patch indices','line_number':460,'multiline':False]
['text':' bbox specified with (normalized) coordinates','line_number':463,'multiline':False]
['text':' use `self.tokenizer` to get `num_patches_per_side`','line_number':465,'multiline':False]
['text':' copied from https://github.com/microsoft/unilm/blob/97e4923e97d3ee10b57e97013556e3fd0d207a9b/kosmos-2/demo/decode_string.py#L35C1-L75C38','line_number':504,'multiline':False]
['text':' (with format modifications)','line_number':505,'multiline':False]
['text':' Compute the size of each cell in the grid','line_number':519,'multiline':False]
['text':' Compute the x and y indices of the upper-left and lower-right corners of the bounding box','line_number':522,'multiline':False]
['text':' Compute the normalized coordinates of the bounding box','line_number':529,'multiline':False]
['text':' copied from https://github.com/microsoft/unilm/blob/97e4923e97d3ee10b57e97013556e3fd0d207a9b/kosmos-2/demo/decode_string.py#L4-L33','line_number':549,'multiline':False]
['text':' (with format modifications)','line_number':550,'multiline':False]
['text':' The regular expression pattern for matching the required formats','line_number':565,'multiline':False]
['text':' Find all matches in the given string','line_number':568,'multiline':False]
['text':' Initialize an empty list to store the valid patch_index combinations','line_number':571,'multiline':False]
['text':' span of a `phrase` that is between <phrase> and </phrase>','line_number':575,'multiline':False]
['text':' We take the starting position of `<object>`','line_number':580,'multiline':False]
['text':' Split the match_content by the delimiter to get individual patch_index pairs','line_number':583,'multiline':False]
['text':' Extract the xxxx and yyyy values from the patch_index pair','line_number':588,'multiline':False]
['text':' fake entity name','line_number':602,'multiline':False]
['text':' computed the length of strings with special fields (tag tokens, patch index tokens, etc.) removed','line_number':612,'multiline':False]
['text':' copied from https://github.com/microsoft/unilm/blob/97e4923e97d3ee10b57e97013556e3fd0d207a9b/kosmos-2/demo/decode_string.py#L77-L87','line_number':638,'multiline':False]
['text':' (with format modifications)','line_number':639,'multiline':False]
['text':' remove special fields (tag tokens, patch index tokens, etc.)','line_number':654,'multiline':False]
