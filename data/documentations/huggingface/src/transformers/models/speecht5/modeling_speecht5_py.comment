['text':' coding=utf-8','line_number':1,'multiline':False]
['text':' Copyright 2023 The Fairseq Authors, Microsoft Research, and the HuggingFace Inc. team. All rights reserved.','line_number':2,'multiline':False]
['text':'','line_number':3,'multiline':False]
['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':4,'multiline':False]
['text':' you may not use this file except in compliance with the License.','line_number':5,'multiline':False]
['text':' You may obtain a copy of the License at','line_number':6,'multiline':False]
['text':'','line_number':7,'multiline':False]
['text':'     http://www.apache.org/licenses/LICENSE-2.0','line_number':8,'multiline':False]
['text':'','line_number':9,'multiline':False]
['text':' Unless required by applicable law or agreed to in writing, software','line_number':10,'multiline':False]
['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':11,'multiline':False]
['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':12,'multiline':False]
['text':' See the License for the specific language governing permissions and','line_number':13,'multiline':False]
['text':' limitations under the License.','line_number':14,'multiline':False]
['text':' General docstring','line_number':47,'multiline':False]
['text':' See all SpeechT5 models at https://huggingface.co/models?filter=speecht5','line_number':55,'multiline':False]
['text':' Copied from transformers.models.bart.modeling_bart.shift_tokens_right','line_number':59,'multiline':False]
['text':' replace possible -100 values in labels by `pad_token_id`','line_number':70,'multiline':False]
['text':' thin out frames for reduction factor','line_number':80,'multiline':False]
['text':' replace possible -100 values in labels by zeros','line_number':87,'multiline':False]
['text':' Copied from transformers.models.wav2vec2.modeling_wav2vec2._compute_mask_indices','line_number':93,'multiline':False]
['text':' epsilon is used for probabilistic rounding','line_number':129,'multiline':False]
['text':' make sure num masked span <= sequence_length','line_number':137,'multiline':False]
['text':' make sure num_masked span is also <= input_length - (mask_length - 1)','line_number':141,'multiline':False]
['text':' compute number of masked spans in batch','line_number':147,'multiline':False]
['text':' SpecAugment mask to fill','line_number':154,'multiline':False]
['text':' compute num of masked spans for this input','line_number':164,'multiline':False]
['text':' get random indices to mask','line_number':167,'multiline':False]
['text':' pick first sampled index that will serve as a dummy index to pad vector','line_number':172,'multiline':False]
['text':' to ensure same dimension for all batches due to probabilistic rounding','line_number':173,'multiline':False]
['text':' Picking first sample just pads those vectors twice.','line_number':174,'multiline':False]
['text':' this case can only happen if `input_length` is strictly smaller then','line_number':176,'multiline':False]
['text':' `sequence_length` in which case the last token has to be a padding','line_number':177,'multiline':False]
['text':' token which we can use as a dummy mask id','line_number':178,'multiline':False]
['text':' expand masked indices to masked spans','line_number':190,'multiline':False]
['text':' add offset to the starting indexes so that indexes now create a span','line_number':196,'multiline':False]
['text':' ensure that we cannot have indices larger than sequence_length','line_number':203,'multiline':False]
['text':' scatter indices to mask','line_number':207,'multiline':False]
['text':' Copied from transformers.models.wav2vec2.modeling_wav2vec2.Wav2Vec2NoLayerNormConvLayer with Wav2Vec2->SpeechT5','line_number':213,'multiline':False]
['text':' Copied from transformers.models.wav2vec2.modeling_wav2vec2.Wav2Vec2LayerNormConvLayer with Wav2Vec2->SpeechT5','line_number':235,'multiline':False]
['text':' Copied from transformers.models.wav2vec2.modeling_wav2vec2.Wav2Vec2GroupNormConvLayer with Wav2Vec2->SpeechT5','line_number':263,'multiline':False]
['text':' Copied from transformers.models.speech_to_text.modeling_speech_to_text.Speech2TextSinusoidalPositionalEmbedding with Speech2Text->SpeechT5','line_number':288,'multiline':False]
['text':' in forward put the weights on the correct dtype and device of the param','line_number':302,'multiline':False]
['text':' zero pad','line_number':321,'multiline':False]
['text':' Create the position ids from the input token ids. Any padded tokens remain padded.','line_number':330,'multiline':False]
['text':' expand embeddings if needed','line_number':335,'multiline':False]
['text':' The series of casts and type-conversions here are carefully balanced to both work with ONNX export and XLA.','line_number':353,'multiline':False]
['text':' Copied from transformers.models.wav2vec2.modeling_wav2vec2.Wav2Vec2PositionalConvEmbedding with Wav2Vec2->SpeechT5','line_number':359,'multiline':False]
['text':' Copied from transformers.models.wav2vec2.modeling_wav2vec2.Wav2Vec2SamePadLayer with Wav2Vec2->SpeechT5','line_number':442,'multiline':False]
['text':' Copied from transformers.models.wav2vec2.modeling_wav2vec2.Wav2Vec2FeatureEncoder with Wav2Vec2->SpeechT5','line_number':454,'multiline':False]
['text':' make sure hidden_states require grad for gradient_checkpointing','line_number':485,'multiline':False]
['text':' Copied from transformers.models.wav2vec2.modeling_wav2vec2.Wav2Vec2FeatureProjection with Wav2Vec2->SpeechT5','line_number':501,'multiline':False]
['text':' non-projected hidden states are needed for quantization','line_number':510,'multiline':False]
['text':' model only needs masking vector if mask prob is > 0.0','line_number':524,'multiline':False]
['text':' compute reduced attention_mask corresponding to feature vectors','line_number':548,'multiline':False]
['text':' Copied from transformers.models.unispeech.modeling_unispeech.UniSpeechPreTrainedModel._get_feature_vector_attention_mask','line_number':572,'multiline':False]
['text':' Effectively attention_mask.sum(-1), but not inplace to be able to run','line_number':574,'multiline':False]
['text':' on inference mode.','line_number':575,'multiline':False]
['text':' these two operations makes sure that all values before the output lengths idxs are attended to','line_number':583,'multiline':False]
['text':' Copied from transformers.models.unispeech.modeling_unispeech.UniSpeechPreTrainedModel._get_feat_extract_output_lengths','line_number':588,'multiline':False]
['text':' 1D convolutional layer output length formula taken','line_number':595,'multiline':False]
['text':' from https://pytorch.org/docs/stable/generated/torch.nn.Conv1d.html','line_number':596,'multiline':False]
['text':' Copied from transformers.models.wav2vec2.modeling_wav2vec2.Wav2Vec2Model._mask_hidden_states','line_number':604,'multiline':False]
['text':' `config.apply_spec_augment` can set masking to False','line_number':616,'multiline':False]
['text':' generate indices & apply SpecAugment along time axis','line_number':620,'multiline':False]
['text':' apply SpecAugment along time axis with given mask_time_indices','line_number':624,'multiline':False]
['text':' generate indices & apply SpecAugment along feature axis','line_number':638,'multiline':False]
['text':' Dropout is always applied, even when evaluating. See ยง2.2 in https://arxiv.org/abs/1712.05884.','line_number':687,'multiline':False]
['text':' if key_value_states are provided this layer is used as a cross-attention layer','line_number':903,'multiline':False]
['text':' for the decoder','line_number':904,'multiline':False]
['text':' get query proj','line_number':909,'multiline':False]
['text':' get key, value proj','line_number':911,'multiline':False]
['text':' reuse k,v, cross_attentions','line_number':913,'multiline':False]
['text':' cross_attentions','line_number':917,'multiline':False]
['text':' reuse k, v, self_attention','line_number':921,'multiline':False]
['text':' self_attention','line_number':927,'multiline':False]
['text':' if cross_attention save Tuple(torch.Tensor, torch.Tensor) of all cross attention key/value_states.','line_number':932,'multiline':False]
['text':' Further calls to cross_attention layer can then reuse all cross-attention','line_number':933,'multiline':False]
['text':' key/value_states (first "if" case)','line_number':934,'multiline':False]
['text':' if uni-directional self-attention (decoder) save Tuple(torch.Tensor, torch.Tensor) of','line_number':935,'multiline':False]
['text':' all previous decoder key/value_states. Further calls to uni-directional self-attention','line_number':936,'multiline':False]
['text':' can concat previous decoder key/value_states to current projected key/value_states (third "elif" case)','line_number':937,'multiline':False]
['text':' if encoder bi-directional self-attention `past_key_value` is always `None`','line_number':938,'multiline':False]
['text':' relative attention bias','line_number':955,'multiline':False]
['text':' this operation is a bit awkward, but it's required to','line_number':984,'multiline':False]
['text':' make sure that attn_weights keeps its gradient.','line_number':985,'multiline':False]
['text':' In order to do so, attn_weights have to be reshaped','line_number':986,'multiline':False]
['text':' twice and have to be reused in the following','line_number':987,'multiline':False]
['text':' Use the `embed_dim` from the config (stored in the class) rather than `hidden_state` because `attn_output` can be','line_number':1006,'multiline':False]
['text':' partitioned aross GPUs when using tensor-parallelism.','line_number':1007,'multiline':False]
['text':' Self Attention','line_number':1155,'multiline':False]
['text':' decoder uni-directional self-attention cached key/values tuple is at positions 1,2','line_number':1156,'multiline':False]
['text':' add present self-attn cache to positions 1,2 of present_key_value tuple','line_number':1158,'multiline':False]
['text':' Cross-Attention Block','line_number':1170,'multiline':False]
['text':' cross_attn cached key/values tuple is at positions 3,4 of present_key_value tuple','line_number':1176,'multiline':False]
['text':' add cross-attn to positions 3,4 of present_key_value tuple','line_number':1190,'multiline':False]
['text':' Fully Connected','line_number':1193,'multiline':False]
['text':' Initialize weights and apply final processing','line_number':1269,'multiline':False]
['text':' expand attention_mask','line_number':1314,'multiline':False]
['text':' [bsz, seq_len] -> [bsz, 1, tgt_seq_len, src_seq_len]','line_number':1316,'multiline':False]
['text':' check if head_mask has a correct number of layers specified if desired','line_number':1329,'multiline':False]
['text':' add LayerDrop (see https://arxiv.org/abs/1909.11556 for description)','line_number':1341,'multiline':False]
['text':' under deepspeed zero3 all gpus must run in sync','line_number':1348,'multiline':False]
['text':' Initialize weights and apply final processing','line_number':1398,'multiline':False]
['text':' Initialize weights and apply final processing','line_number':1434,'multiline':False]
['text':' Initialize weights and apply final processing','line_number':1476,'multiline':False]
['text':' Initialize weights and apply final processing','line_number':1511,'multiline':False]
['text':' expand encoder attention mask','line_number':1602,'multiline':False]
['text':' [bsz, seq_len] -> [bsz, 1, tgt_seq_len, src_seq_len]','line_number':1604,'multiline':False]
['text':' decoder layers','line_number':1618,'multiline':False]
['text':' check if head_mask/cross_attn_head_mask has a correct number of layers specified if desired','line_number':1624,'multiline':False]
['text':' add LayerDrop (see https://arxiv.org/abs/1909.11556 for description)','line_number':1637,'multiline':False]
['text':' Initialize weights and apply final processing','line_number':1716,'multiline':False]
['text':' Initialize weights and apply final processing','line_number':1763,'multiline':False]
['text':' Initialize weights and apply final processing','line_number':1815,'multiline':False]
['text':' mask out the padded portions','line_number':1935,'multiline':False]
['text':' spectrogram loss','line_number':1940,'multiline':False]
['text':' construct stop labels from the padding mask','line_number':1943,'multiline':False]
['text':' stop token loss','line_number':1949,'multiline':False]
['text':' combined loss','line_number':1952,'multiline':False]
['text':' guided attention loss','line_number':1955,'multiline':False]
['text':' Initialize weights and apply final processing','line_number':2111,'multiline':False]
['text':' Encode if needed (training, first prediction pass)','line_number':2182,'multiline':False]
['text':' If the user passed a tuple for encoder_outputs, we wrap it in a BaseModelOutput when return_dict=True','line_number':2192,'multiline':False]
['text':' downsample encoder attention mask (only for encoders with speech input)','line_number':2200,'multiline':False]
['text':' Initialize weights and apply final processing','line_number':2267,'multiline':False]
['text':' cut decoder_input_ids if past is used','line_number':2430,'multiline':False]
['text':' Some generation methods already pass only the last input ID','line_number':2434,'multiline':False]
['text':' Default to old behavior: keep only final ID','line_number':2438,'multiline':False]
['text':' change this to avoid caching (presumably for debugging)','line_number':2451,'multiline':False]
['text':' downsample encoder attention mask','line_number':2499,'multiline':False]
['text':' Start the output sequence with a mel spectrum that is all zeros.','line_number':2508,'multiline':False]
['text':' Run the decoder prenet on the entire output sequence.','line_number':2520,'multiline':False]
['text':' Run the decoder layers on the last element of the prenet output.','line_number':2522,'multiline':False]
['text':' Predict the new mel spectrum for this step in the sequence.','line_number':2540,'multiline':False]
['text':' Extend the output sequence with the new mel spectrum.','line_number':2545,'multiline':False]
['text':' Predict the probability that this is the stop token.','line_number':2548,'multiline':False]
['text':' If the generation loop is less than maximum length time, check the ones in the batch that have met','line_number':2554,'multiline':False]
['text':' the prob threshold. Otherwise, assume all have met thresholds and fill other spectrograms for the batch.','line_number':2555,'multiline':False]
['text':' batched return values should also include the spectrogram/waveform lengths','line_number':2585,'multiline':False]
['text':' Initialize weights and apply final processing','line_number':2631,'multiline':False]
['text':' Initialize weights and apply final processing','line_number':2949,'multiline':False]
['text':' Initialize weights and apply final processing','line_number':3293,'multiline':False]
['text':' remove batch dim and collapse tensor to 1-d audio waveform','line_number':3358,'multiline':False]
['text':' remove seq-len dim since this collapses to 1','line_number':3361,'multiline':False]
