['text':' coding=utf-8','line_number':1,'multiline':False]
['text':' Copyright 2018 The OpenAI Team Authors and HuggingFace Inc. team.','line_number':2,'multiline':False]
['text':' Copyright (c) 2018, NVIDIA CORPORATION.  All rights reserved.','line_number':3,'multiline':False]
['text':'','line_number':4,'multiline':False]
['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':5,'multiline':False]
['text':' you may not use this file except in compliance with the License.','line_number':6,'multiline':False]
['text':' You may obtain a copy of the License at','line_number':7,'multiline':False]
['text':'','line_number':8,'multiline':False]
['text':'     http://www.apache.org/licenses/LICENSE-2.0','line_number':9,'multiline':False]
['text':'','line_number':10,'multiline':False]
['text':' Unless required by applicable law or agreed to in writing, software','line_number':11,'multiline':False]
['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':12,'multiline':False]
['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':13,'multiline':False]
['text':' See the License for the specific language governing permissions and','line_number':14,'multiline':False]
['text':' limitations under the License.','line_number':15,'multiline':False]
['text':' See all OpenAI GPT models at https://huggingface.co/models?filter=openai-gpt','line_number':59,'multiline':False]
['text':' in Attention: n_state=768 (nx=n_embd)','line_number':67,'multiline':False]
['text':' [switch nx => n_state from Block to Attention to keep identical to TF implementation]','line_number':68,'multiline':False]
['text':' q, k, v have shape [batch, heads, sequence, features]','line_number':99,'multiline':False]
['text':' scale attention_scores','line_number':102,'multiline':False]
['text':' w has shape [batch, heads, dst_sequence, src_sequence], where information flows from src to dst.','line_number':105,'multiline':False]
['text':' Apply the attention mask','line_number':112,'multiline':False]
['text':' Mask heads if we want to','line_number':119,'multiline':False]
['text':' (batch, head, seq_length, head_features)','line_number':138,'multiline':False]
['text':' a, (attentions)','line_number':155,'multiline':False]
['text':' output_attn: a, (attentions)','line_number':210,'multiline':False]
['text':' x, (attentions)','line_number':217,'multiline':False]
['text':' We create a 3D attention mask from a 2D tensor mask.','line_number':319,'multiline':False]
['text':' Sizes are [batch_size, 1, 1, to_seq_length]','line_number':320,'multiline':False]
['text':' So we can broadcast to [batch_size, num_heads, from_seq_length, to_seq_length]','line_number':321,'multiline':False]
['text':' this attention mask is more simple than the triangular masking of causal attention','line_number':322,'multiline':False]
['text':' used in OpenAI GPT, we just need to prepare the broadcast dimension here.','line_number':323,'multiline':False]
['text':' Since attention_mask is 1.0 for positions we want to attend and 0.0 for','line_number':326,'multiline':False]
['text':' masked positions, this operation will create a tensor which is 0.0 for','line_number':327,'multiline':False]
['text':' positions we want to attend and -10000.0 for masked positions.','line_number':328,'multiline':False]
['text':' Since we are adding it to the raw scores before the softmax, this is','line_number':329,'multiline':False]
['text':' effectively the same as removing these entirely.','line_number':330,'multiline':False]
['text':' Prepare head mask if needed','line_number':338,'multiline':False]
['text':' 1.0 in head_mask indicate we keep the head','line_number':339,'multiline':False]
['text':' attention_probs has shape bsz x n_heads x N x N','line_number':340,'multiline':False]
['text':' input head_mask has shape [num_heads] or [num_hidden_layers x num_heads]','line_number':341,'multiline':False]
['text':' and head_mask is converted to shape [num_hidden_layers x batch x num_heads x seq_length x seq_length]','line_number':342,'multiline':False]
['text':' head_mask = tf.constant([0] * self.num_hidden_layers)','line_number':347,'multiline':False]
['text':' Add last hidden state','line_number':384,'multiline':False]
['text':' let the number of heads free (-1) so we can extract attention even after head pruning','line_number':389,'multiline':False]
['text':' OpenAIGPT does not have past caching features','line_number':603,'multiline':False]
['text':' shift labels to the left and cut last logit token','line_number':657,'multiline':False]
['text':' We do this to match the slightly odd PT behaviour - the final hidden state is reshaped to rank 4 when the','line_number':778,'multiline':False]
['text':' input is rank 3, but all other hidden states remain at rank-3 (with the first 2 dims merged)','line_number':779,'multiline':False]
