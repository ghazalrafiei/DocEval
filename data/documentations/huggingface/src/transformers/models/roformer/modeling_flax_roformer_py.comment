['text':' coding=utf-8','line_number':1,'multiline':False]
['text':' Copyright 2021 The HuggingFace Inc. team. All rights reserved.','line_number':2,'multiline':False]
['text':'','line_number':3,'multiline':False]
['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':4,'multiline':False]
['text':' you may not use this file except in compliance with the License.','line_number':5,'multiline':False]
['text':' You may obtain a copy of the License at','line_number':6,'multiline':False]
['text':'','line_number':7,'multiline':False]
['text':'     http://www.apache.org/licenses/LICENSE-2.0','line_number':8,'multiline':False]
['text':'','line_number':9,'multiline':False]
['text':' Unless required by applicable law or agreed to in writing, software','line_number':10,'multiline':False]
['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':11,'multiline':False]
['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':12,'multiline':False]
['text':' See the License for the specific language governing permissions and','line_number':13,'multiline':False]
['text':' limitations under the License.','line_number':14,'multiline':False]
['text':' See all RoFormer models at https://huggingface.co/models?filter=roformer','line_number':53,'multiline':False]
['text':' Copied from transformers.models.marian.modeling_flax_marian.create_sinusoidal_positions','line_number':130,'multiline':False]
['text':' the dtype of the computation','line_number':145,'multiline':False]
['text':' Embed','line_number':162,'multiline':False]
['text':' Sum all embeddings','line_number':166,'multiline':False]
['text':' Layer Norm','line_number':169,'multiline':False]
['text':' the dtype of the computation','line_number':177,'multiline':False]
['text':' Convert the boolean attention mask to an attention bias.','line_number':235,'multiline':False]
['text':' attention mask in the form of attention bias','line_number':237,'multiline':False]
['text':' Mask heads if we want to','line_number':263,'multiline':False]
['text':' Copied from transformers.models.bert.modeling_flax_bert.FlaxBertSelfOutput with Bert->RoFormer','line_number':293,'multiline':False]
['text':' the dtype of the computation','line_number':296,'multiline':False]
['text':' Attention mask comes in as attention_mask.shape == (*batch_sizes, kv_length)','line_number':331,'multiline':False]
['text':' FLAX expects: attention_mask.shape == (*batch_sizes, 1, 1, kv_length) such that it is broadcastable','line_number':332,'multiline':False]
['text':' with attn_weights.shape == (*batch_sizes, num_heads, q_length, kv_length)','line_number':333,'multiline':False]
['text':' Copied from transformers.models.bert.modeling_flax_bert.FlaxBertIntermediate with Bert->RoFormer','line_number':353,'multiline':False]
['text':' the dtype of the computation','line_number':356,'multiline':False]
['text':' Copied from transformers.models.bert.modeling_flax_bert.FlaxBertOutput with Bert->RoFormer','line_number':372,'multiline':False]
['text':' the dtype of the computation','line_number':375,'multiline':False]
['text':' the dtype of the computation','line_number':395,'multiline':False]
['text':' the dtype of the computation','line_number':433,'multiline':False]
['text':' Check if head_mask has a correct number of layers specified if desired','line_number':454,'multiline':False]
['text':' the dtype of the computation','line_number':495,'multiline':False]
['text':' Copied from transformers.models.bert.modeling_flax_bert.FlaxBertPredictionHeadTransform with Bert->RoFormer','line_number':527,'multiline':False]
['text':' Copied from transformers.models.bert.modeling_flax_bert.FlaxBertLMPredictionHead with Bert->RoFormer','line_number':543,'multiline':False]
['text':' Copied from transformers.models.bert.modeling_flax_bert.FlaxBertOnlyMLMHead with Bert->RoFormer','line_number':567,'multiline':False]
['text':' take <s> token (equiv. to [CLS])','line_number':599,'multiline':False]
['text':' init input tensors','line_number':631,'multiline':False]
['text':' init input tensors if not passed','line_number':674,'multiline':False]
['text':' Handle any PRNG if needed','line_number':684,'multiline':False]
['text':' the dtype of the computation','line_number':705,'multiline':False]
['text':' Model','line_number':774,'multiline':False]
['text':' Compute the prediction scores','line_number':792,'multiline':False]
['text':' Model','line_number':838,'multiline':False]
['text':' Model','line_number':907,'multiline':False]
['text':' Equivalent to sequence_summary call in the PyTorch implementation','line_number':919,'multiline':False]
['text':' Model','line_number':980,'multiline':False]
['text':' Model','line_number':1044,'multiline':False]
