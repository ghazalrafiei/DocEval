['text':' This code was adapted from https://github.com/lucidrains/flamingo-pytorch licensed under the MIT License.','line_number':1,'multiline':False]
['text':'','line_number':2,'multiline':False]
['text':' MIT License','line_number':3,'multiline':False]
['text':'','line_number':4,'multiline':False]
['text':' Copyright (c) 2020  The Google AI Language Team Authors, The HuggingFace Inc. team and github/lonePatient','line_number':5,'multiline':False]
['text':'','line_number':6,'multiline':False]
['text':' Permission is hereby granted, free of charge, to any person obtaining a copy','line_number':7,'multiline':False]
['text':' of this software and associated documentation files (the "Software"), to deal','line_number':8,'multiline':False]
['text':' in the Software without restriction, including without limitation the rights','line_number':9,'multiline':False]
['text':' to use, copy, modify, merge, publish, distribute, sublicense, and/or sell','line_number':10,'multiline':False]
['text':' copies of the Software, and to permit persons to whom the Software is','line_number':11,'multiline':False]
['text':' furnished to do so, subject to the following conditions:','line_number':12,'multiline':False]
['text':'','line_number':13,'multiline':False]
['text':' The above copyright notice and this permission notice shall be included in all','line_number':14,'multiline':False]
['text':' copies or substantial portions of the Software.','line_number':15,'multiline':False]
['text':'','line_number':16,'multiline':False]
['text':' THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR','line_number':17,'multiline':False]
['text':' IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,','line_number':18,'multiline':False]
['text':' FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE','line_number':19,'multiline':False]
['text':' AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER','line_number':20,'multiline':False]
['text':' LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,','line_number':21,'multiline':False]
['text':' OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE','line_number':22,'multiline':False]
['text':' SOFTWARE.','line_number':23,'multiline':False]
['text':' Create Latents for Perceiver','line_number':72,'multiline':False]
['text':' Create Transformer Blocks','line_number':80,'multiline':False]
['text':' einsum.repeat(self.latents, "seq embed -> bsz seq embed", bsz=context.shape[0])','line_number':96,'multiline':False]
['text':' Feed through Perceiver Attention blocks...','line_number':99,'multiline':False]
['text':' Normalization & Scaling','line_number':113,'multiline':False]
['text':' Q, K, V Projection (no bias -- detail from Perceiver/Flamingo Papers).','line_number':122,'multiline':False]
['text':' Query, Key, Value Projections --> Note that in Flamingo, latents are *concatenated* with context prior to attn!','line_number':147,'multiline':False]
['text':'   Note: This results in queries w/ `seq = n_latents`, and keys, values with `seq = len(context) + n_latents`','line_number':148,'multiline':False]
['text':' Multiheaded Self-Attention w/ stable softmax (subtract per-row max -- `amax` -- before softmax call)','line_number':153,'multiline':False]
['text':'   =>> `attn` should be a 2D matrix of shape [n_latents x (context + n_latents)]','line_number':154,'multiline':False]
['text':' einsum.rearrange(x, "bsz seq (heads embed) -> bsz heads seq embed", heads=self.n_heads)','line_number':155,'multiline':False]
['text':' Attend & project back to output...','line_number':166,'multiline':False]
['text':' einsum.rearrange(resampled, "bsz heads seq embed -> bsz seq (heads embed)", heads=self.n_heads)','line_number':168,'multiline':False]
