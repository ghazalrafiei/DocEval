['text':' coding=utf-8','line_number':1,'multiline':False]
['text':' Copyright The HuggingFace Inc. team. All rights reserved.','line_number':2,'multiline':False]
['text':'','line_number':3,'multiline':False]
['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':4,'multiline':False]
['text':' you may not use this file except in compliance with the License.','line_number':5,'multiline':False]
['text':' You may obtain a copy of the License at','line_number':6,'multiline':False]
['text':'','line_number':7,'multiline':False]
['text':'     http://www.apache.org/licenses/LICENSE-2.0','line_number':8,'multiline':False]
['text':'','line_number':9,'multiline':False]
['text':' Unless required by applicable law or agreed to in writing, software','line_number':10,'multiline':False]
['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':11,'multiline':False]
['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':12,'multiline':False]
['text':' See the License for the specific language governing permissions and','line_number':13,'multiline':False]
['text':' limitations under the License.','line_number':14,'multiline':False]
['text':' Copied from transformers.models.roberta.tokenization_roberta.bytes_to_unicode','line_number':160,'multiline':False]
['text':' Copied from transformers.models.roberta.tokenization_roberta.get_pairs','line_number':185,'multiline':False]
['text':' Mask token behave like a normal word, i.e. include the space before it','line_number':304,'multiline':False]
['text':' how to handle errors in decoding','line_number':310,'multiline':False]
['text':' Should have added re.IGNORECASE so BPE merges can happen for capitalized versions of contractions','line_number':320,'multiline':False]
['text':' additional properties','line_number':323,'multiline':False]
['text':' Copied from transformers.models.roberta.tokenization_roberta.RobertaTokenizer.vocab_size','line_number':349,'multiline':False]
['text':' Copied from transformers.models.roberta.tokenization_roberta.RobertaTokenizer.get_vocab','line_number':353,'multiline':False]
['text':' Copied from transformers.models.roberta.tokenization_roberta.RobertaTokenizer.bpe','line_number':359,'multiline':False]
['text':' Copied from transformers.models.roberta.tokenization_roberta.RobertaTokenizer._tokenize','line_number':402,'multiline':False]
['text':' Maps all our bytes to unicode strings, avoiding control tokens of the BPE (spaces in our case)','line_number':409,'multiline':False]
['text':' Copied from transformers.models.roberta.tokenization_roberta.RobertaTokenizer._convert_token_to_id','line_number':413,'multiline':False]
['text':' Copied from transformers.models.roberta.tokenization_roberta.RobertaTokenizer._convert_id_to_token','line_number':418,'multiline':False]
['text':' Copied from transformers.models.roberta.tokenization_roberta.RobertaTokenizer.convert_tokens_to_string','line_number':423,'multiline':False]
['text':' Copied from transformers.models.roberta.tokenization_roberta.RobertaTokenizer.save_vocabulary','line_number':430,'multiline':False]
['text':' Copied from transformers.models.roberta.tokenization_roberta.RobertaTokenizer.build_inputs_with_special_tokens','line_number':460,'multiline':False]
['text':' Copied from transformers.models.roberta.tokenization_roberta.RobertaTokenizer.get_special_tokens_mask','line_number':486,'multiline':False]
['text':' Copied from transformers.models.roberta.tokenization_roberta.RobertaTokenizer.create_token_type_ids_from_sequences','line_number':514,'multiline':False]
['text':' If the text starts with a token that should not be split, no space is added before the text in any case.','line_number':540,'multiline':False]
['text':' It's necessary to match the fast tokenization','line_number':541,'multiline':False]
['text':' Copied from transformers.models.layoutlmv2.tokenization_layoutlmv2.LayoutLMv2Tokenizer.__call__','line_number':551,'multiline':False]
['text':' Input type checking for clearer error','line_number':592,'multiline':False]
['text':' Strings are fine','line_number':595,'multiline':False]
['text':' List are fine as long as they are...','line_number':598,'multiline':False]
['text':' ... empty','line_number':600,'multiline':False]
['text':' ... list of strings','line_number':603,'multiline':False]
['text':' ... list with an empty list or with a list of strings','line_number':606,'multiline':False]
['text':' in case text + text_pair are provided, text = questions, text_pair = words','line_number':614,'multiline':False]
['text':' in case only text is provided => must be words','line_number':623,'multiline':False]
['text':' Copied from transformers.models.layoutlmv2.tokenization_layoutlmv2.LayoutLMv2Tokenizer.batch_encode_plus','line_number':701,'multiline':False]
['text':' Backward compatibility for 'truncation_strategy', 'pad_to_max_length'','line_number':728,'multiline':False]
['text':' Copied from transformers.models.layoutlmv2.tokenization_layoutlmv2.LayoutLMv2Tokenizer._batch_encode_plus','line_number':760,'multiline':False]
['text':' Copied from transformers.models.layoutlmv2.tokenization_layoutlmv2.LayoutLMv2Tokenizer._batch_prepare_for_model','line_number':817,'multiline':False]
['text':' we pad in batch afterward','line_number':856,'multiline':False]
['text':' we pad in batch afterward','line_number':860,'multiline':False]
['text':' we pad in batch afterward','line_number':861,'multiline':False]
['text':' We convert the whole batch to tensors at the end','line_number':866,'multiline':False]
['text':' Copied from transformers.models.layoutlmv2.tokenization_layoutlmv2.LayoutLMv2Tokenizer.encode','line_number':889,'multiline':False]
['text':' Copied from transformers.models.layoutlmv2.tokenization_layoutlmv2.LayoutLMv2Tokenizer.encode_plus','line_number':937,'multiline':False]
['text':' Backward compatibility for 'truncation_strategy', 'pad_to_max_length'','line_number':972,'multiline':False]
['text':' Copied from transformers.models.layoutlmv2.tokenization_layoutlmv2.LayoutLMv2Tokenizer._encode_plus','line_number':1004,'multiline':False]
['text':' Backward compatibility for 'truncation_strategy', 'pad_to_max_length'','line_number':1100,'multiline':False]
['text':' CASE 1: document image classification (training + inference) + CASE 2: token classification (inference)','line_number':1118,'multiline':False]
['text':' skip empty words','line_number':1120,'multiline':False]
['text':' CASE 2: token classification (training)','line_number':1126,'multiline':False]
['text':' skip empty words','line_number':1128,'multiline':False]
['text':' Use the real label id for the first token of the word, and padding ids for the remaining tokens','line_number':1134,'multiline':False]
['text':' CASE 3: document visual question answering (inference)','line_number':1139,'multiline':False]
['text':' text = question','line_number':1140,'multiline':False]
['text':' text_pair = words','line_number':1141,'multiline':False]
['text':' skip empty words','line_number':1146,'multiline':False]
['text':' Create ids + pair_ids','line_number':1152,'multiline':False]
['text':' Compute the total size of the returned encodings','line_number':1167,'multiline':False]
['text':' Truncation: Handle max sequence length','line_number':1173,'multiline':False]
['text':' Load from model defaults','line_number':1205,'multiline':False]
['text':' Add special tokens','line_number':1219,'multiline':False]
['text':' Build output dictionary','line_number':1234,'multiline':False]
['text':' Check lengths','line_number':1248,'multiline':False]
['text':' Padding','line_number':1251,'multiline':False]
['text':' Copied from transformers.models.layoutlmv2.tokenization_layoutlmv2.LayoutLMv2Tokenizer.truncate_sequences','line_number':1270,'multiline':False]
['text':' Copied from transformers.models.layoutlmv2.tokenization_layoutlmv2.LayoutLMv2Tokenizer._pad','line_number':1396,'multiline':False]
['text':' Load from model defaults','line_number':1428,'multiline':False]
['text':' Initialize attention mask if not present.','line_number':1442,'multiline':False]
