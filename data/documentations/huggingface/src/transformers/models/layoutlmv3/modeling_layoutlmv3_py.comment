['text':' coding=utf-8','line_number':1,'multiline':False]
['text':' Copyright 2022 Microsoft Research and The HuggingFace Inc. team.','line_number':2,'multiline':False]
['text':'','line_number':3,'multiline':False]
['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':4,'multiline':False]
['text':' you may not use this file except in compliance with the License.','line_number':5,'multiline':False]
['text':' You may obtain a copy of the License at','line_number':6,'multiline':False]
['text':'','line_number':7,'multiline':False]
['text':'     http://www.apache.org/licenses/LICENSE-2.0','line_number':8,'multiline':False]
['text':'','line_number':9,'multiline':False]
['text':' Unless required by applicable law or agreed to in writing, software','line_number':10,'multiline':False]
['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':11,'multiline':False]
['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':12,'multiline':False]
['text':' See the License for the specific language governing permissions and','line_number':13,'multiline':False]
['text':' limitations under the License.','line_number':14,'multiline':False]
['text':' See all LayoutLMv3 models at https://huggingface.co/models?filter=layoutlmv3','line_number':47,'multiline':False]
['text':' interpolate the position embedding to the corresponding size','line_number':223,'multiline':False]
['text':' position_ids (1, len position emb) is contiguous in memory and exported when serialized','line_number':247,'multiline':False]
['text':' below is the difference between LayoutLMEmbeddingsV2 (torch.cat) and LayoutLMEmbeddingsV1 (add)','line_number':274,'multiline':False]
['text':' The series of casts and type-conversions here are carefully balanced to both work with ONNX export and XLA.','line_number':293,'multiline':False]
['text':' Create the position ids from the input token ids. Any padded tokens remain padded.','line_number':320,'multiline':False]
['text':' Slightly different from the TF version which uses truncated_normal for initialization','line_number':364,'multiline':False]
['text':' cf https://github.com/pytorch/pytorch/pull/5617','line_number':365,'multiline':False]
['text':' Take the dot product between "query" and "key" to get the raw attention scores.','line_number':431,'multiline':False]
['text':' The attention scores QT K/√d could be significantly larger than input elements, and result in overflow.','line_number':432,'multiline':False]
['text':' Changing the computational order into QT(K/√d) alleviates the problem. (https://arxiv.org/pdf/2105.13290.pdf)','line_number':433,'multiline':False]
['text':' Apply the attention mask is (precomputed for all layers in RobertaModel forward() function)','line_number':442,'multiline':False]
['text':' Normalize the attention scores to probabilities.','line_number':445,'multiline':False]
['text':' Use the trick of the CogView paper to stablize training','line_number':446,'multiline':False]
['text':' This is actually dropping out entire tokens to attend to, which might','line_number':449,'multiline':False]
['text':' seem a bit unusual, but is taken from the original Transformer paper.','line_number':450,'multiline':False]
['text':' Mask heads if we want to','line_number':453,'multiline':False]
['text':' Copied from transformers.models.roberta.modeling_roberta.RobertaSelfOutput','line_number':468,'multiline':False]
['text':' Copied from transformers.models.layoutlmv2.modeling_layoutlmv2.LayoutLMv2Attention with LayoutLMv2->LayoutLMv3','line_number':483,'multiline':False]
['text':' add attentions if we output them','line_number':508,'multiline':False]
['text':' Copied from transformers.models.layoutlmv2.modeling_layoutlmv2.LayoutLMv2Layer with LayoutLMv2->LayoutLMv3','line_number':512,'multiline':False]
['text':' add self attentions if we output attention weights','line_number':541,'multiline':False]
['text':' now n is in the range [0, inf)','line_number':585,'multiline':False]
['text':' half of the buckets are for exact increments in positions','line_number':587,'multiline':False]
['text':' The other half of the buckets are for logarithmically bigger bins in positions up to max_distance','line_number':591,'multiline':False]
['text':' Copied from transformers.models.roberta.modeling_roberta.RobertaIntermediate','line_number':703,'multiline':False]
['text':' Copied from transformers.models.roberta.modeling_roberta.RobertaOutput','line_number':719,'multiline':False]
['text':' use the default pre-training parameters for fine-tuning (e.g., input_size)','line_number':747,'multiline':False]
['text':' when the input_size is larger in fine-tuning, we will interpolate the position embeddings in forward','line_number':748,'multiline':False]
['text':' add [CLS] token','line_number':813,'multiline':False]
['text':' add position embeddings','line_number':818,'multiline':False]
['text':' Prepare head mask if needed','line_number':957,'multiline':False]
['text':' 1.0 in head_mask indicate we keep the head','line_number':958,'multiline':False]
['text':' attention_probs has shape bsz x n_heads x N x N','line_number':959,'multiline':False]
['text':' input head_mask has shape [num_heads] or [num_hidden_layers x num_heads]','line_number':960,'multiline':False]
['text':' and head_mask is converted to shape [num_hidden_layers x batch x num_heads x seq_length x seq_length]','line_number':961,'multiline':False]
['text':' only take the text part of the output representations','line_number':1107,'multiline':False]
['text':' If we are on multi-GPU, split add a dimension','line_number':1231,'multiline':False]
['text':' sometimes the start/end positions are outside our model inputs, we ignore these terms','line_number':1236,'multiline':False]
