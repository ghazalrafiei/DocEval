['text':' coding=utf-8','line_number':1,'multiline':False]
['text':' Copyright 2022 Facebook AI and The HuggingFace Inc. team. All rights reserved.','line_number':2,'multiline':False]
['text':'','line_number':3,'multiline':False]
['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':4,'multiline':False]
['text':' you may not use this file except in compliance with the License.','line_number':5,'multiline':False]
['text':' You may obtain a copy of the License at','line_number':6,'multiline':False]
['text':'','line_number':7,'multiline':False]
['text':'     http://www.apache.org/licenses/LICENSE-2.0','line_number':8,'multiline':False]
['text':'','line_number':9,'multiline':False]
['text':' Unless required by applicable law or agreed to in writing, software','line_number':10,'multiline':False]
['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':11,'multiline':False]
['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':12,'multiline':False]
['text':' See the License for the specific language governing permissions and','line_number':13,'multiline':False]
['text':' limitations under the License.','line_number':14,'multiline':False]
['text':' See all ViTMSN models at https://huggingface.co/models?filter=vit_msn','line_number':42,'multiline':False]
['text':' we add a small number to avoid floating point error in the interpolation','line_number':80,'multiline':False]
['text':' see discussion at https://github.com/facebookresearch/dino/issues/8','line_number':81,'multiline':False]
['text':' replace the masked visual tokens by mask_tokens','line_number':109,'multiline':False]
['text':' add the [CLS] token to the embedded patch tokens','line_number':113,'multiline':False]
['text':' add positional encoding to each token','line_number':117,'multiline':False]
['text':' Copied from transformers.models.vit.modeling_vit.ViTPatchEmbeddings with ViT->ViTMSN','line_number':128,'multiline':False]
['text':' Copied from transformers.models.vit.modeling_vit.ViTSelfAttention with ViT->ViTMSN','line_number':168,'multiline':False]
['text':' Take the dot product between "query" and "key" to get the raw attention scores.','line_number':202,'multiline':False]
['text':' Normalize the attention scores to probabilities.','line_number':207,'multiline':False]
['text':' This is actually dropping out entire tokens to attend to, which might','line_number':210,'multiline':False]
['text':' seem a bit unusual, but is taken from the original Transformer paper.','line_number':211,'multiline':False]
['text':' Mask heads if we want to','line_number':214,'multiline':False]
['text':' Copied from transformers.models.vit.modeling_vit.ViTSelfOutput with ViT->ViTMSN','line_number':229,'multiline':False]
['text':' Copied from transformers.models.vit.modeling_vit.ViTAttention with ViT->ViTMSN','line_number':248,'multiline':False]
['text':' Prune linear layers','line_number':263,'multiline':False]
['text':' Update hyper params and store pruned heads','line_number':269,'multiline':False]
['text':' add attentions if we output them','line_number':284,'multiline':False]
['text':' Copied from transformers.models.vit.modeling_vit.ViTIntermediate with ViT->ViTMSN','line_number':288,'multiline':False]
['text':' Copied from transformers.models.vit.modeling_vit.ViTOutput with ViT->ViTMSN','line_number':305,'multiline':False]
['text':' Copied from transformers.models.vit.modeling_vit.ViTLayer with ViT->ViTMSN','line_number':321,'multiline':False]
['text':' in ViTMSN, layernorm is applied before self-attention','line_number':342,'multiline':False]
['text':' add self attentions if we output attention weights','line_number':347,'multiline':False]
['text':' first residual connection','line_number':349,'multiline':False]
['text':' in ViTMSN, layernorm is also applied after self-attention','line_number':352,'multiline':False]
['text':' second residual connection is done here','line_number':356,'multiline':False]
['text':' Copied from transformers.models.vit.modeling_vit.ViTEncoder with ViT->ViTMSN','line_number':364,'multiline':False]
['text':' todo: Resort to https://github.com/facebookresearch/msn/blob/main/src/deit.py#L200-#L211','line_number':427,'multiline':False]
['text':' when creating pre-training scripts.','line_number':428,'multiline':False]
['text':' Slightly different from the TF version which uses truncated_normal for initialization','line_number':432,'multiline':False]
['text':' cf https://github.com/pytorch/pytorch/pull/5617','line_number':433,'multiline':False]
['text':' Initialize weights and apply final processing','line_number':492,'multiline':False]
['text':' Prepare head mask if needed','line_number':551,'multiline':False]
['text':' 1.0 in head_mask indicate we keep the head','line_number':552,'multiline':False]
['text':' attention_probs has shape bsz x n_heads x N x N','line_number':553,'multiline':False]
['text':' input head_mask has shape [num_heads] or [num_hidden_layers x num_heads]','line_number':554,'multiline':False]
['text':' and head_mask is converted to shape [num_hidden_layers x batch x num_heads x seq_length x seq_length]','line_number':555,'multiline':False]
['text':' Caution: We don't have the weights for the classification head yet. This class','line_number':583,'multiline':False]
['text':' is here for the users that are interested to fine-tune the base model (ViTMSNModel).','line_number':584,'multiline':False]
['text':' Classifier head','line_number':598,'multiline':False]
['text':' Initialize weights and apply final processing','line_number':601,'multiline':False]
