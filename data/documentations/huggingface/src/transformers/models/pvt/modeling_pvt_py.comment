['text':' coding=utf-8','line_number':1,'multiline':False]
['text':' Copyright 2023 Authors: Wenhai Wang, Enze Xie, Xiang Li, Deng-Ping Fan,','line_number':2,'multiline':False]
['text':' Kaitao Song, Ding Liang, Tong Lu, Ping Luo, Ling Shao and The HuggingFace Inc. team.','line_number':3,'multiline':False]
['text':' All rights reserved.','line_number':4,'multiline':False]
['text':'','line_number':5,'multiline':False]
['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':6,'multiline':False]
['text':' you may not use this file except in compliance with the License.','line_number':7,'multiline':False]
['text':' You may obtain a copy of the License at','line_number':8,'multiline':False]
['text':'','line_number':9,'multiline':False]
['text':'     http://www.apache.org/licenses/LICENSE-2.0','line_number':10,'multiline':False]
['text':'','line_number':11,'multiline':False]
['text':' Unless required by applicable law or agreed to in writing, software','line_number':12,'multiline':False]
['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':13,'multiline':False]
['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':14,'multiline':False]
['text':' See the License for the specific language governing permissions and','line_number':15,'multiline':False]
['text':' limitations under the License.','line_number':16,'multiline':False]
['text':' See all PVT models at https://huggingface.co/models?filter=pvt','line_number':54,'multiline':False]
['text':' Copied from transformers.models.beit.modeling_beit.drop_path','line_number':58,'multiline':False]
['text':' work with diff dim tensors, not just 2D ConvNets','line_number':72,'multiline':False]
['text':' binarize','line_number':74,'multiline':False]
['text':' Copied from transformers.models.convnext.modeling_convnext.ConvNextDropPath with ConvNext->Pvt','line_number':79,'multiline':False]
['text':' Reshape to (batch_size, num_channels, height, width)','line_number':220,'multiline':False]
['text':' Apply sequence reduction','line_number':222,'multiline':False]
['text':' Reshape back to (batch_size, seq_len, num_channels)','line_number':224,'multiline':False]
['text':' Take the dot product between "query" and "key" to get the raw attention scores.','line_number':231,'multiline':False]
['text':' Normalize the attention scores to probabilities.','line_number':236,'multiline':False]
['text':' This is actually dropping out entire tokens to attend to, which might','line_number':239,'multiline':False]
['text':' seem a bit unusual, but is taken from the original Transformer paper.','line_number':240,'multiline':False]
['text':' Prune linear layers','line_number':275,'multiline':False]
['text':' Update hyper params and store pruned heads','line_number':281,'multiline':False]
['text':' add attentions if we output them','line_number':292,'multiline':False]
['text':' stochastic depth decay rule','line_number':374,'multiline':False]
['text':' patch embeddings','line_number':377,'multiline':False]
['text':' Transformer blocks','line_number':394,'multiline':False]
['text':' each block consists of layers','line_number':398,'multiline':False]
['text':' Layer norms','line_number':417,'multiline':False]
['text':' first, obtain patch embeddings','line_number':434,'multiline':False]
['text':' second, send embeddings through blocks','line_number':436,'multiline':False]
['text':' Upcast the input in `fp32` and cast it back to desired `dtype` to avoid','line_number':471,'multiline':False]
['text':' `trunc_normal_cpu` not implemented in `half` issues','line_number':472,'multiline':False]
['text':' hierarchical Transformer encoder','line_number':529,'multiline':False]
['text':' Initialize weights and apply final processing','line_number':532,'multiline':False]
['text':' Classifier head','line_number':596,'multiline':False]
['text':' Initialize weights and apply final processing','line_number':601,'multiline':False]
