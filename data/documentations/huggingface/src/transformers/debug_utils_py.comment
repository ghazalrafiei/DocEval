['text':' Copyright 2020 The HuggingFace Team. All rights reserved.','line_number':1,'multiline':False]
['text':'','line_number':2,'multiline':False]
['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':3,'multiline':False]
['text':' you may not use this file except in compliance with the License.','line_number':4,'multiline':False]
['text':' You may obtain a copy of the License at','line_number':5,'multiline':False]
['text':'','line_number':6,'multiline':False]
['text':'     http://www.apache.org/licenses/LICENSE-2.0','line_number':7,'multiline':False]
['text':'','line_number':8,'multiline':False]
['text':' Unless required by applicable law or agreed to in writing, software','line_number':9,'multiline':False]
['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':10,'multiline':False]
['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':11,'multiline':False]
['text':' See the License for the specific language governing permissions and','line_number':12,'multiline':False]
['text':' limitations under the License.','line_number':13,'multiline':False]
['text':' keep a LIFO buffer of frames to dump as soon as inf/nan is encountered to give context to the problem emergence','line_number':150,'multiline':False]
['text':' start a new frame','line_number':166,'multiline':False]
['text':' extract the fully qualified module names, to be able to report at run time. e.g.:','line_number':187,'multiline':False]
['text':' encoder.block.2.layer.0.SelfAttention.o','line_number':188,'multiline':False]
['text':'','line_number':189,'multiline':False]
['text':' for shared weights only the first shared module name will be registered','line_number':190,'multiline':False]
['text':' self.longest_module_name = max(len(v) for v in self.module_names.values())','line_number':192,'multiline':False]
['text':' params','line_number':214,'multiline':False]
['text':' inputs','line_number':218,'multiline':False]
['text':' outputs','line_number':225,'multiline':False]
['text':' possibly a tuple of tuples','line_number':228,'multiline':False]
['text':' - input is a tuple of packed inputs (could be non-Tensors)','line_number':246,'multiline':False]
['text':' - output could be a Tensor or a tuple of Tensors and non-Tensors','line_number':247,'multiline':False]
['text':' count batch numbers - the very first forward hook of the batch will be called when the','line_number':259,'multiline':False]
['text':' batch completes - i.e. it gets called very last - we know this batch has finished','line_number':260,'multiline':False]
['text':' if last_frame_of_batch:','line_number':267,'multiline':False]
['text':'     self.batch_end_frame()','line_number':268,'multiline':False]
['text':' now we can abort, as it's pointless to continue running','line_number':279,'multiline':False]
['text':' abort after certain batch if requested to do so','line_number':285,'multiline':False]
['text':' if needed to monitor large elements can enable the following','line_number':323,'multiline':False]
['text':' and detected:','line_number':324,'multiline':False]
