['text':' coding=utf-8','line_number':1,'multiline':False]
['text':' Copyright 2020-present the HuggingFace Inc. team.','line_number':2,'multiline':False]
['text':'','line_number':3,'multiline':False]
['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':4,'multiline':False]
['text':' you may not use this file except in compliance with the License.','line_number':5,'multiline':False]
['text':' You may obtain a copy of the License at','line_number':6,'multiline':False]
['text':'','line_number':7,'multiline':False]
['text':'     http://www.apache.org/licenses/LICENSE-2.0','line_number':8,'multiline':False]
['text':'','line_number':9,'multiline':False]
['text':' Unless required by applicable law or agreed to in writing, software','line_number':10,'multiline':False]
['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':11,'multiline':False]
['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':12,'multiline':False]
['text':' See the License for the specific language governing permissions and','line_number':13,'multiline':False]
['text':' limitations under the License.','line_number':14,'multiline':False]
['text':' this is used to suppress an undesired warning emitted by pytorch versions 1.4.2-1.7.0','line_number':49,'multiline':False]
['text':' Let's figure out the new shape','line_number':84,'multiline':False]
['text':' Now let's fill the result tensor','line_number':87,'multiline':False]
['text':' Let's figure out the new shape','line_number':102,'multiline':False]
['text':' Now let's fill the result tensor','line_number':105,'multiline':False]
['text':' As of Numpy 1.21.4, NumPy does not support bfloat16 (see','line_number':163,'multiline':False]
['text':' https://github.com/numpy/numpy/blob/a47ecdea856986cd60eabbd53265c2ca5916ad5d/doc/source/user/basics.types.rst ).','line_number':164,'multiline':False]
['text':' Until Numpy adds bfloat16, we must convert float32.','line_number':165,'multiline':False]
['text':' truncate the dummy elements added by SequentialDistributedSampler','line_number':207,'multiline':False]
['text':' truncate the dummy elements added by SequentialDistributedSampler','line_number':226,'multiline':False]
['text':' Reissue warnings that are not the SAVE_STATE_WARNING','line_number':235,'multiline':False]
['text':' DistributedSampler already added samples from the beginning to make the number of samples a round multiple','line_number':278,'multiline':False]
['text':' of the world size, so we skip those.','line_number':279,'multiline':False]
['text':' Add extra samples to make num_samples a multiple of batch_size if passed','line_number':312,'multiline':False]
['text':' add extra samples to make it evenly divisible','line_number':323,'multiline':False]
['text':' subsample','line_number':329,'multiline':False]
['text':' Expand the array on the fly if needed.','line_number':459,'multiline':False]
['text':' In case the ignore_index is -100, the gather will fail, so we replace labels by 0. The padding_mask','line_number':505,'multiline':False]
['text':' will ignore them in any case.','line_number':506,'multiline':False]
['text':' works for fp16 input tensor too, by internally upcasting it to fp32','line_number':509,'multiline':False]
['text':' Take the mean over the label dimensions, then divide by the number of active elements (i.e. not-padded):','line_number':515,'multiline':False]
['text':' Default for mega_batch_mult: 50 or the number to get 4 megabatches, whichever is smaller.','line_number':534,'multiline':False]
['text':' Just in case, for tiny datasets','line_number':537,'multiline':False]
['text':' We need to use torch for the random part as a distributed sampler will set the random seed for torch.','line_number':541,'multiline':False]
['text':' The rest is to get the biggest batch first.','line_number':547,'multiline':False]
['text':' Since each megabatch is sorted by descending length, the longest element is the first','line_number':548,'multiline':False]
['text':' Switch to put the longest element in first position','line_number':551,'multiline':False]
['text':' Copied and adapted from PyTorch DistributedSampler.','line_number':609,'multiline':False]
['text':' If the dataset length is evenly divisible by # of replicas, then there','line_number':658,'multiline':False]
['text':' is no need to drop any data, since the dataset will be split equally.','line_number':659,'multiline':False]
['text':' Split to nearest available length that is evenly divisible.','line_number':661,'multiline':False]
['text':' This is to ensure each rank receives the same amount of data when','line_number':662,'multiline':False]
['text':' using this Sampler.','line_number':663,'multiline':False]
['text':' Deterministically shuffle based on epoch and seed','line_number':671,'multiline':False]
['text':' add extra samples to make it evenly divisible','line_number':677,'multiline':False]
['text':' remove tail of data to make it evenly divisible.','line_number':680,'multiline':False]
['text':' subsample','line_number':684,'multiline':False]
['text':' Add extra samples to make it evenly divisible. While loop is there in the edge case we have a tiny dataset','line_number':722,'multiline':False]
['text':' and it needs to be done several times.','line_number':723,'multiline':False]
['text':' Each shard only sees a fraction of total_num_samples.','line_number':734,'multiline':False]
['text':' Wait to have a full batch before yielding elements.','line_number':818,'multiline':False]
['text':' Finished if drop_last is True, otherwise complete the last batch with elements from the beginning.','line_number':826,'multiline':False]
['text':' Will raise an error if the underlying dataset is not sized.','line_number':836,'multiline':False]
['text':' In order to keep `trainer.py` compact and easy to understand, place any secondary PT Trainer','line_number':843,'multiline':False]
['text':' helper methods here','line_number':844,'multiline':False]
['text':' with deepspeed's fp16 and dynamic loss scale enabled the optimizer/scheduler steps may','line_number':849,'multiline':False]
['text':' not run for the first few dozen steps while loss scale is too large, and thus during','line_number':850,'multiline':False]
['text':' that time `get_last_lr` will fail if called during that warm up stage, so work around it:','line_number':851,'multiline':False]
['text':' Add model specific parameters (defined with nn.Parameter) since they are not in any child.','line_number':1074,'multiline':False]
['text':' It doesn't seem possible to check here if `tensor` is a StepOutput because StepOutput lives in `smp.step`','line_number':1140,'multiline':False]
['text':' which is also the name of the decorator so Python is confused.','line_number':1141,'multiline':False]
