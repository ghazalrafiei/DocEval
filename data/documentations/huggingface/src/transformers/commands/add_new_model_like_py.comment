['text':' Copyright 2021 The HuggingFace Team. All rights reserved.','line_number':1,'multiline':False]
['text':'','line_number':2,'multiline':False]
['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':3,'multiline':False]
['text':' you may not use this file except in compliance with the License.','line_number':4,'multiline':False]
['text':' You may obtain a copy of the License at','line_number':5,'multiline':False]
['text':'','line_number':6,'multiline':False]
['text':'     http://www.apache.org/licenses/LICENSE-2.0','line_number':7,'multiline':False]
['text':'','line_number':8,'multiline':False]
['text':' Unless required by applicable law or agreed to in writing, software','line_number':9,'multiline':False]
['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':10,'multiline':False]
['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':11,'multiline':False]
['text':' See the License for the specific language governing permissions and','line_number':12,'multiline':False]
['text':' limitations under the License.','line_number':13,'multiline':False]
['text':' pylint: disable=invalid-name','line_number':34,'multiline':False]
['text':' Split the model name on - and space','line_number':94,'multiline':False]
['text':' Make sure each word is capitalized','line_number':97,'multiline':False]
['text':' Doc-styler takes everything between two triple quotes in docstrings, so we need a fake """ here to go with this.','line_number':151,'multiline':False]
['text':' End of an object','line_number':155,'multiline':False]
['text':' Closing parts should be included in current object','line_number':160,'multiline':False]
['text':' Add last object','line_number':171,'multiline':False]
['text':' Doc-styler takes everything between two triple quotes in docstrings, so we need a fake """ here to go with this.','line_number':195,'multiline':False]
['text':' End of an object','line_number':208,'multiline':False]
['text':' Closing parts should be included in current object','line_number':216,'multiline':False]
['text':' Add last object','line_number':223,'multiline':False]
['text':' The order is crucially important as we will check and replace in that order. For instance the config probably','line_number':338,'multiline':False]
['text':' contains the camel-cased named, but will be treated before.','line_number':339,'multiline':False]
['text':' Add relevant preprocessing classes','line_number':341,'multiline':False]
['text':' Special cases for checkpoint and model_type','line_number':346,'multiline':False]
['text':' Special case when the model camel cased and upper cased names are the same for the old model (like for GPT2) but','line_number':358,'multiline':False]
['text':' not the new one. We can't just do a replace in all the text and will need a special regex','line_number':359,'multiline':False]
['text':' Now let's replace every other attribute by their placeholder','line_number':369,'multiline':False]
['text':' Finally we can replace the placeholder byt the new values.','line_number':373,'multiline':False]
['text':' If we have two inconsistent replacements, we don't return anything (ex: GPT2->GPT_NEW and GPT2->GPTNew)','line_number':380,'multiline':False]
['text':' Nothing to simplify','line_number':404,'multiline':False]
['text':' Next let's sort replacements by length as a replacement can only "imply" another replacement if it's shorter.','line_number':407,'multiline':False]
['text':' Loop through all replacements after','line_number':413,'multiline':False]
['text':' If the replacement is implied by the current one, we can drop it.','line_number':417,'multiline':False]
['text':' Find the first part named transformers, starting from the end.','line_number':434,'multiline':False]
['text':' search for assignment','line_number':463,'multiline':False]
['text':' search for function/method definition','line_number':467,'multiline':False]
['text':' target not found','line_number':472,'multiline':False]
['text':' forward pass to find the ending of the block (including empty lines)','line_number':478,'multiline':False]
['text':' backward pass to find comments or decorator','line_number':484,'multiline':False]
['text':' Loop and treat all objects','line_number':527,'multiline':False]
['text':' Special cases','line_number':530,'multiline':False]
['text':' docstyle-ignore','line_number':532,'multiline':False]
['text':' docstyle-ignore','line_number':550,'multiline':False]
['text':' Regular classes functions','line_number':570,'multiline':False]
['text':' Copied from statement must be added just before the class/function definition, which may not be the','line_number':575,'multiline':False]
['text':' first line because of decorators.','line_number':576,'multiline':False]
['text':' In all cases, we remove Copied from statement with indent on methods.','line_number':582,'multiline':False]
['text':' Remove some attributes that we don't want to copy to the new file(s)','line_number':588,'multiline':False]
['text':' Basic pattern for test files','line_number':653,'multiline':False]
['text':' Add the test directory','line_number':664,'multiline':False]
['text':' Filter by existing files','line_number':666,'multiline':False]
['text':' Remove quotes','line_number':700,'multiline':False]
['text':' TODO: Find some kind of fallback if there is no _CHECKPOINT_FOR_DOC in any of the modeling file.','line_number':705,'multiline':False]
['text':' Remove duplicates','line_number':761,'multiline':False]
['text':' Retrieve model upper-cased name from the constant name of the pretrained archive map.','line_number':817,'multiline':False]
['text':' Nothing to do','line_number':876,'multiline':False]
['text':' Conditional imports in try-except-else blocks','line_number':892,'multiline':False]
['text':' Remove the preceding `try:`','line_number':894,'multiline':False]
['text':' Iterate until `else:`','line_number':897,'multiline':False]
['text':' Remove the import from utils','line_number':904,'multiline':False]
['text':' Otherwise we keep the line, except if it's a tokenizer import and we don't want to keep it.','line_number':916,'multiline':False]
['text':' For a new framework, we need to skip until the else: block to get where the imports are.','line_number':970,'multiline':False]
['text':' Skip if we are in a framework not wanted.','line_number':975,'multiline':False]
['text':' Only keep the ones that are not None','line_number':1000,'multiline':False]
['text':' First we get to the TOKENIZER_MAPPING_NAMES block.','line_number':1036,'multiline':False]
['text':' That block will end at this prompt:','line_number':1041,'multiline':False]
['text':' Either all the tokenizer block is defined on one line, in which case, it ends with "),"','line_number':1043,'multiline':False]
['text':' Otherwise it takes several lines until we get to a "),"','line_number':1046,'multiline':False]
['text':' If we find the model type and tokenizer class in that block, we have the old model tokenizer block','line_number':1055,'multiline':False]
['text':' Extend patterns with all model classes if necessary','line_number':1094,'multiline':False]
['text':' Loop through all patterns.','line_number':1130,'multiline':False]
['text':' Tokenizers require special handling','line_number':1152,'multiline':False]
['text':' Parse the doc file in blocks. One block per section/header','line_number':1203,'multiline':False]
['text':' Copyright','line_number':1219,'multiline':False]
['text':' Main title','line_number':1222,'multiline':False]
['text':' The config starts the part of the doc with the classes.','line_number':1225,'multiline':False]
['text':' In classes','line_number':1231,'multiline':False]
['text':' We only add the tokenizer if necessary','line_number':1239,'multiline':False]
['text':' We only add the image processor if necessary','line_number':1243,'multiline':False]
['text':' We only add the feature extractor if necessary','line_number':1247,'multiline':False]
['text':' We only add the processor if necessary','line_number':1251,'multiline':False]
['text':' We only add Flax models if in the selected frameworks','line_number':1255,'multiline':False]
['text':' We only add TF models if in the selected frameworks','line_number':1259,'multiline':False]
['text':' We only add PyTorch models if in the selected frameworks','line_number':1263,'multiline':False]
['text':' Get to the model API doc','line_number':1285,'multiline':False]
['text':' Find the base model in the Toc','line_number':1296,'multiline':False]
['text':' Add the new model in the same toc','line_number':1312,'multiline':False]
['text':' Retrieve all the old model info.','line_number':1344,'multiline':False]
['text':' 1. We create the module for our new model.','line_number':1363,'multiline':False]
['text':' 2. We add our new model to the models init and the main init','line_number':1397,'multiline':False]
['text':' 3. Add test files','line_number':1408,'multiline':False]
['text':' 4. Add model to auto classes','line_number':1456,'multiline':False]
['text':' 5. Add doc file','line_number':1459,'multiline':False]
['text':' 6. Warn the user for duplicate patterns','line_number':1464,'multiline':False]
['text':' Adapt constants','line_number':1538,'multiline':False]
['text':' Get old model type','line_number':1623,'multiline':False]
