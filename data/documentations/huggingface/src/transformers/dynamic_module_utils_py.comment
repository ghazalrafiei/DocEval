['text':' coding=utf-8','line_number':1,'multiline':False]
['text':' Copyright 2021 The HuggingFace Inc. team.','line_number':2,'multiline':False]
['text':'','line_number':3,'multiline':False]
['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':4,'multiline':False]
['text':' you may not use this file except in compliance with the License.','line_number':5,'multiline':False]
['text':' You may obtain a copy of the License at','line_number':6,'multiline':False]
['text':'','line_number':7,'multiline':False]
['text':'     http://www.apache.org/licenses/LICENSE-2.0','line_number':8,'multiline':False]
['text':'','line_number':9,'multiline':False]
['text':' Unless required by applicable law or agreed to in writing, software','line_number':10,'multiline':False]
['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':11,'multiline':False]
['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':12,'multiline':False]
['text':' See the License for the specific language governing permissions and','line_number':13,'multiline':False]
['text':' limitations under the License.','line_number':14,'multiline':False]
['text':' pylint: disable=invalid-name','line_number':40,'multiline':False]
['text':' This function has already been executed if HF_MODULES_CACHE already is in the Python path.','line_number':47,'multiline':False]
['text':' If the parent module does not exist yet, recursively create it.','line_number':69,'multiline':False]
['text':' It is extremely important to invalidate the cache when we change stuff in those modules, or users end up','line_number':76,'multiline':False]
['text':' with errors about module that do not exist. Same for all other `invalidate_caches` in this file.','line_number':77,'multiline':False]
['text':' Imports of the form `import .xxx`','line_number':94,'multiline':False]
['text':' Imports of the form `from .xxx import yyy`','line_number':96,'multiline':False]
['text':' Unique-ify','line_number':98,'multiline':False]
['text':' Let's recurse through all relative imports','line_number':118,'multiline':False]
['text':' filter out try/except block so in custom code we can have try/except imports','line_number':148,'multiline':False]
['text':' Imports of the form `import xxx`','line_number':151,'multiline':False]
['text':' Imports of the form `from xxx import yyy`','line_number':153,'multiline':False]
['text':' Only keep the top-level module','line_number':155,'multiline':False]
['text':' Download and cache module_file from the repo `pretrained_model_name_or_path` of grab it if it's a local file.','line_number':280,'multiline':False]
['text':' Load from URL or cache if already cached','line_number':293,'multiline':False]
['text':' Check we have all the requirements in our environment','line_number':314,'multiline':False]
['text':' Now we move the module inside our cached dynamic modules.','line_number':317,'multiline':False]
['text':' We copy local files to avoid putting too many folders in sys.path. This copy is done when the file is new or','line_number':322,'multiline':False]
['text':' has changed since last copy.','line_number':323,'multiline':False]
['text':' Get the commit hash','line_number':338,'multiline':False]
['text':' The module file will end up being placed in a subfolder with the git hash of the repo. This way we get the','line_number':341,'multiline':False]
['text':' benefit of versioning.','line_number':342,'multiline':False]
['text':' Make sure we also have every file with relative','line_number':350,'multiline':False]
['text':' Catch the name of the repo if it's specified in `class_reference`','line_number':478,'multiline':False]
['text':' And lastly we get the class inside our newly created module','line_number':487,'multiline':False]
['text':' Special handling for tokenizers','line_number':529,'multiline':False]
['text':' Fast tokenizer: we have the fast tokenizer class and we may have the slow one has an attribute.','line_number':534,'multiline':False]
['text':' Slow tokenizer: no way to have the fast class','line_number':542,'multiline':False]
['text':' Add object class to the config auto_map','line_number':556,'multiline':False]
['text':' Copy module file to the output folder.','line_number':564,'multiline':False]
['text':' Gather all relative imports recursively and make sure they are copied as well.','line_number':570,'multiline':False]
['text':' OS which does not support signal.SIGALRM','line_number':610,'multiline':False]
['text':' For the CI which puts the timeout at 0','line_number':617,'multiline':False]
