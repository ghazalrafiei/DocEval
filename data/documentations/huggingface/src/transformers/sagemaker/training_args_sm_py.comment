['text':' Copyright 2021 The HuggingFace Team. All rights reserved.','line_number':1,'multiline':False]
['text':'','line_number':2,'multiline':False]
['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':3,'multiline':False]
['text':' you may not use this file except in compliance with the License.','line_number':4,'multiline':False]
['text':' You may obtain a copy of the License at','line_number':5,'multiline':False]
['text':'','line_number':6,'multiline':False]
['text':'     http://www.apache.org/licenses/LICENSE-2.0','line_number':7,'multiline':False]
['text':'','line_number':8,'multiline':False]
['text':' Unless required by applicable law or agreed to in writing, software','line_number':9,'multiline':False]
['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':10,'multiline':False]
['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':11,'multiline':False]
['text':' See the License for the specific language governing permissions and','line_number':12,'multiline':False]
['text':' limitations under the License.','line_number':13,'multiline':False]
['text':' TODO: should be moved to `utils` after refactoring of SageMakerTrainer','line_number':29,'multiline':False]
['text':' Get the sagemaker specific mp parameters from smp_options variable.','line_number':33,'multiline':False]
['text':' Parse it and check the field "partitions" is included, it is required for model parallel.','line_number':36,'multiline':False]
['text':' Get the sagemaker specific framework parameters from mpi_options variable.','line_number':43,'multiline':False]
['text':' Parse it and check the field "sagemaker_distributed_dataparallel_enabled".','line_number':46,'multiline':False]
['text':' Lastly, check if the `smdistributed` module is present.','line_number':52,'multiline':False]
['text':' noqa: F401','line_number':93,'multiline':False]
['text':' if n_gpu is > 1 we'll use nn.DataParallel.','line_number':100,'multiline':False]
['text':' If you only want to use a specific subset of GPUs use `CUDA_VISIBLE_DEVICES=0`','line_number':101,'multiline':False]
['text':' Explicitly set CUDA to the first (index 0) CUDA device, otherwise `set_device` will','line_number':102,'multiline':False]
['text':' trigger an error that a device index is missing. Index 0 takes into account the','line_number':103,'multiline':False]
['text':' GPUs available in the environment, so `CUDA_VISIBLE_DEVICES=1,2` with `cuda:0`','line_number':104,'multiline':False]
['text':' will use the first GPU in that env, i.e. GPU#1','line_number':105,'multiline':False]
['text':' Sometimes the line in the postinit has not been run before we end up here, so just checking we're not at','line_number':107,'multiline':False]
['text':' the default value.','line_number':108,'multiline':False]
['text':' Here, we'll use torch.distributed.','line_number':111,'multiline':False]
['text':' Initializes the distributed backend which will take care of synchronizing nodes/GPUs','line_number':112,'multiline':False]
