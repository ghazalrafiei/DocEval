['text':'*
 * Compare obj1 and obj2 conditionally based on ignoredFields set
 * Ignore the field names which are passed in the ignoredFields.
 * optionally keyId will be use to prefix the keys mismatched
 *
 *
 * use utility boolean param breakAtFirstMismatch to print diff for
 * all the fields instead of breaking at first mismatch
 *
 * @param obj1
 * @param obj2
 * @param ignoredFields : filed names ex: title
 * @param ignoredKeys : json path for the filed ex: ".project.is_meta.title"
 * @param keyId : starts with ""
 * @param breakAtFirstMismatch : default true. returns false on first field mismatch
 * @returns
 ','line_number':1,'multiline':True]
['text':' If the objects are the same instance, they are equal','line_number':30,'multiline':False]
['text':' If one of the objects is null or not an object, they are not equal','line_number':35,'multiline':False]
['text':' return false;','line_number':39,'multiline':False]
['text':' If the objects have different numbers of properties, they are not equal','line_number':42,'multiline':False]
['text':' return false;','line_number':48,'multiline':False]
['text':' Recursively compare each property of the objects','line_number':51,'multiline':False]
['text':' temp hack to avoid fields like ','line_number':55,'multiline':True]
['text':' console.log(`${keyId} ignored in comparison`)','line_number':58,'multiline':False]
['text':' return false;','line_number':63,'multiline':False]
['text':' If all properties match, the objects are equal','line_number':68,'multiline':False]
