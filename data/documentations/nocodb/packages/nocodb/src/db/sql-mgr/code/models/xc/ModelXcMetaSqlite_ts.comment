['text':'*
   * @param dir
   * @param filename
   * @param ctx
   * @param ctx.tn
   * @param ctx.columns
   * @param ctx.relations
   ','line_number':4,'multiline':True]
['text':'*
   *  Prepare variables used in code template
   ','line_number':16,'multiline':True]
['text':' run of simple variable ','line_number':22,'multiline':True]
['text':' for complex code provide a func and args - do derivation within the func cbk ','line_number':26,'multiline':True]
['text':' for complex code provide a func and args - do derivation within the func cbk ','line_number':36,'multiline':True]
['text':' for complex code provide a func and args - do derivation within the func cbk ','line_number':46,'multiline':True]
['text':'*
   *
   * @param args
   * @param args.columns
   * @param args.relations
   * @returns {string}
   * @private
   ','line_number':67,'multiline':True]
['text':'
  public getXcColumnsObject(args): any {
    const columnsArr = [];

    for (const column of args.columns) {
      const columnObj = {
        validate: {
          func: [],
          args: [],
          msg: []
        },
        cn: column.cn,
        _cn: column._cn || column.cn,
        type: this._getAbstractType(column),
        dt: column.dt,
        uidt: column.uidt || this._getUIDataType(column),
        uip: column.uip,
        uicn: column.uicn,
        ...column
      };

      if (column.rqd) {
        columnObj.rqd = column.rqd;
      }

      if (column.cdf) {
        columnObj.default = column.cdf;
        columnObj.columnDefault = column.cdf;
      }

      if (column.un) {
        columnObj.un = column.un;
      }

      if (column.pk) {
        columnObj.pk = column.pk;
      }

      if (column.ai) {
        columnObj.ai = column.ai;
      }

      if (column.dtxp) {
        columnObj.dtxp = column.dtxp;
      }

      if (column.dtxs) {
        columnObj.dtxs = column.dtxs;
      }

      columnsArr.push(columnObj);
    }
    this.mapDefaultDisplayValue(columnsArr);
    return columnsArr;
  }
','line_number':455,'multiline':True]
['text':'  public getObject(): any {
    return {
      tn: this.ctx.tn,
      _tn: this.ctx._tn,
      columns: this.getXcColumnsObject(this.ctx),
      pks: [],
      hasMany: this.ctx.hasMany,
      belongsTo: this.ctx.belongsTo,
      dbType: this.ctx.dbType,
      type: this.ctx.type,
    }

  }','line_number':512,'multiline':True]
['text':' remove length value from datatype (for ex. varchar(45) => varchar)','line_number':562,'multiline':False]
