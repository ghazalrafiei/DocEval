['text':' todo: tobe fixed','line_number':19,'multiline':False]
['text':' xcCondition?','line_number':64,'multiline':False]
['text':' if (xcCondition) {','line_number':68,'multiline':False]
['text':'   query.condition(xcCondition);','line_number':69,'multiline':False]
['text':' }','line_number':70,'multiline':False]
['text':' console.log(query.toQuery())','line_number':93,'multiline':False]
['text':' using nanoid to avoid collision with existing ids when duplicating','line_number':238,'multiline':False]
['text':' private connection: XKnex;','line_number':295,'multiline':False]
['text':' todo: need to fix','line_number':296,'multiline':False]
['text':' constructor(app: Noco, config: NcConfig, trx = null) {','line_number':299,'multiline':False]
['text':'   super(app, config);','line_number':300,'multiline':False]
['text':'','line_number':301,'multiline':False]
['text':'   if (this.config?.meta?.db) {','line_number':302,'multiline':False]
['text':'     this.connection = trx || XKnex(this.config?.meta?.db);','line_number':303,'multiline':False]
['text':'   } else {','line_number':304,'multiline':False]
['text':'     let dbIndex = this.config.envs?.[this.config.workingEnv]?.db.findIndex(','line_number':305,'multiline':False]
['text':'       (c) => c.meta.dbAlias === this.config?.auth?.jwt?.dbAlias','line_number':306,'multiline':False]
['text':'     );','line_number':307,'multiline':False]
['text':'     dbIndex = dbIndex === -1 ? 0 : dbIndex;','line_number':308,'multiline':False]
['text':'     this.connection = XKnex(','line_number':309,'multiline':False]
['text':'       this.config.envs?.[this.config.workingEnv]?.db[dbIndex] as any','line_number':310,'multiline':False]
['text':'     );','line_number':311,'multiline':False]
['text':'   }','line_number':312,'multiline':False]
['text':'   this.trx = trx;','line_number':313,'multiline':False]
['text':'   NcConnectionMgr.setXcMeta(this);','line_number':314,'multiline':False]
['text':' }','line_number':315,'multiline':False]
['text':' public get knexConnection(): XKnex {','line_number':317,'multiline':False]
['text':'   return (this.trx || this.connection) as any;','line_number':318,'multiline':False]
['text':' }','line_number':319,'multiline':False]
['text':' public updateKnex(connectionConfig): void {','line_number':321,'multiline':False]
['text':'   this.connection = XKnex(connectionConfig);','line_number':322,'multiline':False]
['text':' }','line_number':323,'multiline':False]
['text':' public async metaInit(): Promise<boolean> {','line_number':325,'multiline':False]
['text':'   await this.connection.migrate.latest({','line_number':326,'multiline':False]
['text':'     migrationSource: new XcMigrationSource(),','line_number':327,'multiline':False]
['text':'     tableName: 'xc_knex_migrations',','line_number':328,'multiline':False]
['text':'   });','line_number':329,'multiline':False]
['text':'   await this.connection.migrate.latest({','line_number':330,'multiline':False]
['text':'     migrationSource: new XcMigrationSourcev2(),','line_number':331,'multiline':False]
['text':'     tableName: 'xc_knex_migrationsv2',','line_number':332,'multiline':False]
['text':'   });','line_number':333,'multiline':False]
['text':'   return true;','line_number':334,'multiline':False]
['text':' }','line_number':335,'multiline':False]
['text':'    if (dbAlias !== null && dbAlias !== undefined) {
      query.where('db_alias', dbAlias);
    }','line_number':448,'multiline':True]
['text':' await this.knexConnection..dropTableIfExists('nc_roles').;','line_number':591,'multiline':False]
['text':' await this.knexConnection.schema.dropTableIfExists('nc_store').;','line_number':592,'multiline':False]
['text':' await this.knexConnection.schema.dropTableIfExists('nc_hooks').;','line_number':593,'multiline':False]
['text':' await this.knexConnection.schema.dropTableIfExists('nc_cron').;','line_number':594,'multiline':False]
['text':' await this.knexConnection.schema.dropTableIfExists('nc_acl').;','line_number':595,'multiline':False]
['text':' todo: Extend transaction class to add our custom properties','line_number':631,'multiline':False]
['text':' todo: tobe done','line_number':637,'multiline':False]
['text':' const apiType: string = this.config?.envs?.[this.config.env || this.config.workingEnv]?.db.find(d => {','line_number':646,'multiline':False]
['text':'   return d.meta.dbAlias === dbAlias;','line_number':647,'multiline':False]
['text':' })?.meta?.api?.type;','line_number':648,'multiline':False]
['text':' if(config.envs._noco?.db?.[0]?.meta?.tn){','line_number':678,'multiline':False]
['text':'   config.envs._noco.db[0].meta.tn += `_${prefix}`','line_number':679,'multiline':False]
['text':' }','line_number':680,'multiline':False]
['text':' todo: tobe replaced - this.config?.auth?.jwt?.secret','line_number':689,'multiline':False]
['text':' todo: check base name used or not','line_number':692,'multiline':False]
['text':' todo','line_number':699,'multiline':False]
['text':' todo: tobe replaced - this.config?.auth?.jwt?.secret','line_number':717,'multiline':False]
['text':' todo: check base name used or not','line_number':720,'multiline':False]
['text':' todo: tobe replaced - this.config?.auth?.jwt?.secret','line_number':733,'multiline':False]
['text':' todo: tobe replaced - this.config?.auth?.jwt?.secret','line_number':790,'multiline':False]
['text':' todo: tobe replaced - this.config?.auth?.jwt?.secret','line_number':818,'multiline':False]
['text':' todo: tobe replaced - this.config?.auth?.jwt?.secret','line_number':833,'multiline':False]
