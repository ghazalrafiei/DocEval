['text':' todo:move enum and types','line_number':23,'multiline':False]
['text':' type: MetaDiffType;','line_number':57,'multiline':False]
['text':' if meta base then return empty array','line_number':136,'multiline':False]
['text':' @ts-ignore','line_number':144,'multiline':False]
['text':' @ts-ignore','line_number':156,'multiline':False]
['text':' @ts-ignore','line_number':165,'multiline':False]
['text':' new table','line_number':184,'multiline':False]
['text':' check for column change','line_number':214,'multiline':False]
['text':' new table','line_number':229,'multiline':False]
['text':' many to many relation','line_number':323,'multiline':False]
['text':' verify columns','line_number':355,'multiline':False]
['text':' todo: handle duplicate','line_number':420,'multiline':False]
['text':' views','line_number':476,'multiline':False]
['text':' @ts-ignore','line_number':477,'multiline':False]
['text':' @ts-ignore','line_number':495,'multiline':False]
['text':' new table','line_number':502,'multiline':False]
['text':' check for column change','line_number':532,'multiline':False]
['text':' new table','line_number':547,'multiline':False]
['text':' skip meta base','line_number':622,'multiline':False]
['text':' @ts-ignore','line_number':625,'multiline':False]
['text':' @ts-ignore','line_number':658,'multiline':False]
['text':' Get all relations ','line_number':662,'multiline':True]
['text':' const relations = (await sqlClient.relationListAll())?.data?.list;','line_number':663,'multiline':False]
['text':' reorder changes to apply relation remove changes','line_number':666,'multiline':False]
['text':' before column remove to avoid foreign key constraint error','line_number':667,'multiline':False]
['text':'todo: inflection','line_number':752,'multiline':False]
['text':' update old','line_number':756,'multiline':False]
['text':' populateParams.tableNames.push({ tn });','line_number':757,'multiline':False]
['text':' populateParams.oldMetas[tn] = oldMetas.find(m => m.tn === tn);','line_number':758,'multiline':False]
['text':' populate m2m relations','line_number':881,'multiline':False]
['text':' @ts-ignore','line_number':944,'multiline':False]
['text':' check if table is a Bridge table(or Associative Table) by checking','line_number':948,'multiline':False]
['text':' number of foreign keys and columns','line_number':949,'multiline':False]
['text':' todo: impl better method to identify m2m relation','line_number':961,'multiline':False]
['text':' check tableA already have the relation or not','line_number':973,'multiline':False]
['text':' mark has many relation associated with mm as system field in both table','line_number':1036,'multiline':False]
