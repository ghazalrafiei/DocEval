['text':'
htop - LinuxMachine.c
(C) 2014 Hisham H. Muhammad
Released under the GNU GPLv2+, see the COPYING file
in the source distribution for its full text.
','line_number':1,'multiline':True]
['text':' IWYU pragma: keep','line_number':8,'multiline':False]
['text':' needed for GNU/hurd to get PATH_MAX  // IWYU pragma: keep','line_number':33,'multiline':False]
['text':' declare for ancient glibc versions','line_number':40,'multiline':False]
['text':' Similar to get_nprocs_conf(3) / _SC_NPROCESSORS_CONF
 * https://sourceware.org/git/?p=glibc.git;a=blob;f=sysdeps/unix/sysv/linux/getsysstats.c;hb=HEAD
 ','line_number':43,'multiline':True]
['text':' Initialize the cpuData array before anything else.','line_number':50,'multiline':False]
['text':' average is always "online" ','line_number':53,'multiline':True]
['text':' readdir() iterates with no specific order ','line_number':89,'multiline':True]
['text':' aggregate ','line_number':92,'multiline':True]
['text':' average is always "online" ','line_number':93,'multiline':True]
['text':' If the file "online" does not exist or on failure count as active ','line_number':99,'multiline':True]
['text':' return if no CPU is found','line_number':112,'multiline':False]
['text':' When started with offline CPUs, libsensors does not monitor those,
    * even when they become online. ','line_number':117,'multiline':True]
['text':' Require a ";" after the macro use. ','line_number':157,'multiline':True]
['text':'
    * Compute memory partition like procps(free)
    *  https://gitlab.com/procps-ng/procps/-/blob/master/proc/sysinfo.c
    *
    * Adjustments:
    *  - Shmem in part of Cached (see https://lore.kernel.org/patchwork/patch/648763/),
    *    do not show twice by subtracting from Cached and do not subtract twice from used.
    ','line_number':197,'multiline':True]
['text':' Ignore all non-directories ','line_number':233,'multiline':True]
['text':' Require a ";" after the macro use. ','line_number':342,'multiline':True]
['text':' Require a ";" after the macro use. ','line_number':347,'multiline':True]
['text':' cpu fields are sorted first','line_number':419,'multiline':False]
['text':' Depending on your kernel version,','line_number':423,'multiline':False]
['text':' 5, 7, 8 or 9 of these fields will be set.','line_number':424,'multiline':False]
['text':' The rest will remain at zero.','line_number':425,'multiline':False]
['text':' Skipped an ID, but /proc/stat is ordered => got offline CPU','line_number':440,'multiline':False]
['text':' Guest time is already accounted in usertime','line_number':445,'multiline':False]
['text':' Fields existing on kernels >= 2.6','line_number':448,'multiline':False]
['text':' (and RHEL's patched kernel 2.4...)','line_number':449,'multiline':False]
['text':' Since we do a subtraction (usertime - guest) and cputime64_to_clock_t()','line_number':455,'multiline':False]
['text':' used in /proc/stat rounds down numbers, it can lead to a case where the','line_number':456,'multiline':False]
['text':' integer overflow.','line_number':457,'multiline':False]
['text':'
    * On some AMD and Intel CPUs read()ing scaling_cur_freq is quite slow (> 1ms). This delay
    * accumulates for every core. For details see issue#471.
    * If the read on CPU 0 takes longer than 500us bail out and fall back to reading the
    * frequencies from /proc/cpuinfo.
    * Once the condition has been met, bail out early for the next couple of scans.
    ','line_number':503,'multiline':True]
['text':' convert kHz to MHz ','line_number':534,'multiline':True]
['text':' do not override sysfs data ','line_number':589,'multiline':True]
['text':' Initialize page size','line_number':643,'multiline':False]
['text':' Initialize clock ticks','line_number':648,'multiline':False]
['text':' Read btime (the kernel boot time, as number of seconds since the epoch)','line_number':652,'multiline':False]
['text':' Initialize CPU count','line_number':674,'multiline':False]
