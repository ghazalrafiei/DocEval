['text':' The MIT License','line_number':1,'multiline':False]
['text':'','line_number':2,'multiline':False]
['text':' Copyright (c) 2008, by Attractive Chaos <attractor@live.co.uk>','line_number':3,'multiline':False]
['text':'','line_number':4,'multiline':False]
['text':' Permission is hereby granted, free of charge, to any person obtaining','line_number':5,'multiline':False]
['text':' a copy of this software and associated documentation files (the','line_number':6,'multiline':False]
['text':' "Software"), to deal in the Software without restriction, including','line_number':7,'multiline':False]
['text':' without limitation the rights to use, copy, modify, merge, publish,','line_number':8,'multiline':False]
['text':' distribute, sublicense, and/or sell copies of the Software, and to','line_number':9,'multiline':False]
['text':' permit persons to whom the Software is furnished to do so, subject to','line_number':10,'multiline':False]
['text':' the following conditions:','line_number':11,'multiline':False]
['text':'','line_number':12,'multiline':False]
['text':' The above copyright notice and this permission notice shall be','line_number':13,'multiline':False]
['text':' included in all copies or substantial portions of the Software.','line_number':14,'multiline':False]
['text':'','line_number':15,'multiline':False]
['text':' THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,','line_number':16,'multiline':False]
['text':' EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF','line_number':17,'multiline':False]
['text':' MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND','line_number':18,'multiline':False]
['text':' NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS','line_number':19,'multiline':False]
['text':' BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN','line_number':20,'multiline':False]
['text':' ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN','line_number':21,'multiline':False]
['text':' CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE','line_number':22,'multiline':False]
['text':' SOFTWARE.','line_number':23,'multiline':False]
['text':' An example:','line_number':25,'multiline':False]
['text':'','line_number':26,'multiline':False]
['text':'     #include "kvec.h"','line_number':27,'multiline':False]
['text':'     int main() {','line_number':28,'multiline':False]
['text':'       kvec_t(int) array = KV_INITIAL_VALUE;','line_number':29,'multiline':False]
['text':'       kv_push(array, 10); // append','line_number':30,'multiline':False]
['text':'       kv_a(array, 20) = 5; // dynamic','line_number':31,'multiline':False]
['text':'       kv_A(array, 20) = 4; // static','line_number':32,'multiline':False]
['text':'       kv_destroy(array);','line_number':33,'multiline':False]
['text':'       return 0;','line_number':34,'multiline':False]
['text':'     }','line_number':35,'multiline':False]
['text':'/ Drop last n items from kvec without resizing','line_number':73,'multiline':False]
['text':'/','line_number':74,'multiline':False]
['text':'/ Previously spelled as `(void)kv_pop(v)`, repeated n times.','line_number':75,'multiline':False]
['text':'/','line_number':76,'multiline':False]
['text':'/ @param[out]  v  Kvec to drop items from.','line_number':77,'multiline':False]
['text':'/ @param[in]  n  Number of elements to drop.','line_number':78,'multiline':False]
['text':'/ fit at least "len" more items','line_number':97,'multiline':False]
['text':'/ Type of a vector with a few first members allocated on stack','line_number':139,'multiline':False]
['text':'/','line_number':140,'multiline':False]
['text':'/ Is compatible with #kv_A, #kv_pop, #kv_size, #kv_max, #kv_last.','line_number':141,'multiline':False]
['text':'/ Is not compatible with #kv_resize, #kv_resize_full, #kv_copy, #kv_push,','line_number':142,'multiline':False]
['text':'/ #kv_pushp, #kv_a, #kv_destroy.','line_number':143,'multiline':False]
['text':'/','line_number':144,'multiline':False]
['text':'/ @param[in]  type  Type of vector elements.','line_number':145,'multiline':False]
['text':'/ @param[in]  init_size  Number of the elements in the initial array.','line_number':146,'multiline':False]
['text':'/ Initialize vector with preallocated array','line_number':155,'multiline':False]
['text':'/','line_number':156,'multiline':False]
['text':'/ @param[out]  v  Vector to initialize.','line_number':157,'multiline':False]
['text':'/ Move data to a new destination and free source','line_number':166,'multiline':False]
['text':'/ Resize vector with preallocated array','line_number':175,'multiline':False]
['text':'/','line_number':176,'multiline':False]
['text':'/ @note May not resize to an array smaller then init_array: if requested,','line_number':177,'multiline':False]
['text':'/       init_array will be used.','line_number':178,'multiline':False]
['text':'/','line_number':179,'multiline':False]
['text':'/ @param[out]  v  Vector to resize.','line_number':180,'multiline':False]
['text':'/ @param[in]  s  New size.','line_number':181,'multiline':False]
['text':'/ Resize vector with preallocated array when it is full','line_number':198,'multiline':False]
['text':'/','line_number':199,'multiline':False]
['text':'/ @param[out]  v  Vector to resize.','line_number':200,'multiline':False]
['text':' ARRAY_SIZE((v).init_array) is the minimal capacity of this vector. ','line_number':202,'multiline':True]
['text':' Thus when vector is full capacity may not be zero and it is safe ','line_number':203,'multiline':True]
['text':' not to bother with checking whether (v).capacity is 0. But now ','line_number':204,'multiline':True]
['text':' capacity is not guaranteed to have size that is a power of 2, it is ','line_number':205,'multiline':True]
['text':' hard to fix this here and is not very necessary if users will use ','line_number':206,'multiline':True]
['text':' 2^x initial array size. ','line_number':207,'multiline':True]
['text':'/ fit at least "len" more items','line_number':210,'multiline':False]
['text':'/ Get location where to store new element to a vector with preallocated array','line_number':220,'multiline':False]
['text':'/','line_number':221,'multiline':False]
['text':'/ @param[in,out]  v  Vector to push to.','line_number':222,'multiline':False]
['text':'/','line_number':223,'multiline':False]
['text':'/ @return Pointer to the place where new value should be stored.','line_number':224,'multiline':False]
['text':'/ Push value to a vector with preallocated array','line_number':229,'multiline':False]
['text':'/','line_number':230,'multiline':False]
['text':'/ @param[out]  v  Vector to push to.','line_number':231,'multiline':False]
['text':'/ @param[in]  x  Value to push.','line_number':232,'multiline':False]
['text':'/ Copy a vector to a preallocated vector','line_number':236,'multiline':False]
['text':'/','line_number':237,'multiline':False]
['text':'/ @param[out] v1 destination','line_number':238,'multiline':False]
['text':'/ @param[in] v0 source (can be either vector or preallocated vector)','line_number':239,'multiline':False]
['text':'/ Free array of elements of a vector with preallocated array if needed','line_number':249,'multiline':False]
['text':'/','line_number':250,'multiline':False]
['text':'/ @param[out]  v  Vector to free.','line_number':251,'multiline':False]
['text':' NVIM_LIB_KVEC_H','line_number':259,'multiline':False]
