['text':'
 * This module exports three classes, and each instance of those classes has its
 * own private registry for temporary reference storage(keeping state between
 * calls). A private registry makes managing memory much easier since all we
 * have to do is call luaL_unref passing the registry reference when the
 * instance is collected by the __gc metamethod.
 *
 * This private registry is manipulated with `lmpack_ref` / `lmpack_unref` /
 * `lmpack_geti`, which are analogous to `luaL_ref` / `luaL_unref` /
 * `lua_rawgeti` but operate on the private registry passed as argument.
 *
 * In order to simplify debug registry leaks during normal operation(with the
 * leak_test.lua script), these `lmpack_*` registry functions will target the
 * normal lua registry when MPACK_DEBUG_REGISTRY_LEAK is defined during
 * compilation.
 ','line_number':1,'multiline':True]
['text':' 
 * TODO(tarruda): When targeting lua 5.3 and being compiled with `long long`
 * support(not -ansi), we should make use of lua 64 bit integers for
 * representing msgpack integers, since `double` can't represent the full range.
 ','line_number':41,'multiline':True]
['text':' Taken from Lua5.1's lauxlib.h ','line_number':48,'multiline':True]
['text':' make a shallow copy of the table on stack and remove it after the copy is
 * done ','line_number':121,'multiline':True]
['text':' adapted from
 * https://github.com/antirez/lua-cmsgpack/blob/master/lua_cmsgpack.c ','line_number':201,'multiline':True]
['text':' count the number of keys and determine if it is an array ','line_number':224,'multiline':True]
['text':' pop value ','line_number':231,'multiline':True]
['text':' lua number ','line_number':233,'multiline':True]
['text':' greater than 0 ','line_number':234,'multiline':True]
['text':' and integer ','line_number':235,'multiline':True]
['text':' when len==0, the caller should guess the type!','line_number':240,'multiline':False]
['text':' msgpack spec doesn't allow lengths > 32 bits ','line_number':247,'multiline':True]
['text':' parse options ','line_number':281,'multiline':True]
['text':' check if there's a handler for this type ','line_number':353,'multiline':True]
['text':' stack:
           *
           * -1: ext unpacker function
           * -2: ext unpackers table 
           * -3: ext string 
           *
           * We want to call the ext unpacker function with the type and string
           * as arguments, so push those now
           ','line_number':357,'multiline':True]
['text':' stack:
           *
           * -1: returned object
           * -2: ext unpackers table
           * -3: ext string 
           ','line_number':369,'multiline':True]
['text':' the last lua_rawgeti should have pushed nil on the stack,
           * remove it ','line_number':377,'multiline':True]
['text':' pop the ext unpackers table ','line_number':381,'multiline':True]
['text':' [table, mtdict]','line_number':390,'multiline':False]
['text':' [table]','line_number':391,'multiline':False]
['text':' At this point the parsed object is on the stack. Add it to the parent
     * container. First put the container on the stack. ','line_number':400,'multiline':True]
['text':' Array, save the value on key equal to `parent->pos` ','line_number':405,'multiline':True]
['text':' save the key on the registry ','line_number':412,'multiline':True]
['text':' set the key/value pair ','line_number':416,'multiline':True]
['text':' pop the container/object ','line_number':423,'multiline':True]
['text':' if we hit EOF, return nil as the object ','line_number':488,'multiline':True]
['text':' also return the new position in the input string ','line_number':491,'multiline':True]
['text':' parse options ','line_number':526,'multiline':True]
['text':' get the parent ','line_number':571,'multiline':True]
['text':' strings are a special case, they are packed as single child chunk
       * node ','line_number':575,'multiline':True]
['text':' push the next index ','line_number':584,'multiline':True]
['text':' push the element ','line_number':586,'multiline':True]
['text':' push the previous key ','line_number':590,'multiline':True]
['text':' push the pair ','line_number':592,'multiline':True]
['text':' should not be here if the map was fully processed ','line_number':594,'multiline':True]
['text':' ignore unused warning ','line_number':595,'multiline':True]
['text':' release the current key ','line_number':597,'multiline':True]
['text':' push key to the top ','line_number':599,'multiline':True]
['text':' set the key for the next iteration, leaving value on top ','line_number':601,'multiline':True]
['text':' replace key by the value ','line_number':603,'multiline':True]
['text':' pop value ','line_number':606,'multiline':True]
['text':' remove parent, leaving only the object which will be serialized ','line_number':610,'multiline':True]
['text':' root object ','line_number':613,'multiline':True]
['text':' [table, metatable, mtdict]','line_number':646,'multiline':False]
['text':' [table, metatable];','line_number':648,'multiline':False]
['text':' check if there's a handler for this metatable ','line_number':651,'multiline':True]
['text':' stack:
           *
           * -1: ext packer function
           * -2: ext packers table
           * -3: metatable
           * -4: original object
           *
           * We want to call the ext packer function with the original object as
           * argument, so push it on the top
           ','line_number':657,'multiline':True]
['text':' handler should return type code and string ','line_number':668,'multiline':True]
['text':' stack: 
           *
           * -1: ext string
           * -2: ext type
           * -3: ext packers table
           * -4: metatable
           * -5: original table 
           *
           * We want to leave only the returned ext string, so
           * replace -5 with the string and pop 3
           ','line_number':679,'multiline':True]
['text':' done ','line_number':692,'multiline':True]
['text':' stack: 
           *
           * -1: ext packers table
           * -2: metatable
           * -3: original table 
           *
           * We want to leave only the original table and metatable since they
           * will be handled below, so pop 1
           ','line_number':694,'multiline':True]
['text':' [table]','line_number':708,'multiline':False]
['text':' check for cycles ','line_number':711,'multiline':True]
['text':' break out of cycles with NIL  ','line_number':716,'multiline':True]
['text':' save nil as the previous key to start iteration ','line_number':731,'multiline':True]
['text':' #define FMT ','line_number':744,'multiline':True]
['text':' release the object ','line_number':760,'multiline':True]
['text':' buffer empty, resize ','line_number':808,'multiline':True]
['text':' parse options ','line_number':839,'multiline':True]
['text':' In most cases the only sane thing to do when receiving invalid
       * msgpack-rpc is to close the connection, so handle all errors with
       * this generic message. Later may add more detailed information. ','line_number':945,'multiline':True]
['text':' ignore unused warning ','line_number':1011,'multiline':True]
['text':' ignore unused warning ','line_number':1029,'multiline':True]
['text':' initialize unpacker ','line_number':1053,'multiline':True]
['text':' initialize packer ','line_number':1096,'multiline':True]
['text':' buffer empty, resize ','line_number':1129,'multiline':True]
['text':' Unpacker ','line_number':1173,'multiline':True]
['text':' Packer ','line_number':1179,'multiline':True]
['text':' Session ','line_number':1185,'multiline':True]
['text':' NIL ','line_number':1191,'multiline':True]
['text':' Check if NIL is already stored in the registry ','line_number':1192,'multiline':True]
['text':' If it isn't, create it ','line_number':1194,'multiline':True]
['text':' Use a constant userdata to represent NIL ','line_number':1196,'multiline':True]
['text':' Create a metatable for NIL userdata ','line_number':1198,'multiline':True]
['text':' Assign the metatable to the userdata object ','line_number':1203,'multiline':True]
['text':' Save NIL on the registry so we can access it easily from other functions ','line_number':1205,'multiline':True]
['text':' module ','line_number':1211,'multiline':True]
['text':' save NIL on the module ','line_number':1214,'multiline':True]
