['text':' EXTERN is only defined in main.c. That's where global variables are','line_number':5,'multiline':False]
['text':' actually defined and initialized.','line_number':6,'multiline':False]
['text':'/ String with length','line_number':23,'multiline':False]
['text':'/','line_number':24,'multiline':False]
['text':'/ For use in functions which accept (char *s, size_t len) pair in arguments.','line_number':25,'multiline':False]
['text':'/','line_number':26,'multiline':False]
['text':'/ @param[in]  s  Static string.','line_number':27,'multiline':False]
['text':'/','line_number':28,'multiline':False]
['text':'/ @return `s, sizeof(s) - 1`','line_number':29,'multiline':False]
['text':'/ LINEEMPTY() - return true if the line is empty','line_number':32,'multiline':False]
['text':' toupper() and tolower() that use the current locale.','line_number':35,'multiline':False]
['text':' Careful: Only call TOUPPER_LOC() and TOLOWER_LOC() with a character in the','line_number':36,'multiline':False]
['text':' range 0 - 255.  toupper()/tolower() on some systems can't handle others.','line_number':37,'multiline':False]
['text':' Note: It is often better to use mb_tolower() and mb_toupper(), because many','line_number':38,'multiline':False]
['text':' toupper() and tolower() implementations only work for ASCII.','line_number':39,'multiline':False]
['text':' toupper() and tolower() for ASCII only and ignore the current locale.','line_number':43,'multiline':False]
['text':' Like isalpha() but reject non-ASCII characters.  Can't be used with a','line_number':47,'multiline':False]
['text':' special key (negative value).','line_number':48,'multiline':False]
['text':' Returns empty string if it is NULL.','line_number':54,'multiline':False]
['text':'/ Adjust chars in a language according to 'langmap' option.','line_number':57,'multiline':False]
['text':'/ NOTE that there is no noticeable overhead if 'langmap' is not set.','line_number':58,'multiline':False]
['text':'/ When set the overhead for characters < 256 is small.','line_number':59,'multiline':False]
['text':'/ Don't apply 'langmap' if the character comes from the Stuff buffer or from a','line_number':60,'multiline':False]
['text':'/ mapping and the langnoremap option was set.','line_number':61,'multiline':False]
['text':'/ The do-while is just to ignore a ';' after the macro.','line_number':62,'multiline':False]
['text':' no CR-LF translation','line_number':78,'multiline':False]
['text':' MB_PTR_ADV(): advance a pointer to the next character, taking care of','line_number':84,'multiline':False]
['text':' multi-byte characters if needed. Skip over composing chars.','line_number':85,'multiline':False]
['text':' Advance multi-byte pointer, do not skip over composing chars.','line_number':88,'multiline':False]
['text':' MB_PTR_BACK(): backup a pointer to the previous character, taking care of','line_number':91,'multiline':False]
['text':' multi-byte characters if needed. Only use with "p" > "s" !','line_number':92,'multiline':False]
['text':' MB_CHAR2BYTES(): convert character to bytes and advance pointer to bytes','line_number':96,'multiline':False]
['text':'/ Calculate the length of a C array','line_number':105,'multiline':False]
['text':'/','line_number':106,'multiline':False]
['text':'/ This should be called with a real array. Calling this with a pointer is an','line_number':107,'multiline':False]
['text':'/ error. A mechanism to detect many (though not all) of those errors at','line_number':108,'multiline':False]
['text':'/ compile time is implemented. It works by the second division producing','line_number':109,'multiline':False]
['text':'/ a division by zero in those cases (-Wdiv-by-zero in GCC).','line_number':110,'multiline':False]
['text':'/ Get last array entry','line_number':115,'multiline':False]
['text':'/','line_number':116,'multiline':False]
['text':'/ This should be called with a real array. Calling this with a pointer is an','line_number':117,'multiline':False]
['text':'/ error.','line_number':118,'multiline':False]
['text':' Duplicated in os/win_defs.h to avoid include-order sensitivity.','line_number':121,'multiline':False]
['text':' Starting in Clang 3.6, __has_attribute was fixed to only report true for','line_number':137,'multiline':False]
['text':' GNU-style attributes.  Prior to that, it reported true if _any_ backend','line_number':138,'multiline':False]
['text':' supported the attribute.','line_number':139,'multiline':False]
['text':' Type of uv_buf_t.len is platform-dependent.','line_number':160,'multiline':False]
['text':' Related: https://github.com/libuv/libuv/pull/1236','line_number':161,'multiline':False]
['text':' Type of read()/write() `count` param is platform-dependent.','line_number':168,'multiline':False]
['text':'/','line_number':175,'multiline':False]
['text':'/ PRAGMA_DIAG_PUSH_IGNORE_MISSING_PROTOTYPES','line_number':176,'multiline':False]
['text':'/','line_number':177,'multiline':False]
