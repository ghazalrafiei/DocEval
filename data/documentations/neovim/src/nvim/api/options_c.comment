['text':' hidden or unknown option','line_number':85,'multiline':False]
['text':' if 'buf' or 'win' is passed, make sure the option supports it','line_number':88,'multiline':False]
['text':'/ Create a dummy buffer and run the FileType autocmd on it.','line_number':105,'multiline':False]
['text':' Allocate a buffer without putting it in the buffer list.','line_number':112,'multiline':False]
['text':' Set curwin/curbuf to buf and save a few things.','line_number':119,'multiline':False]
['text':' 'nomodeline'','line_number':126,'multiline':False]
['text':'/ Gets the value of an option. The behavior of this function matches that of','line_number':135,'multiline':False]
['text':'/ |:set|: the local value of an option is returned if it exists; otherwise,','line_number':136,'multiline':False]
['text':'/ the global value is returned. Local values always correspond to the current','line_number':137,'multiline':False]
['text':'/ buffer or window, unless "buf" or "win" is set in {opts}.','line_number':138,'multiline':False]
['text':'/','line_number':139,'multiline':False]
['text':'/ @param name      Option name','line_number':140,'multiline':False]
['text':'/ @param opts      Optional parameters','line_number':141,'multiline':False]
['text':'/                  - scope: One of "global" or "local". Analogous to','line_number':142,'multiline':False]
['text':'/                  |:setglobal| and |:setlocal|, respectively.','line_number':143,'multiline':False]
['text':'/                  - win: |window-ID|. Used for getting window local options.','line_number':144,'multiline':False]
['text':'/                  - buf: Buffer number. Used for getting buffer local options.','line_number':145,'multiline':False]
['text':'/                         Implies {scope} is "local".','line_number':146,'multiline':False]
['text':'/                  - filetype: |filetype|. Used to get the default option for a','line_number':147,'multiline':False]
['text':'/                    specific filetype. Cannot be used with any other option.','line_number':148,'multiline':False]
['text':'/                    Note: this will trigger |ftplugin| and all |FileType|','line_number':149,'multiline':False]
['text':'/                    autocommands for the corresponding filetype.','line_number':150,'multiline':False]
['text':'/ @param[out] err  Error details, if any','line_number':151,'multiline':False]
['text':'/ @return          Option value','line_number':152,'multiline':False]
['text':' restore curwin/curbuf and a few other things','line_number':183,'multiline':False]
['text':' safety check','line_number':186,'multiline':False]
['text':'/ Sets the value of an option. The behavior of this function matches that of','line_number':204,'multiline':False]
['text':'/ |:set|: for global-local options, both the global and local value are set','line_number':205,'multiline':False]
['text':'/ unless otherwise specified with {scope}.','line_number':206,'multiline':False]
['text':'/','line_number':207,'multiline':False]
['text':'/ Note the options {win} and {buf} cannot be used together.','line_number':208,'multiline':False]
['text':'/','line_number':209,'multiline':False]
['text':'/ @param name      Option name','line_number':210,'multiline':False]
['text':'/ @param value     New option value','line_number':211,'multiline':False]
['text':'/ @param opts      Optional parameters','line_number':212,'multiline':False]
['text':'/                  - scope: One of "global" or "local". Analogous to','line_number':213,'multiline':False]
['text':'/                  |:setglobal| and |:setlocal|, respectively.','line_number':214,'multiline':False]
['text':'/                  - win: |window-ID|. Used for setting window local option.','line_number':215,'multiline':False]
['text':'/                  - buf: Buffer number. Used for setting buffer local option.','line_number':216,'multiline':False]
['text':'/ @param[out] err  Error details, if any','line_number':217,'multiline':False]
['text':' If:','line_number':230,'multiline':False]
['text':' - window id is provided','line_number':231,'multiline':False]
['text':' - scope is not provided','line_number':232,'multiline':False]
['text':' - option is global or local to window (global-local)','line_number':233,'multiline':False]
['text':'','line_number':234,'multiline':False]
['text':' Then force scope to local since we don't want to change the global option','line_number':235,'multiline':False]
['text':' Handle invalid option value type.','line_number':246,'multiline':False]
['text':' Don't use `name` in the error message here, because `name` can be any String.','line_number':247,'multiline':False]
['text':' No need to check if value type actually matches the types for the option, as set_option_value()','line_number':248,'multiline':False]
['text':' already handles that.','line_number':249,'multiline':False]
['text':'/ Gets the option information for all options.','line_number':259,'multiline':False]
['text':'/','line_number':260,'multiline':False]
['text':'/ The dictionary has the full option names as keys and option metadata','line_number':261,'multiline':False]
['text':'/ dictionaries as detailed at |nvim_get_option_info2()|.','line_number':262,'multiline':False]
['text':'/','line_number':263,'multiline':False]
['text':'/ @see |nvim_get_commands()|','line_number':264,'multiline':False]
['text':'/','line_number':265,'multiline':False]
['text':'/ @return dictionary of all options','line_number':266,'multiline':False]
['text':'/ Gets the option information for one option from arbitrary buffer or window','line_number':273,'multiline':False]
['text':'/','line_number':274,'multiline':False]
['text':'/ Resulting dictionary has keys:','line_number':275,'multiline':False]
['text':'/     - name: Name of the option (like 'filetype')','line_number':276,'multiline':False]
['text':'/     - shortname: Shortened name of the option (like 'ft')','line_number':277,'multiline':False]
['text':'/     - type: type of option ("string", "number" or "boolean")','line_number':278,'multiline':False]
['text':'/     - default: The default value for the option','line_number':279,'multiline':False]
['text':'/     - was_set: Whether the option was set.','line_number':280,'multiline':False]
['text':'/','line_number':281,'multiline':False]
['text':'/     - last_set_sid: Last set script id (if any)','line_number':282,'multiline':False]
['text':'/     - last_set_linenr: line number where option was set','line_number':283,'multiline':False]
['text':'/     - last_set_chan: Channel where option was set (0 for local)','line_number':284,'multiline':False]
['text':'/','line_number':285,'multiline':False]
['text':'/     - scope: one of "global", "win", or "buf"','line_number':286,'multiline':False]
['text':'/     - global_local: whether win or buf option has a global value','line_number':287,'multiline':False]
['text':'/','line_number':288,'multiline':False]
['text':'/     - commalist: List of comma separated values','line_number':289,'multiline':False]
['text':'/     - flaglist: List of single char flags','line_number':290,'multiline':False]
['text':'/','line_number':291,'multiline':False]
['text':'/ When {scope} is not provided, the last set information applies to the local','line_number':292,'multiline':False]
['text':'/ value in the current buffer or window if it is available, otherwise the','line_number':293,'multiline':False]
['text':'/ global value information is returned. This behavior can be disabled by','line_number':294,'multiline':False]
['text':'/ explicitly specifying {scope} in the {opts} table.','line_number':295,'multiline':False]
['text':'/','line_number':296,'multiline':False]
['text':'/ @param name      Option name','line_number':297,'multiline':False]
['text':'/ @param opts      Optional parameters','line_number':298,'multiline':False]
['text':'/                  - scope: One of "global" or "local". Analogous to','line_number':299,'multiline':False]
['text':'/                  |:setglobal| and |:setlocal|, respectively.','line_number':300,'multiline':False]
['text':'/                  - win: |window-ID|. Used for getting window local options.','line_number':301,'multiline':False]
['text':'/                  - buf: Buffer number. Used for getting buffer local options.','line_number':302,'multiline':False]
['text':'/                         Implies {scope} is "local".','line_number':303,'multiline':False]
['text':'/ @param[out] err Error details, if any','line_number':304,'multiline':False]
['text':'/ @return         Option Information','line_number':305,'multiline':False]
['text':'/ Switch current context to get/set option value for window/buffer.','line_number':324,'multiline':False]
['text':'/','line_number':325,'multiline':False]
['text':'/ @param[out]  ctx        Current context. switchwin_T for window and aco_save_T for buffer.','line_number':326,'multiline':False]
['text':'/ @param       req_scope  Requested option scope. See OptReqScope in option.h.','line_number':327,'multiline':False]
['text':'/ @param[in]   from       Target buffer/window.','line_number':328,'multiline':False]
['text':'/ @param[out]  err        Error message, if any.','line_number':329,'multiline':False]
['text':'/','line_number':330,'multiline':False]
['text':'/ @return  true if context was switched, false otherwise.','line_number':331,'multiline':False]
['text':'/ Restore context after getting/setting option for window/buffer. See switch_option_context() for','line_number':372,'multiline':False]
['text':'/ params.','line_number':373,'multiline':False]
['text':'/ Get attributes for an option.','line_number':388,'multiline':False]
['text':'/','line_number':389,'multiline':False]
['text':'/ @param  opt_idx  Option index in options[] table.','line_number':390,'multiline':False]
['text':'/','line_number':391,'multiline':False]
['text':'/ @return  Option attributes.','line_number':392,'multiline':False]
['text':'/          0 for hidden or unknown option.','line_number':393,'multiline':False]
['text':'/          See SOPT_* in option_defs.h for other flags.','line_number':394,'multiline':False]
['text':' Hidden option','line_number':403,'multiline':False]
['text':'/ Check if option has a value in the requested scope.','line_number':422,'multiline':False]
['text':'/','line_number':423,'multiline':False]
['text':'/ @param  opt_idx    Option index in options[] table.','line_number':424,'multiline':False]
['text':'/ @param  req_scope  Requested option scope. See OptReqScope in option.h.','line_number':425,'multiline':False]
['text':'/','line_number':426,'multiline':False]
['text':'/ @return  true if option has a value in the requested scope, false otherwise.','line_number':427,'multiline':False]
['text':' Hidden option.','line_number':436,'multiline':False]
['text':' TTY option.','line_number':440,'multiline':False]
['text':'/ Get the option value in the requested scope.','line_number':456,'multiline':False]
['text':'/','line_number':457,'multiline':False]
['text':'/ @param       opt_idx    Option index in options[] table.','line_number':458,'multiline':False]
['text':'/ @param       req_scope  Requested option scope. See OptReqScope in option.h.','line_number':459,'multiline':False]
['text':'/ @param[in]   from       Pointer to buffer or window for local option value.','line_number':460,'multiline':False]
['text':'/ @param[out]  err        Error message, if any.','line_number':461,'multiline':False]
['text':'/','line_number':462,'multiline':False]
['text':'/ @return  Option value in the requested scope. Returns a Nil option value if option is not found,','line_number':463,'multiline':False]
['text':'/ hidden or if it isn't present in the requested scope. (i.e. has no global, window-local or','line_number':464,'multiline':False]
['text':'/ buffer-local value depending on opt_scope).','line_number':465,'multiline':False]
['text':'/ Get option value for buffer / window.','line_number':492,'multiline':False]
['text':'/','line_number':493,'multiline':False]
['text':'/ @param       opt_idx    Option index in options[] table.','line_number':494,'multiline':False]
['text':'/ @param[out]  flagsp     Set to the option flags (P_xxxx) (if not NULL).','line_number':495,'multiline':False]
['text':'/ @param[in]   scope      Option scope (can be OPT_LOCAL, OPT_GLOBAL or a combination).','line_number':496,'multiline':False]
['text':'/ @param[out]  hidden     Whether option is hidden.','line_number':497,'multiline':False]
['text':'/ @param       req_scope  Requested option scope. See OptReqScope in option.h.','line_number':498,'multiline':False]
['text':'/ @param[in]   from       Target buffer/window.','line_number':499,'multiline':False]
['text':'/ @param[out]  err        Error message, if any.','line_number':500,'multiline':False]
['text':'/','line_number':501,'multiline':False]
['text':'/ @return  Option value. Must be freed by caller.','line_number':502,'multiline':False]
['text':'/ Set option value for buffer / window.','line_number':525,'multiline':False]
['text':'/','line_number':526,'multiline':False]
['text':'/ @param       name        Option name.','line_number':527,'multiline':False]
['text':'/ @param       opt_idx     Option index in options[] table.','line_number':528,'multiline':False]
['text':'/ @param[in]   value       Option value.','line_number':529,'multiline':False]
['text':'/ @param[in]   opt_flags   Flags: OPT_LOCAL, OPT_GLOBAL, or 0 (both).','line_number':530,'multiline':False]
['text':'/ @param       req_scope   Requested option scope. See OptReqScope in option.h.','line_number':531,'multiline':False]
['text':'/ @param[in]   from        Target buffer/window.','line_number':532,'multiline':False]
['text':'/ @param[out]  err         Error message, if any.','line_number':533,'multiline':False]
