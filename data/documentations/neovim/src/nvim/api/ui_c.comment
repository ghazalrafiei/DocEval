['text':' IWYU pragma: export','line_number':38,'multiline':False]
['text':'/ Wait until ui has connected on stdio channel if only_stdio','line_number':140,'multiline':False]
['text':'/ is true, otherwise any channel.','line_number':141,'multiline':False]
['text':' this function should only be called in --embed mode, stdio channel','line_number':147,'multiline':False]
['text':' can be assumed.','line_number':148,'multiline':False]
['text':'/ Activates UI events on the channel.','line_number':160,'multiline':False]
['text':'/','line_number':161,'multiline':False]
['text':'/ Entry point of all UI clients.  Allows |\-\-embed| to continue startup.','line_number':162,'multiline':False]
['text':'/ Implies that the client is ready to show the UI.  Adds the client to the','line_number':163,'multiline':False]
['text':'/ list of UIs. |nvim_list_uis()|','line_number':164,'multiline':False]
['text':'/','line_number':165,'multiline':False]
['text':'/ @note If multiple UI clients are attached, the global screen dimensions','line_number':166,'multiline':False]
['text':'/       degrade to the smallest client. E.g. if client A requests 80x40 but','line_number':167,'multiline':False]
['text':'/       client B requests 200x100, the global screen has size 80x40.','line_number':168,'multiline':False]
['text':'/','line_number':169,'multiline':False]
['text':'/ @param channel_id','line_number':170,'multiline':False]
['text':'/ @param width  Requested screen columns','line_number':171,'multiline':False]
['text':'/ @param height  Requested screen rows','line_number':172,'multiline':False]
['text':'/ @param options  |ui-option| map','line_number':173,'multiline':False]
['text':'/ @param[out] err Error details, if any','line_number':174,'multiline':False]
['text':' This uses attribute indices, so ext_linegrid is needed.','line_number':211,'multiline':False]
['text':' Cmdline uses the messages area, so it should be externalized too.','line_number':213,'multiline':False]
['text':'/ @deprecated','line_number':240,'multiline':False]
['text':'/ Tells the nvim server if focus was gained or lost by the GUI','line_number':250,'multiline':False]
['text':'/ Deactivates UI events on the channel.','line_number':267,'multiline':False]
['text':'/','line_number':268,'multiline':False]
['text':'/ Removes the client from the list of UIs. |nvim_list_uis()|','line_number':269,'multiline':False]
['text':'/','line_number':270,'multiline':False]
['text':'/ @param channel_id','line_number':271,'multiline':False]
['text':'/ @param[out] err Error details, if any','line_number':272,'multiline':False]
['text':' TODO(bfredl): use me to detach a specific ui from the server','line_number':284,'multiline':False]
['text':' A little drastic, but only takes effect for legacy uis. For linegrid UI','line_number':338,'multiline':False]
['text':' only changes metadata for nvim_list_uis(), no refresh needed.','line_number':339,'multiline':False]
['text':' LEGACY: Deprecated option, use `ext_cmdline` instead.','line_number':397,'multiline':False]
['text':' There shouldn't be a reason for a UI to do this ever','line_number':409,'multiline':False]
['text':' so explicitly don't support this.','line_number':410,'multiline':False]
['text':'/ Tell Nvim to resize a grid. Triggers a grid_resize event with the requested','line_number':424,'multiline':False]
['text':'/ grid size or the maximum size if it exceeds size limits.','line_number':425,'multiline':False]
['text':'/','line_number':426,'multiline':False]
['text':'/ On invalid grid handle, fails with error.','line_number':427,'multiline':False]
['text':'/','line_number':428,'multiline':False]
['text':'/ @param channel_id','line_number':429,'multiline':False]
['text':'/ @param grid    The handle of the grid to be changed.','line_number':430,'multiline':False]
['text':'/ @param width   The new requested width.','line_number':431,'multiline':False]
['text':'/ @param height  The new requested height.','line_number':432,'multiline':False]
['text':'/ @param[out] err Error details, if any','line_number':433,'multiline':False]
['text':'/ Tells Nvim the number of elements displaying in the popupmenu, to decide','line_number':451,'multiline':False]
['text':'/ <PageUp> and <PageDown> movement.','line_number':452,'multiline':False]
['text':'/','line_number':453,'multiline':False]
['text':'/ @param channel_id','line_number':454,'multiline':False]
['text':'/ @param height  Popupmenu height, must be greater than zero.','line_number':455,'multiline':False]
['text':'/ @param[out] err Error details, if any','line_number':456,'multiline':False]
['text':'/ Tells Nvim the geometry of the popupmenu, to align floating windows with an','line_number':481,'multiline':False]
['text':'/ external popup menu.','line_number':482,'multiline':False]
['text':'/','line_number':483,'multiline':False]
['text':'/ Note that this method is not to be confused with |nvim_ui_pum_set_height()|,','line_number':484,'multiline':False]
['text':'/ which sets the number of visible items in the popup menu, while this','line_number':485,'multiline':False]
['text':'/ function sets the bounding box of the popup menu, including visual','line_number':486,'multiline':False]
['text':'/ elements such as borders and sliders. Floats need not use the same font','line_number':487,'multiline':False]
['text':'/ size, nor be anchored to exact grid corners, so one can set floating-point','line_number':488,'multiline':False]
['text':'/ numbers to the popup menu geometry.','line_number':489,'multiline':False]
['text':'/','line_number':490,'multiline':False]
['text':'/ @param channel_id','line_number':491,'multiline':False]
['text':'/ @param width   Popupmenu width.','line_number':492,'multiline':False]
['text':'/ @param height  Popupmenu height.','line_number':493,'multiline':False]
['text':'/ @param row     Popupmenu row.','line_number':494,'multiline':False]
['text':'/ @param col     Popupmenu height.','line_number':495,'multiline':False]
['text':'/ @param[out] err Error details, if any.','line_number':496,'multiline':False]
['text':'/ Tells Nvim when a terminal event has occurred','line_number':529,'multiline':False]
['text':'/','line_number':530,'multiline':False]
['text':'/ The following terminal events are supported:','line_number':531,'multiline':False]
['text':'/','line_number':532,'multiline':False]
['text':'/   - "termresponse": The terminal sent an OSC or DCS response sequence to','line_number':533,'multiline':False]
['text':'/                     Nvim. The payload is the received response. Sets','line_number':534,'multiline':False]
['text':'/                     |v:termresponse| and fires |TermResponse|.','line_number':535,'multiline':False]
['text':'/','line_number':536,'multiline':False]
['text':'/ @param channel_id','line_number':537,'multiline':False]
['text':'/ @param event Event name','line_number':538,'multiline':False]
['text':'/ @param payload Event payload','line_number':539,'multiline':False]
['text':'/ @param[out] err Error details, if any.','line_number':540,'multiline':False]
['text':' [2, "redraw", [...]]','line_number':565,'multiline':False]
['text':' To optimize data transfer(especially for "grid_line"), we bundle adjacent','line_number':600,'multiline':False]
['text':' calls to same method together, so only add a new call entry if the last','line_number':601,'multiline':False]
['text':' method call is different from "name"','line_number':602,'multiline':False]
['text':'/ Pushes data into UI.UIData, to be consumed later by remote_ui_flush().','line_number':618,'multiline':False]
['text':' TODO(bfredl): manually testable by setting UI_BUF_SIZE to 1024 (mode_info_set)','line_number':643,'multiline':False]
['text':' force cursor update','line_number':690,'multiline':False]
['text':' some clients have "clear" being affected by scroll region,','line_number':724,'multiline':False]
['text':' so reset it.','line_number':725,'multiline':False]
['text':' Deprecated','line_number':750,'multiline':False]
['text':'/ "true" cursor used only for input focus','line_number':807,'multiline':False]
['text':'/ emulated cursor used both for drawing and for input focus','line_number':825,'multiline':False]
['text':' close to overflowing the redraw buffer. finish this event,','line_number':874,'multiline':False]
['text':' flush, and start a new "grid_line" event at the current position.','line_number':875,'multiline':False]
['text':' For simplicity leave place for the final "clear" element','line_number':876,'multiline':False]
['text':' as well, hence the factor of 2 in the check.','line_number':877,'multiline':False]
['text':' We only ever set the wrap field on the final "grid_line" event for the line.','line_number':880,'multiline':False]
['text':' If the last chunk was all spaces, add a clearing chunk even if there are','line_number':912,'multiline':False]
['text':' no more cells to clear, so there is no ambiguity about what to clear.','line_number':913,'multiline':False]
['text':' pass off cells to UI to let it start processing them','line_number':926,'multiline':False]
['text':' force cursor update','line_number':937,'multiline':False]
['text':' legacy eol_clear was only ever used with cleared attributes','line_number':943,'multiline':False]
['text':' so be on the safe side','line_number':944,'multiline':False]
['text':'/ Flush the internal packing buffer to the client.','line_number':957,'multiline':False]
['text':'/','line_number':958,'multiline':False]
['text':'/ This might happen multiple times before the actual ui_flush, if the','line_number':959,'multiline':False]
['text':'/ total redraw size is large!','line_number':960,'multiline':False]
['text':' TODO(bfredl): elide copy by a length one free-list like the arena','line_number':974,'multiline':False]
['text':' we have sent events to the client, but possibly not yet the final "flush"','line_number':979,'multiline':False]
['text':' event.','line_number':980,'multiline':False]
['text':'/ An intentional flush (vsync) when Nvim is finished redrawing the screen','line_number':986,'multiline':False]
['text':'/','line_number':987,'multiline':False]
['text':'/ Clients can know this happened by a final "flush" event at the end of the','line_number':988,'multiline':False]
['text':'/ "redraw" batch.','line_number':989,'multiline':False]
['text':' the representation of highlights in cmdline changed, translate back','line_number':1040,'multiline':False]
['text':' never consumes args','line_number':1041,'multiline':False]
['text':' Back-compat: translate popupmenu_xx to legacy wildmenu_xx.','line_number':1063,'multiline':False]
