['text':'','line_number':1,'multiline':False]
['text':' buffer.c: functions for dealing with the buffer structure','line_number':2,'multiline':False]
['text':'','line_number':3,'multiline':False]
['text':'','line_number':5,'multiline':False]
['text':' The buffer list is a double linked list of all buffers.','line_number':6,'multiline':False]
['text':' Each buffer can be in one of these states:','line_number':7,'multiline':False]
['text':' never loaded: BF_NEVERLOADED is set, only the file name is valid','line_number':8,'multiline':False]
['text':'   not loaded: b_ml.ml_mfp == NULL, no memfile allocated','line_number':9,'multiline':False]
['text':'       hidden: b_nwindows == 0, loaded but not displayed in a window','line_number':10,'multiline':False]
['text':'       normal: loaded and displayed in a window','line_number':11,'multiline':False]
['text':'','line_number':12,'multiline':False]
['text':' Instead of storing file names all over the place, each file name is','line_number':13,'multiline':False]
['text':' stored in the buffer list. It can be referenced by a number.','line_number':14,'multiline':False]
['text':'','line_number':15,'multiline':False]
['text':' The current implementation remembers all file names ever used.','line_number':16,'multiline':False]
['text':'','line_number':17,'multiline':False]
['text':' Number of times free_buffer() was called.','line_number':115,'multiline':False]
['text':'/< highest file number','line_number':118,'multiline':False]
['text':'/ @return  the highest possible buffer number','line_number':125,'multiline':False]
['text':'/ Read data from buffer for retrying.','line_number':131,'multiline':False]
['text':'/','line_number':132,'multiline':False]
['text':'/ @param read_stdin  read file from stdin, otherwise fifo','line_number':133,'multiline':False]
['text':'/ @param eap  for forced 'ff' and 'fenc' or NULL','line_number':134,'multiline':False]
['text':'/ @param flags  extra flags for readfile()','line_number':135,'multiline':False]
['text':' Read from the buffer which the text is already filled in and append at','line_number':141,'multiline':False]
['text':' the end.  This makes it possible to retry when 'fileformat' or','line_number':142,'multiline':False]
['text':' 'fileencoding' was guessed wrong.','line_number':143,'multiline':False]
['text':' Delete the binary lines.','line_number':150,'multiline':False]
['text':' Delete the converted lines.','line_number':155,'multiline':False]
['text':' Put the cursor on the first line.','line_number':160,'multiline':False]
['text':' Set or reset 'modified' before executing autocommands, so that','line_number':165,'multiline':False]
['text':' it can be changed there.','line_number':166,'multiline':False]
['text':'/ Ensure buffer "buf" is loaded.','line_number':179,'multiline':False]
['text':' already open (common case)','line_number':183,'multiline':False]
['text':' Make sure the buffer is in a window.','line_number':189,'multiline':False]
['text':' status can be OK or NOTDONE (which also means ok/done)','line_number':191,'multiline':False]
['text':'/ Open current buffer, that is: open the memfile and read the file into','line_number':197,'multiline':False]
['text':'/ memory.','line_number':198,'multiline':False]
['text':'/','line_number':199,'multiline':False]
['text':'/ @param read_stdin  read file from stdin','line_number':200,'multiline':False]
['text':'/ @param eap  for forced 'ff' and 'fenc' or NULL','line_number':201,'multiline':False]
['text':'/ @param flags_arg  extra flags for readfile()','line_number':202,'multiline':False]
['text':'/','line_number':203,'multiline':False]
['text':'/ @return  FAIL for failure, OK otherwise.','line_number':204,'multiline':False]
['text':' The 'readonly' flag is only set when BF_NEVERLOADED is being reset.','line_number':214,'multiline':False]
['text':' When re-entering the same buffer, it should not change, because the','line_number':215,'multiline':False]
['text':' user may have reset the flag by hand.','line_number':216,'multiline':False]
['text':' There MUST be a memfile, otherwise we can't do anything','line_number':223,'multiline':False]
['text':' If we can't create one for the current buffer, take another buffer','line_number':224,'multiline':False]
['text':' If there is no memfile at all, exit.','line_number':235,'multiline':False]
['text':' This is OK, since there are no changes to lose.','line_number':236,'multiline':False]
['text':' Don't try to do any saving, with "curbuf" NULL almost nothing','line_number':240,'multiline':False]
['text':' will work.','line_number':241,'multiline':False]
['text':' Do not sync this buffer yet, may first want to read the file.','line_number':254,'multiline':False]
['text':' The autocommands in readfile() may change the buffer, but only AFTER','line_number':259,'multiline':False]
['text':' reading the file.','line_number':260,'multiline':False]
['text':' mark cursor position as being invalid','line_number':264,'multiline':False]
['text':' A buffer without an actual file should not use the buffer name to read a','line_number':267,'multiline':False]
['text':' file.','line_number':268,'multiline':False]
['text':' Read the file if there is one.','line_number':273,'multiline':False]
['text':' NOLINT(whitespace/parens)','line_number':286,'multiline':False]
['text':' Help buffer is filtered.','line_number':306,'multiline':False]
['text':' First read the text in binary mode into the buffer.','line_number':313,'multiline':False]
['text':' Then read from that same buffer and append at the end.  This makes','line_number':314,'multiline':False]
['text':' it possible to retry when 'fileformat' or 'fileencoding' was','line_number':315,'multiline':False]
['text':' guessed wrong.','line_number':316,'multiline':False]
['text':' Can now sync this buffer in ml_sync_all().','line_number':327,'multiline':False]
['text':' if first time loading this buffer, init b_chartab[]','line_number':333,'multiline':False]
['text':' Set/reset the Changed flag first, autocmds may change the buffer.','line_number':339,'multiline':False]
['text':' Apply the automatic commands, before processing the modelines.','line_number':340,'multiline':False]
['text':' So the modelines have priority over autocommands.','line_number':341,'multiline':False]
['text':' When reading stdin, the buffer contents always needs writing, so set','line_number':343,'multiline':False]
['text':' the changed flag.  Unless in readonly mode: "ls | nvim -R -".','line_number':344,'multiline':False]
['text':' When interrupted and 'cpoptions' contains 'i' set changed flag.','line_number':345,'multiline':False]
['text':' ":set modified" used in autocmd','line_number':347,'multiline':False]
['text':' keep this fileformat','line_number':353,'multiline':False]
['text':' Set last_changedtick to avoid triggering a TextChanged autocommand right','line_number':355,'multiline':False]
['text':' after it was added.','line_number':356,'multiline':False]
['text':' require "!" to overwrite the file, because it wasn't read completely','line_number':361,'multiline':False]
['text':' Need to update automatic folding.  Do this before the autocommands,','line_number':366,'multiline':False]
['text':' they may use the fold info.','line_number':367,'multiline':False]
['text':' need to set w_topline, unless some autocommand already did that.','line_number':370,'multiline':False]
['text':' if (retval != OK) {','line_number':377,'multiline':False]
['text':' The autocommands may have changed the current buffer.  Apply the','line_number':382,'multiline':False]
['text':' modelines to the correct buffer, if it still exists and is loaded.','line_number':383,'multiline':False]
['text':' Go to the buffer that was opened, make sure it is in a window.','line_number':387,'multiline':False]
['text':' restore curwin/curbuf and a few other things','line_number':397,'multiline':False]
['text':'/ Store "buf" in "bufref" and set the free count.','line_number':404,'multiline':False]
['text':'/','line_number':405,'multiline':False]
['text':'/ @param bufref Reference to be used for the buffer.','line_number':406,'multiline':False]
['text':'/ @param buf    The buffer to reference.','line_number':407,'multiline':False]
['text':'/ Return true if "bufref->br_buf" points to the same buffer as when','line_number':415,'multiline':False]
['text':'/ set_bufref() was called and it is a valid buffer.','line_number':416,'multiline':False]
['text':'/ Only goes through the buffer list if buf_free_count changed.','line_number':417,'multiline':False]
['text':'/ Also checks if b_fnum is still the same, a :bwipe followed by :new might get','line_number':418,'multiline':False]
['text':'/ the same allocated memory, but it's a different buffer.','line_number':419,'multiline':False]
['text':'/','line_number':420,'multiline':False]
['text':'/ @param bufref Buffer reference to check for.','line_number':421,'multiline':False]
['text':'/ Check that "buf" points to a valid buffer in the buffer list.','line_number':430,'multiline':False]
['text':'/','line_number':431,'multiline':False]
['text':'/ Can be slow if there are many buffers, prefer using bufref_valid().','line_number':432,'multiline':False]
['text':'/','line_number':433,'multiline':False]
['text':'/ @param buf The buffer to check for.','line_number':434,'multiline':False]
['text':' Assume that we more often have a recent buffer,','line_number':441,'multiline':False]
['text':' start with the last one.','line_number':442,'multiline':False]
['text':'/ Return true when buffer "buf" can be unloaded.','line_number':451,'multiline':False]
['text':'/ Give an error message and return false when the buffer is locked or the','line_number':452,'multiline':False]
['text':'/ screen is being redrawn and the buffer is in a window.','line_number':453,'multiline':False]
['text':'/ Close the link to a buffer.','line_number':474,'multiline':False]
['text':'/','line_number':475,'multiline':False]
['text':'/ @param win    If not NULL, set b_last_cursor.','line_number':476,'multiline':False]
['text':'/ @param buf','line_number':477,'multiline':False]
['text':'/ @param action Used when there is no longer a window for the buffer.','line_number':478,'multiline':False]
['text':'/               Possible values:','line_number':479,'multiline':False]
['text':'/                 0            buffer becomes hidden','line_number':480,'multiline':False]
['text':'/                 DOBUF_UNLOAD buffer is unloaded','line_number':481,'multiline':False]
['text':'/                 DOBUF_DEL    buffer is unloaded and removed from buffer list','line_number':482,'multiline':False]
['text':'/                 DOBUF_WIPE   buffer is unloaded and really deleted','line_number':483,'multiline':False]
['text':'/               When doing all but the first one on the current buffer, the','line_number':484,'multiline':False]
['text':'/               caller should get a new buffer very soon!','line_number':485,'multiline':False]
['text':'/               The 'bufhidden' option can force freeing and deleting.','line_number':486,'multiline':False]
['text':'/ @param abort_if_last','line_number':487,'multiline':False]
['text':'/               If true, do not close the buffer if autocommands cause','line_number':488,'multiline':False]
['text':'/               there to be only one window with this buffer. e.g. when','line_number':489,'multiline':False]
['text':'/               ":quit" is supposed to close the window but autocommands','line_number':490,'multiline':False]
['text':'/               close all other windows.','line_number':491,'multiline':False]
['text':'/ @param ignore_abort','line_number':492,'multiline':False]
['text':'/               If true, don't abort even when aborting() returns true.','line_number':493,'multiline':False]
['text':'/ @return  true when we got to the end and b_nwindows was decremented.','line_number':494,'multiline':False]
['text':' Force unloading or deleting when 'bufhidden' says so, but not for terminal','line_number':505,'multiline':False]
['text':' buffers.','line_number':506,'multiline':False]
['text':' The caller must take care of NOT deleting/freeing when 'bufhidden' is','line_number':507,'multiline':False]
['text':' "hide" (otherwise we could never free or delete a buffer).','line_number':508,'multiline':False]
['text':' 'bufhidden' == "delete"','line_number':510,'multiline':False]
['text':' 'bufhidden' == "wipe"','line_number':513,'multiline':False]
['text':' 'bufhidden' == "unload"','line_number':517,'multiline':False]
['text':' terminal buffers can only be wiped','line_number':523,'multiline':False]
['text':' Disallow deleting the buffer when it is locked (already being closed or','line_number':529,'multiline':False]
['text':' halfway a command that relies on it). Unloading is allowed.','line_number':530,'multiline':False]
['text':' check no autocommands closed the window','line_number':535,'multiline':False]
['text':' Avoid bogus clang warning.','line_number':536,'multiline':False]
['text':' Set b_last_cursor when closing the last window for the buffer.','line_number':538,'multiline':False]
['text':' Remember the last cursor position and window options of the buffer.','line_number':539,'multiline':False]
['text':' This used to be only for the current window, but then options like','line_number':540,'multiline':False]
['text':' 'foldmethod' may be lost with a ":only" command.','line_number':541,'multiline':False]
['text':' When the buffer is no longer in a window, trigger BufWinLeave','line_number':553,'multiline':False]
['text':' Autocommands deleted the buffer.','line_number':559,'multiline':False]
['text':' Autocommands made this the only window.','line_number':566,'multiline':False]
['text':' When the buffer becomes hidden, but is not unloaded, trigger','line_number':571,'multiline':False]
['text':' BufHidden','line_number':572,'multiline':False]
['text':' Autocommands deleted the buffer.','line_number':578,'multiline':False]
['text':' Autocommands made this the only window.','line_number':585,'multiline':False]
['text':' autocmds may abort script processing','line_number':590,'multiline':False]
['text':' If the buffer was in curwin and the window has changed, go back to that','line_number':596,'multiline':False]
['text':' window, if it still exists.  This avoids that ":edit x" triggering a','line_number':597,'multiline':False]
['text':' "tabnext" BufUnload autocmd leaves a window behind without a buffer.','line_number':598,'multiline':False]
['text':' decrease the link count from windows (unless not in any window)','line_number':607,'multiline':False]
['text':' Clear 'diff' for hidden buffer.','line_number':613,'multiline':False]
['text':' Return when a window is displaying the buffer or when it's not','line_number':616,'multiline':False]
['text':' unloaded.','line_number':617,'multiline':False]
['text':' Always remove the buffer when there is no file name.','line_number':628,'multiline':False]
['text':' Free all things allocated for this buffer.','line_number':633,'multiline':False]
['text':' Also calls the "BufDelete" autocommands when del_buf is true.','line_number':634,'multiline':False]
['text':' Remember if we are closing the current buffer.  Restore the number of','line_number':635,'multiline':False]
['text':' windows, so that autocommands in buf_freeall() don't get confused.','line_number':636,'multiline':False]
['text':' When closing the current buffer stop Visual mode before freeing','line_number':639,'multiline':False]
['text':' anything.','line_number':640,'multiline':False]
['text':' Autocommands may have deleted the buffer.','line_number':656,'multiline':False]
['text':' autocmds may abort script processing.','line_number':659,'multiline':False]
['text':' It's possible that autocommands change curbuf to the one being deleted.','line_number':664,'multiline':False]
['text':' This might cause the previous curbuf to be deleted unexpectedly.  But','line_number':665,'multiline':False]
['text':' in some cases it's OK to delete the curbuf, because a new one is','line_number':666,'multiline':False]
['text':' obtained anyway.  Therefore only return if curbuf changed to the','line_number':667,'multiline':False]
['text':' deleted buffer.','line_number':668,'multiline':False]
['text':' Disable buffer-updates for the current buffer.','line_number':673,'multiline':False]
['text':' No need to check `unload_buf`: in that case the function returned above.','line_number':674,'multiline':False]
['text':' Avoid bogus clang warning.','line_number':677,'multiline':False]
['text':' make sure we don't use the buffer now','line_number':680,'multiline':False]
['text':' Autocommands may have opened or closed windows for this buffer.','line_number':683,'multiline':False]
['text':' Decrement the count for the close we do here.','line_number':684,'multiline':False]
['text':' Remove the buffer from the list.','line_number':689,'multiline':False]
['text':' Do not wipe out the buffer if it is used in a window.','line_number':691,'multiline':False]
['text':' Free all internal variables and reset option values, to make','line_number':714,'multiline':False]
['text':' ":bdel" compatible with Vim 5.7.','line_number':715,'multiline':False]
['text':' Make it look like a new buffer.','line_number':718,'multiline':False]
['text':' Init the options when loaded again.','line_number':721,'multiline':False]
['text':' NOTE: at this point "curbuf" may be invalid!','line_number':729,'multiline':False]
['text':'/ Make buffer not contain a file.','line_number':733,'multiline':False]
['text':' empty buffer','line_number':745,'multiline':False]
['text':'/ Clears the current buffer contents.','line_number':748,'multiline':False]
['text':' delete any extmarks','line_number':752,'multiline':False]
['text':' prepare for display','line_number':758,'multiline':False]
['text':'/ buf_freeall() - free all things allocated for a buffer that are related to','line_number':761,'multiline':False]
['text':'/ the file.  Careful: get here with "curwin" NULL when exiting.','line_number':762,'multiline':False]
['text':'/','line_number':763,'multiline':False]
['text':'/ @param flags BFA_DEL           buffer is going to be deleted','line_number':764,'multiline':False]
['text':'/              BFA_WIPE          buffer is going to be wiped out','line_number':765,'multiline':False]
['text':'/              BFA_KEEP_UNDO     do not free undo information','line_number':766,'multiline':False]
['text':'/              BFA_IGNORE_ABORT  don't abort even when aborting() returns true','line_number':767,'multiline':False]
['text':' Make sure the buffer isn't closed by autocommands.','line_number':775,'multiline':False]
['text':' Autocommands deleted the buffer.','line_number':785,'multiline':False]
['text':' Autocommands may delete the buffer.','line_number':792,'multiline':False]
['text':' Autocommands may delete the buffer.','line_number':799,'multiline':False]
['text':' If the buffer was in curwin and the window has changed, go back to that','line_number':805,'multiline':False]
['text':' window, if it still exists.  This avoids that ":edit x" triggering a','line_number':806,'multiline':False]
['text':' "tabnext" BufUnload autocmd leaves a window behind without a buffer.','line_number':807,'multiline':False]
['text':' autocmds may abort script processing','line_number':813,'multiline':False]
['text':' It's possible that autocommands change curbuf to the one being deleted.','line_number':818,'multiline':False]
['text':' This might cause curbuf to be deleted unexpectedly.  But in some cases','line_number':819,'multiline':False]
['text':' it's OK to delete the curbuf, because a new one is obtained anyway.','line_number':820,'multiline':False]
['text':' Therefore only return if curbuf changed to the deleted buffer.','line_number':821,'multiline':False]
['text':' Can't use 'diff' for unloaded buffer.','line_number':825,'multiline':False]
['text':' Remove any ownsyntax, unless exiting.','line_number':826,'multiline':False]
['text':' No folds in an empty buffer.','line_number':831,'multiline':False]
['text':' close and delete the memline/memfile','line_number':838,'multiline':False]
['text':' no lines in buffer','line_number':839,'multiline':False]
['text':' free the memory allocated for undo','line_number':841,'multiline':False]
['text':' reset all undo information','line_number':842,'multiline':False]
['text':' reset syntax info','line_number':844,'multiline':False]
['text':' a read error is no longer relevant','line_number':845,'multiline':False]
['text':'/ Free a buffer structure and the things it contains related to the buffer','line_number':848,'multiline':False]
['text':'/ itself (not the file, that must have been done already).','line_number':849,'multiline':False]
['text':' b:changedtick uses an item in buf_T.','line_number':854,'multiline':False]
['text':' Do not free the buffer structure while autocommands are executing,','line_number':876,'multiline':False]
['text':' it's still needed. Free it when autocmd_busy is reset.','line_number':877,'multiline':False]
['text':'/ Free the b_wininfo list for buffer "buf".','line_number':887,'multiline':False]
['text':'/ Free stuff in the buffer for ":bdel" and when wiping out the buffer.','line_number':899,'multiline':False]
['text':'/','line_number':900,'multiline':False]
['text':'/ @param buf  Buffer pointer','line_number':901,'multiline':False]
['text':'/ @param free_flags  BufFreeFlags','line_number':902,'multiline':False]
['text':' including window-local options','line_number':906,'multiline':False]
['text':' Avoid losing b:changedtick when deleting buffer: clearing variables','line_number':911,'multiline':False]
['text':' implies using clear_tv() on b:changedtick and that sets changedtick to','line_number':912,'multiline':False]
['text':' zero.','line_number':913,'multiline':False]
['text':' free all internal variables','line_number':918,'multiline':False]
['text':' clear local user commands','line_number':923,'multiline':False]
['text':' delete any extmarks','line_number':924,'multiline':False]
['text':' clear local mappings','line_number':927,'multiline':False]
['text':' clear local abbrevs','line_number':928,'multiline':False]
['text':'/ Go to another buffer.  Handles the result of the ATTENTION dialog.','line_number':934,'multiline':False]
['text':' Reset the error/interrupt/exception state here so that','line_number':951,'multiline':False]
['text':' aborting() returns false when closing a window.','line_number':952,'multiline':False]
['text':' Quitting means closing the split window, nothing else.','line_number':955,'multiline':False]
['text':' Restore the error/interrupt/exception state if not discarded by a','line_number':960,'multiline':False]
['text':' new aborting error, interrupt, or uncaught exception.','line_number':961,'multiline':False]
['text':'/ Handle the situation of swap_exists_action being set.','line_number':968,'multiline':False]
['text':'/','line_number':969,'multiline':False]
['text':'/ It is allowed for "old_curbuf" to be NULL or invalid.','line_number':970,'multiline':False]
['text':'/','line_number':971,'multiline':False]
['text':'/ @param old_curbuf The buffer to check for.','line_number':972,'multiline':False]
['text':' Reset the error/interrupt/exception state here so that','line_number':980,'multiline':False]
['text':' aborting() returns false when closing a buffer.','line_number':981,'multiline':False]
['text':' User selected Quit at ATTENTION prompt.  Go back to previous','line_number':984,'multiline':False]
['text':' buffer.  If that buffer is gone or the same as the current one,','line_number':985,'multiline':False]
['text':' open a new, empty buffer.','line_number':986,'multiline':False]
['text':' don't want it again','line_number':987,'multiline':False]
['text':' Block autocommands here because curwin->w_buffer is NULL.','line_number':993,'multiline':False]
['text':' If "old_curbuf" is NULL we are in big trouble here...','line_number':1007,'multiline':False]
['text':' Restore the error/interrupt/exception state if not discarded by a','line_number':1009,'multiline':False]
['text':' new aborting error, interrupt, or uncaught exception.','line_number':1010,'multiline':False]
['text':' Reset the error/interrupt/exception state here so that','line_number':1013,'multiline':False]
['text':' aborting() returns false when closing a buffer.','line_number':1014,'multiline':False]
['text':' User selected Recover at ATTENTION prompt.','line_number':1017,'multiline':False]
['text':' don't overwrite the last message','line_number':1020,'multiline':False]
['text':' Restore the error/interrupt/exception state if not discarded by a','line_number':1024,'multiline':False]
['text':' new aborting error, interrupt, or uncaught exception.','line_number':1025,'multiline':False]
['text':'/ do_bufdel() - delete or unload buffer(s)','line_number':1031,'multiline':False]
['text':'/','line_number':1032,'multiline':False]
['text':'/ addr_count == 0: ":bdel" - delete current buffer','line_number':1033,'multiline':False]
['text':'/ addr_count == 1: ":N bdel" or ":bdel N [N ..]" - first delete','line_number':1034,'multiline':False]
['text':'/                  buffer "end_bnr", then any other arguments.','line_number':1035,'multiline':False]
['text':'/ addr_count == 2: ":N,N bdel" - delete buffers in range','line_number':1036,'multiline':False]
['text':'/','line_number':1037,'multiline':False]
['text':'/ command can be DOBUF_UNLOAD (":bunload"), DOBUF_WIPE (":bwipeout") or','line_number':1038,'multiline':False]
['text':'/ DOBUF_DEL (":bdel")','line_number':1039,'multiline':False]
['text':'/','line_number':1040,'multiline':False]
['text':'/ @param arg  pointer to extra arguments','line_number':1041,'multiline':False]
['text':'/ @param start_bnr  first buffer number in a range','line_number':1042,'multiline':False]
['text':'/ @param end_bnr  buffer nr or last buffer nr in a range','line_number':1043,'multiline':False]
['text':'/','line_number':1044,'multiline':False]
['text':'/ @return  error message or NULL','line_number':1045,'multiline':False]
['text':' delete current buffer?','line_number':1048,'multiline':False]
['text':' number of buffers deleted','line_number':1049,'multiline':False]
['text':' return value','line_number':1050,'multiline':False]
['text':' buffer number','line_number':1051,'multiline':False]
['text':' both range and argument is not allowed','line_number':1057,'multiline':False]
['text':' addr_count == 1','line_number':1061,'multiline':False]
['text':' delete the current buffer last, otherwise when the','line_number':1066,'multiline':False]
['text':' current buffer is deleted, the next buffer becomes','line_number':1067,'multiline':False]
['text':' the current one and will be loaded, which may then','line_number':1068,'multiline':False]
['text':' also be deleted, etc.','line_number':1069,'multiline':False]
['text':' find next buffer number to delete/unload','line_number':1077,'multiline':False]
['text':' addr_count == 1','line_number':1082,'multiline':False]
['text':' failed','line_number':1090,'multiline':False]
['text':'/ Make the current buffer empty.','line_number':1131,'multiline':False]
['text':'/ Used when it is wiped out and it's the last buffer.','line_number':1132,'multiline':False]
['text':' Closing all other windows with this buffer may leave only floating windows.','line_number':1148,'multiline':False]
['text':' Found another non-floating window with a different (probably unlisted) buffer.','line_number':1152,'multiline':False]
['text':' Closing all other windows with this buffer is fine in this case.','line_number':1153,'multiline':False]
['text':' If it is fine to close all other windows with this buffer, keep the current window and','line_number':1159,'multiline':False]
['text':' close any other windows with this buffer, then make it empty.','line_number':1160,'multiline':False]
['text':' Otherwise close_windows() will refuse to close the last non-floating window, so allow it','line_number':1161,'multiline':False]
['text':' to close the current window instead.','line_number':1162,'multiline':False]
['text':' do_ecmd() may create a new buffer, then we have to delete','line_number':1169,'multiline':False]
['text':' the old one.  But do_ecmd() may have done that already, check','line_number':1170,'multiline':False]
['text':' if the buffer still exists.','line_number':1171,'multiline':False]
['text':'/ Implementation of the commands for the buffer list.','line_number':1183,'multiline':False]
['text':'/','line_number':1184,'multiline':False]
['text':'/ action == DOBUF_GOTO     go to specified buffer','line_number':1185,'multiline':False]
['text':'/ action == DOBUF_SPLIT    split window and go to specified buffer','line_number':1186,'multiline':False]
['text':'/ action == DOBUF_UNLOAD   unload specified buffer(s)','line_number':1187,'multiline':False]
['text':'/ action == DOBUF_DEL      delete specified buffer(s) from buffer list','line_number':1188,'multiline':False]
['text':'/ action == DOBUF_WIPE     delete specified buffer(s) really','line_number':1189,'multiline':False]
['text':'/','line_number':1190,'multiline':False]
['text':'/ start == DOBUF_CURRENT   go to "count" buffer from current buffer','line_number':1191,'multiline':False]
['text':'/ start == DOBUF_FIRST     go to "count" buffer from first buffer','line_number':1192,'multiline':False]
['text':'/ start == DOBUF_LAST      go to "count" buffer from last buffer','line_number':1193,'multiline':False]
['text':'/ start == DOBUF_MOD       go to "count" modified buffer from current buffer','line_number':1194,'multiline':False]
['text':'/','line_number':1195,'multiline':False]
['text':'/ @param dir  FORWARD or BACKWARD','line_number':1196,'multiline':False]
['text':'/ @param count  buffer number or number of buffers','line_number':1197,'multiline':False]
['text':'/ @param forceit  true for :...!','line_number':1198,'multiline':False]
['text':'/','line_number':1199,'multiline':False]
['text':'/ @return  FAIL or OK.','line_number':1200,'multiline':False]
['text':' find next modified buffer','line_number':1216,'multiline':False]
['text':' find specified buffer number','line_number':1229,'multiline':False]
['text':' remember the buffer where we start, we come back there when all','line_number':1236,'multiline':False]
['text':' buffers are unlisted.','line_number':1237,'multiline':False]
['text':' don't count unlisted buffers','line_number':1252,'multiline':False]
['text':' use this buffer as new starting point','line_number':1255,'multiline':False]
['text':' back where we started, didn't find anything.','line_number':1258,'multiline':False]
['text':' could not find it','line_number':1265,'multiline':False]
['text':' don't warn when deleting','line_number':1267,'multiline':False]
['text':' disallow navigating to the dummy buffer','line_number':1279,'multiline':False]
['text':' delete buffer "buf" from memory and/or the list','line_number':1284,'multiline':False]
['text':' When unloading or deleting a buffer that's already unloaded and','line_number':1293,'multiline':False]
['text':' unlisted: fail silently.','line_number':1294,'multiline':False]
['text':' Autocommand deleted buffer, oops! It's not changed now.','line_number':1303,'multiline':False]
['text':' If it's still changed fail silently, the dialog already','line_number':1306,'multiline':False]
['text':' mentioned why it fails.','line_number':1307,'multiline':False]
['text':' When closing the current buffer stop Visual mode.','line_number':1330,'multiline':False]
['text':' If deleting the last (listed) buffer, make it empty.','line_number':1335,'multiline':False]
['text':' The last (listed) buffer cannot be unloaded.','line_number':1336,'multiline':False]
['text':' If the deleted buffer is the current one, close the current window','line_number':1348,'multiline':False]
['text':' (unless it's the only non-floating window).','line_number':1349,'multiline':False]
['text':' When the autocommand window is involved win_close() may need to print an error message.','line_number':1350,'multiline':False]
['text':' Repeat this so long as we end up in a window with this buffer.','line_number':1351,'multiline':False]
['text':' If the buffer to be deleted is not the current one, delete it here.','line_number':1360,'multiline':False]
['text':' Deleting the current buffer: Need to find another buffer to go to.','line_number':1369,'multiline':False]
['text':' There should be another, otherwise it would have been handled','line_number':1370,'multiline':False]
['text':' above.  However, autocommands may have deleted all buffers.','line_number':1371,'multiline':False]
['text':' First use au_new_curbuf.br_buf, if it is valid.','line_number':1372,'multiline':False]
['text':' Then prefer the buffer we most recently visited.','line_number':1373,'multiline':False]
['text':' Else try to find one that is loaded, after the current buffer,','line_number':1374,'multiline':False]
['text':' then before the current buffer.','line_number':1375,'multiline':False]
['text':' Finally use any buffer.','line_number':1376,'multiline':False]
['text':' Selected buffer.','line_number':1377,'multiline':False]
['text':' Used when no loaded buffer found.','line_number':1378,'multiline':False]
['text':' Skip current and unlisted bufs.  Also skip a quickfix','line_number':1393,'multiline':False]
['text':' buffer, it might be deleted soon.','line_number':1394,'multiline':False]
['text':' skip unloaded buf, but may keep it for later','line_number':1398,'multiline':False]
['text':' found a valid buffer: stop searching','line_number':1405,'multiline':False]
['text':' advance to older entry in jump list','line_number':1408,'multiline':False]
['text':' List exhausted for sure','line_number':1415,'multiline':False]
['text':' No previous buffer, Try 2'nd approach','line_number':1421,'multiline':False]
['text':' tried both directions','line_number':1426,'multiline':False]
['text':' in non-help buffer, try to skip help buffers, and vv','line_number':1433,'multiline':False]
['text':' found loaded buffer','line_number':1435,'multiline':False]
['text':' remember unloaded buf for later','line_number':1438,'multiline':False]
['text':' No loaded buffer, use unloaded one','line_number':1449,'multiline':False]
['text':' No loaded buffer, find listed one','line_number':1452,'multiline':False]
['text':' Still no buffer, just take one','line_number':1460,'multiline':False]
['text':' Autocommands must have wiped out all other buffers.  Only option','line_number':1473,'multiline':False]
['text':' now is to make the current buffer empty.','line_number':1474,'multiline':False]
['text':' make "buf" the current buffer','line_number':1478,'multiline':False]
['text':' split window first','line_number':1479,'multiline':False]
['text':' If 'switchbuf' is set jump to the window containing "buf".','line_number':1480,'multiline':False]
['text':' go to current buffer - nothing to do','line_number':1490,'multiline':False]
['text':' Check if the current buffer may be abandoned.','line_number':1495,'multiline':False]
['text':' Autocommand deleted buffer, oops!','line_number':1502,'multiline':False]
['text':' Go to the other buffer.','line_number':1512,'multiline':False]
['text':' reset 'scrollbind' and 'cursorbind'','line_number':1516,'multiline':False]
['text':' autocmds may abort script processing','line_number':1519,'multiline':False]
['text':'/ Set current buffer to "buf".  Executes autocommands and closes current','line_number':1526,'multiline':False]
['text':'/ buffer.','line_number':1527,'multiline':False]
['text':'/','line_number':1528,'multiline':False]
['text':'/ @param action  tells how to close the current buffer:','line_number':1529,'multiline':False]
['text':'/                DOBUF_GOTO       free or hide it','line_number':1530,'multiline':False]
['text':'/                DOBUF_SPLIT      nothing','line_number':1531,'multiline':False]
['text':'/                DOBUF_UNLOAD     unload it','line_number':1532,'multiline':False]
['text':'/                DOBUF_DEL        delete it','line_number':1533,'multiline':False]
['text':'/                DOBUF_WIPE       wipe it out','line_number':1534,'multiline':False]
['text':' remember alternate file','line_number':1544,'multiline':False]
['text':' remember curpos','line_number':1546,'multiline':False]
['text':' Don't restart Select mode after switching to another buffer.','line_number':1548,'multiline':False]
['text':' close_windows() or apply_autocmds() may change curbuf and wipe out "buf"','line_number':1551,'multiline':False]
['text':' Autocommands may delete the current buffer and/or the buffer we want to','line_number':1558,'multiline':False]
['text':' go to.  In those cases don't close the buffer.','line_number':1559,'multiline':False]
['text':' Do not sync when in Insert mode and the buffer is open in','line_number':1572,'multiline':False]
['text':' another window, might be a timer doing something in another','line_number':1573,'multiline':False]
['text':' window.','line_number':1574,'multiline':False]
['text':' autocommands changed curwin, Grr!','line_number':1586,'multiline':False]
['text':' An autocommand may have deleted "buf", already entered it (e.g., when','line_number':1591,'multiline':False]
['text':' it did ":bunload") or aborted the script processing!','line_number':1592,'multiline':False]
['text':' If curwin->w_buffer is null, enter_buffer() will make it valid again','line_number':1593,'multiline':False]
['text':' If the buffer is not valid but curwin->w_buffer is NULL we must','line_number':1596,'multiline':False]
['text':' enter some buffer.  Using the last one is hopefully OK.','line_number':1597,'multiline':False]
['text':'/ Enter a new current buffer.','line_number':1613,'multiline':False]
['text':'/ Old curbuf must have been abandoned already!  This also means "curbuf" may','line_number':1614,'multiline':False]
['text':'/ be pointing to freed memory.','line_number':1615,'multiline':False]
['text':' when closing the current buffer stop Visual mode','line_number':1618,'multiline':False]
['text':' Get the buffer in the current window.','line_number':1627,'multiline':False]
['text':' Copy buffer and window local option values.  Not for a help buffer.','line_number':1632,'multiline':False]
['text':' Remove all folds in the window.','line_number':1637,'multiline':False]
['text':' update folds (later).','line_number':1640,'multiline':False]
['text':' Cursor on first line by default.','line_number':1648,'multiline':False]
['text':' mark cursor position as being invalid','line_number':1655,'multiline':False]
['text':' Make sure the buffer is loaded.','line_number':1658,'multiline':False]
['text':' need to load the file','line_number':1659,'multiline':False]
['text':' If there is no filetype, allow for detecting one.  Esp. useful for','line_number':1660,'multiline':False]
['text':' ":ball" used in an autocommand.  If there already is a filetype we','line_number':1661,'multiline':False]
['text':' might prefer to keep it.','line_number':1662,'multiline':False]
['text':' display file info after redraw','line_number':1670,'multiline':False]
['text':' check if file changed','line_number':1672,'multiline':False]
['text':' If autocommands did not change the cursor position, restore cursor lnum','line_number':1681,'multiline':False]
['text':' and possibly cursor col.','line_number':1682,'multiline':False]
['text':' check for valid arg_idx','line_number':1687,'multiline':False]
['text':' when autocmds didn't change it','line_number':1689,'multiline':False]
['text':' redisplay at correct position','line_number':1691,'multiline':False]
['text':' Change directories when the 'acd' option is set.','line_number':1694,'multiline':False]
['text':' May need to set the spell language.  Can only do this after the buffer','line_number':1700,'multiline':False]
['text':' has been properly setup.','line_number':1701,'multiline':False]
['text':'/ Change to the directory of the current buffer.','line_number':1710,'multiline':False]
['text':'/ Don't do this while still starting up.','line_number':1711,'multiline':False]
['text':'','line_number':1745,'multiline':False]
['text':' functions for dealing with the buffer list','line_number':1746,'multiline':False]
['text':'','line_number':1747,'multiline':False]
['text':'/ Initialize b:changedtick and changedtick_val attribute','line_number':1749,'multiline':False]
['text':'/','line_number':1750,'multiline':False]
['text':'/ @param[out]  buf  Buffer to initialize for.','line_number':1751,'multiline':False]
['text':' Must not include DI_FLAGS_ALLOC.','line_number':1758,'multiline':False]
['text':'/ Add a file name to the buffer list.','line_number':1769,'multiline':False]
['text':'/ If the same file name already exists return a pointer to that buffer.','line_number':1770,'multiline':False]
['text':'/ If it does not exist, or if fname == NULL, a new entry is created.','line_number':1771,'multiline':False]
['text':'/ If (flags & BLN_CURBUF) is true, may use current buffer.','line_number':1772,'multiline':False]
['text':'/ If (flags & BLN_LISTED) is true, add new buffer to buffer list.','line_number':1773,'multiline':False]
['text':'/ If (flags & BLN_DUMMY) is true, don't count it as a real buffer.','line_number':1774,'multiline':False]
['text':'/ If (flags & BLN_NEW) is true, don't use an existing buffer.','line_number':1775,'multiline':False]
['text':'/ If (flags & BLN_NOOPT) is true, don't copy options from the current buffer','line_number':1776,'multiline':False]
['text':'/                                 if the buffer already exists.','line_number':1777,'multiline':False]
['text':'/ This is the ONLY way to create a new buffer.','line_number':1778,'multiline':False]
['text':'/','line_number':1779,'multiline':False]
['text':'/ @param ffname_arg  full path of fname or relative','line_number':1780,'multiline':False]
['text':'/ @param sfname_arg  short fname or NULL','line_number':1781,'multiline':False]
['text':'/ @param lnum   preferred cursor line','line_number':1782,'multiline':False]
['text':'/ @param flags  BLN_ defines','line_number':1783,'multiline':False]
['text':'/ @param bufnr','line_number':1784,'multiline':False]
['text':'/','line_number':1785,'multiline':False]
['text':'/ @return  pointer to the buffer','line_number':1786,'multiline':False]
['text':' will allocate ffname','line_number':1793,'multiline':False]
['text':' If the file name already exists in the list, update the entry.','line_number':1795,'multiline':False]
['text':' We can use inode numbers when the file exists.  Works better','line_number':1797,'multiline':False]
['text':' for hard links.','line_number':1798,'multiline':False]
['text':' Copy the options now, if 'cpo' doesn't have 's' and not done already.','line_number':1809,'multiline':False]
['text':' If the current buffer has no name and no contents, use the current','line_number':1826,'multiline':False]
['text':' buffer.    Otherwise: Need to allocate a new buffer structure.','line_number':1827,'multiline':False]
['text':'','line_number':1828,'multiline':False]
['text':' This is the ONLY place where a new buffer structure is allocated!','line_number':1829,'multiline':False]
['text':' (A spell file buffer is allocated in spell.c, but that's not a normal','line_number':1830,'multiline':False]
['text':' buffer.)','line_number':1831,'multiline':False]
['text':' It's like this buffer is deleted.  Watch out for autocommands that','line_number':1836,'multiline':False]
['text':' change curbuf!  If that happens, allocate a new buffer anyway.','line_number':1837,'multiline':False]
['text':' autocommands deleted the buffer!','line_number':1839,'multiline':False]
['text':' autocmds may abort script processing','line_number':1842,'multiline':False]
['text':' init b: variables','line_number':1849,'multiline':False]
['text':' delete local vars et al.','line_number':1864,'multiline':False]
['text':' Init the options.','line_number':1866,'multiline':False]
['text':' need to reload lmaps and set b:keymap_name','line_number':1870,'multiline':False]
['text':' put new buffer at the end of the buffer list','line_number':1873,'multiline':False]
['text':' buffer list is empty','line_number':1875,'multiline':False]
['text':' append new buffer at end of list','line_number':1878,'multiline':False]
['text':' wrap around (may cause duplicates)','line_number':1886,'multiline':False]
['text':' make sure it is noticed','line_number':1890,'multiline':False]
['text':' Always copy the options from the current buffer.','line_number':1895,'multiline':False]
['text':' clear marks','line_number':1919,'multiline':False]
['text':' check file marks for this file','line_number':1920,'multiline':False]
['text':' init 'buflisted'','line_number':1921,'multiline':False]
['text':' Tricky: these autocommands may change the buffer list.  They could also','line_number':1927,'multiline':False]
['text':' split the window with re-using the one empty buffer. This may result in','line_number':1928,'multiline':False]
['text':' unexpectedly losing the empty buffer.','line_number':1929,'multiline':False]
['text':' Autocmds may abort script processing.','line_number':1942,'multiline':False]
['text':'/ Return true if the current buffer is empty, unnamed, unmodified and used in','line_number':1954,'multiline':False]
['text':'/ only one window. That means it can be reused.','line_number':1955,'multiline':False]
['text':'/ Free the memory for the options of a buffer.','line_number':1966,'multiline':False]
['text':'/ If "free_p_ff" is true also free 'fileformat', 'buftype' and','line_number':1967,'multiline':False]
['text':'/ 'fileencoding'.','line_number':1968,'multiline':False]
['text':'/ Get alternate file "n".','line_number':2041,'multiline':False]
['text':'/ Set linenr to "lnum" or altfpos.lnum if "lnum" == 0.','line_number':2042,'multiline':False]
['text':'/ Also set cursor column to altfpos.col if 'startofline' is not set.','line_number':2043,'multiline':False]
['text':'/ if (options & GETF_SETMARK) call setpcmark()','line_number':2044,'multiline':False]
['text':'/ if (options & GETF_ALT) we are jumping to an alternate file.','line_number':2045,'multiline':False]
['text':'/ if (options & GETF_SWITCH) respect 'switchbuf' settings when jumping','line_number':2046,'multiline':False]
['text':'/','line_number':2047,'multiline':False]
['text':'/ Return FAIL for failure, OK for success.','line_number':2048,'multiline':False]
['text':' if alternate file is the current buffer, nothing to do','line_number':2065,'multiline':False]
['text':' altfpos may be changed by getfile(), get it now','line_number':2075,'multiline':False]
['text':' If 'switchbuf' is set jump to the window containing "buf".','line_number':2086,'multiline':False]
['text':' If 'switchbuf' contains "split", "vsplit" or "newtab" and the','line_number':2089,'multiline':False]
['text':' current buffer isn't empty: open new tab or window','line_number':2090,'multiline':False]
['text':' cursor is at to BOL and w_cursor.lnum is checked due to getfile()','line_number':2108,'multiline':False]
['text':'/ Go to the last known line number for the current buffer.','line_number':2124,'multiline':False]
['text':'/ Find file in buffer list by name (it has to be for the current window).','line_number':2142,'multiline':False]
['text':'/','line_number':2143,'multiline':False]
['text':'/ @return  buffer or NULL if not found','line_number':2144,'multiline':False]
['text':' First make the name into a full path name','line_number':2149,'multiline':False]
['text':' force expansion, get rid of symbolic links','line_number':2152,'multiline':False]
['text':' NOLINT(whitespace/parens)','line_number':2157,'multiline':False]
['text':'/ Find file in buffer list by name (it has to be for the current window).','line_number':2165,'multiline':False]
['text':'/ "ffname" must have a full path.','line_number':2166,'multiline':False]
['text':'/ Skips dummy buffers.','line_number':2167,'multiline':False]
['text':'/','line_number':2168,'multiline':False]
['text':'/ @return  buffer or NULL if not found','line_number':2169,'multiline':False]
['text':'/ Same as buflist_findname(), but pass the FileID structure to avoid','line_number':2177,'multiline':False]
['text':'/ getting it twice for the same file.','line_number':2178,'multiline':False]
['text':'/','line_number':2179,'multiline':False]
['text':'/ @return  buffer or NULL if not found','line_number':2180,'multiline':False]
['text':' Start at the last buffer, expect to find a match sooner.','line_number':2184,'multiline':False]
['text':'/ Find file in buffer list by a regexp pattern.','line_number':2194,'multiline':False]
['text':'/','line_number':2195,'multiline':False]
['text':'/ @param pattern_end  pointer to first char after pattern','line_number':2196,'multiline':False]
['text':'/ @param unlisted  find unlisted buffers','line_number':2197,'multiline':False]
['text':'/ @param diffmode  find diff-mode buffers only','line_number':2198,'multiline':False]
['text':'/ @param curtab_only  find buffers in current tab only','line_number':2199,'multiline':False]
['text':'/','line_number':2200,'multiline':False]
['text':'/ @return  fnum of the found buffer or < 0 for error.','line_number':2201,'multiline':False]
['text':' Try four ways of matching a listed buffer:','line_number':2219,'multiline':False]
['text':' attempt == 0: without '^' or '$' (at any position)','line_number':2220,'multiline':False]
['text':' attempt == 1: with '^' at start (only at position 0)','line_number':2221,'multiline':False]
['text':' attempt == 2: with '$' at end (only match at end)','line_number':2222,'multiline':False]
['text':' attempt == 3: with '^' at start and '$' at end (only full match)','line_number':2223,'multiline':False]
['text':' Repeat this for finding an unlisted buffer if there was no matching','line_number':2224,'multiline':False]
['text':' listed buffer.','line_number':2225,'multiline':False]
['text':' First try finding a listed buffer.  If not found and "unlisted"','line_number':2234,'multiline':False]
['text':' is true, try finding an unlisted buffer.','line_number':2235,'multiline':False]
['text':' may add '^' and '$'','line_number':2240,'multiline':False]
['text':' add/remove '$'','line_number':2242,'multiline':False]
['text':' add/remove '^'','line_number':2245,'multiline':False]
['text':' invalid pattern, possibly after switching engine','line_number':2254,'multiline':False]
['text':' Ignore the match if the buffer is not open in','line_number':2262,'multiline':False]
['text':' the current tab.','line_number':2263,'multiline':False]
['text':' already found a match','line_number':2275,'multiline':False]
['text':' remember first match','line_number':2279,'multiline':False]
['text':' found one match','line_number':2284,'multiline':False]
['text':' Only search for unlisted buffers if there was no match with','line_number':2289,'multiline':False]
['text':' a listed buffer.','line_number':2290,'multiline':False]
['text':'/ Compare functions for qsort() below, that compares b_last_used.','line_number':2313,'multiline':False]
['text':'/ Find all buffer names that match.','line_number':2325,'multiline':False]
['text':'/ For command line expansion of ":buf" and ":sbuf".','line_number':2326,'multiline':False]
['text':'/','line_number':2327,'multiline':False]
['text':'/ @return  OK if matches found, FAIL otherwise.','line_number':2328,'multiline':False]
['text':' return values in case of FAIL','line_number':2336,'multiline':False]
['text':' Make a copy of "pat" and change "^" to "\(^\|[\/]\)" (if doing regular','line_number':2346,'multiline':False]
['text':' expression matching)','line_number':2347,'multiline':False]
['text':' attempt == 0: try match with    '\<', match at start of word','line_number':2359,'multiline':False]
['text':' attempt == 1: try match without '\<', match anywhere','line_number':2360,'multiline':False]
['text':' there was no anchor, no need to try again','line_number':2365,'multiline':False]
['text':' round == 1: Count the matches.','line_number':2371,'multiline':False]
['text':' round == 2: Build the array to keep the matches.','line_number':2372,'multiline':False]
['text':' skip unlisted buffers','line_number':2376,'multiline':False]
['text':' Skip buffers not suitable for','line_number':2380,'multiline':False]
['text':' :diffget or :diffput completion.','line_number':2381,'multiline':False]
['text':' invalid pattern, possibly after recompiling','line_number':2389,'multiline':False]
['text':' first try matching with the short file name','line_number':2398,'multiline':False]
['text':' next try matching with the full path file name','line_number':2403,'multiline':False]
['text':' no match found, break here','line_number':2440,'multiline':False]
['text':' match(es) found, break here','line_number':2457,'multiline':False]
['text':' if the current buffer is first in the list, place it at the end','line_number':2473,'multiline':False]
['text':'/ Check for a match on the file name for buffer "buf" with regprog "prog".','line_number':2494,'multiline':False]
['text':'/ Note that rmp->regprog may become NULL when switching regexp engine.','line_number':2495,'multiline':False]
['text':'/','line_number':2496,'multiline':False]
['text':'/ @param ignore_case  When true, ignore case. Use 'fic' otherwise.','line_number':2497,'multiline':False]
['text':' First try the short file name, then the long file name.','line_number':2500,'multiline':False]
['text':'/ Try matching the regexp in "rmp->regprog" with file name "name".','line_number':2508,'multiline':False]
['text':'/ Note that rmp->regprog may become NULL when switching regexp engine.','line_number':2509,'multiline':False]
['text':'/','line_number':2510,'multiline':False]
['text':'/ @param ignore_case  When true, ignore case. Use 'fileignorecase' otherwise.','line_number':2511,'multiline':False]
['text':'/','line_number':2512,'multiline':False]
['text':'/ @return  "name" when there is a match, NULL when not.','line_number':2513,'multiline':False]
['text':' extra check for valid arguments','line_number':2518,'multiline':False]
['text':' Ignore case when 'fileignorecase' or the argument is set.','line_number':2523,'multiline':False]
['text':' Replace $(HOME) with '~' and try matching again.','line_number':2528,'multiline':False]
['text':'/ Find a file in the buffer list by buffer number.','line_number':2539,'multiline':False]
['text':'/ Get name of file 'n' in the buffer list.','line_number':2549,'multiline':False]
['text':'/ When the file has no name an empty string is returned.','line_number':2550,'multiline':False]
['text':'/ home_replace() is used to shorten the file name (used for marks).','line_number':2551,'multiline':False]
['text':'/','line_number':2552,'multiline':False]
['text':'/ @param helptail  for help buffers return tail only','line_number':2553,'multiline':False]
['text':'/','line_number':2554,'multiline':False]
['text':'/ @return  a pointer to allocated memory, of NULL when failed.','line_number':2555,'multiline':False]
['text':'/ Set the line and column numbers for the given buffer and window','line_number':2566,'multiline':False]
['text':'/','line_number':2567,'multiline':False]
['text':'/ @param[in,out]  buf           Buffer for which line and column are set.','line_number':2568,'multiline':False]
['text':'/ @param[in,out]  win           Window for which line and column are set.','line_number':2569,'multiline':False]
['text':'/                               May be NULL when using :badd.','line_number':2570,'multiline':False]
['text':'/ @param[in]      lnum          Line number to be set. If it is zero then only','line_number':2571,'multiline':False]
['text':'/                               options are touched.','line_number':2572,'multiline':False]
['text':'/ @param[in]      col           Column number to be set.','line_number':2573,'multiline':False]
['text':'/ @param[in]      copy_options  If true save the local window option values.','line_number':2574,'multiline':False]
['text':' allocate a new entry','line_number':2587,'multiline':False]
['text':' set lnum even when it's 0','line_number':2590,'multiline':False]
['text':' remove the entry from the list','line_number':2594,'multiline':False]
['text':' Save the window-specific option values.','line_number':2619,'multiline':False]
['text':' insert the entry in front of the list','line_number':2626,'multiline':False]
['text':'/ Check that "wip" has 'diff' set and the diff is only for another tab page.','line_number':2635,'multiline':False]
['text':'/ That's because a diff is local to a tab page.','line_number':2636,'multiline':False]
['text':' return false when it's a window in the current tab page, thus','line_number':2645,'multiline':False]
['text':' the buffer was in diff mode here','line_number':2646,'multiline':False]
['text':'/ Find info for the current window in buffer "buf".','line_number':2654,'multiline':False]
['text':'/ If not found, return the info for the most recently used window.','line_number':2655,'multiline':False]
['text':'/','line_number':2656,'multiline':False]
['text':'/ @param need_options      when true, skip entries where wi_optset is false.','line_number':2657,'multiline':False]
['text':'/ @param skip_diff_buffer  when true, avoid windows with 'diff' set that is in another tab page.','line_number':2658,'multiline':False]
['text':'/','line_number':2659,'multiline':False]
['text':'/ @return  NULL when there isn't any info.','line_number':2660,'multiline':False]
['text':' If no wininfo for curwin, use the first in the list (that doesn't have','line_number':2678,'multiline':False]
['text':' 'diff' set and is in another tab page).','line_number':2679,'multiline':False]
['text':' If "need_options" is true skip entries that don't have options set,','line_number':2680,'multiline':False]
['text':' unless the window is editing "buf", so we can copy from the window','line_number':2681,'multiline':False]
['text':' itself.','line_number':2682,'multiline':False]
['text':'/ Reset the local window options to the values last used in this window.','line_number':2699,'multiline':False]
['text':'/ If the buffer wasn't used in this window before, use the values from','line_number':2700,'multiline':False]
['text':'/ the most recently used window.  If the values were never set, use the','line_number':2701,'multiline':False]
['text':'/ global values for the window.','line_number':2702,'multiline':False]
['text':' Set 'foldlevel' to 'foldlevelstart' if it's not negative.','line_number':2733,'multiline':False]
['text':'/ Find the mark for the buffer 'buf' for the current window.','line_number':2740,'multiline':False]
['text':'/','line_number':2741,'multiline':False]
['text':'/ @return  a pointer to no_position if no position is found.','line_number':2742,'multiline':False]
['text':'/ Find the lnum for the buffer 'buf' for the current window.','line_number':2752,'multiline':False]
['text':'/ List all known file names (for :files and :buffers command).','line_number':2759,'multiline':False]
['text':' skip unspecified buffers','line_number':2791,'multiline':False]
['text':' put "line 999" in column 40 or after the file name','line_number':2842,'multiline':False]
['text':'/ Get file name and line number for file 'fnum'.','line_number':2863,'multiline':False]
['text':'/ Used by DoOneCmd() for translating '%' and '#'.','line_number':2864,'multiline':False]
['text':'/ Used by insert_reg() and cmdline_paste() for '#' register.','line_number':2865,'multiline':False]
['text':'/','line_number':2866,'multiline':False]
['text':'/ @return  FAIL if not found, OK for success.','line_number':2867,'multiline':False]
['text':'/ Set the file name for "buf" to "ffname_arg", short file name to','line_number':2881,'multiline':False]
['text':'/ "sfname_arg".','line_number':2882,'multiline':False]
['text':'/ The file name with the full path is also remembered, for when :cd is used.','line_number':2883,'multiline':False]
['text':'/','line_number':2884,'multiline':False]
['text':'/ @param message  give message when buffer already exists','line_number':2885,'multiline':False]
['text':'/','line_number':2886,'multiline':False]
['text':'/ @return  FAIL for failure (file name already in use by other buffer) OK otherwise.','line_number':2887,'multiline':False]
['text':' Removing the name.','line_number':2897,'multiline':False]
['text':' will allocate ffname','line_number':2905,'multiline':False]
['text':' out of memory','line_number':2906,'multiline':False]
['text':' If the file name is already used in another buffer:','line_number':2910,'multiline':False]
['text':' - if the buffer is loaded, fail','line_number':2911,'multiline':False]
['text':' - if the buffer is not loaded, delete it from the list','line_number':2912,'multiline':False]
['text':' it's loaded, fail','line_number':2918,'multiline':False]
['text':' delete from the list','line_number':2925,'multiline':False]
['text':' set correct case for short file name','line_number':2930,'multiline':False]
['text':'/ Crude way of changing the name of a buffer.  Use with care!','line_number':2951,'multiline':False]
['text':'/ The name should be relative to the current directory.','line_number':2952,'multiline':False]
['text':' Allocate ffname and expand into full path.  Also resolves .lnk','line_number':2966,'multiline':False]
['text':' files on Win32.','line_number':2967,'multiline':False]
['text':'/ Take care of what needs to be done when the name of buffer "buf" has changed.','line_number':2972,'multiline':False]
['text':' If the file name changed, also change the name of the swapfile','line_number':2975,'multiline':False]
['text':' check file name for arg list','line_number':2981,'multiline':False]
['text':' set window title','line_number':2983,'multiline':False]
['text':' status lines need to be redrawn','line_number':2984,'multiline':False]
['text':' check named file marks','line_number':2985,'multiline':False]
['text':' reset timestamp','line_number':2986,'multiline':False]
['text':'/ Set alternate file name for current window','line_number':2989,'multiline':False]
['text':'/','line_number':2990,'multiline':False]
['text':'/ Used by do_one_cmd(), do_write() and do_ecmd().','line_number':2991,'multiline':False]
['text':'/','line_number':2992,'multiline':False]
['text':'/ @return  the buffer.','line_number':2993,'multiline':False]
['text':' Create a buffer.  'buflisted' is not set if it's a new buffer','line_number':2996,'multiline':False]
['text':'/ Get alternate file name for current window.','line_number':3004,'multiline':False]
['text':'/ Return NULL if there isn't any, and give error message if requested.','line_number':3005,'multiline':False]
['text':'/','line_number':3006,'multiline':False]
['text':'/ @param errmsg  give error message','line_number':3007,'multiline':False]
['text':'/ Add a file name to the buflist and return its number.','line_number':3022,'multiline':False]
['text':'/ Uses same flags as buflist_new(), except BLN_DUMMY.','line_number':3023,'multiline':False]
['text':'/','line_number':3024,'multiline':False]
['text':'/ Used by qf_init(), main() and doarglist()','line_number':3025,'multiline':False]
['text':'/ Adjust slashes in file names.  Called after 'shellslash' was set.','line_number':3036,'multiline':False]
['text':'/ Set alternate cursor position for the current buffer and window "win".','line_number':3051,'multiline':False]
['text':'/ Also save the local window option values.','line_number':3052,'multiline':False]
['text':'/ Check that "ffname" is not the same file as current file.','line_number':3058,'multiline':False]
['text':'/ Fname must have a full path (expanded by path_to_absolute()).','line_number':3059,'multiline':False]
['text':'/','line_number':3060,'multiline':False]
['text':'/ @param  ffname  full path name to check','line_number':3061,'multiline':False]
['text':'/ Check that "ffname" is not the same file as the file loaded in "buf".','line_number':3068,'multiline':False]
['text':'/ Fname must have a full path (expanded by path_to_absolute()).','line_number':3069,'multiline':False]
['text':'/','line_number':3070,'multiline':False]
['text':'/ @param  buf            buffer to check','line_number':3071,'multiline':False]
['text':'/ @param  ffname         full path name to check','line_number':3072,'multiline':False]
['text':'/ @param  file_id_p      information about the file at "ffname".','line_number':3073,'multiline':False]
['text':'/ @param  file_id_valid  whether a valid "file_id_p" was passed in.','line_number':3074,'multiline':False]
['text':' no name is different','line_number':3078,'multiline':False]
['text':' If no struct stat given, get it now','line_number':3087,'multiline':False]
['text':' file_id not valid, assume files are different.','line_number':3093,'multiline':False]
['text':' Use dev/ino to check if the files are the same, even when the names','line_number':3096,'multiline':False]
['text':' are different (possible with links).  Still need to compare the','line_number':3097,'multiline':False]
['text':' name above, for when the file doesn't exist yet.','line_number':3098,'multiline':False]
['text':' Problem: The dev/ino changes when a file is deleted (and created','line_number':3099,'multiline':False]
['text':' again) and remains the same when renamed/moved.  We don't want to','line_number':3100,'multiline':False]
['text':' stat() each buffer each time, that would be too slow.  Get the','line_number':3101,'multiline':False]
['text':' dev/ino again when they appear to match, but not when they appear','line_number':3102,'multiline':False]
['text':' to be different: Could skip a buffer when it's actually the same','line_number':3103,'multiline':False]
['text':' file.','line_number':3104,'multiline':False]
['text':'/ Set file_id for a buffer.','line_number':3115,'multiline':False]
['text':'/ Must always be called when b_fname is changed!','line_number':3116,'multiline':False]
['text':'/ Check that file_id in buffer "buf" matches with "file_id".','line_number':3129,'multiline':False]
['text':'/','line_number':3130,'multiline':False]
['text':'/ @param  buf      buffer','line_number':3131,'multiline':False]
['text':'/ @param  file_id  file id','line_number':3132,'multiline':False]
['text':'/ Print info about the current buffer.','line_number':3139,'multiline':False]
['text':'/','line_number':3140,'multiline':False]
['text':'/ @param fullname  when non-zero print full path','line_number':3141,'multiline':False]
['text':' 2 CTRL-G: include buffer number','line_number':3150,'multiline':False]
['text':' With 32 bit longs and more than 21,474,836 lines multiplying by 100','line_number':3186,'multiline':False]
['text':' causes an overflow, thus for large numbers divide instead.','line_number':3187,'multiline':False]
['text':' Current line and column are already on the screen -- webb','line_number':3198,'multiline':False]
['text':' Temporarily set msg_scroll to avoid the message being truncated.','line_number':3219,'multiline':False]
['text':' First call msg_start() to get the message in the right place.','line_number':3220,'multiline':False]
['text':' Need to repeat the message after redrawing when:','line_number':3229,'multiline':False]
['text':' - When restart_edit is set (otherwise there will be a delay','line_number':3230,'multiline':False]
['text':'   before redrawing).','line_number':3231,'multiline':False]
['text':' - When the screen was scrolled but there is no wait-return','line_number':3232,'multiline':False]
['text':'   prompt.','line_number':3233,'multiline':False]
['text':'/ Put the title name in the title bar and icon of the window.','line_number':3253,'multiline':False]
['text':' Postpone updating the title when 'lazyredraw' is set.','line_number':3263,'multiline':False]
['text':' nothing to do','line_number':3270,'multiline':False]
['text':' Format: "fname + (path) (1 of 2) - VIM".','line_number':3290,'multiline':False]
['text':' At least room for " - NVIM".','line_number':3294,'multiline':False]
['text':' Get path of file, replace home dir with ~.','line_number':3326,'multiline':False]
['text':' Avoid "c:/name" to be reduced to "c".','line_number':3332,'multiline':False]
['text':' Remove the file name.','line_number':3337,'multiline':False]
['text':' Must be a help buffer.','line_number':3340,'multiline':False]
['text':' Translate unprintable chars and concatenate.  Keep some','line_number':3346,'multiline':False]
['text':' room for the server name.  When there is no room (very long','line_number':3347,'multiline':False]
['text':' file name) use (...).','line_number':3348,'multiline':False]
['text':' Make it shorter by removing a bit in the middle.','line_number':3371,'multiline':False]
['text':' use file name only in icon','line_number':3397,'multiline':False]
['text':' Truncate name at 100 bytes.','line_number':3401,'multiline':False]
['text':'/ Used for title and icon: Check if "str" differs from "*last".  Set "*last"','line_number':3420,'multiline':False]
['text':'/ from "str" if it does by freeing the old value of "*last" and duplicating','line_number':3421,'multiline':False]
['text':'/ "str".','line_number':3422,'multiline':False]
['text':'/','line_number':3423,'multiline':False]
['text':'/ @param          str   desired title string','line_number':3424,'multiline':False]
['text':'/ @param[in,out]  last  current title string','line_number':3425,'multiline':False]
['text':'/','line_number':3426,'multiline':False]
['text':'/ @return  true if resettitle() is to be called.','line_number':3427,'multiline':False]
['text':'/ Set current window title','line_number':3445,'multiline':False]
['text':'/ Get relative cursor position in window into "buf[buflen]", in the localized','line_number':3461,'multiline':False]
['text':'/ percentage form like %99, 99%; using "Top", "Bot" or "All" when appropriate.','line_number':3462,'multiline':False]
['text':' Need at least 3 chars for writing.','line_number':3465,'multiline':False]
['text':' number of lines above window','line_number':3470,'multiline':False]
['text':' number of lines below window','line_number':3471,'multiline':False]
['text':' All buffer lines are displayed and there is an indication','line_number':3476,'multiline':False]
['text':' of filler lines, that can be considered seeing all lines.','line_number':3477,'multiline':False]
['text':' prepend one space','line_number':3493,'multiline':False]
['text':' localized percentage value','line_number':3498,'multiline':False]
['text':'/ Append (2 of 8) to "buf[buflen]", if editing more than one file.','line_number':3503,'multiline':False]
['text':'/','line_number':3504,'multiline':False]
['text':'/ @param          wp        window whose buffers to check','line_number':3505,'multiline':False]
['text':'/ @param[in,out]  buf       string buffer to add the text to','line_number':3506,'multiline':False]
['text':'/ @param          buflen    length of the string buffer','line_number':3507,'multiline':False]
['text':'/','line_number':3508,'multiline':False]
['text':'/ @return  true if it was appended.','line_number':3509,'multiline':False]
['text':' Nothing to do','line_number':3513,'multiline':False]
['text':' go to the end of the buffer','line_number':3520,'multiline':False]
['text':'/ Make "*ffname" a full file name, set "*sfname" to "*ffname" if not NULL.','line_number':3525,'multiline':False]
['text':'/ "*ffname" becomes a pointer to allocated memory (or NULL).','line_number':3526,'multiline':False]
['text':'/ When resolving a link both "*sfname" and "*ffname" will point to the same','line_number':3527,'multiline':False]
['text':'/ allocated memory.','line_number':3528,'multiline':False]
['text':'/ The "*ffname" and "*sfname" pointer values on call will not be freed.','line_number':3529,'multiline':False]
['text':'/ Note that the resulting "*ffname" pointer should be considered not allocated.','line_number':3530,'multiline':False]
['text':' no file name given, nothing to do','line_number':3533,'multiline':False]
['text':' no short file name given, use ffname','line_number':3536,'multiline':False]
['text':' expand to full path','line_number':3539,'multiline':False]
['text':' If the file name is a shortcut file, use the file it links to.','line_number':3543,'multiline':False]
['text':'/ @return  true if "buf" is a prompt buffer.','line_number':3554,'multiline':False]
['text':'/ Open a window for a number of buffers.','line_number':3561,'multiline':False]
['text':' Maximum number of windows to open.','line_number':3570,'multiline':False]
['text':' When true also load inactive buffers.','line_number':3571,'multiline':False]
['text':' make as many windows as possible','line_number':3575,'multiline':False]
['text':' make as many windows as specified','line_number':3578,'multiline':False]
['text':' Stop Visual mode, the cursor and "VIsual" may very well be invalid after','line_number':3586,'multiline':False]
['text':' switching to another buffer.','line_number':3587,'multiline':False]
['text':' Close superfluous windows (two windows for the same buffer).','line_number':3592,'multiline':False]
['text':' Also close windows that are not full-width.','line_number':3593,'multiline':False]
['text':' Try to close floating windows first','line_number':3599,'multiline':False]
['text':' Just in case an autocommand does something strange with','line_number':3617,'multiline':False]
['text':' windows: start all over...','line_number':3618,'multiline':False]
['text':' Without the ":tab" modifier only do the current tab page.','line_number':3627,'multiline':False]
['text':' Go through the buffer list.  When a buffer doesn't have a window yet,','line_number':3634,'multiline':False]
['text':' open one.  Otherwise move the window to the right position.','line_number':3635,'multiline':False]
['text':' Watch out for autocommands that delete buffers or windows!','line_number':3636,'multiline':False]
['text':'','line_number':3637,'multiline':False]
['text':' Don't execute Win/Buf Enter/Leave autocommands here.','line_number':3638,'multiline':False]
['text':' lastwin may be aucmd_win','line_number':3640,'multiline':False]
['text':' Check if this buffer needs a window','line_number':3644,'multiline':False]
['text':' With the ":tab" modifier don't move the window.','line_number':3650,'multiline':False]
['text':' buffer has a window, skip it','line_number':3652,'multiline':False]
['text':' Check if this buffer already has a window','line_number':3657,'multiline':False]
['text':' If the buffer already has a window, move it','line_number':3663,'multiline':False]
['text':' Split the window and put the buffer in it.','line_number':3672,'multiline':False]
['text':' use space from all windows','line_number':3674,'multiline':False]
['text':' Open the buffer in this window.','line_number':3682,'multiline':False]
['text':' Autocommands deleted the buffer.','line_number':3686,'multiline':False]
['text':' Reset the error/interrupt/exception state here so that','line_number':3693,'multiline':False]
['text':' aborting() returns false when closing a window.','line_number':3694,'multiline':False]
['text':' User selected Quit at ATTENTION prompt; close this window.','line_number':3697,'multiline':False]
['text':' Restore the error/interrupt/exception state if not','line_number':3703,'multiline':False]
['text':' discarded by a new aborting error, interrupt, or uncaught','line_number':3704,'multiline':False]
['text':' exception.','line_number':3705,'multiline':False]
['text':' only break the file loading, not the rest','line_number':3714,'multiline':False]
['text':' Autocommands deleted the buffer or aborted script processing!!!','line_number':3717,'multiline':False]
['text':' When ":tab" was used open a new tab for a new window repeatedly.','line_number':3721,'multiline':False]
['text':' back to first window','line_number':3727,'multiline':False]
['text':' Close superfluous windows.','line_number':3730,'multiline':False]
['text':' BufWrite Autocommands made the window invalid, start over','line_number':3735,'multiline':False]
['text':'/ do_modelines() - process mode lines for the current file','line_number':3750,'multiline':False]
['text':'/','line_number':3751,'multiline':False]
['text':'/ @param flags','line_number':3752,'multiline':False]
['text':'/        OPT_WINONLY      only set options local to window','line_number':3753,'multiline':False]
['text':'/        OPT_NOWIN        don't set options local to window','line_number':3754,'multiline':False]
['text':'/','line_number':3755,'multiline':False]
['text':'/ Returns immediately if the "ml" option isn't set.','line_number':3756,'multiline':False]
['text':' Disallow recursive entry here.  Can happen when executing a modeline','line_number':3767,'multiline':False]
['text':' triggers an autocommand, which reloads modelines with a ":do".','line_number':3768,'multiline':False]
['text':'/ chk_modeline() - check a single line for a mode string','line_number':3791,'multiline':False]
['text':'/ Return FAIL if an error encountered.','line_number':3792,'multiline':False]
['text':'/','line_number':3793,'multiline':False]
['text':'/ @param flags  Same as for do_modelines().','line_number':3794,'multiline':False]
['text':' local copy of any modeline found','line_number':3799,'multiline':False]
['text':' Accept both "vim" and "Vim".','line_number':3810,'multiline':False]
['text':' skip over "ex:", "vi:" or "vim:"','line_number':3840,'multiline':False]
['text':' copy the line, it will change','line_number':3844,'multiline':False]
['text':' prepare for emsg()','line_number':3846,'multiline':False]
['text':' Find end of set command: ':' or end of line.','line_number':3856,'multiline':False]
['text':' Skip over "\:", replacing it with ":".','line_number':3857,'multiline':False]
['text':' If there is a "set" command, require a terminating ':' and','line_number':3867,'multiline':False]
['text':' ignore the stuff after the ':'.','line_number':3868,'multiline':False]
['text':' "vi:set opt opt opt: foo" -- foo not interpreted','line_number':3869,'multiline':False]
['text':' "vi:opt opt opt: foo" -- foo interpreted','line_number':3870,'multiline':False]
['text':' Accept "se" for compatibility with Elvis.','line_number':3871,'multiline':False]
['text':' no terminating ':'?','line_number':3874,'multiline':False]
['text':' truncate the set command','line_number':3880,'multiline':False]
['text':' skip over an empty "::"','line_number':3882,'multiline':False]
['text':' Make sure no risky things are executed as a side effect.','line_number':3888,'multiline':False]
['text':' stop if error found','line_number':3895,'multiline':False]
['text':' advance to next part','line_number':3899,'multiline':False]
['text':'/ @return  true if "buf" is a help buffer.','line_number':3908,'multiline':False]
['text':'/ @return  true if "buf" is a normal buffer, 'buftype' is empty.','line_number':3915,'multiline':False]
['text':'/ @return  true if "buf" is the quickfix buffer.','line_number':3922,'multiline':False]
['text':'/ @return  true if "buf" is a terminal buffer.','line_number':3929,'multiline':False]
['text':'/ @return  true if "buf" is a "nofile", "acwrite", "terminal" or "prompt"','line_number':3936,'multiline':False]
['text':'/          buffer.  This means the buffer name may not be a file name,','line_number':3937,'multiline':False]
['text':'/          at least not for writing the buffer.','line_number':3938,'multiline':False]
['text':'/ @return  true if "buf" is a "nofile", "quickfix", "terminal" or "prompt"','line_number':3948,'multiline':False]
['text':'/          buffer.  This means the buffer is not to be read from a file.','line_number':3949,'multiline':False]
['text':'/ @return  true if "buf" has 'buftype' set to "nofile".','line_number':3959,'multiline':False]
['text':'/ @return  true if "buf" is a "nowrite", "nofile", "terminal" or "prompt"','line_number':3966,'multiline':False]
['text':'/          buffer.','line_number':3967,'multiline':False]
['text':'/ @return  true if the buffer should be hidden, according to 'hidden', ":hide"','line_number':3986,'multiline':False]
['text':'/          and 'bufhidden'.','line_number':3987,'multiline':False]
['text':' 'bufhidden' overrules 'hidden' and ":hide", check it first','line_number':3991,'multiline':False]
['text':' "unload"','line_number':3993,'multiline':False]
['text':' "wipe"','line_number':3994,'multiline':False]
['text':' "delete"','line_number':3996,'multiline':False]
['text':' "hide"','line_number':3998,'multiline':False]
['text':'/ @return  special buffer name or','line_number':4003,'multiline':False]
['text':'/          NULL when the buffer has a normal file name.','line_number':4004,'multiline':False]
['text':' Differentiate between the quickfix and location list buffers using','line_number':4008,'multiline':False]
['text':' the buffer number stored in the global quickfix stack.','line_number':4009,'multiline':False]
['text':' There is no _file_ when 'buftype' is "nofile", b_sfname','line_number':4015,'multiline':False]
['text':' contains the name as specified by the user.','line_number':4016,'multiline':False]
['text':'/ Get "buf->b_fname", use "[No Name]" if it is NULL.','line_number':4032,'multiline':False]
['text':'/ Set 'buflisted' for curbuf to "on" and trigger autocommands if it changed.','line_number':4042,'multiline':False]
['text':'/ Read the file for "buf" again and check if the contents changed.','line_number':4057,'multiline':False]
['text':'/ Return true if it changed or this could not be checked.','line_number':4058,'multiline':False]
['text':'/','line_number':4059,'multiline':False]
['text':'/ @param  buf  buffer to check','line_number':4060,'multiline':False]
['text':'/','line_number':4061,'multiline':False]
['text':'/ @return  true if the buffer's contents have changed','line_number':4062,'multiline':False]
['text':' Allocate a buffer without putting it in the buffer list.','line_number':4068,'multiline':False]
['text':' Force the 'fileencoding' and 'fileformat' to be equal.','line_number':4074,'multiline':False]
['text':' Set curwin/curbuf to buf and save a few things.','line_number':4078,'multiline':False]
['text':' We don't want to trigger autocommands now, they may have nasty','line_number':4082,'multiline':False]
['text':' side-effects like wiping buffers','line_number':4083,'multiline':False]
['text':' compare the two files line by line','line_number':4090,'multiline':False]
['text':' restore curwin/curbuf and a few other things','line_number':4103,'multiline':False]
['text':' safety check','line_number':4106,'multiline':False]
['text':'/ Wipe out a buffer and decrement the last buffer number if it was used for','line_number':4115,'multiline':False]
['text':'/ this buffer.  Call this to wipe out a temp buffer that does not contain any','line_number':4116,'multiline':False]
['text':'/ marks.','line_number':4117,'multiline':False]
['text':'/','line_number':4118,'multiline':False]
['text':'/ @param aucmd  When true trigger autocommands.','line_number':4119,'multiline':False]
['text':' Don't trigger BufDelete autocommands here.','line_number':4123,'multiline':False]
['text':'/ Creates or switches to a scratch buffer. :h special-buffers','line_number':4132,'multiline':False]
['text':'/ Scratch buffer is:','line_number':4133,'multiline':False]
['text':'/   - buftype=nofile bufhidden=hide noswapfile','line_number':4134,'multiline':False]
['text':'/   - Always considered 'nomodified'','line_number':4135,'multiline':False]
['text':'/','line_number':4136,'multiline':False]
['text':'/ @param bufnr     Buffer to switch to, or 0 to create a new buffer.','line_number':4137,'multiline':False]
['text':'/','line_number':4138,'multiline':False]
['text':'/ @see curbufIsChanged()','line_number':4139,'multiline':False]
['text':'/','line_number':4140,'multiline':False]
['text':'/ @return  FAIL for failure, OK otherwise','line_number':4141,'multiline':False]
