['text':' arglist.c: functions for dealing with the argument list','line_number':1,'multiline':False]
['text':'/ State used by the :all command to open all the files in the argument list in','line_number':43,'multiline':False]
['text':'/ separate windows.','line_number':44,'multiline':False]
['text':'/< argument list to be used','line_number':46,'multiline':False]
['text':'/< use first window for arglist','line_number':51,'multiline':False]
['text':'/< Array of weight for which args are open:','line_number':52,'multiline':False]
['text':'/<  0: not opened','line_number':53,'multiline':False]
['text':'/<  1: opened in other tab','line_number':54,'multiline':False]
['text':'/<  2: opened in curtab','line_number':55,'multiline':False]
['text':'/<  3: opened in curtab and curwin','line_number':56,'multiline':False]
['text':'/< length of opened[]','line_number':57,'multiline':False]
['text':'/ This flag is set whenever the argument list is being changed and calling a','line_number':77,'multiline':False]
['text':'/ function that might trigger an autocommand.','line_number':78,'multiline':False]
['text':'/ Clear an argument list: free all file names and reset it to zero entries.','line_number':90,'multiline':False]
['text':'/ Init an argument list.','line_number':100,'multiline':False]
['text':'/ Remove a reference from an argument list.','line_number':106,'multiline':False]
['text':'/ Ignored when the argument list is the global one.','line_number':107,'multiline':False]
['text':'/ If the argument list is no longer used by any window, free it.','line_number':108,'multiline':False]
['text':'/ Create a new argument list and use it for the current window.','line_number':117,'multiline':False]
['text':'/ Expand the file names in the global argument list.','line_number':128,'multiline':False]
['text':'/ If "fnum_list" is not NULL, use "fnum_list[fnum_len]" as a list of buffer','line_number':129,'multiline':False]
['text':'/ numbers to be re-used.','line_number':130,'multiline':False]
['text':' Don't use 'suffixes' here.  This should work like the shell did the','line_number':137,'multiline':False]
['text':' expansion.  Also, the vimrc file isn't read yet, thus the user','line_number':138,'multiline':False]
['text':' can't set the options.','line_number':139,'multiline':False]
['text':'/ Set the argument list for the current window.','line_number':159,'multiline':False]
['text':'/ Takes over the allocated files[] and the allocated fnames in it.','line_number':160,'multiline':False]
['text':' When adding many buffers this can take a long time.  Allow','line_number':172,'multiline':False]
['text':' interrupting here.','line_number':173,'multiline':False]
['text':' May set buffer name of a buffer previously used for the','line_number':180,'multiline':False]
['text':' argument list, so that it's re-used by alist_add.','line_number':181,'multiline':False]
['text':'/ Add file "fname" to argument list "al".','line_number':199,'multiline':False]
['text':'/ "fname" must have been allocated and "al" must have been checked for room.','line_number':200,'multiline':False]
['text':'/','line_number':201,'multiline':False]
['text':'/ @param set_fnum  1: set buffer number; 2: re-use curbuf','line_number':202,'multiline':False]
['text':' don't add NULL file names','line_number':205,'multiline':False]
['text':'/ Adjust slashes in file names.  Called after 'shellslash' was set.','line_number':228,'multiline':False]
['text':'/ Isolate one argument, taking backticks.','line_number':250,'multiline':False]
['text':'/ Changes the argument in-place, puts a NUL after it.  Backticks remain.','line_number':251,'multiline':False]
['text':'/','line_number':252,'multiline':False]
['text':'/ @return  a pointer to the start of the next argument.','line_number':253,'multiline':False]
['text':' When the backslash is used for escaping the special meaning of a','line_number':260,'multiline':False]
['text':' character we need to keep it until wildcard expansion.','line_number':261,'multiline':False]
['text':' An item ends at a space not in backticks','line_number':266,'multiline':False]
['text':'/ Separate the arguments in "str" and return a list of pointers in the','line_number':282,'multiline':False]
['text':'/ growarray "gap".','line_number':283,'multiline':False]
['text':' If str is escaped, don't handle backslashes or spaces','line_number':290,'multiline':False]
['text':' Isolate one argument, change it in-place, put a NUL after it.','line_number':295,'multiline':False]
['text':'/ Parse a list of arguments (file names), expand them and return in','line_number':300,'multiline':False]
['text':'/ "fnames[fcountp]".  When "wig" is true, removes files matching 'wildignore'.','line_number':301,'multiline':False]
['text':'/','line_number':302,'multiline':False]
['text':'/ @return  FAIL or OK.','line_number':303,'multiline':False]
['text':'/ Check the validity of the arg_idx for each other window.','line_number':323,'multiline':False]
['text':'/ Add files[count] to the arglist of the current window after arg "after".','line_number':333,'multiline':False]
['text':'/ The file names in files[count] must have been allocated and are taken over.','line_number':334,'multiline':False]
['text':'/ Files[] itself is not taken over.','line_number':335,'multiline':False]
['text':'/','line_number':336,'multiline':False]
['text':'/ @param after: where to add: 0 = before first one','line_number':337,'multiline':False]
['text':'/ @param will_edit  will edit adding argument','line_number':338,'multiline':False]
['text':'/ Delete the file names in "alist_ga" from the argument list.','line_number':370,'multiline':False]
['text':' Delete the items: use each item as a regexp and find a match in the','line_number':375,'multiline':False]
['text':' argument list.','line_number':376,'multiline':False]
['text':' ignore case when 'fileignorecase' is set','line_number':377,'multiline':False]
['text':'/ @param str','line_number':414,'multiline':False]
['text':'/ @param what','line_number':415,'multiline':False]
['text':'/         AL_SET: Redefine the argument list to 'str'.','line_number':416,'multiline':False]
['text':'/         AL_ADD: add files in 'str' to the argument list after "after".','line_number':417,'multiline':False]
['text':'/         AL_DEL: remove files in 'str' from the argument list.','line_number':418,'multiline':False]
['text':'/ @param after','line_number':419,'multiline':False]
['text':'/         0 means before first one','line_number':420,'multiline':False]
['text':'/ @param will_edit  will edit added argument','line_number':421,'multiline':False]
['text':'/','line_number':422,'multiline':False]
['text':'/ @return  FAIL for failure, OK otherwise.','line_number':423,'multiline':False]
['text':' Set default argument for ":argadd" command.','line_number':436,'multiline':False]
['text':' Collect all file name arguments in "new_ga".','line_number':445,'multiline':False]
['text':'/ Redefine the argument list.','line_number':474,'multiline':False]
['text':'/ @return  true if window "win" is editing the file at the current argument','line_number':480,'multiline':False]
['text':'/          index.','line_number':481,'multiline':False]
['text':'/ Check if window "win" is editing the w_arg_idx file in its argument list.','line_number':493,'multiline':False]
['text':' We are not editing the current entry in the argument list.','line_number':497,'multiline':False]
['text':' Set "arg_had_last" if we are editing the last one.','line_number':498,'multiline':False]
['text':' We are editing the current entry in the argument list.','line_number':513,'multiline':False]
['text':' Set "arg_had_last" if it's also the last one','line_number':514,'multiline':False]
['text':'/ ":args", ":argslocal" and ":argsglobal".','line_number':522,'multiline':False]
['text':' eap->cmdidx == CMD_arglocal','line_number':532,'multiline':False]
['text':' ":args file ..": define new argument list, handle like ":next"','line_number':537,'multiline':False]
['text':' Also for ":argslocal file .." and ":argsglobal file ..".','line_number':538,'multiline':False]
['text':' ":args": list arguments.','line_number':547,'multiline':False]
['text':' empty argument list','line_number':550,'multiline':False]
['text':' Overwrite the command, for a short list there is no scrolling','line_number':555,'multiline':False]
['text':' required and no wait_return().','line_number':556,'multiline':False]
['text':' ":argslocal": make a local copy of the global argument list.','line_number':568,'multiline':False]
['text':'/ ":previous", ":sprevious", ":Next" and ":sNext".','line_number':584,'multiline':False]
['text':' If past the last one already, go to the last one.','line_number':587,'multiline':False]
['text':'/ ":rewind", ":first", ":sfirst" and ":srewind".','line_number':595,'multiline':False]
['text':'/ ":last" and ":slast".','line_number':601,'multiline':False]
['text':'/ ":argument" and ":sargument".','line_number':607,'multiline':False]
['text':'/ Edit file "argn" of the argument lists.','line_number':620,'multiline':False]
['text':' split window or create new tab page first','line_number':639,'multiline':False]
['text':' if 'hidden' set, only check for changed file when re-editing','line_number':646,'multiline':False]
['text':' the same buffer','line_number':647,'multiline':False]
['text':' Edit the file; always use the last known line number.','line_number':668,'multiline':False]
['text':' When it fails (e.g. Abort for already edited file) restore the','line_number':669,'multiline':False]
['text':' argument index.','line_number':670,'multiline':False]
['text':' like Vi: set the mark where the cursor is in the file.','line_number':677,'multiline':False]
['text':'/ ":next", and commands that behave like it.','line_number':682,'multiline':False]
['text':' check for changed buffer now, if this fails the argument list is not','line_number':685,'multiline':False]
['text':' redefined.','line_number':686,'multiline':False]
['text':' redefine file list','line_number':693,'multiline':False]
['text':'/ ":argdedupe"','line_number':705,'multiline':False]
['text':' Expand each argument to a full path to catch different paths leading','line_number':709,'multiline':False]
['text':' to the same file.','line_number':710,'multiline':False]
['text':' remove one duplicate argument','line_number':719,'multiline':False]
['text':'/ ":argedit"','line_number':739,'multiline':False]
['text':' Whether curbuf will be reused, curbuf->b_ffname will be set.','line_number':743,'multiline':False]
['text':' Edit the argument.','line_number':756,'multiline':False]
['text':'/ ":argadd"','line_number':762,'multiline':False]
['text':'/ ":argdelete"','line_number':771,'multiline':False]
['text':' ":argdel" works like ":.argdel"','line_number':779,'multiline':False]
['text':' ":1,4argdel": Delete all arguments in the range.','line_number':787,'multiline':False]
['text':' Can't have both a range and an argument.','line_number':792,'multiline':False]
['text':' Don't give an error for ":%argdel" if the list is empty.','line_number':795,'multiline':False]
['text':'/ Function given to ExpandGeneric() to obtain the possible arguments of the','line_number':823,'multiline':False]
['text':'/ argedit and argdelete commands.','line_number':824,'multiline':False]
['text':'/ Get the file name for an argument list entry.','line_number':833,'multiline':False]
['text':' Use the name from the associated buffer if it exists.','line_number':836,'multiline':False]
['text':'/ Close all the windows containing files which are not in the argument list.','line_number':844,'multiline':False]
['text':'/ Used by the ":all" command.','line_number':845,'multiline':False]
['text':' Try to close floating windows first','line_number':857,'multiline':False]
['text':' check if the buffer in this window is in the arglist','line_number':870,'multiline':False]
['text':' Use the current argument list for all windows','line_number':900,'multiline':False]
['text':' containing a file from it.','line_number':901,'multiline':False]
['text':' close this window','line_number':912,'multiline':False]
['text':' If the buffer was changed, and we would like to hide it, try autowriting.','line_number':915,'multiline':False]
['text':' Check if autocommands removed the window.','line_number':920,'multiline':False]
['text':' Start all over...','line_number':922,'multiline':False]
['text':' don't close last window','line_number':926,'multiline':False]
['text':' check if autocommands removed the next window','line_number':932,'multiline':False]
['text':' start all over...','line_number':934,'multiline':False]
['text':' Without the ":tab" modifier only do the current tab page.','line_number':942,'multiline':False]
['text':' check if autocommands removed the next tab page','line_number':947,'multiline':False]
['text':' start all over...','line_number':949,'multiline':False]
['text':'/ Open up to "count" windows for the files in the argument list "aall->alist".','line_number':955,'multiline':False]
['text':' ":tab drop file" should re-use an empty window to avoid "--remote-tab"','line_number':960,'multiline':False]
['text':' leaving an empty tab page when executed locally.','line_number':961,'multiline':False]
['text':' Move the already present window to below the current window','line_number':975,'multiline':False]
['text':' trigger events for tab drop','line_number':996,'multiline':False]
['text':' split current window','line_number':1000,'multiline':False]
['text':' use space from all windows','line_number':1002,'multiline':False]
['text':' first window: do autocmd for leaving this buffer','line_number':1008,'multiline':False]
['text':' edit file "i"','line_number':1012,'multiline':False]
['text':' When ":tab" was used open a new tab for a new window repeatedly.','line_number':1032,'multiline':False]
['text':'/ do_arg_all(): Open up to 'count' windows, one for each argument.','line_number':1039,'multiline':False]
['text':'/','line_number':1040,'multiline':False]
['text':'/ @param forceit    hide buffers in current windows','line_number':1041,'multiline':False]
['text':'/ @param keep_tabs  keep current tabs, for ":tab drop file"','line_number':1042,'multiline':False]
['text':' satisfy coverity','line_number':1049,'multiline':False]
['text':' Don't give an error message.  We don't want it when the ":all"','line_number':1056,'multiline':False]
['text':' command is in the .vimrc.','line_number':1057,'multiline':False]
['text':' Autocommands may do anything to the argument list.  Make sure it's not','line_number':1073,'multiline':False]
['text':' freed while we are working here by "locking" it.  We still have to','line_number':1074,'multiline':False]
['text':' watch out for its size to be changed.','line_number':1075,'multiline':False]
['text':' Try closing all windows that are not in the argument list.','line_number':1082,'multiline':False]
['text':' Also close windows that are not full width;','line_number':1083,'multiline':False]
['text':' When 'hidden' or "forceit" set the buffer becomes hidden.','line_number':1084,'multiline':False]
['text':' Windows that have a changed buffer and can't be hidden won't be closed.','line_number':1085,'multiline':False]
['text':' When the ":tab" modifier was used do this for all tab pages.','line_number':1086,'multiline':False]
['text':' Now set the last used tabpage to where we started.','line_number':1089,'multiline':False]
['text':' Open a window for files in the argument list that don't have one.','line_number':1094,'multiline':False]
['text':' ARGCOUNT may change while doing this, because of autocommands.','line_number':1095,'multiline':False]
['text':' Don't execute Win/Buf Enter/Leave autocommands here.','line_number':1100,'multiline':False]
['text':' lastwin may be aucmd_win','line_number':1105,'multiline':False]
['text':' Open up to "count" windows.','line_number':1108,'multiline':False]
['text':' Remove the "lock" on the argument list.','line_number':1111,'multiline':False]
['text':' restore last referenced tabpage's curwin','line_number':1117,'multiline':False]
['text':' to window with first arg','line_number':1126,'multiline':False]
['text':'/ ":all" and ":sall".','line_number':1138,'multiline':False]
['text':'/ Also used for ":tab drop file ..." after setting the argument list.','line_number':1139,'multiline':False]
['text':'/ Concatenate all files in the argument list, separated by spaces, and return','line_number':1148,'multiline':False]
['text':'/ it in one allocated string.','line_number':1149,'multiline':False]
['text':'/ Spaces and backslashes in the file names are escaped with a backslash.','line_number':1150,'multiline':False]
['text':' Do this loop two times:','line_number':1155,'multiline':False]
['text':' first time: compute the total length','line_number':1156,'multiline':False]
['text':' second time: concatenate the names','line_number':1157,'multiline':False]
['text':' insert a space in between names','line_number':1166,'multiline':False]
['text':' insert a backslash','line_number':1178,'multiline':False]
['text':' second time: break here','line_number':1191,'multiline':False]
['text':' allocate memory','line_number':1197,'multiline':False]
['text':'/ "argc([window id])" function','line_number':1204,'multiline':False]
['text':' use the current window','line_number':1208,'multiline':False]
['text':' use the global argument list','line_number':1212,'multiline':False]
['text':' use the argument list of the specified window','line_number':1215,'multiline':False]
['text':'/ "argidx()" function','line_number':1225,'multiline':False]
['text':'/ "arglistid()" function','line_number':1231,'multiline':False]
['text':'/ Get the argument list for a given window','line_number':1241,'multiline':False]
['text':'/ "argv(nr)" function','line_number':1252,'multiline':False]
['text':' Use the argument list of the specified window','line_number':1273,'multiline':False]
