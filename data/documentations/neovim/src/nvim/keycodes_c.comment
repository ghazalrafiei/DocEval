['text':' Some useful tables.','line_number':27,'multiline':False]
['text':'/< Bit-mask for particular key modifier.','line_number':30,'multiline':False]
['text':'/< Bit(s) for particular key modifier.','line_number':31,'multiline':False]
['text':'/< Single letter name of modifier.','line_number':32,'multiline':False]
['text':' 'A' must be the last one','line_number':42,'multiline':False]
['text':' NOTE: when adding an entry, update MAX_KEY_NAME_LEN!','line_number':45,'multiline':False]
['text':' Shifted key terminal codes and their unshifted equivalent.','line_number':48,'multiline':False]
['text':' Don't add mouse codes here, they are handled separately!','line_number':49,'multiline':False]
['text':'  mod mask      with modifier               without modifier','line_number':54,'multiline':False]
['text':' begin','line_number':55,'multiline':False]
['text':' cancel','line_number':56,'multiline':False]
['text':' command','line_number':57,'multiline':False]
['text':' copy','line_number':58,'multiline':False]
['text':' create','line_number':59,'multiline':False]
['text':' delete char','line_number':60,'multiline':False]
['text':' delete line','line_number':61,'multiline':False]
['text':' end','line_number':62,'multiline':False]
['text':' end','line_number':63,'multiline':False]
['text':' exit','line_number':64,'multiline':False]
['text':' find','line_number':65,'multiline':False]
['text':' help','line_number':66,'multiline':False]
['text':' home','line_number':67,'multiline':False]
['text':' home','line_number':68,'multiline':False]
['text':' insert','line_number':69,'multiline':False]
['text':' left arrow','line_number':70,'multiline':False]
['text':' left arrow','line_number':71,'multiline':False]
['text':' message','line_number':72,'multiline':False]
['text':' move','line_number':73,'multiline':False]
['text':' next','line_number':74,'multiline':False]
['text':' options','line_number':75,'multiline':False]
['text':' previous','line_number':76,'multiline':False]
['text':' print','line_number':77,'multiline':False]
['text':' redo','line_number':78,'multiline':False]
['text':' replace','line_number':79,'multiline':False]
['text':' right arr.','line_number':80,'multiline':False]
['text':' right arr.','line_number':81,'multiline':False]
['text':' resume','line_number':82,'multiline':False]
['text':' save','line_number':83,'multiline':False]
['text':' suspend','line_number':84,'multiline':False]
['text':' undo','line_number':85,'multiline':False]
['text':' up arrow','line_number':86,'multiline':False]
['text':' down arrow','line_number':87,'multiline':False]
['text':' vt100 F1','line_number':89,'multiline':False]
['text':' F1','line_number':95,'multiline':False]
['text':' F10','line_number':104,'multiline':False]
['text':' TAB pseudo code','line_number':136,'multiline':False]
['text':' Special key code or ascii value','line_number':143,'multiline':False]
['text':' Name of key','line_number':144,'multiline':False]
['text':' Alternative name','line_number':150,'multiline':False]
['text':' Alternative name','line_number':151,'multiline':False]
['text':' Alternative name','line_number':152,'multiline':False]
['text':' Alternative name','line_number':154,'multiline':False]
['text':' Alternative name','line_number':155,'multiline':False]
['text':' Alternative name','line_number':157,'multiline':False]
['text':' Alternative name','line_number':159,'multiline':False]
['text':' Alternative name','line_number':164,'multiline':False]
['text':' libtermkey name','line_number':166,'multiline':False]
['text':' Alternative name','line_number':262,'multiline':False]
['text':' OBSOLETE: Use','line_number':330,'multiline':False]
['text':' ScrollWheelXXX instead','line_number':331,'multiline':False]
['text':' NOTE: When adding a long name update MAX_KEY_NAME_LEN.','line_number':345,'multiline':False]
['text':' Code for pseudo mouse event','line_number':349,'multiline':False]
['text':' Which mouse button is it?','line_number':350,'multiline':False]
['text':' Is it a mouse button click event?','line_number':351,'multiline':False]
['text':' Is it a mouse drag event?','line_number':352,'multiline':False]
['text':' DRAG without CLICK','line_number':369,'multiline':False]
['text':' RELEASE without CLICK','line_number':371,'multiline':False]
['text':'/ Return the modifier mask bit (#MOD_MASK_*) corresponding to mod name','line_number':376,'multiline':False]
['text':'/','line_number':377,'multiline':False]
['text':'/ E.g. 'S' for shift, 'C' for ctrl.','line_number':378,'multiline':False]
['text':'/ Check if there is a special key code for "key" with specified modifiers','line_number':391,'multiline':False]
['text':'/','line_number':392,'multiline':False]
['text':'/ @param[in]  key  Initial key code.','line_number':393,'multiline':False]
['text':'/ @param[in,out]  modifiers  Initial modifiers, is adjusted to have simplified','line_number':394,'multiline':False]
['text':'/                            modifiers.','line_number':395,'multiline':False]
['text':'/','line_number':396,'multiline':False]
['text':'/ @return Simplified key code.','line_number':397,'multiline':False]
['text':' TAB is a special case.','line_number':405,'multiline':False]
['text':'/ Change <xKey> to <Key>','line_number':424,'multiline':False]
['text':'/ @return  a string which contains the name of the given key when the given modifiers are down.','line_number':465,'multiline':False]
['text':' Key that stands for a normal character.','line_number':473,'multiline':False]
['text':' Translate shifted special keys into unshifted keys and set modifier.','line_number':478,'multiline':False]
['text':' Same for CTRL and ALT modifiers.','line_number':479,'multiline':False]
['text':' try to find the key in the special key table','line_number':492,'multiline':False]
['text':' When not a known special key, and not a printable character, try to','line_number':495,'multiline':False]
['text':' extract modifiers.','line_number':496,'multiline':False]
['text':' try again, to find the un-alted key in the special key table','line_number':504,'multiline':False]
['text':' translate the modifier into a string','line_number':513,'multiline':False]
['text':' unknown special key, may output t_xx','line_number':522,'multiline':False]
['text':' Not a special key, only modifiers, output directly.','line_number':529,'multiline':False]
['text':' use name of special key','line_number':541,'multiline':False]
['text':'/ Try translating a <> name ("keycode").','line_number':554,'multiline':False]
['text':'/','line_number':555,'multiline':False]
['text':'/ @param[in,out]  srcp  Source from which <> are translated. Is advanced to','line_number':556,'multiline':False]
['text':'/                       after the <> name if there is a match.','line_number':557,'multiline':False]
['text':'/ @param[in]  src_len  Length of the srcp.','line_number':558,'multiline':False]
['text':'/ @param[out]  dst  Location where translation result will be kept. It must','line_number':559,'multiline':False]
['text':'                    be at least 19 bytes per "<x>" form.','line_number':560,'multiline':False]
['text':'/ @param[in]  flags  FSK_ values','line_number':561,'multiline':False]
['text':'/ @param[in]  escape_ks  escape K_SPECIAL bytes in the character','line_number':562,'multiline':False]
['text':'/ @param[out]  did_simplify  found <C-H>, etc.','line_number':563,'multiline':False]
['text':'/','line_number':564,'multiline':False]
['text':'/ @return Number of characters added to dst, zero for no match.','line_number':565,'multiline':False]
['text':'/ Put the character sequence for "key" with "modifiers" into "dst" and return','line_number':579,'multiline':False]
['text':'/ the resulting length.','line_number':580,'multiline':False]
['text':'/ When "escape_ks" is true escape K_SPECIAL bytes in the character.','line_number':581,'multiline':False]
['text':'/ The sequence is not NUL terminated.','line_number':582,'multiline':False]
['text':'/ This is how characters in a string are encoded.','line_number':583,'multiline':False]
['text':' Put the appropriate modifier in a string.','line_number':588,'multiline':False]
['text':'/ Try translating a <> name','line_number':610,'multiline':False]
['text':'/','line_number':611,'multiline':False]
['text':'/ @param[in,out]  srcp  Translated <> name. Is advanced to after the <> name.','line_number':612,'multiline':False]
['text':'/ @param[in]  src_len  srcp length.','line_number':613,'multiline':False]
['text':'/ @param[out]  modp  Location where information about modifiers is saved.','line_number':614,'multiline':False]
['text':'/ @param[in]  flags  FSK_ values','line_number':615,'multiline':False]
['text':'/ @param[out]  did_simplify  FSK_SIMPLIFY and found <C-H>, etc.','line_number':616,'multiline':False]
['text':'/','line_number':617,'multiline':False]
['text':'/ @return Key and modifiers or 0 if there is no match.','line_number':618,'multiline':False]
['text':' <*xxx>: do not simplify','line_number':637,'multiline':False]
['text':' Find end of modifier list','line_number':641,'multiline':False]
['text':' Anything accepted, like <C-?>.','line_number':648,'multiline':False]
['text':' <C-"> or <M-"> are not special in strings as " is','line_number':649,'multiline':False]
['text':' the string delimiter. With a backslash it works: <M-\">','line_number':650,'multiline':False]
['text':' skip t_xx, xx may be '-' or '>'','line_number':660,'multiline':False]
['text':' found matching '>'','line_number':672,'multiline':False]
['text':' Which modifiers are given?','line_number':676,'multiline':False]
['text':' Illegal modifier name','line_number':682,'multiline':False]
['text':' Legal modifier name.','line_number':688,'multiline':False]
['text':' <Char-123> or <Char-033> or <Char-0x33>','line_number':692,'multiline':False]
['text':' Modifier with single letter, or special key name.','line_number':702,'multiline':False]
['text':' Special case for a double-quoted string','line_number':704,'multiline':False]
['text':' get_special_key_code() may return NUL for invalid','line_number':719,'multiline':False]
['text':' special key name.','line_number':720,'multiline':False]
['text':' Only use a modifier when there is no special key code that','line_number':722,'multiline':False]
['text':' includes the modifier.','line_number':723,'multiline':False]
['text':' don't want keycode, use single byte code','line_number':727,'multiline':False]
['text':' Normal Key with modifier:','line_number':735,'multiline':False]
['text':' Try to make a single byte code (except for Alt/Meta modifiers).','line_number':736,'multiline':False]
['text':' else { ELOG("unknown key: '%s'", src); }','line_number':744,'multiline':False]
['text':'/ Try to include modifiers (except alt/meta) in the key.','line_number':750,'multiline':False]
['text':'/ Changes "Shift-a" to 'A', "Ctrl-@" to <Nul>, etc.','line_number':751,'multiline':False]
['text':'/ @param[in]  simplify  if false, don't do Ctrl','line_number':752,'multiline':False]
['text':'/ @param[out]  did_simplify  set when it is not NULL and "simplify" is true and','line_number':753,'multiline':False]
['text':'/                            Ctrl is removed from modifiers','line_number':754,'multiline':False]
['text':' Command-key and ctrl are special','line_number':759,'multiline':False]
['text':' <C-H> and <C-h> mean the same thing, always use "H"','line_number':766,'multiline':False]
['text':' <C-@> is <Nul>','line_number':774,'multiline':False]
['text':'/ Try to find key "c" in the special key table.','line_number':786,'multiline':False]
['text':'/ @return  the index when found, -1 when not found.','line_number':787,'multiline':False]
['text':'/ Find the special key with the given name','line_number':803,'multiline':False]
['text':'/','line_number':804,'multiline':False]
['text':'/ @param[in]  name  Name of the special. Does not have to end with NUL, it is','line_number':805,'multiline':False]
['text':'/                   assumed to end before the first non-idchar. If name starts','line_number':806,'multiline':False]
['text':'/                   with "t_" the next two characters are interpreted as','line_number':807,'multiline':False]
['text':'/                   a termcap name.','line_number':808,'multiline':False]
['text':'/','line_number':809,'multiline':False]
['text':'/ @return Key code or 0 if not found.','line_number':810,'multiline':False]
['text':'/ Look up the given mouse code to return the relevant information in the other arguments.','line_number':834,'multiline':False]
['text':'/ @return  which button is down or was released.','line_number':835,'multiline':False]
['text':' Shouldn't get here','line_number':845,'multiline':False]
['text':'/ Replace any terminal code strings with the equivalent internal representation.','line_number':848,'multiline':False]
['text':'/','line_number':849,'multiline':False]
['text':'/ Used for the "from" and "to" part of a mapping, and the "to" part of a menu command.','line_number':850,'multiline':False]
['text':'/ Any strings like "<C-UP>" are also replaced, unless `special` is false.','line_number':851,'multiline':False]
['text':'/ K_SPECIAL by itself is replaced by K_SPECIAL KS_SPECIAL KE_FILLER.','line_number':852,'multiline':False]
['text':'/','line_number':853,'multiline':False]
['text':'/ When "flags" has REPTERM_FROM_PART, trailing <C-v> is included, otherwise it is removed (to make','line_number':854,'multiline':False]
['text':'/ ":map xx ^V" map xx to nothing). When cpo_flags contains FLAG_CPO_BSLASH, a backslash can be','line_number':855,'multiline':False]
['text':'/ used in place of <C-v>. All other <C-v> characters are removed.','line_number':856,'multiline':False]
['text':'/','line_number':857,'multiline':False]
['text':'/ @param[in]  from  What characters to replace.','line_number':858,'multiline':False]
['text':'/ @param[in]  from_len  Length of the "from" argument.','line_number':859,'multiline':False]
['text':'/ @param[out]  bufp  Location where results were saved in case of success (allocated).','line_number':860,'multiline':False]
['text':'/                    If `*bufp` is non-NULL, it will be used directly,','line_number':861,'multiline':False]
['text':'/                    and is assumed to be 128 bytes long (enough for transcoding LHS of mapping),','line_number':862,'multiline':False]
['text':'/                    and will be set to NULL in case of failure.','line_number':863,'multiline':False]
['text':'/ @param[in]  sid_arg  Script ID to use for <SID>, or 0 to use current_sctx','line_number':864,'multiline':False]
['text':'/ @param[in]  flags  REPTERM_FROM_PART    see above','line_number':865,'multiline':False]
['text':'/                    REPTERM_DO_LT        also translate <lt>','line_number':866,'multiline':False]
['text':'/                    REPTERM_NO_SPECIAL   do not accept <key> notation','line_number':867,'multiline':False]
['text':'/                    REPTERM_NO_SIMPLIFY  do not simplify <C-H> into 0x08, etc.','line_number':868,'multiline':False]
['text':'/ @param[out]  did_simplify  set when some <C-H> code was simplified, unless it is NULL.','line_number':869,'multiline':False]
['text':'/ @param[in]  cpo_flags  Relevant flags derived from p_cpo, see CPO_TO_CPO_FLAGS.','line_number':870,'multiline':False]
['text':'/','line_number':871,'multiline':False]
['text':'/ @return  The same as what `*bufp` is set to.','line_number':872,'multiline':False]
['text':' backslash is a special character','line_number':883,'multiline':False]
['text':' Allocate space for the translation.  Worst case a single character is','line_number':888,'multiline':False]
['text':' replaced by 6 bytes (shifted special key), plus a NUL at the end.','line_number':889,'multiline':False]
['text':' buffer for resulting string','line_number':891,'multiline':False]
['text':' Copy each byte from *from to result[dlen]','line_number':895,'multiline':False]
['text':' Check for special <> keycodes, like "<C-S-LeftMouse>"','line_number':900,'multiline':False]
['text':' Change <SID>Func to K_SNR <script-nr> _Func.  This name is used','line_number':903,'multiline':False]
['text':' for script-local user functions.','line_number':904,'multiline':False]
['text':' (room: 5 * 6 = 30 bytes; needed: 3 + <nr> + 1 <= 14)','line_number':905,'multiline':False]
['text':' Replace <Leader> by the value of "mapleader".','line_number':935,'multiline':False]
['text':' Replace <LocalLeader> by the value of "maplocalleader".','line_number':936,'multiline':False]
['text':' If "mapleader" or "maplocalleader" isn't set use a backslash.','line_number':937,'multiline':False]
['text':' Allow up to 8 * 6 characters for "mapleader".','line_number':950,'multiline':False]
['text':' Remove CTRL-V and ignore the next character.','line_number':964,'multiline':False]
['text':' For "from" side the CTRL-V at the end is included, for the "to"','line_number':965,'multiline':False]
['text':' part it is removed.','line_number':966,'multiline':False]
['text':' If 'cpoptions' does not contain 'B', also accept a backslash.','line_number':967,'multiline':False]
['text':' skip CTRL-V or backslash','line_number':970,'multiline':False]
['text':' skip multibyte char correctly','line_number':979,'multiline':False]
['text':' If the character is K_SPECIAL, replace it with K_SPECIAL','line_number':981,'multiline':False]
['text':' KS_SPECIAL KE_FILLER.','line_number':982,'multiline':False]
['text':'/ Add character "c" to buffer "s"','line_number':1002,'multiline':False]
['text':'/','line_number':1003,'multiline':False]
['text':'/ Escapes the special meaning of K_SPECIAL, handles multi-byte','line_number':1004,'multiline':False]
['text':'/ characters.','line_number':1005,'multiline':False]
['text':'/','line_number':1006,'multiline':False]
['text':'/ @param[in]  c  Character to add.','line_number':1007,'multiline':False]
['text':'/ @param[out]  s  Buffer to add to. Must have at least MB_MAXBYTES + 1 bytes.','line_number':1008,'multiline':False]
['text':'/','line_number':1009,'multiline':False]
['text':'/ @return Pointer to after the added bytes.','line_number':1010,'multiline':False]
['text':' Need to escape K_SPECIAL like in the typeahead buffer.','line_number':1018,'multiline':False]
['text':'/ Copy "p" to allocated memory, escaping K_SPECIAL so that the result','line_number':1030,'multiline':False]
['text':'/ can be put in the typeahead buffer.','line_number':1031,'multiline':False]
['text':' Need a buffer to hold up to three times as much.  Four in case of an','line_number':1034,'multiline':False]
['text':' illegal utf-8 byte:','line_number':1035,'multiline':False]
['text':' 0xc0 -> 0xc3 - 0x80 -> 0xc3 K_SPECIAL KS_SPECIAL KE_FILLER','line_number':1036,'multiline':False]
['text':' Copy special key unmodified.','line_number':1041,'multiline':False]
['text':' Add character, possibly multi-byte to destination, escaping','line_number':1046,'multiline':False]
['text':' K_SPECIAL. Be careful, it can be an illegal byte!','line_number':1047,'multiline':False]
['text':'/ Remove escaping from K_SPECIAL characters.  Reverse of','line_number':1057,'multiline':False]
['text':'/ vim_strsave_escape_ks().  Works in-place.','line_number':1058,'multiline':False]
