['text':'/ @file eval/typval_encode.h','line_number':1,'multiline':False]
['text':'/','line_number':2,'multiline':False]
['text':'/ Contains common definitions for eval/typval_encode.c.h. Most of time should','line_number':3,'multiline':False]
['text':'/ not be included directly.','line_number':4,'multiline':False]
['text':'/ Type of the stack entry','line_number':16,'multiline':False]
['text':'/< Convert dict_T *dictionary.','line_number':18,'multiline':False]
['text':'/< Convert list_T *list.','line_number':19,'multiline':False]
['text':'/< Convert mapping represented as a list_T* of pairs.','line_number':20,'multiline':False]
['text':'/< Convert partial_T* partial.','line_number':21,'multiline':False]
['text':'/< Convert argc/argv pair coming from a partial.','line_number':22,'multiline':False]
['text':'/ Stage at which partial is being converted','line_number':25,'multiline':False]
['text':'/< About to convert arguments.','line_number':27,'multiline':False]
['text':'/< About to convert self dictionary.','line_number':28,'multiline':False]
['text':'/< Already converted everything.','line_number':29,'multiline':False]
['text':'/ Structure representing current Vimscript to messagepack conversion state','line_number':32,'multiline':False]
['text':'/< Type of the stack entry.','line_number':34,'multiline':False]
['text':'/< Currently converted typval_T.','line_number':35,'multiline':False]
['text':'/< copyID item used to have.','line_number':36,'multiline':False]
['text':'/< Currently converted dictionary.','line_number':39,'multiline':False]
['text':'/< Location where that dictionary is stored.','line_number':40,'multiline':False]
['text':'/< Normally it is &.tv->vval.v_dict, but not when','line_number':41,'multiline':False]
['text':'/< converting partials.','line_number':42,'multiline':False]
['text':'/< Currently converted dictionary item.','line_number':43,'multiline':False]
['text':'/< Amount of items left to process.','line_number':44,'multiline':False]
['text':'/< State of dictionary conversion.','line_number':45,'multiline':False]
['text':'/< Currently converted list.','line_number':47,'multiline':False]
['text':'/< Currently converted list item.','line_number':48,'multiline':False]
['text':'/< State of list or generic mapping conversion.','line_number':49,'multiline':False]
['text':'/< Stage at which partial is being converted.','line_number':51,'multiline':False]
['text':'/< Currently converted partial.','line_number':52,'multiline':False]
['text':'/< State of partial conversion.','line_number':53,'multiline':False]
['text':'/< Currently converted argument.','line_number':55,'multiline':False]
['text':'/< Start of the argument list.','line_number':56,'multiline':False]
['text':'/< Number of items left to process.','line_number':57,'multiline':False]
['text':'/< State of list or generic mapping conversion.','line_number':58,'multiline':False]
['text':'/< Data to convert.','line_number':59,'multiline':False]
['text':'/ Stack used to convert Vimscript values to messagepack.','line_number':62,'multiline':False]
['text':'/ Length of the string stored in typval_T','line_number':69,'multiline':False]
['text':'/','line_number':70,'multiline':False]
['text':'/ @param[in]  tv  String for which to compute length for. Must be typval_T','line_number':71,'multiline':False]
['text':'/                 with VAR_STRING.','line_number':72,'multiline':False]
['text':'/','line_number':73,'multiline':False]
['text':'/ @return Length of the string stored in typval_T, including 0 for NULL','line_number':74,'multiline':False]
['text':'/         string.','line_number':75,'multiline':False]
['text':'/ Code for checking whether container references itself','line_number':82,'multiline':False]
['text':'/','line_number':83,'multiline':False]
['text':'/ @param[in,out]  val  Container to check.','line_number':84,'multiline':False]
['text':'/ @param  copyID_attr  Name of the container attribute that holds copyID.','line_number':85,'multiline':False]
['text':'/                      After checking whether value of this attribute is','line_number':86,'multiline':False]
['text':'/                      copyID (variable) it is set to copyID.','line_number':87,'multiline':False]
['text':'/ @param[in]  copyID  CopyID used by the caller.','line_number':88,'multiline':False]
['text':'/ @param  conv_type  Type of the conversion, @see MPConvStackValType.','line_number':89,'multiline':False]
['text':'/ Construct function name, possibly using macros','line_number':106,'multiline':False]
['text':'/','line_number':107,'multiline':False]
['text':'/ Is used to expand macros that may appear in arguments.','line_number':108,'multiline':False]
['text':'/','line_number':109,'multiline':False]
['text':'/ @note Expands all arguments, even if only one is needed.','line_number':110,'multiline':False]
['text':'/','line_number':111,'multiline':False]
['text':'/ @param[in]  pref  Prefix.','line_number':112,'multiline':False]
['text':'/ @param[in]  suf  Suffix.','line_number':113,'multiline':False]
['text':'/','line_number':114,'multiline':False]
['text':'/ @return Concat: pref + #TYPVAL_ENCODE_NAME + suf.','line_number':115,'multiline':False]
['text':'/ Self reference checker function name','line_number':119,'multiline':False]
['text':'/ Entry point function name','line_number':123,'multiline':False]
['text':'/ Name of the â€¦convert_one_value function','line_number':127,'multiline':False]
['text':'/ Name of the dummy const dict_T *const variable','line_number':131,'multiline':False]
