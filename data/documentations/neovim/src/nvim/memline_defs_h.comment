['text':'/','line_number':5,'multiline':False]
['text':'/ When searching for a specific line, we remember what blocks in the tree','line_number':6,'multiline':False]
['text':'/ are the branches leading to that block. This is stored in ml_stack.  Each','line_number':7,'multiline':False]
['text':'/ entry is a pointer to info in a block (may be data block or pointer block)','line_number':8,'multiline':False]
['text':'/','line_number':9,'multiline':False]
['text':' block number','line_number':11,'multiline':False]
['text':' lowest lnum in this block','line_number':12,'multiline':False]
['text':' highest lnum in this block','line_number':13,'multiline':False]
['text':' index for block with current lnum','line_number':14,'multiline':False]
['text':' block/index pair','line_number':15,'multiline':False]
['text':' Flags when calling ml_updatechunk()','line_number':22,'multiline':False]
['text':'/ memline structure: the contents of a buffer.','line_number':27,'multiline':False]
['text':'/ Essentially a tree with a branch factor of 128.','line_number':28,'multiline':False]
['text':'/ Lines are stored at leaf nodes.','line_number':29,'multiline':False]
['text':'/ Nodes are stored on ml_mfp (memfile_T):','line_number':30,'multiline':False]
['text':'/   pointer_block: internal nodes','line_number':31,'multiline':False]
['text':'/   data_block: leaf nodes','line_number':32,'multiline':False]
['text':'/','line_number':33,'multiline':False]
['text':'/ Memline also has "chunks" of 800 lines that are separate from the 128-tree','line_number':34,'multiline':False]
['text':'/ structure, primarily used to speed up line2byte() and byte2line().','line_number':35,'multiline':False]
['text':'/','line_number':36,'multiline':False]
['text':'/ Motivation: If you have a file that is 10000 lines long, and you insert','line_number':37,'multiline':False]
['text':'/             a line at linenr 1000, you don't want to move 9000 lines in','line_number':38,'multiline':False]
['text':'/             memory.  With this structure it is roughly (N * 128) pointer','line_number':39,'multiline':False]
['text':'/             moves, where N is the height (typically 1-3).','line_number':40,'multiline':False]
['text':'/','line_number':41,'multiline':False]
['text':' number of lines in the buffer','line_number':43,'multiline':False]
['text':' pointer to associated memfile','line_number':45,'multiline':False]
['text':' stack of pointer blocks (array of IPTRs)','line_number':47,'multiline':False]
['text':' current top of ml_stack','line_number':48,'multiline':False]
['text':' total number of entries in ml_stack','line_number':49,'multiline':False]
['text':' empty buffer','line_number':51,'multiline':False]
['text':' cached line was changed and allocated','line_number':52,'multiline':False]
['text':' ml_locked was changed','line_number':53,'multiline':False]
['text':' ml_locked needs positive block number','line_number':54,'multiline':False]
['text':' ml_line_ptr is an allocated copy','line_number':55,'multiline':False]
['text':' line number of cached line, 0 if not valid','line_number':58,'multiline':False]
['text':' pointer to cached line','line_number':59,'multiline':False]
['text':' cached byte offset of ml_line_lnum','line_number':60,'multiline':False]
['text':' fileformat of cached line','line_number':61,'multiline':False]
['text':' block used by last ml_get','line_number':63,'multiline':False]
['text':' first line in ml_locked','line_number':64,'multiline':False]
['text':' last line in ml_locked','line_number':65,'multiline':False]
['text':' number of lines inserted in ml_locked','line_number':66,'multiline':False]
