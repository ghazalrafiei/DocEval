['text':' IWYU pragma: keep (langmap_adjust_mb)','line_number':46,'multiline':False]
['text':' non-existing window','line_number':81,'multiline':False]
['text':'/ flags for win_enter_ext()','line_number':85,'multiline':False]
['text':'/ When non-zero splitting a window is forbidden.  Used to avoid that nasty','line_number':99,'multiline':False]
['text':'/ autocommands mess up the window structure.','line_number':100,'multiline':False]
['text':' #define WIN_DEBUG','line_number':103,'multiline':False]
['text':'/ Call this method to log the current window layout.','line_number':105,'multiline':False]
['text':'/ @return the current window, unless in the cmdline window and "prevwin" is','line_number':128,'multiline':False]
['text':'/ set, then return "prevwin".','line_number':129,'multiline':False]
['text':' In cmdwin, the alternative buffer should be used.','line_number':133,'multiline':False]
['text':'/ If the 'switchbuf' option contains "useopen" or "usetab", then try to jump','line_number':137,'multiline':False]
['text':'/ to a window containing "buf".','line_number':138,'multiline':False]
['text':'/ Returns the pointer to the window that was jumped to or NULL.','line_number':139,'multiline':False]
['text':' If 'switchbuf' contains "useopen": jump to first window in the current','line_number':148,'multiline':False]
['text':' tab page containing "buf" if one exists.','line_number':149,'multiline':False]
['text':' If 'switchbuf' contains "usetab": jump to first window in any tab page','line_number':154,'multiline':False]
['text':' containing "buf" if one exists.','line_number':155,'multiline':False]
['text':'/ all CTRL-W window commands are handled here, called from normal_cmd().','line_number':163,'multiline':False]
['text':'/','line_number':164,'multiline':False]
['text':'/ @param xchar  extra char from ":wincmd gx" or NUL','line_number':165,'multiline':False]
['text':' split current window in two parts, horizontally','line_number':182,'multiline':False]
['text':' stop Visual mode','line_number':187,'multiline':False]
['text':' When splitting the quickfix window open a new buffer in it,','line_number':188,'multiline':False]
['text':' don't replicate the quickfix buffer.','line_number':189,'multiline':False]
['text':' split current window in two parts, vertically','line_number':196,'multiline':False]
['text':' stop Visual mode','line_number':200,'multiline':False]
['text':' When splitting the quickfix window open a new buffer in it,','line_number':201,'multiline':False]
['text':' don't replicate the quickfix buffer.','line_number':202,'multiline':False]
['text':' split current window and edit alternate file','line_number':209,'multiline':False]
['text':' stop Visual mode','line_number':213,'multiline':False]
['text':' open new window','line_number':230,'multiline':False]
['text':' stop Visual mode','line_number':234,'multiline':False]
['text':' window height','line_number':237,'multiline':False]
['text':' quit current window','line_number':249,'multiline':False]
['text':' stop Visual mode','line_number':252,'multiline':False]
['text':' close current window','line_number':257,'multiline':False]
['text':' stop Visual mode','line_number':260,'multiline':False]
['text':' close preview window','line_number':265,'multiline':False]
['text':' stop Visual mode','line_number':269,'multiline':False]
['text':' cursor to preview window','line_number':273,'multiline':False]
['text':' close all but current window','line_number':290,'multiline':False]
['text':' stop Visual mode','line_number':294,'multiline':False]
['text':' cursor to next window with wrap around','line_number':299,'multiline':False]
['text':' cursor to previous window with wrap around','line_number':302,'multiline':False]
['text':' just one window','line_number':305,'multiline':False]
['text':' go to specified window','line_number':309,'multiline':False]
['text':' go to previous window','line_number':317,'multiline':False]
['text':' wrap around','line_number':320,'multiline':False]
['text':' go to next window','line_number':326,'multiline':False]
['text':' wrap around','line_number':333,'multiline':False]
['text':' cursor to window below','line_number':341,'multiline':False]
['text':' cursor to window above','line_number':349,'multiline':False]
['text':' cursor to left window','line_number':357,'multiline':False]
['text':' cursor to right window','line_number':366,'multiline':False]
['text':' move window to new tab page','line_number':374,'multiline':False]
['text':' First create a new tab with the window, then go back to','line_number':382,'multiline':False]
['text':' the old tab and close the window there.','line_number':383,'multiline':False]
['text':' cursor to top-left window','line_number':400,'multiline':False]
['text':' cursor to bottom-right window','line_number':406,'multiline':False]
['text':' cursor to last accessed (previous) window','line_number':412,'multiline':False]
['text':' exchange current and next window','line_number':422,'multiline':False]
['text':' rotate windows downwards','line_number':429,'multiline':False]
['text':' stop Visual mode','line_number':433,'multiline':False]
['text':' downwards','line_number':434,'multiline':False]
['text':' rotate windows upwards','line_number':437,'multiline':False]
['text':' stop Visual mode','line_number':440,'multiline':False]
['text':' upwards','line_number':441,'multiline':False]
['text':' move window to the very top/bottom/left/right','line_number':444,'multiline':False]
['text':' make all windows the same width and/or height','line_number':455,'multiline':False]
['text':' increase current window height','line_number':462,'multiline':False]
['text':' decrease current window height','line_number':467,'multiline':False]
['text':' set current window height','line_number':472,'multiline':False]
['text':' increase current window width','line_number':478,'multiline':False]
['text':' decrease current window width','line_number':483,'multiline':False]
['text':' set current window width','line_number':488,'multiline':False]
['text':' jump to tag and split window if tag exists (in preview window)','line_number':493,'multiline':False]
['text':' Keep visual mode, can select words to use as a tag.','line_number':505,'multiline':False]
['text':' Execute the command right here, required when','line_number':516,'multiline':False]
['text':' "wincmd ]" was used in a function.','line_number':517,'multiline':False]
['text':' edit file name under cursor in a new window','line_number':522,'multiline':False]
['text':' If 'switchbuf' is set to 'useopen' or 'usetab' and the','line_number':539,'multiline':False]
['text':' file is already opened in a window, then jump to it.','line_number':540,'multiline':False]
['text':' Failed to open the file, close the window opened for it.','line_number':550,'multiline':False]
['text':' Go to the first occurrence of the identifier under cursor along path in a','line_number':568,'multiline':False]
['text':' new window -- webb','line_number':569,'multiline':False]
['text':' Go to any match','line_number':570,'multiline':False]
['text':' Go to definition, using 'define'','line_number':574,'multiline':False]
['text':' Make a copy, if the line was changed it will be freed.','line_number':583,'multiline':False]
['text':' Quickfix window only: view the result under the cursor in a new split.','line_number':593,'multiline':False]
['text':' CTRL-W g  extended commands','line_number':601,'multiline':False]
['text':' no mapping for xchar, but allow key codes','line_number':606,'multiline':False]
['text':' Keep visual mode, can select words to use as a tag.','line_number':626,'multiline':False]
['text':' Execute the command right here, required when','line_number':633,'multiline':False]
['text':' "wincmd g}" was used in a function.','line_number':634,'multiline':False]
['text':' CTRL-W gf: "gf" in a new tab page','line_number':639,'multiline':False]
['text':' CTRL-W gF: "gF" in a new tab page','line_number':640,'multiline':False]
['text':' CTRL-W gt: go to next tab page','line_number':645,'multiline':False]
['text':' CTRL-W gT: go to previous tab page','line_number':649,'multiline':False]
['text':' CTRL-W g<Tab>: go to last used tab page','line_number':653,'multiline':False]
['text':' no redrawing and don't set the window title','line_number':701,'multiline':False]
['text':' If window is not current, state logic will not validate its cursor.','line_number':724,'multiline':False]
['text':' So do it now.','line_number':725,'multiline':False]
['text':'/ Return the number of fold columns to display','line_number':735,'multiline':False]
['text':' auto:<NUM>','line_number':740,'multiline':False]
['text':' When a floating window is anchored to another window,','line_number':767,'multiline':False]
['text':' update the position of its anchored window first.','line_number':768,'multiline':False]
['text':' TODO(bfredl): ideally, compositor should work like any multigrid UI','line_number':803,'multiline':False]
['text':' and use standard win_pos events.','line_number':804,'multiline':False]
['text':' NOTE: The win_viewport command is delayed until the next flush when there are pending updates.','line_number':839,'multiline':False]
['text':' This ensures that the updates and the viewport are sent together.','line_number':840,'multiline':False]
['text':' Avoid ml_get errors when producing "scroll_delta".','line_number':843,'multiline':False]
['text':' Scrolling too many lines: only give an approximate "scroll_delta".','line_number':861,'multiline':False]
['text':' Scrolling too many lines: only give an approximate "scroll_delta".','line_number':870,'multiline':False]
['text':' TODO(bfredl): The might be more cases to consider, like how does this','line_number':881,'multiline':False]
['text':' interact with incomplete final line? Diff filler lines?','line_number':882,'multiline':False]
['text':'/ If "split_disallowed" is set give an error and return FAIL.','line_number':895,'multiline':False]
['text':'/ Otherwise return OK.','line_number':896,'multiline':False]
['text':' split the current window, implements CTRL-W s and :split','line_number':910,'multiline':False]
['text':'','line_number':911,'multiline':False]
['text':' "size" is the height or width for the new window, 0 to use half of current','line_number':912,'multiline':False]
['text':' height or width.','line_number':913,'multiline':False]
['text':'','line_number':914,'multiline':False]
['text':' "flags":','line_number':915,'multiline':False]
['text':' WSP_ROOM: require enough room for new window','line_number':916,'multiline':False]
['text':' WSP_VERT: vertical split.','line_number':917,'multiline':False]
['text':' WSP_TOP:  open window at the top-left of the screen (help window).','line_number':918,'multiline':False]
['text':' WSP_BOT:  open window at the bottom-right of the screen (quickfix window).','line_number':919,'multiline':False]
['text':' WSP_HELP: creating the help window, keep layout snapshot','line_number':920,'multiline':False]
['text':'','line_number':921,'multiline':False]
['text':' return FAIL for failure, OK otherwise','line_number':922,'multiline':False]
['text':' When the ":tab" modifier was used open a new tab page instead.','line_number':929,'multiline':False]
['text':' Add flags from ":vertical", ":topleft" and ":botright".','line_number':934,'multiline':False]
['text':' When creating the help window make a snapshot of the window layout.','line_number':941,'multiline':False]
['text':' Otherwise clear the snapshot, it's now invalid.','line_number':942,'multiline':False]
['text':'/ When "new_wp" is NULL: split the current window in two.','line_number':952,'multiline':False]
['text':'/ When "new_wp" is not NULL: insert this window at the far','line_number':953,'multiline':False]
['text':'/ top/left/right/bottom.','line_number':954,'multiline':False]
['text':'/ @return  FAIL for failure, OK otherwise','line_number':955,'multiline':False]
['text':' aucmd_win[] should always remain floating','line_number':960,'multiline':False]
['text':' can't split float, use last nonfloating window instead','line_number':969,'multiline':False]
['text':' add a status line when p_ls == 1 and splitting the first window','line_number':979,'multiline':False]
['text':' Check if we are able to split the current window and compute its','line_number':994,'multiline':False]
['text':' width.','line_number':995,'multiline':False]
['text':' Current window requires at least 1 space.','line_number':996,'multiline':False]
['text':' if it doesn't fit in the current window, need win_equal()','line_number':1044,'multiline':False]
['text':' We don't like to take lines for the new window from a','line_number':1049,'multiline':False]
['text':' 'winfixwidth' window.  Take them from a window to the left or right','line_number':1050,'multiline':False]
['text':' instead, if possible. Add one for the separator.','line_number':1051,'multiline':False]
['text':' Only make all windows the same width if one of them (except oldwin)','line_number':1056,'multiline':False]
['text':' is wider than one of the split windows.','line_number':1057,'multiline':False]
['text':' Check if we are able to split the current window and compute its height.','line_number':1073,'multiline':False]
['text':' Current window requires at least 1 space plus space for the window bar.','line_number':1074,'multiline':False]
['text':' Adjust for cmdheight=0.','line_number':1081,'multiline':False]
['text':' if it doesn't fit in the current window, need win_equal()','line_number':1130,'multiline':False]
['text':' We don't like to take lines for the new window from a','line_number':1135,'multiline':False]
['text':' 'winfixheight' window.  Take them from a window above or below','line_number':1136,'multiline':False]
['text':' instead, if possible.','line_number':1137,'multiline':False]
['text':' Set w_fraction now so that the cursor keeps the same relative','line_number':1139,'multiline':False]
['text':' vertical position using the old height.','line_number':1140,'multiline':False]
['text':' Only make all windows the same height if one of them (except oldwin)','line_number':1152,'multiline':False]
['text':' is higher than one of the split windows.','line_number':1153,'multiline':False]
['text':' allocate new window structure and link it in the window list','line_number':1170,'multiline':False]
['text':' new window below/right of current one','line_number':1176,'multiline':False]
['text':' make the contents of the new window the same as the current one','line_number':1197,'multiline':False]
['text':' non-floating window doesn't store float config or have a border.','line_number':1202,'multiline':False]
['text':' Reorganise the tree of frames to insert the new window.','line_number':1210,'multiline':False]
['text':' Need to create a new frame in the tree to make a branch.','line_number':1237,'multiline':False]
['text':' Insert the new frame at the right place in the frame list.','line_number':1264,'multiline':False]
['text':' Set w_fraction now so that the cursor keeps the same relative','line_number':1271,'multiline':False]
['text':' vertical position.','line_number':1272,'multiline':False]
['text':' set height and row of new window to full height','line_number':1286,'multiline':False]
['text':' height and row of new window is same as current window','line_number':1292,'multiline':False]
['text':' "new_size" of the current window goes to the new window, use','line_number':1300,'multiline':False]
['text':' one column for the vertical separator','line_number':1301,'multiline':False]
['text':' Set width of neighbor frame','line_number':1313,'multiline':False]
['text':' new window left of current one','line_number':1320,'multiline':False]
['text':' new window right of current one','line_number':1323,'multiline':False]
['text':' width and column of new window is same as current window','line_number':1330,'multiline':False]
['text':' "new_size" of the current window goes to the new window, use','line_number':1342,'multiline':False]
['text':' one row for the status line','line_number':1343,'multiline':False]
['text':' new window above current one','line_number':1373,'multiline':False]
['text':' new window below current one','line_number':1382,'multiline':False]
['text':' Both windows need redrawing.  Update all status lines, in case they','line_number':1402,'multiline':False]
['text':' show something related to the window count or position.','line_number':1403,'multiline':False]
['text':' Old command/ruler may still be there','line_number':1411,'multiline':False]
['text':' put position back at start of line','line_number':1414,'multiline':False]
['text':' equalize the window sizes.','line_number':1417,'multiline':False]
['text':' Don't change the window height/width to 'winheight' / 'winwidth' if a','line_number':1426,'multiline':False]
['text':' size was given.','line_number':1427,'multiline':False]
['text':' make the new window the current window','line_number':1440,'multiline':False]
['text':' Send the window positions to the UI','line_number':1450,'multiline':False]
['text':' Initialize window "newp" from window "oldp".','line_number':1457,'multiline':False]
['text':' Used when splitting a window and when creating a new tab page.','line_number':1458,'multiline':False]
['text':' The windows will both edit the same buffer.','line_number':1459,'multiline':False]
['text':' WSP_NEWLOC may be specified in flags to prevent the location list from','line_number':1460,'multiline':False]
['text':' being copied.','line_number':1461,'multiline':False]
['text':' Don't copy the location list.','line_number':1482,'multiline':False]
['text':' copy tagstack and folds','line_number':1502,'multiline':False]
['text':' Keep same changelist position in new window.','line_number':1516,'multiline':False]
['text':' Initialize window "newp" from window "old".','line_number':1526,'multiline':False]
['text':' Only the essential things are copied.','line_number':1527,'multiline':False]
['text':' Use the same argument list.','line_number':1530,'multiline':False]
['text':' copy options from existing window','line_number':1535,'multiline':False]
['text':'/ Check if "win" is a pointer to an existing window in the current tabpage.','line_number':1539,'multiline':False]
['text':'/','line_number':1540,'multiline':False]
['text':'/ @param  win  window to check','line_number':1541,'multiline':False]
['text':'/ Check if "win" is a pointer to an existing window in tabpage "tp".','line_number':1547,'multiline':False]
['text':'/','line_number':1548,'multiline':False]
['text':'/ @param  win  window to check','line_number':1549,'multiline':False]
['text':' Find window "handle" in the current tab page.','line_number':1565,'multiline':False]
['text':' Return NULL if not found.','line_number':1566,'multiline':False]
['text':'/ Check if "win" is a pointer to an existing window in any tabpage.','line_number':1578,'multiline':False]
['text':'/','line_number':1579,'multiline':False]
['text':'/ @param  win  window to check','line_number':1580,'multiline':False]
['text':' Return the number of windows.','line_number':1595,'multiline':False]
['text':'/ Make "count" windows on the screen.','line_number':1606,'multiline':False]
['text':'/ Must be called when there is just one window, filling the whole screen.','line_number':1607,'multiline':False]
['text':'/ (excluding the command line).','line_number':1608,'multiline':False]
['text':'/','line_number':1609,'multiline':False]
['text':'/ @param vertical  split windows vertically if true.','line_number':1610,'multiline':False]
['text':'/','line_number':1611,'multiline':False]
['text':'/ @return actual number of windows on the screen.','line_number':1612,'multiline':False]
['text':' Each window needs at least 'winminwidth' lines and a separator column.','line_number':1618,'multiline':False]
['text':' Each window needs at least 'winminheight' lines.','line_number':1622,'multiline':False]
['text':' If statusline isn't global, each window also needs a statusline.','line_number':1623,'multiline':False]
['text':' If 'winbar' is set, each window also needs a winbar.','line_number':1624,'multiline':False]
['text':' add status line now, otherwise first window will be too big','line_number':1636,'multiline':False]
['text':' Don't execute autocommands while creating the windows.  Must do that','line_number':1641,'multiline':False]
['text':' when putting the buffers in the windows.','line_number':1642,'multiline':False]
['text':' todo is number of windows left to create','line_number':1647,'multiline':False]
['text':' return actual number of windows','line_number':1665,'multiline':False]
['text':' Exchange current and next window','line_number':1669,'multiline':False]
['text':' just one window','line_number':1678,'multiline':False]
['text':' find window to exchange with','line_number':1689,'multiline':False]
['text':' Swap with next','line_number':1695,'multiline':False]
['text':' Swap last window in row/col with previous','line_number':1697,'multiline':False]
['text':' We can only exchange a window with another window, not with a frame','line_number':1701,'multiline':False]
['text':' containing windows.','line_number':1702,'multiline':False]
['text':' 1. remove curwin from the list. Remember after which window it was in wp2','line_number':1708,'multiline':False]
['text':' 2. insert curwin before wp in the list','line_number':1709,'multiline':False]
['text':' if wp != wp2','line_number':1710,'multiline':False]
['text':'    3. remove wp from the list','line_number':1711,'multiline':False]
['text':'    4. insert wp after wp2','line_number':1712,'multiline':False]
['text':' 5. exchange the status line height, winbar height, hsep height and vsep width.','line_number':1713,'multiline':False]
['text':' recompute window positions','line_number':1747,'multiline':False]
['text':' rotate windows: if upwards true the second window becomes the first one','line_number':1760,'multiline':False]
['text':'                 if upwards false the first window becomes the second one','line_number':1761,'multiline':False]
['text':' nothing to do','line_number':1770,'multiline':False]
['text':' Check if all frames in this row/col have one window.','line_number':1775,'multiline':False]
['text':' first window becomes last window','line_number':1788,'multiline':False]
['text':' remove first window/frame from the list','line_number':1789,'multiline':False]
['text':' find last frame and append removed window/frame after it','line_number':1797,'multiline':False]
['text':' previously last window','line_number':1802,'multiline':False]
['text':' last window becomes first window','line_number':1803,'multiline':False]
['text':' find last window/frame in the list and remove it','line_number':1804,'multiline':False]
['text':' will become last window','line_number':1808,'multiline':False]
['text':' append the removed window/frame before the first in the list','line_number':1813,'multiline':False]
['text':' exchange status height, winbar height, hsep height and vsep width of old and new last window','line_number':1818,'multiline':False]
['text':' recompute w_winrow and w_wincol for all windows','line_number':1833,'multiline':False]
['text':' Move the current window to the very top/bottom/left/right of the screen.','line_number':1843,'multiline':False]
['text':' No longer a float, a non-multigrid UI shouldn't draw it as such','line_number':1865,'multiline':False]
['text':' Remove the window and frame from the tree of frames.','line_number':1870,'multiline':False]
['text':' may need to remove last status line','line_number':1874,'multiline':False]
['text':' recompute window positions','line_number':1875,'multiline':False]
['text':' Split a window on the desired side and put the window there.','line_number':1877,'multiline':False]
['text':' Move window "win1" to below/right of "win2" and make "win1" the current','line_number':1887,'multiline':False]
['text':' window.  Only works within the same frame!','line_number':1888,'multiline':False]
['text':' check if the arguments are reasonable','line_number':1891,'multiline':False]
['text':' check if there is something to do','line_number':1896,'multiline':False]
['text':' may need to move the status line, window bar, horizontal or vertical separator of the last','line_number':1903,'multiline':False]
['text':' window','line_number':1904,'multiline':False]
['text':' Remove the vertical separator from the last-but-one window,','line_number':1915,'multiline':False]
['text':' add it to the last window.  Adjust the frame widths.','line_number':1916,'multiline':False]
['text':' Remove the vertical separator from win1, add it to the last','line_number':1932,'multiline':False]
['text':' window, win2.  Adjust the frame widths.','line_number':1933,'multiline':False]
['text':' recompute w_winrow for all windows','line_number':1945,'multiline':False]
['text':'/ Compute maximum number of windows that can fit within "height" in frame "fr".','line_number':1954,'multiline':False]
['text':' If winbar is globally enabled, no need to check each window for it.','line_number':1960,'multiline':False]
['text':' First, try to fit all child frames of "fr" into "height"','line_number':1967,'multiline':False]
['text':' If we still have enough room for more windows, just use the default winbar height (which is 0)','line_number':1978,'multiline':False]
['text':' in order to get the amount of windows that'd fit in the remaining space','line_number':1979,'multiline':False]
['text':'/ Make all windows the same height.','line_number':1985,'multiline':False]
['text':'/ 'next_curwin' will soon be the current window, make sure it has enough rows.','line_number':1986,'multiline':False]
['text':'/','line_number':1987,'multiline':False]
['text':'/ @param next_curwin  pointer to current window to be or NULL','line_number':1988,'multiline':False]
['text':'/ @param current  do only frame with current window','line_number':1989,'multiline':False]
['text':'/ @param dir  'v' for vertically, 'h' for horizontally, 'b' for both, 0 for using p_ead','line_number':1990,'multiline':False]
['text':'/ Set a frame to a new position and height, spreading the available room','line_number':2004,'multiline':False]
['text':'/ equally over contained frames.','line_number':2005,'multiline':False]
['text':'/ The window "next_curwin" (if not NULL) should at least get the size from','line_number':2006,'multiline':False]
['text':'/ 'winheight' and 'winwidth' if possible.','line_number':2007,'multiline':False]
['text':'/','line_number':2008,'multiline':False]
['text':'/ @param next_curwin  pointer to current window to be or NULL','line_number':2009,'multiline':False]
['text':'/ @param current      do only frame with current window','line_number':2010,'multiline':False]
['text':'/ @param topfr        frame to set size off','line_number':2011,'multiline':False]
['text':'/ @param dir          'v', 'h' or 'b', see win_equal()','line_number':2012,'multiline':False]
['text':'/ @param col          horizontal position for frame','line_number':2013,'multiline':False]
['text':'/ @param row          vertical position for frame','line_number':2014,'multiline':False]
['text':'/ @param width        new width of frame','line_number':2015,'multiline':False]
['text':'/ @param height       new height of frame','line_number':2016,'multiline':False]
['text':' Set the width/height of this frame.','line_number':2027,'multiline':False]
['text':' Redraw when size or position changes','line_number':2028,'multiline':False]
['text':' equalize frame widths','line_number':2042,'multiline':False]
['text':' Compute the maximum number of windows horizontally in this','line_number':2043,'multiline':False]
['text':' frame.','line_number':2044,'multiline':False]
['text':' add one for the rightmost window, it doesn't have a separator','line_number':2046,'multiline':False]
['text':' Compute width for "next_curwin" window and room available for','line_number':2055,'multiline':False]
['text':' other windows.','line_number':2056,'multiline':False]
['text':' "m" is the minimal width when counting p_wiw for "next_curwin".','line_number':2057,'multiline':False]
['text':' If 'winfixwidth' set keep the window width if possible.','line_number':2070,'multiline':False]
['text':' Watch out for this window being the next_curwin.','line_number':2071,'multiline':False]
['text':' These windows don't use up room.','line_number':2081,'multiline':False]
['text':' Can make all windows wider than 'winwidth', spread','line_number':2097,'multiline':False]
['text':' the room equally.','line_number':2098,'multiline':False]
['text':' don't count curwin','line_number':2110,'multiline':False]
['text':' last frame gets all that remains (avoid roundoff error)','line_number':2119,'multiline':False]
['text':' doesn't count as a sizeable window','line_number':2125,'multiline':False]
['text':' Compute the maximum number of windows horiz. in "fr".','line_number':2127,'multiline':False]
['text':' don't count next_curwin','line_number':2132,'multiline':False]
['text':' add next_curwin size','line_number':2140,'multiline':False]
['text':' Skip frame that is full width when splitting or closing a','line_number':2153,'multiline':False]
['text':' window, unless equalizing all frames.','line_number':2154,'multiline':False]
['text':' topfr->fr_layout == FR_COL','line_number':2165,'multiline':False]
['text':' equalize frame heights','line_number':2169,'multiline':False]
['text':' Compute maximum number of windows vertically in this frame.','line_number':2170,'multiline':False]
['text':' add one for the bottom window if it doesn't have a statusline or separator','line_number':2172,'multiline':False]
['text':' Compute height for "next_curwin" window and room available for','line_number':2183,'multiline':False]
['text':' other windows.','line_number':2184,'multiline':False]
['text':' "m" is the minimal height when counting p_wh for "next_curwin".','line_number':2185,'multiline':False]
['text':' The room is less than 'winheight', use all space for the','line_number':2189,'multiline':False]
['text':' current window.','line_number':2190,'multiline':False]
['text':' If 'winfixheight' set keep the window height if possible.','line_number':2200,'multiline':False]
['text':' Watch out for this window being the next_curwin.','line_number':2201,'multiline':False]
['text':' These windows don't use up room.','line_number':2211,'multiline':False]
['text':' can make all windows higher than 'winheight',','line_number':2227,'multiline':False]
['text':' spread the room equally.','line_number':2228,'multiline':False]
['text':' don't count curwin','line_number':2240,'multiline':False]
['text':' last frame gets all that remains (avoid roundoff error)','line_number':2249,'multiline':False]
['text':' doesn't count as a sizeable window','line_number':2255,'multiline':False]
['text':' Compute the maximum number of windows vert. in "fr".','line_number':2257,'multiline':False]
['text':' don't count next_curwin','line_number':2262,'multiline':False]
['text':' add next_curwin size','line_number':2270,'multiline':False]
['text':' Skip frame that is full width when splitting or closing a','line_number':2279,'multiline':False]
['text':' window, unless equalizing all frames.','line_number':2280,'multiline':False]
['text':' Only matters for a prompt window.','line_number':2297,'multiline':False]
['text':' When leaving a prompt window stop Insert mode and perhaps restart','line_number':2302,'multiline':False]
['text':' it when entering that window again.','line_number':2303,'multiline':False]
['text':' unshow mode later','line_number':2306,'multiline':False]
['text':' When leaving the window (or closing the window) was done from a','line_number':2310,'multiline':False]
['text':' callback we need to break out of the Insert mode loop and restart Insert','line_number':2311,'multiline':False]
['text':' mode when entering the window again.','line_number':2312,'multiline':False]
['text':' Only matters for a prompt window.','line_number':2324,'multiline':False]
['text':' When switching to a prompt buffer that was in Insert mode, don't stop','line_number':2329,'multiline':False]
['text':' Insert mode, it may have been set in leaving_window().','line_number':2330,'multiline':False]
['text':' When entering the prompt window restart Insert mode if we were in Insert','line_number':2335,'multiline':False]
['text':' mode when we left it and not already in Insert mode.','line_number':2336,'multiline':False]
['text':' pcmark not cleared but set to line 1','line_number':2349,'multiline':False]
['text':'/ Init the current window "curwin".','line_number':2359,'multiline':False]
['text':'/ Called when a new file is being edited.','line_number':2360,'multiline':False]
['text':'/ Closes all windows for buffer `buf` unless there is only one non-floating window.','line_number':2366,'multiline':False]
['text':'/','line_number':2367,'multiline':False]
['text':'/ @param keep_curwin  don't close `curwin`','line_number':2368,'multiline':False]
['text':' Start from lastwin to close floating windows with the same buffer first.','line_number':2373,'multiline':False]
['text':' When the autocommand window is involved win_close() may need to print an error message.','line_number':2374,'multiline':False]
['text':' If closing the window fails give up, to avoid looping forever.','line_number':2379,'multiline':False]
['text':' Start all over, autocommands may change the window layout.','line_number':2383,'multiline':False]
['text':' Also check windows in other tab pages.','line_number':2392,'multiline':False]
['text':' Start from tp_lastwin to close floating windows with the same buffer first.','line_number':2396,'multiline':False]
['text':' Start all over, the tab page may be closed and','line_number':2402,'multiline':False]
['text':' autocommands may change the window layout.','line_number':2403,'multiline':False]
['text':'/ Check if "win" is the last non-floating window that exists.','line_number':2414,'multiline':False]
['text':'/ Check if "win" is the only non-floating window in the current tabpage.','line_number':2420,'multiline':False]
['text':'/ Like ONE_WINDOW but only considers non-floating windows','line_number':2440,'multiline':False]
['text':'/ if wp is the last non-floating window','line_number':2446,'multiline':False]
['text':'/','line_number':2447,'multiline':False]
['text':'/ always false for a floating window','line_number':2448,'multiline':False]
['text':'/ Check if floating windows in the current tab can be closed.','line_number':2454,'multiline':False]
['text':'/ Do not call this when the autocommand window is in use!','line_number':2455,'multiline':False]
['text':'/','line_number':2456,'multiline':False]
['text':'/ @return true if all floating windows can be closed','line_number':2457,'multiline':False]
['text':'/ @return true if, considering the cmdwin, `win` is safe to close.','line_number':2472,'multiline':False]
['text':'/ If false and `win` is the cmdwin, it is closed; otherwise, `err` is set.','line_number':2473,'multiline':False]
['text':'/ Close the possibly last window in a tab page.','line_number':2489,'multiline':False]
['text':'/','line_number':2490,'multiline':False]
['text':'/ @param  win          window to close','line_number':2491,'multiline':False]
['text':'/ @param  free_buf     whether to free the window's current buffer','line_number':2492,'multiline':False]
['text':'/ @param  prev_curtab  previous tabpage that will be closed if "win" is the','line_number':2493,'multiline':False]
['text':'/                      last window in the tabpage','line_number':2494,'multiline':False]
['text':'/','line_number':2495,'multiline':False]
['text':'/ @return true when the window was closed already.','line_number':2496,'multiline':False]
['text':' Don't free terminal buffers','line_number':2508,'multiline':False]
['text':' Closing the last window in a tab page.  First go to another tab','line_number':2512,'multiline':False]
['text':' page and then close the window and the tab page.  This avoids that','line_number':2513,'multiline':False]
['text':' curwin and curtab are invalid while we are freeing memory, they may','line_number':2514,'multiline':False]
['text':' be used in GUI events.','line_number':2515,'multiline':False]
['text':' Don't trigger autocommands yet, they may use wrong values, so do','line_number':2516,'multiline':False]
['text':' that below.','line_number':2517,'multiline':False]
['text':' save index for tabclosed event','line_number':2520,'multiline':False]
['text':' Safety check: Autocommands may have closed the window when jumping','line_number':2524,'multiline':False]
['text':' to the other tab page.','line_number':2525,'multiline':False]
['text':' Since goto_tabpage_tp above did not trigger *Enter autocommands, do','line_number':2531,'multiline':False]
['text':' that now.','line_number':2532,'multiline':False]
['text':'/ Close the buffer of "win" and unload it if "action" is DOBUF_UNLOAD.','line_number':2541,'multiline':False]
['text':'/ "action" can also be zero (do nothing).','line_number':2542,'multiline':False]
['text':'/ "abort_if_last" is passed to close_buffer(): abort closing if all other','line_number':2543,'multiline':False]
['text':'/ windows are closed.','line_number':2544,'multiline':False]
['text':' Free independent synblock before the buffer is freed.','line_number':2547,'multiline':False]
['text':' When a quickfix/location list window is closed and the buffer is','line_number':2552,'multiline':False]
['text':' displayed in only one window, then unlist the buffer.','line_number':2553,'multiline':False]
['text':' Close the link to the buffer.','line_number':2559,'multiline':False]
['text':' Make sure curbuf is valid. It can become invalid if 'bufhidden' is','line_number':2569,'multiline':False]
['text':' "wipe".','line_number':2570,'multiline':False]
['text':' Close window "win".  Only works for the current tab page.','line_number':2577,'multiline':False]
['text':' If "free_buf" is true related buffer may be unloaded.','line_number':2578,'multiline':False]
['text':'','line_number':2579,'multiline':False]
['text':' Called by :quit, :close, :xit, :wq and findtag().','line_number':2580,'multiline':False]
['text':' Returns FAIL when the window was not closed.','line_number':2581,'multiline':False]
['text':' window is already being closed','line_number':2595,'multiline':False]
['text':' close the last window until the there are no floating windows','line_number':2607,'multiline':False]
['text':' `force` flag isn't actually used when closing a floating window.','line_number':2609,'multiline':False]
['text':' If closing the window fails give up, to avoid looping forever.','line_number':2611,'multiline':False]
['text':' When closing the last window in a tab page first go to another tab page','line_number':2621,'multiline':False]
['text':' and then close the window and the tab page to avoid that curwin and','line_number':2622,'multiline':False]
['text':' curtab are invalid while we are freeing memory.','line_number':2623,'multiline':False]
['text':' When closing the help window, try restoring a snapshot after closing','line_number':2630,'multiline':False]
['text':' the window.  Otherwise clear the snapshot, it's now invalid.','line_number':2631,'multiline':False]
['text':' Guess which window is going to be the new current window.','line_number':2644,'multiline':False]
['text':' This may change because of the autocommands (sigh).','line_number':2645,'multiline':False]
['text':' Be careful: If autocommands delete the window or cause this window','line_number':2656,'multiline':False]
['text':' to be the last one left, return now.','line_number':2657,'multiline':False]
['text':' stop Visual mode','line_number':2659,'multiline':False]
['text':' autocmds may abort script processing','line_number':2684,'multiline':False]
['text':' Fire WinClosed just before starting to free window-related resources.','line_number':2690,'multiline':False]
['text':' autocmd may have freed the window already.','line_number':2692,'multiline':False]
['text':' Autocommands have closed all windows, quit now.  Restore','line_number':2703,'multiline':False]
['text':' curwin->w_buffer, otherwise writing ShaDa file may fail.','line_number':2704,'multiline':False]
['text':' Autocommands may have moved to another tab page.','line_number':2710,'multiline':False]
['text':' Need to close the window anyway, since the buffer is NULL.','line_number':2713,'multiline':False]
['text':' Don't trigger autocmds with a NULL buffer.','line_number':2714,'multiline':False]
['text':' Autocommands may have closed the window already, or closed the only','line_number':2721,'multiline':False]
['text':' other window or moved to another tab page.','line_number':2722,'multiline':False]
['text':' Now we are really going to close the window.  Disallow any autocommand','line_number':2728,'multiline':False]
['text':' to split a window to avoid trouble.','line_number':2729,'multiline':False]
['text':' let terminal buffers know that this window dimensions may be ignored','line_number':2732,'multiline':False]
['text':' suppress clang "Dereference of NULL pointer"','line_number':2742,'multiline':False]
['text':' NB: an autocmd can still abort the closing of this window,','line_number':2749,'multiline':False]
['text':' bur carring out this change anyway shouldn't be a catastrophe.','line_number':2750,'multiline':False]
['text':' Free the memory used for the window and get the window that received','line_number':2757,'multiline':False]
['text':' the screen space.','line_number':2758,'multiline':False]
['text':' Closing the help window moves the cursor back to the current window','line_number':2763,'multiline':False]
['text':' of the snapshot.','line_number':2764,'multiline':False]
['text':' Make sure curwin isn't invalid.  It can cause severe trouble when','line_number':2773,'multiline':False]
['text':' printing an error message.  For win_equal() curbuf needs to be valid','line_number':2774,'multiline':False]
['text':' too.','line_number':2775,'multiline':False]
['text':' If the cursor goes to the preview or the quickfix window, try','line_number':2779,'multiline':False]
['text':' finding another window to go to.','line_number':2780,'multiline':False]
['text':' The cursor position may be invalid if the buffer changed after last','line_number':2799,'multiline':False]
['text':' using the window.','line_number':2800,'multiline':False]
['text':' If last window has a status line now and we don't want one,','line_number':2805,'multiline':False]
['text':' remove the status line. Do this before win_equal(), because','line_number':2806,'multiline':False]
['text':' it may change the height of a window.','line_number':2807,'multiline':False]
['text':' If the frame of the closed window contains the new current window,','line_number':2811,'multiline':False]
['text':' only resize that frame.  Otherwise resize all windows.','line_number':2812,'multiline':False]
['text':' careful: after this wp and win may be invalid!','line_number':2824,'multiline':False]
['text':' After closing the help window, try restoring the window layout from','line_number':2831,'multiline':False]
['text':' before it was opened.','line_number':2832,'multiline':False]
['text':' If the window had 'diff' set and now there is only one window left in','line_number':2837,'multiline':False]
['text':' the tab page with 'diff' set, and "closeoff" is in 'diffopt', then','line_number':2838,'multiline':False]
['text':' execute ":diffoff!".','line_number':2839,'multiline':False]
['text':' TODO(bfredl): how about no?','line_number':2855,'multiline':False]
['text':' Close window "win" in tab page "tp", which is not the current tab page.','line_number':2875,'multiline':False]
['text':' This may be the last window in that tab page and result in closing the tab,','line_number':2876,'multiline':False]
['text':' thus "tp" may become invalid!','line_number':2877,'multiline':False]
['text':' Caller must check if buffer is hidden and whether the tabline needs to be','line_number':2878,'multiline':False]
['text':' updated.','line_number':2879,'multiline':False]
['text':' Get here with win->w_buffer == NULL when win_close() detects the tab page','line_number':2882,'multiline':False]
['text':' changed.','line_number':2883,'multiline':False]
['text':' window is already being closed','line_number':2886,'multiline':False]
['text':' Fire WinClosed just before starting to free window-related resources.','line_number':2889,'multiline':False]
['text':' autocmd may have freed the window already.','line_number':2891,'multiline':False]
['text':' Close the link to the buffer.','line_number':2897,'multiline':False]
['text':' Careful: Autocommands may have closed the tab page or made it the','line_number':2903,'multiline':False]
['text':' current tab page.','line_number':2904,'multiline':False]
['text':' If the buffer was removed from the window we have to give it any','line_number':2907,'multiline':False]
['text':' buffer.','line_number':2908,'multiline':False]
['text':' Autocommands may have closed the window already.','line_number':2917,'multiline':False]
['text':' When closing the last window in a tab page remove the tab page.','line_number':2933,'multiline':False]
['text':' loop','line_number':2947,'multiline':False]
['text':' Free the memory used for the window.','line_number':2966,'multiline':False]
['text':'/ Free the memory used for a window.','line_number':2975,'multiline':False]
['text':'/','line_number':2976,'multiline':False]
['text':'/ @param dirp  set to 'v' or 'h' for direction if 'ea'','line_number':2977,'multiline':False]
['text':'/ @param tp    tab page "win" is in, NULL for current','line_number':2978,'multiline':False]
['text':'/','line_number':2979,'multiline':False]
['text':'/ @return      a pointer to the window that got the freed up space.','line_number':2980,'multiline':False]
['text':' Remove the window and its frame from the tree of frames.','line_number':2987,'multiline':False]
['text':' Dummy value.','line_number':2992,'multiline':False]
['text':' When deleting the current window in the tab, select a new current','line_number':3009,'multiline':False]
['text':' window.','line_number':3010,'multiline':False]
['text':' avoid an error for switching tabpage with the cmdline window open','line_number':3021,'multiline':False]
['text':' No window should be used after this. Set curwin to NULL to crash','line_number':3055,'multiline':False]
['text':' instead of using freed memory.','line_number':3056,'multiline':False]
['text':'/ Remove a window and its frame from the tree of frames.','line_number':3062,'multiline':False]
['text':'/','line_number':3063,'multiline':False]
['text':'/ @param dirp  set to 'v' or 'h' for direction if 'ea'','line_number':3064,'multiline':False]
['text':'/ @param tp    tab page "win" is in, NULL for current','line_number':3065,'multiline':False]
['text':'/','line_number':3066,'multiline':False]
['text':'/ @return      a pointer to the window that got the freed up space.','line_number':3067,'multiline':False]
['text':' If there is only one window there is nothing to remove.','line_number':3070,'multiline':False]
['text':' Remove the window from its frame.','line_number':3077,'multiline':False]
['text':' Remove this frame from the list of frames.','line_number':3081,'multiline':False]
['text':' When 'winfixheight' is set, try to find another frame in the column','line_number':3085,'multiline':False]
['text':' (as close to the closed frame as possible) to distribute the height','line_number':3086,'multiline':False]
['text':' to.','line_number':3087,'multiline':False]
['text':' When 'winfixwidth' is set, try to find another frame in the column','line_number':3114,'multiline':False]
['text':' (as close to the closed frame as possible) to distribute the width','line_number':3115,'multiline':False]
['text':' to.','line_number':3116,'multiline':False]
['text':' If rows/columns go to a window below/right its positions need to be','line_number':3144,'multiline':False]
['text':' updated.  Can only be done after the sizes have been updated.','line_number':3145,'multiline':False]
['text':' There is no other frame in this list, move its info to the parent','line_number':3154,'multiline':False]
['text':' and remove it.','line_number':3155,'multiline':False]
['text':' The frame above the parent has the same layout, have to merge','line_number':3174,'multiline':False]
['text':' the frames into this list.','line_number':3175,'multiline':False]
['text':'/ If 'splitbelow' or 'splitright' is set, the space goes above or to the left','line_number':3205,'multiline':False]
['text':'/ by default.  Otherwise, the free space goes below or to the right.  The','line_number':3206,'multiline':False]
['text':'/ result is that opening a window and then immediately closing it will','line_number':3207,'multiline':False]
['text':'/ preserve the initial window layout.  The 'wfh' and 'wfw' settings are','line_number':3208,'multiline':False]
['text':'/ respected when possible.','line_number':3209,'multiline':False]
['text':'/','line_number':3210,'multiline':False]
['text':'/ @param  tp  tab page "win" is in, NULL for current','line_number':3211,'multiline':False]
['text':'/','line_number':3212,'multiline':False]
['text':'/ @return a pointer to the frame that will receive the empty screen space that','line_number':3213,'multiline':False]
['text':'/ is left over after "win" is closed.','line_number':3214,'multiline':False]
['text':' By default the next window will get the space that was abandoned by this','line_number':3230,'multiline':False]
['text':' window','line_number':3231,'multiline':False]
['text':' If this is part of a column of windows and 'splitbelow' is true then the','line_number':3235,'multiline':False]
['text':' previous window will get the space.','line_number':3236,'multiline':False]
['text':' If this is part of a row of windows, and 'splitright' is true then the','line_number':3242,'multiline':False]
['text':' previous window will get the space.','line_number':3243,'multiline':False]
['text':' If 'wfh' or 'wfw' is set for the target and not for the alternate','line_number':3249,'multiline':False]
['text':' window, reverse the selection.','line_number':3250,'multiline':False]
['text':' Return the tabpage that will be used if the current one is closed.','line_number':3264,'multiline':False]
['text':' Use the next tab page if possible.','line_number':3267,'multiline':False]
['text':' Find the last but one tab page.','line_number':3272,'multiline':False]
['text':' Find the left-upper window in frame "frp".','line_number':3278,'multiline':False]
['text':'/ Check that the frame "frp" contains the window "wp".','line_number':3287,'multiline':False]
['text':'/','line_number':3288,'multiline':False]
['text':'/ @param  frp  frame','line_number':3289,'multiline':False]
['text':'/ @param  wp   window','line_number':3290,'multiline':False]
['text':'/ Check if current window is at the bottom','line_number':3306,'multiline':False]
['text':'/ Returns true if there are no windows below current window','line_number':3307,'multiline':False]
['text':'/ Set a new height for a frame.  Recursively sets the height for contained','line_number':3318,'multiline':False]
['text':'/ frames and windows.  Caller must take care of positions.','line_number':3319,'multiline':False]
['text':'/','line_number':3320,'multiline':False]
['text':'/ @param topfirst  resize topmost contained frame first.','line_number':3321,'multiline':False]
['text':'/ @param wfh       obey 'winfixheight' when there is a choice;','line_number':3322,'multiline':False]
['text':'/                  may cause the height not to be set.','line_number':3323,'multiline':False]
['text':' Simple case: just one window.','line_number':3328,'multiline':False]
['text':' All frames in this row get the same new height.','line_number':3337,'multiline':False]
['text':' Could not fit the windows, make the whole row higher.','line_number':3341,'multiline':False]
['text':' fr_layout == FR_COL','line_number':3347,'multiline':False]
['text':' Complicated case: Resize a column of frames.  Resize the bottom','line_number':3348,'multiline':False]
['text':' frame first, frames above that when needed.','line_number':3349,'multiline':False]
['text':' Advance past frames with one window with 'wfh' set.','line_number':3353,'multiline':False]
['text':' no frame without 'wfh', give up','line_number':3357,'multiline':False]
['text':' Find the bottom frame of this column','line_number':3362,'multiline':False]
['text':' Advance back for frames with one window with 'wfh' set.','line_number':3367,'multiline':False]
['text':' reduce height of contained frames, bottom or top frame first','line_number':3376,'multiline':False]
['text':' Increase "height" if we could not reduce enough frames.','line_number':3396,'multiline':False]
['text':' increase height of bottom or top frame','line_number':3402,'multiline':False]
['text':'/ Return true if height of frame "frp" should not be changed because of','line_number':3409,'multiline':False]
['text':'/ the 'winfixheight' option.','line_number':3410,'multiline':False]
['text':'/','line_number':3411,'multiline':False]
['text':'/ @param  frp  frame','line_number':3412,'multiline':False]
['text':'/','line_number':3413,'multiline':False]
['text':'/ @return true if the frame has a fixed height','line_number':3414,'multiline':False]
['text':' frame with one window: fixed height if 'winfixheight' set.','line_number':3418,'multiline':False]
['text':' The frame is fixed height if one of the frames in the row is fixed','line_number':3423,'multiline':False]
['text':' height.','line_number':3424,'multiline':False]
['text':' frp->fr_layout == FR_COL: The frame is fixed height if all of the','line_number':3433,'multiline':False]
['text':' frames in the row are fixed height.','line_number':3434,'multiline':False]
['text':'/ Return true if width of frame "frp" should not be changed because of','line_number':3443,'multiline':False]
['text':'/ the 'winfixwidth' option.','line_number':3444,'multiline':False]
['text':'/','line_number':3445,'multiline':False]
['text':'/ @param  frp  frame','line_number':3446,'multiline':False]
['text':'/','line_number':3447,'multiline':False]
['text':'/ @return true if the frame has a fixed width','line_number':3448,'multiline':False]
['text':' frame with one window: fixed width if 'winfixwidth' set.','line_number':3452,'multiline':False]
['text':' The frame is fixed width if one of the frames in the row is fixed','line_number':3457,'multiline':False]
['text':' width.','line_number':3458,'multiline':False]
['text':' frp->fr_layout == FR_ROW: The frame is fixed width if all of the','line_number':3467,'multiline':False]
['text':' frames in the row are fixed width.','line_number':3468,'multiline':False]
['text':' Add a status line to windows at the bottom of "frp".','line_number':3477,'multiline':False]
['text':' Note: Does not check if there is room!','line_number':3478,'multiline':False]
['text':' Handle all the frames in the row.','line_number':3485,'multiline':False]
['text':' Only need to handle the last frame in the column.','line_number':3491,'multiline':False]
['text':'/ Set width of a frame.  Handles recursively going through contained frames.','line_number':3497,'multiline':False]
['text':'/ May remove separator line for windows at the right side (for win_close()).','line_number':3498,'multiline':False]
['text':'/','line_number':3499,'multiline':False]
['text':'/ @param leftfirst  resize leftmost contained frame first.','line_number':3500,'multiline':False]
['text':'/ @param wfw        obey 'winfixwidth' when there is a choice;','line_number':3501,'multiline':False]
['text':'/                   may cause the width not to be set.','line_number':3502,'multiline':False]
['text':' Simple case: just one window.','line_number':3506,'multiline':False]
['text':' Find out if there are any windows right of this one.','line_number':3508,'multiline':False]
['text':' All frames in this column get the same new width.','line_number':3522,'multiline':False]
['text':' Could not fit the windows, make whole column wider.','line_number':3526,'multiline':False]
['text':' fr_layout == FR_ROW','line_number':3532,'multiline':False]
['text':' Complicated case: Resize a row of frames.  Resize the rightmost','line_number':3533,'multiline':False]
['text':' frame first, frames left of it when needed.','line_number':3534,'multiline':False]
['text':' Advance past frames with one window with 'wfw' set.','line_number':3538,'multiline':False]
['text':' no frame without 'wfw', give up','line_number':3542,'multiline':False]
['text':' Find the rightmost frame of this row','line_number':3547,'multiline':False]
['text':' Advance back for frames with one window with 'wfw' set.','line_number':3552,'multiline':False]
['text':' reduce frame width, rightmost frame first','line_number':3561,'multiline':False]
['text':' Increase "width" if we could not reduce enough frames.','line_number':3581,'multiline':False]
['text':' increase width of rightmost frame','line_number':3587,'multiline':False]
['text':'/ Add the vertical separator to windows at the right side of "frp".','line_number':3594,'multiline':False]
['text':'/ Note: Does not check if there is room!','line_number':3595,'multiline':False]
['text':' don't make it negative','line_number':3602,'multiline':False]
['text':' Handle all the frames in the column.','line_number':3608,'multiline':False]
['text':' Only need to handle the last frame in the row.','line_number':3614,'multiline':False]
['text':'/ Add the horizontal separator to windows at the bottom of "frp".','line_number':3623,'multiline':False]
['text':'/ Note: Does not check if there is room or whether the windows have a statusline!','line_number':3624,'multiline':False]
['text':' Handle all the frames in the row.','line_number':3632,'multiline':False]
['text':' Only need to handle the last frame in the column.','line_number':3638,'multiline':False]
['text':' Set frame width from the window it contains.','line_number':3647,'multiline':False]
['text':' Set frame height from the window it contains.','line_number':3653,'multiline':False]
['text':'/ Compute the minimal height for frame "topfrp". Uses the 'winminheight' option.','line_number':3660,'multiline':False]
['text':'/ When "next_curwin" isn't NULL, use p_wh for this window.','line_number':3661,'multiline':False]
['text':'/ When "next_curwin" is NOWIN, don't use at least one line for the current window.','line_number':3662,'multiline':False]
['text':' Combined height of window bar and separator column or status line.','line_number':3668,'multiline':False]
['text':' Current window is minimal one line high.','line_number':3677,'multiline':False]
['text':' get the minimal height from each frame in this row','line_number':3684,'multiline':False]
['text':' Add up the minimal heights for all frames in this column.','line_number':3694,'multiline':False]
['text':'/ Compute the minimal width for frame "topfrp".','line_number':3705,'multiline':False]
['text':'/ When "next_curwin" isn't NULL, use p_wiw for this window.','line_number':3706,'multiline':False]
['text':'/ When "next_curwin" is NOWIN, don't use at least one column for the current','line_number':3707,'multiline':False]
['text':'/ window.','line_number':3708,'multiline':False]
['text':'/','line_number':3709,'multiline':False]
['text':'/ @param next_curwin  use p_wh and p_wiw for next_curwin','line_number':3710,'multiline':False]
['text':' window: minimal width of the window plus separator column','line_number':3719,'multiline':False]
['text':' Current window is minimal one column wide','line_number':3721,'multiline':False]
['text':' get the minimal width from each frame in this column','line_number':3727,'multiline':False]
['text':' Add up the minimal widths for all frames in this row.','line_number':3737,'multiline':False]
['text':'/ Try to close all windows except current one.','line_number':3748,'multiline':False]
['text':'/ Buffers in the other windows become hidden if 'hidden' is set, or '!' is','line_number':3749,'multiline':False]
['text':'/ used and the buffer was modified.','line_number':3750,'multiline':False]
['text':'/','line_number':3751,'multiline':False]
['text':'/ Used by ":bdel" and ":only".','line_number':3752,'multiline':False]
['text':'/','line_number':3753,'multiline':False]
['text':'/ @param forceit  always hide all other windows','line_number':3754,'multiline':False]
['text':' Be very careful here: autocommands may change the window layout.','line_number':3772,'multiline':False]
['text':' don't close current window','line_number':3776,'multiline':False]
['text':' autoccommands messed this one up','line_number':3780,'multiline':False]
['text':' Check if it's allowed to abandon this window','line_number':3786,'multiline':False]
['text':' autocommands messed wp up','line_number':3788,'multiline':False]
['text':' autocommands messed wp up','line_number':3795,'multiline':False]
['text':'/ Store the relevant window pointers for tab page "tp".  To be used before','line_number':3812,'multiline':False]
['text':'/ use_tabpage().','line_number':3813,'multiline':False]
['text':'/ Set the relevant pointers to use tab page "tp".  May want to call','line_number':3822,'multiline':False]
['text':'/ unuse_tabpage() first.','line_number':3823,'multiline':False]
['text':' Allocate the first window and put an empty buffer in it.','line_number':3833,'multiline':False]
['text':' Only called from main().','line_number':3834,'multiline':False]
['text':' allocating first buffer before any autocmds should not fail.','line_number':3838,'multiline':False]
['text':' Init `aucmd_win[idx]`. This can only be done after the first window','line_number':3847,'multiline':False]
['text':' is fully initialized, thus it can't be in win_alloc_first().','line_number':3848,'multiline':False]
['text':' Allocate the first window or the first window in a new tab page.','line_number':3861,'multiline':False]
['text':' When "oldwin" is NULL create an empty buffer for it.','line_number':3862,'multiline':False]
['text':' When "oldwin" is not NULL copy info from it to the new window.','line_number':3863,'multiline':False]
['text':' Return FAIL when something goes wrong (out of memory).','line_number':3864,'multiline':False]
['text':' Very first window, need to create an empty buffer for it and','line_number':3869,'multiline':False]
['text':' initialize from scratch.','line_number':3870,'multiline':False]
['text':' there is one window','line_number':3877,'multiline':False]
['text':' init current window','line_number':3879,'multiline':False]
['text':' First window in new tab page, initialize it from "oldwin".','line_number':3881,'multiline':False]
['text':' We don't want cursor- and scroll-binding in the first window.','line_number':3884,'multiline':False]
['text':' Create a frame for window "wp".','line_number':3896,'multiline':False]
['text':' Initialize the window and frame size to the maximum.','line_number':3906,'multiline':False]
['text':' Allocate a new tabpage_T and init the values.','line_number':3921,'multiline':False]
['text':' Init t: variables.','line_number':3929,'multiline':False]
['text':' free all t: variables','line_number':3945,'multiline':False]
['text':'/ Create a new tabpage with one window.','line_number':3958,'multiline':False]
['text':'/','line_number':3959,'multiline':False]
['text':'/ It will edit the current buffer, like after :split.','line_number':3960,'multiline':False]
['text':'/','line_number':3961,'multiline':False]
['text':'/ @param after Put new tabpage after tabpage "after", or after the current','line_number':3962,'multiline':False]
['text':'/              tabpage in case of 0.','line_number':3963,'multiline':False]
['text':'/ @param filename Will be passed to apply_autocmds().','line_number':3964,'multiline':False]
['text':'/ @return Was the new tabpage created successfully? FAIL or OK.','line_number':3965,'multiline':False]
['text':' Remember the current windows in this Tab page.','line_number':3977,'multiline':False]
['text':' Create a new empty window.','line_number':3988,'multiline':False]
['text':' Make the new Tab page the new topframe.','line_number':3990,'multiline':False]
['text':' New tab page becomes the first one.','line_number':3992,'multiline':False]
['text':' Put new tab page before tab page "after".','line_number':3999,'multiline':False]
['text':' Failed, get back the previous Tab page','line_number':4035,'multiline':False]
['text':' Open a new tab page if ":tab cmd" was used.  It will edit the same buffer,','line_number':4040,'multiline':False]
['text':' like with ":split".','line_number':4041,'multiline':False]
['text':' Returns OK if a new tab page was created, FAIL otherwise.','line_number':4042,'multiline':False]
['text':' reset it to avoid doing it twice','line_number':4051,'multiline':False]
['text':' Create up to "maxcount" tabpages with empty windows.','line_number':4060,'multiline':False]
['text':' Returns the number of resulting tab pages.','line_number':4061,'multiline':False]
['text':' Limit to 'tabpagemax' tabs.','line_number':4066,'multiline':False]
['text':' Don't execute autocommands while creating the tab pages.  Must do that','line_number':4071,'multiline':False]
['text':' when putting the buffers in the windows.','line_number':4072,'multiline':False]
['text':' return actual number of tab pages','line_number':4084,'multiline':False]
['text':'/ Check that tpc points to a valid tab page.','line_number':4088,'multiline':False]
['text':'/','line_number':4089,'multiline':False]
['text':'/ @param[in]  tpc  Tabpage to check.','line_number':4090,'multiline':False]
['text':'/ Returns true when `tpc` is valid and at least one window is valid.','line_number':4101,'multiline':False]
['text':' shouldn't happen','line_number':4114,'multiline':False]
['text':'/ Close tabpage `tab`, assuming it has no windows in it.','line_number':4118,'multiline':False]
['text':'/ There must be another tabpage or this will crash.','line_number':4119,'multiline':False]
['text':' do nothing','line_number':4130,'multiline':False]
['text':' Find tab page "n" (first one is 1).  Returns NULL when not found.','line_number':4140,'multiline':False]
['text':' Get index of tab page "tp".  First one has index 1.','line_number':4152,'multiline':False]
['text':' When not found returns number of tab pages plus one.','line_number':4153,'multiline':False]
['text':'/ Prepare for leaving the current tab page.','line_number':4165,'multiline':False]
['text':'/ When autocommands change "curtab" we don't leave the tab page and return','line_number':4166,'multiline':False]
['text':'/ FAIL.','line_number':4167,'multiline':False]
['text':'/ Careful: When OK is returned need to get a new tab page very very soon!','line_number':4168,'multiline':False]
['text':'/','line_number':4169,'multiline':False]
['text':'/ @param new_curbuf              what is going to be the new curbuf,','line_number':4170,'multiline':False]
['text':'/                                NULL if unknown.','line_number':4171,'multiline':False]
['text':'/ @param trigger_leave_autocmds  when true trigger *Leave autocommands.','line_number':4172,'multiline':False]
['text':' stop Visual mode','line_number':4178,'multiline':False]
['text':'/ Start using tab page "tp".','line_number':4210,'multiline':False]
['text':'/ Only to be used after leave_tabpage() or freeing the current tab page.','line_number':4211,'multiline':False]
['text':'/','line_number':4212,'multiline':False]
['text':'/ @param trigger_enter_autocmds  when true trigger *Enter autocommands.','line_number':4213,'multiline':False]
['text':'/ @param trigger_leave_autocmds  when true trigger *Leave autocommands.','line_number':4214,'multiline':False]
['text':' We would like doing the TabEnter event first, but we don't have a','line_number':4228,'multiline':False]
['text':' valid current window yet, which may break some commands.','line_number':4229,'multiline':False]
['text':' This triggers autocommands, thus may make "tp" invalid.','line_number':4230,'multiline':False]
['text':' status line may appear or disappear','line_number':4236,'multiline':False]
['text':' recompute w_winrow for all windows','line_number':4237,'multiline':False]
['text':' Use the stored value of p_ch, so that it can be different for each tab page.','line_number':4240,'multiline':False]
['text':' TODO(bfredl): a bit expensive, should be enough to invalidate the','line_number':4244,'multiline':False]
['text':' region between the old and the new p_ch.','line_number':4245,'multiline':False]
['text':' When cmdheight is changed in a tab page with '<C-w>-', cmdline_row is','line_number':4251,'multiline':False]
['text':' changed but p_ch and tp_ch_used are not changed. Thus we also need to','line_number':4252,'multiline':False]
['text':' check cmdline_row.','line_number':4253,'multiline':False]
['text':' If there was a click in a window, it won't be usable for a following','line_number':4258,'multiline':False]
['text':' drag.','line_number':4259,'multiline':False]
['text':' The tabpage line may have appeared or disappeared, may need to resize the frames for that.','line_number':4262,'multiline':False]
['text':' When the Vim window was resized or ROWS_AVAIL changed need to update frame sizes too.','line_number':4263,'multiline':False]
['text':' update window widths','line_number':4269,'multiline':False]
['text':' update window widths later','line_number':4272,'multiline':False]
['text':' Apply autocommands after updating the display, when 'rows' and','line_number':4278,'multiline':False]
['text':' 'columns' have been set correctly.','line_number':4279,'multiline':False]
['text':'/ tells external UI that windows and inline floats in old_curtab are invisible','line_number':4290,'multiline':False]
['text':'/ and that floats in curtab is now visible.','line_number':4291,'multiline':False]
['text':'/','line_number':4292,'multiline':False]
['text':'/ External floats are considered independent of tabpages. This is','line_number':4293,'multiline':False]
['text':'/ implemented by always moving them to curtab.','line_number':4294,'multiline':False]
['text':' Go to tab page "n".  For ":tab N" and "Ngt".','line_number':4319,'multiline':False]
['text':' When "n" is 9999 go to the last tab page.','line_number':4320,'multiline':False]
['text':' Not allowed when editing the command line.','line_number':4324,'multiline':False]
['text':' If there is only one it can't work.','line_number':4329,'multiline':False]
['text':' shut up compiler','line_number':4337,'multiline':False]
['text':' No count, go to next tab page, wrap around end.','line_number':4340,'multiline':False]
['text':' "gT": go to previous tab page, wrap around end.  "N gT" repeats','line_number':4347,'multiline':False]
['text':' this N times.','line_number':4348,'multiline':False]
['text':' Go to last tab page.','line_number':4356,'multiline':False]
['text':' Go to tab page "n".','line_number':4359,'multiline':False]
['text':'/ Go to tabpage "tp".','line_number':4370,'multiline':False]
['text':'/ Note: doesn't update the GUI tab.','line_number':4371,'multiline':False]
['text':'/','line_number':4372,'multiline':False]
['text':'/ @param trigger_enter_autocmds  when true trigger *Enter autocommands.','line_number':4373,'multiline':False]
['text':'/ @param trigger_leave_autocmds  when true trigger *Leave autocommands.','line_number':4374,'multiline':False]
['text':' Don't repeat a message in another tab page.','line_number':4381,'multiline':False]
['text':'/ Go to the last accessed tab page, if there is one.','line_number':4398,'multiline':False]
['text':'/ @return true if the tab page is valid, false otherwise.','line_number':4399,'multiline':False]
['text':' Enter window "wp" in tab page "tp".','line_number':4410,'multiline':False]
['text':' Also updates the GUI tab.','line_number':4411,'multiline':False]
['text':' Move the current tab page to after tab page "nr".','line_number':4420,'multiline':False]
['text':' Remove the current tab page from the list of tab pages.','line_number':4443,'multiline':False]
['text':' "cannot happen"','line_number':4454,'multiline':False]
['text':' Re-insert it at the specified position.','line_number':4460,'multiline':False]
['text':' Need to redraw the tabline.  Tab page contents doesn't change.','line_number':4469,'multiline':False]
['text':'/ Go to another window.','line_number':4473,'multiline':False]
['text':'/ When jumping to another buffer, stop Visual mode.  Do this before','line_number':4474,'multiline':False]
['text':'/ changing windows so we can yank the selection into the '*' register.','line_number':4475,'multiline':False]
['text':'/ (note: this may trigger ModeChanged autocommand!)','line_number':4476,'multiline':False]
['text':'/ When jumping to another window on the same buffer, adjust its cursor','line_number':4477,'multiline':False]
['text':'/ position to keep the same Visual area.','line_number':4478,'multiline':False]
['text':' careful: triggers ModeChanged autocommand','line_number':4489,'multiline':False]
['text':' autocommand may have made wp invalid','line_number':4495,'multiline':False]
['text':' Conceal cursor line in previous window, unconceal in current window.','line_number':4502,'multiline':False]
['text':' Find the tabpage for window "win".','line_number':4511,'multiline':False]
['text':'/ Get the above or below neighbor window of the specified window.','line_number':4522,'multiline':False]
['text':'/','line_number':4523,'multiline':False]
['text':'/ Returns the specified window if the neighbor is not found.','line_number':4524,'multiline':False]
['text':'/ Returns the previous window if the specifiecied window is a floating window.','line_number':4525,'multiline':False]
['text':'/','line_number':4526,'multiline':False]
['text':'/ @param up     true for the above neighbor','line_number':4527,'multiline':False]
['text':'/ @param count  nth neighbor window','line_number':4528,'multiline':False]
['text':'/','line_number':4529,'multiline':False]
['text':'/ @return       found window','line_number':4530,'multiline':False]
['text':' First go upwards in the tree of frames until we find an upwards or','line_number':4541,'multiline':False]
['text':' downwards neighbor.','line_number':4542,'multiline':False]
['text':' Now go downwards to find the bottom or top frame in it.','line_number':4559,'multiline':False]
['text':' Find the frame at the cursor row.','line_number':4567,'multiline':False]
['text':'/ Move to window above or below "count" times.','line_number':4586,'multiline':False]
['text':'/','line_number':4587,'multiline':False]
['text':'/ @param up     true to go to win above','line_number':4588,'multiline':False]
['text':'/ @param count  go count times into direction','line_number':4589,'multiline':False]
['text':'/ Get the left or right neighbor window of the specified window.','line_number':4598,'multiline':False]
['text':'/','line_number':4599,'multiline':False]
['text':'/ Returns the specified window if the neighbor is not found.','line_number':4600,'multiline':False]
['text':'/ Returns the previous window if the specifiecied window is a floating window.','line_number':4601,'multiline':False]
['text':'/','line_number':4602,'multiline':False]
['text':'/ @param left  true for the left neighbor','line_number':4603,'multiline':False]
['text':'/ @param count nth neighbor window','line_number':4604,'multiline':False]
['text':'/','line_number':4605,'multiline':False]
['text':'/ @return      found window','line_number':4606,'multiline':False]
['text':' First go upwards in the tree of frames until we find a left or','line_number':4617,'multiline':False]
['text':' right neighbor.','line_number':4618,'multiline':False]
['text':' Now go downwards to find the leftmost or rightmost frame in it.','line_number':4635,'multiline':False]
['text':' Find the frame at the cursor row.','line_number':4643,'multiline':False]
['text':'/ Move to left or right window.','line_number':4662,'multiline':False]
['text':'/','line_number':4663,'multiline':False]
['text':'/ @param left   true to go to left window','line_number':4664,'multiline':False]
['text':'/ @param count  go count times into direction','line_number':4665,'multiline':False]
['text':'/ Make window `wp` the current window.','line_number':4674,'multiline':False]
['text':'/','line_number':4675,'multiline':False]
['text':'/ @warning Autocmds may close the window immediately, so caller must check','line_number':4676,'multiline':False]
['text':'/          win_valid(wp).','line_number':4677,'multiline':False]
['text':'/ Make window "wp" the current window.','line_number':4684,'multiline':False]
['text':'/','line_number':4685,'multiline':False]
['text':'/ @param flags  if contains WEE_CURWIN_INVALID, it means curwin has just been','line_number':4686,'multiline':False]
['text':'/               closed and isn't valid.','line_number':4687,'multiline':False]
['text':' nothing to do','line_number':4693,'multiline':False]
['text':' Be careful: If autocommands delete the window, return now.','line_number':4702,'multiline':False]
['text':' autocmds may abort script processing','line_number':4714,'multiline':False]
['text':' sync undo before leaving the current buffer','line_number':4720,'multiline':False]
['text':' Might need to scroll the old window before switching, e.g., when the','line_number':4725,'multiline':False]
['text':' cursor was moved.','line_number':4726,'multiline':False]
['text':' may have to copy the buffer options when 'cpo' contains 'S'','line_number':4731,'multiline':False]
['text':' remember for CTRL-W p','line_number':4736,'multiline':False]
['text':' assume cursor position needs updating','line_number':4747,'multiline':False]
['text':' Make sure the cursor position is valid, either by moving the cursor','line_number':4749,'multiline':False]
['text':' or by scrolling the text.','line_number':4750,'multiline':False]
['text':' Careful: autocommands may close the window and make "wp" invalid','line_number':4757,'multiline':False]
['text':' causes status line redraw','line_number':4772,'multiline':False]
['text':' change background color according to NormalNC,','line_number':4775,'multiline':False]
['text':' but only if actually defined (otherwise no extra redraw)','line_number':4776,'multiline':False]
['text':' TODO(bfredl): eventually we should be smart enough','line_number':4778,'multiline':False]
['text':' to only recompose the window, not redraw it.','line_number':4779,'multiline':False]
['text':' set window height to desired minimal value','line_number':4788,'multiline':False]
['text':' set window width to desired minimal value','line_number':4795,'multiline':False]
['text':' in case jumped to/from help buffer','line_number':4800,'multiline':False]
['text':' Change directories when the 'acd' option is set.','line_number':4802,'multiline':False]
['text':'/ Used after making another window the current one: change directory if needed.','line_number':4806,'multiline':False]
['text':' New directory is either the local directory of the window, tab or NULL.','line_number':4809,'multiline':False]
['text':' Window/tab has a local directory: Save current directory as global','line_number':4817,'multiline':False]
['text':' (unless that was done already) and change to the local directory.','line_number':4818,'multiline':False]
['text':' Window doesn't have a local directory and we are not in the global','line_number':4838,'multiline':False]
['text':' directory: Change to the global directory.','line_number':4839,'multiline':False]
['text':'/ Jump to the first open window that contains buffer "buf", if one exists.','line_number':4855,'multiline':False]
['text':'/ Returns a pointer to the window found, otherwise NULL.','line_number':4856,'multiline':False]
['text':'/ Jump to the first open window in any tab page that contains buffer "buf",','line_number':4873,'multiline':False]
['text':'/ if one exists. First search in the windows present in the current tab page.','line_number':4874,'multiline':False]
['text':'/ @return the found window, or NULL.','line_number':4875,'multiline':False]
['text':' First try the current tab page.','line_number':4878,'multiline':False]
['text':' Skip the current tab since we already checked it.','line_number':4887,'multiline':False]
['text':' If we the current window didn't switch,','line_number':4895,'multiline':False]
['text':' something went wrong.','line_number':4896,'multiline':False]
['text':' Return the window we switched to.','line_number':4901,'multiline':False]
['text':' If we made it this far, we didn't find the buffer.','line_number':4907,'multiline':False]
['text':'/ @param hidden  allocate a window structure and link it in the window if','line_number':4911,'multiline':False]
['text':'                 false.','line_number':4912,'multiline':False]
['text':' allocate window structure and linesizes arrays','line_number':4917,'multiline':False]
['text':' Init w: variables.','line_number':4925,'multiline':False]
['text':' Don't execute autocommands while the window is not properly','line_number':4929,'multiline':False]
['text':' initialized yet.  gui_create_scrollbar() may trigger a FocusGained','line_number':4930,'multiline':False]
['text':' event.','line_number':4931,'multiline':False]
['text':' link the window in the window list','line_number':4933,'multiline':False]
['text':' position the display and the cursor at the top of the file.','line_number':4941,'multiline':False]
['text':' use global option for global-local options','line_number':4954,'multiline':False]
['text':' We won't calculate w_fraction until resizing the window','line_number':4958,'multiline':False]
['text':' up to 1000 can be picked by the user','line_number':4964,'multiline':False]
['text':' Free one wininfo_T.','line_number':4968,'multiline':False]
['text':'/ Remove window 'wp' from the window list and free the structure.','line_number':4978,'multiline':False]
['text':'/','line_number':4979,'multiline':False]
['text':'/ @param tp  tab page "win" is in, NULL for current','line_number':4980,'multiline':False]
['text':' reduce the reference count to the argument list.','line_number':4986,'multiline':False]
['text':' Don't execute autocommands while the window is halfway being deleted.','line_number':4989,'multiline':False]
['text':' free all w: variables','line_number':4998,'multiline':False]
['text':' Remove the window from the b_wininfo lists, it may happen that the','line_number':5030,'multiline':False]
['text':' freed memory is re-used for another window.','line_number':5031,'multiline':False]
['text':' If there already is an entry with "wi_win" set to NULL it','line_number':5037,'multiline':False]
['text':' must be removed, it would never be used.','line_number':5038,'multiline':False]
['text':' Skip "wip" itself, otherwise Coverity complains.','line_number':5039,'multiline':False]
['text':' `wip2 != wip` to satisfy Coverity. #14884','line_number':5041,'multiline':False]
['text':' free the border text','line_number':5061,'multiline':False]
['text':' if a float is turned into a split, the grid data structure will be reused','line_number':5095,'multiline':False]
['text':' Append window "wp" in the window list after window "after".','line_number':5100,'multiline':False]
['text':' after NULL is in front of the first','line_number':5103,'multiline':False]
['text':'/ Remove a window from the window list.','line_number':5120,'multiline':False]
['text':'/','line_number':5121,'multiline':False]
['text':'/ @param tp  tab page "win" is in, NULL for current','line_number':5122,'multiline':False]
['text':' Append frame "frp" in a frame list after frame "after".','line_number':5141,'multiline':False]
['text':' Insert frame "frp" in a frame list before frame "before".','line_number':5152,'multiline':False]
['text':' Remove a frame from a frame list.','line_number':5165,'multiline':False]
['text':' If 'window' uses the whole screen, keep it using that.','line_number':5184,'multiline':False]
['text':' Don't change it when set with "-w size" on the command line.','line_number':5185,'multiline':False]
['text':' update window sizes','line_number':5190,'multiline':False]
['text':' update window sizes','line_number':5194,'multiline':False]
['text':'/ Called from win_new_screensize() after Rows changed.','line_number':5197,'multiline':False]
['text':'/','line_number':5198,'multiline':False]
['text':'/ This only does the current tab page, others must be done when made active.','line_number':5199,'multiline':False]
['text':' not initialized yet','line_number':5204,'multiline':False]
['text':' First try setting the heights of windows with 'winfixheight'.  If','line_number':5211,'multiline':False]
['text':' that doesn't result in the right height, forget about that option.','line_number':5212,'multiline':False]
['text':' recompute w_winrow and w_wincol','line_number':5218,'multiline':False]
['text':' The size of floats might change','line_number':5219,'multiline':False]
['text':'/ Called from win_new_screensize() after Columns changed.','line_number':5228,'multiline':False]
['text':' not initialized yet','line_number':5231,'multiline':False]
['text':' First try setting the widths of windows with 'winfixwidth'.  If that','line_number':5235,'multiline':False]
['text':' doesn't result in the right width, forget about that option.','line_number':5236,'multiline':False]
['text':' recompute w_winrow and w_wincol','line_number':5242,'multiline':False]
['text':' The size of floats might change','line_number':5243,'multiline':False]
['text':'/ Make a snapshot of all the window scroll positions and sizes of the current','line_number':5246,'multiline':False]
['text':'/ tab page.','line_number':5247,'multiline':False]
['text':'/ Create a dictionary with information about size and scroll changes in a','line_number':5270,'multiline':False]
['text':'/ window.','line_number':5271,'multiline':False]
['text':'/ Returns the dictionary with refcount set to one.','line_number':5272,'multiline':False]
['text':'/ Returns NULL on internal error.','line_number':5273,'multiline':False]
['text':' not actually looping, for breaking out on error','line_number':5280,'multiline':False]
['text':'/ Return values of check_window_scroll_resize():','line_number':5317,'multiline':False]
['text':'/< at least one window scrolled','line_number':5319,'multiline':False]
['text':'/< at least one window size changed','line_number':5320,'multiline':False]
['text':'/ This function is used for three purposes:','line_number':5323,'multiline':False]
['text':'/ 1. Goes over all windows in the current tab page and returns:','line_number':5324,'multiline':False]
['text':'/      0                               no scrolling and no size changes found','line_number':5325,'multiline':False]
['text':'/      CWSR_SCROLLED                   at least one window scrolled','line_number':5326,'multiline':False]
['text':'/      CWSR_RESIZED                    at least one window changed size','line_number':5327,'multiline':False]
['text':'/      CWSR_SCROLLED + CWSR_RESIZED    both','line_number':5328,'multiline':False]
['text':'/    "size_count" is set to the nr of windows with size changes.','line_number':5329,'multiline':False]
['text':'/    "first_scroll_win" is set to the first window with any relevant changes.','line_number':5330,'multiline':False]
['text':'/    "first_size_win" is set to the first window with size changes.','line_number':5331,'multiline':False]
['text':'/','line_number':5332,'multiline':False]
['text':'/ 2. When the first three arguments are NULL and "winlist" is not NULL,','line_number':5333,'multiline':False]
['text':'/    "winlist" is set to the list of window IDs with size changes.','line_number':5334,'multiline':False]
['text':'/','line_number':5335,'multiline':False]
['text':'/ 3. When the first three arguments are NULL and "v_event" is not NULL,','line_number':5336,'multiline':False]
['text':'/    information about changed windows is added to "v_event".','line_number':5337,'multiline':False]
['text':' int listidx = 0;','line_number':5342,'multiline':False]
['text':' Skip floating windows that do not have a snapshot (usually because they are newly-created),','line_number':5351,'multiline':False]
['text':' as unlike split windows, creating floating windows do not cause other windows to resize.','line_number':5352,'multiline':False]
['text':' Add this window to the list of changed windows.','line_number':5368,'multiline':False]
['text':' tv_list_set_item(winlist, listidx++, &tv);','line_number':5374,'multiline':False]
['text':' For WinScrolled the first window with a size change is used','line_number':5382,'multiline':False]
['text':' even when it didn't scroll.','line_number':5383,'multiline':False]
['text':' Add info about this window to the v:event dictionary.','line_number':5402,'multiline':False]
['text':'/ Trigger WinScrolled and/or WinResized if any window in the current tab page','line_number':5446,'multiline':False]
['text':'/ scrolled or changed size.','line_number':5447,'multiline':False]
['text':' no relevant changes','line_number':5468,'multiline':False]
['text':' Create the list for v:event.windows before making the snapshot.','line_number':5473,'multiline':False]
['text':' windows_list = tv_list_alloc_with_items(size_count);','line_number':5474,'multiline':False]
['text':' Create the dict with entries for v:event before making the snapshot.','line_number':5481,'multiline':False]
['text':' WinScrolled/WinResized are triggered only once, even when multiple','line_number':5487,'multiline':False]
['text':' windows scrolled or changed size.  Store the current values before','line_number':5488,'multiline':False]
['text':' triggering the event, if a scroll or resize happens as a side effect','line_number':5489,'multiline':False]
['text':' then WinScrolled/WinResized is triggered for that later.','line_number':5490,'multiline':False]
['text':' If both are to be triggered do WinResized first.','line_number':5495,'multiline':False]
['text':' Move the entries from scroll_dict to v_event.','line_number':5514,'multiline':False]
['text':' Save the size of all windows in "gap".','line_number':5529,'multiline':False]
['text':' first entry is the total lines available for windows','line_number':5534,'multiline':False]
['text':' Restore window sizes, but only if the number of windows is still the same','line_number':5545,'multiline':False]
['text':' and total lines available for windows didn't change.','line_number':5546,'multiline':False]
['text':' Does not free the growarray.','line_number':5547,'multiline':False]
['text':' The order matters, because frames contain other frames, but it's','line_number':5554,'multiline':False]
['text':' difficult to get right. The easy way out is to do it twice.','line_number':5555,'multiline':False]
['text':' recompute the window positions','line_number':5567,'multiline':False]
['text':' Update the position for all windows, using the width and height of the frames.','line_number':5572,'multiline':False]
['text':' Returns the row just after the last window and global statusline (if there is one).','line_number':5573,'multiline':False]
['text':' float might be anchored to moved window','line_number':5582,'multiline':False]
['text':' Update the position of the windows in frame "topfrp", using the width and','line_number':5591,'multiline':False]
['text':' height of the frames.','line_number':5592,'multiline':False]
['text':' "*row" and "*col" are the top-left position of the frame.  They are updated','line_number':5593,'multiline':False]
['text':' to the bottom-right position plus one.','line_number':5594,'multiline':False]
['text':' position changed, redraw','line_number':5601,'multiline':False]
['text':' all frames are at the same row','line_number':5617,'multiline':False]
['text':' all frames are at the same col','line_number':5619,'multiline':False]
['text':' Set current window height and take care of repositioning other windows to','line_number':5626,'multiline':False]
['text':' fit around it.','line_number':5627,'multiline':False]
['text':' Set the window height of window "win" and take care of repositioning other','line_number':5633,'multiline':False]
['text':' windows to fit around it.','line_number':5634,'multiline':False]
['text':' Always keep current window at least one line high, even when 'winminheight' is zero.','line_number':5637,'multiline':False]
['text':' Keep window at least two lines high if 'winbar' is enabled.','line_number':5638,'multiline':False]
['text':' recompute the window positions','line_number':5648,'multiline':False]
['text':' If there is extra space created between the last window and the command','line_number':5651,'multiline':False]
['text':' line, clear it.','line_number':5652,'multiline':False]
['text':' Set the height of a frame to "height" and take care that all frames and','line_number':5672,'multiline':False]
['text':' windows inside it are resized.  Also resize frames on the left and right if','line_number':5673,'multiline':False]
['text':' the are in the same FR_ROW frame.','line_number':5674,'multiline':False]
['text':'','line_number':5675,'multiline':False]
['text':' Strategy:','line_number':5676,'multiline':False]
['text':' If the frame is part of a FR_COL frame, try fitting the frame in that','line_number':5677,'multiline':False]
['text':' frame.  If that doesn't work (the FR_COL frame is too small), recursively','line_number':5678,'multiline':False]
['text':' go to containing frames to resize them and make room.','line_number':5679,'multiline':False]
['text':' If the frame is part of a FR_ROW frame, all frames must be resized as well.','line_number':5680,'multiline':False]
['text':' Check for the minimal height of the FR_ROW frame.','line_number':5681,'multiline':False]
['text':' At the top level we can also use change the command line height.','line_number':5682,'multiline':False]
['text':' If the height already is the desired value, nothing to do.','line_number':5685,'multiline':False]
['text':' topframe: can only change the command line height','line_number':5691,'multiline':False]
['text':' Avoid doing so with external messages.','line_number':5692,'multiline':False]
['text':' If height is greater than the available space, try to create space for','line_number':5697,'multiline':False]
['text':' the frame by reducing 'cmdheight' if possible, while making sure','line_number':5698,'multiline':False]
['text':' `cmdheight` doesn't go below 1 if it wasn't set to 0 explicitly.','line_number':5699,'multiline':False]
['text':' Row of frames: Also need to resize frames left and right of this','line_number':5706,'multiline':False]
['text':' one.  First check for the minimal height of these.','line_number':5707,'multiline':False]
['text':' Column of frames: try to change only frames in this column.','line_number':5714,'multiline':False]
['text':' total number of lines available','line_number':5716,'multiline':False]
['text':' lines available from cmdline','line_number':5717,'multiline':False]
['text':' Do this twice:','line_number':5720,'multiline':False]
['text':' 1: compute room available, if it's not enough try resizing the','line_number':5721,'multiline':False]
['text':'    containing frame.','line_number':5722,'multiline':False]
['text':' 2: compute the room available and adjust the height to it.','line_number':5723,'multiline':False]
['text':' Try not to reduce the height of a window with 'winfixheight' set.','line_number':5724,'multiline':False]
['text':' NOTREACHED','line_number':5760,'multiline':False]
['text':' Compute the number of lines we will take from others frames (can be','line_number':5763,'multiline':False]
['text':' negative!).','line_number':5764,'multiline':False]
['text':' If there is not enough room, also reduce the height of a window','line_number':5767,'multiline':False]
['text':' with 'winfixheight' set.','line_number':5768,'multiline':False]
['text':' If there is only a 'winfixheight' window and making the','line_number':5772,'multiline':False]
['text':' window smaller, need to make the other window taller.','line_number':5773,'multiline':False]
['text':' use lines from cmdline first','line_number':5779,'multiline':False]
['text':' set the current frame to the new height','line_number':5787,'multiline':False]
['text':' First take lines from the frames after the current frame.  If','line_number':5790,'multiline':False]
['text':' that is not enough, takes lines from frames above the current','line_number':5791,'multiline':False]
['text':' frame.','line_number':5792,'multiline':False]
['text':' 1st run: start with next window','line_number':5794,'multiline':False]
['text':' 2nd run: start with prev window','line_number':5795,'multiline':False]
['text':' Set current window width and take care of repositioning other windows to','line_number':5832,'multiline':False]
['text':' fit around it.','line_number':5833,'multiline':False]
['text':' Always keep current window at least one column wide, even when','line_number':5841,'multiline':False]
['text':' 'winminwidth' is zero.','line_number':5842,'multiline':False]
['text':' recompute the window positions','line_number':5860,'multiline':False]
['text':' Set the width of a frame to "width" and take care that all frames and','line_number':5866,'multiline':False]
['text':' windows inside it are resized.  Also resize frames above and below if the','line_number':5867,'multiline':False]
['text':' are in the same FR_ROW frame.','line_number':5868,'multiline':False]
['text':'','line_number':5869,'multiline':False]
['text':' Strategy is similar to frame_setheight().','line_number':5870,'multiline':False]
['text':' If the width already is the desired value, nothing to do.','line_number':5873,'multiline':False]
['text':' topframe: can't change width','line_number':5879,'multiline':False]
['text':' Column of frames: Also need to resize frames above and below of','line_number':5884,'multiline':False]
['text':' this one.  First check for the minimal width of these.','line_number':5885,'multiline':False]
['text':' Row of frames: try to change only frames in this row.','line_number':5892,'multiline':False]
['text':'','line_number':5893,'multiline':False]
['text':' Do this twice:','line_number':5894,'multiline':False]
['text':' 1: compute room available, if it's not enough try resizing the','line_number':5895,'multiline':False]
['text':'    containing frame.','line_number':5896,'multiline':False]
['text':' 2: compute the room available and adjust the width to it.','line_number':5897,'multiline':False]
['text':' total number of lines available','line_number':5899,'multiline':False]
['text':' Compute the number of lines we will take from others frames (can be','line_number':5928,'multiline':False]
['text':' negative!).','line_number':5929,'multiline':False]
['text':' If there is not enough room, also reduce the width of a window','line_number':5932,'multiline':False]
['text':' with 'winfixwidth' set.','line_number':5933,'multiline':False]
['text':' If there is only a 'winfixwidth' window and making the','line_number':5937,'multiline':False]
['text':' window smaller, need to make the other window narrower.','line_number':5938,'multiline':False]
['text':' set the current frame to the new width','line_number':5943,'multiline':False]
['text':' First take lines from the frames right of the current frame.  If','line_number':5946,'multiline':False]
['text':' that is not enough, takes lines from frames left of the current','line_number':5947,'multiline':False]
['text':' frame.','line_number':5948,'multiline':False]
['text':' 1st run: start with next window','line_number':5950,'multiline':False]
['text':' 2nd run: start with prev window','line_number':5951,'multiline':False]
['text':' Check 'winminheight' for a valid value and reduce it if needed.','line_number':5988,'multiline':False]
['text':' loop until there is a 'winminheight' that is possible','line_number':5993,'multiline':False]
['text':' Check 'winminwidth' for a valid value and reduce it if needed.','line_number':6009,'multiline':False]
['text':' loop until there is a 'winminheight' that is possible','line_number':6014,'multiline':False]
['text':'/ Status line of dragwin is dragged "offset" lines down (negative is up).','line_number':6030,'multiline':False]
['text':' Avoid changing command line height with external messages.','line_number':6035,'multiline':False]
['text':' more than one window','line_number':6041,'multiline':False]
['text':' When the parent frame is not a column of frames, its parent should','line_number':6043,'multiline':False]
['text':' be.','line_number':6044,'multiline':False]
['text':' only a row of windows, may drag statusline','line_number':6047,'multiline':False]
['text':' If this is the last frame in a column, may want to resize the parent','line_number':6053,'multiline':False]
['text':' frame instead (go two up to skip a row of frames).','line_number':6054,'multiline':False]
['text':' if true, drag status line up, otherwise down','line_number':6066,'multiline':False]
['text':' drag up','line_number':6068,'multiline':False]
['text':' sum up the room of the current frame and above it','line_number':6070,'multiline':False]
['text':' only one window','line_number':6072,'multiline':False]
['text':' put fr at frame that grows','line_number':6083,'multiline':False]
['text':' drag down','line_number':6084,'multiline':False]
['text':' Only dragging the last status line can reduce p_ch.','line_number':6085,'multiline':False]
['text':' sum up the room of frames below of the current one','line_number':6095,'multiline':False]
['text':' put fr at window that grows','line_number':6099,'multiline':False]
['text':' Not enough room','line_number':6102,'multiline':False]
['text':' Move as far as we can','line_number':6103,'multiline':False]
['text':' Grow frame fr by "offset" lines.','line_number':6109,'multiline':False]
['text':' Doesn't happen when dragging the last status line up.','line_number':6110,'multiline':False]
['text':' current frame gets smaller','line_number':6116,'multiline':False]
['text':' next frame gets smaller','line_number':6118,'multiline':False]
['text':' Now make the other frames smaller.','line_number':6120,'multiline':False]
['text':' Separator line of dragwin is dragged "offset" lines right (negative is left).','line_number':6151,'multiline':False]
['text':' only one window (cannot happen?)','line_number':6155,'multiline':False]
['text':' When the parent frame is not a row of frames, its parent should be.','line_number':6160,'multiline':False]
['text':' only a column of windows (cannot happen?)','line_number':6162,'multiline':False]
['text':' If this is the last frame in a row, may want to resize a parent','line_number':6169,'multiline':False]
['text':' frame instead.','line_number':6170,'multiline':False]
['text':' if true, drag separator line left, otherwise right','line_number':6184,'multiline':False]
['text':' drag left','line_number':6186,'multiline':False]
['text':' sum up the room of the current frame and left of it','line_number':6188,'multiline':False]
['text':' put fr at frame that grows','line_number':6196,'multiline':False]
['text':' drag right','line_number':6197,'multiline':False]
['text':' sum up the room of frames right of the current one','line_number':6198,'multiline':False]
['text':' put fr at window that grows','line_number':6203,'multiline':False]
['text':' Not enough room','line_number':6206,'multiline':False]
['text':' Move as far as we can','line_number':6208,'multiline':False]
['text':' No room at all, quit.','line_number':6211,'multiline':False]
['text':' This can happen when calling win_move_separator() on the rightmost','line_number':6217,'multiline':False]
['text':' window.  Just don't do anything.','line_number':6218,'multiline':False]
['text':' grow frame fr by offset lines','line_number':6222,'multiline':False]
['text':' shrink other frames: current and at the left or at the right','line_number':6225,'multiline':False]
['text':' current frame gets smaller','line_number':6227,'multiline':False]
['text':' next frame gets smaller','line_number':6229,'multiline':False]
['text':' Set wp->w_fraction for the current w_wrow and w_height.','line_number':6252,'multiline':False]
['text':' Has no effect when the window is less than two lines.','line_number':6253,'multiline':False]
['text':' When cursor is in the first line the percentage is computed as if','line_number':6257,'multiline':False]
['text':' it's halfway that line.  Thus with two lines it is 25%, with three','line_number':6258,'multiline':False]
['text':' lines 17%, etc.  Similarly for the last line: 75%, 83%, etc.','line_number':6259,'multiline':False]
['text':'/ Handle scroll position, depending on 'splitkeep'.  Replaces the','line_number':6264,'multiline':False]
['text':'/ scroll_to_fraction() call from win_new_height() if 'splitkeep' is "screen"','line_number':6265,'multiline':False]
['text':'/ or "topline".  Instead we iterate over all windows in a tabpage and','line_number':6266,'multiline':False]
['text':'/ calculate the new scroll position.','line_number':6267,'multiline':False]
['text':'/ TODO(vim): Ensure this also works with wrapped lines.','line_number':6268,'multiline':False]
['text':'/ Requires a not fully visible cursor line to be allowed at the bottom of','line_number':6269,'multiline':False]
['text':'/ a window("zb"), probably only when 'smoothscroll' is also set.','line_number':6270,'multiline':False]
['text':' 'splitkeep' is "cursor"','line_number':6274,'multiline':False]
['text':' Skip when window height has not changed or when floating.','line_number':6279,'multiline':False]
['text':' Cursor position in this window may now be invalid.  It is kept','line_number':6281,'multiline':False]
['text':' potentially invalid until the window is made the current window.','line_number':6282,'multiline':False]
['text':' If window has moved update botline to keep the same screenlines.','line_number':6285,'multiline':False]
['text':' Add difference in height and row to botline.','line_number':6293,'multiline':False]
['text':' Scroll to put the new cursor position at the bottom of the','line_number':6300,'multiline':False]
['text':' screen.','line_number':6301,'multiline':False]
['text':' Ensure cursor is valid when not in normal mode or when resized.','line_number':6316,'multiline':False]
['text':'/ Make sure the cursor position is valid for 'splitkeep'.','line_number':6324,'multiline':False]
['text':'/ If it is not, put the cursor position in the jumplist and move it.','line_number':6325,'multiline':False]
['text':'/ If we are not in normal mode ("normal" is false), make it valid by scrolling','line_number':6326,'multiline':False]
['text':'/ instead.','line_number':6327,'multiline':False]
['text':' Determine valid cursor range.','line_number':6339,'multiline':False]
['text':' Check if cursor position is above or below valid cursor range.','line_number':6352,'multiline':False]
['text':' Cursor is invalid for current scroll position.','line_number':6360,'multiline':False]
['text':' Save to jumplist and set cursor to avoid scrolling.','line_number':6361,'multiline':False]
['text':' Scroll instead when not in normal mode.','line_number':6364,'multiline':False]
['text':' Set the height of a window.','line_number':6372,'multiline':False]
['text':' "height" excludes any window toolbar.','line_number':6373,'multiline':False]
['text':' This takes care of the things inside the window, not what happens to the','line_number':6374,'multiline':False]
['text':' window position, the frame or to other windows.','line_number':6375,'multiline':False]
['text':' Don't want a negative height.  Happens when splitting a tiny window.','line_number':6378,'multiline':False]
['text':' Will equalize heights soon to fix it.','line_number':6379,'multiline':False]
['text':' nothing to do','line_number':6384,'multiline':False]
['text':' Don't change w_topline in any of these cases:','line_number':6396,'multiline':False]
['text':' - window height is 0','line_number':6397,'multiline':False]
['text':' - 'scrollbind' is set and this isn't the current window','line_number':6398,'multiline':False]
['text':' - window height is sufficient to display the whole buffer and first line','line_number':6399,'multiline':False]
['text':'   is visible.','line_number':6400,'multiline':False]
['text':' Find a value for w_topline that shows the cursor at the same','line_number':6405,'multiline':False]
['text':' relative position in the window as before (more or less).','line_number':6406,'multiline':False]
['text':' can happen when starting up','line_number':6408,'multiline':False]
['text':' Make sure the whole cursor line is visible, if possible.','line_number':6416,'multiline':False]
['text':' Cursor line would go off top of screen if w_wrow was this high.','line_number':6426,'multiline':False]
['text':' Make cursor line the first line in the window.  If not enough','line_number':6427,'multiline':False]
['text':' room use w_skipcol;','line_number':6428,'multiline':False]
['text':' first line in buffer is folded','line_number':6444,'multiline':False]
['text':' Line we want at top would go off top of screen.  Use next','line_number':6460,'multiline':False]
['text':' line instead.','line_number':6461,'multiline':False]
['text':' First line of file reached, use that as topline.','line_number':6466,'multiline':False]
['text':' validate w_wrow','line_number':6475,'multiline':False]
['text':' w_wrow needs to be valid. When setting 'laststatus' this may','line_number':6501,'multiline':False]
['text':' call win_new_height() recursively.','line_number':6502,'multiline':False]
['text':' Recursive call already changed the size, bail out.','line_number':6506,'multiline':False]
['text':' There is no point in adjusting the scroll position when exiting.  Some','line_number':6515,'multiline':False]
['text':' values might be invalid.','line_number':6516,'multiline':False]
['text':' validate w_wrow','line_number':6531,'multiline':False]
['text':'/ Set the width of a window.','line_number':6548,'multiline':False]
['text':' Should we give an error if width < 0?','line_number':6551,'multiline':False]
['text':' Used by "verbose set scroll".','line_number':6566,'multiline':False]
['text':'/ command_height: called whenever p_ch has been changed.','line_number':6572,'multiline':False]
['text':' Use the value of p_ch that we remembered.  This is needed for when the','line_number':6577,'multiline':False]
['text':' GUI starts up, we can't be sure in what order things happen.  And when','line_number':6578,'multiline':False]
['text':' p_ch was changed in another tab page.','line_number':6579,'multiline':False]
['text':' Update cmdline_row to what it should be: just below the last window.','line_number':6582,'multiline':False]
['text':' If cmdline_row is smaller than what it is supposed to be for 'cmdheight'','line_number':6585,'multiline':False]
['text':' then set old_p_ch to what it would be, so that the windows get resized','line_number':6586,'multiline':False]
['text':' properly for the new value.','line_number':6587,'multiline':False]
['text':' Find bottom frame with width of screen.','line_number':6592,'multiline':False]
['text':' Avoid changing the height of a window with 'winfixheight' set.','line_number':6598,'multiline':False]
['text':' p_ch got bigger','line_number':6607,'multiline':False]
['text':' Recompute window positions.','line_number':6625,'multiline':False]
['text':' clear the lines added to cmdline','line_number':6628,'multiline':False]
['text':' Recompute window positions.','line_number':6644,'multiline':False]
['text':' Resize frame "frp" to be "n" lines higher (negative for less high).','line_number':6650,'multiline':False]
['text':' Also resize the frames it is contained in.','line_number':6651,'multiline':False]
['text':' Get the file name at the cursor.','line_number':6664,'multiline':False]
['text':' If Visual mode is active, use the selected text if it's in one line.','line_number':6665,'multiline':False]
['text':' Returns the name in allocated memory, NULL for failure.','line_number':6666,'multiline':False]
['text':' Only recognize ":123" here','line_number':6676,'multiline':False]
['text':' Return the file name under or after the cursor.','line_number':6687,'multiline':False]
['text':'','line_number':6688,'multiline':False]
['text':' The 'path' option is searched if the file name is not absolute.','line_number':6689,'multiline':False]
['text':' The string returned has been alloc'ed and should be freed by the caller.','line_number':6690,'multiline':False]
['text':' NULL is returned if the file name or file is not found.','line_number':6691,'multiline':False]
['text':'','line_number':6692,'multiline':False]
['text':' options:','line_number':6693,'multiline':False]
['text':' FNAME_MESS       give error messages','line_number':6694,'multiline':False]
['text':' FNAME_EXP        expand to path','line_number':6695,'multiline':False]
['text':' FNAME_HYP        check for hypertext link','line_number':6696,'multiline':False]
['text':' FNAME_INCL       apply "includeexpr"','line_number':6697,'multiline':False]
['text':'/ @param rel_fname  file we are searching relative to','line_number':6705,'multiline':False]
['text':'/ @param file_lnum  line number after the file name','line_number':6706,'multiline':False]
['text':'/','line_number':6707,'multiline':False]
['text':'/ @return  the name of the file under or after ptr[col]. Otherwise like file_name_at_cursor().','line_number':6708,'multiline':False]
['text':' search forward for what could be the start of a file name','line_number':6712,'multiline':False]
['text':' nothing found','line_number':6717,'multiline':False]
['text':' Search backward for first char of the file name.','line_number':6728,'multiline':False]
['text':' Go one char back to ":" before "//", or to the drive letter before ":\" (even if ":"','line_number':6729,'multiline':False]
['text':' is not in 'isfname').','line_number':6730,'multiline':False]
['text':' Search forward for the last char of the file name.','line_number':6741,'multiline':False]
['text':' Also allow ":/" when ':' is not in 'isfname'.','line_number':6742,'multiline':False]
['text':' After type:// we also include :, ?, & and = as valid characters, so that','line_number':6747,'multiline':False]
['text':' http://google.com:8080?q=this&that=ok works.','line_number':6748,'multiline':False]
['text':' Skip over the "\" in "\ ".','line_number':6758,'multiline':False]
['text':' If there is trailing punctuation, remove it.','line_number':6764,'multiline':False]
['text':' But don't remove "..", could be a directory name.','line_number':6765,'multiline':False]
['text':' Get the number after the file name and a separator character.','line_number':6775,'multiline':False]
['text':' Also accept " line 999" with and without the same translation as','line_number':6776,'multiline':False]
['text':' used in last_set_msg().','line_number':6777,'multiline':False]
['text':' skip the separator','line_number':6788,'multiline':False]
['text':'/ Add or remove a status line from window(s), according to the','line_number':6800,'multiline':False]
['text':'/ value of 'laststatus'.','line_number':6801,'multiline':False]
['text':'/','line_number':6802,'multiline':False]
['text':'/ @param morewin  pretend there are two or more windows if true.','line_number':6803,'multiline':False]
['text':' Don't make a difference between horizontal or vertical split.','line_number':6806,'multiline':False]
['text':' Remove status line from window, replacing it with a horizontal separator if needed.','line_number':6810,'multiline':False]
['text':' Look for a horizontally resizable frame, starting with frame "fr".','line_number':6827,'multiline':False]
['text':' Returns NULL if there are no resizable frames.','line_number':6828,'multiline':False]
['text':' In a column of frames: go to frame above.  If already at','line_number':6837,'multiline':False]
['text':' the top or in a row of frames: go to parent.','line_number':6838,'multiline':False]
['text':' Look for resizable frames and take lines from them to make room for the statusline.','line_number':6849,'multiline':False]
['text':' @return Success or failure.','line_number':6850,'multiline':False]
['text':' Look for resizable frames and take lines from them to make room for the winbar.','line_number':6870,'multiline':False]
['text':' @return Success or failure.','line_number':6871,'multiline':False]
['text':' Add statusline to window if needed','line_number':6899,'multiline':False]
['text':' Set prev_height when difference is due to 'laststatus'.','line_number':6906,'multiline':False]
['text':' If statusline is global and the window has a statusline, replace it with a horizontal','line_number':6911,'multiline':False]
['text':' separator','line_number':6912,'multiline':False]
['text':' If statusline isn't global and the window doesn't have a statusline, re-add it','line_number':6915,'multiline':False]
['text':' For a column or row frame, recursively call this function for all child frames','line_number':6921,'multiline':False]
['text':'/ Add or remove window bar from window "wp".','line_number':6929,'multiline':False]
['text':'/','line_number':6930,'multiline':False]
['text':'/ @param make_room Whether to resize frames to make room for winbar.','line_number':6931,'multiline':False]
['text':'/ @param valid_cursor Whether the cursor is valid and should be used while','line_number':6932,'multiline':False]
['text':'/                     resizing.','line_number':6933,'multiline':False]
['text':'/','line_number':6934,'multiline':False]
['text':'/ @return Success status.','line_number':6935,'multiline':False]
['text':' Require the local value to be set in order to show winbar on a floating window.','line_number':6938,'multiline':False]
['text':' When removing winbar, deallocate the w_winbar_click_defs array','line_number':6955,'multiline':False]
['text':'/ Add or remove window bars from all windows in tab depending on the value of 'winbar'.','line_number':6966,'multiline':False]
['text':'/','line_number':6967,'multiline':False]
['text':'/ @param make_room Whether to resize frames to make room for winbar.','line_number':6968,'multiline':False]
['text':'/ Return the number of lines used by the tab page line.','line_number':6978,'multiline':False]
['text':'/ Return the number of lines used by default by the window bar.','line_number':6994,'multiline':False]
['text':'/ Return the number of lines used by the global statusline','line_number':7000,'multiline':False]
['text':'/ Return the height of the last window's statusline, or the global statusline if set.','line_number':7006,'multiline':False]
['text':'/','line_number':7007,'multiline':False]
['text':'/ @param morewin  pretend there are two or more windows if true.','line_number':7008,'multiline':False]
['text':'/ Return the minimal number of rows that is needed on the screen to display','line_number':7014,'multiline':False]
['text':'/ the current number of windows.','line_number':7015,'multiline':False]
['text':' not initialized yet','line_number':7018,'multiline':False]
['text':' count the room for the command line','line_number':7031,'multiline':False]
['text':'/ Check that there is only one window (and only one tab page), not counting a','line_number':7036,'multiline':False]
['text':'/ help or preview window, unless it is the current window. Does not count','line_number':7037,'multiline':False]
['text':'/ "aucmd_win". Does not count floats unless it is current.','line_number':7038,'multiline':False]
['text':' If there is another tab page there always is another window.','line_number':7041,'multiline':False]
['text':'/ Implementation of check_lnums() and check_lnums_nested().','line_number':7057,'multiline':False]
['text':' save the original cursor position and topline','line_number':7063,'multiline':False]
['text':' save the (corrected) cursor position','line_number':7073,'multiline':False]
['text':' save the (corrected) topline','line_number':7082,'multiline':False]
['text':'/ Correct the cursor line number in other windows.  Used after changing the','line_number':7089,'multiline':False]
['text':'/ current buffer, and before applying autocommands.','line_number':7090,'multiline':False]
['text':'/','line_number':7091,'multiline':False]
['text':'/ @param do_curwin  when true, also check current window.','line_number':7092,'multiline':False]
['text':'/ Like check_lnums() but for when check_lnums() was already called.','line_number':7098,'multiline':False]
['text':'/ Reset cursor and topline to its stored values from check_lnums().','line_number':7104,'multiline':False]
['text':'/ check_lnums() must have been called first!','line_number':7105,'multiline':False]
['text':' Restore the value if the autocommand didn't change it and it was set.','line_number':7110,'multiline':False]
['text':' Note: This triggers e.g. on BufReadPre, when the buffer is not yet','line_number':7111,'multiline':False]
['text':'       loaded, so cannot validate the buffer line','line_number':7112,'multiline':False]
['text':' A snapshot of the window sizes, to restore them after closing the help','line_number':7128,'multiline':False]
['text':' window.','line_number':7129,'multiline':False]
['text':' Only these fields are used:','line_number':7130,'multiline':False]
['text':' fr_layout','line_number':7131,'multiline':False]
['text':' fr_width','line_number':7132,'multiline':False]
['text':' fr_height','line_number':7133,'multiline':False]
['text':' fr_next','line_number':7134,'multiline':False]
['text':' fr_child','line_number':7135,'multiline':False]
['text':' fr_win (only valid for the old curwin, NULL otherwise)','line_number':7136,'multiline':False]
['text':' Create a snapshot of the current frame sizes.','line_number':7138,'multiline':False]
['text':' Remove any existing snapshot.','line_number':7162,'multiline':False]
['text':'/ Traverse a snapshot to find the previous curwin.','line_number':7179,'multiline':False]
['text':'/ @return  the current window stored in the snapshot or NULL.','line_number':7198,'multiline':False]
['text':'/ Restore a previously created snapshot, if there is any.','line_number':7208,'multiline':False]
['text':'/ This is only done if the screen size didn't change and the window layout is','line_number':7209,'multiline':False]
['text':'/ still the same.','line_number':7210,'multiline':False]
['text':'/','line_number':7211,'multiline':False]
['text':'/ @param close_curwin  closing current window','line_number':7212,'multiline':False]
['text':'/ Check if frames "sn" and "fr" have the same layout, same following frames','line_number':7229,'multiline':False]
['text':'/ and same children.  And the window pointer is valid.','line_number':7230,'multiline':False]
['text':' Copy the size of snapshot frame "sn" to frame "fr".  Do the same for all','line_number':7246,'multiline':False]
['text':' following frames and children.','line_number':7247,'multiline':False]
['text':' Returns a pointer to the old current window, or NULL.','line_number':7248,'multiline':False]
['text':'/ Check that "topfrp" and its children are at the right height.','line_number':7275,'multiline':False]
['text':'/','line_number':7276,'multiline':False]
['text':'/ @param  topfrp  top frame pointer','line_number':7277,'multiline':False]
['text':'/ @param  height  expected height','line_number':7278,'multiline':False]
['text':'/ Check that "topfrp" and its children are at the right width.','line_number':7296,'multiline':False]
['text':'/','line_number':7297,'multiline':False]
['text':'/ @param  topfrp  top frame pointer','line_number':7298,'multiline':False]
['text':'/ @param  width   expected width','line_number':7299,'multiline':False]
['text':'/ Simple int comparison function for use with qsort()','line_number':7317,'multiline':False]
['text':'/ Handle setting 'colorcolumn' or 'textwidth' in window "wp".','line_number':7323,'multiline':False]
['text':'/','line_number':7324,'multiline':False]
['text':'/ @return error message, NULL if it's OK.','line_number':7325,'multiline':False]
['text':' buffer was closed','line_number':7329,'multiline':False]
['text':' -N and +N: add to 'textwidth'','line_number':7337,'multiline':False]
['text':' 'textwidth' not set, skip this item','line_number':7345,'multiline':False]
['text':' 1-based to 0-based','line_number':7362,'multiline':False]
['text':' illegal trailing comma as in "set cc=80,"','line_number':7371,'multiline':False]
['text':' sort the columns for faster usage on screen redraw inside','line_number':7380,'multiline':False]
['text':' win_line()','line_number':7381,'multiline':False]
['text':' skip duplicates','line_number':7386,'multiline':False]
['text':' end marker','line_number':7391,'multiline':False]
['text':' no error','line_number':7394,'multiline':False]
