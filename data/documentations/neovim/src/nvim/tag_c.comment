['text':' Code to handle tags and the tag stack','line_number':1,'multiline':False]
['text':' Structure to hold pointers to various items in a tag line.','line_number':60,'multiline':False]
['text':' filled in by parse_tag_line():','line_number':62,'multiline':False]
['text':' start of tag name (skip "file:")','line_number':63,'multiline':False]
['text':' char after tag name','line_number':64,'multiline':False]
['text':' first char of file name','line_number':65,'multiline':False]
['text':' char after file name','line_number':66,'multiline':False]
['text':' first char of command','line_number':67,'multiline':False]
['text':' filled in by parse_match():','line_number':68,'multiline':False]
['text':' first char after command','line_number':69,'multiline':False]
['text':' file name of the tags file. This is used','line_number':70,'multiline':False]
['text':' when 'tr' is set.','line_number':71,'multiline':False]
['text':' "kind:" value','line_number':72,'multiline':False]
['text':' end of tagkind','line_number':73,'multiline':False]
['text':' user_data string','line_number':74,'multiline':False]
['text':' end of user_data','line_number':75,'multiline':False]
['text':' "line:" value','line_number':76,'multiline':False]
['text':' Structure to hold info about the tag pattern being used.','line_number':79,'multiline':False]
['text':' the pattern','line_number':81,'multiline':False]
['text':' length of pat[]','line_number':82,'multiline':False]
['text':' start of pattern head','line_number':83,'multiline':False]
['text':' length of head[]','line_number':84,'multiline':False]
['text':' regexp program, may be NULL','line_number':85,'multiline':False]
['text':' The matching tags are first stored in one of the hash tables.  In','line_number':88,'multiline':False]
['text':' which one depends on the priority of the match.','line_number':89,'multiline':False]
['text':' ht_match[] is used to find duplicates, ga_match[] to keep them in sequence.','line_number':90,'multiline':False]
['text':' At the end, the matches from ga_match[] are concatenated, to make a list','line_number':91,'multiline':False]
['text':' sorted on priority.','line_number':92,'multiline':False]
['text':' static match in current file','line_number':94,'multiline':False]
['text':' global match in current file','line_number':95,'multiline':False]
['text':' global match in other file','line_number':96,'multiline':False]
['text':' static match in other file','line_number':97,'multiline':False]
['text':' add for icase match','line_number':98,'multiline':False]
['text':' add for regexp match','line_number':99,'multiline':False]
['text':' mask for printing priority','line_number':100,'multiline':False]
['text':' return value for jumpto_tag','line_number':107,'multiline':False]
['text':' fname for NOTAGFILE error','line_number':108,'multiline':False]
['text':'/ Return values used when reading lines from a tags file.','line_number':110,'multiline':False]
['text':'/ States used during a tags search','line_number':117,'multiline':False]
['text':'/< at start of file','line_number':119,'multiline':False]
['text':'/< linear searching forward, till EOF','line_number':120,'multiline':False]
['text':'/< binary searching','line_number':121,'multiline':False]
['text':'/< skipping backwards','line_number':122,'multiline':False]
['text':'/< stepping forwards','line_number':123,'multiline':False]
['text':'/ Binary search file offsets in a tags file','line_number':126,'multiline':False]
['text':'/< offset for first char of first line that','line_number':128,'multiline':False]
['text':'/< could match','line_number':129,'multiline':False]
['text':'/< offset of char after last line that could','line_number':130,'multiline':False]
['text':'/< match','line_number':131,'multiline':False]
['text':'/< Current file offset in search range','line_number':132,'multiline':False]
['text':'/< curr_offset used when skipping back','line_number':133,'multiline':False]
['text':'/< Where the binary search found a tag','line_number':134,'multiline':False]
['text':'/< first char at low_offset','line_number':135,'multiline':False]
['text':'/< first char at high_offset','line_number':136,'multiline':False]
['text':'/ Return values used when matching tags against a pattern.','line_number':139,'multiline':False]
['text':'/ Arguments used for matching tags read from a tags file against a pattern.','line_number':147,'multiline':False]
['text':'/< tag match offset','line_number':149,'multiline':False]
['text':'/< true if the tag matches a regexp','line_number':150,'multiline':False]
['text':'/< true if the tag matches with case','line_number':151,'multiline':False]
['text':'/< regular expression used','line_number':152,'multiline':False]
['text':'/< tags file sorted ignoring case (foldcase)','line_number':153,'multiline':False]
['text':'/< tags file not sorted','line_number':154,'multiline':False]
['text':'/ State information used during a tag search','line_number':157,'multiline':False]
['text':'/< tag search state','line_number':159,'multiline':False]
['text':'/< stop when match found or error','line_number':160,'multiline':False]
['text':'/< holds unconverted pattern info','line_number':161,'multiline':False]
['text':'/< line buffer','line_number':162,'multiline':False]
['text':'/< length of lbuf','line_number':163,'multiline':False]
['text':'/< name of the tag file','line_number':164,'multiline':False]
['text':'/< current tags file pointer','line_number':165,'multiline':False]
['text':'/< flags used for tag search','line_number':166,'multiline':False]
['text':'/< !_TAG_FILE_SORTED value','line_number':167,'multiline':False]
['text':'/< used for 'showfulltag'','line_number':168,'multiline':False]
['text':'/< only search for help tags','line_number':169,'multiline':False]
['text':'/< did open a tag file','line_number':170,'multiline':False]
['text':'/< MAXCOL: find all matches','line_number':171,'multiline':False]
['text':'/< other: minimal number of matches','line_number':172,'multiline':False]
['text':'/< do a linear search','line_number':173,'multiline':False]
['text':'/< lang of current tags file','line_number':175,'multiline':False]
['text':'/< help language priority','line_number':176,'multiline':False]
['text':'/< lang to be found','line_number':177,'multiline':False]
['text':'/< flag of file extension','line_number':178,'multiline':False]
['text':'/< number of matches found','line_number':179,'multiline':False]
['text':'/< stores matches in sequence','line_number':180,'multiline':False]
['text':'/< stores matches by key','line_number':181,'multiline':False]
['text':' name of last used tag','line_number':203,'multiline':False]
['text':' Tag for preview window is remembered separately, to avoid messing up the','line_number':205,'multiline':False]
['text':' normal tagstack.','line_number':206,'multiline':False]
['text':' disallow recursive call of tagfunc','line_number':209,'multiline':False]
['text':' 'tagfunc' callback function','line_number':210,'multiline':False]
['text':' Used instead of NUL to separate tag fields in the growarrays.','line_number':212,'multiline':False]
['text':'/ Reads the 'tagfunc' option value and convert that to a callback value.','line_number':215,'multiline':False]
['text':'/ Invoked when the 'tagfunc' option is set. The option value can be a name of','line_number':216,'multiline':False]
['text':'/ a function (string), or function(<name>) or funcref(<name>) or a lambda.','line_number':217,'multiline':False]
['text':'/ Mark the global 'tagfunc' callback with "copyID" so that it is not garbage','line_number':244,'multiline':False]
['text':'/ collected.','line_number':245,'multiline':False]
['text':'/ Copy the global 'tagfunc' callback function to the buffer-local 'tagfunc'','line_number':251,'multiline':False]
['text':'/ callback for 'buf'.','line_number':252,'multiline':False]
['text':'/ Jump to tag; handling of tag commands and tag stack','line_number':261,'multiline':False]
['text':'/','line_number':262,'multiline':False]
['text':'/ *tag != NUL: ":tag {tag}", jump to new tag, add to tag stack','line_number':263,'multiline':False]
['text':'/','line_number':264,'multiline':False]
['text':'/ type == DT_TAG:      ":tag [tag]", jump to newer position or same tag again','line_number':265,'multiline':False]
['text':'/ type == DT_HELP:     like DT_TAG, but don't use regexp.','line_number':266,'multiline':False]
['text':'/ type == DT_POP:      ":pop" or CTRL-T, jump to old position','line_number':267,'multiline':False]
['text':'/ type == DT_NEXT:     jump to next match of same tag','line_number':268,'multiline':False]
['text':'/ type == DT_PREV:     jump to previous match of same tag','line_number':269,'multiline':False]
['text':'/ type == DT_FIRST:    jump to first match of same tag','line_number':270,'multiline':False]
['text':'/ type == DT_LAST:     jump to last match of same tag','line_number':271,'multiline':False]
['text':'/ type == DT_SELECT:   ":tselect [tag]", select tag from a list of all matches','line_number':272,'multiline':False]
['text':'/ type == DT_JUMP:     ":tjump [tag]", jump to tag or select tag from a list','line_number':273,'multiline':False]
['text':'/ type == DT_LTAG:     use location list for displaying tag matches','line_number':274,'multiline':False]
['text':'/ type == DT_FREE:     free cached matches','line_number':275,'multiline':False]
['text':'/','line_number':276,'multiline':False]
['text':'/ @param tag  tag (pattern) to jump to','line_number':277,'multiline':False]
['text':'/ @param forceit  :ta with !','line_number':278,'multiline':False]
['text':'/ @param verbose  print "tag not found" message','line_number':279,'multiline':False]
['text':' name for priority computation','line_number':298,'multiline':False]
['text':' remember the matches for the last used tag','line_number':302,'multiline':False]
['text':' limit used for match search','line_number':304,'multiline':False]
['text':' remove the list of matches','line_number':315,'multiline':False]
['text':' shutup gcc 4.0','line_number':332,'multiline':False]
['text':' Don't add a tag to the tagstack if 'tagstack' has been reset.','line_number':335,'multiline':False]
['text':' new pattern, add to the tag stack','line_number':351,'multiline':False]
['text':' Jumping to same tag: keep the current match, so that','line_number':358,'multiline':False]
['text':' the CursorHold autocommand example works.','line_number':359,'multiline':False]
['text':' If the last used entry is not at the top, delete all tag','line_number':367,'multiline':False]
['text':' stack entries above it.','line_number':368,'multiline':False]
['text':' if the tagstack is full: remove oldest entry','line_number':373,'multiline':False]
['text':' put the tag name in the tag stack','line_number':383,'multiline':False]
['text':' save the cursor position below','line_number':388,'multiline':False]
['text':' empty stack','line_number':395,'multiline':False]
['text':' go to older position','line_number':400,'multiline':False]
['text':' We did [num]^T from the bottom of the stack','line_number':405,'multiline':False]
['text':' We weren't at the bottom of the stack, so jump all the','line_number':409,'multiline':False]
['text':' way to the bottom now.','line_number':410,'multiline':False]
['text':' count == 0?','line_number':412,'multiline':False]
['text':' Make a copy of the fmark, autocommands may invalidate the','line_number':417,'multiline':False]
['text':' tagstack before it's used.','line_number':418,'multiline':False]
['text':' Jump to other file. If this fails (e.g. because the','line_number':421,'multiline':False]
['text':' file was changed) keep original position in tag stack.','line_number':422,'multiline':False]
['text':' back to old posn','line_number':425,'multiline':False]
['text':' A BufReadPost autocommand may jump to the '" mark, but','line_number':428,'multiline':False]
['text':' we don't what that here.','line_number':429,'multiline':False]
['text':' remove the old list of matches','line_number':442,'multiline':False]
['text':' ":tag" (no argument): go to newer pattern','line_number':455,'multiline':False]
['text':' save the cursor position below','line_number':456,'multiline':False]
['text':' Beyond the last one, just give an error message and','line_number':458,'multiline':False]
['text':' go to the last one.  Don't store the cursor','line_number':459,'multiline':False]
['text':' position.','line_number':460,'multiline':False]
['text':' must have been count == 0','line_number':464,'multiline':False]
['text':' go to other matching tag','line_number':473,'multiline':False]
['text':' Save index for when selection is cancelled.','line_number':474,'multiline':False]
['text':' For ":tag [arg]" or ":tselect" remember position before the jump.','line_number':516,'multiline':False]
['text':' Curwin will change in the call to jumpto_tag() if ":stag" was','line_number':523,'multiline':False]
['text':' used or an autocommand jumps to another window; store value of','line_number':524,'multiline':False]
['text':' tagstackidx now.','line_number':525,'multiline':False]
['text':' When not using the current buffer get the name of buffer "cur_fnum".','line_number':534,'multiline':False]
['text':' Makes sure that the tag order doesn't change when using a remembered','line_number':535,'multiline':False]
['text':' position for "cur_match".','line_number':536,'multiline':False]
['text':' Repeat searching for tags, when a file has not been found.','line_number':545,'multiline':False]
['text':' When desired match not found yet, try to find it (and others).','line_number':550,'multiline':False]
['text':' make a copy, the tagstack may change in 'tagfunc'','line_number':552,'multiline':False]
['text':' when the argument starts with '/', use it as a regexp','line_number':580,'multiline':False]
['text':' If less than max_num_matches','line_number':598,'multiline':False]
['text':' found: all matches found.','line_number':599,'multiline':False]
['text':' A tag function may do anything, which may cause various','line_number':602,'multiline':False]
['text':' information to become invalid.  At least check for the tagstack','line_number':603,'multiline':False]
['text':' to still be the same.','line_number':604,'multiline':False]
['text':' If there already were some matches for the same name, move them','line_number':611,'multiline':False]
['text':' to the start.  Avoids that the order changes when using','line_number':612,'multiline':False]
['text':' ":tnext" and jumping to another file.','line_number':613,'multiline':False]
['text':' Find the position of each old match in the new list.  Need','line_number':618,'multiline':False]
['text':' to use parse_match() to find the tag line.','line_number':619,'multiline':False]
['text':' If a count is supplied to the ":tag <name>" command, then','line_number':649,'multiline':False]
['text':' jump to count'th matching tag.','line_number':650,'multiline':False]
['text':' Jump to the first tag','line_number':660,'multiline':False]
['text':' Ask to select a tag from the list.','line_number':664,'multiline':False]
['text':' no valid choice: don't change anything','line_number':667,'multiline':False]
['text':' Avoid giving this error when a file wasn't found and we're','line_number':678,'multiline':False]
['text':' looking for a match in another file, which wasn't found.','line_number':679,'multiline':False]
['text':' There will be an emsg("file doesn't exist") below then.','line_number':680,'multiline':False]
['text':' store user-provided data originating from tagfunc','line_number':698,'multiline':False]
['text':' Only when going to try the next match, report that the previous','line_number':712,'multiline':False]
['text':' file didn't exist.  Otherwise an emsg() is given below.','line_number':713,'multiline':False]
['text':' Give an indication of the number of matching tags','line_number':722,'multiline':False]
['text':' Don't overwrite this message.','line_number':733,'multiline':False]
['text':' Let the SwapExists event know what tag we are jumping to.','line_number':743,'multiline':False]
['text':' Jump to the desired match.','line_number':747,'multiline':False]
['text':' File not found: try again with another matching tag','line_number':753,'multiline':False]
['text':' We may have jumped to another window, check that','line_number':773,'multiline':False]
['text':' tagstackidx is still valid.','line_number':774,'multiline':False]
['text':' Only store the new index when using the tagstack and it's valid.','line_number':784,'multiline':False]
['text':' don't split next time','line_number':788,'multiline':False]
['text':' don't do tag preview next time','line_number':789,'multiline':False]
['text':' List all the matching tags.','line_number':793,'multiline':False]
['text':' Assume that the first match indicates how long the tags can','line_number':800,'multiline':False]
['text':' be, and align the file names to that.','line_number':801,'multiline':False]
['text':' overwrite previous message','line_number':811,'multiline':False]
['text':' Find out the actual file name. If it is long, truncate','line_number':842,'multiline':False]
['text':' it and put "..." in the middle','line_number':843,'multiline':False]
['text':' print any extra fields','line_number':857,'multiline':False]
['text':' skip "file:" without a value (static tag)','line_number':866,'multiline':False]
['text':' skip "kind:<kind>" and "<kind>"','line_number':871,'multiline':False]
['text':' print all other extra fields','line_number':878,'multiline':False]
['text':' Put the info (in several lines) at column 15.','line_number':912,'multiline':False]
['text':' Don't display "/^" and "?^".','line_number':913,'multiline':False]
['text':' Remove leading whitespace from pattern','line_number':921,'multiline':False]
['text':' skip backslash used for escaping a command char or','line_number':935,'multiline':False]
['text':' a backslash','line_number':936,'multiline':False]
['text':' don't display the "$/;\"" and "$?;\""','line_number':949,'multiline':False]
['text':' don't display matching '/' or '?'','line_number':954,'multiline':False]
['text':' only stop the listing','line_number':966,'multiline':False]
['text':'/ Add the matching tags to the location list for the current','line_number':970,'multiline':False]
['text':'/ window.','line_number':971,'multiline':False]
['text':' Save the tag name','line_number':986,'multiline':False]
['text':' Save the tag file name','line_number':994,'multiline':False]
['text':' Get the line number or the search pattern used to locate','line_number':1002,'multiline':False]
['text':' the tag.','line_number':1003,'multiline':False]
['text':' Line number is used to locate the tag','line_number':1006,'multiline':False]
['text':' Search pattern is used to locate the tag','line_number':1009,'multiline':False]
['text':' Locate the end of the command','line_number':1011,'multiline':False]
['text':' Now, cmd_end points to the character after the','line_number':1020,'multiline':False]
['text':' command. Adjust it to point to the last','line_number':1021,'multiline':False]
['text':' character of the command.','line_number':1022,'multiline':False]
['text':' Skip the '/' and '?' characters at the','line_number':1025,'multiline':False]
['text':' beginning and end of the search pattern.','line_number':1026,'multiline':False]
['text':' If "^" is present in the tag search pattern, then','line_number':1038,'multiline':False]
['text':' copy it first.','line_number':1039,'multiline':False]
['text':' Precede the tag pattern with \V to make it very','line_number':1046,'multiline':False]
['text':' nomagic.','line_number':1047,'multiline':False]
['text':' Replace '$' at the end of the search pattern','line_number':1060,'multiline':False]
['text':' with '\$'','line_number':1061,'multiline':False]
['text':' Free cached tags.','line_number':1091,'multiline':False]
['text':' Print the tag stack','line_number':1107,'multiline':False]
['text':' Highlight title','line_number':1114,'multiline':False]
['text':' file name not available','line_number':1119,'multiline':False]
['text':' idx at top of stack','line_number':1135,'multiline':False]
['text':' Compare two strings, for length "len", ignoring case the ASCII way.','line_number':1140,'multiline':False]
['text':' return 0 for match, < 0 for smaller, > 0 for bigger','line_number':1141,'multiline':False]
['text':' Make sure case is folded to uppercase in comparison (like for 'sort -f')','line_number':1142,'multiline':False]
['text':' this character different','line_number':1148,'multiline':False]
['text':' strings match until NUL','line_number':1151,'multiline':False]
['text':' strings match','line_number':1157,'multiline':False]
['text':' Extract info from the tag search pattern "pats->pat".','line_number':1160,'multiline':False]
['text':' When the pattern starts with '^' or "\\<", binary searching can be','line_number':1166,'multiline':False]
['text':' used (much faster).','line_number':1167,'multiline':False]
['text':' adjust for 'taglength'','line_number':1183,'multiline':False]
['text':'/ Call the user-defined function to generate a list of tags used by','line_number':1195,'multiline':False]
['text':'/ find_tags().','line_number':1196,'multiline':False]
['text':'/','line_number':1197,'multiline':False]
['text':'/ Return OK if at least 1 tag has been successfully found,','line_number':1198,'multiline':False]
['text':'/ NOTDONE if the function returns v:null, and FAIL otherwise.','line_number':1199,'multiline':False]
['text':'/','line_number':1200,'multiline':False]
['text':'/ @param pat  pattern supplied to the user-defined function','line_number':1201,'multiline':False]
['text':'/ @param ga  the tags will be placed here','line_number':1202,'multiline':False]
['text':'/ @param match_count  here the number of tags found will be placed','line_number':1203,'multiline':False]
['text':'/ @param flags  flags from find_tags (TAG_*)','line_number':1204,'multiline':False]
['text':'/ @param buf_ffname  name of buffer for priority','line_number':1205,'multiline':False]
['text':' create 'info' dict argument','line_number':1231,'multiline':False]
['text':' restore the cursor position','line_number':1254,'multiline':False]
['text':' Space for "\tVALUE"','line_number':1298,'multiline':False]
['text':' Other elements will be stored as "\tKEY:VALUE"','line_number':1316,'multiline':False]
['text':' Allocate space for the key and the colon','line_number':1317,'multiline':False]
['text':' need space for ;"','line_number':1322,'multiline':False]
['text':' mtt','line_number':1335,'multiline':False]
['text':' no tag file name','line_number':1336,'multiline':False]
['text':' Add all matches because tagfunc should do filtering.','line_number':1390,'multiline':False]
['text':'/ Initialize the state used by find_tags()','line_number':1403,'multiline':False]
['text':'/ Free the state used by find_tags()','line_number':1433,'multiline':False]
['text':'/ Initialize the language and priority used for searching tags in a Vim help','line_number':1442,'multiline':False]
['text':'/ file.','line_number':1443,'multiline':False]
['text':'/ Returns true to process the help file for tags and false to skip the file.','line_number':1444,'multiline':False]
['text':' Keep "en" as the language if the file extension is ".txt"','line_number':1449,'multiline':False]
['text':' Prefer help tags according to 'helplang'.  Put the two-letter','line_number':1453,'multiline':False]
['text':' language name in help_lang[].','line_number':1454,'multiline':False]
['text':' When searching for a specific language skip tags files for other','line_number':1462,'multiline':False]
['text':' languages.','line_number':1463,'multiline':False]
['text':' For CTRL-] in a help file prefer a match with the same language.','line_number':1469,'multiline':False]
['text':' Language not in 'helplang': use last, prefer English, unless','line_number':1491,'multiline':False]
['text':' found already.','line_number':1492,'multiline':False]
['text':'/ Use the function set in 'tagfunc' (if configured and enabled) to get the','line_number':1503,'multiline':False]
['text':'/ tags.','line_number':1504,'multiline':False]
['text':'/ Return OK if at least 1 tag has been successfully found, NOTDONE if the','line_number':1505,'multiline':False]
['text':'/ 'tagfunc' is not used or the 'tagfunc' returns v:null and FAIL otherwise.','line_number':1506,'multiline':False]
['text':'/ Read the next line from a tags file.','line_number':1523,'multiline':False]
['text':'/ Returns TAGS_READ_SUCCESS if a tags line is successfully read and should be','line_number':1524,'multiline':False]
['text':'/ processed.','line_number':1525,'multiline':False]
['text':'/ Returns TAGS_READ_EOF if the end of file is reached.','line_number':1526,'multiline':False]
['text':'/ Returns TAGS_READ_IGNORE if the current line should be ignored (used when','line_number':1527,'multiline':False]
['text':'/ reached end of a emacs included tags file)','line_number':1528,'multiline':False]
['text':' For binary search: compute the next offset to use.','line_number':1533,'multiline':False]
['text':' End the binary search without a match.','line_number':1537,'multiline':False]
['text':' Skipping back (after a match during binary search).','line_number':1542,'multiline':False]
['text':' When jumping around in the file, first read a line to find the','line_number':1551,'multiline':False]
['text':' start of the next line.','line_number':1552,'multiline':False]
['text':' Adjust the search file offset to the correct position','line_number':1554,'multiline':False]
['text':' oops, gone a bit too far; try from low offset','line_number':1561,'multiline':False]
['text':' skip empty and blank lines','line_number':1567,'multiline':False]
['text':' Hit end of file.  Skip backwards.','line_number':1573,'multiline':False]
['text':' Not jumping around in the file: Read the next line.','line_number':1580,'multiline':False]
['text':' skip empty and blank lines','line_number':1582,'multiline':False]
['text':'/ Parse a tags file header line in "st->lbuf".','line_number':1595,'multiline':False]
['text':'/ Returns true if the current line in st->lbuf is not a tags header line and','line_number':1596,'multiline':False]
['text':'/ should be parsed as a regular tag line. Returns false if the line is a','line_number':1597,'multiline':False]
['text':'/ header line and the next header line should be read.','line_number':1598,'multiline':False]
['text':' Header lines in a tags file start with "!_TAG_"','line_number':1601,'multiline':False]
['text':' Non-header item before the header, e.g. "!" itself.','line_number':1603,'multiline':False]
['text':' Process the header line.','line_number':1607,'multiline':False]
['text':' Prepare to convert every line from the specified encoding to','line_number':1612,'multiline':False]
['text':' 'encoding'.','line_number':1613,'multiline':False]
['text':' Read the next line.  Unrecognized flags are ignored.','line_number':1620,'multiline':False]
['text':'/ Handler to initialize the state when starting to process a new tags file.','line_number':1624,'multiline':False]
['text':'/ Called in the TS_START state when finding tags from a tags file.','line_number':1625,'multiline':False]
['text':'/ Returns true if the line read from the tags file should be parsed and','line_number':1626,'multiline':False]
['text':'/ false if the line should be ignored.','line_number':1627,'multiline':False]
['text':' The header ends when the line sorts below "!_TAG_".  When case is','line_number':1633,'multiline':False]
['text':' folded lower case letters sort before "_".','line_number':1634,'multiline':False]
['text':' Headers ends.','line_number':1640,'multiline':False]
['text':' When there is no tag head, or ignoring case, need to do a','line_number':1642,'multiline':False]
['text':' linear search.','line_number':1643,'multiline':False]
['text':' When no "!_TAG_" is found, default to binary search.  If','line_number':1644,'multiline':False]
['text':' the tag file isn't sorted, the second loop will find it.','line_number':1645,'multiline':False]
['text':' When "!_TAG_FILE_SORTED" found: start binary search if','line_number':1646,'multiline':False]
['text':' flag set.','line_number':1647,'multiline':False]
['text':' Binary search won't work for ignoring case, use linear','line_number':1663,'multiline':False]
['text':' search.','line_number':1664,'multiline':False]
['text':' When starting a binary search, get the size of the file and','line_number':1669,'multiline':False]
['text':' compute the first offset.','line_number':1670,'multiline':False]
['text':' can't seek, don't use binary search','line_number':1673,'multiline':False]
['text':' Get the tag file size.','line_number':1676,'multiline':False]
['text':' Don't use lseek(), it doesn't work','line_number':1677,'multiline':False]
['text':' properly on MacOS Catalina.','line_number':1678,'multiline':False]
['text':' Calculate the first read offset in the file.  Start','line_number':1682,'multiline':False]
['text':' the search in the middle of the file.','line_number':1683,'multiline':False]
['text':'/ Parse a tag line read from a tags file.','line_number':1696,'multiline':False]
['text':'/ Also compares the tag name in "tagpp->tagname" with a search pattern in','line_number':1697,'multiline':False]
['text':'/ "st->orgpat->head" as a quick check if the tag may match.','line_number':1698,'multiline':False]
['text':'/ Returns:','line_number':1699,'multiline':False]
['text':'/ - TAG_MATCH_SUCCESS if the tag may match','line_number':1700,'multiline':False]
['text':'/ - TAG_MATCH_FAIL if the tag doesn't match','line_number':1701,'multiline':False]
['text':'/ - TAG_MATCH_NEXT to look for the next matching tag (used in a binary search)','line_number':1702,'multiline':False]
['text':'/ - TAG_MATCH_STOP if all the tags are processed without a match.','line_number':1703,'multiline':False]
['text':'/ Uses the values in "margs" for doing the comparison.','line_number':1704,'multiline':False]
['text':' Figure out where the different strings are in this line.','line_number':1711,'multiline':False]
['text':' For "normal" tags: Do a quick check if the tag matches.','line_number':1712,'multiline':False]
['text':' This speeds up tag searching a lot!','line_number':1713,'multiline':False]
['text':' Corrupted tag line.','line_number':1719,'multiline':False]
['text':' Skip this line if the length of the tag is different and','line_number':1723,'multiline':False]
['text':' there is no regexp, or the tag is too short.','line_number':1724,'multiline':False]
['text':' adjust for 'taglength'','line_number':1726,'multiline':False]
['text':' Simplistic check for unsorted tags file.','line_number':1737,'multiline':False]
['text':' Compare the current tag with the searched tag.','line_number':1746,'multiline':False]
['text':' A match with a shorter tag means to search forward.','line_number':1754,'multiline':False]
['text':' A match with a longer tag means to search backward.','line_number':1755,'multiline':False]
['text':' We've located the tag, now skip back and search','line_number':1765,'multiline':False]
['text':' forward until the first matching tag is found.','line_number':1766,'multiline':False]
['text':' No match yet and are at the end of the binary search.','line_number':1793,'multiline':False]
['text':' Have to skip back more.  Restore the curr_offset','line_number':1800,'multiline':False]
['text':' used, otherwise we get stuck at a long line.','line_number':1801,'multiline':False]
['text':' past last match','line_number':1809,'multiline':False]
['text':' before first match','line_number':1811,'multiline':False]
['text':' skip this match if it can't match','line_number':1815,'multiline':False]
['text':' Can be a matching tag, isolate the file name and command.','line_number':1822,'multiline':False]
['text':'/ Initialize the structure used for tag matching.','line_number':1842,'multiline':False]
['text':' match offset','line_number':1845,'multiline':False]
['text':' match with regexp','line_number':1846,'multiline':False]
['text':' matches with case','line_number':1847,'multiline':False]
['text':' regexp used','line_number':1848,'multiline':False]
['text':' tag file sorted in nocase','line_number':1849,'multiline':False]
['text':' tags file not sorted','line_number':1850,'multiline':False]
['text':'/ Compares the tag name in "tagpp->tagname" with a search pattern in','line_number':1853,'multiline':False]
['text':'/ "st->orgpat->pat".','line_number':1854,'multiline':False]
['text':'/ Returns true if the tag matches, false if the tag doesn't match.','line_number':1855,'multiline':False]
['text':'/ Uses the values in "margs" for doing the comparison.','line_number':1856,'multiline':False]
['text':' First try matching with the pattern literally (also when it is','line_number':1861,'multiline':False]
['text':' a regexp).','line_number':1862,'multiline':False]
['text':' adjust for 'taglength'','line_number':1864,'multiline':False]
['text':' if tag length does not match, don't try comparing','line_number':1867,'multiline':False]
['text':' Has a regexp: Also find tags matching regexp.','line_number':1882,'multiline':False]
['text':'/ Convert the encoding of a line read from a tags file in "st->lbuf".','line_number':1904,'multiline':False]
['text':'/ Converting the pattern from 'enc' to the tags file encoding doesn't work,','line_number':1905,'multiline':False]
['text':'/ because characters are not recognized. The converted line is saved in','line_number':1906,'multiline':False]
['text':'/ st->lbuf.','line_number':1907,'multiline':False]
['text':' Copy or swap lbuf and conv_line.','line_number':1915,'multiline':False]
['text':'/ Add a matching tag found in a tags file to st->ht_match and st->ga_match.','line_number':1927,'multiline':False]
['text':' file name matches','line_number':1935,'multiline':False]
['text':' current tag line is static','line_number':1936,'multiline':False]
['text':' Decide in which array to store this match.','line_number':1939,'multiline':False]
['text':' Decide in which of the sixteen tables to store this match.','line_number':1944,'multiline':False]
['text':' Add the found match in ht_match[mtt] and ga_match[mtt].','line_number':1965,'multiline':False]
['text':' Store the info we need later, which depends on the kind of','line_number':1966,'multiline':False]
['text':' tags we are dealing with.','line_number':1967,'multiline':False]
['text':' Append the help-heuristic number after the tagname, for','line_number':1970,'multiline':False]
['text':' sorting it later.  The heuristic is ignored for','line_number':1971,'multiline':False]
['text':' detecting duplicates.','line_number':1972,'multiline':False]
['text':' The format is {tagname}@{lang}NUL{heuristic}NUL','line_number':1973,'multiline':False]
['text':' if wanted, re-read line to get long form too','line_number':2014,'multiline':False]
['text':' Save the tag in a buffer.','line_number':2021,'multiline':False]
['text':' Use 0x02 to separate fields (Can't use NUL, because the','line_number':2022,'multiline':False]
['text':' hash key is terminated by NUL).','line_number':2023,'multiline':False]
['text':' Emacs tag: <mtt><tag_fname><0x02><ebuf><0x02><lbuf><NUL>','line_number':2024,'multiline':False]
['text':' other tag: <mtt><tag_fname><0x02><0x02><lbuf><NUL>','line_number':2025,'multiline':False]
['text':' without Emacs tags: <mtt><tag_fname><0x02><lbuf><NUL>','line_number':2026,'multiline':False]
['text':' Here <mtt> is the "mtt" value plus 1 to avoid NUL.','line_number':2027,'multiline':False]
['text':' Ignore differences in slashes, avoid adding','line_number':2034,'multiline':False]
['text':' both path/file and path\file.','line_number':2035,'multiline':False]
['text':' Don't add identical matches.','line_number':2046,'multiline':False]
['text':' "mfp" is used as a hash key, there is a NUL byte to end','line_number':2047,'multiline':False]
['text':' the part that matters for comparing, more bytes may','line_number':2048,'multiline':False]
['text':' follow after it.  E.g. help tags store the priority','line_number':2049,'multiline':False]
['text':' after the NUL.','line_number':2050,'multiline':False]
['text':' duplicate tag, drop it','line_number':2058,'multiline':False]
['text':'/ Read and get all the tags from file st->tag_fname.','line_number':2064,'multiline':False]
['text':'/ Sets "st->stop_searching" to true to stop searching for additional tags.','line_number':2065,'multiline':False]
['text':' This is only to avoid a compiler warning for using search_info','line_number':2073,'multiline':False]
['text':' uninitialised.','line_number':2074,'multiline':False]
['text':' Read and parse the lines in the file one by one','line_number':2077,'multiline':False]
['text':' check for CTRL-C typed, more often when jumping around','line_number':2079,'multiline':False]
['text':' Double brackets for gcc','line_number':2085,'multiline':False]
['text':' When mincount is TAG_MANY, stop when enough matches have been','line_number':2092,'multiline':False]
['text':' found (for completion).','line_number':2093,'multiline':False]
['text':' When still at the start of the file, check for Emacs tags file','line_number':2116,'multiline':False]
['text':' format, and for "not sorted" flag.','line_number':2117,'multiline':False]
['text':' When the line is too long the NUL will not be in the','line_number':2124,'multiline':False]
['text':' last-but-one byte (see vim_fgets()).','line_number':2125,'multiline':False]
['text':' Has been reported for Mozilla JS with extremely long names.','line_number':2126,'multiline':False]
['text':' In that case we need to increase lbuf_size.','line_number':2127,'multiline':False]
['text':' Seek to the same position to read the same line again','line_number':2134,'multiline':False]
['text':' this will try the same thing again, make sure the offset is','line_number':2137,'multiline':False]
['text':' different','line_number':2138,'multiline':False]
['text':' If a match is found, add it to ht_match[] and ga_match[].','line_number':2157,'multiline':False]
['text':' forever','line_number':2161,'multiline':False]
['text':'/ Search for tags matching "st->orgpat.pat" in the "st->tag_fname" tags file.','line_number':2164,'multiline':False]
['text':'/ Information needed to search for the tags is in the "st" state structure.','line_number':2165,'multiline':False]
['text':'/ The matching tags are returned in "st". If an error is encountered, then','line_number':2166,'multiline':False]
['text':'/ "st->stop_searching" is set to true.','line_number':2167,'multiline':False]
['text':' A file that doesn't exist is silently ignored.  Only when not a','line_number':2177,'multiline':False]
['text':' single file is found, an error message is given (further on).','line_number':2178,'multiline':False]
['text':' remember that we found at least one file','line_number':2195,'multiline':False]
['text':' we're at the start of the file','line_number':2197,'multiline':False]
['text':' Read and parse the lines in the file one by one','line_number':2199,'multiline':False]
['text':' Stop searching if sufficient tags have been found.','line_number':2214,'multiline':False]
['text':'/ Copy the tags found by find_tags() to "matchesp".','line_number':2220,'multiline':False]
['text':'/ Returns the number of matches copied.','line_number':2221,'multiline':False]
['text':' Change mtt back to zero-based.','line_number':2240,'multiline':False]
['text':' change the TAG_SEP back to NUL','line_number':2243,'multiline':False]
['text':'/ find_tags() - search for tags in tags files','line_number':2262,'multiline':False]
['text':'/','line_number':2263,'multiline':False]
['text':'/ Return FAIL if search completely failed (*num_matches will be 0, *matchesp','line_number':2264,'multiline':False]
['text':'/ will be NULL), OK otherwise.','line_number':2265,'multiline':False]
['text':'/','line_number':2266,'multiline':False]
['text':'/ There is a priority in which type of tag is recognized.','line_number':2267,'multiline':False]
['text':'/','line_number':2268,'multiline':False]
['text':'/  6.  A static or global tag with a full matching tag for the current file.','line_number':2269,'multiline':False]
['text':'/  5.  A global tag with a full matching tag for another file.','line_number':2270,'multiline':False]
['text':'/  4.  A static tag with a full matching tag for another file.','line_number':2271,'multiline':False]
['text':'/  3.  A static or global tag with an ignore-case matching tag for the','line_number':2272,'multiline':False]
['text':'/      current file.','line_number':2273,'multiline':False]
['text':'/  2.  A global tag with an ignore-case matching tag for another file.','line_number':2274,'multiline':False]
['text':'/  1.  A static tag with an ignore-case matching tag for another file.','line_number':2275,'multiline':False]
['text':'/','line_number':2276,'multiline':False]
['text':'/ Tags in an emacs-style tags file are always global.','line_number':2277,'multiline':False]
['text':'/','line_number':2278,'multiline':False]
['text':'/ flags:','line_number':2279,'multiline':False]
['text':'/ TAG_HELP       only search for help tags','line_number':2280,'multiline':False]
['text':'/ TAG_NAMES      only return name of tag','line_number':2281,'multiline':False]
['text':'/ TAG_REGEXP     use "pat" as a regexp','line_number':2282,'multiline':False]
['text':'/ TAG_NOIC       don't always ignore case','line_number':2283,'multiline':False]
['text':'/ TAG_KEEP_LANG  keep language','line_number':2284,'multiline':False]
['text':'/ TAG_NO_TAGFUNC do not call the 'tagfunc' function','line_number':2285,'multiline':False]
['text':'/','line_number':2286,'multiline':False]
['text':'/ @param pat  pattern to search for','line_number':2287,'multiline':False]
['text':'/ @param num_matches  return: number of matches found','line_number':2288,'multiline':False]
['text':'/ @param matchesp  return: array of matches found','line_number':2289,'multiline':False]
['text':'/ @param mincount  MAXCOL: find all matches','line_number':2290,'multiline':False]
['text':'/                  other: minimal number of matches','line_number':2291,'multiline':False]
['text':'/ @param buf_ffname  name of buffer for priority','line_number':2292,'multiline':False]
['text':' info for get_tagfname()','line_number':2297,'multiline':False]
['text':' trying first tag file','line_number':2298,'multiline':False]
['text':' return value','line_number':2299,'multiline':False]
['text':' copy of pat[]','line_number':2302,'multiline':False]
['text':' find all matching tags','line_number':2304,'multiline':False]
['text':' regexp used','line_number':2305,'multiline':False]
['text':' uncrustify:off','line_number':2310,'multiline':False]
['text':' Change the value of 'ignorecase' according to 'tagcase' for the','line_number':2312,'multiline':False]
['text':' duration of this function.','line_number':2313,'multiline':False]
['text':' uncrustify:on','line_number':2332,'multiline':False]
['text':' Initialize a few variables','line_number':2338,'multiline':False]
['text':' want tags from help file','line_number':2339,'multiline':False]
['text':' will be restored later','line_number':2340,'multiline':False]
['text':' When "@ab" is specified use only the "ab" language, otherwise','line_number':2344,'multiline':False]
['text':' search all languages.','line_number':2345,'multiline':False]
['text':' adjust for 'taglength'','line_number':2355,'multiline':False]
['text':' don't want error for invalid RE here','line_number':2360,'multiline':False]
['text':' re-initialize the default return value','line_number':2372,'multiline':False]
['text':' Set a flag if the file extension is .txt','line_number':2375,'multiline':False]
['text':' When finding a specified number of matches, first try with matching','line_number':2384,'multiline':False]
['text':' case, so binary search can be used, and try ignore-case matches in a','line_number':2385,'multiline':False]
['text':' second loop.','line_number':2386,'multiline':False]
['text':' When finding all matches, 'tagbsearch' is off, or there is no fixed','line_number':2387,'multiline':False]
['text':' string to look for, ignore case right away to avoid going though the','line_number':2388,'multiline':False]
['text':' tags files twice.','line_number':2389,'multiline':False]
['text':' When the tag file is case-fold sorted, it is either one or the other.','line_number':2390,'multiline':False]
['text':' Only ignore case when TAG_NOIC not used or 'ignorecase' set.','line_number':2391,'multiline':False]
['text':' Try tag file names from tags option one by one.','line_number':2397,'multiline':False]
['text':' end of for-each-file loop','line_number':2406,'multiline':False]
['text':' stop searching when already did a linear search, or when TAG_NOIC','line_number':2410,'multiline':False]
['text':' used, and 'ignorecase' not set or already did case-ignore search','line_number':2411,'multiline':False]
['text':' try another time while ignoring case','line_number':2417,'multiline':False]
['text':' never opened any tags file','line_number':2422,'multiline':False]
['text':' It's OK even when no tag found','line_number':2425,'multiline':False]
['text':' Move the matches from the ga_match[] arrays into one list of','line_number':2431,'multiline':False]
['text':' matches.  When retval == FAIL, free the matches.','line_number':2432,'multiline':False]
['text':' Callback function for finding all "tags" and "tags-??" files in','line_number':2449,'multiline':False]
['text':' 'runtimepath' doc directories.','line_number':2450,'multiline':False]
['text':'/ Get the next name of a tag file from the tag file list.','line_number':2482,'multiline':False]
['text':'/ For help files, use "tags" file only.','line_number':2483,'multiline':False]
['text':'/','line_number':2484,'multiline':False]
['text':'/ @param tnp  holds status info','line_number':2485,'multiline':False]
['text':'/ @param first  true when first file name is wanted','line_number':2486,'multiline':False]
['text':'/ @param buf  pointer to buffer of MAXPATHL chars','line_number':2487,'multiline':False]
['text':'/','line_number':2488,'multiline':False]
['text':'/ @return  FAIL if no more tag file names, OK otherwise.','line_number':2489,'multiline':False]
['text':' For help files it's done in a completely different way:','line_number':2499,'multiline':False]
['text':' Find "doc/tags" and "doc/tags-??" in all directories in','line_number':2500,'multiline':False]
['text':' 'runtimepath'.','line_number':2501,'multiline':False]
['text':' Not found in 'runtimepath', use 'helpfile', if it exists and','line_number':2510,'multiline':False]
['text':' wasn't used yet, replacing "help.txt" with "tags".','line_number':2511,'multiline':False]
['text':' avoid duplicate file names','line_number':2525,'multiline':False]
['text':' Init.  We make a copy of 'tags', because autocommands may change','line_number':2535,'multiline':False]
['text':' the value without notifying us.','line_number':2536,'multiline':False]
['text':' Loop until we have found a file name that can be used.','line_number':2541,'multiline':False]
['text':' There are two states:','line_number':2542,'multiline':False]
['text':' tnp->tn_did_filefind_init == false: setup for next part in 'tags'.','line_number':2543,'multiline':False]
['text':' tnp->tn_did_filefind_init == true: find next file in this part.','line_number':2544,'multiline':False]
['text':' Stop when used all parts of 'tags'.','line_number':2556,'multiline':False]
['text':' Copy next file name into buf.','line_number':2563,'multiline':False]
['text':' move the filename one char forward and truncate the','line_number':2568,'multiline':False]
['text':' filepath with a NUL','line_number':2569,'multiline':False]
['text':' don't free visited list','line_number':2576,'multiline':False]
['text':' we search for a file','line_number':2577,'multiline':False]
['text':' Free the contents of a tagname_T that was filled by get_tagfname().','line_number':2590,'multiline':False]
['text':'/ Parse one line from the tags file. Find start/end of tag name, start/end of','line_number':2599,'multiline':False]
['text':'/ file name and start of search pattern.','line_number':2600,'multiline':False]
['text':'/','line_number':2601,'multiline':False]
['text':'/ If is_etag is true, tagp->fname and tagp->fname_end are not set.','line_number':2602,'multiline':False]
['text':'/','line_number':2603,'multiline':False]
['text':'/ @param lbuf  line to be parsed','line_number':2604,'multiline':False]
['text':'/','line_number':2605,'multiline':False]
['text':'/ @return  FAIL if there is a format error in this line, OK otherwise.','line_number':2606,'multiline':False]
['text':' Isolate the tagname, from lbuf up to the first white','line_number':2609,'multiline':False]
['text':' Isolate file name, from first to second white space','line_number':2617,'multiline':False]
['text':' find start of search command, after second white space','line_number':2628,'multiline':False]
['text':' Check if tagname is a static tag','line_number':2640,'multiline':False]
['text':'','line_number':2641,'multiline':False]
['text':' Static tags produced by the older ctags program have the format:','line_number':2642,'multiline':False]
['text':'      'file:tag  file  /pattern'.','line_number':2643,'multiline':False]
['text':' This is only recognized when both occurrence of 'file' are the same, to','line_number':2644,'multiline':False]
['text':' avoid recognizing "string::string" or ":exit".','line_number':2645,'multiline':False]
['text':'','line_number':2646,'multiline':False]
['text':' Static tags produced by the new ctags program have the format:','line_number':2647,'multiline':False]
['text':'      'tag  file  /pattern/;"<Tab>file:'          "','line_number':2648,'multiline':False]
['text':'','line_number':2649,'multiline':False]
['text':' Return true if it is a static tag and adjust *tagname to the real tag.','line_number':2650,'multiline':False]
['text':' Return false if it is not a static tag.','line_number':2651,'multiline':False]
['text':' Check for new style static tag ":...<Tab>file:[<Tab>...]"','line_number':2654,'multiline':False]
['text':'/ @return  the length of a matching tag line.','line_number':2666,'multiline':False]
['text':' does the same thing as parse_match()','line_number':2671,'multiline':False]
['text':'/ Parse a line from a matching tag.  Does not change the line itself.','line_number':2676,'multiline':False]
['text':'/','line_number':2677,'multiline':False]
['text':'/ The line that we get looks like this:','line_number':2678,'multiline':False]
['text':'/ Emacs tag: <mtt><tag_fname><NUL><ebuf><NUL><lbuf>','line_number':2679,'multiline':False]
['text':'/ other tag: <mtt><tag_fname><NUL><NUL><lbuf>','line_number':2680,'multiline':False]
['text':'/ without Emacs tags: <mtt><tag_fname><NUL><lbuf>','line_number':2681,'multiline':False]
['text':'/','line_number':2682,'multiline':False]
['text':'/ @param lbuf  input: matching line','line_number':2683,'multiline':False]
['text':'/ @param tagp  output: pointers into the line','line_number':2684,'multiline':False]
['text':'/','line_number':2685,'multiline':False]
['text':'/ @return  OK or FAIL.','line_number':2686,'multiline':False]
['text':' Find search pattern and the file name for non-etags.','line_number':2692,'multiline':False]
['text':' Try to find a kind field: "kind:<kind>" or just "<kind>"','line_number':2704,'multiline':False]
['text':' drop trailing bar','line_number':2709,'multiline':False]
['text':' skip ";\""','line_number':2711,'multiline':False]
['text':' Accept ASCII alphabetic kind characters and any multi-byte','line_number':2713,'multiline':False]
['text':' character.','line_number':2714,'multiline':False]
['text':' Find out the actual file name of a tag.  Concatenate the tags file name','line_number':2755,'multiline':False]
['text':' with the matching tag file name.','line_number':2756,'multiline':False]
['text':' Returns an allocated string.','line_number':2757,'multiline':False]
['text':'/ Jump to a tag that has been found in one of the tag files','line_number':2768,'multiline':False]
['text':'/','line_number':2769,'multiline':False]
['text':'/ @param lbuf_arg  line from the tags file for this tag','line_number':2770,'multiline':False]
['text':'/ @param forceit  :ta with !','line_number':2771,'multiline':False]
['text':'/ @param keep_help  keep help flag','line_number':2772,'multiline':False]
['text':'/','line_number':2773,'multiline':False]
['text':'/ @return  OK for success, NOTAGFILE when file not found, FAIL otherwise.','line_number':2774,'multiline':False]
['text':' getting the file may reset it','line_number':2785,'multiline':False]
['text':' search pattern buffer','line_number':2791,'multiline':False]
['text':' parse the match line into the tagp structure','line_number':2793,'multiline':False]
['text':' truncate the file name, so it can be used as a string','line_number':2799,'multiline':False]
['text':' copy the command to pbuf[], remove trailing CR/NL','line_number':2803,'multiline':False]
['text':' Remove the "<Tab>fieldname:value" stuff; we don't need it here.','line_number':2814,'multiline':False]
['text':' Expand file name, when needed (for environment variables).','line_number':2822,'multiline':False]
['text':' If 'tagrelative' option set, may change file name.','line_number':2823,'multiline':False]
['text':' free() it later','line_number':2825,'multiline':False]
['text':' Check if the file with the tag exists before abandoning the current','line_number':2827,'multiline':False]
['text':' file.  Also accept a file name for which there is a matching BufReadCmd','line_number':2828,'multiline':False]
['text':' autocommand event (e.g., http://sys/file).','line_number':2829,'multiline':False]
['text':' don't split again below','line_number':2841,'multiline':False]
['text':' Save current window','line_number':2842,'multiline':False]
['text':' If we are reusing a window, we may change dir when','line_number':2844,'multiline':False]
['text':' entering it (autocommands) so turn the tag filename','line_number':2845,'multiline':False]
['text':' into a fullpath','line_number':2846,'multiline':False]
['text':' Make the preview window the current window.','line_number':2851,'multiline':False]
['text':' Open a preview window when needed.','line_number':2852,'multiline':False]
['text':' If it was a CTRL-W CTRL-] command split window now.  For ":tab tag"','line_number':2857,'multiline':False]
['text':' open a new tab page.','line_number':2858,'multiline':False]
['text':' If 'switchbuf' is set jump to the window containing "buf".','line_number':2863,'multiline':False]
['text':' We've switched to the buffer, the usual loading of the file','line_number':2865,'multiline':False]
['text':' must be skipped.','line_number':2866,'multiline':False]
['text':' A :ta from a help file will keep the b_help flag set.  For ":ptag"','line_number':2882,'multiline':False]
['text':' we need to use the flag from the window where we came from.','line_number':2883,'multiline':False]
['text':' Careful: getfile() may trigger autocommands and call jumpto_tag()','line_number':2892,'multiline':False]
['text':' recursively.','line_number':2893,'multiline':False]
['text':' got to the right file','line_number':2898,'multiline':False]
['text':' always execute with 'nomagic'','line_number':2903,'multiline':False]
['text':' Save value of no_hlsearch, jumping to a tag is not a real search','line_number':2904,'multiline':False]
['text':' If 'cpoptions' contains 't', store the search pattern for the "n"','line_number':2907,'multiline':False]
['text':' command.  If 'cpoptions' does not contain 't', the search pattern','line_number':2908,'multiline':False]
['text':' is not stored.','line_number':2909,'multiline':False]
['text':' If the command is a search, try here.','line_number':2916,'multiline':False]
['text':'','line_number':2917,'multiline':False]
['text':' Reset 'smartcase' for the search, since the search pattern was not','line_number':2918,'multiline':False]
['text':' typed by the user.','line_number':2919,'multiline':False]
['text':' Only use do_search() when there is a full search command, without','line_number':2920,'multiline':False]
['text':' anything following.','line_number':2921,'multiline':False]
['text':' search command with nothing following','line_number':2926,'multiline':False]
['text':' need 'wrapscan' for backward searches','line_number':2930,'multiline':False]
['text':' don't ignore case now','line_number':2931,'multiline':False]
['text':' start search before line from "line:" field','line_number':2935,'multiline':False]
['text':' start search before first line','line_number':2938,'multiline':False]
['text':' try again, ignore case now','line_number':2946,'multiline':False]
['text':' Failed to find pattern, take a guess: "^func  ("','line_number':2950,'multiline':False]
['text':' Guess again: "^char * \<func  ("','line_number':2957,'multiline':False]
['text':' Only give a message when really guessed, not when 'ic'','line_number':2970,'multiline':False]
['text':' is set and match found while ignoring case.','line_number':2971,'multiline':False]
['text':' A search command may have positioned the cursor beyond the end','line_number':2986,'multiline':False]
['text':' of the line.  May need to correct that here.','line_number':2987,'multiline':False]
['text':' Setup the sandbox for executing the command from the tags file.','line_number':2992,'multiline':False]
['text':' start command in line 1','line_number':2995,'multiline':False]
['text':' When the command has done something that is not allowed make sure','line_number':2999,'multiline':False]
['text':' the error message can be seen.','line_number':3000,'multiline':False]
['text':' restore no_hlsearch when keeping the old search pattern','line_number':3009,'multiline':False]
['text':' Return OK if jumped to another file (at least we found the file!).','line_number':3014,'multiline':False]
['text':' For a help buffer: Put the cursor line at the top of the window,','line_number':3020,'multiline':False]
['text':' the help subject will be below it.','line_number':3021,'multiline':False]
['text':' Return cursor to where we were','line_number':3032,'multiline':False]
['text':' close the window','line_number':3041,'multiline':False]
['text':' For next time','line_number':3048,'multiline':False]
['text':'/ If "expand" is true, expand wildcards in fname.','line_number':3057,'multiline':False]
['text':'/ If 'tagrelative' option set, change fname (name of file containing tag)','line_number':3058,'multiline':False]
['text':'/ according to tag_fname (name of tag file containing fname).','line_number':3059,'multiline':False]
['text':'/','line_number':3060,'multiline':False]
['text':'/ @return  a pointer to allocated memory.','line_number':3061,'multiline':False]
['text':' Expand file name (for environment variables) when needed.','line_number':3068,'multiline':False]
['text':' Translate names like "src/a/../b/file.c" into "src/b/file.c".','line_number':3086,'multiline':False]
['text':'/ Check if we have a tag for the buffer with name "buf_ffname".','line_number':3097,'multiline':False]
['text':'/ This is a bit slow, because of the full path compare in path_full_compare().','line_number':3098,'multiline':False]
['text':'/','line_number':3099,'multiline':False]
['text':'/ @return  true if tag for file "fname" if tag file "tag_fname" is for current','line_number':3100,'multiline':False]
['text':'/          file.','line_number':3101,'multiline':False]
['text':' if the buffer has a name','line_number':3106,'multiline':False]
['text':' Find the end of the tagaddress.','line_number':3121,'multiline':False]
['text':' Return OK if ";\"" is following, FAIL otherwise.','line_number':3122,'multiline':False]
['text':' Repeat for addresses separated with ';'','line_number':3128,'multiline':False]
['text':' not a line number or search string, look for terminator.','line_number':3140,'multiline':False]
['text':' skip ';'','line_number':3151,'multiline':False]
['text':'','line_number':3162,'multiline':False]
['text':' Free a single entry in a tag stack','line_number':3163,'multiline':False]
['text':'','line_number':3164,'multiline':False]
['text':'/ @param tagnames  expand tag names','line_number':3171,'multiline':False]
['text':' Reorganize the tags for display and matching as strings of:','line_number':3196,'multiline':False]
['text':' "<tagname>\0<kind>\0<filename>\0"','line_number':3197,'multiline':False]
['text':'/ Add a tag field to the dictionary "dict".','line_number':3225,'multiline':False]
['text':'/ Return OK or FAIL.','line_number':3226,'multiline':False]
['text':'/','line_number':3227,'multiline':False]
['text':'/ @param start  start of the value','line_number':3228,'multiline':False]
['text':'/ @param end  after the value; can be NULL','line_number':3229,'multiline':False]
['text':' Check that the field name doesn't exist yet.','line_number':3235,'multiline':False]
['text':'/ Add the tags matching the specified pattern "pat" to the list "list"','line_number':3264,'multiline':False]
['text':'/ as a dictionary. Use "buf_fname" for priority, unless NULL.','line_number':3265,'multiline':False]
['text':' Skip pseudo-tag lines.','line_number':3285,'multiline':False]
['text':' skip "kind:<kind>" and "<kind>"','line_number':3312,'multiline':False]
['text':' skip "file:" (static tag)','line_number':3315,'multiline':False]
['text':' Add extra field as a dict entry.  Fields are','line_number':3321,'multiline':False]
['text':' separated by Tabs.','line_number':3322,'multiline':False]
['text':' Skip field without colon.','line_number':3339,'multiline':False]
['text':' Return information about 'tag' in dict 'retdict'.','line_number':3357,'multiline':False]
['text':' Return the tag stack entries of the specified window 'wp' in dictionary','line_number':3379,'multiline':False]
['text':' 'retdict'.','line_number':3380,'multiline':False]
['text':' Free all the entries in the tag stack of the specified window','line_number':3395,'multiline':False]
['text':' Free the current tag stack','line_number':3398,'multiline':False]
['text':' Remove the oldest entry from the tag stack and shift the rest of','line_number':3406,'multiline':False]
['text':' the entries to free up the top of the stack.','line_number':3407,'multiline':False]
['text':'/ Push a new item to the tag stack','line_number':3418,'multiline':False]
['text':' top of the stack','line_number':3423,'multiline':False]
['text':' if the tagstack is full: remove the oldest entry','line_number':3425,'multiline':False]
['text':'/ Add a list of items to the tag stack in the specified window','line_number':3443,'multiline':False]
['text':' Add one entry at a time to the tag stack','line_number':3451,'multiline':False]
['text':' Skip non-dict items','line_number':3455,'multiline':False]
['text':' parse 'from' for the cursor position before the tag jump','line_number':3459,'multiline':False]
['text':' Set the current index in the tag stack. Valid values are between 0','line_number':3482,'multiline':False]
['text':' and the stack length (inclusive).','line_number':3483,'multiline':False]
['text':' sanity check','line_number':3487,'multiline':False]
['text':' Set the tag stack entries of the specified window.','line_number':3495,'multiline':False]
['text':' 'action' is set to one of:','line_number':3496,'multiline':False]
['text':'    'a' for append','line_number':3497,'multiline':False]
['text':'    'r' for replace','line_number':3498,'multiline':False]
['text':'    't' for truncate','line_number':3499,'multiline':False]
['text':' not allowed to alter the tag stack entries from inside tagfunc','line_number':3506,'multiline':False]
['text':' truncate the stack','line_number':3524,'multiline':False]
['text':' delete all the tag stack entries above the current entry','line_number':3529,'multiline':False]
['text':' replace the stack','line_number':3537,'multiline':False]
['text':' set the current index after the last entry','line_number':3542,'multiline':False]
