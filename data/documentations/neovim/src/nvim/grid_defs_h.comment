['text':' Includes final NUL. MAX_MCO is no longer used, but at least 4*(MAX_MCO+1)+1=29','line_number':10,'multiline':False]
['text':' ensures we can fit all composed chars which did fit before.','line_number':11,'multiline':False]
['text':'/ ScreenGrid represents a resizable rectuangular grid displayed by UI clients.','line_number':22,'multiline':False]
['text':'/','line_number':23,'multiline':False]
['text':'/ chars[] contains the UTF-8 text that is currently displayed on the grid.','line_number':24,'multiline':False]
['text':'/ It is stored as a single block of cells. When redrawing a part of the grid,','line_number':25,'multiline':False]
['text':'/ the new state can be compared with the existing state of the grid. This way','line_number':26,'multiline':False]
['text':'/ we can avoid sending bigger updates than necessary to the Ul layer.','line_number':27,'multiline':False]
['text':'/','line_number':28,'multiline':False]
['text':'/ Screen cells are stored as NUL-terminated UTF-8 strings, and a cell can','line_number':29,'multiline':False]
['text':'/ contain composing characters as many as fits in MAX_SCHAR_SIZE-1 bytes','line_number':30,'multiline':False]
['text':'/ The composing characters are to be drawn on top of the original character.','line_number':31,'multiline':False]
['text':'/ The content after the NUL is not defined (so comparison must be done a','line_number':32,'multiline':False]
['text':'/ single cell at a time). Double-width characters are stored in the left cell,','line_number':33,'multiline':False]
['text':'/ and the right cell should only contain the empty string. When a part of the','line_number':34,'multiline':False]
['text':'/ screen is cleared, the cells should be filled with a single whitespace char.','line_number':35,'multiline':False]
['text':'/','line_number':36,'multiline':False]
['text':'/ attrs[] contains the highlighting attribute for each cell.','line_number':37,'multiline':False]
['text':'/','line_number':38,'multiline':False]
['text':'/ vcols[] contains the virtual columns in the line. -1 means not available','line_number':39,'multiline':False]
['text':'/ or before buffer text, MAXCOL means after the end of the line.','line_number':40,'multiline':False]
['text':'/ -2 or -3 means in fold column and a mouse click should:','line_number':41,'multiline':False]
['text':'/  -2: open a fold','line_number':42,'multiline':False]
['text':'/  -3: close a fold','line_number':43,'multiline':False]
['text':'/','line_number':44,'multiline':False]
['text':'/ line_offset[n] is the offset from chars[], attrs[] and vcols[] for the start','line_number':45,'multiline':False]
['text':'/ of line 'n'. These offsets are in general not linear, as full screen scrolling','line_number':46,'multiline':False]
['text':'/ is implemented by rotating the offsets in the line_offset array.','line_number':47,'multiline':False]
['text':' last column that was drawn (not cleared with the default background).','line_number':57,'multiline':False]
['text':' only used when "throttled" is set. Not allocated by grid_alloc!','line_number':58,'multiline':False]
['text':' the size of the allocated grid.','line_number':61,'multiline':False]
['text':' The state of the grid is valid. Otherwise it needs to be redrawn.','line_number':65,'multiline':False]
['text':' only draw internally and don't send updates yet to the compositor or','line_number':68,'multiline':False]
['text':' external UI.','line_number':69,'multiline':False]
['text':' TODO(bfredl): maybe physical grids and "views" (i e drawing','line_number':72,'multiline':False]
['text':' specifications) should be two separate types?','line_number':73,'multiline':False]
['text':' offsets for the grid relative to another grid. Used for grids','line_number':74,'multiline':False]
['text':' that are views into another, actually allocated grid 'target'','line_number':75,'multiline':False]
['text':' whether the compositor should blend the grid with the background grid','line_number':80,'multiline':False]
['text':' whether the grid can be focused with mouse clicks.','line_number':83,'multiline':False]
['text':' z-index: the order in the stack of grids.','line_number':86,'multiline':False]
['text':' Below is state owned by the compositor. Should generally not be set/read','line_number':89,'multiline':False]
['text':' outside this module, except for specific compatibility hacks','line_number':90,'multiline':False]
['text':' position of the grid on the composed screen.','line_number':92,'multiline':False]
['text':' Requested width and height of the grid upon resize. Used by','line_number':96,'multiline':False]
['text':' `ui_compositor` to correctly determine which regions need to','line_number':97,'multiline':False]
['text':' be redrawn.','line_number':98,'multiline':False]
['text':' z-index of the grid. Grids with higher index is draw on top.','line_number':102,'multiline':False]
['text':' default_grid.comp_index is always zero.','line_number':103,'multiline':False]
['text':' compositor should momentarily ignore the grid. Used internally when','line_number':106,'multiline':False]
['text':' moving around grids etc.','line_number':107,'multiline':False]
