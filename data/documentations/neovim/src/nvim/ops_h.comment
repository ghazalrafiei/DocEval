['text':' IWYU pragma: keep','line_number':8,'multiline':False]
['text':' IWYU pragma: keep','line_number':9,'multiline':False]
['text':' IWYU pragma: keep','line_number':13,'multiline':False]
['text':'/ flags for do_put()','line_number':20,'multiline':False]
['text':'/< make indent look nice','line_number':22,'multiline':False]
['text':'/< leave cursor after end of new text','line_number':23,'multiline':False]
['text':'/< leave cursor on last line of new text','line_number':24,'multiline':False]
['text':'/< put register as lines','line_number':25,'multiline':False]
['text':'/< split line for linewise register','line_number':26,'multiline':False]
['text':'/< put linewise register below Visual sel.','line_number':27,'multiline':False]
['text':'/< in block mode, do not add trailing spaces','line_number':28,'multiline':False]
['text':'/ Registers:','line_number':31,'multiline':False]
['text':'/      0 = register for latest (unnamed) yank','line_number':32,'multiline':False]
['text':'/   1..9 = registers '1' to '9', for deletes','line_number':33,'multiline':False]
['text':'/ 10..35 = registers 'a' to 'z'','line_number':34,'multiline':False]
['text':'/     36 = delete register '-'','line_number':35,'multiline':False]
['text':'/     37 = selection register '*'','line_number':36,'multiline':False]
['text':'/     38 = clipboard register '+'','line_number':37,'multiline':False]
['text':' The following registers should not be saved in ShaDa file:','line_number':41,'multiline':False]
['text':'/ Operator IDs; The order must correspond to opchars[] in ops.c!','line_number':47,'multiline':False]
['text':'/< no pending operation','line_number':49,'multiline':False]
['text':'/< "d"  delete operator','line_number':50,'multiline':False]
['text':'/< "y"  yank operator','line_number':51,'multiline':False]
['text':'/< "c"  change operator','line_number':52,'multiline':False]
['text':'/< "<"  left shift operator','line_number':53,'multiline':False]
['text':'/< ">"  right shift operator','line_number':54,'multiline':False]
['text':'/< "!"  filter operator','line_number':55,'multiline':False]
['text':'/< "g~" switch case operator','line_number':56,'multiline':False]
['text':'/< "="  indent operator','line_number':57,'multiline':False]
['text':'/< "gq" format operator','line_number':58,'multiline':False]
['text':'/< ":"  colon operator','line_number':59,'multiline':False]
['text':'/< "gU" make upper case operator','line_number':60,'multiline':False]
['text':'/< "gu" make lower case operator','line_number':61,'multiline':False]
['text':'/< "J"  join operator, only for Visual mode','line_number':62,'multiline':False]
['text':'/< "gJ"  join operator, only for Visual mode','line_number':63,'multiline':False]
['text':'/< "g?" rot-13 encoding','line_number':64,'multiline':False]
['text':'/< "r"  replace chars, only for Visual mode','line_number':65,'multiline':False]
['text':'/< "I"  Insert column, only for Visual mode','line_number':66,'multiline':False]
['text':'/< "A"  Append column, only for Visual mode','line_number':67,'multiline':False]
['text':'/< "zf" define a fold','line_number':68,'multiline':False]
['text':'/< "zo" open folds','line_number':69,'multiline':False]
['text':'/< "zO" open folds recursively','line_number':70,'multiline':False]
['text':'/< "zc" close folds','line_number':71,'multiline':False]
['text':'/< "zC" close folds recursively','line_number':72,'multiline':False]
['text':'/< "zd" delete folds','line_number':73,'multiline':False]
['text':'/< "zD" delete folds recursively','line_number':74,'multiline':False]
['text':'/< "gw" format operator, keeps cursor pos','line_number':75,'multiline':False]
['text':'/< "g@" call 'operatorfunc'','line_number':76,'multiline':False]
['text':'/< "<C-A>" Add to the number or alphabetic character','line_number':77,'multiline':False]
['text':'/< "<C-X>" Subtract from the number or alphabetic character','line_number':78,'multiline':False]
['text':'/ Flags for get_reg_contents().','line_number':81,'multiline':False]
['text':'/< Do not allow expression register.','line_number':83,'multiline':False]
['text':'/< Return expression itself for "=" register.','line_number':84,'multiline':False]
['text':'/< Return list.','line_number':85,'multiline':False]
['text':'/ Definition of one register','line_number':88,'multiline':False]
['text':'/< Pointer to an array of line pointers.','line_number':90,'multiline':False]
['text':'/< Number of lines in y_array.','line_number':91,'multiline':False]
['text':'/< Register type','line_number':92,'multiline':False]
['text':'/< Register width (only valid for y_type == kBlockWise).','line_number':93,'multiline':False]
['text':'/< Time when register was last modified.','line_number':94,'multiline':False]
['text':'/< Additional data from ShaDa file.','line_number':95,'multiline':False]
['text':'/ Modes for get_yank_register()','line_number':98,'multiline':False]
['text':'/ Convert register name into register index','line_number':108,'multiline':False]
['text':'/','line_number':109,'multiline':False]
['text':'/ @param[in]  regname  Register name.','line_number':110,'multiline':False]
['text':'/','line_number':111,'multiline':False]
['text':'/ @return Index in y_regs array or -1 if register name was not recognized.','line_number':112,'multiline':False]
['text':'/ @see get_yank_register','line_number':135,'multiline':False]
['text':'/ @return  true when register should be inserted literally','line_number':136,'multiline':False]
['text':'/ (selection or clipboard)','line_number':137,'multiline':False]
['text':'/< LuaRef for "."','line_number':147,'multiline':False]
