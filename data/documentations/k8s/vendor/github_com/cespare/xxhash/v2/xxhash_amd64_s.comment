['text':'go:build !appengine && gc && !purego','line_number':1,'multiline':False]
['text':' +build !appengine','line_number':2,'multiline':False]
['text':' +build gc','line_number':3,'multiline':False]
['text':' +build !purego','line_number':4,'multiline':False]
['text':' Registers:','line_number':8,'multiline':False]
['text':' pointer to advance through b','line_number':11,'multiline':False]
['text':' loop end','line_number':13,'multiline':False]
['text':' round0 performs the operation x = round(0, x).','line_number':29,'multiline':False]
['text':' mergeRound applies a merge round on the two registers acc and x.','line_number':35,'multiline':False]
['text':' It assumes that prime1, prime2, and prime4 have been loaded.','line_number':36,'multiline':False]
['text':' blockLoop processes as many 32-byte blocks as possible,','line_number':43,'multiline':False]
['text':' updating v1, v2, v3, and v4. It assumes that there is at least one block','line_number':44,'multiline':False]
['text':' to process.','line_number':45,'multiline':False]
['text':' func Sum64(b []byte) uint64','line_number':60,'multiline':False]
['text':' Load fixed primes.','line_number':62,'multiline':False]
['text':' Load slice.','line_number':67,'multiline':False]
['text':' The first loop limit will be len(b)-32.','line_number':72,'multiline':False]
['text':' Check whether we have at least one block.','line_number':75,'multiline':False]
['text':' Set up initial state (v1, v2, v3, v4).','line_number':79,'multiline':False]
['text':' func writeBlocks(d *Digest, b []byte) int','line_number':176,'multiline':False]
['text':' Load fixed primes needed for round.','line_number':178,'multiline':False]
['text':' Load slice.','line_number':182,'multiline':False]
['text':' Load vN from d.','line_number':188,'multiline':False]
['text':' We don't need to check the loop condition here; this function is','line_number':195,'multiline':False]
['text':' always called with at least one block of data to process.','line_number':196,'multiline':False]
['text':' Copy vN back to d.','line_number':199,'multiline':False]
['text':' The number of bytes written is p minus the old base pointer.','line_number':205,'multiline':False]
