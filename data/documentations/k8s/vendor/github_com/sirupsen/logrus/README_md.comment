['text':'github.com/sirupsen/logrus/workflows/CI/badge.svg)](https://github.com/sirupsen/logrus/actions?query=workflow%3ACI) [![Build Status](https://travis-ci.org/sirupsen/logrus.svg?branch=master)](https://travis-ci.org/sirupsen/logrus) [![Go Reference](https://pkg.go.dev/badge/github.com/sirupsen/logrus.svg)](https://pkg.go.dev/github.com/sirupsen/logrus)','line_number':1,'multiline':False]
['text':'github.com/rs/zerolog','line_number':22,'multiline':False]
['text':'github.com/uber-go/zap','line_number':23,'multiline':False]
['text':'github.com/apex/log','line_number':24,'multiline':False]
['text':'github.com/sirupsen/logrus/issues/553#issuecomment-306591437).','line_number':34,'multiline':False]
['text':'github.com/sirupsen/logrus/issues/570#issuecomment-313933276).','line_number':36,'multiline':False]
['text':'i.imgur.com/PY7qMwd.png)','line_number':41,'multiline':False]
['text':'godoc.org/github.com/kr/logfmt) format:','line_number':65,'multiline':False]
['text':' Log as JSON instead of the default ASCII formatter.','line_number':146,'multiline':False]
['text':' Output to stdout instead of the default stderr','line_number':149,'multiline':False]
['text':' Can be any io.Writer, see below for File example','line_number':150,'multiline':False]
['text':' Only log the warning severity or above.','line_number':153,'multiline':False]
['text':' A common pattern is to re-use fields between logging statements by re-using','line_number':173,'multiline':False]
['text':' the logrus.Entry returned from WithFields()','line_number':174,'multiline':False]
['text':' Create a new instance of the logger. You can have any number of instances.','line_number':196,'multiline':False]
['text':' The API for setting attributes is a little different than the package level','line_number':200,'multiline':False]
['text':' exported logger. See Godoc.','line_number':201,'multiline':False]
['text':' You could set this to any `io.Writer` such as a file','line_number':204,'multiline':False]
['text':' file, err := os.OpenFile("logrus.log", os.O_CREATE|os.O_WRONLY|os.O_APPEND, 0666)','line_number':205,'multiline':False]
['text':' if err == nil {','line_number':206,'multiline':False]
['text':'  log.Out = file','line_number':207,'multiline':False]
['text':' } else {','line_number':208,'multiline':False]
['text':'  log.Info("Failed to log to file, using default stderr")','line_number':209,'multiline':False]
['text':' }','line_number':210,'multiline':False]
['text':' the package is named "airbrake"','line_number':269,'multiline':False]
['text':' Use the Airbrake hook to report errors that have Error severity or above to','line_number':276,'multiline':False]
['text':' an exception tracker. You can create custom hooks, see the Hooks section.','line_number':277,'multiline':False]
['text':'github.com/sirupsen/logrus/wiki/Hooks)','line_number':290,'multiline':False]
['text':' Calls os.Exit(1) after logging','line_number':303,'multiline':False]
['text':' Calls panic() after logging','line_number':305,'multiline':False]
['text':' Will log anything that is info or above (warn, error, fatal, panic). Default.','line_number':313,'multiline':False]
['text':' do something here to set environment depending on an environment variable','line_number':345,'multiline':False]
['text':' or command-line flag','line_number':346,'multiline':False]
['text':' The TextFormatter is default, you don't actually have to do this.','line_number':350,'multiline':False]
['text':'github.com/mattn/go-colorable).','line_number':369,'multiline':False]
['text':'godoc.org/github.com/sirupsen/logrus#TextFormatter).','line_number':373,'multiline':False]
['text':'godoc.org/github.com/sirupsen/logrus#JSONFormatter).','line_number':375,'multiline':False]
['text':'github.com/joonix/log). Formats entries that can be parsed by Kubernetes and Google Container Engine.','line_number':379,'multiline':False]
['text':'github.com/fabienm/go-logrus-formatters). Formats entries so they comply to Graylog's [GELF 1.1 specification](http://docs.graylog.org/en/2.4/pages/gelf.html).','line_number':380,'multiline':False]
['text':'github.com/bshuster-repo/logrus-logstash-hook). Logs fields as [Logstash](http://logstash.net) Events.','line_number':381,'multiline':False]
['text':'github.com/x-cray/logrus-prefixed-formatter). Displays log entry source along with alternative layout.','line_number':382,'multiline':False]
['text':'github.com/aybabtme/logzalgo). Invoking the Power of Zalgo.','line_number':383,'multiline':False]
['text':'github.com/antonfisher/nested-logrus-formatter). Converts logrus fields to a nested structure.','line_number':384,'multiline':False]
['text':'github.com/zput/zxcTool). get fileName, log's line number and the latest function's name when print log; Sava log to files.','line_number':385,'multiline':False]
['text':'github.com/nolleh/caption_json_formatter). logrus's message json formatter with human-readable caption added.','line_number':386,'multiline':False]
['text':' Note this doesn't include Time, Level and Message which are available on','line_number':400,'multiline':False]
['text':' the Entry. Consult `godoc` on information about those fields or read the','line_number':401,'multiline':False]
['text':' source of the official loggers.','line_number':402,'multiline':False]
['text':' create a stdlib log.Logger that writes to','line_number':420,'multiline':False]
['text':' logrus.Logger.','line_number':421,'multiline':False]
['text':' Use logrus for standard log output','line_number':435,'multiline':False]
['text':' Note that `log` here references stdlib's log','line_number':436,'multiline':False]
['text':' Not logrus imported under the name `log`.','line_number':437,'multiline':False]
['text':'github.com/gogap/logrus_mate)|Logrus mate is a tool for Logrus to manage loggers, you can initial logger's level, hook and formatter by config file, the logger will be generated with different configs in different environments.|','line_number':451,'multiline':False]
['text':'github.com/heirko/go-contrib/tree/master/logrusHelper)|An Helper around Logrus to wrap with spf13/Viper to load configuration with fangs! And to simplify Logrus configuration use some behavior of [Logrus Mate](https://github.com/gogap/logrus_mate). [sample](https://github.com/heirko/iris-contrib/blob/master/middleware/logrus-logger/example) |','line_number':452,'multiline':False]
['text':' gracefully shutdown something...','line_number':492,'multiline':False]
['text':'www.notthewizard.com/2014/06/17/are-files-appends-really-atomic/)','line_number':513,'multiline':False]
