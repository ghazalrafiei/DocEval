['text':' elixir.bootlin.com/linux/v5.15-rc7/source/kernel/events/core.c#L9799','line_number':26,'multiline':False]
['text':' ErrNoSymbol indicates that the given symbol was not found','line_number':36,'multiline':False]
['text':' in the ELF symbols table.','line_number':37,'multiline':False]
['text':' Executable defines an executable program on the filesystem.','line_number':41,'multiline':False]
['text':' Path of the executable on the filesystem.','line_number':43,'multiline':False]
['text':' Parsed ELF and dynamic symbols' addresses.','line_number':45,'multiline':False]
['text':' UprobeOptions defines additional parameters that will be used','line_number':49,'multiline':False]
['text':' when loading Uprobes.','line_number':50,'multiline':False]
['text':' Symbol address. Must be provided in case of external symbols (shared libs).','line_number':52,'multiline':False]
['text':' If set, overrides the address eventually parsed from the executable.','line_number':53,'multiline':False]
['text':' The offset relative to given symbol. Useful when tracing an arbitrary point','line_number':55,'multiline':False]
['text':' inside the frame of given symbol.','line_number':56,'multiline':False]
['text':'','line_number':57,'multiline':False]
['text':' Note: this field changed from being an absolute offset to being relative','line_number':58,'multiline':False]
['text':' to Address.','line_number':59,'multiline':False]
['text':' Only set the uprobe on the given process ID. Useful when tracing','line_number':61,'multiline':False]
['text':' shared library calls or programs that have many running instances.','line_number':62,'multiline':False]
['text':' Automatically manage SDT reference counts (semaphores).','line_number':64,'multiline':False]
['text':'','line_number':65,'multiline':False]
['text':' If this field is set, the Kernel will increment/decrement the','line_number':66,'multiline':False]
['text':' semaphore located in the process memory at the provided address on','line_number':67,'multiline':False]
['text':' probe attach/detach.','line_number':68,'multiline':False]
['text':'','line_number':69,'multiline':False]
['text':' See also:','line_number':70,'multiline':False]
['text':' sourceware.org/systemtap/wiki/UserSpaceProbeImplementation (Semaphore Handling)','line_number':71,'multiline':False]
['text':' github.com/torvalds/linux/commit/1cc33161a83d','line_number':72,'multiline':False]
['text':' github.com/torvalds/linux/commit/a6ca88b241d5','line_number':73,'multiline':False]
['text':' Arbitrary value that can be fetched from an eBPF program','line_number':75,'multiline':False]
['text':' via `bpf_get_attach_cookie()`.','line_number':76,'multiline':False]
['text':'','line_number':77,'multiline':False]
['text':' Needs kernel 5.15+.','line_number':78,'multiline':False]
['text':' To open a new Executable, use:','line_number':82,'multiline':False]
['text':'','line_number':83,'multiline':False]
['text':'  OpenExecutable("/bin/bash")','line_number':84,'multiline':False]
['text':'','line_number':85,'multiline':False]
['text':' The returned value can then be used to open Uprobe(s).','line_number':86,'multiline':False]
['text':' ELF is not an executable or a shared object.','line_number':104,'multiline':False]
['text':' Symbol not associated with a function or other executable code.','line_number':135,'multiline':False]
['text':' Loop over ELF segments.','line_number':141,'multiline':False]
['text':' Skip uninteresting segments.','line_number':143,'multiline':False]
['text':' If the symbol value is contained in the segment, calculate','line_number':149,'multiline':False]
['text':' the symbol offset.','line_number':150,'multiline':False]
['text':'','line_number':151,'multiline':False]
['text':' fn symbol offset = fn symbol VA - .text VA + .text offset','line_number':152,'multiline':False]
['text':'','line_number':153,'multiline':False]
['text':' stackoverflow.com/a/40249502','line_number':154,'multiline':False]
['text':' address calculates the address of a symbol in the executable.','line_number':166,'multiline':False]
['text':'','line_number':167,'multiline':False]
['text':' opts must not be nil.','line_number':168,'multiline':False]
['text':' Symbols with location 0 from section undef are shared library calls and','line_number':179,'multiline':False]
['text':' are relocated before the binary is executed. Dynamic linking is not','line_number':180,'multiline':False]
['text':' implemented by the library, so mark this as unsupported for now.','line_number':181,'multiline':False]
['text':'','line_number':182,'multiline':False]
['text':' Since only offset values are stored and not elf.Symbol, if the value is 0,','line_number':183,'multiline':False]
['text':' assume it's an external symbol.','line_number':184,'multiline':False]
['text':' Uprobe attaches the given eBPF program to a perf event that fires when the','line_number':193,'multiline':False]
['text':' given symbol starts executing in the given Executable.','line_number':194,'multiline':False]
['text':' For example, /bin/bash::main():','line_number':195,'multiline':False]
['text':'','line_number':196,'multiline':False]
['text':'  ex, _ = OpenExecutable("/bin/bash")','line_number':197,'multiline':False]
['text':'  ex.Uprobe("main", prog, nil)','line_number':198,'multiline':False]
['text':'','line_number':199,'multiline':False]
['text':' When using symbols which belongs to shared libraries,','line_number':200,'multiline':False]
['text':' an offset must be provided via options:','line_number':201,'multiline':False]
['text':'','line_number':202,'multiline':False]
['text':'  up, err := ex.Uprobe("main", prog, &UprobeOptions{Offset: 0x123})','line_number':203,'multiline':False]
['text':'','line_number':204,'multiline':False]
['text':' Note: Setting the Offset field in the options supersedes the symbol's offset.','line_number':205,'multiline':False]
['text':'','line_number':206,'multiline':False]
['text':' Losing the reference to the resulting Link (up) will close the Uprobe','line_number':207,'multiline':False]
['text':' and prevent further execution of prog. The Link must be Closed during','line_number':208,'multiline':False]
['text':' program shutdown to avoid leaking system resources.','line_number':209,'multiline':False]
['text':'','line_number':210,'multiline':False]
['text':' Functions provided by shared libraries can currently not be traced and','line_number':211,'multiline':False]
['text':' will result in an ErrNotSupported.','line_number':212,'multiline':False]
['text':' Uretprobe attaches the given eBPF program to a perf event that fires right','line_number':228,'multiline':False]
['text':' before the given symbol exits. For example, /bin/bash::main():','line_number':229,'multiline':False]
['text':'','line_number':230,'multiline':False]
['text':'  ex, _ = OpenExecutable("/bin/bash")','line_number':231,'multiline':False]
['text':'  ex.Uretprobe("main", prog, nil)','line_number':232,'multiline':False]
['text':'','line_number':233,'multiline':False]
['text':' When using symbols which belongs to shared libraries,','line_number':234,'multiline':False]
['text':' an offset must be provided via options:','line_number':235,'multiline':False]
['text':'','line_number':236,'multiline':False]
['text':'  up, err := ex.Uretprobe("main", prog, &UprobeOptions{Offset: 0x123})','line_number':237,'multiline':False]
['text':'','line_number':238,'multiline':False]
['text':' Note: Setting the Offset field in the options supersedes the symbol's offset.','line_number':239,'multiline':False]
['text':'','line_number':240,'multiline':False]
['text':' Losing the reference to the resulting Link (up) will close the Uprobe','line_number':241,'multiline':False]
['text':' and prevent further execution of prog. The Link must be Closed during','line_number':242,'multiline':False]
['text':' program shutdown to avoid leaking system resources.','line_number':243,'multiline':False]
['text':'','line_number':244,'multiline':False]
['text':' Functions provided by shared libraries can currently not be traced and','line_number':245,'multiline':False]
['text':' will result in an ErrNotSupported.','line_number':246,'multiline':False]
['text':' uprobe opens a perf event for the given binary/symbol and attaches prog to it.','line_number':262,'multiline':False]
['text':' If ret is true, create a uretprobe.','line_number':263,'multiline':False]
['text':' Use uprobe PMU if the kernel has it available.','line_number':301,'multiline':False]
['text':' Use tracefs if uprobe PMU is missing.','line_number':310,'multiline':False]
['text':' pmuUprobe opens a perf event based on the uprobe PMU.','line_number':320,'multiline':False]
['text':' tracefsUprobe creates a Uprobe tracefs entry.','line_number':325,'multiline':False]
['text':' sanitizeSymbol replaces every invalid character for the tracefs api with an underscore.','line_number':330,'multiline':False]
['text':' It is equivalent to calling regexp.MustCompile("[^a-zA-Z0-9]+").ReplaceAllString("_").','line_number':331,'multiline':False]
['text':' uprobeToken creates the PATH:OFFSET(REF_CTR_OFFSET) token for the tracefs api.','line_number':355,'multiline':False]
['text':' This is not documented in Documentation/trace/uprobetracer.txt.','line_number':360,'multiline':False]
['text':' elixir.bootlin.com/linux/v5.15-rc7/source/kernel/trace/trace.c#L5564','line_number':361,'multiline':False]
