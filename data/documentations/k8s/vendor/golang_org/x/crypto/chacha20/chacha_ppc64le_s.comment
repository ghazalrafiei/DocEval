['text':' Copyright 2019 The Go Authors. All rights reserved.','line_number':1,'multiline':False]
['text':' Use of this source code is governed by a BSD-style','line_number':2,'multiline':False]
['text':' license that can be found in the LICENSE file.','line_number':3,'multiline':False]
['text':' Based on CRYPTOGAMS code with the following comment:','line_number':5,'multiline':False]
['text':' # ====================================================================','line_number':6,'multiline':False]
['text':' # Written by Andy Polyakov <appro@openssl.org> for the OpenSSL','line_number':7,'multiline':False]
['text':' # project. The module is, however, dual licensed under OpenSSL and','line_number':8,'multiline':False]
['text':' # CRYPTOGAMS licenses depending on where you obtain it. For further','line_number':9,'multiline':False]
['text':' # details see http://www.openssl.org/~appro/cryptogams/.','line_number':10,'multiline':False]
['text':' # ====================================================================','line_number':11,'multiline':False]
['text':' Code for the perl script that generates the ppc64 assembler','line_number':13,'multiline':False]
['text':' can be found in the cryptogams repository at the link below. It is based on','line_number':14,'multiline':False]
['text':' the original from openssl.','line_number':15,'multiline':False]
['text':' https://github.com/dot-asm/cryptogams/commit/a60f5b50ed908e91','line_number':17,'multiline':False]
['text':' The differences in this and the original implementation are','line_number':19,'multiline':False]
['text':' due to the calling conventions and initialization of constants.','line_number':20,'multiline':False]
['text':'go:build gc && !purego','line_number':22,'multiline':False]
['text':' +build gc,!purego','line_number':23,'multiline':False]
['text':'func chaCha20_ctr32_vsx(out, inp *byte, len int, key *[8]uint32, counter *uint32)','line_number':59,'multiline':False]
['text':' Addressing for constants','line_number':67,'multiline':False]
['text':' V16','line_number':74,'multiline':False]
['text':' Load key into V17,V18','line_number':78,'multiline':False]
['text':' Load CNT, NONCE into V19','line_number':82,'multiline':False]
['text':' Clear V27','line_number':85,'multiline':False]
['text':' V28','line_number':88,'multiline':False]
['text':' splat slot from V19 -> V26','line_number':91,'multiline':False]
['text':' V0, V1, V2, V3','line_number':103,'multiline':False]
['text':' splat values from V17, V18 into V4-V11','line_number':109,'multiline':False]
['text':' VOR','line_number':119,'multiline':False]
['text':' splat values from V19 -> V13, V14, V15','line_number':122,'multiline':False]
['text':' splat   const values','line_number':127,'multiline':False]
['text':' VMRGEW V0, V1, V27','line_number':257,'multiline':False]
['text':' VMRGEW V2, V3, V28','line_number':258,'multiline':False]
['text':' VMRGOW V0, V1, V0','line_number':260,'multiline':False]
['text':' VMRGOW V2, V3, V2','line_number':261,'multiline':False]
['text':' VMRGEW V4, V5, V29','line_number':263,'multiline':False]
['text':' VMRGEW V6, V7, V30','line_number':264,'multiline':False]
['text':' VMRGOW V4, V5, V4','line_number':271,'multiline':False]
['text':' VMRGOW V6, V7, V6','line_number':272,'multiline':False]
['text':' VMRGEW V8, V9, V27','line_number':274,'multiline':False]
['text':' VMRGEW V10, V11, V28','line_number':275,'multiline':False]
['text':' VMRGOW V8, V9, V8','line_number':282,'multiline':False]
['text':' VMRGOW V10, V11, V10','line_number':283,'multiline':False]
['text':' VMRGEW V12, V13, V29','line_number':285,'multiline':False]
['text':' VMRGEW V14, V15, V30','line_number':286,'multiline':False]
['text':' VMRGOW V12, V13, V12','line_number':293,'multiline':False]
['text':' VMRGOW V14, V15, V14','line_number':294,'multiline':False]
['text':' Bottom of loop','line_number':312,'multiline':False]
['text':' Increment counter by number of 64 byte blocks','line_number':417,'multiline':False]
['text':' Save values on stack to copy from','line_number':427,'multiline':False]
['text':' Copying the result to OUT','line_number':437,'multiline':False]
['text':' in bytes.','line_number':438,'multiline':False]
['text':' Clear the stack values','line_number':445,'multiline':False]
