['text':'!/usr/bin/env bash','line_number':1,'multiline':False]
['text':'## Copyright 2010 Manuel Carrasco Mo√±ino. (manolo at apache.org)','line_number':2,'multiline':False]
['text':'##','line_number':3,'multiline':False]
['text':'## Licensed under the Apache License, Version 2.0.','line_number':4,'multiline':False]
['text':'## You may obtain a copy of it at','line_number':5,'multiline':False]
['text':'## http://www.apache.org/licenses/LICENSE-2.0','line_number':6,'multiline':False]
['text':'##','line_number':8,'multiline':False]
['text':'## A library for shell scripts which creates reports in jUnit format.','line_number':9,'multiline':False]
['text':'## These reports can be used in Jenkins, or any other CI.','line_number':10,'multiline':False]
['text':'##','line_number':11,'multiline':False]
['text':'## Usage:','line_number':12,'multiline':False]
['text':'##     - Include this file in your shell script','line_number':13,'multiline':False]
['text':'##     - Use juLog to call your command any time you want to produce a new report','line_number':14,'multiline':False]
['text':'##        Usage:   juLog <options> command arguments','line_number':15,'multiline':False]
['text':'##           options:','line_number':16,'multiline':False]
['text':'##             -class="MyClass" : a class name which will be shown in the junit report','line_number':17,'multiline':False]
['text':'##             -name="TestName" : the test name which will be shown in the junit report','line_number':18,'multiline':False]
['text':'##             -error="RegExp"  : a regexp which sets the test as failure when the output matches it','line_number':19,'multiline':False]
['text':'##             -ierror="RegExp" : same as -error but case insensitive','line_number':20,'multiline':False]
['text':'##             -fail="RegExp"   : Any line from stderr which contains this pattern becomes part of','line_number':21,'multiline':False]
['text':'##                                the failure messsage, without the text matching that pattern.','line_number':22,'multiline':False]
['text':'##                                Example: -failure="^ERROR: "','line_number':23,'multiline':False]
['text':'##                                Default is to use the entire stderr as failure message.','line_number':24,'multiline':False]
['text':'##             -output="Path"   : path to output directory, defaults to "./results"','line_number':25,'multiline':False]
['text':'##     - Junit reports are left in the folder 'result' under the directory where the script is executed.','line_number':26,'multiline':False]
['text':'##     - Configure Jenkins to parse junit files from the generated folder','line_number':27,'multiline':False]
['text':'##','line_number':28,'multiline':False]
['text':' default output folder','line_number':33,'multiline':False]
['text':' The name of the suite is calculated based in your script name','line_number':36,'multiline':False]
['text':' A wrapper for the eval method witch allows catching seg-faults and use tee','line_number':48,'multiline':False]
['text':' stdout and stderr may currently be inverted (see below) so echo may write to stderr','line_number':52,'multiline':False]
['text':' Method to clean old tests','line_number':56,'multiline':False]
['text':' Execute a command and record its results','line_number':62,'multiline':False]
['text':' parse arguments','line_number':70,'multiline':False]
['text':' create output directory','line_number':84,'multiline':False]
['text':' use first arg as name if it was not given','line_number':86,'multiline':False]
['text':' calculate command to eval','line_number':98,'multiline':False]
['text':' eval the command sending output to a file','line_number':107,'multiline':False]
['text':' execute the command, temporarily swapping stderr and stdout so they can be tee'd to separate files,','line_number':116,'multiline':False]
['text':' then swapping them back again so that the streams are written correctly for the invoking process','line_number':117,'multiline':False]
['text':' set the appropriate error, based in the exit code and the regex','line_number':124,'multiline':False]
['text':' calculate vars','line_number':136,'multiline':False]
['text':' write the junit xml report','line_number':142,'multiline':False]
['text':'# failure tag','line_number':143,'multiline':False]
['text':'# testcase tag','line_number':161,'multiline':False]
['text':'# testsuite block','line_number':168,'multiline':False]
['text':' file exists. first update the failures count','line_number':171,'multiline':False]
['text':' file exists. Need to append to it. If we remove the testsuite end tag, we can just add it in after.','line_number':177,'multiline':False]
['text':'# remove testSuite so we can add it later','line_number':178,'multiline':False]
['text':' no file exists. Adding a new file','line_number':187,'multiline':False]
