['text':'
Copyright 2017 The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
','line_number':1,'multiline':True]
['text':' GetControlPlaneEndpoint returns a properly formatted endpoint for the control plane built according following rules:','line_number':33,'multiline':False]
['text':' - If the controlPlaneEndpoint is defined, use it.','line_number':34,'multiline':False]
['text':' - if the controlPlaneEndpoint is defined but without a port number, use the controlPlaneEndpoint + localEndpoint.BindPort is used.','line_number':35,'multiline':False]
['text':' - Otherwise, in case the controlPlaneEndpoint is not defined, use the localEndpoint.AdvertiseAddress + the localEndpoint.BindPort.','line_number':36,'multiline':False]
['text':' get the URL of the local endpoint','line_number':38,'multiline':False]
['text':' if the controlplane endpoint is defined','line_number':44,'multiline':False]
['text':' parse the controlplane endpoint','line_number':46,'multiline':False]
['text':' if a port is provided within the controlPlaneAddress warn the users we are using it, else use the bindport','line_number':53,'multiline':False]
['text':' overrides the control-plane url using the controlPlaneAddress (and eventually the bindport)','line_number':63,'multiline':False]
['text':' GetLocalAPIEndpoint parses an APIEndpoint and returns it as a string,','line_number':70,'multiline':False]
['text':' or returns and error in case it cannot be parsed.','line_number':71,'multiline':False]
['text':' get the URL of the local endpoint','line_number':73,'multiline':False]
['text':' ParseHostPort parses a network address of the form "host:port", "ipv4:port", "[ipv6]:port" into host and port;','line_number':82,'multiline':False]
['text':' ":port" can be eventually omitted.','line_number':83,'multiline':False]
['text':' If the string is not a valid representation of network address, ParseHostPort returns an error.','line_number':84,'multiline':False]
['text':' try to split host and port','line_number':89,'multiline':False]
['text':' if SplitHostPort returns an error, the entire hostport is considered as host','line_number':91,'multiline':False]
['text':' if port is defined, parse and validate it','line_number':95,'multiline':False]
['text':' if host is a valid IP, returns it','line_number':102,'multiline':False]
['text':' if host is a validate RFC-1123 subdomain, returns it','line_number':107,'multiline':False]
['text':' ParsePort parses a string representing a TCP port.','line_number':115,'multiline':False]
['text':' If the string is not a valid representation of a TCP port, ParsePort returns an error.','line_number':116,'multiline':False]
['text':' parseAPIEndpoint parses an APIEndpoint and returns the AdvertiseAddress as net.IP and the BindPort as string.','line_number':126,'multiline':False]
['text':' If the BindPort or AdvertiseAddress are invalid it returns an error.','line_number':127,'multiline':False]
['text':' parse the bind port','line_number':129,'multiline':False]
['text':' parse the AdvertiseAddress','line_number':135,'multiline':False]
['text':' formatURL takes a host and a port string and creates a net.URL using https scheme','line_number':144,'multiline':False]
