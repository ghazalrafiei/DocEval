['text':'
Copyright 2019 The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
','line_number':1,'multiline':True]
['text':' ConformanceData describes the structure of the conformance.yaml file','line_number':39,'multiline':False]
['text':' A URL to the line of code in the kube src repo for the test. Omitted from the YAML to avoid exposing line number.','line_number':41,'multiline':False]
['text':' Extracted from the "Testname:" comment before the test','line_number':43,'multiline':False]
['text':' CodeName is taken from the actual ginkgo descriptions, e.g. `[sig-apps] Foo should bar [Conformance]`','line_number':45,'multiline':False]
['text':' Extracted from the "Description:" comment before the test','line_number':47,'multiline':False]
['text':' Version when this test is added or modified ex: v1.12, v1.13','line_number':49,'multiline':False]
['text':' File is the filename where the test is defined. We intentionally don't save the line here to avoid meaningless changes.','line_number':51,'multiline':False]
['text':' If a test name contains any of these tags, it is ineligible for promotion to conformance','line_number':61,'multiline':False]
['text':' Conformance comments should be within this number of lines to the call itself.','line_number':64,'multiline':False]
['text':' Allowing for more than one in case a spare comment or two is below it.','line_number':65,'multiline':False]
['text':' File and Line are the file name and line number of the','line_number':72,'multiline':False]
['text':' location in this frame. For non-leaf frames, this will be','line_number':73,'multiline':False]
['text':' the location of a call. These may be the empty string and','line_number':74,'multiline':False]
['text':' zero, respectively, if not known.','line_number':75,'multiline':False]
['text':' The key to this working is that we don't need to parse every file or walk','line_number':126,'multiline':False]
['text':' every types.CodeLocation. The LeafNodeLocation is going to be file:line which','line_number':127,'multiline':False]
['text':' attached to the comment that we want.','line_number':128,'multiline':False]
['text':' Note: this assumes that you're running from the root of the kube src repo','line_number':152,'multiline':False]
['text':' Serialize the list as a whole. Generally meant to end up as conformance.txt which tracks the set of tests.','line_number':173,'multiline':False]
['text':' filenames are in one of two special GOPATHs depending on if they were','line_number':182,'multiline':False]
['text':' built dockerized or with the host go','line_number':183,'multiline':False]
['text':' we want to trim this prefix to produce portable relative paths','line_number':184,'multiline':False]
['text':' scanFileForFrame will scan the target and look for a conformance comment attached to the function','line_number':207,'multiline':False]
['text':' described by the target frame. If the comment can't be found then nil, nil is returned.','line_number':208,'multiline':False]
['text':' positions are relative to fset','line_number':210,'multiline':False]
['text':' Each file/line will either be some helper function (not a conformance comment) or apply to just a single test. Don't revisit.','line_number':240,'multiline':False]
['text':' Line has no header','line_number':285,'multiline':False]
