['text':'!/usr/bin/env bash','line_number':1,'multiline':False]
['text':' Copyright 2017 The Kubernetes Authors.','line_number':3,'multiline':False]
['text':'','line_number':4,'multiline':False]
['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':5,'multiline':False]
['text':' you may not use this file except in compliance with the License.','line_number':6,'multiline':False]
['text':' You may obtain a copy of the License at','line_number':7,'multiline':False]
['text':'','line_number':8,'multiline':False]
['text':'     http://www.apache.org/licenses/LICENSE-2.0','line_number':9,'multiline':False]
['text':'','line_number':10,'multiline':False]
['text':' Unless required by applicable law or agreed to in writing, software','line_number':11,'multiline':False]
['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':12,'multiline':False]
['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':13,'multiline':False]
['text':' See the License for the specific language governing permissions and','line_number':14,'multiline':False]
['text':' limitations under the License.','line_number':15,'multiline':False]
['text':' docker buildx command is still experimental as of Docker 19.03.0','line_number':24,'multiline':False]
['text':' Connecting to a Remote Docker requires certificates for authentication, which can be found','line_number':27,'multiline':False]
['text':' at this path. By default, they can be found in the ${HOME} folder. We're expecting to find','line_number':28,'multiline':False]
['text':' here ".docker-${os_version}" folders which contains the necessary certificates.','line_number':29,'multiline':False]
['text':' Mapping of go ARCH to actual architectures shipped part of multiarch/qemu-user-static project','line_number':36,'multiline':False]
['text':' NOTE(claudiub): In the test image build jobs, this script is not being run in a git repository,','line_number':39,'multiline':False]
['text':' which would cause git log to fail. Instead, we can use the GIT_COMMIT_ID set in cloudbuild.yaml.','line_number':40,'multiline':False]
['text':' we use awk to also trim the quotes around the OS version string.','line_number':48,'multiline':False]
['text':' Returns list of all supported architectures from BASEIMAGE file','line_number':56,'multiline':False]
['text':' for Windows, we have to support both LTS and SAC channels, so we're building multiple Windows images.','line_number':67,'multiline':False]
['text':' the format for this case is: OS/ARCH/OS_VERSION.','line_number':68,'multiline':False]
['text':' Returns baseimage need to used in Dockerfile for any given architecture','line_number':84,'multiline':False]
['text':' This function will build test image for all the architectures','line_number':90,'multiline':False]
['text':' mentioned in BASEIMAGE file. In the absence of BASEIMAGE file,','line_number':91,'multiline':False]
['text':' it will build for all the supported arch list - amd64, arm,','line_number':92,'multiline':False]
['text':' arm64, ppc64le, s390x','line_number':93,'multiline':False]
['text':' prepend linux/ to the QEMUARCHS items.','line_number':103,'multiline':False]
['text':' image tag','line_number':107,'multiline':False]
['text':' Create a temporary directory for every architecture and copy the image content','line_number':128,'multiline':False]
['text':' and build the image from temporary directory','line_number':129,'multiline':False]
['text':' make bin will take care of all the prerequisites needed','line_number':136,'multiline':False]
['text':' for building the docker image','line_number':137,'multiline':False]
['text':' NOTE(claudiub): Some Windows images might require their own Dockerfile','line_number':142,'multiline':False]
['text':' while simpler ones will not. If we're building for Windows, check if','line_number':143,'multiline':False]
['text':' "Dockerfile_windows" exists or not.','line_number':144,'multiline':False]
['text':' Only the cross-build on x86 is guaranteed by far, other arches like aarch64 doesn't support cross-build','line_number':156,'multiline':False]
['text':' thus, there is no need to tackle a disability feature on those platforms, and also help to prevent from','line_number':157,'multiline':False]
['text':' ending up a wrong image tag on non-amd64 platforms.','line_number':158,'multiline':False]
['text':' copy the qemu-*-static binary to docker image to build the multi architecture image on x86 platform','line_number':161,'multiline':False]
['text':' Register qemu-*-static for all supported processors except the current one','line_number':167,'multiline':False]
['text':' Ensure we don't get surprised by umask settings','line_number':175,'multiline':False]
['text':' docker manifest annotate --os-version has been introduced in 20.10.0,','line_number':199,'multiline':False]
['text':' so we need to make sure we have it.','line_number':200,'multiline':False]
['text':' This function will push the docker images','line_number':208,'multiline':False]
['text':' prepend linux/ to the QEMUARCHS items.','line_number':217,'multiline':False]
['text':' reset manifest list; needed in case multiple images are being built / pushed.','line_number':230,'multiline':False]
['text':' Make os_archs list into image manifest. Eg: 'linux/amd64 linux/ppc64le' to '${REGISTRY}/${image}:${TAG}-linux-amd64 ${REGISTRY}/${image}:${TAG}-linux-ppc64le'','line_number':232,'multiline':False]
['text':' For Windows images, we also need to include the "os.version" in the manifest list, so the Windows node','line_number':239,'multiline':False]
['text':' can pull the proper image it needs.','line_number':240,'multiline':False]
['text':' This function is for building AND pushing images. Useful if ${WHAT} is "all-conformance".','line_number':252,'multiline':False]
['text':' This will allow images to be pushed immediately after they've been built.','line_number':253,'multiline':False]
['text':' This function is for building the go code','line_number':260,'multiline':False]
['text':' NOTE(claudiub): Building *ALL* the images under the kubernetes/test/images folder takes an extremely','line_number':279,'multiline':False]
['text':' long time (especially some images), and some images are rarely used and rarely updated, so there's','line_number':280,'multiline':False]
['text':' no point in rebuilding all of them every time. This will only build the Conformance-related images.','line_number':281,'multiline':False]
['text':' Discussed during Conformance Office Hours Meeting (2019.12.17):','line_number':282,'multiline':False]
['text':' https://docs.google.com/document/d/1W31nXh9RYAb_VaYkwuPLd1hFxuRX3iU0DmaQ4lkCsX8/edit#heading=h.l87lu17xm9bh','line_number':283,'multiline':False]
