['text':'!/usr/bin/env bash','line_number':1,'multiline':False]
['text':' Copyright 2016 The Kubernetes Authors.','line_number':3,'multiline':False]
['text':'','line_number':4,'multiline':False]
['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':5,'multiline':False]
['text':' you may not use this file except in compliance with the License.','line_number':6,'multiline':False]
['text':' You may obtain a copy of the License at','line_number':7,'multiline':False]
['text':'','line_number':8,'multiline':False]
['text':'     http://www.apache.org/licenses/LICENSE-2.0','line_number':9,'multiline':False]
['text':'','line_number':10,'multiline':False]
['text':' Unless required by applicable law or agreed to in writing, software','line_number':11,'multiline':False]
['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':12,'multiline':False]
['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':13,'multiline':False]
['text':' See the License for the specific language governing permissions and','line_number':14,'multiline':False]
['text':' limitations under the License.','line_number':15,'multiline':False]
['text':' This script is only for demonstrating how to use the node test container. In','line_number':17,'multiline':False]
['text':' production environment, kubelet bootstrap will be more complicated, user','line_number':18,'multiline':False]
['text':' should configure the node test container accordingly.','line_number':19,'multiline':False]
['text':' In addition, this script will also be used in the node e2e test to let it use','line_number':20,'multiline':False]
['text':' the containerized test suite.','line_number':21,'multiline':False]
['text':' TODO(random-liu): Use standard installer to install kubelet.','line_number':23,'multiline':False]
['text':' TODO(random-liu): Use standard tool to start kubelet in production way (such','line_number':24,'multiline':False]
['text':' as systemd, supervisord etc.)','line_number':25,'multiline':False]
['text':' Refresh sudo credentials if needed','line_number':27,'multiline':False]
['text':' if we can run bash without a password, it's a pretty safe bet that either','line_number':31,'multiline':False]
['text':' we can run any command without a password, or that sudo credentials','line_number':32,'multiline':False]
['text':' are already cached - and they've just been re-cached','line_number':33,'multiline':False]
['text':' FOCUS is ginkgo focus to select which tests to run. By default, FOCUS is','line_number':40,'multiline':False]
['text':' initialized as "\[Conformance\]" in the test container to run all conformance','line_number':41,'multiline':False]
['text':' test.','line_number':42,'multiline':False]
['text':' SKIP is ginkgo skip to select which tests to skip. By default, SKIP is','line_number':45,'multiline':False]
['text':' initialized as "\[Flaky\]|\[Serial\]" in the test container skipping all','line_number':46,'multiline':False]
['text':' flaky and serial test.','line_number':47,'multiline':False]
['text':' TEST_ARGS is the test arguments. It could be used to override default test','line_number':50,'multiline':False]
['text':' arguments in the container.','line_number':51,'multiline':False]
['text':' REGISTRY is the image registry for node test image.','line_number':54,'multiline':False]
['text':' ARCH is the architecture of current machine, the script will use this to','line_number':57,'multiline':False]
['text':' select corresponding test container image.','line_number':58,'multiline':False]
['text':' VERSION is the version of the test container image.','line_number':61,'multiline':False]
['text':' KUBELET_BIN is the kubelet binary name. If it is not specified, use the','line_number':64,'multiline':False]
['text':' default binary name "kubelet".','line_number':65,'multiline':False]
['text':' KUBELET is the kubelet binary path. If it is not specified, assume kubelet is','line_number':68,'multiline':False]
['text':' in PATH.','line_number':69,'multiline':False]
['text':' LOG_DIR is the absolute path of the directory where the test will collect all','line_number':72,'multiline':False]
['text':' logs to. By default, use the current directory.','line_number':73,'multiline':False]
['text':' NETWORK_PLUGIN is the network plugin used by kubelet. Do not use network','line_number':77,'multiline':False]
['text':' plugin by default.','line_number':78,'multiline':False]
['text':' CNI_CONF_DIR is the path to network plugin binaries.','line_number':81,'multiline':False]
['text':' CNI_BIN_DIR is the path to network plugin config files.','line_number':84,'multiline':False]
['text':' KUBELET_KUBECONFIG is the path to a kubeconfig file, specifying how to connect to the API server.','line_number':87,'multiline':False]
['text':' Creates a kubeconfig file for the kubelet.','line_number':90,'multiline':False]
['text':' Args: address (e.g. "http://localhost:8080"), destination file path','line_number':91,'multiline':False]
['text':' start_kubelet starts kubelet and redirect kubelet log to $LOG_DIR/kubelet.log.','line_number':114,'multiline':False]
['text':' we want to run this command as root but log the file to a normal user file','line_number':120,'multiline':False]
['text':' (so disable SC2024)','line_number':121,'multiline':False]
['text':' shellcheck disable=SC2024','line_number':122,'multiline':False]
['text':' wait_kubelet retries for 10 times for kubelet to be ready by checking http://127.0.0.1:10248/healthz.','line_number':129,'multiline':False]
['text':' kill_kubelet kills kubelet.','line_number':150,'multiline':False]
['text':' run_test runs the node test container.','line_number':159,'multiline':False]
['text':' The test assumes that inside the container:','line_number':171,'multiline':False]
['text':' * kubelet manifest path is mounted to the same path;','line_number':172,'multiline':False]
['text':' * log collect directory is mounted to /var/result;','line_number':173,'multiline':False]
['text':' * root file system is mounted to /rootfs.','line_number':174,'multiline':False]
['text':' Check whether kubelet is running. If kubelet is running, tell the user to stop','line_number':179,'multiline':False]
['text':' it before running the test.','line_number':180,'multiline':False]
['text':' Clean up the kubelet config directory','line_number':211,'multiline':False]
