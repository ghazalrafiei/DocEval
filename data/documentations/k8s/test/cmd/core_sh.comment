['text':'!/usr/bin/env bash','line_number':1,'multiline':False]
['text':' Copyright 2018 The Kubernetes Authors.','line_number':3,'multiline':False]
['text':'','line_number':4,'multiline':False]
['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':5,'multiline':False]
['text':' you may not use this file except in compliance with the License.','line_number':6,'multiline':False]
['text':' You may obtain a copy of the License at','line_number':7,'multiline':False]
['text':'','line_number':8,'multiline':False]
['text':'     http://www.apache.org/licenses/LICENSE-2.0','line_number':9,'multiline':False]
['text':'','line_number':10,'multiline':False]
['text':' Unless required by applicable law or agreed to in writing, software','line_number':11,'multiline':False]
['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':12,'multiline':False]
['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':13,'multiline':False]
['text':' See the License for the specific language governing permissions and','line_number':14,'multiline':False]
['text':' limitations under the License.','line_number':15,'multiline':False]
['text':'## Create a new namespace','line_number':31,'multiline':False]
['text':' Pre-condition: the test-configmaps namespace does not exist','line_number':32,'multiline':False]
['text':' Command','line_number':34,'multiline':False]
['text':' Post-condition: namespace 'test-configmaps' is created.','line_number':36,'multiline':False]
['text':'## Create a generic configmap in a specific namespace','line_number':39,'multiline':False]
['text':' Pre-condition: configmap test-configmap and test-binary-configmap does not exist','line_number':40,'multiline':False]
['text':' Dry-run command','line_number':43,'multiline':False]
['text':' Command','line_number':47,'multiline':False]
['text':' Post-condition: configmap exists and has expected values','line_number':50,'multiline':False]
['text':' Describe command should respect the chunk size parameter','line_number':55,'multiline':False]
['text':' Clean-up','line_number':57,'multiline':False]
['text':' Runs all pod related tests.','line_number':66,'multiline':False]
['text':'## Create POD valid-pod from JSON','line_number':73,'multiline':False]
['text':' Pre-condition: no POD exists','line_number':74,'multiline':False]
['text':' Command','line_number':77,'multiline':False]
['text':' Post-condition: valid-pod POD is created','line_number':79,'multiline':False]
['text':' pod has field manager for kubectl create','line_number':85,'multiline':False]
['text':' Repeat above test using jsonpath template','line_number':88,'multiline':False]
['text':' Describe command should print detailed information','line_number':93,'multiline':False]
['text':' Describe command should print events information by default','line_number':95,'multiline':False]
['text':' Describe command should not print events information when show-events=false','line_number':97,'multiline':False]
['text':' Describe command should print events information when show-events=true','line_number':99,'multiline':False]
['text':' Describe command (resource only) should print detailed information','line_number':101,'multiline':False]
['text':' Describe command should print events information by default','line_number':104,'multiline':False]
['text':' Describe command should not print events information when show-events=false','line_number':106,'multiline':False]
['text':' Describe command should print events information when show-events=true','line_number':108,'multiline':False]
['text':' Describe command should respect the chunk size parameter','line_number':110,'multiline':False]
['text':'## Dump current valid-pod POD','line_number':113,'multiline':False]
['text':'## Delete POD valid-pod by id','line_number':116,'multiline':False]
['text':' Pre-condition: valid-pod POD exists','line_number':117,'multiline':False]
['text':' Command','line_number':119,'multiline':False]
['text':' Post-condition: valid-pod POD doesn't exist','line_number':121,'multiline':False]
['text':'## Delete POD valid-pod by id with --now','line_number':124,'multiline':False]
['text':' Pre-condition: valid-pod POD exists','line_number':125,'multiline':False]
['text':' Command','line_number':128,'multiline':False]
['text':' Post-condition: valid-pod POD doesn't exist','line_number':130,'multiline':False]
['text':'## Delete POD valid-pod by id with --grace-period=0','line_number':133,'multiline':False]
['text':' Pre-condition: valid-pod POD exists','line_number':134,'multiline':False]
['text':' Command succeeds without --force by waiting','line_number':137,'multiline':False]
['text':' Post-condition: valid-pod POD doesn't exist','line_number':139,'multiline':False]
['text':'## Create POD valid-pod from dumped YAML','line_number':142,'multiline':False]
['text':' Pre-condition: no POD exists','line_number':143,'multiline':False]
['text':' Command','line_number':146,'multiline':False]
['text':' Post-condition: valid-pod POD is created','line_number':148,'multiline':False]
['text':'## Delete POD valid-pod from JSON','line_number':151,'multiline':False]
['text':' Pre-condition: valid-pod POD exists','line_number':152,'multiline':False]
['text':' Command','line_number':154,'multiline':False]
['text':' Post-condition: valid-pod POD doesn't exist','line_number':156,'multiline':False]
['text':'## Create POD valid-pod from JSON','line_number':159,'multiline':False]
['text':' Pre-condition: no POD exists','line_number':160,'multiline':False]
['text':' Command','line_number':163,'multiline':False]
['text':' Post-condition: valid-pod POD is created','line_number':165,'multiline':False]
['text':'## Delete POD valid-pod with label','line_number':168,'multiline':False]
['text':' Pre-condition: valid-pod POD exists','line_number':169,'multiline':False]
['text':' Command','line_number':171,'multiline':False]
['text':' Post-condition: valid-pod POD doesn't exist','line_number':173,'multiline':False]
['text':'## Create POD valid-pod from YAML','line_number':176,'multiline':False]
['text':' Pre-condition: no POD exists','line_number':177,'multiline':False]
['text':' Command','line_number':180,'multiline':False]
['text':' Post-condition: valid-pod POD is created','line_number':182,'multiline':False]
['text':' Command','line_number':184,'multiline':False]
['text':' Command','line_number':187,'multiline':False]
['text':'## Delete PODs with no parameter mustn't kill everything','line_number':192,'multiline':False]
['text':' Pre-condition: valid-pod POD exists','line_number':193,'multiline':False]
['text':' Command','line_number':195,'multiline':False]
['text':' Post-condition: valid-pod POD exists','line_number':197,'multiline':False]
['text':'## Delete PODs with --all and a label selector is not permitted','line_number':200,'multiline':False]
['text':' Pre-condition: valid-pod POD exists','line_number':201,'multiline':False]
['text':' Command','line_number':203,'multiline':False]
['text':' Post-condition: valid-pod POD exists','line_number':205,'multiline':False]
['text':'## Delete all PODs','line_number':208,'multiline':False]
['text':' Pre-condition: valid-pod POD exists','line_number':209,'multiline':False]
['text':' Command','line_number':211,'multiline':False]
['text':' --all remove all the pods','line_number':212,'multiline':False]
['text':' Post-condition: no POD exists','line_number':213,'multiline':False]
['text':' Detailed tests for describe pod output','line_number':216,'multiline':False]
['text':'## Create a new namespace','line_number':217,'multiline':False]
['text':' Pre-condition: the test-secrets namespace does not exist','line_number':218,'multiline':False]
['text':' Command','line_number':220,'multiline':False]
['text':' Post-condition: namespace 'test-secrets' is created.','line_number':222,'multiline':False]
['text':'## Create a generic secret','line_number':225,'multiline':False]
['text':' Pre-condition: no SECRET exists','line_number':226,'multiline':False]
['text':' Dry-run command','line_number':228,'multiline':False]
['text':' Command','line_number':232,'multiline':False]
['text':' Post-condition: secret exists and has expected values','line_number':234,'multiline':False]
['text':'## Create a generic configmap','line_number':238,'multiline':False]
['text':' Pre-condition: CONFIGMAP test-configmap does not exist','line_number':239,'multiline':False]
['text':'kube::test::get_object_assert 'configmap/test-configmap --namespace=test-kubectl-describe-pod' "{{$id_field}}" ''','line_number':240,'multiline':False]
['text':'kube::test::get_object_assert 'configmaps --namespace=test-kubectl-describe-pod' "{{range.items}}{{$id_field}}:{{end}}" ''','line_number':243,'multiline':False]
['text':' Command','line_number':244,'multiline':False]
['text':' Post-condition: configmap exists and has expected values','line_number':246,'multiline':False]
['text':'## Create a pod disruption budget with minAvailable','line_number':249,'multiline':False]
['text':' Pre-condition: pdb does not exist','line_number':250,'multiline':False]
['text':' Dry-run command','line_number':252,'multiline':False]
['text':' Command','line_number':256,'multiline':False]
['text':' Post-condition: pdb exists and has expected values','line_number':258,'multiline':False]
['text':' Command','line_number':260,'multiline':False]
['text':' Post-condition: pdb exists and has expected values','line_number':262,'multiline':False]
['text':' Describe command should respect the chunk size parameter','line_number':264,'multiline':False]
['text':'## Create a pod disruption budget with maxUnavailable','line_number':267,'multiline':False]
['text':' Command','line_number':268,'multiline':False]
['text':' Post-condition: pdb exists and has expected values','line_number':270,'multiline':False]
['text':' Command','line_number':272,'multiline':False]
['text':' Post-condition: pdb exists and has expected values','line_number':274,'multiline':False]
['text':'## Fail creating a pod disruption budget if both maxUnavailable and minAvailable specified','line_number':277,'multiline':False]
['text':' Create a pod that consumes secret, configmap, and downward API keys as envs','line_number':280,'multiline':False]
['text':' Describe command (resource only) should print detailed information about environment variables','line_number':285,'multiline':False]
['text':' Clean-up','line_number':288,'multiline':False]
['text':'## Priority Class','line_number':295,'multiline':False]
['text':' Dry-run command','line_number':297,'multiline':False]
['text':' Command','line_number':301,'multiline':False]
['text':' Describe command should respect the chunk size parameter','line_number':304,'multiline':False]
['text':'## Create two PODs','line_number':308,'multiline':False]
['text':' Pre-condition: no POD exists','line_number':309,'multiline':False]
['text':' Command','line_number':312,'multiline':False]
['text':' Post-condition: valid-pod and agnhost-primary PODs are created','line_number':315,'multiline':False]
['text':'## Delete multiple PODs at once','line_number':318,'multiline':False]
['text':' Pre-condition: valid-pod and agnhost-primary PODs exist','line_number':319,'multiline':False]
['text':' Command','line_number':321,'multiline':False]
['text':' delete multiple pods at once','line_number':322,'multiline':False]
['text':' Post-condition: no POD exists','line_number':323,'multiline':False]
['text':'## Create valid-pod POD','line_number':326,'multiline':False]
['text':' Pre-condition: no POD exists','line_number':327,'multiline':False]
['text':' Command','line_number':330,'multiline':False]
['text':' Post-condition: valid-pod POD is created','line_number':332,'multiline':False]
['text':'## Dry-run label the valid-pod POD','line_number':335,'multiline':False]
['text':' Pre-condition: valid-pod is not labelled','line_number':336,'multiline':False]
['text':' Command','line_number':338,'multiline':False]
['text':' Post-condition: valid-pod is not labelled','line_number':341,'multiline':False]
['text':'## Label the valid-pod POD','line_number':344,'multiline':False]
['text':' Pre-condition: valid-pod is not labelled','line_number':345,'multiline':False]
['text':' Command','line_number':347,'multiline':False]
['text':' Post-condition: valid-pod is labelled','line_number':349,'multiline':False]
['text':'## Label the valid-pod POD with empty label value','line_number':352,'multiline':False]
['text':' Pre-condition: valid-pod does not have label "emptylabel"','line_number':353,'multiline':False]
['text':' Command','line_number':355,'multiline':False]
['text':' Post-condition: valid pod contains "emptylabel" with no value','line_number':357,'multiline':False]
['text':'## Dry-run annotate the valid-pod POD with empty annotation value','line_number':360,'multiline':False]
['text':' Pre-condition: valid-pod does not have annotation "emptyannotation"','line_number':361,'multiline':False]
['text':' Command','line_number':363,'multiline':False]
['text':' Post-condition: valid-pod does not have annotation "emptyannotation"','line_number':366,'multiline':False]
['text':'## Annotate the valid-pod POD with empty annotation value','line_number':369,'multiline':False]
['text':' Pre-condition: valid-pod does not have annotation "emptyannotation"','line_number':370,'multiline':False]
['text':' Command','line_number':372,'multiline':False]
['text':' Post-condition: valid pod contains "emptyannotation" with no value','line_number':374,'multiline':False]
['text':' pod has field for kubectl annotate field manager','line_number':376,'multiline':False]
['text':'## Record label change','line_number':380,'multiline':False]
['text':' Pre-condition: valid-pod does not have record annotation','line_number':381,'multiline':False]
['text':' Command','line_number':383,'multiline':False]
['text':' Post-condition: valid-pod has record annotation','line_number':385,'multiline':False]
['text':' pod has field for kubectl label field manager','line_number':387,'multiline':False]
['text':'## Do not record label change','line_number':391,'multiline':False]
['text':' Command','line_number':392,'multiline':False]
['text':' Post-condition: valid-pod's record annotation still contains command with --record=true','line_number':394,'multiline':False]
['text':'## Record label change with specified flag and previous change already recorded','line_number':397,'multiline':False]
['text':'## we are no longer tricked by data from another user into revealing more information about our client','line_number':398,'multiline':False]
['text':' Command','line_number':399,'multiline':False]
['text':' Post-condition: valid-pod's record annotation contains new change','line_number':401,'multiline':False]
['text':'## Delete POD by label','line_number':405,'multiline':False]
['text':' Pre-condition: valid-pod POD exists','line_number':406,'multiline':False]
['text':' Command','line_number':408,'multiline':False]
['text':' Post-condition: valid-pod POD doesn't exist','line_number':410,'multiline':False]
['text':'## Create pod-with-precision POD','line_number':413,'multiline':False]
['text':' Pre-condition: no POD is running','line_number':414,'multiline':False]
['text':' Command','line_number':416,'multiline':False]
['text':' Post-condition: valid-pod POD is running','line_number':418,'multiline':False]
['text':'# Patch preserves precision','line_number':421,'multiline':False]
['text':' Command','line_number':422,'multiline':False]
['text':' Post-condition: pod-with-precision POD has patched annotation','line_number':424,'multiline':False]
['text':' Command','line_number':426,'multiline':False]
['text':' Post-condition: pod-with-precision POD has label','line_number':428,'multiline':False]
['text':' Command','line_number':430,'multiline':False]
['text':' Post-condition: pod-with-precision POD has annotation','line_number':432,'multiline':False]
['text':' Cleanup','line_number':434,'multiline':False]
['text':'## Annotate POD YAML file locally without effecting the live pod.','line_number':437,'multiline':False]
['text':' Command','line_number':439,'multiline':False]
['text':' Pre-condition: annotationkey is annotationvalue','line_number':442,'multiline':False]
['text':' Command','line_number':445,'multiline':False]
['text':' Post-condition: annotationkey is still annotationvalue in the live pod, but command output is the new value','line_number':449,'multiline':False]
['text':' Cleanup','line_number':453,'multiline':False]
['text':'## Create valid-pod POD','line_number':456,'multiline':False]
['text':' Pre-condition: no services and no rcs exist','line_number':457,'multiline':False]
['text':'# kubectl create --edit can update the label filed of multiple resources. tmp-editor.sh is a fake editor','line_number':460,'multiline':False]
['text':' Command','line_number':464,'multiline':False]
['text':' Post-condition: service named modified and rc named modified are created','line_number':466,'multiline':False]
['text':' resources have field manager for kubectl create','line_number':469,'multiline':False]
['text':' Clean up','line_number':474,'multiline':False]
['text':' Pre-condition: no services and no rcs exist','line_number':478,'multiline':False]
['text':' Command','line_number':481,'multiline':False]
['text':' Post-condition: service named modified and rc named modified are created','line_number':483,'multiline':False]
['text':' Clean up','line_number':486,'multiline':False]
['text':'# kubectl create --edit won't create anything if user makes no changes','line_number':491,'multiline':False]
['text':'# Create valid-pod POD','line_number':494,'multiline':False]
['text':' Pre-condition: no POD exists','line_number':495,'multiline':False]
['text':' Command','line_number':497,'multiline':False]
['text':' Post-condition: valid-pod POD is created','line_number':499,'multiline':False]
['text':'# Patch can modify a local object','line_number':502,'multiline':False]
['text':'# Patch fails with type restore error and exit code 1','line_number':505,'multiline':False]
['text':'# Patch exits with error message "patched (no change)" and exit code 0 when no-op occurs','line_number':509,'multiline':False]
['text':'# Patch pod can change image','line_number':513,'multiline':False]
['text':' Command','line_number':514,'multiline':False]
['text':' Post-condition: valid-pod POD has image nginx','line_number':516,'multiline':False]
['text':' Post-condition: valid-pod has the record annotation','line_number':518,'multiline':False]
['text':' prove that patch can use different types','line_number':520,'multiline':False]
['text':' Post-condition: valid-pod POD has image nginx','line_number':522,'multiline':False]
['text':' prove that patch can use different types','line_number':524,'multiline':False]
['text':' Post-condition: valid-pod POD has image nginx','line_number':526,'multiline':False]
['text':' Dry-run change image','line_number':528,'multiline':False]
['text':' Post-condition: valid-pod POD has image nginx','line_number':531,'multiline':False]
['text':' prove that yaml input works too','line_number':533,'multiline':False]
['text':' Post-condition: valid-pod POD has image nginx','line_number':536,'multiline':False]
['text':'# Patch pod from JSON can change image','line_number':538,'multiline':False]
['text':' Command','line_number':539,'multiline':False]
['text':' Post-condition: valid-pod POD has expected image','line_number':541,'multiline':False]
['text':' pod has field for kubectl patch field manager','line_number':544,'multiline':False]
['text':'# If resourceVersion is specified in the patch, it will be treated as a precondition, i.e., if the resourceVersion is different from that is stored in the server, the Patch should be rejected','line_number':548,'multiline':False]
['text':'# If the resourceVersion is the same as the one stored in the server, the patch will be applied.','line_number':550,'multiline':False]
['text':' Command','line_number':551,'multiline':False]
['text':' Needs to retry because other party may change the resource.','line_number':552,'multiline':False]
['text':'# If the resourceVersion is the different from the one stored in the server, the patch will be rejected.','line_number':567,'multiline':False]
['text':' Command','line_number':570,'multiline':False]
['text':' Post-condition: should get an error reporting the conflict','line_number':572,'multiline':False]
['text':'# --force replace pod can change other field, e.g., spec.container.name','line_number':581,'multiline':False]
['text':' Command','line_number':582,'multiline':False]
['text':' Post-condition: spec.container.name = "replaced-k8s-serve-hostname"','line_number':585,'multiline':False]
['text':' Pod has field manager for kubectl replace','line_number':588,'multiline':False]
['text':'# check replace --grace-period requires --force','line_number':592,'multiline':False]
['text':'# check replace --timeout requires --force','line_number':596,'multiline':False]
['text':'cleaning','line_number':600,'multiline':False]
['text':'# replace of a cluster scoped resource can succeed','line_number':603,'multiline':False]
['text':' Pre-condition: a node exists','line_number':604,'multiline':False]
['text':' Dry-run command','line_number':616,'multiline':False]
['text':' Command','line_number':641,'multiline':False]
['text':' Post-condition: the node command succeeds','line_number':654,'multiline':False]
['text':'# kubectl edit can update the image field of a POD. tmp-editor.sh is a fake editor','line_number':658,'multiline':False]
['text':' Pre-condition: valid-pod POD has image nginx','line_number':661,'multiline':False]
['text':' Post-condition: valid-pod POD has image registry.k8s.io/serve_hostname','line_number':664,'multiline':False]
['text':' pod has field for kubectl edit field manager','line_number':666,'multiline':False]
['text':' cleaning','line_number':669,'multiline':False]
['text':'# kubectl edit should work on Windows','line_number':672,'multiline':False]
['text':'## Label POD YAML file locally without effecting the live pod.','line_number':679,'multiline':False]
['text':' Pre-condition: name is valid-pod','line_number':680,'multiline':False]
['text':' Command','line_number':682,'multiline':False]
['text':' Post-condition: name is still valid-pod in the live pod, but command output is the new value','line_number':685,'multiline':False]
['text':'## Overwriting an existing label is not permitted','line_number':689,'multiline':False]
['text':' Pre-condition: name is valid-pod','line_number':690,'multiline':False]
['text':' Command','line_number':692,'multiline':False]
['text':' Post-condition: name is still valid-pod','line_number':694,'multiline':False]
['text':'## --overwrite must be used to overwrite existing label, can be applied to all resources','line_number':697,'multiline':False]
['text':' Pre-condition: name is valid-pod','line_number':698,'multiline':False]
['text':' Command','line_number':700,'multiline':False]
['text':' Post-condition: name is valid-pod-super-sayan','line_number':702,'multiline':False]
['text':'## Delete POD by label','line_number':705,'multiline':False]
['text':' Pre-condition: valid-pod POD exists','line_number':706,'multiline':False]
['text':' Command','line_number':708,'multiline':False]
['text':' Post-condition: valid-pod POD doesn't exist','line_number':710,'multiline':False]
['text':'## Create two PODs from 1 yaml file','line_number':713,'multiline':False]
['text':' Pre-condition: no POD exists','line_number':714,'multiline':False]
['text':' Command','line_number':717,'multiline':False]
['text':' Post-condition: redis-master and valid-pod PODs exist','line_number':719,'multiline':False]
['text':'## Delete two PODs from 1 yaml file','line_number':722,'multiline':False]
['text':' Pre-condition: redis-master and valid-pod PODs exist','line_number':723,'multiline':False]
['text':' Command','line_number':725,'multiline':False]
['text':' Post-condition: no PODs exist','line_number':727,'multiline':False]
['text':'# kubectl apply should update configuration annotations only if apply is already called','line_number':730,'multiline':False]
['text':'# 1. kubectl create doesn't set the annotation','line_number':731,'multiline':False]
['text':' Pre-Condition: no POD exists','line_number':732,'multiline':False]
['text':' Command: create a pod "test-pod"','line_number':735,'multiline':False]
['text':' Post-Condition: pod "test-pod" is created','line_number':737,'multiline':False]
['text':' Post-Condition: pod "test-pod" doesn't have configuration annotation','line_number':739,'multiline':False]
['text':'# 2. kubectl replace doesn't set the annotation','line_number':741,'multiline':False]
['text':' Command: replace the pod "test-pod"','line_number':743,'multiline':False]
['text':' Post-Condition: pod "test-pod" is replaced','line_number':745,'multiline':False]
['text':' Post-Condition: pod "test-pod" doesn't have configuration annotation','line_number':747,'multiline':False]
['text':'# 3. kubectl apply does set the annotation','line_number':749,'multiline':False]
['text':' Command: apply the pod "test-pod"','line_number':750,'multiline':False]
['text':' Post-Condition: pod "test-pod" is applied','line_number':752,'multiline':False]
['text':' Post-Condition: pod "test-pod" has configuration annotation','line_number':754,'multiline':False]
['text':'# 4. kubectl replace updates an existing annotation','line_number':757,'multiline':False]
['text':' Command: replace the pod "test-pod"','line_number':759,'multiline':False]
['text':' Post-Condition: pod "test-pod" is replaced','line_number':761,'multiline':False]
['text':' Post-Condition: pod "test-pod" has configuration annotation, and it's updated (different from the annotation when it's applied)','line_number':763,'multiline':False]
['text':' Clean up','line_number':767,'multiline':False]
['text':' runs specific kubectl create tests','line_number':775,'multiline':False]
['text':'## Create generic secret with explicit namespace','line_number':780,'multiline':False]
['text':' Pre-condition: secret 'mysecret' does not exist','line_number':781,'multiline':False]
['text':' Command','line_number':784,'multiline':False]
['text':' Post-condition: mysecret still not created since --dry-run was used','line_number':787,'multiline':False]
['text':' Output from 'create' command should contain the specified --namespace value','line_number':788,'multiline':False]
['text':' Command','line_number':791,'multiline':False]
['text':' Post-condition: jsonpath for .metadata.namespace should be empty for object since --namespace was not explicitly specified','line_number':793,'multiline':False]
['text':' check to make sure that replace correctly PUTs to a URL','line_number':797,'multiline':False]
['text':' the message should show the body returned which will include a UID not present in the input','line_number':800,'multiline':False]
['text':' if the PUT was well-formed, the server will now have a key and value we can retrieve on GET','line_number':802,'multiline':False]
['text':' if DELETE raw works correctly, this will delete the configmap','line_number':806,'multiline':False]
['text':' Ensure dry run succeeds and includes kind, apiVersion and data, and doesn't require a server connection','line_number':822,'multiline':False]
['text':'## Create a new namespace','line_number':829,'multiline':False]
['text':' Pre-condition: the test-secrets namespace does not exist','line_number':830,'multiline':False]
['text':' Command','line_number':832,'multiline':False]
['text':' Post-condition: namespace 'test-secrets' is created.','line_number':834,'multiline':False]
['text':'## Create a generic secret in a specific namespace','line_number':837,'multiline':False]
['text':' Pre-condition: no SECRET exists','line_number':838,'multiline':False]
['text':' Command','line_number':840,'multiline':False]
['text':' Post-condition: secret exists and has expected values','line_number':842,'multiline':False]
['text':' Describe command should respect the chunk size parameter','line_number':846,'multiline':False]
['text':' Clean-up','line_number':848,'multiline':False]
['text':'## Create a docker-registry secret in a specific namespace','line_number':851,'multiline':False]
['text':' Pre-condition: no SECRET exists','line_number':855,'multiline':False]
['text':' Command','line_number':857,'multiline':False]
['text':' Post-condition: secret exists and has expected values','line_number':859,'multiline':False]
['text':' Clean-up','line_number':863,'multiline':False]
['text':'## Create a docker-registry secret in a specific namespace with docker config file','line_number':866,'multiline':False]
['text':' Pre-condition: no SECRET exists','line_number':870,'multiline':False]
['text':' Command','line_number':872,'multiline':False]
['text':' Post-condition: secret exists and has expected values','line_number':874,'multiline':False]
['text':' Clean-up','line_number':878,'multiline':False]
['text':'## Create a tls secret','line_number':881,'multiline':False]
['text':' Pre-condition: no SECRET exists','line_number':885,'multiline':False]
['text':' Command','line_number':887,'multiline':False]
['text':' Clean-up','line_number':891,'multiline':False]
['text':' Command with process substitution','line_number':894,'multiline':False]
['text':' Clean-up','line_number':898,'multiline':False]
['text':' Create a secret using stringData','line_number':901,'multiline':False]
['text':' Post-condition: secret-string-data secret is created with expected data, merged/overridden data from stringData, and a cleared stringData field','line_number':918,'multiline':False]
['text':' Clean up','line_number':922,'multiline':False]
['text':'## Create a secret using output flags','line_number':925,'multiline':False]
['text':' Pre-condition: no secret exists','line_number':929,'multiline':False]
['text':' Command','line_number':931,'multiline':False]
['text':'# Clean-up','line_number':933,'multiline':False]
['text':' Clean up','line_number':935,'multiline':False]
['text':'## Create a new namespace','line_number':949,'multiline':False]
['text':' Pre-condition: the test-service-accounts namespace does not exist','line_number':950,'multiline':False]
['text':' Command','line_number':952,'multiline':False]
['text':' Post-condition: namespace 'test-service-accounts' is created.','line_number':954,'multiline':False]
['text':'## Create a service account in a specific namespace','line_number':957,'multiline':False]
['text':' Pre-condition: service account does not exist','line_number':958,'multiline':False]
['text':' Dry-run command','line_number':960,'multiline':False]
['text':' Command','line_number':964,'multiline':False]
['text':' Post-condition: secret exists and has expected values','line_number':966,'multiline':False]
['text':' Describe command should respect the chunk size parameter','line_number':968,'multiline':False]
['text':' Clean-up','line_number':970,'multiline':False]
['text':' Clean up','line_number':972,'multiline':False]
['text':' switch back to the default namespace','line_number':983,'multiline':False]
['text':'## Create redis-master service from JSON','line_number':987,'multiline':False]
['text':' Pre-condition: Only the default kubernetes services exist','line_number':988,'multiline':False]
['text':' Command','line_number':990,'multiline':False]
['text':' Post-condition: redis-master service exists','line_number':992,'multiline':False]
['text':' Describe command should print detailed information','line_number':994,'multiline':False]
['text':' Describe command should print events information by default','line_number':996,'multiline':False]
['text':' Describe command should not print events information when show-events=false','line_number':998,'multiline':False]
['text':' Describe command should print events information when show-events=true','line_number':1000,'multiline':False]
['text':' Describe command (resource only) should print detailed information','line_number':1002,'multiline':False]
['text':' Describe command should print events information by default','line_number':1004,'multiline':False]
['text':' Describe command should not print events information when show-events=false','line_number':1006,'multiline':False]
['text':' Describe command should print events information when show-events=true','line_number':1008,'multiline':False]
['text':' Describe command should respect the chunk size parameter','line_number':1010,'multiline':False]
['text':'## set selector','line_number':1013,'multiline':False]
['text':' prove role=master','line_number':1014,'multiline':False]
['text':' Set selector of a local file without talking to the server','line_number':1017,'multiline':False]
['text':' Set command to change the selector.','line_number':1020,'multiline':False]
['text':' prove role=padawan','line_number':1022,'multiline':False]
['text':' Set command to reset the selector back to the original one.','line_number':1024,'multiline':False]
['text':' prove role=master','line_number':1026,'multiline':False]
['text':' Show dry-run works on running selector','line_number':1028,'multiline':False]
['text':' --resource-version=<current-resource-version> succeeds','line_number':1035,'multiline':False]
['text':' --resource-version=<non-current-resource-version> fails','line_number':1038,'multiline':False]
['text':'## Dump current redis-master service','line_number':1042,'multiline':False]
['text':'## Delete redis-master-service by id','line_number':1045,'multiline':False]
['text':' Pre-condition: redis-master service exists','line_number':1046,'multiline':False]
['text':' Command','line_number':1048,'multiline':False]
['text':' Post-condition: Only the default kubernetes services exist','line_number':1053,'multiline':False]
['text':'## Create redis-master-service from dumped JSON','line_number':1056,'multiline':False]
['text':' Pre-condition: Only the default kubernetes services exist','line_number':1057,'multiline':False]
['text':' Command','line_number':1059,'multiline':False]
['text':' Post-condition: redis-master service is created','line_number':1061,'multiline':False]
['text':'## Create redis-master-v1-test service','line_number':1064,'multiline':False]
['text':' Pre-condition: redis-master-service service exists','line_number':1065,'multiline':False]
['text':' Command','line_number':1067,'multiline':False]
['text':' Post-condition: service-v1-test service is created','line_number':1086,'multiline':False]
['text':'## Identity','line_number':1089,'multiline':False]
['text':'## Delete services by id','line_number':1092,'multiline':False]
['text':' Pre-condition: service-v1-test exists','line_number':1093,'multiline':False]
['text':' Command','line_number':1095,'multiline':False]
['text':' Post-condition: Only the default kubernetes services exist','line_number':1101,'multiline':False]
['text':'## Create two services','line_number':1104,'multiline':False]
['text':' Pre-condition: Only the default kubernetes services exist','line_number':1105,'multiline':False]
['text':' Command','line_number':1107,'multiline':False]
['text':' Post-condition: redis-master and redis-slave services are created','line_number':1110,'multiline':False]
['text':'## Custom columns can be specified','line_number':1113,'multiline':False]
['text':' Pre-condition: generate output using custom columns','line_number':1114,'multiline':False]
['text':' Post-condition: should contain name column','line_number':1116,'multiline':False]
['text':'## Delete multiple services at once','line_number':1119,'multiline':False]
['text':' Pre-condition: redis-master and redis-slave services exist','line_number':1120,'multiline':False]
['text':' Command','line_number':1122,'multiline':False]
['text':' delete multiple services at once','line_number':1123,'multiline':False]
['text':' Post-condition: Only the default kubernetes services exist','line_number':1127,'multiline':False]
['text':'## Create an ExternalName service','line_number':1130,'multiline':False]
['text':' Pre-condition: Only the default kubernetes service exist','line_number':1131,'multiline':False]
['text':' Dry-run command','line_number':1133,'multiline':False]
['text':' Command','line_number':1137,'multiline':False]
['text':' Post-condition: beep-boop service is created','line_number':1139,'multiline':False]
['text':'## Delete beep-boop service by id','line_number':1142,'multiline':False]
['text':' Pre-condition: beep-boop service exists','line_number':1143,'multiline':False]
['text':' Command','line_number':1145,'multiline':False]
['text':' Post-condition: Only the default kubernetes services exist','line_number':1150,'multiline':False]
['text':'## Create pod and service','line_number':1153,'multiline':False]
['text':' Pre-condition: no pod exists','line_number':1154,'multiline':False]
['text':' Pre-condition: Only the default kubernetes services exist','line_number':1156,'multiline':False]
['text':' Dry-run command','line_number':1158,'multiline':False]
['text':' Check only the default kubernetes services exist','line_number':1161,'multiline':False]
['text':' Command','line_number':1163,'multiline':False]
['text':' Check result','line_number':1165,'multiline':False]
['text':' pod has field for kubectl run field manager','line_number':1168,'multiline':False]
['text':'## Expose pod as a new service','line_number':1172,'multiline':False]
['text':' Command','line_number':1173,'multiline':False]
['text':' Check result','line_number':1175,'multiline':False]
['text':' Service has field manager for kubectl expose','line_number':1177,'multiline':False]
['text':' Clean-Up','line_number':1181,'multiline':False]
['text':' Command','line_number':1182,'multiline':False]
['text':'## Create and stop controller, make sure it doesn't leak pods','line_number':1203,'multiline':False]
['text':' Pre-condition: no replication controller exists','line_number':1204,'multiline':False]
['text':' Command','line_number':1206,'multiline':False]
['text':' Post-condition: no pods from frontend controller','line_number':1209,'multiline':False]
['text':'## Create replication controller frontend from JSON','line_number':1212,'multiline':False]
['text':' Pre-condition: no replication controller exists','line_number':1213,'multiline':False]
['text':' Command','line_number':1215,'multiline':False]
['text':' Post-condition: frontend replication controller is created','line_number':1217,'multiline':False]
['text':' Describe command should print detailed information','line_number':1219,'multiline':False]
['text':' Describe command should print events information by default','line_number':1221,'multiline':False]
['text':' Describe command should not print events information when show-events=false','line_number':1223,'multiline':False]
['text':' Describe command should print events information when show-events=true','line_number':1225,'multiline':False]
['text':' Describe command (resource only) should print detailed information','line_number':1227,'multiline':False]
['text':' Describe command should print events information by default','line_number':1229,'multiline':False]
['text':' Describe command should not print events information when show-events=false','line_number':1231,'multiline':False]
['text':' Describe command should print events information when show-events=true','line_number':1233,'multiline':False]
['text':' Describe command should respect the chunk size parameter','line_number':1235,'multiline':False]
['text':'## Scale replication controller frontend with current-replicas and replicas','line_number':1238,'multiline':False]
['text':' Pre-condition: 3 replicas','line_number':1239,'multiline':False]
['text':' Command','line_number':1241,'multiline':False]
['text':' Post-condition: 2 replicas','line_number':1243,'multiline':False]
['text':'## Scale replication controller frontend with (wrong) current-replicas and replicas','line_number':1246,'multiline':False]
['text':' Pre-condition: 2 replicas','line_number':1247,'multiline':False]
['text':' Command','line_number':1249,'multiline':False]
['text':' Post-condition: nothing changed','line_number':1251,'multiline':False]
['text':'## Scale replication controller frontend with replicas only','line_number':1254,'multiline':False]
['text':' Pre-condition: 2 replicas','line_number':1255,'multiline':False]
['text':' Command','line_number':1257,'multiline':False]
['text':' Post-condition: 3 replicas','line_number':1259,'multiline':False]
['text':'## Scale replication controller from JSON with replicas only','line_number':1262,'multiline':False]
['text':' Pre-condition: 3 replicas','line_number':1263,'multiline':False]
['text':' Command','line_number':1265,'multiline':False]
['text':' Post-condition: 2 replicas','line_number':1267,'multiline':False]
['text':' Clean-up','line_number':1269,'multiline':False]
['text':'## Scale multiple replication controllers','line_number':1272,'multiline':False]
['text':' Command dry-run client','line_number':1275,'multiline':False]
['text':' Post-condition dry-run client: 1 replicas each','line_number':1277,'multiline':False]
['text':' Command dry-run server','line_number':1282,'multiline':False]
['text':' Post-condition dry-run server: 1 replicas each','line_number':1284,'multiline':False]
['text':' Command','line_number':1289,'multiline':False]
['text':' Post-condition: 4 replicas each','line_number':1291,'multiline':False]
['text':' Clean-up','line_number':1294,'multiline':False]
['text':'## Scale a deployment','line_number':1297,'multiline':False]
['text':' Command dry-run client','line_number':1299,'multiline':False]
['text':' Post-condition: 3 replica for nginx-deployment dry-run client','line_number':1301,'multiline':False]
['text':' Command dry-run server','line_number':1304,'multiline':False]
['text':' Post-condition: 3 replica for nginx-deployment dry-run server','line_number':1306,'multiline':False]
['text':' Command','line_number':1309,'multiline':False]
['text':' Post-condition: 1 replica for nginx-deployment','line_number':1311,'multiline':False]
['text':' Clean-up','line_number':1313,'multiline':False]
['text':'## Scale a deployment with piped input','line_number':1316,'multiline':False]
['text':' Command','line_number':1318,'multiline':False]
['text':' Post-condition: 2 replica for nginx-deployment','line_number':1320,'multiline':False]
['text':' Clean-up','line_number':1322,'multiline':False]
['text':'## Expose deployments by creating a service','line_number':1325,'multiline':False]
['text':' Uses deployment selectors for created service','line_number':1326,'multiline':False]
['text':' Post-condition: service created for deployment.','line_number':1328,'multiline':False]
['text':' Clean-up','line_number':1330,'multiline':False]
['text':' Contains no selectors, should fail.','line_number':1332,'multiline':False]
['text':' Post-condition: service created for deployment.','line_number':1334,'multiline':False]
['text':'## Expose a deployment as a service','line_number':1337,'multiline':False]
['text':' Pre-condition: 3 replicas','line_number':1339,'multiline':False]
['text':' Command','line_number':1341,'multiline':False]
['text':' Post-condition: service exists and exposes deployment port (80)','line_number':1343,'multiline':False]
['text':' Clean-up','line_number':1345,'multiline':False]
['text':'## Expose replication controller as service','line_number':1348,'multiline':False]
['text':' Pre-condition: 3 replicas','line_number':1350,'multiline':False]
['text':' Command','line_number':1352,'multiline':False]
['text':' Post-condition: service exists and the port is unnamed','line_number':1354,'multiline':False]
['text':' Command','line_number':1356,'multiline':False]
['text':' Post-condition: service exists and the port is unnamed','line_number':1358,'multiline':False]
['text':' Command','line_number':1360,'multiline':False]
['text':' Post-condition: service exists and the port is unnamed','line_number':1363,'multiline':False]
['text':' Verify that expose service works without specifying a port.','line_number':1365,'multiline':False]
['text':' Post-condition: service exists with the same port as the original service.','line_number':1367,'multiline':False]
['text':' Cleanup services','line_number':1369,'multiline':False]
['text':'## Expose negative invalid resource test','line_number':1373,'multiline':False]
['text':' Pre-condition: don't need','line_number':1374,'multiline':False]
['text':' Command','line_number':1375,'multiline':False]
['text':' Post-condition: the error message has "cannot expose" string','line_number':1377,'multiline':False]
['text':'## Try to generate a service with invalid name (exceeding maximum valid size)','line_number':1380,'multiline':False]
['text':' Pre-condition: use --name flag','line_number':1381,'multiline':False]
['text':' Post-condition: should fail due to invalid name','line_number':1383,'multiline':False]
['text':' Pre-condition: default run without --name flag; should succeed by truncating the inherited name','line_number':1385,'multiline':False]
['text':' Post-condition: inherited name from pod has been truncated','line_number':1387,'multiline':False]
['text':' Clean-up','line_number':1389,'multiline':False]
['text':'## Expose multiport object as a new service','line_number':1392,'multiline':False]
['text':' Pre-condition: don't use --port flag','line_number':1393,'multiline':False]
['text':' Post-condition: expose succeeded','line_number':1395,'multiline':False]
['text':' Post-condition: generated service has both ports from the exposed pod','line_number':1397,'multiline':False]
['text':' Clean-up','line_number':1400,'multiline':False]
['text':'## Delete replication controller with id','line_number':1403,'multiline':False]
['text':' Pre-condition: frontend replication controller exists','line_number':1404,'multiline':False]
['text':' Command','line_number':1406,'multiline':False]
['text':' Post-condition: no replication controller exists','line_number':1408,'multiline':False]
['text':'## Create two replication controllers','line_number':1411,'multiline':False]
['text':' Pre-condition: no replication controller exists','line_number':1412,'multiline':False]
['text':' Command','line_number':1414,'multiline':False]
['text':' Post-condition: frontend and redis-slave','line_number':1417,'multiline':False]
['text':'## Delete multiple controllers at once','line_number':1420,'multiline':False]
['text':' Pre-condition: frontend and redis-slave','line_number':1421,'multiline':False]
['text':' Command','line_number':1423,'multiline':False]
['text':' delete multiple controllers at once','line_number':1424,'multiline':False]
['text':' Post-condition: no replication controller exists','line_number':1425,'multiline':False]
['text':'## Auto scale replication controller','line_number':1428,'multiline':False]
['text':' Pre-condition: no replication controller exists','line_number':1429,'multiline':False]
['text':' Command','line_number':1431,'multiline':False]
['text':' autoscale 1~2 pods, CPU utilization 70%, rc specified by file','line_number':1434,'multiline':False]
['text':' autoscale 2~3 pods, no CPU utilization specified, rc specified by name','line_number':1438,'multiline':False]
['text':' autoscale without specifying --max should fail','line_number':1442,'multiline':False]
['text':' Clean up','line_number':1444,'multiline':False]
['text':'# Set resource limits/request of a deployment','line_number':1447,'multiline':False]
['text':' Pre-condition: no deployment exists','line_number':1448,'multiline':False]
['text':' Set resources of a local file without talking to the server','line_number':1450,'multiline':False]
['text':' Create a deployment','line_number':1453,'multiline':False]
['text':' Set the deployment's cpu limits','line_number':1458,'multiline':False]
['text':' Set a non-existing container should fail','line_number':1462,'multiline':False]
['text':' Set the limit of a specific container in deployment','line_number':1464,'multiline':False]
['text':' Set limits/requests of a deployment specified by a file','line_number':1468,'multiline':False]
['text':' Show dry-run works on running deployments','line_number':1473,'multiline':False]
['text':' Clean up','line_number':1480,'multiline':False]
['text':'## Create a new namespace','line_number':1492,'multiline':False]
['text':' Pre-condition: test namespace does not exist','line_number':1493,'multiline':False]
['text':' Dry-run command','line_number':1496,'multiline':False]
['text':' Command','line_number':1501,'multiline':False]
['text':' Post-condition: namespace 'my-namespace' is created.','line_number':1503,'multiline':False]
['text':' Describe command should respect the chunk size parameter','line_number':1505,'multiline':False]
['text':' Clean up','line_number':1507,'multiline':False]
['text':' make sure that wait properly waits for finalization','line_number':1509,'multiline':False]
['text':'## Quota','line_number':1520,'multiline':False]
['text':' Dry-run command','line_number':1524,'multiline':False]
['text':' Command','line_number':1528,'multiline':False]
['text':' Describe command should respect the chunk size parameter','line_number':1531,'multiline':False]
['text':' Clean up','line_number':1533,'multiline':False]
['text':'#####################','line_number':1537,'multiline':False]
['text':' Pods in Namespaces #','line_number':1538,'multiline':False]
['text':'#####################','line_number':1539,'multiline':False]
['text':'## Create a new namespace','line_number':1542,'multiline':False]
['text':' Pre-condition: the other namespace does not exist','line_number':1543,'multiline':False]
['text':' Command','line_number':1545,'multiline':False]
['text':' Post-condition: namespace 'other' is created.','line_number':1547,'multiline':False]
['text':'## Create POD valid-pod in specific namespace','line_number':1550,'multiline':False]
['text':' Pre-condition: no POD exists','line_number':1551,'multiline':False]
['text':' Command','line_number':1553,'multiline':False]
['text':' Post-condition: valid-pod POD is created','line_number':1555,'multiline':False]
['text':' Post-condition: verify shorthand `-n other` has the same results as `--namespace=other`','line_number':1557,'multiline':False]
['text':' Post-condition: a resource cannot be retrieved by name across all namespaces','line_number':1559,'multiline':False]
['text':'## Delete POD valid-pod in specific namespace','line_number':1563,'multiline':False]
['text':' Pre-condition: valid-pod POD exists','line_number':1564,'multiline':False]
['text':' Command','line_number':1566,'multiline':False]
['text':' Post-condition: valid-pod POD doesn't exist','line_number':1568,'multiline':False]
['text':' Clean up','line_number':1570,'multiline':False]
['text':' Describe command should print events information by default','line_number':1587,'multiline':False]
['text':' Describe command should not print events information when show-events=false','line_number':1589,'multiline':False]
['text':' Describe command should print events information when show-events=true','line_number':1591,'multiline':False]
['text':' Describe command (resource only) should print detailed information','line_number':1593,'multiline':False]
['text':' Describe command should print events information by default','line_number':1595,'multiline':False]
['text':' Describe command should not print events information when show-events=false','line_number':1597,'multiline':False]
['text':' Describe command should print events information when show-events=true','line_number':1599,'multiline':False]
['text':' Describe command should respect the chunk size parameter','line_number':1601,'multiline':False]
['text':'## kubectl patch update can mark node unschedulable','line_number':1604,'multiline':False]
['text':' Pre-condition: node is schedulable','line_number':1605,'multiline':False]
['text':' Post-condition: node is unschedulable','line_number':1608,'multiline':False]
['text':' Post-condition: node is schedulable','line_number':1611,'multiline':False]
['text':' check webhook token authentication endpoint, kubectl doesn't actually display the returned object so this isn't super useful','line_number':1614,'multiline':False]
['text':' but it proves that works','line_number':1615,'multiline':False]
['text':'## Create PODTEMPLATE','line_number':1629,'multiline':False]
['text':' Pre-condition: no PODTEMPLATE','line_number':1630,'multiline':False]
['text':' Command','line_number':1632,'multiline':False]
['text':' Post-condition: nginx PODTEMPLATE is available','line_number':1634,'multiline':False]
['text':'## Printing pod templates works','line_number':1637,'multiline':False]
['text':'## Delete nginx pod template by name','line_number':1641,'multiline':False]
['text':' Pre-condition: nginx pod template is available','line_number':1642,'multiline':False]
['text':' Describe command should respect the chunk size parameter','line_number':1644,'multiline':False]
['text':' Command','line_number':1646,'multiline':False]
['text':' Post-condition: No templates exist','line_number':1648,'multiline':False]
