['text':'!/usr/bin/env bash','line_number':1,'multiline':False]
['text':' Copyright 2017 The Kubernetes Authors.','line_number':3,'multiline':False]
['text':'','line_number':4,'multiline':False]
['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':5,'multiline':False]
['text':' you may not use this file except in compliance with the License.','line_number':6,'multiline':False]
['text':' You may obtain a copy of the License at','line_number':7,'multiline':False]
['text':'','line_number':8,'multiline':False]
['text':'     http://www.apache.org/licenses/LICENSE-2.0','line_number':9,'multiline':False]
['text':'','line_number':10,'multiline':False]
['text':' Unless required by applicable law or agreed to in writing, software','line_number':11,'multiline':False]
['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':12,'multiline':False]
['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':13,'multiline':False]
['text':' See the License for the specific language governing permissions and','line_number':14,'multiline':False]
['text':' limitations under the License.','line_number':15,'multiline':False]
['text':' A library of helper functions and constant for the local config.','line_number':17,'multiline':False]
['text':' Use the config file specified in $KUBE_CONFIG_FILE, or default to','line_number':19,'multiline':False]
['text':' config-default.sh.','line_number':20,'multiline':False]
['text':' If the master image is not set, we use the latest image based on image','line_number':56,'multiline':False]
['text':' family.','line_number':57,'multiline':False]
['text':' Sets node image based on the specified os distro. Currently this function only','line_number':67,'multiline':False]
['text':' supports gci and debian.','line_number':68,'multiline':False]
['text':'','line_number':69,'multiline':False]
['text':' Requires:','line_number':70,'multiline':False]
['text':'   NODE_OS_DISTRIBUTION','line_number':71,'multiline':False]
['text':' Sets:','line_number':72,'multiline':False]
['text':'   DEFAULT_GCI_PROJECT','line_number':73,'multiline':False]
['text':'   NODE_IMAGE','line_number':74,'multiline':False]
['text':'   NODE_IMAGE_PROJECT','line_number':75,'multiline':False]
['text':' If the node image is not set, we use the latest image based on image','line_number':83,'multiline':False]
['text':' family.','line_number':84,'multiline':False]
['text':' Otherwise, we respect whatever is set by the user.','line_number':85,'multiline':False]
['text':' Requires:','line_number':99,'multiline':False]
['text':'   WINDOWS_NODE_OS_DISTRIBUTION','line_number':100,'multiline':False]
['text':' Sets:','line_number':101,'multiline':False]
['text':'   WINDOWS_NODE_IMAGE_PROJECT','line_number':102,'multiline':False]
['text':'   WINDOWS_NODE_IMAGE','line_number':103,'multiline':False]
['text':' Verify cluster autoscaler configuration.','line_number':125,'multiline':False]
['text':' These prefixes must not be prefixes of each other, so that they can be used to','line_number':137,'multiline':False]
['text':' detect mutually exclusive sets of nodes.','line_number':138,'multiline':False]
['text':' NODE_TAG (expected to be) defined by caller','line_number':142,'multiline':False]
['text':' shellcheck disable=SC2153','line_number':143,'multiline':False]
['text':' How long (in seconds) to wait for cluster initialization.','line_number':151,'multiline':False]
['text':' This function returns the first string before the comma','line_number':158,'multiline':False]
['text':' Verify prereqs','line_number':163,'multiline':False]
['text':' we use openssl to generate certs','line_number':167,'multiline':False]
['text':' ensure a version supported by easyrsa is installed','line_number':170,'multiline':False]
['text':' We want this print just the way it is','line_number':174,'multiline':False]
['text':' shellcheck disable=SC2016','line_number':175,'multiline':False]
['text':' we use gcloud to create the cluster, gsutil to stage binaries and data','line_number':181,'multiline':False]
['text':' Use the gcloud defaults to find the project.  If it is already set in the','line_number':192,'multiline':False]
['text':' environment then go with that.','line_number':193,'multiline':False]
['text':'','line_number':194,'multiline':False]
['text':' Vars set:','line_number':195,'multiline':False]
['text':'   PROJECT','line_number':196,'multiline':False]
['text':'   NETWORK_PROJECT','line_number':197,'multiline':False]
['text':'   PROJECT_REPORTED','line_number':198,'multiline':False]
['text':' Use gsutil to get the md5 hash for a particular tar','line_number':219,'multiline':False]
['text':' location_tar could be local or in the cloud','line_number':221,'multiline':False]
['text':' local tar_location example ./_output/release-tars/kubernetes-server-linux-amd64.tar.gz','line_number':222,'multiline':False]
['text':' cloud tar_location example gs://kubernetes-staging-PROJECT/kubernetes-devel/kubernetes-server-linux-amd64.tar.gz','line_number':223,'multiline':False]
['text':'parse the output and return the md5 hash','line_number':225,'multiline':False]
['text':'the sed command at the end removes whitespace','line_number':226,'multiline':False]
['text':' Copy a release tar and its accompanying hash.','line_number':231,'multiline':False]
['text':'check whether this tar alread exists and has the same hash','line_number':239,'multiline':False]
['text':'if it matches, then don't bother uploading it again','line_number':240,'multiline':False]
['text':'remote_tar_md5 checks the remote location for the existing tarball and its md5','line_number':242,'multiline':False]
['text':'staging_path example gs://kubernetes-staging-PROJECT/kubernetes-devel','line_number':243,'multiline':False]
['text':'basename_tar example kubernetes-server-linux-amd64.tar.gz','line_number':244,'multiline':False]
['text':'local_tar_md5 checks the remote location for the existing tarball and its md5 hash','line_number':247,'multiline':False]
['text':'tar example ./_output/release-tars/kubernetes-server-linux-amd64.tar.gz','line_number':248,'multiline':False]
['text':' Given the cluster zone, return the list of regional GCS release','line_number':263,'multiline':False]
['text':' bucket suffixes for the release in preference order. GCS doesn't','line_number':264,'multiline':False]
['text':' give us an API for this, so we hardcode it.','line_number':265,'multiline':False]
['text':'','line_number':266,'multiline':False]
['text':' Assumed vars:','line_number':267,'multiline':False]
['text':'   RELEASE_REGION_FALLBACK','line_number':268,'multiline':False]
['text':'   REGIONAL_KUBE_ADDONS','line_number':269,'multiline':False]
['text':'   ZONE','line_number':270,'multiline':False]
['text':' Vars set:','line_number':271,'multiline':False]
['text':'   PREFERRED_REGION','line_number':272,'multiline':False]
['text':' Take the local tar files and upload them to Google Storage.  They will then be','line_number':291,'multiline':False]
['text':' downloaded by the master as part of the start up script for the master.','line_number':292,'multiline':False]
['text':'','line_number':293,'multiline':False]
['text':' Assumed vars:','line_number':294,'multiline':False]
['text':'   PROJECT','line_number':295,'multiline':False]
['text':'   SERVER_BINARY_TAR','line_number':296,'multiline':False]
['text':'   KUBE_MANIFESTS_TAR','line_number':297,'multiline':False]
['text':'   ZONE','line_number':298,'multiline':False]
['text':' Vars set:','line_number':299,'multiline':False]
['text':'   SERVER_BINARY_TAR_URL','line_number':300,'multiline':False]
['text':'   SERVER_BINARY_TAR_HASH','line_number':301,'multiline':False]
['text':'   NODE_BINARY_TAR_URL','line_number':302,'multiline':False]
['text':'   NODE_BINARY_TAR_HASH','line_number':303,'multiline':False]
['text':'   KUBE_MANIFESTS_TAR_URL','line_number':304,'multiline':False]
['text':'   KUBE_MANIFESTS_TAR_HASH','line_number':305,'multiline':False]
['text':' This requires 1 million projects before the probability of collision is 50%','line_number':322,'multiline':False]
['text':' that's probably good enough for now :P','line_number':323,'multiline':False]
['text':' Ensure the buckets are created','line_number':348,'multiline':False]
['text':' Convert from gs:// URL to an https:// URL','line_number':365,'multiline':False]
['text':' Convert from gs:// URL to an https:// URL','line_number':373,'multiline':False]
['text':' Detect Linux and Windows nodes created in the instance group.','line_number':387,'multiline':False]
['text':'','line_number':388,'multiline':False]
['text':' Assumed vars:','line_number':389,'multiline':False]
['text':'   NODE_INSTANCE_PREFIX','line_number':390,'multiline':False]
['text':'   WINDOWS_NODE_INSTANCE_PREFIX','line_number':391,'multiline':False]
['text':' Vars set:','line_number':392,'multiline':False]
['text':'   NODE_NAMES','line_number':393,'multiline':False]
['text':'   INSTANCE_GROUPS','line_number':394,'multiline':False]
['text':'   WINDOWS_NODE_NAMES','line_number':395,'multiline':False]
['text':'   WINDOWS_INSTANCE_GROUPS','line_number':396,'multiline':False]
['text':' Add heapster node name to the list too (if it exists).','line_number':418,'multiline':False]
['text':' Detect the information about the minions','line_number':437,'multiline':False]
['text':'','line_number':438,'multiline':False]
['text':' Assumed vars:','line_number':439,'multiline':False]
['text':'   ZONE','line_number':440,'multiline':False]
['text':' Vars set:','line_number':441,'multiline':False]
['text':'   NODE_NAMES','line_number':442,'multiline':False]
['text':'   KUBE_NODE_IP_ADDRESSES (array)','line_number':443,'multiline':False]
['text':'NODE_NAMES[@]}; i++)); do','line_number':448,'multiline':False]
['text':' Detect the IP for the master','line_number':465,'multiline':False]
['text':'','line_number':466,'multiline':False]
['text':' Assumed vars:','line_number':467,'multiline':False]
['text':'   MASTER_NAME','line_number':468,'multiline':False]
['text':'   ZONE','line_number':469,'multiline':False]
['text':'   REGION','line_number':470,'multiline':False]
['text':' Vars set:','line_number':471,'multiline':False]
['text':'   KUBE_MASTER','line_number':472,'multiline':False]
['text':'   KUBE_MASTER_IP','line_number':473,'multiline':False]
['text':' Figure out which binary use on the server and assure it is available.','line_number':510,'multiline':False]
['text':' If KUBE_VERSION is specified use binaries specified by it, otherwise','line_number':511,'multiline':False]
['text':' use local dev binaries.','line_number':512,'multiline':False]
['text':'','line_number':513,'multiline':False]
['text':' Assumed vars:','line_number':514,'multiline':False]
['text':'   KUBE_VERSION','line_number':515,'multiline':False]
['text':'   KUBE_RELEASE_VERSION_REGEX','line_number':516,'multiline':False]
['text':'   KUBE_CI_VERSION_REGEX','line_number':517,'multiline':False]
['text':' Vars set:','line_number':518,'multiline':False]
['text':'   KUBE_TAR_HASH','line_number':519,'multiline':False]
['text':'   SERVER_BINARY_TAR_URL','line_number':520,'multiline':False]
['text':'   SERVER_BINARY_TAR_HASH','line_number':521,'multiline':False]
['text':' TODO: Clean this up.','line_number':535,'multiline':False]
['text':' TODO: Clean this up.','line_number':541,'multiline':False]
['text':' Reads kube-env metadata from master','line_number':559,'multiline':False]
['text':'','line_number':560,'multiline':False]
['text':' Assumed vars:','line_number':561,'multiline':False]
['text':'   KUBE_MASTER','line_number':562,'multiline':False]
['text':'   PROJECT','line_number':563,'multiline':False]
['text':'   ZONE','line_number':564,'multiline':False]
['text':' TODO(zmerlynn): Make this more reliable with retries.','line_number':566,'multiline':False]
['text':' Quote something appropriate for a yaml string.','line_number':575,'multiline':False]
['text':'','line_number':576,'multiline':False]
['text':' TODO(zmerlynn): Note that this function doesn't so much "quote" as','line_number':577,'multiline':False]
['text':' "strip out quotes", and we really should be using a YAML library for','line_number':578,'multiline':False]
['text':' this, but PyYAML isn't shipped by default, and *rant rant rant ... SIGH*','line_number':579,'multiline':False]
['text':' Writes the cluster location into a temporary file.','line_number':584,'multiline':False]
['text':' Assumed vars','line_number':585,'multiline':False]
['text':'   ZONE','line_number':586,'multiline':False]
['text':' Writes the cluster name into a temporary file.','line_number':593,'multiline':False]
['text':' Assumed vars','line_number':594,'multiline':False]
['text':'   CLUSTER_NAME','line_number':595,'multiline':False]
['text':' If the user requested that the master be part of the cluster, set the','line_number':603,'multiline':False]
['text':' environment variable to program the master kubelet to register itself.','line_number':604,'multiline':False]
['text':' Add kube-proxy daemonset label to node to avoid situation during cluster','line_number':641,'multiline':False]
['text':' upgrade/downgrade when there are two instances of kube-proxy running on a node.','line_number':642,'multiline':False]
['text':' yaml-map-string-stringarray converts the encoded structure to yaml format, and echoes the result','line_number':668,'multiline':False]
['text':' under the provided name. If the encoded structure is empty, echoes nothing.','line_number':669,'multiline':False]
['text':' 1: name to be output in yaml','line_number':670,'multiline':False]
['text':' 2: encoded map-string-string (which may contain duplicate keys - resulting in map-string-stringarray)','line_number':671,'multiline':False]
['text':' 3: key-value separator (defaults to ':')','line_number':672,'multiline':False]
['text':' 4: item separator (defaults to ',')','line_number':673,'multiline':False]
['text':' indexed array','line_number':680,'multiline':False]
['text':' associative array','line_number':681,'multiline':False]
['text':' split on item_sep','line_number':682,'multiline':False]
['text':' split on kv_sep','line_number':686,'multiline':False]
['text':' append values from duplicate keys','line_number':687,'multiline':False]
['text':' only output if there is a non-empty map','line_number':689,'multiline':False]
['text':'map[@]} -gt 0 ]]; then','line_number':690,'multiline':False]
['text':' declare across two lines so errexit can catch failures','line_number':697,'multiline':False]
['text':' yaml-map-string-string converts the encoded structure to yaml format, and echoes the result','line_number':706,'multiline':False]
['text':' under the provided name. If the encoded structure is empty, echoes nothing.','line_number':707,'multiline':False]
['text':' 1: name to be output in yaml','line_number':708,'multiline':False]
['text':' 2: encoded map-string-string (no duplicate keys)','line_number':709,'multiline':False]
['text':' 3: bool, whether to yaml-quote the value string in the output (defaults to true)','line_number':710,'multiline':False]
['text':' 4: key-value separator (defaults to ':')','line_number':711,'multiline':False]
['text':' 5: item separator (defaults to ',')','line_number':712,'multiline':False]
['text':' indexed array','line_number':720,'multiline':False]
['text':' associative array','line_number':721,'multiline':False]
['text':' split on item_sep # TODO(mtaufen): try quoting this too','line_number':722,'multiline':False]
['text':' split on kv_sep','line_number':726,'multiline':False]
['text':' add to associative array','line_number':727,'multiline':False]
['text':' only output if there is a non-empty map','line_number':729,'multiline':False]
['text':'map[@]} -gt 0 ]]; then','line_number':730,'multiline':False]
['text':' declare across two lines so errexit can catch failures','line_number':734,'multiline':False]
['text':' Returns kubelet flags used on both Linux and Windows nodes.','line_number':745,'multiline':False]
['text':' TODO(mtaufen): ROTATE_CERTIFICATES seems unused; delete it?','line_number':749,'multiline':False]
['text':' Sets KUBELET_ARGS with the kubelet flags for Linux nodes.','line_number':759,'multiline':False]
['text':' $1: if 'true', we're rendering flags for a master, else a node','line_number':760,'multiline':False]
['text':' Keep in sync with CONTAINERIZED_MOUNTER_HOME in configure-helper.sh','line_number':765,'multiline':False]
['text':' Keep in sync with the mkdir command in configure-helper.sh (until the TODO is resolved)','line_number':767,'multiline':False]
['text':' If ENABLE_AUTH_PROVIDER_GCP is set to true, kubelet is enabled to use out-of-tree auth ','line_number':770,'multiline':False]
['text':' credential provider instead of in-tree auth credential provider.','line_number':771,'multiline':False]
['text':' https://kubernetes.io/docs/tasks/kubelet-credential-provider/kubelet-credential-provider','line_number':772,'multiline':False]
['text':' Keep the values of --image-credential-provider-config and --image-credential-provider-bin-dir','line_number':774,'multiline':False]
['text':' in sync with value of auth_config_file and auth_provider_dir set in install-auth-provider-gcp function','line_number':775,'multiline':False]
['text':' in gci/configure.sh.','line_number':776,'multiline':False]
['text':'TODO(mikedanese): allow static pods to start before creating a client','line_number':784,'multiline':False]
['text':'flags+=" --bootstrap-kubeconfig=/var/lib/kubelet/bootstrap-kubeconfig"','line_number':785,'multiline':False]
['text':'flags+=" --kubeconfig=/var/lib/kubelet/kubeconfig"','line_number':786,'multiline':False]
['text':' Configure the file path for host dns configuration','line_number':792,'multiline':False]
['text':' as ubuntu uses systemd-resolved','line_number':793,'multiline':False]
['text':' For nodes','line_number':796,'multiline':False]
['text':' Configure the file path for host dns configuration','line_number':804,'multiline':False]
['text':' as ubuntu uses systemd-resolved','line_number':805,'multiline':False]
['text':' Sets KUBELET_ARGS with the kubelet flags for Windows nodes.','line_number':829,'multiline':False]
['text':' Note that to configure flags with explicit empty string values, we can't escape','line_number':830,'multiline':False]
['text':' double-quotes, because they still break sc.exe after expansion in the','line_number':831,'multiline':False]
['text':' binPath parameter, and single-quotes get parsed as characters instead of','line_number':832,'multiline':False]
['text':' string delimiters.','line_number':833,'multiline':False]
['text':' Note: NODE_KUBELET_TEST_ARGS is empty in typical kube-up runs.','line_number':838,'multiline':False]
['text':' Concatenate common and windows-only node taints and apply them.','line_number':847,'multiline':False]
['text':' Many of these flags were adapted from','line_number':858,'multiline':False]
['text':' https://github.com/Microsoft/SDN/blob/master/Kubernetes/windows/start-kubelet.ps1.','line_number':859,'multiline':False]
['text':' The directory where the TLS certs are located.','line_number':863,'multiline':False]
['text':' Configure kubelet to run as a windows service.','line_number':867,'multiline':False]
['text':' Configure the file path for host dns configuration','line_number':870,'multiline':False]
['text':' Both --cgroups-per-qos and --enforce-node-allocatable should be disabled on','line_number':873,'multiline':False]
['text':' windows; the latter requires the former to be enabled to work.','line_number':874,'multiline':False]
['text':' Turn off kernel memory cgroup notification.','line_number':877,'multiline':False]
['text':' If ENABLE_AUTH_PROVIDER_GCP is set to true, kubelet is enabled to use out-of-tree auth','line_number':883,'multiline':False]
['text':' credential provider. https://kubernetes.io/docs/tasks/kubelet-credential-provider/kubelet-credential-provider','line_number':884,'multiline':False]
['text':' Use the same log level as the Kubelet during tests.','line_number':896,'multiline':False]
['text':' Windows uses kernelspace proxymode','line_number':899,'multiline':False]
['text':' Configure kube-proxy to run as a windows service.','line_number':902,'multiline':False]
['text':' Enabling Windows DSR mode unlocks newer network features and reduces','line_number':905,'multiline':False]
['text':' port usage for services.','line_number':906,'multiline':False]
['text':' https://techcommunity.microsoft.com/t5/networking-blog/direct-server-return-dsr-in-a-nutshell/ba-p/693710','line_number':907,'multiline':False]
['text':' Configure flags with explicit empty string values. We can't escape','line_number':912,'multiline':False]
['text':' double-quotes, because they still break sc.exe after expansion in the','line_number':913,'multiline':False]
['text':' binPath parameter, and single-quotes get parsed as characters instead','line_number':914,'multiline':False]
['text':' of string delimiters.','line_number':915,'multiline':False]
['text':' $1: if 'true', we're rendering config for a master, else a node','line_number':920,'multiline':False]
['text':' cat the Kubelet config yaml in common between masters, linux nodes, and','line_number':945,'multiline':False]
['text':' windows nodes','line_number':946,'multiline':False]
['text':' Note: ENABLE_MANIFEST_URL is used by GKE.','line_number':962,'multiline':False]
['text':' TODO(mtaufen): remove this since it's not used in kubernetes/kubernetes nor','line_number':963,'multiline':False]
['text':' kubernetes/test-infra.','line_number':964,'multiline':False]
['text':' cat the Kubelet config yaml for masters','line_number':983,'multiline':False]
['text':' Note: Standalone mode is used by GKE','line_number':998,'multiline':False]
['text':' cat the Kubelet config yaml in common between linux nodes and windows nodes','line_number':1007,'multiline':False]
['text':' cat the Kubelet config yaml for linux nodes','line_number':1023,'multiline':False]
['text':' Keep authentication.x509.clientCAFile in sync with CA_CERT_BUNDLE_PATH in configure-helper.sh','line_number':1025,'multiline':False]
['text':' cat the Kubelet config yaml for windows nodes','line_number':1034,'multiline':False]
['text':' Notes:','line_number':1036,'multiline':False]
['text':' - We don't run any static pods on Windows nodes yet.','line_number':1037,'multiline':False]
['text':' TODO(mtaufen): Does it make any sense to set eviction thresholds for inodes','line_number':1039,'multiline':False]
['text':' on Windows?','line_number':1040,'multiline':False]
['text':' TODO(pjh, mtaufen): It may make sense to use a different hairpin mode on','line_number':1042,'multiline':False]
['text':' Windows. We're currently using hairpin-veth, but','line_number':1043,'multiline':False]
['text':' https://github.com/Microsoft/SDN/blob/master/Kubernetes/windows/start-kubelet.ps1#L121','line_number':1044,'multiline':False]
['text':' uses promiscuous-bridge.','line_number':1045,'multiline':False]
['text':' TODO(pjh, mtaufen): Does cgroupRoot make sense for Windows?','line_number':1047,'multiline':False]
['text':' Keep authentication.x509.clientCAFile in sync with CA_CERT_BUNDLE_PATH in','line_number':1049,'multiline':False]
['text':' k8s-node-setup.psm1.','line_number':1050,'multiline':False]
['text':' $1: if 'true', we're building a master yaml, else a node','line_number':1094,'multiline':False]
['text':' TODO: Support fallback .tar.gz settings on Container Linux','line_number':1103,'multiline':False]
['text':' Master-only env vars.','line_number':1325,'multiline':False]
['text':' KUBE_APISERVER_REQUEST_TIMEOUT_SEC (if set) controls the --request-timeout','line_number':1368,'multiline':False]
['text':' flag','line_number':1369,'multiline':False]
['text':' KUBE_APISERVER_GODEBUG (if set) controls the value of GODEBUG env var for kube-apiserver.','line_number':1375,'multiline':False]
['text':' ETCD_IMAGE (if set) allows to use a custom etcd image.','line_number':1381,'multiline':False]
['text':' ETCD_DOCKER_REPOSITORY (if set) allows to use a custom etcd docker repository to pull the etcd image from.','line_number':1387,'multiline':False]
['text':' ETCD_VERSION (if set) allows you to use custom version of etcd.','line_number':1393,'multiline':False]
['text':' The main purpose of using it may be rollback of etcd v3 API,','line_number':1394,'multiline':False]
['text':' where we need 3.0.* image, but are rolling back to 2.3.7.','line_number':1395,'multiline':False]
['text':' Node-only env vars.','line_number':1513,'multiline':False]
['text':' TODO(kubernetes/autoscaler#718): AUTOSCALER_ENV_VARS is a hotfix for cluster autoscaler,','line_number':1536,'multiline':False]
['text':' which reads the kube-env to determine the shape of a node and was broken by #60020.','line_number':1537,'multiline':False]
['text':' This should be removed as soon as a more reliable source of information is available!','line_number':1538,'multiline':False]
['text':' For now the Windows kube-env is a superset of the Linux kube-env.','line_number':1585,'multiline':False]
['text':' Create certificate pairs for the cluster.','line_number':1642,'multiline':False]
['text':' $1: The public IP for the master.','line_number':1643,'multiline':False]
['text':'','line_number':1644,'multiline':False]
['text':' These are used for static cert distribution (e.g. static clustering) at','line_number':1645,'multiline':False]
['text':' cluster creation time. This will be obsoleted once we implement dynamic','line_number':1646,'multiline':False]
['text':' clustering.','line_number':1647,'multiline':False]
['text':'','line_number':1648,'multiline':False]
['text':' The following certificate pairs are created:','line_number':1649,'multiline':False]
['text':'','line_number':1650,'multiline':False]
['text':'  - ca (the cluster's certificate authority)','line_number':1651,'multiline':False]
['text':'  - server','line_number':1652,'multiline':False]
['text':'  - kubelet','line_number':1653,'multiline':False]
['text':'  - kubecfg (for kubectl)','line_number':1654,'multiline':False]
['text':'','line_number':1655,'multiline':False]
['text':' TODO(roberthbailey): Replace easyrsa with a simple Go program to generate','line_number':1656,'multiline':False]
['text':' the certs that we need.','line_number':1657,'multiline':False]
['text':'','line_number':1658,'multiline':False]
['text':' Assumed vars','line_number':1659,'multiline':False]
['text':'   KUBE_TEMP','line_number':1660,'multiline':False]
['text':'   MASTER_NAME','line_number':1661,'multiline':False]
['text':'','line_number':1662,'multiline':False]
['text':' Vars set:','line_number':1663,'multiline':False]
['text':'   CERT_DIR','line_number':1664,'multiline':False]
['text':'   CA_CERT_BASE64','line_number':1665,'multiline':False]
['text':'   MASTER_CERT_BASE64','line_number':1666,'multiline':False]
['text':'   MASTER_KEY_BASE64','line_number':1667,'multiline':False]
['text':'   KUBELET_CERT_BASE64','line_number':1668,'multiline':False]
['text':'   KUBELET_KEY_BASE64','line_number':1669,'multiline':False]
['text':'   KUBECFG_CERT_BASE64','line_number':1670,'multiline':False]
['text':'   KUBECFG_KEY_BASE64','line_number':1671,'multiline':False]
['text':' Determine extra certificate names for master','line_number':1675,'multiline':False]
['text':' Create service_ip by stripping the network mask part from','line_number':1677,'multiline':False]
['text':' SERVICE_CLUSTER_IP_RANGE and incrementing the host part with 1','line_number':1678,'multiline':False]
['text':' By default, linux wraps base64 output every 76 cols, so we use 'tr -d' to remove whitespaces.','line_number':1697,'multiline':False]
['text':' Note 'base64 -w0' doesn't work on Mac OS X, which has different flags.','line_number':1698,'multiline':False]
['text':' Setting up an addition directory (beyond pki) as it is the simplest way to','line_number':1710,'multiline':False]
['text':' ensure we get a different CA pair to sign the proxy-client certs and which','line_number':1711,'multiline':False]
['text':' we can send CA public key to the user-apiserver to validate communication.','line_number':1712,'multiline':False]
['text':' Setting up the Kubernetes API Server Konnectivity Server auth.','line_number':1718,'multiline':False]
['text':' This includes certs for both API Server to Konnectivity Server and','line_number':1719,'multiline':False]
['text':' Konnectivity Agent to Konnectivity Server.','line_number':1720,'multiline':False]
['text':' Set up easy-rsa directory structure.','line_number':1740,'multiline':False]
['text':'','line_number':1741,'multiline':False]
['text':' Assumed vars','line_number':1742,'multiline':False]
['text':'   KUBE_TEMP','line_number':1743,'multiline':False]
['text':'','line_number':1744,'multiline':False]
['text':' Vars set:','line_number':1745,'multiline':False]
['text':'   CERT_DIR','line_number':1746,'multiline':False]
['text':'   AGGREGATOR_CERT_DIR','line_number':1747,'multiline':False]
['text':' Note: This was heavily cribbed from make-ca-cert.sh','line_number':1750,'multiline':False]
['text':' TODO(roberthbailey,porridge): add better error handling here,','line_number':1771,'multiline':False]
['text':' see https://github.com/kubernetes/kubernetes/issues/55229','line_number':1772,'multiline':False]
['text':' Runs the easy RSA commands to generate certificate files.','line_number':1779,'multiline':False]
['text':' The generated files are IN ${CERT_DIR}','line_number':1780,'multiline':False]
['text':'','line_number':1781,'multiline':False]
['text':' Assumed vars (see shellcheck disable directives below)','line_number':1782,'multiline':False]
['text':'   KUBE_TEMP','line_number':1783,'multiline':False]
['text':'   MASTER_NAME','line_number':1784,'multiline':False]
['text':'   CERT_DIR','line_number':1785,'multiline':False]
['text':'   PRIMARY_CN: Primary canonical name','line_number':1786,'multiline':False]
['text':'   SANS: Subject alternate names','line_number':1787,'multiline':False]
['text':'','line_number':1788,'multiline':False]
['text':'','line_number':1789,'multiline':False]
['text':' Note: This was heavily cribbed from make-ca-cert.sh','line_number':1792,'multiline':False]
['text':' this puts the cert into pki/ca.crt and the key into pki/private/ca.key','line_number':1796,'multiline':False]
['text':' PRIMARY_CN (expected to be) defined by caller','line_number':1797,'multiline':False]
['text':' shellcheck disable=SC2153','line_number':1798,'multiline':False]
['text':' SANS (expected to be) defined by caller','line_number':1800,'multiline':False]
['text':' shellcheck disable=SC2153','line_number':1801,'multiline':False]
['text':' make the config for the signer','line_number':1807,'multiline':False]
['text':' create the kubelet client cert with the correct groups','line_number':1809,'multiline':False]
['text':' Make a superuser client cert with subject "O=system:masters, CN=kubecfg"','line_number':1815,'multiline':False]
['text':' TODO(roberthbailey,porridge): add better error handling here,','line_number':1840,'multiline':False]
['text':' see https://github.com/kubernetes/kubernetes/issues/55229','line_number':1841,'multiline':False]
['text':' Runs the easy RSA commands to generate aggregator certificate files.','line_number':1848,'multiline':False]
['text':' The generated files are in ${AGGREGATOR_CERT_DIR}','line_number':1849,'multiline':False]
['text':'','line_number':1850,'multiline':False]
['text':' Assumed vars','line_number':1851,'multiline':False]
['text':'   KUBE_TEMP','line_number':1852,'multiline':False]
['text':'   AGGREGATOR_MASTER_NAME','line_number':1853,'multiline':False]
['text':'   AGGREGATOR_CERT_DIR','line_number':1854,'multiline':False]
['text':'   AGGREGATOR_PRIMARY_CN: Primary canonical name','line_number':1855,'multiline':False]
['text':'   AGGREGATOR_SANS: Subject alternate names','line_number':1856,'multiline':False]
['text':'','line_number':1857,'multiline':False]
['text':'','line_number':1858,'multiline':False]
['text':' Note: This was heavily cribbed from make-ca-cert.sh','line_number':1861,'multiline':False]
['text':' this puts the cert into pki/ca.crt and the key into pki/private/ca.key','line_number':1865,'multiline':False]
['text':' make the config for the signer','line_number':1872,'multiline':False]
['text':' create the aggregator client cert with the correct groups','line_number':1874,'multiline':False]
['text':' Make a superuser client cert with subject "O=system:masters, CN=kubecfg"','line_number':1880,'multiline':False]
['text':' TODO(roberthbailey,porridge): add better error handling here,','line_number':1899,'multiline':False]
['text':' see https://github.com/kubernetes/kubernetes/issues/55229','line_number':1900,'multiline':False]
['text':' Runs the easy RSA commands to generate server side certificate files','line_number':1907,'multiline':False]
['text':' for the konnectivity server. This includes both server side to both','line_number':1908,'multiline':False]
['text':' konnectivity-server and konnectivity-agent.','line_number':1909,'multiline':False]
['text':' The generated files are in ${KONNECTIVITY_SERVER_CERT_DIR} and','line_number':1910,'multiline':False]
['text':' ${KONNECTIVITY_AGENT_CERT_DIR}','line_number':1911,'multiline':False]
['text':'','line_number':1912,'multiline':False]
['text':' Assumed vars','line_number':1913,'multiline':False]
['text':'   KUBE_TEMP','line_number':1914,'multiline':False]
['text':'   KONNECTIVITY_SERVER_CERT_DIR','line_number':1915,'multiline':False]
['text':'   KONNECTIVITY_SERVER_PRIMARY_CN: Primary canonical name','line_number':1916,'multiline':False]
['text':'   KONNECTIVITY_SERVER_SANS: Subject alternate names','line_number':1917,'multiline':False]
['text':'','line_number':1918,'multiline':False]
['text':' Note: This was heavily cribbed from make-ca-cert.sh','line_number':1921,'multiline':False]
['text':' Make the client <-> konnectivity server side certificates.','line_number':1923,'multiline':False]
['text':' this puts the cert into pki/ca.crt and the key into pki/private/ca.key','line_number':1926,'multiline':False]
['text':' make the config for the signer','line_number':1933,'multiline':False]
['text':' create the konnectivity server cert with the correct groups','line_number':1935,'multiline':False]
['text':' Make the agent <-> konnectivity server side certificates.','line_number':1939,'multiline':False]
['text':' this puts the cert into pki/ca.crt and the key into pki/private/ca.key','line_number':1942,'multiline':False]
['text':' make the config for the signer','line_number':1949,'multiline':False]
['text':' create the konnectivity server cert with the correct groups','line_number':1951,'multiline':False]
['text':' TODO(roberthbailey,porridge): add better error handling here,','line_number':1979,'multiline':False]
['text':' see https://github.com/kubernetes/kubernetes/issues/55229','line_number':1980,'multiline':False]
['text':' Runs the easy RSA commands to generate server side certificate files','line_number':1987,'multiline':False]
['text':' for the cloud-pvl-admission webhook.','line_number':1988,'multiline':False]
['text':' The generated files are in ${CLOUD_PVL_ADMISSION_CERT_DIR}','line_number':1989,'multiline':False]
['text':'','line_number':1990,'multiline':False]
['text':' Assumed vars','line_number':1991,'multiline':False]
['text':'   KUBE_TEMP','line_number':1992,'multiline':False]
['text':'   CLOUD_PVL_ADMISSION_CERT_DIR','line_number':1993,'multiline':False]
['text':'   CLOUD_PVL_ADMISSION_PRIMARY_CN: Primary canonical name','line_number':1994,'multiline':False]
['text':'   CLOUD_PVL_ADMISSION_SANS: Subject alternate names','line_number':1995,'multiline':False]
['text':'','line_number':1996,'multiline':False]
['text':' Note: This was heavily cribbed from make-ca-cert.sh','line_number':1999,'multiline':False]
['text':' Make the client <-> cloud-pvl-admission server side certificates.','line_number':2001,'multiline':False]
['text':' this puts the cert into pki/ca.crt and the key into pki/private/ca.key','line_number':2004,'multiline':False]
['text':' make the config for the signer','line_number':2011,'multiline':False]
['text':' create the cloud-pvl-admission cert with the correct groups','line_number':2013,'multiline':False]
['text':' Make the cloud-pvl-admission server side certificates.','line_number':2017,'multiline':False]
['text':' this puts the cert into pki/ca.crt and the key into pki/private/ca.key','line_number':2020,'multiline':False]
['text':' make the config for the signer','line_number':2027,'multiline':False]
['text':' create the cloud-pvl-admission server cert with the correct groups','line_number':2029,'multiline':False]
['text':' TODO(roberthbailey,porridge): add better error handling here,','line_number':2051,'multiline':False]
['text':' see https://github.com/kubernetes/kubernetes/issues/55229','line_number':2052,'multiline':False]
['text':' Using provided master env, extracts value from provided key.','line_number':2059,'multiline':False]
['text':'','line_number':2060,'multiline':False]
['text':' Args:','line_number':2061,'multiline':False]
['text':' $1 master env (kube-env of master; result of calling get-master-env)','line_number':2062,'multiline':False]
['text':' $2 env key to use','line_number':2063,'multiline':False]
['text':' Load the master env by calling get-master-env, and extract important values','line_number':2073,'multiline':False]
['text':' Get required master env vars','line_number':2075,'multiline':False]
['text':' Update or verify required gcloud components are installed','line_number':2116,'multiline':False]
['text':' at minimum required version.','line_number':2117,'multiline':False]
['text':' Assumed vars','line_number':2118,'multiline':False]
['text':'   KUBE_PROMPT_FOR_UPDATE','line_number':2119,'multiline':False]
['text':' update and install components as needed','line_number':2125,'multiline':False]
['text':' (deliberately word split $gcloud_prompt)','line_number':2126,'multiline':False]
['text':' shellcheck disable=SC2086','line_number':2127,'multiline':False]
['text':' Robustly try to create a static ip.','line_number':2162,'multiline':False]
['text':' $1: The name of the ip to create','line_number':2163,'multiline':False]
['text':' $2: The name of the region to create the ip in.','line_number':2164,'multiline':False]
['text':' successful operation - wait until it's visible','line_number':2173,'multiline':False]
['text':' Timeout set to 15 minutes','line_number':2177,'multiline':False]
['text':' it exists - postcondition satisfied','line_number':2194,'multiline':False]
['text':' Robustly try to create a firewall rule.','line_number':2208,'multiline':False]
['text':' $1: The name of firewall rule.','line_number':2209,'multiline':False]
['text':' $2: IP ranges.','line_number':2210,'multiline':False]
['text':' $3: Target tags for this firewall rule.','line_number':2211,'multiline':False]
['text':' Format the string argument for gcloud network.','line_number':2235,'multiline':False]
['text':' optional','line_number':2241,'multiline':False]
['text':' optional','line_number':2242,'multiline':False]
['text':' optional','line_number':2243,'multiline':False]
['text':' $1: version (required)','line_number':2277,'multiline':False]
['text':' $2: Prefix for the template name, i.e. NODE_INSTANCE_PREFIX or','line_number':2278,'multiline':False]
['text':'     WINDOWS_NODE_INSTANCE_PREFIX.','line_number':2279,'multiline':False]
['text':' trim template name to pass gce name validation','line_number':2283,'multiline':False]
['text':' validates the NODE_LOCAL_SSDS_EXT variable','line_number':2287,'multiline':False]
['text':' Robustly try to create an instance template.','line_number':2310,'multiline':False]
['text':' $1: The name of the instance template.','line_number':2311,'multiline':False]
['text':' $2: The scopes flag.','line_number':2312,'multiline':False]
['text':' $3: String of comma-separated metadata-from-file entries.','line_number':2313,'multiline':False]
['text':' $4: String of comma-separated metadata (key=value) entries.','line_number':2314,'multiline':False]
['text':' $5: the node OS ("linux" or "windows").','line_number':2315,'multiline':False]
['text':' First, ensure the template doesn't exist.','line_number':2324,'multiline':False]
['text':' TODO(zmerlynn): To make this really robust, we need to parse the output and','line_number':2325,'multiline':False]
['text':'                 add retries. Just relying on a non-zero exit code doesn't','line_number':2326,'multiline':False]
['text':'                 distinguish an ephemeral failed call from a "not-exists".','line_number':2327,'multiline':False]
['text':' VMs with Accelerators cannot be live migrated.','line_number':2339,'multiline':False]
['text':' More details here - https://cloud.google.com/compute/docs/gpus/add-gpus#create-new-gpu-instance','line_number':2340,'multiline':False]
['text':' The NODE_LOCAL_SSDS check below fixes issue #49171','line_number':2366,'multiline':False]
['text':' Deliberately word split ${network}, $2 and ${metadata_flag}','line_number':2402,'multiline':False]
['text':' shellcheck disable=SC2086','line_number':2403,'multiline':False]
['text':' In case the previous attempt failed with something like a','line_number':2429,'multiline':False]
['text':' Backend Error and left the entry laying around, delete it','line_number':2430,'multiline':False]
['text':' before we try again.','line_number':2431,'multiline':False]
['text':' Instantiate a kubernetes cluster','line_number':2439,'multiline':False]
['text':'','line_number':2440,'multiline':False]
['text':' Assumed vars','line_number':2441,'multiline':False]
['text':'   KUBE_ROOT','line_number':2442,'multiline':False]
['text':'   <Various vars set in config file>','line_number':2443,'multiline':False]
['text':' Make sure we have the tar files staged on Google Storage','line_number':2451,'multiline':False]
['text':' ensure that environmental variables specifying number of migs to create','line_number':2455,'multiline':False]
['text':' Windows nodes take longer to boot and setup so create them first.','line_number':2463,'multiline':False]
['text':' If replication of master fails, we need to ensure that the replica is removed from etcd clusters.','line_number':2476,'multiline':False]
['text':' Windows nodes take longer to boot and setup so create them first.','line_number':2494,'multiline':False]
['text':' May be false if tty is not allocated (for example with ssh -T).','line_number':2504,'multiline':False]
['text':' Get user input only if running in terminal.','line_number':2513,'multiline':False]
['text':' The deprecated field uses lower case. Convert to upper case for consistency.','line_number':2528,'multiline':False]
['text':' The network needs to be created synchronously or we have a race. The','line_number':2534,'multiline':False]
['text':' firewalls can be added concurrent with instance creation.','line_number':2535,'multiline':False]
['text':' Open up TCP 3389 to allow RDP connections.','line_number':2574,'multiline':False]
['text':' Look for the alias subnet, it must exist and have a secondary','line_number':2623,'multiline':False]
['text':' range configured.','line_number':2624,'multiline':False]
['text':' detect-subnetworks sets the SUBNETWORK var if not already set','line_number':2650,'multiline':False]
['text':' Assumed vars:','line_number':2651,'multiline':False]
['text':'   NETWORK','line_number':2652,'multiline':False]
['text':'   REGION','line_number':2653,'multiline':False]
['text':'   NETWORK_PROJECT','line_number':2654,'multiline':False]
['text':'','line_number':2655,'multiline':False]
['text':' Optional vars:','line_number':2656,'multiline':False]
['text':'   SUBNETWORK','line_number':2657,'multiline':False]
['text':'   IP_ALIAS_SUBNETWORK','line_number':2658,'multiline':False]
['text':' Sets up Cloud NAT for the network.','line_number':2686,'multiline':False]
['text':' Assumed vars:','line_number':2687,'multiline':False]
['text':'   NETWORK_PROJECT','line_number':2688,'multiline':False]
['text':'   REGION','line_number':2689,'multiline':False]
['text':'   NETWORK','line_number':2690,'multiline':False]
['text':' Ignores firewall rule arguments that do not exist in NETWORK_PROJECT.','line_number':2722,'multiline':False]
['text':' If running in custom mode network we need to delete subnets manually.','line_number':2754,'multiline':False]
['text':' This value should be kept in sync with number of regions.','line_number':2759,'multiline':False]
['text':' If we reached here, it means we're not using custom network.','line_number':2770,'multiline':False]
['text':' So the only thing we need to check is if IP-aliases was turned','line_number':2771,'multiline':False]
['text':' on and we created a subnet for it. If so, we should delete it.','line_number':2772,'multiline':False]
['text':' Only delete the subnet if we created it (i.e it's not pre-existing).','line_number':2774,'multiline':False]
['text':' Generates SSL certificates for etcd cluster peer to peer communication. Uses cfssl program.','line_number':2790,'multiline':False]
['text':'','line_number':2791,'multiline':False]
['text':' Assumed vars:','line_number':2792,'multiline':False]
['text':'   KUBE_TEMP: temporary directory','line_number':2793,'multiline':False]
['text':'','line_number':2794,'multiline':False]
['text':' Args:','line_number':2795,'multiline':False]
['text':'  $1: host name','line_number':2796,'multiline':False]
['text':'  $2: CA certificate','line_number':2797,'multiline':False]
['text':'  $3: CA key','line_number':2798,'multiline':False]
['text':'','line_number':2799,'multiline':False]
['text':' If CA cert/key is empty, the function will also generate certs for CA.','line_number':2800,'multiline':False]
['text':'','line_number':2801,'multiline':False]
['text':' Vars set:','line_number':2802,'multiline':False]
['text':'   ETCD_CA_KEY_BASE64','line_number':2803,'multiline':False]
['text':'   ETCD_CA_CERT_BASE64','line_number':2804,'multiline':False]
['text':'   ETCD_PEER_KEY_BASE64','line_number':2805,'multiline':False]
['text':'   ETCD_PEER_CERT_BASE64','line_number':2806,'multiline':False]
['text':'','line_number':2807,'multiline':False]
['text':' Generates SSL certificates for etcd-client and kube-apiserver communication. Uses cfssl program.','line_number':2824,'multiline':False]
['text':'','line_number':2825,'multiline':False]
['text':' Assumed vars:','line_number':2826,'multiline':False]
['text':'   KUBE_TEMP: temporary directory','line_number':2827,'multiline':False]
['text':'','line_number':2828,'multiline':False]
['text':' Args:','line_number':2829,'multiline':False]
['text':'  $1: host server name','line_number':2830,'multiline':False]
['text':'  $2: host client name','line_number':2831,'multiline':False]
['text':'  $3: CA certificate','line_number':2832,'multiline':False]
['text':'  $4: CA key','line_number':2833,'multiline':False]
['text':'','line_number':2834,'multiline':False]
['text':' If CA cert/key is empty, the function will also generate certs for CA.','line_number':2835,'multiline':False]
['text':'','line_number':2836,'multiline':False]
['text':' Vars set:','line_number':2837,'multiline':False]
['text':'   ETCD_APISERVER_CA_KEY_BASE64','line_number':2838,'multiline':False]
['text':'   ETCD_APISERVER_CA_CERT_BASE64','line_number':2839,'multiline':False]
['text':'   ETCD_APISERVER_SERVER_KEY_BASE64','line_number':2840,'multiline':False]
['text':'   ETCD_APISERVER_SERVER_CERT_BASE64','line_number':2841,'multiline':False]
['text':'   ETCD_APISERVER_CLIENT_KEY_BASE64','line_number':2842,'multiline':False]
['text':'   ETCD_APISERVER_CLIENT_CERT_BASE64','line_number':2843,'multiline':False]
['text':'','line_number':2844,'multiline':False]
['text':' We have to make sure the disk is created before creating the master VM, so','line_number':2883,'multiline':False]
['text':' run this in the foreground.','line_number':2884,'multiline':False]
['text':' Create rule for accessing and securing etcd servers.','line_number':2891,'multiline':False]
['text':' Generate a bearer token for this cluster. We push this separately','line_number':2901,'multiline':False]
['text':' from the other cluster variables so that the client (this','line_number':2902,'multiline':False]
['text':' computer) can forget it later. This should disappear with','line_number':2903,'multiline':False]
['text':' http://issue.k8s.io/3168','line_number':2904,'multiline':False]
['text':' Reserve the master's IP so that it can later be transferred to another VM','line_number':2910,'multiline':False]
['text':' without disrupting the kubelets.','line_number':2911,'multiline':False]
['text':' We block on master creation for large clusters to avoid doing too much','line_number':2937,'multiline':False]
['text':' unnecessary work in case master start-up fails (like creation of nodes).','line_number':2938,'multiline':False]
['text':' Adds master replica to etcd cluster.','line_number':2946,'multiline':False]
['text':'','line_number':2947,'multiline':False]
['text':' Assumed vars:','line_number':2948,'multiline':False]
['text':'   REPLICA_NAME','line_number':2949,'multiline':False]
['text':'   PROJECT','line_number':2950,'multiline':False]
['text':'   EXISTING_MASTER_NAME','line_number':2951,'multiline':False]
['text':'   EXISTING_MASTER_ZONE','line_number':2952,'multiline':False]
['text':'','line_number':2953,'multiline':False]
['text':' $1: etcd client port','line_number':2954,'multiline':False]
['text':' $2: etcd internal port','line_number':2955,'multiline':False]
['text':' $3: whether etcd communication should use mtls','line_number':2956,'multiline':False]
['text':' returns the result of ssh command which adds replica','line_number':2957,'multiline':False]
['text':' Keep in sync with ETCD_APISERVER_CA_CERT_PATH, ETCD_APISERVER_CLIENT_CERT_PATH and ETCD_APISERVER_CLIENT_KEY_PATH in configure-helper.sh.','line_number':2966,'multiline':False]
['text':' Sets EXISTING_MASTER_NAME and EXISTING_MASTER_ZONE variables.','line_number':2974,'multiline':False]
['text':'','line_number':2975,'multiline':False]
['text':' Assumed vars:','line_number':2976,'multiline':False]
['text':'   PROJECT','line_number':2977,'multiline':False]
['text':'','line_number':2978,'multiline':False]
['text':' NOTE: Must be in sync with get-replica-name-regexp','line_number':2979,'multiline':False]
['text':' Before we do anything else, we should configure etcd to expect more replicas.','line_number':2996,'multiline':False]
['text':' We have to make sure the disk is created before creating the master VM, so','line_number':3006,'multiline':False]
['text':' run this in the foreground.','line_number':3007,'multiline':False]
['text':' Add new replica to the load balancer.','line_number':3018,'multiline':False]
['text':' Detaches old and ataches new external IP to a VM.','line_number':3029,'multiline':False]
['text':'','line_number':3030,'multiline':False]
['text':' Arguments:','line_number':3031,'multiline':False]
['text':'   $1 - VM name','line_number':3032,'multiline':False]
['text':'   $2 - VM zone','line_number':3033,'multiline':False]
['text':'   $3 - external static IP; if empty will use an ephemeral IP address.','line_number':3034,'multiline':False]
['text':' Creates load balancer in front of apiserver if it doesn't exists already. Assumes there's only one','line_number':3058,'multiline':False]
['text':' existing master replica.','line_number':3059,'multiline':False]
['text':'','line_number':3060,'multiline':False]
['text':' Assumes:','line_number':3061,'multiline':False]
['text':'   PROJECT','line_number':3062,'multiline':False]
['text':'   MASTER_NAME','line_number':3063,'multiline':False]
['text':'   ZONE','line_number':3064,'multiline':False]
['text':'   REGION','line_number':3065,'multiline':False]
['text':' Step 0: Return early if LB is already configured.','line_number':3067,'multiline':False]
['text':' Step 1: Detach master IP address and attach ephemeral address to the existing master','line_number':3082,'multiline':False]
['text':' Step 2: Create target pool.','line_number':3085,'multiline':False]
['text':' TODO: We should also add master instances with suffixes','line_number':3087,'multiline':False]
['text':' Step 3: Create forwarding rule.','line_number':3090,'multiline':False]
['text':' TODO: This step can take up to 20 min. We need to speed this up...','line_number':3091,'multiline':False]
['text':' attach-internal-master-ip attach internal ip to existing master.','line_number':3111,'multiline':False]
['text':'','line_number':3112,'multiline':False]
['text':' Assumes:','line_number':3113,'multiline':False]
['text':' * PROJECT','line_number':3114,'multiline':False]
['text':' Attach ${ip} to ${name}','line_number':3124,'multiline':False]
['text':' detach-internal-master-ip detaches internal ip from existing master.','line_number':3132,'multiline':False]
['text':'','line_number':3133,'multiline':False]
['text':' Assumes:','line_number':3134,'multiline':False]
['text':' * PROJECT','line_number':3135,'multiline':False]
['text':' Detach ${MASTER_NAME}-internal-ip from ${name}','line_number':3144,'multiline':False]
['text':' We want `ip route` to be run in the cloud and not this host','line_number':3147,'multiline':False]
['text':' create-internal-loadbalancer creates an internal load balacer in front of existing master.','line_number':3152,'multiline':False]
['text':'','line_number':3153,'multiline':False]
['text':' Assumes:','line_number':3154,'multiline':False]
['text':' * MASTER_NAME','line_number':3155,'multiline':False]
['text':' * PROJECT','line_number':3156,'multiline':False]
['text':' * REGION','line_number':3157,'multiline':False]
['text':' add-to-internal-loadbalancer adds an instance to ILB.','line_number':3201,'multiline':False]
['text':' Assumes:','line_number':3202,'multiline':False]
['text':' * MASTER_NAME','line_number':3203,'multiline':False]
['text':' * PROJECT','line_number':3204,'multiline':False]
['text':' * REGION','line_number':3205,'multiline':False]
['text':' remove-from-internal-loadbalancer removes an instance from ILB.','line_number':3219,'multiline':False]
['text':' Assumes:','line_number':3220,'multiline':False]
['text':' * MASTER_NAME','line_number':3221,'multiline':False]
['text':' * PROJECT','line_number':3222,'multiline':False]
['text':' * REGION','line_number':3223,'multiline':False]
['text':' Create a single firewall rule for all minions.','line_number':3252,'multiline':False]
['text':' Report logging choice (if any).','line_number':3255,'multiline':False]
['text':' Wait for last batch of jobs','line_number':3260,'multiline':False]
['text':' NOTE: these template names and their format must match','line_number':3287,'multiline':False]
['text':' create-[linux,windows]-nodes() as well as get-template()!','line_number':3288,'multiline':False]
['text':' Assumes:','line_number':3299,'multiline':False]
['text':' - MAX_INSTANCES_PER_MIG','line_number':3300,'multiline':False]
['text':' - NUM_NODES','line_number':3301,'multiline':False]
['text':' - NUM_WINDOWS_NODES','line_number':3302,'multiline':False]
['text':' exports:','line_number':3303,'multiline':False]
['text':' - NUM_MIGS','line_number':3304,'multiline':False]
['text':' - NUM_WINDOWS_MIGS','line_number':3305,'multiline':False]
['text':' Assumes:','line_number':3317,'multiline':False]
['text':' - NUM_MIGS','line_number':3318,'multiline':False]
['text':' - NODE_INSTANCE_PREFIX','line_number':3319,'multiline':False]
['text':' - NUM_NODES','line_number':3320,'multiline':False]
['text':' - PROJECT','line_number':3321,'multiline':False]
['text':' - ZONE','line_number':3322,'multiline':False]
['text':' TODO: We don't add a suffix for the last group to keep backward compatibility when there's only one MIG.','line_number':3364,'multiline':False]
['text':' We should change it at some point, but note #18545 when changing this.','line_number':3365,'multiline':False]
['text':' Spread the remaining number of nodes evenly','line_number':3368,'multiline':False]
['text':' Run instance-groups creation in parallel.','line_number':3372,'multiline':False]
['text':' Assumes:','line_number':3391,'multiline':False]
['text':' - NUM_WINDOWS_MIGS','line_number':3392,'multiline':False]
['text':' - WINDOWS_NODE_INSTANCE_PREFIX','line_number':3393,'multiline':False]
['text':' - NUM_WINDOWS_NODES','line_number':3394,'multiline':False]
['text':' - PROJECT','line_number':3395,'multiline':False]
['text':' - ZONE','line_number':3396,'multiline':False]
['text':' TODO: We don't add a suffix for the last group to keep backward compatibility when there's only one MIG.','line_number':3406,'multiline':False]
['text':' We should change it at some point, but note #18545 when changing this.','line_number':3407,'multiline':False]
['text':' Spread the remaining number of nodes evenly','line_number':3410,'multiline':False]
['text':' Assumes:','line_number':3429,'multiline':False]
['text':' - NODE_INSTANCE_PREFIX','line_number':3430,'multiline':False]
['text':' - PROJECT','line_number':3431,'multiline':False]
['text':' - NETWORK_PROJECT','line_number':3432,'multiline':False]
['text':' - REGION','line_number':3433,'multiline':False]
['text':' - ZONE','line_number':3434,'multiline':False]
['text':' - HEAPSTER_MACHINE_TYPE','line_number':3435,'multiline':False]
['text':' - NODE_DISK_TYPE','line_number':3436,'multiline':False]
['text':' - NODE_DISK_SIZE','line_number':3437,'multiline':False]
['text':' - NODE_IMAGE_PROJECT','line_number':3438,'multiline':False]
['text':' - NODE_IMAGE','line_number':3439,'multiline':False]
['text':' - NODE_SERVICE_ACCOUNT','line_number':3440,'multiline':False]
['text':' - NODE_TAG','line_number':3441,'multiline':False]
['text':' - NETWORK','line_number':3442,'multiline':False]
['text':' - ENABLE_IP_ALIASES','line_number':3443,'multiline':False]
['text':' - SUBNETWORK','line_number':3444,'multiline':False]
['text':' - IP_ALIAS_SIZE','line_number':3445,'multiline':False]
['text':' Deliberately word split ${network} and $(get-scope-flags)','line_number':3459,'multiline':False]
['text':' shellcheck disable=SC2086 disable=SC2046','line_number':3460,'multiline':False]
['text':' Assumes:','line_number':3477,'multiline':False]
['text':' - NUM_MIGS','line_number':3478,'multiline':False]
['text':' - NODE_INSTANCE_PREFIX','line_number':3479,'multiline':False]
['text':' - PROJECT','line_number':3480,'multiline':False]
['text':' - ZONE','line_number':3481,'multiline':False]
['text':' - AUTOSCALER_MAX_NODES','line_number':3482,'multiline':False]
['text':' - AUTOSCALER_MIN_NODES','line_number':3483,'multiline':False]
['text':' Exports','line_number':3484,'multiline':False]
['text':' - AUTOSCALER_MIG_CONFIG','line_number':3485,'multiline':False]
['text':' Each MIG must have at least one node, so the min number of nodes','line_number':3488,'multiline':False]
['text':' must be greater or equal to the number of migs.','line_number':3489,'multiline':False]
['text':' Each MIG must have at least one node, so the min number of nodes','line_number':3495,'multiline':False]
['text':' must be greater or equal to the number of migs.','line_number':3496,'multiline':False]
['text':' TODO(pjh): implement Windows support in this function.','line_number':3502,'multiline':False]
['text':' The code assumes that the migs were created with create-nodes','line_number':3507,'multiline':False]
['text':' function which tries to evenly spread nodes across the migs.','line_number':3508,'multiline':False]
['text':' TODO: We don't add a suffix for the last group to keep backward compatibility when there's only one MIG.','line_number':3517,'multiline':False]
['text':' We should change it at some point, but note #18545 when changing this.','line_number':3518,'multiline':False]
['text':' Assumes:','line_number':3534,'multiline':False]
['text':' - NUM_MIGS','line_number':3535,'multiline':False]
['text':' - NODE_INSTANCE_PREFIX','line_number':3536,'multiline':False]
['text':' - PROJECT','line_number':3537,'multiline':False]
['text':' - ZONE','line_number':3538,'multiline':False]
['text':' - ENABLE_CLUSTER_AUTOSCALER','line_number':3539,'multiline':False]
['text':' - AUTOSCALER_MAX_NODES','line_number':3540,'multiline':False]
['text':' - AUTOSCALER_MIN_NODES','line_number':3541,'multiline':False]
['text':' Create autoscaler for nodes configuration if requested','line_number':3543,'multiline':False]
['text':' curl in mavericks is borked.','line_number':3560,'multiline':False]
['text':' Update the user's kubeconfig to include credentials for this apiserver.','line_number':3601,'multiline':False]
['text':' ensures KUBECONFIG is set','line_number':3605,'multiline':False]
['text':' Removes master replica from etcd cluster.','line_number':3622,'multiline':False]
['text':'','line_number':3623,'multiline':False]
['text':' Assumed vars:','line_number':3624,'multiline':False]
['text':'   REPLICA_NAME','line_number':3625,'multiline':False]
['text':'   PROJECT','line_number':3626,'multiline':False]
['text':'   EXISTING_MASTER_NAME','line_number':3627,'multiline':False]
['text':'   EXISTING_MASTER_ZONE','line_number':3628,'multiline':False]
['text':'','line_number':3629,'multiline':False]
['text':' $1: etcd client port','line_number':3630,'multiline':False]
['text':' $2: whether etcd communication should use mtls','line_number':3631,'multiline':False]
['text':' returns the result of ssh command which removes replica','line_number':3632,'multiline':False]
['text':' Keep in sync with ETCD_APISERVER_CA_CERT_PATH, ETCD_APISERVER_CLIENT_CERT_PATH and ETCD_APISERVER_CLIENT_KEY_PATH in configure-helper.sh.','line_number':3640,'multiline':False]
['text':' Delete a kubernetes cluster. This is called from test-teardown.','line_number':3651,'multiline':False]
['text':'','line_number':3652,'multiline':False]
['text':' Assumed vars:','line_number':3653,'multiline':False]
['text':'   MASTER_NAME','line_number':3654,'multiline':False]
['text':'   NODE_INSTANCE_PREFIX','line_number':3655,'multiline':False]
['text':'   WINDOWS_NODE_INSTANCE_PREFIX','line_number':3656,'multiline':False]
['text':'   ZONE','line_number':3657,'multiline':False]
['text':' This function tears down cluster resources 10 at a time to avoid issuing too many','line_number':3658,'multiline':False]
['text':' API calls and exceeding API quota. It is important to bring down the instances before bringing','line_number':3659,'multiline':False]
['text':' down the firewall rules and routes.','line_number':3660,'multiline':False]
['text':' For INSTANCE_GROUPS and WINDOWS_INSTANCE_GROUPS','line_number':3665,'multiline':False]
['text':' Do not stop on error','line_number':3668,'multiline':False]
['text':' Get the name of the managed instance group template before we delete the','line_number':3671,'multiline':False]
['text':' managed instance group. (The name of the managed instance group template may','line_number':3672,'multiline':False]
['text':' change during a cluster upgrade.)','line_number':3673,'multiline':False]
['text':' Deliberately allow globbing, do not change unless a bug is found','line_number':3677,'multiline':False]
['text':' shellcheck disable=SC2206','line_number':3678,'multiline':False]
['text':' Deliberately do not quote, do not change unless a bug is found','line_number':3680,'multiline':False]
['text':' shellcheck disable=SC2068','line_number':3681,'multiline':False]
['text':' Wait for last batch of jobs','line_number':3694,'multiline':False]
['text':' Deliberately do not quote, do not change unless a bug is found','line_number':3699,'multiline':False]
['text':' shellcheck disable=SC2068','line_number':3700,'multiline':False]
['text':' Wait for last batch of jobs','line_number':3712,'multiline':False]
['text':' Delete the special heapster node (if it exists).','line_number':3717,'multiline':False]
['text':' Now we can safely delete the VM.','line_number':3721,'multiline':False]
['text':' Un-register the master replica from etcd and events etcd.','line_number':3736,'multiline':False]
['text':' Delete the master replica (if it exists).','line_number':3740,'multiline':False]
['text':' If there is a load balancer in front of apiservers we need to first update its configuration.','line_number':3742,'multiline':False]
['text':' Detach replica from LB if needed.','line_number':3749,'multiline':False]
['text':' Now we can safely delete the VM.','line_number':3753,'multiline':False]
['text':' Delete the master replica pd (possibly leaked by kube-up if master create failed).','line_number':3762,'multiline':False]
['text':' TODO(jszczepkowski): remove also possibly leaked replicas' pds','line_number':3763,'multiline':False]
['text':' Check if this are any remaining master replicas.','line_number':3773,'multiline':False]
['text':' In the replicated scenario, if there's only a single master left, we should also delete load balancer in front of it.','line_number':3780,'multiline':False]
['text':' If there are no more remaining master replicas, we should delete all remaining network resources.','line_number':3809,'multiline':False]
['text':' Delete firewall rule for the master, etcd servers, and nodes.','line_number':3811,'multiline':False]
['text':' Delete the master's reserved IP','line_number':3813,'multiline':False]
['text':' Find out what minions are running.','line_number':3832,'multiline':False]
['text':' If any minions are running, delete them in batches.','line_number':3838,'multiline':False]
['text':' If there are no more remaining master replicas: delete routes, pd for influxdb and update kubeconfig','line_number':3851,'multiline':False]
['text':' Delete routes.','line_number':3853,'multiline':False]
['text':' Clean up all routes w/ names like "<cluster-name>-<node-GUID>"','line_number':3855,'multiline':False]
['text':' e.g. "kubernetes-12345678-90ab-cdef-1234-567890abcdef". The name is','line_number':3856,'multiline':False]
['text':' determined by the node controller on the master.','line_number':3857,'multiline':False]
['text':' Note that this is currently a noop, as synchronously deleting the node MIG','line_number':3858,'multiline':False]
['text':' first allows the master to cleanup routes itself.','line_number':3859,'multiline':False]
['text':' Delete persistent disk for influx-db.','line_number':3873,'multiline':False]
['text':' Delete all remaining firewall rules and network.','line_number':3882,'multiline':False]
['text':' Pre-1.5 clusters','line_number':3891,'multiline':False]
['text':' Delete all remaining firewall rules in the network.','line_number':3893,'multiline':False]
['text':' might fail if there are leaked resources that reference the network','line_number':3896,'multiline':False]
['text':' If there are no more remaining master replicas, we should update kubeconfig.','line_number':3899,'multiline':False]
['text':' If some master replicas remain: cluster has been changed, we need to re-validate it.','line_number':3903,'multiline':False]
['text':' Override errexit','line_number':3905,'multiline':False]
['text':' We have two different failure modes from validate cluster:','line_number':3908,'multiline':False]
['text':' - 1: fatal error - cluster won't be working correctly','line_number':3909,'multiline':False]
['text':' - 2: weak error - something went wrong, but cluster probably will be working correctly','line_number':3910,'multiline':False]
['text':' We just print an error message in case 2).','line_number':3911,'multiline':False]
['text':' Prints name of one of the master replicas in the current zone. It will be either','line_number':3921,'multiline':False]
['text':' just MASTER_NAME or MASTER_NAME with a suffix for a replica (see get-replica-name-regexp).','line_number':3922,'multiline':False]
['text':'','line_number':3923,'multiline':False]
['text':' Assumed vars:','line_number':3924,'multiline':False]
['text':'   PROJECT','line_number':3925,'multiline':False]
['text':'   ZONE','line_number':3926,'multiline':False]
['text':'   MASTER_NAME','line_number':3927,'multiline':False]
['text':'','line_number':3928,'multiline':False]
['text':' NOTE: Must be in sync with get-replica-name-regexp and set-replica-name.','line_number':3929,'multiline':False]
['text':' Ignore if gcloud compute fails and successfully echo any outcome','line_number':3931,'multiline':False]
['text':' shellcheck disable=SC2005','line_number':3932,'multiline':False]
['text':' Prints comma-separated names of all of the master replicas in all zones.','line_number':3939,'multiline':False]
['text':'','line_number':3940,'multiline':False]
['text':' Assumed vars:','line_number':3941,'multiline':False]
['text':'   PROJECT','line_number':3942,'multiline':False]
['text':'   MASTER_NAME','line_number':3943,'multiline':False]
['text':'','line_number':3944,'multiline':False]
['text':' NOTE: Must be in sync with get-replica-name-regexp and set-replica-name.','line_number':3945,'multiline':False]
['text':' Ignore if gcloud compute fails and successfully echo any outcome','line_number':3947,'multiline':False]
['text':' shellcheck disable=SC2005','line_number':3948,'multiline':False]
['text':' Prints the number of all of the master replicas in all zones.','line_number':3955,'multiline':False]
['text':'','line_number':3956,'multiline':False]
['text':' Assumed vars:','line_number':3957,'multiline':False]
['text':'   MASTER_NAME','line_number':3958,'multiline':False]
['text':' Prints regexp for full master machine name. In a cluster with replicated master,','line_number':3969,'multiline':False]
['text':' VM names may either be MASTER_NAME or MASTER_NAME with a suffix for a replica.','line_number':3970,'multiline':False]
['text':' Sets REPLICA_NAME to a unique name for a master replica that will match','line_number':3975,'multiline':False]
['text':' expected regexp (see get-replica-name-regexp).','line_number':3976,'multiline':False]
['text':'','line_number':3977,'multiline':False]
['text':' Assumed vars:','line_number':3978,'multiline':False]
['text':'   PROJECT','line_number':3979,'multiline':False]
['text':'   ZONE','line_number':3980,'multiline':False]
['text':'   MASTER_NAME','line_number':3981,'multiline':False]
['text':'','line_number':3982,'multiline':False]
['text':' Sets:','line_number':3983,'multiline':False]
['text':'   REPLICA_NAME','line_number':3984,'multiline':False]
['text':' Gets the instance templates in use by the cluster. It echos the template names','line_number':3999,'multiline':False]
['text':' so that the function output can be used.','line_number':4000,'multiline':False]
['text':' Assumed vars:','line_number':4001,'multiline':False]
['text':'   NODE_INSTANCE_PREFIX','line_number':4002,'multiline':False]
['text':'   WINDOWS_NODE_INSTANCE_PREFIX','line_number':4003,'multiline':False]
['text':'','line_number':4004,'multiline':False]
['text':' $1: project','line_number':4005,'multiline':False]
['text':' Checks if there are any present resources related kubernetes cluster.','line_number':4015,'multiline':False]
['text':'','line_number':4016,'multiline':False]
['text':' Assumed vars:','line_number':4017,'multiline':False]
['text':'   MASTER_NAME','line_number':4018,'multiline':False]
['text':'   NODE_INSTANCE_PREFIX','line_number':4019,'multiline':False]
['text':'   WINDOWS_NODE_INSTANCE_PREFIX','line_number':4020,'multiline':False]
['text':'   ZONE','line_number':4021,'multiline':False]
['text':'   REGION','line_number':4022,'multiline':False]
['text':' Vars set:','line_number':4023,'multiline':False]
['text':'   KUBE_RESOURCE_FOUND','line_number':4024,'multiline':False]
['text':' Find out what minions are running.','line_number':4060,'multiline':False]
['text':' No resources found.','line_number':4094,'multiline':False]
['text':' -----------------------------------------------------------------------------','line_number':4098,'multiline':False]
['text':' Cluster specific test helpers','line_number':4099,'multiline':False]
['text':' Execute prior to running tests to build a release if required for env.','line_number':4101,'multiline':False]
['text':'','line_number':4102,'multiline':False]
['text':' Assumed Vars:','line_number':4103,'multiline':False]
['text':'   KUBE_ROOT','line_number':4104,'multiline':False]
['text':' Make a release','line_number':4106,'multiline':False]
['text':' Execute prior to running tests to initialize required structure.','line_number':4110,'multiline':False]
['text':'','line_number':4111,'multiline':False]
['text':' Assumed vars:','line_number':4112,'multiline':False]
['text':'   Variables from config.sh','line_number':4113,'multiline':False]
['text':' Detect the project into $PROJECT if it isn't set','line_number':4115,'multiline':False]
['text':' For subsequent zones we use the existing master','line_number':4121,'multiline':False]
['text':' Open up port 80 & 8080 so common containers on minions can be reached','line_number':4127,'multiline':False]
['text':' TODO(roberthbailey): Remove this once we are no longer relying on hostPorts.','line_number':4128,'multiline':False]
['text':' As there is no simple way to wait longer for this operation we need to manually','line_number':4137,'multiline':False]
['text':' wait some additional time (20 minutes altogether).','line_number':4138,'multiline':False]
['text':' Open up the NodePort range','line_number':4147,'multiline':False]
['text':' TODO(justinsb): Move to main setup, if we decide whether we want to do this by default.','line_number':4148,'multiline':False]
['text':' As there is no simple way to wait longer for this operation we need to manually','line_number':4156,'multiline':False]
['text':' wait some additional time (20 minutes altogether).','line_number':4157,'multiline':False]
['text':' Execute after running tests to perform any required clean-up.','line_number':4167,'multiline':False]
['text':' tear them down in reverse order, finally tearing down the master too.','line_number':4177,'multiline':False]
['text':'zones[@]}-1; zone_num>0; zone_num--)); do','line_number':4178,'multiline':False]
['text':' SSH to a node by name ($1) and run a command ($2).','line_number':4187,'multiline':False]
['text':' Loop until we can successfully ssh into the box','line_number':4191,'multiline':False]
['text':' Then actually try the command.','line_number':4198,'multiline':False]
['text':' Perform preparations required to run e2e tests','line_number':4202,'multiline':False]
['text':' Delete the image given by $1.','line_number':4207,'multiline':False]
