['text':'!/usr/bin/env bash','line_number':1,'multiline':False]
['text':' Copyright 2016 The Kubernetes Authors.','line_number':2,'multiline':False]
['text':'','line_number':3,'multiline':False]
['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':4,'multiline':False]
['text':' you may not use this file except in compliance with the License.','line_number':5,'multiline':False]
['text':' You may obtain a copy of the License at','line_number':6,'multiline':False]
['text':'','line_number':7,'multiline':False]
['text':'     http://www.apache.org/licenses/LICENSE-2.0','line_number':8,'multiline':False]
['text':'','line_number':9,'multiline':False]
['text':' Unless required by applicable law or agreed to in writing, software','line_number':10,'multiline':False]
['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':11,'multiline':False]
['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':12,'multiline':False]
['text':' See the License for the specific language governing permissions and','line_number':13,'multiline':False]
['text':' limitations under the License.','line_number':14,'multiline':False]
['text':' Configures etcd related flags of kube-apiserver.','line_number':17,'multiline':False]
['text':' Starts kubernetes apiserver.','line_number':53,'multiline':False]
['text':' It prepares the log file, loads the docker image, calculates variables, sets them','line_number':54,'multiline':False]
['text':' in the manifest file, and then copies the manifest file to /etc/kubernetes/manifests.','line_number':55,'multiline':False]
['text':'','line_number':56,'multiline':False]
['text':' Assumed vars (which are calculated in function compute-master-manifest-variables)','line_number':57,'multiline':False]
['text':'   CLOUD_CONFIG_OPT','line_number':58,'multiline':False]
['text':'   CLOUD_CONFIG_VOLUME','line_number':59,'multiline':False]
['text':'   CLOUD_CONFIG_MOUNT','line_number':60,'multiline':False]
['text':'   DOCKER_REGISTRY','line_number':61,'multiline':False]
['text':'   INSECURE_PORT_MAPPING','line_number':62,'multiline':False]
['text':' Calculate variables and assemble the command line.','line_number':68,'multiline':False]
['text':' params is passed by reference, so no "$"','line_number':74,'multiline':False]
['text':' If the cluster is large, increase max-requests-inflight limit in apiserver.','line_number':127,'multiline':False]
['text':' Create the audit policy file, and mount it into the apiserver pod.','line_number':150,'multiline':False]
['text':' The advanced audit log backend config matches the basic audit log config.','line_number':156,'multiline':False]
['text':' Lumberjack doesn't offer any way to disable size-based rotation. It also','line_number':160,'multiline':False]
['text':' has an in-memory counter that doesn't notice if you truncate the file.','line_number':161,'multiline':False]
['text':' 2000000000 (in MiB) is a large number that fits in 31 bits. If the log','line_number':162,'multiline':False]
['text':' grows at 10MiB/s (~30K QPS), it will rotate after ~6 years if apiserver','line_number':163,'multiline':False]
['text':' never restarts. Please manually restart apiserver before this time.','line_number':164,'multiline':False]
['text':' Batching parameters','line_number':167,'multiline':False]
['text':' Truncating backend parameters','line_number':189,'multiline':False]
['text':' Create the audit webhook config file, and mount it into the apiserver pod.','line_number':195,'multiline':False]
['text':' Batching parameters','line_number':202,'multiline':False]
['text':' Truncating backend parameters','line_number':226,'multiline':False]
['text':' Enable ABAC mode unless the user explicitly opts out with ENABLE_LEGACY_ABAC=false','line_number':283,'multiline':False]
['text':' Create the ABAC file if it doesn't exist yet, or if we have a KUBE_USER set (to ensure the right user is given permissions)','line_number':286,'multiline':False]
['text':' Create the EgressSelectorConfiguration yaml file to control the Egress Selector.','line_number':323,'multiline':False]
['text':' UDS socket for communication between apiserver and konnectivity-server','line_number':327,'multiline':False]
['text':' params is passed by reference, so no "$"','line_number':364,'multiline':False]
['text':' Evaluate variables.','line_number':373,'multiline':False]
['text':' Sets-up etcd encryption.','line_number':425,'multiline':False]
['text':' Configuration of etcd level encryption consists of the following steps:','line_number':426,'multiline':False]
['text':' 1. Writing encryption provider config to disk','line_number':427,'multiline':False]
['text':' 2. Adding encryption-provider-config flag to kube-apiserver','line_number':428,'multiline':False]
['text':' 3. Add kms-socket-vol and kms-socket-vol-mnt to enable communication with kms-plugin (if requested)','line_number':429,'multiline':False]
['text':'','line_number':430,'multiline':False]
['text':' Expects parameters:','line_number':431,'multiline':False]
['text':' $1 - path to kube-apiserver template','line_number':432,'multiline':False]
['text':' $2 - kube-apiserver startup flags (must be passed by reference)','line_number':433,'multiline':False]
['text':'','line_number':434,'multiline':False]
['text':' Assumes vars (supplied via kube-env):','line_number':435,'multiline':False]
['text':' ENCRYPTION_PROVIDER_CONFIG','line_number':436,'multiline':False]
['text':' CLOUD_KMS_INTEGRATION','line_number':437,'multiline':False]
['text':' ENCRYPTION_PROVIDER_CONFIG_PATH (will default to /etc/srv/kubernetes/encryption-provider-config.yml)','line_number':438,'multiline':False]
