['text':'!/usr/bin/env bash','line_number':1,'multiline':False]
['text':' Copyright 2015 The Kubernetes Authors.','line_number':3,'multiline':False]
['text':'','line_number':4,'multiline':False]
['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':5,'multiline':False]
['text':' you may not use this file except in compliance with the License.','line_number':6,'multiline':False]
['text':' You may obtain a copy of the License at','line_number':7,'multiline':False]
['text':'','line_number':8,'multiline':False]
['text':'     http://www.apache.org/licenses/LICENSE-2.0','line_number':9,'multiline':False]
['text':'','line_number':10,'multiline':False]
['text':' Unless required by applicable law or agreed to in writing, software','line_number':11,'multiline':False]
['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':12,'multiline':False]
['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':13,'multiline':False]
['text':' See the License for the specific language governing permissions and','line_number':14,'multiline':False]
['text':' limitations under the License.','line_number':15,'multiline':False]
['text':' !!!EXPERIMENTAL !!! Upgrade script for GCE. Expect this to get','line_number':17,'multiline':False]
['text':' rewritten in Go in relatively short order, but it allows us to start','line_number':18,'multiline':False]
['text':' testing the concepts.','line_number':19,'multiline':False]
['text':' NOTE: IF YOU CHANGE THE FOLLOWING LIST, ALSO UPDATE test/e2e/cluster_upgrade.go','line_number':59,'multiline':False]
['text':' Tries to figure out KUBE_USER/KUBE_PASSWORD by first looking under','line_number':89,'multiline':False]
['text':' kubeconfig:username, and then under kubeconfig:username-basic-auth.','line_number':90,'multiline':False]
['text':' TODO: KUBE_USER is used in generating ABAC policy which the','line_number':91,'multiline':False]
['text':' apiserver may not have enabled. If it's enabled, we must have a user','line_number':92,'multiline':False]
['text':' to generate a valid ABAC policy. If the username changes, should','line_number':93,'multiline':False]
['text':' the script fail? Should we generate a default username and password','line_number':94,'multiline':False]
['text':' if the section is missing in kubeconfig? Handle this better in 1.5.','line_number':95,'multiline':False]
['text':' Delete the master instance. Note that the master-pd is created','line_number':103,'multiline':False]
['text':' with auto-delete=no, so it should not be deleted.','line_number':104,'multiline':False]
['text':' Generate the node problem detector token if it isn't present on the original','line_number':117,'multiline':False]
['text':' master.','line_number':118,'multiline':False]
['text':' Perform common upgrade setup tasks','line_number':146,'multiline':False]
['text':'','line_number':147,'multiline':False]
['text':' Assumed vars','line_number':148,'multiline':False]
['text':'   KUBE_VERSION','line_number':149,'multiline':False]
['text':' sets INSTANCE_GROUPS','line_number':154,'multiline':False]
['text':' Reads kube-env metadata from first node in NODE_NAMES.','line_number':160,'multiline':False]
['text':'','line_number':161,'multiline':False]
['text':' Assumed vars:','line_number':162,'multiline':False]
['text':'   NODE_NAMES','line_number':163,'multiline':False]
['text':'   PROJECT','line_number':164,'multiline':False]
['text':'   ZONE','line_number':165,'multiline':False]
['text':' TODO(zmerlynn): Make this more reliable with retries.','line_number':167,'multiline':False]
['text':' Read os distro information from /os/release on node.','line_number':173,'multiline':False]
['text':' $1: The name of node','line_number':174,'multiline':False]
['text':'','line_number':175,'multiline':False]
['text':' Assumed vars:','line_number':176,'multiline':False]
['text':'   PROJECT','line_number':177,'multiline':False]
['text':'   ZONE','line_number':178,'multiline':False]
['text':' Assumed vars:','line_number':187,'multiline':False]
['text':'   KUBE_VERSION','line_number':188,'multiline':False]
['text':'   NODE_SCOPES','line_number':189,'multiline':False]
['text':'   NODE_INSTANCE_PREFIX','line_number':190,'multiline':False]
['text':'   PROJECT','line_number':191,'multiline':False]
['text':'   ZONE','line_number':192,'multiline':False]
['text':'','line_number':193,'multiline':False]
['text':' Vars set:','line_number':194,'multiline':False]
['text':'   KUBE_PROXY_TOKEN','line_number':195,'multiline':False]
['text':'   NODE_PROBLEM_DETECTOR_TOKEN','line_number':196,'multiline':False]
['text':'   CA_CERT_BASE64','line_number':197,'multiline':False]
['text':'   EXTRA_DOCKER_OPTS','line_number':198,'multiline':False]
['text':'   KUBELET_CERT_BASE64','line_number':199,'multiline':False]
['text':'   KUBELET_KEY_BASE64','line_number':200,'multiline':False]
['text':' Reset the node image based on current os distro','line_number':216,'multiline':False]
['text':' prepare-node-upgrade creates a new instance template suitable for upgrading','line_number':221,'multiline':False]
['text':' to KUBE_VERSION and echos a single line with the name of the new template.','line_number':222,'multiline':False]
['text':'','line_number':223,'multiline':False]
['text':' Assumed vars:','line_number':224,'multiline':False]
['text':'   KUBE_VERSION','line_number':225,'multiline':False]
['text':'   NODE_SCOPES','line_number':226,'multiline':False]
['text':'   NODE_INSTANCE_PREFIX','line_number':227,'multiline':False]
['text':'   PROJECT','line_number':228,'multiline':False]
['text':'   ZONE','line_number':229,'multiline':False]
['text':'','line_number':230,'multiline':False]
['text':' Vars set:','line_number':231,'multiline':False]
['text':'   SANITIZED_VERSION','line_number':232,'multiline':False]
['text':'   INSTANCE_GROUPS','line_number':233,'multiline':False]
['text':'   KUBE_PROXY_TOKEN','line_number':234,'multiline':False]
['text':'   NODE_PROBLEM_DETECTOR_TOKEN','line_number':235,'multiline':False]
['text':'   CA_CERT_BASE64','line_number':236,'multiline':False]
['text':'   EXTRA_DOCKER_OPTS','line_number':237,'multiline':False]
['text':'   KUBELET_CERT_BASE64','line_number':238,'multiline':False]
['text':'   KUBELET_KEY_BASE64','line_number':239,'multiline':False]
['text':' TODO(zmerlynn): Refactor setting scope flags.','line_number':246,'multiline':False]
['text':' shellcheck disable=SC2034 # 'scope_flags' is used by upstream','line_number':251,'multiline':False]
['text':' Get required node env vars from exiting template.','line_number':255,'multiline':False]
['text':' TODO(zmerlynn): How do we ensure kube-env is written in a ${version}-','line_number':272,'multiline':False]
['text':'                 compatible way?','line_number':273,'multiline':False]
['text':' TODO(zmerlynn): Get configure-vm script from ${version}. (Must plumb this','line_number':276,'multiline':False]
['text':'                 through all create-linux-node-instance-template implementations).','line_number':277,'multiline':False]
['text':' The following is echo'd so that callers can get the template name.','line_number':281,'multiline':False]
['text':' Get the node problem detector token from master if it isn't present on','line_number':288,'multiline':False]
['text':' the original node.','line_number':289,'multiline':False]
['text':' Upgrades a single node.','line_number':298,'multiline':False]
['text':' $1: The name of the node','line_number':299,'multiline':False]
['text':'','line_number':300,'multiline':False]
['text':' Note: This is called multiple times from do-node-upgrade() in parallel, so should be thread-safe.','line_number':301,'multiline':False]
['text':' Drain node','line_number':313,'multiline':False]
['text':' Recreate instance','line_number':323,'multiline':False]
['text':' Wait for node status to reflect a new boot ID. This guarantees us','line_number':337,'multiline':False]
['text':' that the node status in the API is from a different boot. This','line_number':338,'multiline':False]
['text':' does not guarantee that the status is from the upgraded node, but','line_number':339,'multiline':False]
['text':' it is a best effort approximation.','line_number':340,'multiline':False]
['text':' Wait for the node to have Ready=True.','line_number':358,'multiline':False]
['text':' Uncordon the node.','line_number':372,'multiline':False]
['text':' Prereqs:','line_number':383,'multiline':False]
['text':' - prepare-node-upgrade should have been called successfully','line_number':384,'multiline':False]
['text':' Do the actual upgrade.','line_number':387,'multiline':False]
['text':' NOTE(zmerlynn): If you are changing this gcloud command, update','line_number':388,'multiline':False]
['text':'                 test/e2e/cluster_upgrade.go to match this EXACTLY.','line_number':389,'multiline':False]
['text':' Should stay 0 in the loop iff all parallel node upgrades succeed.','line_number':420,'multiline':False]
['text':' We don't want to run more than ${node_upgrade_parallelism} upgrades at a time,','line_number':424,'multiline':False]
['text':' so wait once we hit that many nodes. This isn't ideal, since one might take much','line_number':425,'multiline':False]
['text':' longer than the others, but it should help.','line_number':426,'multiline':False]
['text':' Wait for each of the parallel node upgrades to finish.','line_number':429,'multiline':False]
['text':' Return even if at least one of the node upgrades failed.','line_number':434,'multiline':False]
['text':' Remove the old templates.','line_number':444,'multiline':False]
['text':' Get the current CoreDNS version','line_number':458,'multiline':False]
['text':' clean up','line_number':463,'multiline':False]
['text':' Get the new installed CoreDNS version','line_number':471,'multiline':False]
['text':' Download the CoreDNS migration tool','line_number':524,'multiline':False]
['text':' Migrate the CoreDNS ConfigMap depending on whether it is being downgraded or upgraded.','line_number':536,'multiline':False]
['text':' In case of a downgrade, a custom CoreDNS Corefile will be overwritten by a default Corefile. In that case,','line_number':544,'multiline':False]
['text':' the user will need to manually modify the resulting (default) Corefile after the downgrade is complete.','line_number':545,'multiline':False]
['text':' -gt 1 ]]; then','line_number':598,'multiline':False]
['text':' -lt 1 ]] && [[ "${local_binaries}" == "false" ]]; then','line_number':604,'multiline':False]
['text':' prompt if etcd storage media type isn't set unless using etcd2 when doing master upgrade','line_number':614,'multiline':False]
['text':' Prompt if etcd image/version is unspecified when doing master upgrade.','line_number':640,'multiline':False]
['text':' In e2e tests, we use TEST_ALLOW_IMPLICIT_ETCD_UPGRADE=true to skip this','line_number':641,'multiline':False]
['text':' prompt, simulating the behavior when the user confirms interactively.','line_number':642,'multiline':False]
['text':' All other automated use of this script should explicitly specify a version.','line_number':643,'multiline':False]
