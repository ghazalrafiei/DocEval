['text':'!/usr/bin/env bash','line_number':1,'multiline':False]
['text':' Copyright 2014 The Kubernetes Authors.','line_number':3,'multiline':False]
['text':'','line_number':4,'multiline':False]
['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':5,'multiline':False]
['text':' you may not use this file except in compliance with the License.','line_number':6,'multiline':False]
['text':' You may obtain a copy of the License at','line_number':7,'multiline':False]
['text':'','line_number':8,'multiline':False]
['text':'     http://www.apache.org/licenses/LICENSE-2.0','line_number':9,'multiline':False]
['text':'','line_number':10,'multiline':False]
['text':' Unless required by applicable law or agreed to in writing, software','line_number':11,'multiline':False]
['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':12,'multiline':False]
['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':13,'multiline':False]
['text':' See the License for the specific language governing permissions and','line_number':14,'multiline':False]
['text':' limitations under the License.','line_number':15,'multiline':False]
['text':' This script verifies the following e2e test ownership policies','line_number':17,'multiline':False]
['text':' - tests MUST start with [sig-foo]','line_number':18,'multiline':False]
['text':' - tests SHOULD NOT have multiple [sig-foo] tags','line_number':19,'multiline':False]
['text':' TODO: these two can be dropped if KubeDescribe is gone from codebase','line_number':20,'multiline':False]
['text':' - tests MUST NOT have [k8s.io] in test names','line_number':21,'multiline':False]
['text':' - tests MUST NOT use KubeDescribe','line_number':22,'multiline':False]
['text':' This will canonicalize the path','line_number':28,'multiline':False]
['text':' Set REUSE_BUILD_OUTPUT=y to skip rebuilding dependencies if present','line_number':32,'multiline':False]
['text':' set VERBOSE_OUTPUT=y to output .jq files and shell commands','line_number':34,'multiline':False]
['text':' Setup a tmpdir to hold generated scripts and results','line_number':43,'multiline':False]
['text':' input','line_number':48,'multiline':False]
['text':' output','line_number':50,'multiline':False]
['text':' rebuild dependencies if necessary','line_number':55,'multiline':False]
['text':' evaluate ginkgo spec summaries against e2e test ownership polices','line_number':70,'multiline':False]
['text':' output to ${results_json}','line_number':71,'multiline':False]
['text':' unused, but if we ever wanted to have policies based on other tags...','line_number':79,'multiline':False]
['text':' tags: \$text[\$i] | [match("(\\\[[^\\\]]+\\\])"; "g").string],','line_number':80,'multiline':False]
['text':' unused, but if we ever wanted to have policies based on other tags...','line_number':85,'multiline':False]
['text':' tags: \$leafText | [match("(\\\[[^\\\]]+\\\])"; "g").string],','line_number':86,'multiline':False]
['text':' summarize e2e test policy results','line_number':123,'multiline':False]
['text':' output to ${summary_json}','line_number':124,'multiline':False]
['text':' for each policy category','line_number':129,'multiline':False]
['text':' add a convenience .policy field containing that policy's result','line_number':131,'multiline':False]
['text':' add a meta policy based on whether any policy failed','line_number':140,'multiline':False]
['text':' if a policy has no failing tests, change its log output to PASS','line_number':150,'multiline':False]
['text':' sort by policies with the most failing tests first','line_number':152,'multiline':False]
['text':' filter e2e policy tests results to tests that failed, with the policies they failed','line_number':163,'multiline':False]
['text':' output to ${failures_json}','line_number':164,'multiline':False]
['text':' for each test','line_number':169,'multiline':False]
['text':' filter down to failing policies; trim category, .reason is more verbose','line_number':171,'multiline':False]
['text':' trim the full callstack, .found will contain the relevant call','line_number':173,'multiline':False]
['text':' filter down to tests that have failed policies','line_number':176,'multiline':False]
['text':' output results to console','line_number':190,'multiline':False]
['text':' if we said "FAIL" in that output, we should fail','line_number':200,'multiline':False]
