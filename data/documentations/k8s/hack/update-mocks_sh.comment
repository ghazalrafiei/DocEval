['text':'!/usr/bin/env bash','line_number':1,'multiline':False]
['text':' Copyright 2021 The Kubernetes Authors.','line_number':3,'multiline':False]
['text':'','line_number':4,'multiline':False]
['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':5,'multiline':False]
['text':' you may not use this file except in compliance with the License.','line_number':6,'multiline':False]
['text':' You may obtain a copy of the License at','line_number':7,'multiline':False]
['text':'','line_number':8,'multiline':False]
['text':'     http://www.apache.org/licenses/LICENSE-2.0','line_number':9,'multiline':False]
['text':'','line_number':10,'multiline':False]
['text':' Unless required by applicable law or agreed to in writing, software','line_number':11,'multiline':False]
['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':12,'multiline':False]
['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':13,'multiline':False]
['text':' See the License for the specific language governing permissions and','line_number':14,'multiline':False]
['text':' limitations under the License.','line_number':15,'multiline':False]
['text':' This script generates mock files using mockgen.','line_number':17,'multiline':False]
['text':' Usage: `hack/update-mocks.sh`.','line_number':18,'multiline':False]
['text':' Explicitly opt into go modules, even though we're inside a GOPATH directory','line_number':26,'multiline':False]
['text':' Similar to find but faster and easier to understand.  We want to include','line_number':38,'multiline':False]
['text':' modified and untracked files because this might be running against code','line_number':39,'multiline':False]
['text':' which is not tracked by git yet.','line_number':40,'multiline':False]
['text':' catches vendor/...` \','line_number':42,'multiline':False]
['text':' catches any subdir/vendor/...` \','line_number':43,'multiline':False]
['text':' catches third_party/...` \','line_number':44,'multiline':False]
['text':' catches third_party/...` \','line_number':45,'multiline':False]
['text':' pick a tempfile path for writing to','line_number':54,'multiline':False]
['text':' We use this pattern here rather than `git grep` because we don't really want','line_number':58,'multiline':False]
['text':' to encode the pathspec list in multiple places and anything more complicated','line_number':59,'multiline':False]
['text':' just isn't worth the effort.','line_number':60,'multiline':False]
['text':' search for build tag used in file','line_number':73,'multiline':False]
['text':' if the file does not have build string','line_number':76,'multiline':False]
['text':' write the build tag in the temp file','line_number':78,'multiline':False]
['text':' if +build tag is defined in interface file','line_number':81,'multiline':False]
['text':' if no +build tag is defined in interface file','line_number':84,'multiline':False]
['text':' get the changed or new mock files','line_number':89,'multiline':False]
['text':' only process files that appear to be mocks','line_number':91,'multiline':False]
['text':' search for build tags used in file','line_number':95,'multiline':False]
['text':' //go:build !providerless','line_number':96,'multiline':False]
['text':' // +build !providerless','line_number':97,'multiline':False]
['text':' if the file has both headers','line_number':102,'multiline':False]
['text':' create a new header with the build string and the copyright text','line_number':105,'multiline':False]
['text':' ignore the first line (build tag) from the file','line_number':108,'multiline':False]
['text':' if the file has only // +build !providerless header','line_number':112,'multiline':False]
['text':' create a new header with the build string and the copyright text','line_number':115,'multiline':False]
['text':' ignore the first line (build tag) from the file','line_number':118,'multiline':False]
['text':' if the file has only //go:build !providerless header','line_number':122,'multiline':False]
['text':' create a new header with the build string and the copyright text','line_number':125,'multiline':False]
['text':' ignore the first line (build tag) from the file','line_number':128,'multiline':False]
['text':' if the header is generated','line_number':132,'multiline':False]
['text':' write the newly generated header file to the original file','line_number':135,'multiline':False]
['text':' if no build string insert at the top','line_number':138,'multiline':False]
