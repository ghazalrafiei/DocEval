['text':' SPDX-License-Identifier: MPL-2.0 ','line_number':1,'multiline':True]
['text':'  If there's still a pending linger timer, remove it.','line_number':122,'multiline':False]
['text':'  Close the engine.','line_number':128,'multiline':False]
['text':'  pass subscribe/cancel to the sockets','line_number':158,'multiline':False]
['text':'  Get rid of half-processed messages in the out pipe. Flush any','line_number':222,'multiline':False]
['text':'  unflushed messages upstream.','line_number':223,'multiline':False]
['text':'  Remove any half-read message from the in pipe.','line_number':227,'multiline':False]
['text':' Drop the reference to the deallocated pipe if required.','line_number':241,'multiline':False]
['text':' If this is our current pipe, remove it','line_number':246,'multiline':False]
['text':' Remove the pipe from the detached pipes set','line_number':255,'multiline':False]
['text':'  If we are waiting for pending messages to be sent, at this point','line_number':266,'multiline':False]
['text':'  we are sure that there will be no more messages and we can proceed','line_number':267,'multiline':False]
['text':'  with termination safely.','line_number':268,'multiline':False]
['text':' Skip activating if we're detaching this pipe','line_number':277,'multiline':False]
['text':' i.e. pipe_ == zap_pipe','line_number':292,'multiline':False]
['text':' Skip activating if we're detaching this pipe','line_number':299,'multiline':False]
['text':'  Hiccups are always sent from session to socket, not the other','line_number':311,'multiline':False]
['text':'  way round.','line_number':312,'multiline':False]
['text':'  This functions can return 0 on success or -1 and errno=ECONNREFUSED if ZAP','line_number':327,'multiline':False]
['text':'  is not setup (IE: inproc://zeromq.zap.01 does not exist in the same context)','line_number':328,'multiline':False]
['text':'  or it aborts on any other error. In other words, either ZAP is not','line_number':329,'multiline':False]
['text':'  configured or if it is configured it MUST be configured correctly and it','line_number':330,'multiline':False]
['text':'  MUST work, otherwise authentication cannot be guaranteed and it would be a','line_number':331,'multiline':False]
['text':'  security flaw.','line_number':332,'multiline':False]
['text':'  Create a bi-directional pipe that will connect','line_number':346,'multiline':False]
['text':'  session with zap socket.','line_number':347,'multiline':False]
['text':'  Attach local end of the pipe to this socket object.','line_number':355,'multiline':False]
['text':'  Send empty routing id if required by the peer.','line_number':362,'multiline':False]
['text':'  Plug in the engine.','line_number':390,'multiline':False]
['text':'  Create the pipe if it does not exist yet.','line_number':396,'multiline':False]
['text':'  Plug the local end of the pipe.','line_number':409,'multiline':False]
['text':'  Remember the local end of the pipe.','line_number':412,'multiline':False]
['text':'  The endpoints strings are not set on bind, set them here so that','line_number':416,'multiline':False]
['text':'  events can use them.','line_number':417,'multiline':False]
['text':'  Ask socket to plug into the remote end of the pipe.','line_number':421,'multiline':False]
['text':'  Engine is dead. Let's forget about it.','line_number':429,'multiline':False]
['text':'  Remove any half-done messages from the pipes.','line_number':432,'multiline':False]
['text':'  Only send disconnect message if socket was accepted and handshake was completed','line_number':436,'multiline':False]
['text':'  Only send hiccup message if socket was connected and handshake was completed','line_number':443,'multiline':False]
['text':' FALLTHROUGH ','line_number':456,'multiline':True]
['text':'  Just in case there's only a delimiter in the pipe.','line_number':475,'multiline':False]
['text':'  If the termination of the pipe happens before the term command is','line_number':487,'multiline':False]
['text':'  delivered there's nothing much to do. We can proceed with the','line_number':488,'multiline':False]
['text':'  standard termination immediately.','line_number':489,'multiline':False]
['text':'  If there's finite linger value, delay the termination.','line_number':498,'multiline':False]
['text':'  If linger is infinite (negative) we don't even have to set','line_number':499,'multiline':False]
['text':'  the timer.','line_number':500,'multiline':False]
['text':'  Start pipe termination process. Delay the termination till all messages','line_number':507,'multiline':False]
['text':'  are processed in case the linger time is non-zero.','line_number':508,'multiline':False]
['text':'  TODO: Should this go into pipe_t::terminate ?','line_number':511,'multiline':False]
['text':'  In case there's no engine and there's only delimiter in the','line_number':512,'multiline':False]
['text':'  pipe it wouldn't be ever read. Thus we check for it explicitly.','line_number':513,'multiline':False]
['text':'  Linger period expired. We can proceed with termination even though','line_number':524,'multiline':False]
['text':'  there are still pending messages to be sent.','line_number':525,'multiline':False]
['text':'  Ask pipe to terminate even though there may be pending messages in it.','line_number':529,'multiline':False]
['text':'  For delayed connect situations, terminate the pipe','line_number':543,'multiline':False]
['text':'  and reestablish later on','line_number':544,'multiline':False]
['text':'  Reconnect.','line_number':567,'multiline':False]
['text':'  For subscriber sockets we hiccup the inbound pipe, which will cause','line_number':576,'multiline':False]
['text':'  the socket object to resend all the subscriptions.','line_number':577,'multiline':False]
['text':'  Choose I/O thread to run connecter in. Given that we are already','line_number':588,'multiline':False]
['text':'  running in an I/O thread, there must be at least one available.','line_number':589,'multiline':False]
['text':'  Create the connecter object.','line_number':593,'multiline':False]
['text':'  Both PGM and EPGM transports are using the same infrastructure.','line_number':681,'multiline':False]
['text':'  For EPGM transport with UDP encapsulation of PGM is used.','line_number':686,'multiline':False]
['text':'  At this point we'll create message pipes to the session straight','line_number':689,'multiline':False]
['text':'  away. There's no point in delaying it as no concept of 'connect'','line_number':690,'multiline':False]
['text':'  exists with PGM anyway.','line_number':691,'multiline':False]
['text':'  PGM sender.','line_number':693,'multiline':False]
['text':'  PGM receiver.','line_number':704,'multiline':False]
['text':'  At this point we'll create message pipes to the session straight','line_number':722,'multiline':False]
['text':'  away. There's no point in delaying it as no concept of 'connect'','line_number':723,'multiline':False]
['text':'  exists with NORM anyway.','line_number':724,'multiline':False]
['text':'  NORM sender.','line_number':726,'multiline':False]
['text':' ZMQ_SUB or ZMQ_XSUB','line_number':735,'multiline':False]
['text':'  NORM receiver.','line_number':737,'multiline':False]
['text':' ZMQ_HAVE_NORM','line_number':749,'multiline':False]
