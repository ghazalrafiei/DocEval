['text':' SPDX-License-Identifier: MPL-2.0 ','line_number':1,'multiline':True]
['text':'  Fetch our secret key from socket options','line_number':29,'multiline':False]
['text':'  Generate short-term key pair','line_number':32,'multiline':False]
['text':' TODO I think this is not a case reachable with a misbehaving','line_number':83,'multiline':False]
['text':' client. It is not an "invalid handshake command", but would be','line_number':84,'multiline':False]
['text':' trying to process a handshake command in an invalid state,','line_number':85,'multiline':False]
['text':' which is purely under control of this peer.','line_number':86,'multiline':False]
['text':' Therefore, it should be changed to zmq_assert (false);','line_number':87,'multiline':False]
['text':' CURVE I: invalid handshake command','line_number':89,'multiline':False]
['text':' CURVE I: client HELLO has unknown version number','line_number':145,'multiline':False]
['text':'  Save client's short-term public key (C')','line_number':153,'multiline':False]
['text':'  Open Box [64 * %x0](C'->S)','line_number':168,'multiline':False]
['text':' CURVE I: cannot open client HELLO -- wrong server key?','line_number':172,'multiline':False]
['text':'  Create full nonce for encryption','line_number':190,'multiline':False]
['text':'  8-byte prefix plus 16-byte random nonce','line_number':191,'multiline':False]
['text':'  Generate cookie = Box [C' + s'](t)','line_number':196,'multiline':False]
['text':'  Generate fresh cookie key','line_number':202,'multiline':False]
['text':'  Encrypt using symmetric cookie key','line_number':206,'multiline':False]
['text':'  Create full nonce for encryption','line_number':217,'multiline':False]
['text':'  8-byte prefix plus 16-byte random nonce','line_number':218,'multiline':False]
['text':'  Create 144-byte Box [S' + cookie](S->C')','line_number':223,'multiline':False]
['text':'  TODO I think we should change this back to zmq_assert (rc == 0);','line_number':236,'multiline':False]
['text':'  as it was before https://github.com/zeromq/libzmq/pull/1832','line_number':237,'multiline':False]
['text':'  The reason given there was that secret_key might be 0ed.','line_number':238,'multiline':False]
['text':'  But if it were, we would never get this far, since we could','line_number':239,'multiline':False]
['text':'  not have opened the client's hello box with a 0ed key.','line_number':240,'multiline':False]
['text':'  Open Box [C' + s'](t)','line_number':284,'multiline':False]
['text':' CURVE I: cannot open client INITIATE cookie','line_number':294,'multiline':False]
['text':'  Check cookie plain text is as expected [C' + s']','line_number':301,'multiline':False]
['text':' TODO this case is very hard to test, as it would require a modified','line_number':305,'multiline':False]
['text':'  client that knows the server's secret temporary cookie key','line_number':306,'multiline':False]
['text':' CURVE I: client INITIATE cookie is not valid','line_number':308,'multiline':False]
['text':'  Open Box [C + vouch + metadata](C'->S')','line_number':322,'multiline':False]
['text':' CURVE I: cannot open client INITIATE','line_number':337,'multiline':False]
['text':'  Open Box Box [C',S](C->S') and check contents','line_number':349,'multiline':False]
['text':' CURVE I: cannot open client INITIATE vouch','line_number':362,'multiline':False]
['text':'  What we decrypted must be the client's short-term public key','line_number':369,'multiline':False]
['text':' TODO this case is very hard to test, as it would require a modified','line_number':371,'multiline':False]
['text':'  client that knows the server's secret short-term key','line_number':372,'multiline':False]
['text':' CURVE I: invalid handshake from client (public key)','line_number':374,'multiline':False]
['text':'  Precompute connection secret from client key','line_number':381,'multiline':False]
['text':'  Given this is a backward-incompatible change, it's behind a socket','line_number':386,'multiline':False]
['text':'  option disabled by default.','line_number':387,'multiline':False]
['text':'  Use ZAP protocol (RFC 27) to authenticate the user.','line_number':389,'multiline':False]
['text':'  TODO actually, it is quite unlikely that we can read the ZAP','line_number':395,'multiline':False]
['text':'  reply already, but removing this has some strange side-effect','line_number':396,'multiline':False]
['text':'  (probably because the pipe's in_active flag is true until a read','line_number':397,'multiline':False]
['text':'  is attempted)','line_number':398,'multiline':False]
['text':'  This supports the Stonehouse pattern (encryption without','line_number':402,'multiline':False]
['text':'  authentication) in legacy mode (domain set but no handler).','line_number':403,'multiline':False]
['text':'  This supports the Stonehouse pattern (encryption without authentication).','line_number':411,'multiline':False]
['text':'  Create Box [metadata](S'->C')','line_number':427,'multiline':False]
['text':'  Short nonce, prefixed by "CurveZMQREADY---"','line_number':451,'multiline':False]
['text':'  Box [metadata](S'->C')','line_number':453,'multiline':False]
