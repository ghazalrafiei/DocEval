['text':' SPDX-License-Identifier: MPL-2.0 ','line_number':1,'multiline':True]
['text':' start optional timer, to prevent handshake hanging on no input','line_number':75,'multiline':False]
['text':'  Send the 'length' and 'flags' fields of the routing id message.','line_number':78,'multiline':False]
['text':'  The 'length' field is encoded in the long format.','line_number':79,'multiline':False]
['text':'  Flush all the data that may have been already received downstream.','line_number':88,'multiline':False]
['text':'  Position of the revision and minor fields in the greeting.','line_number':92,'multiline':False]
['text':'  Receive the greeting.','line_number':99,'multiline':False]
['text':' Start polling for output if necessary.','line_number':110,'multiline':False]
['text':'  We have received at least one byte from the peer.','line_number':131,'multiline':False]
['text':'  If the first byte is not 0xff, we know that the','line_number':132,'multiline':False]
['text':'  peer is using unversioned protocol.','line_number':133,'multiline':False]
['text':'  Inspect the right-most bit of the 10th byte (which coincides','line_number':142,'multiline':False]
['text':'  with the 'flags' field if a regular message was sent).','line_number':143,'multiline':False]
['text':'  Zero indicates this is a header of a routing id message','line_number':144,'multiline':False]
['text':'  (i.e. the peer is using the unversioned protocol).','line_number':145,'multiline':False]
['text':'  The peer is using versioned protocol.','line_number':151,'multiline':False]
['text':'  Send the major version number.','line_number':159,'multiline':False]
['text':'  Major version number','line_number':163,'multiline':False]
['text':'  Use ZMTP/2.0 to talk to older peers.','line_number':171,'multiline':False]
['text':'  Minor version number','line_number':176,'multiline':False]
['text':'  Is the peer using ZMTP/1.0 with no revision number?','line_number':204,'multiline':False]
['text':'  We send and receive rest of routing id message','line_number':227,'multiline':False]
['text':' reject ZMTP 1.0 connections if ZAP is enabled','line_number':229,'multiline':False]
['text':'  We have already sent the message header.','line_number':241,'multiline':False]
['text':'  Since there is no way to tell the encoder to','line_number':242,'multiline':False]
['text':'  skip the message header, we simply throw that','line_number':243,'multiline':False]
['text':'  header data away.','line_number':244,'multiline':False]
['text':'  Prepare the routing id message and load it into encoder.','line_number':249,'multiline':False]
['text':'  Then consume bytes we have already sent to the peer.','line_number':250,'multiline':False]
['text':'  Make sure the decoder sees the data we have already received.','line_number':261,'multiline':False]
['text':'  To allow for interoperability with peers that do not forward','line_number':265,'multiline':False]
['text':'  their subscriptions, we inject a phantom subscription message','line_number':266,'multiline':False]
['text':'  message into the incoming message stream.','line_number':267,'multiline':False]
['text':'  We are sending our routing id now and the next message','line_number':271,'multiline':False]
['text':'  will come from the socket.','line_number':272,'multiline':False]
['text':'  We are expecting routing id message.','line_number':275,'multiline':False]
['text':' reject ZMTP 1.0 connections if ZAP is enabled','line_number':285,'multiline':False]
['text':' reject ZMTP 2.0 connections if ZAP is enabled','line_number':303,'multiline':False]
['text':'  Inject the subscription message, so that also','line_number':433,'multiline':False]
['text':'  ZMQ 2.x peers receive published messages.','line_number':434,'multiline':False]
['text':' 16-bit TTL + \4PING == 7','line_number':449,'multiline':False]
['text':' Copy in the command message','line_number':456,'multiline':False]
['text':' 16-bit TTL + \4PING == 7','line_number':487,'multiline':False]
['text':' Get the remote heartbeat TTL to setup the timer','line_number':492,'multiline':False]
['text':' The remote heartbeat is in 10ths of a second','line_number':498,'multiline':False]
['text':' so we multiply it by 100 to get the timer interval in ms.','line_number':499,'multiline':False]
['text':'  As per ZMTP 3.1 the PING command might contain an up to 16 bytes','line_number':507,'multiline':False]
['text':'  context which needs to be PONGed back, so build the pong message','line_number':508,'multiline':False]
['text':'  here and store it. Truncate it if it's too long.','line_number':509,'multiline':False]
['text':'  Given the engine goes straight to out_event, sequential PINGs will','line_number':510,'multiline':False]
['text':'  not be a problem.','line_number':511,'multiline':False]
['text':'  Malformed command','line_number':540,'multiline':False]
