['text':' SPDX-License-Identifier: MPL-2.0 ','line_number':1,'multiline':True]
['text':'  Lock-free queue implementation.','line_number':12,'multiline':False]
['text':'  Only a single thread can read from the pipe at any specific moment.','line_number':13,'multiline':False]
['text':'  Only a single thread can write to the pipe at any specific moment.','line_number':14,'multiline':False]
['text':'  T is the type of the object in the queue.','line_number':15,'multiline':False]
['text':'  N is granularity of the pipe, i.e. how many items are needed to','line_number':16,'multiline':False]
['text':'  perform next memory allocation.','line_number':17,'multiline':False]
['text':'  Initialises the pipe.','line_number':22,'multiline':False]
['text':'  Insert terminator element into the queue.','line_number':25,'multiline':False]
['text':'  Let all the pointers to point to the terminator.','line_number':28,'multiline':False]
['text':'  (unless pipe is dead, in which case c is set to NULL).','line_number':29,'multiline':False]
['text':'  Following function (write) deliberately copies uninitialised data','line_number':34,'multiline':False]
['text':'  when used with zmq_msg. Initialising the VSM body for','line_number':35,'multiline':False]
['text':'  non-VSM messages won't be good for performance.','line_number':36,'multiline':False]
['text':'  Write an item to the pipe.  Don't flush it yet. If incomplete is','line_number':43,'multiline':False]
['text':'  set to true the item is assumed to be continued by items','line_number':44,'multiline':False]
['text':'  subsequently written to the pipe. Incomplete items are never','line_number':45,'multiline':False]
['text':'  flushed down the stream.','line_number':46,'multiline':False]
['text':'  Place the value to the queue, add new terminator element.','line_number':49,'multiline':False]
['text':'  Move the "flush up to here" pointer.','line_number':53,'multiline':False]
['text':'  Pop an incomplete item from the pipe. Returns true if such','line_number':62,'multiline':False]
['text':'  item exists, false otherwise.','line_number':63,'multiline':False]
['text':'  Flush all the completed items into the pipe. Returns false if','line_number':73,'multiline':False]
['text':'  the reader thread is sleeping. In that case, caller is obliged to','line_number':74,'multiline':False]
['text':'  wake the reader up before using the pipe again.','line_number':75,'multiline':False]
['text':'  If there are no un-flushed items, do nothing.','line_number':78,'multiline':False]
['text':'  Try to set 'c' to 'f'.','line_number':82,'multiline':False]
['text':'  Compare-and-swap was unsuccessful because 'c' is NULL.','line_number':84,'multiline':False]
['text':'  This means that the reader is asleep. Therefore we don't','line_number':85,'multiline':False]
['text':'  care about thread-safeness and update c in non-atomic','line_number':86,'multiline':False]
['text':'  manner. We'll return false to let the caller know','line_number':87,'multiline':False]
['text':'  that reader is sleeping.','line_number':88,'multiline':False]
['text':'  Reader is alive. Nothing special to do now. Just move','line_number':94,'multiline':False]
['text':'  the 'first un-flushed item' pointer to 'f'.','line_number':95,'multiline':False]
['text':'  Check whether item is available for reading.','line_number':100,'multiline':False]
['text':'  Was the value prefetched already? If so, return.','line_number':103,'multiline':False]
['text':'  There's no prefetched value, so let us prefetch more values.','line_number':107,'multiline':False]
['text':'  Prefetching is to simply retrieve the','line_number':108,'multiline':False]
['text':'  pointer from c in atomic fashion. If there are no','line_number':109,'multiline':False]
['text':'  items to prefetch, set c to NULL (using compare-and-swap).','line_number':110,'multiline':False]
['text':'  If there are no elements prefetched, exit.','line_number':113,'multiline':False]
['text':'  During pipe's lifetime r should never be NULL, however,','line_number':114,'multiline':False]
['text':'  it can happen during pipe shutdown when items','line_number':115,'multiline':False]
['text':'  are being deallocated.','line_number':116,'multiline':False]
['text':'  There was at least one value prefetched.','line_number':120,'multiline':False]
['text':'  Reads an item from the pipe. Returns false if there is no value.','line_number':124,'multiline':False]
['text':'  available.','line_number':125,'multiline':False]
['text':'  Try to prefetch a value.','line_number':128,'multiline':False]
['text':'  There was at least one value prefetched.','line_number':132,'multiline':False]
['text':'  Return it to the caller.','line_number':133,'multiline':False]
['text':'  Applies the function fn to the first element in the pipe','line_number':139,'multiline':False]
['text':'  and returns the value returned by the fn.','line_number':140,'multiline':False]
['text':'  The pipe mustn't be empty or the function crashes.','line_number':141,'multiline':False]
['text':'  Allocation-efficient queue to store pipe items.','line_number':151,'multiline':False]
['text':'  Front of the queue points to the first prefetched item, back of','line_number':152,'multiline':False]
['text':'  the pipe points to last un-flushed item. Front is used only by','line_number':153,'multiline':False]
['text':'  reader thread, while back is used only by writer thread.','line_number':154,'multiline':False]
['text':'  Points to the first un-flushed item. This variable is used','line_number':157,'multiline':False]
['text':'  exclusively by writer thread.','line_number':158,'multiline':False]
['text':'  Points to the first un-prefetched item. This variable is used','line_number':161,'multiline':False]
['text':'  exclusively by reader thread.','line_number':162,'multiline':False]
['text':'  Points to the first item to be flushed in the future.','line_number':165,'multiline':False]
['text':'  The single point of contention between writer and reader thread.','line_number':168,'multiline':False]
['text':'  Points past the last flushed item. If it is NULL,','line_number':169,'multiline':False]
['text':'  reader is asleep. This pointer should be always accessed using','line_number':170,'multiline':False]
['text':'  atomic operations.','line_number':171,'multiline':False]
