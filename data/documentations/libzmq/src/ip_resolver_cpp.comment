['text':'  IPv4 Multicast: address MSBs are 1110','line_number':31,'multiline':False]
['text':'  Range: 224.0.0.0 - 239.255.255.255','line_number':32,'multiline':False]
['text':'  IPv6 Multicast: ff00::/8','line_number':35,'multiline':False]
['text':'  Construct an "ANY" address for the given family','line_number':67,'multiline':False]
['text':'  If true we expect that the host will be followed by a colon and a port','line_number':128,'multiline':False]
['text':'  number or service name','line_number':129,'multiline':False]
['text':'  We expect 'addr:port'. It's important to use str*r*chr to only get','line_number':193,'multiline':False]
['text':'  the latest colon since IPv6 addresses use colons as delemiters.','line_number':194,'multiline':False]
['text':'  Resolve wildcard to 0 to allow autoselection of port','line_number':207,'multiline':False]
['text':'  Using "0" for a bind address is equivalent to using "*". For a','line_number':214,'multiline':False]
['text':'  connectable address it could be used to connect to port 0.','line_number':215,'multiline':False]
['text':'  Parse the port number (0 is not a valid port).','line_number':218,'multiline':False]
['text':' Check if path is allowed in ip address, if allowed it must be truncated','line_number':230,'multiline':False]
['text':'  Trim any square brackets surrounding the address. Used for','line_number':237,'multiline':False]
['text':'  IPv6 addresses to remove the confusion with the port','line_number':238,'multiline':False]
['text':'  delimiter.','line_number':239,'multiline':False]
['text':'  TODO Should we validate that the brackets are present if','line_number':240,'multiline':False]
['text':'  'addr' contains ':' ?','line_number':241,'multiline':False]
['text':'  Look for an interface name / zone_id in the address','line_number':248,'multiline':False]
['text':'  Reference: https://tools.ietf.org/html/rfc4007','line_number':249,'multiline':False]
['text':'  Return an ANY address','line_number':277,'multiline':False]
['text':'  Try to resolve the string as a NIC name.','line_number':283,'multiline':False]
['text':'  Store the port into the structure. We could get 'getaddrinfo' to do it','line_number':302,'multiline':False]
['text':'  for us but since we don't resolve service names it's a bit overkill and','line_number':303,'multiline':False]
['text':'  we'd still have to do it manually when the address is resolved by','line_number':304,'multiline':False]
['text':'  'resolve_nic_name'','line_number':305,'multiline':False]
['text':'  Choose IPv4 or IPv6 protocol family. Note that IPv6 allows for','line_number':329,'multiline':False]
['text':'  IPv4-in-IPv6 addresses.','line_number':330,'multiline':False]
['text':'  Arbitrary, not used in the output, but avoids duplicate results.','line_number':333,'multiline':False]
['text':'  In this API we only require IPv4-mapped addresses when','line_number':347,'multiline':False]
['text':'  no native IPv6 interfaces are available (~AI_ALL).','line_number':348,'multiline':False]
['text':'  This saves an additional DNS roundtrip for IPv4 addresses.','line_number':349,'multiline':False]
['text':'  Resolve the literal address. Some of the error info is lost in case','line_number':355,'multiline':False]
['text':'  of error, however, there's no way to report EAI errors via errno.','line_number':356,'multiline':False]
['text':' Some OS do have AI_V4MAPPED defined but it is not supported in getaddrinfo()','line_number':360,'multiline':False]
['text':' returning EAI_BADFLAGS. Detect this and retry','line_number':361,'multiline':False]
['text':'  Resolve specific case on Windows platform when using IPv4 address','line_number':369,'multiline':False]
['text':'  with ZMQ_IPv6 socket option.','line_number':370,'multiline':False]
['text':'  Use the first result.','line_number':393,'multiline':False]
['text':'  Cleanup getaddrinfo after copying the possibly referenced result.','line_number':398,'multiline':False]
['text':'  On Solaris platform, network interface name can be queried by ioctl.','line_number':407,'multiline':False]
['text':'  Create a socket.','line_number':410,'multiline':False]
['text':'  Retrieve number of interfaces.','line_number':414,'multiline':False]
['text':'  Allocate memory to get interface names.','line_number':421,'multiline':False]
['text':'  Retrieve interface names.','line_number':426,'multiline':False]
['text':'  Find the interface with the specified name and AF_INET family.','line_number':435,'multiline':False]
['text':'  Clean-up.','line_number':450,'multiline':False]
['text':' IPv6 support not implemented for AIX or HP/UX.','line_number':471,'multiline':False]
['text':'  Create a socket.','line_number':478,'multiline':False]
['text':'  Copy interface name for ioctl get.','line_number':485,'multiline':False]
['text':'  Fetch interface address.','line_number':488,'multiline':False]
['text':'  Clean up.','line_number':491,'multiline':False]
['text':'  On these platforms, network interface name can be queried','line_number':521,'multiline':False]
['text':'  using getifaddrs function.','line_number':522,'multiline':False]
['text':'  Get the addresses.','line_number':525,'multiline':False]
['text':' Windows Subsystem for Linux compatibility','line_number':538,'multiline':False]
['text':'  Find the corresponding network interface.','line_number':545,'multiline':False]
['text':'  Clean-up;','line_number':562,'multiline':False]
['text':'  Find a network adapter by its "name" or "friendly name"','line_number':661,'multiline':False]
['text':'  Iterate over all unicast addresses bound to the current network interface','line_number':664,'multiline':False]
['text':'  On other platforms we assume there are no sane interface names.','line_number':704,'multiline':False]
['text':' The function 'if_nametoindex' is not supported on Windows XP.','line_number':736,'multiline':False]
['text':' If we are targeting XP using a vxxx_xp toolset then fail.','line_number':737,'multiline':False]
['text':' This is brutal as this code could be run on later windows clients','line_number':738,'multiline':False]
['text':' meaning the IPv6 zone_id cannot have an interface name.','line_number':739,'multiline':False]
['text':' This could be fixed with a runtime check.','line_number':740,'multiline':False]
