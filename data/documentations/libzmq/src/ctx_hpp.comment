['text':' SPDX-License-Identifier: MPL-2.0 ','line_number':1,'multiline':True]
['text':'  Information associated with inproc endpoint. Note that endpoint options','line_number':28,'multiline':False]
['text':'  are registered as well so that the peer can access them without a need','line_number':29,'multiline':False]
['text':'  for synchronisation, handshaking or similar.','line_number':30,'multiline':False]
['text':'  Start a new thread with proper scheduling parameters.','line_number':42,'multiline':False]
['text':'  Synchronisation of access to context options.','line_number':52,'multiline':False]
['text':'  Thread parameters.','line_number':56,'multiline':False]
['text':'  Context object encapsulates all the global state associated with','line_number':63,'multiline':False]
['text':'  the library.','line_number':64,'multiline':False]
['text':'  Create the context object.','line_number':69,'multiline':False]
['text':'  Returns false if object is not a context.','line_number':72,'multiline':False]
['text':'  This function is called when user invokes zmq_ctx_term. If there are','line_number':75,'multiline':False]
['text':'  no more sockets open it'll cause all the infrastructure to be shut','line_number':76,'multiline':False]
['text':'  down. If there are open sockets still, the deallocation happens','line_number':77,'multiline':False]
['text':'  after the last one is closed.','line_number':78,'multiline':False]
['text':' This function starts the terminate process by unblocking any blocking','line_number':81,'multiline':False]
['text':' operations currently in progress and stopping any more socket activity','line_number':82,'multiline':False]
['text':' (except zmq_close).','line_number':83,'multiline':False]
['text':' This function is non-blocking.','line_number':84,'multiline':False]
['text':' terminate must still be called afterwards.','line_number':85,'multiline':False]
['text':' This function is optional, terminate will unblock any current','line_number':86,'multiline':False]
['text':' operations as well.','line_number':87,'multiline':False]
['text':'  Set and get context properties.','line_number':90,'multiline':False]
['text':'  Create and destroy a socket.','line_number':95,'multiline':False]
['text':'  Send command to the destination thread.','line_number':99,'multiline':False]
['text':'  Returns the I/O thread that is the least busy at the moment.','line_number':102,'multiline':False]
['text':'  Affinity specifies which I/O threads are eligible (0 = all).','line_number':103,'multiline':False]
['text':'  Returns NULL if no I/O thread is available.','line_number':104,'multiline':False]
['text':'  Returns reaper thread object.','line_number':107,'multiline':False]
['text':'  Management of inproc endpoints.','line_number':110,'multiline':False]
['text':' Return family for the VMCI socket or -1 if it's not available.','line_number':122,'multiline':False]
['text':'  Used to check whether the object is a context.','line_number':146,'multiline':False]
['text':'  Sockets belonging to this context. We need the list so that','line_number':149,'multiline':False]
['text':'  we can notify the sockets when zmq_ctx_term() is called.','line_number':150,'multiline':False]
['text':'  The sockets will return ETERM then.','line_number':151,'multiline':False]
['text':'  List of unused thread slots.','line_number':155,'multiline':False]
['text':'  If true, zmq_init has been called but no socket has been created','line_number':159,'multiline':False]
['text':'  yet. Launching of I/O threads is delayed.','line_number':160,'multiline':False]
['text':'  If true, zmq_ctx_term was already called.','line_number':163,'multiline':False]
['text':'  Synchronisation of accesses to global slot-related data:','line_number':166,'multiline':False]
['text':'  sockets, empty_slots, terminating. It also synchronises','line_number':167,'multiline':False]
['text':'  access to zombie sockets as such (as opposed to slots) and provides','line_number':168,'multiline':False]
['text':'  a memory barrier to ensure that all CPU cores see the same data.','line_number':169,'multiline':False]
['text':'  The reaper thread.','line_number':172,'multiline':False]
['text':'  I/O threads.','line_number':175,'multiline':False]
['text':'  Array of pointers to mailboxes for both application and I/O threads.','line_number':179,'multiline':False]
['text':'  Mailbox for zmq_ctx_term thread.','line_number':182,'multiline':False]
['text':'  List of inproc endpoints within this context.','line_number':185,'multiline':False]
['text':' List of inproc connection endpoints pending a bind','line_number':189,'multiline':False]
['text':'  Synchronisation of access to the list of inproc endpoints.','line_number':194,'multiline':False]
['text':'  Maximum socket ID.','line_number':197,'multiline':False]
['text':'  Maximum number of sockets that can be opened at the same time.','line_number':200,'multiline':False]
['text':'  Maximum allowed message size','line_number':203,'multiline':False]
['text':'  Number of I/O threads to launch.','line_number':206,'multiline':False]
['text':'  Does context wait (possibly forever) on termination?','line_number':209,'multiline':False]
['text':'  Is IPv6 enabled on this context?','line_number':212,'multiline':False]
['text':' Should we use zero copy message decoding in this context?','line_number':215,'multiline':False]
['text':' the process that created this context. Used to detect forking.','line_number':221,'multiline':False]
