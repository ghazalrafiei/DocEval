['text':' SPDX-License-Identifier: MPL-2.0 ','line_number':1,'multiline':True]
['text':'  Returns false if object is not a socket.','line_number':39,'multiline':False]
['text':'  Returns whether the socket is thread-safe.','line_number':42,'multiline':False]
['text':'  Create a socket of a specified type.','line_number':45,'multiline':False]
['text':'  Returns the mailbox associated with this socket.','line_number':49,'multiline':False]
['text':'  Interrupt blocking call if the socket is stuck in one.','line_number':52,'multiline':False]
['text':'  This function can be called from a different thread!','line_number':53,'multiline':False]
['text':'  Interface for communication with the API layer.','line_number':56,'multiline':False]
['text':'  These functions are used by the polling mechanism to determine','line_number':68,'multiline':False]
['text':'  which events are to be reported from this socket.','line_number':69,'multiline':False]
['text':'  Joining and leaving groups','line_number':73,'multiline':False]
['text':'  Using this function reaper thread ask the socket to register with','line_number':77,'multiline':False]
['text':'  its poller.','line_number':78,'multiline':False]
['text':'  i_poll_events implementation. This interface is used when socket','line_number':81,'multiline':False]
['text':'  is handled by the poller in the reaper thread.','line_number':82,'multiline':False]
['text':'  i_pipe_events interface implementation.','line_number':87,'multiline':False]
['text':'  Query the state of a specific peer. The default implementation','line_number':131,'multiline':False]
['text':'  always returns an ENOTSUP error.','line_number':132,'multiline':False]
['text':'  Request for pipes statistics - will generate a ZMQ_EVENT_PIPES_STATS','line_number':136,'multiline':False]
['text':'  after gathering the data asynchronously. Requires event monitoring to','line_number':137,'multiline':False]
['text':'  be enabled.','line_number':138,'multiline':False]
['text':'  Concrete algorithms for the x- methods are to be defined by','line_number':150,'multiline':False]
['text':'  individual socket types.','line_number':151,'multiline':False]
['text':'  The default implementation assumes there are no specific socket','line_number':156,'multiline':False]
['text':'  options for the particular socket type. If not so, ZMQ_FINAL this','line_number':157,'multiline':False]
['text':'  method.','line_number':158,'multiline':False]
['text':'  The default implementation assumes there are no specific socket','line_number':162,'multiline':False]
['text':'  options for the particular socket type. If not so, ZMQ_FINAL this','line_number':163,'multiline':False]
['text':'  method.','line_number':164,'multiline':False]
['text':'  The default implementation assumes that send is not supported.','line_number':167,'multiline':False]
['text':'  The default implementation assumes that recv in not supported.','line_number':171,'multiline':False]
['text':'  i_pipe_events will be forwarded to these functions.','line_number':175,'multiline':False]
['text':'  the default implementation assumes that joub and leave are not supported.','line_number':181,'multiline':False]
['text':'  Delay actual destruction of the socket.','line_number':185,'multiline':False]
['text':' Mutex for synchronize access to the socket in thread safe mode','line_number':190,'multiline':False]
['text':' test if event should be sent and then dispatch it','line_number':194,'multiline':False]
['text':' Socket event data dispatch','line_number':200,'multiline':False]
['text':' Monitor socket cleanup','line_number':206,'multiline':False]
['text':'  Creates new endpoint ID and adds the endpoint to the map.','line_number':209,'multiline':False]
['text':'  Map of open endpoints.','line_number':214,'multiline':False]
['text':'  Map of open inproc endpoints.','line_number':219,'multiline':False]
['text':'  To be called after processing commands or invoking any command','line_number':233,'multiline':False]
['text':'  handlers explicitly. If required, it will deallocate the socket.','line_number':234,'multiline':False]
['text':'  Moves the flags from the message to local variables,','line_number':237,'multiline':False]
['text':'  to be later retrieved by getsockopt.','line_number':238,'multiline':False]
['text':'  Used to check whether the object is a socket.','line_number':241,'multiline':False]
['text':'  If true, associated context was already terminated.','line_number':244,'multiline':False]
['text':'  If true, object should have been already destroyed. However,','line_number':247,'multiline':False]
['text':'  destruction is delayed while we unwind the stack to the point','line_number':248,'multiline':False]
['text':'  where it doesn't intersect the object being destroyed.','line_number':249,'multiline':False]
['text':'  Parse URI string.','line_number':252,'multiline':False]
['text':'  Check whether transport protocol, as specified in connect or','line_number':256,'multiline':False]
['text':'  bind, is available and compatible with the socket type.','line_number':257,'multiline':False]
['text':'  Register the pipe with this socket.','line_number':260,'multiline':False]
['text':'  Processes commands sent to this socket (if any). If timeout is -1,','line_number':265,'multiline':False]
['text':'  returns only after at least one command was processed.','line_number':266,'multiline':False]
['text':'  If throttle argument is true, commands are processed at most once','line_number':267,'multiline':False]
['text':'  in a predefined time period.','line_number':268,'multiline':False]
['text':'  Handlers for incoming commands.','line_number':271,'multiline':False]
['text':'  Socket's mailbox object.','line_number':286,'multiline':False]
['text':'  List of attached pipes.','line_number':289,'multiline':False]
['text':'  Reaper's poller and handle of this socket within it.','line_number':293,'multiline':False]
['text':'  Timestamp of when commands were processed the last time.','line_number':297,'multiline':False]
['text':'  Number of messages received since last command processing.','line_number':300,'multiline':False]
['text':'  True if the last message received had MORE flag set.','line_number':303,'multiline':False]
['text':'  Improves efficiency of time measurement.','line_number':306,'multiline':False]
['text':' Monitor socket;','line_number':309,'multiline':False]
['text':' Bitmask of events being monitored','line_number':312,'multiline':False]
['text':' Last socket endpoint resolved URI','line_number':315,'multiline':False]
['text':' Indicate if the socket is thread safe','line_number':318,'multiline':False]
['text':' Signaler to be used in the reaping stage','line_number':321,'multiline':False]
['text':' Mutex to synchronize access to the monitor Pair socket','line_number':324,'multiline':False]
['text':' Add a flag for mark disconnect action','line_number':329,'multiline':False]
['text':' methods from socket_base_t','line_number':339,'multiline':False]
['text':' own methods','line_number':345,'multiline':False]
['text':'  Outbound pipes indexed by the peer IDs.','line_number':374,'multiline':False]
['text':' Next assigned name on a zmq_connect() call used by ROUTER and STREAM socket types','line_number':378,'multiline':False]
