['text':' SPDX-License-Identifier: MPL-2.0 ','line_number':1,'multiline':True]
['text':'  bits 2-5','line_number':15,'multiline':False]
['text':'  Signature for free function to deallocate the message content.','line_number':18,'multiline':False]
['text':'  Note that it has to be declared as "C" so that it is the same as','line_number':19,'multiline':False]
['text':'  zmq_free_fn defined in zmq.h.','line_number':20,'multiline':False]
['text':'  Note that this structure needs to be explicitly constructed','line_number':27,'multiline':False]
['text':'  (init functions) and destructed (close function).','line_number':28,'multiline':False]
['text':'  Shared message buffer. Message data are either allocated in one','line_number':36,'multiline':False]
['text':'  continuous block along with this structure - thus avoiding one','line_number':37,'multiline':False]
['text':'  malloc/free pair or they are stored in user-supplied memory.','line_number':38,'multiline':False]
['text':'  In the latter case, ffn member stores pointer to the function to be','line_number':39,'multiline':False]
['text':'  used to deallocate the data. If the buffer is actually shared (there','line_number':40,'multiline':False]
['text':'  are at least 2 references to it) refcount member contains number of','line_number':41,'multiline':False]
['text':'  references.','line_number':42,'multiline':False]
['text':'  Message flags.','line_number':52,'multiline':False]
['text':'  Followed by more parts','line_number':55,'multiline':False]
['text':'  Command frame (see ZMTP spec)','line_number':56,'multiline':False]
['text':'  Command types, use only bits 2-5 and compare with ==, not bitwise,','line_number':57,'multiline':False]
['text':'  a command can never be of more that one type at the same time','line_number':58,'multiline':False]
['text':'  These are called on each message received by the session_base class,','line_number':111,'multiline':False]
['text':'  so get them inlined to avoid the overhead of 2 function calls per msg','line_number':112,'multiline':False]
['text':'  After calling this function you can copy the message in POD-style','line_number':136,'multiline':False]
['text':'  refs_ times. No need to call copy.','line_number':137,'multiline':False]
['text':'  Removes references previously added by add_refs. If the number of','line_number':140,'multiline':False]
['text':'  references drops to 0, the message is closed and false is returned.','line_number':141,'multiline':False]
['text':'  Size in bytes of the largest message that is still copied around','line_number':146,'multiline':False]
['text':'  rather than being reference-counted.','line_number':147,'multiline':False]
['text':' 4PING','line_number':159,'multiline':False]
['text':' 6CANCEL','line_number':160,'multiline':False]
['text':' 9SUBSCRIBE','line_number':161,'multiline':False]
['text':'  Different message types.','line_number':167,'multiline':False]
['text':'  VSM messages store the content in the message itself','line_number':171,'multiline':False]
['text':'  LMSG messages store the content in malloc-ed memory','line_number':173,'multiline':False]
['text':'  Delimiter messages are used in envelopes','line_number':175,'multiline':False]
['text':'  CMSG messages point to constant data','line_number':177,'multiline':False]
['text':' zero-copy LMSG message for v2_decoder','line_number':180,'multiline':False]
['text':'  Join message for radio_dish','line_number':183,'multiline':False]
['text':'  Leave message for radio_dish','line_number':186,'multiline':False]
['text':'  Note that fields shared between different message types are not','line_number':219,'multiline':False]
['text':'  moved to the parent class (msg_t). This way we get tighter packing','line_number':220,'multiline':False]
['text':'  of the data. Shared fields can be accessed via 'base' member of','line_number':221,'multiline':False]
['text':'  the union.','line_number':222,'multiline':False]
['text':' Since we abort on close failure we preserve errno for success case.','line_number':302,'multiline':False]
