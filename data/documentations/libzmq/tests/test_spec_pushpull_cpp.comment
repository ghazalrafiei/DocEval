['text':' SPDX-License-Identifier: MPL-2.0 ','line_number':1,'multiline':True]
['text':' PUSH: SHALL route outgoing messages to connected peers using a','line_number':13,'multiline':False]
['text':' round-robin strategy.','line_number':14,'multiline':False]
['text':' Wait for connections.','line_number':32,'multiline':False]
['text':' Send 2N messages','line_number':35,'multiline':False]
['text':' Expect every PULL got one of each','line_number':41,'multiline':False]
['text':' PULL: SHALL receive incoming messages from its peers using a fair-queuing','line_number':53,'multiline':False]
['text':' strategy.','line_number':54,'multiline':False]
['text':' Wait for connections.','line_number':72,'multiline':False]
['text':' Send 2N messages','line_number':78,'multiline':False]
['text':' Wait for data.','line_number':93,'multiline':False]
['text':' Expect to pull one from each first','line_number':99,'multiline':False]
['text':' And then get the second batch','line_number':108,'multiline':False]
['text':' PUSH: SHALL block on sending, or return a suitable error, when it has no','line_number':125,'multiline':False]
['text':' available peers.','line_number':126,'multiline':False]
['text':' PUSH and PULL: SHALL create this queue when a peer connects to it. If','line_number':142,'multiline':False]
['text':' this peer disconnects, the socket SHALL destroy its queue and SHALL','line_number':143,'multiline':False]
['text':' discard any messages it contains.','line_number':144,'multiline':False]
['text':' Send two messages, one should be stuck in A's outgoing queue, the other','line_number':165,'multiline':False]
['text':' arrives at B.','line_number':166,'multiline':False]
['text':' Both queues should now be full, indicated by A blocking on send.','line_number':170,'multiline':False]
['text':' Disconnect may take time and need command processing.','line_number':175,'multiline':False]
['text':' Can't receive old data on B.','line_number':185,'multiline':False]
['text':' Sending fails.','line_number':188,'multiline':False]
['text':' Reconnect B','line_number':191,'multiline':False]
['text':' Still can't receive old data on B.','line_number':194,'multiline':False]
['text':' two messages should be sendable before the queues are filled up.','line_number':197,'multiline':False]
['text':' PUSH and PULL: SHALL either receive or drop multipart messages atomically.','line_number':209,'multiline':False]
['text':' Wait for connections.','line_number':233,'multiline':False]
['text':' A large message is needed to overrun the TCP buffers','line_number':238,'multiline':False]
['text':' Normal case - exercise the queues','line_number':243,'multiline':False]
['text':' Fill the HWMs of sender and receiver, one message each','line_number':256,'multiline':False]
['text':' Disconnect and simulate a poll (doesn't work on Windows) to','line_number':265,'multiline':False]
['text':' let the commands run and let the pipes start to be deallocated','line_number':266,'multiline':False]
['text':' Reconnect and immediately push a large message into the pipe,','line_number':275,'multiline':False]
['text':' if the problem is reproduced the pipe is in the process of being','line_number':276,'multiline':False]
['text':' terminated but still exists (state term_ack_sent) and had already','line_number':277,'multiline':False]
['text':' accepted the frame, so with the first frames already gone and','line_number':278,'multiline':False]
['text':' unreachable only the last is left, and is stuck in the lb.','line_number':279,'multiline':False]
['text':' inproc won't fail, much faster to connect/disconnect pipes than TCP','line_number':291,'multiline':False]
['text':' at this point the new pipe is there and it works','line_number':293,'multiline':False]
['text':' On very slow machines the message will not be lost, as it will','line_number':314,'multiline':False]
['text':' be sent when the new pipe is already in place, so avoid failing','line_number':315,'multiline':False]
['text':' and simply carry on as it would be very noisy otherwise.','line_number':316,'multiline':False]
['text':' Receive both to avoid leaking metadata.','line_number':317,'multiline':False]
['text':' If only the "5" message is received, the problem is reproduced, and','line_number':318,'multiline':False]
['text':' without the fix the first message received would be the last large','line_number':319,'multiline':False]
['text':' frame of "3".','line_number':320,'multiline':False]
['text':' TODO Tests disabled until libzmq does this properly','line_number':384,'multiline':False]
['text':'RUN_TEST (test_spec_pushpull_inproc_destroy_queue_on_disconnect);','line_number':385,'multiline':False]
['text':'RUN_TEST (test_spec_pushpull_tcp_destroy_queue_on_disconnect);','line_number':386,'multiline':False]
