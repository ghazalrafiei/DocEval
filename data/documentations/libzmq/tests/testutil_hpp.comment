['text':' SPDX-License-Identifier: MPL-2.0 ','line_number':1,'multiline':True]
['text':'  For AF_INET and IPPROTO_TCP','line_number':14,'multiline':False]
['text':'  This defines the settle time used in tests; raise this if we','line_number':28,'multiline':False]
['text':'  get test failures on slower systems due to binds/connects not','line_number':29,'multiline':False]
['text':'  settled. Tested to work reliably at 1 msec on a fast PC.','line_number':30,'multiline':False]
['text':'  In msec','line_number':31,'multiline':False]
['text':'  Commonly used buffer size for ZMQ_LAST_ENDPOINT','line_number':32,'multiline':False]
['text':'  this used to be sizeof ("tcp://[::ffff:127.127.127.127]:65536"), but this','line_number':33,'multiline':False]
['text':'  may be too short for ipc wildcard binds, e.g.','line_number':34,'multiline':False]
['text':'  We need to test codepaths with non-random bind ports. List them here to','line_number':37,'multiline':False]
['text':'  keep them unique, to allow parallel test runs.','line_number':38,'multiline':False]
['text':'  For tests that mock ZMTP','line_number':47,'multiline':False]
['text':' duplicated from fd.hpp','line_number':74,'multiline':False]
['text':' Macros min(a,b) and max(a,b)','line_number':77,'multiline':False]
['text':' duplicated from fd.hpp','line_number':97,'multiline':False]
['text':'  In MSVC prior to v14, snprintf is not available','line_number':121,'multiline':False]
['text':'  The closest implementation is the _snprintf_s function','line_number':122,'multiline':False]
['text':'  Bounce a message from client to server and back','line_number':130,'multiline':False]
['text':'  For REQ/REP or DEALER/DEALER pairs only','line_number':131,'multiline':False]
['text':'  Same as bounce, but expect messages to never arrive','line_number':134,'multiline':False]
['text':'  for security or subscriber reasons.','line_number':135,'multiline':False]
['text':'  Receive 0MQ string from socket and convert into C string','line_number':138,'multiline':False]
['text':'  Caller must free returned string. Returns NULL if the context','line_number':139,'multiline':False]
['text':'  is being terminated.','line_number':140,'multiline':False]
['text':'  Sends a message composed of frames that are C strings or null frames.','line_number':148,'multiline':False]
['text':'  The list must be terminated by SEQ_END.','line_number':149,'multiline':False]
['text':'  Example: s_send_seq (req, "ABC", 0, "DEF", SEQ_END);','line_number':150,'multiline':False]
['text':'  Receives message a number of frames long and checks that the frames have','line_number':154,'multiline':False]
['text':'  the given data which can be either C strings or 0 for a null frame.','line_number':155,'multiline':False]
['text':'  The list must be terminated by SEQ_END.','line_number':156,'multiline':False]
['text':'  Example: s_recv_seq (rep, "ABC", 0, "DEF", SEQ_END);','line_number':157,'multiline':False]
['text':'  Sets a zero linger period on a socket and closes it.','line_number':162,'multiline':False]
['text':'  Setups the test environment. Must be called at the beginning of each test','line_number':165,'multiline':False]
['text':'  executable. On POSIX systems, it sets an alarm to the specified number of','line_number':166,'multiline':False]
['text':'  seconds, after which the test will be killed. Set to 0 to disable this','line_number':167,'multiline':False]
['text':'  timeout.','line_number':168,'multiline':False]
['text':'  Provide portable millisecond sleep','line_number':171,'multiline':False]
['text':'  http://www.cplusplus.com/forum/unices/60161/','line_number':172,'multiline':False]
['text':'  http://en.cppreference.com/w/cpp/thread/sleep_for','line_number':173,'multiline':False]
['text':' check if IPv6 is available (0/false if not, 1/true if it is)','line_number':177,'multiline':False]
['text':' only way to reliably check is to actually open a socket and try to bind it','line_number':178,'multiline':False]
['text':' check if tipc is available (0/false if not, 1/true if it is)','line_number':181,'multiline':False]
['text':' only way to reliably check is to actually open a socket and try to bind it','line_number':182,'multiline':False]
['text':' as it depends on a non-default kernel module to be already loaded','line_number':183,'multiline':False]
['text':'  Wrapper around 'inet_pton' for systems that don't support it (e.g. Windows','line_number':186,'multiline':False]
['text':'  XP)','line_number':187,'multiline':False]
['text':'  Binds an ipv4 BSD socket to an ephemeral port, returns the compiled sockaddr','line_number':190,'multiline':False]
['text':'  Some custom definitions in addition to IPPROTO_TCP and IPPROTO_UDP','line_number':193,'multiline':False]
['text':'  Connects a BSD socket to the ZMQ endpoint. Works with ipv4/ipv6/unix.','line_number':197,'multiline':False]
['text':'  Binds a BSD socket to an ephemeral port, returns the file descriptor.','line_number':202,'multiline':False]
['text':'  The resulting ZMQ endpoint will be stored in my_endpoint, including the protocol','line_number':203,'multiline':False]
['text':'  prefix, so ensure it is writable and of appropriate size.','line_number':204,'multiline':False]
['text':'  Works with ipv4/ipv6/unix. With unix sockets address_/port_ can be empty and','line_number':205,'multiline':False]
['text':'  my_endpoint_ will contain a random path.','line_number':206,'multiline':False]
