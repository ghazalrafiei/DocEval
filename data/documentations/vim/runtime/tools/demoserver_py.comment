['text':'!/usr/bin/python','line_number':1,'multiline':False]
['text':'','line_number':2,'multiline':False]
['text':' Server that will accept connections from a Vim channel.','line_number':3,'multiline':False]
['text':' Run this server and then in Vim you can open the channel:','line_number':4,'multiline':False]
['text':'  :let handle = ch_open('localhost:8765')','line_number':5,'multiline':False]
['text':'','line_number':6,'multiline':False]
['text':' Then Vim can send requests to the server:','line_number':7,'multiline':False]
['text':'  :let response = ch_sendexpr(handle, 'hello!')','line_number':8,'multiline':False]
['text':'','line_number':9,'multiline':False]
['text':' And you can control Vim by typing a JSON message here, e.g.:','line_number':10,'multiline':False]
['text':'   ["ex","echo 'hi there'"]','line_number':11,'multiline':False]
['text':'','line_number':12,'multiline':False]
['text':' There is no prompt, just type a line and press Enter.','line_number':13,'multiline':False]
['text':' To exit cleanly type "quit<Enter>".','line_number':14,'multiline':False]
['text':'','line_number':15,'multiline':False]
['text':' See ":help channel-demo" in Vim.','line_number':16,'multiline':False]
['text':'','line_number':17,'multiline':False]
['text':' This requires Python 2.6 or later.','line_number':18,'multiline':False]
['text':' Python 3','line_number':27,'multiline':False]
['text':' Python 2','line_number':30,'multiline':False]
['text':' Send a response if the sequence number is positive.','line_number':57,'multiline':False]
['text':' Negative numbers are used for "eval" responses.','line_number':58,'multiline':False]
['text':' response is not to a specific message callback but to the','line_number':65,'multiline':False]
['text':' channel callback, need to use ID zero','line_number':66,'multiline':False]
['text':' Start a thread with the server -- that thread will then start one','line_number':85,'multiline':False]
['text':' more thread for each request','line_number':86,'multiline':False]
['text':' Exit the server thread when the main thread terminates','line_number':89,'multiline':False]
