['text':' vi:set ts=8 sts=4 sw=4:
 *
 * VIM - Vi IMproved	gvimext by Tianmiao Hu
 *
 * Do ":help uganda"  in Vim to read copying and usage conditions.
 * Do ":help credits" in Vim to see a list of people who contributed.
 ','line_number':1,'multiline':True]
['text':'
 * gvimext is a DLL which is used for the "Edit with Vim" context menu
 * extension.  It implements a MS defined interface with the Shell.
 *
 * If you have any questions or any suggestions concerning gvimext, please
 * contact Tianmiao Hu: tianmiao@acm.org.
 ','line_number':9,'multiline':True]
['text':' Always get an error while putting the following stuff to the','line_number':21,'multiline':False]
['text':' gvimext.h file as class protected variables, give up and','line_number':22,'multiline':False]
['text':' declare them as global stuff','line_number':23,'multiline':False]
['text':' The buffers size used to be MAX_PATH (260 bytes), but that's not always
 * enough ','line_number':34,'multiline':True]
['text':' The "Edit with Vim" shell extension provides these choices when','line_number':38,'multiline':False]
['text':' a new instance of Gvim is selected:','line_number':39,'multiline':False]
['text':'   - use tabpages','line_number':40,'multiline':False]
['text':'   - enable diff mode','line_number':41,'multiline':False]
['text':'   - none of the above','line_number':42,'multiline':False]
['text':'','line_number':47,'multiline':False]
['text':' Get the name of the Gvim executable to use, with the path.','line_number':48,'multiline':False]
['text':' When "runtime" is non-zero, we were called to find the runtime directory.','line_number':49,'multiline':False]
['text':' Returns the path in name[BUFSIZE].  It's empty when it fails.','line_number':50,'multiline':False]
['text':'','line_number':51,'multiline':False]
['text':' Get the location of gvim from the registry.','line_number':58,'multiline':False]
['text':' Registry didn't work, use the search path.','line_number':72,'multiline':False]
['text':' Only when looking for the executable, not the runtime dir, we can','line_number':78,'multiline':False]
['text':' search for the batch file or a name without a path.','line_number':79,'multiline':False]
['text':' finds gvim.bat or gvim.exe','line_number':83,'multiline':False]
['text':' avoid that Vim tries to expand wildcards in the file names','line_number':91,'multiline':False]
['text':'','line_number':106,'multiline':False]
['text':' Get the Vim runtime directory into buf[BUFSIZE].','line_number':107,'multiline':False]
['text':' The result is empty when it failed.','line_number':108,'multiline':False]
['text':' When it works, the path ends in a slash or backslash.','line_number':109,'multiline':False]
['text':'','line_number':110,'multiline':False]
['text':' When no path found, use the search path to expand it.','line_number':119,'multiline':False]
['text':' remove "gvim.exe" from the end','line_number':123,'multiline':False]
['text':'','line_number':163,'multiline':False]
['text':' GETTEXT: translated messages and menu entries','line_number':164,'multiline':False]
['text':'','line_number':165,'multiline':False]
['text':' Dummy functions','line_number':181,'multiline':False]
['text':'','line_number':197,'multiline':False]
['text':' Attempt to load libintl.dll.  If it doesn't work, use dummy functions.','line_number':198,'multiline':False]
['text':' "dir" is the directory where the libintl.dll might be.','line_number':199,'multiline':False]
['text':' Return 1 for success, 0 for failure.','line_number':200,'multiline':False]
['text':'','line_number':201,'multiline':False]
['text':' No need to initialize twice.','line_number':222,'multiline':False]
['text':' Load gettext library from $VIMRUNTIME\GvimExt{64,32} directory.','line_number':226,'multiline':False]
['text':' Add the directory to $PATH temporarily.','line_number':227,'multiline':False]
['text':' Get the addresses of the functions we need.','line_number':253,'multiline':False]
['text':' domainname ','line_number':286,'multiline':True]
['text':' domainname ','line_number':292,'multiline':True]
['text':' dirname ','line_number':292,'multiline':True]
['text':' domainname ','line_number':298,'multiline':True]
['text':' codeset ','line_number':298,'multiline':True]
['text':'','line_number':303,'multiline':False]
['text':' Setup for translating strings.','line_number':304,'multiline':False]
['text':'','line_number':305,'multiline':False]
['text':' Try to locate the runtime files.  The path is used to find libintl.dll','line_number':312,'multiline':False]
['text':' and the vim.mo files.','line_number':313,'multiline':False]
['text':'','line_number':334,'multiline':False]
['text':' Use UTF-8 for gettext. Returns previous codeset.','line_number':335,'multiline':False]
['text':'','line_number':336,'multiline':False]
['text':'','line_number':347,'multiline':False]
['text':' Restore previous codeset for gettext.','line_number':348,'multiline':False]
['text':'','line_number':349,'multiline':False]
['text':' FEAT_GETTEXT','line_number':356,'multiline':False]
['text':'','line_number':358,'multiline':False]
['text':' Global variables','line_number':359,'multiline':False]
['text':'','line_number':360,'multiline':False]
['text':' Reference count of this DLL.','line_number':361,'multiline':False]
['text':' Handle to this DLL itself.','line_number':362,'multiline':False]
['text':'---------------------------------------------------------------------------','line_number':365,'multiline':False]
['text':' DllMain','line_number':366,'multiline':False]
['text':'---------------------------------------------------------------------------','line_number':367,'multiline':False]
['text':' lpReserved ','line_number':369,'multiline':True]
['text':' Extension DLL one-time initialization','line_number':374,'multiline':False]
['text':' ok','line_number':382,'multiline':False]
['text':'---------------------------------------------------------------------------','line_number':406,'multiline':False]
['text':' DllCanUnloadNow','line_number':407,'multiline':False]
['text':'---------------------------------------------------------------------------','line_number':408,'multiline':False]
['text':' any interface on this object is the object pointer','line_number':446,'multiline':False]
['text':' Shell extensions typically don't support aggregation (inheritance)','line_number':481,'multiline':False]
['text':' Create the main shell extension object.  The shell will then call','line_number':486,'multiline':False]
['text':' QueryInterface with IID_IShellExtInit--this is how shell extensions are','line_number':487,'multiline':False]
['text':' initialized.','line_number':488,'multiline':False]
['text':' create the CShellExt object','line_number':490,'multiline':False]
['text':' fLock ','line_number':499,'multiline':True]
['text':' *********************** CShellExt *************************','line_number':504,'multiline':False]
['text':'','line_number':566,'multiline':False]
['text':'  FUNCTION: CShellExt::Initialize(LPCITEMIDLIST, LPDATAOBJECT, HKEY)','line_number':567,'multiline':False]
['text':'','line_number':568,'multiline':False]
['text':'  PURPOSE: Called by the shell when initializing a context menu or property','line_number':569,'multiline':False]
['text':'	     sheet extension.','line_number':570,'multiline':False]
['text':'','line_number':571,'multiline':False]
['text':'  PARAMETERS:','line_number':572,'multiline':False]
['text':'    pIDFolder - Specifies the parent folder','line_number':573,'multiline':False]
['text':'    pDataObj  - Specifies the set of items selected in that folder.','line_number':574,'multiline':False]
['text':'    hRegKey   - Specifies the type of the focused item in the selection.','line_number':575,'multiline':False]
['text':'','line_number':576,'multiline':False]
['text':'  RETURN VALUE:','line_number':577,'multiline':False]
['text':'','line_number':578,'multiline':False]
['text':'    NOERROR in all cases.','line_number':579,'multiline':False]
['text':'','line_number':580,'multiline':False]
['text':'  COMMENTS:   Note that at the time this function is called, we don't know','line_number':581,'multiline':False]
['text':'		(or care) what type of shell extension is being initialized.','line_number':582,'multiline':False]
['text':'		It could be a context menu or a property sheet.','line_number':583,'multiline':False]
['text':'','line_number':584,'multiline':False]
['text':' pIDFolder ','line_number':586,'multiline':True]
['text':' hRegKey ','line_number':588,'multiline':True]
['text':' Initialize can be called more than once','line_number':590,'multiline':False]
['text':' duplicate the object pointer and registry handle','line_number':594,'multiline':False]
['text':'','line_number':606,'multiline':False]
['text':'  FUNCTION: CShellExt::QueryContextMenu(HMENU, UINT, UINT, UINT, UINT)','line_number':607,'multiline':False]
['text':'','line_number':608,'multiline':False]
['text':'  PURPOSE: Called by the shell just before the context menu is displayed.','line_number':609,'multiline':False]
['text':'	     This is where you add your specific menu items.','line_number':610,'multiline':False]
['text':'','line_number':611,'multiline':False]
['text':'  PARAMETERS:','line_number':612,'multiline':False]
['text':'    hMenu      - Handle to the context menu','line_number':613,'multiline':False]
['text':'    indexMenu  - Index of where to begin inserting menu items','line_number':614,'multiline':False]
['text':'    idCmdFirst - Lowest value for new menu ID's','line_number':615,'multiline':False]
['text':'    idCmtLast  - Highest value for new menu ID's','line_number':616,'multiline':False]
['text':'    uFlags     - Specifies the context of the menu event','line_number':617,'multiline':False]
['text':'','line_number':618,'multiline':False]
['text':'  RETURN VALUE:','line_number':619,'multiline':False]
['text':'','line_number':620,'multiline':False]
['text':'','line_number':621,'multiline':False]
['text':'  COMMENTS:','line_number':622,'multiline':False]
['text':'','line_number':623,'multiline':False]
['text':' idCmdLast ','line_number':628,'multiline':True]
['text':' uFlags ','line_number':629,'multiline':True]
['text':' InsertMenu(hMenu, indexMenu++, MF_SEPARATOR|MF_BYPOSITION, 0, NULL);','line_number':637,'multiline':False]
['text':' Initialize m_cntOfHWnd to 0','line_number':639,'multiline':False]
['text':' Check whether "Edit with existing Vim" entries are disabled.','line_number':646,'multiline':False]
['text':' Use UTF-8 for gettext.','line_number':659,'multiline':False]
['text':' Retrieve all the vim instances, unless disabled.','line_number':662,'multiline':False]
['text':' Can edit up to 4 files in diff mode','line_number':690,'multiline':False]
['text':' Now display all the vim instances','line_number':726,'multiline':False]
['text':' Obtain window title, continue if can not','line_number':734,'multiline':False]
['text':' Truncate the title before the path, keep the file name','line_number':737,'multiline':False]
['text':' Now concatenate','line_number':745,'multiline':False]
['text':' InsertMenu(hMenu, indexMenu++, MF_SEPARATOR|MF_BYPOSITION, 0, NULL);','line_number':773,'multiline':False]
['text':' Restore previous codeset.','line_number':775,'multiline':False]
['text':' Must return number of menu items we added.','line_number':778,'multiline':False]
['text':'','line_number':782,'multiline':False]
['text':'  FUNCTION: CShellExt::InvokeCommand(LPCMINVOKECOMMANDINFO)','line_number':783,'multiline':False]
['text':'','line_number':784,'multiline':False]
['text':'  PURPOSE: Called by the shell after the user has selected on of the','line_number':785,'multiline':False]
['text':'	     menu items that was added in QueryContextMenu().','line_number':786,'multiline':False]
['text':'','line_number':787,'multiline':False]
['text':'  PARAMETERS:','line_number':788,'multiline':False]
['text':'    lpcmi - Pointer to an CMINVOKECOMMANDINFO structure','line_number':789,'multiline':False]
['text':'','line_number':790,'multiline':False]
['text':'  RETURN VALUE:','line_number':791,'multiline':False]
['text':'','line_number':792,'multiline':False]
['text':'','line_number':793,'multiline':False]
['text':'  COMMENTS:','line_number':794,'multiline':False]
['text':'','line_number':795,'multiline':False]
['text':' If HIWORD(lpcmi->lpVerb) then we have been called programmatically','line_number':802,'multiline':False]
['text':' and lpVerb is a command that should be invoked.  Otherwise, the shell','line_number':803,'multiline':False]
['text':' has called us, and LOWORD(lpcmi->lpVerb) is the menu ID the user has','line_number':804,'multiline':False]
['text':' selected.  Actually, it's (menu ID - idCmdFirst) from QueryContextMenu().','line_number':805,'multiline':False]
['text':' Existing with vim instance','line_number':812,'multiline':False]
['text':' If execution reaches this point we likely have an','line_number':834,'multiline':False]
['text':' inconsistency between the code that setup the menus','line_number':835,'multiline':False]
['text':' and this code that determines what the user','line_number':836,'multiline':False]
['text':' selected.  This should be detected and fixed during ','line_number':837,'multiline':False]
['text':' development.','line_number':838,'multiline':False]
['text':' hParent ','line_number':856,'multiline':True]
['text':' pszWorkingDir ','line_number':857,'multiline':True]
['text':' pszCmd ','line_number':858,'multiline':True]
['text':' pszParam ','line_number':859,'multiline':True]
['text':' iShowCmd ','line_number':860,'multiline':True]
['text':' Show and bring vim instance to foreground','line_number':865,'multiline':False]
['text':' Post the selected files to the vim instance','line_number':872,'multiline':False]
['text':' idCmd ','line_number':878,'multiline':True]
['text':' reserved ','line_number':880,'multiline':True]
['text':' Use UTF-8 for gettext.','line_number':884,'multiline':False]
['text':' Restore previous codeset.','line_number':892,'multiline':False]
['text':' First do a bunch of check','line_number':902,'multiline':False]
['text':' No invisible window','line_number':903,'multiline':False]
['text':' No child window ???','line_number':906,'multiline':False]
['text':' if (GetParent(hWnd)) return TRUE;','line_number':907,'multiline':False]
['text':' Class name should be Vim, if failed to get class name, return','line_number':908,'multiline':False]
['text':' Compare class name to that of vim, if not, return','line_number':911,'multiline':False]
['text':' First check if the number of vim instance exceeds MAX_HWND','line_number':914,'multiline':False]
['text':' stop enumeration','line_number':917,'multiline':False]
['text':' Now we get the vim window, put it into some kind of array','line_number':918,'multiline':False]
['text':' continue enumeration (otherwise this would be false)','line_number':922,'multiline':False]
['text':' There appears to be a bug in FindExecutableA() on Windows NT.','line_number':947,'multiline':False]
['text':' Use FindExecutableW() instead...','line_number':948,'multiline':False]
['text':' pszCmd ','line_number':964,'multiline':True]
['text':' pszParam ','line_number':965,'multiline':True]
['text':' iShowCmd ','line_number':966,'multiline':True]
['text':' Start the child process.','line_number':1015,'multiline':False]
['text':' No module name (use command line).','line_number':1016,'multiline':False]
['text':' Command line.','line_number':1017,'multiline':False]
['text':' Process handle not inheritable.','line_number':1018,'multiline':False]
['text':' Thread handle not inheritable.','line_number':1019,'multiline':False]
['text':' Set handle inheritance to FALSE.','line_number':1020,'multiline':False]
['text':' No creation flags.','line_number':1021,'multiline':False]
['text':' Use parent's environment block.','line_number':1022,'multiline':False]
['text':' Use parent's starting directory.','line_number':1023,'multiline':False]
['text':' Pointer to STARTUPINFO structure.','line_number':1024,'multiline':False]
['text':' Pointer to PROCESS_INFORMATION structure.','line_number':1025,'multiline':False]
['text':' Use UTF-8 for gettext.','line_number':1028,'multiline':False]
['text':' Restore previous codeset.','line_number':1039,'multiline':False]
