['text':' vi:set ts=8 sts=4 sw=4 noet:
 *
 * VIM - Vi IMproved	by Bram Moolenaar
 *
 * Do ":help uganda"  in Vim to read copying and usage conditions.
 * Do ":help credits" in Vim to see a list of people who contributed.
 * See README.txt for an overview of the Vim source code.
 ','line_number':1,'multiline':True]
['text':'
 * evalbuffer.c: Buffer related builtin functions
 ','line_number':10,'multiline':True]
['text':'
 * Mark references in functions of buffers.
 ','line_number':17,'multiline':True]
['text':' Ignore 'magic' and 'cpoptions' here to make scripts portable','line_number':61,'multiline':False]
['text':'
 * Find a buffer by number or exact name.
 ','line_number':75,'multiline':True]
['text':' No full path name match, try a match with a URL or a "nofile"','line_number':92,'multiline':False]
['text':' buffer, these don't use the full path.','line_number':93,'multiline':False]
['text':'
 * If there is a window for "curbuf", make it the current window.
 ','line_number':104,'multiline':True]
['text':' The b_wininfo list should have the windows that recently contained the','line_number':112,'multiline':False]
['text':' buffer, going over this is faster than going over all the windows.','line_number':113,'multiline':False]
['text':' Do check the buffer is still there.','line_number':114,'multiline':False]
['text':'
 * Used before making a change in "buf", which is not the current one: Make
 * "buf" the current buffer and find a window for this buffer, so that side
 * effects are done correctly (e.g., adjusting marks).
 *
 * Information is saved in "cob" and MUST be restored by calling
 * change_other_buffer_restore().
 *
 * If this fails then "curbuf" will not be equal to "buf".
 ','line_number':132,'multiline':True]
['text':' Set "curbuf" to the buffer being changed.  Then make sure there is a','line_number':147,'multiline':False]
['text':' window for it to handle any side effects.','line_number':148,'multiline':False]
['text':' simplest: find existing window for "buf"','line_number':153,'multiline':False]
['text':' No existing window for this buffer.  It is dangerous to have','line_number':157,'multiline':False]
['text':' curwin->w_buffer differ from "curbuf", use the autocmd window.','line_number':158,'multiline':False]
['text':'
 * Set line or list of lines in buffer "buf" to "lines".
 * Any type is allowed and converted to a string.
 ','line_number':181,'multiline':True]
['text':' When using the current buffer ml_mfp will be set if needed.  Useful when','line_number':200,'multiline':False]
['text':' setline() is used on startup.  For other buffers the buffer must be','line_number':201,'multiline':False]
['text':' loaded.','line_number':202,'multiline':False]
['text':' FAIL','line_number':206,'multiline':False]
['text':' After this don't use "return", goto "cleanup"!','line_number':212,'multiline':False]
['text':' set "curbuf" to "buf" and find a window for this buffer','line_number':215,'multiline':False]
['text':' appendbufline() uses the line number below which we insert','line_number':219,'multiline':False]
['text':' setbufline() uses the line number above which we insert, we only','line_number':222,'multiline':False]
['text':' append if it's below the last line','line_number':223,'multiline':False]
['text':' not appending anything always succeeds','line_number':231,'multiline':False]
['text':' default result is zero == OK','line_number':240,'multiline':False]
['text':' list argument, get next string','line_number':245,'multiline':False]
['text':' FAIL','line_number':253,'multiline':False]
['text':' When coming here from Insert mode, sync undo, so that this can be','line_number':257,'multiline':False]
['text':' undone separately from what was previously inserted.','line_number':258,'multiline':False]
['text':' notify that u_sync() was called','line_number':261,'multiline':False]
['text':' Existing line, replace it.','line_number':267,'multiline':False]
['text':' Removes any existing text properties.','line_number':268,'multiline':False]
['text':' OK','line_number':275,'multiline':False]
['text':' append the line','line_number':280,'multiline':False]
['text':' OK','line_number':283,'multiline':False]
['text':' only one string argument','line_number':286,'multiline':False]
['text':' Only adjust the cursor for buffers other than the current, unless it','line_number':299,'multiline':False]
['text':' is the current window.  For curbuf and other windows it has been','line_number':300,'multiline':False]
['text':' done in mark_adjust_internal().','line_number':301,'multiline':False]
['text':' Only update the window view if w_buffer matches curbuf, otherwise','line_number':309,'multiline':False]
['text':' the computations will be wrong.','line_number':310,'multiline':False]
['text':'
 * "append(lnum, string/list)" function
 ','line_number':320,'multiline':True]
['text':'
 * Set or append lines to a buffer.
 ','line_number':337,'multiline':True]
['text':' FAIL','line_number':355,'multiline':False]
['text':'
 * "appendbufline(buf, lnum, string/list)" function
 ','line_number':364,'multiline':True]
['text':'
 * "bufadd(expr)" function
 ','line_number':373,'multiline':True]
['text':'
 * "bufexists(expr)" function
 ','line_number':388,'multiline':True]
['text':'
 * "buflisted(expr)" function
 ','line_number':400,'multiline':True]
['text':'
 * "bufload(expr)" function
 ','line_number':415,'multiline':True]
['text':'
 * "bufloaded(expr)" function
 ','line_number':431,'multiline':True]
['text':'
 * "bufname(expr)" function
 ','line_number':446,'multiline':True]
['text':'
 * "bufnr(expr)" function
 ','line_number':469,'multiline':True]
['text':' If the buffer isn't found and the second argument is not zero create a','line_number':490,'multiline':False]
['text':' new buffer.','line_number':491,'multiline':False]
['text':'
 * "bufwinid(nr)" function
 ','line_number':526,'multiline':True]
['text':'
 * "bufwinnr(nr)" function
 ','line_number':535,'multiline':True]
['text':'
 * "deletebufline()" function
 ','line_number':544,'multiline':True]
['text':' FAIL by default','line_number':559,'multiline':False]
['text':' After this don't use "return", goto "cleanup"!','line_number':583,'multiline':False]
['text':' set "curbuf" to "buf" and find a window for this buffer','line_number':587,'multiline':False]
['text':' When coming here from Insert mode, sync undo, so that this can be','line_number':594,'multiline':False]
['text':' undone separately from what was previously inserted.','line_number':595,'multiline':False]
['text':' notify that u_sync() was called','line_number':598,'multiline':False]
['text':' OK','line_number':623,'multiline':False]
['text':'
 * Returns buffer options, variables and other attributes in a dictionary.
 ','line_number':630,'multiline':True]
['text':' Get a reference to buffer variables','line_number':657,'multiline':False]
['text':' List of windows displaying this buffer','line_number':660,'multiline':False]
['text':' List of popup windows displaying this buffer','line_number':671,'multiline':False]
['text':' List of signs placed in this buffer','line_number':690,'multiline':False]
['text':'
 * "getbufinfo()" function
 ','line_number':707,'multiline':True]
['text':' List of all the buffers or selected buffers','line_number':728,'multiline':False]
['text':' Information about one buffer.  Argument specifies the buffer','line_number':744,'multiline':False]
['text':' Return information about all the buffers or a specified buffer','line_number':750,'multiline':False]
['text':'
 * Get line or list of lines from buffer "buf" into "rettv".
 * Return a range (from start to end) of lines in rettv from the specified
 * buffer.
 * If 'retlist' is TRUE, then the lines are returned as a Vim List.
 ','line_number':768,'multiline':True]
['text':'
 * "retlist" TRUE: "getbufline()" function
 * "retlist" FALSE: "getbufoneline()" function
 ','line_number':822,'multiline':True]
['text':'
 * "getbufline()" function
 ','line_number':855,'multiline':True]
['text':'
 * "getbufoneline()" function
 ','line_number':864,'multiline':True]
['text':'
 * "getline(lnum, [end])" function
 ','line_number':873,'multiline':True]
['text':'
 * "setbufline()" function
 ','line_number':903,'multiline':True]
['text':'
 * "setline()" function
 ','line_number':912,'multiline':True]
['text':' FEAT_EVAL','line_number':928,'multiline':False]
['text':'
 * Make "buf" the current buffer.  restore_buffer() MUST be called to undo.
 * No autocommands will be executed.  Use aucmd_prepbuf() if there are any.
 ','line_number':931,'multiline':True]
['text':'
 * Restore the current buffer after using switch_buffer().
 ','line_number':949,'multiline':True]
['text':' Check for valid buffer, just in case.','line_number':959,'multiline':False]
['text':'
 * Find a window for buffer "buf".
 * If found OK is returned and "wp" and "tp" are set to the window and tabpage.
 * If not found FAIL is returned.
 ','line_number':969,'multiline':True]
['text':'
 * Find a window that contains "buf" and switch to it.
 * If there is no such window, use the current window and change "curbuf".
 * Caller must initialize save_curbuf to NULL.
 * restore_win_for_buf() MUST be called later!
 ','line_number':986,'multiline':True]
