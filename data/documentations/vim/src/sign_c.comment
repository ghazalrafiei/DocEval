['text':' vi:set ts=8 sts=4 sw=4 noet:
 *
 * VIM - Vi IMproved	by Bram Moolenaar
 *
 * Do ":help uganda"  in Vim to read copying and usage conditions.
 * Do ":help credits" in Vim to see a list of people who contributed.
 * See README.txt for an overview of the Vim source code.
 ','line_number':1,'multiline':True]
['text':'
 * sign.c: functions for managing signs
 ','line_number':10,'multiline':True]
['text':'
 * Struct to hold the sign properties.
 ','line_number':18,'multiline':True]
['text':' next sign in list','line_number':25,'multiline':False]
['text':' type number of sign','line_number':26,'multiline':False]
['text':' name of sign','line_number':27,'multiline':False]
['text':' name of pixmap','line_number':28,'multiline':False]
['text':' icon image','line_number':30,'multiline':False]
['text':' text used instead of pixmap','line_number':32,'multiline':False]
['text':' highlight ID for line','line_number':33,'multiline':False]
['text':' highlight ID for text','line_number':34,'multiline':False]
['text':' highlight ID for text on current line when 'cursorline' is set','line_number':35,'multiline':False]
['text':' highlight ID for line number','line_number':36,'multiline':False]
['text':' sign group (signgroup_T) hashtable','line_number':65,'multiline':False]
['text':' next sign id in the global group','line_number':66,'multiline':False]
['text':'
 * Initialize data needed for managing signs
 ','line_number':68,'multiline':True]
['text':' sign group hash table','line_number':74,'multiline':False]
['text':'
 * A new sign in group 'groupname' is added. If the group is not present,
 * create it. Otherwise reference the group.
 ','line_number':77,'multiline':True]
['text':' new group','line_number':92,'multiline':False]
['text':' existing group','line_number':103,'multiline':False]
['text':'
 * A sign in group 'groupname' is removed. If all the signs in this group are
 * removed, then remove the group.
 ','line_number':111,'multiline':True]
['text':' All the signs in this group are removed','line_number':129,'multiline':False]
['text':'
 * Returns TRUE if 'sign' is in 'group'.
 * A sign can either be in the global group (sign->se_group == NULL)
 * or in a named group. If 'group' is '*', then the sign is part of the group.
 ','line_number':135,'multiline':True]
['text':'
 * Return TRUE if "sign" is to be displayed in window "wp".
 * If the group name starts with "PopUp" it only shows in a popup window.
 ','line_number':149,'multiline':True]
['text':'
 * Get the next free sign identifier in the specified group
 ','line_number':162,'multiline':True]
['text':' Search for the next usable sign identifier','line_number':182,'multiline':False]
['text':' global group','line_number':186,'multiline':False]
['text':' Check whether this sign is already placed in the buffer','line_number':190,'multiline':False]
['text':' sign identifier is in use','line_number':196,'multiline':False]
['text':'
 * Insert a new sign into the signlist for buffer 'buf' between the 'prev' and
 * 'next' signs.
 ','line_number':205,'multiline':True]
['text':' buffer to store sign in','line_number':211,'multiline':False]
['text':' previous sign entry','line_number':212,'multiline':False]
['text':' next sign entry','line_number':213,'multiline':False]
['text':' sign ID','line_number':214,'multiline':False]
['text':' sign group; NULL for global group','line_number':215,'multiline':False]
['text':' sign priority','line_number':216,'multiline':False]
['text':' line number which gets the mark','line_number':217,'multiline':False]
['text':' typenr of sign we are adding','line_number':218,'multiline':False]
['text':' When adding first sign need to redraw the windows to create the','line_number':248,'multiline':False]
['text':' column for signs.','line_number':249,'multiline':False]
['text':' first sign in signlist','line_number':256,'multiline':False]
['text':'
 * Insert a new sign sorted by line number and sign priority.
 ','line_number':267,'multiline':True]
['text':' buffer to store sign in','line_number':272,'multiline':False]
['text':' previous sign entry','line_number':273,'multiline':False]
['text':' sign ID','line_number':274,'multiline':False]
['text':' sign group; NULL for global group','line_number':275,'multiline':False]
['text':' sign priority','line_number':276,'multiline':False]
['text':' line number which gets the mark','line_number':277,'multiline':False]
['text':' typenr of sign we are adding','line_number':278,'multiline':False]
['text':' keep signs sorted by lnum and by priority: insert new sign at','line_number':282,'multiline':False]
['text':' the proper position in the list for this lnum.','line_number':283,'multiline':False]
['text':'
 * Lookup a sign by typenr. Returns NULL if sign is not found.
 ','line_number':294,'multiline':True]
['text':'
 * Get the name of a sign by its typenr.
 ','line_number':308,'multiline':True]
['text':'
 * Return information about a sign in a Dict
 ','line_number':322,'multiline':True]
['text':'
 * Sort the signs placed on the same line as "sign" by priority.  Invoked after
 * changing the priority of an already placed sign.  Assumes the signs in the
 * buffer are sorted by line number and priority.
 ','line_number':342,'multiline':True]
['text':' If there is only one sign in the buffer or only one sign on the line or','line_number':352,'multiline':False]
['text':' the sign is already sorted by priority, then return.','line_number':353,'multiline':False]
['text':' One or more signs on the same line as 'sign'','line_number':362,'multiline':False]
['text':' Find a sign after which 'sign' should be inserted','line_number':363,'multiline':False]
['text':' First search backward for a sign with higher priority on the same line','line_number':365,'multiline':False]
['text':' Sign not found. Search forward for a sign with priority just before','line_number':373,'multiline':False]
['text':' 'sign'.','line_number':374,'multiline':False]
['text':' Remove 'sign' from the list','line_number':381,'multiline':False]
['text':' Re-insert 'sign' at the right place','line_number':391,'multiline':False]
['text':' 'sign' has a higher priority and should be inserted before 'p'','line_number':394,'multiline':False]
['text':' 'sign' has a lower priority and should be inserted after 'p'','line_number':405,'multiline':False]
['text':'
 * Add the sign into the signlist. Find the right spot to do it though.
 ','line_number':414,'multiline':True]
['text':' buffer to store sign in','line_number':419,'multiline':False]
['text':' sign ID','line_number':420,'multiline':False]
['text':' sign group','line_number':421,'multiline':False]
['text':' sign priority','line_number':422,'multiline':False]
['text':' line number which gets the mark','line_number':423,'multiline':False]
['text':' typenr of sign we are adding','line_number':424,'multiline':False]
['text':' a sign in the signlist','line_number':426,'multiline':False]
['text':' the previous sign','line_number':427,'multiline':False]
['text':' Update an existing sign','line_number':435,'multiline':False]
['text':'
 * For an existing, placed sign "markId" change the type to "typenr".
 * Returns the line number of the sign, or zero if the sign is not found.
 ','line_number':454,'multiline':True]
['text':' buffer to store sign in','line_number':460,'multiline':False]
['text':' sign ID','line_number':461,'multiline':False]
['text':' sign group','line_number':462,'multiline':False]
['text':' typenr of sign we are adding','line_number':463,'multiline':False]
['text':' sign priority','line_number':464,'multiline':False]
['text':' a sign in the signlist','line_number':466,'multiline':False]
['text':'
 * Return the attributes of the first sign placed on line 'lnum' in buffer
 * 'buf'. Used when refreshing the screen. Returns TRUE if a sign is found on
 * 'lnum', FALSE otherwise.
 ','line_number':482,'multiline':True]
['text':' Signs are sorted by line number in the buffer. No need to check','line_number':499,'multiline':False]
['text':' for signs after the specified line number 'lnum'.','line_number':500,'multiline':False]
['text':' If there is another sign next with the same priority, may','line_number':528,'multiline':False]
['text':' combine the text and the line highlighting.','line_number':529,'multiline':False]
['text':'
 * Delete sign 'id' in group 'group' from buffer 'buf'.
 * If 'id' is zero, then delete all the signs in group 'group'. Otherwise
 * delete only the specified sign.
 * If 'group' is '*', then delete the sign in all the groups. If 'group' is
 * NULL, then delete the sign in the global group. Otherwise delete the sign in
 * the specified group.
 * Returns the line number of the deleted sign. If multiple signs are deleted,
 * then returns the line number of the last sign deleted.
 ','line_number':561,'multiline':True]
['text':' buffer sign is stored in','line_number':573,'multiline':False]
['text':' sign at this line, 0 - at any line','line_number':574,'multiline':False]
['text':' sign id','line_number':575,'multiline':False]
['text':' sign group','line_number':576,'multiline':False]
['text':' pointer to pointer to current sign','line_number':578,'multiline':False]
['text':' a sign in a b_signlist','line_number':579,'multiline':False]
['text':' the next sign in a b_signlist','line_number':580,'multiline':False]
['text':' line number whose sign was deleted','line_number':581,'multiline':False]
['text':' Check whether only one sign needs to be deleted','line_number':602,'multiline':False]
['text':' If deleting a sign with a specific identifier in a particular','line_number':603,'multiline':False]
['text':' group or deleting any sign at a particular line number, delete','line_number':604,'multiline':False]
['text':' only one sign.','line_number':605,'multiline':False]
['text':' When deleting the last sign the cursor position may change, because the','line_number':615,'multiline':False]
['text':' sign columns no longer shows.  And the 'signcolumn' may be hidden.','line_number':616,'multiline':False]
['text':'
 * Find the line number of the sign with the requested id in group 'group'. If
 * the sign does not exist, return 0 as the line number. This will still let
 * the correct file get loaded.
 ','line_number':627,'multiline':True]
['text':' buffer to store sign in','line_number':634,'multiline':False]
['text':' sign ID','line_number':635,'multiline':False]
['text':' sign group','line_number':636,'multiline':False]
['text':' a sign in the signlist','line_number':638,'multiline':False]
['text':'
 * Return the sign at line 'lnum' in buffer 'buf'. Returns NULL if a sign is
 * not found at the line. If 'groupname' is NULL, searches in the global group.
 ','line_number':647,'multiline':True]
['text':' buffer whose sign we are searching for','line_number':653,'multiline':False]
['text':' line number of sign','line_number':654,'multiline':False]
['text':' sign group name','line_number':655,'multiline':False]
['text':' a sign in the signlist','line_number':657,'multiline':False]
['text':' Signs are sorted by line number in the buffer. No need to check','line_number':662,'multiline':False]
['text':' for signs after the specified line number 'lnum'.','line_number':663,'multiline':False]
['text':'
 * Return the identifier of the sign at line number 'lnum' in buffer 'buf'.
 ','line_number':673,'multiline':True]
['text':' buffer whose sign we are searching for','line_number':678,'multiline':False]
['text':' line number of sign','line_number':679,'multiline':False]
['text':' sign group name','line_number':680,'multiline':False]
['text':' a sign in the signlist','line_number':682,'multiline':False]
['text':'
 * See if a given type of sign exists on a specific line.
 ','line_number':692,'multiline':True]
['text':' buffer whose sign we are searching for','line_number':697,'multiline':False]
['text':' line number of sign','line_number':698,'multiline':False]
['text':' sign type number','line_number':699,'multiline':False]
['text':' a sign in the signlist','line_number':701,'multiline':False]
['text':' Signs are sorted by line number in the buffer. No need to check','line_number':706,'multiline':False]
['text':' for signs after the specified line number 'lnum'.','line_number':707,'multiline':False]
['text':'
 * Return the number of icons on the given line.
 ','line_number':719,'multiline':True]
['text':' a sign in the signlist','line_number':725,'multiline':False]
['text':' Signs are sorted by line number in the buffer. No need to check','line_number':731,'multiline':False]
['text':' for signs after the specified line number 'lnum'.','line_number':732,'multiline':False]
['text':' FEAT_SIGN_ICONS','line_number':742,'multiline':False]
['text':' FEAT_NETBEANS_INTG','line_number':743,'multiline':False]
['text':'
 * Delete signs in group 'group' in buffer "buf". If 'group' is '*', then
 * delete all the signs.
 ','line_number':745,'multiline':True]
['text':' pointer to pointer to current sign','line_number':753,'multiline':False]
['text':' When deleting the last sign need to redraw the windows to remove the','line_number':756,'multiline':False]
['text':' sign column. Not when curwin is NULL (this means we're exiting).','line_number':757,'multiline':False]
['text':'
 * List placed signs for "rbuf".  If "rbuf" is NULL do it for all buffers.
 ','line_number':782,'multiline':True]
['text':'
 * Adjust a placed sign for inserted/deleted lines.
 ','line_number':831,'multiline':True]
['text':' a sign in a b_signlist','line_number':841,'multiline':False]
['text':' Ignore changes to lines after the sign','line_number':846,'multiline':False]
['text':' Lines inserted or deleted before the sign','line_number':856,'multiline':False]
['text':' If the new sign line number is past the last line in the buffer,','line_number':859,'multiline':False]
['text':' then don't adjust the line number. Otherwise, it will always be past','line_number':860,'multiline':False]
['text':' the last line and will not be visible.','line_number':861,'multiline':False]
['text':'
 * Find index of a ":sign" subcmd from its name.
 * "*end_cmd" must be writable.
 ','line_number':867,'multiline':True]
['text':' begin of sign subcmd','line_number':873,'multiline':False]
['text':' just after sign subcmd','line_number':874,'multiline':False]
['text':'
 * Find a sign by name. Also returns pointer to the previous sign.
 ','line_number':887,'multiline':True]
['text':'
 * Allocate a new sign
 ','line_number':908,'multiline':True]
['text':' Allocate a new sign.','line_number':918,'multiline':False]
['text':' Check that next_sign_typenr is not already being used.','line_number':923,'multiline':False]
['text':' This only happens after wrapping around.  Hopefully','line_number':924,'multiline':False]
['text':' another one got deleted and we can use its number.','line_number':925,'multiline':False]
['text':' start all over','line_number':939,'multiline':False]
['text':' wrap around','line_number':947,'multiline':False]
['text':' out of memory','line_number':950,'multiline':False]
['text':'
 * Initialize the icon information for a new sign
 ','line_number':959,'multiline':True]
['text':'
 * Initialize the text for a new sign
 ','line_number':979,'multiline':True]
['text':' Remove backslashes so that it is possible to use a space.','line_number':992,'multiline':False]
['text':' Count cells and check for non-printable chars','line_number':1000,'multiline':False]
['text':' Currently sign text must be one or two display cells','line_number':1019,'multiline':False]
['text':' Allocate one byte more if we need to pad up','line_number':1027,'multiline':False]
['text':' with a space.','line_number':1028,'multiline':False]
['text':' For single character sign text, pad with a space.','line_number':1032,'multiline':False]
['text':'
 * Define a new sign or update an existing sign
 ','line_number':1039,'multiline':True]
['text':' add the new sign to the list of signs','line_number':1062,'multiline':False]
['text':' Signs may already exist, a redraw is needed in windows with a','line_number':1072,'multiline':False]
['text':' non-empty sign list.','line_number':1073,'multiline':False]
['text':' set values for a defined sign.','line_number':1079,'multiline':False]
['text':'
 * Return TRUE if sign "name" exists.
 ','line_number':1121,'multiline':True]
['text':'
 * Free the sign specified by 'name'.
 ','line_number':1130,'multiline':True]
['text':'
 * List the signs matching 'name'
 ','line_number':1151,'multiline':True]
['text':'
 * Place a sign at the specified file location or update a sign.
 ','line_number':1180,'multiline':True]
['text':' Check for reserved character '*' in group name','line_number':1194,'multiline':False]
['text':' ":sign place {id} line={lnum} name={name} file={fname}":','line_number':1210,'multiline':False]
['text':' place a sign','line_number':1211,'multiline':False]
['text':' ":sign place {id} file={fname}": change sign type and/or priority','line_number':1214,'multiline':False]
['text':' When displaying signs in the 'number' column, if the width of the','line_number':1221,'multiline':False]
['text':' number column is less than 2, then force recomputing the width.','line_number':1222,'multiline':False]
['text':'
 * Unplace the specified sign
 ','line_number':1234,'multiline':True]
['text':' No signs in the buffer','line_number':1240,'multiline':False]
['text':' Delete all the signs in the specified buffer','line_number':1245,'multiline':False]
['text':' Delete only the specified signs','line_number':1253,'multiline':False]
['text':' When all the signs in a buffer are removed, force recomputing the','line_number':1259,'multiline':False]
['text':' number column width (if enabled) in all the windows displaying the','line_number':1260,'multiline':False]
['text':' buffer if 'signcolumn' is set to 'number' in that window.','line_number':1261,'multiline':False]
['text':'
 * Unplace the sign at the current cursor line.
 ','line_number':1268,'multiline':True]
['text':'
 * Jump to a sign.
 ','line_number':1283,'multiline':True]
['text':' goto a sign ...','line_number':1297,'multiline':False]
['text':' ... in a current window','line_number':1299,'multiline':False]
['text':' ... not currently in a window','line_number':1305,'multiline':False]
['text':'
 * ":sign define {name} ..." command
 ','line_number':1327,'multiline':True]
['text':' set values for a defined sign.','line_number':1343,'multiline':False]
['text':'
 * ":sign place" command
 ','line_number':1399,'multiline':True]
['text':' List signs placed in a file/buffer','line_number':1413,'multiline':False]
['text':'   :sign place file={fname}','line_number':1414,'multiline':False]
['text':'   :sign place group={group} file={fname}','line_number':1415,'multiline':False]
['text':'   :sign place group=* file={fname}','line_number':1416,'multiline':False]
['text':'   :sign place buffer={nr}','line_number':1417,'multiline':False]
['text':'   :sign place group={group} buffer={nr}','line_number':1418,'multiline':False]
['text':'   :sign place group=* buffer={nr}','line_number':1419,'multiline':False]
['text':'   :sign place','line_number':1420,'multiline':False]
['text':'   :sign place group={group}','line_number':1421,'multiline':False]
['text':'   :sign place group=*','line_number':1422,'multiline':False]
['text':' Place a new sign','line_number':1431,'multiline':False]
['text':'
 * ":sign unplace" command
 ','line_number':1443,'multiline':True]
['text':' :sign unplace * file={fname}','line_number':1463,'multiline':False]
['text':' :sign unplace * group={group} file={fname}','line_number':1464,'multiline':False]
['text':' :sign unplace * group=* file={fname}','line_number':1465,'multiline':False]
['text':' :sign unplace * buffer={nr}','line_number':1466,'multiline':False]
['text':' :sign unplace * group={group} buffer={nr}','line_number':1467,'multiline':False]
['text':' :sign unplace * group=* buffer={nr}','line_number':1468,'multiline':False]
['text':' :sign unplace *','line_number':1471,'multiline':False]
['text':' :sign unplace * group={group}','line_number':1472,'multiline':False]
['text':' :sign unplace * group=*','line_number':1473,'multiline':False]
['text':' :sign unplace {id} file={fname}','line_number':1481,'multiline':False]
['text':' :sign unplace {id} group={group} file={fname}','line_number':1482,'multiline':False]
['text':' :sign unplace {id} group=* file={fname}','line_number':1483,'multiline':False]
['text':' :sign unplace {id} buffer={nr}','line_number':1484,'multiline':False]
['text':' :sign unplace {id} group={group} buffer={nr}','line_number':1485,'multiline':False]
['text':' :sign unplace {id} group=* buffer={nr}','line_number':1486,'multiline':False]
['text':' :sign unplace group={group}','line_number':1492,'multiline':False]
['text':' :sign unplace group=*','line_number':1493,'multiline':False]
['text':' :sign unplace {id}','line_number':1498,'multiline':False]
['text':' :sign unplace {id} group={group}','line_number':1499,'multiline':False]
['text':' :sign unplace {id} group=*','line_number':1500,'multiline':False]
['text':'
 * Jump to a placed sign commands:
 *   :sign jump {id} file={fname}
 *   :sign jump {id} buffer={nr}
 *   :sign jump {id} group={group} file={fname}
 *   :sign jump {id} group={group} buffer={nr}
 ','line_number':1508,'multiline':True]
['text':' File or buffer is not specified or an empty group is used','line_number':1532,'multiline':False]
['text':' or a line number or a sign name is specified.','line_number':1533,'multiline':False]
['text':'
 * Parse the command line arguments for the ":sign place", ":sign unplace" and
 * ":sign jump" commands.
 * The supported arguments are: line={lnum} name={name} group={group}
 * priority={prio} and file={fname} or buffer={nr}.
 ','line_number':1540,'multiline':True]
['text':' first arg could be placed sign id','line_number':1562,'multiline':False]
['text':' If the filename is not supplied for the sign place or the sign jump','line_number':1650,'multiline':False]
['text':' command, then use the current buffer.','line_number':1651,'multiline':False]
['text':'
 * ":sign" command
 ','line_number':1659,'multiline':True]
['text':' Parse the subcommand.','line_number':1671,'multiline':False]
['text':' Define, undefine or list signs.','line_number':1683,'multiline':False]
['text':' ":sign list": list all defined signs','line_number':1686,'multiline':False]
['text':' Isolate the sign name.  If it's a number skip leading zeroes,','line_number':1696,'multiline':False]
['text':' so that "099" and "99" are the same sign.  But keep "0".','line_number':1697,'multiline':False]
['text':' ":sign list {name}"','line_number':1708,'multiline':False]
['text':' ":sign undefine {name}"','line_number':1711,'multiline':False]
['text':' Parse command line arguments','line_number':1726,'multiline':False]
['text':'
 * Return information about a specified sign
 ','line_number':1740,'multiline':True]
['text':'
 * If 'name' is NULL, return a list of all the defined signs.
 * Otherwise, return information about the specified sign.
 ','line_number':1783,'multiline':True]
['text':' handle only the specified sign','line_number':1808,'multiline':False]
['text':'
 * Returns information about signs placed in a buffer as list of dicts.
 ','line_number':1813,'multiline':True]
['text':'
 * Return information about all the signs placed in a buffer
 ','line_number':1829,'multiline':True]
['text':'
 * Get a list of signs placed in buffer 'buf'. If 'num' is non-zero, return the
 * sign placed at the line number. If 'lnum' is zero, return all the signs
 * placed in 'buf'. If 'buf' is NULL, return signs placed in all the buffers.
 ','line_number':1870,'multiline':True]
['text':'
 * Allocate the icons.  Called when the GUI has started.  Allows defining
 * signs before it starts.
 ','line_number':1894,'multiline':True]
['text':'
 * List one sign.
 ','line_number':1909,'multiline':True]
['text':'
 * Undefine a sign and free its memory.
 ','line_number':1972,'multiline':True]
['text':' the attribute which may have a sign','line_number':1998,'multiline':False]
['text':'
 * Undefine/free all signs.
 ','line_number':2009,'multiline':True]
['text':' expand :sign sub-commands','line_number':2021,'multiline':False]
['text':' expand :sign define {name} args','line_number':2022,'multiline':False]
['text':' expand :sign place {id} args','line_number':2023,'multiline':False]
['text':' expand :sign place args','line_number':2024,'multiline':False]
['text':' expand :sign unplace"','line_number':2025,'multiline':False]
['text':' expand with name of placed signs','line_number':2026,'multiline':False]
['text':' expand with name of placed sign groups','line_number':2027,'multiline':False]
['text':'
 * Return the n'th sign name (used for command line completion)
 ','line_number':2030,'multiline':True]
['text':' Complete with name of signs already defined','line_number':2039,'multiline':False]
['text':'
 * Return the n'th sign group name (used for command line completion)
 ','line_number':2047,'multiline':True]
['text':' Complete with name of sign groups already defined','line_number':2058,'multiline':False]
['text':'
 * Function given to ExpandGeneric() to obtain the sign command
 * expansion.
 ','line_number':2076,'multiline':True]
['text':'
 * Handle command line completion for :sign command.
 ','line_number':2126,'multiline':True]
['text':' Default: expand subcommands.','line_number':2138,'multiline':False]
['text':' expand subcmd name','line_number':2145,'multiline':False]
['text':' :sign {subcmd}<CTRL-D>','line_number':2146,'multiline':False]
['text':' :sign {subcmd} {subcmd_args}','line_number':2151,'multiline':False]
['text':'		      |','line_number':2152,'multiline':False]
['text':'		      begin_subcmd_args','line_number':2153,'multiline':False]
['text':' expand last argument of subcmd','line_number':2156,'multiline':False]
['text':' :sign define {name} {args}...','line_number':2158,'multiline':False]
['text':'		    |','line_number':2159,'multiline':False]
['text':'		    p','line_number':2160,'multiline':False]
['text':' Loop until reaching last argument.','line_number':2162,'multiline':False]
['text':' :sign define {name} {args}... {last}=','line_number':2173,'multiline':False]
['text':'				     |	   |','line_number':2174,'multiline':False]
['text':'				  last	   p','line_number':2175,'multiline':False]
['text':' Expand last argument name (before equal sign).','line_number':2178,'multiline':False]
['text':' List placed signs','line_number':2186,'multiline':False]
['text':'   :sign place {id} {args}...','line_number':2188,'multiline':False]
['text':'   :sign place {args}...','line_number':2191,'multiline':False]
['text':' :sign list <CTRL-D>','line_number':2196,'multiline':False]
['text':' :sign undefine <CTRL-D>','line_number':2197,'multiline':False]
['text':' Expand last argument value (after equal sign).','line_number':2210,'multiline':False]
['text':'
 * Define a sign using the attributes in 'dict'. Returns 0 on success and -1 on
 * failure.
 ','line_number':2250,'multiline':True]
['text':'
 * Define multiple signs using attributes from list 'l' and store the return
 * values in 'retlist'.
 ','line_number':2301,'multiline':True]
['text':'
 * "sign_define()" function
 ','line_number':2322,'multiline':True]
['text':' Define multiple signs','line_number':2337,'multiline':False]
['text':' Define a single sign','line_number':2345,'multiline':False]
['text':'
 * "sign_getdefined()" function
 ','line_number':2359,'multiline':True]
['text':'
 * "sign_getplaced()" function
 ','line_number':2379,'multiline':True]
['text':' get signs placed in the specified buffer','line_number':2404,'multiline':False]
['text':' get signs placed at this line','line_number':2416,'multiline':False]
['text':' get sign placed with this identifier','line_number':2424,'multiline':False]
['text':' empty string means global group','line_number':2434,'multiline':False]
['text':'
 * "sign_jump()" function
 ','line_number':2443,'multiline':True]
['text':' Sign identifier','line_number':2462,'multiline':False]
['text':' Sign group','line_number':2472,'multiline':False]
['text':' global sign group','line_number':2477,'multiline':False]
['text':' Buffer to place the sign','line_number':2485,'multiline':False]
['text':'
 * Place a new sign using the values specified in dict 'dict'. Returns the sign
 * identifier if successfully placed, otherwise returns 0.
 ','line_number':2496,'multiline':True]
['text':' sign identifier','line_number':2518,'multiline':False]
['text':' sign group','line_number':2539,'multiline':False]
['text':' global group','line_number':2547,'multiline':False]
['text':' global sign group','line_number':2553,'multiline':False]
['text':' sign name','line_number':2563,'multiline':False]
['text':' buffer to place the sign','line_number':2576,'multiline':False]
['text':' line number of the sign','line_number':2589,'multiline':False]
['text':' sign priority','line_number':2601,'multiline':False]
['text':'
 * "sign_place()" function
 ','line_number':2619,'multiline':True]
['text':'
 * "sign_placelist()" function.  Place multiple signs.
 ','line_number':2648,'multiline':True]
['text':' Process the List of sign attributes','line_number':2666,'multiline':False]
['text':'
 * Undefine multiple signs
 ','line_number':2679,'multiline':True]
['text':'
 * "sign_undefine()" function
 ','line_number':2699,'multiline':True]
['text':' Undefine multiple signs','line_number':2713,'multiline':False]
['text':' Free all the signs','line_number':2725,'multiline':False]
['text':' Free only the specified sign','line_number':2731,'multiline':False]
['text':'
 * Unplace the sign with attributes specified in 'dict'. Returns 0 on success
 * and -1 on failure.
 ','line_number':2741,'multiline':True]
['text':' sign group','line_number':2754,'multiline':False]
['text':' global sign group','line_number':2761,'multiline':False]
['text':' Delete the sign in all the buffers','line_number':2792,'multiline':False]
['text':'
 * Return TRUE when window "wp" has a column to draw signs in.
 ','line_number':2819,'multiline':True]
['text':' If 'signcolumn' is set to 'number', signs are displayed in the 'number'','line_number':2825,'multiline':False]
['text':' column (if present). Otherwise signs are to be displayed in the sign','line_number':2826,'multiline':False]
['text':' column.','line_number':2827,'multiline':False]
['text':'
 * "sign_unplace()" function
 ','line_number':2842,'multiline':True]
['text':'
 * "sign_unplacelist()" function
 ','line_number':2862,'multiline':True]
['text':' FEAT_SIGNS','line_number':2891,'multiline':False]
