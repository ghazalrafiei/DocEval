['text':' vi:set ts=8 sts=4 sw=4 noet:
 *
 * VIM - Vi IMproved	by Bram Moolenaar
 *
 * Do ":help uganda"  in Vim to read copying and usage conditions.
 * Do ":help credits" in Vim to see a list of people who contributed.
 * See README.txt for an overview of the Vim source code.
 ','line_number':1,'multiline':True]
['text':'
 * arglist.c: functions for dealing with the argument list
 ','line_number':10,'multiline':True]
['text':' This flag is set whenever the argument list is being changed and calling a','line_number':20,'multiline':False]
['text':' function that might trigger an autocommand.','line_number':21,'multiline':False]
['text':'
 * Clear an argument list: free all file names and reset it to zero entries.
 ','line_number':35,'multiline':True]
['text':'
 * Init an argument list.
 ','line_number':48,'multiline':True]
['text':'
 * Remove a reference from an argument list.
 * Ignored when the argument list is the global one.
 * If the argument list is no longer used by any window, free it.
 ','line_number':57,'multiline':True]
['text':'
 * Create a new argument list and use it for the current window.
 ','line_number':72,'multiline':True]
['text':'
 * Expand the file names in the global argument list.
 * If "fnum_list" is not NULL, use "fnum_list[fnum_len]" as a list of buffer
 * numbers to be re-used.
 ','line_number':93,'multiline':True]
['text':' Don't use 'suffixes' here.  This should work like the shell did the','line_number':112,'multiline':False]
['text':' expansion.  Also, the vimrc file isn't read yet, thus the user','line_number':113,'multiline':False]
['text':' can't set the options.','line_number':114,'multiline':False]
['text':'
 * Set the argument list for the current window.
 * Takes over the allocated files[] and the allocated fnames in it.
 ','line_number':132,'multiline':True]
['text':' When adding many buffers this can take a long time.  Allow','line_number':157,'multiline':False]
['text':' interrupting here.','line_number':158,'multiline':False]
['text':' May set buffer name of a buffer previously used for the','line_number':164,'multiline':False]
['text':' argument list, so that it's re-used by alist_add.','line_number':165,'multiline':False]
['text':'
 * Add file "fname" to argument list "al".
 * "fname" must have been allocated and "al" must have been checked for room.
 ','line_number':184,'multiline':True]
['text':' 1: set buffer number; 2: re-use curbuf','line_number':192,'multiline':False]
['text':' don't add NULL file names','line_number':194,'multiline':False]
['text':'
 * Adjust slashes in file names.  Called after 'shellslash' was set.
 ','line_number':213,'multiline':True]
['text':'
 * Isolate one argument, taking backticks.
 * Changes the argument in-place, puts a NUL after it.  Backticks remain.
 * Return a pointer to the start of the next argument.
 ','line_number':234,'multiline':True]
['text':' When the backslash is used for escaping the special meaning of a','line_number':248,'multiline':False]
['text':' character we need to keep it until wildcard expansion.','line_number':249,'multiline':False]
['text':' An item ends at a space not in backticks','line_number':257,'multiline':False]
['text':'
 * Separate the arguments in "str" and return a list of pointers in the
 * growarray "gap".
 ','line_number':271,'multiline':True]
['text':' If str is escaped, don't handle backslashes or spaces','line_number':288,'multiline':False]
['text':' Isolate one argument, change it in-place, put a NUL after it.','line_number':292,'multiline':False]
['text':'
 * Parse a list of arguments (file names), expand them and return in
 * "fnames[fcountp]".  When "wig" is TRUE, removes files matching 'wildignore'.
 * Return FAIL or OK.
 ','line_number':299,'multiline':True]
['text':'
 * Check the validity of the arg_idx for each other window.
 ','line_number':328,'multiline':True]
['text':'
 * Add files[count] to the arglist of the current window after arg "after".
 * The file names in files[count] must have been allocated and are taken over.
 * Files[] itself is not taken over.
 ','line_number':342,'multiline':True]
['text':' where to add: 0 = before first one','line_number':351,'multiline':False]
['text':' will edit adding argument','line_number':352,'multiline':False]
['text':'
 * Delete the file names in 'alist_ga' from the argument list.
 ','line_number':386,'multiline':True]
['text':' Delete the items: use each item as a regexp and find a match in the','line_number':398,'multiline':False]
['text':' argument list.','line_number':399,'multiline':False]
['text':' ignore case when 'fileignorecase' is set','line_number':400,'multiline':False]
['text':'
 * "what" == AL_SET: Redefine the argument list to 'str'.
 * "what" == AL_ADD: add files in 'str' to the argument list after "after".
 * "what" == AL_DEL: remove files in 'str' from the argument list.
 *
 * Return FAIL for failure, OK otherwise.
 ','line_number':436,'multiline':True]
['text':' 0 means before first one','line_number':447,'multiline':False]
['text':' will edit added argument','line_number':448,'multiline':False]
['text':' Set default argument for ":argadd" command.','line_number':459,'multiline':False]
['text':' Collect all file name arguments in "new_ga".','line_number':468,'multiline':False]
['text':' what == AL_SET','line_number':490,'multiline':False]
['text':'
 * Redefine the argument list.
 ','line_number':499,'multiline':True]
['text':'
 * Return TRUE if window "win" is editing the file at the current argument
 * index.
 ','line_number':508,'multiline':True]
['text':'
 * Check if window "win" is editing the w_arg_idx file in its argument list.
 ','line_number':524,'multiline':True]
['text':' We are not editing the current entry in the argument list.','line_number':532,'multiline':False]
['text':' Set "arg_had_last" if we are editing the last one.','line_number':533,'multiline':False]
['text':' We are editing the current entry in the argument list.','line_number':548,'multiline':False]
['text':' Set "arg_had_last" if it's also the last one','line_number':549,'multiline':False]
['text':'
 * ":args", ":argslocal" and ":argsglobal".
 ','line_number':557,'multiline':True]
['text':' eap->cmdidx == CMD_arglocal','line_number':572,'multiline':False]
['text':' ":args file ..": define new argument list, handle like ":next"','line_number':576,'multiline':False]
['text':' Also for ":argslocal file .." and ":argsglobal file ..".','line_number':577,'multiline':False]
['text':' ":args": list arguments.','line_number':586,'multiline':False]
['text':' empty argument list','line_number':592,'multiline':False]
['text':' Overwrite the command, for a short list there is no scrolling','line_number':598,'multiline':False]
['text':' required and no wait_return().','line_number':599,'multiline':False]
['text':' ":argslocal": make a local copy of the global argument list.','line_number':610,'multiline':False]
['text':'
 * ":previous", ":sprevious", ":Next" and ":sNext".
 ','line_number':630,'multiline':True]
['text':' If past the last one already, go to the last one.','line_number':636,'multiline':False]
['text':'
 * ":rewind", ":first", ":sfirst" and ":srewind".
 ','line_number':643,'multiline':True]
['text':'
 * ":last" and ":slast".
 ','line_number':652,'multiline':True]
['text':'
 * ":argument" and ":sargument".
 ','line_number':661,'multiline':True]
['text':'
 * Edit file "argn" of the argument lists.
 ','line_number':676,'multiline':True]
['text':' split window or create new tab page first','line_number':705,'multiline':False]
['text':' if 'hidden' set, only check for changed file when re-editing','line_number':714,'multiline':False]
['text':' the same buffer','line_number':715,'multiline':False]
['text':' Edit the file; always use the last known line number.','line_number':735,'multiline':False]
['text':' When it fails (e.g. Abort for already edited file) restore the','line_number':736,'multiline':False]
['text':' argument index.','line_number':737,'multiline':False]
['text':' like Vi: set the mark where the cursor is in the file.','line_number':743,'multiline':False]
['text':'
 * ":next", and commands that behave like it.
 ','line_number':748,'multiline':True]
['text':' check for changed buffer now, if this fails the argument list is not','line_number':756,'multiline':False]
['text':' redefined.','line_number':757,'multiline':False]
['text':' redefine file list','line_number':764,'multiline':False]
['text':'
 * ":argdedupe"
 ','line_number':776,'multiline':True]
['text':' Expand each argument to a full path to catch different paths leading','line_number':787,'multiline':False]
['text':' to the same file.','line_number':788,'multiline':False]
['text':' out of memory','line_number':791,'multiline':False]
['text':' out of memory','line_number':797,'multiline':False]
['text':' remove one duplicate argument','line_number':804,'multiline':False]
['text':'
 * ":argedit"
 ','line_number':823,'multiline':True]
['text':' Whether curbuf will be reused, curbuf->b_ffname will be set.','line_number':830,'multiline':False]
['text':' Edit the argument.','line_number':841,'multiline':False]
['text':'
 * ":argadd"
 ','line_number':846,'multiline':True]
['text':'
 * ":argdelete"
 ','line_number':858,'multiline':True]
['text':' ":argdel" works like ":.argdel"','line_number':872,'multiline':False]
['text':' ":1,4argdel": Delete all arguments in the range.','line_number':883,'multiline':False]
['text':' Can't have both a range and an argument.','line_number':887,'multiline':False]
['text':' Don't give an error for ":%argdel" if the list is empty.','line_number':891,'multiline':False]
['text':'
 * Function given to ExpandGeneric() to obtain the possible arguments of the
 * argedit and argdelete commands.
 ','line_number':917,'multiline':True]
['text':'
 * Get the file name for an argument list entry.
 ','line_number':930,'multiline':True]
['text':' Use the name from the associated buffer if it exists.','line_number':938,'multiline':False]
['text':'
 * State used by the :all command to open all the files in the argument list in
 * separate windows.
 ','line_number':945,'multiline':True]
['text':' argument list to be used','line_number':950,'multiline':False]
['text':' use first window for arglist','line_number':955,'multiline':False]
['text':' Array of weight for which args are open:','line_number':956,'multiline':False]
['text':'  0: not opened','line_number':957,'multiline':False]
['text':'  1: opened in other tab','line_number':958,'multiline':False]
['text':'  2: opened in curtab','line_number':959,'multiline':False]
['text':'  3: opened in curtab and curwin','line_number':960,'multiline':False]
['text':' length of opened[]','line_number':961,'multiline':False]
['text':'
 * Close all the windows containing files which are not in the argument list.
 * Used by the ":all" command.
 ','line_number':966,'multiline':True]
['text':' check if the buffer in this window is in the arglist','line_number':999,'multiline':False]
['text':' Use the current argument list for all windows','line_number':1034,'multiline':False]
['text':' containing a file from it.','line_number':1035,'multiline':False]
['text':' close this window','line_number':1046,'multiline':False]
['text':' If the buffer was changed, and we would like to hide it,','line_number':1051,'multiline':False]
['text':' try autowriting.','line_number':1052,'multiline':False]
['text':' check if autocommands removed the window','line_number':1062,'multiline':False]
['text':' start all over...','line_number':1065,'multiline':False]
['text':' don't close last window','line_number':1069,'multiline':False]
['text':' check if autocommands removed the next window','line_number':1078,'multiline':False]
['text':' start all over...','line_number':1080,'multiline':False]
['text':' Without the ":tab" modifier only do the current tab page.','line_number':1086,'multiline':False]
['text':' check if autocommands removed the next tab page','line_number':1090,'multiline':False]
['text':' start all over...','line_number':1092,'multiline':False]
['text':'
 * Open upto "count" windows for the files in the argument list 'aall->alist'.
 ','line_number':1098,'multiline':True]
['text':' ":tab drop file" should re-use an empty window to avoid "--remote-tab"','line_number':1110,'multiline':False]
['text':' leaving an empty tab page when executed locally.','line_number':1111,'multiline':False]
['text':' Move the already present window to below the current window','line_number':1125,'multiline':False]
['text':' trigger events for tab drop','line_number':1153,'multiline':False]
['text':' split current window','line_number':1156,'multiline':False]
['text':' use space from all windows','line_number':1159,'multiline':False]
['text':' first window: do autocmd for leaving this buffer','line_number':1165,'multiline':False]
['text':' edit file "i"','line_number':1168,'multiline':False]
['text':' When ":tab" was used open a new tab for a new window repeatedly.','line_number':1188,'multiline':False]
['text':'
 * do_arg_all(): Open up to "count" windows, one for each argument.
 ','line_number':1194,'multiline':True]
['text':' hide buffers in current windows','line_number':1200,'multiline':False]
['text':' keep current tabs, for ":tab drop file"','line_number':1201,'multiline':False]
['text':' Don't give an error message.  We don't want it when the ":all"','line_number':1215,'multiline':False]
['text':' command is in the .vimrc.','line_number':1216,'multiline':False]
['text':' Autocommands may do anything to the argument list.  Make sure it's not','line_number':1232,'multiline':False]
['text':' freed while we are working here by "locking" it.  We still have to','line_number':1233,'multiline':False]
['text':' watch out for its size being changed.','line_number':1234,'multiline':False]
['text':' Try closing all windows that are not in the argument list.','line_number':1245,'multiline':False]
['text':' Also close windows that are not full width;','line_number':1246,'multiline':False]
['text':' When 'hidden' or "forceit" set the buffer becomes hidden.','line_number':1247,'multiline':False]
['text':' Windows that have a changed buffer and can't be hidden won't be closed.','line_number':1248,'multiline':False]
['text':' When the ":tab" modifier was used do this for all tab pages.','line_number':1249,'multiline':False]
['text':' Now set the last used tabpage to where we started.','line_number':1252,'multiline':False]
['text':' Open a window for files in the argument list that don't have one.','line_number':1256,'multiline':False]
['text':' ARGCOUNT may change while doing this, because of autocommands.','line_number':1257,'multiline':False]
['text':' Don't execute Win/Buf Enter/Leave autocommands here.','line_number':1261,'multiline':False]
['text':'
     * Open upto "count" windows.
     ','line_number':1268,'multiline':True]
['text':' Remove the "lock" on the argument list.','line_number':1273,'multiline':False]
['text':' restore last referenced tabpage's curwin','line_number':1279,'multiline':False]
['text':' to window with first arg','line_number':1287,'multiline':False]
['text':'
 * ":all" and ":sall".
 * Also used for ":tab drop file ..." after setting the argument list.
 ','line_number':1297,'multiline':True]
['text':'
 * Concatenate all files in the argument list, separated by spaces, and return
 * it in one allocated string.
 * Spaces and backslashes in the file names are escaped with a backslash.
 * Returns NULL when out of memory.
 ','line_number':1309,'multiline':True]
['text':' Do this loop two times:','line_number':1323,'multiline':False]
['text':' first time: compute the total length','line_number':1324,'multiline':False]
['text':' second time: concatenate the names','line_number':1325,'multiline':False]
['text':' insert a space in between names','line_number':1336,'multiline':False]
['text':' insert a backslash','line_number':1349,'multiline':False]
['text':' second time: break here','line_number':1360,'multiline':False]
['text':' allocate memory','line_number':1367,'multiline':False]
['text':'
 * "argc([window id])" function
 ','line_number':1377,'multiline':True]
['text':' use the current window','line_number':1389,'multiline':False]
['text':' use the global argument list','line_number':1393,'multiline':False]
['text':' use the argument list of the specified window','line_number':1397,'multiline':False]
['text':'
 * "argidx()" function
 ','line_number':1406,'multiline':True]
['text':'
 * "arglistid()" function
 ','line_number':1415,'multiline':True]
['text':'
 * Get the argument list for a given window
 ','line_number':1435,'multiline':True]
['text':'
 * "argv(nr)" function
 ','line_number':1449,'multiline':True]
['text':' Use the argument list of the specified window','line_number':1488,'multiline':False]
