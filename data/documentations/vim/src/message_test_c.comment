['text':' vi:set ts=8 sts=4 sw=4 noet:
 *
 * VIM - Vi IMproved	by Bram Moolenaar
 *
 * Do ":help uganda"  in Vim to read copying and usage conditions.
 * Do ":help credits" in Vim to see a list of people who contributed.
 * See README.txt for an overview of the Vim source code.
 ','line_number':1,'multiline':True]
['text':'
 * message_test.c: Unittests for message.c
 ','line_number':10,'multiline':True]
['text':' Must include main.c because it contains much more than just main()','line_number':17,'multiline':False]
['text':' This file has to be included because some of the tested functions are','line_number':21,'multiline':False]
['text':' static.','line_number':22,'multiline':False]
['text':' These formats are not standard in C printf() function.','line_number':29,'multiline':False]
['text':' Use a global variable rather than a literal format to disable','line_number':30,'multiline':False]
['text':' -Wformat compiler warnings:','line_number':31,'multiline':False]
['text':'','line_number':32,'multiline':False]
['text':' - warning: '0' flag used with ‘%p’ gnu_printf format','line_number':33,'multiline':False]
['text':' - warning: format ‘%S’ expects argument of type ‘wchar_t *’, but argument 4 has type ‘char *’','line_number':34,'multiline':False]
['text':' - warning: unknown conversion type character ‘b’ in format','line_number':35,'multiline':False]
['text':'','line_number':36,'multiline':False]
['text':' These formats are in practise only used from vim script printf()','line_number':37,'multiline':False]
['text':' function and never as literals in C code.','line_number':38,'multiline':False]
['text':'
 * Test trunc_string().
 ','line_number':47,'multiline':True]
['text':'allocated every time to find uninit errors ','line_number':53,'multiline':True]
['text':' Should not write anything to destination if buflen is 0.','line_number':56,'multiline':False]
['text':' Truncating an empty string does nothing.','line_number':59,'multiline':False]
['text':' in place','line_number':65,'multiline':False]
['text':' copy from string to buf','line_number':90,'multiline':False]
['text':'
 * Test trunc_string() with mbyte chars.
 ','line_number':127,'multiline':True]
['text':' allocated every time to find uninit errors','line_number':133,'multiline':False]
['text':'
 * Test vim_snprintf() with a focus on checking that truncation is
 * correct when buffer is small, since it cannot be tested from
 * vim script tests. Check that:
 * - no buffer overflows happens (with valgrind or asan)
 * - output string is always NUL terminated.
 *
 * Not all formats of vim_snprintf() are checked here. They are
 * checked more exhaustively in Test_printf*() vim script tests.
 ','line_number':158,'multiline':True]
['text':' Loop on various buffer sizes to make sure that truncation of','line_number':176,'multiline':False]
['text':' vim_snprintf() is correct.','line_number':177,'multiline':False]
['text':' buf is the heap rather than in the stack','line_number':182,'multiline':False]
['text':' so valgrind can detect buffer overflows if any.','line_number':183,'multiline':False]
['text':' Use malloc() rather than alloc() as test checks with 0-size','line_number':184,'multiline':False]
['text':' buffer and its content should then never be used.','line_number':185,'multiline':False]
['text':' %p format is not tested in vim script tests Test_printf*()','line_number':293,'multiline':False]
['text':' as it only makes sense in C code.','line_number':294,'multiline':False]
['text':' NOTE: SunOS libc doesn't use the prefix "0x" on %p.','line_number':295,'multiline':False]
['text':'
 * Test vim_snprintf() with a focus on checking that positional
 * arguments are correctly applied and skipped
 ','line_number':321,'multiline':True]
['text':' Loop on various buffer sizes to make sure that truncation of','line_number':332,'multiline':False]
['text':' vim_snprintf() is correct.','line_number':333,'multiline':False]
['text':' buf is the heap rather than in the stack','line_number':338,'multiline':False]
['text':' so valgrind can detect buffer overflows if any.','line_number':339,'multiline':False]
['text':' Use malloc() rather than alloc() as test checks with 0-size','line_number':340,'multiline':False]
['text':' buffer and its content should then never be used.','line_number':341,'multiline':False]
