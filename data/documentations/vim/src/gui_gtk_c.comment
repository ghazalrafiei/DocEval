['text':' vi:set ts=8 sts=4 sw=4 noet:
 *
 * VIM - Vi IMproved		by Bram Moolenaar
 *
 * Do ":help uganda"  in Vim to read copying and usage conditions.
 * Do ":help credits" in Vim to see a list of people who contributed.
 * See README.txt for an overview of the Vim source code.
 ','line_number':1,'multiline':True]
['text':'
 * Porting to GTK+ was done by:
 *
 * (C) 1998,1999,2000 by Marcin Dalecki <martin@dalecki.de>
 *
 * With GREAT support and continuous encouragements by Andy Kahn and of
 * course Bram Moolenaar!
 *
 * Support for GTK+ 2 was added by:
 *
 * (C) 2002,2003  Jason Hildebrand  <jason@peaceworks.ca>
 *		  Daniel Elstner  <daniel.elstner@gmx.net>
 *
 * Best supporting actor (He helped somewhat, aesthetically speaking):
 * Maxime Romano <verbophobe@hotmail.com>
 *
 * Support for GTK+ 3 was added by:
 *
 * 2016  Kazunobu Kuriyama  <kazunobu.kuriyama@gmail.com>
 *
 * With the help of Marius Gedminas and the word of Bram Moolenaar,
 * "Let's give this some time to mature."
 ','line_number':10,'multiline':True]
['text':' GTK defines MAX and MIN, but some system header files as well.  Undefine','line_number':40,'multiline':False]
['text':' them and don't use them.','line_number':41,'multiline':False]
['text':' Gnome redefines _() and N_().  Grrr...','line_number':50,'multiline':False]
['text':' so the texts in the dialog boxes are translated','line_number':67,'multiline':False]
['text':' define these items to be able to generate prototypes without GTK','line_number':87,'multiline':False]
['text':'
 * Table from BuiltIn## icon indices to GTK+ stock IDs.  Order must exactly
 * match toolbar_names[] in menu.c!  All stock icons including the "vim-*"
 * ones can be overridden in your gtkrc file.
 ','line_number':113,'multiline':True]
['text':' 00 ','line_number':121,'multiline':True]
['text':' sub. GTK_STOCK_NEW','line_number':121,'multiline':False]
['text':' 01 ','line_number':122,'multiline':True]
['text':' sub. GTK_STOCK_OPEN','line_number':122,'multiline':False]
['text':' 02 ','line_number':123,'multiline':True]
['text':' sub. GTK_STOCK_SAVE','line_number':123,'multiline':False]
['text':' 03 ','line_number':124,'multiline':True]
['text':' sub. GTK_STOCK_UNDO','line_number':124,'multiline':False]
['text':' 04 ','line_number':125,'multiline':True]
['text':' sub. GTK_STOCK_REDO','line_number':125,'multiline':False]
['text':' 05 ','line_number':126,'multiline':True]
['text':' sub. GTK_STOCK_CUT','line_number':126,'multiline':False]
['text':' 06 ','line_number':127,'multiline':True]
['text':' sub. GTK_STOCK_COPY','line_number':127,'multiline':False]
['text':' 07 ','line_number':128,'multiline':True]
['text':' sub. GTK_STOCK_PASTE','line_number':128,'multiline':False]
['text':' 08 ','line_number':129,'multiline':True]
['text':' sub. GTK_STOCK_PRINT','line_number':129,'multiline':False]
['text':' 09 ','line_number':130,'multiline':True]
['text':' sub. GTK_STOCK_HELP','line_number':130,'multiline':False]
['text':' 10 ','line_number':131,'multiline':True]
['text':' sub. GTK_STOCK_FIND','line_number':131,'multiline':False]
['text':' Use the file names in gui_gtk_res.xml, cutting off the extension.','line_number':133,'multiline':False]
['text':' Similar changes follow.','line_number':134,'multiline':False]
['text':' 11 ','line_number':135,'multiline':True]
['text':' 12 ','line_number':136,'multiline':True]
['text':' 13 ','line_number':137,'multiline':True]
['text':' 14 ','line_number':138,'multiline':True]
['text':' 11 ','line_number':140,'multiline':True]
['text':' 12 ','line_number':141,'multiline':True]
['text':' 13 ','line_number':142,'multiline':True]
['text':' 14 ','line_number':143,'multiline':True]
['text':' 15 ','line_number':145,'multiline':True]
['text':' sub. GTK_STOCK_EXECUTE','line_number':145,'multiline':False]
['text':' 16 ','line_number':146,'multiline':True]
['text':' sub. GTK_STOCK_FIND_AND_REPLACE','line_number':146,'multiline':False]
['text':' 17 ','line_number':147,'multiline':True]
['text':' sub. GTK_STOCK_CLOSE, FIXME: fuzzy','line_number':147,'multiline':False]
['text':' 18 ','line_number':149,'multiline':True]
['text':' 19 ','line_number':150,'multiline':True]
['text':' 20 ','line_number':151,'multiline':True]
['text':' 21 ','line_number':152,'multiline':True]
['text':' 18 ','line_number':154,'multiline':True]
['text':' 19 ','line_number':155,'multiline':True]
['text':' 20 ','line_number':156,'multiline':True]
['text':' 21 ','line_number':157,'multiline':True]
['text':' 22 ','line_number':159,'multiline':True]
['text':' sub. GTK_STOCK_GO_BACK','line_number':159,'multiline':False]
['text':' 23 ','line_number':160,'multiline':True]
['text':' sub. GTK_STOCK_GO_FORWARD','line_number':160,'multiline':False]
['text':' 24 ','line_number':162,'multiline':True]
['text':' 24 ','line_number':164,'multiline':True]
['text':' 25 ','line_number':166,'multiline':True]
['text':' sub. GTK_STOCK_CONVERT','line_number':166,'multiline':False]
['text':' 26 ','line_number':167,'multiline':True]
['text':' sub. GTK_STOCK_JUMP_TO','line_number':167,'multiline':False]
['text':' 27 ','line_number':169,'multiline':True]
['text':' 28 ','line_number':170,'multiline':True]
['text':' 29 ','line_number':171,'multiline':True]
['text':' 30 ','line_number':172,'multiline':True]
['text':' 27 ','line_number':174,'multiline':True]
['text':' 28 ','line_number':175,'multiline':True]
['text':' 29 ','line_number':176,'multiline':True]
['text':' 30 ','line_number':177,'multiline':True]
['text':' 31 ','line_number':179,'multiline':True]
['text':' GTK_STOCK_QUIT','line_number':179,'multiline':False]
['text':' !GTK_CHECK_VERSION(3,10,0)','line_number':181,'multiline':False]
['text':' 00 ','line_number':184,'multiline':True]
['text':' 01 ','line_number':185,'multiline':True]
['text':' 02 ','line_number':186,'multiline':True]
['text':' 03 ','line_number':187,'multiline':True]
['text':' 04 ','line_number':188,'multiline':True]
['text':' 05 ','line_number':189,'multiline':True]
['text':' 06 ','line_number':190,'multiline':True]
['text':' 07 ','line_number':191,'multiline':True]
['text':' 08 ','line_number':192,'multiline':True]
['text':' 09 ','line_number':193,'multiline':True]
['text':' 10 ','line_number':194,'multiline':True]
['text':' 11 ','line_number':195,'multiline':True]
['text':' 12 ','line_number':196,'multiline':True]
['text':' 13 ','line_number':197,'multiline':True]
['text':' 14 ','line_number':198,'multiline':True]
['text':' 15 ','line_number':199,'multiline':True]
['text':' 16 ','line_number':200,'multiline':True]
['text':' 17 ','line_number':201,'multiline':True]
['text':' FIXME: fuzzy','line_number':201,'multiline':False]
['text':' 18 ','line_number':202,'multiline':True]
['text':' 19 ','line_number':203,'multiline':True]
['text':' 20 ','line_number':204,'multiline':True]
['text':' 21 ','line_number':205,'multiline':True]
['text':' 22 ','line_number':206,'multiline':True]
['text':' 23 ','line_number':207,'multiline':True]
['text':' 24 ','line_number':208,'multiline':True]
['text':' 25 ','line_number':209,'multiline':True]
['text':' 26 ','line_number':210,'multiline':True]
['text':' 27 ','line_number':211,'multiline':True]
['text':' 28 ','line_number':212,'multiline':True]
['text':' 29 ','line_number':213,'multiline':True]
['text':' 30 ','line_number':214,'multiline':True]
['text':' 31 ','line_number':215,'multiline':True]
['text':' !GTK_CHECK_VERSION(3,10,0)','line_number':217,'multiline':False]
['text':' USE_G_RESOURCE','line_number':243,'multiline':False]
['text':' FALLTHROUGH','line_number':319,'multiline':False]
['text':' !GTK_CHECK_VERSION(3,10,0)','line_number':340,'multiline':False]
['text':'
     * Rather than loading the icon directly into a GtkImage, create
     * a new GtkIconSet and put it in there.  This way we can easily
     * scale the toolbar icons on the fly when needed.
     ','line_number':344,'multiline':True]
['text':' !GTK_CHECK_VERSION(3,10,0)','line_number':361,'multiline':False]
['text':' First use a specified "icon=" argument.','line_number':370,'multiline':False]
['text':' If not found and not builtin specified try using the menu name.','line_number':374,'multiline':False]
['text':' Still not found?  Then use a builtin icon, a blank one as fallback.','line_number':379,'multiline':False]
['text':' When we're in a GtkPlug, we don't have window focus events, only widget','line_number':413,'multiline':False]
['text':' focus.  To emulate stand-alone gvim, if a button gets focus (e.g.,','line_number':414,'multiline':False]
['text':' <Tab> into GtkPlug) immediately pass it to mainwin.','line_number':415,'multiline':False]
['text':' FEAT_TOOLBAR','line_number':421,'multiline':False]
['text':' defined(USE_GRESOURCE)','line_number':453,'multiline':False]
['text':' An icon theme is supposed to provide fixed-size','line_number':481,'multiline':False]
['text':' image files for each size, e.g., 16, 22, 24, ...','line_number':482,'multiline':False]
['text':' Naturally, in contrast to GtkIconSet, GtkIconTheme','line_number':483,'multiline':False]
['text':' won't prepare size variants for us out of a single','line_number':484,'multiline':False]
['text':' fixed-size image.','line_number':485,'multiline':False]
['text':'','line_number':486,'multiline':False]
['text':' Currently, Vim provides 24x24 images only while the','line_number':487,'multiline':False]
['text':' icon size on the menu and the toolbar is set to 16x16','line_number':488,'multiline':False]
['text':' by default.','line_number':489,'multiline':False]
['text':'','line_number':490,'multiline':False]
['text':' Resize them by ourselves until we have our own fully','line_number':491,'multiline':False]
['text':' fledged icon theme.','line_number':492,'multiline':False]
['text':' !GTK_CHECK_VERSION(3,0.0)','line_number':506,'multiline':False]
['text':' !GTK_CHECK_VERSION(3,0,0)','line_number':528,'multiline':False]
['text':' defined(USE_GRESOURCE)','line_number':529,'multiline':False]
['text':' FEAT_TOOLBAR','line_number':532,'multiline':False]
['text':'
 * Translate Vim's mnemonic tagging to GTK+ style and convert to UTF-8
 * if necessary.  The caller must vim_free() the returned string.
 *
 *	Input	Output
 *	_	__
 *	&&	&
 *	&	_	stripped if use_mnemonic == FALSE
 *	<Tab>		end of menu label text
 ','line_number':536,'multiline':True]
['text':' It would be neat to have image menu items, but that would require major','line_number':600,'multiline':False]
['text':' changes to Vim's menu system.  Not to mention that all the translations','line_number':601,'multiline':False]
['text':' had to be updated.','line_number':602,'multiline':False]
['text':' since the tearoff should always appear first, increment idx','line_number':656,'multiline':False]
['text':' Invalid text, can happen when 'encoding' is changed.  Avoid','line_number':753,'multiline':False]
['text':' a nasty GTK error message, skip the tooltip.','line_number':754,'multiline':False]
['text':' FEAT_TOOLBAR','line_number':795,'multiline':False]
['text':' No parent, must be a non-menubar menu','line_number':797,'multiline':False]
['text':' Make place for the possible tearoff handle item.  Not in the popup','line_number':802,'multiline':False]
['text':' menu, it doesn't have a tearoff item.','line_number':803,'multiline':False]
['text':' Separator: Just add it','line_number':810,'multiline':False]
['text':' Add textual menu item.','line_number':824,'multiline':False]
['text':' FEAT_MENU','line_number':839,'multiline':False]
['text':'
 * Enable or disable accelerators for the toplevel menus.
 ','line_number':850,'multiline':True]
['text':' Do nothing','line_number':894,'multiline':False]
['text':' FEAT_MENU','line_number':903,'multiline':False]
['text':' FEAT_TOOLBAR','line_number':920,'multiline':False]
['text':' Only set the tooltip when it's valid utf-8.','line_number':935,'multiline':False]
['text':' Only set the tooltip when it's valid utf-8.','line_number':938,'multiline':False]
['text':' FEAT_TOOLBAR','line_number':944,'multiline':False]
['text':'
 * Destroy the machine specific menu widget.
 ','line_number':948,'multiline':True]
['text':' Don't let gtk_container_remove automatically destroy menu->id.','line_number':954,'multiline':False]
['text':' Workaround for a spurious gtk warning in Ubuntu: "Trying to remove','line_number':958,'multiline':False]
['text':' a child that doesn't believe we're its parent."','line_number':959,'multiline':False]
['text':' Remove widget from gui.menubar before destroying it.','line_number':960,'multiline':False]
['text':' FEAT_TOOLBAR','line_number':987,'multiline':False]
['text':' FEAT_MENU','line_number':1001,'multiline':False]
['text':'
 * Scrollbar stuff.
 ','line_number':1004,'multiline':True]
['text':' ignore events triggered by moving the thumb (happens in GTK 3)','line_number':1015,'multiline':False]
['text':'
 * Take action upon scrollbar dragging.
 ','line_number':1078,'multiline':True]
['text':' cancel any preediting','line_number':1089,'multiline':False]
['text':'
     * The dragging argument must be right for the scrollbar to work with
     * closed folds.  This isn't documented, hopefully this will keep on
     * working in later GTK versions.
     *
     * FIXME: Well, it doesn't work in GTK2. :)
     * HACK: Get the mouse pointer position, if it appears to be on an arrow
     * button set "dragging" to FALSE.  This assumes square buttons!
     ','line_number':1097,'multiline':True]
['text':' vertical scrollbar: need to set "dragging" properly in case','line_number':1118,'multiline':False]
['text':' there are closed folds.','line_number':1119,'multiline':False]
['text':' up arrow: move one (closed fold) line up','line_number':1126,'multiline':False]
['text':' down arrow: move one (closed fold) line down','line_number':1132,'multiline':False]
['text':' !GTK_CHECK_VERSION(3,0,0)','line_number':1139,'multiline':False]
['text':' SBAR_VERT or SBAR_HORIZ','line_number':1143,'multiline':False]
['text':'
 * Implementation of the file selector related stuff
 ','line_number':1189,'multiline':True]
['text':'
 * Put up a file requester.
 * Returns the selected name in allocated memory, or NULL for Cancel.
 * saving,			select file to write
 * title			title for the window
 * dflt				default name
 * ext				not used (extension added)
 * initdir			initial directory, NULL for current dir
 * filter			file name filter
 ','line_number':1234,'multiline':True]
['text':' GTK has a bug, it only works with an absolute path.','line_number':1265,'multiline':False]
['text':' Always need a trailing slash for a directory.','line_number':1270,'multiline':False]
['text':' If our pointer is currently hidden, then we should show it.','line_number':1273,'multiline':False]
['text':' Hack: The GTK file dialog warns when it can't access a new file, this','line_number':1276,'multiline':False]
['text':' makes it shut up. http://bugzilla.gnome.org/show_bug.cgi?id=664587','line_number':1277,'multiline':False]
['text':' We create the dialog each time, so that the button text can be "Open"','line_number':1282,'multiline':False]
['text':' or "Save" according to the action.','line_number':1283,'multiline':False]
['text':' !USE_FILE_CHOOSER','line_number':1369,'multiline':False]
['text':' shortcut','line_number':1373,'multiline':False]
['text':' gtk_signal_connect() doesn't work for destroy, it causes a hang','line_number':1387,'multiline':False]
['text':' Concatenate "initdir" and "dflt".','line_number':1395,'multiline':False]
['text':' !USE_FILE_CHOOSER','line_number':1405,'multiline':False]
['text':' shorten the file name if possible','line_number':1412,'multiline':False]
['text':'
 * Put up a directory selector
 * Returns the selected name in allocated memory, or NULL for Cancel.
 * title			title for the window
 * dflt				default name
 * initdir			initial directory, NULL for current dir
 ','line_number':1416,'multiline':True]
['text':' Only in GTK 2.4 and later.','line_number':1428,'multiline':False]
['text':' file selection dialog','line_number':1431,'multiline':False]
['text':' if our pointer is currently hidden, then we should show it.','line_number':1451,'multiline':False]
['text':' GTK appears to insist on an absolute path.','line_number':1454,'multiline':False]
['text':' Always need a trailing slash for a directory.','line_number':1459,'multiline':False]
['text':' Also add a dummy file name, so that we get to the directory.','line_number':1460,'multiline':False]
['text':' Run the dialog.','line_number':1466,'multiline':False]
['text':' shorten the file name if possible','line_number':1474,'multiline':False]
['text':' !defined(GTK_FILE_CHOOSER)','line_number':1479,'multiline':False]
['text':' For GTK 2.2 and earlier: fall back to ordinary file selector.','line_number':1480,'multiline':False]
['text':' !defined(GTK_FILE_CHOOSER)','line_number':1482,'multiline':False]
['text':' FEAT_BROWSE','line_number':1486,'multiline':False]
['text':'
 * Split up button_string into individual button labels by inserting
 * NUL bytes.  Also replace the Vim-style mnemonic accelerator prefix
 * '&' with '_'.  button_string must point to allocated memory!
 * Return an allocated array of pointers into button_string.
 ','line_number':1526,'multiline':True]
['text':' currently not relied upon, but doesn't hurt','line_number':1561,'multiline':False]
['text':'
     * Uh-oh... this should never ever happen.	But we don't wanna crash
     * if the translation is broken, thus fall back to the untranslated
     * buttons string in case of emergency.
     ','line_number':1591,'multiline':True]
['text':' "yes no cancel"','line_number':1637,'multiline':False]
['text':' must be writable','line_number':1642,'multiline':False]
['text':' Check 'v' flag in 'guioptions': vertical button placement.','line_number':1646,'multiline':False]
['text':' Add GTK+ 3 code if necessary.','line_number':1650,'multiline':False]
['text':' N.B. GTK+ 3 doesn't allow you to access vbox and action_area via','line_number':1651,'multiline':False]
['text':' the C API.','line_number':1652,'multiline':False]
['text':' Overrule the "action_area" value, hopefully this works...','line_number':1660,'multiline':False]
['text':'
     * Yes this is ugly, I don't particularly like it either.  But doing it
     * this way has the compelling advantage that translations need not to
     * be touched at all.  See below what 'ok' and 'ync' are used for.
     ','line_number':1665,'multiline':True]
['text':'
     * Yes, the buttons are in reversed order to match the GNOME 2 desktop
     * environment.  Don't hit me -- it's all about consistency.
     * Well, apparently somebody changed his mind: with GTK 2.2.4 it works the
     * other way around...
     ','line_number':1674,'multiline':True]
['text':'
	 * Perform some guesswork to find appropriate stock items for the
	 * buttons.  We have to compare with a sample of the translated
	 * button string to get things right.  Yes, this is hackish :/
	 *
	 * But even the common button labels aren't necessarily translated,
	 * since anyone can create their own dialogs using Vim functions.
	 * Thus we have to check for those too.
	 ','line_number':1686,'multiline':True]
['text':' almost impossible to fail','line_number':1695,'multiline':False]
['text':'
 * Allow mnemonic accelerators to be activated without pressing <Alt>.
 * I'm not sure if it's a wise idea to do this.  However, the old GTK+ 1.2
 * GUI used to work this way, and I consider the impact on UI consistency
 * low enough to justify implementing this as a special Vim feature.
 ','line_number':1732,'multiline':True]
['text':' no default button, ignore "Enter"','line_number':1740,'multiline':False]
['text':' accept accelerators without Alt','line_number':1741,'multiline':False]
['text':' Widget of the dialog','line_number':1742,'multiline':False]
['text':' Ignore hitting Enter (or Space) when there is no default button.','line_number':1750,'multiline':False]
['text':' A different key was pressed, return to normal behavior','line_number':1754,'multiline':False]
['text':' Close the dialog when hitting "Esc".','line_number':1757,'multiline':False]
['text':' continue emission','line_number':1772,'multiline':False]
['text':' type of dialog','line_number':1776,'multiline':False]
['text':' title of dialog','line_number':1777,'multiline':False]
['text':' message text','line_number':1778,'multiline':False]
['text':' names of buttons','line_number':1779,'multiline':False]
['text':' default button','line_number':1780,'multiline':False]
['text':' text for textfield or NULL','line_number':1781,'multiline':False]
['text':' Make Enter work like pressing OK.','line_number':1801,'multiline':False]
['text':' Allow activation of mnemonic accelerators without pressing <Alt> when','line_number':1839,'multiline':False]
['text':' there is no textfield.  Handle pressing Esc.','line_number':1840,'multiline':False]
['text':' No default button, ignore pressing Enter.','line_number':1850,'multiline':False]
['text':' Show the mouse pointer if it's currently hidden.','line_number':1853,'multiline':False]
['text':' GTK_RESPONSE_NONE means the dialog was programmatically destroyed.','line_number':1858,'multiline':False]
['text':' Enter pressed','line_number':1861,'multiline':False]
['text':' FEAT_GUI_DIALOG','line_number':1878,'multiline':False]
['text':'
     * Append a submenu for selecting an input method.	This is
     * currently the only way to switch input methods at runtime.
     ','line_number':1887,'multiline':True]
['text':' FEAT_XIM','line_number':1919,'multiline':False]
['text':' A pseudo event to have gtk_menu_popup_at_pointer() work. Since the','line_number':1925,'multiline':False]
['text':' function calculates the popup menu position on the basis of the','line_number':1926,'multiline':False]
['text':' actual pointer position when it is invoked, the fields x, y, x_root','line_number':1927,'multiline':False]
['text':' and y_root are set to zero for convenience.','line_number':1928,'multiline':False]
['text':' Ugly global variable to pass "mouse_pos" flag from gui_make_popup() to','line_number':1953,'multiline':False]
['text':' popup_menu_position_func().','line_number':1954,'multiline':False]
['text':'
 * Menu position callback; used by gui_make_popup() to place the menu
 * at the current text cursor position.
 *
 * Note: The push_in output argument seems to affect scrolling of huge
 * menus that don't fit on the screen.	Leave it at the default for now.
 ','line_number':1957,'multiline':True]
['text':' Find the cursor position in the current window','line_number':1983,'multiline':False]
['text':' A pseudo event to have gtk_menu_popup_at_*() functions work. Since','line_number':2004,'multiline':False]
['text':' the position where the menu pops up is automatically adjusted by','line_number':2005,'multiline':False]
['text':' the functions, none of the fields x, y, x_root and y_root has to be','line_number':2006,'multiline':False]
['text':' set to a specific value here; therefore, they are set to zero for','line_number':2007,'multiline':False]
['text':' convenience.','line_number':2008,'multiline':False]
['text':' FEAT_MENU','line_number':2051,'multiline':False]
['text':'
 * We don't create it twice.
 ','line_number':2054,'multiline':True]
['text':' the main dialog widget','line_number':2060,'multiline':False]
['text':' 'Whole word only' check button','line_number':2061,'multiline':False]
['text':' 'Match case' check button','line_number':2062,'multiline':False]
['text':' search direction 'Up' radio button','line_number':2063,'multiline':False]
['text':' search direction 'Down' radio button','line_number':2064,'multiline':False]
['text':' 'Find what' entry text widget','line_number':2065,'multiline':False]
['text':' 'Replace with' entry text widget','line_number':2066,'multiline':False]
['text':' 'Find Next' action button','line_number':2067,'multiline':False]
['text':' 'Replace With' action button','line_number':2068,'multiline':False]
['text':' 'Replace All' action button','line_number':2069,'multiline':False]
['text':' If the user is holding one of the key modifiers we will just bail out,','line_number':2081,'multiline':False]
['text':' thus preserving the possibility of normal focus traversal.','line_number':2082,'multiline':False]
['text':' the Escape key synthesizes a cancellation action','line_number':2086,'multiline':False]
['text':' It would be delightful if it where possible to do search history','line_number':2094,'multiline':False]
['text':' operations on the K_UP and K_DOWN keys here.','line_number':2095,'multiline':False]
['text':'
 * This is currently only used by find_replace_dialog_create(), and
 * I'd really like to keep it at that.	In other words: don't spread
 * this nasty hack all over the code.  Think twice.
 ','line_number':2154,'multiline':True]
['text':'
 * Returns the number of characters in GtkEntry.
 ','line_number':2171,'multiline':True]
['text':' 2.18 introduced a new object GtkEntryBuffer to handle text data for','line_number':2181,'multiline':False]
['text':' GtkEntry instead of letting each instance of the latter have its own','line_number':2182,'multiline':False]
['text':' storage for that.  The code below is almost identical to the','line_number':2183,'multiline':False]
['text':' implementation of gtk_entry_get_text_length() for the versions >= 2.18.','line_number':2184,'multiline':False]
['text':' 2.14 introduced a new function to avoid memory management bugs which can','line_number':2187,'multiline':False]
['text':' happen when gtk_entry_get_text() is used without due care and attention.','line_number':2188,'multiline':False]
['text':' gtk_entry_get_text() returns the pointer to the storage allocated','line_number':2191,'multiline':False]
['text':' internally by the widget.  Accordingly, use the one with great care:','line_number':2192,'multiline':False]
['text':' Don't free it nor modify the contents it points to; call the function','line_number':2193,'multiline':False]
['text':' every time you need the pointer since its value may have been changed','line_number':2194,'multiline':False]
['text':' by the widget.','line_number':2195,'multiline':False]
['text':' main top down box','line_number':2203,'multiline':False]
['text':' Get the search string to use.','line_number':2218,'multiline':False]
['text':'
     * If the dialog already exists, just raise it.
     ','line_number':2228,'multiline':True]
['text':' For :promptfind dialog, always give keyboard focus to 'what' entry.','line_number':2243,'multiline':False]
['text':' For :promptrepl dialog, give it to 'with' entry if 'what' has a','line_number':2244,'multiline':False]
['text':' non-empty entry; otherwise, to 'what' entry.','line_number':2245,'multiline':False]
['text':' Nothing equivalent to gtk_dialog_set_has_separator() in GTK+ 3.','line_number':2256,'multiline':False]
['text':'
	 * Make the entry activation only change the input focus onto the
	 * with item.
	 ','line_number':2392,'multiline':True]
['text':'
	 * Make the entry activation do the search.
	 ','line_number':2401,'multiline':True]
['text':' whole word only button','line_number':2409,'multiline':False]
['text':' match case button','line_number':2428,'multiline':False]
['text':' 'Up' and 'Down' buttons','line_number':2471,'multiline':False]
['text':' vbox to hold the action buttons','line_number':2481,'multiline':False]
['text':' 'Find Next' button','line_number':2490,'multiline':False]
['text':' 'Replace' button','line_number':2509,'multiline':False]
['text':' 'Replace All' button','line_number':2522,'multiline':False]
['text':' 'Cancel' button','line_number':2536,'multiline':False]
['text':' Suppress automatic show of the unused action area','line_number':2558,'multiline':False]
['text':'
 * Callback for actions of the find and replace dialogs
 ','line_number':2588,'multiline':True]
['text':' avoid a lint warning here','line_number':2600,'multiline':False]
['text':' Get the search/replace strings from the dialog','line_number':2602,'multiline':False]
['text':'
 * our usual callback function
 ','line_number':2629,'multiline':True]
['text':'
 * Syncing the find/replace dialogs on the fly is utterly useless crack,
 * and causes nothing but problems.  Please tell me a use case for which
 * you'd need both a find dialog and a find/replace one at the same time,
 * without being able to actually use them separately since they're syncing
 * all the time.  I don't think it's worthwhile to fix this nonsense,
 * particularly evil incarnation of braindeadness, whatever; I'd much rather
 * see it extinguished from this planet.  Thanks for listening.  Sorry.
 ','line_number':2638,'multiline':True]
['text':' shouldn't happen','line_number':2656,'multiline':False]
['text':'
 * ":helpfind"
 ','line_number':2671,'multiline':True]
['text':' This will fail when menus are not loaded.  Well, it's only for','line_number':2677,'multiline':False]
['text':' backwards compatibility anyway.','line_number':2678,'multiline':False]
['text':' We just want to suppress the warnings.','line_number':2689,'multiline':False]
['text':' http://bugzilla.gnome.org/show_bug.cgi?id=664587','line_number':2690,'multiline':False]
