['text':' vi:set ts=8 sts=4 sw=4 noet:
 *
 * VIM - Vi IMproved	by Bram Moolenaar
 *
 * Do ":help uganda"  in Vim to read copying and usage conditions.
 * Do ":help credits" in Vim to see a list of people who contributed.
 ','line_number':1,'multiline':True]
['text':'
 * definition of global variables
 ','line_number':9,'multiline':True]
['text':'
 * Number of Rows and Columns in the screen.
 * Must be long to be able to use them as options in option.c.
 * Note: Use screen_Rows and screen_Columns to access items in ScreenLines[].
 * They may have different values when the screen wasn't (re)allocated yet
 * after setting Rows or Columns (e.g., when starting up).
 ','line_number':13,'multiline':True]
['text':' nr of rows in the screen','line_number':20,'multiline':False]
['text':' nr of columns in the screen','line_number':29,'multiline':False]
['text':'
 * The characters that are currently on the screen are kept in ScreenLines[].
 * It is a single block of characters, the size of the screen plus one line.
 * The attributes for those characters are kept in ScreenAttrs[].
 * The virtual column in the line is kept in ScreenCols[].
 *
 * "LineOffset[n]" is the offset from ScreenLines[] for the start of line 'n'.
 * The same value is used for ScreenLinesUC[], ScreenAttrs[] and ScreenCols[].
 *
 * Note: before the screen is initialized and when out of memory these can be
 * NULL.
 ','line_number':31,'multiline':True]
['text':' line wraps to next line','line_number':47,'multiline':False]
['text':'
 * When using Unicode characters (in UTF-8 encoding) the character in
 * ScreenLinesUC[] contains the Unicode for the character at this position, or
 * NUL when the character in ScreenLines[] is to be used (ASCII char).
 * The composing characters are to be drawn on top of the original character.
 * ScreenLinesC[0][off] is only to be used when ScreenLinesUC[off] != 0.
 * Note: These three are only allocated when enc_utf8 is set!
 ','line_number':49,'multiline':True]
['text':' decoded UTF-8 characters','line_number':57,'multiline':False]
['text':' composing characters','line_number':58,'multiline':False]
['text':' value of p_mco used when','line_number':59,'multiline':False]
['text':' allocating ScreenLinesC[]','line_number':60,'multiline':False]
['text':' Only used for euc-jp: Second byte of a character that starts with 0x8e.','line_number':62,'multiline':False]
['text':' These are single-width.','line_number':63,'multiline':False]
['text':'
 * One screen line to be displayed.  Points into ScreenLines.
 ','line_number':66,'multiline':True]
['text':'
 * Last known cursor position.
 * Positioning the cursor is reduced by remembering the last position.
 * Mostly used by windgoto() and screen_char().
 ','line_number':71,'multiline':True]
['text':' used for 'hlsearch' highlight matching','line_number':80,'multiline':False]
['text':' last lnum where CurSearch was displayed','line_number':83,'multiline':False]
['text':' don't use 'hlsearch' temporarily','line_number':86,'multiline':False]
['text':' info for 'foldcolumn'','line_number':91,'multiline':False]
['text':' Flag that is set when drawing for a callback, not from the main command','line_number':94,'multiline':False]
['text':' loop.','line_number':95,'multiline':False]
['text':'
 * Indexes for tab page line:
 *	N > 0 for label of tab page N
 *	N == 0 for no label
 *	N < 0 for closing tab page -N
 *	N == -999 for closing current tab page
 ','line_number':98,'multiline':True]
['text':' Array with size Rows x Columns containing zindex of popups.','line_number':108,'multiline':False]
['text':' Array with flags for transparent cells of current popup.','line_number':111,'multiline':False]
['text':' Flag set to TRUE when popup_mask needs to be updated.','line_number':114,'multiline':False]
['text':' Tab that was used to fill popup_mask.','line_number':117,'multiline':False]
['text':' Zindex in for screen_char(): if lower than the value in "popup_mask"','line_number':120,'multiline':False]
['text':' drawing the character is skipped.','line_number':121,'multiline':False]
['text':' actual size of ScreenLines[]','line_number':125,'multiline':False]
['text':' actual size of ScreenLines[]','line_number':126,'multiline':False]
['text':'
 * When vgetc() is called, it sets mod_mask to the set of modifiers that are
 * held down based on the MOD_MASK_* symbols that are read first.
 ','line_number':128,'multiline':True]
['text':' current key modifiers','line_number':132,'multiline':False]
['text':' The value of "mod_mask" and the unomdified character before calling','line_number':134,'multiline':False]
['text':' merge_modifyOtherKeys().','line_number':135,'multiline':False]
['text':'
 * Cmdline_row is the row where the command line starts, just below the
 * last window.
 * When the cmdline gets longer than the available space the screen gets
 * scrolled up. After a CTRL-D (show matches), after hitting ':' after
 * "hit return", and for the :global command, the command line is
 * temporarily moved.  The old position is restored with the next call to
 * update_screen().
 ','line_number':139,'multiline':True]
['text':' cmdline must be redrawn','line_number':150,'multiline':False]
['text':' mode must be redrawn','line_number':151,'multiline':False]
['text':' cmdline must be cleared','line_number':152,'multiline':False]
['text':' mode is being displayed','line_number':153,'multiline':False]
['text':' don't insert lines','line_number':154,'multiline':False]
['text':' cmdline is crypted','line_number':156,'multiline':False]
['text':' executing register','line_number':159,'multiline':False]
['text':' screen has been cleared','line_number':161,'multiline':False]
['text':'
 * When '$' is included in 'cpoptions' option set:
 * When a change command is given that deletes only part of a line, a dollar
 * is put at the end of the changed text. dollar_vcol is set to the virtual
 * column of this '$'.  -1 is used to indicate no $ is being displayed.
 ','line_number':163,'multiline':True]
['text':'
 * Variables for Insert mode completion.
 ','line_number':171,'multiline':True]
['text':' msg for CTRL-X submode','line_number':175,'multiline':False]
['text':' prepended to edit_submode','line_number':176,'multiline':False]
['text':' appended to edit_submode','line_number':177,'multiline':False]
['text':' highl. method for extra info','line_number':178,'multiline':False]
['text':'
 * Functions for putting characters in the command line,
 * while keeping ScreenLines[] updated.
 ','line_number':180,'multiline':True]
['text':' cmdline is drawn right to left','line_number':185,'multiline':False]
['text':' Number of screen lines that windows have','line_number':189,'multiline':False]
['text':' scrolled because of printing messages.','line_number':190,'multiline':False]
['text':' when TRUE don't set need_wait_return in','line_number':192,'multiline':False]
['text':' msg_puts_attr() when msg_scrolled is','line_number':193,'multiline':False]
['text':' non-zero','line_number':194,'multiline':False]
['text':' msg to be shown after redraw','line_number':196,'multiline':False]
['text':' highlight attr for keep_msg','line_number':197,'multiline':False]
['text':' keep_msg was set by msgmore()','line_number':198,'multiline':False]
['text':' do fileinfo() after redraw','line_number':199,'multiline':False]
['text':' msg_start() will scroll','line_number':200,'multiline':False]
['text':' msg_outstr() was used in line','line_number':201,'multiline':False]
['text':' msg_outstr() was used at all','line_number':202,'multiline':False]
['text':' don't wait for this msg','line_number':203,'multiline':False]
['text':' don't display errors for now,','line_number':204,'multiline':False]
['text':' unless 'debug' is set.','line_number':205,'multiline':False]
['text':' printing informative message','line_number':206,'multiline':False]
['text':' don't add messages to history','line_number':207,'multiline':False]
['text':' need to clear text before','line_number':209,'multiline':False]
['text':' displaying a message.','line_number':210,'multiline':False]
['text':' don't display errors for','line_number':211,'multiline':False]
['text':' expression that is skipped','line_number':212,'multiline':False]
['text':' use message of next of several','line_number':213,'multiline':False]
['text':' emsg() calls for throw','line_number':214,'multiline':False]
['text':' used by assert_fails()','line_number':215,'multiline':False]
['text':' just had ":endif"','line_number':220,'multiline':False]
['text':' incremented by emsg() when a','line_number':222,'multiline':False]
['text':' message is displayed or thrown','line_number':223,'multiline':False]
['text':' incremented by emsg() when','line_number':225,'multiline':False]
['text':' emsg_silent was set and did_emsg','line_number':226,'multiline':False]
['text':' is not incremented','line_number':227,'multiline':False]
['text':' set by emsg() when emsg_silent','line_number':228,'multiline':False]
['text':' is set before calling a function','line_number':229,'multiline':False]
['text':' cumulative did_emsg, increased','line_number':230,'multiline':False]
['text':' when did_emsg is reset.','line_number':231,'multiline':False]
['text':' set if vim_beep() is called','line_number':232,'multiline':False]
['text':' number of times emsg() was','line_number':233,'multiline':False]
['text':' called and did show a message','line_number':234,'multiline':False]
['text':' did_emsg set because of a','line_number':236,'multiline':False]
['text':' syntax error','line_number':237,'multiline':False]
['text':' always incremented by emsg()','line_number':238,'multiline':False]
['text':' executing ":echowindow"','line_number':239,'multiline':False]
['text':' exit value for ex mode','line_number':240,'multiline':False]
['text':' there is an error message','line_number':241,'multiline':False]
['text':' vim_regcomp() called emsg()','line_number':242,'multiline':False]
['text':' don't wait for return for now','line_number':244,'multiline':False]
['text':' need to wait for return later','line_number':245,'multiline':False]
['text':' wait_return() was used and','line_number':246,'multiline':False]
['text':' nothing written since then','line_number':247,'multiline':False]
['text':' call maketitle() soon','line_number':248,'multiline':False]
['text':' 'q' hit at "--more--" msg','line_number':250,'multiline':False]
['text':' did msg in altern. screen','line_number':252,'multiline':False]
['text':' extra interrupt character','line_number':253,'multiline':False]
['text':' don't connect to X server','line_number':256,'multiline':False]
['text':' Do connect to X server.','line_number':258,'multiline':False]
['text':' Overrules x_no_connect and','line_number':259,'multiline':False]
['text':' "exclude" in 'clipboard'.','line_number':260,'multiline':False]
['text':' getexmodeline(): keep indent','line_number':263,'multiline':False]
['text':' when inside vgetc() then > 0','line_number':264,'multiline':False]
['text':' did set $VIM ourselves','line_number':266,'multiline':False]
['text':' idem for $VIMRUNTIME','line_number':267,'multiline':False]
['text':'
 * Lines left before a "more" message.	Ex mode needs to be able to reset this
 * after you type something.
 ','line_number':269,'multiline':True]
['text':' lines left for listing','line_number':273,'multiline':False]
['text':' don't use more prompt, truncate','line_number':274,'multiline':False]
['text':' messages','line_number':275,'multiline':False]
['text':'
 * Stack of execution contexts.  Each entry is an estack_T.
 * Current context is at ga_len - 1.
 ','line_number':277,'multiline':True]
['text':' name of error message source','line_number':283,'multiline':False]
['text':' line number in the message source or zero','line_number':285,'multiline':False]
['text':' Script CTX being sourced or was sourced to define the current function.','line_number':288,'multiline':False]
['text':' whether inside compile_def_function()','line_number':297,'multiline':False]
['text':' nesting level','line_number':300,'multiline':False]
['text':' break below this level','line_number':301,'multiline':False]
['text':' did "debug mode" message','line_number':302,'multiline':False]
['text':' breakpoint change count','line_number':303,'multiline':False]
['text':' breakpoint backtrace level','line_number':304,'multiline':False]
['text':' PROF_ values','line_number':306,'multiline':False]
['text':'
 * The exception currently being thrown.  Used to pass an exception to
 * a different cstack.  Also used for discarding an exception before it is
 * caught or made pending.  Only valid when did_throw is TRUE.
 ','line_number':316,'multiline':True]
['text':'
 * did_throw: An exception is being thrown.  Reset when the exception is caught
 * or as long as it is pending in a finally clause.
 ','line_number':323,'multiline':True]
['text':'
 * need_rethrow: set to TRUE when a throw that cannot be handled in do_cmdline()
 * must be propagated to the cstack of the previously called do_cmdline().
 ','line_number':329,'multiline':True]
['text':'
 * check_cstack: set to TRUE when a ":finish" or ":return" that cannot be
 * handled in do_cmdline() must be propagated to the cstack of the previously
 * called do_cmdline().
 ','line_number':335,'multiline':True]
['text':'
 * Number of nested try conditionals (across function calls and ":source"
 * commands).
 ','line_number':342,'multiline':True]
['text':'
 * When "force_abort" is TRUE, always skip commands after an error message,
 * even after the outermost ":endif", ":endwhile" or ":endfor" or for a
 * function without the "abort" flag.  It is set to TRUE when "trylevel" is
 * non-zero (and ":silent!" was not used) or an exception is being thrown at
 * the time an error is detected.  It is set to FALSE when "trylevel" gets
 * zero again and there was no error or interrupt or throw.
 ','line_number':348,'multiline':True]
['text':'
 * "msg_list" points to a variable in the stack of do_cmdline() which keeps
 * the list of arguments of several emsg() calls, one of which is to be
 * converted to an error exception immediately after the failing command
 * returns.  The message to be used for the exception value is pointed to by
 * the "throw_msg" field of the first element in the list.  It is usually the
 * same as the "msg" field of that element, but can be identical to the "msg"
 * field of a later list element, when the "emsg_severe" flag was set when the
 * emsg() call was made.
 ','line_number':358,'multiline':True]
['text':'
 * suppress_errthrow: When TRUE, don't convert an error to an exception.  Used
 * when displaying the interrupt message or reporting an exception that is still
 * uncaught at the top level (which has already been discarded then).  Also used
 * for the error message when no exception can be thrown.
 ','line_number':370,'multiline':True]
['text':'
 * The stack of all caught and not finished exceptions.  The exception on the
 * top of the stack is the one got by evaluation of v:exception.  The complete
 * stack of all caught and pending exceptions is embedded in the various
 * cstacks; the pending exceptions, however, are not on the caught stack.
 ','line_number':378,'multiline':True]
['text':'
 * Garbage collection can only take place when we are sure there are no Lists
 * or Dictionaries being used internally.  This is flagged with
 * "may_garbage_collect" when we are at the toplevel.
 * "want_garbage_collect" is set by the garbagecollect() function, which means
 * we do garbage collection before waiting for a char at the toplevel.
 * "garbage_collect_at_exit" indicates garbagecollect(1) was called.
 ','line_number':386,'multiline':True]
['text':' Array with predefined commonly used types.','line_number':399,'multiline':False]
['text':'','line_number':400,'multiline':False]
['text':' For each entry of a regular type the next one has the "const" version.','line_number':401,'multiline':False]
['text':' E.g. "&t_const_bool == &t_bool + 1"','line_number':402,'multiline':False]
['text':' t_unknown - used for when the type is really unknown, e.g. global variables.','line_number':404,'multiline':False]
['text':' Also for when a function may or may not return something.','line_number':405,'multiline':False]
['text':' t_any -  used for when the type can be anything, but excludes "void".','line_number':409,'multiline':False]
['text':' t_void - used for a function not returning anything.','line_number':413,'multiline':False]
['text':' t_number_bool - number that can be used as a bool','line_number':429,'multiline':False]
['text':' t_number_float - number that can be used as a float','line_number':433,'multiline':False]
['text':' t_number_or_string - Special value used for @#.','line_number':455,'multiline':False]
['text':' t_func_unknown - function with any arguments and no or unknown return value','line_number':459,'multiline':False]
['text':' t_func_void - function with any arguments and no return value','line_number':463,'multiline':False]
['text':' t_func_0_void - function without arguments and nor return value','line_number':479,'multiline':False]
['text':' 0: t_unknown','line_number':546,'multiline':False]
['text':' 2: t_any','line_number':550,'multiline':False]
['text':' 4: t_void','line_number':554,'multiline':False]
['text':' 6: t_bool','line_number':558,'multiline':False]
['text':' 8: t_null','line_number':562,'multiline':False]
['text':' 10: t_none','line_number':566,'multiline':False]
['text':' 12: t_number','line_number':570,'multiline':False]
['text':' 14: t_number_bool','line_number':574,'multiline':False]
['text':' 16: t_number_float','line_number':578,'multiline':False]
['text':' 18: t_float','line_number':582,'multiline':False]
['text':' 20: t_string','line_number':586,'multiline':False]
['text':' 22: t_blob','line_number':590,'multiline':False]
['text':' 24: t_blob_null','line_number':594,'multiline':False]
['text':' 26: t_job','line_number':598,'multiline':False]
['text':' 28: t_channel','line_number':602,'multiline':False]
['text':' 30: t_number_or_string','line_number':606,'multiline':False]
['text':' 32: t_func_unknown','line_number':610,'multiline':False]
['text':' 34: t_func_void','line_number':614,'multiline':False]
['text':' 36: t_func_any','line_number':618,'multiline':False]
['text':' 38: t_func_number','line_number':622,'multiline':False]
['text':' 40: t_func_string','line_number':626,'multiline':False]
['text':' 42: t_func_bool','line_number':630,'multiline':False]
['text':' 44: t_func_0_void','line_number':634,'multiline':False]
['text':' 46: t_func_0_any','line_number':638,'multiline':False]
['text':' 48: t_func_0_number','line_number':642,'multiline':False]
['text':' 50: t_func_0_string','line_number':646,'multiline':False]
['text':' 52: t_list_any','line_number':650,'multiline':False]
['text':' 54: t_dict_any','line_number':654,'multiline':False]
['text':' 56: t_list_empty','line_number':658,'multiline':False]
['text':' 58: t_dict_empty','line_number':662,'multiline':False]
['text':' 60: t_list_bool','line_number':666,'multiline':False]
['text':' 62: t_list_number','line_number':670,'multiline':False]
['text':' 64: t_list_string','line_number':674,'multiline':False]
['text':' 66: t_list_job','line_number':678,'multiline':False]
['text':' 68: t_list_dict_any','line_number':682,'multiline':False]
['text':' 70: t_list_list_any','line_number':686,'multiline':False]
['text':' 72: t_list_list_string','line_number':690,'multiline':False]
['text':' 74: t_dict_bool','line_number':694,'multiline':False]
['text':' 76: t_dict_number','line_number':698,'multiline':False]
['text':' 78: t_dict_string','line_number':702,'multiline':False]
['text':' 80: t_super (VAR_CLASS with tt_member set to &t_bool','line_number':706,'multiline':False]
['text':' 82: t_object','line_number':710,'multiline':False]
['text':' 84: t_class','line_number':714,'multiline':False]
['text':' FEAT_EVAL','line_number':722,'multiline':False]
['text':' Magic number used for hashitem "hi_key" value indicating a deleted item.','line_number':724,'multiline':False]
['text':' Only the address is used.','line_number':725,'multiline':False]
['text':' term supports scroll region','line_number':729,'multiline':False]
['text':' int value of T_CCO','line_number':730,'multiline':False]
['text':' Flags to indicate an additional string for highlight name completion.','line_number':732,'multiline':False]
['text':' when 1 include "None"','line_number':733,'multiline':False]
['text':' when 1 include "default"','line_number':734,'multiline':False]
['text':' when 2 include "link" and "clear"','line_number':735,'multiline':False]
['text':'
 * When highlight_match is TRUE, highlight a match, starting at the cursor
 * position.  Search_match_lines is the number of lines after the match (0 for
 * a match within one line), search_match_endcol the column number of the
 * character just after the match in the last line.
 ','line_number':737,'multiline':True]
['text':' show search match pos','line_number':743,'multiline':False]
['text':' lines of matched string','line_number':744,'multiline':False]
['text':' col nr of match end','line_number':745,'multiline':False]
['text':' for :{FIRST},{last}s/pat','line_number':747,'multiline':False]
['text':' for :{first},{LAST}s/pat','line_number':748,'multiline':False]
['text':' don't use 'smartcase' once','line_number':751,'multiline':False]
['text':' need to check file','line_number':753,'multiline':False]
['text':' timestamps asap','line_number':754,'multiline':False]
['text':' did check timestamps','line_number':755,'multiline':False]
['text':' recently','line_number':756,'multiline':False]
['text':' Don't check timestamps','line_number':757,'multiline':False]
['text':' Highl. attr for each context.','line_number':759,'multiline':False]
['text':' User[1-9] attributes','line_number':764,'multiline':False]
['text':' On top of user','line_number':766,'multiline':False]
['text':' On top of user','line_number':768,'multiline':False]
['text':' On top of user','line_number':769,'multiline':False]
['text':' When TRUE skip calling terminal_loop() once.  Used when','line_number':774,'multiline':False]
['text':' typing ':' at the more prompt.','line_number':775,'multiline':False]
['text':' "-U" cmdline argument','line_number':779,'multiline':False]
['text':' recognized Terminal.app','line_number':791,'multiline':False]
['text':' Is apply_autocmds() busy?','line_number':794,'multiline':False]
['text':' *Enter autocmds disabled','line_number':795,'multiline':False]
['text':' *Leave autocmds disabled','line_number':796,'multiline':False]
['text':' did ":set modified"','line_number':798,'multiline':False]
['text':' FileType event found','line_number':799,'multiline':False]
['text':' value for did_filetype when','line_number':800,'multiline':False]
['text':' starting to execute','line_number':801,'multiline':False]
['text':' autocommands','line_number':802,'multiline':False]
['text':' Set by the apply_autocmds_group function if the given event is equal to','line_number':804,'multiline':False]
['text':' EVENT_FILETYPE. Used by the readfile function in order to determine if','line_number':805,'multiline':False]
['text':' EVENT_BUFREADPOST triggered the EVENT_FILETYPE.','line_number':806,'multiline':False]
['text':'','line_number':807,'multiline':False]
['text':' Relying on this value requires one to reset it prior calling','line_number':808,'multiline':False]
['text':' apply_autocmds_group.','line_number':809,'multiline':False]
['text':' When deleting the current buffer, another one must be loaded.  If we know','line_number':812,'multiline':False]
['text':' which one is preferred, au_new_curbuf is set to it','line_number':813,'multiline':False]
['text':' When deleting a buffer/window and autocmd_busy is TRUE, do not free the','line_number':816,'multiline':False]
['text':' buffer/window. but link it in the list starting with','line_number':817,'multiline':False]
['text':' au_pending_free_buf/ap_pending_free_win, using b_next/w_next.','line_number':818,'multiline':False]
['text':' Free the buffer/window when autocmd_busy is being set to FALSE.','line_number':819,'multiline':False]
['text':'
 * Mouse coordinates, set by check_termcode()
 ','line_number':823,'multiline':True]
['text':' mouse below last line','line_number':828,'multiline':False]
['text':' mouse right of line','line_number':829,'multiline':False]
['text':' extending Visual area with','line_number':830,'multiline':False]
['text':' mouse dragging','line_number':831,'multiline':False]
['text':'
 * When the DEC mouse has been pressed but not yet released we enable
 * automatic queries for the mouse position.
 ','line_number':833,'multiline':True]
['text':' When the window layout is about to be changed, need_mouse_correct is set,','line_number':841,'multiline':False]
['text':' so that gui_mouse_correct() is called afterwards, to correct the mouse','line_number':842,'multiline':False]
['text':' pointer when focus-follow-mouse is being used.','line_number':843,'multiline':False]
['text':' When double clicking, topline must be the same','line_number':846,'multiline':False]
['text':' dragging the status line','line_number':854,'multiline':False]
['text':' postponed updating the','line_number':855,'multiline':False]
['text':' mouse pointer shape','line_number':856,'multiline':False]
['text':' dragging vert separator','line_number':857,'multiline':False]
['text':' Value set from 'diffopt'.','line_number':862,'multiline':False]
['text':' context for folds','line_number':863,'multiline':False]
['text':' 'foldcolumn' for diff mode','line_number':864,'multiline':False]
['text':' While redrawing the screen this flag is set.  It means the screen size','line_number':868,'multiline':False]
['text':' ('lines' and 'rows') must not be changed and prevents recursive updating.','line_number':869,'multiline':False]
['text':' While computing a statusline and the like we do not want any w_redr_type or','line_number':872,'multiline':False]
['text':' must_redraw to be set.','line_number':873,'multiline':False]
['text':' While closing windows or buffers messages should not be handled to avoid','line_number':877,'multiline':False]
['text':' using invalid windows or buffers.','line_number':878,'multiline':False]
['text':' The root of the menu hierarchy.','line_number':883,'multiline':False]
['text':'
 * While defining the system menu, sys_menu is TRUE.  This avoids
 * overruling of menus that the user already defined.
 ','line_number':885,'multiline':True]
['text':' Menu item just selected, set by check_termcode()','line_number':894,'multiline':False]
['text':' Set to TRUE after adding/removing menus to ensure they are updated','line_number':897,'multiline':False]
['text':' Tab in tab pages line just selected, set by check_termcode()','line_number':901,'multiline':False]
['text':' Menu entry in tab pages line menu just selected, set by check_termcode()','line_number':904,'multiline':False]
['text':' Scrollbar moved and new value, set by check_termcode()','line_number':911,'multiline':False]
['text':' found "-rv" or "-reverse" in command line args','line_number':915,'multiline':False]
['text':' "-fn" or "-font" command line argument','line_number':918,'multiline':False]
['text':' "-bg" or "-background" command line argument','line_number':922,'multiline':False]
['text':' "-fg" or "-foreground" command line argument','line_number':925,'multiline':False]
['text':'
 * While executing external commands or in Ex mode, should not insert GUI
 * events in the input buffer: Set hold_gui_events to non-zero.
 *
 * volatile because it is used in signal handler sig_sysmouse().
 ','line_number':929,'multiline':True]
['text':'
 * When resizing the shell is postponed, remember the new size, and call
 * gui_resize_shell() later.
 ','line_number':937,'multiline':True]
['text':' Window position from ":winpos", to be used when opening the GUI window.','line_number':944,'multiline':False]
['text':' PRIMARY selection in X11','line_number':950,'multiline':False]
['text':' CLIPBOARD selection in X11','line_number':952,'multiline':False]
['text':' there is only one clipboard','line_number':954,'multiline':False]
['text':' above two values or'ed','line_number':960,'multiline':False]
['text':'
 * All regular windows are linked in a list. "firstwin" points to the first
 * entry, "lastwin" to the last entry (can be the same as firstwin) and
 * "curwin" to the currently active window.
 * When switching tabs these swapped with the pointers in "tabpage_T".
 ','line_number':970,'multiline':True]
['text':' first window','line_number':976,'multiline':False]
['text':' last window','line_number':977,'multiline':False]
['text':' previous window','line_number':978,'multiline':False]
['text':' currently active window','line_number':982,'multiline':False]
['text':' When executing autocommands for a buffer that is not in any window, a','line_number':984,'multiline':False]
['text':' special window is created to handle the side effects.  When autocommands','line_number':985,'multiline':False]
['text':' nest we may need more than one.  Allow for up to five, if more are needed','line_number':986,'multiline':False]
['text':' something crazy is happening.','line_number':987,'multiline':False]
['text':' Window used in aucmd_prepbuf().  When not NULL the','line_number':991,'multiline':False]
['text':' window has been allocated.','line_number':992,'multiline':False]
['text':' This auc_win is being used.','line_number':993,'multiline':False]
['text':' first global popup window','line_number':999,'multiline':False]
['text':' popup window being dragged','line_number':1000,'multiline':False]
['text':' Set to TRUE if there is any visible popup window.','line_number':1002,'multiline':False]
['text':' Set to TRUE if a visible popup window may use a MOUSE_MOVE event','line_number':1005,'multiline':False]
['text':' when TRUE computing the cursor position ignores text properties.','line_number':1010,'multiline':False]
['text':' When set the popup menu will redraw soon using the pum_win_ values. Do not','line_number':1014,'multiline':False]
['text':' draw over the poup menu area to avoid flicker.','line_number':1015,'multiline':False]
['text':'
 * The window layout is kept in a tree of frames.  topframe points to the top
 * of the tree.
 ','line_number':1018,'multiline':True]
['text':' top of the window frame tree','line_number':1022,'multiline':False]
['text':'
 * Tab pages are alternative topframes.  "first_tabpage" points to the first
 * one in the list, "curtab" is the current one. "lastused_tabpage" is the
 * last used one.
 ','line_number':1024,'multiline':True]
['text':' need to redraw tabline','line_number':1032,'multiline':False]
['text':'
 * All buffers are linked in a list. 'firstbuf' points to the first entry,
 * 'lastbuf' to the last entry and 'curbuf' to the currently active buffer.
 ','line_number':1034,'multiline':True]
['text':' first buffer','line_number':1038,'multiline':False]
['text':' last buffer','line_number':1039,'multiline':False]
['text':' currently active buffer','line_number':1040,'multiline':False]
['text':' Flag that is set when switching off 'swapfile'.  It means that all blocks','line_number':1042,'multiline':False]
['text':' are to be loaded into memory.  Shouldn't be global...','line_number':1043,'multiline':False]
['text':' don't release blocks','line_number':1044,'multiline':False]
['text':'
 * List of files being edited (global argument list).  curwin->w_alist points
 * to this when the window is using the global argument list.
 ','line_number':1046,'multiline':True]
['text':' global argument list','line_number':1050,'multiline':False]
['text':' the previous argument list id','line_number':1051,'multiline':False]
['text':' accessed last file in','line_number':1052,'multiline':False]
['text':' global_alist','line_number':1053,'multiline':False]
['text':' column for ruler','line_number':1055,'multiline':False]
['text':' 'rulerfmt' width of ruler when non-zero','line_number':1057,'multiline':False]
['text':' column for shown command','line_number':1059,'multiline':False]
['text':' File descriptor of temp dir','line_number':1064,'multiline':False]
['text':' Name of Vim's own temp dir.','line_number':1066,'multiline':False]
['text':' Ends in a slash.','line_number':1067,'multiline':False]
['text':'
 * When starting or exiting some things are done differently (e.g. screen
 * updating).
 ','line_number':1070,'multiline':True]
['text':' first NO_SCREEN, then NO_BUFFERS and then','line_number':1075,'multiline':False]
['text':' set to 0 when starting up finished','line_number':1076,'multiline':False]
['text':' TRUE when planning to exit Vim.  Might','line_number':1078,'multiline':False]
['text':' still keep on running if there is a changed','line_number':1079,'multiline':False]
['text':' buffer.','line_number':1080,'multiline':False]
['text':' TRUE when we are sure to exit, e.g., after','line_number':1082,'multiline':False]
['text':' a deadly signal','line_number':1083,'multiline':False]
['text':' internal value of v:dying','line_number':1084,'multiline':False]
['text':' is stdout a terminal?','line_number':1085,'multiline':False]
['text':' TRUE when in or after free_all_mem()','line_number':1093,'multiline':False]
['text':' volatile because it is used in signal handler deathtrap().','line_number':1095,'multiline':False]
['text':' TRUE when doing full-screen output','line_number':1097,'multiline':False]
['text':' otherwise only writing some messages','line_number':1098,'multiline':False]
['text':' TRUE when started as "rvim"','line_number':1101,'multiline':False]
['text':' non-zero when only "safe" commands are','line_number':1103,'multiline':False]
['text':' allowed, e.g. when sourcing .exrc or .vimrc','line_number':1104,'multiline':False]
['text':' in current directory','line_number':1105,'multiline':False]
['text':' non-zero when changing text and jumping to','line_number':1108,'multiline':False]
['text':' another window or editing another buffer is','line_number':1109,'multiline':False]
['text':' not allowed','line_number':1110,'multiline':False]
['text':' non-zero when the current buffer can't be','line_number':1113,'multiline':False]
['text':' changed.  Used for FileChangedRO.','line_number':1114,'multiline':False]
['text':' non-zero when no buffer name can be','line_number':1116,'multiline':False]
['text':' changed, no buffer can be deleted and','line_number':1117,'multiline':False]
['text':' current directory can't be changed.','line_number':1118,'multiline':False]
['text':' Used for SwapExists et al.','line_number':1119,'multiline':False]
['text':' Non-zero when evaluating an expression in a','line_number':1122,'multiline':False]
['text':' "sandbox".  Several things are not allowed','line_number':1123,'multiline':False]
['text':' then.','line_number':1124,'multiline':False]
['text':' set to TRUE when "-s" commandline argument','line_number':1128,'multiline':False]
['text':' used for ex','line_number':1129,'multiline':False]
['text':' start position of active Visual selection','line_number':1131,'multiline':False]
['text':' whether Visual mode is active','line_number':1133,'multiline':False]
['text':' whether Select mode is active','line_number':1135,'multiline':False]
['text':' register name for Select mode','line_number':1137,'multiline':False]
['text':' restart Select mode when next cmd finished','line_number':1139,'multiline':False]
['text':' whether to restart the selection after a','line_number':1141,'multiline':False]
['text':' Select mode mapping or menu','line_number':1142,'multiline':False]
['text':' type of Visual mode','line_number':1145,'multiline':False]
['text':' TRUE when redoing Visual','line_number':1148,'multiline':False]
['text':'
 * The Visual area is remembered for reselection.
 ','line_number':1150,'multiline':True]
['text':' 'v', 'V', or Ctrl-V','line_number':1153,'multiline':False]
['text':' number of lines','line_number':1154,'multiline':False]
['text':' nr of cols or end col','line_number':1155,'multiline':False]
['text':'
 * When pasting text with the middle mouse button in visual mode with
 * restart_edit set, remember where it started so we can set Insstart.
 ','line_number':1157,'multiline':True]
['text':'
 * This flag is used to make auto-indent work right on lines where only a
 * <RETURN> or <ESC> is typed. It is set when an auto-indent is done, and
 * reset when any other editing is done on the line. If an <ESC> or <RETURN>
 * is received, and did_ai is TRUE, the line is truncated.
 ','line_number':1163,'multiline':True]
['text':'
 * Column of first char after autoindent.  0 when no autoindent done.  Used
 * when 'backspace' is 0, to avoid backspacing over autoindent.
 ','line_number':1171,'multiline':True]
['text':'
 * This is a character which will end a start-middle-end comment when typed as
 * the first character on a new line.  It is taken from the last character of
 * the "end" comment leader when the COM_AUTO_END flag is given for that
 * comment end in 'comments'.  It is only valid when did_ai is TRUE.
 ','line_number':1177,'multiline':True]
['text':'
 * This flag is set after a ":syncbind" to let the check_scrollbind() function
 * know that it should not attempt to perform scrollbinding due to the scroll
 * that was a result of the ":syncbind." (Otherwise, check_scrollbind() will
 * undo some of the work done by ":syncbind.")  -ralston
 ','line_number':1185,'multiline':True]
['text':'
 * This flag is set when a smart indent has been performed. When the next typed
 * character is a '{' the inserted tab will be deleted again.
 ','line_number':1193,'multiline':True]
['text':'
 * This flag is set after an auto indent. If the next typed character is a '}'
 * one indent will be removed.
 ','line_number':1199,'multiline':True]
['text':'
 * This flag is set after an "O" command. If the next typed character is a '{'
 * one indent will be removed.
 ','line_number':1205,'multiline':True]
['text':' for ^^D command in insert mode','line_number':1211,'multiline':False]
['text':' w_cursor before formatting text.','line_number':1213,'multiline':False]
['text':'
 * Stuff for insert mode.
 ','line_number':1219,'multiline':True]
['text':' This is where the latest','line_number':1222,'multiline':False]
['text':' insert/append mode started.','line_number':1223,'multiline':False]
['text':' This is where the latest insert/append mode started. In contrast to','line_number':1225,'multiline':False]
['text':' Insstart, this won't be reset by certain keys and is needed for','line_number':1226,'multiline':False]
['text':' op_insert(), to detect correctly where inserting by the user started.','line_number':1227,'multiline':False]
['text':'
 * Stuff for MODE_VREPLACE state.
 ','line_number':1230,'multiline':True]
['text':' Line count when "gR" started','line_number':1233,'multiline':False]
['text':' #Lines changed by "gR" so far','line_number':1234,'multiline':False]
['text':' argument to SETJMP() for handling X IO errors','line_number':1237,'multiline':False]
['text':'
 * These flags are set based upon 'fileencoding'.
 * Note that "enc_utf8" is also set for "unicode", because the characters are
 * internally stored as UTF-8 (to avoid trouble with NUL bytes).
 ','line_number':1241,'multiline':True]
['text':' japan','line_number':1246,'multiline':False]
['text':' euc-jp','line_number':1247,'multiline':False]
['text':' korea','line_number':1248,'multiline':False]
['text':' euc-kr','line_number':1249,'multiline':False]
['text':' chinese','line_number':1250,'multiline':False]
['text':' euc-cn','line_number':1251,'multiline':False]
['text':' taiwan','line_number':1252,'multiline':False]
['text':' euc-tw','line_number':1253,'multiline':False]
['text':' 2byte-','line_number':1254,'multiline':False]
['text':' One of DBCS_xxx values if','line_number':1257,'multiline':False]
['text':' DBCS encoding','line_number':1258,'multiline':False]
['text':' 2: UCS-2 or UTF-16, 4: UCS-4','line_number':1259,'multiline':False]
['text':' UTF-8 encoded Unicode','line_number':1260,'multiline':False]
['text':' 'encoding' is latin1 comp.','line_number':1261,'multiline':False]
['text':' Codepage nr of 'encoding'.  Negative means it's not been set yet, zero','line_number':1263,'multiline':False]
['text':' means 'encoding' is not a valid codepage.','line_number':1264,'multiline':False]
['text':' 'encoding' is latin9','line_number':1266,'multiline':False]
['text':' any multi-byte encoding','line_number':1268,'multiline':False]
['text':'
 * To speed up BYTELEN() we fill a table with the byte lengths whenever
 * enc_utf8 or enc_dbcs changes.
 ','line_number':1270,'multiline':True]
['text':' Variables that tell what conversion is used for keyboard input and display','line_number':1276,'multiline':False]
['text':' output.','line_number':1277,'multiline':False]
['text':' type of input conversion','line_number':1278,'multiline':False]
['text':' type of output conversion','line_number':1279,'multiline':False]
['text':'
 * Function pointers, used to quickly get to the right function.  Each has
 * three possible values: latin_ (8-bit), utfc_ or utf_ (utf-8) and dbcs_
 * (DBCS).
 * The value is set in mb_init();
 ','line_number':1281,'multiline':True]
['text':' Length of char in bytes, including any following composing chars.','line_number':1287,'multiline':False]
['text':' NUL has length zero.','line_number':1288,'multiline':False]
['text':' idem, with limit on string length','line_number':1291,'multiline':False]
['text':' byte length of char','line_number':1294,'multiline':False]
['text':' Convert char "c" to bytes in "buf", return the length.  "buf" must have room','line_number':1297,'multiline':False]
['text':' for at least 6 bytes.','line_number':1298,'multiline':False]
['text':' Byte offset from "p" to the start of a character, including any composing','line_number':1307,'multiline':False]
['text':' characters. "base" must be the start of the string, which must be NUL','line_number':1308,'multiline':False]
['text':' terminated.','line_number':1309,'multiline':False]
['text':' Pointers to functions and variables to be loaded at runtime','line_number':1313,'multiline':False]
['text':'
 * Start and end column of the preedit area in virtual columns from the start
 * of the text line.  When there is no preedit area they are set to MAXCOL.
 * "preedit_end_col" is needed for coloring the preedited string.  Drawing the
 * color between "preedit_start_col" and curpos did not work, because some XIM
 * set the cursor position to the first char of the string.
 ','line_number':1325,'multiline':True]
['text':' "xim_changed_while_preediting" is set when changed() can set the 'modified'','line_number':1335,'multiline':False]
['text':' flag even while preediting.','line_number':1336,'multiline':False]
['text':'
 * "State" is the main state of Vim.
 * There are other variables that modify the state:
 * "Visual_mode"    When State is MODE_NORMAL or MODE_INSERT.
 * "finish_op"	    When State is MODE_NORMAL, after typing the operator and
 *		    before typing the motion command.
 * "motion_force"   Last motion_force  from do_pending_operator()
 * "debug_mode"	    Debug mode.
 ','line_number':1347,'multiline':True]
['text':' TRUE while an operator is pending','line_number':1362,'multiline':False]
['text':' count for pending operator','line_number':1363,'multiline':False]
['text':' motion force for pending operator','line_number':1364,'multiline':False]
['text':'
 * Ex mode (Q) state
 ','line_number':1366,'multiline':True]
['text':' zero, EXMODE_NORMAL or EXMODE_VIM','line_number':1369,'multiline':False]
['text':' Flag set when main_loop() should exit when entering Ex mode.','line_number':1371,'multiline':False]
['text':' no need to print after z or p','line_number':1374,'multiline':False]
['text':' register for recording  or zero','line_number':1376,'multiline':False]
['text':' register being executed or zero','line_number':1377,'multiline':False]
['text':' Flag set when peeking a character and found the end of executed register','line_number':1378,'multiline':False]
['text':' Set when a modifyOtherKeys sequence was seen, then simplified mappings will','line_number':1381,'multiline':False]
['text':' no longer be used.  To be combined with modify_otherkeys_state.','line_number':1382,'multiline':False]
['text':' The state for the modifyOtherKeys level','line_number':1385,'multiline':False]
['text':' Initially we have no clue if the protocol is on or off.','line_number':1387,'multiline':False]
['text':' Used when receiving the state and the level is not two.','line_number':1389,'multiline':False]
['text':' Used when receiving the state and the level is two.','line_number':1391,'multiline':False]
['text':' Used after outputting t_TE when the state was MOKS_ENABLED.  We do not','line_number':1393,'multiline':False]
['text':' really know if t_TE actually disabled the protocol, the following t_TI','line_number':1394,'multiline':False]
['text':' is expected to request the state, but the response may come only later.','line_number':1395,'multiline':False]
['text':' Used after outputting t_TE when the state was not MOKS_ENABLED.','line_number':1397,'multiline':False]
['text':' Set when a response to XTQMODKEYS was received.  Only works for xterm','line_number':1401,'multiline':False]
['text':' version 377 and later.','line_number':1402,'multiline':False]
['text':' The state for the Kitty keyboard protocol.','line_number':1405,'multiline':False]
['text':' Initially we have no clue if the protocol is on or off.','line_number':1407,'multiline':False]
['text':' Used when receiving the state and the flags are zero.','line_number':1409,'multiline':False]
['text':' Used when receiving the state and the flags are non-zero.','line_number':1411,'multiline':False]
['text':' Used after outputting t_TE when the state was KKPS_ENABLED.  We do not','line_number':1413,'multiline':False]
['text':' really know if t_TE actually disabled the protocol, the following t_TI','line_number':1414,'multiline':False]
['text':' is expected to request the state, but the response may come only later.','line_number':1415,'multiline':False]
['text':' Used after outputting t_TE when the state was not KKPS_ENABLED.','line_number':1417,'multiline':False]
['text':' currently no mapping allowed','line_number':1423,'multiline':False]
['text':' mapping zero not allowed','line_number':1424,'multiline':False]
['text':' allow key codes when no_mapping','line_number':1425,'multiline':False]
['text':' is set','line_number':1426,'multiline':False]
['text':' do not apply Ctrl, Shift and Alt','line_number':1427,'multiline':False]
['text':' to the key','line_number':1428,'multiline':False]
['text':' Don't call u_sync()','line_number':1429,'multiline':False]
['text':' Call u_sync() once when evaluating','line_number':1431,'multiline':False]
['text':' an expression.','line_number':1432,'multiline':False]
['text':' call edit when next cmd finished','line_number':1435,'multiline':False]
['text':' Normally FALSE, set to TRUE after','line_number':1436,'multiline':False]
['text':' hitting cursor key in insert mode.','line_number':1437,'multiline':False]
['text':' Used by vgetorpeek() to decide when','line_number':1438,'multiline':False]
['text':' to call u_sync()','line_number':1439,'multiline':False]
['text':' put cursor after eol when','line_number':1440,'multiline':False]
['text':' restarting edit after CTRL-O','line_number':1441,'multiline':False]
['text':' TRUE when no abbreviations loaded','line_number':1443,'multiline':False]
['text':' the name of the executable','line_number':1446,'multiline':False]
['text':' don't use scrollbars when TRUE','line_number':1450,'multiline':False]
['text':' modes where CTRL-C is mapped','line_number':1452,'multiline':False]
['text':' CTRL-C sets got_int','line_number':1453,'multiline':False]
['text':' Ex command modifiers','line_number':1455,'multiline':False]
['text':' used by :execute','line_number':1456,'multiline':False]
['text':' :export {cmd}','line_number':1459,'multiline':False]
['text':' don't print messages','line_number':1462,'multiline':False]
['text':' don't print error messages','line_number':1463,'multiline':False]
['text':' value of emsg_silent when a :def','line_number':1465,'multiline':False]
['text':' function is called','line_number':1466,'multiline':False]
['text':' don't redirect error messages','line_number':1468,'multiline':False]
['text':' don't echo the command line','line_number':1469,'multiline':False]
['text':' assert_fails() active','line_number':1471,'multiline':False]
['text':' For dialog when swap file already','line_number':1474,'multiline':False]
['text':' exists.','line_number':1475,'multiline':False]
['text':' Selected "quit" at the dialog.','line_number':1477,'multiline':False]
['text':' sprintf's are done in this buffer,','line_number':1479,'multiline':False]
['text':' size is IOSIZE','line_number':1480,'multiline':False]
['text':' file names are expanded in this','line_number':1481,'multiline':False]
['text':' buffer, size is MAXPATHL','line_number':1482,'multiline':False]
['text':' small buffer for messages','line_number':1483,'multiline':False]
['text':' When non-zero, postpone redrawing.','line_number':1485,'multiline':False]
['text':' Set to TRUE for "view"','line_number':1488,'multiline':False]
['text':' Set to TRUE for "-r" option','line_number':1489,'multiline':False]
['text':' typeahead buffer','line_number':1491,'multiline':False]
['text':' Flag used to indicate that vgetorpeek() returned a char like Esc when the','line_number':1496,'multiline':False]
['text':' :normal argument was exhausted.','line_number':1497,'multiline':False]
['text':' recursiveness of ex_normal()','line_number':1500,'multiline':False]
['text':' ex_normal_busy set in feedkeys()','line_number':1502,'multiline':False]
['text':' forbid use of ex_normal()','line_number':1504,'multiline':False]
['text':' ignore script input','line_number':1507,'multiline':False]
['text':' for ":stopinsert" and 'insertmode'','line_number':1509,'multiline':False]
['text':' TRUE if user typed current char','line_number':1511,'multiline':False]
['text':' TRUE if current char from stuffbuf','line_number':1512,'multiline':False]
['text':' Input Method was active for last','line_number':1514,'multiline':False]
['text':' character obtained from vgetc()','line_number':1515,'multiline':False]
['text':' tick for each non-mapped char','line_number':1517,'multiline':False]
['text':' type of redraw necessary','line_number':1519,'multiline':False]
['text':' skip redraw once','line_number':1520,'multiline':False]
['text':' extra redraw once','line_number':1521,'multiline':False]
['text':' need to call diff_redraw()','line_number':1523,'multiline':False]
['text':' flag set when 'redrawtime' timeout has been set','line_number':1526,'multiline':False]
['text':' streams to read script from','line_number':1533,'multiline':False]
['text':' index in scriptin[]','line_number':1534,'multiline':False]
['text':' stream to write script to','line_number':1535,'multiline':False]
['text':' fd to read commands from','line_number':1536,'multiline':False]
['text':' Set to TRUE when an interrupt signal occurred.','line_number':1538,'multiline':False]
['text':' Volatile because it is used in signal handler catch_sigint().','line_number':1539,'multiline':False]
['text':' Set to TRUE when SIGUSR1 signal was detected.','line_number':1542,'multiline':False]
['text':' Volatile because it is used in signal handler catch_sigint().','line_number':1543,'multiline':False]
['text':' set to TRUE when console used','line_number':1547,'multiline':False]
['text':' set by starttermcap()','line_number':1549,'multiline':False]
['text':' input terminal mode','line_number':1550,'multiline':False]
['text':' set to TRUE with ! command','line_number':1551,'multiline':False]
['text':' length of previous search cmd','line_number':1552,'multiline':False]
['text':' Used when compiling regexp:','line_number':1554,'multiline':False]
['text':' REX_SET to allow \z\(...\),','line_number':1555,'multiline':False]
['text':' REX_USE to allow \z\1 et al.','line_number':1556,'multiline':False]
['text':' Used by vim_regexec():','line_number':1557,'multiline':False]
['text':' strings for \z\1...\z\9','line_number':1558,'multiline':False]
['text':' Set by vim_regexec()','line_number':1559,'multiline':False]
['text':' to store \z\(...\) matches','line_number':1560,'multiline':False]
['text':' set after out of memory msg','line_number':1564,'multiline':False]
['text':' set after swap write error msg','line_number':1566,'multiline':False]
['text':' undo switched off for now','line_number':1567,'multiline':False]
['text':' set when :global is executing','line_number':1568,'multiline':False]
['text':' set when :argdo, :windo or','line_number':1569,'multiline':False]
['text':' :bufdo is executing','line_number':1570,'multiline':False]
['text':' start insert mode soon','line_number':1572,'multiline':False]
['text':' for ModeChanged event','line_number':1574,'multiline':False]
['text':' last command line (for ":)','line_number':1576,'multiline':False]
['text':' command line for "."','line_number':1577,'multiline':False]
['text':' new value for last_cmdline','line_number':1578,'multiline':False]
['text':'','line_number':1579,'multiline':False]
['text':' fname for <afile> on cmdline','line_number':1580,'multiline':False]
['text':' autocmd_fname is full path','line_number':1581,'multiline':False]
['text':' fnum for <abuf> on cmdline','line_number':1582,'multiline':False]
['text':' name for <amatch> on cmdline','line_number':1583,'multiline':False]
['text':' set when CursorHold t'gerd','line_number':1586,'multiline':False]
['text':' for CursorMoved event','line_number':1587,'multiline':False]
['text':' for CTRL-W CTRL-] command','line_number':1593,'multiline':False]
['text':' args for win_split()','line_number':1594,'multiline':False]
['text':' cmdmod.cmod_tab','line_number':1595,'multiline':False]
['text':' for tag preview commands:','line_number':1597,'multiline':False]
['text':' height of preview window','line_number':1598,'multiline':False]
['text':' whether the tag command comes','line_number':1600,'multiline':False]
['text':' from the command line (0) or was','line_number':1601,'multiline':False]
['text':' invoked as a normal command (1)','line_number':1602,'multiline':False]
['text':' offset for replace_push()','line_number':1604,'multiline':False]
['text':' need backslash in cmd line','line_number':1607,'multiline':False]
['text':' doing :ta from help file','line_number':1609,'multiline':False]
['text':'
 * When a string option is NULL (which only happens in out-of-memory
 * situations), it is set to empty_option, to avoid having to check for NULL
 * everywhere.
 ','line_number':1611,'multiline':True]
['text':' no redirection for a moment','line_number':1618,'multiline':False]
['text':' message redirection file','line_number':1619,'multiline':False]
['text':' message redirection register','line_number':1621,'multiline':False]
['text':' message redirection variable','line_number':1622,'multiline':False]
['text':' execute() redirection','line_number':1623,'multiline':False]
['text':' mapping for language keys','line_number':1627,'multiline':False]
['text':' Save 'laststatus' setting','line_number':1630,'multiline':False]
['text':' Save 'winminheight' setting','line_number':1631,'multiline':False]
['text':' wildmenu showing','line_number':1633,'multiline':False]
['text':' wildmenu showing with scroll','line_number':1634,'multiline':False]
['text':' table for toupper()','line_number':1637,'multiline':False]
['text':' table for tolower()','line_number':1638,'multiline':False]
['text':' which characters are in 'breakat'','line_number':1643,'multiline':False]
['text':' These are in version.c, call init_longVersion() before use.','line_number':1646,'multiline':False]
['text':'
 * Some file names are stored in pathdef.c, which is generated from the
 * Makefile to make their value depend on the Makefile.
 ','line_number':1654,'multiline':True]
['text':' When a window has a local directory, the absolute path of the global','line_number':1673,'multiline':False]
['text':' current directory is stored here (in allocated memory).  If the current','line_number':1674,'multiline':False]
['text':' directory is not a local directory, globaldir is NULL.','line_number':1675,'multiline':False]
['text':' Whether 'keymodel' contains "stopsel" and "startsel".','line_number':1682,'multiline':False]
['text':' type of cmdline window or 0','line_number':1686,'multiline':False]
['text':' result of cmdline window or 0','line_number':1687,'multiline':False]
['text':'
 * When ":global" is used to number of substitutions and changed lines is
 * accumulated until it's finished.
 * Also used for ":spellrepall".
 ','line_number':1704,'multiline':True]
['text':' total number of substitutions','line_number':1709,'multiline':False]
['text':' total number of lines changed','line_number':1710,'multiline':False]
['text':' Used when a compiled :substitute has an expression.','line_number':1713,'multiline':False]
['text':' table to store parsed 'wildmode'','line_number':1717,'multiline':False]
['text':' whether titlestring and iconstring contains statusline syntax','line_number':1721,'multiline':False]
['text':' the table is in misc2.c, because of initializations','line_number':1737,'multiline':False]
['text':'
 * Printer stuff shared between hardcopy.c and machine-specific printing code.
 ','line_number':1742,'multiline':True]
['text':' For prt_get_unit().','line_number':1783,'multiline':False]
['text':' Page number used for %N in 'pageheader' and 'guitablabel'.','line_number':1794,'multiline':False]
['text':' xterm display name','line_number':1799,'multiline':False]
['text':' whether xterm_display was allocated, when FALSE it points into argv[]','line_number':1802,'multiline':False]
['text':' xterm display pointer','line_number':1805,'multiline':False]
['text':' --echo-wid argument','line_number':1814,'multiline':False]
['text':'
 * The value of the --windowid argument.
 * For embedding gvim inside another application.
 ','line_number':1818,'multiline':True]
['text':' received text from client','line_number':1826,'multiline':False]
['text':' or from feedkeys()','line_number':1827,'multiline':False]
['text':' name of the server','line_number':1831,'multiline':False]
['text':' xterm-like 'term'','line_number':1846,'multiline':False]
['text':' normal path separator character','line_number':1850,'multiline':False]
['text':' abnormal path separator character','line_number':1851,'multiline':False]
['text':' normal path separator string','line_number':1852,'multiline':False]
['text':' Set to TRUE when an operator is being executed with virtual editing, MAYBE','line_number':1856,'multiline':False]
['text':' when no operator is being executed, FALSE otherwise.','line_number':1857,'multiline':False]
['text':' Display tick, incremented for each call to update_screen()','line_number':1861,'multiline':False]
['text':' Line in which spell checking wasn't highlighted because it touched the','line_number':1866,'multiline':False]
['text':' cursor position in Insert mode.','line_number':1867,'multiline':False]
['text':' Set when the cursor line needs to be redrawn.','line_number':1872,'multiline':False]
['text':' Grow array to collect error messages in until they can be displayed.','line_number':1877,'multiline':False]
['text':' the -nb[:host:port:passwd] arg','line_number':1886,'multiline':False]
['text':' send buffer changes if != 0','line_number':1887,'multiline':False]
['text':' don't write modified files','line_number':1888,'multiline':False]
['text':' OK to read from disk if != 0','line_number':1889,'multiline':False]
['text':' skip "No lines in buffer"','line_number':1890,'multiline':False]
['text':'
 * Some messages that can be shared are included here.
 ','line_number':1893,'multiline':True]
['text':'
 * Comms. with the session manager (XSMP)
 ','line_number':1905,'multiline':True]
['text':' The actual connection','line_number':1909,'multiline':False]
['text':' where to write startup timing','line_number':1913,'multiline':False]
['text':'
 * Some compilers warn for not using a return value, but in some situations we
 * can't do anything useful with the value.  Assign to this variable to avoid
 * the warning.
 ','line_number':1916,'multiline':True]
['text':' set by alloc_fail(): ID','line_number':1925,'multiline':False]
['text':' set by alloc_fail(), when zero alloc() returns NULL','line_number':1927,'multiline':False]
['text':' set by alloc_fail(), number of times alloc() returns NULL','line_number':1929,'multiline':False]
['text':' flags set by test_override()','line_number':1932,'multiline':False]
['text':' when timer is inside vgetc() then > 0','line_number':1951,'multiline':False]
['text':' when inside get_user_input() then > 0','line_number':1954,'multiline':False]
['text':' attributes used for ":echo"','line_number':1967,'multiline':False]
['text':' Abort conversion to string after a recursion error.','line_number':1969,'multiline':False]
['text':' Used for checking if local variables or arguments used in a lambda.','line_number':1972,'multiline':False]
['text':' Only filled for Win32.','line_number':1975,'multiline':False]
['text':' Used for lv_first in a non-materialized range() list.','line_number':1978,'multiline':False]
['text':' Passed to an eval() function to enable evaluation.','line_number':1981,'multiline':False]
['text':' Whether a redraw is needed for appending a line to a buffer.','line_number':2006,'multiline':False]
['text':' This flag is set when outputting a terminal control code and reset in','line_number':2011,'multiline':False]
['text':' out_flush() when characters have been written.','line_number':2012,'multiline':False]
['text':' While executing a regexp and set to OPTION_MAGIC_ON or OPTION_MAGIC_OFF this','line_number':2020,'multiline':False]
['text':' overrules p_magic.  Otherwise set to OPTION_MAGIC_NOT_SET.','line_number':2021,'multiline':False]
['text':' Skip win_fix_cursor() call for 'splitkeep' when cmdwin is closed.','line_number':2024,'multiline':False]
['text':' Skip win_fix_scroll() call for 'splitkeep' when closing tab page.','line_number':2026,'multiline':False]
['text':' Skip update_topline() call while executing win_fix_scroll().','line_number':2028,'multiline':False]
['text':' 'showcmd' buffer shared between normal.c and statusline code','line_number':2031,'multiline':False]
