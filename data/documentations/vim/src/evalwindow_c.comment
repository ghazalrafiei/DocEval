['text':' vi:set ts=8 sts=4 sw=4 noet:
 *
 * VIM - Vi IMproved	by Bram Moolenaar
 *
 * Do ":help uganda"  in Vim to read copying and usage conditions.
 * Do ":help credits" in Vim to see a list of people who contributed.
 * See README.txt for an overview of the Vim source code.
 ','line_number':1,'multiline':True]
['text':'
 * evalwindow.c: Window related builtin functions
 ','line_number':10,'multiline':True]
['text':'
 * Return the window pointer of window "id".
 ','line_number':81,'multiline':True]
['text':'
 * Return the window and tab pointer of window "id".
 * Returns NULL when not found.
 ','line_number':90,'multiline':True]
['text':' popup windows are in separate lists','line_number':108,'multiline':False]
['text':' any tabpage would do','line_number':121,'multiline':False]
['text':'
 * Find window specified by "vp" in tabpage "tp".
 * Returns current window if "vp" is number zero.
 * Returns NULL if not found.
 ','line_number':157,'multiline':True]
['text':' NULL for current tab page','line_number':165,'multiline':False]
['text':' check tab-local popup windows','line_number':188,'multiline':False]
['text':' check global popup windows','line_number':193,'multiline':False]
['text':'
 * Find a window: When using a Window ID in any tab page, when using a number
 * in the current tab page.
 * Returns NULL when not found.
 ','line_number':203,'multiline':True]
['text':'
 * Find window specified by "wvp" in tabpage "tvp".
 * Returns the tab page in 'ptp'
 ','line_number':218,'multiline':True]
['text':' VAR_UNKNOWN for current window','line_number':224,'multiline':False]
['text':' VAR_UNKNOWN for current tab page','line_number':225,'multiline':False]
['text':' A window with the specified number is not found','line_number':248,'multiline':False]
['text':'
 * Get the layout of the given tab page for winlayout() and add it to "l".
 ','line_number':264,'multiline':True]
['text':' outermost call from f_winlayout()','line_number':278,'multiline':False]
['text':'
 * Common code for tabpagewinnr() and winnr().
 ','line_number':323,'multiline':True]
['text':' type error; errmsg already given','line_number':341,'multiline':False]
['text':' Extract the window count (if specified). e.g. winnr('3j')','line_number':353,'multiline':False]
['text':' if count is not specified, default to 1','line_number':356,'multiline':False]
['text':' didn't find it in this tabpage','line_number':391,'multiline':False]
['text':'
 * Returns information about a window as a dictionary.
 ','line_number':400,'multiline':True]
['text':' make sure w_botline is valid','line_number':412,'multiline':False]
['text':' Add a reference to window variables','line_number':439,'multiline':False]
['text':'
 * Returns information (variables, options, etc.) about a tab page
 * as a dictionary.
 ','line_number':445,'multiline':True]
['text':' Make a reference to tabpage variables','line_number':470,'multiline':False]
['text':'
 * "gettabinfo()" function
 ','line_number':476,'multiline':True]
['text':' Information about one tab page','line_number':494,'multiline':False]
['text':' Get information about a specific tab page or all tab pages','line_number':500,'multiline':False]
['text':'
 * "getwininfo()" function
 ','line_number':514,'multiline':True]
['text':' Collect information about either all the windows across all the tab','line_number':538,'multiline':False]
['text':' pages or one particular window.','line_number':539,'multiline':False]
['text':' found information about a specific window','line_number':553,'multiline':False]
['text':'
 * "getwinpos({timeout})" function
 ','line_number':575,'multiline':True]
['text':'
 * "getwinposx()" function
 ','line_number':607,'multiline':True]
['text':'
 * "getwinposy()" function
 ','line_number':627,'multiline':True]
['text':'
 * "tabpagenr()" function
 ','line_number':646,'multiline':True]
['text':'
 * "tabpagewinnr()" function
 ','line_number':678,'multiline':True]
['text':'
 * "win_execute()" function
 ','line_number':700,'multiline':True]
['text':' Return an empty string if something fails.','line_number':711,'multiline':False]
['text':' Getting and setting directory can be slow on some systems, only do','line_number':734,'multiline':False]
['text':' this when the current or target window/tab have a local directory or','line_number':735,'multiline':False]
['text':' 'acd' is set.','line_number':736,'multiline':False]
['text':' If 'acd' is set, check we are using that directory.  If yes, then','line_number':750,'multiline':False]
['text':' apply 'acd' afterwards, otherwise restore the current directory.','line_number':751,'multiline':False]
['text':' Update the status line if the cursor moved.','line_number':774,'multiline':False]
['text':' In case the command moved the cursor or changed the Visual area,','line_number':778,'multiline':False]
['text':' check it is valid.','line_number':779,'multiline':False]
['text':'
 * "win_findbuf()" function
 ','line_number':785,'multiline':True]
['text':'
 * "win_getid()" function
 ','line_number':798,'multiline':True]
['text':'
 * "win_gotoid()" function
 ','line_number':813,'multiline':True]
['text':' When jumping to another buffer stop Visual mode.','line_number':842,'multiline':False]
['text':'
 * "win_id2tabwin()" function
 ','line_number':851,'multiline':True]
['text':'
 * "win_id2win()" function
 ','line_number':864,'multiline':True]
['text':'
 * "win_move_separator()" function
 ','line_number':876,'multiline':True]
['text':'
 * "win_move_statusline()" function
 ','line_number':906,'multiline':True]
['text':'
 * "win_screenpos()" function
 ','line_number':936,'multiline':True]
['text':'
 * Move the window wp into a new split of targetwin in a given direction
 ','line_number':955,'multiline':True]
['text':' Jump to the target window','line_number':968,'multiline':False]
['text':' Remove the old window and frame from the tree of frames','line_number':972,'multiline':False]
['text':' may need to remove last status line','line_number':975,'multiline':False]
['text':' recompute window positions','line_number':976,'multiline':False]
['text':' Split a window on the desired side and put the old window there','line_number':978,'multiline':False]
['text':' If splitting horizontally, try to preserve height','line_number':981,'multiline':False]
['text':' When 'guioptions' includes 'L' or 'R' may have to remove or add','line_number':990,'multiline':False]
['text':' scrollbars.  Have to update them anyway.','line_number':991,'multiline':False]
['text':'
 * "win_splitmove()" function
 ','line_number':999,'multiline':True]
['text':'
 * "win_gettype(nr)" function
 ','line_number':1046,'multiline':True]
['text':'
 * "getcmdwintype()" function
 ','line_number':1089,'multiline':True]
['text':'
 * "winbufnr(nr)" function
 ','line_number':1105,'multiline':True]
['text':'
 * "wincol()" function
 ','line_number':1123,'multiline':True]
['text':'
 * "winheight(nr)" function
 ','line_number':1133,'multiline':True]
['text':'
 * "winlayout()" function
 ','line_number':1151,'multiline':True]
['text':'
 * "winline()" function
 ','line_number':1177,'multiline':True]
['text':'
 * "winnr()" function
 ','line_number':1187,'multiline':True]
['text':'
 * "winrestcmd()" function
 ','line_number':1202,'multiline':True]
['text':' Do this twice to handle some window layouts properly.','line_number':1216,'multiline':False]
['text':'
 * "winrestview()" function
 ','line_number':1235,'multiline':True]
['text':'
 * "winsaveview()" function
 ','line_number':1284,'multiline':True]
['text':'
 * "winwidth(nr)" function
 ','line_number':1310,'multiline':True]
['text':' FEAT_EVAL','line_number':1327,'multiline':False]
['text':'
 * Set "win" to be the curwin and "tp" to be the current tab page.
 * restore_win() MUST be called to undo, also when FAIL is returned.
 * No autocommands will be executed until restore_win() is called.
 * When "no_display" is TRUE the display won't be affected, no redraw is
 * triggered, another tabpage access is limited.
 * Returns FAIL if switching to "win" failed.
 ','line_number':1331,'multiline':True]
['text':'
 * As switch_win() but without blocking autocommands.
 ','line_number':1350,'multiline':True]
['text':' Disable Visual selection, because redrawing may fail.','line_number':1366,'multiline':False]
['text':'
 * Restore current tabpage and window saved by switch_win(), if still valid.
 * When "no_display" is TRUE the display won't be affected, no redraw is
 * triggered.
 ','line_number':1394,'multiline':True]
['text':'
 * As restore_win() but without unblocking autocommands.
 ','line_number':1408,'multiline':True]
['text':' original window was closed and now we're in a popup window: Go','line_number':1442,'multiline':False]
['text':' to the first valid window.','line_number':1443,'multiline':False]
