['text':' vi:set ts=8 sts=4 sw=4 noet:
 *
 * VIM - Vi IMproved	by Bram Moolenaar
 *
 * Do ":help uganda"  in Vim to read copying and usage conditions.
 * Do ":help credits" in Vim to see a list of people who contributed.
 * See README.txt for an overview of the Vim source code.
 ','line_number':1,'multiline':True]
['text':' for cygwin_conv_to_posix_path() and/or','line_number':15,'multiline':False]
['text':' cygwin_conv_path()','line_number':16,'multiline':False]
['text':' Values for edit_type.','line_number':24,'multiline':False]
['text':' no edit type yet','line_number':25,'multiline':False]
['text':' file name argument[s] given, use argument list','line_number':26,'multiline':False]
['text':' read file from stdin','line_number':27,'multiline':False]
['text':' tag name argument given, use tagname','line_number':28,'multiline':False]
['text':' start in quickfix mode','line_number':29,'multiline':False]
['text':'
 * Different types of error messages.
 ','line_number':55,'multiline':True]
['text':' don't want a prototype for main()','line_number':74,'multiline':False]
['text':' Various parameters passed between main() and other functions.','line_number':76,'multiline':False]
['text':' buffer for setvbuf()','line_number':80,'multiline':False]
['text':' skip this for unittests','line_number':83,'multiline':False]
['text':' current working dir on startup','line_number':85,'multiline':False]
['text':'
     * Do any system-specific initialisations.  These can NOT use IObuff or
     * NameBuff.  Thus emsg2() cannot be called!
     ','line_number':104,'multiline':True]
['text':'
     * MinGW expands command line arguments, which confuses our code to
     * convert when 'encoding' changes.  Get the unexpanded arguments.
     ','line_number':111,'multiline':True]
['text':' Many variables are in "params" so that we can pass them to invoked','line_number':118,'multiline':False]
['text':' functions without a lot of arguments.  "argc" and "argv" are also','line_number':119,'multiline':False]
['text':' copied, so that they can be changed.','line_number':120,'multiline':False]
['text':' Need to find "--startuptime" and "--log" before actually parsing','line_number':148,'multiline':False]
['text':' arguments.','line_number':149,'multiline':False]
['text':' Need to find "--clean" before actually parsing arguments.','line_number':167,'multiline':False]
['text':' Need to find "-register" and "-unregister" before loading any libraries.','line_number':176,'multiline':False]
['text':'
     * Various initialisations shared with tests.
     ','line_number':187,'multiline':True]
['text':' Check if the current executable file is for the GUI subsystem.','line_number':193,'multiline':False]
['text':'
     * Do the client-server stuff, unless "--servername ''" was used.
     * This may exit Vim if the command was sent to the server.
     ','line_number':200,'multiline':True]
['text':'
     * Figure out the way to work from the command name argv[0].
     * "vimdiff" starts diff mode, "rvim" sets "restricted", etc.
     ','line_number':207,'multiline':True]
['text':'
     * Process the command line arguments.  File names are put in the global
     * argument list "global_alist".
     ','line_number':213,'multiline':True]
['text':'
     * On some systems, when we compile with the GUI, we always use it.  On Mac
     * there is no terminal version, and on Windows we can't fork one off with
     * :gui.
     ','line_number':220,'multiline':True]
['text':'
     * Check if the GUI can be started.  Reset gui.starting if not.
     * Don't know about other systems, stay on the safe side and don't check.
     ','line_number':229,'multiline':True]
['text':' When running "evim" or "gvim -y" we need the menus, exit if we','line_number':239,'multiline':False]
['text':' don't have them.','line_number':240,'multiline':False]
['text':'
	 * Expand wildcards in file names.
	 ','line_number':251,'multiline':True]
['text':' Temporarily add '(' and ')' to 'isfname'.  These are valid','line_number':259,'multiline':False]
['text':' filename characters but are excluded from 'isfname' to make','line_number':260,'multiline':False]
['text':' "gf" work on a file name in parentheses (e.g.: see vim.h).','line_number':261,'multiline':False]
['text':' Remember the number of entries in the argument list.  If it changes','line_number':274,'multiline':False]
['text':' we don't react on setting 'encoding'.','line_number':275,'multiline':False]
['text':'
	 * If there is one filename, fully qualified, we have very probably
	 * been invoked from explorer, so change to the file's directory.
	 * Hint: to avoid this when typing a command use a forward slash.
	 * If the cd fails, it doesn't matter.
	 ','line_number':283,'multiline':True]
['text':' open up to 3 windows','line_number':299,'multiline':False]
['text':' Don't redraw until much later.','line_number':302,'multiline':False]
['text':'
     * When listing swap file names, don't do cursor positioning et. al.
     ','line_number':305,'multiline':True]
['text':'
     * When certain to start the GUI, don't check terminal capabilities.
     * For GTK we can't be sure, but when started from the desktop it doesn't
     * make sense to try using a terminal.
     ','line_number':311,'multiline':True]
['text':'
     * mch_init() sets up the terminal (window) for use.  This must be
     * done after resetting full_screen, otherwise it may move the cursor.
     * Note that we may use mch_exit() before mch_init()!
     ','line_number':326,'multiline':True]
['text':'
     * For want of anywhere else to do it, try to connect to xsmp here.
     * Fitting it in after gui_mch_init, but before gui_init (via termcapinit).
     * Hijacking -X 'no X connection' to also disable XSMP connection as that
     * has a similar delay upon failure.
     * Only try if SESSION_MANAGER is set to something non-null.
     ','line_number':335,'multiline':True]
['text':'
     * Print a warning if stdout is not a terminal.
     ','line_number':354,'multiline':True]
['text':' Ensure output works usefully without a tty: buffer lines instead of','line_number':362,'multiline':False]
['text':' fully buffered.','line_number':363,'multiline':False]
['text':' This message comes before term inits, but after setting "silent_mode"','line_number':370,'multiline':False]
['text':' when the input is not a tty. Omit the message with --not-a-term.','line_number':371,'multiline':False]
['text':' set terminal name and get terminal','line_number':377,'multiline':False]
['text':' capabilities (will set full_screen)','line_number':378,'multiline':False]
['text':' don't know where cursor is now','line_number':379,'multiline':False]
['text':'
     * Set the default values for the options that use Rows and Columns.
     ','line_number':383,'multiline':True]
['text':' inits Rows and Columns','line_number':386,'multiline':False]
['text':' Set the 'diff' option now, so that it can be checked for in a .vimrc','line_number':389,'multiline':False]
['text':' file.  There is no buffer yet though.','line_number':390,'multiline':False]
['text':' allocate screen buffers','line_number':397,'multiline':False]
['text':' set up initial mappings','line_number':404,'multiline':False]
['text':' set the default highlight groups','line_number':406,'multiline':False]
['text':' Set the break level after the terminal is initialized.','line_number':414,'multiline':False]
['text':' Reset 'loadplugins' for "-u NONE" before "--cmd" arguments.','line_number':418,'multiline':False]
['text':' Allows for setting 'loadplugins' there.','line_number':419,'multiline':False]
['text':' Execute --cmd arguments.','line_number':425,'multiline':False]
['text':' Source startup scripts.','line_number':428,'multiline':False]
['text':'
     * Newer version of MzScheme (Racket) require earlier (trampolined)
     * initialisation via scheme_main_setup.
     * Implement this by initialising it as early as possible
     * and splitting off remaining Vim main into vim_main2().
     * Do source startup scripts, so that 'mzschemedll' can be set.
     ','line_number':432,'multiline':True]
['text':' NO_VIM_MAIN','line_number':444,'multiline':False]
['text':' PROTO','line_number':445,'multiline':False]
['text':'
 * vim_main2() is needed for FEAT_MZSCHEME, but we define it always to keep
 * things simple.
 * It is also defined when NO_VIM_MAIN is defined, but then it's empty.
 ','line_number':447,'multiline':True]
['text':'
     * Read all the plugin files.
     * Only when compiled with +eval, since most plugins need it.
     ','line_number':457,'multiline':True]
['text':' VMS and Amiga don't handle the "**".','line_number':465,'multiline':False]
['text':' First add all package directories to 'runtimepath', so that their','line_number':472,'multiline':False]
['text':' autoload directories can be found.  Only if not done already with a','line_number':473,'multiline':False]
['text':' :packloadall command.','line_number':474,'multiline':False]
['text':' Make a copy of 'runtimepath', so that source_runtime does not use','line_number':475,'multiline':False]
['text':' the pack directories.','line_number':476,'multiline':False]
['text':' Only source "start" packages if not done already with a :packloadall','line_number':488,'multiline':False]
['text':' command.','line_number':489,'multiline':False]
['text':' Decide about window layout for diff mode after reading vimrc.','line_number':500,'multiline':False]
['text':' use horizontal split','line_number':504,'multiline':False]
['text':' use vertical split','line_number':506,'multiline':False]
['text':'
     * Recovery mode without a file name: List swap files.
     * This uses the 'dir' option, therefore it must be after the
     * initializations.
     ','line_number':510,'multiline':True]
['text':'
     * Set a few option defaults after reading .vimrc files:
     * 'title' and 'icon', Unix: 'shellpipe' and 'shellredir'.
     ','line_number':521,'multiline':True]
['text':'
     * "-n" argument: Disable swap file by setting 'updatecount' to 0.
     * Note that this overrides anything from a vimrc file.
     ','line_number':528,'multiline':True]
['text':' When something caused a message from a vimrc script, need to output','line_number':539,'multiline':False]
['text':' an extra newline before the shell prompt.','line_number':540,'multiline':False]
['text':' will set full_screen to TRUE','line_number':545,'multiline':False]
['text':' When running "evim" or "gvim -y" we need the menus, exit if we','line_number':548,'multiline':False]
['text':' don't have them.','line_number':549,'multiline':False]
['text':' may have changed','line_number':552,'multiline':False]
['text':'
     * Read in registers, history etc, but not marks, from the viminfo file.
     * This is where v:oldfiles gets filled.
     ','line_number':557,'multiline':True]
['text':' It's better to make v:oldfiles an empty list than NULL.','line_number':568,'multiline':False]
['text':'
     * "-q errorfile": Load the error file now.
     * If the error file can't be read, exit before doing anything else.
     ','line_number':574,'multiline':True]
['text':'
     * Start putting things on the screen.
     * Scroll screen down before drawing over it
     * Clear screen now, so file message will not be cleared.
     ','line_number':596,'multiline':True]
['text':'
     * This seems to be required to make callbacks to be called now, instead
     * of after things have been put on the screen, which then may be deleted
     * when getting a resize callback.
     * For the Mac this handles putting files dropped on the Vim icon to
     * global_alist.
     ','line_number':607,'multiline':True]
['text':' Start using the X clipboard, unless the GUI was started.','line_number':630,'multiline':False]
['text':' Prepare for being a Vim server.','line_number':641,'multiline':False]
['text':'
     * If "-" argument given: Read file from stdin.
     * Do this before starting Raw mode, because it may change things that the
     * writing end of the pipe doesn't like, e.g., in case stdin and stderr
     * are the same terminal: "cat | vim -".
     * Using autocommands here may cause trouble...
     ','line_number':645,'multiline':True]
['text':' When switching screens and something caused a message from a vimrc','line_number':656,'multiline':False]
['text':' script, need to output an extra newline on exit.','line_number':657,'multiline':False]
['text':'
     * When done something that is not allowed or given an error message call
     * wait_return().  This must be done before starttermcap(), because it may
     * switch to another screen. It must be done after settmode(TMODE_RAW),
     * because we want to react on a single key stroke.
     * Call settmode and starttermcap here, so the T_KS and T_TI may be
     * defined by termcapinit and redefined in .exrc.
     ','line_number':662,'multiline':True]
['text':' start termcap if not done by wait_return()','line_number':679,'multiline':False]
['text':' may start using the mouse','line_number':682,'multiline':False]
['text':' In case Rows changed','line_number':684,'multiline':False]
['text':' may scroll the screen to the right position','line_number':685,'multiline':False]
['text':'
     * Don't clear the screen when starting in Ex mode, unless using the GUI.
     ','line_number':691,'multiline':True]
['text':' clear screen','line_number':702,'multiline':False]
['text':'
     * Create the requested number of windows and edit buffers in them.
     * Also does recovery if "recoverymode" set.
     ','line_number':717,'multiline':True]
['text':' clear v:swapcommand','line_number':725,'multiline':False]
['text':' Ex starts at last line of the file','line_number':729,'multiline':False]
['text':'
     * When started with "-q errorfile" jump to first error now.
     ','line_number':738,'multiline':True]
['text':'
     * If opened more than one window, start editing files in the other
     * windows.
     ','line_number':748,'multiline':True]
['text':' set options in each window for "vimdiff".','line_number':760,'multiline':False]
['text':'
     * Shorten any of the filenames, but only when absolute.
     ','line_number':766,'multiline':True]
['text':'
     * Need to jump to the tag before executing the '-c command'.
     * Makes "vim -c '/return' -t main" work.
     ','line_number':771,'multiline':True]
['text':' If the user doesn't want to edit the file then we quit here.','line_number':783,'multiline':False]
['text':' Execute any "+", "-c" and "-S" arguments.','line_number':788,'multiline':False]
['text':' Must come before the may_req_ calls.','line_number':792,'multiline':False]
['text':' Must be done before redrawing, puts a few characters on the screen.','line_number':796,'multiline':False]
['text':' 'autochdir' has been postponed','line_number':804,'multiline':False]
['text':' Requesting the termresponse is postponed until here, so that a "-c q"','line_number':808,'multiline':False]
['text':' argument doesn't make it appear in the shell Vim was started from.','line_number':809,'multiline':False]
['text':' start in insert mode','line_number':815,'multiline':False]
['text':' Adjust default register name for "unnamed" in 'clipboard'. Can only be','line_number':826,'multiline':False]
['text':' done after the clipboard is available and all initial commands that may','line_number':827,'multiline':False]
['text':' modify the 'clipboard' setting have run; i.e. just before entering the','line_number':828,'multiline':False]
['text':' main loop.','line_number':829,'multiline':False]
['text':' When a startup script or session file setup for diff'ing and','line_number':834,'multiline':False]
['text':' scrollbind, sync the scrollbind now.','line_number':835,'multiline':False]
['text':' Allow winsize changes from now on','line_number':848,'multiline':False]
['text':' When tab pages were created, may need to update the tab pages line and','line_number':852,'multiline':False]
['text':' scrollbars.  This is skipped while creating them.','line_number':853,'multiline':False]
['text':' If ":startinsert" command used, stuff a dummy command to be able to','line_number':863,'multiline':False]
['text':' call normal_cmd(), which will then start Insert mode.','line_number':864,'multiline':False]
['text':' Tell the client that it can start sending commands.','line_number':881,'multiline':False]
['text':' Redraw at least once, also when 'lazyredraw' is set, to make sure the','line_number':886,'multiline':False]
['text':' window title gets updated.','line_number':887,'multiline':False]
['text':'
     * Call the main command loop.  This never returns.
     ','line_number':892,'multiline':True]
['text':' NO_VIM_MAIN','line_number':897,'multiline':False]
['text':'
 * Initialisation shared by main() and some tests.
 ','line_number':902,'multiline':True]
['text':' init mb_bytelen_tab[] to ones','line_number':911,'multiline':False]
['text':' init global variables','line_number':913,'multiline':False]
['text':' PhAttach() for clipboard, (and gui)','line_number':917,'multiline':False]
['text':'
     * Allocate space for the generic buffers (needed for set_init_1() and
     * emsg()).
     ','line_number':920,'multiline':True]
['text':' Wait a moment for debugging NetBeans.  Must be after allocating','line_number':930,'multiline':False]
['text':' NameBuff.','line_number':931,'multiline':False]
['text':'
     * Setup to use the current locale (for ctype() and many other things).
     * NOTE: Translated messages with encodings other than latin1 will not
     * work until set_init_1() has been called!
     ','line_number':938,'multiline':True]
['text':' default is to use fork()','line_number':948,'multiline':False]
['text':'
     * Do a first scan of the arguments in "argv[]":
     *   -display or --display
     *   --server...
     *   --socketid
     *   --windowid
     ','line_number':951,'multiline':True]
['text':' Prepare for possibly starting GUI sometime','line_number':961,'multiline':False]
['text':' Initialise clipboard stuff','line_number':967,'multiline':False]
['text':'
     * Check if we have an interactive window.
     * On the Amiga: If there is no window, we open one with a newcli command
     * (needed for :! to * work). mch_check_win() will also handle the -d or
     * -dev argument.
     ','line_number':971,'multiline':True]
['text':'
     * Allocate the first window and buffer.
     * Can't do anything without it, exit when it fails.
     ','line_number':980,'multiline':True]
['text':' init yank buffers','line_number':987,'multiline':False]
['text':' Init the argument list to empty.','line_number':989,'multiline':False]
['text':'
     * Set the default values for the options.
     * NOTE: Non-latin1 translated messages are working only after this,
     * because this is where "has_mbyte" will be set, which is used by
     * msg_outtrans_len_attr().
     * First find out the home directory, needed to expand "~" in options.
     ','line_number':992,'multiline':True]
['text':' find real value of $HOME','line_number':999,'multiline':False]
['text':' set v:lang and v:ctype','line_number':1004,'multiline':False]
['text':' set v:argv','line_number':1007,'multiline':False]
['text':'
 * Return TRUE when the --not-a-term argument was found.
 ','line_number':1016,'multiline':True]
['text':'
 * Return TRUE when the --not-a-term argument was found or the GUI is in use.
 ','line_number':1025,'multiline':True]
['text':'
 * If a --gui-dialog-file argument was given return the file name.
 * Otherwise return NULL.
 ','line_number':1054,'multiline':True]
['text':' When TRUE in a safe state when starting to wait for a character.','line_number':1065,'multiline':False]
['text':'
 * Return TRUE if an operator was started but not finished yet.
 * Includes typing a count or a register name.
 ','line_number':1069,'multiline':True]
['text':'
 * Return whether currently it is safe, assuming it was safe before (high level
 * state didn't change).
 ','line_number':1084,'multiline':True]
['text':'
 * Trigger SafeState if currently in s safe state, that is "safe" is TRUE and
 * there is no typeahead.
 ','line_number':1100,'multiline':True]
['text':' Only log when the state changes, otherwise it happens at nearly','line_number':1111,'multiline':False]
['text':' every key stroke.','line_number':1112,'multiline':False]
['text':'
 * Something changed which causes the state possibly to be unsafe, e.g. a
 * character was typed.  It will remain unsafe until the next call to
 * may_trigger_safestate().
 ','line_number':1121,'multiline':True]
['text':'
 * Invoked when leaving code that invokes callbacks.  Then trigger
 * SafeStateAgain, if it was safe when starting to wait for a character.
 ','line_number':1145,'multiline':True]
['text':' If the safe state was reset in state_no_longer_safe(), e.g. because','line_number':1154,'multiline':False]
['text':' of calling feedkeys(), we check if it's now safe again (all keys','line_number':1155,'multiline':False]
['text':' were consumed).','line_number':1156,'multiline':False]
['text':' Only do this message when another message was given, otherwise we','line_number':1166,'multiline':False]
['text':' get lots of them.','line_number':1167,'multiline':False]
['text':'
 * Return TRUE if there is any typeahead, pending operator or command.
 ','line_number':1187,'multiline':True]
['text':'
 * Main loop: Execute Normal mode commands until exiting Vim.
 * Also used to handle commands in the command-line window, until the window
 * is closed.
 * Also used to handle ":visual" command after ":global": execute Normal mode
 * commands, return when entering Ex mode.  "noexmode" is TRUE then.
 ','line_number':1197,'multiline':True]
['text':' TRUE when working in the command-line window','line_number':1206,'multiline':False]
['text':' TRUE when return on entering Ex mode','line_number':1207,'multiline':False]
['text':' operator arguments','line_number':1209,'multiline':False]
['text':' operator arguments','line_number':1210,'multiline':False]
['text':' "got_int" was TRUE','line_number':1211,'multiline':False]
['text':' these are static to avoid a compiler warning','line_number':1213,'multiline':False]
['text':' Setup to catch a terminating error from the X server.  Just ignore','line_number':1223,'multiline':False]
['text':' it, restore the state and continue.  This might not always work','line_number':1224,'multiline':False]
['text':' properly, but at least we don't exit unexpectedly when the X server','line_number':1225,'multiline':False]
['text':' exits while Vim is running in a console.','line_number':1226,'multiline':False]
['text':' if wait_return() still needed ...','line_number':1259,'multiline':False]
['text':' ... call it now','line_number':1260,'multiline':False]
['text':' start insert mode next','line_number':1264,'multiline':False]
['text':' skip the fileinfo message now, because it would be shown','line_number':1265,'multiline':False]
['text':' after insert mode finishes!','line_number':1266,'multiline':False]
['text':' Reset "got_int" now that we got back to the main loop.  Except when','line_number':1271,'multiline':False]
['text':' inside a ":g/pat/cmd" command, then the "got_int" needs to abort','line_number':1272,'multiline':False]
['text':' the ":g" command.','line_number':1273,'multiline':False]
['text':' For ":g/pat/vi" we reset "got_int" when used once.  When used','line_number':1274,'multiline':False]
['text':' a second time we go back to Ex mode and abort the ":g" command.','line_number':1275,'multiline':False]
['text':' Typed two CTRL-C in a row: go back to ex mode as if "Q" was','line_number':1280,'multiline':False]
['text':' used and keep "got_int" set, so that it aborts ":g".','line_number':1281,'multiline':False]
['text':' flush all buffers','line_number':1288,'multiline':False]
['text':' At the toplevel there is no exception handling.  Discard any that','line_number':1297,'multiline':False]
['text':' may be hanging around (e.g. from "interrupt" at the debug prompt).','line_number':1298,'multiline':False]
['text':' it's not safe unless may_trigger_safestate_main() is called','line_number':1307,'multiline':False]
['text':'
	 * If skip redraw is set (for ":" in wait_return()), don't redraw now.
	 * If there is nothing in the stuff_buffer or do_redraw is TRUE,
	 * update cursor and redraw.
	 ','line_number':1310,'multiline':True]
['text':' If ui_breakcheck() was used a resize may have been postponed.','line_number':1324,'multiline':False]
['text':' If files were dropped while text was locked or the curbuf was','line_number':1328,'multiline':False]
['text':' locked, this would be a good time to handle the drop.','line_number':1329,'multiline':False]
['text':' Trigger CursorMoved if the cursor moved.','line_number':1337,'multiline':False]
['text':' Trigger TextChanged if b:changedtick differs.','line_number':1383,'multiline':False]
['text':' Ensure curwin->w_topline and curwin->w_leftcol are up to date','line_number':1391,'multiline':False]
['text':' before triggering a WinScrolled autocommand.','line_number':1392,'multiline':False]
['text':' If nothing is pending and we are going to wait for the user to','line_number':1399,'multiline':False]
['text':' type a character, trigger SafeState.','line_number':1400,'multiline':False]
['text':' Updating diffs from changed() does not always work properly,','line_number':1404,'multiline':False]
['text':' esp. updating folds.  Do an update just before redrawing if','line_number':1405,'multiline':False]
['text':' needed.','line_number':1406,'multiline':False]
['text':' Scroll-binding for diff mode may have been postponed until','line_number':1413,'multiline':False]
['text':' here.  Avoids doing it for every change.','line_number':1414,'multiline':False]
['text':' Include a closed fold completely in the Visual area.','line_number':1422,'multiline':False]
['text':'
	     * When 'foldclose' is set, apply 'foldlevel' to folds that don't
	     * contain the cursor.
	     * When 'foldopen' is "all", open the fold(s) under the cursor.
	     * This may mark the window for redrawing.
	     ','line_number':1426,'multiline':True]
['text':' Before redrawing, make sure w_topline is correct, and w_leftcol','line_number':1440,'multiline':False]
['text':' if lines don't wrap, and w_skipcol if lines wrap.','line_number':1441,'multiline':False]
['text':' update inverted part','line_number':1446,'multiline':False]
['text':' Stop issuing gui_mch_flush().','line_number':1449,'multiline':False]
['text':' display message after redraw','line_number':1461,'multiline':False]
['text':' msg_start() will set keep_msg to NULL, make a copy','line_number':1468,'multiline':False]
['text':' first.  Don't reset keep_msg, msg_attr_keep() uses it to','line_number':1469,'multiline':False]
['text':' check for duplicates.  Never put this message in','line_number':1470,'multiline':False]
['text':' history.','line_number':1471,'multiline':False]
['text':' show file info after redraw','line_number':1478,'multiline':False]
['text':' can delete error message now','line_number':1484,'multiline':False]
['text':' reset lines_left in msg_start()','line_number':1486,'multiline':False]
['text':' clear scroll-back text on next msg','line_number':1487,'multiline':False]
['text':' Now that we have drawn the first screen all the startup stuff','line_number':1496,'multiline':False]
['text':' has been done, close any file for startup messages.','line_number':1497,'multiline':False]
['text':' After the first screen update may start triggering WinScrolled','line_number':1506,'multiline':False]
['text':' autocmd events.  Store all the scroll positions and sizes now.','line_number':1507,'multiline':False]
['text':' May request the keyboard protocol state now.','line_number':1515,'multiline':False]
['text':' Update w_curswant if w_set_curswant has been set.','line_number':1518,'multiline':False]
['text':' Postponed until here to avoid computing w_virtcol too often.','line_number':1519,'multiline':False]
['text':'
	 * May perform garbage collection when waiting for a character, but
	 * only at the very toplevel.  Otherwise we may be using a List or
	 * Dict internally somewhere.
	 * "may_garbage_collect" is reset in vgetc() which is invoked through
	 * do_exmode() and normal_cmd().
	 ','line_number':1523,'multiline':True]
['text':'
	 * If we're invoked as ex, do a round of ex commands.
	 * Otherwise, get and execute a normal mode command.
	 ','line_number':1532,'multiline':True]
['text':' End of ":global/path/visual" commands','line_number':1538,'multiline':False]
['text':' If terminal_loop() returns OK we got a key that is handled','line_number':1550,'multiline':False]
['text':' in Normal mode.  With FAIL we first need to position the','line_number':1551,'multiline':False]
['text':' cursor and the screen needs to be redrawn.','line_number':1552,'multiline':False]
['text':'
 * Exit, but leave behind swap files for modified buffers.
 ','line_number':1573,'multiline':True]
['text':' Ignore SIGHUP, because a dropped connection causes a read error, which','line_number':1580,'multiline':False]
['text':' makes Vim exit and then handling SIGHUP causes various reentrance','line_number':1581,'multiline':False]
['text':' problems.','line_number':1582,'multiline':False]
['text':' close all not-modified buffers','line_number':1586,'multiline':False]
['text':' preserve all swap files','line_number':1587,'multiline':False]
['text':' close all memfiles, without deleting','line_number':1588,'multiline':False]
['text':' exit Vim properly','line_number':1589,'multiline':False]
['text':'
 * Exit properly.  This is the only way to exit Vim after startup has
 * succeeded.  We are certain to exit here, no way to abort it.
 ','line_number':1594,'multiline':True]
['text':' When running in Ex mode an error causes us to exit with a non-zero exit','line_number':1606,'multiline':False]
['text':' code.  POSIX requires this, although it's not 100% clear from the','line_number':1607,'multiline':False]
['text':' standard.','line_number':1608,'multiline':False]
['text':' Position the cursor on the last screen line, below all the text','line_number':1617,'multiline':False]
['text':' Invoked all deferred functions in the function stack.','line_number':1622,'multiline':False]
['text':' Optionally print hashtable efficiency.','line_number':1627,'multiline':False]
['text':' Trigger BufWinLeave for all windows, but only once per buffer.','line_number':1643,'multiline':False]
['text':' Autocmd must have close the buffer already, skip.','line_number':1650,'multiline':False]
['text':' note we did it already','line_number':1661,'multiline':False]
['text':' start all over, autocommands may mess up the lists','line_number':1663,'multiline':False]
['text':' Trigger BufUnload for buffers that are loaded','line_number':1670,'multiline':False]
['text':' autocmd deleted the buffer','line_number':1680,'multiline':False]
['text':' deathtrap() blocks autocommands, but we do want to trigger','line_number':1684,'multiline':False]
['text':' VimLeavePre.','line_number':1685,'multiline':False]
['text':' Write out the registers, history, marks etc, to the viminfo file','line_number':1698,'multiline':False]
['text':' deathtrap() blocks autocommands, but we do want to trigger VimLeave.','line_number':1706,'multiline':False]
['text':' give the user a chance to read the (error) message','line_number':1727,'multiline':False]
['text':' Position the cursor again, the autocommands may have moved it','line_number':1732,'multiline':False]
['text':'
 * Get the name of the display, before gui_prepare() removes it from
 * argv[].  Used for the xterm-clipboard display.
 *
 * Also find the --server... arguments and --socketid and --windowid
 ','line_number':1780,'multiline':True]
['text':' don't fork() when starting the GUI to edit files ourself','line_number':1825,'multiline':False]
['text':'
 * Get a (optional) count for a Vim argument.
 ','line_number':1875,'multiline':True]
['text':' pointer to argument','line_number':1880,'multiline':False]
['text':' index in argument, is incremented','line_number':1881,'multiline':False]
['text':' default value','line_number':1882,'multiline':False]
['text':'
 * Check for: [r][e][g][vi|vim|view][diff][ex[im]]  (sort of)
 * If the executable name starts with "r" we disable shell commands.
 * If the next character is "e" we run in Easy mode.
 * If the next character is "g" we run the GUI version.
 * If the next characters are "view" we start in readonly mode.
 * If the next characters are "diff" or "vimdiff" we start in diff mode.
 * If the next characters are "ex" we start in Ex mode.  If it's followed
 * by "im" use improved Ex mode.
 ','line_number':1893,'multiline':True]
['text':' Use evim mode for "evim" and "egvim", not for "editor".','line_number':1921,'multiline':False]
['text':' "gvim" starts the GUI.  Also accept "Gvim" for MS-Windows.','line_number':1933,'multiline':False]
['text':' No need to spawn a new process.','line_number':1941,'multiline':False]
['text':' Not "gvim". Need to spawn gvim.exe.','line_number':1946,'multiline':False]
['text':' don't update very often','line_number':1954,'multiline':False]
['text':' Catch "[r][g]vimdiff" and "[r][g]viewdiff".','line_number':1960,'multiline':False]
['text':' Checking for "ex" here may catch some weird names, such as "vimex" or','line_number':1972,'multiline':False]
['text':' "viewex", we assume the user knows that.','line_number':1973,'multiline':False]
['text':' set 'compatible'','line_number':1980,'multiline':False]
['text':'
 * Scan the command line arguments.
 ','line_number':1984,'multiline':True]
['text':' index in argv[n][]','line_number':1992,'multiline':False]
['text':' found "--" argument','line_number':1993,'multiline':False]
['text':' option argument with argument','line_number':1994,'multiline':False]
['text':' active option letter is argv[0][argv_idx]','line_number':2001,'multiline':False]
['text':'
	 * "+" or "+{number}" or "+/{pat}" or "+{command}" argument.
	 ','line_number':2004,'multiline':True]
['text':' skip to next argument','line_number':2011,'multiline':False]
['text':'
	 * Optional argument.
	 ','line_number':2018,'multiline':True]
['text':'
	     * VMS only uses upper case command lines.  Interpret "-X" as "-x"
	     * and "-/X" as "-X".
	     ','line_number':2026,'multiline':True]
['text':' "vim -"  read from stdin','line_number':2040,'multiline':False]
['text':' "ex -" silent mode','line_number':2041,'multiline':False]
['text':' read from stderr instead of stdin','line_number':2049,'multiline':False]
['text':' skip to next argument','line_number':2051,'multiline':False]
['text':' "--" don't take any more option arguments','line_number':2054,'multiline':False]
['text':' "--help" give help message','line_number':2055,'multiline':False]
['text':' "--version" give version message','line_number':2056,'multiline':False]
['text':' "--clean" clean context','line_number':2057,'multiline':False]
['text':' "--literal" take files literally','line_number':2058,'multiline':False]
['text':' "--startuptime fname" write timing info','line_number':2059,'multiline':False]
['text':' "--log fname" start logging early','line_number':2060,'multiline':False]
['text':' "--nofork" don't fork','line_number':2061,'multiline':False]
['text':' "--not-a-term" don't warn for not a term','line_number':2062,'multiline':False]
['text':' "--gui-dialog-file fname" write dialog text','line_number':2063,'multiline':False]
['text':' "--ttyfail" exit if not a term','line_number':2064,'multiline':False]
['text':' "--noplugin[s]" skip plugins','line_number':2065,'multiline':False]
['text':' "--cmd <cmd>" execute cmd before vimrc','line_number':2066,'multiline':False]
['text':' need to init Columns','line_number':2071,'multiline':False]
['text':' use mch_msg(), not mch_errmsg()','line_number':2072,'multiline':False]
['text':' not starting GUI, will exit','line_number':2074,'multiline':False]
['text':' don't fork() when starting GUI','line_number':2100,'multiline':False]
['text':' already processed -- no arg','line_number':2132,'multiline':False]
['text':' already processed -- snatch the following arg','line_number':2136,'multiline':False]
['text':' already processed -- snatch the following arg','line_number':2151,'multiline':False]
['text':' already processed, skip','line_number':2162,'multiline':False]
['text':' skip to next argument','line_number':2172,'multiline':False]
['text':' "-A" start in Arabic mode','line_number':2175,'multiline':False]
['text':' "-b" binary mode','line_number':2184,'multiline':False]
['text':' Needs to be effective before expanding file names, because','line_number':2185,'multiline':False]
['text':' for Win32 this makes us edit a shortcut file itself,','line_number':2186,'multiline':False]
['text':' instead of the file it links to.','line_number':2187,'multiline':False]
['text':' binary file I/O','line_number':2189,'multiline':False]
['text':' "-C"  Compatible','line_number':2192,'multiline':False]
['text':' "-e" Ex mode','line_number':2197,'multiline':False]
['text':' "-E" Improved Ex mode','line_number':2201,'multiline':False]
['text':' "-f"  GUI: run in foreground.  Amiga: open','line_number':2205,'multiline':False]
['text':' window directly, not with newcli','line_number':2206,'multiline':False]
['text':' don't fork() when starting GUI','line_number':2208,'multiline':False]
['text':' "-g" start GUI','line_number':2212,'multiline':False]
['text':' "-F" was for Farsi mode','line_number':2216,'multiline':False]
['text':' "-?" give help message (for MS-Windows)','line_number':2221,'multiline':False]
['text':' "-h" give help message','line_number':2222,'multiline':False]
['text':' Tell usage() to exit for "gvim".','line_number':2224,'multiline':False]
['text':' "-H" start in Hebrew mode: rl + hkmap set','line_number':2230,'multiline':False]
['text':' "-l" lisp mode, 'lisp' and 'showmatch' on','line_number':2240,'multiline':False]
['text':' "-M"  no changes or writing of files','line_number':2245,'multiline':False]
['text':' FALLTHROUGH','line_number':2247,'multiline':False]
['text':' "-m"  no writing of files','line_number':2249,'multiline':False]
['text':' "-y"  easy mode','line_number':2253,'multiline':False]
['text':' start GUI a bit later','line_number':2255,'multiline':False]
['text':' "-N"  Nocompatible','line_number':2260,'multiline':False]
['text':' "-n" no swap file','line_number':2264,'multiline':False]
['text':' checking for "-nb", netbeans parameters','line_number':2266,'multiline':False]
['text':' skip to next argument','line_number':2270,'multiline':False]
['text':' "-p[N]" open N tab pages','line_number':2277,'multiline':False]
['text':' For some reason on MacOS X, an argument like:','line_number':2279,'multiline':False]
['text':' -psn_0_10223617 is passed in when invoke from Finder','line_number':2280,'multiline':False]
['text':' or with the 'open' command','line_number':2281,'multiline':False]
['text':' bypass full -psn','line_number':2284,'multiline':False]
['text':' default is 0: open window for each file','line_number':2289,'multiline':False]
['text':' "-o[N]" open N horizontal split windows','line_number':2295,'multiline':False]
['text':' default is 0: open window for each file','line_number':2296,'multiline':False]
['text':' "-O[N]" open N vertical split windows','line_number':2302,'multiline':False]
['text':' default is 0: open window for each file','line_number':2303,'multiline':False]
['text':' "-q" QuickFix mode','line_number':2310,'multiline':False]
['text':' "-q{errorfile}"','line_number':2314,'multiline':False]
['text':' "-q {errorfile}"','line_number':2319,'multiline':False]
['text':' "-R" readonly mode','line_number':2324,'multiline':False]
['text':' don't update very often','line_number':2327,'multiline':False]
['text':' "-r" recovery mode','line_number':2330,'multiline':False]
['text':' "-L" recovery mode','line_number':2331,'multiline':False]
['text':' "-s" silent (batch) mode','line_number':2336,'multiline':False]
['text':' "-s {scriptin}" read from script file','line_number':2338,'multiline':False]
['text':' "-t {tag}" or "-t{tag}" jump to tag','line_number':2342,'multiline':False]
['text':' "-t{tag}"','line_number':2346,'multiline':False]
['text':' "-t {tag}"','line_number':2351,'multiline':False]
['text':' "-D"		Debugging','line_number':2356,'multiline':False]
['text':' "-d"		'diff'','line_number':2361,'multiline':False]
['text':' check for "-dev {device}"','line_number':2363,'multiline':False]
['text':' "-V{N}"	Verbose level','line_number':2371,'multiline':False]
['text':' default is 10: a little bit verbose','line_number':2372,'multiline':False]
['text':' "-v"  Vi-mode (as if called "vi")','line_number':2382,'multiline':False]
['text':' don't start GUI','line_number':2385,'multiline':False]
['text':' "-w{number}"	set window height','line_number':2389,'multiline':False]
['text':' "-w {scriptout}"	write to script','line_number':2390,'multiline':False]
['text':' "-x"  encrypted reading/writing of files','line_number':2401,'multiline':False]
['text':' "-X"  don't connect to X server','line_number':2406,'multiline':False]
['text':' "-Z"  restricted mode','line_number':2412,'multiline':False]
['text':' "-c{command}" or "-c {command}" execute','line_number':2416,'multiline':False]
['text':' command','line_number':2417,'multiline':False]
['text':' FALLTHROUGH','line_number':2427,'multiline':False]
['text':' "-S {file}" execute Vim script','line_number':2428,'multiline':False]
['text':' "-i {viminfo}" use for viminfo','line_number':2429,'multiline':False]
['text':' "-d {device}" device (for Amiga)','line_number':2431,'multiline':False]
['text':' "-T {terminal}" terminal name','line_number':2433,'multiline':False]
['text':' "-u {vimrc}" vim inits file','line_number':2434,'multiline':False]
['text':' "-U {gvimrc}" gvim inits file','line_number':2435,'multiline':False]
['text':' "-W {scriptout}" overwrite','line_number':2436,'multiline':False]
['text':' "-P {parent title}" MDI parent','line_number':2438,'multiline':False]
['text':'
	     * Handle option arguments with argument.
	     ','line_number':2447,'multiline':True]
['text':'
		 * Check for garbage immediately after the option letter.
		 ','line_number':2452,'multiline':True]
['text':' -S has an optional argument','line_number':2459,'multiline':False]
['text':' "-c {command}" execute command','line_number':2466,'multiline':False]
['text':' "-S {file}" execute Vim script','line_number':2467,'multiline':False]
['text':' "-S" without argument: use default session file','line_number':2475,'multiline':False]
['text':' name.','line_number':2476,'multiline':False]
['text':' "-S" followed by another option: use default','line_number':2480,'multiline':False]
['text':' session file name.','line_number':2481,'multiline':False]
['text':' "--cmd {command}" execute command','line_number':2503,'multiline':False]
['text':' --gui-dialog-file fname','line_number':2509,'multiline':False]
['text':' without GUI ignore the argument','line_number':2512,'multiline':False]
['text':' "--startuptime <file>" already handled','line_number':2518,'multiline':False]
['text':' "--log <file>" already handled','line_number':2519,'multiline':False]
['text':'	case 'd':   -d {device} is handled in mch_check_win() for the','line_number':2522,'multiline':False]
['text':'		    Amiga','line_number':2523,'multiline':False]
['text':' "-q {errorfile}" QuickFix mode','line_number':2526,'multiline':False]
['text':' "-i {viminfo}" use for viminfo','line_number':2531,'multiline':False]
['text':' "-s {scriptin}" read from script file','line_number':2536,'multiline':False]
['text':' out of memory','line_number':2555,'multiline':False]
['text':' "-t {tag}"','line_number':2558,'multiline':False]
['text':' "-T {terminal}" terminal name','line_number':2562,'multiline':False]
['text':'
		     * The -T term argument is always available and when
		     * HAVE_TERMLIB is supported it overrides the environment
		     * variable TERM.
		     ','line_number':2563,'multiline':True]
['text':' start GUI a bit later','line_number':2570,'multiline':False]
['text':' "-u {vimrc}" vim inits file','line_number':2576,'multiline':False]
['text':' "-U {gvimrc}" gvim inits file','line_number':2580,'multiline':False]
['text':' "-w {nr}" 'window' value','line_number':2586,'multiline':False]
['text':' "-w {scriptout}" append to script file','line_number':2587,'multiline':False]
['text':' FALLTHROUGH','line_number':2597,'multiline':False]
['text':' "-W {scriptout}" overwrite script file','line_number':2598,'multiline':False]
['text':' "-P {parent title}" MDI parent','line_number':2612,'multiline':False]
['text':'
	 * File name argument.
	 ','line_number':2620,'multiline':True]
['text':' skip to next argument','line_number':2625,'multiline':False]
['text':' Check for only one type of editing.','line_number':2627,'multiline':False]
['text':' Remember if the argument was a full path before changing','line_number':2633,'multiline':False]
['text':' slashes to backslashes.','line_number':2634,'multiline':False]
['text':' Add the file to the global argument list.','line_number':2639,'multiline':False]
['text':'
	     * If vim is invoked by non-Cygwin tools, convert away any
	     * DOS paths, so things like .swp files are created correctly.
	     * Look for evidence of non-Cygwin paths before we bother.
	     * This is only for when using the Unix files.
	     ','line_number':2658,'multiline':True]
['text':' Make the case of the file name match the actual file.','line_number':2681,'multiline':False]
['text':' add buffer nr after exp.','line_number':2687,'multiline':False]
['text':' add buffer number now and use curbuf','line_number':2689,'multiline':False]
['text':' Remember this argument has been added to the argument list.','line_number':2695,'multiline':False]
['text':' Needed when 'encoding' is changed.','line_number':2696,'multiline':False]
['text':'
	 * If there are no more letters after the current "-", go to next
	 * argument.  argv_idx is set to -1 when the current argument is to be
	 * skipped.
	 ','line_number':2708,'multiline':True]
['text':' If there is a "+123" or "-c" command, set v:swapcommand to the first','line_number':2722,'multiline':False]
['text':' one.','line_number':2723,'multiline':False]
['text':'
 * Print a warning if stdout is not a terminal.
 * When starting in Ex mode and commands come from a file, set silent_mode.
 ','line_number':2737,'multiline':True]
['text':' is active input a terminal?','line_number':2744,'multiline':False]
['text':' don't want the delay when started from the desktop','line_number':2754,'multiline':False]
['text':'
	 * This shouldn't be necessary. But if I run netbeans with the log
	 * output coming to the console and XOpenDisplay fails, I get vim
	 * trying to start with input/output to my console tty.  This fills my
	 * input buffer so fast I can't even kill the process in under 2
	 * minutes (and it beeps continuously the whole time :-)
	 ','line_number':2760,'multiline':True]
['text':' Set the encoding of the error message based on $LC_ALL or','line_number':2784,'multiline':False]
['text':' other environment variables instead of 'encoding'.','line_number':2785,'multiline':False]
['text':' Note that the message is shown on a Cygwin terminal (e.g.','line_number':2786,'multiline':False]
['text':' mintty) which encoding is based on $LC_ALL or etc., not the','line_number':2787,'multiline':False]
['text':' current codepage used by normal Win32 console programs.','line_number':2788,'multiline':False]
['text':' Use "utf-8" by default.','line_number':2791,'multiline':False]
['text':'
 * Read text from stdin.
 ','line_number':2812,'multiline':True]
['text':' When getting the ATTENTION prompt here, use a dialog','line_number':2820,'multiline':False]
['text':' Create memfile and read from stdin.','line_number':2827,'multiline':False]
['text':' Dup stdin from stderr to read commands from, so that shell commands','line_number':2837,'multiline':False]
['text':' work.','line_number':2838,'multiline':False]
['text':' TODO: why is this needed, even though readfile() has done this?','line_number':2839,'multiline':False]
['text':'
 * Create the requested number of windows and edit buffers in them.
 * Also does recovery if "recoverymode" set.
 ','line_number':2845,'multiline':True]
['text':'
     * Create the number of windows that was requested.
     ','line_number':2855,'multiline':True]
['text':' was not set','line_number':2858,'multiline':False]
['text':' Don't change the windows if there was a command in .vimrc that','line_number':2864,'multiline':False]
['text':' already split some windows','line_number':2865,'multiline':False]
['text':' do recover','line_number':2885,'multiline':False]
['text':' scroll message up','line_number':2887,'multiline':False]
['text':' failed','line_number':2889,'multiline':False]
['text':' do modelines','line_number':2891,'multiline':False]
['text':'
	 * Open a buffer for windows that don't have one yet.
	 * Commands in the .vimrc might have loaded a file or split the window.
	 * Watch out for autocommands that delete a window.
	 ','line_number':2895,'multiline':True]
['text':'
	 * Don't execute Win/Buf Enter/Leave autocommands here
	 ','line_number':2900,'multiline':True]
['text':' Set 'foldlevel' to 'foldlevelstart' if it's not negative.','line_number':2932,'multiline':False]
['text':' When getting the ATTENTION prompt here, use a dialog','line_number':2936,'multiline':False]
['text':' create memfile, read file','line_number':2941,'multiline':False]
['text':' abort selected or quit and only one window','line_number':2948,'multiline':False]
['text':' avoid hit-enter prompt','line_number':2949,'multiline':False]
['text':' We can't close the window, it would disturb what','line_number':2952,'multiline':False]
['text':' happens next.  Clear the file name and set the arg','line_number':2953,'multiline':False]
['text':' index to -1 to delete it later.','line_number':2954,'multiline':False]
['text':' start again','line_number':2961,'multiline':False]
['text':' only break the file loading, not the rest','line_number':2966,'multiline':False]
['text':'
 * If opened more than one window, start editing files in the other
 * windows.  make_windows() has already opened the windows.
 ','line_number':2980,'multiline':True]
['text':' current working dir','line_number':2987,'multiline':False]
['text':' index in argument list','line_number':2989,'multiline':False]
['text':'
     * Don't execute Win/Buf Enter/Leave autocommands here
     ','line_number':2995,'multiline':True]
['text':' When w_arg_idx is -1 remove the window (see create_windows()).','line_number':3001,'multiline':False]
['text':' When w_arg_idx is -1 remove the window (see create_windows()).','line_number':3013,'multiline':False]
['text':' just checking','line_number':3026,'multiline':False]
['text':' Temporarily reset 'shm' option to not print fileinfo when','line_number':3029,'multiline':False]
['text':' loading the other buffers. This would overwrite the already','line_number':3030,'multiline':False]
['text':' existing fileinfo for the first tab.','line_number':3031,'multiline':False]
['text':' just checking','line_number':3044,'multiline':False]
['text':' Only open the file if there is no file in this window yet (that can','line_number':3051,'multiline':False]
['text':' happen when .vimrc contains ":sall").','line_number':3052,'multiline':False]
['text':' Edit file from arg list, if there is one.  When "Quit" selected','line_number':3056,'multiline':False]
['text':' at the ATTENTION prompt close the window.','line_number':3057,'multiline':False]
['text':' abort or quit selected','line_number':3064,'multiline':False]
['text':' abort selected and only one window','line_number':3067,'multiline':False]
['text':' avoid hit-enter prompt','line_number':3068,'multiline':False]
['text':' only break the file loading, not the rest','line_number':3081,'multiline':False]
['text':' make the first window the current window','line_number':3096,'multiline':False]
['text':' Avoid making a preview window the current window.','line_number':3099,'multiline':False]
['text':' adjust heights','line_number':3115,'multiline':False]
['text':'
 * Execute the commands from --cmd arguments "cmds[cnt]".
 ','line_number':3118,'multiline':True]
['text':' just in case..','line_number':3132,'multiline':False]
['text':'
 * Execute "+", "-c" and "-S" arguments.
 ','line_number':3148,'multiline':True]
['text':'
     * We start commands on line 0, make "vim +/pat file" match a
     * pattern on line 1.  But don't move the cursor when an autocommand
     * with g`" was used.
     ','line_number':3157,'multiline':True]
['text':' When started with "-q errorfile" jump to first error again.','line_number':3189,'multiline':False]
['text':'
 * Source startup scripts.
 ','line_number':3196,'multiline':True]
['text':'
     * For "evim" source evim.vim first of all, so that the user can overrule
     * any things he doesn't like.
     ','line_number':3204,'multiline':True]
['text':'
     * If -u argument given, use only the initializations from that file and
     * nothing else.
     ','line_number':3214,'multiline':True]
['text':' don't load gvimrc either','line_number':3230,'multiline':False]
['text':' Avoid a requester here for a volume that doesn't exist.','line_number':3246,'multiline':False]
['text':'
	 * Get system wide defaults, if the file name is defined.
	 ','line_number':3250,'multiline':True]
['text':'
	 * Try to read initialization commands from the following places:
	 * - environment variable VIMINIT
	 * - user vimrc file (s:.vimrc for Amiga, ~/.vimrc otherwise)
	 * - second user vimrc file ($VIM/.vimrc for Dos)
	 * - environment variable EXINIT
	 * - user exrc file (s:.exrc for Amiga, ~/.exrc otherwise)
	 * - second user exrc file ($VIM/.exrc for Dos)
	 * The first that exists is used, the rest is ignored.
	 ','line_number':3261,'multiline':True]
['text':' When no .vimrc file was found: source defaults.vim.','line_number':3296,'multiline':False]
['text':'
	 * Read initialization commands from ".vimrc" or ".exrc" in current
	 * directory.  This is only done if the 'exrc' option is set.
	 * Because of security reasons we disallow shell and write commands
	 * now, except for Unix if the file is owned by the user or 'secure'
	 * option has been reset in environment of global ".exrc" or ".vimrc".
	 * Only do this if VIMRC_FILE is not the same as USR_VIMRC_FILE or
	 * SYS_VIMRC_FILE.
	 ','line_number':3303,'multiline':True]
['text':' If ".vimrc" file is not owned by user, set 'secure' mode.','line_number':3315,'multiline':False]
['text':' if ".exrc" is not owned by user set 'secure' mode','line_number':3341,'multiline':False]
['text':'
 * Setup to start using the GUI.  Exit with an error when not available.
 ','line_number':3368,'multiline':True]
['text':' start GUI a bit later','line_number':3375,'multiline':False]
['text':' NO_VIM_MAIN','line_number':3383,'multiline':False]
['text':'
 * Get an environment variable and execute it as Ex commands.
 * Returns FAIL if the environment variable was not executed, OK otherwise.
 ','line_number':3385,'multiline':True]
['text':' when TRUE, called for VIMINIT','line_number':3392,'multiline':False]
['text':'
 * Return TRUE if we are certain the user owns the file "fname".
 * Used for ".vimrc" and ".exrc".
 * Use both stat() and lstat() for extra security.
 ','line_number':3422,'multiline':True]
['text':' VMS','line_number':3433,'multiline':False]
['text':'
 * Give an error message main_errors["n"] and exit.
 ','line_number':3445,'multiline':True]
['text':' one of the ME_ defines','line_number':3450,'multiline':False]
['text':' extra argument or NULL','line_number':3451,'multiline':False]
['text':' kill us with CTRL-C here, if you like','line_number':3454,'multiline':False]
['text':' If this is a Windows GUI executable, show an error dialog box.','line_number':3457,'multiline':False]
['text':' Needed to show as error.','line_number':3462,'multiline':False]
['text':'
 * print a message with three spaces prepended and '\n' appended.
 ','line_number':3487,'multiline':True]
['text':'
 * Print messages for "vim -h" or "vim --help" and exit.
 ','line_number':3498,'multiline':True]
['text':' kill us with CTRL-C here, if you like','line_number':3516,'multiline':False]
['text':' FEAT_GUI_X11','line_number':3653,'multiline':False]
['text':' Gnome gives extra messages for --help if we continue, but not for -h.','line_number':3678,'multiline':False]
['text':'
 * Check the result of the ATTENTION dialog:
 * When "Quit" selected, exit Vim.
 * When "Recover" selected, recover the file.
 ','line_number':3689,'multiline':True]
['text':' NO_VIM_MAIN','line_number':3702,'multiline':False]
['text':' A relative path containing a "/" will become invalid when using ":cd",','line_number':3711,'multiline':False]
['text':' turn it into a full path.','line_number':3712,'multiline':False]
['text':' On MS-Windows "vim" should be expanded to "vim.exe", thus always do','line_number':3713,'multiline':False]
['text':' this.','line_number':3714,'multiline':False]
['text':' NO_VIM_MAIN','line_number':3748,'multiline':False]
