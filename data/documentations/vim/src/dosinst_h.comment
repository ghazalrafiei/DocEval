['text':' vi:set ts=8 sts=4 sw=4 noet:
 *
 * VIM - Vi IMproved	by Bram Moolenaar
 *
 * Do ":help uganda"  in Vim to read copying and usage conditions.
 * Do ":help credits" in Vim to see a list of people who contributed.
 * See README.txt for an overview of the Vim source code.
 ','line_number':1,'multiline':True]
['text':'
 * dosinst.h: Common code for dosinst.c and uninstall.c
 ','line_number':9,'multiline':True]
['text':' Running lint on Unix: Some things are missing.','line_number':30,'multiline':False]
['text':' ----------------------------------------','line_number':49,'multiline':False]
['text':' long enough to hold a file name path','line_number':52,'multiline':False]
['text':'
 * Modern way of creating registry entries, also works on 64 bit windows when
 * compiled as a 32 bit program.
 ','line_number':65,'multiline':True]
['text':' non-zero when running interactively','line_number':84,'multiline':False]
['text':'
 * Call malloc() and exit when out of memory.
 ','line_number':86,'multiline':True]
['text':'
 * The toupper() in Bcc 5.5 doesn't work, use our own implementation.
 ','line_number':103,'multiline':True]
['text':' Present a prompt, otherwise error messages can't be read.','line_number':119,'multiline':False]
['text':'
 * Check if this is a 64-bit OS.
 ','line_number':129,'multiline':True]
['text':' There appears to be a bug in FindExecutableA() on Windows NT.','line_number':155,'multiline':False]
['text':' Use FindExecutableW() instead...','line_number':156,'multiline':False]
['text':'
 * Call searchpath() and save the result in allocated memory, or return NULL.
 ','line_number':169,'multiline':True]
['text':'
 * Get the path to a requested Windows shell folder.
 *
 * Return FAIL on error, OK on success
 ','line_number':194,'multiline':True]
['text':'
     * The following code was successfully built with make_mvc.mak.
     * The resulting executable worked on Windows 95, Millennium Edition, and
     * 2000 Professional.  But it was changed after testing...
     ','line_number':204,'multiline':True]
['text':' Pointer to an Item ID list allocated below','line_number':209,'multiline':False]
['text':' Pointer to an IMalloc interface','line_number':210,'multiline':False]
['text':' Did this stuff before, use the same ID again.','line_number':237,'multiline':False]
['text':' Initialize pointer to IMalloc interface','line_number':245,'multiline':False]
['text':' Get an ITEMIDLIST corresponding to the folder code','line_number':253,'multiline':False]
['text':' Translate that ITEMIDLIST to a string','line_number':267,'multiline':False]
['text':' Free the data associated with pidl','line_number':270,'multiline':False]
['text':' Release the IMalloc interface','line_number':272,'multiline':False]
['text':' We probably get here for Windows 95: the "all users"','line_number':279,'multiline':False]
['text':' desktop/start menu entry doesn't exist.','line_number':280,'multiline':False]
['text':' If there is an alternative: verify we can write in this directory.','line_number':290,'multiline':False]
['text':' This should cause a retry when the "all users" directory exists but we','line_number':291,'multiline':False]
['text':' are a normal user and can't write there.','line_number':292,'multiline':False]
['text':'
     * Keep the found csidl for next time, so that we don't have to do the
     * write test every time.
     ','line_number':311,'multiline':True]
['text':'
 * List of targets.  The first one (index zero) is used for the default path
 * for the batch files.
 ','line_number':324,'multiline':True]
['text':' Vim exe name (without .exe)','line_number':332,'multiline':False]
['text':' batch file name','line_number':333,'multiline':False]
['text':' shortcut file name','line_number':334,'multiline':False]
['text':' exe file name','line_number':335,'multiline':False]
['text':' exe file name when using exearg','line_number':336,'multiline':False]
['text':' argument for vim.exe or gvim.exe','line_number':337,'multiline':False]
['text':' path to existing xxx.bat or NULL','line_number':338,'multiline':False]
['text':' path to existing xxx.exe or NULL','line_number':339,'multiline':False]
['text':' path of batch file to create; not','line_number':340,'multiline':False]
['text':' created when it's empty','line_number':341,'multiline':False]
['text':' Uninstall key for vim.bat, etc. ','line_number':363,'multiline':True]
['text':' This is only used for dosinst.c. ','line_number':376,'multiline':True]
['text':'
 * Run an external command and wait for it to finish.
 ','line_number':378,'multiline':True]
['text':' On WinNT, 'start' is a shell built-in for cmd.exe rather than an','line_number':388,'multiline':False]
['text':' executable (start.exe) like in Win9x.','line_number':389,'multiline':False]
['text':' There is a cmd.exe, so this might be Windows NT.  If it is,','line_number':393,'multiline':False]
['text':' we need to call cmd.exe explicitly.  If it is a later OS,','line_number':394,'multiline':False]
['text':' calling cmd.exe won't hurt if it is present.','line_number':395,'multiline':False]
['text':' Also, "start" on NT expects a window title argument.','line_number':396,'multiline':False]
['text':' Replace the slashes with backslashes.','line_number':397,'multiline':False]
['text':' No cmd.exe, just make the call and let the system handle it.','line_number':405,'multiline':False]
['text':'
 * Append a backslash to "name" if there isn't one yet.
 ','line_number':412,'multiline':True]
['text':'
 * The normal chdir() does not change the default drive.  This one does.
 ','line_number':424,'multiline':True]
['text':'
 * Change directory to "path".
 * Return 0 for success, -1 for failure.
 ','line_number':435,'multiline':True]
['text':' just checking...','line_number':442,'multiline':False]
['text':' has a drive name','line_number':444,'multiline':False]
['text':' invalid drive name','line_number':447,'multiline':False]
['text':' drive name only','line_number':450,'multiline':False]
['text':' let the normal chdir() do the rest','line_number':452,'multiline':False]
['text':'
 * Expand the executable name into a full path name.
 ','line_number':455,'multiline':True]
['text':' Only GetModuleFileName() will get the long file name path.','line_number':461,'multiline':False]
['text':' GetFullPathName() may still use the short (FAT) name.','line_number':462,'multiline':False]
['text':'
 * Remove the tail from a file or directory name.
 * Puts a NUL on the last '/' or '\'.
 ','line_number':468,'multiline':True]
['text':' top of the installation dir, where the','line_number':486,'multiline':False]
['text':' install.exe is located, E.g.:','line_number':487,'multiline':False]
['text':' "c:\vim\vim60"','line_number':488,'multiline':False]
['text':' index in installdir[] where "vim60" starts','line_number':489,'multiline':False]
['text':' system drive or "c:\"','line_number':490,'multiline':False]
['text':'
 * Setup for using this program.
 * Sets "installdir[]".
 ','line_number':492,'multiline':True]
['text':' Find out the full path of our executable.','line_number':499,'multiline':False]
['text':' remove the tail, the executable name "install.exe"','line_number':505,'multiline':False]
['text':' change to the installdir','line_number':508,'multiline':False]
['text':' Find the system drive.  Only used for searching the Vim executable, not','line_number':511,'multiline':False]
['text':' very important.','line_number':512,'multiline':False]
