['text':' vi:set ts=8 sts=4 sw=4 noet:
 *
 * VIM - Vi IMproved	by Bram Moolenaar
 *
 * Do ":help uganda"  in Vim to read copying and usage conditions.
 * Do ":help credits" in Vim to see a list of people who contributed.
 * See README.txt for an overview of the Vim source code.
 ','line_number':1,'multiline':True]
['text':'
 * diff.c: code for diff'ing two, three or four buffers.
 *
 * There are three ways to diff:
 * - Shell out to an external diff program, using files.
 * - Use the compiled-in xdiff library.
 * - Let 'diffexpr' do the work, using files.
 ','line_number':10,'multiline':True]
['text':' using diff structs, don't change them','line_number':24,'multiline':False]
['text':' ex_diffupdate needs to be called','line_number':25,'multiline':False]
['text':' flags obtained from the 'diffopt' option','line_number':27,'multiline':False]
['text':' display filler lines','line_number':28,'multiline':False]
['text':' ignore empty lines','line_number':29,'multiline':False]
['text':' ignore case','line_number':30,'multiline':False]
['text':' ignore change in white space','line_number':31,'multiline':False]
['text':' ignore all white space changes','line_number':32,'multiline':False]
['text':' ignore change in white space at EOL','line_number':33,'multiline':False]
['text':' horizontal splits','line_number':34,'multiline':False]
['text':' vertical splits','line_number':35,'multiline':False]
['text':' diffoff when hidden','line_number':36,'multiline':False]
['text':' use internal xdiff algorithm','line_number':37,'multiline':False]
['text':' diffoff when closing window','line_number':38,'multiline':False]
['text':' follow the wrap option','line_number':39,'multiline':False]
['text':' length of line in diff file','line_number':45,'multiline':False]
['text':' TRUE when "diff -a" works, FALSE when it','line_number':47,'multiline':False]
['text':' doesn't work, MAYBE when not checked yet','line_number':48,'multiline':False]
['text':' TRUE when "diff --binary" works, FALSE','line_number':50,'multiline':False]
['text':' when it doesn't work, MAYBE when not','line_number':51,'multiline':False]
['text':' checked yet','line_number':52,'multiline':False]
['text':' used for diff input','line_number':55,'multiline':False]
['text':' used for external diff','line_number':57,'multiline':False]
['text':' used for internal diff','line_number':58,'multiline':False]
['text':' used for diff result','line_number':61,'multiline':False]
['text':' used for external diff','line_number':63,'multiline':False]
['text':' used for internal diff','line_number':64,'multiline':False]
['text':' used for recording hunks from xdiff','line_number':67,'multiline':False]
['text':' two diff inputs and one result','line_number':75,'multiline':False]
['text':' original file input','line_number':77,'multiline':False]
['text':' new file input','line_number':78,'multiline':False]
['text':' diff result','line_number':79,'multiline':False]
['text':' using internal diff','line_number':80,'multiline':False]
['text':'
 * Called when deleting or unloading a buffer: No longer make a diff with it.
 ','line_number':105,'multiline':True]
['text':' don't redraw right away, more might change or buffer state','line_number':123,'multiline':False]
['text':' is invalid right now','line_number':124,'multiline':False]
['text':'
 * Check if the current buffer should be added to or removed from the list of
 * diff buffers.
 ','line_number':132,'multiline':True]
['text':' When there is no window showing a diff for this buffer, remove','line_number':144,'multiline':False]
['text':' it from the diffs.','line_number':145,'multiline':False]
['text':'
 * Add a buffer to make diffs for.
 * Call this when a new buffer is being edited in the current window where
 * 'diff' is set.
 * Marks the current buffer as being part of the diff and requiring updating.
 * This must be done before any autocmd, because a command may use info
 * about the screen contents.
 ','line_number':164,'multiline':True]
['text':' It's already there.','line_number':178,'multiline':False]
['text':'
 * Remove all buffers to make diffs for.
 ','line_number':192,'multiline':True]
['text':'
 * Find buffer "buf" in the list of diff buffers for the current tab page.
 * Return its index or DB_COUNT if not found.
 ','line_number':209,'multiline':True]
['text':'
 * Find buffer "buf" in the list of diff buffers for tab page "tp".
 * Return its index or DB_COUNT if not found.
 ','line_number':224,'multiline':True]
['text':'
 * Mark the diff info involving buffer "buf" as invalid, it will be updated
 * when info is requested.
 ','line_number':239,'multiline':True]
['text':'
 * Called by mark_adjust(): update line numbers in "curbuf".
 ','line_number':261,'multiline':True]
['text':' Handle all tab pages that use the current buffer in a diff.','line_number':274,'multiline':False]
['text':'
 * Update line numbers in tab page "tp" for "curbuf" with index "idx".
 * This attempts to update the changes as much as possible:
 * When inserting/deleting lines outside of existing change blocks, create a
 * new change block and update the line numbers in following blocks.
 * When inserting/deleting lines in existing change blocks, update them.
 ','line_number':283,'multiline':True]
['text':' lnum of remaining deletion','line_number':306,'multiline':False]
['text':' Will update diffs before redrawing.  Set _invalid to update the','line_number':311,'multiline':False]
['text':' diffs themselves, set _update to also update folds properly just','line_number':312,'multiline':False]
['text':' before redrawing.','line_number':313,'multiline':False]
['text':' Do update marks here, it is needed for :%diffput.','line_number':314,'multiline':False]
['text':' mark_adjust(99, MAXLNUM, 9, 0): insert lines','line_number':321,'multiline':False]
['text':' mark_adjust(99, 98, MAXLNUM, 9): a change that inserts lines','line_number':327,'multiline':False]
['text':' mark_adjust(98, 99, MAXLNUM, -2): delete lines','line_number':333,'multiline':False]
['text':' If the change is after the previous diff block and before the next','line_number':342,'multiline':False]
['text':' diff block, thus not touching an existing change, create a new diff','line_number':343,'multiline':False]
['text':' block.  Don't do this when ex_diffgetput() is busy.','line_number':344,'multiline':False]
['text':' if at end of the list, quit','line_number':370,'multiline':False]
['text':'
	 * Check for these situations:
	 *	  1  2	3
	 *	  1  2	3
	 * line1     2	3  4  5
	 *	     2	3  4  5
	 *	     2	3  4  5
	 * line2     2	3  4  5
	 *		3     5  6
	 *		3     5  6
	 ','line_number':374,'multiline':True]
['text':' compute last line of this change','line_number':385,'multiline':False]
['text':' 1. change completely above line1: nothing to do','line_number':388,'multiline':False]
['text':' 6. change below line2: only adjust for amount_after; also when','line_number':391,'multiline':False]
['text':' "deleted" became zero when deleted all lines between two diffs','line_number':392,'multiline':False]
['text':' nothing left to change','line_number':396,'multiline':False]
['text':' 2. 3. 4. 5.: inserted/deleted lines touching this diff.','line_number':403,'multiline':False]
['text':' 4. delete all lines of diff','line_number':411,'multiline':False]
['text':' delete continues in next diff, only do','line_number':415,'multiline':False]
['text':' lines until that one','line_number':416,'multiline':False]
['text':' 5. delete lines at or just before top of diff','line_number':428,'multiline':False]
['text':' 2. delete at end of diff','line_number':440,'multiline':False]
['text':' delete continues in next diff, only do','line_number':445,'multiline':False]
['text':' lines until that one','line_number':446,'multiline':False]
['text':' 3. delete lines inside the diff','line_number':458,'multiline':False]
['text':' inserted lines somewhere in this diff','line_number':478,'multiline':False]
['text':' inserted lines somewhere above this diff','line_number':483,'multiline':False]
['text':' Check if inserted lines are equal, may reduce the','line_number':488,'multiline':False]
['text':' size of the diff.  TODO: also check for equal lines','line_number':489,'multiline':False]
['text':' in the middle and perhaps split the block.','line_number':490,'multiline':False]
['text':' check if this block touches the previous one, may merge them.','line_number':495,'multiline':False]
['text':' Advance to next entry.','line_number':508,'multiline':False]
['text':' All counts are zero, remove this entry.','line_number':518,'multiline':False]
['text':' Advance to next entry.','line_number':534,'multiline':False]
['text':' Don't redraw right away, this updates the diffs, which can be slow.','line_number':543,'multiline':False]
['text':' Need to recompute the scroll binding, may remove or add filler','line_number':546,'multiline':False]
['text':' lines (e.g., when adding lines above w_topline). But it's slow when','line_number':547,'multiline':False]
['text':' making many changes, postpone until redrawing.','line_number':548,'multiline':False]
['text':'
 * Allocate a new diff block and link it between "dprev" and "dp".
 ','line_number':553,'multiline':True]
['text':'
 * Check if the diff block "dp" can be made smaller for lines at the start and
 * end that are equal.  Called after inserting lines.
 * This may result in a change where all buffers have zero lines, the caller
 * must take care of removing it.
 ','line_number':573,'multiline':True]
['text':' Find the first buffers, use it as the original, compare the other','line_number':588,'multiline':False]
['text':' buffer lines against this one.','line_number':589,'multiline':False]
['text':' safety check','line_number':593,'multiline':False]
['text':' First check lines at the top, then at the bottom.','line_number':599,'multiline':False]
['text':' Repeat until a line is found which is different or the number of','line_number':604,'multiline':False]
['text':' lines has become zero.','line_number':605,'multiline':False]
['text':' Copy the line, the next ml_get() will invalidate it.','line_number':608,'multiline':False]
['text':' if other buffer doesn't have this line, it was inserted','line_number':621,'multiline':False]
['text':' Stop when a line isn't equal in all diff buffers.','line_number':630,'multiline':False]
['text':' Line matched in all buffers, remove it from the diff.','line_number':634,'multiline':False]
['text':'
 * Check if a diff block doesn't contain invalid line numbers.
 * This can happen when the diff program returns invalid results.
 ','line_number':649,'multiline':True]
['text':'
 * Mark all diff buffers in the current tab page for redraw.
 ','line_number':666,'multiline':True]
['text':' also recompute the folds','line_number':671,'multiline':False]
['text':' when closing windows or wiping buffers skip invalid window','line_number':682,'multiline':False]
['text':' A change may have made filler lines invalid, need to take care of','line_number':693,'multiline':False]
['text':' that for other windows.','line_number':694,'multiline':False]
['text':' The current window was set to use the maximum number of filler','line_number':715,'multiline':False]
['text':' lines, may need to reduce them.','line_number':716,'multiline':False]
['text':' The other window was set to use the maximum number of filler','line_number':719,'multiline':False]
['text':' lines, may need to reduce them.','line_number':720,'multiline':False]
['text':'
 * Write buffer "buf" to a memory buffer.
 * Return FAIL for failure.
 ','line_number':743,'multiline':True]
['text':' xdiff requires one big block of memory with all the text.','line_number':755,'multiline':False]
['text':' Allocating memory failed.  This can happen, because we try to read','line_number':761,'multiline':False]
['text':' the whole buffer text into memory.  Set the failed flag, the diff','line_number':762,'multiline':False]
['text':' will be retried with external diff.  The flag is never reset.','line_number':763,'multiline':False]
['text':' xdiff doesn't support ignoring case, fold-case the text.','line_number':792,'multiline':False]
['text':' TODO: handle byte length difference','line_number':798,'multiline':False]
['text':'
 * Write buffer "buf" to file or memory buffer.
 * Return FAIL for failure.
 ','line_number':817,'multiline':True]
['text':' Always use 'fileformat' set to "unix".','line_number':831,'multiline':False]
['text':' Writing the buffer is an implementation detail of performing the diff,','line_number':835,'multiline':False]
['text':' so it shouldn't update the '[ and '] marks.','line_number':836,'multiline':False]
['text':'
 * Update the diffs for all buffers involved.
 ','line_number':847,'multiline':True]
['text':' "eap" can be NULL','line_number':854,'multiline':False]
['text':' We need three temp file names.','line_number':865,'multiline':False]
['text':' Check external diff is actually working.','line_number':875,'multiline':False]
['text':' :diffupdate!','line_number':879,'multiline':False]
['text':' Write the first buffer to a tempfile or mmfile_t.','line_number':888,'multiline':False]
['text':' Make a difference between the first buffer and every other.','line_number':893,'multiline':False]
['text':' skip buffer that isn't loaded','line_number':898,'multiline':False]
['text':' Write the other buffer and diff with the first one.','line_number':900,'multiline':False]
['text':' Read the diff output and add each entry to the diff list.','line_number':906,'multiline':False]
['text':'
 * Return TRUE if the options are set to use the internal diff library.
 * Note that if the internal diff failed for one of the buffers, the external
 * diff will be used anyway.
 ','line_number':920,'multiline':True]
['text':'
 * Return TRUE if the internal diff failed for one of the diff buffers.
 ','line_number':935,'multiline':True]
['text':' Only need to do something when there is another buffer.','line_number':943,'multiline':False]
['text':'
 * Completely update the diffs for the buffers involved.
 * When using the external "diff" command the buffers are written to a file,
 * also for unmodified buffers (the file could have been produced by
 * autocommands, e.g. the netrw plugin).
 ','line_number':951,'multiline':True]
['text':' "eap" can be NULL','line_number':958,'multiline':False]
['text':' Delete all diffblocks.','line_number':971,'multiline':False]
['text':' Use the first buffer as the original text.','line_number':975,'multiline':False]
['text':' Only need to do something when there is another buffer.','line_number':982,'multiline':False]
['text':' Only use the internal method if it did not fail for one of the buffers.','line_number':989,'multiline':False]
['text':' Internal diff failed, use external diff instead.','line_number':996,'multiline':False]
['text':' force updating cursor position on screen','line_number':1001,'multiline':False]
['text':' A redraw is needed if there were diffs and they were cleared, or there','line_number':1005,'multiline':False]
['text':' are diffs now, which means they got updated.','line_number':1006,'multiline':False]
['text':'
 * Do a quick test if "diff" really works.  Otherwise it looks like there
 * are no differences.  Can't use the return value, it's non-zero when
 * there are differences.
 ','line_number':1014,'multiline':True]
['text':' May try twice, first with "-a" and then without.','line_number':1026,'multiline':False]
['text':' For normal diff there must be a line that contains','line_number':1057,'multiline':False]
['text':' "1c1".  For unified diff "@@ -1 +1 @@".','line_number':1058,'multiline':False]
['text':' When using 'diffexpr' break here.','line_number':1074,'multiline':False]
['text':' If the "-a" argument works, also check if "--binary" works.','line_number':1080,'multiline':False]
['text':' Tried --binary, but it failed. "-a" works though.','line_number':1089,'multiline':False]
['text':' If we checked if "-a" works already, break here.','line_number':1095,'multiline':False]
['text':' If "-a" works break here, otherwise retry without "-a".','line_number':1100,'multiline':False]
['text':'
 * Invoke the xdiff function.
 ','line_number':1118,'multiline':True]
['text':' don't need any diff_context here','line_number':1143,'multiline':False]
['text':'
 * Make a diff between files "tmp_orig" and "tmp_new", results in "tmp_diff".
 * return OK or FAIL;
 ','line_number':1156,'multiline':True]
['text':' Use 'diffexpr' to generate the diff file.','line_number':1172,'multiline':False]
['text':' Use xdiff for generating the diff.','line_number':1178,'multiline':False]
['text':' We don't want $DIFF_OPTIONS to get in the way.','line_number':1188,'multiline':False]
['text':' Build the diff command and execute it.  Always use -a, binary','line_number':1192,'multiline':False]
['text':' differences are of no use.  Ignore errors, diff returns','line_number':1193,'multiline':False]
['text':' non-zero when differences have been found.','line_number':1194,'multiline':False]
['text':' avoid ShellCmdPost stuff','line_number':1209,'multiline':False]
['text':'
 * Create a new version of a file from the current buffer and a diff file.
 * The buffer is written to a file, also for unmodified buffers (the file
 * could have been produced by autocommands, e.g. the netrw plugin).
 ','line_number':1216,'multiline':True]
['text':' name of original temp file','line_number':1224,'multiline':False]
['text':' name of patched temp file','line_number':1225,'multiline':False]
['text':' name of patched file buffer','line_number':1229,'multiline':False]
['text':' operation cancelled','line_number':1248,'multiline':False]
['text':' don't let do_ecmd() browse again','line_number':1250,'multiline':False]
['text':' We need two temp file names.','line_number':1254,'multiline':False]
['text':' Write the current buffer to "tmp_orig".','line_number':1260,'multiline':False]
['text':' Get the absolute path of the patchfile, changing directory below.','line_number':1267,'multiline':False]
['text':' Temporarily chdir to /tmp, to avoid patching files in the current','line_number':1283,'multiline':False]
['text':' directory when the patch file contains more than one patch.  When we','line_number':1284,'multiline':False]
['text':' have our own temp dir use that instead, it will be cleaned up when we','line_number':1285,'multiline':False]
['text':' exit (any .rej files created).  Don't change directory if we can't','line_number':1286,'multiline':False]
['text':' return to the current.','line_number':1287,'multiline':False]
['text':' Use 'patchexpr' to generate the new file.','line_number':1304,'multiline':False]
['text':' Build the patch command and execute it.  Ignore errors.  Switch to','line_number':1316,'multiline':False]
['text':' cooked mode to allow the user to respond to prompts.','line_number':1317,'multiline':False]
['text':' Avoid ShellCmdPost stuff','line_number':1320,'multiline':False]
['text':' patch probably has written over the screen','line_number':1334,'multiline':False]
['text':' Delete any .orig or .rej file created.','line_number':1337,'multiline':False]
['text':' Only continue if the output file was created.','line_number':1345,'multiline':False]
['text':' don't use a new tab page, each tab page has its own diffs','line_number':1361,'multiline':False]
['text':' Pretend it was a ":split fname" command','line_number':1366,'multiline':False]
['text':' check that split worked and editing tmp_new','line_number':1371,'multiline':False]
['text':' Set 'diff', 'scrollbind' on and 'wrap' off.','line_number':1374,'multiline':False]
['text':' do a ":file filename.new" on the patched buffer','line_number':1380,'multiline':False]
['text':' Do filetype detection with the new name.','line_number':1384,'multiline':False]
['text':'
 * Split the window and edit another file, setting options to show the diffs.
 ','line_number':1412,'multiline':True]
['text':' Need to compute w_fraction when no redraw happened yet.','line_number':1425,'multiline':False]
['text':' don't use a new tab page, each tab page has its own diffs','line_number':1429,'multiline':False]
['text':' Pretend it was a ":split fname" command','line_number':1435,'multiline':False]
['text':' split didn't work','line_number':1440,'multiline':False]
['text':' Set 'diff', 'scrollbind' on and 'wrap' off.','line_number':1443,'multiline':False]
['text':' Move the cursor position to that of the old window.','line_number':1450,'multiline':False]
['text':' Now that lines are folded scroll to show the cursor at the same','line_number':1454,'multiline':False]
['text':' relative position.','line_number':1455,'multiline':False]
['text':'
 * Set options to show diffs for the current window.
 ','line_number':1459,'multiline':True]
['text':' Set 'diff', 'scrollbind' on and 'wrap' off.','line_number':1465,'multiline':False]
['text':'
 * Set options in window "wp" for diff mode.
 ','line_number':1483,'multiline':True]
['text':' Add buffer to diff.','line_number':1489,'multiline':False]
['text':' close the manually opened folds','line_number':1494,'multiline':False]
['text':' Use 'scrollbind' and 'cursorbind' when available','line_number':1500,'multiline':False]
['text':' make sure topline is not halfway a fold','line_number':1532,'multiline':False]
['text':' Save the current values, to be restored in ex_diffoff().','line_number':1537,'multiline':False]
['text':'
 * Set options not to show diffs.  For the current window or all windows.
 * Only in the current tab page.
 ','line_number':1547,'multiline':True]
['text':' Set 'diff' off. If option values were saved in','line_number':1561,'multiline':False]
['text':' diff_win_options(), restore the ones whose settings seem to have','line_number':1562,'multiline':False]
['text':' been left over from diff mode.','line_number':1563,'multiline':False]
['text':' Only restore 'foldenable' when 'foldmethod' is not','line_number':1588,'multiline':False]
['text':' "manual", otherwise we continue to show the diff folds.','line_number':1589,'multiline':False]
['text':' remove filler lines','line_number':1597,'multiline':False]
['text':' make sure topline is not halfway a fold and cursor is','line_number':1600,'multiline':False]
['text':' invalidated','line_number':1601,'multiline':False]
['text':' Note: 'sbo' is not restored, it's a global option.','line_number':1604,'multiline':False]
['text':' Also remove hidden buffers from the list.','line_number':1610,'multiline':False]
['text':' Remove "hor" from 'scrollopt' if there are no diff windows left.','line_number':1622,'multiline':False]
['text':'
 * Read the diff output and add each entry to the diff list.
 ','line_number':1627,'multiline':True]
['text':' idx of original file','line_number':1632,'multiline':False]
['text':' idx of new file','line_number':1633,'multiline':False]
['text':' diff output','line_number':1634,'multiline':False]
['text':' only need to hold the diff line','line_number':1642,'multiline':False]
['text':' block "*dp" not set yet','line_number':1646,'multiline':False]
['text':' init to avoid gcc warning','line_number':1647,'multiline':False]
['text':' did last line','line_number':1685,'multiline':False]
['text':' did last line','line_number':1693,'multiline':False]
['text':' end of file','line_number':1699,'multiline':False]
['text':' Determine diff style.','line_number':1705,'multiline':False]
['text':' ed like diff looks like this:','line_number':1706,'multiline':False]
['text':' {first}[,{last}]c{first}[,{last}]','line_number':1707,'multiline':False]
['text':' {first}a{first}[,{last}]','line_number':1708,'multiline':False]
['text':' {first}[,{last}]d{first}','line_number':1709,'multiline':False]
['text':'','line_number':1710,'multiline':False]
['text':' unified diff looks like this:','line_number':1711,'multiline':False]
['text':' --- file1       2018-03-20 13:23:35.783153140 +0100','line_number':1712,'multiline':False]
['text':' +++ file2       2018-03-20 13:23:41.183156066 +0100','line_number':1713,'multiline':False]
['text':' @@ -1,3 +1,5 @@','line_number':1714,'multiline':False]
['text':' Format not recognized yet, skip over this line.  Cygwin','line_number':1726,'multiline':False]
['text':' diff may put a warning at the start of the file.','line_number':1727,'multiline':False]
['text':' not the start of a diff block','line_number':1734,'multiline':False]
['text':' not the start of a diff block','line_number':1741,'multiline':False]
['text':' Go over blocks before the change, for which orig and new are equal.','line_number':1752,'multiline':False]
['text':' Copy blocks from orig to new.','line_number':1753,'multiline':False]
['text':' New block overlaps with existing block(s).','line_number':1770,'multiline':False]
['text':' First find last block that overlaps.','line_number':1771,'multiline':False]
['text':' If the newly found block starts before the old one, set the','line_number':1777,'multiline':False]
['text':' start back a number of lines.','line_number':1778,'multiline':False]
['text':' new block inside existing one, adjust new block','line_number':1790,'multiline':False]
['text':' second overlap of new block with existing block','line_number':1795,'multiline':False]
['text':' Adjust the size of the block to include all the lines to the','line_number':1800,'multiline':False]
['text':' end of the existing block or the new diff, whatever ends last.','line_number':1801,'multiline':False]
['text':' new change ends in existing block, adjust the end if not','line_number':1806,'multiline':False]
['text':' done already','line_number':1807,'multiline':False]
['text':' Delete the diff blocks that have been merged into one.','line_number':1817,'multiline':False]
['text':' Allocate a new diffblock.','line_number':1829,'multiline':False]
['text':' Set values for other buffers, these must be equal to the','line_number':1839,'multiline':False]
['text':' original buffer, otherwise there would have been a change','line_number':1840,'multiline':False]
['text':' already.','line_number':1841,'multiline':False]
['text':' "*dp" has been set','line_number':1846,'multiline':False]
['text':' for remaining diff blocks orig and new are equal','line_number':1849,'multiline':False]
['text':'
 * Copy an entry at "dp" from "idx_orig" to "idx_new".
 ','line_number':1867,'multiline':True]
['text':'
 * Clear the list of diffblocks for tab page "tp".
 ','line_number':1888,'multiline':True]
['text':'
 * Check diff status for line "lnum" in buffer "buf":
 * Returns 0 for nothing special
 * Returns -1 for a line that should be highlighted as changed.
 * Returns -2 for a line that should be highlighted as added/deleted.
 * Returns > 0 for inserting that many filler lines above it (never happens
 * when 'diffopt' doesn't contain "filler").
 * This should only be used for windows where 'diff' is set.
 ','line_number':1904,'multiline':True]
['text':' index in tp_diffbuf[] for this buffer','line_number':1916,'multiline':False]
['text':' update after a big change','line_number':1924,'multiline':False]
['text':' no diffs at all','line_number':1926,'multiline':False]
['text':' safety check: "lnum" must be a buffer line','line_number':1929,'multiline':False]
['text':' no diffs for buffer "buf"','line_number':1935,'multiline':False]
['text':' A closed fold never has filler lines.','line_number':1938,'multiline':False]
['text':' search for a change that includes "lnum" in the list of diffblocks.','line_number':1943,'multiline':False]
['text':' Changed or inserted line.  If the other buffers have a count of','line_number':1954,'multiline':False]
['text':' zero, the lines were inserted.  If the other buffers have the same','line_number':1955,'multiline':False]
['text':' count, check if the lines are identical.','line_number':1956,'multiline':False]
['text':' nr of lines changed.','line_number':1966,'multiline':False]
['text':' Compare all lines.  If they are equal the lines were inserted','line_number':1972,'multiline':False]
['text':' in some buffers, deleted in others, but not changed.','line_number':1973,'multiline':False]
['text':' If there is no buffer with zero lines then there is no difference','line_number':1980,'multiline':False]
['text':' any longer.  Happens when making a change (or undo) that removes','line_number':1981,'multiline':False]
['text':' the difference.  Can't remove the entry here, we might be halfway','line_number':1982,'multiline':False]
['text':' updating the window.  Just report the text as unchanged.  Other','line_number':1983,'multiline':False]
['text':' windows might still show the change though.','line_number':1984,'multiline':False]
['text':' If 'diffopt' doesn't contain "filler", return 0.','line_number':1990,'multiline':False]
['text':' Insert filler lines above the line just below the change.  Will return','line_number':1994,'multiline':False]
['text':' 0 when this buf had the max count.','line_number':1995,'multiline':False]
['text':'
 * Compare two entries in diff "*dp" and return TRUE if they are equal.
 ','line_number':2003,'multiline':True]
['text':'
 * Compare the characters at "p1" and "p2".  If they are equal (possibly
 * ignoring case) return TRUE and set "len" to the number of bytes.
 ','line_number':2032,'multiline':True]
['text':'
 * Compare strings "s1" and "s2" according to 'diffopt'.
 * Return non-zero when they are different.
 ','line_number':2064,'multiline':True]
['text':' Ignore white space changes and possibly ignore case.','line_number':2086,'multiline':False]
['text':' Ignore trailing white space.','line_number':2106,'multiline':False]
['text':'
 * Return the number of filler lines above "lnum".
 ','line_number':2114,'multiline':True]
['text':' be quick when there are no filler lines','line_number':2122,'multiline':False]
['text':'
 * Set the topline of "towin" to match the position in "fromwin", so that they
 * show the same diff'ed lines.
 ','line_number':2131,'multiline':True]
['text':' safety check','line_number':2148,'multiline':False]
['text':' update after a big change','line_number':2151,'multiline':False]
['text':' search for a change that includes "lnum" in the list of diffblocks.','line_number':2155,'multiline':False]
['text':' After last change, compute topline relative to end of file; no','line_number':2161,'multiline':False]
['text':' filler lines.','line_number':2162,'multiline':False]
['text':' Find index for "towin".','line_number':2168,'multiline':False]
['text':' safety check','line_number':2171,'multiline':False]
['text':' Inside a change: compute filler lines. With three or more','line_number':2176,'multiline':False]
['text':' buffers we need to know the largest count.','line_number':2177,'multiline':False]
['text':' same number of lines: use same filler count','line_number':2186,'multiline':False]
['text':' more lines in towin and fromwin doesn't show diff','line_number':2193,'multiline':False]
['text':' lines, only filler lines','line_number':2194,'multiline':False]
['text':' towin also only shows filler lines','line_number':2197,'multiline':False]
['text':' towin still has some diff lines to show','line_number':2203,'multiline':False]
['text':' less lines in towin and no diff lines to show: compute','line_number':2211,'multiline':False]
['text':' filler lines','line_number':2212,'multiline':False]
['text':' fromwin is also out of diff lines','line_number':2217,'multiline':False]
['text':' fromwin has some diff lines','line_number':2220,'multiline':False]
['text':' safety check (if diff info gets outdated strange things may happen)','line_number':2228,'multiline':False]
['text':' When w_topline changes need to recompute w_botline and cursor position','line_number':2241,'multiline':False]
['text':'
 * This is called when 'diffopt' is changed.
 ','line_number':2252,'multiline':True]
['text':' Note: Keep this in sync with p_dip_values','line_number':2269,'multiline':False]
['text':' Note: Keep this in sync with p_dip_algorithm_values.','line_number':2347,'multiline':False]
['text':' Can't have both "horizontal" and "vertical".','line_number':2381,'multiline':False]
['text':' If flags were added or removed, or the algorithm was changed, need to','line_number':2385,'multiline':False]
['text':' update the diff.','line_number':2386,'multiline':False]
['text':' recompute the scroll binding with the new option value, may','line_number':2398,'multiline':False]
['text':' remove or add filler lines','line_number':2399,'multiline':False]
['text':'
 * Return TRUE if 'diffopt' contains "horizontal".
 ','line_number':2405,'multiline':True]
['text':'
 * Return TRUE if 'diffopt' contains "hiddenoff".
 ','line_number':2414,'multiline':True]
['text':'
 * Return TRUE if 'diffopt' contains "closeoff".
 ','line_number':2423,'multiline':True]
['text':'
 * Find the difference within a changed line.
 * Returns TRUE if the line was added, no other buffer has it.
 ','line_number':2432,'multiline':True]
['text':' first char of the change','line_number':2440,'multiline':False]
['text':' last char of the change','line_number':2441,'multiline':False]
['text':' Make a copy of the line, the next ml_get() will invalidate it.','line_number':2455,'multiline':False]
['text':' cannot happen','line_number':2461,'multiline':False]
['text':' search for a change that includes "lnum" in the list of diffblocks.','line_number':2467,'multiline':False]
['text':' Skip lines that are not in the other change (filler lines).','line_number':2482,'multiline':False]
['text':' Search for start of difference','line_number':2489,'multiline':False]
['text':' Move back to first byte of character in both lines (may','line_number':2514,'multiline':False]
['text':' have "nn^" in line_org and "n^ in line_new).','line_number':2515,'multiline':False]
['text':' Search for end of difference, if any.','line_number':2522,'multiline':False]
['text':'
 * Return TRUE if line "lnum" is not close to a diff block, this line should
 * be in a fold.
 * Return FALSE if there are no diff blocks at all in this window.
 ','line_number':2566,'multiline':True]
['text':' Return if 'diff' isn't set.','line_number':2579,'multiline':False]
['text':' return here if there are no diffs in the window','line_number':2591,'multiline':False]
['text':' update after a big change','line_number':2596,'multiline':False]
['text':' Return if there are no diff blocks.  All lines will be folded.','line_number':2598,'multiline':False]
['text':' If this change is below the line there can't be any further match.','line_number':2604,'multiline':False]
['text':' If this change ends before the line we have a match.','line_number':2607,'multiline':False]
['text':'
 * "dp" and "do" commands.
 ','line_number':2615,'multiline':True]
['text':'
 * Return TRUE if "diff" appears in the list of diff blocks of the current tab.
 ','line_number':2648,'multiline':True]
['text':'
 * ":diffget"
 * ":diffput"
 ','line_number':2662,'multiline':True]
['text':' Find the current buffer in the list of diff buffers.','line_number':2689,'multiline':False]
['text':' No argument: Find the other buffer in the list of diff buffers.','line_number':2699,'multiline':False]
['text':' Check that there isn't a third buffer in the list','line_number':2718,'multiline':False]
['text':' Buffer number or pattern given.  Ignore trailing white space.','line_number':2730,'multiline':False]
['text':' digits only','line_number':2736,'multiline':False]
['text':' error message already given','line_number':2742,'multiline':False]
['text':' nothing to do','line_number':2751,'multiline':False]
['text':' When no range given include the line above or below the cursor.','line_number':2762,'multiline':False]
['text':' Make it possible that ":diffget" on the last line gets line below','line_number':2765,'multiline':False]
['text':' the cursor line when there is no difference above the cursor.','line_number':2766,'multiline':False]
['text':' Need to make the other buffer the current buffer to be able to make','line_number':2785,'multiline':False]
['text':' changes in it.','line_number':2786,'multiline':False]
['text':' Set curwin/curbuf to buf and save a few things.','line_number':2787,'multiline':False]
['text':' Could not find a window for this buffer, the rest is likely to','line_number':2790,'multiline':False]
['text':' fail.','line_number':2791,'multiline':False]
['text':' May give the warning for a changed buffer here, which can trigger the','line_number':2795,'multiline':False]
['text':' FileChangedRO autocommand, which may do nasty things and mess','line_number':2796,'multiline':False]
['text':' everything up.','line_number':2797,'multiline':False]
['text':' past the range that was specified','line_number':2812,'multiline':False]
['text':' Inside the specified range and saving for undo worked.','line_number':2820,'multiline':False]
['text':' A range was specified: check if lines need to be skipped.','line_number':2825,'multiline':False]
['text':' range starts below start of current diff block','line_number':2829,'multiline':False]
['text':' range ends above end of current/from diff block','line_number':2848,'multiline':False]
['text':' :diffput','line_number':2849,'multiline':False]
['text':' :diffget','line_number':2855,'multiline':False]
['text':' remember deleting the last line of the buffer','line_number':2871,'multiline':False]
['text':' Added the first line into an empty buffer, need to','line_number':2892,'multiline':False]
['text':' delete the dummy empty line.','line_number':2893,'multiline':False]
['text':' Check if there are any other buffers and if the diff is','line_number':2904,'multiline':False]
['text':' equal in them.','line_number':2905,'multiline':False]
['text':' delete the diff entry, the buffers are now equal here','line_number':2913,'multiline':False]
['text':' Adjust marks.  This will change the following entries!','line_number':2925,'multiline':False]
['text':' Adjust the cursor position if it's in/after the changed','line_number':2929,'multiline':False]
['text':' lines.','line_number':2930,'multiline':False]
['text':' Diff is deleted, update folds in other windows.','line_number':2941,'multiline':False]
['text':' mark_adjust() may have made "dp" invalid.  We don't know where','line_number':2948,'multiline':False]
['text':' to continue then, bail out.','line_number':2949,'multiline':False]
['text':' mark_adjust() may have changed the count in a wrong way','line_number':2954,'multiline':False]
['text':' When changing the current buffer, keep track of line numbers','line_number':2957,'multiline':False]
['text':' If before the range or not deleted, go to next diff.','line_number':2962,'multiline':False]
['text':' restore curwin/curbuf and a few other things','line_number':2970,'multiline':False]
['text':' Syncing undo only works for the current buffer, but we change','line_number':2973,'multiline':False]
['text':' another buffer.  Sync undo if the command was typed.  This isn't','line_number':2974,'multiline':False]
['text':' 100% right when ":diffput" is used in a function or mapping.','line_number':2975,'multiline':False]
['text':' Check that the cursor is on a valid character and update its','line_number':2986,'multiline':False]
['text':' position.  When there were filler lines the topline has become','line_number':2987,'multiline':False]
['text':' invalid.','line_number':2988,'multiline':False]
['text':' redraw already done by ex_diffupdate()','line_number':2993,'multiline':False]
['text':' Also need to redraw the other buffers.','line_number':2997,'multiline':False]
['text':'
 * Update folds for all diff buffers for entry "dp".
 * Skip buffer with index "skip_idx".
 * When there are no diffs, all folds are removed.
 ','line_number':3004,'multiline':True]
['text':'
 * Return TRUE if buffer "buf" is in diff-mode.
 ','line_number':3023,'multiline':True]
['text':'
 * Move "count" times in direction "dir" to the next diff block.
 * Return FAIL if there isn't such a diff block.
 ','line_number':3037,'multiline':True]
['text':' update after a big change','line_number':3053,'multiline':False]
['text':' no diffs today','line_number':3055,'multiline':False]
['text':' Check if already before first diff.','line_number':3060,'multiline':False]
['text':' don't end up past the end of the file','line_number':3079,'multiline':False]
['text':' When the cursor didn't move at all we fail.','line_number':3083,'multiline':False]
['text':'
 * Return the line number in the current window that is closest to "lnum1" in
 * "buf1" in diff mode.
 ','line_number':3094,'multiline':True]
['text':' update after a big change','line_number':3114,'multiline':False]
['text':' no diffs today','line_number':3116,'multiline':False]
['text':' Inside the diffblock','line_number':3125,'multiline':False]
['text':'
	     * Special case: if the cursor is just after a zero-count
	     * block (i.e. all filler) and the target cursor is already
	     * inside the corresponding block, leave the target cursor
	     * unmoved. This makes repeated CTRL-W W operations work
	     * as expected.
	     ','line_number':3137,'multiline':True]
['text':' If we get here then the cursor is after the last diff','line_number':3149,'multiline':False]
['text':'
 * Return the line number in the current window that is closest to "lnum1" in
 * "buf1" in diff mode.  Checks the line number to be valid.
 ','line_number':3153,'multiline':True]
['text':' don't end up past the end of the file','line_number':3162,'multiline':False]
['text':'
 * For line "lnum" in the current window find the equivalent lnum in window
 * "wp", compensating for inserted/deleted lines.
 ','line_number':3168,'multiline':True]
['text':' safety check','line_number':3181,'multiline':False]
['text':' update after a big change','line_number':3185,'multiline':False]
['text':' search for a change that includes "lnum" in the list of diffblocks.','line_number':3187,'multiline':False]
['text':' When after the last change, compute relative to the last line number.','line_number':3192,'multiline':False]
['text':' Find index for "wp".','line_number':3197,'multiline':False]
['text':' safety check','line_number':3199,'multiline':False]
['text':'
 * Handle an ED style diff line.
 * Return FAIL if the line does not contain diff info.
 ','line_number':3208,'multiline':True]
['text':' The line must be one of three formats:','line_number':3221,'multiline':False]
['text':' change: {first}[,{last}]c{first}[,{last}]','line_number':3222,'multiline':False]
['text':' append: {first}a{first}[,{last}]','line_number':3223,'multiline':False]
['text':' delete: {first}[,{last}]d{first}','line_number':3224,'multiline':False]
['text':' invalid diff format','line_number':3235,'multiline':False]
['text':'
 * Parses unified diff with zero(!) context lines.
 * Return FAIL if there is no diff information in "line".
 ','line_number':3271,'multiline':True]
['text':' Parse unified diff hunk header:','line_number':3283,'multiline':False]
['text':' @@ -oldline,oldcount +newline,newcount @@','line_number':3284,'multiline':False]
['text':' invalid diff format','line_number':3308,'multiline':False]
['text':'
 * Callback function for the xdl_diff() function.
 * Stores the diff output in a grow array.
 ','line_number':3328,'multiline':True]
['text':' FEAT_DIFF','line_number':3360,'multiline':False]
['text':'
 * "diff_filler()" function
 ','line_number':3364,'multiline':True]
['text':'
 * "diff_hlID()" function
 ','line_number':3378,'multiline':True]
['text':' ignore type error in {lnum} arg','line_number':3401,'multiline':False]
['text':' New line, buffer, change: need to get the values.','line_number':3407,'multiline':False]
['text':' added line','line_number':3416,'multiline':False]
['text':' changed line','line_number':3418,'multiline':False]
['text':' added line','line_number':3421,'multiline':False]
['text':' ignore type error in {col}','line_number':3432,'multiline':False]
['text':' changed text','line_number':3434,'multiline':False]
['text':' changed line','line_number':3436,'multiline':False]
