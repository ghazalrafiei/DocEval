['text':' vi:set ts=8 sts=4 sw=4 noet:
 *
 * VIM - Vi IMproved	by Bram Moolenaar
 *
 * Do ":help uganda"  in Vim to read copying and usage conditions.
 * Do ":help credits" in Vim to see a list of people who contributed.
 * See README.txt for an overview of the Vim source code.
 ','line_number':1,'multiline':True]
['text':'
 * locale.c: functions for language/locale configuration
 ','line_number':10,'multiline':True]
['text':' Obtain the locale value from the libraries.','line_number':24,'multiline':False]
['text':' setocale() returns something like "LC_COLLATE=<name>;LC_..." when','line_number':32,'multiline':False]
['text':' one of the values (e.g., LC_CTYPE) differs.','line_number':33,'multiline':False]
['text':' remove trailing newline','line_number':38,'multiline':False]
['text':'
 * On MS-Windows locale names are strings like "German_Germany.1252", but
 * gettext expects "de".  Try to translate one into another here for a few
 * supported languages.
 ','line_number':57,'multiline':True]
['text':'
 * Return TRUE when "lang" starts with a valid language name.
 * Rejects NULL, empty string, "C", "C.UTF-8" and others.
 ','line_number':95,'multiline':True]
['text':'
 * Obtain the current messages language.  Used to set the default for
 * 'helplang'.  May return NULL or an empty string.
 ','line_number':105,'multiline':True]
['text':' This is necessary for Win32, where LC_MESSAGES is not defined and $LANG','line_number':118,'multiline':False]
['text':' may be set to the LCID number.  LC_COLLATE is the best guess, LC_TIME','line_number':119,'multiline':False]
['text':' and LC_MONETARY may be set differently for a Japanese working in the','line_number':120,'multiline':False]
['text':' US.','line_number':121,'multiline':False]
['text':' Complicated #if; matches with where get_mess_env() is used below.','line_number':140,'multiline':False]
['text':'
 * Get the language used for messages from the environment.
 ','line_number':145,'multiline':True]
['text':' ignore something like "1043"','line_number':163,'multiline':False]
['text':'
 * Set the "v:lang" variable according to the current locale setting.
 * Also do "v:lc_time"and "v:ctype".
 ','line_number':174,'multiline':True]
['text':' setlocale() not supported: use the default value','line_number':186,'multiline':False]
['text':' When LC_MESSAGES isn't defined use the value from $LC_MESSAGES, fall','line_number':191,'multiline':False]
['text':' back to LC_CTYPE if it's empty.','line_number':192,'multiline':False]
['text':' setlocale() not supported: use the default value','line_number':208,'multiline':False]
['text':'
 * Setup to use the current locale (for ctype() and many other things).
 ','line_number':216,'multiline':True]
['text':' Tell Gtk not to change our locale settings.','line_number':225,'multiline':False]
['text':' Make sure strtod() uses a decimal point, not a comma.','line_number':229,'multiline':False]
['text':' Apparently MS-Windows printf() may cause a crash when we give it 8-bit','line_number':234,'multiline':False]
['text':' text while it's expecting text in the current locale.  This call avoids','line_number':235,'multiline':False]
['text':' that.','line_number':236,'multiline':False]
['text':' Initialize the gettext library','line_number':246,'multiline':False]
['text':' expand_env() doesn't work yet, because g_chartab[] is not','line_number':249,'multiline':False]
['text':' initialized yet, call vim_getenv() directly','line_number':250,'multiline':False]
['text':'
 * ":language":  Set the language (locale).
 ','line_number':264,'multiline':True]
['text':' Check for "messages {name}", "ctype {name}" or "time {name}" argument.','line_number':283,'multiline':False]
['text':' Allow abbreviation, but require at least 3 characters to avoid','line_number':284,'multiline':False]
['text':' confusion with a two letter language name "me" or "ct".','line_number':285,'multiline':False]
['text':' Make sure strtod() uses a decimal point, not a comma.','line_number':337,'multiline':False]
['text':' Need to do this for GNU gettext, otherwise cached translations','line_number':346,'multiline':False]
['text':' will be used again.','line_number':347,'multiline':False]
['text':' Reset $LC_ALL, otherwise it would overrule everything.','line_number':352,'multiline':False]
['text':' Tell gettext() what to translate to.  It apparently doesn't','line_number':357,'multiline':False]
['text':' use the currently effective locale.  Also do this when','line_number':358,'multiline':False]
['text':' FEAT_GETTEXT isn't defined, so that shell commands use this','line_number':359,'multiline':False]
['text':' value.','line_number':360,'multiline':False]
['text':' Clear $LANGUAGE because GNU gettext uses it.','line_number':365,'multiline':False]
['text':' Apparently MS-Windows printf() may cause a crash when','line_number':368,'multiline':False]
['text':' we give it 8-bit text while it's expecting text in the','line_number':369,'multiline':False]
['text':' current locale.  This call avoids that.','line_number':370,'multiline':False]
['text':' Set v:lang, v:lc_time, v:collate and v:ctype to the final result.','line_number':390,'multiline':False]
['text':' Array of all available locales','line_number':398,'multiline':False]
['text':'
 * Return an array of strings for all available locales + NULL for the
 * last element.  Return NULL in case of error.
 ','line_number':402,'multiline':True]
['text':' Find all available locales by running command "locale -a".  If this','line_number':416,'multiline':False]
['text':' doesn't work we won't have completion.','line_number':417,'multiline':False]
['text':' Find all available locales by examining the directories in','line_number':422,'multiline':False]
['text':' $VIMRUNTIME/lang/','line_number':423,'multiline':False]
['text':' Add a dummy input, that will be skipped lated but we need to','line_number':435,'multiline':False]
['text':' have something in locale_list so that the C locale is added at','line_number':436,'multiline':False]
['text':' the end.','line_number':437,'multiline':False]
['text':' find the last directory delimiter','line_number':440,'multiline':False]
['text':' Transform locale_list string where each locale is separated by "\n"','line_number':455,'multiline':False]
['text':' into an array of locale strings.','line_number':456,'multiline':False]
['text':' skip locales with a dot (which indicates the charset)','line_number':466,'multiline':False]
['text':' Add the C locale','line_number':485,'multiline':False]
['text':'
 * Lazy initialization of all available locales.
 ','line_number':501,'multiline':True]
['text':'
 * Function given to ExpandGeneric() to obtain the possible arguments of the
 * ":language" command.
 ','line_number':529,'multiline':True]
['text':'
 * Function given to ExpandGeneric() to obtain the available locales.
 ','line_number':551,'multiline':True]
