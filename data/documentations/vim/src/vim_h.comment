['text':' vi:set ts=8 sts=4 sw=4 noet:
 *
 * VIM - Vi IMproved	by Bram Moolenaar
 *
 * Do ":help uganda"  in Vim to read copying and usage conditions.
 * Do ":help credits" in Vim to see a list of people who contributed.
 ','line_number':1,'multiline':True]
['text':' _WIN32 is defined as 1 when the compilation target is 32-bit or 64-bit.','line_number':14,'multiline':False]
['text':' Note: If you want to check for 64-bit use the _WIN64 macro.','line_number':15,'multiline':False]
['text':' ============ the header file puzzle: order matters =========','line_number':24,'multiline':False]
['text':' GNU autoconf (or something else) was here','line_number':26,'multiline':False]
['text':'
 * Check if configure correctly managed to find sizeof(int).  If this failed,
 * it becomes zero.  This is likely a problem of not being able to run the
 * test program.  Other items from configure may also be wrong then!
 ','line_number':30,'multiline':True]
['text':' Needed for strptime().  Needs to be done early, since header files can','line_number':40,'multiline':False]
['text':' include other header files and end up including time.h, where these symbols','line_number':41,'multiline':False]
['text':' matter for Vim.','line_number':42,'multiline':False]
['text':' 700 is needed for mkdtemp().','line_number':43,'multiline':False]
['text':' On old systems, defining _XOPEN_SOURCE causes _BSD_SOURCE, _SVID_SOURCE','line_number':47,'multiline':False]
['text':' and/or // _DEFAULT_SOURCE not to be defined, so do that here.  Those are','line_number':48,'multiline':False]
['text':' needed to include nanosecond-resolution timestamps in struct stat.  On new','line_number':49,'multiline':False]
['text':' systems, _DEFAULT_SOURCE is needed to avoid warning messages about using','line_number':50,'multiline':False]
['text':' deprecated _BSD_SOURCE or _SVID_SOURCE.','line_number':51,'multiline':False]
['text':'
 * Cygwin may have fchdir() in a newer release, but in most versions it
 * doesn't work well and avoiding it keeps the binary backward compatible.
 ','line_number':64,'multiline':True]
['text':' We may need to define the uint32_t on non-Unix system, but using the same','line_number':72,'multiline':False]
['text':' identifier causes conflicts.  Therefore use UINT32_T.','line_number':73,'multiline':False]
['text':' for INT_MAX, LONG_MAX et al.','line_number':77,'multiline':False]
['text':' this doesn't catch typedefs, unfortunately','line_number':81,'multiline':False]
['text':' Fall back to assuming unsigned int is 32 bit.  If this is wrong then the','line_number':84,'multiline':False]
['text':' test in blowfish.c will fail.','line_number':85,'multiline':False]
['text':' user ID of root is usually zero, but not for everybody','line_number':90,'multiline':False]
['text':' Include MAC_OS_X_VERSION_* macros ','line_number':105,'multiline':True]
['text':'
 * MACOS_X	    compiling for Mac OS X
 * MACOS_X_DARWIN   integrating the darwin feature into MACOS_X
 ','line_number':110,'multiline':True]
['text':' Unless made through the Makefile enforce GUI on Mac','line_number':117,'multiline':False]
['text':' Check support for rendering options','line_number':132,'multiline':False]
['text':'
 * VIM_SIZEOF_INT is used in feature.h, and the system-specific included files
 * need items from feature.h.  Therefore define VIM_SIZEOF_INT here.
 ','line_number':139,'multiline':True]
['text':' Be conservative about sizeof(int). It could be 4 too.','line_number':148,'multiline':False]
['text':' avoid problems when generating prototypes','line_number':149,'multiline':False]
['text':'
 * #defines for optionals and features
 * Also defines FEAT_TINY, FEAT_NORMAL, etc. when FEAT_HUGE is defined.
 ','line_number':165,'multiline':True]
['text':' +x11 is only enabled when it's both available and wanted.','line_number':185,'multiline':False]
['text':' In os_mac_conv.c and os_macosx.m NO_X11_INCLUDES is defined to avoid','line_number':191,'multiline':False]
['text':' X11 headers.  Disable all X11 related things to avoid conflicts.','line_number':192,'multiline':False]
['text':' The Mac conversion stuff doesn't work under X11.','line_number':219,'multiline':False]
['text':' Can't use "PACKAGE" here, conflicts with a Perl include file.','line_number':224,'multiline':False]
['text':'
 * Find out if function definitions should include argument types
 ','line_number':229,'multiline':True]
['text':' bring lots of system header files','line_number':251,'multiline':False]
['text':' For all non-Unix systems: use old-fashioned signal().','line_number':253,'multiline':False]
['text':' Mark unused function arguments with UNUSED, so that gcc -Wunused-parameter','line_number':257,'multiline':False]
['text':' can be used to check for mistakes.','line_number':258,'multiline':False]
['text':' Used to check for "sun", "__sun" is used by newer compilers.','line_number':274,'multiline':False]
['text':' If we're compiling in C++ (currently only KVim), the system','line_number':279,'multiline':False]
['text':' headers must have the correct prototypes or nothing will build.','line_number':280,'multiline':False]
['text':' Conversely, our prototypes might clash due to throw() specifiers and','line_number':281,'multiline':False]
['text':' cause compilation failures even though the headers are correct.  For','line_number':282,'multiline':False]
['text':' a concrete example, gcc-3.2 enforces exception specifications, and','line_number':283,'multiline':False]
['text':' glibc-2.2.5 has them in their system headers.','line_number':284,'multiline':False]
['text':' MACOS_X doesn't yet support osdef.h','line_number':286,'multiline':False]
['text':' bring missing declarations in','line_number':287,'multiline':False]
['text':'
 * Maximum length of a path (for non-unix systems) Make it a bit long, to stay
 * on the safe side.  But not too long to put on the stack.
 ','line_number':314,'multiline':True]
['text':' VMS allows a lot of characters in the file name','line_number':330,'multiline':False]
['text':' length of a buffer to store a number in ASCII (64 bits binary + NUL)','line_number':340,'multiline':False]
['text':' flags for vim_str2nr()','line_number':343,'multiline':False]
['text':' Octal with prefix "0o": 0o777','line_number':347,'multiline':False]
['text':' only when ONE of the above is used','line_number':351,'multiline':False]
['text':' ignore embedded single quotes','line_number':353,'multiline':False]
['text':'
 * Shorthand for unsigned variables. Many systems, but not all, have u_char
 * already defined, so we use char_u to avoid trouble.
 ','line_number':355,'multiline':True]
['text':' Make sure long_u is big enough to hold a pointer.','line_number':363,'multiline':False]
['text':' On Win64, longs are 32 bits and pointers are 64 bits.','line_number':364,'multiline':False]
['text':' For printf() and scanf(), we need to take care of long_u specifically.','line_number':365,'multiline':False]
['text':'
 * Only systems which use configure will have SIZEOF_OFF_T and VIM_SIZEOF_LONG
 * defined, which is ok since those are the same systems which can have
 * varying sizes for off_t.  The other systems will continue to use "%ld" to
 * print off_t since off_t is simply a typedef to long for them.
 ','line_number':381,'multiline':True]
['text':'
 * We use 64-bit file functions here, if available.  E.g. ftello() returns
 * off_t instead of long, which helps if long is 32 bit and off_t is 64 bit.
 * We assume that when fseeko() is available then ftello() is too.
 * Note that Windows has different function names.
 ','line_number':391,'multiline':True]
['text':'
 * The characters and attributes cached for the screen.
 ','line_number':425,'multiline':True]
['text':'
 * The u8char_T can hold one decoded UTF-8 character.
 * We use 32 bits, since some Asian characters don't fit in 16 bits.
 ','line_number':432,'multiline':True]
['text':' int is 32 bits or more','line_number':436,'multiline':False]
['text':'
 * The vimlong_T has sizeof(vimlong_T) >= 2 * sizeof(int).
 * One use is simple handling of overflow in int calculations.
 ','line_number':438,'multiline':True]
['text':' unsupported compiler','line_number':443,'multiline':False]
['text':' For Unix this is included in os_unix.h','line_number':449,'multiline':False]
['text':'
 * Allow other (non-unix) systems to configure themselves now
 * These are also in os_unix.h, because osdef.sh needs them there.
 ','line_number':474,'multiline':True]
['text':' Note: Some systems need both string.h and strings.h (Savage).  If the','line_number':479,'multiline':False]
['text':' system can't handle this, define NO_STRINGS_WITH_STRING_H.','line_number':480,'multiline':False]
['text':' NON-UNIX','line_number':493,'multiline':False]
['text':' older compilers do not define va_copy','line_number':507,'multiline':False]
['text':' for offsetof()','line_number':512,'multiline':False]
['text':' ================ end of the header file puzzle ===============','line_number':536,'multiline':False]
['text':'
 * For dynamically loaded imm library. Currently, only for Win32.
 ','line_number':538,'multiline':True]
['text':'
 * For dynamically loaded gettext library.  Currently, only for Win32.
 ','line_number':547,'multiline':True]
['text':' These are in os_win32.c','line_number':554,'multiline':False]
['text':'
 * The _() stuff is for using gettext().  It is a no-op when libintl.h is not
 * found or the +multilang feature is disabled.
 * Use NGETTEXT(single, multi, number) to get plural behavior:
 * - single - message for singular form
 * - multi  - message for plural form
 * - number - the count
 ','line_number':564,'multiline':True]
['text':' empty','line_number':601,'multiline':False]
['text':' empty','line_number':605,'multiline':False]
['text':' empty','line_number':609,'multiline':False]
['text':'
 * Flags for update_screen().
 * The higher the value, the higher the priority.
 ','line_number':612,'multiline':True]
['text':' no new changes, keep the command line if','line_number':616,'multiline':False]
['text':' possible','line_number':617,'multiline':False]
['text':' buffer not changed, or changes marked','line_number':618,'multiline':False]
['text':' with b_mod_*','line_number':619,'multiline':False]
['text':' redisplay inverted part that changed','line_number':620,'multiline':False]
['text':' redisplay whole inverted part','line_number':621,'multiline':False]
['text':' display first w_upd_rows screen lines','line_number':622,'multiline':False]
['text':' like UPD_NOT_VALID but may scroll','line_number':623,'multiline':False]
['text':' buffer needs complete redraw','line_number':624,'multiline':False]
['text':' screen messed up, clear it','line_number':625,'multiline':False]
['text':' flags for screen_line()','line_number':627,'multiline':False]
['text':' character used when a double-width character','line_number':631,'multiline':False]
['text':' doesn't fit.','line_number':632,'multiline':False]
['text':'
 * Flags for w_valid.
 * These are set when something in a window structure becomes invalid, except
 * when the cursor is moved.  Call check_cursor_moved() before testing one of
 * the flags.
 * These are reset when that thing has been updated and is valid again.
 *
 * Every function that invalidates one of these must call one of the
 * invalidate_* functions.
 *
 * w_valid is supposed to be used only in screen.c.  From other files, use the
 * functions that set or reset the flags.
 *
 * VALID_BOTLINE    VALID_BOTLINE_AP
 *     on		on		w_botline valid
 *     off		on		w_botline approximated
 *     off		off		w_botline not valid
 *     on		off		not possible
 ','line_number':634,'multiline':True]
['text':' w_wrow (window row) is valid','line_number':653,'multiline':False]
['text':' w_wcol (window col) is valid','line_number':654,'multiline':False]
['text':' w_virtcol (file col) is valid','line_number':655,'multiline':False]
['text':' w_cline_height and w_cline_folded valid','line_number':656,'multiline':False]
['text':' w_cline_row is valid','line_number':657,'multiline':False]
['text':' w_botine and w_empty_rows are valid','line_number':658,'multiline':False]
['text':' w_botine is approximated','line_number':659,'multiline':False]
['text':' w_topline is valid (for cursor position)','line_number':660,'multiline':False]
['text':' Values for w_popup_flags.','line_number':662,'multiline':False]
['text':' this is a popup window','line_number':663,'multiline':False]
['text':' popup is not displayed','line_number':664,'multiline':False]
['text':' popup is explicitly set to not be displayed','line_number':665,'multiline':False]
['text':' popup is highlighting at the cursorline','line_number':666,'multiline':False]
['text':' popup overlaps command line','line_number':667,'multiline':False]
['text':' popup can be moved by dragging border','line_number':668,'multiline':False]
['text':' popup can be moved by dragging everywhere','line_number':669,'multiline':False]
['text':' popup can be resized by dragging','line_number':670,'multiline':False]
['text':' mapping keys','line_number':671,'multiline':False]
['text':' used for info of popup menu','line_number':672,'multiline':False]
['text':' align info popup with popup menu','line_number':673,'multiline':False]
['text':' vertical position can be inverted','line_number':674,'multiline':False]
['text':' flags used in w_popup_handled','line_number':676,'multiline':False]
['text':' used by mouse_find_win()','line_number':677,'multiline':False]
['text':' used by popup_do_filter()','line_number':678,'multiline':False]
['text':' used by popup_check_cursor_pos()','line_number':679,'multiline':False]
['text':' used by may_update_popup_mask()','line_number':680,'multiline':False]
['text':' used by update_popups()','line_number':681,'multiline':False]
['text':'
 * Terminal highlighting attribute bits.
 * Attributes above HL_ALL are used for syntax highlighting.
 ','line_number':683,'multiline':True]
['text':' special attribute addition: Put message in history','line_number':701,'multiline':False]
['text':'
 * Values for State.
 *
 * The lower bits up to 0x80 are used to distinguish normal/visual/op_pending
 * /cmdline/insert/replace/terminal mode.  This is used for mapping.  If none
 * of these bits are set, no mapping is done.  See the comment above do_map().
 * The upper bits are used to distinguish between other states and variants of
 * the base modes.
 ','line_number':704,'multiline':True]
['text':' Normal mode, command expected','line_number':713,'multiline':False]
['text':' Visual mode - use get_real_state()','line_number':714,'multiline':False]
['text':' Normal mode, operator is pending - use','line_number':715,'multiline':False]
['text':' get_real_state()','line_number':716,'multiline':False]
['text':' Editing the command line','line_number':717,'multiline':False]
['text':' Insert mode, also for Replace mode','line_number':718,'multiline':False]
['text':' Language mapping, can be combined with','line_number':719,'multiline':False]
['text':' MODE_INSERT and MODE_CMDLINE','line_number':720,'multiline':False]
['text':' Select mode, use get_real_state()','line_number':721,'multiline':False]
['text':' Terminal mode','line_number':722,'multiline':False]
['text':' all mode bits used for mapping','line_number':724,'multiline':False]
['text':' Replace mode flag','line_number':726,'multiline':False]
['text':' Virtual-replace mode flag','line_number':728,'multiline':False]
['text':' Normal mode, busy with a command','line_number':733,'multiline':False]
['text':' waiting for return or command','line_number':735,'multiline':False]
['text':' Asking if you want --more--','line_number':736,'multiline':False]
['text':' window size has changed','line_number':737,'multiline':False]
['text':' executing an external command','line_number':738,'multiline':False]
['text':' show matching paren','line_number':739,'multiline':False]
['text':' ":confirm" prompt','line_number':740,'multiline':False]
['text':' max mode length used by get_mode(),','line_number':743,'multiline':False]
['text':' including the terminating NUL','line_number':744,'multiline':False]
['text':' directions','line_number':746,'multiline':False]
['text':' return values for functions','line_number':752,'multiline':False]
['text':' OK already defined to 1 in MacOS X curses, skip this','line_number':754,'multiline':False]
['text':' not OK or FAIL but skipped','line_number':758,'multiline':False]
['text':' flags for b_flags','line_number':760,'multiline':False]
['text':' buffer has been recovered','line_number':761,'multiline':False]
['text':' need to check readonly when loading file','line_number':762,'multiline':False]
['text':' into buffer (set by ":e", may be reset by','line_number':763,'multiline':False]
['text':' ":buf"','line_number':764,'multiline':False]
['text':' file has never been loaded into buffer,','line_number':765,'multiline':False]
['text':' many variables still need to be set','line_number':766,'multiline':False]
['text':' Set when file name is changed after','line_number':767,'multiline':False]
['text':' starting to edit, reset when file is','line_number':768,'multiline':False]
['text':' written out.','line_number':769,'multiline':False]
['text':' file didn't exist when editing started','line_number':770,'multiline':False]
['text':' Warned for BF_NEW and file created','line_number':771,'multiline':False]
['text':' got errors while reading the file','line_number':772,'multiline':False]
['text':' dummy buffer, only used internally','line_number':773,'multiline':False]
['text':' ":preserve" was used','line_number':774,'multiline':False]
['text':' 'syntax' option was set','line_number':775,'multiline':False]
['text':' no swap_exists_action (ATTENTION prompt)','line_number':776,'multiline':False]
['text':' Mask to check for flags that prevent normal writing','line_number':778,'multiline':False]
['text':'
 * values for xp_context when doing command line completion
 ','line_number':781,'multiline':True]
['text':' Values for exmode_active (0 is no exmode)','line_number':845,'multiline':False]
['text':' Values for nextwild() and ExpandOne().  See ExpandOne() for meaning.','line_number':849,'multiline':False]
['text':' sets EW_NOERROR','line_number':874,'multiline':False]
['text':' Flags for expand_wildcards()','line_number':878,'multiline':False]
['text':' include directory names','line_number':879,'multiline':False]
['text':' include file names','line_number':880,'multiline':False]
['text':' include not found names','line_number':881,'multiline':False]
['text':' append slash to directory name','line_number':882,'multiline':False]
['text':' keep all matches','line_number':883,'multiline':False]
['text':' don't print "1 returned" from shell','line_number':884,'multiline':False]
['text':' executable files','line_number':885,'multiline':False]
['text':' search in 'path' too','line_number':886,'multiline':False]
['text':' ignore case','line_number':887,'multiline':False]
['text':' no error for bad regexp','line_number':888,'multiline':False]
['text':' add match with literal name if exists','line_number':889,'multiline':False]
['text':' do not escape $, $var is expanded','line_number':890,'multiline':False]
['text':' Note: mostly EW_NOTFOUND and EW_SILENT are mutually exclusive: EW_NOTFOUND','line_number':891,'multiline':False]
['text':' is used when executing commands and EW_SILENT for interactive expanding.','line_number':892,'multiline':False]
['text':' also links not pointing to existing file','line_number':893,'multiline':False]
['text':' called from expand_shellcmd(), don't check','line_number':894,'multiline':False]
['text':' if executable is in $PATH','line_number':895,'multiline':False]
['text':' also files starting with a dot','line_number':896,'multiline':False]
['text':' no matches is not an error','line_number':897,'multiline':False]
['text':' do not expand environment variables','line_number':898,'multiline':False]
['text':' Flags for find_file_*() functions.','line_number':900,'multiline':False]
['text':' only files','line_number':901,'multiline':False]
['text':' only directories','line_number':902,'multiline':False]
['text':' files and directories','line_number':903,'multiline':False]
['text':' Values for the find_pattern_in_path() function args 'type' and 'action':','line_number':912,'multiline':False]
['text':' minimal size for state stack array','line_number':924,'multiline':False]
['text':' maximal size for state stack array','line_number':925,'multiline':False]
['text':' size of sst_stack[].','line_number':926,'multiline':False]
['text':' normal distance between entries','line_number':927,'multiline':False]
['text':' invalid syn_state pointer','line_number':928,'multiline':False]
['text':' not used on toplevel','line_number':930,'multiline':False]
['text':' has no highlighting','line_number':931,'multiline':False]
['text':' match within one line only','line_number':932,'multiline':False]
['text':' end pattern that matches with $','line_number':933,'multiline':False]
['text':' sync point after this item (syncing only)','line_number':934,'multiline':False]
['text':' sync point at current line (syncing only)','line_number':935,'multiline':False]
['text':' use match ID instead of item ID','line_number':936,'multiline':False]
['text':' nextgroup can skip newlines','line_number':937,'multiline':False]
['text':' nextgroup can skip white space','line_number':938,'multiline':False]
['text':' nextgroup can skip empty lines','line_number':939,'multiline':False]
['text':' end match always kept','line_number':940,'multiline':False]
['text':' exclude NL from match','line_number':941,'multiline':False]
['text':' only used for displaying, not syncing','line_number':942,'multiline':False]
['text':' define fold','line_number':943,'multiline':False]
['text':' ignore a keepend','line_number':944,'multiline':False]
['text':' match continued from previous line','line_number':945,'multiline':False]
['text':' transparent item without contains arg','line_number':946,'multiline':False]
['text':' can be concealed','line_number':947,'multiline':False]
['text':' can be concealed','line_number':948,'multiline':False]
['text':' Values for 'options' argument in do_search() and searchit()','line_number':951,'multiline':False]
['text':' go in reverse of previous dir.','line_number':952,'multiline':False]
['text':' echo the search command and handle options','line_number':953,'multiline':False]
['text':' give messages (yes, it's not 0x04)','line_number':954,'multiline':False]
['text':' give all messages except not found','line_number':955,'multiline':False]
['text':' interpret optional flags','line_number':956,'multiline':False]
['text':' put search pattern in history','line_number':957,'multiline':False]
['text':' put cursor at end of match','line_number':958,'multiline':False]
['text':' don't add offset to position','line_number':959,'multiline':False]
['text':' start search without col offset','line_number':960,'multiline':False]
['text':' set previous context mark','line_number':961,'multiline':False]
['text':' keep previous search pattern','line_number':962,'multiline':False]
['text':' peek for typed char, cancel search','line_number':963,'multiline':False]
['text':' start at specified column instead of zero','line_number':964,'multiline':False]
['text':' Values for find_ident_under_cursor()','line_number':966,'multiline':False]
['text':' find identifier (word)','line_number':967,'multiline':False]
['text':' find any string (WORD)','line_number':968,'multiline':False]
['text':' include "->", "[]" and "."','line_number':969,'multiline':False]
['text':' no error when no word found','line_number':970,'multiline':False]
['text':' Values for file_name_in_line()','line_number':972,'multiline':False]
['text':' give error message','line_number':973,'multiline':False]
['text':' expand to path','line_number':974,'multiline':False]
['text':' check for hypertext link','line_number':975,'multiline':False]
['text':' apply 'includeexpr'','line_number':976,'multiline':False]
['text':' ".." and "./" are relative to the (current)','line_number':977,'multiline':False]
['text':' file instead of the current directory','line_number':978,'multiline':False]
['text':' remove backslashes used for escaping','line_number':979,'multiline':False]
['text':' Values for buflist_getfile()','line_number':981,'multiline':False]
['text':' set pcmark before jumping','line_number':982,'multiline':False]
['text':' jumping to alternate file (not buf num)','line_number':983,'multiline':False]
['text':' respect 'switchbuf' settings when jumping','line_number':984,'multiline':False]
['text':' Return values of getfile()','line_number':986,'multiline':False]
['text':' normal error','line_number':987,'multiline':False]
['text':' "not written" error','line_number':988,'multiline':False]
['text':' success, same file','line_number':989,'multiline':False]
['text':' success, opened another file','line_number':990,'multiline':False]
['text':' Values for buflist_new() flags','line_number':994,'multiline':False]
['text':' may re-use curbuf for new buffer','line_number':995,'multiline':False]
['text':' put new buffer in buffer list','line_number':996,'multiline':False]
['text':' allocating dummy buffer','line_number':997,'multiline':False]
['text':' create a new buffer','line_number':998,'multiline':False]
['text':' don't copy options to existing buffer','line_number':999,'multiline':False]
['text':' also find an existing dummy buffer','line_number':1000,'multiline':False]
['text':' may re-use number from buf_reuse','line_number':1001,'multiline':False]
['text':' buffer is not associated with curwin','line_number':1002,'multiline':False]
['text':' Values for in_cinkeys()','line_number':1004,'multiline':False]
['text':' end of completion','line_number':1007,'multiline':False]
['text':' Used for the first argument of do_map()','line_number':1009,'multiline':False]
['text':' Values for "noremap" argument of ins_typebuf().  Also used for','line_number':1014,'multiline':False]
['text':' map->m_noremap and menu->noremap[].','line_number':1015,'multiline':False]
['text':' allow remapping','line_number':1016,'multiline':False]
['text':' no remapping','line_number':1017,'multiline':False]
['text':' remap script-local mappings only','line_number':1018,'multiline':False]
['text':' no remapping for first char','line_number':1019,'multiline':False]
['text':' Values for mch_call_shell() second argument','line_number':1021,'multiline':False]
['text':' filtering text','line_number':1022,'multiline':False]
['text':' expanding wildcards','line_number':1023,'multiline':False]
['text':' set term to cooked mode','line_number':1024,'multiline':False]
['text':' redirecting output','line_number':1025,'multiline':False]
['text':' don't print error returned by command','line_number':1026,'multiline':False]
['text':' read lines and insert into buffer','line_number':1027,'multiline':False]
['text':' write lines from buffer','line_number':1028,'multiline':False]
['text':' Values returned by mch_nodetype()','line_number':1030,'multiline':False]
['text':' file or directory, check with mch_isdir()','line_number':1031,'multiline':False]
['text':' something we can write to (character','line_number':1032,'multiline':False]
['text':' device, fifo, socket, ..)','line_number':1033,'multiline':False]
['text':' non-writable thing (e.g., block device)','line_number':1034,'multiline':False]
['text':' Values for readfile() flags','line_number':1036,'multiline':False]
['text':' read a file into a new buffer','line_number':1037,'multiline':False]
['text':' read filter output','line_number':1038,'multiline':False]
['text':' read from stdin','line_number':1039,'multiline':False]
['text':' read from curbuf (converting stdin)','line_number':1040,'multiline':False]
['text':' reading into a dummy buffer','line_number':1041,'multiline':False]
['text':' keep undo info','line_number':1042,'multiline':False]
['text':' read from fifo or socket','line_number':1043,'multiline':False]
['text':' do not trigger BufWinEnter','line_number':1044,'multiline':False]
['text':' do not read a file, do trigger BufReadCmd','line_number':1045,'multiline':False]
['text':' Values for change_indent()','line_number':1047,'multiline':False]
['text':' set indent','line_number':1048,'multiline':False]
['text':' increase indent','line_number':1049,'multiline':False]
['text':' decrease indent','line_number':1050,'multiline':False]
['text':' Values for flags argument for findmatchlimit()','line_number':1052,'multiline':False]
['text':' search backwards','line_number':1053,'multiline':False]
['text':' search forwards','line_number':1054,'multiline':False]
['text':' stop at start/end of block','line_number':1055,'multiline':False]
['text':' skip comments','line_number':1056,'multiline':False]
['text':' Values for action argument for do_buffer() and close_buffer()','line_number':1058,'multiline':False]
['text':' go to specified buffer','line_number':1059,'multiline':False]
['text':' split window and go to specified buffer','line_number':1060,'multiline':False]
['text':' unload specified buffer(s)','line_number':1061,'multiline':False]
['text':' delete specified buffer(s) from buflist','line_number':1062,'multiline':False]
['text':' delete specified buffer(s) really','line_number':1063,'multiline':False]
['text':' like DOBUF_WIPE and keep number for reuse','line_number':1064,'multiline':False]
['text':' Values for start argument for do_buffer()','line_number':1066,'multiline':False]
['text':' "count" buffer from current buffer','line_number':1067,'multiline':False]
['text':' "count" buffer from first buffer','line_number':1068,'multiline':False]
['text':' "count" buffer from last buffer','line_number':1069,'multiline':False]
['text':' "count" mod. buffer from current buffer','line_number':1070,'multiline':False]
['text':' Values for flags argument of do_buffer()','line_number':1072,'multiline':False]
['text':' :cmd!','line_number':1073,'multiline':False]
['text':' skip popup window buffers','line_number':1074,'multiline':False]
['text':' Values for sub_cmd and which_pat argument for search_regcomp()','line_number':1076,'multiline':False]
['text':' Also used for which_pat argument for searchit()','line_number':1077,'multiline':False]
['text':' save/use pat in/from search_pattern','line_number':1078,'multiline':False]
['text':' save/use pat in/from subst_pattern','line_number':1079,'multiline':False]
['text':' save pat in both patterns','line_number':1080,'multiline':False]
['text':' use last used pattern if "pat" is NULL','line_number':1081,'multiline':False]
['text':' Second argument for vim_regcomp().','line_number':1083,'multiline':False]
['text':' 'magic' option','line_number':1084,'multiline':False]
['text':' match in string instead of buffer text','line_number':1085,'multiline':False]
['text':' don't allow [abc] without ]','line_number':1086,'multiline':False]
['text':' automatic engine selection','line_number':1087,'multiline':False]
['text':' values for reg_do_extmatch','line_number':1090,'multiline':False]
['text':' to allow \z\(...\),','line_number':1091,'multiline':False]
['text':' to allow \z\1 et al.','line_number':1092,'multiline':False]
['text':' Return values for fullpathcmp()','line_number':1096,'multiline':False]
['text':' Note: can use (fullpathcmp() & FPC_SAME) to check for equal files','line_number':1097,'multiline':False]
['text':' both exist and are the same file.','line_number':1098,'multiline':False]
['text':' both exist and are different files.','line_number':1099,'multiline':False]
['text':' both don't exist.','line_number':1100,'multiline':False]
['text':' one of them doesn't exist.','line_number':1101,'multiline':False]
['text':' both don't exist and file names are same.','line_number':1102,'multiline':False]
['text':' flags for do_ecmd()','line_number':1104,'multiline':False]
['text':' don't free the current buffer','line_number':1105,'multiline':False]
['text':' set b_help flag of (new) buffer before','line_number':1106,'multiline':False]
['text':' opening file','line_number':1107,'multiline':False]
['text':' use existing buffer if it exists','line_number':1108,'multiline':False]
['text':' ! used in Ex command','line_number':1109,'multiline':False]
['text':' don't edit, just add to buffer list','line_number':1110,'multiline':False]
['text':' like ECMD_ADDBUF and set the alternate file','line_number':1111,'multiline':False]
['text':' do not trigger BufWinEnter','line_number':1112,'multiline':False]
['text':' for lnum argument in do_ecmd()','line_number':1114,'multiline':False]
['text':' use last position in loaded file','line_number':1115,'multiline':False]
['text':' use last position in all files','line_number':1116,'multiline':False]
['text':' use first line','line_number':1117,'multiline':False]
['text':' flags for do_cmdline()','line_number':1119,'multiline':False]
['text':' included command in error message','line_number':1120,'multiline':False]
['text':' don't call wait_return() and friends','line_number':1121,'multiline':False]
['text':' repeat exec. until getline() returns NULL','line_number':1122,'multiline':False]
['text':' don't reset KeyTyped','line_number':1123,'multiline':False]
['text':' reset exception environment (for debugging)','line_number':1124,'multiline':False]
['text':' keep typed line for repeating with "."','line_number':1125,'multiline':False]
['text':' can use a range without ":" in Vim9 script','line_number':1126,'multiline':False]
['text':' flags for beginline()','line_number':1128,'multiline':False]
['text':' cursor on first non-white in the line','line_number':1129,'multiline':False]
['text':' use 'sol' option','line_number':1130,'multiline':False]
['text':' don't leave cursor on a NUL','line_number':1131,'multiline':False]
['text':' flags for mf_sync()','line_number':1133,'multiline':False]
['text':' also sync blocks with negative numbers','line_number':1134,'multiline':False]
['text':' stop syncing when a character is available','line_number':1135,'multiline':False]
['text':' flushed file to disk','line_number':1136,'multiline':False]
['text':' only write block 0','line_number':1137,'multiline':False]
['text':' flags for buf_copy_options()','line_number':1139,'multiline':False]
['text':' going to enter the buffer','line_number':1140,'multiline':False]
['text':' always copy the options','line_number':1141,'multiline':False]
['text':' don't touch the help related options','line_number':1142,'multiline':False]
['text':' flags for do_put()','line_number':1144,'multiline':False]
['text':' make indent look nice','line_number':1145,'multiline':False]
['text':' leave cursor after end of new text','line_number':1146,'multiline':False]
['text':' leave cursor on last line of new text','line_number':1147,'multiline':False]
['text':' put register as lines','line_number':1148,'multiline':False]
['text':' split line for linewise register','line_number':1149,'multiline':False]
['text':' put linewise register below Visual sel.','line_number':1150,'multiline':False]
['text':' in block mode, do not add trailing spaces','line_number':1151,'multiline':False]
['text':' flags for set_indent()','line_number':1153,'multiline':False]
['text':' call changed_bytes() when line changed','line_number':1154,'multiline':False]
['text':' insert indent before existing text','line_number':1155,'multiline':False]
['text':' save line for undo before changing it','line_number':1156,'multiline':False]
['text':' flags for insertchar()','line_number':1158,'multiline':False]
['text':' force formatting','line_number':1159,'multiline':False]
['text':' format comments','line_number':1160,'multiline':False]
['text':' char typed just after CTRL-V','line_number':1161,'multiline':False]
['text':' don't use 'formatexpr'','line_number':1162,'multiline':False]
['text':' format comments with list/2nd line indent','line_number':1163,'multiline':False]
['text':' flags for open_line()','line_number':1165,'multiline':False]
['text':' delete spaces after cursor','line_number':1166,'multiline':False]
['text':' format comments','line_number':1167,'multiline':False]
['text':' keep trailing spaces','line_number':1168,'multiline':False]
['text':' fix mark positions','line_number':1169,'multiline':False]
['text':' format comments with list/2nd line indent','line_number':1170,'multiline':False]
['text':' formatting long comment','line_number':1171,'multiline':False]
['text':' There are five history tables:','line_number':1173,'multiline':False]
['text':' colon commands','line_number':1174,'multiline':False]
['text':' search commands','line_number':1175,'multiline':False]
['text':' expressions (from entering = register)','line_number':1176,'multiline':False]
['text':' input() lines','line_number':1177,'multiline':False]
['text':' debug commands','line_number':1178,'multiline':False]
['text':' number of history tables','line_number':1179,'multiline':False]
['text':' The type numbers are fixed for backwards compatibility.','line_number':1181,'multiline':False]
['text':'
 * Values for do_tag().
 ','line_number':1192,'multiline':True]
['text':' jump to newer position or same tag again','line_number':1195,'multiline':False]
['text':' jump to older position','line_number':1196,'multiline':False]
['text':' jump to next match of same tag','line_number':1197,'multiline':False]
['text':' jump to previous match of same tag','line_number':1198,'multiline':False]
['text':' jump to first match of same tag','line_number':1199,'multiline':False]
['text':' jump to first match of same tag','line_number':1200,'multiline':False]
['text':' jump to selection from list','line_number':1201,'multiline':False]
['text':' like DT_TAG, but no wildcards','line_number':1202,'multiline':False]
['text':' jump to new tag or selection from list','line_number':1203,'multiline':False]
['text':' cscope find command (like tjump)','line_number':1204,'multiline':False]
['text':' tag using location list','line_number':1205,'multiline':False]
['text':' free cached matches','line_number':1206,'multiline':False]
['text':'
 * flags for find_tags().
 ','line_number':1208,'multiline':True]
['text':' only search for help tags','line_number':1211,'multiline':False]
['text':' only return name of tag','line_number':1212,'multiline':False]
['text':' use tag pattern as regexp','line_number':1213,'multiline':False]
['text':' don't always ignore case','line_number':1214,'multiline':False]
['text':' cscope tag','line_number':1216,'multiline':False]
['text':' message verbosity','line_number':1218,'multiline':False]
['text':' Currently doing insert completion','line_number':1219,'multiline':False]
['text':' keep current language','line_number':1220,'multiline':False]
['text':' do not use 'tagfunc'','line_number':1221,'multiline':False]
['text':' When finding many tags (for completion),','line_number':1223,'multiline':False]
['text':' find up to this many tags','line_number':1224,'multiline':False]
['text':'
 * Types of dialogs passed to do_vim_dialog().
 ','line_number':1226,'multiline':True]
['text':' sentinel value','line_number':1234,'multiline':False]
['text':'
 * Return values for functions like gui_yesnocancel()
 ','line_number':1236,'multiline':True]
['text':'
 * arguments for win_split()
 ','line_number':1245,'multiline':True]
['text':' require enough room','line_number':1248,'multiline':False]
['text':' split/equalize vertically','line_number':1249,'multiline':False]
['text':' equalize horizontally','line_number':1250,'multiline':False]
['text':' window at top-left of shell','line_number':1251,'multiline':False]
['text':' window at bottom-right of shell','line_number':1252,'multiline':False]
['text':' creating the help window','line_number':1253,'multiline':False]
['text':' put new window below/right','line_number':1254,'multiline':False]
['text':' put new window above/left','line_number':1255,'multiline':False]
['text':' don't copy location list','line_number':1256,'multiline':False]
['text':'
 * arguments for gui_set_shellsize()
 ','line_number':1258,'multiline':True]
['text':' resize vertically','line_number':1261,'multiline':False]
['text':' resize horizontally','line_number':1262,'multiline':False]
['text':' resize in both directions','line_number':1263,'multiline':False]
['text':'
 * flags for check_changed()
 ','line_number':1265,'multiline':True]
['text':' do autowrite if buffer was changed','line_number':1268,'multiline':False]
['text':' check also when several wins for the buf','line_number':1269,'multiline':False]
['text':' ! used','line_number':1270,'multiline':False]
['text':' may write all buffers','line_number':1271,'multiline':False]
['text':' may suggest using !','line_number':1272,'multiline':False]
['text':'
 * "flags" values for option-setting functions.
 * When OPT_GLOBAL and OPT_LOCAL are both missing, set both local and global
 * values, get local value.
 ','line_number':1274,'multiline':True]
['text':' free old value if it was allocated','line_number':1279,'multiline':False]
['text':' use global value','line_number':1280,'multiline':False]
['text':' use local value','line_number':1281,'multiline':False]
['text':' option in modeline','line_number':1282,'multiline':False]
['text':' only set window-local options','line_number':1283,'multiline':False]
['text':' don't set window-local options','line_number':1284,'multiline':False]
['text':' list options one per line','line_number':1285,'multiline':False]
['text':' ignore redraw flags on option','line_number':1286,'multiline':False]
['text':' "skiprtp" in 'sessionoptions'','line_number':1287,'multiline':False]
['text':' Magic chars used in confirm dialog strings','line_number':1289,'multiline':False]
['text':' Values for "starting"','line_number':1293,'multiline':False]
['text':' no screen updating yet','line_number':1294,'multiline':False]
['text':' not all buffers loaded yet','line_number':1295,'multiline':False]
['text':'			0	   not starting anymore','line_number':1296,'multiline':False]
['text':' Values for swap_exists_action: what to do when swap file already exists','line_number':1298,'multiline':False]
['text':' don't use dialog','line_number':1299,'multiline':False]
['text':' use dialog when possible','line_number':1300,'multiline':False]
['text':' quit editing the file','line_number':1301,'multiline':False]
['text':' recover the file','line_number':1302,'multiline':False]
['text':' no dialog, mark buffer as read-only','line_number':1303,'multiline':False]
['text':'
 * Minimal size for block 0 of a swap file.
 * NOTE: This depends on size of struct block0! It's not done with a sizeof(),
 * because struct block0 is defined in memline.c (Sorry).
 * The maximal block size is arbitrary.
 ','line_number':1305,'multiline':True]
['text':' Special values for current_sctx.sc_sid.','line_number':1314,'multiline':False]
['text':' when using a modeline','line_number':1315,'multiline':False]
['text':' for "--cmd" argument','line_number':1316,'multiline':False]
['text':' for "-c" argument','line_number':1317,'multiline':False]
['text':' for sourcing environment variable','line_number':1318,'multiline':False]
['text':' option was reset because of an error','line_number':1319,'multiline':False]
['text':' don't set scriptID','line_number':1320,'multiline':False]
['text':' changing window size','line_number':1321,'multiline':False]
['text':'
 * Events for autocommands.
 ','line_number':1323,'multiline':True]
['text':' after adding a buffer to the buffer list','line_number':1328,'multiline':False]
['text':' deleting a buffer from the buffer list','line_number':1329,'multiline':False]
['text':' after entering a buffer','line_number':1330,'multiline':False]
['text':' after renaming a buffer','line_number':1331,'multiline':False]
['text':' before renaming a buffer','line_number':1332,'multiline':False]
['text':' just after buffer becomes hidden','line_number':1333,'multiline':False]
['text':' before leaving a buffer','line_number':1334,'multiline':False]
['text':' after creating any buffer','line_number':1335,'multiline':False]
['text':' when creating a buffer for a new file','line_number':1336,'multiline':False]
['text':' read buffer using command','line_number':1337,'multiline':False]
['text':' after reading a buffer','line_number':1338,'multiline':False]
['text':' before reading a buffer','line_number':1339,'multiline':False]
['text':' just before unloading a buffer','line_number':1340,'multiline':False]
['text':' after showing a buffer in a window','line_number':1341,'multiline':False]
['text':' just after buffer removed from window','line_number':1342,'multiline':False]
['text':' just before really deleting a buffer','line_number':1343,'multiline':False]
['text':' write buffer using command','line_number':1344,'multiline':False]
['text':' after writing a buffer','line_number':1345,'multiline':False]
['text':' before writing a buffer','line_number':1346,'multiline':False]
['text':' command line was modified','line_number':1347,'multiline':False]
['text':' after entering the command line','line_number':1348,'multiline':False]
['text':' before leaving the command line','line_number':1349,'multiline':False]
['text':' command undefined','line_number':1350,'multiline':False]
['text':' after entering the cmdline window','line_number':1351,'multiline':False]
['text':' before leaving the cmdline window','line_number':1352,'multiline':False]
['text':' after loading a colorscheme','line_number':1353,'multiline':False]
['text':' before loading a colorscheme','line_number':1354,'multiline':False]
['text':' after completion popup menu changed','line_number':1355,'multiline':False]
['text':' after finishing insert complete','line_number':1356,'multiline':False]
['text':' idem, before clearing info','line_number':1357,'multiline':False]
['text':' cursor in same position for a while','line_number':1358,'multiline':False]
['text':' idem, in Insert mode','line_number':1359,'multiline':False]
['text':' cursor was moved','line_number':1360,'multiline':False]
['text':' cursor was moved in Insert mode','line_number':1361,'multiline':False]
['text':' after diffs were updated','line_number':1362,'multiline':False]
['text':' after user changed directory','line_number':1363,'multiline':False]
['text':' before directory changes','line_number':1364,'multiline':False]
['text':' after changing the 'encoding' option','line_number':1365,'multiline':False]
['text':' before exiting','line_number':1366,'multiline':False]
['text':' append to a file using command','line_number':1367,'multiline':False]
['text':' after appending to a file','line_number':1368,'multiline':False]
['text':' before appending to a file','line_number':1369,'multiline':False]
['text':' before first change to read-only file','line_number':1370,'multiline':False]
['text':' after shell command that changed file','line_number':1371,'multiline':False]
['text':' after (not) reloading changed file','line_number':1372,'multiline':False]
['text':' read from a file using command','line_number':1373,'multiline':False]
['text':' after reading a file','line_number':1374,'multiline':False]
['text':' before reading a file','line_number':1375,'multiline':False]
['text':' new file type detected (user defined)','line_number':1376,'multiline':False]
['text':' write to a file using command','line_number':1377,'multiline':False]
['text':' after writing a file','line_number':1378,'multiline':False]
['text':' before writing a file','line_number':1379,'multiline':False]
['text':' after reading from a filter','line_number':1380,'multiline':False]
['text':' before reading from a filter','line_number':1381,'multiline':False]
['text':' after writing to a filter','line_number':1382,'multiline':False]
['text':' before writing to a filter','line_number':1383,'multiline':False]
['text':' got the focus','line_number':1384,'multiline':False]
['text':' lost the focus to another app','line_number':1385,'multiline':False]
['text':' if calling a function which doesn't exist','line_number':1386,'multiline':False]
['text':' after starting the GUI','line_number':1387,'multiline':False]
['text':' after starting the GUI failed','line_number':1388,'multiline':False]
['text':' when changing Insert/Replace mode','line_number':1389,'multiline':False]
['text':' before inserting a char','line_number':1390,'multiline':False]
['text':' when entering Insert mode','line_number':1391,'multiline':False]
['text':' just before leaving Insert mode','line_number':1392,'multiline':False]
['text':' just after leaving Insert mode','line_number':1393,'multiline':False]
['text':' just before popup menu is displayed','line_number':1394,'multiline':False]
['text':' after changing the mode','line_number':1395,'multiline':False]
['text':' option was set','line_number':1396,'multiline':False]
['text':' after :make, :grep etc.','line_number':1397,'multiline':False]
['text':' before :make, :grep etc.','line_number':1398,'multiline':False]
['text':' before :quit','line_number':1399,'multiline':False]
['text':' upon string reception from a remote vim','line_number':1400,'multiline':False]
['text':' going to wait for a character','line_number':1401,'multiline':False]
['text':' still waiting for a character','line_number':1402,'multiline':False]
['text':' after loading a session file','line_number':1403,'multiline':False]
['text':' after ":!cmd"','line_number':1404,'multiline':False]
['text':' after ":1,2!cmd", ":w !cmd", ":r !cmd".','line_number':1405,'multiline':False]
['text':' after the SIGUSR1 signal','line_number':1406,'multiline':False]
['text':' sourcing a Vim script using command','line_number':1407,'multiline':False]
['text':' before sourcing a Vim script','line_number':1408,'multiline':False]
['text':' after sourcing a Vim script','line_number':1409,'multiline':False]
['text':' spell file missing','line_number':1410,'multiline':False]
['text':' after reading from stdin','line_number':1411,'multiline':False]
['text':' before reading from stdin','line_number':1412,'multiline':False]
['text':' found existing swap file','line_number':1413,'multiline':False]
['text':' syntax selected','line_number':1414,'multiline':False]
['text':' after closing a tab page','line_number':1415,'multiline':False]
['text':' after entering a tab page','line_number':1416,'multiline':False]
['text':' before leaving a tab page','line_number':1417,'multiline':False]
['text':' when entering a new tab page','line_number':1418,'multiline':False]
['text':' after changing 'term'','line_number':1419,'multiline':False]
['text':' after a terminal buffer was created','line_number':1420,'multiline':False]
['text':' after a terminal buffer was created and','line_number':1421,'multiline':False]
['text':' entering its window','line_number':1422,'multiline':False]
['text':' after setting "v:termresponse"','line_number':1423,'multiline':False]
['text':' text was modified not in Insert mode','line_number':1424,'multiline':False]
['text':' text was modified in Insert mode','line_number':1425,'multiline':False]
['text':' TextChangedI with popup menu visible','line_number':1426,'multiline':False]
['text':' text was modified in Terminal mode','line_number':1427,'multiline':False]
['text':' after some text was yanked','line_number':1428,'multiline':False]
['text':' user defined autocommand','line_number':1429,'multiline':False]
['text':' after starting Vim','line_number':1430,'multiline':False]
['text':' before exiting Vim','line_number':1431,'multiline':False]
['text':' before exiting Vim and writing .viminfo','line_number':1432,'multiline':False]
['text':' after Vim window was resized','line_number':1433,'multiline':False]
['text':' after entering a window','line_number':1434,'multiline':False]
['text':' before leaving a window','line_number':1435,'multiline':False]
['text':' when entering a new window','line_number':1436,'multiline':False]
['text':' after closing a window','line_number':1437,'multiline':False]
['text':' before Vim is suspended','line_number':1438,'multiline':False]
['text':' after Vim is resumed','line_number':1439,'multiline':False]
['text':' after a window was resized','line_number':1440,'multiline':False]
['text':' after a window was scrolled or resized','line_number':1441,'multiline':False]
['text':' MUST be the last one','line_number':1443,'multiline':False]
['text':'
 * Values for index in highlight_attr[].
 * When making changes, also update HL_FLAGS below!
 * And update the default value of 'highlight': HIGHLIGHT_INIT in optiondefs.h
 ','line_number':1448,'multiline':True]
['text':' Meta & special keys listed with ":map", text that is','line_number':1455,'multiline':False]
['text':' displayed different from what it is','line_number':1456,'multiline':False]
['text':' after the last line in the buffer','line_number':1457,'multiline':False]
['text':' @ characters at end of screen, characters that','line_number':1458,'multiline':False]
['text':' don't really exist in the text','line_number':1459,'multiline':False]
['text':' directories in CTRL-D listing','line_number':1460,'multiline':False]
['text':' error messages','line_number':1461,'multiline':False]
['text':' obsolete, ignored','line_number':1462,'multiline':False]
['text':' incremental search','line_number':1463,'multiline':False]
['text':' last search string','line_number':1464,'multiline':False]
['text':' last search string under cursor','line_number':1465,'multiline':False]
['text':' "--More--" message','line_number':1466,'multiline':False]
['text':' Mode (e.g., "-- INSERT --")','line_number':1467,'multiline':False]
['text':' line number for ":number" and ":#" commands','line_number':1468,'multiline':False]
['text':' LineNrAbove','line_number':1469,'multiline':False]
['text':' LineNrBelow','line_number':1470,'multiline':False]
['text':' current line number','line_number':1471,'multiline':False]
['text':' current line sign column','line_number':1472,'multiline':False]
['text':' current line fold','line_number':1473,'multiline':False]
['text':' return to continue message and yes/no questions','line_number':1474,'multiline':False]
['text':' status lines','line_number':1475,'multiline':False]
['text':' status lines of not-current windows','line_number':1476,'multiline':False]
['text':' column to separate vertically split windows','line_number':1477,'multiline':False]
['text':' Titles for output from ":set all", ":autocmd" etc.','line_number':1478,'multiline':False]
['text':' Visual mode','line_number':1479,'multiline':False]
['text':' Visual mode, autoselecting and not clipboard owner','line_number':1480,'multiline':False]
['text':' warning messages','line_number':1481,'multiline':False]
['text':' Wildmenu highlight','line_number':1482,'multiline':False]
['text':' Folded line','line_number':1483,'multiline':False]
['text':' Fold column','line_number':1484,'multiline':False]
['text':' Added diff line','line_number':1485,'multiline':False]
['text':' Changed diff line','line_number':1486,'multiline':False]
['text':' Deleted diff line','line_number':1487,'multiline':False]
['text':' Text Changed in diff line','line_number':1488,'multiline':False]
['text':' Concealed text','line_number':1489,'multiline':False]
['text':' Sign column','line_number':1490,'multiline':False]
['text':' SpellBad','line_number':1491,'multiline':False]
['text':' SpellCap','line_number':1492,'multiline':False]
['text':' SpellRare','line_number':1493,'multiline':False]
['text':' SpellLocal','line_number':1494,'multiline':False]
['text':' popup menu normal item','line_number':1495,'multiline':False]
['text':' popup menu selected item','line_number':1496,'multiline':False]
['text':' popup menu normal item "kind"','line_number':1497,'multiline':False]
['text':' popup menu selected item "kind"','line_number':1498,'multiline':False]
['text':' popup menu normal item "menu" (extra text)','line_number':1499,'multiline':False]
['text':' popup menu selected item "menu" (extra text)','line_number':1500,'multiline':False]
['text':' popup menu scrollbar','line_number':1501,'multiline':False]
['text':' popup menu scrollbar thumb','line_number':1502,'multiline':False]
['text':' tabpage line','line_number':1503,'multiline':False]
['text':' tabpage line selected','line_number':1504,'multiline':False]
['text':' tabpage line filler','line_number':1505,'multiline':False]
['text':' 'cursorcolumn'','line_number':1506,'multiline':False]
['text':' 'cursorline'','line_number':1507,'multiline':False]
['text':' 'colorcolumn'','line_number':1508,'multiline':False]
['text':' quickfix window line currently selected','line_number':1509,'multiline':False]
['text':' status lines of terminal windows','line_number':1510,'multiline':False]
['text':' status lines of not-current terminal windows','line_number':1511,'multiline':False]
['text':' MUST be the last one','line_number':1512,'multiline':False]
['text':' The HL_FLAGS must be in the same order as the HLF_ enums!','line_number':1515,'multiline':False]
['text':' When changing this also adjust the default for 'highlight'.','line_number':1516,'multiline':False]
['text':'
 * Boolean constants
 ','line_number':1525,'multiline':True]
['text':' note: this is an int, not a long!','line_number':1529,'multiline':False]
['text':' sometimes used for a variant on TRUE','line_number':1533,'multiline':False]
['text':' must be different from TRUE and FALSE','line_number':1535,'multiline':False]
['text':' If "--log logfile" was used or ch_logfile() was called then log some or all','line_number':1538,'multiline':False]
['text':' terminal output.','line_number':1539,'multiline':False]
['text':' no logging support','line_number':1542,'multiline':False]
['text':'
 * Operator IDs; The order must correspond to opchars[] in ops.c!
 ','line_number':1550,'multiline':True]
['text':' no pending operation','line_number':1553,'multiline':False]
['text':' "d"  delete operator','line_number':1554,'multiline':False]
['text':' "y"  yank operator','line_number':1555,'multiline':False]
['text':' "c"  change operator','line_number':1556,'multiline':False]
['text':' "<"  left shift operator','line_number':1557,'multiline':False]
['text':' ">"  right shift operator','line_number':1558,'multiline':False]
['text':' "!"  filter operator','line_number':1559,'multiline':False]
['text':' "g~" switch case operator','line_number':1560,'multiline':False]
['text':' "="  indent operator','line_number':1561,'multiline':False]
['text':' "gq" format operator','line_number':1562,'multiline':False]
['text':' ":"  colon operator','line_number':1563,'multiline':False]
['text':' "gU" make upper case operator','line_number':1564,'multiline':False]
['text':' "gu" make lower case operator','line_number':1565,'multiline':False]
['text':' "J"  join operator, only for Visual mode','line_number':1566,'multiline':False]
['text':' "gJ"  join operator, only for Visual mode','line_number':1567,'multiline':False]
['text':' "g?" rot-13 encoding','line_number':1568,'multiline':False]
['text':' "r"  replace chars, only for Visual mode','line_number':1569,'multiline':False]
['text':' "I"  Insert column, only for Visual mode','line_number':1570,'multiline':False]
['text':' "A"  Append column, only for Visual mode','line_number':1571,'multiline':False]
['text':' "zf" define a fold','line_number':1572,'multiline':False]
['text':' "zo" open folds','line_number':1573,'multiline':False]
['text':' "zO" open folds recursively','line_number':1574,'multiline':False]
['text':' "zc" close folds','line_number':1575,'multiline':False]
['text':' "zC" close folds recursively','line_number':1576,'multiline':False]
['text':' "zd" delete folds','line_number':1577,'multiline':False]
['text':' "zD" delete folds recursively','line_number':1578,'multiline':False]
['text':' "gw" format operator, keeps cursor pos','line_number':1579,'multiline':False]
['text':' "g@" call 'operatorfunc'','line_number':1580,'multiline':False]
['text':' "<C-A>" Add to the number or alphabetic','line_number':1581,'multiline':False]
['text':' character (OP_ADD conflicts with Perl)','line_number':1582,'multiline':False]
['text':' "<C-X>" Subtract from the number or','line_number':1583,'multiline':False]
['text':' alphabetic character','line_number':1584,'multiline':False]
['text':'
 * Motion types, used for operators and for yank/delete registers.
 ','line_number':1586,'multiline':True]
['text':' character-wise movement/register','line_number':1589,'multiline':False]
['text':' line-wise movement/register','line_number':1590,'multiline':False]
['text':' block-wise register','line_number':1591,'multiline':False]
['text':' Decide between MLINE/MCHAR','line_number':1593,'multiline':False]
['text':'
 * Minimum screen size
 ','line_number':1595,'multiline':True]
['text':' minimal columns for screen','line_number':1598,'multiline':False]
['text':' minimal lines for screen','line_number':1599,'multiline':False]
['text':' height of a status line under a window','line_number':1600,'multiline':False]
['text':' height of a status line under a window','line_number':1601,'multiline':False]
['text':' default height for quickfix window','line_number':1608,'multiline':False]
['text':'
 * Buffer sizes
 ','line_number':1610,'multiline':True]
['text':' size of the command processing buffer','line_number':1614,'multiline':False]
['text':' max. size of a line in the tags file','line_number':1617,'multiline':False]
['text':' file i/o and sprintf buffer size','line_number':1619,'multiline':False]
['text':' buffer size for dialog_msg()','line_number':1621,'multiline':False]
['text':' length of buffer for small messages','line_number':1623,'multiline':False]
['text':' cell length (worst case: utf-8','line_number':1624,'multiline':False]
['text':' takes 6 bytes for one cell)','line_number':1625,'multiline':False]
['text':' buffer size for get_foldtext()','line_number':1627,'multiline':False]
['text':' Size of the buffer used for tgetent().  Unfortunately this is largely','line_number':1629,'multiline':False]
['text':' undocumented, some systems use 1024.  Using a buffer that is too small','line_number':1630,'multiline':False]
['text':' causes a buffer overrun and a crash.  Use the maximum known value to stay','line_number':1631,'multiline':False]
['text':' on the safe side.','line_number':1632,'multiline':False]
['text':' buffer size for termcap entry','line_number':1633,'multiline':False]
['text':'
 * Maximum length of key sequence to be mapped.
 * Must be able to hold an Amiga resize report.
 ','line_number':1635,'multiline':True]
['text':' maximum length of a function name, including SID and NUL','line_number':1641,'multiline':False]
['text':' Size in bytes of the hash used in the undo file.','line_number':1644,'multiline':False]
['text':' no CR-LF translation','line_number':1652,'multiline':False]
['text':'
 * Cygwin doesn't have a global way of making open() use binary I/O.
 * Use O_BINARY for all open() calls.
 ','line_number':1661,'multiline':True]
['text':' for systems that don't have W_OK in unistd.h','line_number':1676,'multiline':False]
['text':' for systems that don't have R_OK in unistd.h','line_number':1679,'multiline':False]
['text':' Allocate memory for one type and cast the returned pointer to have the','line_number':1682,'multiline':False]
['text':' compiler check the types.','line_number':1683,'multiline':False]
['text':'
 * defines to avoid typecasts from (char_u *) to (char *) and back
 * (vim_strchr() and vim_strrchr() are now in strings.c)
 ','line_number':1702,'multiline':True]
['text':' Like strcpy() but allows overlapped source and destination.','line_number':1726,'multiline':False]
['text':' We need to call mb_stricmp() even when we aren't dealing with a multi-byte','line_number':1739,'multiline':False]
['text':' encoding because mb_stricmp() takes care of all ascii and non-ascii','line_number':1740,'multiline':False]
['text':' encodings, including characters with umlauts in latin1, etc., while','line_number':1741,'multiline':False]
['text':' STRICMP() only handles the system locale version, which often does not','line_number':1742,'multiline':False]
['text':' handle non-ascii properly.','line_number':1743,'multiline':False]
['text':' Prefer using emsgf(), because perror() may send the output to the wrong','line_number':1793,'multiline':False]
['text':' destination and mess up the screen.','line_number':1794,'multiline':False]
['text':' line number type','line_number':1801,'multiline':False]
['text':' column number type','line_number':1802,'multiline':False]
['text':' display tick type','line_number':1803,'multiline':False]
['text':'
 * Well, you won't believe it, but some S/390 machines ("host", now also known
 * as zServer) use 31 bit pointers. There are also some newer machines, that
 * use 64 bit pointers. I don't know how to distinguish between 31 and 64 bit
 * machines, so the best way is to assume 31 bits whenever we detect OS/390
 * Unix.
 * With this we restrict the maximum line length to 1073741823. I guess this is
 * not a real problem. BTW:  Longer lines are split.
 ','line_number':1805,'multiline':True]
['text':' maximum column number, 30 bits','line_number':1815,'multiline':False]
['text':' maximum (invalid) line number','line_number':1816,'multiline':False]
['text':' MAXCOL used to be INT_MAX, but with 64 bit ints that results in running','line_number':1818,'multiline':False]
['text':' out of memory when trying to allocate a very long line.','line_number':1819,'multiline':False]
['text':' maximum column number','line_number':1820,'multiline':False]
['text':' maximum (invalid) line number','line_number':1821,'multiline':False]
['text':' columns needed by shown command','line_number':1824,'multiline':False]
['text':' dummy to pass an ACL to a function','line_number':1826,'multiline':False]
['text':'
 * fnamecmp() is used to compare file names.
 * On some systems case in a file name does not matter, on others it does.
 * (this does not account for maximum name lengths and things like "../dir",
 * thus it is not 100% accurate!)
 ','line_number':1832,'multiline':True]
['text':' On MS-Windows the third argument isn't size_t.  This matters for Win64,','line_number':1852,'multiline':False]
['text':' where sizeof(size_t)==8, not 4','line_number':1853,'multiline':False]
['text':'
 * Enums need a typecast to be used as array index (for Ultrix).
 ','line_number':1861,'multiline':True]
['text':'
 * EXTERN is only defined in main.c.  That's where global variables are
 * actually defined and initialized.
 ','line_number':1867,'multiline':True]
['text':' maximum value for 'maxcombine'','line_number':1891,'multiline':False]
['text':' Maximum number of bytes in a multi-byte character.  It can be one 32-bit','line_number':1893,'multiline':False]
['text':' character of up to 6 bytes, or one 16-bit character of up to three bytes','line_number':1894,'multiline':False]
['text':' plus six following composing characters of three bytes each.','line_number':1895,'multiline':False]
['text':' Use tv_fsec for fraction of second (micro or nano) of proftime_T','line_number':1904,'multiline':False]
['text':' dummy for function prototypes','line_number':1925,'multiline':False]
['text':' Type of compilation passed to compile_def_function()','line_number':1928,'multiline':False]
['text':' use df_instr','line_number':1930,'multiline':False]
['text':' use df_instr_prof','line_number':1931,'multiline':False]
['text':' use df_instr_debug, overrules CT_PROFILE','line_number':1932,'multiline':False]
['text':'
 * When compiling with 32 bit Perl time_t is 32 bits in the Perl code but 64
 * bits elsewhere.  That causes memory corruption.  Define time_T and use it
 * for global variables to avoid that.
 ','line_number':1935,'multiline':True]
['text':' Include option.h before structs.h, because the number of window-local and','line_number':1956,'multiline':False]
['text':' buffer-local options is used there.','line_number':1957,'multiline':False]
['text':' options and default values','line_number':1958,'multiline':False]
['text':' BalloonEval','line_number':1960,'multiline':False]
['text':' Note that gui.h is included by structs.h','line_number':1962,'multiline':False]
['text':' defines many structures','line_number':1964,'multiline':False]
['text':' Values for "do_profiling".','line_number':1968,'multiline':False]
['text':' profiling not started','line_number':1969,'multiline':False]
['text':' profiling busy','line_number':1970,'multiline':False]
['text':' profiling paused','line_number':1971,'multiline':False]
['text':' Codes for mouse button events in lower three bits:','line_number':1974,'multiline':False]
['text':' bit masks for modifiers:','line_number':1980,'multiline':False]
['text':' mouse buttons that are handled like a key press (GUI only)','line_number':1985,'multiline':False]
['text':' Note that the scroll wheel keys are inverted: MOUSE_5 scrolls lines up but','line_number':1986,'multiline':False]
['text':' the result of this is that the window moves down, similarly MOUSE_6 scrolls','line_number':1987,'multiline':False]
['text':' columns left but the window moves right.','line_number':1988,'multiline':False]
['text':' scroll wheel down','line_number':1989,'multiline':False]
['text':' scroll wheel up','line_number':1990,'multiline':False]
['text':' Mouse-button X1 (6th)','line_number':1992,'multiline':False]
['text':' Mouse-button X2','line_number':1993,'multiline':False]
['text':' scroll wheel left','line_number':1995,'multiline':False]
['text':' scroll wheel right','line_number':1996,'multiline':False]
['text':' report mouse moved','line_number':1998,'multiline':False]
['text':' 0x20 is reserved by xterm','line_number':2000,'multiline':False]
['text':' Lowest button code for using the mouse wheel (xterm only)','line_number':2005,'multiline':False]
['text':' Added to mouse column for GUI when 'mousefocus' wants to give focus to a','line_number':2016,'multiline':False]
['text':' window by simulating a click on its status line.  We could use up to 128 *','line_number':2017,'multiline':False]
['text':' 128 = 16384 columns, now it's reduced to 10000.','line_number':2018,'multiline':False]
['text':'
 * jump_to_mouse() returns one of first five these values, possibly with
 * some of the other four added.
 ','line_number':2021,'multiline':True]
['text':' on status or command line','line_number':2027,'multiline':False]
['text':' on vertical separator line','line_number':2028,'multiline':False]
['text':' in other window but can't go there','line_number':2029,'multiline':False]
['text':' clicked on '-' in fold column','line_number':2031,'multiline':False]
['text':' clicked on '+' in fold column','line_number':2032,'multiline':False]
['text':' in window toolbar','line_number':2033,'multiline':False]
['text':' flags for jump_to_mouse()','line_number':2035,'multiline':False]
['text':' need to stay in this window','line_number':2036,'multiline':False]
['text':' may start Visual mode','line_number':2037,'multiline':False]
['text':' only act when mouse has moved','line_number':2038,'multiline':False]
['text':' only set current mouse position','line_number':2039,'multiline':False]
['text':' may stop Visual mode','line_number':2040,'multiline':False]
['text':' button was released','line_number':2041,'multiline':False]
['text':' Checking for double clicks ourselves.','line_number':2044,'multiline':False]
['text':' defines for eval_vars()','line_number':2048,'multiline':False]
['text':' Defines for Vim variables.  These must match vimvars[] in evalvars.c!','line_number':2052,'multiline':False]
['text':' number of v: vars','line_number':2161,'multiline':False]
['text':' used for v_number in VAR_BOOL and VAR_SPECIAL','line_number':2163,'multiline':False]
['text':' VAR_BOOL','line_number':2164,'multiline':False]
['text':' VAR_BOOL','line_number':2165,'multiline':False]
['text':' VAR_SPECIAL','line_number':2166,'multiline':False]
['text':' VAR_SPECIAL','line_number':2167,'multiline':False]
['text':' Type values for type().','line_number':2169,'multiline':False]
['text':' maximum nesting of lists and dicts','line_number':2186,'multiline':False]
['text':' VIM_ATOM_NAME is the older Vim-specific selection type for X11.  Still','line_number':2192,'multiline':False]
['text':' supported for when a mix of Vim versions is used. VIMENC_ATOM_NAME includes','line_number':2193,'multiline':False]
['text':' the encoding to support Vims using different 'encoding' values.','line_number':2194,'multiline':False]
['text':' Selection states for modeless selection','line_number':2198,'multiline':False]
['text':' Info about selected text','line_number':2213,'multiline':False]
['text':' Is clipboard available?','line_number':2216,'multiline':False]
['text':' Flag: do we own the selection?','line_number':2217,'multiline':False]
['text':' Start of selected area','line_number':2218,'multiline':False]
['text':' End of selected area','line_number':2219,'multiline':False]
['text':' Visual mode character','line_number':2220,'multiline':False]
['text':' Fields for selection that doesn't use Visual mode','line_number':2222,'multiline':False]
['text':' limits for selection inside a popup window','line_number':2229,'multiline':False]
['text':' Previous position','line_number':2236,'multiline':False]
['text':' Current selection state','line_number':2237,'multiline':False]
['text':' Select by char, word, or line.','line_number':2238,'multiline':False]
['text':' PRIMARY/CLIPBOARD selection ID','line_number':2241,'multiline':False]
['text':' PRIMARY/CLIPBOARD selection ID','line_number':2245,'multiline':False]
['text':' Vim's own special clipboard format','line_number':2249,'multiline':False]
['text':' Vim's raw text clipboard format','line_number':2250,'multiline':False]
['text':' No clipboard at the moment. TODO?','line_number':2253,'multiline':False]
['text':' This is required for the prototypes.','line_number':2257,'multiline':False]
['text':' Use 64-bit stat structure on MS-Windows.','line_number':2260,'multiline':False]
['text':' Mode for bracketed_paste().','line_number':2293,'multiline':False]
['text':' insert mode','line_number':2295,'multiline':False]
['text':' command line','line_number':2296,'multiline':False]
['text':' ex mode line','line_number':2297,'multiline':False]
['text':' return first character','line_number':2298,'multiline':False]
['text':' Argument for flush_buffers().','line_number':2301,'multiline':False]
['text':' flush current typebuf contents','line_number':2304,'multiline':False]
['text':' flush typebuf and inchar() input','line_number':2305,'multiline':False]
['text':' Argument for prepare_tagpreview()','line_number':2308,'multiline':False]
['text':' use info popup','line_number':2311,'multiline':False]
['text':' use info popup initially hidden','line_number':2312,'multiline':False]
['text':' Argument for estack_sfile().','line_number':2315,'multiline':False]
['text':' Return value of match_keyprotocol()','line_number':2323,'multiline':False]
['text':' errors for when calling a function','line_number':2331,'multiline':False]
['text':' no error','line_number':2333,'multiline':False]
['text':' unknown function','line_number':2334,'multiline':False]
['text':' too many arguments','line_number':2335,'multiline':False]
['text':' too few arguments','line_number':2336,'multiline':False]
['text':' missing script context','line_number':2337,'multiline':False]
['text':' missing dict','line_number':2338,'multiline':False]
['text':' another kind of error','line_number':2339,'multiline':False]
['text':' function was deleted','line_number':2340,'multiline':False]
['text':' function cannot be used as a method','line_number':2341,'multiline':False]
['text':' error while executing the function','line_number':2342,'multiline':False]
['text':'
 * Type for the callback function that is invoked after an option value is
 * changed to validate and apply the new value.
 *
 * Returns NULL if the option value is valid is successfully applied.
 * Otherwise returns an error message.
 ','line_number':2345,'multiline':True]
['text':'
 * Type for the callback function that is invoked when expanding possible
 * string option values during cmdline completion.
 *
 * Strings in returned matches will be managed and freed by caller.
 *
 * Returns OK if the expansion succeeded (numMatches and matches have to be
 * set). Otherwise returns FAIL.
 *
 * Note: If returned FAIL or *numMatches is 0, *matches will NOT be freed by
 * caller.
 ','line_number':2354,'multiline':True]
['text':' Flags for assignment functions.','line_number':2368,'multiline':False]
['text':' ":var" (nothing special)','line_number':2369,'multiline':False]
['text':' ":final"','line_number':2370,'multiline':False]
['text':' ":const"','line_number':2371,'multiline':False]
['text':' "name = expr" without ":let"/":const"/":final"','line_number':2372,'multiline':False]
['text':' may declare variable if it does not exist','line_number':2373,'multiline':False]
['text':' using [a, b] = list','line_number':2374,'multiline':False]
['text':' use "any" for list and dict member type','line_number':2375,'multiline':False]
['text':' assigning to loop variable','line_number':2376,'multiline':False]
['text':' not assigning a value, just a declaration','line_number':2377,'multiline':False]
['text':' update sav_block_id','line_number':2378,'multiline':False]
['text':' Ex command defines','line_number':2380,'multiline':False]
['text':' spell checking stuff','line_number':2381,'multiline':False]
['text':' function prototypes','line_number':2383,'multiline':False]
['text':' This has to go after the include of proto.h, as proto/gui.pro declares','line_number':2385,'multiline':False]
['text':' functions of these names. The declarations would break if the defines had','line_number':2386,'multiline':False]
['text':' been seen at that stage.  But it must be before globals.h, where error_ga','line_number':2387,'multiline':False]
['text':' is declared.','line_number':2388,'multiline':False]
['text':' Whether IME is supported by im_get_status() defined in mbyte.c.','line_number':2400,'multiline':False]
['text':' For Win32 GUI it's in gui_w32.c when FEAT_MBYTE_IME is defined.','line_number':2401,'multiline':False]
['text':' im_set_active() is available','line_number':2408,'multiline':False]
['text':' Without the 'numberwidth' option line numbers are always 7 chars.','line_number':2413,'multiline':False]
['text':' This must come after including proto.h.','line_number':2417,'multiline':False]
['text':' For VMS this is defined in macros.h.','line_number':2418,'multiline':False]
['text':' global variables and messages','line_number':2424,'multiline':False]
['text':' error messages','line_number':2425,'multiline':False]
['text':'
 * If console dialog not supported, but GUI dialog is, use the GUI one.
 ','line_number':2427,'multiline':True]
['text':'
 * Default filters for gui_mch_browse().
 * The filters are almost system independent.  Except for the difference
 * between "*" and "*.*" for MSDOS-like systems.
 * NOTE: Motif only uses the very first pattern.  Therefore
 * BROWSE_FILTER_DEFAULT should start with a "*" pattern.
 ','line_number':2434,'multiline':True]
['text':' flag for do_browse()','line_number':2455,'multiline':False]
['text':' flag for do_browse()','line_number':2456,'multiline':False]
['text':' Avoid useless warning "conversion from X to Y of greater size".','line_number':2460,'multiline':False]
['text':' Avoid warning for old style function declarators','line_number':2462,'multiline':False]
['text':' Avoid warning for conversion to type with smaller range','line_number':2464,'multiline':False]
['text':' Avoid warning for conversion to larger size','line_number':2466,'multiline':False]
['text':' Avoid warning for unreferenced formal parameter','line_number':2468,'multiline':False]
['text':' Avoid warning for differs in indirection to slightly different base type','line_number':2470,'multiline':False]
['text':' Avoid warning for constant conditional expression','line_number':2472,'multiline':False]
['text':' Avoid warning for assignment within conditional','line_number':2474,'multiline':False]
['text':' Note: a NULL argument for vim_realloc() is not portable, don't use it.','line_number':2478,'multiline':False]
['text':'
 * Return byte length of character that starts with byte "b".
 * Returns 1 for a single-byte character.
 * MB_BYTE2LEN_CHECK() can be used to count a special key as one byte.
 * Don't call MB_BYTE2LEN(b) with b < 0 or b > 255!
 ','line_number':2485,'multiline':True]
['text':' properties used in enc_canon_table[] (first three mutually exclusive)','line_number':2494,'multiline':False]
['text':' Unicode: Big endian','line_number':2499,'multiline':False]
['text':' Unicode: Little endian','line_number':2500,'multiline':False]
['text':' Unicode: UCS-2','line_number':2502,'multiline':False]
['text':' Unicode: UCS-4','line_number':2503,'multiline':False]
['text':' Unicode: UTF-16','line_number':2504,'multiline':False]
['text':' Latin1','line_number':2506,'multiline':False]
['text':' Latin9','line_number':2507,'multiline':False]
['text':' Mac Roman (not Macro Man! :-)','line_number':2508,'multiline':False]
['text':' On Win32 iconv.dll is dynamically loaded.','line_number':2515,'multiline':False]
['text':' byte value used where sign is displayed;','line_number':2528,'multiline':False]
['text':' attribute value is sign type','line_number':2529,'multiline':False]
['text':' byte value used where sign is displayed if','line_number':2532,'multiline':False]
['text':' multiple signs exist on the line','line_number':2533,'multiline':False]
['text':' Avoid using a global variable for the X display.  It's ugly','line_number':2538,'multiline':False]
['text':' and is likely to cause trouble in multihead environments.','line_number':2539,'multiline':False]
['text':' Netbeans debugging.','line_number':2630,'multiline':False]
['text':'
   * Avoid clashes between Perl and Vim namespace.
   ','line_number':2637,'multiline':True]
['text':' remove MAX and MIN, included by glib.h, redefined by sys/param.h','line_number':2644,'multiline':False]
['text':' We use _() for gettext(), Perl uses it for function prototypes...','line_number':2651,'multiline':False]
['text':' bool may cause trouble on some old versions of Mac OS X but is required','line_number':2664,'multiline':False]
['text':' on a few other systems and for Perl','line_number':2665,'multiline':False]
['text':' values for vim_handle_signal() that are not a signal','line_number':2673,'multiline':False]
['text':' flags for skip_vimgrep_pat()','line_number':2680,'multiline':False]
['text':' behavior for bad character, "++bad=" argument','line_number':2685,'multiline':False]
['text':' replace it with '?' (default)','line_number':2686,'multiline':False]
['text':' leave it','line_number':2687,'multiline':False]
['text':' erase it','line_number':2688,'multiline':False]
['text':' last argument for do_source()','line_number':2690,'multiline':False]
['text':' loading vimrc file','line_number':2692,'multiline':False]
['text':' loading gvimrc file','line_number':2693,'multiline':False]
['text':' flags for read_viminfo() and children','line_number':2695,'multiline':False]
['text':' load non-mark info','line_number':2696,'multiline':False]
['text':' load file marks','line_number':2697,'multiline':False]
['text':' bail out after loading marks for curbuf','line_number':2698,'multiline':False]
['text':' overwrite info already read','line_number':2699,'multiline':False]
['text':' load v:oldfiles','line_number':2700,'multiline':False]
['text':' flags for buf_freeall()','line_number':2702,'multiline':False]
['text':' buffer is going to be deleted','line_number':2703,'multiline':False]
['text':' buffer is going to be wiped out','line_number':2704,'multiline':False]
['text':' do not free undo information','line_number':2705,'multiline':False]
['text':' do not abort for aborting()','line_number':2706,'multiline':False]
['text':' direction for nv_mousescroll() and ins_mousescroll()','line_number':2708,'multiline':False]
['text':' DOWN must be FALSE','line_number':2709,'multiline':False]
['text':' keylen value for incomplete key-code','line_number':2714,'multiline':False]
['text':' keylen value for incomplete mapping','line_number':2715,'multiline':False]
['text':' keylen value for removed sequence','line_number':2716,'multiline':False]
['text':' Return values from win32_fileinfo().','line_number':2718,'multiline':False]
['text':' enc_to_utf16() failed','line_number':2720,'multiline':False]
['text':' CreateFile() failed','line_number':2721,'multiline':False]
['text':' GetFileInformationByHandle() failed','line_number':2722,'multiline':False]
['text':' Return value from get_option_value_strict','line_number':2724,'multiline':False]
['text':' Boolean option','line_number':2725,'multiline':False]
['text':' Number option','line_number':2726,'multiline':False]
['text':' String option','line_number':2727,'multiline':False]
['text':' Option has global value','line_number':2728,'multiline':False]
['text':' Option has window-local value','line_number':2729,'multiline':False]
['text':' Option has buffer-local value','line_number':2730,'multiline':False]
['text':' Option does not have local value set','line_number':2731,'multiline':False]
['text':' Option types for various functions in option.c','line_number':2733,'multiline':False]
['text':' Request global option','line_number':2734,'multiline':False]
['text':' Request window-local option','line_number':2735,'multiline':False]
['text':' Request buffer-local option','line_number':2736,'multiline':False]
['text':' Flags for get_reg_contents','line_number':2738,'multiline':False]
['text':' Do not allow expression register','line_number':2739,'multiline':False]
['text':' Return expression itself for "=" register','line_number':2740,'multiline':False]
['text':' Return list','line_number':2741,'multiline':False]
['text':' Character used as separated in autoload function/variable names.','line_number':2743,'multiline':False]
['text':' Options for json_encode() and json_decode.','line_number':2756,'multiline':False]
['text':' use JS instead of JSON','line_number':2757,'multiline':False]
['text':' v:none item not allowed','line_number':2758,'multiline':False]
['text':' append a NL','line_number':2759,'multiline':False]
['text':' Used for flags of do_in_path()','line_number':2761,'multiline':False]
['text':' all matches, not just the first one','line_number':2762,'multiline':False]
['text':' find directories instead of files.','line_number':2763,'multiline':False]
['text':' give an error message when none found.','line_number':2764,'multiline':False]
['text':' also use "start" directory in 'packpath'','line_number':2765,'multiline':False]
['text':' also use "opt" directory in 'packpath'','line_number':2766,'multiline':False]
['text':' do not use 'runtimepath'','line_number':2767,'multiline':False]
['text':' skip "after" directories','line_number':2768,'multiline':False]
['text':' only use "after" directories','line_number':2769,'multiline':False]
['text':' Lowest number used for window ID. Cannot have this many windows.','line_number':2771,'multiline':False]
['text':' Used by the garbage collector.','line_number':2774,'multiline':False]
['text':' Values for trans_function_name() argument:','line_number':2778,'multiline':False]
['text':' internal function name OK','line_number':2779,'multiline':False]
['text':' no error messages','line_number':2780,'multiline':False]
['text':' do not use script autoloading','line_number':2781,'multiline':False]
['text':' do not dereference a Funcref','line_number':2782,'multiline':False]
['text':' will not change the var','line_number':2783,'multiline':False]
['text':' only used for GLV_NO_DECL','line_number':2784,'multiline':False]
['text':' only used for GLV_COMPILING','line_number':2785,'multiline':False]
['text':' defining a new function','line_number':2786,'multiline':False]
['text':' only for GLV_ASSIGN_WITH_OP','line_number':2787,'multiline':False]
['text':' function in a class','line_number':2788,'multiline':False]
['text':' Values for get_lval() flags argument:','line_number':2790,'multiline':False]
['text':' no error messages','line_number':2791,'multiline':False]
['text':' do not use script autoloading','line_number':2792,'multiline':False]
['text':' will not change the var','line_number':2793,'multiline':False]
['text':' assignment without :var or :let','line_number':2794,'multiline':False]
['text':' variable may be defined later','line_number':2795,'multiline':False]
['text':' assignment with operator','line_number':2796,'multiline':False]
['text':' prefer function above variable','line_number':2797,'multiline':False]
['text':' assigning to a loop variable','line_number':2798,'multiline':False]
['text':' refcount for dict or list that should not','line_number':2800,'multiline':False]
['text':' be freed.','line_number':2801,'multiline':False]
['text':' fixed buffer length for fname_trans_sid()','line_number':2803,'multiline':False]
['text':' flags for find_name_end()','line_number':2806,'multiline':False]
['text':' include [] in name','line_number':2807,'multiline':False]
['text':' check name starts with valid character','line_number':2808,'multiline':False]
['text':' always allow curly braces name','line_number':2809,'multiline':False]
['text':' BSD is supposed to cover FreeBSD and similar systems.','line_number':2811,'multiline':False]
['text':' stat macros','line_number':2817,'multiline':False]
['text':' Replacement for nchar used by nv_replace().','line_number':2887,'multiline':False]
['text':' flags for term_start()','line_number':2891,'multiline':False]
['text':' Used for icon/title save and restore.','line_number':2896,'multiline':False]
['text':' Flags for adjust_prop_columns()','line_number':2901,'multiline':False]
['text':' call u_savesub() before making changes','line_number':2902,'multiline':False]
['text':' text is replaced, not inserted','line_number':2903,'multiline':False]
['text':' changing indent','line_number':2904,'multiline':False]
['text':' Flags for replace_termcodes()','line_number':2908,'multiline':False]
['text':' Flags for find_special_key()','line_number':2914,'multiline':False]
['text':' prefer key code, e.g. K_DEL instead of DEL','line_number':2915,'multiline':False]
['text':' don't translate xHome to Home key','line_number':2916,'multiline':False]
['text':' TRUE in string, double quote is escaped','line_number':2917,'multiline':False]
['text':' simplify <C-H> and <A-x>','line_number':2918,'multiline':False]
['text':' left-hand-side of mapping','line_number':2919,'multiline':False]
['text':' Flags for the readdirex function, how to sort the result','line_number':2921,'multiline':False]
['text':' do not sort','line_number':2922,'multiline':False]
['text':' sort by byte order (strcmp), default','line_number':2923,'multiline':False]
['text':' sort ignoring case (strcasecmp)','line_number':2924,'multiline':False]
['text':' sort according to collation (strcoll)','line_number':2925,'multiline':False]
['text':' Flags for mch_delay.','line_number':2927,'multiline':False]
['text':' Flags for eval_variable().','line_number':2931,'multiline':False]
['text':' may give error message','line_number':2932,'multiline':False]
['text':' do not use script autoloading','line_number':2933,'multiline':False]
['text':' may return special variable for import','line_number':2934,'multiline':False]
['text':' do not look for a function','line_number':2935,'multiline':False]
['text':' Maximum number of characters that can be fuzzy matched','line_number':2937,'multiline':False]
['text':' flags for equal_type()','line_number':2940,'multiline':False]
['text':' flags used by user commands and :autocmd','line_number':2943,'multiline':False]
['text':' -buffer: local to current buffer','line_number':2944,'multiline':False]
['text':' {} argument: Vim9 syntax.','line_number':2945,'multiline':False]
['text':' flags used by vim_strsave_fnameescape()','line_number':2947,'multiline':False]
['text':' escape for a shell command','line_number':2949,'multiline':False]
['text':' escape for a ":buffer" command','line_number':2950,'multiline':False]
['text':' Flags used by find_func_even_dead()','line_number':2952,'multiline':False]
['text':' "g:" was used','line_number':2953,'multiline':False]
['text':' only check for script-local functions','line_number':2954,'multiline':False]
['text':' Flags used by "class_flags" of define_function()','line_number':2958,'multiline':False]
['text':' inside a class','line_number':2959,'multiline':False]
['text':' inside an interface','line_number':2960,'multiline':False]
['text':' inside an abstract class','line_number':2961,'multiline':False]
['text':' VIM__H','line_number':2963,'multiline':False]
