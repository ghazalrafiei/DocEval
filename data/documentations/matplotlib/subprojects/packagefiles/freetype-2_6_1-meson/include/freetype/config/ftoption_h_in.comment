['text':'*************************************************************************','line_number':1,'multiline':True]
['text':'                                                                         ','line_number':2,'multiline':True]
['text':'  ftoption.h                                                             ','line_number':3,'multiline':True]
['text':'                                                                         ','line_number':4,'multiline':True]
['text':'    User-selectable configuration macros (specification only).           ','line_number':5,'multiline':True]
['text':'                                                                         ','line_number':6,'multiline':True]
['text':'  Copyright 1996-2015 by                                                 ','line_number':7,'multiline':True]
['text':'  David Turner, Robert Wilhelm, and Werner Lemberg.                      ','line_number':8,'multiline':True]
['text':'                                                                         ','line_number':9,'multiline':True]
['text':'  This file is part of the FreeType project, and may only be used,       ','line_number':10,'multiline':True]
['text':'  modified, and distributed under the terms of the FreeType project      ','line_number':11,'multiline':True]
['text':'  license, LICENSE.TXT.  By continuing to use, modify, or distribute     ','line_number':12,'multiline':True]
['text':'  this file you indicate that you have read the license and              ','line_number':13,'multiline':True]
['text':'  understand and accept it fully.                                        ','line_number':14,'multiline':True]
['text':'                                                                         ','line_number':15,'multiline':True]
['text':'*************************************************************************','line_number':16,'multiline':True]
['text':'***********************************************************************','line_number':28,'multiline':True]
['text':'                                                                       ','line_number':29,'multiline':True]
['text':'                 USER-SELECTABLE CONFIGURATION MACROS                  ','line_number':30,'multiline':True]
['text':'                                                                       ','line_number':31,'multiline':True]
['text':' This file contains the default configuration macro definitions for    ','line_number':32,'multiline':True]
['text':' a standard build of the FreeType library.  There are three ways to    ','line_number':33,'multiline':True]
['text':' use this file to build project-specific versions of the library:      ','line_number':34,'multiline':True]
['text':'                                                                       ','line_number':35,'multiline':True]
['text':'  - You can modify this file by hand, but this is not recommended in   ','line_number':36,'multiline':True]
['text':'    cases where you would like to build several versions of the        ','line_number':37,'multiline':True]
['text':'    library from a single source directory.                            ','line_number':38,'multiline':True]
['text':'                                                                       ','line_number':39,'multiline':True]
['text':'  - You can put a copy of this file in your build directory, more      ','line_number':40,'multiline':True]
['text':'    precisely in `$BUILD/freetype/config/ftoption.h', where `$BUILD'   ','line_number':41,'multiline':True]
['text':'    is the name of a directory that is included _before_ the FreeType  ','line_number':42,'multiline':True]
['text':'    include path during compilation.                                   ','line_number':43,'multiline':True]
['text':'                                                                       ','line_number':44,'multiline':True]
['text':'    The default FreeType Makefiles and Jamfiles use the build          ','line_number':45,'multiline':True]
['text':'    directory `builds/<system>' by default, but you can easily change  ','line_number':46,'multiline':True]
['text':'    that for your own projects.                                        ','line_number':47,'multiline':True]
['text':'                                                                       ','line_number':48,'multiline':True]
['text':'  - Copy the file <ft2build.h> to `$BUILD/ft2build.h' and modify it    ','line_number':49,'multiline':True]
['text':'    slightly to pre-define the macro FT_CONFIG_OPTIONS_H used to       ','line_number':50,'multiline':True]
['text':'    locate this file during the build.  For example,                   ','line_number':51,'multiline':True]
['text':'                                                                       ','line_number':52,'multiline':True]
['text':'      #define FT_CONFIG_OPTIONS_H  <myftoptions.h>                     ','line_number':53,'multiline':True]
['text':'      #include <freetype/config/ftheader.h>                            ','line_number':54,'multiline':True]
['text':'                                                                       ','line_number':55,'multiline':True]
['text':'    will use `$BUILD/myftoptions.h' instead of this file for macro     ','line_number':56,'multiline':True]
['text':'    definitions.                                                       ','line_number':57,'multiline':True]
['text':'                                                                       ','line_number':58,'multiline':True]
['text':'    Note also that you can similarly pre-define the macro              ','line_number':59,'multiline':True]
['text':'    FT_CONFIG_MODULES_H used to locate the file listing of the modules ','line_number':60,'multiline':True]
['text':'    that are statically linked to the library at compile time.  By     ','line_number':61,'multiline':True]
['text':'    default, this file is <freetype/config/ftmodule.h>.                ','line_number':62,'multiline':True]
['text':'                                                                       ','line_number':63,'multiline':True]
['text':' We highly recommend using the third method whenever possible.         ','line_number':64,'multiline':True]
['text':'                                                                       ','line_number':65,'multiline':True]
['text':'***********************************************************************','line_number':66,'multiline':True]
['text':'***********************************************************************','line_number':69,'multiline':True]
['text':'***********************************************************************','line_number':70,'multiline':True]
['text':'***                                                                 ***','line_number':71,'multiline':True]
['text':'*** G E N E R A L   F R E E T Y P E   2   C O N F I G U R A T I O N ***','line_number':72,'multiline':True]
['text':'***                                                                 ***','line_number':73,'multiline':True]
['text':'***********************************************************************','line_number':74,'multiline':True]
['text':'***********************************************************************','line_number':75,'multiline':True]
['text':'***********************************************************************','line_number':78,'multiline':True]
['text':'                                                                       ','line_number':79,'multiline':True]
['text':' Uncomment the line below if you want to activate sub-pixel rendering  ','line_number':80,'multiline':True]
['text':' (a.k.a. LCD rendering, or ClearType) in this build of the library.    ','line_number':81,'multiline':True]
['text':'                                                                       ','line_number':82,'multiline':True]
['text':' Note that this feature is covered by several Microsoft patents        ','line_number':83,'multiline':True]
['text':' and should not be activated in any default build of the library.      ','line_number':84,'multiline':True]
['text':'                                                                       ','line_number':85,'multiline':True]
['text':' This macro has no impact on the FreeType API, only on its             ','line_number':86,'multiline':True]
['text':' _implementation_.  For example, using FT_RENDER_MODE_LCD when calling ','line_number':87,'multiline':True]
['text':' FT_Render_Glyph still generates a bitmap that is 3 times wider than   ','line_number':88,'multiline':True]
['text':' the original size in case this macro isn't defined; however, each     ','line_number':89,'multiline':True]
['text':' triplet of subpixels has R=G=B.                                       ','line_number':90,'multiline':True]
['text':'                                                                       ','line_number':91,'multiline':True]
['text':' This is done to allow FreeType clients to run unmodified, forcing     ','line_number':92,'multiline':True]
['text':' them to display normal gray-level anti-aliased glyphs.                ','line_number':93,'multiline':True]
['text':'                                                                       ','line_number':94,'multiline':True]
['text':' #define FT_CONFIG_OPTION_SUBPIXEL_RENDERING ','line_number':95,'multiline':True]
['text':'***********************************************************************','line_number':98,'multiline':True]
['text':'                                                                       ','line_number':99,'multiline':True]
['text':' Many compilers provide a non-ANSI 64-bit data type that can be used   ','line_number':100,'multiline':True]
['text':' by FreeType to speed up some computations.  However, this will create ','line_number':101,'multiline':True]
['text':' some problems when compiling the library in strict ANSI mode.         ','line_number':102,'multiline':True]
['text':'                                                                       ','line_number':103,'multiline':True]
['text':' For this reason, the use of 64-bit integers is normally disabled when ','line_number':104,'multiline':True]
['text':' the __STDC__ macro is defined.  You can however disable this by       ','line_number':105,'multiline':True]
['text':' defining the macro FT_CONFIG_OPTION_FORCE_INT64 here.                 ','line_number':106,'multiline':True]
['text':'                                                                       ','line_number':107,'multiline':True]
['text':' For most compilers, this will only create compilation warnings when   ','line_number':108,'multiline':True]
['text':' building the library.                                                 ','line_number':109,'multiline':True]
['text':'                                                                       ','line_number':110,'multiline':True]
['text':' ObNote: The compiler-specific 64-bit integers are detected in the     ','line_number':111,'multiline':True]
['text':'         file `ftconfig.h' either statically or through the            ','line_number':112,'multiline':True]
['text':'         `configure' script on supported platforms.                    ','line_number':113,'multiline':True]
['text':'                                                                       ','line_number':114,'multiline':True]
['text':'***********************************************************************','line_number':118,'multiline':True]
['text':'                                                                       ','line_number':119,'multiline':True]
['text':' If this macro is defined, do not try to use an assembler version of   ','line_number':120,'multiline':True]
['text':' performance-critical functions (e.g. FT_MulFix).  You should only do  ','line_number':121,'multiline':True]
['text':' that to verify that the assembler function works properly, or to      ','line_number':122,'multiline':True]
['text':' execute benchmark tests of the various implementations.               ','line_number':123,'multiline':True]
['text':' #define FT_CONFIG_OPTION_NO_ASSEMBLER ','line_number':124,'multiline':True]
['text':'***********************************************************************','line_number':127,'multiline':True]
['text':'                                                                       ','line_number':128,'multiline':True]
['text':' If this macro is defined, try to use an inlined assembler version of  ','line_number':129,'multiline':True]
['text':' the `FT_MulFix' function, which is a `hotspot' when loading and       ','line_number':130,'multiline':True]
['text':' hinting glyphs, and which should be executed as fast as possible.     ','line_number':131,'multiline':True]
['text':'                                                                       ','line_number':132,'multiline':True]
['text':' Note that if your compiler or CPU is not supported, this will default ','line_number':133,'multiline':True]
['text':' to the standard and portable implementation found in `ftcalc.c'.      ','line_number':134,'multiline':True]
['text':'                                                                       ','line_number':135,'multiline':True]
['text':'***********************************************************************','line_number':139,'multiline':True]
['text':'                                                                       ','line_number':140,'multiline':True]
['text':' LZW-compressed file support.                                          ','line_number':141,'multiline':True]
['text':'                                                                       ','line_number':142,'multiline':True]
['text':'   FreeType now handles font files that have been compressed with the  ','line_number':143,'multiline':True]
['text':'   `compress' program.  This is mostly used to parse many of the PCF   ','line_number':144,'multiline':True]
['text':'   files that come with various X11 distributions.  The implementation ','line_number':145,'multiline':True]
['text':'   uses NetBSD's `zopen' to partially uncompress the file on the fly   ','line_number':146,'multiline':True]
['text':'   (see src/lzw/ftgzip.c).                                             ','line_number':147,'multiline':True]
['text':'                                                                       ','line_number':148,'multiline':True]
['text':'   Define this macro if you want to enable this `feature'.             ','line_number':149,'multiline':True]
['text':'                                                                       ','line_number':150,'multiline':True]
['text':'***********************************************************************','line_number':154,'multiline':True]
['text':'                                                                       ','line_number':155,'multiline':True]
['text':' Gzip-compressed file support.                                         ','line_number':156,'multiline':True]
['text':'                                                                       ','line_number':157,'multiline':True]
['text':'   FreeType now handles font files that have been compressed with the  ','line_number':158,'multiline':True]
['text':'   `gzip' program.  This is mostly used to parse many of the PCF files ','line_number':159,'multiline':True]
['text':'   that come with XFree86.  The implementation uses `zlib' to          ','line_number':160,'multiline':True]
['text':'   partially uncompress the file on the fly (see src/gzip/ftgzip.c).   ','line_number':161,'multiline':True]
['text':'                                                                       ','line_number':162,'multiline':True]
['text':'   Define this macro if you want to enable this `feature'.  See also   ','line_number':163,'multiline':True]
['text':'   the macro FT_CONFIG_OPTION_SYSTEM_ZLIB below.                       ','line_number':164,'multiline':True]
['text':'                                                                       ','line_number':165,'multiline':True]
['text':'***********************************************************************','line_number':169,'multiline':True]
['text':'                                                                       ','line_number':170,'multiline':True]
['text':' ZLib library selection                                                ','line_number':171,'multiline':True]
['text':'                                                                       ','line_number':172,'multiline':True]
['text':'   This macro is only used when FT_CONFIG_OPTION_USE_ZLIB is defined.  ','line_number':173,'multiline':True]
['text':'   It allows FreeType's `ftgzip' component to link to the system's     ','line_number':174,'multiline':True]
['text':'   installation of the ZLib library.  This is useful on systems like   ','line_number':175,'multiline':True]
['text':'   Unix or VMS where it generally is already available.                ','line_number':176,'multiline':True]
['text':'                                                                       ','line_number':177,'multiline':True]
['text':'   If you let it undefined, the component will use its own copy        ','line_number':178,'multiline':True]
['text':'   of the zlib sources instead.  These have been modified to be        ','line_number':179,'multiline':True]
['text':'   included directly within the component and *not* export external    ','line_number':180,'multiline':True]
['text':'   function names.  This allows you to link any program with FreeType  ','line_number':181,'multiline':True]
['text':'   _and_ ZLib without linking conflicts.                               ','line_number':182,'multiline':True]
['text':'                                                                       ','line_number':183,'multiline':True]
['text':'   Do not #undef this macro here since the build system might define   ','line_number':184,'multiline':True]
['text':'   it for certain configurations only.                                 ','line_number':185,'multiline':True]
['text':'                                                                       ','line_number':186,'multiline':True]
['text':'***********************************************************************','line_number':190,'multiline':True]
['text':'                                                                       ','line_number':191,'multiline':True]
['text':' Bzip2-compressed file support.                                        ','line_number':192,'multiline':True]
['text':'                                                                       ','line_number':193,'multiline':True]
['text':'   FreeType now handles font files that have been compressed with the  ','line_number':194,'multiline':True]
['text':'   `bzip2' program.  This is mostly used to parse many of the PCF      ','line_number':195,'multiline':True]
['text':'   files that come with XFree86.  The implementation uses `libbz2' to  ','line_number':196,'multiline':True]
['text':'   partially uncompress the file on the fly (see src/bzip2/ftbzip2.c). ','line_number':197,'multiline':True]
['text':'   Contrary to gzip, bzip2 currently is not included and need to use   ','line_number':198,'multiline':True]
['text':'   the system available bzip2 implementation.                          ','line_number':199,'multiline':True]
['text':'                                                                       ','line_number':200,'multiline':True]
['text':'   Define this macro if you want to enable this `feature'.             ','line_number':201,'multiline':True]
['text':'                                                                       ','line_number':202,'multiline':True]
['text':'***********************************************************************','line_number':206,'multiline':True]
['text':'                                                                       ','line_number':207,'multiline':True]
['text':' Define to disable the use of file stream functions and types, FILE,   ','line_number':208,'multiline':True]
['text':' fopen() etc.  Enables the use of smaller system libraries on embedded ','line_number':209,'multiline':True]
['text':' systems that have multiple system libraries, some with or without     ','line_number':210,'multiline':True]
['text':' file stream support, in the cases where file stream support is not    ','line_number':211,'multiline':True]
['text':' necessary such as memory loading of font files.                       ','line_number':212,'multiline':True]
['text':'                                                                       ','line_number':213,'multiline':True]
['text':' #define FT_CONFIG_OPTION_DISABLE_STREAM_SUPPORT ','line_number':214,'multiline':True]
['text':'***********************************************************************','line_number':217,'multiline':True]
['text':'                                                                       ','line_number':218,'multiline':True]
['text':' PNG bitmap support.                                                   ','line_number':219,'multiline':True]
['text':'                                                                       ','line_number':220,'multiline':True]
['text':'   FreeType now handles loading color bitmap glyphs in the PNG format. ','line_number':221,'multiline':True]
['text':'   This requires help from the external libpng library.  Uncompressed  ','line_number':222,'multiline':True]
['text':'   color bitmaps do not need any external libraries and will be        ','line_number':223,'multiline':True]
['text':'   supported regardless of this configuration.                         ','line_number':224,'multiline':True]
['text':'                                                                       ','line_number':225,'multiline':True]
['text':'   Define this macro if you want to enable this `feature'.             ','line_number':226,'multiline':True]
['text':'                                                                       ','line_number':227,'multiline':True]
['text':'***********************************************************************','line_number':231,'multiline':True]
['text':'                                                                       ','line_number':232,'multiline':True]
['text':' HarfBuzz support.                                                     ','line_number':233,'multiline':True]
['text':'                                                                       ','line_number':234,'multiline':True]
['text':'   FreeType uses the HarfBuzz library to improve auto-hinting of       ','line_number':235,'multiline':True]
['text':'   OpenType fonts.  If available, many glyphs not directly addressable ','line_number':236,'multiline':True]
['text':'   by a font's character map will be hinted also.                      ','line_number':237,'multiline':True]
['text':'                                                                       ','line_number':238,'multiline':True]
['text':'   Define this macro if you want to enable this `feature'.             ','line_number':239,'multiline':True]
['text':'                                                                       ','line_number':240,'multiline':True]
['text':'***********************************************************************','line_number':244,'multiline':True]
['text':'                                                                       ','line_number':245,'multiline':True]
['text':' DLL export compilation                                                ','line_number':246,'multiline':True]
['text':'                                                                       ','line_number':247,'multiline':True]
['text':'   When compiling FreeType as a DLL, some systems/compilers need a     ','line_number':248,'multiline':True]
['text':'   special keyword in front OR after the return type of function       ','line_number':249,'multiline':True]
['text':'   declarations.                                                       ','line_number':250,'multiline':True]
['text':'                                                                       ','line_number':251,'multiline':True]
['text':'   Two macros are used within the FreeType source code to define       ','line_number':252,'multiline':True]
['text':'   exported library functions: FT_EXPORT and FT_EXPORT_DEF.            ','line_number':253,'multiline':True]
['text':'                                                                       ','line_number':254,'multiline':True]
['text':'     FT_EXPORT( return_type )                                          ','line_number':255,'multiline':True]
['text':'                                                                       ','line_number':256,'multiline':True]
['text':'       is used in a function declaration, as in                        ','line_number':257,'multiline':True]
['text':'                                                                       ','line_number':258,'multiline':True]
['text':'         FT_EXPORT( FT_Error )                                         ','line_number':259,'multiline':True]
['text':'         FT_Init_FreeType( FT_Library*  alibrary );                    ','line_number':260,'multiline':True]
['text':'                                                                       ','line_number':261,'multiline':True]
['text':'                                                                       ','line_number':262,'multiline':True]
['text':'     FT_EXPORT_DEF( return_type )                                      ','line_number':263,'multiline':True]
['text':'                                                                       ','line_number':264,'multiline':True]
['text':'       is used in a function definition, as in                         ','line_number':265,'multiline':True]
['text':'                                                                       ','line_number':266,'multiline':True]
['text':'         FT_EXPORT_DEF( FT_Error )                                     ','line_number':267,'multiline':True]
['text':'         FT_Init_FreeType( FT_Library*  alibrary )                     ','line_number':268,'multiline':True]
['text':'         {                                                             ','line_number':269,'multiline':True]
['text':'           ... some code ...                                           ','line_number':270,'multiline':True]
['text':'           return FT_Err_Ok;                                           ','line_number':271,'multiline':True]
['text':'         }                                                             ','line_number':272,'multiline':True]
['text':'                                                                       ','line_number':273,'multiline':True]
['text':'   You can provide your own implementation of FT_EXPORT and            ','line_number':274,'multiline':True]
['text':'   FT_EXPORT_DEF here if you want.  If you leave them undefined, they  ','line_number':275,'multiline':True]
['text':'   will be later automatically defined as `extern return_type' to      ','line_number':276,'multiline':True]
['text':'   allow normal compilation.                                           ','line_number':277,'multiline':True]
['text':'                                                                       ','line_number':278,'multiline':True]
['text':'   Do not #undef these macros here since the build system might define ','line_number':279,'multiline':True]
['text':'   them for certain configurations only.                               ','line_number':280,'multiline':True]
['text':'                                                                       ','line_number':281,'multiline':True]
['text':' #define FT_EXPORT(x)      extern x ','line_number':282,'multiline':True]
['text':' #define FT_EXPORT_DEF(x)  x ','line_number':283,'multiline':True]
['text':'***********************************************************************','line_number':286,'multiline':True]
['text':'                                                                       ','line_number':287,'multiline':True]
['text':' Glyph Postscript Names handling                                       ','line_number':288,'multiline':True]
['text':'                                                                       ','line_number':289,'multiline':True]
['text':'   By default, FreeType 2 is compiled with the `psnames' module.  This ','line_number':290,'multiline':True]
['text':'   module is in charge of converting a glyph name string into a        ','line_number':291,'multiline':True]
['text':'   Unicode value, or return a Macintosh standard glyph name for the    ','line_number':292,'multiline':True]
['text':'   use with the TrueType `post' table.                                 ','line_number':293,'multiline':True]
['text':'                                                                       ','line_number':294,'multiline':True]
['text':'   Undefine this macro if you do not want `psnames' compiled in your   ','line_number':295,'multiline':True]
['text':'   build of FreeType.  This has the following effects:                 ','line_number':296,'multiline':True]
['text':'                                                                       ','line_number':297,'multiline':True]
['text':'   - The TrueType driver will provide its own set of glyph names,      ','line_number':298,'multiline':True]
['text':'     if you build it to support postscript names in the TrueType       ','line_number':299,'multiline':True]
['text':'     `post' table.                                                     ','line_number':300,'multiline':True]
['text':'                                                                       ','line_number':301,'multiline':True]
['text':'   - The Type 1 driver will not be able to synthesize a Unicode        ','line_number':302,'multiline':True]
['text':'     charmap out of the glyphs found in the fonts.                     ','line_number':303,'multiline':True]
['text':'                                                                       ','line_number':304,'multiline':True]
['text':'   You would normally undefine this configuration macro when building  ','line_number':305,'multiline':True]
['text':'   a version of FreeType that doesn't contain a Type 1 or CFF driver.  ','line_number':306,'multiline':True]
['text':'                                                                       ','line_number':307,'multiline':True]
['text':'***********************************************************************','line_number':311,'multiline':True]
['text':'                                                                       ','line_number':312,'multiline':True]
['text':' Postscript Names to Unicode Values support                            ','line_number':313,'multiline':True]
['text':'                                                                       ','line_number':314,'multiline':True]
['text':'   By default, FreeType 2 is built with the `PSNames' module compiled  ','line_number':315,'multiline':True]
['text':'   in.  Among other things, the module is used to convert a glyph name ','line_number':316,'multiline':True]
['text':'   into a Unicode value.  This is especially useful in order to        ','line_number':317,'multiline':True]
['text':'   synthesize on the fly a Unicode charmap from the CFF/Type 1 driver  ','line_number':318,'multiline':True]
['text':'   through a big table named the `Adobe Glyph List' (AGL).             ','line_number':319,'multiline':True]
['text':'                                                                       ','line_number':320,'multiline':True]
['text':'   Undefine this macro if you do not want the Adobe Glyph List         ','line_number':321,'multiline':True]
['text':'   compiled in your `PSNames' module.  The Type 1 driver will not be   ','line_number':322,'multiline':True]
['text':'   able to synthesize a Unicode charmap out of the glyphs found in the ','line_number':323,'multiline':True]
['text':'   fonts.                                                              ','line_number':324,'multiline':True]
['text':'                                                                       ','line_number':325,'multiline':True]
['text':'***********************************************************************','line_number':329,'multiline':True]
['text':'                                                                       ','line_number':330,'multiline':True]
['text':' Support for Mac fonts                                                 ','line_number':331,'multiline':True]
['text':'                                                                       ','line_number':332,'multiline':True]
['text':'   Define this macro if you want support for outline fonts in Mac      ','line_number':333,'multiline':True]
['text':'   format (mac dfont, mac resource, macbinary containing a mac         ','line_number':334,'multiline':True]
['text':'   resource) on non-Mac platforms.                                     ','line_number':335,'multiline':True]
['text':'                                                                       ','line_number':336,'multiline':True]
['text':'   Note that the `FOND' resource isn't checked.                        ','line_number':337,'multiline':True]
['text':'                                                                       ','line_number':338,'multiline':True]
['text':'***********************************************************************','line_number':342,'multiline':True]
['text':'                                                                       ','line_number':343,'multiline':True]
['text':' Guessing methods to access embedded resource forks                    ','line_number':344,'multiline':True]
['text':'                                                                       ','line_number':345,'multiline':True]
['text':'   Enable extra Mac fonts support on non-Mac platforms (e.g.           ','line_number':346,'multiline':True]
['text':'   GNU/Linux).                                                         ','line_number':347,'multiline':True]
['text':'                                                                       ','line_number':348,'multiline':True]
['text':'   Resource forks which include fonts data are stored sometimes in     ','line_number':349,'multiline':True]
['text':'   locations which users or developers don't expected.  In some cases, ','line_number':350,'multiline':True]
['text':'   resource forks start with some offset from the head of a file.  In  ','line_number':351,'multiline':True]
['text':'   other cases, the actual resource fork is stored in file different   ','line_number':352,'multiline':True]
['text':'   from what the user specifies.  If this option is activated,         ','line_number':353,'multiline':True]
['text':'   FreeType tries to guess whether such offsets or different file      ','line_number':354,'multiline':True]
['text':'   names must be used.                                                 ','line_number':355,'multiline':True]
['text':'                                                                       ','line_number':356,'multiline':True]
['text':'   Note that normal, direct access of resource forks is controlled via ','line_number':357,'multiline':True]
['text':'   the FT_CONFIG_OPTION_MAC_FONTS option.                              ','line_number':358,'multiline':True]
['text':'                                                                       ','line_number':359,'multiline':True]
['text':'***********************************************************************','line_number':365,'multiline':True]
['text':'                                                                       ','line_number':366,'multiline':True]
['text':' Allow the use of FT_Incremental_Interface to load typefaces that      ','line_number':367,'multiline':True]
['text':' contain no glyph data, but supply it via a callback function.         ','line_number':368,'multiline':True]
['text':' This is required by clients supporting document formats which         ','line_number':369,'multiline':True]
['text':' supply font data incrementally as the document is parsed, such        ','line_number':370,'multiline':True]
['text':' as the Ghostscript interpreter for the PostScript language.           ','line_number':371,'multiline':True]
['text':'                                                                       ','line_number':372,'multiline':True]
['text':'***********************************************************************','line_number':376,'multiline':True]
['text':'                                                                       ','line_number':377,'multiline':True]
['text':' The size in bytes of the render pool used by the scan-line converter  ','line_number':378,'multiline':True]
['text':' to do all of its work.                                                ','line_number':379,'multiline':True]
['text':'                                                                       ','line_number':380,'multiline':True]
['text':'***********************************************************************','line_number':384,'multiline':True]
['text':'                                                                       ','line_number':385,'multiline':True]
['text':' FT_MAX_MODULES                                                        ','line_number':386,'multiline':True]
['text':'                                                                       ','line_number':387,'multiline':True]
['text':'   The maximum number of modules that can be registered in a single    ','line_number':388,'multiline':True]
['text':'   FreeType library object.  32 is the default.                        ','line_number':389,'multiline':True]
['text':'                                                                       ','line_number':390,'multiline':True]
['text':'***********************************************************************','line_number':394,'multiline':True]
['text':'                                                                       ','line_number':395,'multiline':True]
['text':' Debug level                                                           ','line_number':396,'multiline':True]
['text':'                                                                       ','line_number':397,'multiline':True]
['text':'   FreeType can be compiled in debug or trace mode.  In debug mode,    ','line_number':398,'multiline':True]
['text':'   errors are reported through the `ftdebug' component.  In trace      ','line_number':399,'multiline':True]
['text':'   mode, additional messages are sent to the standard output during    ','line_number':400,'multiline':True]
['text':'   execution.                                                          ','line_number':401,'multiline':True]
['text':'                                                                       ','line_number':402,'multiline':True]
['text':'   Define FT_DEBUG_LEVEL_ERROR to build the library in debug mode.     ','line_number':403,'multiline':True]
['text':'   Define FT_DEBUG_LEVEL_TRACE to build it in trace mode.              ','line_number':404,'multiline':True]
['text':'                                                                       ','line_number':405,'multiline':True]
['text':'   Don't define any of these macros to compile in `release' mode!      ','line_number':406,'multiline':True]
['text':'                                                                       ','line_number':407,'multiline':True]
['text':'   Do not #undef these macros here since the build system might define ','line_number':408,'multiline':True]
['text':'   them for certain configurations only.                               ','line_number':409,'multiline':True]
['text':'                                                                       ','line_number':410,'multiline':True]
['text':' #define FT_DEBUG_LEVEL_ERROR ','line_number':411,'multiline':True]
['text':' #define FT_DEBUG_LEVEL_TRACE ','line_number':412,'multiline':True]
['text':'***********************************************************************','line_number':415,'multiline':True]
['text':'                                                                       ','line_number':416,'multiline':True]
['text':' Autofitter debugging                                                  ','line_number':417,'multiline':True]
['text':'                                                                       ','line_number':418,'multiline':True]
['text':'   If FT_DEBUG_AUTOFIT is defined, FreeType provides some means to     ','line_number':419,'multiline':True]
['text':'   control the autofitter behaviour for debugging purposes with global ','line_number':420,'multiline':True]
['text':'   boolean variables (consequently, you should *never* enable this     ','line_number':421,'multiline':True]
['text':'   while compiling in `release' mode):                                 ','line_number':422,'multiline':True]
['text':'                                                                       ','line_number':423,'multiline':True]
['text':'     _af_debug_disable_horz_hints                                      ','line_number':424,'multiline':True]
['text':'     _af_debug_disable_vert_hints                                      ','line_number':425,'multiline':True]
['text':'     _af_debug_disable_blue_hints                                      ','line_number':426,'multiline':True]
['text':'                                                                       ','line_number':427,'multiline':True]
['text':'   Additionally, the following functions provide dumps of various      ','line_number':428,'multiline':True]
['text':'   internal autofit structures to stdout (using `printf'):             ','line_number':429,'multiline':True]
['text':'                                                                       ','line_number':430,'multiline':True]
['text':'     af_glyph_hints_dump_points                                        ','line_number':431,'multiline':True]
['text':'     af_glyph_hints_dump_segments                                      ','line_number':432,'multiline':True]
['text':'     af_glyph_hints_dump_edges                                         ','line_number':433,'multiline':True]
['text':'     af_glyph_hints_get_num_segments                                   ','line_number':434,'multiline':True]
['text':'     af_glyph_hints_get_segment_offset                                 ','line_number':435,'multiline':True]
['text':'                                                                       ','line_number':436,'multiline':True]
['text':'   As an argument, they use another global variable:                   ','line_number':437,'multiline':True]
['text':'                                                                       ','line_number':438,'multiline':True]
['text':'     _af_debug_hints                                                   ','line_number':439,'multiline':True]
['text':'                                                                       ','line_number':440,'multiline':True]
['text':'   Please have a look at the `ftgrid' demo program to see how those    ','line_number':441,'multiline':True]
['text':'   variables and macros should be used.                                ','line_number':442,'multiline':True]
['text':'                                                                       ','line_number':443,'multiline':True]
['text':'   Do not #undef these macros here since the build system might define ','line_number':444,'multiline':True]
['text':'   them for certain configurations only.                               ','line_number':445,'multiline':True]
['text':'                                                                       ','line_number':446,'multiline':True]
['text':' #define FT_DEBUG_AUTOFIT ','line_number':447,'multiline':True]
['text':'***********************************************************************','line_number':450,'multiline':True]
['text':'                                                                       ','line_number':451,'multiline':True]
['text':' Memory Debugging                                                      ','line_number':452,'multiline':True]
['text':'                                                                       ','line_number':453,'multiline':True]
['text':'   FreeType now comes with an integrated memory debugger that is       ','line_number':454,'multiline':True]
['text':'   capable of detecting simple errors like memory leaks or double      ','line_number':455,'multiline':True]
['text':'   deletes.  To compile it within your build of the library, you       ','line_number':456,'multiline':True]
['text':'   should define FT_DEBUG_MEMORY here.                                 ','line_number':457,'multiline':True]
['text':'                                                                       ','line_number':458,'multiline':True]
['text':'   Note that the memory debugger is only activated at runtime when     ','line_number':459,'multiline':True]
['text':'   when the _environment_ variable `FT2_DEBUG_MEMORY' is defined also! ','line_number':460,'multiline':True]
['text':'                                                                       ','line_number':461,'multiline':True]
['text':'   Do not #undef this macro here since the build system might define   ','line_number':462,'multiline':True]
['text':'   it for certain configurations only.                                 ','line_number':463,'multiline':True]
['text':'                                                                       ','line_number':464,'multiline':True]
['text':' #define FT_DEBUG_MEMORY ','line_number':465,'multiline':True]
['text':'***********************************************************************','line_number':468,'multiline':True]
['text':'                                                                       ','line_number':469,'multiline':True]
['text':' Module errors                                                         ','line_number':470,'multiline':True]
['text':'                                                                       ','line_number':471,'multiline':True]
['text':'   If this macro is set (which is _not_ the default), the higher byte  ','line_number':472,'multiline':True]
['text':'   of an error code gives the module in which the error has occurred,  ','line_number':473,'multiline':True]
['text':'   while the lower byte is the real error code.                        ','line_number':474,'multiline':True]
['text':'                                                                       ','line_number':475,'multiline':True]
['text':'   Setting this macro makes sense for debugging purposes only, since   ','line_number':476,'multiline':True]
['text':'   it would break source compatibility of certain programs that use    ','line_number':477,'multiline':True]
['text':'   FreeType 2.                                                         ','line_number':478,'multiline':True]
['text':'                                                                       ','line_number':479,'multiline':True]
['text':'   More details can be found in the files ftmoderr.h and fterrors.h.   ','line_number':480,'multiline':True]
['text':'                                                                       ','line_number':481,'multiline':True]
['text':'***********************************************************************','line_number':485,'multiline':True]
['text':'                                                                       ','line_number':486,'multiline':True]
['text':' Position Independent Code                                             ','line_number':487,'multiline':True]
['text':'                                                                       ','line_number':488,'multiline':True]
['text':'   If this macro is set (which is _not_ the default), FreeType2 will   ','line_number':489,'multiline':True]
['text':'   avoid creating constants that require address fixups.  Instead the  ','line_number':490,'multiline':True]
['text':'   constants will be moved into a struct and additional intialization  ','line_number':491,'multiline':True]
['text':'   code will be used.                                                  ','line_number':492,'multiline':True]
['text':'                                                                       ','line_number':493,'multiline':True]
['text':'   Setting this macro is needed for systems that prohibit address      ','line_number':494,'multiline':True]
['text':'   fixups, such as BREW.                                               ','line_number':495,'multiline':True]
['text':'                                                                       ','line_number':496,'multiline':True]
['text':'***********************************************************************','line_number':500,'multiline':True]
['text':'***********************************************************************','line_number':501,'multiline':True]
['text':'***                                                                 ***','line_number':502,'multiline':True]
['text':'***        S F N T   D R I V E R    C O N F I G U R A T I O N       ***','line_number':503,'multiline':True]
['text':'***                                                                 ***','line_number':504,'multiline':True]
['text':'***********************************************************************','line_number':505,'multiline':True]
['text':'***********************************************************************','line_number':506,'multiline':True]
['text':'***********************************************************************','line_number':509,'multiline':True]
['text':'                                                                       ','line_number':510,'multiline':True]
['text':' Define TT_CONFIG_OPTION_EMBEDDED_BITMAPS if you want to support       ','line_number':511,'multiline':True]
['text':' embedded bitmaps in all formats using the SFNT module (namely         ','line_number':512,'multiline':True]
['text':' TrueType & OpenType).                                                 ','line_number':513,'multiline':True]
['text':'                                                                       ','line_number':514,'multiline':True]
['text':'***********************************************************************','line_number':518,'multiline':True]
['text':'                                                                       ','line_number':519,'multiline':True]
['text':' Define TT_CONFIG_OPTION_POSTSCRIPT_NAMES if you want to be able to    ','line_number':520,'multiline':True]
['text':' load and enumerate the glyph Postscript names in a TrueType or        ','line_number':521,'multiline':True]
['text':' OpenType file.                                                        ','line_number':522,'multiline':True]
['text':'                                                                       ','line_number':523,'multiline':True]
['text':' Note that when you do not compile the `PSNames' module by undefining  ','line_number':524,'multiline':True]
['text':' the above FT_CONFIG_OPTION_POSTSCRIPT_NAMES, the `sfnt' module will   ','line_number':525,'multiline':True]
['text':' contain additional code used to read the PS Names table from a font.  ','line_number':526,'multiline':True]
['text':'                                                                       ','line_number':527,'multiline':True]
['text':' (By default, the module uses `PSNames' to extract glyph names.)       ','line_number':528,'multiline':True]
['text':'                                                                       ','line_number':529,'multiline':True]
['text':'***********************************************************************','line_number':533,'multiline':True]
['text':'                                                                       ','line_number':534,'multiline':True]
['text':' Define TT_CONFIG_OPTION_SFNT_NAMES if your applications need to       ','line_number':535,'multiline':True]
['text':' access the internal name table in a SFNT-based format like TrueType   ','line_number':536,'multiline':True]
['text':' or OpenType.  The name table contains various strings used to         ','line_number':537,'multiline':True]
['text':' describe the font, like family name, copyright, version, etc.  It     ','line_number':538,'multiline':True]
['text':' does not contain any glyph name though.                               ','line_number':539,'multiline':True]
['text':'                                                                       ','line_number':540,'multiline':True]
['text':' Accessing SFNT names is done through the functions declared in        ','line_number':541,'multiline':True]
['text':' `ftsnames.h'.                                                         ','line_number':542,'multiline':True]
['text':'                                                                       ','line_number':543,'multiline':True]
['text':'***********************************************************************','line_number':547,'multiline':True]
['text':'                                                                       ','line_number':548,'multiline':True]
['text':' TrueType CMap support                                                 ','line_number':549,'multiline':True]
['text':'                                                                       ','line_number':550,'multiline':True]
['text':'   Here you can fine-tune which TrueType CMap table format shall be    ','line_number':551,'multiline':True]
['text':'   supported.                                                          ','line_number':552,'multiline':True]
['text':'***********************************************************************','line_number':564,'multiline':True]
['text':'***********************************************************************','line_number':565,'multiline':True]
['text':'***                                                                 ***','line_number':566,'multiline':True]
['text':'***    T R U E T Y P E   D R I V E R    C O N F I G U R A T I O N   ***','line_number':567,'multiline':True]
['text':'***                                                                 ***','line_number':568,'multiline':True]
['text':'***********************************************************************','line_number':569,'multiline':True]
['text':'***********************************************************************','line_number':570,'multiline':True]
['text':'***********************************************************************','line_number':572,'multiline':True]
['text':'                                                                       ','line_number':573,'multiline':True]
['text':' Define TT_CONFIG_OPTION_BYTECODE_INTERPRETER if you want to compile   ','line_number':574,'multiline':True]
['text':' a bytecode interpreter in the TrueType driver.                        ','line_number':575,'multiline':True]
['text':'                                                                       ','line_number':576,'multiline':True]
['text':' By undefining this, you will only compile the code necessary to load  ','line_number':577,'multiline':True]
['text':' TrueType glyphs without hinting.                                      ','line_number':578,'multiline':True]
['text':'                                                                       ','line_number':579,'multiline':True]
['text':'   Do not #undef this macro here, since the build system might         ','line_number':580,'multiline':True]
['text':'   define it for certain configurations only.                          ','line_number':581,'multiline':True]
['text':'                                                                       ','line_number':582,'multiline':True]
['text':'***********************************************************************','line_number':586,'multiline':True]
['text':'                                                                       ','line_number':587,'multiline':True]
['text':' Define TT_CONFIG_OPTION_SUBPIXEL_HINTING if you want to compile       ','line_number':588,'multiline':True]
['text':' EXPERIMENTAL subpixel hinting support into the TrueType driver.  This ','line_number':589,'multiline':True]
['text':' replaces the native TrueType hinting mechanism when anything but      ','line_number':590,'multiline':True]
['text':' FT_RENDER_MODE_MONO is requested.                                     ','line_number':591,'multiline':True]
['text':'                                                                       ','line_number':592,'multiline':True]
['text':' Enabling this causes the TrueType driver to ignore instructions under ','line_number':593,'multiline':True]
['text':' certain conditions.  This is done in accordance with the guide here,  ','line_number':594,'multiline':True]
['text':' with some minor differences:                                          ','line_number':595,'multiline':True]
['text':'                                                                       ','line_number':596,'multiline':True]
['text':'  http://www.microsoft.com/typography/cleartype/truetypecleartype.aspx ','line_number':597,'multiline':True]
['text':'                                                                       ','line_number':598,'multiline':True]
['text':' By undefining this, you only compile the code necessary to hint       ','line_number':599,'multiline':True]
['text':' TrueType glyphs with native TT hinting.                               ','line_number':600,'multiline':True]
['text':'                                                                       ','line_number':601,'multiline':True]
['text':'   This option requires TT_CONFIG_OPTION_BYTECODE_INTERPRETER to be    ','line_number':602,'multiline':True]
['text':'   defined.                                                            ','line_number':603,'multiline':True]
['text':'                                                                       ','line_number':604,'multiline':True]
['text':' #define TT_CONFIG_OPTION_SUBPIXEL_HINTING ','line_number':605,'multiline':True]
['text':'***********************************************************************','line_number':608,'multiline':True]
['text':'                                                                       ','line_number':609,'multiline':True]
['text':' If you define TT_CONFIG_OPTION_UNPATENTED_HINTING, a special version  ','line_number':610,'multiline':True]
['text':' of the TrueType bytecode interpreter is used that doesn't implement   ','line_number':611,'multiline':True]
['text':' any of the patented opcodes and algorithms.  The patents related to   ','line_number':612,'multiline':True]
['text':' TrueType hinting have expired worldwide since May 2010; this option   ','line_number':613,'multiline':True]
['text':' is now deprecated.                                                    ','line_number':614,'multiline':True]
['text':'                                                                       ','line_number':615,'multiline':True]
['text':' Note that the TT_CONFIG_OPTION_UNPATENTED_HINTING macro is *ignored*  ','line_number':616,'multiline':True]
['text':' if you define TT_CONFIG_OPTION_BYTECODE_INTERPRETER; in other words,  ','line_number':617,'multiline':True]
['text':' either define TT_CONFIG_OPTION_BYTECODE_INTERPRETER or                ','line_number':618,'multiline':True]
['text':' TT_CONFIG_OPTION_UNPATENTED_HINTING but not both at the same time.    ','line_number':619,'multiline':True]
['text':'                                                                       ','line_number':620,'multiline':True]
['text':' This macro is only useful for a small number of font files (mostly    ','line_number':621,'multiline':True]
['text':' for Asian scripts) that require bytecode interpretation to properly   ','line_number':622,'multiline':True]
['text':' load glyphs.  For all other fonts, this produces unpleasant results,  ','line_number':623,'multiline':True]
['text':' thus the unpatented interpreter is never used to load glyphs from     ','line_number':624,'multiline':True]
['text':' TrueType fonts unless one of the following two options is used.       ','line_number':625,'multiline':True]
['text':'                                                                       ','line_number':626,'multiline':True]
['text':'   - The unpatented interpreter is explicitly activated by the user    ','line_number':627,'multiline':True]
['text':'     through the FT_PARAM_TAG_UNPATENTED_HINTING parameter tag         ','line_number':628,'multiline':True]
['text':'     when opening the FT_Face.                                         ','line_number':629,'multiline':True]
['text':'                                                                       ','line_number':630,'multiline':True]
['text':'   - FreeType detects that the FT_Face corresponds to one of the       ','line_number':631,'multiline':True]
['text':'     `trick' fonts (e.g., `Mingliu') it knows about.  The font engine  ','line_number':632,'multiline':True]
['text':'     contains a hard-coded list of font names and other matching       ','line_number':633,'multiline':True]
['text':'     parameters (see function `tt_face_init' in file                   ','line_number':634,'multiline':True]
['text':'     `src/truetype/ttobjs.c').                                         ','line_number':635,'multiline':True]
['text':'                                                                       ','line_number':636,'multiline':True]
['text':' Here a sample code snippet for using FT_PARAM_TAG_UNPATENTED_HINTING. ','line_number':637,'multiline':True]
['text':'                                                                       ','line_number':638,'multiline':True]
['text':'   {                                                                   ','line_number':639,'multiline':True]
['text':'     FT_Parameter  parameter;                                          ','line_number':640,'multiline':True]
['text':'     FT_Open_Args  open_args;                                          ','line_number':641,'multiline':True]
['text':'                                                                       ','line_number':642,'multiline':True]
['text':'                                                                       ','line_number':643,'multiline':True]
['text':'     parameter.tag = FT_PARAM_TAG_UNPATENTED_HINTING;                  ','line_number':644,'multiline':True]
['text':'                                                                       ','line_number':645,'multiline':True]
['text':'     open_args.flags      = FT_OPEN_PATHNAME | FT_OPEN_PARAMS;         ','line_number':646,'multiline':True]
['text':'     open_args.pathname   = my_font_pathname;                          ','line_number':647,'multiline':True]
['text':'     open_args.num_params = 1;                                         ','line_number':648,'multiline':True]
['text':'     open_args.params     = &parameter;                                ','line_number':649,'multiline':True]
['text':'                                                                       ','line_number':650,'multiline':True]
['text':'     error = FT_Open_Face( library, &open_args, index, &face );        ','line_number':651,'multiline':True]
['text':'     ...                                                               ','line_number':652,'multiline':True]
['text':'   }                                                                   ','line_number':653,'multiline':True]
['text':'                                                                       ','line_number':654,'multiline':True]
['text':' #define TT_CONFIG_OPTION_UNPATENTED_HINTING ','line_number':655,'multiline':True]
['text':'***********************************************************************','line_number':658,'multiline':True]
['text':'                                                                       ','line_number':659,'multiline':True]
['text':' Define TT_CONFIG_OPTION_COMPONENT_OFFSET_SCALED to compile the        ','line_number':660,'multiline':True]
['text':' TrueType glyph loader to use Apple's definition of how to handle      ','line_number':661,'multiline':True]
['text':' component offsets in composite glyphs.                                ','line_number':662,'multiline':True]
['text':'                                                                       ','line_number':663,'multiline':True]
['text':' Apple and MS disagree on the default behavior of component offsets    ','line_number':664,'multiline':True]
['text':' in composites.  Apple says that they should be scaled by the scaling  ','line_number':665,'multiline':True]
['text':' factors in the transformation matrix (roughly, it's more complex)     ','line_number':666,'multiline':True]
['text':' while MS says they should not.  OpenType defines two bits in the      ','line_number':667,'multiline':True]
['text':' composite flags array which can be used to disambiguate, but old      ','line_number':668,'multiline':True]
['text':' fonts will not have them.                                             ','line_number':669,'multiline':True]
['text':'                                                                       ','line_number':670,'multiline':True]
['text':'   http://www.microsoft.com/typography/otspec/glyf.htm                 ','line_number':671,'multiline':True]
['text':'   https://developer.apple.com/fonts/TrueType-Reference-Manual/RM06/Chap6glyf.html ','line_number':672,'multiline':True]
['text':'                                                                       ','line_number':673,'multiline':True]
['text':'***********************************************************************','line_number':677,'multiline':True]
['text':'                                                                       ','line_number':678,'multiline':True]
['text':' Define TT_CONFIG_OPTION_GX_VAR_SUPPORT if you want to include         ','line_number':679,'multiline':True]
['text':' support for Apple's distortable font technology (fvar, gvar, cvar,    ','line_number':680,'multiline':True]
['text':' and avar tables).  This has many similarities to Type 1 Multiple      ','line_number':681,'multiline':True]
['text':' Masters support.                                                      ','line_number':682,'multiline':True]
['text':'                                                                       ','line_number':683,'multiline':True]
['text':'***********************************************************************','line_number':687,'multiline':True]
['text':'                                                                       ','line_number':688,'multiline':True]
['text':' Define TT_CONFIG_OPTION_BDF if you want to include support for        ','line_number':689,'multiline':True]
['text':' an embedded `BDF ' table within SFNT-based bitmap formats.            ','line_number':690,'multiline':True]
['text':'                                                                       ','line_number':691,'multiline':True]
['text':'***********************************************************************','line_number':695,'multiline':True]
['text':'***********************************************************************','line_number':696,'multiline':True]
['text':'***                                                                 ***','line_number':697,'multiline':True]
['text':'***      T Y P E 1   D R I V E R    C O N F I G U R A T I O N       ***','line_number':698,'multiline':True]
['text':'***                                                                 ***','line_number':699,'multiline':True]
['text':'***********************************************************************','line_number':700,'multiline':True]
['text':'***********************************************************************','line_number':701,'multiline':True]
['text':'***********************************************************************','line_number':704,'multiline':True]
['text':'                                                                       ','line_number':705,'multiline':True]
['text':' T1_MAX_DICT_DEPTH is the maximum depth of nest dictionaries and       ','line_number':706,'multiline':True]
['text':' arrays in the Type 1 stream (see t1load.c).  A minimum of 4 is        ','line_number':707,'multiline':True]
['text':' required.                                                             ','line_number':708,'multiline':True]
['text':'                                                                       ','line_number':709,'multiline':True]
['text':'***********************************************************************','line_number':713,'multiline':True]
['text':'                                                                       ','line_number':714,'multiline':True]
['text':' T1_MAX_SUBRS_CALLS details the maximum number of nested sub-routine   ','line_number':715,'multiline':True]
['text':' calls during glyph loading.                                           ','line_number':716,'multiline':True]
['text':'                                                                       ','line_number':717,'multiline':True]
['text':'***********************************************************************','line_number':721,'multiline':True]
['text':'                                                                       ','line_number':722,'multiline':True]
['text':' T1_MAX_CHARSTRING_OPERANDS is the charstring stack's capacity.  A     ','line_number':723,'multiline':True]
['text':' minimum of 16 is required.                                            ','line_number':724,'multiline':True]
['text':'                                                                       ','line_number':725,'multiline':True]
['text':' The Chinese font MingTiEG-Medium (CNS 11643 character set) needs 256. ','line_number':726,'multiline':True]
['text':'                                                                       ','line_number':727,'multiline':True]
['text':'***********************************************************************','line_number':731,'multiline':True]
['text':'                                                                       ','line_number':732,'multiline':True]
['text':' Define this configuration macro if you want to prevent the            ','line_number':733,'multiline':True]
['text':' compilation of `t1afm', which is in charge of reading Type 1 AFM      ','line_number':734,'multiline':True]
['text':' files into an existing face.  Note that if set, the T1 driver will be ','line_number':735,'multiline':True]
['text':' unable to produce kerning distances.                                  ','line_number':736,'multiline':True]
['text':'                                                                       ','line_number':737,'multiline':True]
['text':'***********************************************************************','line_number':741,'multiline':True]
['text':'                                                                       ','line_number':742,'multiline':True]
['text':' Define this configuration macro if you want to prevent the            ','line_number':743,'multiline':True]
['text':' compilation of the Multiple Masters font support in the Type 1        ','line_number':744,'multiline':True]
['text':' driver.                                                               ','line_number':745,'multiline':True]
['text':'                                                                       ','line_number':746,'multiline':True]
['text':'***********************************************************************','line_number':750,'multiline':True]
['text':'***********************************************************************','line_number':751,'multiline':True]
['text':'***                                                                 ***','line_number':752,'multiline':True]
['text':'***         C F F   D R I V E R    C O N F I G U R A T I O N        ***','line_number':753,'multiline':True]
['text':'***                                                                 ***','line_number':754,'multiline':True]
['text':'***********************************************************************','line_number':755,'multiline':True]
['text':'***********************************************************************','line_number':756,'multiline':True]
['text':'***********************************************************************','line_number':759,'multiline':True]
['text':'                                                                       ','line_number':760,'multiline':True]
['text':' Using CFF_CONFIG_OPTION_DARKENING_PARAMETER_{X,Y}{1,2,3,4} it is      ','line_number':761,'multiline':True]
['text':' possible to set up the default values of the four control points that ','line_number':762,'multiline':True]
['text':' define the stem darkening behaviour of the (new) CFF engine.  For     ','line_number':763,'multiline':True]
['text':' more details please read the documentation of the                     ','line_number':764,'multiline':True]
['text':' `darkening-parameters' property of the cff driver module (file        ','line_number':765,'multiline':True]
['text':' `ftcffdrv.h'), which allows the control at run-time.                  ','line_number':766,'multiline':True]
['text':'                                                                       ','line_number':767,'multiline':True]
['text':' Do *not* undefine these macros!                                       ','line_number':768,'multiline':True]
['text':'                                                                       ','line_number':769,'multiline':True]
['text':'***********************************************************************','line_number':783,'multiline':True]
['text':'                                                                       ','line_number':784,'multiline':True]
['text':' CFF_CONFIG_OPTION_OLD_ENGINE controls whether the pre-Adobe CFF       ','line_number':785,'multiline':True]
['text':' engine gets compiled into FreeType.  If defined, it is possible to    ','line_number':786,'multiline':True]
['text':' switch between the two engines using the `hinting-engine' property of ','line_number':787,'multiline':True]
['text':' the cff driver module.                                                ','line_number':788,'multiline':True]
['text':'                                                                       ','line_number':789,'multiline':True]
['text':' #define CFF_CONFIG_OPTION_OLD_ENGINE ','line_number':790,'multiline':True]
['text':'***********************************************************************','line_number':793,'multiline':True]
['text':'***********************************************************************','line_number':794,'multiline':True]
['text':'***                                                                 ***','line_number':795,'multiline':True]
['text':'***    A U T O F I T   M O D U L E    C O N F I G U R A T I O N     ***','line_number':796,'multiline':True]
['text':'***                                                                 ***','line_number':797,'multiline':True]
['text':'***********************************************************************','line_number':798,'multiline':True]
['text':'***********************************************************************','line_number':799,'multiline':True]
['text':'***********************************************************************','line_number':802,'multiline':True]
['text':'                                                                       ','line_number':803,'multiline':True]
['text':' Compile autofit module with CJK (Chinese, Japanese, Korean) script    ','line_number':804,'multiline':True]
['text':' support.                                                              ','line_number':805,'multiline':True]
['text':'                                                                       ','line_number':806,'multiline':True]
['text':'***********************************************************************','line_number':809,'multiline':True]
['text':'                                                                       ','line_number':810,'multiline':True]
['text':' Compile autofit module with Indic script support.                     ','line_number':811,'multiline':True]
['text':'                                                                       ','line_number':812,'multiline':True]
['text':'***********************************************************************','line_number':815,'multiline':True]
['text':'                                                                       ','line_number':816,'multiline':True]
['text':' Compile autofit module with warp hinting.  The idea of the warping    ','line_number':817,'multiline':True]
['text':' code is to slightly scale and shift a glyph within a single dimension ','line_number':818,'multiline':True]
['text':' so that as much of its segments are aligned (more or less) on the     ','line_number':819,'multiline':True]
['text':' grid.  To find out the optimal scaling and shifting value, various    ','line_number':820,'multiline':True]
['text':' parameter combinations are tried and scored.                          ','line_number':821,'multiline':True]
['text':'                                                                       ','line_number':822,'multiline':True]
['text':' This experimental option is active only if the rendering mode is      ','line_number':823,'multiline':True]
['text':' FT_RENDER_MODE_LIGHT; you can switch warping on and off with the      ','line_number':824,'multiline':True]
['text':' `warping' property of the auto-hinter (see file `ftautoh.h' for more  ','line_number':825,'multiline':True]
['text':' information; by default it is switched off).                          ','line_number':826,'multiline':True]
['text':'                                                                       ','line_number':827,'multiline':True]
['text':' ','line_number':830,'multiline':True]
['text':'
   * This macro is obsolete.  Support has been removed in FreeType
   * version 2.5.
   ','line_number':833,'multiline':True]
['text':' #define FT_CONFIG_OPTION_OLD_INTERNALS ','line_number':837,'multiline':True]
['text':'
   * This macro is defined if either unpatented or native TrueType
   * hinting is requested by the definitions above.
   ','line_number':840,'multiline':True]
['text':'
   * Check CFF darkening parameters.  The checks are the same as in function
   * `cff_property_set' in file `cffdrivr.c'.
   ','line_number':852,'multiline':True]
['text':' FTOPTION_H_ ','line_number':883,'multiline':True]
['text':' END ','line_number':886,'multiline':True]
