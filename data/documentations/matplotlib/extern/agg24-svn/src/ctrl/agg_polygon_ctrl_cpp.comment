['text':'----------------------------------------------------------------------------','line_number':1,'multiline':False]
['text':' Anti-Grain Geometry - Version 2.4','line_number':2,'multiline':False]
['text':' Copyright (C) 2002-2005 Maxim Shemanarev (http://www.antigrain.com)','line_number':3,'multiline':False]
['text':'','line_number':4,'multiline':False]
['text':' Permission to copy, use, modify, sell and distribute this software ','line_number':5,'multiline':False]
['text':' is granted provided this copyright notice appears in all copies. ','line_number':6,'multiline':False]
['text':' This software is provided "as is" without express or implied','line_number':7,'multiline':False]
['text':' warranty, and with no claim as to its suitability for any purpose.','line_number':8,'multiline':False]
['text':'','line_number':9,'multiline':False]
['text':'----------------------------------------------------------------------------','line_number':10,'multiline':False]
['text':' Contact: mcseem@antigrain.com','line_number':11,'multiline':False]
['text':'          mcseemagg@yahoo.com','line_number':12,'multiline':False]
['text':'          http://www.antigrain.com','line_number':13,'multiline':False]
['text':'----------------------------------------------------------------------------','line_number':14,'multiline':False]
['text':'','line_number':15,'multiline':False]
['text':' classes polygon_ctrl_impl','line_number':16,'multiline':False]
['text':'','line_number':17,'multiline':False]
['text':'----------------------------------------------------------------------------','line_number':18,'multiline':False]
['text':'======= Crossings Multiply algorithm of InsideTest ======================== ','line_number':242,'multiline':False]
['text':'','line_number':243,'multiline':False]
['text':' By Eric Haines, 3D/Eye Inc, erich@eye.com','line_number':244,'multiline':False]
['text':'','line_number':245,'multiline':False]
['text':' This version is usually somewhat faster than the original published in','line_number':246,'multiline':False]
['text':' Graphics Gems IV; by turning the division for testing the X axis crossing','line_number':247,'multiline':False]
['text':' into a tricky multiplication test this part of the test became faster,','line_number':248,'multiline':False]
['text':' which had the additional effect of making the test for "both to left or','line_number':249,'multiline':False]
['text':' both to right" a bit slower for triangles than simply computing the','line_number':250,'multiline':False]
['text':' intersection each time.  The main increase is in triangle testing speed,','line_number':251,'multiline':False]
['text':' which was about 15% faster; all other polygon complexities were pretty much','line_number':252,'multiline':False]
['text':' the same as before.  On machines where division is very expensive (not the','line_number':253,'multiline':False]
['text':' case on the HP 9000 series on which I tested) this test should be much','line_number':254,'multiline':False]
['text':' faster overall than the old code.  Your mileage may (in fact, will) vary,','line_number':255,'multiline':False]
['text':' depending on the machine and the test data, but in general I believe this','line_number':256,'multiline':False]
['text':' code is both shorter and faster.  This test was inspired by unpublished','line_number':257,'multiline':False]
['text':' Graphics Gems submitted by Joseph Samosky and Mark Haigh-Hutchinson.','line_number':258,'multiline':False]
['text':' Related work by Samosky is in:','line_number':259,'multiline':False]
['text':'','line_number':260,'multiline':False]
['text':' Samosky, Joseph, "SectionView: A system for interactively specifying and','line_number':261,'multiline':False]
['text':' visualizing sections through three-dimensional medical image data",','line_number':262,'multiline':False]
['text':' M.S. Thesis, Department of Electrical Engineering and Computer Science,','line_number':263,'multiline':False]
['text':' Massachusetts Institute of Technology, 1993.','line_number':264,'multiline':False]
['text':'','line_number':265,'multiline':False]
['text':' Shoot a test ray along +X axis.  The strategy is to compare vertex Y values','line_number':266,'multiline':False]
['text':' to the testing point's Y and quickly discard edges which are entirely to one','line_number':267,'multiline':False]
['text':' side of the test ray.  Note that CONVEX and WINDING code can be added as','line_number':268,'multiline':False]
['text':' for the CrossingsTest() code; it is left out here for clarity.','line_number':269,'multiline':False]
['text':'','line_number':270,'multiline':False]
['text':' Input 2D polygon _pgon_ with _numverts_ number of vertices and test point','line_number':271,'multiline':False]
['text':' _point_, returns 1 if inside, 0 if outside.','line_number':272,'multiline':False]
['text':' get test bit for above/below X axis','line_number':285,'multiline':False]
['text':' Check if endpoints straddle (are on opposite sides) of X axis','line_number':295,'multiline':False]
['text':' (i.e. the Y's differ); if so, +X ray could intersect this edge.','line_number':296,'multiline':False]
['text':' The old test also checked whether the endpoints are both to the','line_number':297,'multiline':False]
['text':' right or to the left of the test point.  However, given the faster','line_number':298,'multiline':False]
['text':' intersection point computation used below, this test was found to','line_number':299,'multiline':False]
['text':' be a break-even proposition for most polygons and a loser for','line_number':300,'multiline':False]
['text':' triangles (where 50% or more of the edges which survive this test','line_number':301,'multiline':False]
['text':' will cross quadrants and so have to have the X intersection computed','line_number':302,'multiline':False]
['text':' anyway).  I credit Joseph Samosky with inspiring me to try dropping','line_number':303,'multiline':False]
['text':' the "both left or both right" part of my code.','line_number':304,'multiline':False]
['text':' Check intersection of pgon segment with +X ray.','line_number':307,'multiline':False]
['text':' Note if >= point's X; if so, the ray hits it.','line_number':308,'multiline':False]
['text':' The division operation is avoided for the ">=" test by checking','line_number':309,'multiline':False]
['text':' the sign of the first vertex wrto the test point; idea inspired','line_number':310,'multiline':False]
['text':' by Joseph Samosky's and Mark Haigh-Hutchinson's different','line_number':311,'multiline':False]
['text':' polygon inclusion tests.','line_number':312,'multiline':False]
['text':' Move to the next pair of vertices, retaining info as possible.','line_number':320,'multiline':False]
