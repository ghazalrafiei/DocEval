['text':'
 * Wrapper module for libqhull, providing Delaunay triangulation.
 *
 * This module's methods should not be accessed directly.  To obtain a Delaunay
 * triangulation, construct an instance of the matplotlib.tri.Triangulation
 * class without specifying a triangles array.
 ','line_number':1,'multiline':True]
['text':' The Qhull header does not declare this as extern "C", but only MSVC seems to
 * do name mangling on global variables. We thus need to declare this before
 * the header so that it treats it correctly, and doesn't mangle the name. ','line_number':12,'multiline':True]
['text':' Input numpy array class.','line_number':34,'multiline':False]
['text':' Output numpy array class.','line_number':37,'multiline':False]
['text':' 0 = qh_ERRnone ','line_number':43,'multiline':True]
['text':' 1 = qh_ERRinput ','line_number':44,'multiline':True]
['text':' 2 = qh_ERRsingular ','line_number':45,'multiline':True]
['text':' 3 = qh_ERRprec ','line_number':46,'multiline':True]
['text':' 4 = qh_ERRmem ','line_number':47,'multiline':True]
['text':' 5 = qh_ERRqhull ','line_number':48,'multiline':True]
['text':' Return the indices of the 3 vertices that comprise the specified facet (i.e.
 * triangle). ','line_number':51,'multiline':True]
['text':' Return the indices of the 3 triangles that are neighbors of the specified
 * facet (triangle). ','line_number':62,'multiline':True]
['text':' Return true if the specified points arrays contain at least 3 unique points,
 * or false otherwise. ','line_number':74,'multiline':True]
['text':' First unique point has index 0. ','line_number':79,'multiline':True]
['text':' Second unique point index is 0 until set. ','line_number':80,'multiline':True]
['text':' Looking for second unique point. ','line_number':88,'multiline':True]
['text':' Looking for third unique point. ','line_number':94,'multiline':True]
['text':' 3 unique points found, with indices 0, unique2 and i. ','line_number':97,'multiline':True]
['text':' Run out of points before 3 unique points found. ','line_number':103,'multiline':True]
['text':' Holds on to info from Qhull so that it can be destructed automatically. ','line_number':107,'multiline':True]
['text':' Memory remaining. ','line_number':117,'multiline':True]
['text':' Delaunay implementation method.
 * If hide_qhull_errors is true then qhull error messages are discarded;
 * if it is false then they are written to stderr. ','line_number':134,'multiline':True]
['text':' qh variable type and name must be like ','line_number':141,'multiline':True]
['text':' this for Qhull macros to work correctly. ','line_number':142,'multiline':True]
['text':' Value returned from qh_new_qhull(). ','line_number':145,'multiline':True]
['text':' Allocate points. ','line_number':152,'multiline':True]
['text':' Determine mean x, y coordinates. ','line_number':155,'multiline':True]
['text':' Prepare points array to pass to qhull. ','line_number':163,'multiline':True]
['text':' qhull expects a FILE* to write errors to. ','line_number':169,'multiline':True]
['text':' qhull errors are ignored by writing to OS-equivalent of /dev/null.
         * Rather than have OS-specific code here, instead it is determined by
         * meson.build and passed in via the macro MPL_DEVNULL. ','line_number':172,'multiline':True]
['text':' qhull errors written to stderr. ','line_number':181,'multiline':True]
['text':' Perform Delaunay triangulation. ','line_number':185,'multiline':True]
['text':' Split facets so that they only have 3 points each. ','line_number':200,'multiline':True]
['text':' Determine ntri and max_facet_id.
       Note that libqhull uses macros to iterate through collections. ','line_number':203,'multiline':True]
['text':' Create array to map facet id to triangle index. ','line_number':214,'multiline':True]
['text':' Allocate Python arrays to return. ','line_number':217,'multiline':True]
['text':' Determine triangles array and set tri_indices array. ','line_number':225,'multiline':True]
['text':' Determine neighbors array. ','line_number':241,'multiline':True]
['text':' Process Python arguments and call Delaunay implementation method. ','line_number':255,'multiline':True]
