['text':'---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------','line_number':1,'multiline':True]
['text':'/ Length of a commit hash, for validation','line_number':43,'multiline':False]
['text':'/ Number of seconds where, if there's no connections to a VS Code server,','line_number':45,'multiline':False]
['text':'/ the server is shut down.','line_number':46,'multiline':False]
['text':'/ Number of seconds in which the server times out when there is a connection','line_number':48,'multiline':False]
['text':'/ (should be large enough to basically never happen)','line_number':49,'multiline':False]
['text':'/ How long to cache the "latest" version we get from the update service.','line_number':51,'multiline':False]
['text':'/ Number of bytes for the secret keys. See workbench.ts for their usage.','line_number':54,'multiline':False]
['text':'/ Path to mint the key combining server and client parts.','line_number':56,'multiline':False]
['text':'/ Cookie set to the `SECRET_KEY_MINT_PATH`','line_number':58,'multiline':False]
['text':'/ Cookie set to the `SECRET_KEY_MINT_PATH`','line_number':60,'multiline':False]
['text':'/ HTTP-only cookie where the client's secret half is stored.','line_number':67,'multiline':False]
['text':'/ Implements the vscode "server of servers". Clients who go to the URI get','line_number':70,'multiline':False]
['text':'/ served the latest version of the VS Code server whenever they load the','line_number':71,'multiline':False]
['text':'/ page. The VS Code server prefixes all assets and connections it loads with','line_number':72,'multiline':False]
['text':'/ its version string, so existing clients can continue to get served even','line_number':73,'multiline':False]
['text':'/ while new clients get new VS Code Server versions.','line_number':74,'multiline':False]
['text':' Ensure there's a defined connection token, since if multiple server versions','line_number':81,'multiline':False]
['text':' are excuted, they will need to have a single shared token.','line_number':82,'multiline':False]
['text':' cleanup','line_number':114,'multiline':False]
['text':'/ Handler function for an inbound request','line_number':151,'multiline':False]
['text':'/ Appends headers to response to maintain the secret storage of the workbench:','line_number':201,'multiline':False]
['text':'/ sets the `PATH_COOKIE_VALUE` so workbench.ts knows about the 'mint' endpoint,','line_number':202,'multiline':False]
['text':'/ and maintains the http-only cookie the client will use for cookies.','line_number':203,'multiline':False]
['text':'/ Gets the release info from the VS Code path prefix, which is in the','line_number':222,'multiline':False]
['text':'/ format `/<quality>-<commit>/...`','line_number':223,'multiline':False]
['text':' paths must start with '/'','line_number':226,'multiline':False]
['text':' remember to trim off the leading '/' which is now part of th quality','line_number':242,'multiline':False]
['text':'/ Proxies the standard HTTP request to the async pipe, returning the piped response','line_number':253,'multiline':False]
['text':' technically, we should buffer the body into memory since it may not be','line_number':271,'multiline':False]
['text':' read at this point, but because the keepalive time is very large','line_number':272,'multiline':False]
['text':' there's not going to be responses that take hours to send and x','line_number':273,'multiline':False]
['text':' cause us to kill the server before the response is sent','line_number':274,'multiline':False]
['text':'/ Proxies the websocket request to the async pipe','line_number':280,'multiline':False]
['text':' splicing of client and servers inspired by https://github.com/hyperium/hyper/blob/fece9f7f50431cf9533cfe7106b53a77b48db699/examples/upgrades.rs','line_number':286,'multiline':False]
['text':' only start upgrade at this point in case the server decides to deny socket','line_number':311,'multiline':False]
['text':'/ Returns whether the string looks like a commit hash.','line_number':338,'multiline':False]
['text':'/ Gets a cookie from the request by name.','line_number':343,'multiline':False]
['text':'/ Gets the server's half of the secret key.','line_number':390,'multiline':False]
['text':'/ Gets the client's half of the secret key.','line_number':403,'multiline':False]
['text':'/ Module holding original responses the CLI's server makes.','line_number':414,'multiline':False]
['text':' todo: get latest','line_number':439,'multiline':False]
['text':' todo: get latest','line_number':447,'multiline':False]
['text':'/ Handle returned when getting a stream to the server, used to refcount','line_number':453,'multiline':False]
['text':'/ connections to a server so it can be disposed when there are no more clients.','line_number':454,'multiline':False]
['text':'/ State stored in the ConnectionManager for each server version.','line_number':478,'multiline':False]
['text':'/ Manages the connections to running web UI instances. Multiple web servers','line_number':486,'multiline':False]
['text':'/ can run concurrently, with routing based on the URL path.','line_number':487,'multiline':False]
['text':'/ Cache where servers are stored','line_number':492,'multiline':False]
['text':'/ Mapping of (Quality, Commit) to the state each server is in','line_number':494,'multiline':False]
['text':'/ Update service instance','line_number':496,'multiline':False]
['text':'/ Cache of the latest released version, storing the time we checked as well','line_number':498,'multiline':False]
['text':'/ Gets a connection to a server version','line_number':522,'multiline':False]
['text':' todo@connor4312: there is likely some performance benefit to','line_number':527,'multiline':False]
['text':' implementing a 'keepalive' for these connections.','line_number':528,'multiline':False]
['text':'/ Gets the latest release for the CLI quality, caching its result for some','line_number':535,'multiline':False]
['text':'/ time to allow for fast loads.','line_number':536,'multiline':False]
['text':' If the update service is unavailable and we have stale data, use that','line_number':558,'multiline':False]
['text':'/ Gets the StartData for the a version of the VS Code server, triggering','line_number':571,'multiline':False]
['text':'/ download/start if necessary. It returns `CodeError::ServerNotYetDownloaded`','line_number':572,'multiline':False]
['text':'/ while the server is downloading, which is used to have a refresh loop on the page.','line_number':573,'multiline':False]
['text':'/ Downloads a server version into the cache and starts it.','line_number':641,'multiline':False]
['text':'/ Starts a downloaded server that can be found in the given `path`.','line_number':672,'multiline':False]
['text':' License agreement already checked by the `server_web` function.','line_number':689,'multiline':False]
['text':' removed, otherwise the workbench will not be usable when running the CLI from sources.','line_number':712,'multiline':False]
['text':' wrapped option to prove that we only use this once in the loop','line_number':728,'multiline':False]
['text':' err means that the record was dropped','line_number':751,'multiline':False]
