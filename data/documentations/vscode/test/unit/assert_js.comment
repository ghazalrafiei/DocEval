['text':' http://wiki.commonjs.org/wiki/Unit_Testing/1.0','line_number':1,'multiline':False]
['text':'','line_number':2,'multiline':False]
['text':' THIS IS NOT TESTED NOR LIKELY TO WORK OUTSIDE V8!','line_number':3,'multiline':False]
['text':'','line_number':4,'multiline':False]
['text':' Copyright (c) 2011 Jxck','line_number':5,'multiline':False]
['text':'','line_number':6,'multiline':False]
['text':' Originally from node.js (http://nodejs.org)','line_number':7,'multiline':False]
['text':' Copyright Joyent, Inc.','line_number':8,'multiline':False]
['text':'','line_number':9,'multiline':False]
['text':' Permission is hereby granted, free of charge, to any person obtaining a copy','line_number':10,'multiline':False]
['text':' of this software and associated documentation files (the 'Software'), to','line_number':11,'multiline':False]
['text':' deal in the Software without restriction, including without limitation the','line_number':12,'multiline':False]
['text':' rights to use, copy, modify, merge, publish, distribute, sublicense, and/or','line_number':13,'multiline':False]
['text':' sell copies of the Software, and to permit persons to whom the Software is','line_number':14,'multiline':False]
['text':' furnished to do so, subject to the following conditions:','line_number':15,'multiline':False]
['text':'','line_number':16,'multiline':False]
['text':' The above copyright notice and this permission notice shall be included in','line_number':17,'multiline':False]
['text':' all copies or substantial portions of the Software.','line_number':18,'multiline':False]
['text':'','line_number':19,'multiline':False]
['text':' THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR','line_number':20,'multiline':False]
['text':' IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,','line_number':21,'multiline':False]
['text':' FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE','line_number':22,'multiline':False]
['text':' AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN','line_number':23,'multiline':False]
['text':' ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION','line_number':24,'multiline':False]
['text':' WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.','line_number':25,'multiline':False]
['text':' AMD','line_number':29,'multiline':False]
['text':' CommonJS','line_number':31,'multiline':False]
['text':' Global','line_number':33,'multiline':False]
['text':' UTILITY','line_number':37,'multiline':False]
['text':' Object.create compatible in IE','line_number':39,'multiline':False]
['text':' UTILITY','line_number':47,'multiline':False]
['text':' ES6 symbol','line_number':105,'multiline':False]
['text':' From https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys','line_number':115,'multiline':False]
['text':' 1. The assert module provides functions that throw','line_number':154,'multiline':False]
['text':' AssertionError's when particular conditions are not met. The','line_number':155,'multiline':False]
['text':' assert module must conform to the following interface.','line_number':156,'multiline':False]
['text':' 2. The AssertionError is defined in assert.','line_number':160,'multiline':False]
['text':' new assert.AssertionError({ message: message,','line_number':161,'multiline':False]
['text':'                             actual: actual,','line_number':162,'multiline':False]
['text':'                             expected: expected })','line_number':163,'multiline':False]
['text':' try to throw an error now, and from the stack property','line_number':181,'multiline':False]
['text':' work out the line that called in to assert.js.','line_number':182,'multiline':False]
['text':' assert.AssertionError instanceof Error','line_number':189,'multiline':False]
['text':' At present only the three keys mentioned above are used and','line_number':219,'multiline':False]
['text':' understood by the spec. Implementations or sub modules can pass','line_number':220,'multiline':False]
['text':' other keys to the AssertionError's constructor - they will be','line_number':221,'multiline':False]
['text':' ignored.','line_number':222,'multiline':False]
['text':' 3. All of the following functions must throw an AssertionError','line_number':224,'multiline':False]
['text':' when a corresponding condition is not met, with a message that','line_number':225,'multiline':False]
['text':' may be undefined if not provided.  All assertion methods provide','line_number':226,'multiline':False]
['text':' both the actual and expected values to the assertion error for','line_number':227,'multiline':False]
['text':' display purposes.','line_number':228,'multiline':False]
['text':' EXTENSION! allows for well behaved errors defined elsewhere.','line_number':240,'multiline':False]
['text':' 4. Pure assertion tests whether a value is truthy, as determined','line_number':243,'multiline':False]
['text':' by !!guard.','line_number':244,'multiline':False]
['text':' assert.ok(guard, message_opt);','line_number':245,'multiline':False]
['text':' This statement is equivalent to assert.equal(true, !!guard,','line_number':246,'multiline':False]
['text':' message_opt);. To test strictly for the value true, use','line_number':247,'multiline':False]
['text':' assert.strictEqual(true, guard, message_opt);.','line_number':248,'multiline':False]
['text':' 5. The equality assertion tests shallow, coercive equality with','line_number':255,'multiline':False]
['text':' ==.','line_number':256,'multiline':False]
['text':' assert.equal(actual, expected, message_opt);','line_number':257,'multiline':False]
['text':' 6. The non-equality assertion tests for whether two objects are not equal','line_number':263,'multiline':False]
['text':' with != assert.notEqual(actual, expected, message_opt);','line_number':264,'multiline':False]
['text':' 7. The equivalence assertion tests a deep equality relation.','line_number':272,'multiline':False]
['text':' assert.deepEqual(actual, expected, message_opt);','line_number':273,'multiline':False]
['text':' 7.1. All identical values are equivalent, as determined by ===.','line_number':288,'multiline':False]
['text':' } else if (actual instanceof Buffer && expected instanceof Buffer) {','line_number':291,'multiline':False]
['text':'   return compare(actual, expected) === 0;','line_number':292,'multiline':False]
['text':' 7.2. If the expected value is a Date object, the actual value is','line_number':294,'multiline':False]
['text':' equivalent if it is also a Date object that refers to the same time.','line_number':295,'multiline':False]
['text':' 7.3 If the expected value is a RegExp object, the actual value is','line_number':299,'multiline':False]
['text':' equivalent if it is also a RegExp object with the same source and','line_number':300,'multiline':False]
['text':' properties (`global`, `multiline`, `lastIndex`, `ignoreCase`).','line_number':301,'multiline':False]
['text':' 7.4. Other pairs that do not both pass typeof value == 'object',','line_number':309,'multiline':False]
['text':' equivalence is determined by ==.','line_number':310,'multiline':False]
['text':' 7.5 For all other Object pairs, including Array objects, equivalence is','line_number':315,'multiline':False]
['text':' determined by having the same number of owned properties (as verified','line_number':316,'multiline':False]
['text':' with Object.prototype.hasOwnProperty.call), the same set of keys','line_number':317,'multiline':False]
['text':' (although not necessarily the same order), equivalent values for every','line_number':318,'multiline':False]
['text':' corresponding key, and an identical 'prototype' property. Note: this','line_number':319,'multiline':False]
['text':' accounts for both named and indexed properties on Arrays.','line_number':320,'multiline':False]
['text':' if one is a primitive, the other must be same','line_number':333,'multiline':False]
['text':' having the same number of owned properties (keys incorporates','line_number':350,'multiline':False]
['text':' hasOwnProperty)','line_number':351,'multiline':False]
['text':'the same set of keys (although not necessarily the same order),','line_number':354,'multiline':False]
['text':'~~~cheap key test','line_number':357,'multiline':False]
['text':'equivalent values for every corresponding key, and','line_number':362,'multiline':False]
['text':'~~~possibly expensive deep test','line_number':363,'multiline':False]
['text':' 8. The non-equivalence assertion tests for any deep inequality.','line_number':371,'multiline':False]
['text':' assert.notDeepEqual(actual, expected, message_opt);','line_number':372,'multiline':False]
['text':' 9. The strict equality assertion tests strict equality, as determined by ===.','line_number':388,'multiline':False]
['text':' assert.strictEqual(actual, expected, message_opt);','line_number':389,'multiline':False]
['text':' 10. The strict non-equality assertion tests for strict inequality, as','line_number':397,'multiline':False]
['text':' determined by !==.  assert.notStrictEqual(actual, expected, message_opt);','line_number':398,'multiline':False]
['text':' 11. Expected to throw an error:','line_number':457,'multiline':False]
['text':' assert.throws(block, Error_opt, message_opt);','line_number':458,'multiline':False]
['text':'optional','line_number':460,'multiline':True]
['text':'optional','line_number':460,'multiline':True]
['text':' EXTENSION! This is annoying to write outside this module.','line_number':464,'multiline':False]
['text':'optional','line_number':465,'multiline':True]
['text':' Return a rejected promise if `promiseFn` throws synchronously.','line_number':481,'multiline':False]
['text':' Fail in case no promise is returned.','line_number':483,'multiline':False]
