['text':'---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------','line_number':1,'multiline':True]
['text':'/ <reference path="typings/require.d.ts" />','line_number':6,'multiline':False]
['text':'@ts-check','line_number':8,'multiline':False]
['text':' eslint-disable no-restricted-globals ','line_number':11,'multiline':True]
['text':' Simple module style to support node.js and browser environments','line_number':13,'multiline':False]
['text':' Node.js','line_number':16,'multiline':False]
['text':' Browser','line_number':21,'multiline':False]
['text':' @ts-ignore','line_number':23,'multiline':False]
['text':'*
	 * @typedef {import('./vs/base/parts/sandbox/common/sandboxTypes').ISandboxConfiguration} ISandboxConfiguration
	 *
	 * @param {string[]} modulePaths
	 * @param {(result: unknown, configuration: ISandboxConfiguration) => Promise<unknown> | undefined} resultCallback
	 * @param {{
	 *  configureDeveloperSettings?: (config: ISandboxConfiguration) => {
	 * 		forceDisableShowDevtoolsOnError?: boolean,
	 * 		forceEnableDeveloperKeybindings?: boolean,
	 * 		disallowReloadKeybinding?: boolean,
	 * 		removeDeveloperKeybindingsAfterLoad?: boolean
	 * 	},
	 * 	canModifyDOM?: (config: ISandboxConfiguration) => void,
	 * 	beforeLoaderConfig?: (loaderConfig: object) => void,
	 *  beforeRequire?: (config: ISandboxConfiguration) => void
	 * }} [options]
	 ','line_number':31,'multiline':True]
['text':' Await window configuration from preload','line_number':50,'multiline':False]
['text':'* @type {ISandboxConfiguration} ','line_number':53,'multiline':True]
['text':' Signal DOM modifications are now OK','line_number':58,'multiline':False]
['text':' Developer settings','line_number':63,'multiline':False]
['text':'*
		 * @type {() => void | undefined}
		 ','line_number':75,'multiline':True]
['text':' Get the nls configuration into the process.env as early as possible','line_number':83,'multiline':False]
['text':' @ts-ignore','line_number':84,'multiline':False]
['text':'*
		 * @typedef {any} LoaderConfig
		 ','line_number':98,'multiline':True]
['text':'* @type {LoaderConfig} ','line_number':101,'multiline':True]
['text':' use a trusted types policy when loading via script tags','line_number':108,'multiline':False]
['text':' Teach the loader the location of the node modules we use in renderers','line_number':118,'multiline':False]
['text':' This will enable to load these modules via <script> tags instead of','line_number':119,'multiline':False]
['text':' using a fallback such as node.js require which does not exist in sandbox','line_number':120,'multiline':False]
['text':' Signal before require.config()','line_number':140,'multiline':False]
['text':' Configure loader','line_number':145,'multiline':False]
['text':' Handle pseudo NLS','line_number':148,'multiline':False]
['text':' Signal before require()','line_number':155,'multiline':False]
['text':' Actually require the main module as specified','line_number':160,'multiline':False]
['text':' Callback only after process environment is resolved','line_number':164,'multiline':False]
['text':'*
	 * @param {boolean | undefined} disallowReloadKeybinding
	 * @returns {() => void}
	 ','line_number':179,'multiline':True]
['text':'*
			 * @param {KeyboardEvent} e
			 ','line_number':187,'multiline':True]
['text':' Devtools & reload support','line_number':200,'multiline':False]
['text':' mac: Cmd-Alt-I, rest: Ctrl-Shift-I','line_number':201,'multiline':False]
['text':' F12','line_number':202,'multiline':False]
['text':' mac: Cmd-R, rest: Ctrl-R','line_number':203,'multiline':False]
['text':'* @type {((e: KeyboardEvent) => void) | undefined} ','line_number':205,'multiline':True]
['text':'*
	 * @param {string | Error} error
	 * @param {boolean} [showDevtoolsOnError]
	 ','line_number':225,'multiline':True]
['text':'*
	 * @return {{ fileUriFromPath: (path: string, config: { isWindows?: boolean, scheme?: string, fallbackAuthority?: string }) => string; }}
	 ','line_number':242,'multiline':True]
['text':' @ts-ignore (defined in bootstrap.js)','line_number':246,'multiline':False]
['text':'*
	 * @return {typeof import('./vs/base/parts/sandbox/electron-sandbox/globals')}
	 ','line_number':250,'multiline':True]
['text':' @ts-ignore (defined in globals.js)','line_number':254,'multiline':False]
