['text':'---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------','line_number':1,'multiline':True]
['text':'*
	 * The resource impacted by this element.
	 ','line_number':19,'multiline':True]
['text':'*
	 * A user presentable label. May be localized.
	 ','line_number':23,'multiline':True]
['text':'*
	 * A code describing the operation. Will not be localized.
	 ','line_number':27,'multiline':True]
['text':'*
	 * Show a message to the user confirming when trying to undo this element
	 ','line_number':31,'multiline':True]
['text':'*
	 * The resources impacted by this element.
	 ','line_number':41,'multiline':True]
['text':'*
	 * A user presentable label. May be localized.
	 ','line_number':45,'multiline':True]
['text':'*
	 * A code describing the operation. Will not be localized.
	 ','line_number':49,'multiline':True]
['text':'*
	 * Show a message to the user confirming when trying to undo this element
	 ','line_number':53,'multiline':True]
['text':'*
	 * If implemented, indicates that this undo/redo element can be split into multiple per resource elements.
	 ','line_number':60,'multiline':True]
['text':'*
	 * If implemented, will be invoked before calling `undo()` or `redo()`.
	 * This is a good place to prepare everything such that the calls to `undo()` or `redo()` are synchronous.
	 * If a disposable is returned, it will be invoked to clean things up.
	 ','line_number':65,'multiline':True]
['text':'*
	 * Register an URI -> string hasher.
	 * This is useful for making multiple URIs share the same undo-redo stack.
	 ','line_number':136,'multiline':True]
['text':'*
	 * Get the hash used internally for a certain URI.
	 * This uses any registered `UriComparisonKeyComputer`.
	 ','line_number':142,'multiline':True]
['text':'*
	 * Add a new element to the `undo` stack.
	 * This will destroy the `redo` stack.
	 ','line_number':148,'multiline':True]
['text':'*
	 * Get the last pushed element for a resource.
	 * If the last pushed element has been undone, returns null.
	 ','line_number':154,'multiline':True]
['text':'*
	 * Get all the elements associated with a resource.
	 * This includes the past and the future.
	 ','line_number':160,'multiline':True]
['text':'*
	 * Validate or invalidate stack elements associated with a resource.
	 ','line_number':166,'multiline':True]
['text':'*
	 * Remove elements that target `resource`.
	 ','line_number':171,'multiline':True]
['text':'*
	 * Create a snapshot of the current elements on the undo-redo stack for a resource.
	 ','line_number':176,'multiline':True]
['text':'*
	 * Attempt (as best as possible) to restore a certain snapshot previously created with `createSnapshot` for a resource.
	 ','line_number':180,'multiline':True]
