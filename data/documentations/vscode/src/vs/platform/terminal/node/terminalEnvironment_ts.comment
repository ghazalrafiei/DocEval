['text':'---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------','line_number':1,'multiline':True]
['text':' If we have an absolute path then we take it.','line_number':32,'multiline':False]
['text':' We have a directory and the directory is relative (see above). Make the path absolute','line_number':41,'multiline':False]
['text':' to the current working directory.','line_number':42,'multiline':False]
['text':' No PATH environment. Make path absolute to the cwd.','line_number':50,'multiline':False]
['text':' We have a simple file name. We get the path variable from the env','line_number':55,'multiline':False]
['text':' and try to find the executable on the path.','line_number':56,'multiline':False]
['text':' The path entry is absolute.','line_number':58,'multiline':False]
['text':'*
	 * A new set of arguments to use.
	 ','line_number':85,'multiline':True]
['text':'*
	 * An optional environment to mixing to the real environment.
	 ','line_number':89,'multiline':True]
['text':'*
	 * An optional array of files to copy from `source` to `dest`.
	 ','line_number':93,'multiline':True]
['text':'*
 * For a given shell launch config, returns arguments to replace and an optional environment to
 * mixin to the SLC's environment to enable shell integration. This must be run within the context
 * that creates the process to ensure accuracy. Returns undefined if shell integration cannot be
 * enabled.
 ','line_number':102,'multiline':True]
['text':' Shell integration arg injection is disabled when:','line_number':115,'multiline':False]
['text':' - The global setting is disabled','line_number':116,'multiline':False]
['text':' - There is no executable (not sure what script to run)','line_number':117,'multiline':False]
['text':' - The terminal is used by a feature like tasks or debugging','line_number':118,'multiline':False]
['text':' Windows','line_number':136,'multiline':False]
['text':' Shallow clone the array to avoid setting the default array','line_number':147,'multiline':False]
['text':' Linux & macOS','line_number':158,'multiline':False]
['text':' Shallow clone the array to avoid setting the default array','line_number':171,'multiline':False]
['text':' The injection mechanism used for fish is to add a custom dir to $XDG_DATA_DIRS which','line_number':176,'multiline':False]
['text':' is similar to $ZDOTDIR in zsh but contains a list of directories to run from.','line_number':177,'multiline':False]
['text':' Shallow clone the array to avoid setting the default array','line_number':196,'multiline':False]
['text':' Shallow clone the array to avoid setting the default array','line_number':212,'multiline':False]
['text':' Move .zshrc into $ZDOTDIR as the way to activate the script','line_number':215,'multiline':False]
['text':'*
 * On macOS the profile calls path_helper which adds a bunch of standard bin directories to the
 * beginning of the PATH. This causes significant problems for the environment variable
 * collection API as the custom paths added to the end will now be somewhere in the middle of
 * the PATH. To combat this, VSCODE_PATH_PREFIX is used to re-apply any prefix after the profile
 * has run. This will cause duplication in the PATH but should fix the issue.
 *
 * See #99878 for more information.
 ','line_number':250,'multiline':True]
['text':' Deserialize and merge','line_number':261,'multiline':False]
['text':' Get all prepend PATH entries','line_number':265,'multiline':False]
['text':' Add to the environment mixin to be applied in the shell integration script','line_number':276,'multiline':False]
['text':' The try catch swallows execution policy errors in the case of the archive distributable','line_number':294,'multiline':False]
