['text':'---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------','line_number':1,'multiline':True]
['text':'*
	 * A unique identifier for this marker.
	 ','line_number':17,'multiline':True]
['text':'*
	 * Whether this marker is disposed.
	 ','line_number':22,'multiline':True]
['text':'*
	 * The actual line index in the buffer at this point in time. This is set to
	 * -1 if the marker has been disposed.
	 ','line_number':27,'multiline':True]
['text':'*
	 * Event listener to get notified when the marker gets disposed. Automatic disposal
	 * might happen for a marker, that got invalidated by scrolling out or removal of
	 * a line from the buffer.
	 ','line_number':33,'multiline':True]
['text':'*
 * Primarily driven by the shell integration feature, a terminal capability is the mechanism for
 * progressively enhancing various features that may not be supported in all terminals/shells.
 ','line_number':42,'multiline':True]
['text':'*
	 * The terminal can reliably detect the current working directory as soon as the change happens
	 * within the buffer.
	 ','line_number':47,'multiline':True]
['text':'*
	 * The terminal can reliably detect the current working directory when requested.
	 ','line_number':52,'multiline':True]
['text':'*
	 * The terminal can reliably identify prompts, commands and command outputs within the buffer.
	 ','line_number':56,'multiline':True]
['text':'*
	 * The terminal can often identify prompts, commands and command outputs within the buffer. It
	 * may not be so good at remembering the position of commands that ran in the past. This state
	 * may be enabled when something goes wrong or when using conpty for example.
	 ','line_number':60,'multiline':True]
['text':'*
	 * Manages buffer marks that can be used for terminal navigation. The source of
	 * the request (task, debug, etc) provides an ID, optional marker, hoverMessage, and hidden property. When
	 * hidden is not provided, a generic decoration is added to the buffer and overview ruler.
	 ','line_number':67,'multiline':True]
['text':'*
 * An object that keeps track of additional capabilities and their implementations for features that
 * are not available for all terminals.
 ','line_number':75,'multiline':True]
['text':'*
	 * An iterable of all capabilities in the store.
	 ','line_number':80,'multiline':True]
['text':'*
	 * Fired when a capability is added. The event data for this is only the
	 * {@link TerminalCapability} type, use {@link onDidAddCapability} to access the actual
	 * capability.
	 ','line_number':85,'multiline':True]
['text':'*
	 * Fired when a capability is removed. The event data for this is only the
	 * {@link TerminalCapability} type, use {@link onDidAddCapability} to access the actual
	 * capability.
	 ','line_number':92,'multiline':True]
['text':'*
	 * Fired when a capability is added.
	 ','line_number':99,'multiline':True]
['text':'*
	 * Fired when a capability is removed.
	 ','line_number':104,'multiline':True]
['text':'*
	 * Gets whether the capability exists in the store.
	 ','line_number':109,'multiline':True]
['text':'*
	 * Gets the implementation of a capability if it has been added to the store.
	 ','line_number':114,'multiline':True]
['text':'*
 * Maps capability types to their implementation, enabling strongly typed fetching of
 * implementations.
 ','line_number':125,'multiline':True]
['text':'* The command currently being executed, otherwise undefined. ','line_number':165,'multiline':True]
['text':'* The current cwd at the cursor's position. ','line_number':168,'multiline':True]
['text':'*
	 * Whether a command is currently being input. If the a command is current not being input or
	 * the state cannot reliably be detected the fallback of undefined will be used.
	 ','line_number':170,'multiline':True]
['text':'*
	 * Gets the working directory for a line, this will return undefined if it's unknown in which
	 * case the terminal's initial cwd should be used.
	 ','line_number':184,'multiline':True]
['text':'*
	 * Set the command line explicitly.
	 * @param commandLine The command line being set.
	 * @param isTrusted Whether the command line is trusted via the optional nonce is send in order
	 * to prevent spoofing. This is important as some interactions do not require verification
	 * before re-running a command. Note that this is optional according to the spec, it should
	 * always be present when running the _builtin_ SI scripts.
	 ','line_number':198,'multiline':True]
['text':'*
	 * Whether to allow an empty command to be registered. This should be used to support certain
	 * shell integration scripts/features where tracking the command line may not be possible.
	 ','line_number':212,'multiline':True]
['text':'*
	 * The marker to use
	 ','line_number':217,'multiline':True]
['text':'*
	 * Properties for the mark
	 ','line_number':222,'multiline':True]
['text':' Mandatory','line_number':241,'multiline':False]
['text':' Optional serializable','line_number':246,'multiline':False]
['text':' Optional non-serializable','line_number':256,'multiline':False]
['text':' Optional non-serializable converted for serialization','line_number':272,'multiline':False]
['text':'*
 * A clone of the IMarker from xterm which cannot be imported from common
 ','line_number':279,'multiline':True]
