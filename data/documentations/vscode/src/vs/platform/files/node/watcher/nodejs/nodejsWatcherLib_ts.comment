['text':'---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------','line_number':1,'multiline':True]
['text':' A delay in reacting to file deletes to support','line_number':23,'multiline':False]
['text':' atomic save operations where a tool may chose','line_number':24,'multiline':False]
['text':' to delete a file before creating it again for','line_number':25,'multiline':False]
['text':' an update.','line_number':26,'multiline':False]
['text':' A delay for collecting file changes from node.js','line_number':29,'multiline':False]
['text':' before collecting them for coalescing and emitting','line_number':30,'multiline':False]
['text':' Same delay as used for the recursive watcher.','line_number':31,'multiline':False]
['text':' Reduce likelyhood of spam from file events via throttling.','line_number':34,'multiline':False]
['text':' These numbers are a bit more aggressive compared to the','line_number':35,'multiline':False]
['text':' recursive watcher because we can have many individual','line_number':36,'multiline':False]
['text':' node.js watchers per request.','line_number':37,'multiline':False]
['text':' (https://github.com/microsoft/vscode/issues/124723)','line_number':38,'multiline':False]
['text':' only process up to 100 changes at once before...','line_number':41,'multiline':False]
['text':' ...resting for 200ms until we process events again...','line_number':42,'multiline':False]
['text':' ...but never buffering more than 10000 events in memory','line_number':43,'multiline':False]
['text':' Aggregate file changes over FILE_CHANGES_HANDLER_DELAY','line_number':48,'multiline':False]
['text':' to coalesce events and reduce spam.','line_number':49,'multiline':False]
['text':' Watch via node.js','line_number':76,'multiline':False]
['text':' First check for symbolic link','line_number':94,'multiline':False]
['text':' Second check for casing difference','line_number':97,'multiline':False]
['text':' Note: this will be a no-op on Linux platforms','line_number':98,'multiline':False]
['text':' Correct watch path as needed','line_number':103,'multiline':False]
['text':' ignore','line_number':108,'multiline':False]
['text':' macOS: watching samba shares can crash VSCode so we do','line_number':116,'multiline':False]
['text':' a simple check for the file path pointing to /Volumes','line_number':117,'multiline':False]
['text':' (https://github.com/microsoft/vscode/issues/106879)','line_number':118,'multiline':False]
['text':' TODO@electron this needs a revisit when the crash is','line_number':119,'multiline':False]
['text':' fixed or mitigated upstream.','line_number':120,'multiline':False]
['text':' Creating watcher can fail with an exception','line_number':135,'multiline':False]
['text':' Folder: resolve children to emit proper events','line_number':144,'multiline':False]
['text':' The watcher is no longer functional reliably','line_number':167,'multiline':False]
['text':' so we go ahead and dispose it','line_number':168,'multiline':False]
['text':' ignore if already disposed','line_number':174,'multiline':False]
['text':' Normalize file name','line_number':179,'multiline':False]
['text':' https://github.com/microsoft/vscode/issues/38191','line_number':181,'multiline':False]
['text':' Mac: uses NFD unicode form on disk, but we want NFC','line_number':184,'multiline':False]
['text':' See also https://github.com/nodejs/node/issues/2165','line_number':185,'multiline':False]
['text':' ignore unexpected events','line_number':191,'multiline':False]
['text':' Folder','line_number':194,'multiline':False]
['text':' Folder child added/deleted','line_number':197,'multiline':False]
['text':' Cancel any previous stats for this file if existing','line_number':200,'multiline':False]
['text':' Wait a bit and try see if the file still exists on disk','line_number':203,'multiline':False]
['text':' to decide on the resulting event','line_number':204,'multiline':False]
['text':' Depending on the OS the watcher runs on, there','line_number':208,'multiline':False]
['text':' is different behaviour for when the watched','line_number':209,'multiline':False]
['text':' folder path is being deleted:','line_number':210,'multiline':False]
['text':'','line_number':211,'multiline':False]
['text':' -   macOS: not reported but events continue to','line_number':212,'multiline':False]
['text':'            work even when the folder is brought','line_number':213,'multiline':False]
['text':'            back, though it seems every change','line_number':214,'multiline':False]
['text':'            to a file is reported as "rename"','line_number':215,'multiline':False]
['text':' -   Linux: "rename" event is reported with the','line_number':216,'multiline':False]
['text':'            name of the folder and events stop','line_number':217,'multiline':False]
['text':'            working','line_number':218,'multiline':False]
['text':' - Windows: an EPERM error is thrown that we','line_number':219,'multiline':False]
['text':'            handle from the `on('error')` event','line_number':220,'multiline':False]
['text':'','line_number':221,'multiline':False]
['text':' We do not re-attach the watcher after timeout','line_number':222,'multiline':False]
['text':' though as we do for file watches because for','line_number':223,'multiline':False]
['text':' file watching specifically we want to handle','line_number':224,'multiline':False]
['text':' the atomic-write cases where the file is being','line_number':225,'multiline':False]
['text':' deleted and recreated with different contents.','line_number':226,'multiline':False]
['text':'','line_number':227,'multiline':False]
['text':' Same as with recursive watching, we do not','line_number':228,'multiline':False]
['text':' emit a delete event in this case.','line_number':229,'multiline':False]
['text':' The watcher is no longer functional reliably','line_number':233,'multiline':False]
['text':' so we go ahead and dispose it','line_number':234,'multiline':False]
['text':' In order to properly detect renames on a case-insensitive','line_number':240,'multiline':False]
['text':' file system, we need to use `existsChildStrictCase` helper','line_number':241,'multiline':False]
['text':' because otherwise we would wrongly assume a file exists','line_number':242,'multiline':False]
['text':' when it was renamed to same name but different case.','line_number':243,'multiline':False]
['text':' ignore if disposed by now','line_number':247,'multiline':False]
['text':' Figure out the correct event type:','line_number':250,'multiline':False]
['text':' File Exists: either 'added' or 'updated' if known before','line_number':251,'multiline':False]
['text':' File Does not Exist: always 'deleted'','line_number':252,'multiline':False]
['text':' Folder child changed','line_number':272,'multiline':False]
['text':' Figure out the correct event type: if this is the','line_number':275,'multiline':False]
['text':' first time we see this child, it can only be added','line_number':276,'multiline':False]
['text':' File','line_number':289,'multiline':False]
['text':' File added/deleted','line_number':292,'multiline':False]
['text':' Depending on the OS the watcher runs on, there','line_number':295,'multiline':False]
['text':' is different behaviour for when the watched','line_number':296,'multiline':False]
['text':' file path is being deleted:','line_number':297,'multiline':False]
['text':'','line_number':298,'multiline':False]
['text':' -   macOS: "rename" event is reported and events','line_number':299,'multiline':False]
['text':'            stop working','line_number':300,'multiline':False]
['text':' -   Linux: "rename" event is reported and events','line_number':301,'multiline':False]
['text':'            stop working','line_number':302,'multiline':False]
['text':' - Windows: "rename" event is reported and events','line_number':303,'multiline':False]
['text':'            continue to work when file is restored','line_number':304,'multiline':False]
['text':'','line_number':305,'multiline':False]
['text':' As opposed to folder watching, we re-attach the','line_number':306,'multiline':False]
['text':' watcher after brief timeout to support "atomic save"','line_number':307,'multiline':False]
['text':' operations where a tool may decide to delete a file','line_number':308,'multiline':False]
['text':' and then create it with the updated contents.','line_number':309,'multiline':False]
['text':'','line_number':310,'multiline':False]
['text':' Different to folder watching, we emit a delete event','line_number':311,'multiline':False]
['text':' though we never detect when the file is brought back','line_number':312,'multiline':False]
['text':' because the watcher is disposed then.','line_number':313,'multiline':False]
['text':' ignore if disposed by now','line_number':319,'multiline':False]
['text':' File still exists, so emit as change event and reapply the watcher','line_number':322,'multiline':False]
['text':' skip excludes/includes (file is explicitly watched) ','line_number':324,'multiline':True]
['text':' File seems to be really gone, so emit a deleted event and dispose','line_number':329,'multiline':False]
['text':' skip excludes/includes (file is explicitly watched) ','line_number':331,'multiline':True]
['text':' Important to flush the event delivery','line_number':333,'multiline':False]
['text':' before disposing the watcher, otherwise','line_number':334,'multiline':False]
['text':' we will loose this event.','line_number':335,'multiline':False]
['text':' Very important to dispose the watcher which now points to a stale inode','line_number':342,'multiline':False]
['text':' and wire in a new disposable that tracks our timeout that is installed','line_number':343,'multiline':False]
['text':' File changed','line_number':348,'multiline':False]
['text':' skip excludes/includes (file is explicitly watched) ','line_number':350,'multiline':True]
['text':' Logging','line_number':371,'multiline':False]
['text':' Add to aggregator unless excluded or not included (not if explicitly disabled)','line_number':376,'multiline':False]
['text':' Coalesce events: merge events of same kind','line_number':392,'multiline':False]
['text':' Logging','line_number':396,'multiline':False]
['text':' Broadcast to clients via throttled emitter','line_number':403,'multiline':False]
['text':' Logging','line_number':406,'multiline':False]
['text':'*
 * Watch the provided `path` for changes and return
 * the data in chunks of `Uint8Array` for further use.
 ','line_number':465,'multiline':True]
['text':' return early if we are already reading the output','line_number':485,'multiline':False]
['text':' Consume the new contents of the file until finished','line_number':491,'multiline':False]
['text':' everytime there is a change event signalling a change','line_number':492,'multiline':False]
