['text':'---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------','line_number':1,'multiline':True]
['text':'#region Storage Main Service (intent: make application, profile and workspace storage accessible to windows from main process)','line_number':23,'multiline':False]
['text':'*
	 * Provides access to the application storage shared across all
	 * windows and all profiles.
	 *
	 * Note: DO NOT use this for reading/writing from the main process!
	 *       Rather use `IApplicationStorageMainService` for that purpose.
	 ','line_number':36,'multiline':True]
['text':'*
	 * Emitted whenever data is updated or deleted in profile scoped storage.
	 ','line_number':45,'multiline':True]
['text':'*
	 * Provides access to the profile storage shared across all windows
	 * for the provided profile.
	 *
	 * Note: DO NOT use this for reading/writing from the main process!
	 *       This is currently not supported.
	 ','line_number':50,'multiline':True]
['text':'*
	 * Provides access to the workspace storage specific to a single window.
	 *
	 * Note: DO NOT use this for reading/writing from the main process!
	 *       This is currently not supported.
	 ','line_number':59,'multiline':True]
['text':'*
	 * Checks if the provided path is currently in use for a storage database.
	 *
	 * @param path the path to the storage file or parent folder
	 ','line_number':67,'multiline':True]
['text':' no storage during extension tests!','line_number':99,'multiline':False]
['text':' Application Storage: Warmup when any window opens','line_number':105,'multiline':False]
['text':' Profile Storage: Warmup when related window with profile loads','line_number':114,'multiline':False]
['text':' Workspace Storage: Warmup when related window with workspace loads','line_number':119,'multiline':False]
['text':' All Storage: Close when shutting down','line_number':125,'multiline':False]
['text':' Remember shutdown reason','line_number':129,'multiline':False]
['text':' Application Storage','line_number':132,'multiline':False]
['text':' Profile Storage(s)','line_number':135,'multiline':False]
['text':' Workspace Storage(s)','line_number':140,'multiline':False]
['text':' Prepare storage location as needed','line_number':146,'multiline':False]
['text':' Close the storage of the profile that is being removed','line_number':155,'multiline':False]
['text':'#region Application Storage','line_number':164,'multiline':False]
['text':'#endregion','line_number':180,'multiline':False]
['text':'#region Profile Storage','line_number':182,'multiline':False]
['text':' profile ID ','line_number':184,'multiline':True]
['text':' for profiles using default storage, use application storage','line_number':188,'multiline':False]
['text':' Workaround for native crashes that we see when','line_number':218,'multiline':False]
['text':' SQLite DBs are being created even after shutdown','line_number':219,'multiline':False]
['text':' https://github.com/microsoft/vscode/issues/143186','line_number':220,'multiline':False]
['text':'#endregion','line_number':228,'multiline':False]
['text':'#region Workspace Storage','line_number':231,'multiline':False]
['text':' workspace ID ','line_number':233,'multiline':True]
['text':' Workaround for native crashes that we see when','line_number':256,'multiline':False]
['text':' SQLite DBs are being created even after shutdown','line_number':257,'multiline':False]
['text':' https://github.com/microsoft/vscode/issues/143186','line_number':258,'multiline':False]
['text':'#endregion','line_number':266,'multiline':False]
['text':'#endregion','line_number':285,'multiline':False]
['text':'#region Application Main Storage Service (intent: use application storage from main process)','line_number':288,'multiline':False]
['text':'*
 * A specialized `IStorageService` interface that only allows
 * access to the `StorageScope.APPLICATION` scope.
 ','line_number':292,'multiline':True]
['text':'*
	 * Important: unlike other storage services in the renderer, the
	 * main process does not await the storage to be ready, rather
	 * storage is being initialized while a window opens to reduce
	 * pressure on startup.
	 *
	 * As such, any client wanting to access application storage from the
	 * main process needs to wait for `whenReady`, otherwise there is
	 * a chance that the service operates on an in-memory store that
	 * is not backed by any persistent DB.
	 ','line_number':298,'multiline':True]
['text':' application storage is being initialized as part','line_number':346,'multiline':False]
['text':' of the first window opening, so we do not trigger','line_number':347,'multiline':False]
['text':' it here but can join it','line_number':348,'multiline':False]
['text':' any other scope is unsupported from main process','line_number':357,'multiline':False]
['text':' any other scope is unsupported from main process','line_number':365,'multiline':False]
['text':' not needed here, will be triggered from any window that is opened','line_number':369,'multiline':False]
