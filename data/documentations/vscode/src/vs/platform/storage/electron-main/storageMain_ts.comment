['text':'---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------','line_number':1,'multiline':True]
['text':'*
	 * If enabled, storage will not persist to disk
	 * but into memory.
	 ','line_number':27,'multiline':True]
['text':'*
 * Provides access to application, profile and workspace storage from
 * the electron-main side that is the owner of all storage connections.
 ','line_number':34,'multiline':True]
['text':'*
	 * Emitted whenever data is updated or deleted.
	 ','line_number':40,'multiline':True]
['text':'*
	 * Emitted when the storage is closed.
	 ','line_number':45,'multiline':True]
['text':'*
	 * Access to all cached items of this storage service.
	 ','line_number':50,'multiline':True]
['text':'*
	 * Allows to join on the `init` call having completed
	 * to be able to safely use the storage.
	 ','line_number':55,'multiline':True]
['text':'*
	 * Provides access to the `IStorage` implementation which will be
	 * in-memory for as long as the storage has not been initialized.
	 ','line_number':61,'multiline':True]
['text':'*
	 * The file path of the underlying storage file if any.
	 ','line_number':67,'multiline':True]
['text':'*
	 * Required call to ensure the service can be used.
	 ','line_number':72,'multiline':True]
['text':'*
	 * Retrieve an element stored with the given key from storage. Use
	 * the provided defaultValue if the element is null or undefined.
	 ','line_number':77,'multiline':True]
['text':'*
	 * Store a string value under the given key to storage. The value will
	 * be converted to a string.
	 ','line_number':84,'multiline':True]
['text':'*
	 * Delete an element stored under the provided key from storage.
	 ','line_number':90,'multiline':True]
['text':'*
	 * Whether the storage is using in-memory persistence or not.
	 ','line_number':95,'multiline':True]
['text':'*
	 * Attempts to reduce the DB size via optimization commands if supported.
	 ','line_number':100,'multiline':True]
['text':'*
	 * Close the storage connection.
	 ','line_number':105,'multiline':True]
['text':' storage is in-memory until initialized','line_number':125,'multiline':False]
['text':' either closed or already initialized','line_number':152,'multiline':False]
['text':' Create storage via subclasses','line_number':157,'multiline':False]
['text':' Replace our in-memory storage with the real','line_number':160,'multiline':False]
['text':' once as soon as possible without awaiting','line_number':161,'multiline':False]
['text':' the init call.','line_number':162,'multiline':False]
['text':' Re-emit storage changes via event','line_number':166,'multiline':False]
['text':' Await storage init','line_number':169,'multiline':False]
['text':' Ensure we track whether storage is new or not','line_number':172,'multiline':False]
['text':' Update state','line_number':183,'multiline':False]
['text':' Mark init promise as completed','line_number':186,'multiline':False]
['text':' Measure how long it takes to close storage','line_number':230,'multiline':False]
['text':' If close() is taking a long time, there is','line_number':235,'multiline':False]
['text':' a chance that the underlying DB is large','line_number':236,'multiline':False]
['text':' either on disk or in general. In that case','line_number':237,'multiline':False]
['text':' log some additional info to further diagnose','line_number':238,'multiline':False]
['text':' Signal as event','line_number':243,'multiline':False]
['text':' Ensure we are not accidentally leaving','line_number':266,'multiline':False]
['text':' a pending initialized storage behind in','line_number':267,'multiline':False]
['text':' case `close()` was called before `init()`','line_number':268,'multiline':False]
['text':' finishes.','line_number':269,'multiline':False]
['text':' Update state','line_number':274,'multiline':False]
['text':' Propagate to storage lib','line_number':277,'multiline':False]
['text':' Apply telemetry values as part of the application storage initialization','line_number':336,'multiline':False]
['text':' First session date (once)','line_number':342,'multiline':False]
['text':' Last / current session (always)','line_number':348,'multiline':False]
['text':' previous session date was the "current" one at that time','line_number':349,'multiline':False]
['text':' current session date is "now"','line_number':350,'multiline':False]
['text':' Return early if using inMemory storage','line_number':391,'multiline':False]
['text':' Otherwise, ensure the storage folder exists on disk','line_number':396,'multiline':False]
['text':' Ensure storage folder exists','line_number':405,'multiline':False]
['text':' Write metadata into folder (but do not await)','line_number':408,'multiline':False]
['text':' in-memory has no path','line_number':439,'multiline':False]
