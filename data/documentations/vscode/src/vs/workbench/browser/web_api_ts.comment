['text':'---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------','line_number':1,'multiline':True]
['text':'*
 * The `IWorkbench` interface is the API facade for web embedders
 * to call into the workbench.
 *
 * Note: Changes to this interface need to be announced and adopted.
 ','line_number':22,'multiline':True]
['text':'*
		 * Allows to execute any command if known with the provided arguments.
		 *
		 * @param command Identifier of the command to execute.
		 * @param rest Parameters passed to the command function.
		 * @return A promise that resolves to the returned value of the given command.
		 ','line_number':32,'multiline':True]
['text':'*
		 * Logging for embedder.
		 *
		 * @param level The log level of the message to be printed.
		 * @param message Message to be printed.
		 ','line_number':44,'multiline':True]
['text':'*
		 * @returns the scheme to use for opening the associated desktop
		 * experience via protocol handler.
		 ','line_number':55,'multiline':True]
['text':'*
		 * Retrieve performance marks that have been collected during startup. This function
		 * returns tuples of source and marks. A source is a dedicated context, like
		 * the renderer or an extension host.
		 *
		 * *Note* that marks can be collected on different machines and in different processes
		 * and that therefore "different clocks" are used. So, comparing `startTime`-properties
		 * across contexts should be taken with a grain of salt.
		 *
		 * @returns A promise that resolves to tuples of source and marks.
		 ','line_number':61,'multiline':True]
['text':'*
		 * Allows to open a `URI` with the standard opener service of the
		 * workbench.
		 ','line_number':74,'multiline':True]
['text':'*
		 * Show progress in the editor. Progress is shown while running the given callback
		 * and while the promise it returned isn't resolved nor rejected.
		 *
		 * @param task A callback returning a promise.
		 * @return A promise that resolves to the returned value of the given task result.
		 ','line_number':83,'multiline':True]
['text':'*
		 * Creates a terminal with limited capabilities that is intended for
		 * writing output from the embedder before the workbench has finished
		 * loading. When an embedder terminal is created it will automatically
		 * show to the user.
		 *
		 * @param options The definition of the terminal, this is similar to
		 * `ExtensionTerminalOptions` in the extension API.
		 ','line_number':95,'multiline':True]
['text':'*
		 * Forwards a port. If the current embedder implements a tunnelFactory then that will be used to make the tunnel.
		 * By default, openTunnel only support localhost; however, a tunnelFactory can be used to support other ips.
		 *
		 * @throws When run in an environment without a remote.
		 *
		 * @param tunnelOptions The `localPort` is a suggestion only. If that port is not available another will be chosen.
		 ','line_number':109,'multiline':True]
['text':'*
	 * Triggers shutdown of the workbench programmatically. After this method is
	 * called, the workbench is not usable anymore and the page needs to reload
	 * or closed.
	 *
	 * This will also remove any `beforeUnload` handlers that would bring up a
	 * confirmation dialog.
	 *
	 * The returned promise should be awaited on to ensure any data to persist
	 * has been persisted.
	 ','line_number':120,'multiline':True]
['text':'#region Connection related configuration','line_number':136,'multiline':False]
['text':'*
	 * The remote authority is the IP:PORT from where the workbench is served
	 * from. It is for example being used for the websocket connections as address.
	 ','line_number':138,'multiline':True]
['text':'*
	 * The connection token to send to the server.
	 ','line_number':144,'multiline':True]
['text':'*
	 * An endpoint to serve iframe content ("webview") from. This is required
	 * to provide full security isolation from the workbench host.
	 ','line_number':149,'multiline':True]
['text':'*
	 * A factory for web sockets.
	 ','line_number':155,'multiline':True]
['text':'*
	 * A provider for resource URIs.
	 *
	 * *Note*: This will only be invoked after the `connectionToken` is resolved.
	 ','line_number':160,'multiline':True]
['text':'*
	 * Resolves an external uri before it is opened.
	 ','line_number':167,'multiline':True]
['text':'*
	 * A provider for supplying tunneling functionality,
	 * such as creating tunnels and showing candidate ports to forward.
	 ','line_number':172,'multiline':True]
['text':'*
	 * Endpoints to be used for proxying authentication code exchange calls in the browser.
	 ','line_number':178,'multiline':True]
['text':'*
	 * The identifier of an edit session associated with the current workspace.
	 ','line_number':183,'multiline':True]
['text':'*
	 * Resource delegation handler that allows for loading of resources when
	 * using remote resolvers.
	 *
	 * This is exclusive with {@link resourceUriProvider}. `resourceUriProvider`
	 * should be used if a {@link webSocketFactory} is used, and will be preferred.
	 ','line_number':188,'multiline':True]
['text':'#endregion','line_number':197,'multiline':False]
['text':'#region Workbench configuration','line_number':200,'multiline':False]
['text':'*
	 * A handler for opening workspaces and providing the initial workspace.
	 ','line_number':202,'multiline':True]
['text':'*
	 * Settings sync options
	 ','line_number':207,'multiline':True]
['text':'*
	 * The secret storage provider to store and retrieve secrets.
	 ','line_number':212,'multiline':True]
['text':'*
	 * Additional builtin extensions those cannot be uninstalled but only be disabled.
	 * It can be one of the following:
	 * 	- an extension in the Marketplace
	 * 	- location of the extension where it is hosted.
	 ','line_number':217,'multiline':True]
['text':'*
	 * List of extensions to be enabled if they are installed.
	 * Note: This will not install extensions if not installed.
	 ','line_number':225,'multiline':True]
['text':'*
	 * Additional domains allowed to open from the workbench without the
	 * link protection popup.
	 ','line_number':231,'multiline':True]
['text':'*
	 * Enable workspace trust feature for the current window
	 ','line_number':237,'multiline':True]
['text':'*
	 * Urls that will be opened externally that are allowed access
	 * to the opener window. This is primarily used to allow
	 * `window.close()` to be called from the newly opened window.
	 ','line_number':242,'multiline':True]
['text':'*
	 * Support for URL callbacks.
	 ','line_number':249,'multiline':True]
['text':'*
	 * Support adding additional properties to telemetry.
	 ','line_number':254,'multiline':True]
['text':'*
	 * A set of optional commands that should be registered with the commands
	 * registry.
	 *
	 * Note: commands can be called from extensions if the identifier is known!
	 ','line_number':259,'multiline':True]
['text':'*
	 * Optional default layout to apply on first time the workspace is opened
	 * (unless `force` is specified). This includes visibility of views and
	 * editors including editor grid layout.
	 ','line_number':267,'multiline':True]
['text':'*
	 * Optional configuration default overrides contributed to the workbench.
	 ','line_number':274,'multiline':True]
['text':'#endregion','line_number':279,'multiline':False]
['text':'#region Profile options','line_number':281,'multiline':False]
['text':'*
	 * Profile to use for the workbench.
	 ','line_number':283,'multiline':True]
['text':'*
	 * URI of the profile to preview.
	 ','line_number':288,'multiline':True]
['text':'#endregion','line_number':293,'multiline':False]
['text':'#region Update/Quality related','line_number':296,'multiline':False]
['text':'*
	 * Support for update reporting
	 ','line_number':298,'multiline':True]
['text':'*
	 * Support for product quality switching
	 ','line_number':303,'multiline':True]
['text':'#endregion','line_number':308,'multiline':False]
['text':'#region Branding','line_number':311,'multiline':False]
['text':'*
	 * Optional home indicator to appear above the hamburger menu in the activity bar.
	 ','line_number':313,'multiline':True]
['text':'*
	 * Optional welcome banner to appear above the workbench. Can be dismissed by the
	 * user.
	 ','line_number':318,'multiline':True]
['text':'*
	 * Optional override for the product configuration properties.
	 ','line_number':324,'multiline':True]
['text':'*
	 * Optional override for properties of the window indicator in the status bar.
	 ','line_number':329,'multiline':True]
['text':'*
	 * Specifies the default theme type (LIGHT, DARK..) and allows to provide initial colors that are shown
	 * until the color theme that is specified in the settings (`editor.colorTheme`) is loaded and applied.
	 * Once there are persisted colors from a last run these will be used.
	 *
	 * The idea is that the colors match the main colors from the theme defined in the `configurationDefaults`.
	 ','line_number':334,'multiline':True]
['text':'*
	 *  Welcome dialog. Can be dismissed by the user.
	 ','line_number':343,'multiline':True]
['text':'#endregion','line_number':348,'multiline':False]
['text':'#region IPC','line_number':351,'multiline':False]
['text':'#endregion','line_number':355,'multiline':False]
['text':'#region Development options','line_number':358,'multiline':False]
['text':'#endregion','line_number':362,'multiline':False]
['text':'*
 * A workspace to open in the workbench can either be:
 * - a workspace file with 0-N folders (via `workspaceUri`)
 * - a single folder (via `folderUri`)
 * - empty (via `undefined`)
 ','line_number':367,'multiline':True]
['text':'*
	 * The initial workspace to open.
	 ','line_number':377,'multiline':True]
['text':'*
	 * Arbitrary payload from the `IWorkspaceProvider.open` call.
	 ','line_number':382,'multiline':True]
['text':'*
	 * Return `true` if the provided [workspace](#IWorkspaceProvider.workspace) is trusted, `false` if not trusted, `undefined` if unknown.
	 ','line_number':387,'multiline':True]
['text':'*
	 * Asks to open a workspace in the current or a new window.
	 *
	 * @param workspace the workspace to open.
	 * @param options optional options for the workspace to open.
	 * - `reuse`: whether to open inside the current window or a new window
	 * - `payload`: arbitrary payload that should be made available
	 * to the opening window via the `IWorkspaceProvider.payload` property.
	 * @param payload optional payload to send to the workspace to open.
	 *
	 * @returns true if successfully opened, false otherwise.
	 ','line_number':392,'multiline':True]
['text':'*
 * The identifier of an extension in the format: `PUBLISHER.NAME`. For example: `vscode.csharp`
 ','line_number':411,'multiline':True]
['text':'*
	 * Overrides the behavior when an external URL is about to be opened.
	 * Returning false means that the URL wasn't handled, and the default
	 * handling behavior should be used: `window.open(href, '_blank', 'noopener');`
	 *
	 * @returns true if URL was handled, false otherwise.
	 ','line_number':428,'multiline':True]
['text':'*
	 * Support for creating tunnels.
	 ','line_number':440,'multiline':True]
['text':'*
	 * Support for filtering candidate ports.
	 ','line_number':445,'multiline':True]
['text':'*
	 * The features that the tunnel provider supports.
	 ','line_number':450,'multiline':True]
['text':'*
	 * The desired local port. If this port can't be used, then another will be chosen.
	 ','line_number':464,'multiline':True]
['text':'*
	 * True when the local operating system will require elevation to use the requested local port.
	 ','line_number':478,'multiline':True]
['text':'*
	 * The complete local address(ex. localhost:1234)
	 ','line_number':488,'multiline':True]
['text':'*
	 * If protocol is not provided, it is assumed to be http, regardless of the localAddress
	 ','line_number':495,'multiline':True]
['text':'*
	 * Implementers of Tunnel should fire onDidDispose when dispose is called.
	 ','line_number':500,'multiline':True]
['text':'*
	 * An identifier for the command. Commands can be executed from extensions
	 * using the `vscode.commands.executeCommand` API using that command ID.
	 ','line_number':519,'multiline':True]
['text':'*
	 * The optional label of the command. If provided, the command will appear
	 * in the command palette.
	 ','line_number':525,'multiline':True]
['text':'*
	 * The optional menus to append this command to. Only valid if `label` is
	 * provided as well.
	 * @default Menu.CommandPalette
	 ','line_number':531,'multiline':True]
['text':'*
	 * A function that is being executed with any arguments passed over. The
	 * return type will be send back to the caller.
	 *
	 * Note: arguments and return type should be serializable so that they can
	 * be exchanged across processes boundaries.
	 ','line_number':538,'multiline':True]
['text':'*
	 * The link to open when clicking the home indicator.
	 ','line_number':550,'multiline':True]
['text':'*
	 * The icon name for the home indicator. This needs to be one of the existing
	 * icons from our Codicon icon set. For example `code`.
	 ','line_number':555,'multiline':True]
['text':'*
	 * A tooltip that will appear while hovering over the home indicator.
	 ','line_number':561,'multiline':True]
['text':'*
	 * Welcome banner message to appear as text.
	 ','line_number':569,'multiline':True]
['text':'*
	 * Optional icon for the banner. This is either the URL to an icon to use
	 * or the name of one of the existing icons from our Codicon icon set.
	 *
	 * If not provided a default icon will be used.
	 ','line_number':574,'multiline':True]
['text':'*
	 * Optional actions to appear as links after the welcome banner message.
	 ','line_number':582,'multiline':True]
['text':'*
	 * The link to open when clicking. Supports command invocation when
	 * using the `command:<commandId>` value.
	 ','line_number':590,'multiline':True]
['text':'*
	 * The label to show for the action link.
	 ','line_number':596,'multiline':True]
['text':'*
	 * A tooltip that will appear while hovering over the action link.
	 ','line_number':601,'multiline':True]
['text':'*
	 * Triggering this event will cause the window indicator to update.
	 ','line_number':609,'multiline':True]
['text':'*
	 * Label of the window indicator may include octicons
	 * e.g. `$(remote) label`
	 ','line_number':614,'multiline':True]
['text':'*
	 * Tooltip of the window indicator should not include
	 * octicons and be descriptive.
	 ','line_number':620,'multiline':True]
['text':'*
	 * If provided, overrides the default command that
	 * is executed when clicking on the window indicator.
	 ','line_number':626,'multiline':True]
['text':'*
	 * Initial color theme type.
	 ','line_number':642,'multiline':True]
['text':'*
	 * A list of workbench colors to apply initially.
	 ','line_number':647,'multiline':True]
['text':'*
	 * Unique identifier of the welcome dialog. The identifier will be used to determine
	 * if the dialog has been previously displayed.
	 ','line_number':655,'multiline':True]
['text':'*
	 * Title of the welcome dialog.
	 ','line_number':661,'multiline':True]
['text':'*
	 * Button text of the welcome dialog.
	 ','line_number':666,'multiline':True]
['text':'*
	 * Button command to execute from the welcome dialog.
	 ','line_number':671,'multiline':True]
['text':'*
	 * Message text for the welcome dialog.
	 ','line_number':676,'multiline':True]
['text':'*
	 * Media to include in the welcome dialog.
	 ','line_number':681,'multiline':True]
['text':'*
	 * The identifier of the view to show by default.
	 ','line_number':689,'multiline':True]
['text':'*
	 * The location of the editor in the editor grid layout.
	 * Editors are layed out in editor groups and the view
	 * column is counted from top left to bottom right in
	 * the order of appearance beginning with `1`.
	 *
	 * If not provided, the editor will open in the active
	 * group.
	 ','line_number':697,'multiline':True]
['text':'*
	 * The resource of the editor to open.
	 ','line_number':708,'multiline':True]
['text':'*
	 * Optional extra options like which editor
	 * to use or which text to select.
	 ','line_number':713,'multiline':True]
['text':'*
	 * Will not open an untitled editor in case
	 * the resource does not exist.
	 ','line_number':719,'multiline':True]
['text':'*
	 * A list of views to show by default.
	 ','line_number':728,'multiline':True]
['text':'*
	 * A list of editors to show by default.
	 ','line_number':733,'multiline':True]
['text':'*
	 * The layout to use for the workbench.
	 ','line_number':738,'multiline':True]
['text':'*
		 * The layout of the editor area.
		 ','line_number':743,'multiline':True]
['text':'*
	 * Forces this layout to be applied even if this isn't
	 * the first time the workspace has been opened
	 ','line_number':749,'multiline':True]
['text':'*
	 * Handler is being called when the user wants to switch between
	 * `insider` or `stable` product qualities.
	 ','line_number':758,'multiline':True]
['text':'*
 * Settings sync options
 ','line_number':765,'multiline':True]
['text':'*
	 * Is settings sync enabled
	 ','line_number':770,'multiline':True]
['text':'*
	 * Version of extensions sync state.
	 * Extensions sync state will be reset if version is provided and different from previous version.
	 ','line_number':775,'multiline':True]
['text':'*
	 * Handler is being called when the user changes Settings Sync enablement.
	 ','line_number':781,'multiline':True]
['text':'*
	 * Authentication provider
	 ','line_number':786,'multiline':True]
['text':'*
		 * Unique identifier of the authentication provider.
		 ','line_number':790,'multiline':True]
['text':'*
		 * Called when the user wants to signin to Settings Sync using the given authentication provider.
		 * The returned promise should resolve to the authentication session id.
		 ','line_number':795,'multiline':True]
['text':'*
	 * Current logging level. Default is `LogLevel.Info`.
	 ','line_number':805,'multiline':True]
['text':'*
	 * Extension log level.
	 ','line_number':810,'multiline':True]
['text':'*
	 * Location of a module containing extension tests to run once the workbench is open.
	 ','line_number':815,'multiline':True]
['text':'*
	 * Add extensions under development.
	 ','line_number':820,'multiline':True]
['text':'*
	 * Whether to enable the smoke test driver.
	 ','line_number':825,'multiline':True]
['text':'*
 * Utility provided in the {@link WorkbenchOptions} which allows loading resources
 * when remote resolvers are used in the web.
 ','line_number':831,'multiline':True]
['text':'*
	 * Path the workbench should delegate requests to. The embedder should
	 * install a service worker on this path and emit {@link onDidReceiveRequest}
	 * events when requests come in for that path.
	 ','line_number':836,'multiline':True]
['text':'*
	 * Event that should fire when requests are made on the {@link pathPrefix}.
	 ','line_number':843,'multiline':True]
['text':'*
 * todo@connor4312: this may eventually gain more properties like method and
 * headers, but for now we only deal with GET requests.
 ','line_number':849,'multiline':True]
['text':'*
	 * Request URI. Generally will begin with the current
	 * origin and {@link IRemoteResourceProvider.pathPrefix}.
	 ','line_number':854,'multiline':True]
['text':'*
	 * A method called by the editor to issue a response to the request.
	 ','line_number':860,'multiline':True]
