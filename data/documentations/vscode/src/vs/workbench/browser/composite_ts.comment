['text':'---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------','line_number':1,'multiline':True]
['text':'*
 * Composites are layed out in the sidebar and panel part of the workbench. At a time only one composite
 * can be open in the sidebar, and only one composite can be open in the panel.
 *
 * Each composite has a minimized representation that is good enough to provide some
 * information about the state of the composite data.
 *
 * The workbench will keep a composite alive after it has been created and show/hide it based on
 * user interaction. The lifecycle of a composite goes in the order create(), setVisible(true|false),
 * layout(), focus(), dispose(). During use of the workbench, a composite will often receive a setVisible,
 * layout and focus call, but only one create and dispose call.
 ','line_number':21,'multiline':True]
['text':'*
	 * Note: Clients should not call this method, the workbench calls this
	 * method. Calling it otherwise may result in unexpected behavior.
	 *
	 * Called to create this composite on the provided parent. This method is only
	 * called once during the lifetime of the workbench.
	 * Note that DOM-dependent calculations should be performed from the setVisible()
	 * call. Only then the composite will be part of the DOM.
	 ','line_number':110,'multiline':True]
['text':'*
	 * Returns the container this composite is being build in.
	 ','line_number':123,'multiline':True]
['text':'*
	 * Note: Clients should not call this method, the workbench calls this
	 * method. Calling it otherwise may result in unexpected behavior.
	 *
	 * Called to indicate that the composite has become visible or hidden. This method
	 * is called more than once during workbench lifecycle depending on the user interaction.
	 * The composite will be on-DOM if visible is set to true and off-DOM otherwise.
	 *
	 * Typically this operation should be fast though because setVisible might be called many times during a session.
	 * If there is a long running operation it is fine to have it running in the background asyncly and return before.
	 ','line_number':130,'multiline':True]
['text':'*
	 * Called when this composite should receive keyboard focus.
	 ','line_number':147,'multiline':True]
['text':' Make sure to focus the window of the container','line_number':153,'multiline':False]
['text':' because it is possible that the composite is','line_number':154,'multiline':False]
['text':' opened in a auxiliary window that is not focused.','line_number':155,'multiline':False]
['text':'*
	 * Layout the contents of this composite using the provided dimensions.
	 ','line_number':160,'multiline':True]
['text':'*
	 * Set boundary sashes for this composite. These are used to create
	 * draggable corner areas with inner sashes.
	 ','line_number':165,'multiline':True]
['text':'*
	 *
	 * @returns the action runner for this composite
	 ','line_number':171,'multiline':True]
['text':'*
	 * Returns an array of actions to show in the action bar of the composite.
	 ','line_number':179,'multiline':True]
['text':'*
	 * Returns an array of actions to show in the action bar of the composite
	 * in a less prominent way then action from getActions.
	 ','line_number':186,'multiline':True]
['text':'*
	 * Returns an array of actions to show in the context menu of the composite
	 ','line_number':194,'multiline':True]
['text':'*
	 * For any of the actions returned by this composite, provide an IActionViewItem in
	 * cases where the implementor of the composite wants to override the presentation
	 * of an action. Returns undefined to indicate that the action is not rendered through
	 * an action item.
	 ','line_number':201,'multiline':True]
['text':'*
	 * Provide a context to be passed to the toolbar.
	 ','line_number':211,'multiline':True]
['text':'*
	 * Returns the instance of IActionRunner to use with this composite for the
	 * composite tool bar.
	 ','line_number':218,'multiline':True]
['text':'*
	 * Method for composite implementors to indicate to the composite container that the title or the actions
	 * of the composite have changed. Calling this method will cause the container to ask for title (getTitle())
	 * and actions (getActions(), getSecondaryActions()) if the composite is visible or the next time the composite
	 * gets visible.
	 ','line_number':230,'multiline':True]
['text':'*
	 * Returns true if this composite is currently visible and false otherwise.
	 ','line_number':240,'multiline':True]
['text':'*
	 * Returns the underlying composite control or `undefined` if it is not accessible.
	 ','line_number':247,'multiline':True]
['text':'*
 * A composite descriptor is a lightweight descriptor of a composite in the workbench.
 ','line_number':255,'multiline':True]
