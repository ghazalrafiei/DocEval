['text':'---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------','line_number':1,'multiline':True]
['text':' 1.1 addresses visible cell padding, to make sure we don't focus md cell and also render its sticky line','line_number':69,'multiline':False]
['text':' TODO @Yoyokrazy:','line_number':84,'multiline':False]
['text':' BEHAVIOR','line_number':85,'multiline':False]
['text':' - [ ] bug with some popping around the cell transition','line_number':86,'multiline':False]
['text':' - [ ] bug with only bottom most sticky being partially transitioned','line_number':87,'multiline':False]
['text':' 		- partial rendering/transition only occuring when the headers shrink against a new section','line_number':88,'multiline':False]
['text':'		- **and only for BOTTOM of that initial sticky tree**','line_number':89,'multiline':False]
['text':'		- issues with HC themes','line_number':90,'multiline':False]
['text':' UX','line_number':91,'multiline':False]
['text':' - [ ] render symbols instead of #'s?','line_number':92,'multiline':False]
['text':' 		- maybe 'Hx >' where x is the level','line_number':93,'multiline':False]
['text':' find last code cell of section, store bottom scroll position in sectionBottom','line_number':215,'multiline':False]
['text':' don't show headers when you're viewing the top cell','line_number':227,'multiline':False]
['text':' if we are here, the cell is a code cell.','line_number':237,'multiline':False]
['text':' check next cell, if markdown, that means this is the end of the section','line_number':238,'multiline':False]
['text':' check if cell is within visible range','line_number':239,'multiline':False]
['text':' this is the end of the section','line_number':243,'multiline':False]
['text':' store the bottom scroll position of this cell','line_number':244,'multiline':False]
['text':' compute sticky scroll height','line_number':246,'multiline':False]
['text':' using 22 instead of stickyscrollheight, as we don't necessarily render each line. 22 starts rendering sticky when we have space for at least 1 of them','line_number':251,'multiline':False]
['text':' if (editorScrollTop + stickyScrollHeight > sectionBottom), then continue to next section','line_number':257,'multiline':False]
['text':' there is no next cell, so use the bottom of the editor as the sectionBottom, using scrolltop + height','line_number':262,'multiline':False]
['text':' cell loop close','line_number':267,'multiline':False]
['text':' -------------------------------------------------------------------------------------','line_number':269,'multiline':False]
['text':' we now know the cell which the sticky is determined by, and the sectionBottom value to determine how many sticky lines to render','line_number':270,'multiline':False]
['text':' compute the space available for sticky lines, and render sticky lines','line_number':271,'multiline':False]
['text':' level 7 represents a non-header entry, which we don't want to render','line_number':313,'multiline':False]
['text':' TODO: clean up partial cell animation','line_number':323,'multiline':False]
['text':' [ ] slight pop as lines finish disappearing','line_number':324,'multiline':False]
['text':' [ ] only actually works when shrunk against new section. **and only for BOTTOM of that initial sticky tree**','line_number':325,'multiline':False]
['text':' [ ] issues with HC themes','line_number':326,'multiline':False]
['text':' use negative margins to render the bottom sticky line as a partial element','line_number':327,'multiline':False]
['text':' todo: partial render logic here','line_number':328,'multiline':False]
['text':' if (numLinesToRender % 1 !== 0) {','line_number':329,'multiline':False]
['text':' 	const partialHeight = 22 - Math.floor((numLinesToRender % 1) * 22);','line_number':330,'multiline':False]
['text':' 	elementsToRender[elementsToRender.length - 1].element.style.zIndex = '-1';','line_number':331,'multiline':False]
['text':' 	elementsToRender[elementsToRender.length - 1].element.style.marginTop = `-${partialHeight}px`;','line_number':332,'multiline':False]
['text':' }','line_number':333,'multiline':False]
['text':' iterate over elements to render, and append to container','line_number':335,'multiline':False]
['text':' break when we reach numLinesToRender','line_number':336,'multiline':False]
['text':' ensure we have dropShadow at base of sticky scroll','line_number':345,'multiline':False]
['text':' find first code cell in visible range. this marks the start of the first section','line_number':370,'multiline':False]
['text':' find the last code cell in the first section of the visible range, store the bottom scroll position in a const sectionBottom','line_number':371,'multiline':False]
['text':' compute sticky scroll height, and check if editorScrolltop + stickyScrollHeight < sectionBottom','line_number':372,'multiline':False]
['text':' if that condition is true, break out of the loop with that cell as the tracked cell','line_number':373,'multiline':False]
['text':' if that condition is false, continue to next cell','line_number':374,'multiline':False]
['text':' find last code cell of section, store bottom scroll position in sectionBottom','line_number':378,'multiline':False]
['text':' account for transitions between top level headers','line_number':394,'multiline':False]
['text':' if the cell is a top level header, only render once we have scrolled past the bottom of the cell','line_number':403,'multiline':False]
['text':' todo: (polish) figure out what padding value to use here. need to account properly for bottom insert cell toolbar, cell toolbar, and md cell bottom padding','line_number':404,'multiline':False]
['text':' if we are here, the cell is a code cell.','line_number':411,'multiline':False]
['text':' check next cell, if markdown, that means this is the end of the section','line_number':412,'multiline':False]
['text':' this is the end of the section','line_number':415,'multiline':False]
['text':' store the bottom scroll position of this cell','line_number':416,'multiline':False]
['text':' compute sticky scroll height','line_number':418,'multiline':False]
['text':' check if we can render this section of sticky','line_number':423,'multiline':False]
['text':' find next section after this one','line_number':434,'multiline':False]
['text':' recompute section bottom based on the top of the next section','line_number':445,'multiline':False]
['text':' this block of logic cleans transitions between two sections that share a parent.','line_number':448,'multiline':False]
['text':' if the current section and the next section share a parent, then we can render the next section's sticky lines to avoid pop-in between','line_number':449,'multiline':False]
['text':' only shrink sticky','line_number':455,'multiline':False]
['text':' there is no next visible cell, so use the bottom of the editor as the sectionBottom, using scrolltop + height','line_number':463,'multiline':False]
['text':' for cell loop close','line_number':472,'multiline':False]
