['text':'---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------','line_number':1,'multiline':True]
['text':'*
 * The identifier for the first numeric parameter (`Ps`) for OSC commands used by shell integration.
 ','line_number':6,'multiline':True]
['text':'*
	 * Sequences pioneered by FinalTerm.
	 ','line_number':10,'multiline':True]
['text':'*
	 * Sequences pioneered by VS Code. The number is derived from the least significant digit of
	 * "VSC" when encoded in hex ("VSC" = 0x56, 0x53, 0x43).
	 ','line_number':14,'multiline':True]
['text':'*
	 * Sequences pioneered by iTerm.
	 ','line_number':19,'multiline':True]
['text':'*
 * VS Code-specific shell integration sequences. Some of these are based on common alternatives like
 * those pioneered in FinalTerm. The decision to move to entirely custom sequences was to try to
 * improve reliability and prevent the possibility of applications confusing the terminal.
 ','line_number':25,'multiline':True]
['text':'*
	 * The start of the prompt, this is expected to always appear at the start of a line.
	 * Based on FinalTerm's `OSC 133 ; A ST`.
	 ','line_number':31,'multiline':True]
['text':'*
	 * The start of a command, ie. where the user inputs their command.
	 * Based on FinalTerm's `OSC 133 ; B ST`.
	 ','line_number':37,'multiline':True]
['text':'*
	 * Sent just before the command output begins.
	 * Based on FinalTerm's `OSC 133 ; C ST`.
	 ','line_number':43,'multiline':True]
['text':'*
	 * Sent just after a command has finished. The exit code is optional, when not specified it
	 * means no command was run (ie. enter on empty prompt or ctrl+c).
	 * Based on FinalTerm's `OSC 133 ; D [; <ExitCode>] ST`.
	 ','line_number':49,'multiline':True]
['text':'*
	 * Explicitly set the command line. This helps workaround problems with conpty not having a
	 * passthrough mode by providing an option on Windows to send the command that was run. With
	 * this sequence there's no need for the guessing based on the unreliable cursor positions that
	 * would otherwise be required.
	 ','line_number':56,'multiline':True]
['text':'*
	 * Similar to prompt start but for line continuations.
	 ','line_number':64,'multiline':True]
['text':'*
	 * Similar to command start but for line continuations.
	 ','line_number':69,'multiline':True]
['text':'*
	 * The start of the right prompt.
	 ','line_number':74,'multiline':True]
['text':'*
	 * The end of the right prompt.
	 ','line_number':79,'multiline':True]
['text':'*
	 * Set an arbitrary property: `OSC 633 ; P ; <Property>=<Value> ST`, only known properties will
	 * be handled.
	 ','line_number':84,'multiline':True]
['text':'*
 * ITerm sequences
 ','line_number':96,'multiline':True]
['text':'*
	 * Based on ITerm's `OSC 1337 ; SetMark` sets a mark on the scrollbar
	 ','line_number':100,'multiline':True]
