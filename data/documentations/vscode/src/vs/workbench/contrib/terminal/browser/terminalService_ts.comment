['text':'---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------','line_number':1,'multiline':True]
['text':' Check if either an editor or panel terminal has focus and return that, regardless of the','line_number':113,'multiline':False]
['text':' value of _activeInstance. This avoids terminals created in the panel for example stealing','line_number':114,'multiline':False]
['text':' the active status even when it's not focused.','line_number':115,'multiline':False]
['text':' Fallback to the last recorded active terminal if neither have focus','line_number':121,'multiline':False]
['text':' ITerminalInstanceHost events','line_number':138,'multiline':False]
['text':' Terminal view events','line_number':150,'multiline':False]
['text':' Lazily initialized events that fire when the specified event fires on _any_ terminal','line_number':154,'multiline':False]
['text':' the below avoids having to poll routinely.','line_number':188,'multiline':False]
['text':' we update detected profiles when an instance is created so that,','line_number':189,'multiline':False]
['text':' for example, we detect if you've installed a pwsh','line_number':190,'multiline':False]
['text':' Hide the panel if there are no more instances, provided that VS Code is not shutting','line_number':200,'multiline':False]
['text':' down. When shutting down the panel is locked in place so that it is restored upon next','line_number':201,'multiline':False]
['text':' launch.','line_number':202,'multiline':False]
['text':' Create async as the class depends on `this`','line_number':231,'multiline':False]
['text':' create split, only valid if there's an active instance','line_number':258,'multiline':False]
['text':' Connect to the extension host if it's there, set the connection state to connected when','line_number':280,'multiline':False]
['text':' it's done. This should happen even when there is no extension host.','line_number':281,'multiline':False]
['text':' will get rejected without a persistentProcessId to attach to','line_number':299,'multiline':False]
['text':' Track the latest active terminal for each host so that when one becomes undefined, the','line_number':350,'multiline':False]
['text':' TerminalService's active terminal is set to the last active terminal from the other host.','line_number':351,'multiline':False]
['text':' This means if the last terminal editor is closed such that it becomes undefined, the last','line_number':352,'multiline':False]
['text':' active group's terminal will be used as the active terminal if available.','line_number':353,'multiline':False]
['text':' If this was a hideFromUser terminal created by the API this was triggered by show,','line_number':367,'multiline':False]
['text':' in which case we need to create the terminal group','line_number':368,'multiline':False]
['text':' Confirm on kill in the editor is handled by the editor input','line_number':407,'multiline':False]
['text':' now that terminals have been restored,','line_number':445,'multiline':False]
['text':' attach listeners to update remote when terminals are changed','line_number':446,'multiline':False]
['text':' now that terminals have been restored,','line_number':465,'multiline':False]
['text':' attach listeners to update local state when terminals are changed','line_number':466,'multiline':False]
['text':' The state must be updated when the terminal is relaunched, otherwise the persistent','line_number':524,'multiline':False]
['text':' terminal ID will be stale and the process will be leaked.','line_number':525,'multiline':False]
['text':' No instance, create','line_number':542,'multiline':False]
['text':' Active instance, ensure accepts input','line_number':546,'multiline':False]
['text':' Active instance doesn't accept input, create and focus','line_number':550,'multiline':False]
['text':' The initial request came from the extension host, no need to wait for it','line_number':589,'multiline':False]
['text':' Never veto on web as this would block all windows from being closed. This disables','line_number':596,'multiline':False]
['text':' process revive as we can't handle it on shutdown.','line_number':597,'multiline':False]
['text':' No terminal instances, don't veto','line_number':607,'multiline':False]
['text':' Persist terminal _buffer state_, note that even if this happens the dirty terminal prompt','line_number':611,'multiline':False]
['text':' still shows as that cannot be revived','line_number':612,'multiline':False]
['text':' Attempt to persist the terminal state but only allow 2000ms as we can't block','line_number':617,'multiline':False]
['text':' shutdown. This can happen when in a remote workspace but the other side has been','line_number':618,'multiline':False]
['text':' suspended and is in the process of reconnecting, the message will be put in a','line_number':619,'multiline':False]
['text':' queue in this case for when the connection is back up and running. Aborting the','line_number':620,'multiline':False]
['text':' process is preferable in this case.','line_number':621,'multiline':False]
['text':' Persist terminal _processes_','line_number':628,'multiline':False]
['text':' Swallow as exceptions should not cause a veto to prevent shutdown','line_number':640,'multiline':False]
['text':' Allow on close if it's the last window on Windows or Linux','line_number':659,'multiline':False]
['text':' veto if configured to show confirmation and the user chose not to exit','line_number':671,'multiline':False]
['text':' Don't touch processes if the shutdown was a result of reload as they will be reattached','line_number':681,'multiline':False]
['text':' Clear terminal layout info only when not persisting','line_number':692,'multiline':False]
['text':' Avoid saving state when shutting down as that would override process state to be revived','line_number':700,'multiline':False]
['text':' Fire events','line_number':812,'multiline':False]
['text':' Terminal from a different window','line_number':839,'multiline':False]
['text':' View terminals','line_number':849,'multiline':False]
['text':' Terminal editors','line_number':856,'multiline':False]
['text':' TODO: Remove this, it should live in group/editor servioce','line_number':873,'multiline':False]
['text':' Await the initialization of available profiles as long as this is not a pty terminal or a','line_number':927,'multiline':False]
['text':' local terminal in a remote workspace as profile won't be used in those cases and these','line_number':928,'multiline':False]
['text':' terminals need to be launched before remote connections are established.','line_number':929,'multiline':False]
['text':' Get the contributed profile if it was provided','line_number':947,'multiline':False]
['text':' Launch the contributed profile','line_number':954,'multiline':False]
['text':' Use the URI from the base instance if it exists, this will correctly split local terminals','line_number':1055,'multiline':False]
['text':' TODO: pass resource?','line_number':1096,'multiline':False]
['text':' since we don't set the target unless it's an editor terminal, this is necessary','line_number':1107,'multiline':False]
['text':' since we don't set the target unless it's an editor terminal, this is necessary','line_number':1113,'multiline':False]
['text':' Add welcome message and title annotation for local terminals launched within remote or','line_number':1138,'multiline':False]
['text':' virtual workspaces','line_number':1139,'multiline':False]
['text':' Make active automatically if it's the first instance','line_number':1161,'multiline':False]
['text':' TODO: add a rule collector to avoid duplication','line_number':1228,'multiline':False]
['text':' Add icons','line_number':1233,'multiline':False]
['text':' Add colors','line_number':1267,'multiline':False]
