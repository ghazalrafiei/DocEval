['text':'---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------','line_number':1,'multiline':True]
['text':' Agent reference with no other text - show the placeholder','line_number':175,'multiline':False]
['text':' Agent reference and subcommand with no other text - show the placeholder','line_number':196,'multiline':False]
['text':' Command reference with no other text - show the placeholder','line_number':219,'multiline':False]
['text':' No (classic) global slash commands when an agent is used','line_number':318,'multiline':False]
['text':' The icons are disabled here anyway,','line_number':336,'multiline':False]
['text':' Only one agent allowed','line_number':369,'multiline':False]
['text':' The icons are disabled here anyway','line_number':388,'multiline':False]
['text':' Only one allowed','line_number':417,'multiline':False]
['text':' Could allow text after 'position'','line_number':422,'multiline':False]
['text':' No text allowed between agent and subcommand','line_number':424,'multiline':False]
['text':' The icons are disabled here anyway','line_number':440,'multiline':False]
['text':' list subcommands when the query is empty, insert agent+subcommand','line_number':447,'multiline':False]
['text':' The icons are disabled here anyway','line_number':495,'multiline':False]
['text':' MUST be using `g`-flag','line_number':507,'multiline':False]
['text':' inside a "normal" word','line_number':560,'multiline':False]
['text':' MUST be using `g`-flag','line_number':578,'multiline':False]
['text':' TODO@roblourens work out a real API for this- maybe it can be part of the two-step flow that @file will probably use','line_number':606,'multiline':False]
['text':' The icons are disabled here anyway','line_number':623,'multiline':False]
['text':' A simple heuristic to delete the previous token when the user presses backspace.','line_number':651,'multiline':False]
['text':' The sophisticated way to do this would be to have a parse tree that can be updated incrementally.','line_number':652,'multiline':False]
['text':' Don't try to handle multicursor edits right now','line_number':658,'multiline':False]
['text':' If this was a simple delete, try to find out whether it was inside a token','line_number':661,'multiline':False]
['text':' Part of this token was deleted, and the deletion range doesn't go off the front of the token, for simpler math','line_number':667,'multiline':False]
['text':' Assume single line tokens','line_number':669,'multiline':False]
