['text':'---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------','line_number':1,'multiline':True]
['text':' private static autoDetectTelemetryName: string = 'taskServer.autoDetect';','line_number':188,'multiline':False]
['text':' no-op','line_number':342,'multiline':False]
['text':' update tasks so an incomplete list isn't returned when getWorkspaceTasks is called','line_number':384,'multiline':False]
['text':' send a specific activation event for this task type','line_number':592,'multiline':False]
['text':' send activation events for all task types','line_number':595,'multiline':False]
['text':' We need to first wait for extensions to be registered because we might read','line_number':604,'multiline':False]
['text':' the `TaskDefinitionRegistry` in case `type` is `undefined`','line_number':605,'multiline':False]
['text':' If there's a remoteAuthority, then we end up with 2 taskSystemInfos,','line_number':681,'multiline':False]
['text':' one for each extension host.','line_number':682,'multiline':False]
['text':' Ideally the Web caller of registerRegisterTaskSystem would use the correct key.','line_number':690,'multiline':False]
['text':' However, the caller doesn't know about the workspace folders at the time of the call, even though we know about them here.','line_number':691,'multiline':False]
['text':' Web infos should be pushed last.','line_number':700,'multiline':False]
['text':'*
	 * Get a subset of workspace tasks that match a certain predicate.
	 ','line_number':724,'multiline':True]
['text':' Try to find the task in the workspace','line_number':777,'multiline':False]
['text':' Nice, we found a configured task!','line_number':788,'multiline':False]
['text':' We didn't find the task, so we need to ask all resolvers about it','line_number':797,'multiline':False]
['text':' Try to resolve the task first','line_number':839,'multiline':False]
['text':' Ignore errors. The task could not be provided by any of the providers.','line_number':846,'multiline':False]
['text':' The task couldn't be resolved. Instead, use the less efficient provideTask.','line_number':849,'multiline':False]
['text':' Ignore. We use the empty result','line_number':948,'multiline':False]
['text':' Ignore. We use the empty result','line_number':975,'multiline':False]
['text':'TODO: should this # be configurable?','line_number':986,'multiline':False]
['text':' Ignore. We use the empty result','line_number':998,'multiline':False]
['text':' setting history limit to 0 means no LRU sorting','line_number':1129,'multiline':False]
['text':' because content might have changed','line_number':1511,'multiline':False]
['text':' We have a global task configuration','line_number':1597,'multiline':False]
['text':' We can only have extension tasks if we are in version 2.0.0. Then we can even run','line_number':1740,'multiline':False]
['text':' multiple build tasks.','line_number':1741,'multiline':False]
['text':' Since we save before running tasks, the task may have changed as part of the save.','line_number':1883,'multiline':False]
['text':' However, if the TaskRunSource is not User, then we shouldn't try to fetch the task again','line_number':1884,'multiline':False]
['text':' since this can cause a new'd task to get overwritten with a provided task.','line_number':1885,'multiline':False]
['text':' ignore, the task is already active, likely from being reconnected or from folder open.','line_number':1904,'multiline':False]
['text':' eat the error, we don't care about it here','line_number':1943,'multiline':False]
['text':' Check that the tasks provided are of the correct type','line_number':2046,'multiline':False]
['text':' onTimeout','line_number':2058,'multiline':False]
['text':' Ignore errors. The task could not be provided by any of the providers.','line_number':2171,'multiline':False]
['text':' At this point we have all the tasks and can migrate the recently used tasks.','line_number':2203,'multiline':False]
['text':' If we can't read the tasks.json file provide at least the contributed tasks','line_number':2208,'multiline':False]
['text':' This is for backwards compatibility with the 0.1.0 task annotation code','line_number':2234,'multiline':False]
['text':' if we had a gulp, jake or grunt command a task specification was a annotation','line_number':2235,'multiline':False]
['text':' __GDPR__
				"taskService.engineVersion" : {
					"owner": "alexr00",
					"comment": "The engine version of tasks. Used to determine if a user is using a deprecated version.",
					"executionEngineVersion" : { "classification": "SystemMetaData", "purpose": "FeatureInsight", "comment": "The engine version of tasks." }
				}
			','line_number':2464,'multiline':True]
['text':' eat the error, it has already been surfaced to the user and we don't care about it here','line_number':2885,'multiline':False]
['text':' make sure all dirty editors are saved','line_number':2921,'multiline':False]
['text':' No task running, prompt to ask which to run','line_number':2927,'multiline':False]
['text':'*
	 *
	 * @param tasks - The tasks which need to be filtered
	 * @param tasksInList - This tells splitPerGroupType to filter out globbed tasks (into defaults)
	 * @returns
	 ','line_number':2936,'multiline':True]
['text':' At this point (assuming taskGlobsInList is true) there are tasks with matching globs, so only put those in defaults','line_number':2945,'multiline':False]
['text':' eat the error, it has already been surfaced to the user and we don't care about it here','line_number':2973,'multiline':False]
['text':' First check for globs before checking for the default tasks of the task group','line_number':2998,'multiline':False]
['text':' This will activate extensions, so only do so if necessary #185960','line_number':3006,'multiline':False]
['text':' Fallback to absolute path of the file if it is not in a workspace or relative path cannot be found','line_number':3008,'multiline':False]
['text':' If we're dealing with tasks that were chosen because of a glob match,','line_number':3031,'multiline':False]
['text':' then put globs in the defaults and everything else in none','line_number':3032,'multiline':False]
['text':' At this this point there are multiple tasks.','line_number':3042,'multiline':False]
['text':' A single default glob task was returned, just run it directly','line_number':3057,'multiline':False]
['text':' If there's multiple globs that match we want to show the quick picker for those tasks','line_number':3062,'multiline':False]
['text':' We will need to call splitPerGroupType putting globs in defaults and the remaining tasks in none.','line_number':3063,'multiline':False]
['text':' We don't need to carry on after here','line_number':3064,'multiline':False]
['text':' If no globs are found or matched fallback to checking for default tasks of the task group','line_number':3069,'multiline':False]
['text':' A single default task was returned, just run it directly','line_number':3074,'multiline':False]
['text':' Multiple default tasks returned, show the quickPicker','line_number':3079,'multiline':False]
['text':' the output runner has only one task','line_number':3155,'multiline':False]
['text':' try dispatching using task identifier','line_number':3181,'multiline':False]
['text':' show quick pick with active tasks','line_number':3191,'multiline':False]
['text':' pin only if config file is created #8727','line_number':3270,'multiline':False]
['text':' Do nothing.','line_number':3292,'multiline':False]
['text':' If the only configured tasks are user tasks, then we should also show the option to create from a template.','line_number':3367,'multiline':False]
['text':' canceled when there's only one task','line_number':3408,'multiline':False]
['text':' canceled when there's only one task','line_number':3451,'multiline':False]
