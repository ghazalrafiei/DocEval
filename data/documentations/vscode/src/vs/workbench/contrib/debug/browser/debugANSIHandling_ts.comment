['text':'---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------','line_number':1,'multiline':True]
['text':'*
 * @param text The content to stylize.
 * @returns An {@link HTMLSpanElement} that contains the potentially stylized text.
 ','line_number':12,'multiline':True]
['text':' Potentially an ANSI escape sequence.','line_number':33,'multiline':False]
['text':' See http://ascii-table.com/ansi-escape-sequences.php & https://en.wikipedia.org/wiki/ANSI_escape_code','line_number':34,'multiline':False]
['text':' Ignore 'Esc[' as it's in every sequence.','line_number':38,'multiline':False]
['text':' Look for a known sequence terminating character.','line_number':48,'multiline':False]
['text':' Flush buffer with previous styles.','line_number':58,'multiline':False]
['text':'
				 * Certain ranges that are matched here do not contain real graphics rendition sequences. For
				 * the sake of having a simpler expression, they have been included anyway.
				 ','line_number':63,'multiline':True]
['text':' Remove final 'm' character.','line_number':69,'multiline':False]
['text':' Separate style codes.','line_number':70,'multiline':False]
['text':' Filter empty elems as '34;m' -> ['34', ''].','line_number':71,'multiline':False]
['text':' Convert to numbers.','line_number':72,'multiline':False]
['text':' Advanced color code - can't be combined with formatting codes like simple colors can','line_number':75,'multiline':False]
['text':' Ignores invalid colors and additional info beyond what is necessary','line_number':76,'multiline':False]
['text':' Unsupported sequence so simply hide it.','line_number':89,'multiline':False]
['text':' Flush remaining text buffer if not empty.','line_number':103,'multiline':False]
['text':'*
	 * Change the foreground or background color by clearing the current color
	 * and adding the new one.
	 * @param colorType If `'foreground'`, will change the foreground color, if
	 * 	`'background'`, will change the background color, and if `'underline'`
	 * will set the underline color.
	 * @param color Color to change to. If `undefined` or not provided,
	 * will clear current color without adding a new one.
	 ','line_number':110,'multiline':True]
['text':'*
	 * Swap foreground and background colors.  Used for color inversion.  Caller should check
	 * [] flag to make sure it is appropriate to turn ON or OFF (if it is already inverted don't call
	 ','line_number':133,'multiline':True]
['text':'*
	 * Calculate and set basic ANSI formatting. Supports ON/OFF of bold, italic, underline,
	 * double underline,  crossed-out/strikethrough, overline, dim, blink, rapid blink,
	 * reverse/invert video, hidden, superscript, subscript and alternate font codes,
	 * clearing/resetting of foreground, background and underline colors,
	 * setting normal foreground and background colors, and bright foreground and
	 * background colors. Not to be used for codes containing advanced colors.
	 * Will ignore invalid codes.
	 * @param styleCodes Array of ANSI basic styling numbers, which will be
	 * applied in order. New colors and backgrounds clear old ones; new formatting
	 * does not.
	 * @see {@link https://en.wikipedia.org/wiki/ANSI_escape_code#SGR }
	 ','line_number':143,'multiline':True]
['text':' reset (everything)','line_number':159,'multiline':False]
['text':' bold','line_number':165,'multiline':False]
['text':' dim','line_number':170,'multiline':False]
['text':' italic','line_number':175,'multiline':False]
['text':' underline','line_number':180,'multiline':False]
['text':' blink','line_number':185,'multiline':False]
['text':' rapid blink','line_number':190,'multiline':False]
['text':' invert foreground and background','line_number':195,'multiline':False]
['text':' hidden','line_number':202,'multiline':False]
['text':' strike-through/crossed-out','line_number':207,'multiline':False]
['text':' normal default font','line_number':212,'multiline':False]
['text':' font codes (and 20 is 'blackletter' font code)','line_number':216,'multiline':False]
['text':' double underline','line_number':221,'multiline':False]
['text':' normal intensity (bold off and dim off)','line_number':226,'multiline':False]
['text':' Neither italic or blackletter (font 10)','line_number':230,'multiline':False]
['text':' not underlined (Neither singly nor doubly underlined)','line_number':234,'multiline':False]
['text':' not blinking','line_number':238,'multiline':False]
['text':' not reversed/inverted','line_number':242,'multiline':False]
['text':' not hidden (reveal)','line_number':249,'multiline':False]
['text':' not crossed-out','line_number':253,'multiline':False]
['text':' overlined','line_number':257,'multiline':False]
['text':' not overlined','line_number':262,'multiline':False]
['text':' default foreground color','line_number':266,'multiline':False]
['text':' default background color','line_number':270,'multiline':False]
['text':' default underline color','line_number':274,'multiline':False]
['text':' superscript','line_number':278,'multiline':False]
['text':' subscript','line_number':283,'multiline':False]
['text':' neither superscript or subscript','line_number':288,'multiline':False]
['text':'*
	 * Calculate and set styling for complicated 24-bit ANSI color codes.
	 * @param styleCodes Full list of integer codes that make up the full ANSI
	 * sequence, including the two defining codes and the three RGB codes.
	 * @param colorType If `'foreground'`, will set foreground color, if
	 * `'background'`, will set background color, and if it is `'underline'`
	 * will set the underline color.
	 * @see {@link https://en.wikipedia.org/wiki/ANSI_escape_code#24-bit }
	 ','line_number':300,'multiline':True]
['text':'*
	 * Calculate and set styling for advanced 8-bit ANSI color codes.
	 * @param styleCodes Full list of integer codes that make up the ANSI
	 * sequence, including the two defining codes and the one color code.
	 * @param colorType If `'foreground'`, will set foreground color, if
	 * `'background'`, will set background color and if it is `'underline'`
	 * will set the underline color.
	 * @see {@link https://en.wikipedia.org/wiki/ANSI_escape_code#8-bit }
	 ','line_number':319,'multiline':True]
['text':' for underline colors we just decode the 0-15 color number to theme color, set and return','line_number':336,'multiline':False]
['text':' Need to map to one of the four basic color ranges (30-37, 90-97, 40-47, 100-107)','line_number':345,'multiline':False]
['text':' Bright colors','line_number':348,'multiline':False]
['text':'*
	 * Calculate and set styling for basic bright and dark ANSI color codes. Uses
	 * theme colors if available. Automatically distinguishes between foreground
	 * and background colors; does not support color-clearing codes 39 and 49.
	 * @param styleCode Integer color code on one of the following ranges:
	 * [30-37, 90-97, 40-47, 100-107]. If not on one of these ranges, will do
	 * nothing.
	 ','line_number':358,'multiline':True]
['text':' High-intensity (bright)','line_number':375,'multiline':False]
['text':' High-intensity (bright)','line_number':381,'multiline':False]
['text':'*
 * @param root The {@link HTMLElement} to append the content to.
 * @param stringContent The text content to be appended.
 * @param cssClasses The list of CSS styles to apply to the text content.
 * @param linkDetector The {@link LinkDetector} responsible for generating links from {@param stringContent}.
 * @param customTextColor If provided, will apply custom color with inline style.
 * @param customBackgroundColor If provided, will apply custom backgroundColor with inline style.
 * @param customUnderlineColor If provided, will apply custom textDecorationColor with inline style.
 ','line_number':395,'multiline':True]
['text':'*
 * Calculate the color from the color set defined in the ANSI 8-bit standard.
 * Standard and high intensity colors are not defined in the standard as specific
 * colors, so these and invalid colors return `undefined`.
 * @see {@link https://en.wikipedia.org/wiki/ANSI_escape_code#8-bit } for info.
 * @param colorNumber The number (ranging from 16 to 255) referring to the color
 * desired.
 ','line_number':436,'multiline':True]
['text':' Should be integer','line_number':446,'multiline':False]
['text':' Converts to one of 216 RGB colors','line_number':449,'multiline':False]
['text':' red, green, blue now range on [0, 5], need to map to [0,255]','line_number':458,'multiline':False]
['text':' Converts to a grayscale value','line_number':466,'multiline':False]
