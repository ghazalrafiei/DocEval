['text':'---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------','line_number':1,'multiline':True]
['text':' used in tests','line_number':49,'multiline':False]
['text':' If there is some session or thread that is stopped pass focus to it','line_number':124,'multiline':False]
['text':' copy the parent repl and get a new detached repl for this child, and','line_number':145,'multiline':False]
['text':' remove its parent, if it's still running','line_number':146,'multiline':False]
['text':' This tiny helper avoids converting the entire debug model to use service injection','line_number':210,'multiline':False]
['text':'---- events','line_number':255,'multiline':False]
['text':'---- DAP events','line_number':272,'multiline':False]
['text':'---- DAP requests','line_number':298,'multiline':False]
['text':'*
	 * create and initialize a new debug adapter for this session
	 ','line_number':300,'multiline':True]
['text':' if there was already a connection make sure to remove old listeners','line_number':306,'multiline':False]
['text':' #8858','line_number':323,'multiline':False]
['text':' #9537','line_number':324,'multiline':False]
['text':' #10574','line_number':325,'multiline':False]
['text':' #169114','line_number':326,'multiline':False]
['text':' #92253','line_number':327,'multiline':False]
['text':' #106745','line_number':328,'multiline':False]
['text':'#129684','line_number':329,'multiline':False]
['text':' #149910','line_number':330,'multiline':False]
['text':' #133643','line_number':331,'multiline':False]
['text':'*
	 * launch or attach to the debuggee
	 ','line_number':346,'multiline':True]
['text':' __sessionID only used for EH debugging (but we add it always for now...)','line_number':357,'multiline':False]
['text':'*
	 * terminate the current debug adapter session
	 ','line_number':367,'multiline':True]
['text':' Adapter went down but it did not send a 'terminated' event, simulate like the event has been sent','line_number':372,'multiline':False]
['text':'*
	 * end the current debug adapter session
	 ','line_number':392,'multiline':True]
['text':' Adapter went down but it did not send a 'terminated' event, simulate like the event has been sent','line_number':397,'multiline':False]
['text':' TODO terminateDebuggee should be undefined by default?','line_number':405,'multiline':False]
['text':'*
	 * restart debug adapter session
	 ','line_number':414,'multiline':True]
['text':' Normalize all drive letters going out from vscode to debug adapters so we are consistent with our resolving #43959','line_number':443,'multiline':False]
['text':' create a Source','line_number':762,'multiline':False]
['text':'---- threads','line_number':839,'multiline':False]
['text':' A new thread came in, initialize it.','line_number':892,'multiline':False]
['text':' Just the thread name got updated #18244','line_number':895,'multiline':False]
['text':' Remove all old threads which are no longer part of the update #75980','line_number':903,'multiline':False]
['text':' Set the availability of the threads' callstacks depending on','line_number':911,'multiline':False]
['text':' whether the thread is stopped or not','line_number':912,'multiline':False]
['text':' One thread is stopped, only update that thread.','line_number':922,'multiline':False]
['text':'---- private','line_number':949,'multiline':False]
['text':' Disconnect the debug session on configuration done error #10596','line_number':968,'multiline':False]
['text':' Send all breakpoints','line_number':977,'multiline':False]
['text':' If the focus for the current session is on a non-existent thread, clear the focus.','line_number':997,'multiline':False]
['text':' Call fetch call stack twice, the first only return the top stack frame.','line_number':1005,'multiline':False]
['text':' Second retrieves the rest of the call stack. For performance reasons #25605','line_number':1006,'multiline':False]
['text':' Second call is only done if there's few threads that stopped in this event.','line_number':1007,'multiline':False]
['text':' fetchFullStack= ','line_number':1008,'multiline':True]
['text':' Only take focus if nothing is focused, or if the focus is already on the current session','line_number':1013,'multiline':False]
['text':' Application may not be active ','line_number':1026,'multiline':True]
['text':' The top stack frame can be deemphesized so try to focus again #68616','line_number':1047,'multiline':False]
['text':' debounce to reduce threadsRequest frequency and improve performance','line_number':1059,'multiline':False]
['text':' De-focus the thread in case it was focused','line_number':1075,'multiline':False]
['text':' We need to pass focus to other sessions / threads with a timeout in case a quick stop event occurs #130321','line_number':1106,'multiline':False]
['text':' When a variables event is received, execute immediately to obtain the variables value #126967','line_number':1116,'multiline':False]
['text':' we should put appendToRepl into queue to make sure the logs to be displayed in correct order','line_number':1125,'multiline':False]
['text':' see https://github.com/microsoft/vscode/issues/126967#issuecomment-874954269','line_number':1126,'multiline':False]
['text':' For single logged variables, try to use the output if we can so','line_number':1129,'multiline':False]
['text':' present a better (i.e. ANSI-aware) representation of the output','line_number':1130,'multiline':False]
['text':' Since we can not display multiple trees in a row, we are displaying these variables one after the other (ignoring their names)','line_number':1137,'multiline':False]
['text':' only log telemetry events from debug adapter if the debug extension provided the telemetry key','line_number':1150,'multiline':False]
['text':' and the user opted in telemetry','line_number':1151,'multiline':False]
['text':' __GDPR__TODO__ We're sending events in the name of the debug extension and we can not ensure that those are declared correctly.','line_number':1154,'multiline':False]
['text':' Make sure to append output in the correct order by properly waiting on preivous promises #33822','line_number':1166,'multiline':False]
['text':' Only return if the end event does not have additional output in it','line_number':1181,'multiline':False]
['text':' If invalidated event only requires to update variables or watch, do that, otherwise refatch threads https://github.com/microsoft/vscode/issues/106745','line_number':1272,'multiline':False]
['text':' Disconnects and clears state. Session can be initialized again for a new connection.','line_number':1294,'multiline':False]
['text':' Send out disconnect and immediatly dispose (do not wait for response) #127418','line_number':1298,'multiline':False]
['text':'---- sources','line_number':1317,'multiline':False]
['text':' merge attributes of new into existing','line_number':1329,'multiline':False]
['text':' Always take the latest presentation hint from adapter #42139','line_number':1332,'multiline':False]
['text':' REPL','line_number':1366,'multiline':False]
['text':' Evaluate all watch expressions and fetch variables again since repl evaluation might have changed some.','line_number':1382,'multiline':False]
['text':'*
 * Keeps track of events for threads, and cancels any previous operations for
 * a thread when the thread goes into a new state. Currently, the operations a thread has are:
 *
 * - started
 * - stopped
 * - continue
 * - exited
 *
 * In each case, the new state preempts the old state, so we don't need to
 * queue work, just cancel old work. It's up to the caller to make sure that
 * no UI effects happen at the point when the `token` is cancelled.
 ','line_number':1394,'multiline':True]
['text':'*
	 * An array of set of thread IDs. When a 'stopped' event is encountered, the
	 * editor refreshes its thread IDs. In the meantime, the thread may change
	 * state it again. So the editor puts a Set into this array when it starts
	 * the refresh, and checks it after the refresh is finished, to see if
	 * any of the threads it looked up should now be invalidated.
	 ','line_number':1408,'multiline':True]
['text':'*
	 * Cancellation tokens for currently-running operations on threads.
	 ','line_number':1417,'multiline':True]
['text':'*
	 * Runs the operation.
	 * If thread is undefined it affects all threads.
	 ','line_number':1422,'multiline':True]
['text':' Now that we got our threads,','line_number':1431,'multiline':False]
['text':' 1. Remove our pending set, and','line_number':1432,'multiline':False]
['text':' 2. Cancel any slower callers who might also have found this thread','line_number':1433,'multiline':False]
['text':'*
	 * Cancels all ongoing state operations on the given threads.
	 * If threads is undefined it cancel all threads.
	 ','line_number':1461,'multiline':True]
