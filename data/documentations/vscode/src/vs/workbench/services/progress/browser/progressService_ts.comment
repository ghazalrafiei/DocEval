['text':'---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------','line_number':1,'multiline':True]
['text':' Window progress with command get's shown in the status bar','line_number':76,'multiline':False]
['text':' Window progress without command can be shown as silent notification','line_number':79,'multiline':False]
['text':' which will first appear in the status bar and can then be brought to','line_number':80,'multiline':False]
['text':' the front when clicking.','line_number':81,'multiline':False]
['text':' default for ProgressLocation.Window ','line_number':82,'multiline':True]
['text':' show progress for at least 150ms','line_number':110,'multiline':False]
['text':' cancel delay if promise finishes below 150ms','line_number':121,'multiline':False]
['text':' We still have progress to show','line_number':127,'multiline':False]
['text':' <title>: <message>','line_number':139,'multiline':False]
['text':' <title>','line_number':144,'multiline':False]
['text':' <message>','line_number':149,'multiline':False]
['text':' no title, no message -> no progress. try with next on stack','line_number':154,'multiline':False]
['text':' Progress is done so we remove the status entry','line_number':175,'multiline':False]
['text':' Create a promise that we can resolve as needed','line_number':232,'multiline':False]
['text':' when the outside calls dispose on us','line_number':233,'multiline':False]
['text':' convert markdown links => string','line_number':238,'multiline':False]
['text':' convert markdown links => string','line_number':246,'multiline':False]
['text':' Apply any progress that was made already','line_number':251,'multiline':False]
['text':' Continue to report progress as it happens','line_number':256,'multiline':False]
['text':' When the progress model gets disposed, we are done as well','line_number':260,'multiline':False]
['text':' Dispose means completing our promise','line_number':266,'multiline':False]
['text':' status entries support codicons, but notifications do not (https://github.com/microsoft/vscode/issues/145722)','line_number':310,'multiline':False]
['text':' Switch to window based progress once the notification','line_number':317,'multiline':False]
['text':' changes visibility to hidden and is still ongoing.','line_number':318,'multiline':False]
['text':' Remove that window based progress once the notification','line_number':319,'multiline':False]
['text':' shows again.','line_number':320,'multiline':False]
['text':' Clear any previous running window progress','line_number':323,'multiline':False]
['text':' Create new window progress if notification got hidden','line_number':326,'multiline':False]
['text':' Clear upon dispose','line_number':336,'multiline':False]
['text':' always percentage based','line_number':344,'multiline':False]
['text':' hoisted to make sure a delayed notification shows the most recent message','line_number':353,'multiline':False]
['text':' full message (inital or update)','line_number':357,'multiline':False]
['text':' always prefix with overall title if we have it (https://github.com/microsoft/vscode/issues/50932)','line_number':359,'multiline':False]
['text':' create notification now or after a delay','line_number':366,'multiline':False]
['text':' Show initially','line_number':387,'multiline':False]
['text':' Clean up eventually','line_number':392,'multiline':False]
['text':' with a delay we only wait for the finish of the promise','line_number':396,'multiline':False]
['text':' without a delay we show the notification for at least 800ms','line_number':401,'multiline':False]
['text':' to reduce the chance of the notification flashing up and hiding','line_number':402,'multiline':False]
['text':' show in viewlet','line_number':417,'multiline':False]
['text':' show on activity bar','line_number':421,'multiline':False]
['text':' show in viewlet','line_number':431,'multiline':False]
['text':' show on activity bar','line_number':445,'multiline':False]
['text':' should at least show for Nms','line_number':462,'multiline':False]
['text':' shown long enough','line_number':465,'multiline':False]
['text':' Figure out whether discrete progress applies','line_number':482,'multiline':False]
['text':' by figuring out the "total" progress to show','line_number':483,'multiline':False]
['text':' and the increment if any.','line_number':484,'multiline':False]
['text':' always percentage based','line_number':491,'multiline':False]
['text':' Discrete','line_number':496,'multiline':False]
['text':' ignore ','line_number':500,'multiline':True]
['text':' Infinite','line_number':508,'multiline':False]
['text':' In order to support the `delay` option, we use a scheduler','line_number':584,'multiline':False]
['text':' that will guard each access to the dialog behind a delay','line_number':585,'multiline':False]
['text':' that is either the original delay for one invocation and','line_number':586,'multiline':False]
['text':' otherwise runs without delay.','line_number':587,'multiline':False]
['text':' since we have run once, we reset the delay','line_number':591,'multiline':False]
['text':' Make sure to only run one dialog update and not multiple','line_number':603,'multiline':False]
