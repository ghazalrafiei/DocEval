['text':'---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------','line_number':1,'multiline':True]
['text':'*
	 * Make the current active group consume the entire
	 * editor area.
	 ','line_number':48,'multiline':True]
['text':'*
	 * Make the current active group consume the maximum
	 * amount of space possible.
	 ','line_number':54,'multiline':True]
['text':'*
	 * Size all groups evenly.
	 ','line_number':60,'multiline':True]
['text':'*
	 * Only applies when there are multiple groups
	 * arranged next to each other in a row or column.
	 * If provided, their sum must be 1 to be applied
	 * per row or column.
	 ','line_number':68,'multiline':True]
['text':'*
	 * Editor groups  will be laid out orthogonal to the
	 * parent orientation.
	 ','line_number':76,'multiline':True]
['text':'*
	 * The initial orientation of the editor groups at the root.
	 ','line_number':85,'multiline':True]
['text':'*
	 * The editor groups at the root of the layout.
	 ','line_number':90,'multiline':True]
['text':'*
	 * Skips asking the user for confirmation and doesn't
	 * save the document. Only use this if you really need to!
	 ','line_number':126,'multiline':True]
['text':'*
	 * Groups sorted by creation order (oldest one first)
	 ','line_number':141,'multiline':True]
['text':'*
	 * Groups sorted by most recent activity (most recent active first)
	 ','line_number':146,'multiline':True]
['text':'*
	 * Groups sorted by grid widget order
	 ','line_number':151,'multiline':True]
['text':'*
	 * Open an editor in this group.
	 *
	 * @returns a promise that resolves around an IEditor instance unless
	 * the call failed, or the editor was not opened as active editor.
	 ','line_number':159,'multiline':True]
['text':'*
	 * A helper to figure out if the drop target contains the provided group.
	 ','line_number':170,'multiline':True]
['text':'*
 * The basic primitive to work with editor groups. This interface is both implemented
 * by editor part component as well as the editor groups service that operates across
 * all opened editor parts.
 ','line_number':176,'multiline':True]
['text':'*
	 * An event for when the active editor group changes. The active editor
	 * group is the default location for new editors to open.
	 ','line_number':183,'multiline':True]
['text':'*
	 * An event for when a new group was added.
	 ','line_number':189,'multiline':True]
['text':'*
	 * An event for when a group was removed.
	 ','line_number':194,'multiline':True]
['text':'*
	 * An event for when a group was moved.
	 ','line_number':199,'multiline':True]
['text':'*
	 * An event for when a group gets activated.
	 ','line_number':204,'multiline':True]
['text':'*
	 * An event for when the index of a group changes.
	 ','line_number':209,'multiline':True]
['text':'*
	 * An event for when the locked state of a group changes.
	 ','line_number':214,'multiline':True]
['text':'*
	 * An event for when the maximized state of a group changes.
	 ','line_number':219,'multiline':True]
['text':'*
	 * An active group is the default location for new editors to open.
	 ','line_number':224,'multiline':True]
['text':'*
	 * A side group allows a subset of methods on a group that is either
	 * created to the side or picked if already there.
	 ','line_number':229,'multiline':True]
['text':'*
	 * All groups that are currently visible in the container in the order
	 * of their creation (oldest first).
	 ','line_number':235,'multiline':True]
['text':'*
	 * The number of editor groups that are currently opened in the
	 * container.
	 ','line_number':241,'multiline':True]
['text':'*
	 * The current layout orientation of the root group.
	 ','line_number':247,'multiline':True]
['text':'*
	 * Get all groups that are currently visible in the container.
	 *
	 * @param order the order of the editors to use
	 ','line_number':252,'multiline':True]
['text':'*
	 * Allows to convert a group identifier to a group.
	 ','line_number':259,'multiline':True]
['text':'*
	 * Set a group as active. An active group is the default location for new editors to open.
	 ','line_number':264,'multiline':True]
['text':'*
	 * Returns the size of a group.
	 ','line_number':269,'multiline':True]
['text':'*
	 * Sets the size of a group.
	 ','line_number':274,'multiline':True]
['text':'*
	 * Arrange all groups in the container according to the provided arrangement.
	 ','line_number':279,'multiline':True]
['text':'*
	 * Toggles the target goup size to maximize/unmaximize.
	 ','line_number':284,'multiline':True]
['text':'*
	 * Toggles the target goup size to expand/distribute even.
	 ','line_number':289,'multiline':True]
['text':'*
	 * Applies the provided layout by either moving existing groups or creating new groups.
	 ','line_number':294,'multiline':True]
['text':'*
	 * Returns an editor layout of the container.
	 ','line_number':299,'multiline':True]
['text':'*
	 * Sets the orientation of the root group to be either vertical or horizontal.
	 ','line_number':304,'multiline':True]
['text':'*
	 * Find a group in a specific scope:
	 * * `GroupLocation.FIRST`: the first group
	 * * `GroupLocation.LAST`: the last group
	 * * `GroupLocation.NEXT`: the next group from either the active one or `source`
	 * * `GroupLocation.PREVIOUS`: the previous group from either the active one or `source`
	 * * `GroupDirection.UP`: the next group above the active one or `source`
	 * * `GroupDirection.DOWN`: the next group below the active one or `source`
	 * * `GroupDirection.LEFT`: the next group to the left of the active one or `source`
	 * * `GroupDirection.RIGHT`: the next group to the right of the active one or `source`
	 *
	 * @param scope the scope of the group to search in
	 * @param source optional source to search from
	 * @param wrap optionally wrap around if reaching the edge of groups
	 ','line_number':309,'multiline':True]
['text':'*
	 * Add a new group to the container. A new group is added by splitting a provided one in
	 * one of the four directions.
	 *
	 * @param location the group from which to split to add a new group
	 * @param direction the direction of where to split to
	 ','line_number':326,'multiline':True]
['text':'*
	 * Remove a group from the container.
	 ','line_number':335,'multiline':True]
['text':'*
	 * Move a group to a new group in the container.
	 *
	 * @param group the group to move
	 * @param location the group from which to split to add the moved group
	 * @param direction the direction of where to split to
	 ','line_number':340,'multiline':True]
['text':'*
	 * Merge the editors of a group into a target group. By default, all editors will
	 * move and the source group will close. This behaviour can be configured via the
	 * `IMergeGroupOptions` options.
	 *
	 * @param group the group to merge
	 * @param target the target group to merge into
	 * @param options controls how the merge should be performed. by default all editors
	 * will be moved over to the target and the source group will close. Configure to
	 * `MOVE_EDITORS_KEEP_GROUP` to prevent the source group from closing. Set to
	 * `COPY_EDITORS` to copy the editors into the target instead of moding them.
	 ','line_number':349,'multiline':True]
['text':'*
	 * Merge all editor groups into the target one.
	 ','line_number':363,'multiline':True]
['text':'*
	 * Copy a group to a new group in the container.
	 *
	 * @param group the group to copy
	 * @param location the group from which to split to add the copied group
	 * @param direction the direction of where to split to
	 ','line_number':368,'multiline':True]
['text':'*
	 * Access the options of the editor part.
	 ','line_number':377,'multiline':True]
['text':'*
	 * An event that notifies when editor part options change.
	 ','line_number':382,'multiline':True]
['text':'*
	 * Allows to register a drag and drop target for editors
	 * on the provided `container`.
	 ','line_number':387,'multiline':True]
['text':' HTMLElement ','line_number':391,'multiline':True]
['text':'*
 * An editor part is a viewer of editor groups. There can be multiple editor
 * parts opened in multiple windows.
 ','line_number':394,'multiline':True]
['text':'*
	 * An event for when the editor part is layed out.
	 ','line_number':400,'multiline':True]
['text':'*
	 * An event for when the editor part is scrolled.
	 ','line_number':405,'multiline':True]
['text':'*
	 * The size of the editor part.
	 ','line_number':410,'multiline':True]
['text':'*
	 * A property that indicates when groups have been created
	 * and are ready to be used in the editor part.
	 ','line_number':415,'multiline':True]
['text':'*
	 * A promise that resolves when groups have been created
	 * and are ready to be used in the editor part.
	 *
	 * Await this promise to safely work on the editor groups model
	 * (for example, install editor group listeners).
	 *
	 * Use the `whenRestored` property to await visible editors
	 * having fully resolved.
	 ','line_number':421,'multiline':True]
['text':'*
	 * A promise that resolves when groups have been restored in
	 * the editor part.
	 *
	 * For groups with active editor, the promise will resolve
	 * when the visible editor has finished to resolve.
	 *
	 * Use the `whenReady` property to not await editors to
	 * resolve.
	 ','line_number':433,'multiline':True]
['text':'*
	 * Find out if the editor part has UI state to restore
	 * from a previous session.
	 ','line_number':445,'multiline':True]
['text':'*
	 * Enable or disable centered editor layout.
	 ','line_number':451,'multiline':True]
['text':'*
	 * Find out if the editor layout is currently centered.
	 ','line_number':456,'multiline':True]
['text':'*
	 * Enforce editor part options temporarily.
	 ','line_number':461,'multiline':True]
['text':'*
	 * The identifier of the window the auxiliary editor part is contained in.
	 ','line_number':469,'multiline':True]
['text':'*
	 * Close this auxiliary editor part after moving all
	 * editors of all groups back to the main editor part.
	 ','line_number':474,'multiline':True]
['text':'*
 * The main service to interact with editor groups across all opened editor parts.
 ','line_number':487,'multiline':True]
['text':'*
	 * An event for when a new auxiliary editor part is created.
	 ','line_number':494,'multiline':True]
['text':'*
	 * Provides access to the currently active editor part.
	 ','line_number':499,'multiline':True]
['text':'*
	 * Provides access to the main window editor part.
	 ','line_number':504,'multiline':True]
['text':'*
	 * Provides access to all editor parts.
	 ','line_number':509,'multiline':True]
['text':'*
	 * Get the editor part that contains the group with the provided identifier.
	 ','line_number':514,'multiline':True]
['text':'*
	 * Get the editor part that is rooted in the provided container.
	 ','line_number':519,'multiline':True]
['text':' HTMLElement ','line_number':522,'multiline':True]
['text':'*
	 * Opens a new window with a full editor part instantiated
	 * in there at the optional position and size on screen.
	 ','line_number':524,'multiline':True]
['text':'*
	 * An event which fires whenever the underlying group model changes.
	 ','line_number':544,'multiline':True]
['text':'*
	 * An event that is fired when the group gets disposed.
	 ','line_number':549,'multiline':True]
['text':'*
	 * An event that is fired when the active editor in the group changed.
	 ','line_number':554,'multiline':True]
['text':'*
	 * An event that is fired when an editor is about to close.
	 ','line_number':559,'multiline':True]
['text':'*
	 * An event that is fired when an editor is closed.
	 ','line_number':564,'multiline':True]
['text':'*
	 * An event that is fired when an editor is about to move to
	 * a different group.
	 ','line_number':569,'multiline':True]
['text':'*
	 * An event that is fired when an editor is about to be opened
	 * in the group.
	 ','line_number':575,'multiline':True]
['text':'*
	 * A unique identifier of this group that remains identical even if the
	 * group is moved to different locations.
	 ','line_number':581,'multiline':True]
['text':'*
	 * A number that indicates the position of this group in the visual
	 * order of groups from left to right and top to bottom. The lowest
	 * index will likely be top-left while the largest index in most
	 * cases should be bottom-right, but that depends on the grid.
	 ','line_number':587,'multiline':True]
['text':'*
	 * A human readable label for the group. This label can change depending
	 * on the layout of all editor groups. Clients should listen on the
	 * `onDidGroupModelChange` event to react to that.
	 ','line_number':595,'multiline':True]
['text':'*
	 * A human readable label for the group to be used by screen readers.
	 ','line_number':602,'multiline':True]
['text':'*
	 * The active editor pane is the currently visible editor pane of the group.
	 ','line_number':607,'multiline':True]
['text':'*
	 * The active editor is the currently visible editor of the group
	 * within the current active editor pane.
	 ','line_number':612,'multiline':True]
['text':'*
	 * The editor in the group that is in preview mode if any. There can
	 * only ever be one editor in preview mode.
	 ','line_number':618,'multiline':True]
['text':'*
	 * The number of opened editors in this group.
	 ','line_number':624,'multiline':True]
['text':'*
	 * Whether the group has editors or not.
	 ','line_number':629,'multiline':True]
['text':'*
	 * Whether this editor group is locked or not. Locked editor groups
	 * will only be considered for editors to open in when the group is
	 * explicitly provided for the editor.
	 *
	 * Note: editor group locking only applies when more than one group
	 * is opened.
	 ','line_number':634,'multiline':True]
['text':'*
	 * The number of sticky editors in this group.
	 ','line_number':644,'multiline':True]
['text':'*
	 * All opened editors in the group in sequential order of their appearance.
	 ','line_number':649,'multiline':True]
['text':'*
	 * The scoped context key service for this group.
	 ','line_number':654,'multiline':True]
['text':'*
	 * Get all editors that are currently opened in the group.
	 *
	 * @param order the order of the editors to use
	 * @param options options to select only specific editors as instructed
	 ','line_number':659,'multiline':True]
['text':'*
	 * Finds all editors for the given resource that are currently
	 * opened in the group. This method will return an entry for
	 * each editor that reports a `resource` that matches the
	 * provided one.
	 *
	 * @param resource the resource of the editor to find
	 * @param options whether to support side by side editors or not
	 ','line_number':667,'multiline':True]
['text':'*
	 * Returns the editor at a specific index of the group.
	 ','line_number':678,'multiline':True]
['text':'*
	 * Returns the index of the editor in the group or -1 if not opened.
	 ','line_number':683,'multiline':True]
['text':'*
	 * Whether the editor is the first in the group.
	 ','line_number':688,'multiline':True]
['text':'*
	 * Whether the editor is the last in the group.
	 ','line_number':693,'multiline':True]
['text':'*
	 * Open an editor in this group.
	 *
	 * @returns a promise that resolves around an IEditor instance unless
	 * the call failed, or the editor was not opened as active editor.
	 ','line_number':698,'multiline':True]
['text':'*
	 * Opens editors in this group.
	 *
	 * @returns a promise that resolves around an IEditor instance unless
	 * the call failed, or the editor was not opened as active editor. Since
	 * a group can only ever have one active editor, even if many editors are
	 * opened, the result will only be one editor.
	 ','line_number':706,'multiline':True]
['text':'*
	 * Find out if the provided editor is pinned in the group.
	 ','line_number':716,'multiline':True]
['text':'*
	 * Find out if the provided editor or index of editor is sticky in the group.
	 ','line_number':721,'multiline':True]
['text':'*
	 * Find out if the provided editor is active in the group.
	 ','line_number':726,'multiline':True]
['text':'*
	 * Find out if a certain editor is included in the group.
	 *
	 * @param candidate the editor to find
	 * @param options fine tune how to match editors
	 ','line_number':731,'multiline':True]
['text':'*
	 * Move an editor from this group either within this group or to another group.
	 ','line_number':739,'multiline':True]
['text':'*
	 * Move editors from this group either within this group or to another group.
	 ','line_number':744,'multiline':True]
['text':'*
	 * Copy an editor from this group to another group.
	 *
	 * Note: It is currently not supported to show the same editor more than once in the same group.
	 ','line_number':749,'multiline':True]
['text':'*
	 * Copy editors from this group to another group.
	 *
	 * Note: It is currently not supported to show the same editor more than once in the same group.
	 ','line_number':756,'multiline':True]
['text':'*
	 * Close an editor from the group. This may trigger a confirmation dialog if
	 * the editor is dirty and thus returns a promise as value.
	 *
	 * @param editor the editor to close, or the currently active editor
	 * if unspecified.
	 *
	 * @returns a promise when the editor is closed or not. If `true`, the editor
	 * is closed and if `false` there was a veto closing the editor, e.g. when it
	 * is dirty.
	 ','line_number':763,'multiline':True]
['text':'*
	 * Closes specific editors in this group. This may trigger a confirmation dialog if
	 * there are dirty editors and thus returns a promise as value.
	 *
	 * @returns a promise whether the editors were closed or not. If `true`, the editors
	 * were closed and if `false` there was a veto closing the editors, e.g. when one
	 * is dirty.
	 ','line_number':776,'multiline':True]
['text':'*
	 * Closes all editors from the group. This may trigger a confirmation dialog if
	 * there are dirty editors and thus returns a promise as value.
	 *
	 * @returns a promise when all editors are closed.
	 ','line_number':786,'multiline':True]
['text':'*
	 * Replaces editors in this group with the provided replacement.
	 *
	 * @param editors the editors to replace
	 *
	 * @returns a promise that is resolved when the replaced active
	 * editor (if any) has finished loading.
	 ','line_number':794,'multiline':True]
['text':'*
	 * Set an editor to be pinned. A pinned editor is not replaced
	 * when another editor opens at the same location.
	 *
	 * @param editor the editor to pin, or the currently active editor
	 * if unspecified.
	 ','line_number':804,'multiline':True]
['text':'*
	 * Set an editor to be sticky. A sticky editor is showing in the beginning
	 * of the tab stripe and will not be impacted by close operations.
	 *
	 * @param editor the editor to make sticky, or the currently active editor
	 * if unspecified.
	 ','line_number':813,'multiline':True]
['text':'*
	 * Set an editor to be non-sticky and thus moves back to a location after
	 * sticky editors and can be closed normally.
	 *
	 * @param editor the editor to make unsticky, or the currently active editor
	 * if unspecified.
	 ','line_number':822,'multiline':True]
['text':'*
	 * Whether this editor group should be locked or not.
	 *
	 * See {@linkcode IEditorGroup.isLocked `isLocked`}
	 ','line_number':831,'multiline':True]
['text':'*
	 * Move keyboard focus into the group.
	 ','line_number':838,'multiline':True]
['text':'*
	 * Create the editor actions for the current active editor.
	 ','line_number':843,'multiline':True]
['text':'#region Editor Group Helpers','line_number':855,'multiline':False]
['text':'#endregion','line_number':867,'multiline':False]
