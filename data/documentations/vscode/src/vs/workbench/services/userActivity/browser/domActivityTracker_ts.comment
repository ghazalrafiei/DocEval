['text':'---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------','line_number':1,'multiline':True]
['text':'*
 * This uses a time interval and checks whether there's any activity in that
 * interval. A naive approach might be to use a debounce whenever an event
 * happens, but this has some scheduling overhead. Instead, the tracker counts
 * how many intervals have elapsed since any activity happened.
 *
 * If there's more than `MIN_INTERVALS_WITHOUT_ACTIVITY`, then say the user is
 * inactive. Therefore the maximum time before an inactive user is detected
 * is `CHECK_INTERVAL * (MIN_INTERVALS_WITHOUT_ACTIVITY + 1)`.
 ','line_number':12,'multiline':True]
['text':'* See {@link CHECK_INTERVAL} ','line_number':24,'multiline':True]
['text':'* does not preventDefault() ','line_number':28,'multiline':True]
['text':'* should dispatch first (before anyone stopPropagation()) ','line_number':29,'multiline':True]
['text':' if was inactive, they've now returned','line_number':49,'multiline':False]
