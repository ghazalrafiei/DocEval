['text':'---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------','line_number':1,'multiline':True]
['text':' Looks like ScanCode.NumpadComma doesn't always map to KeyCode.NUMPAD_SEPARATOR','line_number':208,'multiline':False]
['text':' e.g. on POR - PTB','line_number':209,'multiline':False]
['text':' This key does not produce strings','line_number':237,'multiline':False]
['text':' This key produces a letter representable with multiple UTF-16 code units.','line_number':242,'multiline':False]
['text':' Handle keyboard layouts where latin characters are not produced e.g. Cyrillic','line_number':269,'multiline':False]
['text':' Since this keyboard layout produces no latin letters at all, most of the UI will use the','line_number':303,'multiline':False]
['text':' US kb layout equivalent for UI labels, so also try to render other keys with the US labels','line_number':304,'multiline':False]
['text':' for consistency...','line_number':305,'multiline':False]
['text':' const existingLabel = this._keyCodeToLabel[keyCode];','line_number':307,'multiline':False]
['text':' const existingCharCode = (existingLabel ? existingLabel.charCodeAt(0) : CharCode.Null);','line_number':308,'multiline':False]
['text':' if (existingCharCode < 32 || existingCharCode > 126) {','line_number':309,'multiline':False]
['text':' }','line_number':311,'multiline':False]
