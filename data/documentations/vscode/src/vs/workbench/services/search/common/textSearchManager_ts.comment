['text':'---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------','line_number':1,'multiline':True]
['text':' For each root folder','line_number':62,'multiline':False]
['text':' #104400 context lines shoudn't count towards result count','line_number':96,'multiline':False]
['text':' This method is only async when the exclude contains sibling clauses','line_number':132,'multiline':False]
['text':' Collects TextSearchResults into IInternalFileMatches and collates using BatchedCollector.','line_number':226,'multiline':False]
['text':' This is efficient for ripgrep which sends results back one file at a time. It wouldn't be efficient for other search','line_number':227,'multiline':False]
['text':' providers that send results in random order. We could do this step afterwards instead.','line_number':228,'multiline':False]
['text':' Warning: result from RipgrepTextSearchEH has fake Range. Don't depend on any other props beyond these...','line_number':263,'multiline':False]
['text':'*
 * Collects items that have a size - before the cumulative size of collected items reaches START_BATCH_AFTER_COUNT, the callback is called for every
 * set of items collected.
 * But after that point, the callback is called with batches of maxBatchSize.
 * If the batch isn't filled within some time, the callback is also called.
 ','line_number':294,'multiline':True]
['text':' After START_BATCH_AFTER_COUNT items have been collected, stop flushing on timeout','line_number':303,'multiline':False]
['text':' Flush because we aren't batching yet','line_number':344,'multiline':False]
['text':' Flush because the batch is full','line_number':347,'multiline':False]
['text':' No timeout running, start a timeout to flush','line_number':350,'multiline':False]
