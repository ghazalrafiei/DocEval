['text':'---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------','line_number':1,'multiline':True]
['text':' Add excludes for other root folders','line_number':87,'multiline':False]
['text':' Exclude nested root folders','line_number':93,'multiline':False]
['text':' Support that the file pattern is a full path to a file that exists','line_number':111,'multiline':False]
['text':' For each extra file','line_number':116,'multiline':False]
['text':' excluded','line_number':120,'multiline':False]
['text':' File: Check for match on file pattern and include pattern','line_number':123,'multiline':False]
['text':' no workspace relative path ','line_number':124,'multiline':True]
['text':' For each root folder','line_number':129,'multiline':False]
['text':' Mac: uses NFD unicode form on disk, but we want NFC','line_number':224,'multiline':False]
['text':' TODO: Optimize siblings clauses with ripgrep here.','line_number':260,'multiline':False]
['text':'*
	 * Public for testing.
	 ','line_number':270,'multiline':True]
['text':'*
	 * Public for testing.
	 ','line_number':295,'multiline':True]
['text':' Should be non-null, but #38195','line_number':325,'multiline':False]
['text':' Should be non-null, but #38195','line_number':334,'multiline':False]
['text':' ripgrep returns code=1 when no results are found','line_number':345,'multiline':False]
['text':' Support relative paths to files from a root resource (ignores excludes)','line_number':389,'multiline':False]
['text':' Check exclude pattern','line_number':427,'multiline':False]
['text':' If the user searches for the exact file name, we adjust the glob matching','line_number':428,'multiline':False]
['text':' to ignore filtering by siblings because the user seems to know what they','line_number':429,'multiline':False]
['text':' are searching for and we want to include the result in that case anyway','line_number':430,'multiline':False]
['text':' ignore file if its path matches with the file pattern because that is already matched above','line_number':441,'multiline':False]
['text':' Execute tasks on each file in parallel to optimize throughput','line_number':468,'multiline':False]
['text':' Check canceled','line_number':472,'multiline':False]
['text':' Check exclude pattern','line_number':477,'multiline':False]
['text':' If the user searches for the exact file name, we adjust the glob matching','line_number':478,'multiline':False]
['text':' to ignore filtering by siblings because the user seems to know what they','line_number':479,'multiline':False]
['text':' are searching for and we want to include the result in that case anyway','line_number':480,'multiline':False]
['text':' Use lstat to detect links','line_number':486,'multiline':False]
['text':' If the path is a link, we must instead use fs.stat() to find out if the','line_number':493,'multiline':False]
['text':' link is a directory or not because lstat will always return the stat of','line_number':494,'multiline':False]
['text':' the link which is always a file.','line_number':495,'multiline':False]
['text':' Directory: Follow directories','line_number':501,'multiline':False]
['text':' to really prevent loops with links we need to resolve the real path of them','line_number':505,'multiline':False]
['text':' escape when there are cycles (can happen with symlinks)','line_number':513,'multiline':False]
['text':' remember as walked','line_number':516,'multiline':False]
['text':' Continue walking','line_number':518,'multiline':False]
['text':' File: Check for match on file pattern and include pattern','line_number':531,'multiline':False]
['text':' ignore file if its path matches with the file pattern because checkFilePatternRelativeMatch() takes care of those','line_number':535,'multiline':False]
['text':' ignore file if max file size is hit','line_number':539,'multiline':False]
['text':' Unwind','line_number':549,'multiline':False]
['text':' find any error by removing null values first','line_number':554,'multiline':False]
['text':' Check for search pattern','line_number':574,'multiline':False]
['text':' support the all-matching wildcard','line_number':577,'multiline':False]
['text':' No patterns means we match all','line_number':585,'multiline':False]
['text':' stat the target the link points to','line_number':591,'multiline':False]
['text':' not a link, so the stat is already ok for us','line_number':594,'multiline':False]
['text':'*
	 * If we're searching for files in multiple workspace folders, then better prepend the
	 * name of the workspace folder to the path of the file. This way we'll be able to
	 * better filter files that are all on the top of a workspace folder and have all the
	 * same name. A typical example are `package.json` or `README.md` files.
	 ','line_number':611,'multiline':True]
['text':'*
 * This class exists to provide one interface on top of two ParsedExpressions, one for absolute expressions and one for relative expressions.
 * The absolute and relative expressions don't "have" to be kept separate, but this keeps us from having to path.join every single
 * file searched, it's only used for a text search with a searchPath
 ','line_number':652,'multiline':True]
['text':'*
	 * Split the IExpression into its absolute and relative components, and glob.parse them separately.
	 ','line_number':665,'multiline':True]
['text':' Uppercase first letter','line_number':733,'multiline':False]
['text':' I won't localize this because none of the Ripgrep error messages are localized','line_number':738,'multiline':False]
['text':' Other unsupported chars','line_number':743,'multiline':False]
