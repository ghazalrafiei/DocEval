['text':'---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------','line_number':1,'multiline':True]
['text':' State','line_number':108,'multiline':False]
['text':' Resources, in order they get acquired/created when .start() is called:','line_number':111,'multiline':False]
['text':' .terminate() was called','line_number':173,'multiline':False]
['text':' Unset `VSCODE_CODE_CACHE_PATH` when developing extensions because it might','line_number':205,'multiline':False]
['text':' be that dependencies, that otherwise would be cached, get modified.','line_number':206,'multiline':False]
['text':' We only detach the extension host on windows. Linux and Mac orphan by default','line_number':215,'multiline':False]
['text':' and detach under Linux and Mac create another process group.','line_number':216,'multiline':False]
['text':' We detach because we have noticed that when the renderer exits, its child processes','line_number':217,'multiline':False]
['text':' (i.e. extension host) are taken down in a brutal fashion by the OS','line_number':218,'multiline':False]
['text':' Refs https://github.com/microsoft/vscode/issues/189805','line_number':241,'multiline':False]
['text':' Catch all output coming from the extension host process','line_number':244,'multiline':False]
['text':' Debounce all output, so we can render it in the Chrome console as a group','line_number':253,'multiline':False]
['text':' Print out extension host output','line_number':260,'multiline':False]
['text':'devtools/bundled/inspector.html?experiments=true&v8only=true&ws=${inspectorUrlMatch[1]}`, 'color: blue', 'color:');','line_number':265,'multiline':False]
['text':' Lifecycle','line_number':280,'multiline':False]
['text':' Notify debugger that we are ready to attach to the process if we run a development extension','line_number':284,'multiline':False]
['text':' Help in case we fail to start it','line_number':293,'multiline':False]
['text':' Initialize extension host process with hand shakes','line_number':316,'multiline':False]
['text':'*
	 * Find a free port if extension host debugging is enabled.
	 ','line_number':323,'multiline':True]
['text':' try 10 ports ','line_number':333,'multiline':True]
['text':' try up to 5 seconds ','line_number':333,'multiline':True]
['text':' skip 2048 ports between attempts ','line_number':333,'multiline':True]
['text':' Get ready to acquire the message port from the shared process worker','line_number':357,'multiline':False]
['text':' we trigger the request via service call! ','line_number':358,'multiline':True]
['text':' Close the message port when the extension host is disposed','line_number':368,'multiline':False]
['text':' Now that the message port listener is installed, start the ext host process','line_number':383,'multiline':False]
['text':' Starting the ext host process resulted in an error','line_number':395,'multiline':False]
['text':' 1) wait for the incoming `ready` event and send the initialization data.','line_number':402,'multiline':False]
['text':' 2) wait for the incoming `initialized` event.','line_number':403,'multiline':False]
['text':' Wait 60s for the ready message','line_number':416,'multiline':False]
['text':' 1) Extension Host is ready to receive messages, initialize it','line_number':423,'multiline':False]
['text':' Wait 60s for the initialized message','line_number':428,'multiline':False]
['text':' 2) Extension Host is initialized','line_number':438,'multiline':False]
['text':' stop listening for messages here','line_number':441,'multiline':False]
['text':' release this promise','line_number':444,'multiline':False]
['text':' Expected termination path (we asked the process to terminate)','line_number':513,'multiline':False]
['text':' not a fancy approach, but this is the same approach used by the split2','line_number':525,'multiline':False]
['text':' module which is well-optimized (https://github.com/mcollina/split2)','line_number':526,'multiline':False]
['text':' protected against an extension spamming and leaking memory if no new line is written.','line_number':531,'multiline':False]
['text':' If the extension development host was started without debugger attached we need','line_number':576,'multiline':False]
['text':' to communicate this back to the main side to terminate the debug session','line_number':577,'multiline':False]
['text':' wait a bit for IPC to get delivered ','line_number':580,'multiline':True]
