['text':'---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------','line_number':1,'multiline':True]
['text':'*
	 * An event for when a file working copy was created.
	 ','line_number':18,'multiline':True]
['text':'*
	 * Access to all known file working copies within the manager.
	 ','line_number':23,'multiline':True]
['text':'*
	 * Returns the file working copy for the provided resource
	 * or `undefined` if none.
	 ','line_number':28,'multiline':True]
['text':'*
	 * Disposes all working copies of the manager and disposes the manager. This
	 * method is different from `dispose` in that it will unregister any working
	 * copy from the `IWorkingCopyService`. Since this impact things like backups,
	 * the method is `async` because it needs to trigger `save` for any dirty
	 * working copy to preserve the data.
	 *
	 * Callers should make sure to e.g. close any editors associated with the
	 * working copy.
	 ','line_number':34,'multiline':True]
['text':' already cached','line_number':70,'multiline':False]
['text':' Add to our working copy map','line_number':73,'multiline':False]
['text':' Update our dispose listener to remove it on dispose','line_number':76,'multiline':False]
['text':' Signal creation event','line_number':80,'multiline':False]
['text':' Dispose any existing listener','line_number':86,'multiline':False]
['text':' Remove from our working copy map','line_number':93,'multiline':False]
['text':'#region Get / Get all','line_number':97,'multiline':False]
['text':'#endregion','line_number':107,'multiline':False]
['text':'#region Lifecycle','line_number':109,'multiline':False]
['text':' Clear working copy caches','line_number':114,'multiline':False]
['text':'','line_number':115,'multiline':False]
['text':' Note: we are not explicitly disposing the working copies','line_number':116,'multiline':False]
['text':' known to the manager because this can have unwanted side','line_number':117,'multiline':False]
['text':' effects such as backups getting discarded once the working','line_number':118,'multiline':False]
['text':' copy unregisters. We have an explicit `destroy`','line_number':119,'multiline':False]
['text':' for that purpose (https://github.com/microsoft/vscode/pull/123555)','line_number':120,'multiline':False]
['text':'','line_number':121,'multiline':False]
['text':' Dispose the dispose listeners','line_number':124,'multiline':False]
['text':' Make sure all dirty working copies are saved to disk','line_number':131,'multiline':False]
['text':' Dispose all working copies','line_number':142,'multiline':False]
['text':' Finally dispose manager','line_number':145,'multiline':False]
['text':' First try regular save','line_number':151,'multiline':False]
['text':' Ignore','line_number':156,'multiline':False]
['text':' Then fallback to backup if that exists','line_number':159,'multiline':False]
['text':'#endregion','line_number':168,'multiline':False]
