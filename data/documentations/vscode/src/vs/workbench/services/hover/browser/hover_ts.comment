['text':'---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------','line_number':1,'multiline':True]
['text':'*
 * Enables the convenient display of rich markdown-based hovers in the workbench.
 ','line_number':13,'multiline':True]
['text':'*
	 * Shows a hover, provided a hover with the same options object is not already visible.
	 * @param options A set of options defining the characteristics of the hover.
	 * @param focus Whether to focus the hover (useful for keyboard accessibility).
	 *
	 * **Example:** A simple usage with a single element target.
	 *
	 * ```typescript
	 * showHover({
	 *   text: new MarkdownString('Hello world'),
	 *   target: someElement
	 * });
	 * ```
	 ','line_number':19,'multiline':True]
['text':'*
	 * Hides the hover if it was visible. This call will be ignored if the the hover is currently
	 * "locked" via the alt/option key.
	 ','line_number':35,'multiline':True]
['text':'*
	 * This should only be used until we have the ability to show multiple context views
	 * simultaneously. #188822
	 ','line_number':41,'multiline':True]
['text':'*
	 * The content to display in the primary section of the hover. The type of text determines the
	 * default `hideOnHover` behavior.
	 ','line_number':53,'multiline':True]
['text':'*
	 * The target for the hover. This determines the position of the hover and it will only be
	 * hidden when the mouse leaves both the hover and the target. A HTMLElement can be used for
	 * simple cases and a IHoverTarget for more complex cases where multiple elements and/or a
	 * dispose method is required.
	 ','line_number':59,'multiline':True]
['text':'
	 * The container to pass to {@link IContextViewProvider.showContextView} which renders the hover
	 * in. This is particularly useful for more natural tab focusing behavior, where the hover is
	 * created as the next tab index after the element being hovered and/or to workaround the
	 * element's container hiding on `focusout`.
	 ','line_number':67,'multiline':True]
['text':'*
	 * An ID to associate with the hover to be used as an equality check. Normally when calling
	 * {@link IHoverService.showHover} the options object itself is used to determine if the hover
	 * is the same one that is already showing, when this is set, the ID will be used instead.
	 ','line_number':75,'multiline':True]
['text':'*
	 * A set of actions for the hover's "status bar".
	 ','line_number':82,'multiline':True]
['text':'*
	 * An optional array of classes to add to the hover element.
	 ','line_number':87,'multiline':True]
['text':'*
	 * An optional link handler for markdown links, if this is not provided the IOpenerService will
	 * be used to open the links using its default options.
	 ','line_number':92,'multiline':True]
['text':'*
	 * Whether to trap focus in the following ways:
	 * - When the hover closes, focus goes to the element that had focus before the hover opened
	 * - If there are elements in the hover to focus, focus stays inside of the hover when tabbing
	 * Note that this is overridden to true when in screen reader optimized mode.
	 ','line_number':98,'multiline':True]
['text':'*
	 * Options that defines where the hover is positioned.
	 ','line_number':106,'multiline':True]
['text':'*
	 * Options that defines how long the hover is shown and when it hides.
	 ','line_number':111,'multiline':True]
['text':'*
	 * Options that define how the hover looks.
	 ','line_number':116,'multiline':True]
['text':'*
	 * Position of the hover. The default is to show above the target. This option will be ignored
	 * if there is not enough room to layout the hover in the specified position, unless the
	 * forcePosition option is set.
	 ','line_number':123,'multiline':True]
['text':'*
	 * Force the hover position, reducing the size of the hover instead of adjusting the hover
	 * position.
	 ','line_number':130,'multiline':True]
['text':'*
	 * Whether to hide the hover when the mouse leaves the `target` and enters the actual hover.
	 * This is false by default when text is an `IMarkdownString` and true when `text` is a
	 * `string`. Note that this will be ignored if any `actions` are provided as hovering is
	 * required to make them accessible.
	 *
	 * In general hiding on hover is desired for:
	 * - Regular text where selection is not important
	 * - Markdown that contains no links where selection is not important
	 ','line_number':138,'multiline':True]
['text':'*
	 * Whether to hide the hover when a key is pressed.
	 ','line_number':150,'multiline':True]
['text':'*
	 * Whether to make the hover sticky, this means it will not be hidden when the mouse leaves the
	 * hover.
	 ','line_number':155,'multiline':True]
['text':'*
	 * Whether to show the hover pointer, a little arrow that connects the target and the hover.
	 ','line_number':163,'multiline':True]
['text':'*
	 * Whether to show a compact hover, reducing the font size and padding of the hover.
	 ','line_number':168,'multiline':True]
['text':'*
	 * When {@link hideOnHover} is explicitly true or undefined and its auto value is detected to
	 * hide, show a hint at the bottom of the hover explaining how to mouse over the widget. This
	 * should be used in the cases where despite the hover having no interactive content, it's
	 * likely the user may want to interact with it somehow.
	 ','line_number':173,'multiline':True]
['text':'*
	 * Whether to skip the fade in animation, this should be used when hovering from one hover to
	 * another in the same group so it looks like the hover is moving from one element to the other.
	 ','line_number':181,'multiline':True]
['text':'*
	 * The label to use in the hover's status bar.
	 ','line_number':189,'multiline':True]
['text':'*
	 * The command ID of the action, this is used to resolve the keybinding to display after the
	 * action label.
	 ','line_number':194,'multiline':True]
['text':'*
	 * An optional class of an icon that will be displayed before the label.
	 ','line_number':200,'multiline':True]
['text':'*
	 * The callback to run the action.
	 * @param target The action element that was activated.
	 ','line_number':205,'multiline':True]
['text':'*
 * A target for a hover.
 ','line_number':212,'multiline':True]
['text':'*
	 * A set of target elements used to position the hover. If multiple elements are used the hover
	 * will try to not overlap any target element. An example use case for this is show a hover for
	 * wrapped text.
	 ','line_number':216,'multiline':True]
['text':'*
	 * An optional absolute x coordinate to position the hover with, for example to position the
	 * hover using `MouseEvent.pageX`.
	 ','line_number':223,'multiline':True]
['text':'*
	 * An optional absolute y coordinate to position the hover with, for example to position the
	 * hover using `MouseEvent.pageY`.
	 ','line_number':229,'multiline':True]
