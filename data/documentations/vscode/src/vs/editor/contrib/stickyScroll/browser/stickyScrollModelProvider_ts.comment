['text':'---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------','line_number':1,'multiline':True]
['text':'*
	 * Method which updates the sticky model
	 * @param textModel text-model of the editor
	 * @param textModelVersionId text-model version ID
	 * @param token cancellation token
	 * @returns the sticky model
	 ','line_number':38,'multiline':True]
['text':'*
	 * Method which computes the sticky model and returns a status to signal whether the sticky model has been successfully found
	 * @param textmodel text-model of the editor
	 * @param modelVersionId version ID of the text-model
	 * @param token cancellation token
	 * @returns a promise of a status indicating whether the sticky model has been successfully found as well as the model promise
	 ','line_number':135,'multiline':True]
['text':'*
	 * Method which checks whether the model returned by the provider is valid and can be used to compute a sticky model.
	 * This method by default returns true.
	 * @param model model returned by the provider
	 * @returns boolean indicating whether the model is valid
	 ','line_number':187,'multiline':True]
['text':'*
	 * Method which checks whether the provider is valid before applying it to find the provider model.
	 * This method by default returns true.
	 * @param textModel text-model of the editor
	 * @returns boolean indicating whether the provider is valid
	 ','line_number':197,'multiline':True]
['text':'*
	 * Abstract method which creates the model from the provider and returns the provider model
	 * @param textModel	text-model of the editor
	 * @param textModelVersionId text-model version ID
	 * @param token cancellation token
	 * @returns the model returned by the provider
	 ','line_number':207,'multiline':True]
['text':'*
	 * Abstract method which computes the sticky model from the model returned by the provider and returns the sticky model
	 * @param textModel text-model of the editor
	 * @param textModelVersionId text-model version ID
	 * @param token cancellation token
	 * @param model model returned by the provider
	 * @returns the sticky model
	 ','line_number':216,'multiline':True]
['text':' When several possible outline providers','line_number':253,'multiline':False]
['text':' The root sticky outline element','line_number':356,'multiline':False]
['text':' Finding the parent index of the current range','line_number':364,'multiline':False]
['text':' Access the reference of the parent node','line_number':369,'multiline':False]
['text':' In that case the parent node is the root node','line_number':372,'multiline':False]
