['text':'---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------','line_number':1,'multiline':True]
['text':' already initialized','line_number':69,'multiline':False]
['text':' create a decoration for each placeholder','line_number':77,'multiline':False]
['text':' Transform placeholder text if necessary','line_number':99,'multiline':False]
['text':' Check if the placeholder has a transformation','line_number':104,'multiline':False]
['text':' fix indentation for transformed lines','line_number':110,'multiline':False]
['text':' the selection of the current placeholder might','line_number':132,'multiline':False]
['text':' not acurate any more -> simply restore it','line_number':133,'multiline':False]
['text':' change stickiness to always grow when typing at its edges','line_number':140,'multiline':False]
['text':' because these decorations represent the currently active','line_number':141,'multiline':False]
['text':' tabstop.','line_number':142,'multiline':False]
['text':' Special case #1: reaching the final tabstop','line_number':143,'multiline':False]
['text':' Special case #2: placeholders enclosing active placeholders','line_number':144,'multiline':False]
['text':' consider to skip this placeholder index when the decoration','line_number':151,'multiline':False]
['text':' range is empty but when the placeholder wasn't. that's a strong','line_number':152,'multiline':False]
['text':' hint that the placeholder has been deleted. (all placeholder must match this)','line_number':153,'multiline':False]
['text':' change stickness to never grow when typing at its edges','line_number':166,'multiline':False]
['text':' so that in-active tabstops never grow','line_number':167,'multiline':False]
['text':' A placeholder is empty when it wasn't empty when authored but','line_number':181,'multiline':False]
['text':' when its tracking decoration is empty. This also applies to all','line_number':182,'multiline':False]
['text':' potential parent placeholders','line_number':183,'multiline':False]
['text':'*
	 * A snippet is trivial when it has no placeholder or only a final placeholder at
	 * its very end
	 ','line_number':210,'multiline':True]
['text':' ignore those','line_number':236,'multiline':False]
['text':' one of the placeholder lost its decoration and','line_number':248,'multiline':False]
['text':' therefore we bail out and pretend the placeholder','line_number':249,'multiline':False]
['text':' (with its mirrors) doesn't exist anymore.','line_number':250,'multiline':False]
['text':' For each active placeholder take one snippet and merge it','line_number':296,'multiline':False]
['text':' in that the placeholder (can be many for `$1foo$1foo`). Because','line_number':297,'multiline':False]
['text':' everything is sorted by editor selection we can simply remove','line_number':298,'multiline':False]
['text':' elements from the beginning of the array','line_number':299,'multiline':False]
['text':' Massage placeholder-indicies of the nested snippet to be','line_number':305,'multiline':False]
['text':' sorted right after the insertion point. This ensures we move','line_number':306,'multiline':False]
['text':' through the placeholders in the correct order','line_number':307,'multiline':False]
['text':' Remove the placeholder at which position are inserting','line_number':319,'multiline':False]
['text':' the snippet and also remove its decoration.','line_number':320,'multiline':False]
['text':' For each *new* placeholder we create decoration to monitor','line_number':325,'multiline':False]
['text':' how and if it grows/shrinks.','line_number':326,'multiline':False]
['text':' Last, re-create the placeholder groups by sorting placeholders by their index.','line_number':339,'multiline':False]
['text':' the snippet as inserted','line_number':386,'multiline':False]
['text':' all text elements that are not inside choice','line_number':390,'multiline':False]
['text':' check with filter (iff provided)','line_number':395,'multiline':False]
['text':' adjust indentation of snippet test','line_number':403,'multiline':False]
['text':' -the snippet-start doesn't get extra-indented (lineLeadingWhitespace), only normalized','line_number':404,'multiline':False]
['text':' -all N+1 lines get extra-indented and normalized','line_number':405,'multiline':False]
['text':' -the text start get extra-indented and normalized when following a linebreak','line_number':406,'multiline':False]
['text':' snippet start','line_number':409,'multiline':False]
['text':' check if text start is after a linebreak','line_number':413,'multiline':False]
['text':' overwrite[Before|After] is compute using the position, not the whole','line_number':438,'multiline':False]
['text':' selection. therefore we adjust the selection around that position','line_number':439,'multiline':False]
['text':' know what text the overwrite[Before|After] extensions','line_number':473,'multiline':False]
['text':' of the primary curser have selected because only when','line_number':474,'multiline':False]
['text':' secondary selections extend to the same text we can grow them','line_number':475,'multiline':False]
['text':' remember the first non-whitespace column to decide if','line_number':479,'multiline':False]
['text':' `keepWhitespace` should be overruled for secondary selections','line_number':480,'multiline':False]
['text':' sort selections by their start position but remeber','line_number':483,'multiline':False]
['text':' the original index. that allows you to create correct','line_number':484,'multiline':False]
['text':' offset-based selection logic without changing the','line_number':485,'multiline':False]
['text':' primary selection','line_number':486,'multiline':False]
['text':' extend selection with the `overwriteBefore` and `overwriteAfter` and then','line_number':493,'multiline':False]
['text':' compare if this matches the extensions of the primary selection','line_number':494,'multiline':False]
['text':' merge the before and after selection into one','line_number':504,'multiline':False]
['text':' adjust the template string to match the indentation and','line_number':511,'multiline':False]
['text':' whitespace rules of this insert location (can be different for each cursor)','line_number':512,'multiline':False]
['text':' happens when being asked for (default) or when this is a secondary','line_number':513,'multiline':False]
['text':' cursor and the leading whitespace is different','line_number':514,'multiline':False]
['text':' store snippets with the index of their originating selection.','line_number':532,'multiline':False]
['text':' that ensures the primiary cursor stays primary despite not being','line_number':533,'multiline':False]
['text':' the one with lowest start position','line_number':534,'multiline':False]
['text':' mark the edit so only our undo edits will be used to generate end cursors','line_number':536,'multiline':False]
['text':' snippet variables resolver','line_number':556,'multiline':False]
['text':'','line_number':567,'multiline':False]
['text':' gaps between snippet edits are appended as text nodes. this','line_number':574,'multiline':False]
['text':' ensures placeholder-offsets are later correct','line_number':575,'multiline':False]
['text':' make edit','line_number':592,'multiline':False]
['text':' mark the edit so only our undo edits will be used to generate end cursors','line_number':594,'multiline':False]
['text':'','line_number':599,'multiline':False]
['text':' make insert edit and start with first selections','line_number':631,'multiline':False]
['text':' Sometimes, the text buffer will remove automatic whitespace when doing any edits,','line_number':639,'multiline':False]
['text':' so we need to look only at the undo edits relevant for us.','line_number':640,'multiline':False]
['text':' Our edits have an identifier set so that's how we can distinguish them','line_number':641,'multiline':False]
['text':' Sometimes, the text buffer will remove automatic whitespace when doing any edits,','line_number':665,'multiline':False]
['text':' so we need to look only at the undo edits relevant for us.','line_number':666,'multiline':False]
['text':' Our edits have an identifier set so that's how we can distinguish them','line_number':667,'multiline':False]
['text':' Trivial snippets have no placeholder or are just the final placeholder. That means they','line_number':673,'multiline':False]
['text':' are just text insertions and we don't need to merge the nested snippet into the existing','line_number':674,'multiline':False]
['text':' snippet','line_number':675,'multiline':False]
['text':' this means we started snippet mode with N','line_number':741,'multiline':False]
['text':' selections and have M (N > M) selections.','line_number':742,'multiline':False]
['text':' So one snippet is without selection -> cancel','line_number':743,'multiline':False]
['text':' for the first snippet find the placeholder (and its ranges)','line_number':752,'multiline':False]
['text':' that contain at least one selection. for all remaining snippets','line_number':753,'multiline':False]
['text':' the same placeholder (and their ranges) must be used.','line_number':754,'multiline':False]
['text':' return false if we couldn't associate a selection to','line_number':768,'multiline':False]
['text':' this (the first) snippet','line_number':769,'multiline':False]
['text':' add selections from 'this' snippet so that we know all','line_number':773,'multiline':False]
['text':' selections for this placeholder','line_number':774,'multiline':False]
['text':' sort selections (and later placeholder-ranges). then walk both','line_number':780,'multiline':False]
['text':' arrays and make sure the placeholder-ranges contain the corresponding','line_number':781,'multiline':False]
['text':' selection','line_number':782,'multiline':False]
['text':' from all possible selections we have deleted those','line_number':801,'multiline':False]
['text':' that don't match with the current selection. if we don't','line_number':802,'multiline':False]
['text':' have any left, we don't have a selection anymore','line_number':803,'multiline':False]
