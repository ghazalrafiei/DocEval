['text':'---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------','line_number':1,'multiline':True]
['text':'*
 * Provides tokenization related functionality of the text model.
','line_number':12,'multiline':True]
['text':'*
	 * Replaces all semantic tokens with the provided `tokens`.
	 * @internal
	 ','line_number':18,'multiline':True]
['text':'*
	 * Merges the provided semantic tokens into existing semantic tokens.
	 * @internal
	 ','line_number':24,'multiline':True]
['text':'*
	 * @internal
	 ','line_number':30,'multiline':True]
['text':'*
	 * @internal
	 ','line_number':35,'multiline':True]
['text':'*
	 * Flush all tokenization state.
	 * @internal
	 ','line_number':40,'multiline':True]
['text':'*
	 * Force tokenization information for `lineNumber` to be accurate.
	 * @internal
	 ','line_number':46,'multiline':True]
['text':'*
	 * If it is cheap, force tokenization information for `lineNumber` to be accurate.
	 * This is based on a heuristic.
	 * @internal
	 ','line_number':52,'multiline':True]
['text':'*
	 * Check if calling `forceTokenization` for this `lineNumber` will be cheap (time-wise).
	 * This is based on a heuristic.
	 * @internal
	 ','line_number':59,'multiline':True]
['text':'*
	 * Get the tokens for the line `lineNumber`.
	 * The tokens might be inaccurate. Use `forceTokenization` to ensure accurate tokens.
	 * @internal
	 ','line_number':66,'multiline':True]
['text':'*
	* Returns the standard token type for a character if the character were to be inserted at
	* the given position. If the result cannot be accurate, it returns null.
	* @internal
	','line_number':73,'multiline':True]
['text':'*
	 * @internal
	','line_number':80,'multiline':True]
