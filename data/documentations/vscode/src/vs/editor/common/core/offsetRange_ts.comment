['text':'---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------','line_number':1,'multiline':True]
['text':'*
 * A range of offsets (0-based).
','line_number':13,'multiline':True]
['text':'*
	 * for all numbers n: range1.contains(n) or range2.contains(n) => range1.join(range2).contains(n)
	 * The joined range is the smallest range that contains both ranges.
	 ','line_number':92,'multiline':True]
['text':'*
	 * for all numbers n: range1.contains(n) and range2.contains(n) <=> range1.intersect(range2).contains(n)
	 *
	 * The resulting range is empty if the ranges do not intersect, but touch.
	 * If the ranges don't even touch, the result is undefined.
	 ','line_number':100,'multiline':True]
['text':'*
	 * Returns the given value if it is contained in this instance, otherwise the closest value that is contained.
	 * The range must not be empty.
	 ','line_number':139,'multiline':True]
['text':'*
	 * Returns `r := value + k * length` such that `r` is contained in this range.
	 * The range must not be empty.
	 *
	 * E.g. `[5, 10).clipCyclic(10) === 5`, `[5, 10).clipCyclic(11) === 6` and `[5, 10).clipCyclic(4) === 9`.
	 ','line_number':150,'multiline':True]
['text':'*
	 * Returns of there is a value that is contained in this instance and the given range.
	 ','line_number':209,'multiline':True]
['text':' TODO use binary search','line_number':213,'multiline':False]
['text':' TODO use binary search + slice','line_number':222,'multiline':False]
