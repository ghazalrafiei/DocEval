['text':'---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------','line_number':1,'multiline':True]
['text':'*
 * Layouting of objects that take vertical space (by having a height) and push down other objects.
 *
 * These objects are basically either text (lines) or spaces between those lines (whitespaces).
 * This provides commodity operations for working with lines that contain whitespace that pushes lines lower (vertically).
 ','line_number':80,'multiline':True]
['text':' marker for not being computed ','line_number':107,'multiline':True]
['text':'*
	 * Find the insertion index for a new value inside a sorted array of values.
	 * If the value is already present in the sorted array, the insertion index will be after the already existing value.
	 ','line_number':114,'multiline':True]
['text':'*
	 * Change the height of a line in pixels.
	 ','line_number':141,'multiline':True]
['text':'*
	 * Changes the padding used to calculate vertical offsets.
	 ','line_number':149,'multiline':True]
['text':'*
	 * Set the number of lines.
	 *
	 * @param lineCount New number of lines.
	 ','line_number':157,'multiline':True]
['text':' marker for not being computed ','line_number':201,'multiline':True]
['text':' when only one thing happened, handle it "delicately"','line_number':205,'multiline':False]
['text':' simply rebuild the entire datastructure','line_number':222,'multiline':False]
['text':' `afterLineNumber` changed for this whitespace','line_number':294,'multiline':False]
['text':' Record old whitespace','line_number':296,'multiline':False]
['text':' Since changing `afterLineNumber` can trigger a reordering, we're gonna remove this whitespace','line_number':299,'multiline':False]
['text':' And add it again','line_number':304,'multiline':False]
['text':'*
	 * Notify the layouter that lines have been deleted (a continuous zone of lines).
	 *
	 * @param fromLineNumber The line number at which the deletion started, inclusive
	 * @param toLineNumber The line number at which the deletion ended, inclusive
	 ','line_number':314,'multiline':True]
['text':' The line this whitespace was after has been deleted','line_number':330,'multiline':False]
['text':'  => move whitespace to before first deleted line','line_number':331,'multiline':False]
['text':' The line this whitespace was after has been moved up','line_number':334,'multiline':False]
['text':'  => move whitespace up','line_number':335,'multiline':False]
['text':'*
	 * Notify the layouter that lines have been inserted (a continuous zone of lines).
	 *
	 * @param fromLineNumber The line number at which the insertion started, inclusive
	 * @param toLineNumber The line number at which the insertion ended, inclusive.
	 ','line_number':341,'multiline':True]
['text':'*
	 * Get the sum of all the whitespaces.
	 ','line_number':362,'multiline':True]
['text':'*
	 * Return the sum of the heights of the whitespaces at [0..index].
	 * This includes the whitespace at `index`.
	 *
	 * @param index The index of the whitespace.
	 * @return The sum of the heights of all whitespaces before the one at `index`, including the one at `index`.
	 ','line_number':373,'multiline':True]
['text':'*
	 * Get the sum of heights for all objects.
	 *
	 * @return The sum of heights for all objects.
	 ','line_number':397,'multiline':True]
['text':'*
	 * Returns the accumulated height of whitespaces before the given line number.
	 *
	 * @param lineNumber The line number
	 ','line_number':410,'multiline':True]
['text':' Find the whitespace before line number','line_number':431,'multiline':False]
['text':'*
	 * Find the index of the first whitespace which has `afterLineNumber` >= `lineNumber`.
	 * @return The index of the first whitespace with `afterLineNumber` >= `lineNumber` or -1 if no whitespace is found.
	 ','line_number':468,'multiline':True]
['text':'*
	 * Get the vertical offset (the sum of heights for all objects above) a certain line number.
	 *
	 * @param lineNumber The line number
	 * @return The sum of heights for all objects above `lineNumber`.
	 ','line_number':479,'multiline':True]
['text':'*
	 * Get the vertical offset (the sum of heights for all objects above) a certain line number.
	 *
	 * @param lineNumber The line number
	 * @return The sum of heights for all objects above `lineNumber`.
	 ','line_number':501,'multiline':True]
['text':'*
	 * Returns if there is any whitespace in the document.
	 ','line_number':515,'multiline':True]
['text':'*
	 * The maximum min width for all whitespaces.
	 ','line_number':523,'multiline':True]
['text':'*
	 * Check if `verticalOffset` is below all lines.
	 ','line_number':538,'multiline':True]
['text':'*
	 * Find the first line number that is at or after vertical offset `verticalOffset`.
	 * i.e. if getVerticalOffsetForLine(line) is x and getVerticalOffsetForLine(line + 1) is y, then
	 * getLineNumberAtOrAfterVerticalOffset(i) = line, x <= i < y.
	 *
	 * @param verticalOffset The vertical offset to search at.
	 * @return The line number at or after vertical offset `verticalOffset`.
	 ','line_number':564,'multiline':True]
['text':' vertical offset is after mid line number','line_number':591,'multiline':False]
['text':' Hit','line_number':594,'multiline':False]
['text':' vertical offset is before mid line number, but mid line number could still be what we're searching for','line_number':597,'multiline':False]
['text':'*
	 * Get all the lines and their relative vertical offsets that are positioned between `verticalOffset1` and `verticalOffset2`.
	 *
	 * @param verticalOffset1 The beginning of the viewport.
	 * @param verticalOffset2 The end of the viewport.
	 * @return A structure describing the lines positioned between `verticalOffset1` and `verticalOffset2`.
	 ','line_number':609,'multiline':True]
['text':' Find first line number','line_number':622,'multiline':False]
['text':' We don't live in a perfect world, so the line number might start before or after verticalOffset1','line_number':623,'multiline':False]
['text':' Also keep track of what whitespace we've got','line_number':629,'multiline':False]
['text':' IE (all versions) cannot handle units above about 1,533,908 px, so every 500k pixels bring numbers down','line_number':647,'multiline':False]
['text':' Compute a delta that guarantees that lines are positioned at `lineHeight` increments','line_number':651,'multiline':False]
['text':' Figure out how far the lines go','line_number':663,'multiline':False]
['text':' Count current line height in the vertical offsets','line_number':674,'multiline':False]
['text':' Next line starts immediately after this one','line_number':678,'multiline':False]
['text':' Push down next line with the height of the current whitespace','line_number':681,'multiline':False]
['text':' Count current whitespace in the vertical offsets','line_number':684,'multiline':False]
['text':' We have covered the entire viewport area, time to stop','line_number':697,'multiline':False]
['text':' Special case: nothing to be found','line_number':767,'multiline':False]
['text':' vertical offset is after whitespace','line_number':781,'multiline':False]
['text':' Hit','line_number':784,'multiline':False]
['text':' vertical offset is before whitespace, but midWhitespaceIndex might still be what we're searching for','line_number':787,'multiline':False]
['text':'*
	 * Get exactly the whitespace that is layouted at `verticalOffset`.
	 *
	 * @param verticalOffset The vertical offset.
	 * @return Precisely the whitespace that is layouted at `verticaloffset` or null.
	 ','line_number':794,'multiline':True]
['text':'*
	 * Get a list of whitespaces that are positioned between `verticalOffset1` and `verticalOffset2`.
	 *
	 * @param verticalOffset1 The beginning of the viewport.
	 * @param verticalOffset2 The end of the viewport.
	 * @return An array with all the whitespaces in the viewport. If no whitespace is in viewport, the array is empty.
	 ','line_number':832,'multiline':True]
['text':'*
	 * Get all whitespaces.
	 ','line_number':870,'multiline':True]
['text':'*
	 * The number of whitespaces.
	 ','line_number':878,'multiline':True]
['text':'*
	 * Get the `id` for whitespace at index `index`.
	 *
	 * @param index The index of the whitespace.
	 * @return `id` of whitespace at `index`.
	 ','line_number':886,'multiline':True]
['text':'*
	 * Get the `afterLineNumber` for whitespace at index `index`.
	 *
	 * @param index The index of the whitespace.
	 * @return `afterLineNumber` of whitespace at `index`.
	 ','line_number':899,'multiline':True]
['text':'*
	 * Get the `height` for whitespace at index `index`.
	 *
	 * @param index The index of the whitespace.
	 * @return `height` of whitespace at `index`.
	 ','line_number':912,'multiline':True]
