['text':'---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------','line_number':1,'multiline':True]
['text':' To account for trimming','line_number':18,'multiline':False]
['text':' This slice has to have lineRange.length many \n! (otherwise diffing against an empty slice will be problematic)','line_number':22,'multiline':False]
['text':' (Unless it covers the entire document, in that case the other slice also has to cover the entire document ands it's okay)','line_number':23,'multiline':False]
['text':' If the slice covers the end, but does not start at the beginning, we include just the \n of the previous line.','line_number':25,'multiline':False]
['text':' Don't add an \n that does not exist in the document.','line_number':54,'multiline':False]
['text':' To account for the last line','line_number':60,'multiline':False]
['text':'   a   b   c   ,           d   e   f','line_number':85,'multiline':False]
['text':' 11  0   0   12  15  6   13  0   0   11','line_number':86,'multiline':False]
['text':' don't break between \r and \n','line_number':92,'multiline':False]
['text':' prefer the linebreak before the change','line_number':96,'multiline':False]
['text':' find smallest i, so that lineBreakOffsets[i] <= offset using binary search','line_number':115,'multiline':False]
['text':'*
	 * Finds the word that contains the character at the given offset
	 ','line_number':128,'multiline':True]
['text':' find start','line_number':140,'multiline':False]
['text':' find end','line_number':146,'multiline':False]
