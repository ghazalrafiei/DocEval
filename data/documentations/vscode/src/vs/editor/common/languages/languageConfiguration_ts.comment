['text':'---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------','line_number':1,'multiline':True]
['text':'*
 * Describes how comments for a language work.
 ','line_number':10,'multiline':True]
['text':'*
	 * The line comment token, like `// this is a comment`
	 ','line_number':14,'multiline':True]
['text':'*
	 * The block comment character pair, like `/* block comment *&#47;`
	 ','line_number':18,'multiline':True]
['text':'*
 * The language configuration interface defines the contract between extensions and
 * various editor features, like automatic bracket insertion, automatic indentation etc.
 ','line_number':24,'multiline':True]
['text':'*
	 * The language's comment settings.
	 ','line_number':29,'multiline':True]
['text':'*
	 * The language's brackets.
	 * This configuration implicitly affects pressing Enter around these brackets.
	 ','line_number':33,'multiline':True]
['text':'*
	 * The language's word definition.
	 * If the language supports Unicode identifiers (e.g. JavaScript), it is preferable
	 * to provide a word definition that uses exclusion of known separators.
	 * e.g.: A regex that matches anything except known separators (and dot is allowed to occur in a floating point number):
	 *   /(-?\d*\.\d\w*)|([^\`\~\!\@\#\%\^\&\*\(\)\-\=\+\[\{\]\}\\\|\;\:\'\"\,\.\<\>\/\?\s]+)/g
	 ','line_number':38,'multiline':True]
['text':'*
	 * The language's indentation settings.
	 ','line_number':46,'multiline':True]
['text':'*
	 * The language's rules to be evaluated when pressing Enter.
	 ','line_number':50,'multiline':True]
['text':'*
	 * The language's auto closing pairs. The 'close' character is automatically inserted with the
	 * 'open' character is typed. If not set, the configured brackets will be used.
	 ','line_number':54,'multiline':True]
['text':'*
	 * The language's surrounding pairs. When the 'open' character is typed on a selection, the
	 * selected string is surrounded by the open and close characters. If not set, the autoclosing pairs
	 * settings will be used.
	 ','line_number':59,'multiline':True]
['text':'*
	 * Defines a list of bracket pairs that are colorized depending on their nesting level.
	 * If not set, the configured brackets will be used.
	','line_number':65,'multiline':True]
['text':'*
	 * Defines what characters must be after the cursor for bracket or quote autoclosing to occur when using the \'languageDefined\' autoclosing setting.
	 *
	 * This is typically the set of characters which can not start an expression, such as whitespace, closing brackets, non-unary operators, etc.
	 ','line_number':70,'multiline':True]
['text':'*
	 * The language's folding rules.
	 ','line_number':77,'multiline':True]
['text':'*
	 * **Deprecated** Do not use.
	 *
	 * @deprecated Will be replaced by a better API soon.
	 ','line_number':82,'multiline':True]
['text':'*
 * @internal
 ','line_number':92,'multiline':True]
['text':'*
 * @internal
 ','line_number':97,'multiline':True]
['text':'*
 * Describes indentation rules for a language.
 ','line_number':102,'multiline':True]
['text':'*
	 * If a line matches this pattern, then all the lines after it should be unindented once (until another rule matches).
	 ','line_number':106,'multiline':True]
['text':'*
	 * If a line matches this pattern, then all the lines after it should be indented once (until another rule matches).
	 ','line_number':110,'multiline':True]
['text':'*
	 * If a line matches this pattern, then **only the next line** after it should be indented once.
	 ','line_number':114,'multiline':True]
['text':'*
	 * If a line matches this pattern, then its indentation should not be changed and it should not be evaluated against the other rules.
	 ','line_number':118,'multiline':True]
['text':'*
 * Describes language specific folding markers such as '#region' and '#endregion'.
 * The start and end regexes will be tested against the contents of all lines and must be designed efficiently:
 * - the regex should start with '^'
 * - regexp flags (i, g) are ignored
 ','line_number':125,'multiline':True]
['text':'*
 * Describes folding rules for a language.
 ','line_number':136,'multiline':True]
['text':'*
	 * Used by the indentation based strategy to decide whether empty lines belong to the previous or the next block.
	 * A language adheres to the off-side rule if blocks in that language are expressed by their indentation.
	 * See [wikipedia](https://en.wikipedia.org/wiki/Off-side_rule) for more information.
	 * If not set, `false` is used and empty lines belong to the previous block.
	 ','line_number':140,'multiline':True]
['text':'*
	 * Region markers used by the language.
	 ','line_number':148,'multiline':True]
['text':'*
 * Describes a rule to be evaluated when pressing Enter.
 ','line_number':154,'multiline':True]
['text':'*
	 * This rule will only execute if the text before the cursor matches this regular expression.
	 ','line_number':158,'multiline':True]
['text':'*
	 * This rule will only execute if the text after the cursor matches this regular expression.
	 ','line_number':162,'multiline':True]
['text':'*
	 * This rule will only execute if the text above the this line matches this regular expression.
	 ','line_number':166,'multiline':True]
['text':'*
	 * The action to execute.
	 ','line_number':170,'multiline':True]
['text':'*
 * Definition of documentation comments (e.g. Javadoc/JSdoc)
 ','line_number':176,'multiline':True]
['text':'*
	 * The string that starts a doc comment (e.g. '/**')
	 ','line_number':180,'multiline':True]
['text':'*
	 * The string that appears on the last line and closes the doc comment (e.g. ' * /').
	 ','line_number':184,'multiline':True]
['text':'*
 * A tuple of two characters, like a pair of
 * opening and closing brackets.
 ','line_number':190,'multiline':True]
['text':'*
 * Describes what to do with the indentation when pressing Enter.
 ','line_number':205,'multiline':True]
['text':'*
	 * Insert new line and copy the previous line's indentation.
	 ','line_number':209,'multiline':True]
['text':'*
	 * Insert new line and indent once (relative to the previous line's indentation).
	 ','line_number':213,'multiline':True]
['text':'*
	 * Insert two new lines:
	 *  - the first one indented which will hold the cursor
	 *  - the second one at the same indentation level
	 ','line_number':217,'multiline':True]
['text':'*
	 * Insert new line and outdent once (relative to the previous line's indentation).
	 ','line_number':223,'multiline':True]
['text':'*
 * Describes what to do when pressing Enter.
 ','line_number':229,'multiline':True]
['text':'*
	 * Describe what to do with the indentation.
	 ','line_number':233,'multiline':True]
['text':'*
	 * Describes text to be appended after the new line and after the indentation.
	 ','line_number':237,'multiline':True]
['text':'*
	 * Describes the number of characters to remove from the new line's indentation.
	 ','line_number':241,'multiline':True]
['text':'*
 * @internal
 ','line_number':247,'multiline':True]
['text':'*
	 * Describe what to do with the indentation.
	 ','line_number':251,'multiline':True]
['text':'*
	 * Describes text to be appended after the new line and after the indentation.
	 ','line_number':255,'multiline':True]
['text':'*
	 * Describes the number of characters to remove from the new line's indentation.
	 ','line_number':259,'multiline':True]
['text':'*
	 * The line's indentation minus removeText
	 ','line_number':263,'multiline':True]
['text':'*
 * @internal
 ','line_number':269,'multiline':True]
['text':' initially allowed in all tokens','line_number':286,'multiline':False]
['text':' Always complete on empty line','line_number':323,'multiline':False]
['text':'*
	 * Find a character in the range [0-9a-zA-Z] that does not appear in the open or close
	 ','line_number':343,'multiline':True]
['text':'*
 * @internal
 ','line_number':363,'multiline':True]
['text':' it is useful to be able to get pairs using either end of open and close','line_number':367,'multiline':False]
['text':'* Key is first character of open ','line_number':369,'multiline':True]
['text':'* Key is last character of open ','line_number':371,'multiline':True]
['text':'* Key is first character of close ','line_number':373,'multiline':True]
['text':'* Key is last character of close ','line_number':375,'multiline':True]
['text':'* Key is close. Only has pairs that are a single character ','line_number':377,'multiline':True]
