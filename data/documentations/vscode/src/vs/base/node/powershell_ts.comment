['text':'---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------','line_number':1,'multiline':True]
['text':' This is required, since parseInt("7-preview") will return 7.','line_number':10,'multiline':False]
['text':'
Currently, here are the values for these environment variables on their respective archs:

On x86 process on x86:
PROCESSOR_ARCHITECTURE is X86
PROCESSOR_ARCHITEW6432 is undefined

On x86 process on x64:
PROCESSOR_ARCHITECTURE is X86
PROCESSOR_ARCHITEW6432 is AMD64

On x64 process on x64:
PROCESSOR_ARCHITECTURE is AMD64
PROCESSOR_ARCHITEW6432 is undefined

On ARM process on ARM:
PROCESSOR_ARCHITECTURE is ARM64
PROCESSOR_ARCHITEW6432 is undefined

On x86 process on ARM:
PROCESSOR_ARCHITECTURE is X86
PROCESSOR_ARCHITEW6432 is ARM64

On x64 process on ARM:
PROCESSOR_ARCHITECTURE is ARM64
PROCESSOR_ARCHITEW6432 is undefined
','line_number':36,'multiline':True]
['text':' Just use the native system bitness','line_number':103,'multiline':False]
['text':' We might be a 64-bit process looking for 32-bit program files','line_number':107,'multiline':False]
['text':' We might be a 32-bit process looking for 64-bit program files','line_number':112,'multiline':False]
['text':' We're a 32-bit process on 32-bit Windows, there is no other Program Files dir','line_number':117,'multiline':False]
['text':' Ensure the base directory exists','line_number':132,'multiline':False]
['text':' We are looking for something like "7-preview"','line_number':143,'multiline':False]
['text':' Preview dirs all have dashes in them','line_number':145,'multiline':False]
['text':' Verify that the part before the dash is an integer','line_number':151,'multiline':False]
['text':' and that the part after the dash is "preview"','line_number':152,'multiline':False]
['text':' Search for a directory like "6" or "7"','line_number':160,'multiline':False]
['text':' Ensure we haven't already seen a higher version','line_number':168,'multiline':False]
['text':' Now look for the file','line_number':173,'multiline':False]
['text':' We can't proceed if there's no LOCALAPPDATA path','line_number':194,'multiline':False]
['text':' Find the base directory for MSIX application exe shortcuts','line_number':199,'multiline':False]
['text':' Define whether we're looking for the preview or the stable','line_number':206,'multiline':False]
['text':' We should find only one such application, so return on the first one','line_number':211,'multiline':False]
['text':' If we find nothing, return null','line_number':219,'multiline':False]
['text':'*
 * Iterates through all the possible well-known PowerShell installations on a machine.
 * Returned values may not exist, but come with an .exists property
 * which will check whether the executable exists.
 ','line_number':238,'multiline':True]
['text':' Find PSCore stable first','line_number':244,'multiline':False]
['text':' Windows may have a 32-bit pwsh.exe','line_number':250,'multiline':False]
['text':' Also look for the MSIX/UWP installation','line_number':256,'multiline':False]
['text':' Look for the .NET global tool','line_number':262,'multiline':False]
['text':' Some older versions of PowerShell have a bug in this where startup will fail,','line_number':263,'multiline':False]
['text':' but this is fixed in newer versions','line_number':264,'multiline':False]
['text':' Look for PSCore preview','line_number':270,'multiline':False]
['text':' Find a preview MSIX','line_number':276,'multiline':False]
['text':' Look for pwsh-preview with the opposite bitness','line_number':282,'multiline':False]
['text':' Finally, get Windows PowerShell','line_number':288,'multiline':False]
['text':'*
 * Iterates through PowerShell installations on the machine according
 * to configuration passed in through the constructor.
 * PowerShell items returned by this object are verified
 * to exist on the filesystem.
 ','line_number':295,'multiline':True]
['text':' Get the default PowerShell installations first','line_number':302,'multiline':False]
['text':'*
* Returns the first available PowerShell executable found in the search order.
','line_number':310,'multiline':True]
