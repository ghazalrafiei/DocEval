['text':'---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------','line_number':1,'multiline':True]
['text':'*
 * The {@link ListView} is a virtual scrolling engine.
 *
 * Given that it only renders elements within its viewport, it can hold large
 * collections of elements and stay very performant. The performance bottleneck
 * usually lies within the user's rendering code for each element.
 *
 * @remarks It is a low-level widget, not meant to be used directly. Refer to the
 * List widget instead.
 ','line_number':266,'multiline':True]
['text':' TODO@joao ','line_number':287,'multiline':True]
['text':' TODO@joao ','line_number':361,'multiline':True]
['text':' Prevent the monaco-scrollable-element from scrolling','line_number':429,'multiline':False]
['text':' https://github.com/microsoft/vscode/issues/44181','line_number':430,'multiline':False]
['text':' trigger a rerender','line_number':479,'multiline':False]
['text':' do not scroll the viewport if resized element is out of viewport','line_number':529,'multiline':False]
['text':' anchor in viewport','line_number':533,'multiline':False]
['text':' resized element in viewport and above the anchor','line_number':534,'multiline':False]
['text':' try to reuse rows, avoid removing them from DOM','line_number':574,'multiline':False]
['text':' TODO@joao: improve this optimization to catch even more cases','line_number':622,'multiline':False]
['text':' Render','line_number':836,'multiline':False]
['text':' DOM operations','line_number':881,'multiline':False]
['text':' Events','line_number':1047,'multiline':False]
['text':' DND','line_number':1110,'multiline':False]
['text':' needed so that the drop event fires (https://stackoverflow.com/questions/21339924/drop-event-not-firing-in-chrome)','line_number':1157,'multiline':False]
['text':' Drag over from outside','line_number':1171,'multiline':False]
['text':' Drag over from another list','line_number':1174,'multiline':False]
['text':' Drag over from the desktop','line_number':1178,'multiline':False]
['text':' sanitize feedback list','line_number':1210,'multiline':False]
['text':' entire list feedback','line_number':1221,'multiline':False]
['text':' DND scroll top animation','line_number':1295,'multiline':False]
['text':' Util','line_number':1338,'multiline':False]
['text':'*
	 * Given a stable rendered state, checks every rendered element whether it needs
	 * to be probed for dynamic height. Adjusts scroll height and top if necessary.
	 ','line_number':1368,'multiline':True]
['text':' Let's remember the second element's position, this helps in scrolling up','line_number':1375,'multiline':False]
['text':' and preserving a linear upwards scroll movement','line_number':1376,'multiline':False]
['text':' To compute a destination scroll top, we need to take into account the current smooth scrolling','line_number':1439,'multiline':False]
['text':' animation, and then reuse it with a new target (to avoid prolonging the scroll)','line_number':1440,'multiline':False]
['text':' See https://github.com/microsoft/vscode/issues/104144','line_number':1441,'multiline':False]
['text':' See https://github.com/microsoft/vscode/pull/104284','line_number':1442,'multiline':False]
['text':' See https://github.com/microsoft/vscode/issues/107704','line_number':1443,'multiline':False]
['text':' Dispose','line_number':1532,'multiline':False]
