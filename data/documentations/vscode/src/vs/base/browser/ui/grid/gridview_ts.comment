['text':'---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------','line_number':1,'multiline':True]
['text':'*
 * The interface to implement for views within a {@link GridView}.
 ','line_number':38,'multiline':True]
['text':'*
	 * The DOM element for this view.
	 ','line_number':43,'multiline':True]
['text':'*
	 * A minimum width for this view.
	 *
	 * @remarks If none, set it to `0`.
	 ','line_number':48,'multiline':True]
['text':'*
	 * A minimum width for this view.
	 *
	 * @remarks If none, set it to `Number.POSITIVE_INFINITY`.
	 ','line_number':55,'multiline':True]
['text':'*
	 * A minimum height for this view.
	 *
	 * @remarks If none, set it to `0`.
	 ','line_number':62,'multiline':True]
['text':'*
	 * A minimum height for this view.
	 *
	 * @remarks If none, set it to `Number.POSITIVE_INFINITY`.
	 ','line_number':69,'multiline':True]
['text':'*
	 * The priority of the view when the {@link GridView} layout algorithm
	 * runs. Views with higher priority will be resized first.
	 *
	 * @remarks Only used when `proportionalLayout` is false.
	 ','line_number':76,'multiline':True]
['text':'*
	 * If the {@link GridView} supports proportional layout,
	 * this property allows for finer control over the proportional layout algorithm, per view.
	 *
	 * @defaultValue `true`
	 ','line_number':84,'multiline':True]
['text':'*
	 * Whether the view will snap whenever the user reaches its minimum size or
	 * attempts to grow it beyond the minimum size.
	 *
	 * @defaultValue `false`
	 ','line_number':92,'multiline':True]
['text':'*
	 * View instances are supposed to fire this event whenever any of the constraint
	 * properties have changed:
	 *
	 * - {@link IView.minimumWidth}
	 * - {@link IView.maximumWidth}
	 * - {@link IView.minimumHeight}
	 * - {@link IView.maximumHeight}
	 * - {@link IView.priority}
	 * - {@link IView.snap}
	 *
	 * The {@link GridView} will relayout whenever that happens. The event can
	 * optionally emit the view's preferred size for that relayout.
	 ','line_number':100,'multiline':True]
['text':'*
	 * This will be called by the {@link GridView} during layout. A view meant to
	 * pass along the layout information down to its descendants.
	 ','line_number':116,'multiline':True]
['text':'*
	 * This will be called by the {@link GridView} whenever this view is made
	 * visible or hidden.
	 *
	 * @param visible Whether the view becomes visible.
	 ','line_number':122,'multiline':True]
['text':'*
	 * This will be called by the {@link GridView} whenever this view is on
	 * an edge of the grid and the grid's
	 * {@link GridView.boundarySashes boundary sashes} change.
	 ','line_number':130,'multiline':True]
['text':'*
	 * Styles overriding the {@link defaultStyles default ones}.
	 ','line_number':205,'multiline':True]
['text':'*
	 * Resize each view proportionally when resizing the {@link GridView}.
	 *
	 * @defaultValue `true`
	 ','line_number':210,'multiline':True]
['text':' default true','line_number':215,'multiline':False]
['text':' Normal behavior, we have no children yet, just set up the splitview','line_number':427,'multiline':False]
['text':' Reconstruction behavior, we want to reconstruct a splitview','line_number':431,'multiline':False]
['text':' branch nodes should flip the normal/orthogonal directions','line_number':487,'multiline':False]
['text':' swap boundary sashes','line_number':573,'multiline':False]
['text':' swap children','line_number':577,'multiline':False]
['text':' If all children are hidden then the parent should hide the entire splitview','line_number':628,'multiline':False]
['text':' If the entire splitview is hidden then the parent should show the splitview when a child is shown','line_number':629,'multiline':False]
['text':'*
 * Creates a latched event that avoids being fired when the view
 * constraints do not change at all.
 ','line_number':752,'multiline':True]
['text':' The last view to add should adjust to rounding errors','line_number':962,'multiline':False]
['text':'*
 * The location of a {@link IView view} within a {@link GridView}.
 *
 * A GridView is a tree composition of multiple {@link SplitView} instances, orthogonal
 * between one another. Here's an example:
 *
 * ```
 *  +-----+---------------+
 *  |  A  |      B        |
 *  +-----+---------+-----+
 *  |        C      |     |
 *  +---------------+  D  |
 *  |        E      |     |
 *  +---------------+-----+
 * ```
 *
 * The above grid's tree structure is:
 *
 * ```
 *  Vertical SplitView
 *  +-Horizontal SplitView
 *  | +-A
 *  | +-B
 *  +- Horizontal SplitView
 *    +-Vertical SplitView
 *    | +-C
 *    | +-E
 *    +-D
 * ```
 *
 * So, {@link IView views} within a {@link GridView} can be referenced by
 * a sequence of indexes, each index referencing each SplitView. Here are
 * each view's locations, from the example above:
 *
 * - `A`: `[0,0]`
 * - `B`: `[0,1]`
 * - `C`: `[1,0,0]`
 * - `D`: `[1,1]`
 * - `E`: `[1,0,1]`
 ','line_number':979,'multiline':True]
['text':'*
 * The {@link GridView} is the UI component which implements a two dimensional
 * flex-like layout algorithm for a collection of {@link IView} instances, which
 * are mostly HTMLElement instances with size constraints. A {@link GridView} is a
 * tree composition of multiple {@link SplitView} instances, orthogonal between
 * one another. It will respect view's size contraints, just like the SplitView.
 *
 * It has a low-level index based API, allowing for fine grain performant operations.
 * Look into the {@link Grid} widget for a higher-level API.
 *
 * Features:
 * - flex-like layout algorithm
 * - snap support
 * - corner sash support
 * - Alt key modifier behavior, macOS style
 * - layout (de)serialization
 ','line_number':1021,'multiline':True]
['text':'*
	 * The DOM element for this view.
	 ','line_number':1040,'multiline':True]
['text':'*
	 * The layout controller makes sure layout only propagates
	 * to the views after the very first call to {@link GridView.layout}.
	 ','line_number':1053,'multiline':True]
['text':' TODO','line_number':1073,'multiline':False]
['text':'*
	 * Fires whenever the user double clicks a {@link Sash sash}.
	 ','line_number':1077,'multiline':True]
['text':'*
	 * Fires whenever the user scrolls a {@link SplitView} within
	 * the grid.
	 ','line_number':1082,'multiline':True]
['text':'*
	 * Fires whenever a view within the grid changes its size constraints.
	 ','line_number':1088,'multiline':True]
['text':'*
	 * The width of the grid.
	 ','line_number':1093,'multiline':True]
['text':'*
	 * The height of the grid.
	 ','line_number':1098,'multiline':True]
['text':'*
	 * The minimum width of the grid.
	 ','line_number':1103,'multiline':True]
['text':'*
	 * The minimum height of the grid.
	 ','line_number':1108,'multiline':True]
['text':'*
	 * The maximum width of the grid.
	 ','line_number':1113,'multiline':True]
['text':'*
	 * The maximum height of the grid.
	 ','line_number':1118,'multiline':True]
['text':'*
	 * The orientation of the grid. Matches the orientation of the root
	 * {@link SplitView} in the grid's tree model.
	 ','line_number':1126,'multiline':True]
['text':'*
	 * A collection of sashes perpendicular to each edge of the grid.
	 * Corner sashes will be created for each intersection.
	 ','line_number':1141,'multiline':True]
['text':'*
	 * Enable/disable edge snapping across all grid views.
	 ','line_number':1150,'multiline':True]
['text':'*
	 * Create a new {@link GridView} instance.
	 *
	 * @remarks It's the caller's responsibility to append the
	 * {@link GridView.element} to the page's DOM.
	 ','line_number':1162,'multiline':True]
['text':'*
	 * Layout the {@link GridView}.
	 *
	 * Optionally provide a `top` and `left` positions, those will propagate
	 * as an origin for positions passed to {@link IView.layout}.
	 *
	 * @param width The width of the {@link GridView}.
	 * @param height The height of the {@link GridView}.
	 * @param top Optional, the top location of the {@link GridView}.
	 * @param left Optional, the left location of the {@link GridView}.
	 ','line_number':1181,'multiline':True]
['text':'*
	 * Add a {@link IView view} to this {@link GridView}.
	 *
	 * @param view The view to add.
	 * @param size Either a fixed size, or a dynamic {@link Sizing} strategy.
	 * @param location The {@link GridLocation location} to insert the view on.
	 ','line_number':1199,'multiline':True]
['text':'*
	 * Remove a {@link IView view} from this {@link GridView}.
	 *
	 * @param location The {@link GridLocation location} of the {@link IView view}.
	 * @param sizing Whether to distribute other {@link IView view}'s sizes.
	 ','line_number':1257,'multiline':True]
['text':' parent is root','line_number':1296,'multiline':False]
['text':' we must promote sibling to be the new root','line_number':1303,'multiline':False]
['text':'*
	 * Move a {@link IView view} within its parent.
	 *
	 * @param parentLocation The {@link GridLocation location} of the {@link IView view}'s parent.
	 * @param from The index of the {@link IView view} to move.
	 * @param to The index where the {@link IView view} should move to.
	 ','line_number':1346,'multiline':True]
['text':'*
	 * Swap two {@link IView views} within the {@link GridView}.
	 *
	 * @param from The {@link GridLocation location} of one view.
	 * @param to The {@link GridLocation location} of another view.
	 ','line_number':1369,'multiline':True]
['text':'*
	 * Resize a {@link IView view}.
	 *
	 * @param location The {@link GridLocation location} of the view.
	 * @param size The size the view should be. Optionally provide a single dimension.
	 ','line_number':1421,'multiline':True]
['text':'*
	 * Get the size of a {@link IView view}.
	 *
	 * @param location The {@link GridLocation location} of the view. Provide `undefined` to get
	 * the size of the grid itself.
	 ','line_number':1459,'multiline':True]
['text':'*
	 * Get the cached visible size of a {@link IView view}. This was the size
	 * of the view at the moment it last became hidden.
	 *
	 * @param location The {@link GridLocation location} of the view.
	 ','line_number':1474,'multiline':True]
['text':'*
	 * Maximize the size of a {@link IView view} by collapsing all other views
	 * to their minimum sizes.
	 *
	 * @param location The {@link GridLocation location} of the view.
	 ','line_number':1491,'multiline':True]
['text':'*
	 * Returns whether all other {@link IView views} are at their minimum size.
	 *
	 * @param location The {@link GridLocation location} of the view.
	 ','line_number':1513,'multiline':True]
['text':' No view can be expanded when a view is maximized','line_number':1520,'multiline':False]
['text':' When hiding a view, it's previous size is cached.','line_number':1578,'multiline':False]
['text':' To restore the sizes of all views, they need to be made visible in reverse order.','line_number':1579,'multiline':False]
['text':'*
	 * Returns whether the {@link IView view} is maximized.
	 *
	 * @param location The {@link GridLocation location} of the view.
	 ','line_number':1600,'multiline':True]
['text':'*
	 * Distribute the size among all {@link IView views} within the entire
	 * grid or within a single {@link SplitView}.
	 *
	 * @param location The {@link GridLocation location} of a view containing
	 * children views, which will have their sizes distributed within the parent
	 * view's size. Provide `undefined` to recursively distribute all views' sizes
	 * in the entire grid.
	 ','line_number':1613,'multiline':True]
['text':'*
	 * Returns whether a {@link IView view} is visible.
	 *
	 * @param location The {@link GridLocation location} of the view.
	 ','line_number':1642,'multiline':True]
['text':'*
	 * Set the visibility state of a {@link IView view}.
	 *
	 * @param location The {@link GridLocation location} of the view.
	 ','line_number':1658,'multiline':True]
['text':'*
	 * Returns a descriptor for the entire grid.
	 ','line_number':1679,'multiline':True]
['text':'*
	 * Returns a descriptor for a {@link GridLocation subtree} within the
	 * {@link GridView}.
	 *
	 * @param location The {@link GridLocation location} of the root of
	 * the {@link GridLocation subtree}.
	 ','line_number':1684,'multiline':True]
['text':'*
	 * Construct a new {@link GridView} from a JSON object.
	 *
	 * @param json The JSON object.
	 * @param deserializer A deserializer which can revive each view.
	 * @returns A new {@link GridView} instance.
	 ','line_number':1697,'multiline':True]
['text':'*
	 * Attempt to lock the {@link Sash sashes} in this {@link GridView} so
	 * the grid behaves as a 2x2 matrix, with a corner sash in the middle.
	 *
	 * In case the grid isn't a 2x2 grid _and_ all sashes are not aligned,
	 * this method is a no-op.
	 ','line_number':1791,'multiline':True]
['text':'*
	 * Populate a map with views to DOM nodes.
	 * @remarks To be used internally only.
	 ','line_number':1815,'multiline':True]
