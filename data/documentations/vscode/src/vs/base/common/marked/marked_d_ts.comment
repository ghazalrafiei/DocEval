['text':' Type definitions for Marked 4.0','line_number':1,'multiline':False]
['text':' Project: https://github.com/markedjs/marked, https://marked.js.org','line_number':2,'multiline':False]
['text':' Definitions by: William Orr <https://github.com/worr>','line_number':3,'multiline':False]
['text':'                 BendingBender <https://github.com/BendingBender>','line_number':4,'multiline':False]
['text':'                 CrossR <https://github.com/CrossR>','line_number':5,'multiline':False]
['text':'                 Mike Wickett <https://github.com/mwickett>','line_number':6,'multiline':False]
['text':'                 Hitomi Hatsukaze <https://github.com/htkzhtm>','line_number':7,'multiline':False]
['text':'                 Ezra Celli <https://github.com/ezracelli>','line_number':8,'multiline':False]
['text':'                 Romain LE BARO <https://github.com/scandinave>','line_number':9,'multiline':False]
['text':'                 Sarun Intaralawan <https://github.com/sarunint>','line_number':10,'multiline':False]
['text':'                 Tony Brix <https://github.com/UziTech>','line_number':11,'multiline':False]
['text':'                 Anatolii Titov <https://github.com/Toliak>','line_number':12,'multiline':False]
['text':'                 Jean-Francois Cere <https://github.com/jfcere>','line_number':13,'multiline':False]
['text':'                 Mykhaylo Stolyarchuk <https://github.com/MykSto>','line_number':14,'multiline':False]
['text':' Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped','line_number':15,'multiline':False]
['text':'*
 * Compiles markdown to HTML synchronously.
 *
 * @param src String of markdown source to be compiled
 * @param options Optional hash of options
 * @return String of compiled HTML
 ','line_number':17,'multiline':True]
['text':'*
 * Compiles markdown to HTML asynchronously.
 *
 * @param src String of markdown source to be compiled
 * @param callback Function called when the markdownString has been fully parsed when using async highlighting
 ','line_number':26,'multiline':True]
['text':'*
 * Compiles markdown to HTML asynchronously.
 *
 * @param src String of markdown source to be compiled
 * @param options Hash of options
 * @param callback Function called when the markdownString has been fully parsed when using async highlighting
 ','line_number':34,'multiline':True]
['text':'*
	 * @param src String of markdown source to be compiled
	 * @param options Hash of options
	 ','line_number':57,'multiline':True]
['text':'*
	 * Compiles markdown to HTML.
	 *
	 * @param src String of markdown source to be compiled
	 * @param callback Function called when the markdownString has been fully parsed when using async highlighting
	 * @return String of compiled HTML
	 ','line_number':63,'multiline':True]
['text':'*
	 * Compiles markdown to HTML.
	 *
	 * @param src String of markdown source to be compiled
	 * @param options Hash of options
	 * @param callback Function called when the markdownString has been fully parsed when using async highlighting
	 * @return String of compiled HTML
	 ','line_number':72,'multiline':True]
['text':'*
	 * @param src Tokenized source as array of tokens
	 * @param options Hash of options
	 ','line_number':82,'multiline':True]
['text':'*
	 * Compiles markdown to HTML without enclosing `p` tag.
	 *
	 * @param src String of markdown source to be compiled
	 * @param options Hash of options
	 * @return String of compiled HTML
	 ','line_number':88,'multiline':True]
['text':'*
	 * Sets the default options.
	 *
	 * @param options Hash of options
	 ','line_number':97,'multiline':True]
['text':'*
	 * Sets the default options.
	 *
	 * @param options Hash of options
	 ','line_number':104,'multiline':True]
['text':'*
	 * Gets the original marked default options.
	 ','line_number':111,'multiline':True]
['text':'*
	 * Use Extension
	 * @param MarkedExtension
	 ','line_number':118,'multiline':True]
['text':'*
		 * A prefix URL for any relative link.
		 ','line_number':482,'multiline':True]
['text':'*
		 * Enable GFM line breaks. This option requires the gfm option to be true.
		 ','line_number':487,'multiline':True]
['text':'*
		 * Add tokenizers and renderers to marked
		 ','line_number':492,'multiline':True]
['text':'*
		 * Enable GitHub flavored markdown.
		 ','line_number':499,'multiline':True]
['text':'*
		 * Include an id attribute when emitting headings.
		 ','line_number':504,'multiline':True]
['text':'*
		 * Set the prefix for header tag ids.
		 ','line_number':509,'multiline':True]
['text':'*
		 * A function to highlight code blocks. The function can either be
		 * synchronous (returning a string) or asynchronous (callback invoked
		 * with an error if any occurred during highlighting and a string
		 * if highlighting was successful)
		 ','line_number':514,'multiline':True]
['text':'*
		 * Set the prefix for code block classes.
		 ','line_number':522,'multiline':True]
['text':'*
		 * Mangle autolinks (<email@domain.com>).
		 ','line_number':527,'multiline':True]
['text':'*
		 * Conform to obscure parts of markdown.pl as much as possible. Don't fix any of the original markdown bugs or poor behavior.
		 ','line_number':532,'multiline':True]
['text':'*
		 * Type: object Default: new Renderer()
		 *
		 * An object containing functions to render tokens to HTML.
		 ','line_number':537,'multiline':True]
['text':'*
		 * Sanitize the output. Ignore any HTML that has been input.
		 ','line_number':544,'multiline':True]
['text':'*
		 * Optionally sanitize found HTML with a sanitizer function.
		 ','line_number':549,'multiline':True]
['text':'*
		 * Shows an HTML error message when rendering fails.
		 ','line_number':554,'multiline':True]
['text':'*
		 * Use smarter list behavior than the original markdown. May eventually be default with the old behavior moved into pedantic.
		 ','line_number':559,'multiline':True]
['text':'*
		 * Use "smart" typograhic punctuation for things like quotes and dashes.
		 ','line_number':564,'multiline':True]
['text':'*
		 * The tokenizer defines how to turn markdown text into tokens.
		 ','line_number':569,'multiline':True]
['text':'*
		 * The walkTokens function gets called with every token.
		 * Child tokens are called before moving on to sibling tokens.
		 * Each token is passed by reference so updates are persisted when passed to the parser.
		 * The return value of the function is ignored.
		 ','line_number':574,'multiline':True]
['text':'*
		 * Generate closing slash for self-closing tags (<br/> instead of <br>)
		 ','line_number':581,'multiline':True]
['text':'*
		 * Type: object Default: new Renderer()
		 *
		 * An object containing functions to render tokens to HTML.
		 ','line_number':588,'multiline':True]
['text':'*
		 * The tokenizer defines how to turn markdown text into tokens.
		 ','line_number':595,'multiline':True]
