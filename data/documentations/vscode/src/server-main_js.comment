['text':'---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------','line_number':1,'multiline':True]
['text':' @ts-check','line_number':6,'multiline':False]
['text':' @ts-ignore','line_number':15,'multiline':False]
['text':' Do a quick parse to determine if a server or the cli needs to be started','line_number':21,'multiline':False]
['text':'*
	 * @typedef { import('./vs/server/node/remoteExtensionHostAgentServer').IServerAPI } IServerAPI
	 ','line_number':48,'multiline':True]
['text':'* @type {IServerAPI | null} ','line_number':51,'multiline':True]
['text':'* @type {Promise<IServerAPI> | null} ','line_number':53,'multiline':True]
['text':'* @returns {Promise<IServerAPI>} ','line_number':55,'multiline':True]
['text':'* @type {string | import('net').AddressInfo | null} ','line_number':92,'multiline':True]
['text':' @ts-ignore','line_number':108,'multiline':False]
['text':' Do not change this line. VS Code looks for this in the output.','line_number':142,'multiline':False]
['text':' @ts-ignore','line_number':147,'multiline':False]
['text':'*
 * @param {any} val
 * @returns {string | undefined}
 ','line_number':160,'multiline':True]
['text':' if an argument is passed multiple times, minimist creates an array','line_number':165,'multiline':False]
['text':' take the last item','line_number':166,'multiline':False]
['text':'*
 * If `--port` is specified and describes a single port, connect to that port.
 *
 * If `--port`describes a port range
 * then find a free port in that range. Throw error if no
 * free port available in range.
 *
 * In absence of specified ports, connect to port 8000.
 * @param {string | undefined} host
 * @param {string | undefined} strPort
 * @returns {Promise<number>}
 * @throws
 ','line_number':171,'multiline':True]
['text':' Remote-SSH extension relies on this exact port error message, treat as an API','line_number':194,'multiline':False]
['text':'*
 * @param {string} strRange
 * @returns {{ start: number; end: number } | undefined}
 ','line_number':206,'multiline':True]
['text':'*
 * Starting at the `start` port, look for a free port incrementing
 * by 1 until `end` inclusive. If no free port is found, undefined is returned.
 *
 * @param {string | undefined} host
 * @param {number} start
 * @param {number} end
 * @returns {Promise<number | undefined>}
 * @throws
 ','line_number':221,'multiline':True]
['text':'* @type {number} ','line_number':232,'multiline':True]
['text':'* @returns { Promise<typeof import('./vs/server/node/server.main')> } ','line_number':251,'multiline':True]
['text':' Keep bootstrap-amd.js from redefining 'fs'.','line_number':256,'multiline':False]
['text':' See https://github.com/microsoft/vscode-remote-release/issues/6543','line_number':258,'multiline':False]
['text':' We would normally install a SIGPIPE listener in bootstrap.js','line_number':259,'multiline':False]
['text':' But in certain situations, the console itself can be in a broken pipe state','line_number':260,'multiline':False]
['text':' so logging SIGPIPE to the console will cause an infinite async loop','line_number':261,'multiline':False]
['text':' When running out of sources, we need to load node modules from remote/node_modules,','line_number':265,'multiline':False]
['text':' which are compiled against nodejs, not electron','line_number':266,'multiline':False]
['text':' Via https://twitter.com/MylesBorins/status/782009479382626304','line_number':278,'multiline':False]
['text':' Windows workaround for https://github.com/nodejs/node/issues/11656','line_number':280,'multiline':False]
['text':'*
 * @param {string} question
 * @returns { Promise<boolean> }
 ','line_number':285,'multiline':True]
