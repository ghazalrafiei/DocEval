['text':'---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------','line_number':1,'multiline':True]
['text':' we know it's not stylesheet due to the validate(false) call above','line_number':44,'multiline':False]
['text':' wrap around the node if the selection falls inside its open or close tag','line_number':52,'multiline':False]
['text':' in case of multi-line, exclude last empty line from rangeToReplace','line_number':76,'multiline':False]
['text':' wrap line the cursor is on','line_number':81,'multiline':False]
['text':' ignore whitespace on the first line','line_number':86,'multiline':False]
['text':' Merge overlapping ranges','line_number':94,'multiline':False]
['text':' Backup orginal selections and update selections','line_number':103,'multiline':False]
['text':' Also helps with https://github.com/microsoft/vscode/issues/113930 by avoiding `editor.linkedEditing`','line_number':104,'multiline':False]
['text':' execution if selection is inside an open or close tag','line_number':105,'multiline':False]
['text':' Fetch general information for the succesive expansions. i.e. the ranges to replace and its contents','line_number':109,'multiline':False]
['text':' the following assumes all the lines are indented the same way as the first','line_number':114,'multiline':False]
['text':' this assumption helps with applyPreview later','line_number':115,'multiline':False]
['text':' escape $ characters, fixes #52640','line_number':123,'multiline':False]
['text':' the edits are applied in order top-down','line_number':153,'multiline':False]
['text':' Failed to expand text. We already showed an error inside expandAbbr.','line_number':157,'multiline':False]
['text':' get the current preview range, format the new wrapped text, and then replace','line_number':161,'multiline':False]
['text':' the text in the preview range with that new text','line_number':162,'multiline':False]
['text':' Removing Tabstops','line_number':165,'multiline':False]
['text':' Replacing Placeholders','line_number':166,'multiline':False]
['text':' Remove backslashes before $','line_number':167,'multiline':False]
['text':' calculate the new preview range to use for future previews','line_number':170,'multiline':False]
['text':' we also have to take into account that the previous expansions could:','line_number':171,'multiline':False]
['text':' - cause new lines to appear','line_number':172,'multiline':False]
['text':' - be on the same line as other expansions','line_number':173,'multiline':False]
['text':' If newPreviewLineEnd is equal to the previous expandedText lineEnd,','line_number':183,'multiline':False]
['text':' set newPreviewStart to the length of the previous expandedText in that line','line_number':184,'multiline':False]
['text':' plus the number of characters between both selections.','line_number':185,'multiline':False]
['text':' Same as above but expandedTextLines.length > 1 so newPreviewEnd keeps its value.','line_number':189,'multiline':False]
['text':' If the expandedText is single line, add the length of preceeding text as it will not be included in line length.','line_number':192,'multiline':False]
['text':' Not clear what should we do in this case. Warn the user? How?','line_number':218,'multiline':False]
['text':'*
	 * Short circuit the parsing. If previous character is space, do not expand.
	 ','line_number':269,'multiline':True]
['text':' When tabbed on a non empty selection, do not treat it as an emmet abbreviation, and fallback to tab instead','line_number':303,'multiline':False]
['text':' Expand cases like <div to <div></div> explicitly','line_number':328,'multiline':False]
['text':' else we will end up with <<div></div>','line_number':329,'multiline':False]
['text':' Fix for https://github.com/Microsoft/vscode/issues/1623','line_number':380,'multiline':False]
['text':'*
 * Checks if given position is a valid location to expand emmet abbreviation.
 * Works only on html and css/less/scss syntax
 * @param document current Text Document
 * @param rootNode parsed document
 * @param currentNode current node in the parsed document
 * @param syntax syntax of the abbreviation
 * @param position position to validate
 * @param abbreviationRange The range of the abbreviation for which given position is being validated
 ','line_number':426,'multiline':True]
['text':' Continue validation only if the file was parse-able and the currentNode has been found','line_number':442,'multiline':False]
['text':' Get the abbreviation right now','line_number':447,'multiline':False]
['text':' Fixes https://github.com/microsoft/vscode/issues/74505','line_number':448,'multiline':False]
['text':' Stylesheet abbreviations starting with @ should bring up suggestions','line_number':449,'multiline':False]
['text':' even at outer-most level','line_number':450,'multiline':False]
['text':' Fix for https://github.com/microsoft/vscode/issues/34162','line_number':456,'multiline':False]
['text':' Other than sass, stylus, we can make use of the terminator tokens to validate position','line_number':457,'multiline':False]
['text':' Fix for upstream issue https://github.com/emmetio/css-parser/issues/3','line_number':459,'multiline':False]
['text':' If current node is a rule or at-rule, then perform additional checks to ensure','line_number':485,'multiline':False]
['text':' emmet suggestions are not provided in the rule selector','line_number':486,'multiline':False]
['text':' Position is valid if it occurs after the `{` that marks beginning of rule contents','line_number':493,'multiline':False]
['text':' Workaround for https://github.com/microsoft/vscode/30188','line_number':498,'multiline':False]
['text':' The line above the rule selector is considered as part of the selector by the css-parser','line_number':499,'multiline':False]
['text':' But we should assume it is a valid location for css properties under the parent rule','line_number':500,'multiline':False]
['text':' Fix for https://github.com/microsoft/vscode/issues/28829','line_number':541,'multiline':False]
['text':' Fix for https://github.com/microsoft/vscode/issues/35128','line_number':547,'multiline':False]
['text':' Find the position up till where we will backtrack looking for unescaped < or >','line_number':548,'multiline':False]
['text':' to decide if current position is valid for emmet expansion','line_number':549,'multiline':False]
['text':' Worse case scenario is when cursor is inside a big chunk of text which needs to backtracked','line_number':563,'multiline':False]
['text':' Backtrack only 500 offsets to ensure we dont waste time doing this','line_number':564,'multiline':False]
['text':' If < is found before finding whitespace, then its valid abbreviation. E.g.: <div|','line_number':574,'multiline':False]
['text':' Fix for https://github.com/microsoft/vscode/issues/55411','line_number':591,'multiline':False]
['text':' A space is not a valid character right after < in a tag name.','line_number':592,'multiline':False]
['text':' False alarm of cases like =>','line_number':606,'multiline':False]
['text':'*
 * Expands abbreviations as detailed in expandAbbrList in the editor
 *
 * @returns false if no snippet can be inserted.
 ','line_number':620,'multiline':True]
['text':' Snippet to replace at multiple cursors are not the same','line_number':630,'multiline':False]
['text':' `editor.insertSnippet` will have to be called for each instance separately','line_number':631,'multiline':False]
['text':' We will not be able to maintain multiple cursors after snippet insertion','line_number':632,'multiline':False]
['text':' Snippet to replace at all cursors are the same','line_number':646,'multiline':False]
['text':' We can pass all ranges to `editor.insertSnippet` in a single call so that','line_number':647,'multiline':False]
['text':' all cursors are maintained after snippet insertion','line_number':648,'multiline':False]
['text':'*
 * Expands abbreviation as detailed in given input.
 ','line_number':658,'multiline':True]
['text':' escape ${ sections, fixes #122231','line_number':666,'multiline':False]
['text':' Below fixes https://github.com/microsoft/vscode/issues/29898','line_number':676,'multiline':False]
['text':' With this, Emmet formats inline elements as block elements','line_number':677,'multiline':False]
['text':' ensuring the wrapped multi line text does not get merged to a single line','line_number':678,'multiline':False]
