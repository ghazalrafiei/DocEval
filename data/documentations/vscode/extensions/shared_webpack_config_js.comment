['text':'---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------','line_number':1,'multiline':True]
['text':'@ts-check','line_number':6,'multiline':False]
['text':'* @typedef {import('webpack').Configuration} WebpackConfig *','line_number':7,'multiline':True]
['text':'*@type WebpackConfig & { context: string }','line_number':25,'multiline':True]
['text':' this leaves the source code as close as possible to the original (when packaging we set this to 'production')','line_number':27,'multiline':False]
['text':' extensions run in a node context','line_number':28,'multiline':False]
['text':' leave the __dirname-behaviour intact','line_number':30,'multiline':False]
['text':' support ts-files and js-files','line_number':36,'multiline':False]
['text':' vscode-nls-dev loader:','line_number':43,'multiline':False]
['text':' * rewrite nls-calls','line_number':44,'multiline':False]
['text':' configure TypeScript loader:','line_number':50,'multiline':False]
['text':' * enable sources maps for end-to-end source maps','line_number':51,'multiline':False]
['text':' ignored because it doesn't exist,','line_number':63,'multiline':False]
['text':' ignored because we don't ship native module','line_number':64,'multiline':False]
['text':' optioinal dependency of appinsights that we don't use','line_number':65,'multiline':False]
['text':' ignored because we don't ship this module','line_number':66,'multiline':False]
['text':' ignored because we don't ship this module','line_number':67,'multiline':False]
['text':' ignored because we don't ship this module','line_number':68,'multiline':False]
['text':' all output goes into `dist`.','line_number':71,'multiline':False]
['text':' packaging depends on that and this must always be like it','line_number':72,'multiline':False]
['text':' yes, really source maps','line_number':77,'multiline':False]
['text':'*
 *
 * @param {string} context
 ','line_number':85,'multiline':True]
['text':' Need to find the top-most `package.json` file','line_number':90,'multiline':False]
['text':'*
 * @typedef {{
 * 	configFile?: string
 * }} AdditionalBrowserConfig
 ','line_number':104,'multiline':True]
['text':'*@type WebpackConfig & { context: string }','line_number':110,'multiline':True]
['text':'* @type AdditionalBrowserConfig ','line_number':110,'multiline':True]
['text':'* @type WebpackConfig ','line_number':111,'multiline':True]
['text':' this leaves the source code as close as possible to the original (when packaging we set this to 'production')','line_number':113,'multiline':False]
['text':' extensions run in a webworker context','line_number':114,'multiline':False]
['text':' support ts-files and js-files','line_number':117,'multiline':False]
['text':' configure TypeScript loader:','line_number':129,'multiline':False]
['text':' * enable sources maps for end-to-end source maps','line_number':130,'multiline':False]
['text':' ignored because it doesn't exist,','line_number':150,'multiline':False]
['text':' ignored because we don't ship native module','line_number':151,'multiline':False]
['text':' optioinal dependency of appinsights that we don't use','line_number':152,'multiline':False]
['text':' ignored because we don't ship this module','line_number':153,'multiline':False]
['text':' ignored because we don't ship this module','line_number':154,'multiline':False]
['text':' ignored because we don't ship this module','line_number':155,'multiline':False]
['text':' all output goes into `dist`.','line_number':161,'multiline':False]
['text':' packaging depends on that and this must always be like it','line_number':162,'multiline':False]
['text':' yes, really source maps','line_number':167,'multiline':False]
['text':'*
 *
 * @param {string} context
 ','line_number':175,'multiline':True]
['text':' Need to find the top-most `package.json` file','line_number':180,'multiline':False]
['text':' const folderName = path.relative(__dirname, context).split(/[\\\/]/)[0];','line_number':181,'multiline':False]
['text':' const pkgPath = path.join(__dirname, folderName, 'package.json');','line_number':182,'multiline':False]
['text':' const pkg = JSON.parse(fs.readFileSync(pkgPath, 'utf8'));','line_number':183,'multiline':False]
['text':' const id = `${pkg.publisher}.${pkg.name}`;','line_number':184,'multiline':False]
['text':' TODO: bring this back once vscode-nls-dev supports browser','line_number':199,'multiline':False]
['text':' new NLSBundlePlugin(id)','line_number':200,'multiline':False]
