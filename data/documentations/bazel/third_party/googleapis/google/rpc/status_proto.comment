['text':' Copyright 2016 Google Inc.','line_number':1,'multiline':False]
['text':'','line_number':2,'multiline':False]
['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':3,'multiline':False]
['text':' you may not use this file except in compliance with the License.','line_number':4,'multiline':False]
['text':' You may obtain a copy of the License at','line_number':5,'multiline':False]
['text':'','line_number':6,'multiline':False]
['text':'     http://www.apache.org/licenses/LICENSE-2.0','line_number':7,'multiline':False]
['text':'','line_number':8,'multiline':False]
['text':' Unless required by applicable law or agreed to in writing, software','line_number':9,'multiline':False]
['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':10,'multiline':False]
['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':11,'multiline':False]
['text':' See the License for the specific language governing permissions and','line_number':12,'multiline':False]
['text':' limitations under the License.','line_number':13,'multiline':False]
['text':' The `Status` type defines a logical error model that is suitable for different','line_number':28,'multiline':False]
['text':' programming environments, including REST APIs and RPC APIs. It is used by','line_number':29,'multiline':False]
['text':' [gRPC](https://github.com/grpc). The error model is designed to be:','line_number':30,'multiline':False]
['text':'','line_number':31,'multiline':False]
['text':' - Simple to use and understand for most users','line_number':32,'multiline':False]
['text':' - Flexible enough to meet unexpected needs','line_number':33,'multiline':False]
['text':'','line_number':34,'multiline':False]
['text':' # Overview','line_number':35,'multiline':False]
['text':'','line_number':36,'multiline':False]
['text':' The `Status` message contains three pieces of data: error code, error message,','line_number':37,'multiline':False]
['text':' and error details. The error code should be an enum value of','line_number':38,'multiline':False]
['text':' [google.rpc.Code][google.rpc.Code], but it may accept additional error codes if needed.  The','line_number':39,'multiline':False]
['text':' error message should be a developer-facing English message that helps','line_number':40,'multiline':False]
['text':' developers *understand* and *resolve* the error. If a localized user-facing','line_number':41,'multiline':False]
['text':' error message is needed, put the localized message in the error details or','line_number':42,'multiline':False]
['text':' localize it in the client. The optional error details may contain arbitrary','line_number':43,'multiline':False]
['text':' information about the error. There is a predefined set of error detail types','line_number':44,'multiline':False]
['text':' in the package `google.rpc` which can be used for common error conditions.','line_number':45,'multiline':False]
['text':'','line_number':46,'multiline':False]
['text':' # Language mapping','line_number':47,'multiline':False]
['text':'','line_number':48,'multiline':False]
['text':' The `Status` message is the logical representation of the error model, but it','line_number':49,'multiline':False]
['text':' is not necessarily the actual wire format. When the `Status` message is','line_number':50,'multiline':False]
['text':' exposed in different client libraries and different wire protocols, it can be','line_number':51,'multiline':False]
['text':' mapped differently. For example, it will likely be mapped to some exceptions','line_number':52,'multiline':False]
['text':' in Java, but more likely mapped to some error codes in C.','line_number':53,'multiline':False]
['text':'','line_number':54,'multiline':False]
['text':' # Other uses','line_number':55,'multiline':False]
['text':'','line_number':56,'multiline':False]
['text':' The error model and the `Status` message can be used in a variety of','line_number':57,'multiline':False]
['text':' environments, either with or without APIs, to provide a','line_number':58,'multiline':False]
['text':' consistent developer experience across different environments.','line_number':59,'multiline':False]
['text':'','line_number':60,'multiline':False]
['text':' Example uses of this error model include:','line_number':61,'multiline':False]
['text':'','line_number':62,'multiline':False]
['text':' - Partial errors. If a service needs to return partial errors to the client,','line_number':63,'multiline':False]
['text':'     it may embed the `Status` in the normal response to indicate the partial','line_number':64,'multiline':False]
['text':'     errors.','line_number':65,'multiline':False]
['text':'','line_number':66,'multiline':False]
['text':' - Workflow errors. A typical workflow has multiple steps. Each step may','line_number':67,'multiline':False]
['text':'     have a `Status` message for error reporting purpose.','line_number':68,'multiline':False]
['text':'','line_number':69,'multiline':False]
['text':' - Batch operations. If a client uses batch request and batch response, the','line_number':70,'multiline':False]
['text':'     `Status` message should be used directly inside batch response, one for','line_number':71,'multiline':False]
['text':'     each error sub-response.','line_number':72,'multiline':False]
['text':'','line_number':73,'multiline':False]
['text':' - Asynchronous operations. If an API call embeds asynchronous operation','line_number':74,'multiline':False]
['text':'     results in its response, the status of those operations should be','line_number':75,'multiline':False]
['text':'     represented directly using the `Status` message.','line_number':76,'multiline':False]
['text':'','line_number':77,'multiline':False]
['text':' - Logging. If some API errors are stored in logs, the message `Status` could','line_number':78,'multiline':False]
['text':'     be used directly after any stripping needed for security/privacy reasons.','line_number':79,'multiline':False]
['text':' The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].','line_number':81,'multiline':False]
['text':' A developer-facing error message, which should be in English. Any','line_number':84,'multiline':False]
['text':' user-facing error message should be localized and sent in the','line_number':85,'multiline':False]
['text':' [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.','line_number':86,'multiline':False]
['text':' A list of messages that carry the error details.  There will be a','line_number':89,'multiline':False]
['text':' common set of message types for APIs to use.','line_number':90,'multiline':False]
