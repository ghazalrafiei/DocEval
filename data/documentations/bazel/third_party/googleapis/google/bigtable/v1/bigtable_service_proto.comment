['text':' Copyright 2016 Google Inc.','line_number':1,'multiline':False]
['text':'','line_number':2,'multiline':False]
['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':3,'multiline':False]
['text':' you may not use this file except in compliance with the License.','line_number':4,'multiline':False]
['text':' You may obtain a copy of the License at','line_number':5,'multiline':False]
['text':'','line_number':6,'multiline':False]
['text':'     http://www.apache.org/licenses/LICENSE-2.0','line_number':7,'multiline':False]
['text':'','line_number':8,'multiline':False]
['text':' Unless required by applicable law or agreed to in writing, software','line_number':9,'multiline':False]
['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':10,'multiline':False]
['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':11,'multiline':False]
['text':' See the License for the specific language governing permissions and','line_number':12,'multiline':False]
['text':' limitations under the License.','line_number':13,'multiline':False]
['text':' Service for reading from and writing to existing Bigtables.','line_number':31,'multiline':False]
['text':' Streams back the contents of all requested rows, optionally applying','line_number':33,'multiline':False]
['text':' the same Reader filter to each. Depending on their size, rows may be','line_number':34,'multiline':False]
['text':' broken up across multiple responses, but atomicity of each row will still','line_number':35,'multiline':False]
['text':' be preserved.','line_number':36,'multiline':False]
['text':' Returns a sample of row keys in the table. The returned row keys will','line_number':41,'multiline':False]
['text':' delimit contiguous sections of the table of approximately equal size,','line_number':42,'multiline':False]
['text':' which can be used to break up the data for distributed tasks like','line_number':43,'multiline':False]
['text':' mapreduces.','line_number':44,'multiline':False]
['text':' Mutates a row atomically. Cells already present in the row are left','line_number':49,'multiline':False]
['text':' unchanged unless explicitly changed by 'mutation'.','line_number':50,'multiline':False]
['text':' Mutates multiple rows in a batch. Each individual row is mutated','line_number':55,'multiline':False]
['text':' atomically as in MutateRow, but the entire batch is not executed','line_number':56,'multiline':False]
['text':' atomically.','line_number':57,'multiline':False]
['text':' Mutates a row atomically based on the output of a predicate Reader filter.','line_number':62,'multiline':False]
['text':' Modifies a row atomically, reading the latest existing timestamp/value from','line_number':67,'multiline':False]
['text':' the specified columns and writing a new value at','line_number':68,'multiline':False]
['text':' max(existing timestamp, current server time) based on pre-defined','line_number':69,'multiline':False]
['text':' read/modify/write rules. Returns the new contents of all modified cells.','line_number':70,'multiline':False]
