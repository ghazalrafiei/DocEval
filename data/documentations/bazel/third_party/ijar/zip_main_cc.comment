['text':' Copyright 2015 The Bazel Authors. All rights reserved.','line_number':1,'multiline':False]
['text':'','line_number':2,'multiline':False]
['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':3,'multiline':False]
['text':' you may not use this file except in compliance with the License.','line_number':4,'multiline':False]
['text':' You may obtain a copy of the License at','line_number':5,'multiline':False]
['text':'','line_number':6,'multiline':False]
['text':'    http://www.apache.org/licenses/LICENSE-2.0','line_number':7,'multiline':False]
['text':'','line_number':8,'multiline':False]
['text':' Unless required by applicable law or agreed to in writing, software','line_number':9,'multiline':False]
['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':10,'multiline':False]
['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':11,'multiline':False]
['text':' See the License for the specific language governing permissions and','line_number':12,'multiline':False]
['text':' limitations under the License.','line_number':13,'multiline':False]
['text':'','line_number':15,'multiline':False]
['text':' Zip / Unzip file using ijar zip implementation.','line_number':16,'multiline':False]
['text':'','line_number':17,'multiline':False]
['text':' Note that this Zip implementation intentionally don't compute CRC-32','line_number':18,'multiline':False]
['text':' because it is useless computation for jar because Java doesn't care.','line_number':19,'multiline':False]
['text':' CRC-32 of all files in the zip file will be set to 0.','line_number':20,'multiline':False]
['text':'','line_number':21,'multiline':False]
['text':'','line_number':39,'multiline':False]
['text':' A ZipExtractorProcessor that extract files in the ZIP file.','line_number':40,'multiline':False]
['text':'','line_number':41,'multiline':False]
['text':' Create a processor who will extract the given files (or all files if NULL)','line_number':44,'multiline':False]
['text':' into output_root if "extract" is set to true and will print the list of','line_number':45,'multiline':False]
['text':' files and their unix modes if "verbose" is set to true.','line_number':46,'multiline':False]
['text':' All entry files are accepted by default.','line_number':65,'multiline':False]
['text':' If users have specified file entries, only accept those files.','line_number':69,'multiline':False]
['text':' Concatene 2 path, path1 and path2, using / as a directory separator and','line_number':82,'multiline':False]
['text':' putting the result in "out". "size" specify the size of the output buffer. If','line_number':83,'multiline':False]
['text':' the result would overflow the output buffer, print an error message and','line_number':84,'multiline':False]
['text':' return false.','line_number':85,'multiline':False]
['text':' Fallback when the external attribute is not set.','line_number':111,'multiline':False]
['text':' Get the basename of path and store it in output. output_size','line_number':139,'multiline':False]
['text':' is the size of the output buffer.','line_number':140,'multiline':False]
['text':' Skip the leading slash.','line_number':146,'multiline':False]
['text':' Execute the extraction (or just listing if just v is provided)','line_number':152,'multiline':False]
['text':' add a file to the zip','line_number':188,'multiline':False]
['text':' Compute the path, flattening it if requested','line_number':206,'multiline':False]
['text':' Add the trailing slash for folders','line_number':219,'multiline':False]
['text':' Read a list of files separated by newlines. The resulting array can be','line_number':242,'multiline':False]
['text':' freed using the free method.','line_number':243,'multiline':False]
['text':' copy the content','line_number':269,'multiline':False]
['text':' Create the corresponding array','line_number':275,'multiline':False]
['text':' return real paths of the files','line_number':291,'multiline':False]
['text':' no need to free since the path lists should live until the end of the','line_number':294,'multiline':False]
['text':' program','line_number':295,'multiline':False]
['text':' Execute the create operation','line_number':326,'multiline':False]
['text':' namespace devtools_ijar','line_number':363,'multiline':False]
['text':'','line_number':365,'multiline':False]
['text':' main method','line_number':366,'multiline':False]
['text':'','line_number':367,'multiline':False]
['text':' x and c cannot be used in the same command-line.','line_number':432,'multiline':False]
['text':' Calculate the argument index of the first entry file.','line_number':437,'multiline':False]
['text':' We have one option file. Read and extract the content.','line_number':447,'multiline':False]
['text':' We have more than one files. Assume that they are all file entries.','line_number':457,'multiline':False]
['text':' There are no entry files specified. This is forbidden if we are creating','line_number':461,'multiline':False]
['text':' a zip file.','line_number':462,'multiline':False]
['text':' Create a zip','line_number':470,'multiline':False]
['text':' Extraction / list mode','line_number':478,'multiline':False]
