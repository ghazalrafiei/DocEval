['text':'!/bin/bash -eu','line_number':1,'multiline':False]
['text':'','line_number':2,'multiline':False]
['text':' Copyright 2015 The Bazel Authors. All rights reserved.','line_number':3,'multiline':False]
['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':4,'multiline':False]
['text':' you may not use this file except in compliance with the License.','line_number':5,'multiline':False]
['text':' You may obtain a copy of the License at','line_number':6,'multiline':False]
['text':'','line_number':7,'multiline':False]
['text':'    http://www.apache.org/licenses/LICENSE-2.0','line_number':8,'multiline':False]
['text':'','line_number':9,'multiline':False]
['text':' Unless required by applicable law or agreed to in writing, software','line_number':10,'multiline':False]
['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':11,'multiline':False]
['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':12,'multiline':False]
['text':' See the License for the specific language governing permissions and','line_number':13,'multiline':False]
['text':' TODO(bazel-team) test that modifying the source in a non-interface','line_number':15,'multiline':False]
['text':'   changing way results in the same -interface.jar.','line_number':16,'multiline':False]
['text':'# Inputs','line_number':20,'multiline':False]
['text':'# Test framework','line_number':38,'multiline':False]
['text':'# Tools','line_number':47,'multiline':False]
['text':' Ensure that tooling path is absolute if not in PATH.','line_number':48,'multiline':False]
['text':'### Setup','line_number':91,'multiline':False]
['text':' set_file_length FILE SIZE','line_number':93,'multiline':False]
['text':'','line_number':94,'multiline':False]
['text':' Sets the file size for FILE, truncating if necessary, creating a','line_number':95,'multiline':False]
['text':' sparse file if possible, preserving original contents if they fit.','line_number':96,'multiline':False]
['text':' check_consistent_file_contents FILE','line_number':103,'multiline':False]
['text':'','line_number':104,'multiline':False]
['text':' Checks that all files created with the given filename have identical contents.','line_number':105,'multiline':False]
['text':'### Tests','line_number':130,'multiline':False]
['text':' Tests that ijar does not crash when output ijar is bigger than the input jar','line_number':132,'multiline':False]
['text':' Check that the interface jar is bigger than the original jar.','line_number':140,'multiline':False]
['text':' Tests that ijar can handle class bodies longer than 64K','line_number':147,'multiline':False]
['text':' First, generate the input file','line_number':148,'multiline':False]
['text':' Test ijar calls','line_number':160,'multiline':False]
['text':' Check that ijar can produce class files with a body longer than 64K by','line_number':167,'multiline':False]
['text':' calling ijar itself on the output file to make sure that it is valid','line_number':168,'multiline':False]
['text':' Numerous check on the output created by ijar.','line_number':175,'multiline':False]
['text':' Compiles A.java, builds A.jar and A-interface.jar','line_number':177,'multiline':False]
['text':' Check that the number of entries is 5:','line_number':183,'multiline':False]
['text':'  A, A.PrivateInner, A.PublicInner, A.MyAnnotation,','line_number':184,'multiline':False]
['text':'  A.RuntimeAnnotation','line_number':185,'multiline':False]
['text':' (Note: even private inner classes are retained, so we don't need to change','line_number':186,'multiline':False]
['text':' the types of members.)','line_number':187,'multiline':False]
['text':' Check that no private class members are found:','line_number':193,'multiline':False]
['text':' Check that no code is found:','line_number':202,'multiline':False]
['text':' Check that constants from code are no longer present:','line_number':208,'multiline':False]
['text':' Check (important, this!) that the interface jar is still sufficient','line_number':215,'multiline':False]
['text':' for compiling:','line_number':216,'multiline':False]
['text':' Test compilation of B yielded deprecation message:','line_number':220,'multiline':False]
['text':' Run the dynamic checks in B.main().','line_number':224,'multiline':False]
['text':' Check idempotence of ijar transformation:','line_number':227,'multiline':False]
['text':' Check that -interface.jar contains nothing but .class files:','line_number':234,'multiline':False]
['text':' Check that -interface.jar timestamps are normalized:','line_number':239,'multiline':False]
['text':' Check that compile-time constants in A are still annotated as such in ijar:','line_number':245,'multiline':False]
['text':' Check that a jar compressed with zip results in the same interface jar as a','line_number':250,'multiline':False]
['text':' jar compressed with jar','line_number':251,'multiline':False]
['text':' Compiles A.java, builds A.jar and A-interface.jar','line_number':266,'multiline':False]
['text':' First a check without large file to have something to compare to.','line_number':270,'multiline':False]
['text':' Then create larges files','line_number':277,'multiline':False]
['text':' Ensure input files larger than INITIAL_BUFFER_SIZE work.','line_number':297,'multiline':False]
['text':' TODO(martinrb): remove maximum .class file size limit (MAX_BUFFER_SIZE)','line_number':298,'multiline':False]
['text':' Create a huge (~2.2Gb) input jar to test "large file" correctness','line_number':304,'multiline':False]
['text':' This is slow because only writing a 2.2Gb file on a SSD drive is >10s and','line_number':306,'multiline':False]
['text':' jaring it takes >16s.','line_number':307,'multiline':False]
['text':' The z letter in the function name is to ensure that method is last in the','line_number':308,'multiline':False]
['text':' method list so it has more chance to be alone on a shard.','line_number':309,'multiline':False]
['text':' Create an output jar with upper bound on size > 2GB','line_number':313,'multiline':False]
['text':' Regression test for jar file without classes (javac doesn't like an empty ijar).','line_number':329,'multiline':False]
['text':' Check that a JAR file can be parsed even if the central directory file count','line_number':343,'multiline':False]
['text':' is wrong','line_number':344,'multiline':False]
['text':' Check that constant pool references used by JSR308 type annotations are','line_number':353,'multiline':False]
['text':' preserved','line_number':354,'multiline':False]
['text':' Check that ijar works on classes with invokedynamic','line_number':364,'multiline':False]
['text':' Check that Object.class can be processed','line_number':373,'multiline':False]
['text':' Check that the tool detects and reports a corrupted end of central directory','line_number':383,'multiline':False]
['text':' record condition','line_number':384,'multiline':False]
['text':' First make the jar one byte longer','line_number':387,'multiline':False]
['text':' Show on the log that we expect failure.','line_number':391,'multiline':False]
['text':' Then make the jar one byte shorter than the original one','line_number':396,'multiline':False]
['text':' Check that Java 8 MethodParameters attributes are preserved','line_number':520,'multiline':False]
['text':' Check that Java 11 NestMates attributes are preserved','line_number':535,'multiline':False]
['text':' Check that Java 16 Records attributes are preserved','line_number':550,'multiline':False]
['text':' Check that Java 16 PermittedSubclasses attributes are preserved','line_number':561,'multiline':False]
['text':' Check that SourceDebugExtension attributes are dropped without a warning','line_number':570,'multiline':False]
