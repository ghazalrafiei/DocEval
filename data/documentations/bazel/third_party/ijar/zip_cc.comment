['text':' Copyright 2015 The Bazel Authors. All rights reserved.','line_number':1,'multiline':False]
['text':'','line_number':2,'multiline':False]
['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':3,'multiline':False]
['text':' you may not use this file except in compliance with the License.','line_number':4,'multiline':False]
['text':' You may obtain a copy of the License at','line_number':5,'multiline':False]
['text':'','line_number':6,'multiline':False]
['text':'    http://www.apache.org/licenses/LICENSE-2.0','line_number':7,'multiline':False]
['text':'','line_number':8,'multiline':False]
['text':' Unless required by applicable law or agreed to in writing, software','line_number':9,'multiline':False]
['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':10,'multiline':False]
['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':11,'multiline':False]
['text':' See the License for the specific language governing permissions and','line_number':12,'multiline':False]
['text':' limitations under the License.','line_number':13,'multiline':False]
['text':'','line_number':14,'multiline':False]
['text':' zip.cc -- .zip (.jar) file reading/writing routines.','line_number':15,'multiline':False]
['text':'','line_number':16,'multiline':False]
['text':' See README.txt for details.','line_number':18,'multiline':False]
['text':'','line_number':19,'multiline':False]
['text':' See http://www.pkware.com/documents/casestudies/APPNOTE.TXT','line_number':20,'multiline':False]
['text':' for definition of PKZIP file format.','line_number':21,'multiline':False]
['text':' Support zip files larger than 2GB','line_number':23,'multiline':False]
['text':' zip64 eocd is fixed size in the absence of a zip64 extensible data sector','line_number':56,'multiline':False]
['text':' version to extract: 1.0 - default value from APPNOTE.TXT.','line_number':59,'multiline':False]
['text':' Output JAR files contain no extra ZIP features, so this is enough.','line_number':60,'multiline':False]
['text':' no compression','line_number':62,'multiline':False]
['text':' In the absence of ZIP64 support, zip files are limited to 4GB.','line_number':74,'multiline':False]
['text':' http://www.info-zip.org/FAQ.html#limits','line_number':75,'multiline':False]
['text':' January 1, 2010 in DOS time','line_number':79,'multiline':False]
['text':'','line_number':81,'multiline':False]
['text':' A class representing a ZipFile for reading. Its public API is exposed','line_number':82,'multiline':False]
['text':' using the ZipExtractor abstract class.','line_number':83,'multiline':False]
['text':'','line_number':84,'multiline':False]
['text':' InputZipFile is responsible for maintaining the following','line_number':116,'multiline':False]
['text':' pointers. They are allocated by the Create() method before','line_number':117,'multiline':False]
['text':' the object is actually created using mmap.','line_number':118,'multiline':False]
['text':' start of input file mmap','line_number':119,'multiline':False]
['text':' bytes that have already been unmapped','line_number':120,'multiline':False]
['text':' central directory in input file','line_number':121,'multiline':False]
['text':' offset  the input file','line_number':123,'multiline':False]
['text':' input cursor','line_number':125,'multiline':False]
['text':' central dir input cursor','line_number':127,'multiline':False]
['text':' Buffer size is initially INITIAL_BUFFER_SIZE. It doubles in size every','line_number':129,'multiline':False]
['text':' time it is found too small, until it reaches MAX_BUFFER_SIZE. If that is','line_number':130,'multiline':False]
['text':' not enough, we bail out. We only decompress class files, so they should','line_number':131,'multiline':False]
['text':' be smaller than 64K anyway, but we give a little leeway.','line_number':132,'multiline':False]
['text':' MAX_BUFFER_SIZE must be bigger than the size of the biggest file in the','line_number':133,'multiline':False]
['text':' ZIP. It is set to 2GB here because no one has audited the code for 64-bit','line_number':134,'multiline':False]
['text':' cleanliness.','line_number':135,'multiline':False]
['text':' 256K','line_number':136,'multiline':False]
['text':' These metadata fields are the fields of the ZIP header of the file being','line_number':140,'multiline':False]
['text':' processed.','line_number':141,'multiline':False]
['text':' Copy of the last filename entry - Null-terminated.','line_number':152,'multiline':False]
['text':' The external file attribute field','line_number':154,'multiline':False]
['text':' last error','line_number':157,'multiline':False]
['text':' Check that at least n bytes remain in the input file, otherwise','line_number':170,'multiline':False]
['text':' abort with an error message.  "state" is the name of the field','line_number':171,'multiline':False]
['text':' we're about to read, for diagnostics.','line_number':172,'multiline':False]
['text':' Read one entry from input zip file','line_number':184,'multiline':False]
['text':' Uncompress a file from the archive using zlib. The pointer returned','line_number':187,'multiline':False]
['text':' is owned by InputZipFile, so it must not be freed. Advances the input','line_number':188,'multiline':False]
['text':' cursor to the first byte after the compressed data.','line_number':189,'multiline':False]
['text':' Skip a file','line_number':192,'multiline':False]
['text':' Process a file','line_number':195,'multiline':False]
['text':'','line_number':199,'multiline':False]
['text':' A class implementing ZipBuilder that represent an open zip file for writing.','line_number':200,'multiline':False]
['text':'','line_number':201,'multiline':False]
['text':' Start of the local header (in the output buffer).','line_number':235,'multiline':False]
['text':' Sizes of the file entry','line_number':238,'multiline':False]
['text':' Compression method','line_number':242,'multiline':False]
['text':' CRC32','line_number':245,'multiline':False]
['text':' external attributes field','line_number':248,'multiline':False]
['text':' Start/length of the file_name in the local header.','line_number':251,'multiline':False]
['text':' Start/length of the extra_field in the local header.','line_number':255,'multiline':False]
['text':' OutputZipFile is responsible for maintaining the following','line_number':265,'multiline':False]
['text':' pointers. They are allocated by the Create() method before','line_number':266,'multiline':False]
['text':' the object is actually created using mmap.','line_number':267,'multiline':False]
['text':' start of output file mmap','line_number':268,'multiline':False]
['text':' output cursor','line_number':269,'multiline':False]
['text':' Current pointer to "compression method" entry.','line_number':271,'multiline':False]
['text':' List of entries to write the central directory','line_number':273,'multiline':False]
['text':' last error','line_number':276,'multiline':False]
['text':' Write the ZIP central directory structure for each local file','line_number':287,'multiline':False]
['text':' entry in "entries".','line_number':288,'multiline':False]
['text':' Returns the offset of the pointer relative to the start of the','line_number':291,'multiline':False]
['text':' output zip file.','line_number':292,'multiline':False]
['text':' Write ZIP file header in the output. Since the compressed size is not','line_number':297,'multiline':False]
['text':' known in advance, it must be recorded later. This method returns a pointer','line_number':298,'multiline':False]
['text':' to "compressed size" in the file header that should be passed to','line_number':299,'multiline':False]
['text':' WriteFileSizeInLocalFileHeader() later.','line_number':300,'multiline':False]
['text':' Fill in the "compressed size" and "uncompressed size" fields in a local','line_number':303,'multiline':False]
['text':' file header previously written by WriteLocalFileHeader().','line_number':304,'multiline':False]
['text':'','line_number':311,'multiline':False]
['text':' Implementation of InputZipFile','line_number':312,'multiline':False]
['text':'','line_number':313,'multiline':False]
['text':' Process the next entry in the central directory. Also make sure that the','line_number':315,'multiline':False]
['text':' content pointer is in sync.','line_number':316,'multiline':False]
['text':' There might be an offset specified in the central directory that does','line_number':324,'multiline':False]
['text':' not match the file offset, so always update our pointer.','line_number':325,'multiline':False]
['text':' skip over: last_mod_file_time, last_mod_file_date, crc32','line_number':365,'multiline':False]
['text':' If the zip is compressed, compressed and uncompressed size members are','line_number':386,'multiline':False]
['text':' zero in the local file header. If not, check that they are the same as the','line_number':387,'multiline':False]
['text':' lengths from the central directory, otherwise, just believe the central','line_number':388,'multiline':False]
['text':' directory','line_number':389,'multiline':False]
['text':' Skip the data descriptor. Some implementations do not put the signature','line_number':417,'multiline':False]
['text':' here, so check if the next 4 bytes are a signature, and if so, skip the','line_number':418,'multiline':False]
['text':' next 12 bytes (for CRC, compressed/uncompressed size), otherwise skip','line_number':419,'multiline':False]
['text':' the next 8 bytes (because the value just read was the CRC).','line_number':420,'multiline':False]
['text':' In this case, compressed_size_ == uncompressed_size_ (since the file is','line_number':440,'multiline':False]
['text':' uncompressed), so we can use either.','line_number':441,'multiline':False]
['text':' In this case, compressed_size_ == uncompressed_size_ (since the file is','line_number':483,'multiline':False]
['text':' uncompressed), so we can use either.','line_number':484,'multiline':False]
['text':' Reads and returns some metadata of the next file from the central directory:','line_number':501,'multiline':False]
['text':' - compressed size','line_number':502,'multiline':False]
['text':' - uncompressed size','line_number':503,'multiline':False]
['text':' - whether the entry is a class file (to be included in the output).','line_number':504,'multiline':False]
['text':' Precondition: p points to the beginning of an entry in the central dir','line_number':505,'multiline':False]
['text':' Postcondition: p points to the beginning of the next entry in the central dir','line_number':506,'multiline':False]
['text':' Returns true if the central directory contains another file and false if not.','line_number':507,'multiline':False]
['text':' Of course, in the latter case, the size output variables are not changed.','line_number':508,'multiline':False]
['text':' Note that the central directory is always followed by another data structure','line_number':509,'multiline':False]
['text':' that has a signature, so parsing it this way is safe.','line_number':510,'multiline':False]
['text':' skip to 'compressed size' field','line_number':525,'multiline':False]
['text':' skip to external file attributes field','line_number':531,'multiline':False]
['text':' Gives a maximum bound on the size of the interface JAR. Basically, adds','line_number':565,'multiline':False]
['text':' the difference between the compressed and uncompressed sizes to the size','line_number':566,'multiline':False]
['text':' of the input file.','line_number':567,'multiline':False]
['text':' The worst case is when the output is simply the input uncompressed. The','line_number':594,'multiline':False]
['text':' metadata in the zip file will stay the same, so the file will grow by the','line_number':595,'multiline':False]
['text':' difference between the compressed and uncompressed sizes.','line_number':596,'multiline':False]
['text':' An end of central directory record, sized for optional zip64 contents.','line_number':601,'multiline':False]
['text':' Checks for a zip64 end of central directory record. If a valid zip64 EOCD is','line_number':611,'multiline':False]
['text':' found, updates the original EOCD record and returns true.','line_number':612,'multiline':False]
['text':'in_length','line_number':613,'multiline':True]
['text':' size of zip64 end of central directory record','line_number':626,'multiline':False]
['text':' (fixed size unless there's a zip64 extensible data sector, which','line_number':627,'multiline':False]
['text':' we don't need to read)','line_number':628,'multiline':False]
['text':' version made by','line_number':630,'multiline':False]
['text':' version needed to extract','line_number':631,'multiline':False]
['text':' check for a zip64 EOCD that matches the regular EOCD','line_number':640,'multiline':False]
['text':' Starting from the end of central directory record, attempts to locate a zip64','line_number':677,'multiline':False]
['text':' end of central directory record. If found, updates the given record and','line_number':678,'multiline':False]
['text':' offset with the zip64 data. Returns false on error.','line_number':679,'multiline':False]
['text':' In the absence of a zip64 extensible data sector, the zip64 EOCD is at a','line_number':683,'multiline':False]
['text':' fixed offset from the regular central directory.','line_number':684,'multiline':False]
['text':' If we couldn't find a zip64 EOCD at a fixed offset, either it doesn't exist','line_number':692,'multiline':False]
['text':' or there was a zip64 extensible data sector, so try going through the','line_number':693,'multiline':False]
['text':' locator. This approach doesn't work if data was prepended to the archive','line_number':694,'multiline':False]
['text':' without updating the offset in the locator.','line_number':695,'multiline':False]
['text':' TODO(b/228519294) Add a test for a valid zip64 file with total disks = 0','line_number':710,'multiline':False]
['text':' Given the data in the zip file, returns the offset of the central directory','line_number':720,'multiline':False]
['text':' and the number of files contained in it.','line_number':721,'multiline':False]
['text':' Maximum distance of start of central dir locator from end of file','line_number':726,'multiline':False]
['text':' skip to comment length field','line_number':742,'multiline':False]
['text':' Does the comment go exactly till the end of the file?','line_number':745,'multiline':False]
['text':' Hooray, we found it!','line_number':751,'multiline':False]
['text':' central directory locator signature, already checked','line_number':764,'multiline':False]
['text':' set current to the end of the central dir','line_number':772,'multiline':False]
['text':' Do not change output values before determining that they are OK.','line_number':784,'multiline':False]
['text':' Central directory start can then be used to determine the actual','line_number':786,'multiline':False]
['text':' starts of the zip file (which can be different in case of a non-zip','line_number':787,'multiline':False]
['text':' header like for auto-extractable binaries).','line_number':788,'multiline':False]
['text':' zipdata_in_, in_offset_, p, central_dir_current_','line_number':819,'multiline':False]
['text':' we don't really have a good error number','line_number':844,'multiline':False]
['text':'','line_number':872,'multiline':False]
['text':' Implementation of OutputZipFile','line_number':873,'multiline':False]
['text':'','line_number':874,'multiline':False]
['text':' Output the ZIP local_file_header:','line_number':884,'multiline':False]
['text':' extract_version','line_number':886,'multiline':False]
['text':' general_purpose_bit_flag','line_number':887,'multiline':False]
['text':' compression_method','line_number':888,'multiline':False]
['text':' last_mod_file date and time','line_number':889,'multiline':False]
['text':' crc32','line_number':890,'multiline':False]
['text':' compressed_size','line_number':891,'multiline':False]
['text':' uncompressed_size','line_number':892,'multiline':False]
['text':' extra_field_length','line_number':894,'multiline':False]
['text':' central directory:','line_number':910,'multiline':False]
['text':' version to extract','line_number':917,'multiline':False]
['text':' general purpose bit flag','line_number':918,'multiline':False]
['text':' compression method:','line_number':919,'multiline':False]
['text':' last_mod_file date and time','line_number':920,'multiline':False]
['text':' crc32','line_number':921,'multiline':False]
['text':' compressed_size','line_number':922,'multiline':False]
['text':' uncompressed_size','line_number':923,'multiline':False]
['text':' file comment length','line_number':927,'multiline':False]
['text':' disk number start','line_number':928,'multiline':False]
['text':' internal file attributes','line_number':929,'multiline':False]
['text':' external file attributes','line_number':930,'multiline':False]
['text':' relative offset of local header:','line_number':931,'multiline':False]
['text':' signature and size field doesn't count towards size','line_number':944,'multiline':False]
['text':' version made by','line_number':946,'multiline':False]
['text':' version needed to extract','line_number':947,'multiline':False]
['text':' number of this disk','line_number':948,'multiline':False]
['text':' # of the disk with the start of the central directory','line_number':949,'multiline':False]
['text':' # central dir entries on this disk','line_number':950,'multiline':False]
['text':' total # entries in the central directory','line_number':951,'multiline':False]
['text':' size of the central directory','line_number':952,'multiline':False]
['text':' offset of start of central directory wrt starting disk','line_number':953,'multiline':False]
['text':' number of the disk with the start of the zip64 end of central directory','line_number':957,'multiline':False]
['text':' relative offset of the zip64 end of central directory record','line_number':959,'multiline':False]
['text':' total number of disks','line_number':961,'multiline':False]
['text':' number of this disk','line_number':965,'multiline':False]
['text':' # of disk with the start of the central directory','line_number':966,'multiline':False]
['text':' # central dir entries on this disk','line_number':967,'multiline':False]
['text':' total # entries in the central directory','line_number':969,'multiline':False]
['text':' size of the central directory','line_number':971,'multiline':False]
['text':' offset of start of central','line_number':974,'multiline':False]
['text':' .ZIP file comment length','line_number':978,'multiline':False]
['text':' number of this disk','line_number':982,'multiline':False]
['text':' # of the disk with the start of the central directory','line_number':983,'multiline':False]
['text':' # central dir entries on this disk','line_number':984,'multiline':False]
['text':' total # entries in the central directory','line_number':985,'multiline':False]
['text':' size of the central directory','line_number':986,'multiline':False]
['text':' offset of start of central directory wrt starting disk','line_number':987,'multiline':False]
['text':' .ZIP file comment length','line_number':989,'multiline':False]
['text':' Output the ZIP local_file_header:','line_number':1005,'multiline':False]
['text':' version to extract','line_number':1007,'multiline':False]
['text':' general purpose bit flag','line_number':1008,'multiline':False]
['text':' compression method = placeholder','line_number':1010,'multiline':False]
['text':' last_mod_file date and time','line_number':1011,'multiline':False]
['text':' crc32','line_number':1012,'multiline':False]
['text':' compressed_size = placeholder','line_number':1013,'multiline':False]
['text':' uncompressed_size = placeholder','line_number':1014,'multiline':False]
['text':' compression method','line_number':1033,'multiline':False]
['text':' crc32','line_number':1040,'multiline':False]
['text':' compressed_size','line_number':1041,'multiline':False]
['text':' uncompressed_size','line_number':1042,'multiline':False]
['text':' Digital signature field size = 6, End of central directory = 22, Total = 28','line_number':1136,'multiline':False]
['text':' Count the size of all the files in the input to estimate the size of the','line_number':1138,'multiline':False]
['text':' output.','line_number':1139,'multiline':False]
['text':' Add sizes of Zip meta data','line_number':1147,'multiline':False]
['text':' local file header = 30 bytes','line_number':1148,'multiline':False]
['text':' data descriptor = 12 bytes','line_number':1149,'multiline':False]
['text':' central directory descriptor = 46 bytes','line_number':1150,'multiline':False]
['text':'    Total: 88bytes','line_number':1151,'multiline':False]
['text':' The filename is stored twice (once in the central directory','line_number':1153,'multiline':False]
['text':' and once in the local file header).','line_number':1154,'multiline':False]
['text':' namespace devtools_ijar','line_number':1160,'multiline':False]
