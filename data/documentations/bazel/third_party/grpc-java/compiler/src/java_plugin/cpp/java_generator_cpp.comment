['text':'
 * Copyright 2019 The gRPC Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ','line_number':1,'multiline':True]
['text':' Protobuf 3.21 changed the name of this file.','line_number':31,'multiline':False]
['text':' Stringify helpers used solely to cast GRPC_VERSION','line_number':38,'multiline':False]
['text':' java keywords from: https://docs.oracle.com/javase/specs/jls/se8/html/jls-3.html#jls-3.9','line_number':65,'multiline':False]
['text':' additional ones added by us','line_number':117,'multiline':False]
['text':' Adjust a method name prefix identifier to follow the JavaBean spec:','line_number':122,'multiline':False]
['text':'   - decapitalize the first letter','line_number':123,'multiline':False]
['text':'   - remove embedded underscores & capitalize the following letter','line_number':124,'multiline':False]
['text':'  Finally, if the result is a reserved java keyword, append an underscore.','line_number':125,'multiline':False]
['text':' Converts to the identifier to the ALL_UPPER_CASE format.','line_number':144,'multiline':False]
['text':'   - An underscore is inserted where a lower case letter is followed by an','line_number':145,'multiline':False]
['text':'     upper case letter.','line_number':146,'multiline':False]
['text':'   - All letters are converted to upper case','line_number':147,'multiline':False]
['text':' TODO(nmittler): Remove once protobuf includes javadoc methods in distribution.','line_number':179,'multiline':False]
['text':' Optimize the common case where delim is a single character.','line_number':184,'multiline':False]
['text':' TODO(nmittler): Remove once protobuf includes javadoc methods in distribution.','line_number':214,'multiline':False]
['text':' TODO(nmittler): Remove once protobuf includes javadoc methods in distribution.','line_number':222,'multiline':False]
['text':' TODO(nmittler): Remove once protobuf includes javadoc methods in distribution.','line_number':229,'multiline':False]
['text':' Avoid "/*".','line_number':240,'multiline':False]
['text':' Avoid "*/".','line_number':248,'multiline':False]
['text':' '@' starts javadoc tags including the @deprecated tag, which will','line_number':256,'multiline':False]
['text':' cause a compile-time error if inserted before a declaration that','line_number':257,'multiline':False]
['text':' does not have a corresponding @Deprecated annotation.','line_number':258,'multiline':False]
['text':' Avoid interpretation as HTML.','line_number':262,'multiline':False]
['text':' Avoid interpretation as HTML.','line_number':266,'multiline':False]
['text':' Avoid interpretation as HTML.','line_number':270,'multiline':False]
['text':' Java interprets Unicode escape sequences anywhere!','line_number':274,'multiline':False]
['text':' TODO(nmittler): Remove once protobuf includes javadoc methods in distribution.','line_number':288,'multiline':False]
['text':' TODO(nmittler): Remove once protobuf includes javadoc methods in distribution.','line_number':299,'multiline':False]
['text':' TODO(kenton):  Ideally we should parse the comment text as Markdown and','line_number':302,'multiline':False]
['text':'   write it back as HTML, but this requires a Markdown parser.  For now','line_number':303,'multiline':False]
['text':'   we just use <pre> to get fixed-width text formatting.','line_number':304,'multiline':False]
['text':' If the comment itself contains block comment start or end markers,','line_number':306,'multiline':False]
['text':' HTML-escape them so that they don't accidentally close the doc comment.','line_number':307,'multiline':False]
['text':' TODO(nmittler): Remove once protobuf includes javadoc methods in distribution.','line_number':319,'multiline':False]
['text':' TODO(nmittler): Remove once protobuf includes javadoc methods in distribution.','line_number':325,'multiline':False]
['text':' Most lines should start with a space.  Watch out for lines that start','line_number':335,'multiline':False]
['text':' with a /, since putting that right after the leading asterisk will','line_number':336,'multiline':False]
['text':' close the comment.','line_number':337,'multiline':False]
['text':' TODO(nmittler): Remove once protobuf includes javadoc methods in distribution.','line_number':351,'multiline':False]
['text':' TODO(nmittler): Remove once protobuf includes javadoc methods in distribution.','line_number':359,'multiline':False]
['text':' Deviating from protobuf to avoid extraneous docs','line_number':362,'multiline':False]
['text':' (see https://github.com/google/protobuf/issues/1406);','line_number':363,'multiline':False]
['text':' TODO(nmittler): Remove once protobuf includes javadoc methods in distribution.','line_number':370,'multiline':False]
['text':' Deviating from protobuf to avoid extraneous docs','line_number':373,'multiline':False]
['text':' (see https://github.com/google/protobuf/issues/1406);','line_number':374,'multiline':False]
['text':' Prints a StubFactory for given service / stub type.','line_number':499,'multiline':False]
['text':' Prints a client interface or implementation class, or a server interface.','line_number':530,'multiline':False]
['text':' Class head','line_number':585,'multiline':False]
['text':' Constructor and build() method','line_number':607,'multiline':False]
['text':' RPC methods','line_number':632,'multiline':False]
['text':' Blocking client interface with client streaming is not available','line_number':643,'multiline':False]
['text':' Future interface doesn't support streaming.','line_number':648,'multiline':False]
['text':' Method signature','line_number':652,'multiline':False]
['text':' TODO(nmittler): Replace with WriteMethodDocComment once included by the protobuf distro.','line_number':654,'multiline':False]
['text':' Server streaming','line_number':669,'multiline':False]
['text':' Simple RPC','line_number':675,'multiline':False]
['text':' Bidirectional streaming or client streaming','line_number':683,'multiline':False]
['text':' Server streaming or simple RPC','line_number':689,'multiline':False]
['text':' Method body.','line_number':712,'multiline':False]
['text':' NB: Skipping validation of service methods. If something is wrong, we wouldn't get to','line_number':717,'multiline':False]
['text':' this point as compiler would return errors when generating service interface.','line_number':718,'multiline':False]
['text':' Place all method invocations into a single class to reduce memory footprint','line_number':813,'multiline':False]
['text':' on Android.','line_number':814,'multiline':False]
['text':' Sort method ids based on client_streaming() so switch tables are compact.','line_number':818,'multiline':False]
['text':' TODO(nmittler): Replace with WriteServiceDocComment once included by protobuf distro.','line_number':1090,'multiline':False]
['text':' TODO(nmittler): Replace with WriteDocComment once included by protobuf distro.','line_number':1118,'multiline':False]
['text':' TODO(nmittler): Replace with WriteDocComment once included by protobuf distro.','line_number':1129,'multiline':False]
['text':' TODO(nmittler): Replace with WriteDocComment once included by protobuf distro.','line_number':1144,'multiline':False]
['text':' All non-generated classes must be referred by fully qualified names to','line_number':1180,'multiline':False]
['text':' avoid collision with generated classes.','line_number':1181,'multiline':False]
['text':' Package string is used to fully qualify method names.','line_number':1225,'multiline':False]
['text':' namespace java_grpc_generator','line_number':1248,'multiline':False]
