['text':'','line_number':1,'multiline':False]
['text':' This Gradle build file illustrates how to process Scala','line_number':2,'multiline':False]
['text':' applications, including the Scala runtime.','line_number':3,'multiline':False]
['text':' Usage:','line_number':4,'multiline':False]
['text':'     gradle -b scala.gradle proguard','line_number':5,'multiline':False]
['text':'','line_number':6,'multiline':False]
['text':' Tell Gradle where to find the ProGuard task.','line_number':8,'multiline':False]
['text':' Define a ProGuard task.','line_number':19,'multiline':False]
['text':' You should probably import a more compact ProGuard-style configuration','line_number':23,'multiline':False]
['text':' file for all static settings, but we're specifying them all here, for','line_number':24,'multiline':False]
['text':' the sake of the example.','line_number':25,'multiline':False]
['text':'configuration 'configuration.pro'','line_number':26,'multiline':False]
['text':' Specify the input jars, output jars, and library jars.','line_number':30,'multiline':False]
['text':'injars  '/usr/local/java/scala-2.9.1/lib/scala-compiler.jar', filter: '!META-INF/MANIFEST.MF'','line_number':34,'multiline':False]
['text':'injars  '/usr/local/java/scala-2.9.1/lib/jline.jar', filter: '!META-INF/MANIFEST.MF'','line_number':35,'multiline':False]
['text':' Automatically handle the Java version of this build.','line_number':38,'multiline':False]
['text':' Before Java 9, the runtime classes were packaged in a single jar file.','line_number':40,'multiline':False]
['text':' As of Java 9, the runtime classes are packaged in modular jmod files.','line_number':43,'multiline':False]
['text':'libraryjars "${System.getProperty('java.home')}/jmods/....."','line_number':45,'multiline':False]
['text':'libraryjars '/usr/local/java/ant/lib/ant.jar'','line_number':48,'multiline':False]
['text':'...','line_number':49,'multiline':False]
['text':' Ignore some compiler artefacts.','line_number':51,'multiline':False]
['text':' Save the obfuscation mapping to a file, so you can de-obfuscate any stack','line_number':55,'multiline':False]
['text':' traces later on. Keep a fixed source file attribute and all line number','line_number':56,'multiline':False]
['text':' tables to get line numbers in the stack traces.','line_number':57,'multiline':False]
['text':' You can comment this out if you're not interested in stack traces.','line_number':58,'multiline':False]
['text':' Preserve all annotations.','line_number':64,'multiline':False]
['text':' You can print out the seeds that are matching the keep options below.','line_number':68,'multiline':False]
['text':'printseeds 'out.seeds'','line_number':70,'multiline':False]
['text':' Preserve all public applications.','line_number':72,'multiline':False]
['text':' Preserve some classes and class members that are accessed by means of','line_number':78,'multiline':False]
['text':' introspection.','line_number':79,'multiline':False]
['text':' Preserve some classes and class members that are accessed by means of','line_number':111,'multiline':False]
['text':' introspection in the Scala compiler library, if it is processed as well.','line_number':112,'multiline':False]
['text':'keep 'class * implements jline.Completor'','line_number':114,'multiline':False]
['text':'keep 'class * implements jline.Terminal'','line_number':115,'multiline':False]
['text':'keep 'class scala.tools.nsc.Global'','line_number':117,'multiline':False]
['text':'keepclasseswithmembers 'class * { \','line_number':119,'multiline':False]
['text':'    <init>(scala.tools.nsc.Global); \','line_number':120,'multiline':False]
['text':'}'','line_number':121,'multiline':False]
['text':'keepclassmembers 'class * { \','line_number':123,'multiline':False]
['text':'    *** scala_repl_value(); \','line_number':124,'multiline':False]
['text':'    *** scala_repl_result(); \','line_number':125,'multiline':False]
['text':'}'','line_number':126,'multiline':False]
['text':' Preserve all native method names and the names of their classes.','line_number':128,'multiline':False]
['text':' Preserve the special static methods that are required in all enumeration','line_number':134,'multiline':False]
['text':' classes.','line_number':135,'multiline':False]
['text':' Explicitly preserve all serialization members. The Serializable interface','line_number':142,'multiline':False]
['text':' is only a marker interface, so it wouldn't save them.','line_number':143,'multiline':False]
['text':' You can comment this out if your application doesn't use serialization.','line_number':144,'multiline':False]
['text':' If your code contains serializable classes that have to be backward ','line_number':145,'multiline':False]
['text':' compatible, please refer to the manual.','line_number':146,'multiline':False]
['text':' Your application may contain more items that need to be preserved; ','line_number':157,'multiline':False]
['text':' typically classes that are dynamically created using Class.forName:','line_number':158,'multiline':False]
['text':' keep 'public class com.example.MyClass'','line_number':160,'multiline':False]
['text':' keep 'public interface com.example.MyInterface'','line_number':161,'multiline':False]
['text':' keep 'public class * implements com.example.MyInterface'','line_number':162,'multiline':False]
