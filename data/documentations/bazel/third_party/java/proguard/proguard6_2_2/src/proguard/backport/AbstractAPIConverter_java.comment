['text':'
 * ProGuard -- shrinking, optimization, obfuscation, and preverification
 *             of Java bytecode.
 *
 * Copyright (c) 2002-2019 Guardsquare NV
 *
 * This program is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License as published by the Free
 * Software Foundation; either version 2 of the License, or (at your option)
 * any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
 * more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 ','line_number':1,'multiline':True]
['text':'*
 * Abstract base class for API converter implementations.
 * <p>
 * By default, this class acts as ClassVisitor and will replace any
 * occurrence of the specified methods / types as configured by the
 * actual implementation.
 *
 * @see StreamSupportConverter
 * @see JSR310Converter
 *
 * @author Thomas Neidhart
 ','line_number':37,'multiline':True]
['text':' Implementation interfaces.','line_number':53,'multiline':False]
['text':'*
     * Create a new AbstractAPIConverter instance.
     ','line_number':83,'multiline':True]
['text':' Implementations for ClassVisitor.','line_number':152,'multiline':False]
['text':' We need to update the code attributes first.','line_number':165,'multiline':False]
['text':' Update the class constants directly.','line_number':171,'multiline':False]
['text':' Update descriptors and attributes of fields and methods.','line_number':176,'multiline':False]
['text':' Update the class attributes.','line_number':180,'multiline':False]
['text':' Remove replaced and now unused constant pool entries.','line_number':185,'multiline':False]
['text':' Mark this class as being modified.','line_number':190,'multiline':False]
['text':' Implementations for MemberVisitor.','line_number':197,'multiline':False]
['text':' Update the remaining attributes, except for the code attribute,','line_number':217,'multiline':False]
['text':' which has already been updated.','line_number':218,'multiline':False]
['text':' Implementations for AttributeVisitor.','line_number':225,'multiline':False]
['text':' Update the nested attributes.','line_number':243,'multiline':False]
['text':' Implementations for LocalVariableInfoVisitor.','line_number':290,'multiline':False]
['text':' Implementations for LocalVariableTypeInfoVisitor.','line_number':299,'multiline':False]
['text':' Implementations for AnnotationVisitor.','line_number':308,'multiline':False]
['text':' Implementations for ElementValueVisitor.','line_number':319,'multiline':False]
['text':' Implementations for InstructionVisitor.','line_number':359,'multiline':False]
['text':' Implementations for ConstantVisitor.','line_number':405,'multiline':False]
['text':' If the method invocation was not replaced, we still','line_number':445,'multiline':False]
['text':' have to replace the descriptor if necessary.','line_number':446,'multiline':False]
['text':' Private utility methods.','line_number':462,'multiline':False]
['text':'*
     * Checks all the configured type replacements and replaces the given
     * class name accordingly.
     ','line_number':464,'multiline':True]
['text':'*
     * Replaces all class types that appear in the given descriptor.
     ','line_number':487,'multiline':True]
['text':'*
     * Returns an updated descriptor index if the descriptor
     * has changed.
     ','line_number':511,'multiline':True]
['text':'*
     * Checks if the instruction at the given offset has to be replaced and
     * modifies the code attribute accordingly.
     ','line_number':531,'multiline':True]
['text':' Private helper classes.','line_number':551,'multiline':False]
['text':'*
     * Abstract base class for type and method replacement helper classes.
     * Contains useful methods to avoid duplication.
     ','line_number':553,'multiline':True]
['text':'*
     * A helper class to define a needed method invocation replacement in an efficient way.
     ','line_number':617,'multiline':True]
['text':' Extend the replacement descriptor.','line_number':666,'multiline':False]
['text':' Get the referenced class for the matching className.','line_number':683,'multiline':False]
['text':' Might be null for wildcard classNames.','line_number':684,'multiline':False]
['text':' Might happen if the project is not setup correctly.','line_number':691,'multiline':False]
['text':' The class to be replaced is not present.','line_number':692,'multiline':False]
['text':' Might happen if the project is not setup correctly.','line_number':700,'multiline':False]
['text':' The method to be replaced is not present.','line_number':701,'multiline':False]
['text':'  or the method is a default method and the pattern matches all default methods','line_number':721,'multiline':False]
['text':'  or the method is static and the pattern matches all static methods','line_number':723,'multiline':False]
['text':' Might happen if the project is not setup correctly.','line_number':748,'multiline':False]
['text':' The class to be replaced is not present.','line_number':749,'multiline':False]
['text':'*
     * A helper class to define a needed type replacement in an efficient way.
     ','line_number':846,'multiline':True]
