['text':'
 * ProGuard -- shrinking, optimization, obfuscation, and preverification
 *             of Java bytecode.
 *
 * Copyright (c) 2002-2019 Guardsquare NV
 *
 * This program is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License as published by the Free
 * Software Foundation; either version 2 of the License, or (at your option)
 * any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
 * more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 ','line_number':1,'multiline':True]
['text':'*
 * This AttributeVisitor simplifies the use of retargeted wrapper classes in
 * the code attributes that it visits. More specifically, it replaces
 *     "new Wrapper(targetClass)" by "targetClass", and
 *     "wrapper.field" by "wrapper".
 * You still need to retarget all class references, replacing references to
 * the wrapper class by references to the target class.
 *
 * @see WrapperClassMarker
 * @see ClassMerger
 * @see RetargetedClassFilter
 * @see TargetClassChanger
 * @author Eric Lafortune
 ','line_number':40,'multiline':True]
['text':'*','line_number':61,'multiline':False]
['text':'/
    private static       boolean DEBUG = System.getProperty("wc") != null;
    //','line_number':63,'multiline':True]
['text':' Fields acting as parameters and return values for the visitor methods.','line_number':72,'multiline':False]
['text':'*
     * Creates a new WrapperClassUseSimplifier.
     ','line_number':77,'multiline':True]
['text':'*
     * Creates a new WrapperClassUseSimplifier.
     * @param extraInstructionVisitor an optional extra visitor for all
     *                                simplified instructions.
     ','line_number':86,'multiline':True]
['text':' Implementations for AttributeVisitor.','line_number':97,'multiline':False]
['text':' Reset the code changes.','line_number':111,'multiline':False]
['text':' Edit the instructions.','line_number':114,'multiline':False]
['text':' Apply all accumulated changes to the code.','line_number':117,'multiline':False]
['text':' Implementations for InstructionVisitor.','line_number':122,'multiline':False]
['text':' Is it instantiating a wrapper class?','line_number':133,'multiline':False]
['text':' Is the next instruction a typical dup instruction?','line_number':136,'multiline':False]
['text':' Delete the new and dup instructions:','line_number':143,'multiline':False]
['text':'     new Wrapper','line_number':144,'multiline':False]
['text':'     dup','line_number':145,'multiline':False]
['text':' Replace the new instance by a dummy null','line_number':153,'multiline':False]
['text':' and remember to store the target instance:','line_number':154,'multiline':False]
['text':'     new Wrapper -> aconst_null','line_number':155,'multiline':False]
['text':'     astore x    -> remember','line_number':156,'multiline':False]
['text':'     aload x','line_number':157,'multiline':False]
['text':' Replace the new instance by a dummy null','line_number':163,'multiline':False]
['text':' and remember to pop the target instance:','line_number':164,'multiline':False]
['text':'     new Wrapper -> aconst_null','line_number':165,'multiline':False]
['text':' Is it initializing a wrapper class?','line_number':180,'multiline':False]
['text':' Do we have a special pop instruction?','line_number':183,'multiline':False]
['text':' TODO: May still fail with nested initializers.','line_number':184,'multiline':False]
['text':' Delete the initializer invocation (with the','line_number':187,'multiline':False]
['text':' wrapper instance no longer on the stack):','line_number':188,'multiline':False]
['text':'     Wrapper.<init>(target) -> target','line_number':189,'multiline':False]
['text':' Delete the initializer invocation, and store','line_number':194,'multiline':False]
['text':' the target instance again:','line_number':195,'multiline':False]
['text':'     invokespecial Wrapper.<init>(target) -> astore x / pop','line_number':196,'multiline':False]
['text':' Is it retrieving the field of the wrapper class?','line_number':208,'multiline':False]
['text':' Delete the retrieval:','line_number':211,'multiline':False]
['text':'     wrapper.field -> wrapper.','line_number':212,'multiline':False]
['text':' Implementations for ConstantVisitor.','line_number':221,'multiline':False]
['text':' Is the constant retrieving from a wrapper class?','line_number':228,'multiline':False]
['text':' Is the constant referring to a wrapper class?','line_number':237,'multiline':False]
['text':' Is the constant referring to a wrapper class?','line_number':245,'multiline':False]
['text':' Implementations for ClassVisitor.','line_number':250,'multiline':False]
['text':' Small utility methods.','line_number':261,'multiline':False]
['text':'*
     * Returns whether the constant at the given offset is referencing a
     * wrapper class (different from the given class) that is being retargeted.
     ','line_number':263,'multiline':True]
