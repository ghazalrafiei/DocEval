['text':'
 * ProGuard -- shrinking, optimization, obfuscation, and preverification
 *             of Java bytecode.
 *
 * Copyright (c) 2002-2019 Guardsquare NV
 *
 * This program is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License as published by the Free
 * Software Foundation; either version 2 of the License, or (at your option)
 * any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
 * more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 ','line_number':1,'multiline':True]
['text':'*
 * This ClassVisitor recursively marks all interface
 * classes that are being used in the visited class.
 *
 * @see UsageMarker
 *
 * @author Eric Lafortune
 ','line_number':30,'multiline':True]
['text':' Fields acting as return parameters for the visitor methods.','line_number':45,'multiline':False]
['text':'*
     * Creates a new InterfaceUsageMarker.
     * @param usageMarker the usage marker that is used to mark the classes
     *                    and class members.
     ','line_number':50,'multiline':True]
['text':' Implementations for ClassVisitor.','line_number':61,'multiline':False]
['text':' Check if any interfaces are being used.','line_number':70,'multiline':False]
['text':' Is this an interface with a preliminary mark?','line_number':79,'multiline':False]
['text':' Should it be included now?','line_number':82,'multiline':False]
['text':' At least one if this interface's interfaces is being used.','line_number':85,'multiline':False]
['text':' Mark this interface as well.','line_number':86,'multiline':False]
['text':' Mark this interface's name.','line_number':89,'multiline':False]
['text':' Mark the superclass (java/lang/Object).','line_number':92,'multiline':False]
['text':' Unmark this interface, so we don't bother looking at it again.','line_number':97,'multiline':False]
['text':' The return value.','line_number':103,'multiline':False]
['text':' The return values.','line_number':110,'multiline':False]
['text':' Implementations for ConstantVisitor.','line_number':116,'multiline':False]
['text':' The ClassConstant isn't marked as being used yet. But maybe it','line_number':124,'multiline':False]
['text':' should be included as an interface, so check the actual class.','line_number':125,'multiline':False]
['text':' The class is being used. Mark the ClassConstant as being used','line_number':131,'multiline':False]
['text':' as well.','line_number':132,'multiline':False]
['text':' The return values.','line_number':139,'multiline':False]
