['text':'
 * ProGuard -- shrinking, optimization, obfuscation, and preverification
 *             of Java bytecode.
 *
 * Copyright (c) 2002-2019 Guardsquare NV
 *
 * This program is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License as published by the Free
 * Software Foundation; either version 2 of the License, or (at your option)
 * any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
 * more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 ','line_number':1,'multiline':True]
['text':'*
 * This utility class is injected into the program class pool when the GSON
 * optimizations are applied. It contains the logic for picking the right
 * type adapter for a given type and value that needs to be serialized.
 *
 * The injected toJson() methods in the domain classes will use these utility
 * methods for serializing the fields of the domain class with the appropriate
 * type adapter.
 *
 * @author Lars Vandenbergh
 ','line_number':30,'multiline':True]
['text':'*
     * Returns the appropriate type adapter for handling the given value with
     * the given declared type.
     *
     * @param gson         the Gson context that manages all registered type
     *                     adapters.
     * @param declaredType the type of the value to (de)serialize.
     * @param value        the value to (de)serialize.
     * @return             the type adapter for handling the given value and
     *                     declared type.
     ','line_number':43,'multiline':True]
['text':' If the runtime type is a sub type and there is a custom type adapter registered for','line_number':56,'multiline':False]
['text':' the declared type, that one should get precedence over the runtime type adapter if','line_number':57,'multiline':False]
['text':' the runtime type adapter is not custom.','line_number':58,'multiline':False]
['text':' In all other cases the type adapter for the runtime type is used.','line_number':70,'multiline':False]
['text':'*
     * Returns the appropriate type adapter for handling the given value with
     * the given declared type token.
     *
     * @param gson              the Gson context that manages all registered type
     *                          adapters.
     * @param declaredTypeToken the declared type token of the value to (de)serialize.
     * @param value             the value to (de)serialize.
     * @return                  the type adapter for handling the given value and
     *                          declared type.
     ','line_number':75,'multiline':True]
['text':' If the runtime type is a sub type and there is a custom type adapter registered for','line_number':88,'multiline':False]
['text':' the declared type, that one should get precedence over the runtime type adapter if','line_number':89,'multiline':False]
['text':' the runtime type adapter is not custom.','line_number':90,'multiline':False]
['text':' In all other cases the type adapter for the runtime type is used.','line_number':103,'multiline':False]
['text':'*
     * Finds a compatible runtime type if it is more specific
     ','line_number':108,'multiline':True]
['text':'*
     * Determines whether a given type adapter is a custom type adapter, i.e.
     * a type adapter that is registered by the user of the Gson API and not
     * the GSON reflection based type adapter or the optimized type adapter
     * injected by DexGuard.
     ','line_number':119,'multiline':True]
['text':'*
     * Dumps the cached type adapter for each type for debugging purpose.
     ','line_number':132,'multiline':True]
