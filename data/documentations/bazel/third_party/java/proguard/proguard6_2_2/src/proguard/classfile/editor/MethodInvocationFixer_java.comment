['text':'
 * ProGuard -- shrinking, optimization, obfuscation, and preverification
 *             of Java bytecode.
 *
 * Copyright (c) 2002-2019 Guardsquare NV
 *
 * This program is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License as published by the Free
 * Software Foundation; either version 2 of the License, or (at your option)
 * any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
 * more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 ','line_number':1,'multiline':True]
['text':'*
 * This AttributeVisitor fixes all inappropriate special/virtual/static/interface
 * invocations of the code attributes that it visits.
 *
 * @author Eric Lafortune
 ','line_number':32,'multiline':True]
['text':' Return values for the visitor methods.','line_number':50,'multiline':False]
['text':' Implementations for AttributeVisitor.','line_number':56,'multiline':False]
['text':' Reset the code attribute editor.','line_number':63,'multiline':False]
['text':' Remap the variables of the instructions.','line_number':66,'multiline':False]
['text':' Apply the code atribute editor.','line_number':69,'multiline':False]
['text':' Implementations for InstructionVisitor.','line_number':74,'multiline':False]
['text':' Get information on the called class and method, if present.','line_number':83,'multiline':False]
['text':' Did we find the called class and method?','line_number':88,'multiline':False]
['text':' Do we need to update the opcode?','line_number':92,'multiline':False]
['text':' Is the method static?','line_number':95,'multiline':False]
['text':' But is it not a static invocation?','line_number':98,'multiline':False]
['text':' Replace the invocation by an invokestatic instruction.','line_number':101,'multiline':False]
['text':' Is the method private, or an instance initializer?','line_number':115,'multiline':False]
['text':' But is it not a special invocation?','line_number':119,'multiline':False]
['text':' Check if the two classes are in the same nest.','line_number':121,'multiline':False]
['text':' Replace the invocation by an invokespecial instruction.','line_number':124,'multiline':False]
['text':' Is the method an interface method?','line_number':138,'multiline':False]
['text':' Explicit calls to default interface methods *must* be preserved.','line_number':147,'multiline':False]
['text':' But is it not an interface invocation, or is the parameter','line_number':149,'multiline':False]
['text':' size incorrect?','line_number':150,'multiline':False]
['text':' Fix the parameter size of the interface invocation.','line_number':154,'multiline':False]
['text':' The method is not static, private, an instance initializer, or','line_number':169,'multiline':False]
['text':' an interface method.','line_number':170,'multiline':False]
['text':' But is it not a virtual invocation?','line_number':173,'multiline':False]
['text':' Replace any non-invokespecial.','line_number':175,'multiline':False]
['text':' For invokespecial, replace invocations from the same','line_number':177,'multiline':False]
['text':' class, and invocations to non-superclasses.','line_number':178,'multiline':False]
['text':' Replace the invocation by an invokevirtual instruction.','line_number':182,'multiline':False]
['text':' Implementations for ConstantVisitor.','line_number':199,'multiline':False]
['text':' Remember the referenced class. Note that we're interested in the','line_number':206,'multiline':False]
['text':' class of the method reference, not in the class in which the','line_number':207,'multiline':False]
['text':' method was actually found, unless it is an array type.','line_number':208,'multiline':False]
['text':' For an array type, the class will be java.lang.Object.','line_number':211,'multiline':False]
['text':' Remember the referenced method.','line_number':219,'multiline':False]
['text':' Remember the referenced class.','line_number':227,'multiline':False]
['text':' Small utility methods.','line_number':232,'multiline':False]
