['text':'
 * ProGuard -- shrinking, optimization, obfuscation, and preverification
 *             of Java bytecode.
 *
 * Copyright (c) 2002-2019 Guardsquare NV
 *
 * This program is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License as published by the Free
 * Software Foundation; either version 2 of the License, or (at your option)
 * any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
 * more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 ','line_number':1,'multiline':True]
['text':'*
 * This visitor injects a toJson$xxx() method into the classes that it visits
 * that serializes its fields to Json.
 *
 * @author Lars Vandenbergh
 * @author Rob Coekaerts
 ','line_number':37,'multiline':True]
['text':'*
     * Creates a new GsonSerializationOptimizer.
     *
     * @param programClassPool      the program class pool to initialize
     *                              added references.
     * @param libraryClassPool      the library class pool to initialize
     *                              added references.
     * @param gsonRuntimeSettings   keeps track of all GsonBuilder
 *                                  invocations.
     * @param codeAttributeEditor   the code editor that is used to
     *                              inject optimized code into the domain
     *                              classes.
     * @param serializationInfo     contains information on which class
     *                              and fields need to be optimized and how.
     * @param injectedClassNameMap the map that keeps track of injected
     *                              classes.
     ','line_number':82,'multiline':True]
['text':' Implementations for ClassVisitor.','line_number':116,'multiline':False]
['text':' Make access public for _OptimizedTypeAdapterFactory.','line_number':123,'multiline':False]
['text':' Start adding new serialization methods.','line_number':127,'multiline':False]
['text':' Add toJson$ method.','line_number':135,'multiline':False]
['text':' Create new CodeAttributeEditor for the toJson$ method.','line_number':158,'multiline':False]
['text':' Begin Json object.','line_number':161,'multiline':False]
['text':' Invoke toJsonBody$.','line_number':167,'multiline':False]
['text':' End Json object.','line_number':176,'multiline':False]
['text':' Add all toJson$ instructions.','line_number':183,'multiline':False]
['text':' Add toJsonBody$ method.','line_number':202,'multiline':False]
['text':' Add optimization info to new method.','line_number':219,'multiline':False]
['text':' Edit code attribute of fromJson$.','line_number':223,'multiline':False]
['text':' Implementations for AttributeVisitor.','line_number':236,'multiline':False]
['text':' Create new CodeAttributeEditor for the toJsonBody$ method.','line_number':243,'multiline':False]
['text':' Assign locals for nextFieldIndex and isNull.','line_number':246,'multiline':False]
['text':' Apply non static member visitor to all fields to visit.','line_number':249,'multiline':False]
['text':' Call the superclass toJsonBody$ if there is one.','line_number':255,'multiline':False]
['text':' Add all toJsonBody$ instructions.','line_number':273,'multiline':False]
['text':' Implementations for MemberVisitor.','line_number':279,'multiline':False]
['text':' Derive field descriptor and signature (if it exists).','line_number':291,'multiline':False]
['text':' Check for recursion first if it is an object','line_number':297,'multiline':False]
['text':' Write field name.','line_number':320,'multiline':False]
['text':' Write field value.','line_number':329,'multiline':False]
['text':' Write value to Json writer based on declared type and runtime value/type.','line_number':342,'multiline':False]
['text':' Add type token sub-class that has the appropriate type parameter.','line_number':374,'multiline':False]
['text':' Instantiate type token.','line_number':385,'multiline':False]
['text':' Box primitive value before passing it to type adapter.','line_number':439,'multiline':False]
['text':' Copy value to local.','line_number':484,'multiline':False]
['text':' Retrieve type adapter.','line_number':488,'multiline':False]
['text':' Write value using type adapter.','line_number':502,'multiline':False]
['text':' Label for skipping writing of field in case of recursion or','line_number':510,'multiline':False]
['text':' a non-exposed field with excludeFieldsWithoutExposeAnnotation','line_number':511,'multiline':False]
['text':' enabled.','line_number':512,'multiline':False]
