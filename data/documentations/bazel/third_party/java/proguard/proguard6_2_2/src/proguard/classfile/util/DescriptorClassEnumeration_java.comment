['text':'
 * ProGuard -- shrinking, optimization, obfuscation, and preverification
 *             of Java bytecode.
 *
 * Copyright (c) 2002-2019 Guardsquare NV
 *
 * This program is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License as published by the Free
 * Software Foundation; either version 2 of the License, or (at your option)
 * any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
 * more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 ','line_number':1,'multiline':True]
['text':'*
 * A <code>DescriptorClassEnumeration</code> provides an enumeration of all
 * classes mentioned in a given descriptor or signature.
 *
 * @author Eric Lafortune
 ','line_number':27,'multiline':True]
['text':'*
     * Creates a new DescriptorClassEnumeration for the given descriptor.
     ','line_number':44,'multiline':True]
['text':'*
     * Returns the number of classes contained in the descriptor. This
     * is the number of class names that the enumeration will return.
     ','line_number':53,'multiline':True]
['text':'*
     * Resets the enumeration.
     ','line_number':78,'multiline':True]
['text':'*
     * Returns whether the enumeration can provide more class names from the
     * descriptor.
     ','line_number':91,'multiline':True]
['text':'*
     * Returns the next fluff (surrounding class names) from the descriptor.
     ','line_number':101,'multiline':True]
['text':' Find the first token marking the start of a class name 'L' or '.'.','line_number':108,'multiline':False]
['text':' Make sure we have a stack.','line_number':117,'multiline':False]
['text':' Remember the accumulated class name.','line_number':123,'multiline':False]
['text':' Return to the accumulated class name outside the','line_number':132,'multiline':False]
['text':' generic block.','line_number':133,'multiline':False]
['text':' We've found the start of an ordinary class name.','line_number':145,'multiline':False]
['text':' We've found the start of an inner class name in a signature.','line_number':157,'multiline':False]
['text':' We've found the start of a type identifier. Skip to the end.','line_number':163,'multiline':False]
['text':' We're at the start of a type parameter. Skip to the start','line_number':172,'multiline':False]
['text':' of the bounds.','line_number':173,'multiline':False]
['text':'*
     * Returns the next class name from the descriptor.
     ','line_number':182,'multiline':True]
['text':' Find the first token marking the end of a class name '<' or ';'.','line_number':189,'multiline':False]
['text':' Recompose the inner class name if necessary.','line_number':207,'multiline':False]
['text':'*
     * Returns whether the most recently returned class name was a recomposed
     * inner class name from a signature.
     ','line_number':216,'multiline':True]
['text':'*
     * A main method for testing the class name enumeration.
     ','line_number':226,'multiline':True]
