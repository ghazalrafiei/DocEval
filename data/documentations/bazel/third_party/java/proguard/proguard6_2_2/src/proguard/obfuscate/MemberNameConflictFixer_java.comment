['text':'
 * ProGuard -- shrinking, optimization, obfuscation, and preverification
 *             of Java bytecode.
 *
 * Copyright (c) 2002-2019 Guardsquare NV
 *
 * This program is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License as published by the Free
 * Software Foundation; either version 2 of the License, or (at your option)
 * any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
 * more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 ','line_number':1,'multiline':True]
['text':'*
 * This MemberInfoVisitor solves obfuscation naming conflicts in all class
 * members that it visits. It avoids names from the given descriptor map,
 * delegating to the given obfuscator in order to get a new name if necessary.
 *
 * @author Eric Lafortune
 ','line_number':29,'multiline':True]
['text':'*
     * Creates a new MemberNameConflictFixer.
     * @param allowAggressiveOverloading a flag that specifies whether class
     *                                   members can be overloaded aggressively.
     * @param descriptorMap              the map of descriptors to
     *                                   [new name - old name] maps.
     * @param warningPrinter             an optional warning printer to which
     *                                   warnings about conflicting name
     *                                   mappings can be printed.
     * @param memberObfuscator           the obfuscator that can assign new
     *                                   names to members with conflicting
     *                                   names.
     ','line_number':44,'multiline':True]
['text':' Implementations for MemberVisitor.','line_number':71,'multiline':False]
['text':' Special cases: <clinit> and <init> are always kept unchanged.','line_number':81,'multiline':False]
['text':' We can ignore them here.','line_number':82,'multiline':False]
['text':'*
     * Obfuscates the given class member.
     * @param clazz   the class  of the given member.
     * @param member  the class member to be obfuscated.
     * @param isField specifies whether the class member is a field.
     ','line_number':97,'multiline':True]
['text':' Get the member's name and descriptor.','line_number':107,'multiline':False]
['text':' Check whether we're allowed to overload aggressively.','line_number':111,'multiline':False]
['text':' Trim the return argument from the descriptor if not.','line_number':114,'multiline':False]
['text':' Works for fields and methods alike.','line_number':115,'multiline':False]
['text':' Get the name map.','line_number':119,'multiline':False]
['text':' Get the member's new name.','line_number':122,'multiline':False]
['text':' Get the expected old name for this new name.','line_number':125,'multiline':False]
['text':' There's a conflict! A member (with a given old name) in a','line_number':130,'multiline':False]
['text':' first namespace has received the same new name as this','line_number':131,'multiline':False]
['text':' member (with a different old name) in a second name space,','line_number':132,'multiline':False]
['text':' and now these two have to live together in this name space.','line_number':133,'multiline':False]
['text':' Clear the conflicting name.','line_number':151,'multiline':False]
['text':' Assign a new name.','line_number':154,'multiline':False]
