['text':'
 * ProGuard -- shrinking, optimization, obfuscation, and preverification
 *             of Java bytecode.
 *
 * Copyright (c) 2002-2019 Guardsquare NV
 *
 * This program is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License as published by the Free
 * Software Foundation; either version 2 of the License, or (at your option)
 * any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
 * more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 ','line_number':1,'multiline':True]
['text':'*
 * This class represents a partially evaluated double value.
 *
 * @author Eric Lafortune
 ','line_number':25,'multiline':True]
['text':'*
     * Returns the specific double value, if applicable.
     ','line_number':32,'multiline':True]
['text':' Basic unary methods.','line_number':41,'multiline':False]
['text':'*
     * Returns the negated value of this DoubleValue.
     ','line_number':43,'multiline':True]
['text':'*
     * Converts this DoubleValue to an IntegerValue.
     ','line_number':48,'multiline':True]
['text':'*
     * Converts this DoubleValue to a LongValue.
     ','line_number':53,'multiline':True]
['text':'*
     * Converts this DoubleValue to a FloatValue.
     ','line_number':58,'multiline':True]
['text':' Basic binary methods.','line_number':64,'multiline':False]
['text':'*
     * Returns the generalization of this DoubleValue and the given other
     * DoubleValue.
     ','line_number':66,'multiline':True]
['text':'*
     * Returns the sum of this DoubleValue and the given DoubleValue.
     ','line_number':73,'multiline':True]
['text':'*
     * Returns the difference of this DoubleValue and the given DoubleValue.
     ','line_number':78,'multiline':True]
['text':'*
     * Returns the difference of the given DoubleValue and this DoubleValue.
     ','line_number':83,'multiline':True]
['text':'*
     * Returns the product of this DoubleValue and the given DoubleValue.
     ','line_number':88,'multiline':True]
['text':'*
     * Returns the quotient of this DoubleValue and the given DoubleValue.
     ','line_number':93,'multiline':True]
['text':'*
     * Returns the quotient of the given DoubleValue and this DoubleValue.
     ','line_number':98,'multiline':True]
['text':'*
     * Returns the remainder of this DoubleValue divided by the given DoubleValue.
     ','line_number':103,'multiline':True]
['text':'*
     * Returns the remainder of the given DoubleValue divided by this DoubleValue.
     ','line_number':108,'multiline':True]
['text':'*
     * Returns an IntegerValue with value -1, 0, or 1, if this DoubleValue is
     * less than, equal to, or greater than the given DoubleValue, respectively.
     ','line_number':113,'multiline':True]
['text':' Derived binary methods.','line_number':120,'multiline':False]
['text':'*
     * Returns an IntegerValue with value 1, 0, or -1, if this DoubleValue is
     * less than, equal to, or greater than the given DoubleValue, respectively.
     ','line_number':122,'multiline':True]
['text':' Similar binary methods, but this time with more specific arguments.','line_number':132,'multiline':False]
['text':'*
     * Returns the generalization of this DoubleValue and the given other
     * SpecificDoubleValue.
     ','line_number':134,'multiline':True]
['text':'*
     * Returns the sum of this DoubleValue and the given SpecificDoubleValue.
     ','line_number':144,'multiline':True]
['text':'*
     * Returns the difference of this DoubleValue and the given SpecificDoubleValue.
     ','line_number':152,'multiline':True]
['text':'*
     * Returns the difference of the given SpecificDoubleValue and this DoubleValue.
     ','line_number':160,'multiline':True]
['text':'*
     * Returns the product of this DoubleValue and the given SpecificDoubleValue.
     ','line_number':168,'multiline':True]
['text':'*
     * Returns the quotient of this DoubleValue and the given SpecificDoubleValue.
     ','line_number':176,'multiline':True]
['text':'*
     * Returns the quotient of the given SpecificDoubleValue and this
     * DoubleValue.
     ','line_number':184,'multiline':True]
['text':'*
     * Returns the remainder of this DoubleValue divided by the given
     * SpecificDoubleValue.
     ','line_number':193,'multiline':True]
['text':'*
     * Returns the remainder of the given SpecificDoubleValue and this
     * DoubleValue.
     ','line_number':202,'multiline':True]
['text':'*
     * Returns an IntegerValue with value -1, 0, or 1, if this DoubleValue is
     * less than, equal to, or greater than the given SpecificDoubleValue,
     * respectively.
     ','line_number':211,'multiline':True]
['text':' Derived binary methods.','line_number':222,'multiline':False]
['text':'*
     * Returns an IntegerValue with value 1, 0, or -1, if this DoubleValue is
     * less than, equal to, or greater than the given SpecificDoubleValue,
     * respectively.
     ','line_number':224,'multiline':True]
['text':' Similar binary methods, but this time with particular arguments.','line_number':235,'multiline':False]
['text':'*
     * Returns the generalization of this DoubleValue and the given other
     * ParticularDoubleValue.
     ','line_number':237,'multiline':True]
['text':'*
     * Returns the sum of this DoubleValue and the given ParticularDoubleValue.
     ','line_number':247,'multiline':True]
['text':'*
     * Returns the difference of this DoubleValue and the given ParticularDoubleValue.
     ','line_number':255,'multiline':True]
['text':'*
     * Returns the difference of the given ParticularDoubleValue and this DoubleValue.
     ','line_number':263,'multiline':True]
['text':'*
     * Returns the product of this DoubleValue and the given ParticularDoubleValue.
     ','line_number':271,'multiline':True]
['text':'*
     * Returns the quotient of this DoubleValue and the given ParticularDoubleValue.
     ','line_number':279,'multiline':True]
['text':'*
     * Returns the quotient of the given ParticularDoubleValue and this
     * DoubleValue.
     ','line_number':287,'multiline':True]
['text':'*
     * Returns the remainder of this DoubleValue divided by the given
     * ParticularDoubleValue.
     ','line_number':296,'multiline':True]
['text':'*
     * Returns the remainder of the given ParticularDoubleValue and this
     * DoubleValue.
     ','line_number':305,'multiline':True]
['text':'*
     * Returns an IntegerValue with value -1, 0, or 1, if this DoubleValue is
     * less than, equal to, or greater than the given ParticularDoubleValue,
     * respectively.
     ','line_number':314,'multiline':True]
['text':' Derived binary methods.','line_number':325,'multiline':False]
['text':'*
     * Returns an IntegerValue with value 1, 0, or -1, if this DoubleValue is
     * less than, equal to, or greater than the given ParticularDoubleValue,
     * respectively.
     ','line_number':327,'multiline':True]
['text':' Implementations for Value.','line_number':338,'multiline':False]
