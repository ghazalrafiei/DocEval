['text':'
 * ProGuard -- shrinking, optimization, obfuscation, and preverification
 *             of Java bytecode.
 *
 * Copyright (c) 2002-2019 Guardsquare NV
 *
 * This program is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License as published by the Free
 * Software Foundation; either version 2 of the License, or (at your option)
 * any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
 * more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 ','line_number':1,'multiline':True]
['text':'*
 * This MemberVisitor counts the parameters and marks the used parameters
 * of the methods that it visits. It also marks the 'this' parameters of
 * methods that have hierarchies.
 *
 * @author Eric Lafortune
 ','line_number':33,'multiline':True]
['text':'*','line_number':46,'multiline':False]
['text':'/
    private static       boolean DEBUG = System.getProperty("pum") != null;
    //','line_number':48,'multiline':True]
['text':'*
     * Creates a new ParameterUsageMarker.
     ','line_number':59,'multiline':True]
['text':'*
     * Creates a new ParameterUsageMarker that optionally marks all parameters.
     * @param markThisParameter specifies whether all 'this' parameters should
     *                          be marked as being used.
     * @param markAllParameters specifies whether all other parameters should
     *                          be marked as being used.
     ','line_number':68,'multiline':True]
['text':'*
     * Creates a new ParameterUsageMarker that optionally marks all parameters.
     * @param markThisParameter specifies whether all 'this' parameters should
     *                          be marked as being used.
     * @param markAllParameters specifies whether all other parameters should
     *                          be marked as being used.
     * @param analyzeCode       specifies whether the code of visited methods
     *                          should be analyzed for used parameters.
     ','line_number':82,'multiline':True]
['text':' Implementations for MemberVisitor.','line_number':101,'multiline':False]
['text':' Must we mark the 'this' parameter?','line_number':113,'multiline':False]
['text':' Mark the 'this' parameter.','line_number':117,'multiline':False]
['text':' Must we mark all other parameters?','line_number':121,'multiline':False]
['text':' Mark all parameters, without the 'this' parameter.','line_number':124,'multiline':False]
['text':' Is it a native method?','line_number':130,'multiline':False]
['text':' Mark all parameters.','line_number':133,'multiline':False]
['text':' Is it an abstract method?','line_number':137,'multiline':False]
['text':' Mark the 'this' parameter.','line_number':140,'multiline':False]
['text':' Is it a non-native, concrete method?','line_number':144,'multiline':False]
['text':' Is the method not static, but synchronized, or can it have','line_number':147,'multiline':False]
['text':' other implementations, or is it a class instance initializer?','line_number':148,'multiline':False]
['text':' Mark the 'this' parameter.','line_number':154,'multiline':False]
['text':' Mark the parameters that are used by the code.','line_number':160,'multiline':False]
['text':' Set the parameter size.','line_number':177,'multiline':False]
['text':' Can the method have other implementations?','line_number':184,'multiline':False]
['text':' All implementations must keep all parameters of this method,','line_number':187,'multiline':False]
['text':' including the 'this' parameter.','line_number':188,'multiline':False]
['text':' Implementations for AttributeVisitor.','line_number':194,'multiline':False]
['text':' Evaluate the code.','line_number':201,'multiline':False]
['text':' Mark the parameters that are used by the code.','line_number':204,'multiline':False]
['text':' Implementations for InstructionVisitor.','line_number':209,'multiline':False]
['text':' The parameter indices stored in the producer values are','line_number':222,'multiline':False]
['text':' parameter offsets, taking into account Category 2 types,','line_number':223,'multiline':False]
['text':' and therefore compatible with variable indices.','line_number':224,'multiline':False]
['text':' Mark the variable.','line_number':230,'multiline':False]
['text':' Account for Category 2 instructions, which take up two entries.','line_number':233,'multiline':False]
['text':' Small utility methods.','line_number':245,'multiline':False]
['text':'*
     * Sets the total size of the parameters.
     ','line_number':247,'multiline':True]
['text':'*
     * Returns the total size of the parameters.
     ','line_number':256,'multiline':True]
['text':'*
     * Marks the given parameter as being used.
     ','line_number':265,'multiline':True]
['text':'*
     * Marks the given parameters as being used.
     ','line_number':274,'multiline':True]
['text':'*
     * Returns whether the given method has any unused parameters.
     ','line_number':283,'multiline':True]
['text':'*
     * Returns whether the given parameter is being used.
     ','line_number':292,'multiline':True]
['text':'*
     * Returns which parameters are being used.
     ','line_number':301,'multiline':True]
