['text':'
 * ProGuard -- shrinking, optimization, obfuscation, and preverification
 *             of Java bytecode.
 *
 * Copyright (c) 2002-2019 Guardsquare NV
 *
 * This program is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License as published by the Free
 * Software Foundation; either version 2 of the License, or (at your option)
 * any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
 * more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 ','line_number':1,'multiline':True]
['text':'*
 * This ReferenceValue represents a reference value that is tagged with a trace
 * value.
 *
 * @author Eric Lafortune
 ','line_number':26,'multiline':True]
['text':'*
     * Creates a new reference value with the given ID.
     ','line_number':38,'multiline':True]
['text':'*
     * Returns the reference value.
     ','line_number':49,'multiline':True]
['text':'*
     * Returns the trace value.
     ','line_number':58,'multiline':True]
['text':' Implementations for ReferenceValue.','line_number':67,'multiline':False]
['text':' We're letting the value factory do the cast (either preserving the','line_number':101,'multiline':False]
['text':' trace value or setting a new one).','line_number':102,'multiline':False]
['text':' We're keeping the existing trace value, if any, or attaching a new','line_number':145,'multiline':False]
['text':' one otherwise.','line_number':146,'multiline':False]
['text':' Implementations of binary methods of ReferenceValue.','line_number':159,'multiline':False]
['text':' Implementations of binary ReferenceValue methods with','line_number':172,'multiline':False]
['text':' UnknownReferenceValue arguments.','line_number':173,'multiline':False]
['text':' Implementations of binary ReferenceValue methods with','line_number':187,'multiline':False]
['text':' TypedReferenceValue arguments.','line_number':188,'multiline':False]
['text':' Implementations of binary ReferenceValue methods with','line_number':202,'multiline':False]
['text':' IdentifiedReferenceValue arguments.','line_number':203,'multiline':False]
['text':' Implementations of binary ReferenceValue methods with','line_number':218,'multiline':False]
['text':' ArrayReferenceValue arguments.','line_number':219,'multiline':False]
['text':' Implementations of binary ReferenceValue methods with','line_number':234,'multiline':False]
['text':' IdentifiedArrayReferenceValue arguments.','line_number':235,'multiline':False]
['text':' Implementations of binary ReferenceValue methods with','line_number':250,'multiline':False]
['text':' DetailedArrayReferenceValue arguments.','line_number':251,'multiline':False]
['text':' Implementations of binary ReferenceValue methods with','line_number':266,'multiline':False]
['text':' TracedReferenceValue arguments.','line_number':267,'multiline':False]
['text':' Implementations for Value.','line_number':286,'multiline':False]
['text':' Implementations for Object.','line_number':304,'multiline':False]
