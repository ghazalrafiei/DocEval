['text':'
 * ProGuard -- shrinking, optimization, obfuscation, and preverification
 *             of Java bytecode.
 *
 * Copyright (c) 2002-2019 Guardsquare NV
 *
 * This program is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License as published by the Free
 * Software Foundation; either version 2 of the License, or (at your option)
 * any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
 * more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 ','line_number':1,'multiline':True]
['text':'*
 * This class visitor determines whether a given domain class can be optimized
 * by the GSON optimizations and traverses both the class and field hierarchy
 * to look for further domain classes.
 *
 * @author Lars Vandenbergh
 ','line_number':32,'multiline':True]
['text':'*
     * Creates a new GsonDomainClassFinder.
     *
     * @param typeAdapterClassPool the class pool containing the classes for
     *                             which a custom Gson type adapter is
     *                             registered.
     * @param gsonDomainClassPool  the class pool to which the found domain
     *                             classes are added.
     * @param notePrinter          used to print notes about domain classes that
     *                             can not be handled by the Gson optimization.
     ','line_number':56,'multiline':True]
['text':' Implementations for ClassVisitor.','line_number':77,'multiline':False]
['text':' Local or anonymous classes are excluded by GSON.','line_number':84,'multiline':False]
['text':' No need to note here because this is not handled','line_number':88,'multiline':False]
['text':' by GSON either.','line_number':89,'multiline':False]
['text':' Classes with fields that have generic type parameters are','line_number':111,'multiline':False]
['text':' not supported by our optimization as it is rather complex','line_number':112,'multiline':False]
['text':' to derive all possible type arguments and generate methods','line_number':113,'multiline':False]
['text':' for each case.','line_number':114,'multiline':False]
['text':' Class with duplicate field names are not supported by','line_number':130,'multiline':False]
['text':' GSON either.','line_number':131,'multiline':False]
['text':' Classes for which type adapters were registered are not optimized.','line_number':147,'multiline':False]
['text':' Classes that contain any JsonAdapter annotations are not optimized.','line_number':164,'multiline':False]
['text':' Add type occurring in toJson() invocation to domain class pool.','line_number':192,'multiline':False]
['text':' Recursively visit the fields of the domain class and consider','line_number':195,'multiline':False]
['text':' their classes as domain classes too.','line_number':196,'multiline':False]
['text':' Consider super and sub classes as domain classes too.','line_number':205,'multiline':False]
['text':' Library classes can not be optimized.','line_number':217,'multiline':False]
['text':' Utility methods.','line_number':221,'multiline':False]
