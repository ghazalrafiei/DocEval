['text':'
 * ProGuard -- shrinking, optimization, obfuscation, and preverification
 *             of Java bytecode.
 *
 * Copyright (c) 2002-2019 Guardsquare NV
 *
 * This program is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License as published by the Free
 * Software Foundation; either version 2 of the License, or (at your option)
 * any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
 * more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 ','line_number':1,'multiline':True]
['text':'*
 * This ClassVisitor visits domain classes that can be involved in a GSON
 * (de)serialization and injects an optimized TypeAdapter for each of them.
 *
 * @author Lars Vandenbergh
 ','line_number':35,'multiline':True]
['text':'*
     * Creates a new OptimizedTypeAdapterAdder.
     *
     * @param programClassPool         the program class pool used for looking
     *                                 up references to program classes.
     * @param libraryClassPool         the library class pool used for looking
     *                                 up references to library classes.
     * @param codeAttributeEditor      the code attribute editor used for
     *                                 implementing the added type adapters.
     * @param serializationInfo        contains information on which classes
     *                                 and fields to serialize and how.
     * @param deserializationInfo      contains information on which classes
     *                                 and fields to deserialize and how.
     * @param injectedClassNameMap     map to which the names of new type
     *                                 adapter classes are added.
     * @param typeAdapterRegistry      the registry to which the corresponding
     *                                 type adapter class name is added for a
     *                                 given domain class name.
     * @param instanceCreatorClassPool class pool that contains the domain
     *                                 classes for which an InstanceCreator
     *                                 is registered.
     ','line_number':55,'multiline':True]
['text':' Implementations for ClassVisitor.','line_number':97,'multiline':False]
['text':' Derive class name for optimized type adapter from the name of the','line_number':102,'multiline':False]
['text':' domain class.','line_number':103,'multiline':False]
['text':' Utility methods.','line_number':153,'multiline':False]
['text':' This is mostly done to make sure the internal class name gets','line_number':157,'multiline':False]
['text':' adapted properly during obfuscation.','line_number':158,'multiline':False]
