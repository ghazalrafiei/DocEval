['text':'
 * ProGuard -- shrinking, optimization, obfuscation, and preverification
 *             of Java bytecode.
 *
 * Copyright (c) 2002-2019 Guardsquare NV
 *
 * This program is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License as published by the Free
 * Software Foundation; either version 2 of the License, or (at your option)
 * any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
 * more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 ','line_number':1,'multiline':True]
['text':'*
 * This ClassPoolVisitor will visit all Clazz objects of the class pool
 * in a parallel way. For each thread, a separate ClassVisitor will be
 * created using {@link ClassVisitorFactory#createClassVisitor()}.
 * <p>
 * The number of parallel threads is coupled to the number of available
 * processors:
 * <pre>
 *     parallel_threads = Runtime.getRuntime().availableProcessors() - 1;
 * </pre>
 * <p>
 * It is possible to override the number of threads by setting the
 * environment variable {@code parallel.threads} to an integer > 0.
 *
 * @author Thomas Neidhart
 ','line_number':29,'multiline':True]
['text':'*
     * A factory for ClassVisitor objects.
     ','line_number':68,'multiline':True]
['text':'*
         * Creates a ClassVisitor that will be used during
         * parallel visiting of classes in a ClassPool.
         ','line_number':73,'multiline':True]
['text':'*
     * Create a new ParallelAllClassVisitor that will use the given factory
     * to visit all classes in a ClassPool in a parallel way.
     ','line_number':84,'multiline':True]
['text':' Implementations for ClassPoolVisitor.','line_number':94,'multiline':False]
['text':' Fallback to single thread execution if the thread count','line_number':100,'multiline':False]
['text':' was overridden by an environment variable.','line_number':101,'multiline':False]
['text':' Shutdown the executor service to release memory.','line_number':114,'multiline':False]
['text':' Rethrow any exception that was thrown in the executor threads.','line_number':117,'multiline':False]
['text':' Implementations for ClassVisitor.','line_number':176,'multiline':False]
