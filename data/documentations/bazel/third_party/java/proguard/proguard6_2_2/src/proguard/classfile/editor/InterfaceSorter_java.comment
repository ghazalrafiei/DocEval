['text':'
 * ProGuard -- shrinking, optimization, obfuscation, and preverification
 *             of Java bytecode.
 *
 * Copyright (c) 2002-2019 Guardsquare NV
 *
 * This program is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License as published by the Free
 * Software Foundation; either version 2 of the License, or (at your option)
 * any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
 * more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 ','line_number':1,'multiline':True]
['text':'*
 * This ClassVisitor sorts the interfaces of the program classes that it visits.
 *
 * @author Eric Lafortune
 ','line_number':32,'multiline':True]
['text':' Implementations for ClassVisitor.','line_number':45,'multiline':False]
['text':' Sort the interfaces.','line_number':54,'multiline':False]
['text':' Update the signature.','line_number':57,'multiline':False]
['text':' Remove any duplicate entries.','line_number':60,'multiline':False]
['text':' Lazily create the array.','line_number':66,'multiline':False]
['text':' Implementations for AttributeVisitor.','line_number':84,'multiline':False]
['text':' Recompose the signature types in a string buffer.','line_number':95,'multiline':False]
['text':' Also update the array with referenced classes.','line_number':98,'multiline':False]
['text':' Process the generic definitions and superclass.','line_number':102,'multiline':False]
['text':' Copy the variable type declarations.','line_number':106,'multiline':False]
['text':' Append the type.','line_number':111,'multiline':False]
['text':' Copy any referenced classes.','line_number':114,'multiline':False]
['text':' Copy the super class type.','line_number':133,'multiline':False]
['text':' Append the type.','line_number':138,'multiline':False]
['text':' Copy any referenced classes.','line_number':141,'multiline':False]
['text':' Copy the interface types, based on the sorted interface classes.','line_number':162,'multiline':False]
['text':' This has the advantage that we will disregard any interface types','line_number':163,'multiline':False]
['text':' that are not in the interface classes, like in some versions of','line_number':164,'multiline':False]
['text':' the Scala runtime library.','line_number':165,'multiline':False]
['text':' Consider the interface class name.','line_number':168,'multiline':False]
['text':' Find the corresponding interface type.','line_number':173,'multiline':False]
['text':' Skip the superclass type.','line_number':177,'multiline':False]
['text':' Append the type.','line_number':194,'multiline':False]
['text':' Copy any referenced classes.','line_number':197,'multiline':False]
['text':' Skip all referenced classes.','line_number':214,'multiline':False]
['text':' Did the signature change?','line_number':222,'multiline':False]
['text':' Update the signature.','line_number':225,'multiline':False]
['text':' Update the referenced classes.','line_number':228,'multiline':False]
