['text':'
 * ProGuard -- shrinking, optimization, obfuscation, and preverification
 *             of Java bytecode.
 *
 * Copyright (c) 2002-2019 Guardsquare NV
 *
 * This program is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License as published by the Free
 * Software Foundation; either version 2 of the License, or (at your option)
 * any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
 * more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 ','line_number':1,'multiline':True]
['text':'*
 * This ClassVisitor removes constant pool entries, class members, and other
 * class elements that are not marked as being used.
 *
 * @author Eric Lafortune
 ','line_number':35,'multiline':True]
['text':'*
     * Creates a new ClassShrinker.
     * @param usageMarker the usage marker that is used to mark the classes
     *                    and class members.
     ','line_number':60,'multiline':True]
['text':' Implementations for ClassVisitor.','line_number':71,'multiline':False]
['text':' Shrink the arrays for constant pool, interfaces, fields, methods,','line_number':75,'multiline':False]
['text':' and class attributes.','line_number':76,'multiline':False]
['text':' Shrink the arrays for nest members.','line_number':85,'multiline':False]
['text':' Shrink the constant pool, also setting up an index map.','line_number':88,'multiline':False]
['text':' Compact the remaining fields, methods, and attributes,','line_number':115,'multiline':False]
['text':' and remap their references to the constant pool.','line_number':116,'multiline':False]
['text':' Remap the references to the constant pool if it has shrunk.','line_number':121,'multiline':False]
['text':' Remap all constant pool references.','line_number':126,'multiline':False]
['text':' Replace any unused classes in the signatures.','line_number':131,'multiline':False]
['text':' Compact the extra field pointing to the subclasses of this class.','line_number':136,'multiline':False]
['text':' Library classes are left unchanged.','line_number':144,'multiline':False]
['text':' Compact the extra field pointing to the subclasses of this class.','line_number':146,'multiline':False]
['text':' Implementations for MemberVisitor.','line_number':152,'multiline':False]
['text':' Shrink the attributes array.','line_number':156,'multiline':False]
['text':' Shrink any attributes.','line_number':161,'multiline':False]
['text':' Implementations for AttributeVisitor.','line_number':166,'multiline':False]
['text':' Shrink the array of BootstrapMethodInfo objects.','line_number':173,'multiline':False]
['text':' Remap all bootstrap method references.','line_number':182,'multiline':False]
['text':' Shrink the array of InnerClassesInfo objects.','line_number':191,'multiline':False]
['text':' Sometimes, a class is still referenced (apparently as a dummy class),','line_number':200,'multiline':False]
['text':' but its enclosing method is not. Then remove the reference to','line_number':201,'multiline':False]
['text':' the enclosing method.','line_number':202,'multiline':False]
['text':' E.g. the anonymous inner class javax.swing.JList$1 is defined inside','line_number':203,'multiline':False]
['text':' a constructor of javax.swing.JList, but it is also referenced as a','line_number':204,'multiline':False]
['text':' dummy argument in a constructor of javax.swing.JList$ListSelectionHandler.','line_number':205,'multiline':False]
['text':' Shrink the attributes array.','line_number':218,'multiline':False]
['text':' Shrink the attributes themselves.','line_number':223,'multiline':False]
['text':' Shrink the local variable info array.','line_number':230,'multiline':False]
['text':' Shrink the local variable type info array.','line_number':239,'multiline':False]
['text':' Shrink the annotations array.','line_number':248,'multiline':False]
['text':' Shrink the annotations themselves.','line_number':253,'multiline':False]
['text':' Loop over all parameters.','line_number':260,'multiline':False]
['text':' Shrink the parameter annotations array.','line_number':263,'multiline':False]
['text':' Shrink the annotations themselves.','line_number':269,'multiline':False]
['text':' Implementations for AnnotationVisitor.','line_number':274,'multiline':False]
['text':' Shrink the element values array.','line_number':278,'multiline':False]
['text':' Shrink the element values themselves.','line_number':283,'multiline':False]
['text':'*
     * This AttributeVisitor shrinks the nest members in the nest member
     * attributes that it visits.
     ','line_number':288,'multiline':True]
['text':' Shrink the array of nest member indices.','line_number':301,'multiline':False]
['text':' We must do this before the corresponding constants are remapped.','line_number':302,'multiline':False]
['text':'*
     * This AttributeVisitor updates the Utf8 constants of signatures
     * of classes, fields, and methods.
     ','line_number':311,'multiline':True]
['text':' Go over the classes in the signature.','line_number':327,'multiline':False]
['text':' Start construction a new signature.','line_number':335,'multiline':False]
['text':' Replace the class name if it is unused.','line_number':344,'multiline':False]
['text':' Use a short name if it's an inner class after a '.'','line_number':354,'multiline':False]
['text':' separator.','line_number':355,'multiline':False]
['text':' Update the signature.','line_number':367,'multiline':False]
['text':' Implementations for ElementValueVisitor.','line_number':374,'multiline':False]
['text':' Shrink the contained annotation.','line_number':381,'multiline':False]
['text':' Shrink the element values array.','line_number':388,'multiline':False]
['text':' Shrink the element values themselves.','line_number':393,'multiline':False]
['text':' Small utility methods.','line_number':398,'multiline':False]
['text':'*
     * Removes all entries that are not marked as being used from the given
     * constant pool. Creates a map from the old indices to the new indices
     * as a side effect.
     * @return the new number of entries.
     ','line_number':400,'multiline':True]
['text':' Shift the used constant pool entries together.','line_number':416,'multiline':False]
['text':' Is the constant being used? Don't update the flag if this is the','line_number':423,'multiline':False]
['text':' second half of a long entry.','line_number':424,'multiline':False]
['text':' Remember the new index.','line_number':432,'multiline':False]
['text':' Shift the constant pool entry.','line_number':435,'multiline':False]
['text':' Remember an invalid index.','line_number':440,'multiline':False]
['text':' Clear the remaining constant pool elements.','line_number':445,'multiline':False]
['text':'*
     * Creates an array marking unused constant pool entries for all the
     * elements in the given array of constant pool indices.
     * @return an array of flags indicating unused elements.
     ','line_number':452,'multiline':True]
['text':' Remember the unused constants.','line_number':461,'multiline':False]
['text':'*
     * Removes all indices that point to unused constant pool entries
     * from the given array.
     * @return the new number of indices.
     ','line_number':474,'multiline':True]
['text':' Shift the used objects together.','line_number':483,'multiline':False]
['text':' Clear the remaining array elements.','line_number':492,'multiline':False]
['text':'*
     * Removes all Clazz objects that are not marked as being used
     * from the given array and returns the remaining objects in a an array
     * of the right size.
     * @return the new array.
     ','line_number':499,'multiline':True]
['text':' Shrink the given array in-place.','line_number':512,'multiline':False]
['text':' Return immediately if the array is of right size already.','line_number':519,'multiline':False]
['text':' Copy the remaining elements into a new array of the right size.','line_number':525,'multiline':False]
['text':'*
     * Removes all entries that are not marked as being used from the given
     * array of bootstrap methods. Creates a map from the old indices to the
     * new indices as a side effect.
     * @return the new number of entries.
     ','line_number':532,'multiline':True]
['text':' Shift the used bootstrap methods together.','line_number':547,'multiline':False]
['text':' Is the entry being used?','line_number':552,'multiline':False]
['text':' Remember the new index.','line_number':555,'multiline':False]
['text':' Shift the entry.','line_number':558,'multiline':False]
['text':' Remember an invalid index.','line_number':563,'multiline':False]
['text':' Clear the remaining bootstrap methods.','line_number':568,'multiline':False]
['text':'*
     * Removes all VisitorAccepter objects that are not marked as being used
     * from the given array.
     * @return the new number of VisitorAccepter objects.
     ','line_number':575,'multiline':True]
['text':' Shift the used objects together.','line_number':584,'multiline':False]
['text':' Clear any remaining array elements.','line_number':595,'multiline':False]
