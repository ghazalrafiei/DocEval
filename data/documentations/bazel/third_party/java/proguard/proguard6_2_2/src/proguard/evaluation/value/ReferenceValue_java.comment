['text':'
 * ProGuard -- shrinking, optimization, obfuscation, and preverification
 *             of Java bytecode.
 *
 * Copyright (c) 2002-2019 Guardsquare NV
 *
 * This program is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License as published by the Free
 * Software Foundation; either version 2 of the License, or (at your option)
 * any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
 * more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 ','line_number':1,'multiline':True]
['text':'*
 * This class represents a partially evaluated reference value.
 *
 * @author Eric Lafortune
 ','line_number':25,'multiline':True]
['text':' Basic unary methods.','line_number':32,'multiline':False]
['text':'*
     * Returns the type.
     ','line_number':34,'multiline':True]
['text':'*
     * Returns the class that is referenced by the type.
     ','line_number':40,'multiline':True]
['text':'*
     * Returns whether the actual type of this ReferenceValue may be an
     * extension of its type.
     ','line_number':46,'multiline':True]
['text':'*
     * Returns whether this ReferenceValue is <code>null</code>.
     * @return <code>NEVER</code>, <code>MAYBE</code>, or <code>ALWAYS</code>.
     ','line_number':53,'multiline':True]
['text':'*
     * Returns whether the type is an instance of the given type.
     ','line_number':60,'multiline':True]
['text':'*
     * Returns this ReferenceValue, cast to the given type.
     ','line_number':66,'multiline':True]
['text':'*
     * Returns the length of the array, assuming this type is an array.
     ','line_number':72,'multiline':True]
['text':'*
     * Returns the value of the array at the given index, assuming this type
     * is an integer array.
     ','line_number':81,'multiline':True]
['text':'*
     * Returns the value of the array at the given index, assuming this type
     * is an long array.
     ','line_number':91,'multiline':True]
['text':'*
     * Returns the value of the array at the given index, assuming this type
     * is an float array.
     ','line_number':101,'multiline':True]
['text':'*
     * Returns the value of the array at the given index, assuming this type
     * is an double array.
     ','line_number':111,'multiline':True]
['text':'*
     * Returns the value of the array at the given index, assuming this type
     * is a reference array.
     ','line_number':121,'multiline':True]
['text':'*
     * Stores the given value at the given index in the given array, assuming
     * this type is an array.
     ','line_number':131,'multiline':True]
['text':' Basic binary methods.','line_number':140,'multiline':False]
['text':'*
     * Returns the generalization of this ReferenceValue and the given other
     * ReferenceValue.
     ','line_number':142,'multiline':True]
['text':'*
     * Returns whether this ReferenceValue is equal to the given other
     * ReferenceValue.
     * @return <code>NEVER</code>, <code>MAYBE</code>, or <code>ALWAYS</code>.
     ','line_number':149,'multiline':True]
['text':' Derived unary methods.','line_number':157,'multiline':False]
['text':'*
     * Returns whether this ReferenceValue is not <code>null</code>.
     * @return <code>NEVER</code>, <code>MAYBE</code>, or <code>ALWAYS</code>.
     ','line_number':159,'multiline':True]
['text':' Derived binary methods.','line_number':169,'multiline':False]
['text':'*
     * Returns whether this ReferenceValue and the given ReferenceValue are different.
     * @return <code>NEVER</code>, <code>MAYBE</code>, or <code>ALWAYS</code>.
     ','line_number':171,'multiline':True]
['text':' Similar binary methods, but this time with unknown arguments.','line_number':181,'multiline':False]
['text':'*
     * Returns the generalization of this ReferenceValue and the given other
     * UnknownReferenceValue.
     ','line_number':183,'multiline':True]
['text':'*
     * Returns whether this ReferenceValue is equal to the given other
     * UnknownReferenceValue.
     * @return <code>NEVER</code>, <code>MAYBE</code>, or <code>ALWAYS</code>.
     ','line_number':193,'multiline':True]
['text':' Similar binary methods, but this time with typed reference arguments.','line_number':204,'multiline':False]
['text':'*
     * Returns the generalization of this ReferenceValue and the given other
     * TypedReferenceValue.
     ','line_number':206,'multiline':True]
['text':'*
     * Returns whether this ReferenceValue is equal to the given other
     * TypedReferenceValue.
     * @return <code>NEVER</code>, <code>MAYBE</code>, or <code>ALWAYS</code>.
     ','line_number':216,'multiline':True]
['text':' Similar binary methods, but this time with identified reference','line_number':227,'multiline':False]
['text':' arguments.','line_number':228,'multiline':False]
['text':'*
     * Returns the generalization of this ReferenceValue and the given other
     * IdentifiedReferenceValue.
     ','line_number':230,'multiline':True]
['text':'*
     * Returns whether this ReferenceValue is equal to the given other
     * IdentifiedReferenceValue.
     * @return <code>NEVER</code>, <code>MAYBE</code>, or <code>ALWAYS</code>.
     ','line_number':240,'multiline':True]
['text':' Similar binary methods, but this time with array reference arguments.','line_number':251,'multiline':False]
['text':'*
     * Returns the generalization of this ReferenceValue and the given other
     * ArrayReferenceValue.
     ','line_number':253,'multiline':True]
['text':'*
     * Returns whether this ReferenceValue is equal to the given other
     * ArrayReferenceValue.
     * @return <code>NEVER</code>, <code>MAYBE</code>, or <code>ALWAYS</code>.
     ','line_number':263,'multiline':True]
['text':' Similar binary methods, but this time with identified array reference','line_number':274,'multiline':False]
['text':' arguments.','line_number':275,'multiline':False]
['text':'*
     * Returns the generalization of this ReferenceValue and the given other
     * IdentifiedArrayReferenceValue.
     ','line_number':277,'multiline':True]
['text':'*
     * Returns whether this ReferenceValue is equal to the given other
     * IdentifiedArrayReferenceValue.
     * @return <code>NEVER</code>, <code>MAYBE</code>, or <code>ALWAYS</code>.
     ','line_number':287,'multiline':True]
['text':' Similar binary methods, but this time with detailed array reference','line_number':298,'multiline':False]
['text':' arguments.','line_number':299,'multiline':False]
['text':'*
     * Returns the generalization of this ReferenceValue and the given other
     * DetailedArrayReferenceValue.
     ','line_number':301,'multiline':True]
['text':'*
     * Returns whether this ReferenceValue is equal to the given other
     * DetailedArrayReferenceValue.
     * @return <code>NEVER</code>, <code>MAYBE</code>, or <code>ALWAYS</code>.
     ','line_number':311,'multiline':True]
['text':' Similar binary methods, but this time with traced arguments.','line_number':322,'multiline':False]
['text':'*
     * Returns the generalization of this ReferenceValue and the given other
     * TracedReferenceValue.
     ','line_number':324,'multiline':True]
['text':'*
     * Returns whether this ReferenceValue is equal to the given other
     * TracedReferenceValue.
     * @return <code>NEVER</code>, <code>MAYBE</code>, or <code>ALWAYS</code>.
     ','line_number':334,'multiline':True]
['text':' Implementations for Value.','line_number':345,'multiline':False]
['text':' Implementations for Object.','line_number':363,'multiline':False]
