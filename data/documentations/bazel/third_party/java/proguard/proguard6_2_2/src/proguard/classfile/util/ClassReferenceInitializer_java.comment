['text':'
 * ProGuard -- shrinking, optimization, obfuscation, and preverification
 *             of Java bytecode.
 *
 * Copyright (c) 2002-2019 Guardsquare NV
 *
 * This program is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License as published by the Free
 * Software Foundation; either version 2 of the License, or (at your option)
 * any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
 * more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 ','line_number':1,'multiline':True]
['text':'*
 * This ClassVisitor initializes the references of all classes that
 * it visits.
 * <p>
 * All class constant pool entries get direct references to the corresponding
 * classes. These references make it more convenient to travel up and across
 * the class hierarchy.
 * <p>
 * All field and method reference constant pool entries get direct references
 * to the corresponding classes, fields, and methods.
 * <p>
 * All name and type constant pool entries get a list of direct references to
 * the classes listed in the type.
 * <p>
 * This visitor optionally prints warnings if some items can't be found.
 * <p>
 * The class hierarchy must be initialized before using this visitor.
 *
 * @author Eric Lafortune
 ','line_number':33,'multiline':True]
['text':'*
     * Creates a new ClassReferenceInitializer that initializes the references
     * of all visited class files.
     ','line_number':74,'multiline':True]
['text':'*
     * Creates a new ClassReferenceInitializer that initializes the references
     * of all visited class files, optionally printing warnings if some classes
     * or class members can't be found or if they are in the program class pool.
     ','line_number':85,'multiline':True]
['text':' Implementations for ClassVisitor.','line_number':106,'multiline':False]
['text':' Initialize the constant pool entries.','line_number':110,'multiline':False]
['text':' Initialize all fields and methods.','line_number':113,'multiline':False]
['text':' Initialize the attributes.','line_number':117,'multiline':False]
['text':' Initialize all fields and methods.','line_number':124,'multiline':False]
['text':' Implementations for MemberVisitor.','line_number':130,'multiline':False]
['text':' Initialize the attributes.','line_number':138,'multiline':False]
['text':' Initialize the attributes.','line_number':149,'multiline':False]
['text':' Implementations for ConstantVisitor.','line_number':170,'multiline':False]
['text':' Fill out the String class.','line_number':177,'multiline':False]
['text':' Fill out the MethodHandle class.','line_number':201,'multiline':False]
['text':' Methods for array types should be found in the Object class.','line_number':211,'multiline':False]
['text':' See if we can find the referenced class.','line_number':217,'multiline':False]
['text':' Unresolved references are assumed to refer to library classes','line_number':218,'multiline':False]
['text':' that will not change anyway.','line_number':219,'multiline':False]
['text':' See if we can find the referenced class member somewhere in the','line_number':229,'multiline':False]
['text':' hierarchy.','line_number':230,'multiline':False]
['text':' We haven't found the class member anywhere in the hierarchy.','line_number':240,'multiline':False]
['text':' Fill out the referenced class.','line_number':271,'multiline':False]
['text':' Fill out the Class class.','line_number':275,'multiline':False]
['text':' Fill out the MethodType class.','line_number':283,'multiline':False]
['text':' Implementations for AttributeVisitor.','line_number':293,'multiline':False]
['text':' See if we can find the referenced class.','line_number':302,'multiline':False]
['text':' Is there an enclosing method? Otherwise it's just initialization','line_number':308,'multiline':False]
['text':' code outside of the constructors.','line_number':309,'multiline':False]
['text':' See if we can find the method in the referenced class.','line_number':315,'multiline':False]
['text':' We couldn't find the enclosing method.','line_number':322,'multiline':False]
['text':' Initialize the nested attributes.','line_number':341,'multiline':False]
['text':' Initialize the local variables.','line_number':348,'multiline':False]
['text':' Initialize the local variable types.','line_number':355,'multiline':False]
['text':' Initialize the annotations.','line_number':370,'multiline':False]
['text':' Initialize the annotations.','line_number':377,'multiline':False]
['text':' Initialize the annotation.','line_number':384,'multiline':False]
['text':' Implementations for LocalVariableInfoVisitor.','line_number':389,'multiline':False]
['text':' Implementations for LocalVariableTypeInfoVisitor.','line_number':399,'multiline':False]
['text':' Implementations for AnnotationVisitor.','line_number':409,'multiline':False]
['text':' Initialize the element values.','line_number':417,'multiline':False]
['text':' Implementations for ElementValueVisitor.','line_number':422,'multiline':False]
['text':' Initialize the annotation.','line_number':454,'multiline':False]
['text':' Initialize the element values.','line_number':463,'multiline':False]
['text':'*
     * Initializes the referenced method of an element value, if any.
     ','line_number':468,'multiline':True]
['text':' See if we have a referenced class.','line_number':473,'multiline':False]
['text':' See if we can find the method in the referenced class','line_number':478,'multiline':False]
['text':' (ignoring the descriptor).','line_number':479,'multiline':False]
['text':' Small utility methods.','line_number':489,'multiline':False]
['text':'*
     * Returns the single class referenced by the given descriptor, or
     * <code>null</code> if there isn't any useful reference.
     ','line_number':491,'multiline':True]
['text':'*
     * Returns an array of classes referenced by the given descriptor, or
     * <code>null</code> if there aren't any useful references.
     ','line_number':512,'multiline':True]
['text':'*
     * Returns the class with the given name, either for the program class pool
     * or from the library class pool, or <code>null</code> if it can't be found.
     ','line_number':553,'multiline':True]
['text':' Is it an array type?','line_number':559,'multiline':False]
['text':' Ignore any primitive array types.','line_number':562,'multiline':False]
['text':' Strip the array part.','line_number':568,'multiline':False]
['text':' First look for the class in the program class pool.','line_number':572,'multiline':False]
['text':' Otherwise look for the class in the library class pool.','line_number':575,'multiline':False]
['text':' We didn't find the superclass or interface. Print a warning.','line_number':583,'multiline':False]
['text':' The superclass or interface was found in the program class pool.','line_number':596,'multiline':False]
['text':' Print a warning.','line_number':597,'multiline':False]
