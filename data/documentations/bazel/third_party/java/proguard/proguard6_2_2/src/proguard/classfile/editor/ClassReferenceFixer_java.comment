['text':'
 * ProGuard -- shrinking, optimization, obfuscation, and preverification
 *             of Java bytecode.
 *
 * Copyright (c) 2002-2019 Guardsquare NV
 *
 * This program is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License as published by the Free
 * Software Foundation; either version 2 of the License, or (at your option)
 * any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
 * more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 ','line_number':1,'multiline':True]
['text':'*
 * This ClassVisitor fixes references of constant pool entries, fields,
 * methods, and attributes to classes whose names have changed. Descriptors
 * of member references are not updated yet.
 *
 * @see MemberReferenceFixer
 * @author Eric Lafortune
 ','line_number':33,'multiline':True]
['text':'*
     * Creates a new ClassReferenceFixer.
     * @param ensureUniqueMemberNames specifies whether class members whose
     *                                descriptor changes should get new, unique
     *                                names, in order to avoid naming conflicts
     *                                with similar methods.
     ','line_number':56,'multiline':True]
['text':' Implementations for ClassVisitor.','line_number':69,'multiline':False]
['text':' Fix the constant pool.','line_number':73,'multiline':False]
['text':' Fix class members.','line_number':76,'multiline':False]
['text':' Fix the attributes.','line_number':80,'multiline':False]
['text':' Fix class members.','line_number':87,'multiline':False]
['text':' Implementations for MemberVisitor.','line_number':93,'multiline':False]
['text':' Has the descriptor changed?','line_number':97,'multiline':False]
['text':' Update the descriptor.','line_number':107,'multiline':False]
['text':' Update the name, if requested.','line_number':111,'multiline':False]
['text':' Fix the attributes.','line_number':121,'multiline':False]
['text':' Has the descriptor changed?','line_number':128,'multiline':False]
['text':' Update the descriptor.','line_number':138,'multiline':False]
['text':' Update the name, if requested.','line_number':142,'multiline':False]
['text':' Fix the attributes.','line_number':152,'multiline':False]
['text':' Has the descriptor changed?','line_number':159,'multiline':False]
['text':' Update the descriptor.','line_number':164,'multiline':False]
['text':' Has the descriptor changed?','line_number':171,'multiline':False]
['text':' Update the descriptor.','line_number':178,'multiline':False]
['text':' Implementations for ConstantVisitor.','line_number':184,'multiline':False]
['text':' Does the string refer to a class, due to a Class.forName construct?','line_number':191,'multiline':False]
['text':' Reconstruct the new class name.','line_number':197,'multiline':False]
['text':' Update the String entry if required.','line_number':203,'multiline':False]
['text':' Only convert to an external class name if the original was','line_number':206,'multiline':False]
['text':' an external class name too.','line_number':207,'multiline':False]
['text':' Refer to a new Utf8 entry.','line_number':213,'multiline':False]
['text':' Has the descriptor changed?','line_number':223,'multiline':False]
['text':' Refer to a new NameAndType entry.','line_number':232,'multiline':False]
['text':' Has the descriptor changed?','line_number':241,'multiline':False]
['text':' Refer to a new NameAndType entry.','line_number':250,'multiline':False]
['text':' Do we know the referenced class?','line_number':259,'multiline':False]
['text':' Has the class name changed?','line_number':263,'multiline':False]
['text':' Refer to a new Utf8 entry.','line_number':268,'multiline':False]
['text':' Has the descriptor changed?','line_number':278,'multiline':False]
['text':' Update the descriptor.','line_number':285,'multiline':False]
['text':' Implementations for AttributeVisitor.','line_number':292,'multiline':False]
['text':' Fix the inner class names.','line_number':299,'multiline':False]
['text':' Fix the attributes.','line_number':306,'multiline':False]
['text':' Fix the types of the local variables.','line_number':313,'multiline':False]
['text':' Fix the signatures of the local variables.','line_number':320,'multiline':False]
['text':' Has the signature changed?','line_number':327,'multiline':False]
['text':' Update the signature.','line_number':334,'multiline':False]
['text':' Fix the annotations.','line_number':343,'multiline':False]
['text':' Fix the annotations.','line_number':350,'multiline':False]
['text':' Fix the annotation.','line_number':357,'multiline':False]
['text':' Implementations for InnerClassesInfoVisitor.','line_number':362,'multiline':False]
['text':' Fix the inner class name.','line_number':366,'multiline':False]
['text':' Implementations for LocalVariableInfoVisitor.','line_number':383,'multiline':False]
['text':' Has the descriptor changed?','line_number':387,'multiline':False]
['text':' Refer to a new Utf8 entry.','line_number':394,'multiline':False]
['text':' Implementations for LocalVariableTypeInfoVisitor.','line_number':400,'multiline':False]
['text':' Has the signature changed?','line_number':404,'multiline':False]
['text':' Update the signature.','line_number':411,'multiline':False]
['text':' Implementations for AnnotationVisitor.','line_number':417,'multiline':False]
['text':' Has the type changed?','line_number':421,'multiline':False]
['text':' Update the type.','line_number':428,'multiline':False]
['text':' Fix the element values.','line_number':433,'multiline':False]
['text':' Implementations for ElementValueVisitor.','line_number':438,'multiline':False]
['text':' Has the type name chamged?','line_number':447,'multiline':False]
['text':' Update the type name.','line_number':454,'multiline':False]
['text':' Has the class info changed?','line_number':463,'multiline':False]
['text':' Update the class info.','line_number':470,'multiline':False]
['text':' Fix the annotation.','line_number':479,'multiline':False]
['text':' Fix the element values.','line_number':486,'multiline':False]
['text':' Small utility methods.','line_number':491,'multiline':False]
['text':' If there is no referenced class, the descriptor won't change.','line_number':496,'multiline':False]
['text':' Unravel and reconstruct the class element of the descriptor.','line_number':502,'multiline':False]
['text':' Only if the descriptor contains a class name (e.g. with an array of','line_number':509,'multiline':False]
['text':' primitive types), the descriptor can change.','line_number':510,'multiline':False]
['text':' If there are no referenced classes, the descriptor won't change.','line_number':530,'multiline':False]
['text':' Unravel and reconstruct the class elements of the descriptor.','line_number':537,'multiline':False]
['text':' Strip the outer class name again, if it's an inner class.','line_number':554,'multiline':False]
['text':'*
     * Returns a unique class member name, based on the given name and descriptor.
     ','line_number':569,'multiline':True]
['text':'*
     * Returns the new class name based on the given class name and the new
     * name of the given referenced class. Class names of array types
     * are handled properly.
     ','line_number':580,'multiline':True]
['text':' If there is no referenced class, the class name won't change.','line_number':588,'multiline':False]
['text':' Reconstruct the class name.','line_number':594,'multiline':False]
['text':' Is it an array type?','line_number':597,'multiline':False]
['text':' Add the array prefixes and suffix "[L...;".','line_number':600,'multiline':False]
