['text':'
 * ProGuard -- shrinking, optimization, obfuscation, and preverification
 *             of Java bytecode.
 *
 * Copyright (c) 2002-2019 Guardsquare NV
 *
 * This program is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License as published by the Free
 * Software Foundation; either version 2 of the License, or (at your option)
 * any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
 * more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 ','line_number':1,'multiline':True]
['text':'*
 * This class represents an operand stack that contains <code>Value</code>
 * objects.
 *
 * @author Eric Lafortune
 ','line_number':27,'multiline':True]
['text':'*
     * Creates a new Stack with a given maximum size, accounting for the double
     * space required by Category 2 values.
     ','line_number':43,'multiline':True]
['text':'*
     * Creates a Stack that is a copy of the given Stack.
     ','line_number':53,'multiline':True]
['text':' Create the values array.','line_number':58,'multiline':False]
['text':' Copy the stack contents.','line_number':61,'multiline':False]
['text':'*
     * Returns the actual maximum stack size that was required for all stack
     * operations, accounting for the double space required by Category 2 values.
     ','line_number':66,'multiline':True]
['text':'*
     * Resets this Stack, so that it can be reused.
     ','line_number':76,'multiline':True]
['text':' Is the values array large enough?','line_number':81,'multiline':False]
['text':' Create a new one.','line_number':84,'multiline':False]
['text':' Clear the sizes.','line_number':88,'multiline':False]
['text':'*
     * Copies the values of the given Stack into this Stack.
     ','line_number':95,'multiline':True]
['text':' Is the values array large enough?','line_number':100,'multiline':False]
['text':' Create a new one.','line_number':103,'multiline':False]
['text':' Copy the stack contents.','line_number':107,'multiline':False]
['text':' Copy the sizes.','line_number':110,'multiline':False]
['text':'*
     * Generalizes the values of this Stack with the values of the given Stack.
     * The stacks must have the same current sizes.
     * @return whether the generalization has made any difference.
     ','line_number':116,'multiline':True]
['text':' Generalize the stack values.','line_number':130,'multiline':False]
['text':' Check if the other stack extends beyond this one.','line_number':152,'multiline':False]
['text':'*
     * Clears the stack.
     ','line_number':162,'multiline':True]
['text':' Clear the stack contents.','line_number':167,'multiline':False]
['text':'*
     * Returns the number of elements currently on the stack, accounting for the
     * double space required by Category 2 values.
     ','line_number':174,'multiline':True]
['text':'*
     * Gets the specified Value from the stack, without disturbing it.
     * @param index the index of the stack element, counting from the bottom
     *              of the stack.
     * @return the value at the specified position.
     ','line_number':184,'multiline':True]
['text':'*
     * Sets the specified Value on the stack, without disturbing it.
     * @param index the index of the stack element, counting from the bottom
     *              of the stack.
     * @param value the value to set.
     ','line_number':196,'multiline':True]
['text':'*
     * Gets the specified Value from the stack, without disturbing it.
     * @param index the index of the stack element, counting from the top
     *              of the stack.
     * @return the value at the specified position.
     ','line_number':208,'multiline':True]
['text':'*
     * Sets the specified Value on the stack, without disturbing it.
     * @param index the index of the stack element, counting from the top
     *              of the stack.
     * @param value the value to set.
     ','line_number':220,'multiline':True]
['text':'*
     * Removes the specified Value from the stack.
     * @param index the index of the stack element, counting from the top
     *              of the stack.
     ','line_number':232,'multiline':True]
['text':'*
     * Pushes the given Value onto the stack.
     ','line_number':246,'multiline':True]
['text':' Account for the extra space required by Category 2 values.','line_number':251,'multiline':False]
['text':' Push the value.','line_number':257,'multiline':False]
['text':' Update the maximum actual size;','line_number':260,'multiline':False]
['text':'*
     * Pops the top Value from the stack.
     ','line_number':268,'multiline':True]
['text':' Account for the extra space required by Category 2 values.','line_number':277,'multiline':False]
['text':' Pop methods that provide convenient casts to the expected value types.','line_number':287,'multiline':False]
['text':'*
     * Pops the top IntegerValue from the stack.
     ','line_number':289,'multiline':True]
['text':'*
     * Pops the top LongValue from the stack.
     ','line_number':298,'multiline':True]
['text':'*
     * Pops the top FloatValue from the stack.
     ','line_number':307,'multiline':True]
['text':'*
     * Pops the top DoubleValue from the stack.
     ','line_number':316,'multiline':True]
['text':'*
     * Pops the top ReferenceValue from the stack.
     ','line_number':325,'multiline':True]
['text':'*
     * Pops the top InstructionOffsetValue from the stack.
     ','line_number':334,'multiline':True]
['text':'*
     * Pops the top category 1 value from the stack.
     ','line_number':343,'multiline':True]
['text':'*
     * Pops the top category 2 value from the stack (or alternatively, two
     * Category 1 stack elements).
     ','line_number':352,'multiline':True]
['text':'*
     * Duplicates the top Category 1 value.
     ','line_number':363,'multiline':True]
['text':' Update the maximum actual size;','line_number':372,'multiline':False]
['text':'*
     * Duplicates the top Category 1 value, one Category 1 element down the
     * stack.
     ','line_number':380,'multiline':True]
['text':' Update the maximum actual size;','line_number':392,'multiline':False]
['text':'*
     * Duplicates the top Category 1 value, two Category 1 elements (or one
     * Category 2 element) down the stack.
     ','line_number':400,'multiline':True]
['text':' Update the maximum actual size;','line_number':413,'multiline':False]
['text':'*
     * Duplicates the top Category 2 value (or alternatively, the equivalent
     * Category 1 stack elements).
     ','line_number':420,'multiline':True]
['text':' Update the maximum actual size;','line_number':431,'multiline':False]
['text':'*
     * Duplicates the top Category 2 value, one Category 1 element down the
     * stack (or alternatively, the equivalent Category 1 stack values).
     ','line_number':439,'multiline':True]
['text':' Update the maximum actual size;','line_number':453,'multiline':False]
['text':'*
     * Duplicates the top Category 2 value, one Category 2 stack element down
     * the stack (or alternatively, the equivalent Category 1 stack values).
     ','line_number':461,'multiline':True]
['text':' Update the maximum actual size;','line_number':476,'multiline':False]
['text':'*
     * Swaps the top two Category 1 values.
     ','line_number':484,'multiline':True]
['text':' Implementations for Object.','line_number':497,'multiline':False]
