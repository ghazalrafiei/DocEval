['text':' zconf.h -- configuration of the zlib compression library
 * Copyright (C) 1995-2016 Jean-loup Gailly, Mark Adler
 * For conditions of distribution and use, see copyright notice in zlib.h
 ','line_number':1,'multiline':True]
['text':' @(#) $Id$ ','line_number':6,'multiline':True]
['text':'
 * If you *really* need a unique prefix for all types and library functions,
 * compile with -DZ_PREFIX. The "standard" zlib should be compiled without it.
 * Even better than compiling with -DZ_PREFIX would be to use configure to set
 * this permanently in zconf.h using "./configure --zprefix".
 ','line_number':13,'multiline':True]
['text':' may be set to #if 1 by ./configure ','line_number':19,'multiline':True]
['text':' all linked symbols and init macros ','line_number':22,'multiline':True]
['text':' all zlib typedefs in zlib.h and zconf.h ','line_number':145,'multiline':True]
['text':' all zlib structs in zlib.h and zconf.h ','line_number':167,'multiline':True]
['text':'
 * Compile with -DMAXSEG_64K if the alloc function cannot allocate more
 * than 64k bytes at a time (needed on systems with 16-bit int).
 ','line_number':195,'multiline':True]
['text':' iSeries (formerly AS/400). ','line_number':229,'multiline':True]
['text':' cannot use !defined(STDC) && !defined(const) on Mac ','line_number':234,'multiline':True]
['text':' note: need a more gentle solution here ','line_number':235,'multiline':True]
['text':' Maximum value for memLevel in deflateInit2 ','line_number':264,'multiline':True]
['text':' Maximum value for windowBits in deflateInit2 and inflateInit2.
 * WARNING: reducing MAX_WBITS makes minigzip unable to extract .gz files
 * created by gzip. (Files created by minigzip can still be extracted by
 * gzip.)
 ','line_number':273,'multiline':True]
['text':' 32K LZ77 window ','line_number':279,'multiline':True]
['text':' The memory requirements for deflate are (in bytes):
            (1 << (windowBits+2)) +  (1 << (memLevel+9))
 that is: 128K for windowBits=15  +  128K for memLevel = 8  (default values)
 plus a few kilobytes for small objects. For example, if you want to reduce
 the default memory requirements from 256K to 128K, compile with
     make CFLAGS="-O -DMAX_WBITS=14 -DMAX_MEM_LEVEL=7"
 Of course this will generally degrade compression (there's no free lunch).

   The memory requirements for inflate are (in bytes) 1 << windowBits
 that is, 32K for windowBits=15 (default value) plus about 7 kilobytes
 for small objects.
','line_number':282,'multiline':True]
['text':' Type declarations ','line_number':295,'multiline':True]
['text':' function prototypes ','line_number':297,'multiline':True]
['text':' function prototypes for stdarg ','line_number':305,'multiline':True]
['text':' The following definitions for FAR are needed only for MSDOS mixed
 * model programming (small or medium model with some far allocations).
 * This was tested only with MSC; for other MSDOS compilers you may have
 * to define NO_MEMCPY in zutil.h.  If you don't need the mixed model,
 * just define FAR to be empty.
 ','line_number':313,'multiline':True]
['text':' MSC small or medium model ','line_number':321,'multiline':True]
['text':' Turbo C small or medium model ','line_number':330,'multiline':True]
['text':' If building or using zlib as a DLL, define ZLIB_DLL.
    * This is not mandatory, but it offers a little performance increase.
    ','line_number':341,'multiline':True]
['text':' ZLIB_DLL ','line_number':352,'multiline':True]
['text':' If building or using zlib with the WINAPI/WINAPIV calling convention,
    * define ZLIB_WINAPI.
    * Caution: the standard ZLIB1.DLL is NOT compiled using ZLIB_WINAPI.
    ','line_number':353,'multiline':True]
['text':' No need for _export, use ZLIB.DEF instead. ','line_number':365,'multiline':True]
['text':' For complete Windows compatibility, use WINAPI, not __stdcall. ','line_number':366,'multiline':True]
['text':' 8 bits ','line_number':403,'multiline':True]
['text':' 16 bits or more ','line_number':405,'multiline':True]
['text':' 32 bits or more ','line_number':406,'multiline':True]
['text':' Borland C/C++ and some old MSC versions ignore FAR inside typedef ','line_number':409,'multiline':True]
['text':' may be set to #if 1 by ./configure ','line_number':446,'multiline':True]
['text':' may be set to #if 1 by ./configure ','line_number':450,'multiline':True]
['text':' for off_t ','line_number':456,'multiline':True]
['text':' for va_list ','line_number':462,'multiline':True]
['text':' for wchar_t ','line_number':468,'multiline':True]
['text':' a little trick to accommodate both "#define _LARGEFILE64_SOURCE" and
 * "#define _LARGEFILE64_SOURCE 1" as requesting 64-bit operations, (even
 * though the former does not conform to the LFS document), but considering
 * both "#undef _LARGEFILE64_SOURCE" and "#define _LARGEFILE64_SOURCE 0" as
 * equivalently requesting no 64-bit operations
 ','line_number':472,'multiline':True]
['text':' for SEEK_*, off_t, and _LFS64_LARGEFILE ','line_number':494,'multiline':True]
['text':' for off_t ','line_number':496,'multiline':True]
['text':' Seek from beginning of file.  ','line_number':517,'multiline':True]
['text':' Seek from current position.  ','line_number':518,'multiline':True]
['text':' Set file pointer to EOF plus "offset" ','line_number':519,'multiline':True]
['text':' MVS linker does not support external names larger than 8 bytes ','line_number':536,'multiline':True]
['text':' ZCONF_H ','line_number':553,'multiline':True]
