['text':'
 *
 * Copyright (c) 1997
 * Christian Michelsen Research AS
 * Advanced Computing
 * Fantoftvegen 38, 5036 BERGEN, Norway
 * http://www.cmr.no
 *
 * Permission to use, copy, modify, distribute and sell this software
 * and its documentation for any purpose is hereby granted without fee,
 * provided that the above copyright notice appear in all copies and
 * that both that copyright notice and this permission notice appear
 * in supporting documentation.  Christian Michelsen Research AS makes no
 * representations about the suitability of this software for any
 * purpose.  It is provided "as is" without express or implied warranty.
 *
 ','line_number':1,'multiline':True]
['text':'
 * zstream.h - C++ interface to the 'zlib' general purpose compression library
 * $Id: zstream.h 1.1 1997-06-25 12:00:56+02 tyge Exp tyge $
 ','line_number':22,'multiline':True]
['text':'  ----------------------------- izstream -----------------------------','line_number':49,'multiline':False]
['text':' Opens a gzip (.gz) file for reading.
         * open() can be used to read a file which is not in gzip format;
         * in this case read() will directly read from the file without
         * decompression. errno can be checked to distinguish two error
         * cases (if errno is zero, the zlib error is Z_MEM_ERROR).
         ','line_number':59,'multiline':True]
['text':' Flushes all pending input if necessary, closes the compressed file
         * and deallocates all the (de)compression state. The return value is
         * the zlib error number (see function error() below).
         ','line_number':76,'multiline':True]
['text':' Binary read the given number of bytes from the compressed file.
         ','line_number':85,'multiline':True]
['text':' Returns the error message for the last error which occurred on the
         * given compressed file. errnum is set to zlib error number. If an
         * error occurred in the file system and not in the compression library,
         * errnum is set to Z_ERRNO and the application may consult errno
         * to get the exact error code.
         ','line_number':91,'multiline':True]
['text':'
 * Binary read the given (array of) object(s) from the compressed file.
 * If the input file was not in gzip format, read() copies the objects number
 * of bytes into the buffer.
 * returns the number of uncompressed bytes actually read
 * (0 for end of file, -1 for error).
 ','line_number':107,'multiline':True]
['text':'
 * Binary input with the '>' operator.
 ','line_number':119,'multiline':True]
['text':'
 * Read length of string + the string with the '>' operator.
 ','line_number':135,'multiline':True]
['text':' ----------------------------- ozstream -----------------------------','line_number':153,'multiline':False]
['text':' Opens a gzip (.gz) file for writing.
         * The compression level parameter should be in 0..9
         * errno can be checked to distinguish two error cases
         * (if errno is zero, the zlib error is Z_MEM_ERROR).
         ','line_number':172,'multiline':True]
['text':' open from a FILE pointer.
         ','line_number':184,'multiline':True]
['text':' Flushes all pending output if necessary, closes the compressed file
         * and deallocates all the (de)compression state. The return value is
         * the zlib error number (see function error() below).
         ','line_number':194,'multiline':True]
['text':' Binary write the given number of bytes into the compressed file.
         ','line_number':206,'multiline':True]
['text':' Flushes all pending output into the compressed file. The parameter
         * _flush is as in the deflate() function. The return value is the zlib
         * error number (see function gzerror below). flush() returns Z_OK if
         * the flush_ parameter is Z_FINISH and all output could be flushed.
         * flush() should be called only when strictly necessary because it can
         * degrade compression.
         ','line_number':212,'multiline':True]
['text':' Returns the error message for the last error which occurred on the
         * given compressed file. errnum is set to zlib error number. If an
         * error occurred in the file system and not in the compression library,
         * errnum is set to Z_ERRNO and the application may consult errno
         * to get the exact error code.
         ','line_number':224,'multiline':True]
['text':'
 * Binary write the given (array of) object(s) into the compressed file.
 * returns the number of uncompressed bytes actually written
 * (0 in case of error).
 ','line_number':258,'multiline':True]
['text':'
 * Binary output with the '<' operator.
 ','line_number':268,'multiline':True]
['text':'
 * Write length of string + the string with the '<' operator.
 ','line_number':283,'multiline':True]
['text':'
 * Ascii write with the << operator;
 ','line_number':298,'multiline':True]
