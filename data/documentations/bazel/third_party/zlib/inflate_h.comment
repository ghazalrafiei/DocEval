['text':' inflate.h -- internal inflate state definition
 * Copyright (C) 1995-2019 Mark Adler
 * For conditions of distribution and use, see copyright notice in zlib.h
 ','line_number':1,'multiline':True]
['text':' WARNING: this file should *not* be used by applications. It is
   part of the implementation of the compression library and is
   subject to change. Applications should only use zlib.h.
 ','line_number':6,'multiline':True]
['text':' define NO_GZIP when compiling if you want to disable gzip header and
   trailer decoding by inflate().  NO_GZIP would be used to avoid linking in
   the crc code when it is not needed.  For shared libraries, gzip decoding
   should be left enabled. ','line_number':11,'multiline':True]
['text':' Possible inflate modes between inflate() calls ','line_number':19,'multiline':True]
['text':' i: waiting for magic header ','line_number':21,'multiline':True]
['text':' i: waiting for method and flags (gzip) ','line_number':22,'multiline':True]
['text':' i: waiting for modification time (gzip) ','line_number':23,'multiline':True]
['text':' i: waiting for extra flags and operating system (gzip) ','line_number':24,'multiline':True]
['text':' i: waiting for extra length (gzip) ','line_number':25,'multiline':True]
['text':' i: waiting for extra bytes (gzip) ','line_number':26,'multiline':True]
['text':' i: waiting for end of file name (gzip) ','line_number':27,'multiline':True]
['text':' i: waiting for end of comment (gzip) ','line_number':28,'multiline':True]
['text':' i: waiting for header crc (gzip) ','line_number':29,'multiline':True]
['text':' i: waiting for dictionary check value ','line_number':30,'multiline':True]
['text':' waiting for inflateSetDictionary() call ','line_number':31,'multiline':True]
['text':' i: waiting for type bits, including last-flag bit ','line_number':32,'multiline':True]
['text':' i: same, but skip check to exit inflate on new block ','line_number':33,'multiline':True]
['text':' i: waiting for stored size (length and complement) ','line_number':34,'multiline':True]
['text':' i/o: same as COPY below, but only first time in ','line_number':35,'multiline':True]
['text':' i/o: waiting for input or output to copy stored block ','line_number':36,'multiline':True]
['text':' i: waiting for dynamic block table lengths ','line_number':37,'multiline':True]
['text':' i: waiting for code length code lengths ','line_number':38,'multiline':True]
['text':' i: waiting for length/lit and distance code lengths ','line_number':39,'multiline':True]
['text':' i: same as LEN below, but only first time in ','line_number':40,'multiline':True]
['text':' i: waiting for length/lit/eob code ','line_number':41,'multiline':True]
['text':' i: waiting for length extra bits ','line_number':42,'multiline':True]
['text':' i: waiting for distance code ','line_number':43,'multiline':True]
['text':' i: waiting for distance extra bits ','line_number':44,'multiline':True]
['text':' o: waiting for output space to copy string ','line_number':45,'multiline':True]
['text':' o: waiting for output space to write literal ','line_number':46,'multiline':True]
['text':' i: waiting for 32-bit check value ','line_number':47,'multiline':True]
['text':' i: waiting for 32-bit length (gzip) ','line_number':48,'multiline':True]
['text':' finished check, done -- remain here until reset ','line_number':49,'multiline':True]
['text':' got a data error -- remain here until reset ','line_number':50,'multiline':True]
['text':' got an inflate() memory error -- remain here until reset ','line_number':51,'multiline':True]
['text':' looking for synchronization bytes to restart inflate() ','line_number':52,'multiline':True]
['text':'
    State transitions between above modes -

    (most modes can go to BAD or MEM on error -- not shown for clarity)

    Process header:
        HEAD -> (gzip) or (zlib) or (raw)
        (gzip) -> FLAGS -> TIME -> OS -> EXLEN -> EXTRA -> NAME -> COMMENT ->
                  HCRC -> TYPE
        (zlib) -> DICTID or TYPE
        DICTID -> DICT -> TYPE
        (raw) -> TYPEDO
    Read deflate blocks:
            TYPE -> TYPEDO -> STORED or TABLE or LEN_ or CHECK
            STORED -> COPY_ -> COPY -> TYPE
            TABLE -> LENLENS -> CODELENS -> LEN_
            LEN_ -> LEN
    Read deflate codes in fixed or dynamic block:
                LEN -> LENEXT or LIT or TYPE
                LENEXT -> DIST -> DISTEXT -> MATCH -> LEN
                LIT -> LEN
    Process trailer:
        CHECK -> LENGTH -> DONE
 ','line_number':55,'multiline':True]
['text':' State maintained between inflate() calls -- approximately 7K bytes, not
   including the allocated sliding window, which is up to 32K bytes. ','line_number':80,'multiline':True]
['text':' pointer back to this zlib stream ','line_number':83,'multiline':True]
['text':' current inflate mode ','line_number':84,'multiline':True]
['text':' true if processing last block ','line_number':85,'multiline':True]
['text':' bit 0 true for zlib, bit 1 true for gzip,
                                   bit 2 true to validate check value ','line_number':86,'multiline':True]
['text':' true if dictionary provided ','line_number':88,'multiline':True]
['text':' gzip header method and flags, 0 if zlib, or
                                   -1 if raw or no header yet ','line_number':89,'multiline':True]
['text':' zlib header max distance (INFLATE_STRICT) ','line_number':91,'multiline':True]
['text':' protected copy of check value ','line_number':92,'multiline':True]
['text':' protected copy of output count ','line_number':93,'multiline':True]
['text':' where to save gzip header information ','line_number':94,'multiline':True]
['text':' sliding window ','line_number':95,'multiline':True]
['text':' log base 2 of requested window size ','line_number':96,'multiline':True]
['text':' window size or zero if not using window ','line_number':97,'multiline':True]
['text':' valid bytes in the window ','line_number':98,'multiline':True]
['text':' window write index ','line_number':99,'multiline':True]
['text':' allocated sliding window, if needed ','line_number':100,'multiline':True]
['text':' bit accumulator ','line_number':101,'multiline':True]
['text':' input bit accumulator ','line_number':102,'multiline':True]
['text':' number of bits in "in" ','line_number':103,'multiline':True]
['text':' for string and stored block copying ','line_number':104,'multiline':True]
['text':' literal or length of data to copy ','line_number':105,'multiline':True]
['text':' distance back to copy string from ','line_number':106,'multiline':True]
['text':' for table and code decoding ','line_number':107,'multiline':True]
['text':' extra bits needed ','line_number':108,'multiline':True]
['text':' fixed and dynamic code tables ','line_number':109,'multiline':True]
['text':' starting table for length/literal codes ','line_number':110,'multiline':True]
['text':' starting table for distance codes ','line_number':111,'multiline':True]
['text':' index bits for lencode ','line_number':112,'multiline':True]
['text':' index bits for distcode ','line_number':113,'multiline':True]
['text':' dynamic table building ','line_number':114,'multiline':True]
['text':' number of code length code lengths ','line_number':115,'multiline':True]
['text':' number of length code lengths ','line_number':116,'multiline':True]
['text':' number of distance code lengths ','line_number':117,'multiline':True]
['text':' number of code lengths in lens[] ','line_number':118,'multiline':True]
['text':' next available space in codes[] ','line_number':119,'multiline':True]
['text':' temporary storage for code lengths ','line_number':120,'multiline':True]
['text':' work area for code table building ','line_number':121,'multiline':True]
['text':' space for code tables ','line_number':122,'multiline':True]
['text':' if false, allow invalid distance too far ','line_number':123,'multiline':True]
['text':' bits back of last unprocessed length/lit ','line_number':124,'multiline':True]
['text':' initial length of match ','line_number':125,'multiline':True]
