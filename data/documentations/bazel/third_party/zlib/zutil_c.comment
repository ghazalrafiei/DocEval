['text':' zutil.c -- target dependent utility functions for the compression library
 * Copyright (C) 1995-2017 Jean-loup Gailly
 * For conditions of distribution and use, see copyright notice in zlib.h
 ','line_number':1,'multiline':True]
['text':' @(#) $Id$ ','line_number':6,'multiline':True]
['text':' Z_NEED_DICT       2  ','line_number':14,'multiline':True]
['text':' Z_STREAM_END      1  ','line_number':15,'multiline':True]
['text':' Z_OK              0  ','line_number':16,'multiline':True]
['text':' Z_ERRNO         (-1) ','line_number':17,'multiline':True]
['text':' Z_STREAM_ERROR  (-2) ','line_number':18,'multiline':True]
['text':' Z_DATA_ERROR    (-3) ','line_number':19,'multiline':True]
['text':' Z_MEM_ERROR     (-4) ','line_number':20,'multiline':True]
['text':' Z_BUF_ERROR     (-5) ','line_number':21,'multiline':True]
['text':' Z_VERSION_ERROR (-6) ','line_number':22,'multiline':True]
['text':'
#if defined(ASMV) || defined(ASMINF)
    flags += 1 << 9;
#endif
     ','line_number':62,'multiline':True]
['text':' exported to allow conversion of error code to string for compress() and
 * uncompress()
 ','line_number':128,'multiline':True]
['text':' The older Microsoft C Run-Time Library for Windows CE doesn't have
     * errno.  We define it as a global variable to simplify porting.
     * Its value is always 0 and should not be used.
     ','line_number':136,'multiline':True]
['text':' ??? to be unrolled ','line_number':148,'multiline':True]
['text':' ??? to be unrolled ','line_number':164,'multiline':True]
['text':' Turbo C in 16-bit mode ','line_number':174,'multiline':True]
['text':' Turbo C malloc() does not allow dynamic allocation of 64K bytes
 * and farmalloc(64K) returns a pointer with an offset of 8, so we
 * must fix the pointer. Warning: the pointer must be put back to its
 * original form in order to free it, use zcfree().
 ','line_number':178,'multiline':True]
['text':' 10*64K = 640K ','line_number':185,'multiline':True]
['text':' This table is used to remember the original form of pointers
 * to large buffers (64K). Such pointers are normalized with a zero offset.
 * Since MSDOS is not a preemptive multitasking OS, this table is not
 * protected from concurrent access. This hack doesn't work anyway on
 * a protected system like OS/2. Use Microsoft C instead.
 ','line_number':195,'multiline':True]
['text':' If we allocate less than 65520 bytes, we assume that farmalloc
     * will return a usable pointer which doesn't have to be normalized.
     ','line_number':208,'multiline':True]
['text':' Normalize the pointer to seg:0 ','line_number':220,'multiline':True]
['text':' object < 64K ','line_number':232,'multiline':True]
['text':' Find the original pointer ','line_number':236,'multiline':True]
['text':' __TURBOC__ ','line_number':250,'multiline':True]
['text':' Microsoft C in 16-bit mode ','line_number':254,'multiline':True]
['text':' M_I86 ','line_number':273,'multiline':True]
['text':' SYS16BIT ','line_number':275,'multiline':True]
['text':' Any system without a special alloc function ','line_number':278,'multiline':True]
['text':' MY_ZCALLOC ','line_number':297,'multiline':True]
['text':' !Z_SOLO ','line_number':299,'multiline':True]
