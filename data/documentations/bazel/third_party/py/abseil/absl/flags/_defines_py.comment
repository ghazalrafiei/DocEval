['text':' Copyright 2017 The Abseil Authors.','line_number':1,'multiline':False]
['text':'','line_number':2,'multiline':False]
['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':3,'multiline':False]
['text':' you may not use this file except in compliance with the License.','line_number':4,'multiline':False]
['text':' You may obtain a copy of the License at','line_number':5,'multiline':False]
['text':'','line_number':6,'multiline':False]
['text':'      http://www.apache.org/licenses/LICENSE-2.0','line_number':7,'multiline':False]
['text':'','line_number':8,'multiline':False]
['text':' Unless required by applicable law or agreed to in writing, software','line_number':9,'multiline':False]
['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':10,'multiline':False]
['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':11,'multiline':False]
['text':' See the License for the specific language governing permissions and','line_number':12,'multiline':False]
['text':' limitations under the License.','line_number':13,'multiline':False]
['text':' pylint: disable=unused-import','line_number':30,'multiline':False]
['text':' pylint: enable=unused-import','line_number':40,'multiline':False]
['text':' pylint: disable=invalid-name','line_number':65,'multiline':False]
['text':' pylint: disable=redefined-builtin','line_number':69,'multiline':False]
['text':' pylint: disable=invalid-name','line_number':105,'multiline':False]
['text':' Copying the reference to flag_values prevents pychecker warnings.','line_number':134,'multiline':False]
['text':' Tell flag_values who's defining the flag.','line_number':137,'multiline':False]
['text':' pylint: disable=protected-access','line_number':165,'multiline':False]
['text':' Take care of the special flags, e.g., --flagfile, --undefok.','line_number':225,'multiline':False]
['text':' These flags are defined in SPECIAL_FLAGS, and are treated','line_number':226,'multiline':False]
['text':' specially during flag parsing, taking precedence over the','line_number':227,'multiline':False]
['text':' user-defined flags.','line_number':228,'multiline':False]
['text':' If module is this flag module, take _helpers.SPECIAL_FLAGS into account.','line_number':259,'multiline':False]
['text':' As we associate flags with get_calling_module_object_and_name(), the','line_number':262,'multiline':False]
['text':' special flags defined in this module are incorrectly registered with','line_number':263,'multiline':False]
['text':' a different module.  So, we can't use get_key_flags_for_module.','line_number':264,'multiline':False]
['text':' Instead, we take all flags from _helpers.SPECIAL_FLAGS (a private','line_number':265,'multiline':False]
['text':' FlagValues, where no other module should register flags).','line_number':266,'multiline':False]
['text':' pylint: disable=protected-access','line_number':286,'multiline':False]
['text':' pylint: disable=invalid-name,redefined-builtin','line_number':291,'multiline':False]
['text':' pylint: disable=invalid-name,redefined-builtin','line_number':312,'multiline':False]
['text':' pylint: disable=invalid-name,redefined-builtin','line_number':350,'multiline':False]
['text':' pylint: disable=invalid-name,redefined-builtin','line_number':394,'multiline':False]
['text':' pylint: disable=invalid-name,redefined-builtin','line_number':438,'multiline':False]
['text':' pylint: disable=invalid-name,redefined-builtin','line_number':474,'multiline':False]
['text':' pylint: disable=invalid-name,redefined-builtin','line_number':514,'multiline':False]
['text':' pylint: disable=invalid-name,redefined-builtin','line_number':552,'multiline':False]
['text':' pylint: disable=invalid-name,redefined-builtin','line_number':595,'multiline':False]
['text':' pylint: disable=invalid-name,redefined-builtin','line_number':640,'multiline':False]
['text':' pylint: disable=invalid-name,redefined-builtin','line_number':683,'multiline':False]
['text':' pylint: disable=invalid-name,redefined-builtin','line_number':729,'multiline':False]
['text':' pylint: disable=invalid-name,redefined-builtin','line_number':775,'multiline':False]
['text':' pylint: disable=invalid-name,redefined-builtin','line_number':822,'multiline':False]
['text':' pylint: disable=invalid-name','line_number':869,'multiline':False]
['text':' The value was already parsed by the aliased flag, so there is no','line_number':903,'multiline':False]
['text':' need to call the parser on it a second time.','line_number':904,'multiline':False]
['text':' Additionally, because of how MultiFlag parses and merges values,','line_number':905,'multiline':False]
['text':' it isn't possible to delegate to the aliased flag and still get','line_number':906,'multiline':False]
['text':' the correct values.','line_number':907,'multiline':False]
['text':' If alias_name has been used, flags.DuplicatedFlag will be raised.','line_number':919,'multiline':False]
