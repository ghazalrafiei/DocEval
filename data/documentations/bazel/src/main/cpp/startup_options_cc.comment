['text':' Copyright 2014 The Bazel Authors. All rights reserved.','line_number':1,'multiline':False]
['text':'','line_number':2,'multiline':False]
['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':3,'multiline':False]
['text':' you may not use this file except in compliance with the License.','line_number':4,'multiline':False]
['text':' You may obtain a copy of the License at','line_number':5,'multiline':False]
['text':'','line_number':6,'multiline':False]
['text':'    http://www.apache.org/licenses/LICENSE-2.0','line_number':7,'multiline':False]
['text':'','line_number':8,'multiline':False]
['text':' Unless required by applicable law or agreed to in writing, software','line_number':9,'multiline':False]
['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':10,'multiline':False]
['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':11,'multiline':False]
['text':' See the License for the specific language governing permissions and','line_number':12,'multiline':False]
['text':' limitations under the License.','line_number':13,'multiline':False]
['text':' defined(_WIN32) || defined(__CYGWIN__)','line_number':121,'multiline':False]
['text':' IMPORTANT: Before modifying the statements below please contact a Bazel','line_number':127,'multiline':False]
['text':' core team member that knows the internal procedure for adding/deprecating','line_number':128,'multiline':False]
['text':' startup flags.','line_number':129,'multiline':False]
['text':' We have to parse a specific option syntax, so GNU getopts won't do.  All','line_number':214,'multiline':False]
['text':' options begin with "--" or "-". Values are given together with the option','line_number':215,'multiline':False]
['text':' delimited by '=' or in the next option.','line_number':216,'multiline':False]
['text':' 'enabled' is true if 'argstr' is "--foo", and false if it's "--nofoo".','line_number':228,'multiline':False]
['text':' no_rc_nullary_startup_flags_ are forbidden in .bazelrc files.','line_number':232,'multiline':False]
['text':' 'argstr' is either "--foo" or "--nofoo", and the map entry is the','line_number':241,'multiline':False]
['text':' lambda that handles setting the flag's value.','line_number':242,'multiline':False]
['text':' 'argstr' is either "--foo" or "--nofoo", and the map entry is the','line_number':245,'multiline':False]
['text':' pointer to the bool storing the flag's value.','line_number':246,'multiline':False]
['text':' Use the key "foo" for 'argstr' of "--foo" / "--nofoo", unless there's an','line_number':249,'multiline':False]
['text':' overridden name we must use.','line_number':250,'multiline':False]
['text':' TODO(bazel-team): Consider examining the javabase and re-execing in case','line_number':286,'multiline':False]
['text':' of architecture mismatch.','line_number':287,'multiline':False]
['text':' NB: This is incorrect','line_number':294,'multiline':False]
['text':' We parse the value of this flag on all platforms even if it is','line_number':316,'multiline':False]
['text':' macOS-specific to ensure that rc files mentioning it are valid.','line_number':317,'multiline':False]
['text':' There is also apparently "QOS_CLASS_MAINTENANCE", but this doesn't','line_number':318,'multiline':False]
['text':' appear to have been exposed in the public headers as of macOS 11.1.','line_number':319,'multiline':False]
['text':' Store the provided option in --flag(=value)? form. Store these before','line_number':421,'multiline':False]
['text':' propagating any error code, since we want to have the correct','line_number':422,'multiline':False]
['text':' information for the output. The fact that the options aren't parseable','line_number':423,'multiline':False]
['text':' doesn't matter for this step.','line_number':424,'multiline':False]
['text':' 1) Allow overriding the server_javabase via --server_javabase.','line_number':460,'multiline':False]
['text':' 2) Use a bundled JVM if we have one.','line_number':468,'multiline':False]
['text':' 3) Otherwise fall back to using the default system JVM.','line_number':476,'multiline':False]
['text':' Prints an appropriate error message and returns an appropriate error exit','line_number':508,'multiline':False]
['text':' code for a server javabase which failed sanity checks.','line_number':509,'multiline':False]
['text':' Fall through.','line_number':533,'multiline':False]
['text':' If the full JDK is installed','line_number':554,'multiline':False]
['text':' If just the JRE is installed','line_number':556,'multiline':False]
['text':' rt.jar does not exist in java 9+ so check for java instead','line_number':558,'multiline':False]
['text':' Disable the JVM's own unlimiting of file descriptors.  We do this','line_number':589,'multiline':False]
['text':' ourselves in blaze.cc so we want our setting to propagate to the JVM.','line_number':590,'multiline':False]
['text':'','line_number':591,'multiline':False]
['text':' The reason to do this is that the JVM's unlimiting is suboptimal on','line_number':592,'multiline':False]
['text':' macOS.  Under that platform, the JVM limits the open file descriptors','line_number':593,'multiline':False]
['text':' to the OPEN_MAX constant... which is much lower than the per-process','line_number':594,'multiline':False]
['text':' kernel allowed limit of kern.maxfilesperproc (which is what we set','line_number':595,'multiline':False]
['text':' ourselves to).','line_number':596,'multiline':False]
['text':' 20 MB.','line_number':613,'multiline':False]
['text':' Configure logging','line_number':619,'multiline':False]
['text':' namespace blaze','line_number':644,'multiline':False]
