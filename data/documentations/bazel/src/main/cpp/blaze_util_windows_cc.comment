['text':' Copyright 2014 The Bazel Authors. All rights reserved.','line_number':1,'multiline':False]
['text':'','line_number':2,'multiline':False]
['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':3,'multiline':False]
['text':' you may not use this file except in compliance with the License.','line_number':4,'multiline':False]
['text':' You may obtain a copy of the License at','line_number':5,'multiline':False]
['text':'','line_number':6,'multiline':False]
['text':'    http://www.apache.org/licenses/LICENSE-2.0','line_number':7,'multiline':False]
['text':'','line_number':8,'multiline':False]
['text':' Unless required by applicable law or agreed to in writing, software','line_number':9,'multiline':False]
['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':10,'multiline':False]
['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':11,'multiline':False]
['text':' See the License for the specific language governing permissions and','line_number':12,'multiline':False]
['text':' limitations under the License.','line_number':13,'multiline':False]
['text':' _open','line_number':21,'multiline':False]
['text':' FOLDERID_Profile','line_number':22,'multiline':False]
['text':' UNLEN','line_number':23,'multiline':False]
['text':' CoTaskMemFree','line_number':24,'multiline':False]
['text':' SHGetKnownFolderPath','line_number':25,'multiline':False]
['text':' va_start, va_end, va_list','line_number':26,'multiline':False]
['text':' NOLINT','line_number':32,'multiline':False]
['text':' NOLINT (to silence Google-internal linter)','line_number':35,'multiline':False]
['text':' static_assert','line_number':36,'multiline':False]
['text':' Ensure we can safely cast (const) wchar_t* to LP(C)WSTR.','line_number':58,'multiline':False]
['text':' This is true with MSVC but usually not with GCC.','line_number':59,'multiline':False]
['text':' When using widechar Win32 API functions the maximum path length is 32K.','line_number':63,'multiline':False]
['text':' Add 4 characters for potential UNC prefix and a couple more for safety.','line_number':64,'multiline':False]
['text':' TODO(bazel-team): stop using BAZEL_DIE, handle errors on the caller side.','line_number':72,'multiline':False]
['text':' BAZEL_DIE calls exit(exitcode), which makes it difficult to follow the','line_number':73,'multiline':False]
['text':' control flow and does not call destructors on local variables on the call','line_number':74,'multiline':False]
['text':' stack.','line_number':75,'multiline':False]
['text':' namespace','line_number':131,'multiline':False]
['text':' I (@laszlocsomor) experimented with different thread counts and found that','line_number':158,'multiline':False]
['text':' 8 threads provide a significant advantage over 1 thread, but adding more','line_number':159,'multiline':False]
['text':' threads provides only marginal speedup.','line_number':160,'multiline':False]
['text':' release pointer ownership','line_number':169,'multiline':False]
['text':' release pointer ownership','line_number':194,'multiline':False]
['text':' Performance optimization: memoize the paths we already created a','line_number':233,'multiline':False]
['text':' directory for, to spare a stat in attempting to recreate an already','line_number':234,'multiline':False]
['text':' existing directory. This optimization alone shaves off seconds from the','line_number':235,'multiline':False]
['text':' extraction time on Windows.','line_number':236,'multiline':False]
['text':' namespace','line_number':265,'multiline':False]
['text':' namespace embedded_binaries','line_number':267,'multiline':False]
['text':' Clock frequency per seconds.','line_number':278,'multiline':False]
['text':' It's safe to cache this because (from QueryPerformanceFrequency on MSDN):','line_number':279,'multiline':False]
['text':' "The frequency of the performance counter is fixed at system boot and is','line_number':280,'multiline':False]
['text':' consistent across all processors. Therefore, the frequency need only be','line_number':281,'multiline':False]
['text':' queried upon application initialization, and the result can be cached."','line_number':282,'multiline':False]
['text':' We do not handle signals on Windows; always exit with exit_code.','line_number':332,'multiline':False]
['text':' A signal-safe version of fprintf(stderr, ...).','line_number':336,'multiline':False]
['text':'','line_number':337,'multiline':False]
['text':' WARNING: any output from the blaze client may be interleaved','line_number':338,'multiline':False]
['text':' with output from the blaze server.  In --curses mode,','line_number':339,'multiline':False]
['text':' the Blaze server often erases the previous line of output.','line_number':340,'multiline':False]
['text':' So, be sure to end each such message with TWO newlines,','line_number':341,'multiline':False]
['text':' otherwise it may be erased by the next message from the','line_number':342,'multiline':False]
['text':' Blaze server.','line_number':343,'multiline':False]
['text':' Also, it's a good idea to start each message with a newline,','line_number':344,'multiline':False]
['text':' in case the Blaze server has written a partial line.','line_number':345,'multiline':False]
['text':' We don't care, just placate the compiler.','line_number':354,'multiline':False]
['text':' dwFlags ','line_number':366,'multiline':True]
['text':' lpSource ','line_number':368,'multiline':True]
['text':' dwMessageId ','line_number':369,'multiline':True]
['text':' dwLanguageId ','line_number':370,'multiline':True]
['text':' lpBuffer ','line_number':371,'multiline':True]
['text':' nSize ','line_number':372,'multiline':True]
['text':' Arguments ','line_number':373,'multiline':True]
['text':' Check HOME, for sake of consistency with Linux / macOS. This is only set','line_number':410,'multiline':False]
['text':' under MSYS2, or potentially in tests.','line_number':411,'multiline':False]
['text':' Bazel is running inside of a test. Respect $HOME that the test setup has','line_number':414,'multiline':False]
['text':' set, even if it's empty.','line_number':415,'multiline':False]
['text':' Check USERPROFILE before calling SHGetKnownFolderPath. Doing so allows the','line_number':419,'multiline':False]
['text':' user to customize (or override) the home directory.','line_number':420,'multiline':False]
['text':' See https://github.com/bazelbuild/bazel/issues/7819#issuecomment-533050947','line_number':421,'multiline':False]
['text':' Look up the user's home directory. The default value of "FOLDERID_Profile"','line_number':428,'multiline':False]
['text':' is the same as %USERPROFILE%, but it does not require the envvar to be set.','line_number':429,'multiline':False]
['text':' On Windows 2016 Server, Nano server: FOLDERID_Profile is unknown but','line_number':430,'multiline':False]
['text':' %USERPROFILE% is set. See https://github.com/bazelbuild/bazel/issues/6701','line_number':431,'multiline':False]
['text':' TODO(bazel-team): figure out a good path to return here.','line_number':443,'multiline':False]
['text':' TODO(bazel-team): There should be a similar function on Windows.','line_number':454,'multiline':False]
['text':' TODO(bazel-team) 2016-11-18: decide whether we need this on Windows and','line_number':458,'multiline':False]
['text':' implement or delete.','line_number':459,'multiline':False]
['text':' Max command line length is per CreateProcess documentation','line_number':483,'multiline':False]
['text':' (https://msdn.microsoft.com/en-us/library/ms682425(VS.85).aspx)','line_number':484,'multiline':False]
['text':' Skip first argument, it is equal to 'exe'.','line_number':510,'multiline':False]
['text':' Copy command line into a mutable buffer.','line_number':527,'multiline':False]
['text':' CreateProcess is allowed to mutate its command line argument.','line_number':528,'multiline':False]
['text':' namespace','line_number':533,'multiline':False]
['text':' GetProcessTimes cannot handle NULL arguments.','line_number':537,'multiline':False]
['text':' If the previous server process was asked to be shut down (but not killed),','line_number':569,'multiline':False]
['text':' it takes a while for it to comply, so wait until the JVM output file that','line_number':570,'multiline':False]
['text':' it held open is closed. There seems to be no better way to wait for a file','line_number':571,'multiline':False]
['text':' to be closed on Windows.','line_number':572,'multiline':False]
['text':' lpFileName ','line_number':576,'multiline':True]
['text':' dwDesiredAccess ','line_number':577,'multiline':True]
['text':' dwShareMode ','line_number':578,'multiline':True]
['text':' lpSecurityAttributes ','line_number':579,'multiline':True]
['text':' dwCreationDisposition ','line_number':580,'multiline':True]
['text':' dwFlagsAndAttributes ','line_number':582,'multiline':True]
['text':' hTemplateFile ','line_number':583,'multiline':True]
['text':' Some other error occurred than the file being open; bail out.','line_number':595,'multiline':False]
['text':' The file is still held open, the server is shutting down. There's a','line_number':599,'multiline':False]
['text':' chance that another process holds it open, we don't know; in that case','line_number':600,'multiline':False]
['text':' we just exit after the timeout expires.','line_number':601,'multiline':False]
['text':' We must duplicate the handle to stdout, otherwise "bazel clean --expunge"','line_number':658,'multiline':False]
['text':' won't work, because when it tries to close stdout then stderr, the former','line_number':659,'multiline':False]
['text':' will succeed but the latter will appear to be valid yet still fail to','line_number':660,'multiline':False]
['text':' close.','line_number':661,'multiline':False]
['text':' hSourceProcessHandle ','line_number':663,'multiline':True]
['text':' hSourceHandle ','line_number':664,'multiline':True]
['text':' hTargetProcessHandle ','line_number':665,'multiline':True]
['text':' lpTargetHandle ','line_number':666,'multiline':True]
['text':' dwDesiredAccess ','line_number':667,'multiline':True]
['text':' bInheritHandle ','line_number':668,'multiline':True]
['text':' dwOptions ','line_number':669,'multiline':True]
['text':' Create an attribute list.','line_number':677,'multiline':False]
['text':' lpApplicationName ','line_number':708,'multiline':True]
['text':' lpCommandLine ','line_number':709,'multiline':True]
['text':' lpProcessAttributes ','line_number':710,'multiline':True]
['text':' lpThreadAttributes ','line_number':711,'multiline':True]
['text':' bInheritHandles ','line_number':712,'multiline':True]
['text':' dwCreationFlags ','line_number':713,'multiline':True]
['text':' lpEnvironment ','line_number':715,'multiline':True]
['text':' lpCurrentDirectory ','line_number':716,'multiline':True]
['text':' lpStartupInfo ','line_number':717,'multiline':True]
['text':' lpProcessInformation ','line_number':718,'multiline':True]
['text':' Pass ownership of processInfo.hProcess','line_number':730,'multiline':False]
['text':' Not a lot we can do if this fails','line_number':736,'multiline':False]
['text':' Don't close processInfo.hProcess here, it's now owned by the','line_number':741,'multiline':False]
['text':' ProcessHandleBlazeServerStartup instance.','line_number':742,'multiline':False]
['text':' Run the given program in the current working directory, using the given','line_number':748,'multiline':False]
['text':' argument vector, wait for it to finish, then exit ourselves with the exitcode','line_number':749,'multiline':False]
['text':' of that program.','line_number':750,'multiline':False]
['text':' TODO(laszlocsomor): Fix proc.Create to accept paths with UNC prefix.','line_number':759,'multiline':False]
['text':' The arguments are already escaped, don't escape further.','line_number':796,'multiline':False]
['text':' From MSDN about GetExitCodeProcess.','line_number':829,'multiline':False]
['text':' On Windows (and Linux) we use a combination of PID and start time to identify','line_number':832,'multiline':False]
['text':' the server process. That is supposed to be unique unless one can start more','line_number':833,'multiline':False]
['text':' processes than there are PIDs available within a single jiffy.','line_number':834,'multiline':False]
['text':' Cannot find the server process. Can happen if the PID file is stale.','line_number':839,'multiline':False]
['text':' Process doesn't exist or died meantime, all is good. No stale server is','line_number':847,'multiline':False]
['text':' present.','line_number':848,'multiline':False]
['text':' If start time file got deleted, but PID file didn't, assume that this is an','line_number':856,'multiline':False]
['text':' old Bazel process that doesn't know how to write start time files yet.','line_number':857,'multiline':False]
['text':' Cannot find the server process (can happen if the PID file is stale) or','line_number':868,'multiline':False]
['text':' it already exited.','line_number':869,'multiline':False]
['text':'uExitCode','line_number':873,'multiline':True]
['text':' Not supported.','line_number':888,'multiline':False]
['text':' Builds a shorter output base dir name for Windows.','line_number':892,'multiline':False]
['text':' We create a path name representing the 128 bits of MD5 digest. To avoid','line_number':894,'multiline':False]
['text':' platform incompatibilities we restrict the alphabet to ASCII letters and','line_number':895,'multiline':False]
['text':' numbers. Windows paths are case-insensitive, so use only lower-case','line_number':896,'multiline':False]
['text':' letters. These constraints yield a 5-bit alphabet.','line_number':897,'multiline':False]
['text':' Since we only need 6 digits, ignore 0 and 1 because they look like','line_number':898,'multiline':False]
['text':' upper-case "O" and lower-case "l".','line_number':899,'multiline':False]
['text':' 128 bits of data in base-32 require 128/5 = 25 digits with 3 bits lost.','line_number':902,'multiline':False]
['text':' Maximum path length on Windows is only 259 characters, so we'll only use','line_number':903,'multiline':False]
['text':' a few characters characters (base-32 digits) to represent the digest.','line_number':904,'multiline':False]
['text':' Using only 8 characters we represent 40 bits of the original 128.','line_number':905,'multiline':False]
['text':' Since the mapping is lossy and collisions are unlikely in practice, we'll','line_number':906,'multiline':False]
['text':' keep the mapping simple and just use the lower 5 bits of the first 8 bytes.','line_number':907,'multiline':False]
['text':' TODO(bazel-team): implement this properly, by mimicing whatever the POSIX','line_number':923,'multiline':False]
['text':' implementation does.','line_number':924,'multiline':False]
['text':' unset or empty envvar','line_number':942,'multiline':False]
['text':' Callers of GetPathEnv expect a path with forward slashes.','line_number':963,'multiline':False]
['text':' _putenv_s both calls ::SetEnvionmentVariableA and updates environ(5).','line_number':973,'multiline':False]
['text':' GetConsoleProcessList returns:','line_number':980,'multiline':False]
['text':'   0, if no console attached (Bazel runs as a subprocess)','line_number':981,'multiline':False]
['text':'   1, if Bazel was started by clicking on its icon','line_number':982,'multiline':False]
['text':'   2, if Bazel was started from the command line (even if its output is','line_number':983,'multiline':False]
['text':'      redirected)','line_number':984,'multiline':False]
['text':' From MSDN about BOOL SetConsoleMode(HANDLE, DWORD).','line_number':999,'multiline':False]
['text':' not ENABLE_PROCESSED_OUTPUT','line_number':1001,'multiline':False]
['text':' From MSDN about BOOL SetConsoleMode(HANDLE, DWORD).','line_number':1004,'multiline':False]
['text':' not ENABLE_WRAP_AT_EOL_OUTPUT','line_number':1006,'multiline':False]
['text':' From MSDN about BOOL SetConsoleMode(HANDLE, DWORD).','line_number':1009,'multiline':False]
['text':' not ENABLE_VIRTUAL_TERMINAL_PROCESSING','line_number':1011,'multiline':False]
['text':' Ensure we have open fds to each std* stream. Otherwise we can end up','line_number':1019,'multiline':False]
['text':' with bizarre things like stdout going to the lock file, etc.','line_number':1020,'multiline':False]
['text':' We don't care about the success of this. Worst that can happen if','line_number':1030,'multiline':False]
['text':' this method fails is that the console won't understand control','line_number':1031,'multiline':False]
['text':' characters like color change or carriage return.','line_number':1032,'multiline':False]
['text':' On ancient Windows versions (pre-XP) and specific hardware the result may','line_number':1047,'multiline':False]
['text':' be 0. Since this is pre-XP, we don't handle that, just error out.','line_number':1048,'multiline':False]
['text':' seconds','line_number':1071,'multiline':False]
['text':' milliseconds','line_number':1073,'multiline':False]
['text':' lpFileName ','line_number':1096,'multiline':True]
['text':' dwDesiredAccess ','line_number':1097,'multiline':True]
['text':' dwShareMode ','line_number':1098,'multiline':True]
['text':' lpSecurityAttributes ','line_number':1099,'multiline':True]
['text':' dwCreationDisposition ','line_number':1100,'multiline':True]
['text':' dwFlagsAndAttributes ','line_number':1101,'multiline':True]
['text':' hTemplateFile ','line_number':1102,'multiline':True]
['text':' We could open the file, so noone else holds a lock on it.','line_number':1104,'multiline':False]
['text':' Someone else has the lock.','line_number':1108,'multiline':False]
['text':' dwMilliseconds ','line_number':1120,'multiline':True]
['text':' We have the lock.','line_number':1130,'multiline':False]
['text':' hFile ','line_number':1133,'multiline':True]
['text':' dwFlags ','line_number':1134,'multiline':True]
['text':' dwReserved ','line_number':1135,'multiline':True]
['text':' nNumberOfBytesToLockLow ','line_number':1136,'multiline':True]
['text':' nNumberOfBytesToLockHigh ','line_number':1137,'multiline':True]
['text':' lpOverlapped ','line_number':1138,'multiline':True]
['text':' On other platforms we write some info about this process into the lock file','line_number':1144,'multiline':False]
['text':' such as the server PID. On Windows we don't do that because the file is','line_number':1145,'multiline':False]
['text':' locked exclusively, meaning other processes may not open the file even for','line_number':1146,'multiline':False]
['text':' reading.','line_number':1147,'multiline':False]
['text':' By including <windows.h>, we have GetUserName defined either as','line_number':1159,'multiline':False]
['text':' GetUserNameA or GetUserNameW.','line_number':1160,'multiline':False]
['text':' Check USER, for sake of consistency with Linux / macOS. This is only set','line_number':1165,'multiline':False]
['text':' under MSYS2, or potentially in tests.','line_number':1166,'multiline':False]
['text':' Check USERNAME before calling GetUserNameW. Doing so allows the user to','line_number':1172,'multiline':False]
['text':' customize (or override) the user name.','line_number':1173,'multiline':False]
['text':' See https://github.com/bazelbuild/bazel/issues/7819#issuecomment-533050947','line_number':1174,'multiline':False]
['text':' GNU Emacs <25.1 (and ~all non-GNU emacsen) set EMACS=t, but >=25.1 doesn't','line_number':1191,'multiline':False]
['text':' do that and instead sets INSIDE_EMACS=<stuff> (where <stuff> can look like','line_number':1192,'multiline':False]
['text':' e.g. "25.1.1,comint").  So we check both variables for maximum','line_number':1193,'multiline':False]
['text':' compatibility.','line_number':1194,'multiline':False]
['text':' handle may be invalid when std{out,err} is redirected','line_number':1202,'multiline':False]
['text':' $COLUMNS is a valid number','line_number':1218,'multiline':False]
['text':' stdout_handle may be invalid when stdout is redirected.','line_number':1225,'multiline':False]
['text':' default if not a terminal.','line_number':1235,'multiline':False]
['text':' Nothing to do so assume success.','line_number':1239,'multiline':False]
['text':' Nothing to do so assume success.','line_number':1243,'multiline':False]
['text':' We do not care about registry values longer than MAX_PATH','line_number':1247,'multiline':False]
['text':' Implements heuristics to discover msys2 installation.','line_number':1250,'multiline':False]
['text':' MSYS2 installer writes its registry into HKCU, although documentation','line_number':1254,'multiline':False]
['text':' (https://msdn.microsoft.com/en-us/library/ms954376.aspx)','line_number':1255,'multiline':False]
['text':' clearly states that it should go to HKLM.','line_number':1256,'multiline':False]
['text':' _In_     HKEY    hKey,','line_number':1259,'multiline':False]
['text':' _In_opt_ LPCTSTR lpSubKey,','line_number':1260,'multiline':False]
['text':' _In_     DWORD   ulOptions,','line_number':1261,'multiline':False]
['text':' _In_     REGSAM  samDesired,','line_number':1263,'multiline':False]
['text':' _Out_    PHKEY   phkResult','line_number':1264,'multiline':False]
['text':' Since MSYS2 decided to generate a new product key for each installation,','line_number':1271,'multiline':False]
['text':' we enumerate all keys under','line_number':1272,'multiline':False]
['text':' HKCU\Software\Microsoft\Windows\CurrentVersion\Uninstall and find the first','line_number':1273,'multiline':False]
['text':' with MSYS2 64bit display name.','line_number':1274,'multiline':False]
['text':' _In_        HKEY      hKey,','line_number':1278,'multiline':False]
['text':' _Out_opt_   LPTSTR    lpClass,','line_number':1279,'multiline':False]
['text':' _Inout_opt_ LPDWORD   lpcClass,','line_number':1280,'multiline':False]
['text':' _Reserved_  LPDWORD   lpReserved,','line_number':1281,'multiline':False]
['text':' _Out_opt_   LPDWORD   lpcSubKeys,','line_number':1282,'multiline':False]
['text':' _Out_opt_   LPDWORD   lpcMaxSubKeyLen,','line_number':1283,'multiline':False]
['text':' _Out_opt_   LPDWORD   lpcMaxClassLen,','line_number':1284,'multiline':False]
['text':' _Out_opt_   LPDWORD   lpcValues,','line_number':1285,'multiline':False]
['text':' _Out_opt_   LPDWORD   lpcMaxValueNameLen,','line_number':1286,'multiline':False]
['text':' _Out_opt_   LPDWORD   lpcMaxValueLen,','line_number':1287,'multiline':False]
['text':' _Out_opt_   LPDWORD   lpcbSecurityDescriptor,','line_number':1288,'multiline':False]
['text':' _Out_opt_   PFILETIME lpftLastWriteTime','line_number':1289,'multiline':False]
['text':' _In_  HKEY   hKey,','line_number':1297,'multiline':False]
['text':' _In_  DWORD  dwIndex,','line_number':1298,'multiline':False]
['text':' _Out_ LPTSTR lpName,','line_number':1299,'multiline':False]
['text':' _In_  DWORD  cchName','line_number':1300,'multiline':False]
['text':' try next subkey','line_number':1304,'multiline':False]
['text':' _In_     HKEY    hKey,','line_number':1308,'multiline':False]
['text':' _In_opt_ LPCTSTR lpSubKey,','line_number':1309,'multiline':False]
['text':' _In_     DWORD   ulOptions,','line_number':1310,'multiline':False]
['text':' _In_     REGSAM  samDesired,','line_number':1311,'multiline':False]
['text':' _Out_    PHKEY   phkResult','line_number':1312,'multiline':False]
['text':' try next subkey','line_number':1316,'multiline':False]
['text':' _In_        HKEY    hKey,','line_number':1324,'multiline':False]
['text':' _In_opt_    LPCTSTR lpValueName,','line_number':1325,'multiline':False]
['text':' _Reserved_  LPDWORD lpReserved,','line_number':1326,'multiline':False]
['text':' _Out_opt_   LPDWORD lpType,','line_number':1327,'multiline':False]
['text':' _Out_opt_   LPBYTE  lpData,','line_number':1328,'multiline':False]
['text':' _Inout_opt_ LPDWORD lpcbData','line_number':1329,'multiline':False]
['text':' This registry key has no DisplayName subkey, so it cannot be MSYS2, or','line_number':1331,'multiline':False]
['text':' it cannot be a version of MSYS2 that we are looking for.','line_number':1332,'multiline':False]
['text':' _In_        HKEY    hKey,','line_number':1344,'multiline':False]
['text':' _In_opt_    LPCTSTR lpValueName,','line_number':1345,'multiline':False]
['text':' _Reserved_  LPDWORD lpReserved,','line_number':1346,'multiline':False]
['text':' _Out_opt_   LPDWORD lpType,','line_number':1347,'multiline':False]
['text':' _Out_opt_   LPBYTE  lpData,','line_number':1348,'multiline':False]
['text':' _Inout_opt_ LPDWORD lpcbData','line_number':1349,'multiline':False]
['text':' This version of MSYS2 does not seem to create a "InstallLocation"','line_number':1351,'multiline':False]
['text':' subkey. Let's ignore this registry key to avoid picking up an MSYS2','line_number':1352,'multiline':False]
['text':' version that may be different from what Bazel expects.','line_number':1353,'multiline':False]
['text':' try next subkey','line_number':1354,'multiline':False]
['text':' This version of MSYS2 seem to have recorded an empty installation','line_number':1358,'multiline':False]
['text':' location, or the registry key was modified. Either way, let's ignore','line_number':1359,'multiline':False]
['text':' this registry key and keep looking at the next subkey.','line_number':1360,'multiline':False]
['text':' The supposed bash.exe does not exist. Maybe MSYS2 was deleted but not','line_number':1369,'multiline':False]
['text':' uninstalled? We can't tell, but for all we care, this MSYS2 path is','line_number':1370,'multiline':False]
['text':' not what we need, so ignore this registry key.','line_number':1371,'multiline':False]
['text':' We do not fully replicate all the quirks of search in PATH.','line_number':1386,'multiline':False]
['text':' There is no system function to do so, and that way lies madness.','line_number':1387,'multiline':False]
['text':' This ignores possibly quoted semicolons in PATH etc.','line_number':1390,'multiline':False]
['text':' Handle one typical way of quoting (where.exe does not handle this, but','line_number':1394,'multiline':False]
['text':' CreateProcess does).','line_number':1395,'multiline':False]
['text':' _In_opt_  LPCTSTR lpPath,','line_number':1399,'multiline':False]
['text':' _In_      LPCTSTR lpFileName,','line_number':1400,'multiline':False]
['text':' LPCTSTR lpExtension,','line_number':1401,'multiline':False]
['text':' DWORD   nBufferLength,','line_number':1402,'multiline':False]
['text':' _Out_     LPTSTR  lpBuffer,','line_number':1403,'multiline':False]
['text':' _Out_opt_ LPTSTR  *lpFilePart','line_number':1404,'multiline':False]
['text':' Set process environment variable.','line_number':1439,'multiline':False]
['text':' Provide python path as coming from the least important rc file.','line_number':1449,'multiline':False]
['text':' namespace blaze','line_number':1456,'multiline':False]
