['text':' Copyright 2014 The Bazel Authors. All rights reserved.','line_number':1,'multiline':False]
['text':'','line_number':2,'multiline':False]
['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':3,'multiline':False]
['text':' you may not use this file except in compliance with the License.','line_number':4,'multiline':False]
['text':' You may obtain a copy of the License at','line_number':5,'multiline':False]
['text':'','line_number':6,'multiline':False]
['text':'    http://www.apache.org/licenses/LICENSE-2.0','line_number':7,'multiline':False]
['text':'','line_number':8,'multiline':False]
['text':' Unless required by applicable law or agreed to in writing, software','line_number':9,'multiline':False]
['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':10,'multiline':False]
['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':11,'multiline':False]
['text':' See the License for the specific language governing permissions and','line_number':12,'multiline':False]
['text':' limitations under the License.','line_number':13,'multiline':False]
['text':' errno, ERANGE','line_number':16,'multiline':False]
['text':' Represents integer values of digits.','line_number':32,'multiline':False]
['text':' Uses 36 to indicate an invalid character since we support','line_number':33,'multiline':False]
['text':' bases up to 36.','line_number':34,'multiline':False]
['text':' 16 36s.','line_number':36,'multiline':False]
['text':' Parse the sign.','line_number':56,'multiline':False]
['text':'inout','line_number':57,'multiline':True]
['text':'output','line_number':58,'multiline':True]
['text':' Consume whitespace.','line_number':62,'multiline':False]
['text':' Consume sign.','line_number':73,'multiline':False]
['text':' Consume digits.','line_number':86,'multiline':False]
['text':'','line_number':87,'multiline':False]
['text':' The classic loop:','line_number':88,'multiline':False]
['text':'','line_number':89,'multiline':False]
['text':'   for each digit','line_number':90,'multiline':False]
['text':'     value = value * base + digit','line_number':91,'multiline':False]
['text':'   value *= sign','line_number':92,'multiline':False]
['text':'','line_number':93,'multiline':False]
['text':' The classic loop needs overflow checking.  It also fails on the most','line_number':94,'multiline':False]
['text':' negative integer, -2147483648 in 32-bit two's complement representation.','line_number':95,'multiline':False]
['text':'','line_number':96,'multiline':False]
['text':' My improved loop:','line_number':97,'multiline':False]
['text':'','line_number':98,'multiline':False]
['text':'  if (!negative)','line_number':99,'multiline':False]
['text':'    for each digit','line_number':100,'multiline':False]
['text':'      value = value * base','line_number':101,'multiline':False]
['text':'      value = value + digit','line_number':102,'multiline':False]
['text':'  else','line_number':103,'multiline':False]
['text':'    for each digit','line_number':104,'multiline':False]
['text':'      value = value * base','line_number':105,'multiline':False]
['text':'      value = value - digit','line_number':106,'multiline':False]
['text':'','line_number':107,'multiline':False]
['text':' Overflow checking becomes simple.','line_number':108,'multiline':False]
['text':' loop over digits','line_number':117,'multiline':False]
['text':' 2003 c++ standard [expr.mul]','line_number':145,'multiline':False]
['text':' "... the sign of the remainder is implementation-defined."','line_number':146,'multiline':False]
['text':' Although (vmin/base)*base + vmin%base is always vmin.','line_number':147,'multiline':False]
['text':' 2011 c++ standard tightens the spec but we cannot rely on it.','line_number':148,'multiline':False]
['text':' loop over digits','line_number':154,'multiline':False]
['text':' NOLINT','line_number':192,'multiline':False]
['text':' NOLINT','line_number':193,'multiline':False]
['text':' NOLINT','line_number':197,'multiline':False]
['text':' namespace blaze_util','line_number':214,'multiline':False]
