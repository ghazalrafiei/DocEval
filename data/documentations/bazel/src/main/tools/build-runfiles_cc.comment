['text':' Copyright 2014 The Bazel Authors. All rights reserved.','line_number':1,'multiline':False]
['text':'','line_number':2,'multiline':False]
['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':3,'multiline':False]
['text':' you may not use this file except in compliance with the License.','line_number':4,'multiline':False]
['text':' You may obtain a copy of the License at','line_number':5,'multiline':False]
['text':'','line_number':6,'multiline':False]
['text':'    http://www.apache.org/licenses/LICENSE-2.0','line_number':7,'multiline':False]
['text':'','line_number':8,'multiline':False]
['text':' Unless required by applicable law or agreed to in writing, software','line_number':9,'multiline':False]
['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':10,'multiline':False]
['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':11,'multiline':False]
['text':' See the License for the specific language governing permissions and','line_number':12,'multiline':False]
['text':' limitations under the License.','line_number':13,'multiline':False]
['text':'','line_number':14,'multiline':False]
['text':' This program creates a "runfiles tree" from a "runfiles manifest".','line_number':15,'multiline':False]
['text':'','line_number':16,'multiline':False]
['text':' The command line arguments are an input manifest INPUT and an output','line_number':17,'multiline':False]
['text':' directory RUNFILES. First, the files in the RUNFILES directory are scanned','line_number':18,'multiline':False]
['text':' and any extraneous ones are removed. Second, any missing files are created.','line_number':19,'multiline':False]
['text':' Finally, a copy of the input manifest is written to RUNFILES/MANIFEST.','line_number':20,'multiline':False]
['text':'','line_number':21,'multiline':False]
['text':' The input manifest consists of lines, each containing a relative path within','line_number':22,'multiline':False]
['text':' the runfiles, a space, and an optional absolute path.  If this second path','line_number':23,'multiline':False]
['text':' is present, a symlink is created pointing to it; otherwise an empty file is','line_number':24,'multiline':False]
['text':' created.','line_number':25,'multiline':False]
['text':'','line_number':26,'multiline':False]
['text':' Given the line','line_number':27,'multiline':False]
['text':'   <workspace root>/output/path /real/path','line_number':28,'multiline':False]
['text':' we will create directories','line_number':29,'multiline':False]
['text':'   RUNFILES/<workspace root>','line_number':30,'multiline':False]
['text':'   RUNFILES/<workspace root>/output','line_number':31,'multiline':False]
['text':' a symlink','line_number':32,'multiline':False]
['text':'   RUNFILES/<workspace root>/output/path -> /real/path','line_number':33,'multiline':False]
['text':' and the output manifest will contain a line','line_number':34,'multiline':False]
['text':'   <workspace root>/output/path /real/path','line_number':35,'multiline':False]
['text':'','line_number':36,'multiline':False]
['text':' If --use_metadata is supplied, every other line is treated as opaque','line_number':37,'multiline':False]
['text':' metadata, and is ignored here.','line_number':38,'multiline':False]
['text':'','line_number':39,'multiline':False]
['text':' All output paths must be relative and generally (but not always) begin with','line_number':40,'multiline':False]
['text':' <workspace root>. No output path may be equal to another.  No output path may','line_number':41,'multiline':False]
['text':' be a path prefix of another.','line_number':42,'multiline':False]
['text':' program_invocation_short_name is not portable.','line_number':59,'multiline':False]
['text':' Remove file left over from previous invocation. This ensures that','line_number':120,'multiline':False]
['text':' opening succeeds if the existing file is read-only.','line_number':121,'multiline':False]
['text':' read input manifest','line_number':136,'multiline':False]
['text':' copy line to output manifest','line_number':140,'multiline':False]
['text':' parse line','line_number':146,'multiline':False]
['text':' Skip metadata lines. They are used solely for','line_number':148,'multiline':False]
['text':' dependency checking.','line_number':149,'multiline':False]
['text':' Match Windows paths, e.g. C:\foo or C:/foo.','line_number':170,'multiline':False]
['text':' No target means an empty file.','line_number':176,'multiline':False]
['text':' Don't delete the temp manifest file.','line_number':199,'multiline':False]
['text':' rename output file into place','line_number':212,'multiline':False]
['text':' Technically, this will cause problems if the user's umask contains','line_number':224,'multiline':False]
['text':' 0200, but we don't care. Anyone who does that deserves what's coming.','line_number':225,'multiline':False]
['text':' A note on non-empty files:','line_number':235,'multiline':False]
['text':' We don't distinguish between empty and non-empty files. That is, if','line_number':236,'multiline':False]
['text':' there's a file that has contents, we don't truncate it here, even though','line_number':237,'multiline':False]
['text':' the manifest supports creation of empty files, only. Given that','line_number':238,'multiline':False]
['text':' .runfiles are *supposed* to be immutable, this shouldn't be a problem.','line_number':239,'multiline':False]
['text':' On Windows, if deleting failed, lamely assume that','line_number':267,'multiline':False]
['text':' the link points to the right place.','line_number':268,'multiline':False]
['text':' NOLINT (the brace is in the next line)','line_number':329,'multiline':False]
['text':' readlink returns a non-null terminated string.','line_number':362,'multiline':False]
