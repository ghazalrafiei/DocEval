['text':' Copyright 2014 The Bazel Authors. All rights reserved.','line_number':1,'multiline':False]
['text':'','line_number':2,'multiline':False]
['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':3,'multiline':False]
['text':' you may not use this file except in compliance with the License.','line_number':4,'multiline':False]
['text':' You may obtain a copy of the License at','line_number':5,'multiline':False]
['text':'','line_number':6,'multiline':False]
['text':'    http://www.apache.org/licenses/LICENSE-2.0','line_number':7,'multiline':False]
['text':'','line_number':8,'multiline':False]
['text':' Unless required by applicable law or agreed to in writing, software','line_number':9,'multiline':False]
['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':10,'multiline':False]
['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':11,'multiline':False]
['text':' See the License for the specific language governing permissions and','line_number':12,'multiline':False]
['text':' limitations under the License.','line_number':13,'multiline':False]
['text':'*
 * A converter is a little helper object that can take a String and turn it into an instance of type
 * T (the type parameter to the converter). A context object is optionally provided.
 ','line_number':18,'multiline':True]
['text':'*
   * Convert a string into type T, using the given conversion context. Please note that we assume
   * that converting the same string (if successful) will produce objects which are equal ({@link
   * Object#equals}).
   ','line_number':24,'multiline':True]
['text':'*
   * The type description appears in usage messages. E.g.: "a string",
   * "a path", etc.
   ','line_number':31,'multiline':True]
['text':'*
   * Can this converter reverse-convert to a Starlark-readable value?
   *
   * <p>If so, {@link #reverseForStarlark} implements the reverse conversion. If not, {@link
   * #reverseForStarlark} throws an {@link UnsupportedOperationException}.
   ','line_number':37,'multiline':True]
['text':'*
   * If {@link #starlarkConvertible()} is true, this reverses a converted value back to a
   * Starlark-readable form.
   *
   * <p>If {@link #starlarkConvertible()} is true, throws an {@link UnsupportedOperationException}.
   *
   * @param converted If the option this value represents isn't {@link Option#allowMultiple}, an
   *     object of the option's Java type. Else an entry in the option's {@link java.util.List}.
   *     Always of type T. Referenced as an {@link Object} because calling code can call any
   *     converter.
   * @return A {@link String} version of the input. Calling {@link #convert} on this value should
   *     faithfully reproduce {@code converted}.
   ','line_number':47,'multiline':True]
['text':'* A converter that never reads its context parameter. ','line_number':64,'multiline':True]
['text':'*
     * Actual implementation of {@link #convert(String, Object)} that just ignores the context
     * parameter.
     ','line_number':67,'multiline':True]
