['text':' Copyright 2014 The Bazel Authors. All rights reserved.','line_number':1,'multiline':False]
['text':'','line_number':2,'multiline':False]
['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':3,'multiline':False]
['text':' you may not use this file except in compliance with the License.','line_number':4,'multiline':False]
['text':' You may obtain a copy of the License at','line_number':5,'multiline':False]
['text':'','line_number':6,'multiline':False]
['text':'    http://www.apache.org/licenses/LICENSE-2.0','line_number':7,'multiline':False]
['text':'','line_number':8,'multiline':False]
['text':' Unless required by applicable law or agreed to in writing, software','line_number':9,'multiline':False]
['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':10,'multiline':False]
['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':11,'multiline':False]
['text':' See the License for the specific language governing permissions and','line_number':12,'multiline':False]
['text':' limitations under the License.','line_number':13,'multiline':False]
['text':'*
 * The position of an option in the interpretation order. Options are interpreted using a
 * last-option-wins system for single valued options, and are listed in that order for
 * multiple-valued options.
 *
 * <p>The position of the option is in category order, and within the priority category in index
 * order.
 ','line_number':19,'multiline':True]
['text':'*
   * Each option that is passed explicitly has 0 ancestors, so it only has its command line index
   * (or rc index, etc., depending on the category), but expanded options have the command line
   * index of its parent and then its position within the options that were expanded at that point.
   * Since options can expand to expanding options, and --config can expand to expansion options as
   * well, this can technically go arbitrarily deep, but in practice this is very short, of length <
   * 5, most commonly of length 1.
   ','line_number':29,'multiline':True]
['text':'* Get the first OptionPriority for that category. ','line_number':47,'multiline':True]
['text':'*
   * Get the priority for the option following this one. In normal, incremental option parsing, the
   * returned priority would compareTo as after the current one. Does not increment ancestor
   * priorities.
   ','line_number':52,'multiline':True]
['text':'*
   * Some options are expanded to other options, and the children options need to have their order
   * preserved while maintaining their position between the options that flank the parent option.
   *
   * @return the priority for the first child of the passed priority. This child's ordering can be
   *     tracked the same way that the parent's was.
   ','line_number':67,'multiline':True]
['text':' Prevent this option from being re-expanded.','line_number':79,'multiline':False]
['text':' The child priority has 1 more level of nesting than its parent.','line_number':82,'multiline':False]
['text':' The values are up to the shorter one's length are the same, so the shorter one is a direct','line_number':100,'multiline':False]
['text':' ancestor and comes first.','line_number':101,'multiline':False]
['text':'*
   * The priority of option values, in order of increasing priority.
   *
   * <p>In general, new values for options can only override values with a lower or equal priority.
   * Option values provided in annotations in an options class are implicitly at the priority {@code
   * DEFAULT}.
   *
   * <p>The ordering of the priorities is the source-code order. This is consistent with the
   * automatically generated {@code compareTo} method as specified by the Java Language
   * Specification. DO NOT change the source-code order of these values, or you will break code that
   * relies on the ordering.
   ','line_number':127,'multiline':True]
['text':'*
     * The priority of values specified in the {@link Option} annotation. This should never be
     * specified in calls to {@link OptionsParser#parse}.
     ','line_number':141,'multiline':True]
['text':'*
     * Overrides default options at runtime, while still allowing the values to be overridden
     * manually.
     ','line_number':147,'multiline':True]
['text':'* For options coming from a configuration file or rc file. ','line_number':153,'multiline':True]
['text':'* For options coming from the command line. ','line_number':156,'multiline':True]
['text':'* For options coming from invocation policy. ','line_number':159,'multiline':True]
['text':'*
     * This priority can be used to unconditionally override any user-provided options. This should
     * be used rarely and with caution!
     ','line_number':162,'multiline':True]
