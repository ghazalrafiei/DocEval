['text':' Copyright 2018 The Bazel Authors. All rights reserved.','line_number':1,'multiline':False]
['text':'','line_number':2,'multiline':False]
['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':3,'multiline':False]
['text':' you may not use this file except in compliance with the License.','line_number':4,'multiline':False]
['text':' You may obtain a copy of the License at','line_number':5,'multiline':False]
['text':'','line_number':6,'multiline':False]
['text':'    http://www.apache.org/licenses/LICENSE-2.0','line_number':7,'multiline':False]
['text':'','line_number':8,'multiline':False]
['text':' Unless required by applicable law or agreed to in writing, software','line_number':9,'multiline':False]
['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':10,'multiline':False]
['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':11,'multiline':False]
['text':' See the License for the specific language governing permissions and','line_number':12,'multiline':False]
['text':' limitations under the License.','line_number':13,'multiline':False]
['text':'*
 * A value class to store Methods with their corresponding {@link StarlarkMethod} annotation
 * metadata. This is needed because the annotation is sometimes in a superclass.
 *
 * <p>The annotation metadata is duplicated in this class to avoid usage of Java dynamic proxies
 * which are ~7Ã— slower.
 ','line_number':27,'multiline':True]
['text':' any Starlark value; null -> None','line_number':51,'multiline':False]
['text':' any Starlark value; null -> error','line_number':52,'multiline':False]
['text':' Java int -> StarlarkInt','line_number':53,'multiline':False]
['text':' Starlark.fromJava conversion (List, Map, various Numbers, null perhaps)','line_number':54,'multiline':False]
['text':' * `void` function returns `null`','line_number':89,'multiline':False]
['text':' * `boolean` function never returns `null`','line_number':90,'multiline':False]
['text':' We could have specialized enum variant, but null check is cheap.','line_number':91,'multiline':False]
['text':'* Returns the StarlarkMethod annotation corresponding to this method. ','line_number':105,'multiline':True]
['text':'* @return Starlark method descriptor for provided Java method and signature annotation. ','line_number':110,'multiline':True]
['text':' This happens when the interface is public but the implementation classes','line_number':113,'multiline':False]
['text':' have reduced visibility.','line_number':114,'multiline':False]
['text':'* Calls this method, which must have {@code structField=true}. ','line_number':140,'multiline':True]
['text':'*
   * Invokes this method using {@code obj} as a target and {@code args} as Java arguments.
   *
   * <p>Methods with {@code void} return type return {@code None} following Python convention.
   *
   * <p>The Mutability is used if it is necessary to allocate a Starlark copy of a Java result.
   ','line_number':150,'multiline':True]
['text':' "Can't happen": the annotated processor ensures that annotated methods are accessible.','line_number':164,'multiline':False]
['text':' "Can't happen": unexpected type mismatch.','line_number':168,'multiline':False]
['text':' Show details to aid debugging (see e.g. b/162444744).','line_number':169,'multiline':False]
['text':' Don't intercept unchecked exceptions.','line_number':188,'multiline':False]
['text':' All other checked exceptions (e.g. LabelSyntaxException) are reported to Starlark.','line_number':195,'multiline':False]
['text':' This switch is an optimization to reduce the overhead','line_number':200,'multiline':False]
['text':' of an unconditional null check and fromJava call.','line_number':201,'multiline':False]
['text':' don't forget to throw it','line_number':221,'multiline':False]
['text':'* @see StarlarkMethod#name() ','line_number':227,'multiline':True]
['text':'* @see StarlarkMethod#structField() ','line_number':236,'multiline':True]
['text':'* @see StarlarkMethod#useStarlarkThread() ','line_number':241,'multiline':True]
['text':'* @see StarlarkMethod#useStarlarkSemantics() ','line_number':246,'multiline':True]
['text':'* @return {@code true} if this method accepts extra arguments ({@code *args}) ','line_number':251,'multiline':True]
['text':'* @see StarlarkMethod#extraKeywords() ','line_number':256,'multiline':True]
['text':'* @see StarlarkMethod#parameters() ','line_number':261,'multiline':True]
['text':'* Returns the index of the named parameter or -1 if not found. ','line_number':266,'multiline':True]
['text':'* @see StarlarkMethod#documented() ','line_number':276,'multiline':True]
['text':'* @see StarlarkMethod#doc() ','line_number':281,'multiline':True]
['text':'* @see StarlarkMethod#selfCall() ','line_number':286,'multiline':True]
