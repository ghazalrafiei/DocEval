['text':' Copyright 2023 The Bazel Authors. All rights reserved.','line_number':1,'multiline':False]
['text':'','line_number':2,'multiline':False]
['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':3,'multiline':False]
['text':' you may not use this file except in compliance with the License.','line_number':4,'multiline':False]
['text':' You may obtain a copy of the License at','line_number':5,'multiline':False]
['text':'','line_number':6,'multiline':False]
['text':'    http://www.apache.org/licenses/LICENSE-2.0','line_number':7,'multiline':False]
['text':'','line_number':8,'multiline':False]
['text':' Unless required by applicable law or agreed to in writing, software','line_number':9,'multiline':False]
['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':10,'multiline':False]
['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':11,'multiline':False]
['text':' See the License for the specific language governing permissions and','line_number':12,'multiline':False]
['text':' limitations under the License.','line_number':13,'multiline':False]
['text':'* A mutable implementation of StarlarkList. ','line_number':23,'multiline':True]
['text':' The implementation strategy is similar to ArrayList,','line_number':26,'multiline':False]
['text':' but without the extra indirection of using ArrayList.','line_number':27,'multiline':False]
['text':' elems[0:size] holds the logical elements, and elems[size:] are not used.','line_number':29,'multiline':False]
['text':' elems.getClass() == Object[].class. This is necessary to avoid ArrayStoreException.','line_number':30,'multiline':False]
['text':' number of active iterators (unused once frozen)','line_number':32,'multiline':False]
['text':' elems[i] == null  iff  i >= size','line_number':33,'multiline':False]
['text':'* Final except for {@link #unsafeShallowFreeze}; must not be modified any other way. ','line_number':35,'multiline':True]
['text':' Optimization: a frozen array needn't be copied.','line_number':76,'multiline':False]
['text':' If the entire array is full, we can wrap it directly.','line_number':77,'multiline':False]
['text':' unchecked','line_number':89,'multiline':False]
['text':' StarlarkList contains only valid Starlark objects (which are non-null)','line_number':99,'multiline':False]
['text':' Postcondition: elems.length >= mincap.','line_number':112,'multiline':False]
['text':' grow by at least 50%','line_number':116,'multiline':False]
['text':' Grow capacity enough to insert given number of elements','line_number':124,'multiline':False]
['text':' (safe even if this == that)','line_number':154,'multiline':False]
['text':' collection of known size','line_number':159,'multiline':False]
['text':' iterable','line_number':166,'multiline':False]
['text':' aid GC','line_number':181,'multiline':False]
['text':' aid GC','line_number':195,'multiline':False]
['text':'* Returns a new array of class Object[] containing the list elements. ','line_number':200,'multiline':True]
['text':' Canonicalize our Mutability, on the off-chance the old one may be freed.','line_number':226,'multiline':False]
['text':' shrink the Object array','line_number':229,'multiline':False]
['text':' Give the caller an immutable specialization of StarlarkList.','line_number':232,'multiline':False]
