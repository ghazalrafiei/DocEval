['text':' Copyright 2016 The Bazel Authors. All rights reserved.','line_number':1,'multiline':False]
['text':'','line_number':2,'multiline':False]
['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':3,'multiline':False]
['text':' you may not use this file except in compliance with the License.','line_number':4,'multiline':False]
['text':' You may obtain a copy of the License at','line_number':5,'multiline':False]
['text':'','line_number':6,'multiline':False]
['text':'    http://www.apache.org/licenses/LICENSE-2.0','line_number':7,'multiline':False]
['text':'','line_number':8,'multiline':False]
['text':' Unless required by applicable law or agreed to in writing, software','line_number':9,'multiline':False]
['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':10,'multiline':False]
['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':11,'multiline':False]
['text':' See the License for the specific language governing permissions and','line_number':12,'multiline':False]
['text':' limitations under the License.','line_number':13,'multiline':False]
['text':'* An annotation for parameter types for Starlark built-in functions. ','line_number':19,'multiline':True]
['text':'*
   * The Java class of the type, e.g. {@link String}.class or {@link
   * net.starlark.java.eval.Sequence}.class.
   ','line_number':22,'multiline':True]
['text':'*
   * When {@link #type()} is a generic type (e.g., {@link net.starlark.java.eval.Sequence}), specify
   * the type parameter (e.g. {@link String}.class} along with {@link
   * net.starlark.java.eval.Sequence} for {@link #type()} to specify a list of strings).
   *
   * <p>This is only used for documentation generation. The actual generic type is not checked at
   * runtime, so the Java method signature should use a generic type of Object and cast
   * appropriately.
   ','line_number':28,'multiline':True]
['text':' TODO(#13365): make this a data structure so we can represent a {@link','line_number':37,'multiline':False]
['text':' net.starlark.java.eval.Sequence} of types {@code A} or {@code B} intermixed, a {@link','line_number':38,'multiline':False]
['text':' net.starlark.java.eval.Dict} mapping from {@code A} to {@code B}, etc.','line_number':39,'multiline':False]
