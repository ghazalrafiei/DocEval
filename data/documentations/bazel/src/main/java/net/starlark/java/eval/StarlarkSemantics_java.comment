['text':' Copyright 2019 The Bazel Authors. All rights reserved.','line_number':1,'multiline':False]
['text':'','line_number':2,'multiline':False]
['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':3,'multiline':False]
['text':' you may not use this file except in compliance with the License.','line_number':4,'multiline':False]
['text':' You may obtain a copy of the License at','line_number':5,'multiline':False]
['text':'','line_number':6,'multiline':False]
['text':'    http://www.apache.org/licenses/LICENSE-2.0','line_number':7,'multiline':False]
['text':'','line_number':8,'multiline':False]
['text':' Unless required by applicable law or agreed to in writing, software','line_number':9,'multiline':False]
['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':10,'multiline':False]
['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':11,'multiline':False]
['text':' See the License for the specific language governing permissions and','line_number':12,'multiline':False]
['text':' limitations under the License.','line_number':13,'multiline':False]
['text':'','line_number':14,'multiline':False]
['text':'*
 * A StarlarkSemantics is an immutable set of optional name/value pairs that affect the dynamic
 * behavior of Starlark operators and built-in functions, both core and application-defined.
 *
 * <p>For extensibility, a StarlarkSemantics only records a name/value pair when the value differs
 * from the default value appropriate to that name. Values of most types are accessed using a {@link
 * Key}, which defines the name, type, and default value for an entry. Boolean values are accessed
 * using a string key; the string must have the prefix "+" or "-", indicating the default value: +
 * for true, - for false. The reason for the special treatment of boolean entries is that they may
 * enable or disable methods and parameters in the StarlarkMethod annotation system, and it is not
 * possible to refer to a Key from a Java annotation, only a string.
 *
 * <p>It is the client's responsibility to ensure that a StarlarkSemantics does not encounter
 * multiple Keys of the same name but different value types.
 *
 * <p>For Bazel's semantics options, see {@link packages.semantics.BuildLanguageOptions}.
 *
 * <p>For options that affect the static behavior of the Starlark frontend (lexer, parser,
 * validator, compiler), see {@link FileOptions}.
 ','line_number':24,'multiline':True]
['text':'*
   * Returns the empty semantics, in which every option has its default value.
   *
   * <p><i>Usage note:</i> Usually all Starlark evaluation contexts (i.e., {@link StarlarkThread}s
   * or other interpreter APIs that accept a {@code StarlarkSemantics}) within the same application
   * should use the same semantics. Otherwise, different pieces of code -- or even the same code
   * when executed in different capacities -- could produce diverging results. It is therefore
   * generally a code smell to use the {@code DEFAULT} semantics rather than propagating a {@code
   * StarlarkSemantics} from another context.
   ','line_number':46,'multiline':True]
['text':' A map entry must be accessed by Key iff its name has no [+-] prefix.','line_number':58,'multiline':False]
['text':' Key<Boolean> is permitted too.','line_number':59,'multiline':False]
['text':' The map keys are sorted but we avoid ImmutableSortedMap due to observed inefficiency.','line_number':60,'multiline':False]
['text':'* Returns the value of a boolean option, which must have a [+-] prefix. ','line_number':69,'multiline':True]
['text':' prefix => cast cannot fail','line_number':74,'multiline':False]
['text':'* Returns the value of the option denoted by {@code key}. ','line_number':78,'multiline':True]
['text':' safe, if Key.names are unique','line_number':80,'multiline':False]
['text':' TODO(bazel-team): This exists solely for BuiltinsInternalModule#getFlag, which allows a','line_number':85,'multiline':False]
['text':' (privileged) Starlark caller to programmatically retrieve a flag's value without knowing its','line_number':86,'multiline':False]
['text':' schema and default value. Reconsider whether we should support that use case from this class.','line_number':87,'multiline':False]
['text':'*
   * Returns the value of the option with the given name, or the default value if it is not set or
   * does not exist.
   ','line_number':88,'multiline':True]
['text':' Try boolean prefixes if that didn't work.','line_number':94,'multiline':False]
['text':'* A Key identifies an option, providing its name, type, and default value. ','line_number':104,'multiline':True]
['text':'*
     * Constructs a key. The name must not start with [+-]. The value must not be subsequently
     * modified.
     ','line_number':109,'multiline':True]
['text':'*
   * Returns a new builder that initially holds the same key/value pairs as this StarlarkSemantics.
   ','line_number':126,'multiline':True]
['text':'* Returns a new empty builder. ','line_number':133,'multiline':True]
['text':'* A Builder is a mutable container used to construct an immutable StarlarkSemantics. ','line_number':138,'multiline':True]
['text':'* Sets the value for the specified key. ','line_number':146,'multiline':True]
['text':'* Sets the value for the boolean key, which must have a [+-] prefix. ','line_number':157,'multiline':True]
['text':'* Returns an immutable StarlarkSemantics. ','line_number':171,'multiline':True]
['text':'*
   * Returns true if a feature attached to the given toggling flags should be enabled.
   *
   * <ul>
   *   <li>If both parameters are empty, this indicates the feature is not controlled by flags, and
   *       should thus be enabled.
   *   <li>If the {@code enablingFlag} parameter is non-empty, this returns true if and only if that
   *       flag is true. (This represents a feature that is only on if a given flag is *on*).
   *   <li>If the {@code disablingFlag} parameter is non-empty, this returns true if and only if
   *       that flag is false. (This represents a feature that is only on if a given flag is *off*).
   *   <li>It is illegal to pass both parameters as non-empty.
   * </ul>
   ','line_number':177,'multiline':True]
['text':'*
   * Returns a representation of this StarlarkSemantics' non-default key/value pairs in key order.
   ','line_number':214,'multiline':True]
['text':' Print "StarlarkSemantics{k=v, ...}", without +/- prefixes.','line_number':219,'multiline':False]
['text':' -- semantics options affecting the Starlark interpreter itself --','line_number':237,'multiline':False]
['text':'* Change the behavior of 'print' statements. Used in tests to verify flag propagation. ','line_number':239,'multiline':True]
['text':'*
   * Whether recursive function calls are allowed. This option is not exposed to Bazel, which
   * unconditionally prohibits recursion.
   ','line_number':242,'multiline':True]
