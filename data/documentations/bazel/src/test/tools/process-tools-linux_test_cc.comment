['text':' Copyright 2019 The Bazel Authors. All rights reserved.','line_number':1,'multiline':False]
['text':'','line_number':2,'multiline':False]
['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':3,'multiline':False]
['text':' you may not use this file except in compliance with the License.','line_number':4,'multiline':False]
['text':' You may obtain a copy of the License at','line_number':5,'multiline':False]
['text':'','line_number':6,'multiline':False]
['text':'    http://www.apache.org/licenses/LICENSE-2.0','line_number':7,'multiline':False]
['text':'','line_number':8,'multiline':False]
['text':' Unless required by applicable law or agreed to in writing, software','line_number':9,'multiline':False]
['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':10,'multiline':False]
['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':11,'multiline':False]
['text':' See the License for the specific language governing permissions and','line_number':12,'multiline':False]
['text':' limitations under the License.','line_number':13,'multiline':False]
['text':' TerminateAndWaitForAll requires the caller to have enabled the child','line_number':29,'multiline':False]
['text':' subreaper feature before spawning any processes.','line_number':30,'multiline':False]
['text':' Abort sleep to finish test quickly.','line_number':46,'multiline':False]
['text':' Spawn a bunch of subprocesses and report their PIDs to the test before','line_number':64,'multiline':False]
['text':' exiting.','line_number':65,'multiline':False]
['text':' Keep some subprocesses in the process group and make others escape.','line_number':73,'multiline':False]
['text':' Sleep for a very long amount of time to ensure we actually wait for','line_number':78,'multiline':False]
['text':' and terminate processes in the process group.','line_number':79,'multiline':False]
['text':' Collect the PIDs of all subprocesses (except for the leader).','line_number':93,'multiline':False]
['text':' This check is racy: some other process might have reclaimed the PID of','line_number':105,'multiline':False]
['text':' the process we already terminated. But it's very unlikely because the','line_number':106,'multiline':False]
['text':' kernel tries very hard to not reassign PIDs too quickly.','line_number':107,'multiline':False]
['text':' namespace','line_number':112,'multiline':False]
