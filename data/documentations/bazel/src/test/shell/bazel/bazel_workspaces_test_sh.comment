['text':'!/bin/bash','line_number':1,'multiline':False]
['text':'','line_number':2,'multiline':False]
['text':' Copyright 2018 The Bazel Authors. All rights reserved.','line_number':3,'multiline':False]
['text':'','line_number':4,'multiline':False]
['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':5,'multiline':False]
['text':' you may not use this file except in compliance with the License.','line_number':6,'multiline':False]
['text':' You may obtain a copy of the License at','line_number':7,'multiline':False]
['text':'','line_number':8,'multiline':False]
['text':'    http://www.apache.org/licenses/LICENSE-2.0','line_number':9,'multiline':False]
['text':'','line_number':10,'multiline':False]
['text':' Unless required by applicable law or agreed to in writing, software','line_number':11,'multiline':False]
['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':12,'multiline':False]
['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':13,'multiline':False]
['text':' See the License for the specific language governing permissions and','line_number':14,'multiline':False]
['text':' limitations under the License.','line_number':15,'multiline':False]
['text':'','line_number':16,'multiline':False]
['text':' Tests verbosity behavior on workspace initialization','line_number':17,'multiline':False]
['text':' Sets up a workspace with the given commands inserted into the repository rule','line_number':30,'multiline':False]
['text':' that will be executed when doing bazel build //:test','line_number':31,'multiline':False]
['text':' Cached executions are not replayed','line_number':94,'multiline':False]
['text':' The workspace is set up so that the function is interrupted and re-executed.','line_number':99,'multiline':False]
['text':' The log should contain both instances.','line_number':100,'multiline':False]
['text':' Ensure details of the specific functions are present','line_number':147,'multiline':False]
['text':' Workspace contains 2 file commands','line_number':160,'multiline':False]
['text':' quiet: false does not show up when printing protos','line_number':173,'multiline':False]
['text':' since it's the default value','line_number':174,'multiline':False]
['text':' Workspace contains 2 file commands','line_number':178,'multiline':False]
['text':' Prepare HTTP server with Python','line_number':183,'multiline':False]
['text':' Start HTTP server with Python','line_number':190,'multiline':False]
['text':' Prepare HTTP server with Python','line_number':206,'multiline':False]
['text':' Start HTTP server with Python','line_number':215,'multiline':False]
['text':' Prepare HTTP server with Python','line_number':234,'multiline':False]
['text':' Use Python for hashing and encoding due to cross-platform differences in','line_number':240,'multiline':False]
['text':' presence + behavior of `shasum` and `base64`.','line_number':241,'multiline':False]
['text':' Start HTTP server with Python','line_number':245,'multiline':False]
['text':' Prepare HTTP server with Python','line_number':262,'multiline':False]
['text':' Use Python for hashing and encoding due to cross-platform differences in','line_number':268,'multiline':False]
['text':' presence + behavior of `shasum` and `base64`.','line_number':269,'multiline':False]
['text':' Start HTTP server with Python','line_number':274,'multiline':False]
['text':' Verify that a malformed value for integrity leads to a failing build','line_number':291,'multiline':False]
['text':' Unsupported checksum algorithm','line_number':298,'multiline':False]
['text':' Syntactically invalid checksum','line_number':305,'multiline':False]
['text':' Syntactically correct, but incorrect value','line_number':312,'multiline':False]
['text':' Prepare HTTP server with Python','line_number':321,'multiline':False]
['text':' Start HTTP server with Python','line_number':332,'multiline':False]
['text':' Prepare HTTP server with Python','line_number':357,'multiline':False]
['text':' Start HTTP server with Python','line_number':369,'multiline':False]
['text':' Prepare HTTP server with Python','line_number':394,'multiline':False]
['text':' Start HTTP server with Python','line_number':405,'multiline':False]
['text':' Create a tar archive with two entries, which would have conflicting','line_number':427,'multiline':False]
['text':' paths if extracted to a case-insensitive filesystem.','line_number':428,'multiline':False]
['text':' Regression test for https://github.com/bazelbuild/bazel/issues/12986','line_number':456,'multiline':False]
['text':' Verifies that tar entries with PAX headers, which are always encoded in UTF-8, are extracted','line_number':457,'multiline':False]
['text':' correctly.','line_number':458,'multiline':False]
['text':' Verifies that tar entries with USTAR headers, for which an encoding isn't specified, are extracted','line_number':480,'multiline':False]
['text':' correctly if that encoding happens to be UTF-8.','line_number':481,'multiline':False]
['text':' Verifies that tar entries with USTAR headers, for which an encoding isn't specified, are extracted','line_number':503,'multiline':False]
['text':' correctly if that encoding is not UTF-8.','line_number':504,'multiline':False]
['text':' There are 3 file_event in external:repo as it is currently set up','line_number':560,'multiline':False]
['text':' There are 3 file_event in external:repo as it is currently set up','line_number':575,'multiline':False]
['text':' This test file is in UTF-8, so the string passed to file() is UTF-8.','line_number':580,'multiline':False]
['text':' Protobuf strings are Unicode encoded in UTF-8, so the logged text','line_number':581,'multiline':False]
['text':' is double-encoded relative to the workspace command.','line_number':582,'multiline':False]
['text':'','line_number':583,'multiline':False]
['text':' >>> content = "echo f\u00EFl\u00EBf\u00EFl\u00EB".encode("utf8")','line_number':584,'multiline':False]
['text':' >>> proto_content = content.decode("iso-8859-1").encode("utf8")','line_number':585,'multiline':False]
['text':' >>> print("".join(chr(c) if c <= 0x7F else ("\\" + oct(c)[2:]) for c in proto_content))','line_number':586,'multiline':False]
['text':' echo f\303\203\302\257l\303\203\302\253f\303\203\302\257l\303\203\302\253','line_number':587,'multiline':False]
['text':' >>>','line_number':588,'multiline':False]
['text':' See discussion on https://github.com/bazelbuild/bazel/pull/7309','line_number':612,'multiline':False]
