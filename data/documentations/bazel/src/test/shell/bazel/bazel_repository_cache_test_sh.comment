['text':'!/bin/bash','line_number':1,'multiline':False]
['text':'','line_number':2,'multiline':False]
['text':' Copyright 2016 The Bazel Authors. All rights reserved.','line_number':3,'multiline':False]
['text':'','line_number':4,'multiline':False]
['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':5,'multiline':False]
['text':' you may not use this file except in compliance with the License.','line_number':6,'multiline':False]
['text':' You may obtain a copy of the License at','line_number':7,'multiline':False]
['text':'','line_number':8,'multiline':False]
['text':'    http://www.apache.org/licenses/LICENSE-2.0','line_number':9,'multiline':False]
['text':'','line_number':10,'multiline':False]
['text':' Unless required by applicable law or agreed to in writing, software','line_number':11,'multiline':False]
['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':12,'multiline':False]
['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':13,'multiline':False]
['text':' See the License for the specific language governing permissions and','line_number':14,'multiline':False]
['text':' limitations under the License.','line_number':15,'multiline':False]
['text':'','line_number':16,'multiline':False]
['text':' Test repository cache mechanisms','line_number':17,'multiline':False]
['text':' Load the test setup defined in the parent directory','line_number':19,'multiline':False]
['text':' Test with the extension','line_number':39,'multiline':False]
['text':' Prepare HTTP server with Python','line_number':55,'multiline':False]
['text':' Start HTTP server with Python','line_number':67,'multiline':False]
['text':' Test downloading a file from a repository.','line_number':77,'multiline':False]
['text':' This creates a simple repository containing:','line_number':78,'multiline':False]
['text':'','line_number':79,'multiline':False]
['text':' repo/','line_number':80,'multiline':False]
['text':'   WORKSPACE','line_number':81,'multiline':False]
['text':'   zoo/','line_number':82,'multiline':False]
['text':'     BUILD','line_number':83,'multiline':False]
['text':'     female.sh','line_number':84,'multiline':False]
['text':'','line_number':85,'multiline':False]
['text':' And a .zip file, which contains:','line_number':86,'multiline':False]
['text':'','line_number':87,'multiline':False]
['text':' WORKSPACE','line_number':88,'multiline':False]
['text':' fox/','line_number':89,'multiline':False]
['text':'   BUILD','line_number':90,'multiline':False]
['text':'   male','line_number':91,'multiline':False]
['text':'   male_relative -> male','line_number':92,'multiline':False]
['text':'   male_absolute -> /fox/male','line_number':93,'multiline':False]
['text':' -gt 1 ]] && [[ "$2" = "nowrite" ]] && write_workspace=1 || write_workspace=0','line_number':96,'multiline':False]
['text':' Create a zipped-up repository HTTP response.','line_number':99,'multiline':False]
['text':'!/bin/sh','line_number':114,'multiline':False]
['text':' Add some padding to the .zip to test that Bazel's download logic can','line_number':120,'multiline':False]
['text':' handle breaking a response into chunks.','line_number':121,'multiline':False]
['text':'!/bin/sh','line_number':155,'multiline':False]
['text':' Manual cache injection','line_number':221,'multiline':False]
['text':' Artifacts are named uniformly as "file" in the cache','line_number':224,'multiline':False]
['text':' Fetch without a server','line_number':229,'multiline':False]
['text':' Kill the server','line_number':244,'multiline':False]
['text':' Fetch again','line_number':248,'multiline':False]
['text':' Have a WORKSPACE file without the specified sha256','line_number':258,'multiline':False]
['text':' Fetch; as we did not specify a hash, we expect bazel to tell us the hash','line_number':270,'multiline':False]
['text':' in an info message.','line_number':271,'multiline':False]
['text':'','line_number':272,'multiline':False]
['text':' The intended use case is, of course, downloading from a known-to-be-good','line_number':273,'multiline':False]
['text':' upstream https site. Here we test with plain http, which we have to allow','line_number':274,'multiline':False]
['text':' to do without checksum. But we can safely do so, as the loopback device','line_number':275,'multiline':False]
['text':' is reasonably safe against man-in-the-middle attacks.','line_number':276,'multiline':False]
['text':' Shutdown the server; so fetching again won't work','line_number':284,'multiline':False]
['text':' As we don't have a predicted cache, we expect fetching to fail now.','line_number':289,'multiline':False]
['text':' However, if we add the hash, the value is taken from cache','line_number':294,'multiline':False]
['text':' Kill the server and reset state','line_number':317,'multiline':False]
['text':' Clean the repository cache','line_number':321,'multiline':False]
['text':' Attempt to fetch again','line_number':324,'multiline':False]
['text':' Kill the server','line_number':383,'multiline':False]
['text':' Fetch again','line_number':387,'multiline':False]
['text':' Kill the server','line_number':408,'multiline':False]
['text':' Clean the repository cache','line_number':412,'multiline':False]
['text':' Fetch again','line_number':415,'multiline':False]
['text':' Kill the server','line_number':436,'multiline':False]
['text':' Fetch again','line_number':440,'multiline':False]
['text':' Kill the server','line_number':461,'multiline':False]
['text':' Clean the repository cache','line_number':465,'multiline':False]
['text':' Fetch again','line_number':468,'multiline':False]
['text':' Break url in WORKSPACE','line_number':490,'multiline':False]
['text':' Without the default canonical id, cache entry will still match by sha256, even if url is','line_number':503,'multiline':False]
['text':' changed.','line_number':504,'multiline':False]
['text':' TODO: Remove when the integration test setup itself no longer relies on this.','line_number':513,'multiline':False]
['text':' Break url in WORKSPACE','line_number':526,'multiline':False]
['text':' As repository cache key should depend on urls, we expect fetching to fail now.','line_number':539,'multiline':False]
