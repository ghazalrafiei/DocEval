['text':'!/bin/bash -eu','line_number':1,'multiline':False]
['text':'','line_number':2,'multiline':False]
['text':' Copyright 2016 The Bazel Authors. All rights reserved.','line_number':3,'multiline':False]
['text':'','line_number':4,'multiline':False]
['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':5,'multiline':False]
['text':' you may not use this file except in compliance with the License.','line_number':6,'multiline':False]
['text':' You may obtain a copy of the License at','line_number':7,'multiline':False]
['text':'','line_number':8,'multiline':False]
['text':'    http://www.apache.org/licenses/LICENSE-2.0','line_number':9,'multiline':False]
['text':'','line_number':10,'multiline':False]
['text':' Unless required by applicable law or agreed to in writing, software','line_number':11,'multiline':False]
['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':12,'multiline':False]
['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':13,'multiline':False]
['text':' See the License for the specific language governing permissions and','line_number':14,'multiline':False]
['text':' limitations under the License.','line_number':15,'multiline':False]
['text':'','line_number':16,'multiline':False]
['text':' Tests the behavior of C++ rules.','line_number':17,'multiline':False]
['text':' Load the test setup defined in the parent directory','line_number':19,'multiline':False]
['text':'include <stdio.h>','line_number':86,'multiline':False]
['text':'include "foolib/foo.h"','line_number':87,'multiline':False]
['text':'include <stdio.h>','line_number':94,'multiline':False]
['text':'include "foo/v1/foo.h"','line_number':95,'multiline':False]
['text':'include "foo.h"','line_number':121,'multiline':False]
['text':'!/bin/bash','line_number':160,'multiline':False]
['text':'include "ta_headers/files.h/another.h"','line_number':173,'multiline':False]
['text':'include "ta_headers/files.h/another.h"','line_number':180,'multiline':False]
['text':'define MYFC ${fc_name}','line_number':187,'multiline':False]
['text':' So we have another.h defining a macro that is used by both main.c and','line_number':221,'multiline':False]
['text':' another.c. :main depends on :another, and gets the header through the','line_number':222,'multiline':False]
['text':' tree artifact. First build is fine.','line_number':223,'multiline':False]
['text':' Now we change the content of another.h to define a different macro.','line_number':228,'multiline':False]
['text':' This test verifies that not only another.c is recompiled, but also','line_number':229,'multiline':False]
['text':' main.c. This is a regression test for','line_number':230,'multiline':False]
['text':' https://github.com/bazelbuild/bazel/issues/5785.','line_number':231,'multiline':False]
['text':' This assumes "grep" is supported in any environment bazel is used.','line_number':252,'multiline':False]
['text':' TODO: test include dirs and defines','line_number':256,'multiline':False]
['text':'include <system_include.h>','line_number':347,'multiline':False]
['text':'include "include.h"','line_number':348,'multiline':False]
['text':'include "quote_include.h"','line_number':350,'multiline':False]
['text':'include "a.h"','line_number':351,'multiline':False]
['text':'include "a2.h"','line_number':352,'multiline':False]
['text':'ifdef A_DEFINITION_LOCAL','line_number':354,'multiline':False]
['text':'include "b.h"','line_number':355,'multiline':False]
['text':'include "d.h"','line_number':356,'multiline':False]
['text':'endif','line_number':357,'multiline':False]
['text':'include <string>','line_number':365,'multiline':False]
['text':'ifndef HEADER_A','line_number':372,'multiline':False]
['text':'define HEADER_A','line_number':373,'multiline':False]
['text':'include <string>','line_number':374,'multiline':False]
['text':'endif','line_number':377,'multiline':False]
['text':'ifndef HEADER_A2','line_number':381,'multiline':False]
['text':'define HEADER_A2','line_number':382,'multiline':False]
['text':'include <string>','line_number':383,'multiline':False]
['text':'endif','line_number':386,'multiline':False]
['text':'include "b.h"','line_number':390,'multiline':False]
['text':'include <string>','line_number':391,'multiline':False]
['text':'include "c.h"','line_number':392,'multiline':False]
['text':'ifndef HEADER_B','line_number':399,'multiline':False]
['text':'define HEADER_B','line_number':400,'multiline':False]
['text':'include <string>','line_number':401,'multiline':False]
['text':'endif','line_number':404,'multiline':False]
['text':'include "c.h"','line_number':408,'multiline':False]
['text':'include <algorithm>','line_number':409,'multiline':False]
['text':'include <string>','line_number':410,'multiline':False]
['text':'ifndef HEADER_C','line_number':418,'multiline':False]
['text':'define HEADER_C','line_number':419,'multiline':False]
['text':'include <string>','line_number':420,'multiline':False]
['text':'endif','line_number':423,'multiline':False]
['text':'include "d.h"','line_number':427,'multiline':False]
['text':'include <string>','line_number':428,'multiline':False]
['text':'ifndef HEADER_D','line_number':435,'multiline':False]
['text':'define HEADER_D','line_number':436,'multiline':False]
['text':'include <string>','line_number':437,'multiline':False]
['text':'endif','line_number':440,'multiline':False]
['text':'include <dlfcn.h>','line_number':444,'multiline':False]
['text':'include <stdio.h>','line_number':445,'multiline':False]
['text':'include <stdlib.h>','line_number':446,'multiline':False]
['text':'include <iostream>','line_number':447,'multiline':False]
['text':'ifdef A_DEFINITION','line_number':449,'multiline':False]
['text':'include "a.h"','line_number':450,'multiline':False]
['text':'endif','line_number':451,'multiline':False]
['text':'ifdef A_DEFINITION_LOCAL','line_number':453,'multiline':False]
['text':'include "thisdoesntexist.h"','line_number':454,'multiline':False]
['text':'endif','line_number':455,'multiline':False]
['text':'ifdef __APPLE__','line_number':459,'multiline':False]
['text':'define DYNAMIC_LIB_EXT "dylib"','line_number':460,'multiline':False]
['text':'else','line_number':461,'multiline':False]
['text':'define DYNAMIC_LIB_EXT "so"','line_number':462,'multiline':False]
['text':'endif','line_number':463,'multiline':False]
['text':'include <algorithm>','line_number':478,'multiline':False]
['text':'include <string>','line_number':479,'multiline':False]
['text':'include "a.h"','line_number':480,'multiline':False]
['text':' This uses --version-script which isn't available on Mac linker.','line_number':552,'multiline':False]
['text':' This test assumes the presence of "nodeps" dynamic libraries, which do not','line_number':585,'multiline':False]
['text':' function on Apple platforms.','line_number':586,'multiline':False]
['text':'!/bin/bash','line_number':592,'multiline':False]
['text':'!/bin/bash','line_number':602,'multiline':False]
['text':' This test assumes the presence of "nodeps" dynamic libraries, which do not','line_number':705,'multiline':False]
['text':' function on Apple platforms.','line_number':706,'multiline':False]
['text':' Darwin toolchain uses env variables and those are not properly exported','line_number':749,'multiline':False]
['text':' to Starlark.','line_number':750,'multiline':False]
['text':' TODO(#10376): Remove once env vars on C++ actions are exported.','line_number':751,'multiline':False]
['text':' Because C++ compilation actions prune their headers in the','line_number':789,'multiline':False]
['text':' execution phase, and this code runs in analysis phase,','line_number':790,'multiline':False]
['text':' action.inputs is not processed yet. It doesn't contain','line_number':791,'multiline':False]
['text':' headers/module files yet. Let's add all unpruned headers','line_number':792,'multiline':False]
['text':' explicitly.','line_number':793,'multiline':False]
['text':' We need to replace the original output path with something else','line_number':806,'multiline':False]
['text':' We need to replace the original .d file output path with something','line_number':809,'multiline':False]
['text':' else','line_number':810,'multiline':False]
['text':'include "${package}/x.h"','line_number':874,'multiline':False]
['text':' Test that actions are reconstructible under default configuration','line_number':891,'multiline':False]
['text':' Test that compile actions are reconstructible when using param files','line_number':897,'multiline':False]
['text':'include <stdio.h>','line_number':907,'multiline':False]
['text':' As long as the default workspace suffix runs cc_configure the local_config_cc toolchain suite will be evaluated.','line_number':919,'multiline':False]
['text':' Ensure the fake cc_toolchain_suite target doesn't have any errors.','line_number':920,'multiline':False]
['text':' This only shows reliably for query due to ordering issues in how Bazel shows','line_number':924,'multiline':False]
['text':' errors.','line_number':925,'multiline':False]
['text':' Make the following layout to test builds in //external subpackages:','line_number':933,'multiline':False]
['text':'','line_number':934,'multiline':False]
['text':'├── baz','line_number':935,'multiline':False]
['text':'│   ├── binary.cc','line_number':936,'multiline':False]
['text':'│   └── BUILD','line_number':937,'multiline':False]
['text':'└── external','line_number':938,'multiline':False]
['text':'    └── foo','line_number':939,'multiline':False]
['text':'        ├── BUILD','line_number':940,'multiline':False]
['text':'        ├── lib.cc','line_number':941,'multiline':False]
['text':'        └── lib.h','line_number':942,'multiline':False]
['text':'include "external/foo/lib.h"','line_number':953,'multiline':False]
['text':'include <iostream>','line_number':954,'multiline':False]
['text':'include <string>','line_number':969,'multiline':False]
['text':'include <memory>','line_number':970,'multiline':False]
['text':'include "external/foo/lib.h"','line_number':991,'multiline':False]
['text':'include <string>','line_number':992,'multiline':False]
['text':' Null build.','line_number':1021,'multiline':False]
['text':' missing header declaration','line_number':1033,'multiline':False]
['text':'include <jni.h>','line_number':1055,'multiline':False]
['text':'include <stdio.h>','line_number':1056,'multiline':False]
['text':' Test writing the exposed args of CPPCompileAction to parameters file','line_number':1066,'multiline':False]
['text':' This is needed to avoid too long commands when the args of one of the target's','line_number':1067,'multiline':False]
['text':' actions are used to run a new action from the aspect. Fixes b/168634763','line_number':1068,'multiline':False]
['text':' Passing compile_action.outputs as input to the aspect action to ensure','line_number':1083,'multiline':False]
['text':' it gets the modified args value after executing the compile action.','line_number':1084,'multiline':False]
['text':'include <stdio.h>','line_number':1095,'multiline':False]
['text':' The args should not be written to a file if the experimental flag is not set','line_number':1108,'multiline':False]
['text':' Copy the args to be used for validating the params file contents','line_number':1116,'multiline':False]
['text':' The args should be written to a file if the experimental flag is set','line_number':1119,'multiline':False]
['text':' Validate the contents of the params file (with unquoting)','line_number':1128,'multiline':False]
['text':'include "foo/inc.h"','line_number':1155,'multiline':False]
['text':'include <stdio.h>','line_number':1162,'multiline':False]
['text':' We need to replace the original output path with something else','line_number':1214,'multiline':False]
['text':' We need to replace the original .d file output path with something','line_number':1217,'multiline':False]
['text':' else','line_number':1218,'multiline':False]
['text':'include "${package}/x.h"','line_number':1256,'multiline':False]
['text':' Test that actions are reconstructible under default configuration','line_number':1273,'multiline':False]
['text':' Test that compile actions are reconstructible when using param files','line_number':1279,'multiline':False]
['text':' Make sure there are no packages containing tools/cpp/INCLUDE_HINTS to exercise that case in','line_number':1288,'multiline':False]
['text':' IncludeHintsFunction.','line_number':1289,'multiline':False]
['text':'define NASTY "dep.h"','line_number':1306,'multiline':False]
['text':'include NASTY','line_number':1307,'multiline':False]
['text':'include <stdlib.h>','line_number':1329,'multiline':False]
['text':'include <stdlib.h>','line_number':1360,'multiline':False]
['text':'include <cstdio>','line_number':1399,'multiline':False]
['text':'include "lib/lib.h"','line_number':1414,'multiline':False]
['text':' Test cc compile action can hit the action cache. See','line_number':1462,'multiline':False]
['text':' https://github.com/bazelbuild/bazel/issues/17819','line_number':1463,'multiline':False]
['text':'include "library.h"','line_number':1512,'multiline':False]
['text':'include <iostream>','line_number':1513,'multiline':False]
['text':'include <iostream>','line_number':1524,'multiline':False]
['text':'include "library.h"','line_number':1525,'multiline':False]
['text':'include <iostream>','line_number':1533,'multiline':False]
['text':'include "library.h"','line_number':1534,'multiline':False]
['text':'include <iostream>','line_number':1566,'multiline':False]
['text':'include "pkg/library.h"','line_number':1567,'multiline':False]
['text':'include <iostream>','line_number':1575,'multiline':False]
['text':'include "pkg/library.h"','line_number':1576,'multiline':False]
['text':' The default macOS toolchain always uses XCode's clang.','line_number':1602,'multiline':False]
['text':'include <stdlib.h>','line_number':1657,'multiline':False]
['text':'include <stdlib.h>','line_number':1663,'multiline':False]
['text':'include <stdlib.h>','line_number':1689,'multiline':False]
['text':'include <stdlib.h>','line_number':1695,'multiline':False]
['text':' Regression test for https://github.com/bazelbuild/bazel/issues/16961','line_number':1710,'multiline':False]
['text':' Regression test for https://github.com/bazelbuild/bazel/issues/16961 and','line_number':1730,'multiline':False]
['text':' https://github.com/bazelbuild/bazel/issues/15088.','line_number':1731,'multiline':False]
['text':' sanitizer features are opt-in so we check if the sanitizer library is','line_number':1749,'multiline':False]
['text':' installed and skip the test if it isn't (e.g. centos-7-openjdk-11-gcc-10)','line_number':1750,'multiline':False]
['text':' assume installed for darwin','line_number':1758,'multiline':False]
['text':' some versions of clang will optimize away the pointer assignment and','line_number':1774,'multiline':False]
['text':' dereference without volatile','line_number':1775,'multiline':False]
['text':' https://godbolt.org/z/of8cr3P8q','line_number':1776,'multiline':False]
['text':'include <thread>','line_number':1808,'multiline':False]
