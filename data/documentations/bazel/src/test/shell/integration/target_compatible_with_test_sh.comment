['text':'!/bin/bash','line_number':1,'multiline':False]
['text':'','line_number':2,'multiline':False]
['text':' Copyright 2020 The Bazel Authors. All rights reserved.','line_number':3,'multiline':False]
['text':'','line_number':4,'multiline':False]
['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':5,'multiline':False]
['text':' you may not use this file except in compliance with the License.','line_number':6,'multiline':False]
['text':' You may obtain a copy of the License at','line_number':7,'multiline':False]
['text':'','line_number':8,'multiline':False]
['text':'    http://www.apache.org/licenses/LICENSE-2.0','line_number':9,'multiline':False]
['text':'','line_number':10,'multiline':False]
['text':' Unless required by applicable law or agreed to in writing, software','line_number':11,'multiline':False]
['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':12,'multiline':False]
['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':13,'multiline':False]
['text':' See the License for the specific language governing permissions and','line_number':14,'multiline':False]
['text':' limitations under the License.','line_number':15,'multiline':False]
['text':'','line_number':16,'multiline':False]
['text':' Test building targets that are declared as compatible only with certain','line_number':17,'multiline':False]
['text':' platforms (see the "target_compatible_with" common build rule attribute).','line_number':18,'multiline':False]
['text':' --- begin runfiles.bash initialization ---','line_number':20,'multiline':False]
['text':' --- end runfiles.bash initialization ---','line_number':41,'multiline':False]
['text':' `uname` returns the current platform, e.g "MSYS_NT-10.0" or "Linux".','line_number':46,'multiline':False]
['text':' `tr` converts all upper case letters to lower case.','line_number':47,'multiline':False]
['text':' `case` matches the result if the `uname | tr` expression to string prefixes','line_number':48,'multiline':False]
['text':' that use the same wildcards as names do in Bash, i.e. "msys*" matches strings','line_number':49,'multiline':False]
['text':' starting with "msys", and "*" matches everything (it's the default case).','line_number':50,'multiline':False]
['text':' As of 2019-01-15, Bazel on Windows only supports MSYS Bash.','line_number':53,'multiline':False]
['text':'!/bin/bash','line_number':69,'multiline':False]
['text':'!/bin/bash','line_number':75,'multiline':False]
['text':' Not using 'EOF' because injecting default_host_platform','line_number':79,'multiline':False]
['text':' We're not validating visibility here. Let everything access these targets.','line_number':81,'multiline':False]
['text':' Use this to let us change select() statements from the command line.','line_number':186,'multiline':False]
['text':' Validates that we get a good error message when passing a config_setting into','line_number':275,'multiline':False]
['text':' the target_compatible_with attribute. This is a regression test for','line_number':276,'multiline':False]
['text':' https://github.com/bazelbuild/bazel/issues/13250.','line_number':277,'multiline':False]
['text':' Validates that the console log provides useful information to the user for','line_number':305,'multiline':False]
['text':' builds.','line_number':306,'multiline':False]
['text':' Validates that the console log provides useful information to the user for','line_number':330,'multiline':False]
['text':' tests.','line_number':331,'multiline':False]
['text':' Get repeatable results from this test.','line_number':335,'multiline':False]
['text':' Use :all for this one to validate similar behaviour.','line_number':356,'multiline':False]
['text':' Validates that filegroups and other rules that don't inherit from','line_number':367,'multiline':False]
['text':' `NativeActionCreatingRule` can be marked with target_compatible_with. This is','line_number':368,'multiline':False]
['text':' a regression test for https://github.com/bazelbuild/bazel/issues/12745.','line_number':369,'multiline':False]
['text':' Create a fake shared library for cc_import.','line_number':371,'multiline':False]
['text':' Validates that incompatible target skipping errors behave nicely with','line_number':420,'multiline':False]
['text':' --keep_going. In other words, even if there's an error in the target skipping','line_number':421,'multiline':False]
['text':' (e.g. because the user explicitly requested an incompatible target) we still','line_number':422,'multiline':False]
['text':' want Bazel to finish the rest of the build when --keep_going is specified.','line_number':423,'multiline':False]
['text':' Validate a variety of ways to refer to the same target.','line_number':427,'multiline':False]
['text':' Now look at the build event log.','line_number':448,'multiline':False]
['text':' Run an additional (passing) test and make sure we still fail the build.','line_number':455,'multiline':False]
['text':' This is intended to validate that --keep_going works as expected.','line_number':456,'multiline':False]
['text':' https://github.com/bazelbuild/bazel/issues/17561 regression test: incompatible','line_number':470,'multiline':False]
['text':' target skipping doesn't crash with --auto_cpu_environment_group.','line_number':471,'multiline':False]
['text':' Validates that incompatible target skipping works with top level targets when','line_number':504,'multiline':False]
['text':' --skip_incompatible_explicit_targets is enabled.','line_number':505,'multiline':False]
['text':' Validate a variety of ways to refer to the same target.','line_number':509,'multiline':False]
['text':' Crudely validates that the build event protocol contains useful information','line_number':532,'multiline':False]
['text':' when targets are skipped due to incompatibilities.','line_number':533,'multiline':False]
['text':' Validates that incompatibilities are transitive. I.e. targets that depend on','line_number':549,'multiline':False]
['text':' incompatible targets are themselves deemed incompatible and should therefore','line_number':550,'multiline':False]
['text':' not be built.','line_number':551,'multiline':False]
['text':' Make sure that using an incompatible target in Make variable substitution','line_number':570,'multiline':False]
['text':' doesn't produce an unexpected error.','line_number':571,'multiline':False]
['text':' Validate that targets are skipped when the implementation is in Starlark','line_number':599,'multiline':False]
['text':' instead of in Java.','line_number':600,'multiline':False]
['text':' Validates that rules with custom providers are skipped when incompatible.','line_number':652,'multiline':False]
['text':' This is valuable because we use providers to convey incompatibility.','line_number':653,'multiline':False]
['text':' Generates a dummy.cc file.','line_number':713,'multiline':False]
['text':' Validates the same thing as test_non_top_level_skipping, but with a cc_test','line_number':738,'multiline':False]
['text':' and adding one more level of dependencies.','line_number':739,'multiline':False]
['text':'include <cstdio>','line_number':742,'multiline':False]
['text':' Validate the generated file that makes up the test.','line_number':771,'multiline':False]
['text':' Validate that we get the dependency chain printed out.','line_number':780,'multiline':False]
['text':' Validate the test.','line_number':786,'multiline':False]
['text':' Validate that we get the dependency chain printed out.','line_number':795,'multiline':False]
['text':' Validates the same thing as test_cc_test, but with multiple violated','line_number':803,'multiline':False]
['text':' constraints.','line_number':804,'multiline':False]
['text':'include <cstdio>','line_number':807,'multiline':False]
['text':' Validate that we get the dependency chain and constraints printed out.','line_number':844,'multiline':False]
['text':' Validates that we can express targets being compatible with A _or_ B.','line_number':852,'multiline':False]
['text':' Regression test for b/277371822.','line_number':897,'multiline':False]
['text':' No default branch.','line_number':905,'multiline':False]
['text':' Validates that we can express targets being compatible with everything _but_','line_number':924,'multiline':False]
['text':' A and B.','line_number':925,'multiline':False]
['text':' Not using 'EOF' because injecting skylib_package','line_number':929,'multiline':False]
['text':' Try with :foo1. This should fail.','line_number':945,'multiline':False]
['text':' Try with :foo2. This should fail.','line_number':955,'multiline':False]
['text':' Now with :foo3. This should pass.','line_number':965,'multiline':False]
['text':' Validates that we can reference the same incompatible constraint in several,','line_number':976,'multiline':False]
['text':' composed select() statements. This is useful for expressing compatibility for','line_number':977,'multiline':False]
['text':' orthogonal constraints. It's also useful when a macro author wants to express','line_number':978,'multiline':False]
['text':' incompatibility while also honouring the user-defined incompatibility.','line_number':979,'multiline':False]
['text':' The first select() statement might come from a macro. The second might come','line_number':981,'multiline':False]
['text':' from the user who's calling that macro.','line_number':982,'multiline':False]
['text':' Validate that we get an error about the target being incompatible. Make','line_number':1008,'multiline':False]
['text':' sure that the ":incompatible" constraint is only listed once even though','line_number':1009,'multiline':False]
['text':' it appears twice in the configured "target_compatible_with" attribute.','line_number':1010,'multiline':False]
['text':' Try with :foo1. This should fail.','line_number':1063,'multiline':False]
['text':' Validate what happens when setting `target_compatible_with` directly on an','line_number':1074,'multiline':False]
['text':' alias(). This is a regression test for','line_number':1075,'multiline':False]
['text':' https://github.com/bazelbuild/bazel/issues/17663.','line_number':1076,'multiline':False]
['text':' Validate that an incompatible target with a toolchain not available for the','line_number':1108,'multiline':False]
['text':' current platform will not cause an analysis error. This is a regression test','line_number':1109,'multiline':False]
['text':' for https://github.com/bazelbuild/bazel/issues/12897.','line_number':1110,'multiline':False]
['text':' Validates that if a target is "directly incompatible" then its dependencies','line_number':1184,'multiline':False]
['text':' are not evaluated. I.e. there should be no need to guard the dependencies','line_number':1185,'multiline':False]
['text':' with a select() statement.','line_number':1186,'multiline':False]
['text':' Validates that a tool compatible with the host platform, but incompatible','line_number':1211,'multiline':False]
['text':' with the target platform can still be used as a host tool.','line_number':1212,'multiline':False]
['text':' Create an arbitrary host tool.','line_number':1214,'multiline':False]
['text':'include <cstdio>','line_number':1216,'multiline':False]
['text':' Run with :foo1 in the host platform, but with :foo2 in the target platform.','line_number':1245,'multiline':False]
['text':' Building the host tool should fail because it's incompatible with the','line_number':1246,'multiline':False]
['text':' target platform.','line_number':1247,'multiline':False]
['text':' Run with :foo1 in the host platform, but with :foo2 in the target platform.','line_number':1255,'multiline':False]
['text':' This should work fine because we're not asking for any constraints to be','line_number':1256,'multiline':False]
['text':' violated.','line_number':1257,'multiline':False]
['text':' Make sure that the contents of the file are what we expect.','line_number':1266,'multiline':False]
['text':' Validates that we successfully skip analysistest rule targets when they','line_number':1271,'multiline':False]
['text':' depend on incompatible targets.','line_number':1272,'multiline':False]
['text':' Not using 'EOF' because injecting skylib_package','line_number':1276,'multiline':False]
['text':' Regression test for http://b/189071321: --notool_deps should exclude constraints.','line_number':1341,'multiline':False]
['text':' Run a cquery on a target that is compatible. This should pass.','line_number':1360,'multiline':False]
['text':' Run a cquery with a glob. This should only pick up compatible targets and','line_number':1372,'multiline':False]
['text':' should therefore pass.','line_number':1373,'multiline':False]
['text':' Run a cquery on an incompatible target. This should also pass. Incompatibility','line_number':1388,'multiline':False]
['text':' is more important for builds, where users want meaningful output. For queries,','line_number':1389,'multiline':False]
['text':' understanding target and dependency relationships is more important than','line_number':1390,'multiline':False]
['text':' erroring on unbuildable targets.','line_number':1391,'multiline':False]
['text':' Runs a cquery and makes sure that we can properly distinguish between','line_number':1418,'multiline':False]
['text':' incompatible targets and compatible targets.','line_number':1419,'multiline':False]
['text':' Run an aquery on a target that is compatible. This should pass.','line_number':1456,'multiline':False]
['text':' Run an aquery with a glob. This should only pick up compatible targets and','line_number':1468,'multiline':False]
['text':' should therefore pass.','line_number':1469,'multiline':False]
['text':' Run an aquery on an incompatible target. This should fail.','line_number':1481,'multiline':False]
['text':' Use aspects to interact with incompatible targets and validate the behaviour.','line_number':1495,'multiline':False]
['text':' This target is compatible with all platforms and configurations. This target','line_number':1500,'multiline':False]
['text':' exists to validate the behaviour of aspects running against incompatible','line_number':1501,'multiline':False]
['text':' targets. The expectation is that the aspect should _not_ propagate to this','line_number':1502,'multiline':False]
['text':' compatible target from an incompatible target. I.e. an aspect should _not_','line_number':1503,'multiline':False]
['text':' evaluate this target if "basic_foo3_target" is incompatible.','line_number':1504,'multiline':False]
['text':' An alias to validate that incompatible target skipping works as expected with','line_number':1508,'multiline':False]
['text':' aliases and aspects.','line_number':1509,'multiline':False]
['text':' This target is only compatible when "basic_foo3_target" is compatible. This','line_number':1523,'multiline':False]
['text':' target exists to validate the behaviour of aspects running against','line_number':1524,'multiline':False]
['text':' incompatible targets. The expectation is that the aspect should _not_','line_number':1525,'multiline':False]
['text':' evaluate this target when "basic_foo3_target" is incompatible.','line_number':1526,'multiline':False]
['text':' Validate that aspects run against compatible targets.','line_number':1605,'multiline':False]
['text':' Invert the compatibility and validate that aspects run on the other targets','line_number':1617,'multiline':False]
['text':' now.','line_number':1618,'multiline':False]
['text':' Validate that explicitly trying to build a target with an aspect against an','line_number':1630,'multiline':False]
['text':' incompatible target produces the normal error message.','line_number':1631,'multiline':False]
