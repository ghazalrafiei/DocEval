['text':'!/bin/bash','line_number':1,'multiline':False]
['text':'','line_number':2,'multiline':False]
['text':' Copyright 2017 The Bazel Authors. All rights reserved.','line_number':3,'multiline':False]
['text':'','line_number':4,'multiline':False]
['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':5,'multiline':False]
['text':' you may not use this file except in compliance with the License.','line_number':6,'multiline':False]
['text':' You may obtain a copy of the License at','line_number':7,'multiline':False]
['text':'','line_number':8,'multiline':False]
['text':'    http://www.apache.org/licenses/LICENSE-2.0','line_number':9,'multiline':False]
['text':'','line_number':10,'multiline':False]
['text':' Unless required by applicable law or agreed to in writing, software','line_number':11,'multiline':False]
['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':12,'multiline':False]
['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':13,'multiline':False]
['text':' See the License for the specific language governing permissions and','line_number':14,'multiline':False]
['text':' limitations under the License.','line_number':15,'multiline':False]
['text':' --- begin runfiles.bash initialization ---','line_number':17,'multiline':False]
['text':' Copy-pasted from Bazel's Bash runfiles library (tools/bash/runfiles/runfiles.bash).','line_number':18,'multiline':False]
['text':' --- end runfiles.bash initialization ---','line_number':38,'multiline':False]
['text':' `uname` returns the current platform, e.g "MSYS_NT-10.0" or "Linux".','line_number':43,'multiline':False]
['text':' `tr` converts all upper case letters to lower case.','line_number':44,'multiline':False]
['text':' `case` matches the result if the `uname | tr` expression to string prefixes','line_number':45,'multiline':False]
['text':' that use the same wildcards as names do in Bash, i.e. "msys*" matches strings','line_number':46,'multiline':False]
['text':' starting with "msys", and "*" matches everything (it's the default case).','line_number':47,'multiline':False]
['text':' As of 2018-08-14, Bazel on Windows only supports MSYS Bash.','line_number':50,'multiline':False]
['text':' Disable MSYS path conversion that converts path-looking command arguments to','line_number':59,'multiline':False]
['text':' Windows paths (even if they arguments are not in fact paths).','line_number':60,'multiline':False]
['text':'### TESTS #############################################################','line_number':65,'multiline':False]
['text':'!/bin/sh','line_number':78,'multiline':False]
['text':'!/bin/sh','line_number':102,'multiline':False]
['text':' --build_tests_only is necessary in Skymeld mode to prevent the execution','line_number':142,'multiline':False]
['text':' error from being hit before any TestAnalyzedEvent.','line_number':143,'multiline':False]
['text':' Regression test for b/67463263: Tests that spawn subprocesses must not block','line_number':151,'multiline':False]
['text':' if those subprocesses never finish. If this test fails, because the "my_test"','line_number':152,'multiline':False]
['text':' test is timing out, it means that Bazel is waiting for the "sleep" to finish,','line_number':153,'multiline':False]
['text':' which it shouldn't.','line_number':154,'multiline':False]
['text':'!/bin/sh','line_number':196,'multiline':False]
['text':'!/bin/sh','line_number':201,'multiline':False]
['text':' The symlink resolution done by PathPrettyPrinter doesn't seem to work on','line_number':211,'multiline':False]
['text':' Windows.','line_number':212,'multiline':False]
['text':' TODO(nharmata): Fix this.','line_number':213,'multiline':False]
['text':'!/bin/sh','line_number':222,'multiline':False]
['text':' Regression test for https://github.com/bazelbuild/bazel/pull/8322','line_number':238,'multiline':False]
['text':' As of 2019-09-06, "bazel test" does not forward input from stdin to the test binary.','line_number':239,'multiline':False]
['text':' Maybe Bazel will support that in the future, but until then this test guards the current status.','line_number':240,'multiline':False]
['text':' See also test_run_a_test_and_a_binary_rule_with_input_from_stdin() in','line_number':241,'multiline':False]
['text':' //src/test/shell/integration:run_test','line_number':242,'multiline':False]
['text':'!/bin/bash','line_number':248,'multiline':False]
['text':' Runs a Bazel command, waits for the console output to contain a given message,','line_number':257,'multiline':False]
['text':' and then interrupts Bazel's execution. The first argument to this function','line_number':258,'multiline':False]
['text':' indicates the message to wait for, and all other arguments are passed to','line_number':259,'multiline':False]
['text':' bazel. The output of the command is left in the TEST_log for inspection.','line_number':260,'multiline':False]
['text':' TODO(jmmv): --test_output=streamed, which we need below, doesn't seem to','line_number':286,'multiline':False]
['text':' work on Windows: we cannot find the expected test output as it makes','line_number':287,'multiline':False]
['text':' progresse. This feature had been broken before (#7392) for subtle reasons','line_number':288,'multiline':False]
['text':' and there are no tests for it, so it might be broken again. Investigate and','line_number':289,'multiline':False]
['text':' enable this test.','line_number':290,'multiline':False]
['text':'! /bin/sh','line_number':303,'multiline':False]
['text':' There used to be a bug that caused Bazel to crash after an interrupt when','line_number':309,'multiline':False]
['text':' using test streamed output. The interrupt wouldn't be handled properly by','line_number':310,'multiline':False]
['text':' the local strategies, and the callers wouldn't close the stream upon','line_number':311,'multiline':False]
['text':' interrupt. Try to do this a few times, checking after each interrupt if','line_number':312,'multiline':False]
['text':' Bazel died.','line_number':313,'multiline':False]
['text':' We need to give Blaze some time to actually crash and flush out the logs.','line_number':321,'multiline':False]
['text':' Otherwise we might not detect the error.','line_number':322,'multiline':False]
['text':' If Bazel crashed at any point, we expect it to tell us it had to restart','line_number':325,'multiline':False]
['text':' and/or the jvm.out log contains an error message.','line_number':326,'multiline':False]
['text':'! /bin/sh','line_number':356,'multiline':False]
['text':' If the signal interrupts the sleep, keep sleeping so that the SIGTERM','line_number':361,'multiline':False]
['text':' cleanup can actually run.','line_number':362,'multiline':False]
['text':' TODO(jmmv): When using the linux-sandbox, interrupt termination is always','line_number':387,'multiline':False]
['text':' graceful. Should homogenize behavior with the process-wrapper.','line_number':388,'multiline':False]
['text':'!/bin/sh','line_number':435,'multiline':False]
