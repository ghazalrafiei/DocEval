['text':'!/bin/bash','line_number':1,'multiline':False]
['text':'','line_number':2,'multiline':False]
['text':' Copyright 2015 The Bazel Authors. All rights reserved.','line_number':3,'multiline':False]
['text':'','line_number':4,'multiline':False]
['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':5,'multiline':False]
['text':' you may not use this file except in compliance with the License.','line_number':6,'multiline':False]
['text':' You may obtain a copy of the License at','line_number':7,'multiline':False]
['text':'','line_number':8,'multiline':False]
['text':'    http://www.apache.org/licenses/LICENSE-2.0','line_number':9,'multiline':False]
['text':'','line_number':10,'multiline':False]
['text':' Unless required by applicable law or agreed to in writing, software','line_number':11,'multiline':False]
['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':12,'multiline':False]
['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':13,'multiline':False]
['text':' See the License for the specific language governing permissions and','line_number':14,'multiline':False]
['text':' limitations under the License.','line_number':15,'multiline':False]
['text':' Load the test setup defined in the parent directory','line_number':19,'multiline':False]
['text':' Tests that the timeout causes the process to receive a SIGTERM, but with the','line_number':88,'multiline':False]
['text':' process exiting on its own without the need for a SIGKILL. To make sure that','line_number':89,'multiline':False]
['text':' this is the case, we pass a very large kill delay to cause the outer test to','line_number':90,'multiline':False]
['text':' fail if we violate this expectation.','line_number':91,'multiline':False]
['text':' Tests that the timeout causes the process to receive a SIGTERM and waits until','line_number':104,'multiline':False]
['text':' the process has exited on its own, even if that takes a little bit of time. To','line_number':105,'multiline':False]
['text':' make sure that this is the case, we pass a very large kill delay to cause the','line_number':106,'multiline':False]
['text':' outer test to fail if we violate this expectation.','line_number':107,'multiline':False]
['text':'','line_number':108,'multiline':False]
['text':' In the past, even though we would terminate the process quickly, we would','line_number':109,'multiline':False]
['text':' get stuck until the kill delay passed (because we'd be stuck waiting for a','line_number':110,'multiline':False]
['text':' zombie process without us actually collecting it). So this is a regression','line_number':111,'multiline':False]
['text':' test for that subtle bug.','line_number':112,'multiline':False]
['text':' Tests that the timeout causes the process to receive a SIGTERM first and a','line_number':128,'multiline':False]
['text':' SIGKILL later once a kill delay has passed without the process exiting on','line_number':129,'multiline':False]
['text':' its own. We make the process get stuck indefinitely until killed, and we do','line_number':130,'multiline':False]
['text':' this with individual calls to sleep instead of a single one to ensure that a','line_number':131,'multiline':False]
['text':' single termination of the sleep subprocess doesn't cause us to spuriously','line_number':132,'multiline':False]
['text':' exit and thus pass this test.','line_number':133,'multiline':False]
['text':' Tests that sending a SIGTERM causes the process to receive such SIGTERM if','line_number':145,'multiline':False]
['text':' graceful SIGTERM handling is enabled, but with the process exiting on its own','line_number':146,'multiline':False]
['text':' without the need for a SIGKILL. To make sure that this is the case, we pass a','line_number':147,'multiline':False]
['text':' very large kill delay to cause the outer test to fail if we violate this','line_number':148,'multiline':False]
['text':' expectation.','line_number':149,'multiline':False]
['text':' Tests that sending a SIGTERM causes the process to receive such SIGTERM if','line_number':167,'multiline':False]
['text':' graceful SIGTERM handling is enabled and waits until the process has exited','line_number':168,'multiline':False]
['text':' on its own, even if that takes a little bit of time. To make sure that this is','line_number':169,'multiline':False]
['text':' the case, we pass a very large kill delay to cause the outer test to fail if','line_number':170,'multiline':False]
['text':' we violate this expectation.','line_number':171,'multiline':False]
['text':'','line_number':172,'multiline':False]
['text':' In the past, even though we would terminate the process quickly, we would','line_number':173,'multiline':False]
['text':' get stuck until the kill delay passed (because we'd be stuck waiting for a','line_number':174,'multiline':False]
['text':' zombie process without us actually collecting it). So this is a regression','line_number':175,'multiline':False]
['text':' test for that subtle bug.','line_number':176,'multiline':False]
['text':' Tests that sending a SIGTERM causes the process to receive such SIGTERM if','line_number':197,'multiline':False]
['text':' graceful SIGTERM handling is enabled and a SIGKILL later once a kill delay has','line_number':198,'multiline':False]
['text':' passed without the process exiting on its own. We make the process get stuck','line_number':199,'multiline':False]
['text':' indefinitely until killed, and we do this with individual calls to sleep','line_number':200,'multiline':False]
['text':' instead of a single one to ensure that a single termination of the sleep','line_number':201,'multiline':False]
['text':' subprocess doesn't cause us to spuriously exit and thus pass this test.','line_number':202,'multiline':False]
['text':' Wrapped process will be terminated after 100 seconds if not self terminated.','line_number':238,'multiline':False]
