['text':'!/bin/bash','line_number':1,'multiline':False]
['text':'','line_number':2,'multiline':False]
['text':' Copyright 2017 The Bazel Authors. All rights reserved.','line_number':3,'multiline':False]
['text':'','line_number':4,'multiline':False]
['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':5,'multiline':False]
['text':' you may not use this file except in compliance with the License.','line_number':6,'multiline':False]
['text':' You may obtain a copy of the License at','line_number':7,'multiline':False]
['text':'','line_number':8,'multiline':False]
['text':'    http://www.apache.org/licenses/LICENSE-2.0','line_number':9,'multiline':False]
['text':'','line_number':10,'multiline':False]
['text':' Unless required by applicable law or agreed to in writing, software','line_number':11,'multiline':False]
['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':12,'multiline':False]
['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':13,'multiline':False]
['text':' See the License for the specific language governing permissions and','line_number':14,'multiline':False]
['text':' limitations under the License.','line_number':15,'multiline':False]
['text':'','line_number':16,'multiline':False]
['text':' execution_phase_tests.sh: miscellaneous integration tests of Bazel for','line_number':17,'multiline':False]
['text':' behaviors that affect the execution phase.','line_number':18,'multiline':False]
['text':'','line_number':19,'multiline':False]
['text':' --- begin runfiles.bash initialization v3 ---','line_number':21,'multiline':False]
['text':' Copy-pasted from the Bazel Bash runfiles library v3.','line_number':22,'multiline':False]
['text':' --- end runfiles.bash initialization v3 ---','line_number':30,'multiline':False]
['text':'### HELPER FUNCTIONS ##################################################','line_number':49,'multiline':False]
['text':' Bazel's testenv.sh defines try_with_timeout but the Google-internal version','line_number':52,'multiline':False]
['text':' uses a different testenv.sh.','line_number':53,'multiline':False]
['text':' Looks for the last occurrence of a log message in a log file.','line_number':65,'multiline':False]
['text':'','line_number':66,'multiline':False]
['text':' This assumes the use of java.util.logging.SimpleFormatter, which splits','line_number':67,'multiline':False]
['text':' the context of a log entry and the log message itself in two lines.','line_number':68,'multiline':False]
['text':'','line_number':69,'multiline':False]
['text':' TODO(jmmv): We should have functionality in unittest.bash to check the','line_number':70,'multiline':False]
['text':' contents of the Bazel's client log in a way that allows us to test for','line_number':71,'multiline':False]
['text':' only the messages printed by the last-run command.','line_number':72,'multiline':False]
['text':' Help debugging when we fail.','line_number':80,'multiline':False]
['text':' Asserts that the last dump of cache stats in the log matches the given','line_number':85,'multiline':False]
['text':' metric and value.','line_number':86,'multiline':False]
['text':'### TESTS #############################################################','line_number':98,'multiline':False]
['text':' We cannot make any robust assertions on the first run because of implicit','line_number':123,'multiline':False]
['text':' dependencies we have no control about.','line_number':124,'multiline':False]
['text':' Rebuilding without changes should yield hits for everything.  Run this','line_number':126,'multiline':False]
['text':' multiple times to ensure the reported statistics are not accumulated.','line_number':127,'multiline':False]
['text':' stable-status.txt','line_number':130,'multiline':False]
['text':' volatile-status.txt','line_number':131,'multiline':False]
['text':' Throw away the in-memory Skyframe state by flipping a flag.  We expect hits','line_number':134,'multiline':False]
['text':' for the previous outputs, which are used to query the action cache.','line_number':135,'multiline':False]
['text':' stable-status.txt foo.out bar.out','line_number':138,'multiline':False]
['text':' volatile-status.txt','line_number':139,'multiline':False]
['text':' Change the size of the cache and retry the same build.  We expect no hits','line_number':141,'multiline':False]
['text':' because resizing the cache invalidates all of its contents.','line_number':142,'multiline':False]
['text':' {stable,volatile}-status* {foo,bar}.out','line_number':146,'multiline':False]
['text':' Run a non-build command, which should not interfere with the cache.','line_number':148,'multiline':False]
['text':' Same as previous command; unmodified.','line_number':150,'multiline':False]
['text':' Same as previous command; unmodified.','line_number':151,'multiline':False]
['text':' Rebuild without changes one more time with the new size of the cache to','line_number':153,'multiline':False]
['text':' ensure the cache is not reset across runs with the flag override.','line_number':154,'multiline':False]
['text':' stable-status.txt foo.out bar.out','line_number':157,'multiline':False]
['text':' volatile-status.txt','line_number':158,'multiline':False]
['text':' Does not work on Windows, https://github.com/bazelbuild/bazel/issues/6098','line_number':162,'multiline':False]
['text':' Fixed timestamp to mark our file with.','line_number':163,'multiline':False]
['text':' Build the target once to populate the action cache, then update a file to a','line_number':176,'multiline':False]
['text':' known timestamp, and rebuild the target to recompute our internal digests','line_number':177,'multiline':False]
['text':' cache.','line_number':178,'multiline':False]
['text':' Modify the content of a file in the action cache in a way that bypasses the','line_number':184,'multiline':False]
['text':' logic to cache file digests: replace the file's content with new contents of','line_number':185,'multiline':False]
['text':' the same length; avoid modifying the inode number; and respect the previous','line_number':186,'multiline':False]
['text':' timestamp.','line_number':187,'multiline':False]
['text':' macOS and possibly others.','line_number':191,'multiline':False]
['text':' Linux and possibly others.','line_number':193,'multiline':False]
['text':' Contents must match length in genrule.','line_number':199,'multiline':False]
['text':' Assert all hits after discarding the in-memory Skyframe state while','line_number':204,'multiline':False]
['text':' modifying the on-disk state in a way that bypasses the digests cache','line_number':205,'multiline':False]
['text':' functionality.','line_number':206,'multiline':False]
['text':' For completeness, make the changes to the same output file visible and','line_number':212,'multiline':False]
['text':' ensure Blaze notices them.  This is to check that we actually modified the','line_number':213,'multiline':False]
['text':' right output file above.','line_number':214,'multiline':False]
['text':' We do not implement the resources unlimiting feature on Windows at','line_number':257,'multiline':False]
['text':' the moment... so just expect the soft limit to remain unchanged.','line_number':258,'multiline':False]
['text':' Make sure that the soft limit was raised to the expected hard value.','line_number':274,'multiline':False]
['text':' Our code doesn't touch the hard limit (even in the case "unlimited" case','line_number':275,'multiline':False]
['text':' handled above) and that's OK: if we were able to set the soft limit to a','line_number':276,'multiline':False]
['text':' high value, the hard limit must already be the same or higher.','line_number':277,'multiline':False]
['text':' Only the contents of target of the symlink should matter, where the symlink','line_number':317,'multiline':False]
['text':' points to should not','line_number':318,'multiline':False]
['text':' If the symlink points to a file with different contents, the action should','line_number':325,'multiline':False]
['text':' be re-run','line_number':326,'multiline':False]
['text':' So the exit code of the test is not inferred from that of "-r" above','line_number':330,'multiline':False]
['text':' Trivial test to verify that the various flags that specify resource limits','line_number':333,'multiline':False]
['text':' accept the same syntax.','line_number':334,'multiline':False]
['text':' TODO(jmmv): The IncludeScanningModule is present in Bazel but is not','line_number':338,'multiline':False]
['text':' part of the build, so this flag, which we should test here, isn't','line_number':339,'multiline':False]
['text':' available: --experimental_include_scanning_parallelism="${threads}"','line_number':340,'multiline':False]
['text':' Regression test for https://github.com/bazelbuild/bazel/issues/14723','line_number':362,'multiline':False]
['text':' Regression test for https://github.com/bazelbuild/bazel/issues/14723','line_number':417,'multiline':False]
