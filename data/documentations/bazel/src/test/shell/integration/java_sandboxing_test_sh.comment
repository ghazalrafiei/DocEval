['text':'!/bin/bash','line_number':1,'multiline':False]
['text':'','line_number':2,'multiline':False]
['text':' Copyright 2019 The Bazel Authors. All rights reserved.','line_number':3,'multiline':False]
['text':'','line_number':4,'multiline':False]
['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':5,'multiline':False]
['text':' you may not use this file except in compliance with the License.','line_number':6,'multiline':False]
['text':' You may obtain a copy of the License at','line_number':7,'multiline':False]
['text':'','line_number':8,'multiline':False]
['text':'    http://www.apache.org/licenses/LICENSE-2.0','line_number':9,'multiline':False]
['text':'','line_number':10,'multiline':False]
['text':' Unless required by applicable law or agreed to in writing, software','line_number':11,'multiline':False]
['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':12,'multiline':False]
['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':13,'multiline':False]
['text':' See the License for the specific language governing permissions and','line_number':14,'multiline':False]
['text':' limitations under the License.','line_number':15,'multiline':False]
['text':' Tests sandboxing spawn strategy. These tests run Java targets, which require','line_number':18,'multiline':False]
['text':' enough more analysis time that we want different settings for them. If','line_number':19,'multiline':False]
['text':' possible, add new sandboxing tests to sandboxing_test.sh instead.','line_number':20,'multiline':False]
['text':' Load the test setup defined in the parent directory','line_number':24,'multiline':False]
['text':' Disallow some common messages we might see during a crash.','line_number':58,'multiline':False]
['text':' Builds a target with the given strategy and ensures that the actions require','line_number':64,'multiline':False]
['text':' params files to be written in the output base.','line_number':65,'multiline':False]
['text':' Build a Java binary during this test because the Java rules work well with','line_number':69,'multiline':False]
['text':' sandboxing and support workers.','line_number':70,'multiline':False]
['text':' ReannotatingJlink doesn't support workers.','line_number':86,'multiline':False]
['text':' Verifies that building a target that uses params files writes those params','line_number':98,'multiline':False]
['text':' files to both the execroot and the sandbox.','line_number':99,'multiline':False]
['text':' Need a no-op flag to avoid set -u breakage on macOS.','line_number':107,'multiline':False]
['text':' We expect "sandboxed" to use the system-specific sandbox instead of','line_number':116,'multiline':False]
['text':' the processwrapper-sandbox (tested below). But if that's not the case,','line_number':117,'multiline':False]
['text':' there is not much we can do here.','line_number':118,'multiline':False]
['text':' Worker tests do not really belong in this file, but as we are exercising','line_number':127,'multiline':False]
['text':' the same code path used for the sandbox regarding virtual input artifact','line_number':128,'multiline':False]
['text':' materialization, we keep them here to reuse the testing logic.','line_number':129,'multiline':False]
['text':' Need a no-op flag to avoid set -u breakage on macOS.','line_number':135,'multiline':False]
