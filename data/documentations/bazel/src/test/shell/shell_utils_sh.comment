['text':'!/bin/bash','line_number':1,'multiline':False]
['text':'','line_number':2,'multiline':False]
['text':' Copyright 2016 The Bazel Authors. All rights reserved.','line_number':3,'multiline':False]
['text':'','line_number':4,'multiline':False]
['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':5,'multiline':False]
['text':' you may not use this file except in compliance with the License.','line_number':6,'multiline':False]
['text':' You may obtain a copy of the License at','line_number':7,'multiline':False]
['text':'','line_number':8,'multiline':False]
['text':'    http://www.apache.org/licenses/LICENSE-2.0','line_number':9,'multiline':False]
['text':'','line_number':10,'multiline':False]
['text':' Unless required by applicable law or agreed to in writing, software','line_number':11,'multiline':False]
['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':12,'multiline':False]
['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':13,'multiline':False]
['text':' See the License for the specific language governing permissions and','line_number':14,'multiline':False]
['text':' limitations under the License.','line_number':15,'multiline':False]
['text':' Print the resolved path of a symbolic link (or the path itself if not a link).','line_number':21,'multiline':False]
['text':'','line_number':22,'multiline':False]
['text':' The result may be relative to the current working directory and may contain','line_number':23,'multiline':False]
['text':' "." and ".." references. Use `normalize_path` to remove those.','line_number':24,'multiline':False]
['text':'','line_number':25,'multiline':False]
['text':' Fail and print nothing if the input path doesn't exist, i.e. it's a','line_number':26,'multiline':False]
['text':' non-existent file, dangling symlink, or circular symlink.','line_number':27,'multiline':False]
['text':' resolve all links, keep path absolute','line_number':32,'multiline':False]
['text':' fail the function','line_number':43,'multiline':False]
['text':' Normalize a path string by removing "." and ".." references from it.','line_number':47,'multiline':False]
['text':'','line_number':48,'multiline':False]
['text':' Print the result to stdout.','line_number':49,'multiline':False]
['text':'','line_number':50,'multiline':False]
['text':' The path doesn't have to point to an existing file.','line_number':51,'multiline':False]
['text':' Custom implementation of `realpath(1)`.','line_number':90,'multiline':False]
['text':'','line_number':91,'multiline':False]
['text':' Resolves a symlink to the absolute path it points to. Fails if the link or','line_number':92,'multiline':False]
['text':' its target does not exist.','line_number':93,'multiline':False]
['text':'','line_number':94,'multiline':False]
['text':' Fails and prints nothing if the input path doesn't exist, i.e. it's a','line_number':95,'multiline':False]
['text':' non-existent file, dangling symlink, or circular symlink.','line_number':96,'multiline':False]
['text':'','line_number':97,'multiline':False]
['text':' We use this method instead of `realpath(1)` because the latter is not','line_number':98,'multiline':False]
['text':' available on Mac OS X by default.','line_number':99,'multiline':False]
['text':' fail the function','line_number':106,'multiline':False]
['text':' -gt 0 ]; then','line_number':111,'multiline':False]
['text':' Usage: expect_query_targets <arguments>','line_number':129,'multiline':False]
['text':' Checks that log file contains exactly the targets in the argument list.','line_number':130,'multiline':False]
['text':' Checks that the number of lines started with '//' or '@' equals to the number of','line_number':136,'multiline':False]
['text':' arguments provided.','line_number':137,'multiline':False]
['text':'','line_number':138,'multiline':False]
['text':' Usage: expect_log_once <regexp> [error-message]','line_number':141,'multiline':False]
['text':' Asserts that $TEST_log contains one line matching <regexp>.','line_number':142,'multiline':False]
['text':' Prints the contents of $TEST_log and the specified (optional)','line_number':143,'multiline':False]
['text':' error message otherwise, and returns non-zero.','line_number':144,'multiline':False]
['text':' Usage: expect_log_n <regexp> <count> [error-message]','line_number':151,'multiline':False]
['text':' Asserts that $TEST_log contains <count> lines matching <regexp>.','line_number':152,'multiline':False]
['text':' Prints the contents of $TEST_log and the specified (optional)','line_number':153,'multiline':False]
['text':' error message otherwise, and returns non-zero.','line_number':154,'multiline':False]
