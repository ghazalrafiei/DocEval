['text':' Copyright 2018 The Bazel Authors. All rights reserved.','line_number':1,'multiline':False]
['text':'','line_number':2,'multiline':False]
['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':3,'multiline':False]
['text':' you may not use this file except in compliance with the License.','line_number':4,'multiline':False]
['text':' You may obtain a copy of the License at','line_number':5,'multiline':False]
['text':'','line_number':6,'multiline':False]
['text':'    http://www.apache.org/licenses/LICENSE-2.0','line_number':7,'multiline':False]
['text':'','line_number':8,'multiline':False]
['text':' Unless required by applicable law or agreed to in writing, software','line_number':9,'multiline':False]
['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':10,'multiline':False]
['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':11,'multiline':False]
['text':' See the License for the specific language governing permissions and','line_number':12,'multiline':False]
['text':' limitations under the License.','line_number':13,'multiline':False]
['text':' Read the runfiles manifest.','line_number':26,'multiline':False]
['text':' A single white pixel as an ".ico" file. /usr/bin/file should identify this','line_number':135,'multiline':False]
['text':' as "image/x-icon".','line_number':136,'multiline':False]
['text':' The MIME type lookup logic of the test wrapper only looks at file names,','line_number':137,'multiline':False]
['text':' but the test-setup.sh calls /usr/bin/file which inspects file contents, so','line_number':138,'multiline':False]
['text':' we need a valid ".ico" file.','line_number':139,'multiline':False]
['text':' 16 bytes of random data. /usr/bin/file should identify this as','line_number':148,'multiline':False]
['text':' "application/octet-stream".','line_number':149,'multiline':False]
['text':' The MIME type lookup logic of the test wrapper only looks at file names,','line_number':150,'multiline':False]
['text':' but the test-setup.sh calls /usr/bin/file which inspects file contents, so','line_number':151,'multiline':False]
['text':' we need a valid ".ico" file.','line_number':152,'multiline':False]
['text':' Ensure Bazel does not create a runfiles tree.','line_number':310,'multiline':False]
['text':' Assert that the data dependency is listed in the runfiles manifest.','line_number':334,'multiline':False]
['text':' Expect the $(location) expansion in 'args' worked','line_number':344,'multiline':False]
['text':' Runfiles are disabled, expect the runfile symlink to be missing.','line_number':348,'multiline':False]
['text':' Ensure Bazel creates a runfiles tree.','line_number':358,'multiline':False]
['text':' Expect the $(location) expansion in 'args' worked','line_number':381,'multiline':False]
['text':' Runfiles are enabled, expect the runfile symlink to exist.','line_number':385,'multiline':False]
['text':' Test test-setup.sh / test wrapper only ensure that the directory of the','line_number':407,'multiline':False]
['text':' shard status file exist, not that the file itself does too.','line_number':408,'multiline':False]
['text':' Get rid of the quotes if there is any','line_number':450,'multiline':False]
['text':' The test binary should located at the bazel bin folder','line_number':453,'multiline':False]
['text':' Get rid of the quotes if there is any','line_number':470,'multiline':False]
['text':' TODO(laszlocsomor): assert that "a b" is passed as one argument,','line_number':505,'multiline':False]
['text':' not two, after https://github.com/bazelbuild/bazel/issues/6277','line_number':506,'multiline':False]
['text':' is fixed.','line_number':507,'multiline':False]
['text':' TODO(laszlocsomor): assert that the empty string argument is','line_number':510,'multiline':False]
['text':' passed, after https://github.com/bazelbuild/bazel/issues/6276','line_number':511,'multiline':False]
['text':' is fixed.','line_number':512,'multiline':False]
['text':' Using an ".ico" file as example, because as of 2018-11-09 Bazel's CI','line_number':559,'multiline':False]
['text':' machines run Windows Server 2016 core which recognizes fewer MIME types','line_number':560,'multiline':False]
['text':' than desktop Windows versions, and one of the recognized types is ".ico"','line_number':561,'multiline':False]
['text':' files.','line_number':562,'multiline':False]
['text':' Update(2019-03-05): apparently this MIME type is now recognized on CI as','line_number':563,'multiline':False]
['text':' as "image/vnd.microsoft.icon". The standard MIME type is "image/x-icon",','line_number':564,'multiline':False]
['text':' but Wikipedia lists a few alterantive ones, so the test will accept all of','line_number':565,'multiline':False]
['text':' them.','line_number':566,'multiline':False]
['text':' Since stdout and stderr of the test are redirected to the same file, it's','line_number':635,'multiline':False]
['text':' possible that a line L1 written to stdout before a line L2 written to','line_number':636,'multiline':False]
['text':' stderr is dumped to the file later, i.e. the file will have lines L2 then','line_number':637,'multiline':False]
['text':' L1. It is however true that lines printed to the same stream (stdout or','line_number':638,'multiline':False]
['text':' stderr) have to preserve their ordering, i.e. if line L3 is printed to','line_number':639,'multiline':False]
['text':' stdout after L1, then it must be strictly ordered after L1 (but not','line_number':640,'multiline':False]
['text':' necessarily after L2).','line_number':641,'multiline':False]
['text':' Therefore we only assert partial ordering of lines.','line_number':642,'multiline':False]
['text':' Test that we can run tests from external repositories.','line_number':675,'multiline':False]
['text':' See https://github.com/bazelbuild/bazel/issues/8088','line_number':676,'multiline':False]
