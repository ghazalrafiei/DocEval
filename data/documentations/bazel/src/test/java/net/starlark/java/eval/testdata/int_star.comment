['text':' Tests of Starlark 'int'','line_number':1,'multiline':False]
['text':' basic arithmetic','line_number':3,'multiline':False]
['text':' big numbers','line_number':10,'multiline':False]
['text':' Not using << to define constants because we are testing <<','line_number':19,'multiline':False]
['text':' (1<<31) - 1','line_number':20,'multiline':False]
['text':' (1<<63) - 1','line_number':21,'multiline':False]
['text':' -1 << 31','line_number':22,'multiline':False]
['text':' -1 << 63','line_number':23,'multiline':False]
['text':' size boundaries','line_number':25,'multiline':False]
['text':' str(int)','line_number':31,'multiline':False]
['text':' %d formatting','line_number':41,'multiline':False]
['text':' %x formatting','line_number':48,'multiline':False]
['text':' %X formatting','line_number':56,'multiline':False]
['text':' %o formatting','line_number':64,'multiline':False]
['text':' truth','line_number':72,'multiline':False]
['text':' int32','line_number':76,'multiline':False]
['text':' int64','line_number':77,'multiline':False]
['text':' big','line_number':78,'multiline':False]
['text':' comparisons','line_number':80,'multiline':False]
['text':' multiplication','line_number':95,'multiline':False]
['text':' 32-bit primes','line_number':100,'multiline':False]
['text':' 7 * 1317624576693539401 = maxlong','line_number':112,'multiline':False]
['text':' floored division','line_number':142,'multiline':False]
['text':' NB: different from Go / Java','line_number':145,'multiline':False]
['text':' NB: different from Go / Java','line_number':146,'multiline':False]
['text':' sole case of int // int that causes int overflow','line_number':161,'multiline':False]
['text':' ditto, long overflow','line_number':162,'multiline':False]
['text':' floating-point division of int operands','line_number':165,'multiline':False]
['text':' sole case of int / int that causes int overflow','line_number':180,'multiline':False]
['text':' ditto, long overflow','line_number':181,'multiline':False]
['text':' remainder','line_number':183,'multiline':False]
['text':' NB: different from Go / Java','line_number':185,'multiline':False]
['text':' NB: different from Go / Java','line_number':186,'multiline':False]
['text':' ditto','line_number':193,'multiline':False]
['text':' ditto','line_number':194,'multiline':False]
['text':' precedence','line_number':202,'multiline':False]
['text':' confusingly...','line_number':205,'multiline':False]
['text':' compound assignment','line_number':209,'multiline':False]
['text':' unary operators','line_number':225,'multiline':False]
['text':' bitwise','line_number':243,'multiline':False]
['text':' |','line_number':283,'multiline':False]
['text':' &','line_number':288,'multiline':False]
['text':' ^','line_number':295,'multiline':False]
['text':' check | and ^ operators precedence','line_number':299,'multiline':False]
['text':' ~','line_number':302,'multiline':False]
['text':' <<','line_number':311,'multiline':False]
['text':' >>','line_number':326,'multiline':False]
['text':' << and >>','line_number':346,'multiline':False]
