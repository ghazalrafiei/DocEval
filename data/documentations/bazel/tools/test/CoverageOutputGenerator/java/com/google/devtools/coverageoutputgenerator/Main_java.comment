['text':' Copyright 2016 The Bazel Authors. All rights reserved.','line_number':1,'multiline':False]
['text':'','line_number':2,'multiline':False]
['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':3,'multiline':False]
['text':' you may not use this file except in compliance with the License.','line_number':4,'multiline':False]
['text':' You may obtain a copy of the License at','line_number':5,'multiline':False]
['text':'','line_number':6,'multiline':False]
['text':'    http://www.apache.org/licenses/LICENSE-2.0','line_number':7,'multiline':False]
['text':'','line_number':8,'multiline':False]
['text':' Unless required by applicable law or agreed to in writing, software','line_number':9,'multiline':False]
['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':10,'multiline':False]
['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':11,'multiline':False]
['text':' See the License for the specific language governing permissions and','line_number':12,'multiline':False]
['text':' limitations under the License.','line_number':13,'multiline':False]
['text':'* Command line utility to convert raw coverage files to lcov (text) format. ','line_number':49,'multiline':True]
['text':' Generate empty declared output','line_number':102,'multiline':False]
['text':' Bazel doesn't support yet converting profdata files to lcov. We still want to output a','line_number':115,'multiline':False]
['text':' coverage report so we copy the content of the profdata file to the output file. This is','line_number':116,'multiline':False]
['text':' not ideal but it unblocks some Bazel C++','line_number':117,'multiline':False]
['text':' coverage users.','line_number':118,'multiline':False]
['text':' TODO(#5881): Add support for profdata files.','line_number':119,'multiline':False]
['text':' If there is one profdata file then there can't be other types of reports because there is','line_number':138,'multiline':False]
['text':' no way to merge them.','line_number':139,'multiline':False]
['text':' TODO(#5881): Add support for profdata files.','line_number':140,'multiline':False]
['text':' Generate empty declared output','line_number':161,'multiline':False]
['text':'*
   * Returns a set of source file names from the given manifest.
   *
   * <p>The manifest contains file names line by line. Each file can either be a source file (e.g.
   * .java, .cc) or a coverage metadata file (e.g. .gcno, .em).
   *
   * <p>This method only returns the C++ source files, ignoring the other files as they are not
   * necessary when putting together the final coverage report.
   ','line_number':188,'multiline':True]
['text':'*
   * Returns a .profdata file from the given files or null if none or more profdata files were
   * found.
   ','line_number':237,'multiline':True]
['text':'*
   * Reads the content of the given file and returns a matching map.
   *
   * <p>It assumes the file contains lines in the form key:value. For each line it creates an entry
   * in the map with the corresponding key and value.
   ','line_number':274,'multiline':True]
['text':'*
   * Returns a list of all the files with the given extension found recursively under the given dir.
   ','line_number':343,'multiline':True]
['text':' TODO(elenairina): baseline coverage contains some file names that need to be modified','line_number':378,'multiline':False]
