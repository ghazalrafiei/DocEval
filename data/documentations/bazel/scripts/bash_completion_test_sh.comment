['text':'!/bin/bash','line_number':1,'multiline':False]
['text':'','line_number':2,'multiline':False]
['text':' Copyright 2015 The Bazel Authors. All rights reserved.','line_number':3,'multiline':False]
['text':'','line_number':4,'multiline':False]
['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':5,'multiline':False]
['text':' you may not use this file except in compliance with the License.','line_number':6,'multiline':False]
['text':' You may obtain a copy of the License at','line_number':7,'multiline':False]
['text':'','line_number':8,'multiline':False]
['text':'    http://www.apache.org/licenses/LICENSE-2.0','line_number':9,'multiline':False]
['text':'','line_number':10,'multiline':False]
['text':' Unless required by applicable law or agreed to in writing, software','line_number':11,'multiline':False]
['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':12,'multiline':False]
['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':13,'multiline':False]
['text':' See the License for the specific language governing permissions and','line_number':14,'multiline':False]
['text':' limitations under the License.','line_number':15,'multiline':False]
['text':'','line_number':16,'multiline':False]
['text':' bash_completion_test.sh: tests of bash command completion.','line_number':17,'multiline':False]
['text':' --- begin runfiles.bash initialization v3 ---','line_number':19,'multiline':False]
['text':' Copy-pasted from the Bazel Bash runfiles library v3.','line_number':20,'multiline':False]
['text':' --- end runfiles.bash initialization v3 ---','line_number':28,'multiline':False]
['text':' List of command to test completion for','line_number':33,'multiline':False]
['text':' Completion script','line_number':36,'multiline':False]
['text':' Set this to test completion with package path (if enabled)','line_number':39,'multiline':False]
['text':'### UTILITIES #########################################################','line_number':42,'multiline':False]
['text':' Usage: array_join join_on array','line_number':44,'multiline':False]
['text':'','line_number':45,'multiline':False]
['text':' Joins all arguments using the first argument as separator','line_number':46,'multiline':False]
['text':' Usage: expand <terminal-input> <flags> <stderr-file>','line_number':57,'multiline':False]
['text':'','line_number':58,'multiline':False]
['text':' Prints the string resulting from command expansion after the','line_number':59,'multiline':False]
['text':' specified terminal input is typed at the shell.  The argument','line_number':60,'multiline':False]
['text':' is evaluated using 'echo -e', so \t can be used to invoke','line_number':61,'multiline':False]
['text':' command expansion. STDERR output from the call to bash is','line_number':62,'multiline':False]
['text':' sent to stderr-file so it can be inspected, if desired.','line_number':63,'multiline':False]
['text':'','line_number':64,'multiline':False]
['text':' This approach is rather gnarly, but guarantees good test fidelity,','line_number':65,'multiline':False]
['text':' unlike "unit test" approaches based on invoking the completion function','line_number':66,'multiline':False]
['text':' directly with COMP_WORDS etc defined.','line_number':67,'multiline':False]
['text':' The flags for blaze autocomplete script.','line_number':71,'multiline':False]
['text':' This script is already sourced in a normal bash shell, but we need it','line_number':73,'multiline':False]
['text':' for the tests, too.','line_number':74,'multiline':False]
['text':' Tricky!  We turn "bazel" into a self-quoting command','line_number':76,'multiline':False]
['text':' that echoes its argument string exactly, spaces and all.','line_number':77,'multiline':False]
['text':' We assume no single-quotes in the input, though.','line_number':78,'multiline':False]
['text':'','line_number':79,'multiline':False]
['text':' Alias expansion still inserts an extra space after 'blaze',','line_number':80,'multiline':False]
['text':' though, hence the following sed.  Not sure why.','line_number':81,'multiline':False]
['text':' Usage: assert_expansion <prefix> <expected-expansion> <optional-flags>','line_number':90,'multiline':False]
['text':'','line_number':91,'multiline':False]
['text':' For multiple flags separate with semicolon.','line_number':92,'multiline':False]
['text':' e.g. assert_expansion 'foo' 'foo_expand' 'flag1=bar;flag2=baz'','line_number':93,'multiline':False]
['text':' Usage: assert_expansion_error_not_contains <prefix> <unexpected-error>','line_number':104,'multiline':False]
['text':'                                            <optional-flags>','line_number':105,'multiline':False]
['text':'','line_number':106,'multiline':False]
['text':' For multiple flags separate with semicolon.','line_number':107,'multiline':False]
['text':'','line_number':108,'multiline':False]
['text':' Asserts that tab-completing after typing the prefix will not result','line_number':109,'multiline':False]
['text':' in STDERR receiving a string containing regex unexpected-error.','line_number':110,'multiline':False]
['text':'### FIXTURES ##########################################################','line_number':121,'multiline':False]
['text':'cc_library(name='comment_build_target_1old', ...)','line_number':135,'multiline':False]
['text':'cc_library(name='comment_build_target_2old', ...)','line_number':136,'multiline':False]
['text':'cc_test(name='token_bucket_t_1old', ...)','line_number':138,'multiline':False]
['text':'cc_test(name='token_bucket_t_2old', ...)','line_number':139,'multiline':False]
['text':'cc_binary(name='comment_run_target_1old', ...)','line_number':149,'multiline':False]
['text':'cc_binary(name='comment_run_target_2old', ...)','line_number':150,'multiline':False]
['text':'### UNIT TESTS ########################################################','line_number':177,'multiline':False]
['text':' Disable the test ERR trap for the generated function itself.','line_number':184,'multiline':False]
['text':' From a different directory','line_number':199,'multiline':False]
['text':' label should match test and non-test rules','line_number':207,'multiline':False]
['text':' Test that label does not match commented-out rules.','line_number':213,'multiline':False]
['text':' Test that 'label-test' expands only test rules.','line_number':219,'multiline':False]
['text':' Test that 'label-test' does not match commented-out rules.','line_number':223,'multiline':False]
['text':' Test that :all wildcard is expanded when there is more than one','line_number':229,'multiline':False]
['text':' match.','line_number':230,'multiline':False]
['text':'','line_number':231,'multiline':False]
['text':' One match => no :all.','line_number':232,'multiline':False]
['text':' Multiple matches => :all.','line_number':235,'multiline':False]
['text':' Test that label-bin expands only non-test binary rules.','line_number':239,'multiline':False]
['text':' Test that label-bin expands for binary and test rules, but not library','line_number':243,'multiline':False]
['text':' with BAZEL_COMPLETION_ALLOW_TESTS_FOR_RUN set.','line_number':244,'multiline':False]
['text':' Test the label-bin expands for test rules, with','line_number':249,'multiline':False]
['text':' BAZEL_COMPLETION_ALLOW_TESTS_FOR_RUN set.','line_number':250,'multiline':False]
['text':' Test that 'label-bin' expands only non-test binary rules when the','line_number':255,'multiline':False]
['text':' BAZEL_COMPLETION_ALLOW_TESTS_FOR_RUN is false.','line_number':256,'multiline':False]
['text':' Test that 'label-bin' does not match commented-out rules.','line_number':261,'multiline':False]
['text':' Test that 'label-bin' expands binaries with spaces in the build rules','line_number':267,'multiline':False]
['text':' Test that 'label-bin' expands targets when the name attribute is not first','line_number':271,'multiline':False]
['text':' Test that 'label-bin' expands binaries with newlines in the build rules','line_number':275,'multiline':False]
['text':' Test that the expansion of rules with 'name=...' strings isn't messed up.','line_number':279,'multiline':False]
['text':' From another directory','line_number':300,'multiline':False]
['text':' label-package','line_number':314,'multiline':False]
['text':' Assert label expansion','line_number':388,'multiline':False]
['text':' From a different directory','line_number':396,'multiline':False]
['text':' Path expansion','line_number':406,'multiline':False]
['text':' When $PACKAGE_PATH_PREFIX is set, the "stuff" directory will not be in','line_number':412,'multiline':False]
['text':' the same directory as the others, so we have to omit it.','line_number':413,'multiline':False]
['text':'### TESTS #############################################################','line_number':420,'multiline':False]
['text':' 'Test basic subcommand completion'','line_number':423,'multiline':False]
['text':' 'Test common startup option completion'','line_number':433,'multiline':False]
['text':' 'Test build option completion'','line_number':441,'multiline':False]
['text':' ...but 'help' doesn't expand this option:','line_number':446,'multiline':False]
['text':' Basic label expansion works for query, too.','line_number':457,'multiline':False]
['text':' Should be the same as the build options.','line_number':466,'multiline':False]
['text':' 'Test run option completion'','line_number':467,'multiline':False]
['text':' 'Test tristate option completion'','line_number':475,'multiline':False]
['text':' 'Test expansion of directory names, even across package_path'','line_number':488,'multiline':False]
['text':' Now add BUILD files; it should no longer expand the trailing slashes:','line_number':501,'multiline':False]
['text':' Use of absolute forms of labels:','line_number':509,'multiline':False]
['text':' 'Test expansion of directory names, when in a subdir of the workspace.'','line_number':521,'multiline':False]
['text':' Use of "video" while in "video" => no match:','line_number':526,'multiline':False]
['text':' Use of "//video" while in "video" => matches absolute:','line_number':536,'multiline':False]
['text':' Use of relative paths => matches','line_number':546,'multiline':False]
['text':' 'Test expansion of target names within packages'','line_number':554,'multiline':False]
['text':' TODO(bazel-team): (2009) it would be good to test that "streamer2\t"','line_number':558,'multiline':False]
['text':' yielded a menu of "streamer2:" and "streamer2/", but testing the','line_number':559,'multiline':False]
['text':' terminal output (as opposed to the result of expansion) is','line_number':560,'multiline':False]
['text':' beyond our ability right now.','line_number':561,'multiline':False]
['text':' Special characters','line_number':566,'multiline':False]
['text':' Also, that 'bazel build' matches test and non-test rules (lack','line_number':570,'multiline':False]
['text':' of trailing space after match => not unique match).','line_number':571,'multiline':False]
['text':' Test that 'bazel build' does not match commented-out rules.','line_number':581,'multiline':False]
['text':' Test that 'bazel test' expands only test rules.','line_number':588,'multiline':False]
['text':' Test that 'blaze test' does not match commented-out rules.','line_number':592,'multiline':False]
['text':' Test that :all wildcard is expanded when there is more than one','line_number':602,'multiline':False]
['text':' match.','line_number':603,'multiline':False]
['text':'','line_number':604,'multiline':False]
['text':' One match => no :all.','line_number':605,'multiline':False]
['text':' Multiple matches => :all.','line_number':608,'multiline':False]
['text':' Test that 'bazel run' expands only non-test binary rules.','line_number':612,'multiline':False]
['text':' Test that 'bazel run' expands for binary and test rules, but not library','line_number':616,'multiline':False]
['text':' with BAZEL_COMPLETION_ALLOW_TESTS_FOR_RUN set.','line_number':617,'multiline':False]
['text':' Test the 'bazel run' expands for test rules, with','line_number':622,'multiline':False]
['text':' BAZEL_COMPLETION_ALLOW_TESTS_FOR_RUN set.','line_number':623,'multiline':False]
['text':' Test that 'bazel run' expands only non-test binary rules when the','line_number':628,'multiline':False]
['text':' BAZEL_COMPLETION_ALLOW_TESTS_FOR_RUN is false.','line_number':629,'multiline':False]
['text':' Test that 'bazel run' expands only non-test binary rules when the','line_number':634,'multiline':False]
['text':' BAZEL_COMPLETION_ALLOW_TESTS_FOR_RUN is false.','line_number':635,'multiline':False]
['text':' Test that 'bazel run' expands only non-test binary rules when the','line_number':640,'multiline':False]
['text':' BAZEL_COMPLETION_ALLOW_TESTS_FOR_RUN is invalid.','line_number':641,'multiline':False]
['text':' Test that 'bazel run' expands only non-test binary rules when the','line_number':646,'multiline':False]
['text':' BAZEL_COMPLETION_ALLOW_TESTS_FOR_RUN is empty.','line_number':647,'multiline':False]
['text':' Test that 'bazel run' does not match commented-out rules.','line_number':652,'multiline':False]
['text':' Test that 'bazel run' expands binaries with spaces in the build rules','line_number':659,'multiline':False]
['text':' Test that 'bazel run' expands targets when the name attribute is not first','line_number':663,'multiline':False]
['text':' Test that 'bazel run' expands binaries with newlines in the build rules','line_number':667,'multiline':False]
['text':' Test that the expansion of rules with 'name=...' strings isn't messed up.','line_number':671,'multiline':False]
['text':' Test that dashes are matched even when locale isn't C.','line_number':675,'multiline':False]
['text':' 'Test expansion of targets when in a subdir of the workspace.'','line_number':682,'multiline':False]
['text':' Relative labels:','line_number':687,'multiline':False]
['text':' (no match)','line_number':700,'multiline':False]
['text':' Absolute labels work as usual:','line_number':704,'multiline':False]
['text':' 'Test expansion of targets when in a package.'','line_number':710,'multiline':False]
['text':' allow slashes in rule names','line_number':721,'multiline':False]
['text':' (no expansion)','line_number':728,'multiline':False]
['text':' Autocomplete arguments as well.','line_number':744,'multiline':False]
['text':' "Test that bazel help expands subcommand names"','line_number':750,'multiline':False]
['text':' "Test that bazel info keys are expanded"','line_number':762,'multiline':False]
['text':' "Test that workspace boundary files are recognized"','line_number':772,'multiline':False]
['text':' this test only works for Bazel','line_number':773,'multiline':False]
