['text':'
This file is part of Telegram Desktop,
the official desktop application for the Telegram messaging service.

For license and copyright information please follow this link:
https://github.com/telegramdesktop/tdesktop/blob/master/LEGAL
','line_number':1,'multiline':True]
['text':' namespace','line_number':107,'multiline':False]
['text':' Otherwise cancelReplyMessage() will save the draft.','line_number':1168,'multiline':False]
['text':' Cmd + Up is used instead of Home.','line_number':1518,'multiline':False]
['text':' Cmd + Down is used instead of End.','line_number':1520,'multiline':False]
['text':' Send bot command at once, if it was not inserted by pressing Tab.','line_number':1607,'multiline':False]
['text':'_saveDraftText = true;','line_number':1644,'multiline':False]
['text':'_saveDraftStart = crl::now();','line_number':1645,'multiline':False]
['text':'saveDraft();','line_number':1646,'multiline':False]
['text':'saveCloudDraft(); // won't be needed if SendInlineBotResult will clear the cloud draft','line_number':1647,'multiline':False]
['text':'_autocomplete->setModerateKeyActivateCallback([=](int key) {','line_number':1662,'multiline':False]
['text':'	return _keyboard->isHidden()','line_number':1663,'multiline':False]
['text':'		? false','line_number':1664,'multiline':False]
['text':'		: _keyboard->moderateKeyActivate(key);','line_number':1665,'multiline':False]
['text':'});','line_number':1666,'multiline':False]
['text':' SendAsPeers::shouldChoose checks Data::CanSendAnything(PeerData*).','line_number':2135,'multiline':False]
['text':' (_attachToggle|_replaceMedia) (_sendAs) -- _inlineResults ------ _tabbedPanel -- _fieldBarCancel','line_number':2311,'multiline':False]
['text':' (_attachDocument|_attachPhoto) _field (_ttlInfo) (_silent|_botCommandStart) _tabbedSelectorToggle _send','line_number':2312,'multiline':False]
['text':' If a height of the field is changed','line_number':2327,'multiline':False]
['text':' then this method will be called with the updated size.','line_number':2328,'multiline':False]
['text':'p.setCompositionMode(QPainter::CompositionMode_Source);','line_number':2523,'multiline':False]
['text':'p.fillRect(clip, Qt::transparent);','line_number':2524,'multiline':False]
['text':'p.setCompositionMode(QPainter::CompositionMode_SourceOver);','line_number':2525,'multiline':False]
['text':'_backgroundRect->paint(p, _wrap->rect());','line_number':2526,'multiline':False]
['text':'} else if (!_canSendMessages) {','line_number':2549,'multiline':False]
['text':'	Core::App().settings().setTabbedReplacedWithInfo(true);','line_number':2550,'multiline':False]
['text':'	_window->showPeerInfo(_peer, params.withThirdColumn());','line_number':2551,'multiline':False]
['text':'	return;','line_number':2552,'multiline':False]
['text':' namespace HistoryView','line_number':3109,'multiline':False]
