['text':'
This file is part of Telegram Desktop,
the official desktop application for the Telegram messaging service.

For license and copyright information please follow this link:
https://github.com/telegramdesktop/tdesktop/blob/master/LEGAL
','line_number':1,'multiline':True]
['text':' !Q_OS_MAC','line_number':71,'multiline':False]
['text':' !Q_OS_MAC','line_number':171,'multiline':False]
['text':' Don't do that, it looks awful :(','line_number':192,'multiline':False]
['text':'#ifdef Q_OS_WIN','line_number':193,'multiline':False]
['text':'	// On Windows we replace snap-to-top maximizing with fullscreen.','line_number':194,'multiline':False]
['text':'	//','line_number':195,'multiline':False]
['text':'	// We have to switch first to showNormal, so that showFullScreen','line_number':196,'multiline':False]
['text':'	// will remember correct normal window geometry and next showNormal','line_number':197,'multiline':False]
['text':'	// will show it instead of a moving maximized window.','line_number':198,'multiline':False]
['text':'	//','line_number':199,'multiline':False]
['text':'	// We have to do it in InvokeQueued, otherwise it still captures','line_number':200,'multiline':False]
['text':'	// the maximized window geometry and saves it.','line_number':201,'multiline':False]
['text':'	//','line_number':202,'multiline':False]
['text':'	// I couldn't find a less glitchy way to do that *sigh*.','line_number':203,'multiline':False]
['text':'	const auto object = window()->windowHandle();','line_number':204,'multiline':False]
['text':'	const auto signal = &QWindow::windowStateChanged;','line_number':205,'multiline':False]
['text':'	QObject::connect(object, signal, [=](Qt::WindowState state) {','line_number':206,'multiline':False]
['text':'		if (state == Qt::WindowMaximized) {','line_number':207,'multiline':False]
['text':'			InvokeQueued(object, [=] {','line_number':208,'multiline':False]
['text':'				window()->showNormal();','line_number':209,'multiline':False]
['text':'				InvokeQueued(object, [=] {','line_number':210,'multiline':False]
['text':'					window()->showFullScreen();','line_number':211,'multiline':False]
['text':'				});','line_number':212,'multiline':False]
['text':'			});','line_number':213,'multiline':False]
['text':'		}','line_number':214,'multiline':False]
['text':'	});','line_number':215,'multiline':False]
['text':'#endif // Q_OS_WIN','line_number':216,'multiline':False]
['text':' _call->screenSharingWithAudio();','line_number':327,'multiline':False]
['text':'#ifdef Q_OS_WIN','line_number':331,'multiline':False]
['text':'	return true;','line_number':332,'multiline':False]
['text':'#else // Q_OS_WIN','line_number':333,'multiline':False]
['text':'#endif // Q_OS_WIN','line_number':335,'multiline':False]
['text':', withAudio','line_number':352,'multiline':True]
['text':'case ErrorType::NoMicrophone:','line_number':509,'multiline':False]
['text':'	return tr::lng_call_error_no_camera(tr::now);','line_number':510,'multiline':False]
['text':' _user may change for the same Panel.','line_number':585,'multiline':False]
['text':' !Q_OS_MAC','line_number':594,'multiline':False]
['text':' !Q_OS_MAC','line_number':683,'multiline':False]
['text':' _controls','line_number':686,'multiline':False]
['text':' Screencast - Camera - Cancel/Decline - Answer/Hangup/Redial - Mute.','line_number':789,'multiline':False]
['text':' namespace Calls','line_number':973,'multiline':False]
