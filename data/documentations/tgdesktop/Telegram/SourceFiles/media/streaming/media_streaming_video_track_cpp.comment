['text':'
This file is part of Telegram Desktop,
the official desktop application for the Telegram messaging service.

For license and copyright information please follow this link:
https://github.com/telegramdesktop/tdesktop/blob/master/LEGAL
','line_number':1,'multiline':True]
['text':' usual 4K','line_number':20,'multiline':False]
['text':'if (FFmpeg::RotationSwapWidthHeight(stream.rotation)) {','line_number':33,'multiline':False]
['text':'	resize.transpose();','line_number':34,'multiline':False]
['text':'}','line_number':35,'multiline':False]
['text':' AV_NUM_DATA_POINTERS defined in AVFrame struct','line_number':49,'multiline':False]
['text':' namespace','line_number':77,'multiline':False]
['text':' Force frame position to be clamped to [0, duration] and monotonic.','line_number':143,'multiline':False]
['text':' Main thread wrapper destructor will set _shared back to nullptr.','line_number':151,'multiline':False]
['text':' All queued method calls after that should be discarded.','line_number':152,'multiline':False]
['text':' For initial frame skipping for an exact seek.','line_number':173,'multiline':False]
['text':'for (const auto &packet : packets) {','line_number':221,'multiline':False]
['text':'	// Maybe it is enough to count by list.back()?.. hope so.','line_number':222,'multiline':False]
['text':'	accumulate_max(','line_number':223,'multiline':False]
['text':'		_durationByLastPacket,','line_number':224,'multiline':False]
['text':'		durationByPacket(packet));','line_number':225,'multiline':False]
['text':'	if (interrupted()) {','line_number':226,'multiline':False]
['text':'		return;','line_number':227,'multiline':False]
['text':'	}','line_number':228,'multiline':False]
['text':'}','line_number':229,'multiline':False]
['text':' We've set this value on the first cycle.','line_number':253,'multiline':False]
['text':' We looped, so it already holds full stream duration.','line_number':349,'multiline':False]
['text':' Resumed time used to validate sync to audio.','line_number':553,'multiline':False]
['text':' Return the last valid frame if we seek too far.','line_number':626,'multiline':False]
['text':' Waiting for more packets.','line_number':632,'multiline':False]
['text':' Seek was with AVSEEK_FLAG_BACKWARD so first we get old frames.','line_number':641,'multiline':False]
['text':' Try skipping frames until one is after the requested position.','line_number':642,'multiline':False]
['text':' Usually main thread sets displayed time before _counter increment.','line_number':782,'multiline':False]
['text':' But in this case we update _counter, so we set a fake displayed time.','line_number':783,'multiline':False]
['text':' Debugging crash.','line_number':832,'multiline':False]
['text':' If player already awaits next frame - we ignore if it's stale.','line_number':846,'multiline':False]
['text':' Sometimes main thread subscribes to check frame requests before','line_number':865,'multiline':False]
['text':' the first frame is ready and presented and sometimes after.','line_number':866,'multiline':False]
['text':' Error happened during frame prepare.','line_number':890,'multiline':False]
['text':' Release this frame to the main thread for rendering.','line_number':900,'multiline':False]
['text':' Frame already displayed, but not yet shown.','line_number':941,'multiline':False]
['text':'const auto next = (counter + 1) % (2 * kFramesCount);','line_number':994,'multiline':False]
['text':'const auto index = next / 2;','line_number':995,'multiline':False]
['text':'const auto frame = getFrame(index);','line_number':996,'multiline':False]
['text':'if (frame->displayed != kTimeUnknown) {','line_number':997,'multiline':False]
['text':'	// Frame already displayed.','line_number':998,'multiline':False]
['text':'	return;','line_number':999,'multiline':False]
['text':'}','line_number':1000,'multiline':False]
['text':'Assert(IsRasterized(frame));','line_number':1001,'multiline':False]
['text':'Assert(frame->display != kTimeUnknown);','line_number':1002,'multiline':False]
['text':'frame->display = countFrameDisplayTime(frame->index);','line_number':1003,'multiline':False]
['text':'if (!delayed) {','line_number':1143,'multiline':False]
['text':'	return;','line_number':1144,'multiline':False]
['text':'}','line_number':1145,'multiline':False]
['text':'_wrapped.with([=](Implementation &unwrapped) mutable {','line_number':1146,'multiline':False]
['text':'	unwrapped.addTimelineDelay(delayed);','line_number':1147,'multiline':False]
['text':'});','line_number':1148,'multiline':False]
['text':' namespace Streaming','line_number':1345,'multiline':False]
['text':' namespace Media','line_number':1346,'multiline':False]
