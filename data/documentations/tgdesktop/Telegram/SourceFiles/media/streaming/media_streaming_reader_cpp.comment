['text':'
This file is part of Telegram Desktop,
the official desktop application for the Telegram messaging service.

For license and copyright information please follow this link:
https://github.com/telegramdesktop/tdesktop/blob/master/LEGAL
','line_number':1,'multiline':True]
['text':' 1 MB of parts are requested from cloud ahead of reading demand.','line_number':26,'multiline':False]
['text':' Range::value_type is Pair<int, QByteArray>','line_number':160,'multiline':False]
['text':' Range::value_type is Pair<uint32, QByteArray>','line_number':175,'multiline':False]
['text':' namespace','line_number':197,'multiline':False]
['text':' Always apply data to first block if it is cached in the header.','line_number':429,'multiline':False]
['text':' We've loaded header slice because really we wanted first slice.','line_number':446,'multiline':False]
['text':' We could've already unloaded this slice using LRU _usedSlices.','line_number':448,'multiline':False]
['text':' So just process whole result even if we didn't want header really.','line_number':451,'multiline':False]
['text':' We could've already unloaded this slice using LRU _usedSlices.','line_number':456,'multiline':False]
['text':' When we first read header we don't request the first slice.','line_number':464,'multiline':False]
['text':' But we get it, so let's apply it anyway.','line_number':465,'multiline':False]
['text':' Waiting for initial cache query.','line_number':561,'multiline':False]
['text':' If the only data in this slice was from _header, just leave it.','line_number':722,'multiline':False]
['text':' Cache is not used.','line_number':727,'multiline':False]
['text':' If no data was changed we should still save first slice,','line_number':730,'multiline':False]
['text':' if header data was changed since loading from cache.','line_number':731,'multiline':False]
['text':' Otherwise in destructor we won't be able to unload header.','line_number':732,'multiline':False]
['text':' We always use complex serialization for header + first slice.','line_number':766,'multiline':False]
['text':' All data is continuous.','line_number':772,'multiline':False]
['text':' Make sure this data won't be taken for full continuous data.','line_number':783,'multiline':False]
['text':' We may serialize header in the middle of streaming, if we use','line_number':790,'multiline':False]
['text':' HeaderMode::Good and we unload first slice. We still require','line_number':791,'multiline':False]
['text':' header data to continue working, so don't really unload the header.','line_number':792,'multiline':False]
['text':' Will be processed in continueDownloaderFromMainThread()','line_number':935,'multiline':False]
['text':' from StreamedFileDownloader::requestParts().','line_number':936,'multiline':False]
['text':' Will be processed in continueDownloaderFromMainThread()','line_number':943,'multiline':False]
['text':' from StreamedFileDownloader::requestParts().','line_number':944,'multiline':False]
['text':' If a requested offset is less-or-equal of some previously requested','line_number':975,'multiline':False]
['text':' offset, it means that the downloader was changed, ignore old offsets.','line_number':976,'multiline':False]
['text':' If a requested part is available right now we simply fire it on the','line_number':992,'multiline':False]
['text':' main thread, until the first not-available-right-now offset is found.','line_number':993,'multiline':False]
['text':' If we didn't request that slice yet, try requesting it.','line_number':1078,'multiline':False]
['text':' If there is no need to (header mode is unknown) - place empty map.','line_number':1079,'multiline':False]
['text':' Otherwise place std::nullopt and wait for the cache result.','line_number':1080,'multiline':False]
['text':' 0 is for headerData, slice index = sliceNumber - 1.','line_number':1126,'multiline':False]
['text':' If we put to cache the header (number == 0) that means we're in','line_number':1276,'multiline':False]
['text':' HeaderMode::Good and really are putting the first slice to cache.','line_number':1277,'multiline':False]
['text':' namespace Streaming','line_number':1419,'multiline':False]
['text':' namespace Media','line_number':1420,'multiline':False]
