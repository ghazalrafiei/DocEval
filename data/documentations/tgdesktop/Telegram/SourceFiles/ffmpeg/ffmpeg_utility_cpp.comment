['text':'
This file is part of Telegram Desktop,
the official desktop application for the Telegram messaging service.

For license and copyright information please follow this link:
https://github.com/telegramdesktop/tdesktop/blob/master/LEGAL
','line_number':1,'multiline':True]
['text':' !TDESKTOP_USE_PACKAGED && !Q_OS_WIN && !Q_OS_MAC','line_number':16,'multiline':False]
['text':' LIB_FFMPEG_USE_QT_PRIVATE_API','line_number':22,'multiline':False]
['text':' extern "C"','line_number':26,'multiline':False]
['text':' See https://github.com/telegramdesktop/tdesktop/issues/7225','line_number':31,'multiline':False]
['text':' !LIB_FFMPEG_USE_QT_PRIVATE_API','line_number':73,'multiline':False]
['text':' LIB_FFMPEG_USE_QT_PRIVATE_API','line_number':76,'multiline':False]
['text':' !LIB_FFMPEG_USE_QT_PRIVATE_API','line_number':87,'multiline':False]
['text':' LIB_FFMPEG_USE_QT_PRIVATE_API','line_number':90,'multiline':False]
['text':' !TDESKTOP_USE_PACKAGED && !Q_OS_WIN && !Q_OS_MAC','line_number':119,'multiline':False]
['text':' !TDESKTOP_USE_PACKAGED && !Q_OS_WIN && !Q_OS_MAC','line_number':163,'multiline':False]
['text':' Q_OS_WIN','line_number':169,'multiline':False]
['text':' Q_OS_WIN || Q_OS_MAC','line_number':171,'multiline':False]
['text':' Q_OS_WIN || Q_OS_MAC','line_number':175,'multiline':False]
['text':' TDESKTOP_USE_PACKAGED || Q_OS_WIN || Q_OS_MAC','line_number':177,'multiline':False]
['text':' Q_OS_WIN','line_number':188,'multiline':False]
['text':' Q_OS_WIN || Q_OS_MAC','line_number':191,'multiline':False]
['text':' Q_OS_WIN || Q_OS_MAC','line_number':195,'multiline':False]
['text':' namespace','line_number':226,'multiline':False]
['text':' avformat_open_input freed 'result' in case an error happened.','line_number':287,'multiline':False]
['text':' Now FormatPointer will own and free the IO context.','line_number':295,'multiline':False]
['text':' Force libvpx-vp9, because we need alpha channel support.','line_number':308,'multiline':False]
['text':' We have to use custom caching for SwsContext, because','line_number':390,'multiline':False]
['text':' sws_getCachedContext checks passed flags with existing context flags,','line_number':391,'multiline':False]
['text':' and re-creates context if they're different, but in the process of','line_number':392,'multiline':False]
['text':' context creation the passed flags are modified before being written','line_number':393,'multiline':False]
['text':' to the resulting context, so the caching doesn't work.','line_number':394,'multiline':False]
['text':' Create a QImage of desired size where all the data is properly aligned.','line_number':543,'multiline':False]
['text':' This creates QImage::Format_ARGB32_Premultiplied, but we use it','line_number':569,'multiline':False]
['text':' as an image in QImage::Format_ARGB32 format.','line_number':570,'multiline':False]
['text':' namespace FFmpeg','line_number':606,'multiline':False]
