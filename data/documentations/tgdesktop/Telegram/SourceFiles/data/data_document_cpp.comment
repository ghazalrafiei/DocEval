['text':'
This file is part of Telegram Desktop,
the official desktop application for the Telegram messaging service.

For license and copyright information please follow this link:
https://github.com/telegramdesktop/tdesktop/blob/master/LEGAL
','line_number':1,'multiline':True]
['text':' Ui::hideLayer().','line_number':41,'multiline':False]
['text':' namespace','line_number':88,'multiline':False]
['text':' check if extension of filename is present in filter','line_number':110,'multiline':False]
['text':' it should be in first filter section on the first place','line_number':111,'multiline':False]
['text':' place it there, if it is not','line_number':112,'multiline':False]
['text':' Q_OS_WIN','line_number':206,'multiline':False]
['text':' NB! _loader may be in ~FileLoader() already.','line_number':768,'multiline':False]
['text':' We don't want LTR/RTL mark/embedding/override/isolate chars','line_number':871,'multiline':False]
['text':' in filenames, because they introduce a security issue, when','line_number':872,'multiline':False]
['text':' an executable "Fil[x]gepj.exe" may look like "Filexe.jpeg".','line_number':873,'multiline':False]
['text':' LTR Mark','line_number':875,'multiline':False]
['text':' RTL Mark','line_number':876,'multiline':False]
['text':' LTR Embedding','line_number':877,'multiline':False]
['text':' RTL Embedding','line_number':878,'multiline':False]
['text':' LTR Override','line_number':879,'multiline':False]
['text':' RTL Override','line_number':880,'multiline':False]
['text':' LTR Isolate','line_number':881,'multiline':False]
['text':' RTL Isolate','line_number':882,'multiline':False]
['text':' This affects a display of tooltips.','line_number':1007,'multiline':False]
['text':' _owner->notifyDocumentLayoutChanged(this);','line_number':1008,'multiline':False]
['text':' Read each 5 bit of encoded5bit as 0-31 unsigned char.','line_number':1075,'multiline':False]
['text':' We count the index of the byte in which the desired 5-bit sequence starts.','line_number':1076,'multiline':False]
['text':' And then we read a uint16 starting from that byte to guarantee to get all of those 5 bits.','line_number':1077,'multiline':False]
['text':'','line_number':1078,'multiline':False]
['text':' BUT! if it is the last byte we have, we're not allowed to read a uint16 starting with it.','line_number':1079,'multiline':False]
['text':' Because it will be an overflow (we'll access one byte after the available memory).','line_number':1080,'multiline':False]
['text':' We see, that only the last 5 bits could start in the last available byte and be problematic.','line_number':1081,'multiline':False]
['text':' So we read in a general way all the entries in a general way except the last one.','line_number':1082,'multiline':False]
['text':' Write each 0-31 unsigned char as 5 bit to result.','line_number':1107,'multiline':False]
['text':' We reserve one extra byte to be able to dereference any of required bytes','line_number':1108,'multiline':False]
['text':' as a uint16 without overflowing, even the byte with index "bytesCount - 1".','line_number':1109,'multiline':False]
['text':' Ignore cover for voice chat records.','line_number':1190,'multiline':False]
['text':' Streaming couldn't be used with external player','line_number':1321,'multiline':False]
['text':' Maybe someone brave will implement this once upon a time...','line_number':1322,'multiline':False]
