['text':'
This file is part of Telegram Desktop,
the official desktop application for the Telegram messaging service.

For license and copyright information please follow this link:
https://github.com/telegramdesktop/tdesktop/blob/master/LEGAL
','line_number':1,'multiline':True]
['text':' Account::sessionValue.','line_number':19,'multiline':False]
['text':' session->content()->windowShown().','line_number':38,'multiline':False]
['text':' ChildSkip().x() for new child windows.','line_number':41,'multiline':False]
['text':' namespace.','line_number':76,'multiline':False]
['text':'const auto gray = red * 0.299 + green * 0.587 + blue * 0.114;','line_number':95,'multiline':False]
['text':'const auto result = (gray - 100 < 0) ? 0 : (gray - 100) * 255 / 155;','line_number':96,'multiline':False]
['text':' Qt's standard QIconLoaderEngine sets availableSizes','line_number':182,'multiline':False]
['text':' to XDG directories sizes, since svg icons are scalable,','line_number':183,'multiline':False]
['text':' they could be only in one XDG folder (like 48x48)','line_number':184,'multiline':False]
['text':' and Qt will set only a 48px icon to the window','line_number':185,'multiline':False]
['text':' even though the icon could be scaled to other sizes.','line_number':186,'multiline':False]
['text':' Thus, scale it manually to the most widespread sizes.','line_number':187,'multiline':False]
['text':' We can't use QIcon::actualSize here','line_number':189,'multiline':False]
['text':' since it works incorrectly with svg icon themes','line_number':190,'multiline':False]
['text':' Not a svg icon, don't scale it','line_number':196,'multiline':False]
['text':' platform/linux/main_window_linux depends on count used the same','line_number':208,'multiline':False]
['text':' way for all the same (count % 1000) values.','line_number':209,'multiline':False]
['text':' Non-queued activeChanged handlers must use QtSignalProducer.','line_number':449,'multiline':False]
['text':' X11 is the only platform with unreliable activate requests','line_number':946,'multiline':False]
['text':' Qt destroys this QDrag automatically after the drag is finished','line_number':1029,'multiline':False]
['text':' We must not delete this at the end of this function, as this breaks DnD on Linux','line_number':1030,'multiline':False]
['text':' We don't receive mouseReleaseEvent when drag is finished.','line_number':1036,'multiline':False]
['text':' Otherwise:','line_number':1042,'multiline':False]
['text':' ~QWidget','line_number':1043,'multiline':False]
['text':' QWidgetPrivate::close_helper','line_number':1044,'multiline':False]
['text':' QWidgetPrivate::setVisible','line_number':1045,'multiline':False]
['text':' QWidgetPrivate::hide_helper','line_number':1046,'multiline':False]
['text':' QWidgetPrivate::hide_sys','line_number':1047,'multiline':False]
['text':' QWindowPrivate::setVisible','line_number':1048,'multiline':False]
['text':' QMetaObject::activate','line_number':1049,'multiline':False]
['text':' Window::MainWindow::handleVisibleChanged on a destroyed MainWindow.','line_number':1050,'multiline':False]
['text':' namespace Window','line_number':1102,'multiline':False]
