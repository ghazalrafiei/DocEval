['text':'===-- string_utils.cpp ----------------------------------------*- C++ -*-===//','line_number':1,'multiline':False]
['text':'','line_number':2,'multiline':False]
['text':' Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.','line_number':3,'multiline':False]
['text':' See https://llvm.org/LICENSE.txt for license information.','line_number':4,'multiline':False]
['text':' SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception','line_number':5,'multiline':False]
['text':'','line_number':6,'multiline':False]
['text':'===----------------------------------------------------------------------===//','line_number':7,'multiline':False]
['text':' Appends number in a given Base to buffer. If its length is less than','line_number':25,'multiline':False]
['text':' |MinNumberLength|, it is padded with leading zeroes or spaces, depending','line_number':26,'multiline':False]
['text':' on the value of |PadWithZero|.','line_number':27,'multiline':False]
['text':'Negative=','line_number':75,'multiline':True]
['text':'Upper=','line_number':85,'multiline':True]
['text':' Use the fact that explicitly requesting 0 Width (%0s) results in UB and','line_number':88,'multiline':False]
['text':' interpret Width == 0 as "no Width requested":','line_number':89,'multiline':False]
['text':' Width == 0 - no Width requested','line_number':90,'multiline':False]
['text':' Width  < 0 - left-justify S within and pad it to -Width chars, if necessary','line_number':91,'multiline':False]
['text':' Width  > 0 - right-justify S, not implemented yet','line_number':92,'multiline':False]
['text':' Only the left justified strings are supported.','line_number':103,'multiline':False]
['text':'PadWithZero=','line_number':113,'multiline':True]
['text':'Upper=','line_number':114,'multiline':True]
['text':' At the moment only %s supports precision and left-justification.','line_number':158,'multiline':False]
['text':' Only left-justified Width is supported.','line_number':186,'multiline':False]
['text':' In Scudo, `s64`/`u64` are supposed to use `lld` and `llu` respectively.','line_number':198,'multiline':False]
['text':' However, `-Wformat` doesn't know we have a different parser for those','line_number':199,'multiline':False]
['text':' placeholders and it keeps complaining the type mismatch on 64-bit','line_number':200,'multiline':False]
['text':' platform which uses `ld`/`lu` for `s64`/`u64`. Therefore, in order to','line_number':201,'multiline':False]
['text':' silence the warning, we turn to use `PRId64`/`PRIu64` for printing','line_number':202,'multiline':False]
['text':' `s64`/`u64` and handle the `ld`/`lu` here.','line_number':203,'multiline':False]
['text':' formatString doesn't currently support a null buffer or zero buffer length,','line_number':246,'multiline':False]
['text':' so in order to get the resulting formatted string length, we use a one-char','line_number':247,'multiline':False]
['text':' buffer.','line_number':248,'multiline':False]
['text':' namespace scudo','line_number':277,'multiline':False]
