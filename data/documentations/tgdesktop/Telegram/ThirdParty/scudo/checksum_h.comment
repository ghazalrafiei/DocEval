['text':'===-- checksum.h ----------------------------------------------*- C++ -*-===//','line_number':1,'multiline':False]
['text':'','line_number':2,'multiline':False]
['text':' Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.','line_number':3,'multiline':False]
['text':' See https://llvm.org/LICENSE.txt for license information.','line_number':4,'multiline':False]
['text':' SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception','line_number':5,'multiline':False]
['text':'','line_number':6,'multiline':False]
['text':'===----------------------------------------------------------------------===//','line_number':7,'multiline':False]
['text':' Hardware CRC32 is supported at compilation via the following:','line_number':14,'multiline':False]
['text':' - for i386 & x86_64: -mcrc32 (earlier: -msse4.2)','line_number':15,'multiline':False]
['text':' - for ARM & AArch64: -march=armv8-a+crc or -mcrc','line_number':16,'multiline':False]
['text':' An additional check must be performed at runtime as well to make sure the','line_number':17,'multiline':False]
['text':' emitted instructions are valid on the target host.','line_number':18,'multiline':False]
['text':' NB: clang has <crc32intrin.h> but GCC does not','line_number':21,'multiline':False]
['text':' BSD checksum, unlike a software CRC32, doesn't use any array lookup. We save','line_number':41,'multiline':False]
['text':' significantly on memory accesses, as well as 1K of CRC32 table, on platforms','line_number':42,'multiline':False]
['text':' that do no support hardware CRC32. The checksum itself is 16-bit, which is at','line_number':43,'multiline':False]
['text':' odds with CRC32, but enough for our needs.','line_number':44,'multiline':False]
['text':' namespace scudo','line_number':57,'multiline':False]
['text':' SCUDO_CHECKSUM_H_','line_number':59,'multiline':False]
