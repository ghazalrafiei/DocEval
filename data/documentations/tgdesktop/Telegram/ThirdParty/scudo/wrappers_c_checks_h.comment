['text':'===-- wrappers_c_checks.h -------------------------------------*- C++ -*-===//','line_number':1,'multiline':False]
['text':'','line_number':2,'multiline':False]
['text':' Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.','line_number':3,'multiline':False]
['text':' See https://llvm.org/LICENSE.txt for license information.','line_number':4,'multiline':False]
['text':' SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception','line_number':5,'multiline':False]
['text':'','line_number':6,'multiline':False]
['text':'===----------------------------------------------------------------------===//','line_number':7,'multiline':False]
['text':' A common errno setting logic shared by almost all Scudo C wrappers.','line_number':22,'multiline':False]
['text':' Checks return true on failure.','line_number':29,'multiline':False]
['text':' Checks aligned_alloc() parameters, verifies that the alignment is a power of','line_number':31,'multiline':False]
['text':' two and that the size is a multiple of alignment.','line_number':32,'multiline':False]
['text':' Checks posix_memalign() parameters, verifies that alignment is a power of two','line_number':38,'multiline':False]
['text':' and a multiple of sizeof(void *).','line_number':39,'multiline':False]
['text':' Returns true if calloc(Size, N) overflows on Size*N calculation. Use a','line_number':45,'multiline':False]
['text':' builtin supported by recent clang & GCC if it exists, otherwise fallback to a','line_number':46,'multiline':False]
['text':' costly division.','line_number':47,'multiline':False]
['text':' On, e.g. armv7, uptr/uintptr_t may be defined as unsigned long','line_number':53,'multiline':False]
['text':' Returns true if the size passed to pvalloc overflows when rounded to the next','line_number':64,'multiline':False]
['text':' multiple of PageSize.','line_number':65,'multiline':False]
['text':' namespace scudo','line_number':70,'multiline':False]
['text':' SCUDO_CHECKS_H_','line_number':72,'multiline':False]
