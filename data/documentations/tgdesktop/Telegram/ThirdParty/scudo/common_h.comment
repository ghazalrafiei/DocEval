['text':'===-- common.h ------------------------------------------------*- C++ -*-===//','line_number':1,'multiline':False]
['text':'','line_number':2,'multiline':False]
['text':' Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.','line_number':3,'multiline':False]
['text':' See https://llvm.org/LICENSE.txt for license information.','line_number':4,'multiline':False]
['text':' SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception','line_number':5,'multiline':False]
['text':'','line_number':6,'multiline':False]
['text':'===----------------------------------------------------------------------===//','line_number':7,'multiline':False]
['text':' ANSI C linear congruential PRNG (16-bit output).','line_number':92,'multiline':False]
['text':' return (*State = *State * 1103515245 + 12345) >> 16;','line_number':93,'multiline':False]
['text':' XorShift (32-bit output).','line_number':94,'multiline':False]
['text':' [0, N)','line_number':102,'multiline':False]
['text':' Hardware specific inlinable functions.','line_number':114,'multiline':False]
['text':' Platform specific functions.','line_number':129,'multiline':False]
['text':' Bionic uses a hardcoded value.','line_number':134,'multiline':False]
['text':' Returns 0 if the number of CPUs could not be determined.','line_number':142,'multiline':False]
['text':' Gets the time faster but with less accuracy. Can call getMonotonicTime','line_number':150,'multiline':False]
['text':' if no fast version is available.','line_number':151,'multiline':False]
['text':' Our randomness gathering function is limited to 256 bytes to ensure we get','line_number':156,'multiline':False]
['text':' as many bytes as requested, and avoid interruptions (on Linux).','line_number':157,'multiline':False]
['text':' Platform memory mapping functions.','line_number':161,'multiline':False]
['text':' Our platform memory mapping use is restricted to 3 scenarios:','line_number':169,'multiline':False]
['text':' - reserve memory at a random address (MAP_NOACCESS);','line_number':170,'multiline':False]
['text':' - commit memory in a previously reserved space;','line_number':171,'multiline':False]
['text':' - commit memory at a random address.','line_number':172,'multiline':False]
['text':' As such, only a subset of parameters combinations is valid, which is checked','line_number':173,'multiline':False]
['text':' by the function implementation. The Data parameter allows to pass opaque','line_number':174,'multiline':False]
['text':' platform specific data to the function.','line_number':175,'multiline':False]
['text':' Returns nullptr on error or dies if MAP_ALLOWNOMEM is not specified.','line_number':176,'multiline':False]
['text':' Indicates that we are getting rid of the whole mapping, which might have','line_number':180,'multiline':False]
['text':' further consequences on Data, depending on the platform.','line_number':181,'multiline':False]
['text':' Internal map & unmap fatal error. This must not call map(). SizeIfOOM shall','line_number':193,'multiline':False]
['text':' hold the requested size on an out-of-memory error, 0 otherwise.','line_number':194,'multiline':False]
['text':' Logging related functions.','line_number':197,'multiline':False]
['text':' Release to OS interval in milliseconds.','line_number':209,'multiline':False]
['text':' Whether to tune tagging for UAF or overflow.','line_number':210,'multiline':False]
['text':' Whether to disable automatic heap initialization and,','line_number':211,'multiline':False]
['text':' where possible, memory tagging, on this thread.','line_number':212,'multiline':False]
['text':' Maximum number of blocks that can be cached.','line_number':213,'multiline':False]
['text':' Maximum size of a block that can be cached.','line_number':214,'multiline':False]
['text':' Number of usable TSDs for the shared registry.','line_number':215,'multiline':False]
['text':' Follow the normal rules for releasing pages to the OS','line_number':219,'multiline':False]
['text':' Force release pages to the OS, but avoid cases that take too long.','line_number':220,'multiline':False]
['text':' Force release every page possible regardless of how long it will','line_number':221,'multiline':False]
['text':' take.','line_number':222,'multiline':False]
['text':' Pattern fill unless the memory is known to be','line_number':230,'multiline':False]
['text':' zero-initialized already.','line_number':231,'multiline':False]
['text':' namespace scudo','line_number':234,'multiline':False]
['text':' SCUDO_COMMON_H_','line_number':236,'multiline':False]
