['text':' WARNING: the contents of this file must BOTH be valid Starlark (for Buck and','line_number':1,'multiline':False]
['text':' Bazel) as well as valid Python (for our cmake build).  This means that','line_number':3,'multiline':False]
['text':' load() directives are not allowed (as they are not recognized by Python).','line_number':4,'multiline':False]
['text':' If you want to fix this, figure out how run this file from cmake with a proper','line_number':5,'multiline':False]
['text':' Starlark interpreter as part of the default OSS build process.  If you need','line_number':6,'multiline':False]
['text':' some nontrivial Starlark features, make a separate bzl file (remember that','line_number':7,'multiline':False]
['text':' bzl files are not exported via ShipIt by default, so you may also need to','line_number':9,'multiline':False]
['text':' update PyTorch's ShipIt config)','line_number':10,'multiline':False]
['text':' This is duplicated in caffe2/CMakeLists.txt for now and not yet used in buck','line_number':12,'multiline':False]
['text':' copied from https://github.com/pytorch/pytorch/blob/f99a693cd9ff7a9b5fdc71357dac66b8192786d3/aten/src/ATen/core/CMakeLists.txt','line_number':36,'multiline':False]
['text':' copied from https://github.com/pytorch/pytorch/blob/0bde610c14b92d351b968a0228df29e92442b1cc/torch/CMakeLists.txt','line_number':64,'multiline':False]
['text':' There are some common files used in both internal lite-interpreter and full-jit. Making a separate','line_number':65,'multiline':False]
['text':' list for the shared files.','line_number':66,'multiline':False]
['text':' The profilers are not needed in the lite interpreter build.','line_number':95,'multiline':False]
['text':' backend_debug_info.cpp provides','line_number':145,'multiline':False]
['text':' __torch__.torch.classes.backend.BackendDebugInfo class','line_number':146,'multiline':False]
['text':' This should not be needed eventually.','line_number':147,'multiline':False]
['text':' TODO: Remove this dependency','line_number':148,'multiline':False]
['text':' backend_debug_info.cpp provides','line_number':380,'multiline':False]
['text':' __torch__.torch.classes.backend.BackendDebugInfo class','line_number':381,'multiline':False]
['text':' This should not be needed eventually.','line_number':382,'multiline':False]
['text':' TODO: Remove this dependency','line_number':383,'multiline':False]
['text':' We can't build all of the ts backend under certain build configurations, e.g. mobile,','line_number':444,'multiline':False]
['text':' since it depends on things like autograd, meta functions, which may be disabled','line_number':445,'multiline':False]
['text':' These files are the only ones that are supported on Windows.','line_number':483,'multiline':False]
['text':' These files are only supported on Linux (and others) but not on Windows.','line_number':514,'multiline':False]
['text':' Later we can split serialization and deserialization logic','line_number':592,'multiline':False]
['text':' to have better separation within build and only build relevant parts.','line_number':593,'multiline':False]
['text':' TODO: core_trainer_sources is not necessary for libtorch lite','line_number':599,'multiline':False]
['text':' To be included for eager symbolication in lite interpreter','line_number':618,'multiline':False]
['text':' when it is built in libtorch','line_number':619,'multiline':False]
['text':' These files are the only ones that are supported on Windows.','line_number':665,'multiline':False]
['text':' These files are only supported on Linux (and others) but not on Windows.','line_number':670,'multiline':False]
['text':' this just forwards stuff, no real CUDA','line_number':690,'multiline':False]
['text':' List of non-globed source used to build ATen core internally','line_number':931,'multiline':False]
['text':' This is moved to aten_cpu because some of the custom ops use empty_with_tail_padding','line_number':1064,'multiline':False]
['text':' which was available only within aten_native_cpu. Ideally the right fix is to make','line_number':1065,'multiline':False]
['text':' empty_with_tail_padding into an op and use dispatcher with it. But exposing it as an op','line_number':1066,'multiline':False]
['text':' has limited use and hence does not seem to really make sense.','line_number':1067,'multiline':False]
['text':' When building lite interpreter in OSS, "aten/src/ATen/native/cpu/AdaptiveAvgPoolKernel.cpp" will go through','line_number':1085,'multiline':False]
['text':' codegen process. The codegen version of this file, like Activation.cpp.DEFAULT.cpp, will be included','line_number':1086,'multiline':False]
['text':' in ${cpu_kernel_cpp} in aten/src/ATen/CMakeLists.txt. As a result, in aten/src/ATen/CMakeLists.txt,','line_number':1087,'multiline':False]
['text':' only aten_cpu_source_non_codegen_list need to be added to ${all_cpu_cpp}.','line_number':1088,'multiline':False]
['text':' Same as ${aten_cpu_source_codegen_list}, this list will go through aten codegen, and be included in','line_number':1091,'multiline':False]
['text':' ${cpu_kernel_cpp} in aten/src/ATen/CMakeLists.txt.','line_number':1092,'multiline':False]
['text':' This aten native source file list will not go through aten codegen process','line_number':1152,'multiline':False]
['text':' Referenced by both native and ATen/Version.cpp. Does not reference to other native symbols','line_number':1249,'multiline':False]
['text':' "aten/src/ATen/native/DispatchStub.cpp",','line_number':1250,'multiline':False]
['text':' "aten/src/ATen/native/quantized/cpu/init_qnnpack.cpp",','line_number':1251,'multiline':False]
['text':' Low-level functions that can be directly referenced','line_number':1330,'multiline':False]
['text':' "aten/src/ATen/native/UpSample.cpp",','line_number':1331,'multiline':False]
['text':' Files not in native, but depends on native symbols','line_number':1383,'multiline':False]
['text':' "aten/src/ATen/TensorIndexing.cpp",','line_number':1384,'multiline':False]
['text':' 1. Files in ATen/native with a few exceptions','line_number':1388,'multiline':False]
['text':' TODO: move the exceptions to proper locations','line_number':1389,'multiline':False]
['text':' 2. The whole aten native source list includes the list with and without aten codegen process.','line_number':1390,'multiline':False]
['text':' These are cpp files which need to go in the torch_cuda_cu library','line_number':1393,'multiline':False]
['text':' .cu files can be found via glob','line_number':1394,'multiline':False]
['text':' Files using thrust::sort_by_key need to be linked last','line_number':1422,'multiline':False]
['text':' empty_cuda is needed by torch_cuda_cpp','line_number':1424,'multiline':False]
['text':' Followings are source code for xnnpack delegate','line_number':1432,'multiline':False]
