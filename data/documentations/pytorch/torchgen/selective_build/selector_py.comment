['text':' A SelectiveBuilder holds information extracted from the selective build','line_number':17,'multiline':False]
['text':' YAML specification.','line_number':18,'multiline':False]
['text':'','line_number':19,'multiline':False]
['text':' It includes information about the build's selectivity, the debug_info','line_number':20,'multiline':False]
['text':' associated with this selective build (opaque string), and the set of','line_number':21,'multiline':False]
['text':' operators that should be included in the build.','line_number':22,'multiline':False]
['text':'','line_number':23,'multiline':False]
['text':' If true, then the build is not selective, and includes all','line_number':26,'multiline':False]
['text':' operators.','line_number':27,'multiline':False]
['text':' Debug Information at the selective/custom build level.','line_number':30,'multiline':False]
['text':' A dictionary of operator -> operator metadata.','line_number':33,'multiline':False]
['text':' A dictionary of selected kernel tags and dtypes. Typically a','line_number':36,'multiline':False]
['text':' PyTorch Operator Kernel (function) may have many code paths','line_number':37,'multiline':False]
['text':' that are specialized for many many Tensor dtypes, so it's not','line_number':38,'multiline':False]
['text':' one per kernel function, but there could be many per kernel','line_number':39,'multiline':False]
['text':' function. The tag isn't a kernel function name, but some fragment','line_number':40,'multiline':False]
['text':' of the kernel function implementation itself.','line_number':41,'multiline':False]
['text':' ExecuTorch only. A dictionary of kernel tag -> list of (list of input','line_number':44,'multiline':False]
['text':' dtypes for tensor-like input args).','line_number':45,'multiline':False]
['text':' This is from selective.yaml','line_number':46,'multiline':False]
['text':' A set of all the custom torch bind classes used by the selected models','line_number':49,'multiline':False]
['text':' Stored as a set internally to remove duplicates proactively, but written','line_number':50,'multiline':False]
['text':' as a list to yamls','line_number':51,'multiline':False]
['text':' A set of all the build features used by the selected models','line_number':54,'multiline':False]
['text':' Stored as a set internally to remove duplicates proactively, but written','line_number':55,'multiline':False]
['text':' as a list to yamls','line_number':56,'multiline':False]
['text':' If true, then fragments for all dtypes for all kernel functions','line_number':59,'multiline':False]
['text':' are included as well as all custom classes. This is typically set when any one of the','line_number':60,'multiline':False]
['text':' operator lists is generated from a mechanism other than','line_number':61,'multiline':False]
['text':' tracing based selective build.','line_number':62,'multiline':False]
['text':' type: ignore[arg-type]','line_number':132,'multiline':False]
['text':' type: ignore[arg-type]','line_number':133,'multiline':False]
['text':' If no kernel metadata, either it's implied by include_all_operators=True or the op is not used.','line_number':238,'multiline':False]
['text':' Otherwise, only return the specific kernel keys.','line_number':241,'multiline':False]
['text':' Don't compare the version for now','line_number':248,'multiline':False]
['text':' This was originally read from the 'operator_name_with_overload' field in the','line_number':345,'multiline':False]
['text':' declaration dict, which was the part before the first '(' in 'schema_string'.','line_number':346,'multiline':False]
