['text':' This file describes the translation of JIT schema to the dispatcher','line_number':17,'multiline':False]
['text':' API, the *unboxed* calling convention by which invocations through','line_number':18,'multiline':False]
['text':' the dispatcher are made.  Historically, the dispatcher API matched','line_number':19,'multiline':False]
['text':' the C++ API, but with the establishment of the boxed API, we've','line_number':20,'multiline':False]
['text':' made changes to the dispatcher API to so that the unboxed API','line_number':21,'multiline':False]
['text':' better aligns with the boxed API.  The dispatcher API hooks heavily','line_number':22,'multiline':False]
['text':' into our template based boxing/unboxing machinery, so changes','line_number':23,'multiline':False]
['text':' to this convention will usually need template updates too.','line_number':24,'multiline':False]
['text':'','line_number':25,'multiline':False]
['text':' Prominent characteristics of the dispatcher API:','line_number':26,'multiline':False]
['text':'','line_number':27,'multiline':False]
['text':'   - dtype, layout, device and pin_memory are represented as separate','line_number':28,'multiline':False]
['text':'     arguments.','line_number':29,'multiline':False]
['text':'','line_number':30,'multiline':False]
['text':' This is a faux amis.  If it makes sense in the future to add','line_number':45,'multiline':False]
['text':' more special cases here, or invert things so cpp.argument_type','line_number':46,'multiline':False]
['text':' calls this, or just completely inline the function, please do','line_number':47,'multiline':False]
['text':' it.','line_number':48,'multiline':False]
['text':' At present, there is no difference. But there could be!','line_number':75,'multiline':False]
