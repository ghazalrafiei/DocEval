['text':' Return unboxing function name for a NativeFunction','line_number':18,'multiline':False]
['text':' this is a callable that converts a JIT argument, into its C++ type.','line_number':44,'multiline':False]
['text':' Translates (type, mutability, binds) to NamedCType. E.g., torchgen.api.cpp.argumenttype_type.','line_number':45,'multiline':False]
['text':' Convert all the arguments in a NativeFunction to C++ code','line_number':51,'multiline':False]
['text':' expecting only Argument','line_number':58,'multiline':False]
['text':' handle list type with size, e.g., bool[4]','line_number':165,'multiline':False]
['text':' pytorch codegen:','line_number':173,'multiline':False]
['text':' we have to use c10::List for optional element. e.g., Tensor?[] -> c10::List<c10::optional<at::Tensor>>','line_number':174,'multiline':False]
['text':' use ArrayRef as default.','line_number':196,'multiline':False]
['text':' need to bring vector instantiation out of scope so that ArrayRef has valid data','line_number':198,'multiline':False]
