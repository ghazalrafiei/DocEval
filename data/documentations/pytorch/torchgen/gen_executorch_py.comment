['text':' Parse native_functions.yaml into a sequence of NativeFunctions and Backend Indices.','line_number':10,'multiline':False]
['text':' Here we are assuming there's no difference between CppSignature and NativeSignature for Executorch.','line_number':98,'multiline':False]
['text':' Generates Functions.h, which provides the functional public C++ API,','line_number':112,'multiline':False]
['text':' and the scaffolding to call into the dispatcher from these functions.','line_number':113,'multiline':False]
['text':' Generates RegisterCodegenUnboxedKernels.cpp.','line_number':155,'multiline':False]
['text':' parse arguments into C++ code','line_number':199,'multiline':False]
['text':' for each C++ argument, generate the conversion code','line_number':204,'multiline':False]
['text':' Iterable type for write_sharded is a Tuple of (native_function, (kernel_key, metadata))','line_number':274,'multiline':False]
['text':' Only write header once','line_number':302,'multiline':False]
['text':' type: ignore[arg-type]','line_number':309,'multiline':False]
['text':' for kernels in lean mode, we declare two versions, one with context and one without.','line_number':320,'multiline':False]
['text':' In the end we will cleanup the unused one.','line_number':321,'multiline':False]
['text':' convert kernel index to BackendIndex. This is because we can't handle ETKernelIndex yet.','line_number':350,'multiline':False]
['text':' TODO larryliu: evaluate if this code is still needed. If yes let it handle ETKernelIndex.','line_number':351,'multiline':False]
['text':' type: ignore[arg-type]','line_number':503,'multiline':False]
['text':' Write out persisted kernel information','line_number':670,'multiline':False]
['text':' Check for kernel index structure','line_number':691,'multiline':False]
['text':' Remove ET specific fields from entries for BC compatibility','line_number':696,'multiline':False]
['text':' (1) Return ETKernelIndex if kernel index is present','line_number':711,'multiline':False]
['text':' (2) Return BackendIndices if kernel index is absent','line_number':720,'multiline':False]
['text':' only include selected ops, this is because we want to avoid','line_number':767,'multiline':False]
['text':' Convert BackendIndices to ETKernelIndex','line_number':789,'multiline':False]
['text':' Although we don't refer to --source-path directly, make_file_manager()','line_number':807,'multiline':False]
['text':' expects it to point to a directory that contains a templates/ subdirectory','line_number':808,'multiline':False]
['text':' containing the file templates.','line_number':809,'multiline':False]
['text':' Note that make_file_manager() also looks at --install-dir.','line_number':834,'multiline':False]
['text':' Although we don't refer to --dry-run directly, make_file_manager() looks','line_number':847,'multiline':False]
['text':' for it.','line_number':848,'multiline':False]
['text':' generate CustomOpsNativeFunctions.h when custom_ops.yaml is present, to match the build system.','line_number':935,'multiline':False]
