['text':' DO NOT DEFINE STATIC DATA IN THIS HEADER!','line_number':3,'multiline':False]
['text':' See Note [Do not compile initializers with AVX]','line_number':4,'multiline':False]
['text':' See Note [CPU_CAPABILITY namespace]','line_number':16,'multiline':False]
['text':' bfloat16 conversion','line_number':21,'multiline':False]
['text':' uint32_t lsb = (input >> 16) & 1;','line_number':41,'multiline':False]
['text':' uint32_t rounding_bias = 0x7fff + lsb;','line_number':44,'multiline':False]
['text':' input += rounding_bias;','line_number':47,'multiline':False]
['text':' input = input >> 16;','line_number':50,'multiline':False]
['text':' Check NaN before converting back to bf16','line_number':53,'multiline':False]
['text':' t_hi[4-7] t_lo[4-7] t_hi[0-4] t_lo[0-4]','line_number':57,'multiline':False]
['text':' float16 conversion','line_number':72,'multiline':False]
['text':' dtype conversion between float16/bfloat16 and float32','line_number':94,'multiline':False]
['text':' returns an integer mask where all zero elements are translated to 1-bit and others are translated to 0-bit','line_number':168,'multiline':False]
['text':' copy sign bit (0x8000) from sign and remaining bits from values','line_number':424,'multiline':False]
['text':'is_compare_op','line_number':672,'multiline':True]
['text':' frac. Implement this here so we can use subtraction','line_number':792,'multiline':False]
['text':' Implements the IEEE 754 201X `maximum` operation, which propagates NaN if','line_number':797,'multiline':False]
['text':' either input is a NaN.','line_number':798,'multiline':False]
['text':' Exploit the fact that all-ones is a NaN.','line_number':811,'multiline':False]
['text':' Implements the IEEE 754 201X `minimum` operation, which propagates NaN if','line_number':817,'multiline':False]
['text':' either input is a NaN.','line_number':818,'multiline':False]
['text':' Exploit the fact that all-ones is a NaN.','line_number':834,'multiline':False]
['text':' Load one float vector from an array of doubles','line_number':908,'multiline':False]
['text':' frac. Implement this here so we can use subtraction','line_number':1003,'multiline':False]
['text':' Implements the IEEE 754 201X `maximum` operation, which propagates NaN if','line_number':1008,'multiline':False]
['text':' either input is a NaN.','line_number':1009,'multiline':False]
['text':' Exploit the fact that all-ones is a NaN.','line_number':1022,'multiline':False]
['text':' Implements the IEEE 754 201X `minimum` operation, which propagates NaN if','line_number':1028,'multiline':False]
['text':' either input is a NaN.','line_number':1029,'multiline':False]
['text':' Exploit the fact that all-ones is a NaN.','line_number':1045,'multiline':False]
['text':' Load one float vector from an array of doubles','line_number':1119,'multiline':False]
['text':'defined(CPU_CAPABILITY_AVX512) && !defined(_MSC_VER)','line_number':1165,'multiline':False]
['text':' defined(CPU_CAPABILITY_AVX512) && !defined(_MSC_VER)','line_number':1195,'multiline':False]
['text':' defined(CPU_CAPABILITY_AVX512) && !defined(_MSC_VER)','line_number':1216,'multiline':False]
