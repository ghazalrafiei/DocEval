['text':'*
 * class AliasInfo
 *
 * Data structure to hold aliasing information for an `Argument`. They can be
 * nested to represent aliasing information on contained types.
 *
 * There is a `beforeSet` which describes the aliasing information before the
 * operator executes, and an `afterSet` that describes aliasing info
 * after execution.
 ','line_number':9,'multiline':True]
['text':' Symbol for the set that can alias anything','line_number':21,'multiline':False]
['text':' the alias info for the contained types of the type','line_number':64,'multiline':False]
['text':' e.g. if this is an annotation on List[T], `sets` refers to','line_number':65,'multiline':False]
['text':' the alias sets that the list may be in','line_number':66,'multiline':False]
['text':' while containedTypes()[0] refers to the sets that members of the list','line_number':67,'multiline':False]
['text':' may be in','line_number':68,'multiline':False]
['text':' this does match the way things are represented in the schema','line_number':90,'multiline':False]
['text':' namespace c10','line_number':120,'multiline':False]
['text':' NOTE: for unordered_set hashes, we couldn't use hash_combine','line_number':128,'multiline':False]
['text':' because hash_combine is order dependent. Instead, we choose to','line_number':129,'multiline':False]
['text':' use XOR as the combining function as XOR is commutative.','line_number':130,'multiline':False]
