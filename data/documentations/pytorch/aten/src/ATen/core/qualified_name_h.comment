['text':' Represents a name of the form "foo.bar.baz"','line_number':11,'multiline':False]
['text':' `name` can be a dotted string, like "foo.bar.baz", or just a bare name.','line_number':15,'multiline':False]
['text':' implicit ','line_number':16,'multiline':True]
['text':' split the string into its atoms.','line_number':18,'multiline':False]
['text':' Unnecessary copy. Ideally we'd use something like std::string_view.','line_number':49,'multiline':False]
['text':' implicit ','line_number':50,'multiline':True]
['text':' `name` must be a bare name (no dots!)','line_number':53,'multiline':False]
['text':' Is `this` a prefix of `other`?','line_number':63,'multiline':False]
['text':' For example, "foo.bar" is a prefix of "foo.bar.baz"','line_number':64,'multiline':False]
['text':' Can't be a prefix if it's bigger','line_number':70,'multiline':False]
['text':' The fully qualified name, like "foo.bar.baz"','line_number':81,'multiline':False]
['text':' The leading qualifier, like "foo.bar"','line_number':86,'multiline':False]
['text':' The base name, like "baz"','line_number':91,'multiline':False]
['text':' Helper for cacheAccessors() below.','line_number':111,'multiline':False]
['text':' The actual list of names, like "{foo, bar, baz}"','line_number':142,'multiline':False]
['text':'
   * Cached accessors, derived from `atoms_`.
   ','line_number':145,'multiline':True]
['text':' namespace c10','line_number':152,'multiline':False]
['text':' namespace std','line_number':161,'multiline':False]
