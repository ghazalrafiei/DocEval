['text':' Using DistAccumType in accumulate types for distributions.','line_number':12,'multiline':False]
['text':' Note: Ideally we'd be using ATen/AccumulateType.h but looks','line_number':13,'multiline':False]
['text':' like the there is some inconsistency in how accumulate types','line_number':14,'multiline':False]
['text':' are mapped currently, e.g. for the cpu side, float is mapped','line_number':15,'multiline':False]
['text':' to double.','line_number':16,'multiline':False]
['text':'*
 * A transformation function for `torch.Tensor.random_()`, when both `from` and `to` are specified.
 * `range` is `to - from`
 * `base` is `from`
 ','line_number':33,'multiline':True]
['text':'*
 * A transformation function for `torch.Tensor.random_()`, when `from=min_value(int64_t)` and to=None
 ','line_number':43,'multiline':True]
['text':'*
 * A transformation function for `torch.Tensor.random_()`, when used without specifying `from` and `to`.
 * In order to prevent compiler warnings reported in GitHub issue 46391, T can't be float or double
 * in this overloaded version
 ','line_number':51,'multiline':True]
['text':'*
 * An overloaded transformation function for `torch.Tensor.random_()`, when used without specifying `from` and `to`,
 * added to fix compiler warnings reported in GitHub issue 46391. T is either float or double in this version.
 ','line_number':72,'multiline':True]
['text':'*
 * Transforms normally distributed `val` with mean 0.0 and standard deviation 1.0 to
 * normally distributed with `mean` and standard deviation `std`.
 ','line_number':89,'multiline':True]
['text':'*
 * Transforms uniformly distributed `val` between 0.0 and 1.0 to
 * Cauchy distribution with location parameter `median` and scale parameter `sigma`.
 ','line_number':98,'multiline':True]
['text':' https://en.wikipedia.org/wiki/Cauchy_distribution#Cumulative_distribution_function','line_number':104,'multiline':False]
['text':' __tanf overflows and returns `inf/-inf` when (val > 1 - eps) or (val < 0 + eps),','line_number':105,'multiline':False]
['text':' thus we clip those values.','line_number':106,'multiline':False]
['text':' https://en.wikipedia.org/wiki/Cauchy_distribution#Cumulative_distribution_function','line_number':117,'multiline':False]
['text':'*
 * Transforms uniformly distributed `val` between 0.0 and 1.0 to
 * exponentially distributed with `lambda` parameter of the distribution.
 ','line_number':121,'multiline':True]
['text':' https://en.wikipedia.org/wiki/Exponential_distribution#Generating_exponential_variates','line_number':127,'multiline':False]
['text':' Different implementations for CUDA and CPU to preserve original logic','line_number':128,'multiline':False]
['text':' TODO: must be investigated and unified!!!','line_number':129,'multiline':False]
['text':' https://github.com/pytorch/pytorch/issues/38662','line_number':130,'multiline':False]
['text':' BEFORE TOUCHING THIS CODE READ: https://github.com/pytorch/pytorch/issues/16706','line_number':132,'multiline':False]
['text':' curand_uniform has (0,1] bounds. log(1) is 0 and exponential excludes 0.','line_number':133,'multiline':False]
['text':' we need log to be not 0, and not underflow when converted to half','line_number':134,'multiline':False]
['text':' fast __logf approximation can underflow, so set log to -epsilon/2 for 1 or close to 1 args','line_number':135,'multiline':False]
['text':'*
 * Transforms uniformly distributed `val` between 0.0 and 1.0 to
 * geometrically distributed with success probability `p`.
 ','line_number':145,'multiline':True]
['text':' https://en.wikipedia.org/wiki/Geometric_distribution#Related_distributions','line_number':151,'multiline':False]
['text':'*
 * Transforms normally distributed `val` to log-normally distributed.
 ','line_number':155,'multiline':True]
['text':' https://en.wikipedia.org/wiki/Log-normal_distribution#Mode,_median,_quantiles','line_number':160,'multiline':False]
['text':'*
 * Transforms uniformly distributed `val` between 0.0 and 1.0 to
 * bernoulli distributed with success probability `p`.
 ','line_number':164,'multiline':True]
['text':' namespace at::transformation','line_number':173,'multiline':False]
