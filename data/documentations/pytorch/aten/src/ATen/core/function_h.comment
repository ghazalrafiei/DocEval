['text':' A Function is a pure Graph with no implicit `self` object bound.','line_number':34,'multiline':False]
['text':' It contains schema information and the executor that manages the','line_number':35,'multiline':False]
['text':' execution of the function. Method is a wrapper around an','line_number':36,'multiline':False]
['text':' underlying Function that also provides a `self` object.','line_number':37,'multiline':False]
['text':'stack','line_number':56,'multiline':True]
['text':' if this isn't yet defined, run its method_creator function','line_number':76,'multiline':False]
['text':' call() defines how different interpreter implementations interacts with','line_number':85,'multiline':False]
['text':' Function objects. Basically interpreters need to provide a callback to','line_number':86,'multiline':False]
['text':' communicate to Functions what to do if provided a Code object.','line_number':87,'multiline':False]
['text':' Alternatively we could design the signature to return an optional Code','line_number':88,'multiline':False]
['text':' object, but that requires special handling the null case in interpreter','line_number':89,'multiline':False]
['text':' and the fallback behavior is not well defined by interpreter but rather','line_number':90,'multiline':False]
['text':' Function themselves, so a callback approach is more reasonable than','line_number':91,'multiline':False]
['text':' returning values.','line_number':92,'multiline':False]
['text':' If call() returns true, then callback completes successfully, otherwise','line_number':93,'multiline':False]
['text':' call() returns false.','line_number':94,'multiline':False]
['text':' Overload for server interpreter, a bailout size is needed for graph executor.','line_number':96,'multiline':False]
['text':' Overload for mobile interpreter.','line_number':102,'multiline':False]
['text':' namespace jit','line_number':110,'multiline':False]
['text':' namespace torch','line_number':111,'multiline':False]
