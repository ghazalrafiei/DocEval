['text':' This global header must not depend on native_functions.yaml or','line_number':1,'multiline':False]
['text':' incremental builds will be next to useless','line_number':2,'multiline':False]
['text':' This macro doesn't work if defined after the first time inttypes.h','line_number':6,'multiline':False]
['text':' is included, so won't work anywhere if not defined here.','line_number':7,'multiline':False]
['text':' This list of headers was generated using a script that finds','line_number':13,'multiline':False]
['text':' high-impact headers and then manually tweaked to remove OS specific','line_number':14,'multiline':False]
['text':' or duplicate headers (e.g. <cassert> and <assert.h>) and to remove','line_number':15,'multiline':False]
['text':' "impl" headers (e.g BFloat16-inl.h or complex_math.h in c10).','line_number':16,'multiline':False]
['text':' To generate the initial list:','line_number':18,'multiline':False]
['text':' 1. Build pytorch from scratch with all build caching disabled','line_number':19,'multiline':False]
['text':' 2. Generate a build trace with ninjatracing (https://github.com/nico/ninjatracing)','line_number':20,'multiline':False]
['text':'    $ ninjatracing /path/to/pytorch/build/.ninja_log > trace_all.json','line_number':21,'multiline':False]
['text':' 3. Run pch_gen.py from https://github.com/peterbell10/build_analysis/','line_number':22,'multiline':False]
['text':'    $ python pch_gen.py --threshold .80 --target torch_cpu --build_dir /path/to/pytorch/build --trace trace_all.json','line_number':23,'multiline':False]
['text':'    Where the threshold can be tweaked until c10 and some of ATen','line_number':24,'multiline':False]
['text':'    core are included but TORCH_ASSERT_NO_OPERATORS still passes.','line_number':25,'multiline':False]
