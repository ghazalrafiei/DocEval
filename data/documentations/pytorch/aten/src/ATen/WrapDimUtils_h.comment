['text':' if dim_post_expr is 0 and wrap_scalar is true, then dim must be in the','line_number':11,'multiline':False]
['text':' range [-1, 0]. This is a special case for scalar tensors and manifests in','line_number':12,'multiline':False]
['text':' e.g. torch.sum(scalar_tensor, 0) Otherwise, dim should be in the range','line_number':13,'multiline':False]
['text':' [-dim_post_expr, dim_post_expr-1].','line_number':14,'multiline':False]
['text':' can't wrap empty TensorList; rely on underlying implementation to throw','line_number':23,'multiline':False]
['text':' error if necessary.','line_number':24,'multiline':False]
['text':' can't wrap empty list; rely on underlying implementation to throw error','line_number':34,'multiline':False]
['text':' if necessary','line_number':35,'multiline':False]
['text':' Given an array of dimensions `dims` of length `ndims`, this function "Wraps"','line_number':41,'multiline':False]
['text':' each dim in-place for a tensor of rank `dim_post_expr`, allowing dims to be','line_number':42,'multiline':False]
['text':' specified using negative indices.','line_number':43,'multiline':False]
['text':'','line_number':44,'multiline':False]
['text':' Additionally, if `wrap_scalar` is true then scalar tensors with rank 0, will','line_number':45,'multiline':False]
['text':' allow dimensions in the range [-1, 0]. Otherwise, an IndexError is raised for','line_number':46,'multiline':False]
['text':' dimensions not in the range [-dim_post_expr, dim_post_expr).','line_number':47,'multiline':False]
['text':' this will make range [-1, 0]','line_number':55,'multiline':False]
['text':' Given a contiguous container of dimensions `dims`, this function "Wraps"','line_number':85,'multiline':False]
['text':' each dim in-place for a tensor of rank `dim_post_expr`, allowing dims to be','line_number':86,'multiline':False]
['text':' specified using negative indices.','line_number':87,'multiline':False]
['text':'','line_number':88,'multiline':False]
['text':' Additionally, if `wrap_scalar` is true then scalar tensors with rank 0, will','line_number':89,'multiline':False]
['text':' allow dimensions in the range [-1, 0]. Otherwise, an IndexError is raised for','line_number':90,'multiline':False]
['text':' dimensions not in the range [-dim_post_expr, dim_post_expr).','line_number':91,'multiline':False]
['text':' previously, size [0] tensors were the only possible empty tensors; thus, it','line_number':101,'multiline':False]
['text':' wasn't possible to cat empty tensors unless all the other tensors were','line_number':102,'multiline':False]
['text':' 1-dimensional, so we allowed these tensors to be "skipped" (both for wrap','line_number':103,'multiline':False]
['text':' dimension behavior and dimension size checking). We maintain this behavior','line_number':104,'multiline':False]
['text':' for backwards compatibility, but only for this specific size (i.e. other','line_number':105,'multiline':False]
['text':' empty sizes are not skipped).','line_number':106,'multiline':False]
['text':' wrap negative dims in a vector','line_number':144,'multiline':False]
['text':' namespace at','line_number':153,'multiline':False]
