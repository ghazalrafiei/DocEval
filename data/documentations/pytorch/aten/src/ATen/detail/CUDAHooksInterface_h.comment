['text':' Forward-declares at::Generator and at::cuda::NVRTC','line_number':7,'multiline':False]
['text':' namespace cuda','line_number':12,'multiline':False]
['text':' namespace at','line_number':13,'multiline':False]
['text':' NB: Class must live in `at` due to limitations of Registry.h.','line_number':15,'multiline':False]
['text':' The CUDAHooksInterface is an omnibus interface for any CUDA functionality','line_number':44,'multiline':False]
['text':' which we may want to call into from CPU code (and thus must be dynamically','line_number':45,'multiline':False]
['text':' dispatched, to allow for separate compilation of CUDA code).  How do I','line_number':46,'multiline':False]
['text':' decide if a function should live in this class?  There are two tests:','line_number':47,'multiline':False]
['text':'','line_number':48,'multiline':False]
['text':'  1. Does the *implementation* of this function require linking against','line_number':49,'multiline':False]
['text':'     CUDA libraries?','line_number':50,'multiline':False]
['text':'','line_number':51,'multiline':False]
['text':'  2. Is this function *called* from non-CUDA ATen code?','line_number':52,'multiline':False]
['text':'','line_number':53,'multiline':False]
['text':' (2) should filter out many ostensible use-cases, since many times a CUDA','line_number':54,'multiline':False]
['text':' function provided by ATen is only really ever used by actual CUDA code.','line_number':55,'multiline':False]
['text':'','line_number':56,'multiline':False]
['text':' TODO: Consider putting the stub definitions in another class, so that one','line_number':57,'multiline':False]
['text':' never forgets to implement each virtual function in the real implementation','line_number':58,'multiline':False]
['text':' in CUDAHooks.  This probably doesn't buy us much though.','line_number':59,'multiline':False]
['text':' This should never actually be implemented, but it is used to','line_number':61,'multiline':False]
['text':' squelch -Werror=non-virtual-dtor','line_number':62,'multiline':False]
['text':' Initialize THCState and, transitively, the CUDA state','line_number':65,'multiline':False]
['text':'data','line_number':74,'multiline':True]
['text':'data','line_number':78,'multiline':True]
['text':'device_index','line_number':163,'multiline':True]
['text':'device_index','line_number':167,'multiline':True]
['text':'max_size','line_number':167,'multiline':True]
['text':'device_index','line_number':171,'multiline':True]
['text':'device_index','line_number':175,'multiline':True]
['text':'device_index','line_number':183,'multiline':True]
['text':' NB: dummy argument to suppress "ISO C++11 requires at least one argument','line_number':188,'multiline':False]
['text':' for the "..." in a variadic macro"','line_number':189,'multiline':False]
['text':' namespace detail','line_number':198,'multiline':False]
['text':' namespace at','line_number':199,'multiline':False]
