['text':'','line_number':8,'multiline':False]
['text':' A caching allocator for CUDA host allocations (pinned memory).','line_number':9,'multiline':False]
['text':'','line_number':10,'multiline':False]
['text':' This provides a drop-in replacement for THCudaHostAllocator, which re-uses','line_number':11,'multiline':False]
['text':' freed pinned (page-locked) memory allocations. This avoids device','line_number':12,'multiline':False]
['text':' synchronizations due to cudaFreeHost calls.','line_number':13,'multiline':False]
['text':'','line_number':14,'multiline':False]
['text':' To ensure correct behavior, THCCachingHostAllocator_recordEvent must be','line_number':15,'multiline':False]
['text':' called anytime a pointer from this allocator is used in a cudaMemcpyAsync','line_number':16,'multiline':False]
['text':' call between host and device, and passed the corresponding context from the','line_number':17,'multiline':False]
['text':' allocation. This is currently invoked by at::native::copy_kernel_cuda.','line_number':18,'multiline':False]
['text':'','line_number':19,'multiline':False]
['text':' Note that this allocator does not split larger allocations into smaller','line_number':20,'multiline':False]
['text':' blocks, unlike the caching device allocator.','line_number':21,'multiline':False]
['text':'','line_number':22,'multiline':False]
['text':' Records an event in the specified stream. The allocation corresponding to the','line_number':25,'multiline':False]
['text':' input `ptr`/`ctx` will not be re-used until the event has occurred.','line_number':26,'multiline':False]
['text':' Releases cached pinned memory allocations via cudaHostFree','line_number':30,'multiline':False]
['text':' namespace at::cuda','line_number':37,'multiline':False]
