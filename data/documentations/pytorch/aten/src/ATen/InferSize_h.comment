['text':' Infers the size of a dim with size -1, if it exists. Also checks that new','line_number':13,'multiline':False]
['text':' shape is compatible with the number of elements.','line_number':14,'multiline':False]
['text':'','line_number':15,'multiline':False]
['text':' templated to handle std::vector<int64_t> and DimVector use cases, see','line_number':16,'multiline':False]
['text':' below','line_number':17,'multiline':False]
['text':'','line_number':18,'multiline':False]
['text':' N.B. this is an index, not a sym dim!','line_number':25,'multiline':False]
['text':' We have a degree of freedom here to select the dimension size; follow','line_number':42,'multiline':False]
['text':' NumPy semantics and just bail.  However, a nice error message is needed','line_number':43,'multiline':False]
['text':' because users often use `view` as a way to flatten & unflatten','line_number':44,'multiline':False]
['text':' dimensions and will otherwise be confused why','line_number':45,'multiline':False]
['text':'   empty_tensor.view( 0, 0)','line_number':46,'multiline':False]
['text':' works yet','line_number':47,'multiline':False]
['text':'   empty_tensor.view(-1, 0)','line_number':48,'multiline':False]
['text':' doesn't.','line_number':49,'multiline':False]
['text':' namespace at','line_number':87,'multiline':False]
