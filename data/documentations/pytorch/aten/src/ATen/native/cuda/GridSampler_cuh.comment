['text':' Unnormalizes a coordinate from the -1 to +1 scale to its pixel index value,','line_number':10,'multiline':False]
['text':' where we view each pixel as an area between (idx - 0.5) and (idx + 0.5).','line_number':11,'multiline':False]
['text':' if align_corners: -1 and +1 get sent to the centers of the corner pixels','line_number':12,'multiline':False]
['text':'     -1 --> 0','line_number':13,'multiline':False]
['text':'     +1 --> (size - 1)','line_number':14,'multiline':False]
['text':'     scale_factor = (size - 1) / 2','line_number':15,'multiline':False]
['text':' if not align_corners: -1 and +1 get sent to the image edges','line_number':16,'multiline':False]
['text':'     -1 --> -0.5','line_number':17,'multiline':False]
['text':'     +1 --> (size - 1) + 0.5 == size - 0.5','line_number':18,'multiline':False]
['text':'     scale_factor = size / 2','line_number':19,'multiline':False]
['text':' unnormalize coord from [-1, 1] to [0, size - 1]','line_number':24,'multiline':False]
['text':' unnormalize coord from [-1, 1] to [-0.5, size - 0.5]','line_number':27,'multiline':False]
['text':' grid_sampler_unnormalize_set_grad works the same as grid_sampler_unnormalize','line_number':32,'multiline':False]
['text':' except that it also returns the `d output / d input` via pointer argument','line_number':33,'multiline':False]
['text':' `grad_in`.','line_number':34,'multiline':False]
['text':' This is useful in the backward pass of grid_sampler.','line_number':35,'multiline':False]
['text':' unnormalize coord from [-1, 1] to [0, size - 1]','line_number':41,'multiline':False]
['text':' unnormalize coord from [-1, 1] to [-0.5, size - 0.5]','line_number':45,'multiline':False]
['text':' Clips coordinates to between 0 and clip_limit - 1','line_number':51,'multiline':False]
['text':' clip_coordinates_set_grad works similarly to clip_coordinates except that','line_number':58,'multiline':False]
['text':' it also returns the `d output / d input` via pointer argument `grad_in`.','line_number':59,'multiline':False]
['text':' This is useful in the backward pass of grid_sampler.','line_number':60,'multiline':False]
['text':' Note that it is important for the gradient calculation that borders','line_number':64,'multiline':False]
['text':' are considered out of bounds.','line_number':65,'multiline':False]
['text':' Reflects coordinates until they fall between low and high (inclusive).','line_number':81,'multiline':False]
['text':' The bounds are passed as twice their value so that half-integer values','line_number':82,'multiline':False]
['text':' can be represented as ints.','line_number':83,'multiline':False]
['text':' `fmod` returns same sign as `in`, which is positive after the `fabs` above.','line_number':93,'multiline':False]
['text':' reflect_coordinates_set_grad works similarly to reflect_coordinates except','line_number':103,'multiline':False]
['text':' that it also returns the `d output / d input` via pointer argument','line_number':104,'multiline':False]
['text':' `grad_in`.','line_number':105,'multiline':False]
['text':' This is useful in the backward pass of grid_sampler.','line_number':106,'multiline':False]
['text':' `fmod` returns same sign as `in`, which is positive after the `if` above.','line_number':125,'multiline':False]
['text':' -100.0 does not have special meaning. This is just to make sure','line_number':140,'multiline':False]
['text':' it's not within_bounds_2d or within_bounds_3d, and does not cause','line_number':141,'multiline':False]
['text':' undefined behavior. See #35506.','line_number':142,'multiline':False]
['text':' clip coordinates to image borders','line_number':154,'multiline':False]
['text':' reflect coordinates by image borders','line_number':157,'multiline':False]
['text':' clip coordinates to image borders','line_number':163,'multiline':False]
['text':' Computes the pixel source index value for a grid coordinate','line_number':171,'multiline':False]
['text':' grid_sampler_compute_source_index_set_grad works similarly to','line_number':184,'multiline':False]
['text':' grid_sampler_compute_source_index except that it also returns the','line_number':185,'multiline':False]
['text':' `d output / d input` via pointer argument `grad_in`.','line_number':186,'multiline':False]
['text':' This is useful in the backward pass of grid_sampler.','line_number':187,'multiline':False]
['text':' clip coordinates to image borders','line_number':199,'multiline':False]
['text':' reflect coordinates by image borders','line_number':203,'multiline':False]
['text':' clip coordinates to image borders','line_number':209,'multiline':False]
['text':' Calculate the differential of the cubic convolution, i.e. `d coeff / d x`','line_number':298,'multiline':False]
['text':' Must be the same as forward calculation in','line_number':305,'multiline':False]
['text':' aten/src/ATen/native/cuda/UpSample.cuh:get_cubic_upsample_coefficients','line_number':306,'multiline':False]
['text':' 1 < x = |-1 - tx| < 2','line_number':310,'multiline':False]
['text':' x = |0 - tx| <= 1','line_number':312,'multiline':False]
['text':' x = |1 - tx| <= 1','line_number':314,'multiline':False]
['text':' 1 < x = |2 - tx| < 2','line_number':316,'multiline':False]
['text':' namespace at::native','line_number':321,'multiline':False]
