['text':' Segmented sort by full sort algorithm:.','line_number':29,'multiline':False]
['text':' Say we are sorting a (2, 3) tensor. We have in flattened form:','line_number':30,'multiline':False]
['text':' values       0.4 1.2 5.3 6.2 1.3 2.3','line_number':31,'multiline':False]
['text':' indices        0   1   2   0   1   2','line_number':32,'multiline':False]
['text':' segment_id     0   0   0   1   1   1','line_number':33,'multiline':False]
['text':' First we sort by values, globally:','line_number':35,'multiline':False]
['text':' values       6.2 5.3 2.3 1.2 1.3 0.4','line_number':36,'multiline':False]
['text':' indices        0   2   2   1   1   0','line_number':37,'multiline':False]
['text':' segment_id     1   0   1   0   1   0','line_number':38,'multiline':False]
['text':' Then we stable sort by segment id:','line_number':40,'multiline':False]
['text':' values       5.3 1.2 0.4 6.2 2.3 1.3','line_number':41,'multiline':False]
['text':' indices        2   1   0   0   2   1','line_number':42,'multiline':False]
['text':' segment_id     0   0   0   1   1   1','line_number':43,'multiline':False]
['text':' This method can only work if the slice we are sorting (`dim`) is','line_number':45,'multiline':False]
['text':' innermost, and both values and indices are contiguous. We do this','line_number':46,'multiline':False]
['text':' by re-arranging the input into this form as needed, which will','line_number':47,'multiline':False]
['text':' unfortunately allocate memory if the request is not in this form.','line_number':48,'multiline':False]
['text':' Vectorized sort is slower than iterated sort if the number of','line_number':49,'multiline':False]
['text':' slices is small (since we're sorting twice, instead of invoking a','line_number':50,'multiline':False]
['text':' smaller sort `numSlices` times), but the cub sort','line_number':51,'multiline':False]
['text':' implementation here is a catch-all, so we're not looking for','line_number':52,'multiline':False]
['text':' efficiency, but instead correctness.','line_number':53,'multiline':False]
['text':' sort on lower 32bits, i.e. segment index','line_number':165,'multiline':False]
['text':' namespace','line_number':216,'multiline':False]
['text':' rough heuristics where even a single','line_number':258,'multiline':False]
['text':' sort occupies GPU','line_number':259,'multiline':False]
['text':' namespace at::native','line_number':296,'multiline':False]
