['text':' Invalid entries always sort to the end','line_number':30,'multiline':False]
['text':' at::cuda::detail::TensorInfo version','line_number':84,'multiline':False]
['text':' Sorts (key, value) pairs (in different tensors) in-place; i.e.,','line_number':85,'multiline':False]
['text':' modifies the input `keys` and `values`','line_number':86,'multiline':False]
['text':' Find the slice of the tensor that we are sorting','line_number':98,'multiline':False]
['text':' NOTE: blockDim.y may be less max_block_dim_y','line_number':99,'multiline':False]
['text':' If the entire block is out of bounds exit early','line_number':103,'multiline':False]
['text':' It's also possible for some rows of a block to be out of bounds','line_number':107,'multiline':False]
['text':' but all thread need to run for __syncthreads to work.','line_number':108,'multiline':False]
['text':' Storage for max_block_dim_y sorts performed in parallel','line_number':114,'multiline':False]
['text':' Load 2 values per thread into the shared workspace','line_number':128,'multiline':False]
['text':' Sort!','line_number':141,'multiline':False]
['text':' Store outputs','line_number':149,'multiline':False]
['text':' Find the slice of the tensor that we are sorting','line_number':175,'multiline':False]
['text':' NOTE: blockDim.y may be less max_block_dim_y','line_number':176,'multiline':False]
['text':' If this row is out of bounds exit early','line_number':180,'multiline':False]
['text':' Load inputs','line_number':222,'multiline':False]
['text':' Sort! We use stable sort to ensure that invalid values are never','line_number':232,'multiline':False]
['text':' sorted before valid values. In testing it performed the same as','line_number':233,'multiline':False]
['text':' .Sort, so there is no down-side.','line_number':234,'multiline':False]
['text':' Store outputs','line_number':239,'multiline':False]
['text':' HAS_WARP_MERGE_SORT()','line_number':245,'multiline':False]
['text':' Find the slice of the tensor that we are sorting','line_number':261,'multiline':False]
['text':' Tiling the slices could have us be out of bounds, if there are a','line_number':263,'multiline':False]
['text':' lot of slices to sort','line_number':264,'multiline':False]
['text':' cub's Block operations operate on a fixed number of items, but the','line_number':301,'multiline':False]
['text':' actual slice we are sorting might be smaller. So, we need to make','line_number':302,'multiline':False]
['text':' up the difference with keys that will always sort higher.','line_number':303,'multiline':False]
['text':' Load inputs','line_number':317,'multiline':False]
['text':' Sort!','line_number':326,'multiline':False]
['text':' Store outputs','line_number':338,'multiline':False]
['text':' at::native','line_number':344,'multiline':False]
