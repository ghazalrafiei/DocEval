['text':'windows doesn't like large string literals, so split in two','line_number':3,'multiline':False]
['text':' until ROCm support for kernel asserts is restored','line_number':11,'multiline':False]
['text':' aligned vector generates vectorized load/store on CUDA','line_number':41,'multiline':False]
['text':' get GCD of num and denom using Euclid's algorithm.','line_number':49,'multiline':False]
['text':' Can replace this with std::gcd if we ever support c++17.','line_number':50,'multiline':False]
['text':' swap(a,b)','line_number':55,'multiline':False]
['text':' a is now the GCD','line_number':61,'multiline':False]
['text':'has to match host-side ReduceConfig in the eager code','line_number':70,'multiline':False]
['text':'TODO this will need to be different for more generic reduction functions','line_number':150,'multiline':False]
['text':'idx','line_number':168,'multiline':True]
['text':' wrap a normal reduction that ignores the index','line_number':172,'multiline':False]
['text':'   static constexpr bool can_accumulate_in_output =','line_number':187,'multiline':False]
['text':'     std::is_convertible<arg_t, out_scalar_t>::value','line_number':188,'multiline':False]
['text':'     && std::is_convertible<out_scalar_t, arg_t>::value;','line_number':189,'multiline':False]
['text':'it accepts at most two destinations','line_number':198,'multiline':False]
['text':' acc_buf used for accumulation among sub Tensor Iterator when accumulation on','line_number':199,'multiline':False]
['text':' output is not permissible','line_number':200,'multiline':False]
['text':' cta_buf used for accumulation between blocks during global reduction','line_number':202,'multiline':False]
['text':' reduce at the header of input_slice where memory is not aligned,','line_number':294,'multiline':False]
['text':' so that thread_reduce will have an aligned memory to work on.','line_number':295,'multiline':False]
['text':' Handle the head of input slice where data is not aligned','line_number':313,'multiline':False]
['text':' Do the vectorized reduction','line_number':329,'multiline':False]
['text':' Multiple accumulators to remove dependency between unrolled loops.','line_number':335,'multiline':False]
['text':' tail','line_number':357,'multiline':False]
['text':' combine accumulators','line_number':366,'multiline':False]
['text':' Multiple accumulators to remove dependency between unrolled loops.','line_number':385,'multiline':False]
['text':' tail','line_number':413,'multiline':False]
['text':' combine accumulators','line_number':436,'multiline':False]
['text':'TODO - multi-output reduction - we won't be able to use thrust::pair','line_number':544,'multiline':False]
['text':'just explicitly specify typed output reads/writes','line_number':545,'multiline':False]
['text':'Currently implemented for max of two outputs','line_number':546,'multiline':False]
['text':'   template<class T1, class T2>','line_number':547,'multiline':False]
['text':'   C10_DEVICE void set_results(const thrust::pair<T1, T2> x, const index_t base_offset) const {','line_number':548,'multiline':False]
['text':'     if (noutputs >= 1) {','line_number':549,'multiline':False]
['text':'       auto res0 = (T1*)((char*)dst[0] + base_offset);','line_number':550,'multiline':False]
['text':'       *res0 = x.first;','line_number':551,'multiline':False]
['text':'     }','line_number':552,'multiline':False]
['text':'     if (noutputs >= 2) {','line_number':553,'multiline':False]
['text':'       // base offset is computed assuming element size being sizeof(T1), so we need to make a','line_number':554,'multiline':False]
['text':'       // correction to obtain the correct base offset','line_number':555,'multiline':False]
['text':'       auto res1 = (T2*) ((char *) dst[1] + base_offset / sizeof(T1) * sizeof(T2));','line_number':556,'multiline':False]
['text':'       *res1 = x.second;','line_number':557,'multiline':False]
['text':'     }','line_number':558,'multiline':False]
['text':'   }','line_number':559,'multiline':False]
['text':' make sure writes are globally visible','line_number':593,'multiline':False]
['text':' if multiple warps in this block wrote to staging, make sure they're all done','line_number':594,'multiline':False]
