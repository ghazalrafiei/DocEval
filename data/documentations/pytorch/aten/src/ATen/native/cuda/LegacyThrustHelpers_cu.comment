['text':' Fill sortedOrigIndices with sequential indices','line_number':30,'multiline':False]
['text':' Sort the inputs into sorted with the corresponding indices; we','line_number':35,'multiline':False]
['text':' don't need a stable or multidimensional sort, so just use Thrust','line_number':36,'multiline':False]
['text':' directly','line_number':37,'multiline':False]
['text':' Sort; a stable sort is not required','line_number':38,'multiline':False]
['text':' NB - not passing comparator causes thrust to use radix sort, and it hurts perf A LOT, at least for medium (few K) sized indices','line_number':39,'multiline':False]
['text':' Compute an increasing sequence per unique item in sortedIndices:','line_number':54,'multiline':False]
['text':' sorted: 2 5 5 5 7 7 8 9 9','line_number':55,'multiline':False]
['text':'  count: 1 1 2 3 1 2 1 1 2','line_number':56,'multiline':False]
['text':' Take the maximum of each count per unique key in reverse:','line_number':67,'multiline':False]
['text':' sorted: 2 5 5 5 7 7 8 9 9','line_number':68,'multiline':False]
['text':'  count: 1 3 3 3 2 2 1 2 2','line_number':69,'multiline':False]
['text':' namespace at::native','line_number':112,'multiline':False]
