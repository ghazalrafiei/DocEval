['text':' custom min and max to be used in logcumsumexp for complex arguments','line_number':14,'multiline':False]
['text':' min','line_number':23,'multiline':False]
['text':' max','line_number':25,'multiline':False]
['text':' Reference : https://www.tensorflow.org/api_docs/python/tf/math/cumulative_logsumexp','line_number':32,'multiline':False]
['text':' Using the original expression: `at::_isnan(y) ? y : std::min(x, y)` causes an error in ROCM','line_number':33,'multiline':False]
['text':' nan will be propagated here','line_number':39,'multiline':False]
['text':' special case to correctly handle infinite cases','line_number':42,'multiline':False]
['text':' complex exponential function, but implemented manually to get fast compilation time','line_number':49,'multiline':False]
['text':' this function only handles the case where the x is finite (not inf nor nan)','line_number':50,'multiline':False]
['text':' complex exponential function, but implemented manually to get fast compilation time','line_number':61,'multiline':False]
['text':' this function only handles the case where the real part of x is infinite','line_number':62,'multiline':False]
['text':' special case if the angle is exactly the multiple of pi/2','line_number':67,'multiline':False]
['text':'min=','line_number':75,'multiline':True]
['text':'min=','line_number':76,'multiline':True]
['text':' handling the "infectious" NaNs','line_number':81,'multiline':False]
['text':' handle the -inf case, the imaginary part here does not really matter as the exp(value)','line_number':86,'multiline':False]
['text':' will be around 0.0 and the angle (i.e. the imaginary part) cannot be determined.','line_number':87,'multiline':False]
['text':' It does not matter if we're taking the exp of this value','line_number':88,'multiline':False]
['text':' handle the +inf case, we don't need the special precision for log1p for small values','line_number':91,'multiline':False]
['text':' and to avoid producing nan in case of real(max) == real(min) == +inf','line_number':92,'multiline':False]
['text':' log1p(x - 1) builds faster than log','line_number':95,'multiline':False]
['text':' Compile time for CUDA-11.4 is 3x slower than with CUDA-11.6+, specifically for complex numbers','line_number':105,'multiline':False]
['text':' namespace at::native','line_number':124,'multiline':False]
