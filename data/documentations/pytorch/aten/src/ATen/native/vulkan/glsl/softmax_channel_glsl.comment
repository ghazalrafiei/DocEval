['text':' Qualifiers: layout - storage - precision - memory ','line_number':7,'multiline':True]
['text':'
 * Output Image
 ','line_number':9,'multiline':True]
['text':'
 * Input Buffer
 ','line_number':14,'multiline':True]
['text':'
 * Params Buffer
 * input_shader_extents is the dimensions of the Vulkan 3D texture XYZ
 * with a zero pad at W.
 * input_tensor_dims is the dimensions of the NCHW PyTorch Tensor.
 * input_dim_stride is the stride to include elements along the softmax
 * dimension calculation. early_exit is the global workgroup position-based
 * condition for unnecessary invocations to exit.
 ','line_number':19,'multiline':True]
['text':'
 * Local Work Group Size
 ','line_number':36,'multiline':True]
['text':' how "wide" a batch is in terms of z. Only have one invocation per batch,','line_number':43,'multiline':False]
['text':' as one batch width has elements from every channel in-memory.','line_number':44,'multiline':False]
['text':' tail case, padded zeros in memory if tensor's channel dim % 4 != 0','line_number':50,'multiline':False]
['text':' Calculate the denominator for the whole dimension.','line_number':55,'multiline':False]
['text':' For numerical stability to avoid floating point overflow,','line_number':56,'multiline':False]
['text':' we leverage the translation invariance of the softmax function,','line_number':57,'multiline':False]
['text':' subtracting every element along channel by the maximum element along','line_number':58,'multiline':False]
['text':' channel. find the maximum element','line_number':59,'multiline':False]
['text':' Calculate the denominator.','line_number':77,'multiline':False]
['text':' Calculate every final channel element.','line_number':91,'multiline':False]
