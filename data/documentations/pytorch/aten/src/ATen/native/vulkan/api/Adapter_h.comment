['text':' Handle','line_number':19,'multiline':False]
['text':' Properties obtained from Vulkan','line_number':22,'multiline':False]
['text':' Metadata','line_number':27,'multiline':False]
['text':'','line_number':54,'multiline':False]
['text':' A Vulkan Adapter represents a logical device and all its properties. It','line_number':55,'multiline':False]
['text':' manages all relevant properties of the underlying physical device, a','line_number':56,'multiline':False]
['text':' handle to the logical device, and a number of compute queues available to','line_number':57,'multiline':False]
['text':' the device. It is primarily responsible for managing the VkDevice handle','line_number':58,'multiline':False]
['text':' which points to the logical device object on the GPU.','line_number':59,'multiline':False]
['text':'','line_number':60,'multiline':False]
['text':' This class is primarily used by the Runtime class, which holds one Adapter','line_number':61,'multiline':False]
['text':' instance for each physical device visible to the VkInstance. Upon','line_number':62,'multiline':False]
['text':' construction, this class will populate the physical device properties, but','line_number':63,'multiline':False]
['text':' will not create the logical device until specifically requested via the','line_number':64,'multiline':False]
['text':' init_device() funtion.','line_number':65,'multiline':False]
['text':'','line_number':66,'multiline':False]
['text':' init_device() will create the logical device and obtain the VkDevice handle','line_number':67,'multiline':False]
['text':' for it. It will also create a number of compute queues up to the amount','line_number':68,'multiline':False]
['text':' requested when the Adapter instance was constructed.','line_number':69,'multiline':False]
['text':'','line_number':70,'multiline':False]
['text':' Contexts (which represent one thread of execution) will request a compute','line_number':71,'multiline':False]
['text':' queue from an Adapter. The Adapter will then select a compute queue to','line_number':72,'multiline':False]
['text':' assign to the Context, attempting to balance load between all available','line_number':73,'multiline':False]
['text':' queues. This will allow different Contexts (which typically execute on','line_number':74,'multiline':False]
['text':' separate threads) to run concurrently.','line_number':75,'multiline':False]
['text':'','line_number':76,'multiline':False]
['text':' Use a mutex to manage queue usage info since','line_number':103,'multiline':False]
['text':' it can be accessed from multiple threads','line_number':104,'multiline':False]
['text':' Physical Device Info','line_number':106,'multiline':False]
['text':' Queue Management','line_number':108,'multiline':False]
['text':' Handles','line_number':112,'multiline':False]
['text':' Device-level resource caches','line_number':115,'multiline':False]
['text':' Memory Management','line_number':120,'multiline':False]
['text':' Physical Device metadata','line_number':125,'multiline':False]
['text':' Queue Management','line_number':151,'multiline':False]
['text':' Caches','line_number':156,'multiline':False]
['text':' Memory Allocation','line_number':174,'multiline':False]
['text':' Command Buffer Submission','line_number':184,'multiline':False]
['text':' Miscellaneous','line_number':196,'multiline':False]
['text':' namespace api','line_number':210,'multiline':False]
['text':' namespace vulkan','line_number':211,'multiline':False]
['text':' namespace native','line_number':212,'multiline':False]
['text':' namespace at','line_number':213,'multiline':False]
['text':' USE_VULKAN_API ','line_number':215,'multiline':True]
