['text':'','line_number':11,'multiline':False]
['text':' Utility functions for memcpy','line_number':12,'multiline':False]
['text':'','line_number':13,'multiline':False]
['text':'','line_number':59,'multiline':False]
['text':' CPU <-> GPU copy implementations (these functions use Transfer commands)','line_number':60,'multiline':False]
['text':'','line_number':61,'multiline':False]
['text':' Convert to dtype corresponding to the image format of the texture to','line_number':66,'multiline':False]
['text':' ensure that byte alignment is consistent when copying. In some cases','line_number':67,'multiline':False]
['text':' a 16 bit format will be used for at::kFloat.','line_number':68,'multiline':False]
['text':' Copy data into the staging buffer','line_number':72,'multiline':False]
['text':' Temporary tensor to receive copied NC4HW data','line_number':87,'multiline':False]
['text':' Refer to comment in submit_compute_job. When syncing with the GPU, the','line_number':95,'multiline':False]
['text':' context must not allow other threads to record dispatches into it between','line_number':96,'multiline':False]
['text':' between calling vkQueueSubmit and flushing the context. Therefore,','line_number':97,'multiline':False]
['text':' cmd_mutex_ must be manually managed by the calling thread.','line_number':98,'multiline':False]
['text':' cmd_mutex_ will be released when exiting this scope.','line_number':108,'multiline':False]
['text':' Copy data from buffer back to CPU tensor.','line_number':111,'multiline':False]
['text':' pipeline barrier','line_number':130,'multiline':False]
['text':' images','line_number':132,'multiline':False]
['text':' copy details','line_number':138,'multiline':False]
['text':' fence handle','line_number':142,'multiline':False]
['text':'','line_number':146,'multiline':False]
['text':' CPU <-> GPU copy implementations (these functions use compute shaders)','line_number':147,'multiline':False]
['text':'','line_number':148,'multiline':False]
['text':' Ensure that src is contiguous in its memory format','line_number':153,'multiline':False]
['text':' Note that the float data type has been enforced for the storage buffer','line_number':156,'multiline':False]
['text':' below. The reason for this is that the nchw_to_image and image_to_nchw','line_number':157,'multiline':False]
['text':' shaders which perform the transfer to/from an image texture expect a buffer','line_number':158,'multiline':False]
['text':' of floats as input. GLSL/Vulkan does not natively support 16 bit arithmetic','line_number':159,'multiline':False]
['text':' types, so for now storage buffers created for compute shaders must define','line_number':160,'multiline':False]
['text':' floats as their base data type.','line_number':161,'multiline':False]
['text':' If the dtype() of src is at::kHalf, then first convert it to 32 bit','line_number':166,'multiline':False]
['text':' float. This is required since the nchw_to_image shader uses a float','line_number':167,'multiline':False]
['text':' buffer as input (note that at::kFloat is used to create the StorageBuffer','line_number':168,'multiline':False]
['text':' above).','line_number':169,'multiline':False]
['text':' Refer to the comment in pack_cpu_to_vulkan for why at::kFloat is specified','line_number':185,'multiline':False]
['text':' for the storage buffer below.','line_number':186,'multiline':False]
['text':' Refer to comment in submit_compute_job. When syncing with the GPU, the','line_number':192,'multiline':False]
['text':' context must not allow other threads to record dispatches into it between','line_number':193,'multiline':False]
['text':' between calling vkQueueSubmit and flushing the context. Therefore,','line_number':194,'multiline':False]
['text':' cmd_mutex_ must be manually managed by the calling thread.','line_number':195,'multiline':False]
['text':' Only wait on the fence if work was actually submitted to the GPU.','line_number':201,'multiline':False]
['text':' Otherwise, it will hang indefinitely.','line_number':202,'multiline':False]
['text':' cmd_mutex_ will be released when exiting this scope.','line_number':208,'multiline':False]
['text':' Copy data from buffer back to CPU tensor.','line_number':211,'multiline':False]
['text':' If the dtype() of dst is at::kHalf, then copy the data into a float','line_number':216,'multiline':False]
['text':' version of it first, similar to pack_cpu_to_vulkan().','line_number':217,'multiline':False]
['text':'','line_number':230,'multiline':False]
['text':' Copy op implementations','line_number':231,'multiline':False]
['text':'','line_number':232,'multiline':False]
['text':' Check that sizes are equal','line_number':235,'multiline':False]
['text':' X -> Vulkan','line_number':239,'multiline':False]
['text':' Vulkan -> Vulkan','line_number':243,'multiline':False]
['text':' CPU -> Vulkan','line_number':248,'multiline':False]
['text':' Vulkan -> X','line_number':253,'multiline':False]
['text':' Vulkan -> CPU','line_number':257,'multiline':False]
['text':'','line_number':313,'multiline':False]
['text':' VulkanImpl','line_number':314,'multiline':False]
['text':'','line_number':315,'multiline':False]
['text':' namespace ops','line_number':328,'multiline':False]
['text':' namespace vulkan','line_number':329,'multiline':False]
['text':' namespace native','line_number':330,'multiline':False]
['text':' namespace at','line_number':331,'multiline':False]
