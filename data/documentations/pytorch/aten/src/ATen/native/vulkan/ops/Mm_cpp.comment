['text':' Only non-batch, non-quantized tensors are supported','line_number':51,'multiline':False]
['text':' Rest of the logic are either quantized or batched.','line_number':92,'multiline':False]
['text':' Source ','line_number':104,'multiline':True]
['text':' Destination ','line_number':108,'multiline':True]
['text':' Source ','line_number':113,'multiline':True]
['text':' Destination ','line_number':120,'multiline':True]
['text':' no need to check bias since it is not used.','line_number':179,'multiline':False]
['text':' Only check the consistency of batch and width dimension. The height','line_number':189,'multiline':False]
['text':' dimension consistency is unchecked, due to the 2nd input which determines','line_number':190,'multiline':False]
['text':' the height is not passed into LinearPackedContext.','line_number':191,'multiline':False]
['text':' skip batch dim for boardcasting; index -1','line_number':202,'multiline':False]
['text':' skip batch & height dim for boardcasting; index -2','line_number':208,'multiline':False]
['text':' shader descriptor','line_number':405,'multiline':False]
['text':' pipeline barrier','line_number':407,'multiline':False]
['text':' global work group size','line_number':409,'multiline':False]
['text':' local work group size','line_number':417,'multiline':False]
['text':' fence handle','line_number':419,'multiline':False]
['text':' shader arguments','line_number':421,'multiline':False]
['text':' params buffer','line_number':429,'multiline':False]
['text':' no bias','line_number':432,'multiline':False]
['text':' shader descriptor','line_number':477,'multiline':False]
['text':' pipeline barrier','line_number':479,'multiline':False]
['text':' global work group size','line_number':481,'multiline':False]
['text':' local work group size','line_number':489,'multiline':False]
['text':' fence handle','line_number':491,'multiline':False]
['text':' shader arguments','line_number':493,'multiline':False]
['text':' params buffer','line_number':500,'multiline':False]
['text':' Step size is the 2d input's w dimension / 4.','line_number':577,'multiline':False]
['text':' shader descriptor','line_number':593,'multiline':False]
['text':' pipeline barrier','line_number':595,'multiline':False]
['text':' global work group size','line_number':597,'multiline':False]
['text':' local work group size','line_number':605,'multiline':False]
['text':' fence handle','line_number':607,'multiline':False]
['text':' shader arguments','line_number':609,'multiline':False]
['text':' params buffer','line_number':616,'multiline':False]
['text':' addmm operation, multiplying the alpha and adding bias.','line_number':621,'multiline':False]
['text':' TODO: Refactor run_baddbmm_context and run_addmm_context into one.','line_number':641,'multiline':False]
['text':'use batch','line_number':661,'multiline':True]
['text':' In the shader, each batch is computed in separate invocation.','line_number':677,'multiline':False]
['text':' The result is stored in the .x position of the texel.','line_number':678,'multiline':False]
['text':' As the tensor by default is channel packed, the shader is effectively','line_number':679,'multiline':False]
['text':' producing 3 all-zeros layer. We workaround this issue by creating','line_number':680,'multiline':False]
['text':' a vTensor that is 4 times the batch size.','line_number':681,'multiline':False]
['text':' At the end of the computation, we run a "slice" with a step-size of 4','line_number':682,'multiline':False]
['text':' to get back the original shape.','line_number':683,'multiline':False]
['text':' Step size is the input's w dimension / 4.','line_number':687,'multiline':False]
['text':' "w" dimension in weight matrix','line_number':696,'multiline':False]
['text':' shader descriptor','line_number':714,'multiline':False]
['text':' pipeline barrier','line_number':716,'multiline':False]
['text':' global work group size','line_number':718,'multiline':False]
['text':' local work group size','line_number':727,'multiline':False]
['text':' fence handle','line_number':729,'multiline':False]
['text':' shader arguments','line_number':731,'multiline':False]
['text':' params buffer','line_number':738,'multiline':False]
['text':' After computing the multiplication, we need to slice 4 on the batch','line_number':741,'multiline':False]
['text':' dimension to get the channel packed layout.','line_number':742,'multiline':False]
['text':'use batch','line_number':786,'multiline':True]
['text':'use batch','line_number':800,'multiline':True]
['text':' USE_VULKAN_API ','line_number':812,'multiline':True]
['text':' namespace','line_number':814,'multiline':False]
['text':' namespace ops','line_number':874,'multiline':False]
['text':' namespace vulkan','line_number':875,'multiline':False]
['text':' namespace native','line_number':876,'multiline':False]
['text':' namespace at','line_number':877,'multiline':False]
