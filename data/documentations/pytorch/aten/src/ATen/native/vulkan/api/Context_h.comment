['text':'','line_number':27,'multiline':False]
['text':' Vulkan Context holds onto all relevant Vulkan state as it pertains to our','line_number':28,'multiline':False]
['text':' use of Vulkan in PyTorch.  A Context is associated with one, and only one,','line_number':29,'multiline':False]
['text':' Adapter as a precursor to multi-GPU support.  All Vulkan tensors in PyTorch','line_number':30,'multiline':False]
['text':' are associated with a Context to make tensor <-> device affinity explicit.','line_number':31,'multiline':False]
['text':' The context is currently a global object, but technically it does not need','line_number':32,'multiline':False]
['text':' to be if we were to make it explicit to the user.','line_number':33,'multiline':False]
['text':'','line_number':34,'multiline':False]
['text':' Config','line_number':49,'multiline':False]
['text':' Important handles','line_number':51,'multiline':False]
['text':' Resource Pools','line_number':55,'multiline':False]
['text':' Diagnostics','line_number':59,'multiline':False]
['text':' TODO: remove USE_VULKAN_GPU_DIAGNOSTICS','line_number':60,'multiline':False]
['text':' USE_VULKAN_GPU_DIAGNOSTICS ','line_number':64,'multiline':True]
['text':' Command buffers submission','line_number':65,'multiline':False]
['text':' Memory Management','line_number':69,'multiline':False]
['text':' Adapter access','line_number':76,'multiline':False]
['text':' Device Caches','line_number':102,'multiline':False]
['text':' Resource Pools','line_number':120,'multiline':False]
['text':' Diagnostics','line_number':130,'multiline':False]
['text':' USE_VULKAN_GPU_DIAGNOSTICS ','line_number':141,'multiline':True]
['text':' Memory Management','line_number':143,'multiline':False]
['text':' GPU RPC','line_number':154,'multiline':False]
['text':' The global runtime is retrieved using this function, where it is declared as','line_number':278,'multiline':False]
['text':' a static local variable.','line_number':279,'multiline':False]
['text':' bool(buffer) will evaluate to false if no memory has been allocated','line_number':285,'multiline':False]
['text':' bool(image) will evaluate to false if no memory has been allocated','line_number':290,'multiline':False]
['text':'
  Reports if any VulkanBuffer or VulkanImage argument in a variadic argument
  list does not have any memory associated with it.
 ','line_number':294,'multiline':True]
['text':' namespace detail','line_number':320,'multiline':False]
['text':'
  Records a GPU data copy into the current command buffer. If the number of
  submit_*_job calls exceeds the configured frequency, or if a fence is
  provided, then the command buffer is submitted to the GPU for execution.
  Returns a bool indicating whether or not the function call resulted in a GPU
  queue submission.
 ','line_number':379,'multiline':True]
['text':' If any of the provided arguments does not have memory associated with it,','line_number':395,'multiline':False]
['text':' then exit early as there is no work to be done. However, if a fence has','line_number':396,'multiline':False]
['text':' been passed the command buffer is not empty, then the current command','line_number':397,'multiline':False]
['text':' buffer must still be submitted so that the fence can be signaled.','line_number':398,'multiline':False]
['text':' Serialize recording to the shared command buffer. Do not initialize with a','line_number':407,'multiline':False]
['text':' mutex just yet, since in some cases it will be externally managed.','line_number':408,'multiline':False]
['text':' Refer to comments in submit_compute_job for explanation.','line_number':410,'multiline':False]
['text':' USE_VULKAN_GPU_DIAGNOSTICS ','line_number':424,'multiline':True]
['text':' USE_VULKAN_GPU_DIAGNOSTICS ','line_number':434,'multiline':True]
['text':'
  Records a compute shader dispatch into the current command buffer. If the
  number of submit_*_job calls exceeds the configured frequency, or if a fence
  is provided, then the command buffer is submitted to the GPU for execution.
  Returns a bool indicating whether or not the function call resulted in a GPU
  queue submission.
 ','line_number':445,'multiline':True]
['text':' If any of the provided arguments does not have memory associated with it,','line_number':460,'multiline':False]
['text':' then exit early as there is no work to be done. However, if a fence has','line_number':461,'multiline':False]
['text':' been passed the command buffer is not empty, then the current command','line_number':462,'multiline':False]
['text':' buffer must still be submitted so that the fence can be signaled.','line_number':463,'multiline':False]
['text':' Serialize recording to the shared command buffer. Do not initialize with a','line_number':472,'multiline':False]
['text':' mutex just yet, since in some cases it will be externally managed.','line_number':473,'multiline':False]
['text':' If a fence was passed, then assume that the host intends to sync with','line_number':475,'multiline':False]
['text':' the GPU, implying there will be imminent calls to fence.wait() and flush().','line_number':476,'multiline':False]
['text':' We therefore assume the mutex is externally managed in this case, and the','line_number':477,'multiline':False]
['text':' calling thread has already locked the mutex prior to calling the function,','line_number':478,'multiline':False]
['text':' and will release the mutex manually after calling flush(). This will','line_number':479,'multiline':False]
['text':' prevent more dispatches from being recorded until we have flushed the','line_number':480,'multiline':False]
['text':' Context.','line_number':481,'multiline':False]
['text':' USE_VULKAN_GPU_DIAGNOSTICS ','line_number':497,'multiline':True]
['text':' Factor out template parameter independent code to minimize code bloat.','line_number':499,'multiline':False]
['text':' Adjust the global workgroup size based on the output tile size','line_number':508,'multiline':False]
['text':' Factor out template parameter independent code to minimize code bloat.','line_number':515,'multiline':False]
['text':' USE_VULKAN_GPU_DIAGNOSTICS ','line_number':523,'multiline':True]
['text':' namespace api','line_number':535,'multiline':False]
['text':' namespace vulkan','line_number':536,'multiline':False]
['text':' namespace native','line_number':537,'multiline':False]
['text':' namespace at','line_number':538,'multiline':False]
['text':' USE_VULKAN_API ','line_number':540,'multiline':True]
