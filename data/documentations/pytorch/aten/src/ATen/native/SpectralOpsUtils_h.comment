['text':' Normalization types used in _fft_with_size','line_number':10,'multiline':False]
['text':' No normalization','line_number':12,'multiline':False]
['text':' Divide by sqrt(signal_size)','line_number':13,'multiline':False]
['text':' Divide by signal_size','line_number':14,'multiline':False]
['text':' NOTE [ Fourier Transform Conjugate Symmetry ]','line_number':17,'multiline':False]
['text':'','line_number':18,'multiline':False]
['text':' Real-to-complex Fourier transform satisfies the conjugate symmetry. That is,','line_number':19,'multiline':False]
['text':' assuming X is the transformed K-dimensionsal signal, we have','line_number':20,'multiline':False]
['text':'','line_number':21,'multiline':False]
['text':'     X[i_1, ..., i_K] = X[j_i, ..., j_K]*,','line_number':22,'multiline':False]
['text':'','line_number':23,'multiline':False]
['text':'       where j_k  = (N_k - i_k)  mod N_k, N_k being the signal size at dim k,','line_number':24,'multiline':False]
['text':'             * is the conjugate operator.','line_number':25,'multiline':False]
['text':'','line_number':26,'multiline':False]
['text':' Therefore, in such cases, FFT libraries return only roughly half of the','line_number':27,'multiline':False]
['text':' values to avoid redundancy:','line_number':28,'multiline':False]
['text':'','line_number':29,'multiline':False]
['text':'     X[:, :, ..., :floor(N / 2) + 1]','line_number':30,'multiline':False]
['text':'','line_number':31,'multiline':False]
['text':' This is also the assumption in cuFFT and MKL. In ATen SpectralOps, such','line_number':32,'multiline':False]
['text':' halved signal will also be returned by default (flag onesided=True).','line_number':33,'multiline':False]
['text':' The following infer_ft_real_to_complex_onesided_size function calculates the','line_number':34,'multiline':False]
['text':' onesided size from the twosided size.','line_number':35,'multiline':False]
['text':'','line_number':36,'multiline':False]
['text':' Note that this loses some information about the size of signal at last','line_number':37,'multiline':False]
['text':' dimension. E.g., both 11 and 10 maps to 6. Hence, the following','line_number':38,'multiline':False]
['text':' infer_ft_complex_to_real_onesided_size function takes in optional parameter','line_number':39,'multiline':False]
['text':' to infer the twosided size from given onesided size.','line_number':40,'multiline':False]
['text':'','line_number':41,'multiline':False]
['text':' cuFFT doc: http://docs.nvidia.com/cuda/cufft/index.html#multi-dimensional','line_number':42,'multiline':False]
['text':' MKL doc: https://software.intel.com/en-us/mkl-developer-reference-c-dfti-complex-storage-dfti-real-storage-dfti-conjugate-even-storage#CONJUGATE_EVEN_STORAGE','line_number':43,'multiline':False]
['text':' In real-to-complex transform, cuFFT and MKL only fill half of the values','line_number':72,'multiline':False]
['text':' due to conjugate symmetry. This function fills in the other half of the full','line_number':73,'multiline':False]
['text':' fft by using the Hermitian symmetry in the signal.','line_number':74,'multiline':False]
['text':' self should be the shape of the full signal and dims.back() should be the','line_number':75,'multiline':False]
['text':' one-sided dimension.','line_number':76,'multiline':False]
['text':' See NOTE [ Fourier Transform Conjugate Symmetry ]','line_number':77,'multiline':False]
['text':' namespace at::native','line_number':80,'multiline':False]
