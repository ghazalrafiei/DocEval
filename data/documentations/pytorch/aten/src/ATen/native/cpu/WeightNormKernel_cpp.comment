['text':' vertical parallel reduction','line_number':141,'multiline':False]
['text':' reuse the first row of buffer to store g / norm','line_number':159,'multiline':False]
['text':' apply w = v * (g/norm)','line_number':169,'multiline':False]
['text':' grad_g = sum / norm','line_number':207,'multiline':False]
['text':' grad_v = (g / norm) * (grad_w - v * (sum / norm^2))','line_number':208,'multiline':False]
['text':'  let a = g /norm','line_number':209,'multiline':False]
['text':'      b = a * grad_g / norm','line_number':210,'multiline':False]
['text':' grad_v = a * grad_w - b * v','line_number':211,'multiline':False]
['text':' the temp buffer will be used twice:','line_number':334,'multiline':False]
['text':' 1. vertical reduction from [M, N] to [T, N]','line_number':335,'multiline':False]
['text':' 2. store the intermediate data of `sum`, `a` and `b`,','line_number':336,'multiline':False]
['text':'    so need to make sure it has at least 3 rows','line_number':337,'multiline':False]
['text':'','line_number':338,'multiline':False]
['text':' vertical parallel reduction','line_number':344,'multiline':False]
['text':' store result on the first row of buffer','line_number':354,'multiline':False]
['text':' reuse the 1st row of buffer to store the sum','line_number':363,'multiline':False]
['text':' 2nd row to store coefficient a','line_number':364,'multiline':False]
['text':' 3rd row to store coefficient b','line_number':365,'multiline':False]
['text':' a = g /norm','line_number':370,'multiline':False]
['text':' b = a * grad_g / norm','line_number':371,'multiline':False]
['text':' apply grad_v = a * grad_w - b * v','line_number':382,'multiline':False]
['text':' anonymous namespace','line_number':444,'multiline':False]
['text':' at::native','line_number':449,'multiline':False]
