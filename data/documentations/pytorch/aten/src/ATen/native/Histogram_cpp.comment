['text':' Implements a numpy-like histogramdd function running on cpu
 * https://numpy.org/doc/stable/reference/generated/numpy.histogramdd.html
 *
 * See the docstr for torch.histogramdd in torch/functional.py for further explanation.
 *
 * - torch.histogramdd(input, bins, range=None, weight=None, density=False)
 *   input     - tensor with shape (M, N). input is interpreted as M coordinates in N-dimensional space.
 *               If a tensor with more than 2 dimensions is passed, all but the last dimension will be flattened.
 *   bins      - int[] of length N or tensor list of length N. If int[], defines the number of equal-width bins
 *               in each dimension. If tensor list, defines the sequences of bin edges, including rightmost edges,
 *               for each dimension.
 *   range     - float[] of length 2 * N, optional. If specified, defines the leftmost and rightmost bin edges
 *               for each dimension.
 *   weight    - tensor, optional. If provided, weight should have the same shape as input excluding its last dimension.
 *               Each N-dimensional value in input contributes its associated weight towards its bin's result.
 *               If weight is not specified, each value has weight 1 by default.
 *   density   - bool, optional. If false (default), the result will contain the total count (weight) in each bin.
 *               If True, each count (weight) is divided by the total count (total weight), then divided by the
 *               volume of its associated bin.
 *
 * Returns:
 *   hist      - N-dimensional tensor containing the values of the histogram.
 *   bin_edges - tensor list of length N containing the edges of the histogram bins in each dimension.
 *               Bins include their left edge and exclude their right edge, with the exception of the
 *               rightmost bin in each dimension which includes both of its edges.
 *
 * Restrictions are defined in histogram_check_inputs() and in select_outer_bin_edges().
 ','line_number':35,'multiline':True]
['text':' Checks properties of input tensors input, bins, and weight.
 ','line_number':72,'multiline':True]
['text':' If a weight tensor is provided, we expect its shape to match that of
         * the input tensor excluding its innermost dimension N.
         ','line_number':106,'multiline':True]
['text':' correctly handle scalars','line_number':114,'multiline':False]
['text':' Checks properties of output tensors hist and bin_edges, then resizes them.
 ','line_number':124,'multiline':True]
['text':' Determines the outermost bin edges. For simplicity when calling into aminmax,
 * assumes that input has already been reshaped to (M, N).
 ','line_number':157,'multiline':True]
['text':' Default ranges for empty input matching numpy.histogram's default','line_number':165,'multiline':False]
['text':' range is specified','line_number':170,'multiline':False]
['text':' non-empty input','line_number':179,'multiline':False]
['text':' Expand empty range to match numpy behavior and avoid division by 0 in normalization','line_number':195,'multiline':False]
['text':' histc's version of the logic for outermost bin edges.
 ','line_number':205,'multiline':True]
['text':' namespace','line_number':232,'multiline':False]
['text':' Versions of histogramdd in which bins is a Tensor[] defining the sequences of bin edges.
 ','line_number':244,'multiline':True]
['text':' Versions of histogramdd in which bins is an int[]
 * defining the number of bins in each dimension.
 ','line_number':270,'multiline':True]
['text':' Versions of histogram in which bins is a Tensor defining the sequence of bin edges.
 ','line_number':333,'multiline':True]
['text':' Versions of histogram in which bins is an integer specifying the number of equal-width bins.
 ','line_number':358,'multiline':True]
['text':' Narrowed interface for the legacy torch.histc function.
 ','line_number':388,'multiline':True]
['text':'range','line_number':417,'multiline':True]
['text':' namespace at::native','line_number':440,'multiline':False]
