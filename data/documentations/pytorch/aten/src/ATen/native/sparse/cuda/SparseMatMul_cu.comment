['text':' NVCC complains that confirm_mult_size is not used,','line_number':71,'multiline':False]
['text':' but it is used in specializations of CusparseMatrixMultiplyOp below','line_number':72,'multiline':False]
['text':' Function was declared but never referenced','line_number':73,'multiline':False]
['text':' csrMatrixRef is used to have a representation of a raw CSR matrix representation','line_number':96,'multiline':False]
['text':' comming from `sparse_sparse_matmul_cuda_kernel` function.','line_number':97,'multiline':False]
['text':' Moreover this implements a RAII guard for a cusparse descriptor','line_number':98,'multiline':False]
['text':' csrOutput is used to represent the output for `CusparseMatrixMultiplyOp`','line_number':162,'multiline':False]
['text':' Note that `csrOutput` is different from `csrMatrixRef` and the purpose','line_number':163,'multiline':False]
['text':' of this was to have a materialized  version of a CSR matrix.','line_number':164,'multiline':False]
['text':' Moreover this implements a RAII guard for a cusparse descriptor','line_number':165,'multiline':False]
['text':' RAII guard helps to support cuSparse 11 API for `A @ B` operation','line_number':190,'multiline':False]
['text':' This generic template exists because with cuSparse the `scalar_t` type could be a double or float','line_number':191,'multiline':False]
['text':' SpGEMM Computation','line_number':206,'multiline':False]
['text':' destroy matrix/vector descriptors','line_number':211,'multiline':False]
['text':'nnz','line_number':241,'multiline':True]
['text':'--------------------------------------------------------------------------','line_number':245,'multiline':False]
['text':' CUSPARSE APIs','line_number':246,'multiline':False]
['text':'--------------------------------------------------------------------------','line_number':254,'multiline':False]
['text':' If a specific GPU model does not provide native support for a given data type,','line_number':258,'multiline':False]
['text':' the routine returns CUSPARSE_STATUS_ARCH_MISMATCH error','line_number':259,'multiline':False]
['text':' ask bufferSize1 bytes for external memory','line_number':266,'multiline':False]
['text':' inspect the matrices A and B to understand the memory requiremnent for','line_number':286,'multiline':False]
['text':' the next step','line_number':287,'multiline':False]
['text':' ask bufferSize2 bytes for external memory','line_number':303,'multiline':False]
['text':' compute the intermediate product of A * B','line_number':322,'multiline':False]
['text':' get matrix C non-zero entries C_num_nnz1','line_number':337,'multiline':False]
['text':' allocate matrix C','line_number':341,'multiline':False]
['text':' allocate C offsets','line_number':342,'multiline':False]
['text':' update matC with the new pointers','line_number':350,'multiline':False]
['text':' copy the final products to the matrix C','line_number':354,'multiline':False]
['text':' if not IS_CUSPARSE11_AVAILABLE()','line_number':376,'multiline':False]
['text':' RAII guard helps to support cuSparse 10 API for `A @ B` operation','line_number':381,'multiline':False]
['text':' This generic template exists because with cuSparse the `scalar_t` type could be a double or float','line_number':382,'multiline':False]
['text':' Specializacion for `A @ B` operation for double values with cuSparse','line_number':395,'multiline':False]
['text':' Compute needed buffer size','line_number':432,'multiline':False]
['text':' (Re)allocate buffer if needed','line_number':456,'multiline':False]
['text':' Find the resulting non-zero pattern.','line_number':461,'multiline':False]
['text':' Perform the gemm2 operation for doubles','line_number':488,'multiline':False]
['text':' out = alpha ∗ A ∗ B + beta ∗ C','line_number':489,'multiline':False]
['text':' Specializacion for `A @ B` operation for float values with cuSparse','line_number':522,'multiline':False]
['text':' Compute needed buffer size','line_number':561,'multiline':False]
['text':' Find the resulting non-zero pattern.','line_number':589,'multiline':False]
['text':' Perform the gemm2 operation for doubles','line_number':616,'multiline':False]
['text':' out = alpha ∗ A ∗ B + beta ∗ C','line_number':617,'multiline':False]
['text':' IS_CUSPARSE11_AVAILABLE()','line_number':652,'multiline':False]
['text':' older versions of cusparse on Windows segfault for complex128 dtype','line_number':669,'multiline':False]
['text':' Sparse matrix multiplication','line_number':730,'multiline':False]
['text':' Filling the COO row indices','line_number':750,'multiline':False]
['text':' Filling the COO column indices','line_number':767,'multiline':False]
['text':' end anonymous namespace','line_number':782,'multiline':False]
['text':' namespace native','line_number':814,'multiline':False]
['text':' namespace at','line_number':815,'multiline':False]
