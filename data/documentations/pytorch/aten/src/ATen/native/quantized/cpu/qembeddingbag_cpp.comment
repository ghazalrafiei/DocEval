['text':' Fallback implementation when FBGEMM is not available.','line_number':31,'multiline':False]
['text':' NOLINTNEXTLINE(cppcoreguidelines-init-variables)','line_number':70,'multiline':False]
['text':' NOLINTNEXTLINE(cppcoreguidelines-init-variables)','line_number':82,'multiline':False]
['text':' NOLINTNEXTLINE(cppcoreguidelines-init-variables)','line_number':105,'multiline':False]
['text':' for each i','line_number':187,'multiline':False]
['text':' for each m','line_number':189,'multiline':False]
['text':' namespace','line_number':220,'multiline':False]
['text':' Get compressed indices for pruned_weights op.','line_number':239,'multiline':False]
['text':' if compressed_indices_mapping is [0], it is a indicator that','line_number':248,'multiline':False]
['text':' we should fallback to non sparse embedding look up kernel.','line_number':249,'multiline':False]
['text':' NB: 2-byte fp16 scale and 2-byte zero_offset','line_number':260,'multiline':False]
['text':' Avoid `null pointer passed as argument 2` ASAN violation when offsets','line_number':268,'multiline':False]
['text':' tensor is empty.','line_number':269,'multiline':False]
['text':' NOLINTNEXTLINE(cppcoreguidelines-pro-type-member-init)','line_number':280,'multiline':False]
['text':' Generate the fbgemm kernel','line_number':306,'multiline':False]
['text':'bit rate=','line_number':308,'multiline':True]
['text':'block size=','line_number':309,'multiline':True]
['text':'has weights=','line_number':310,'multiline':True]
['text':'normalize_by_lengths=','line_number':311,'multiline':True]
['text':'prefetch distance=','line_number':312,'multiline':True]
['text':'is_weight_positional=','line_number':313,'multiline':True]
['text':'use_offsets=','line_number':314,'multiline':True]
['text':'output_size=','line_number':317,'multiline':True]
['text':'index_size=','line_number':318,'multiline':True]
['text':'data_size=','line_number':319,'multiline':True]
['text':'input=','line_number':320,'multiline':True]
['text':'indices=','line_number':321,'multiline':True]
['text':'offsets=','line_number':322,'multiline':True]
['text':'weights=','line_number':323,'multiline':True]
['text':'output=','line_number':327,'multiline':True]
['text':'bit rate=','line_number':336,'multiline':True]
['text':'block_size=','line_number':337,'multiline':True]
['text':'has weights=','line_number':338,'multiline':True]
['text':'normalize_by_lengths=','line_number':339,'multiline':True]
['text':'prefetch distance','line_number':340,'multiline':True]
['text':'is_weight_positional','line_number':341,'multiline':True]
['text':'use_offsets','line_number':342,'multiline':True]
['text':'output_size=','line_number':344,'multiline':True]
['text':'index_size=','line_number':345,'multiline':True]
['text':'data_size=','line_number':346,'multiline':True]
['text':'input=','line_number':347,'multiline':True]
['text':'indices=','line_number':348,'multiline':True]
['text':'offsets=','line_number':349,'multiline':True]
['text':'weights=','line_number':350,'multiline':True]
['text':'output=','line_number':354,'multiline':True]
['text':'compressed_indices_table=','line_number':355,'multiline':True]
['text':' bit_width == 2','line_number':380,'multiline':False]
['text':' Get compressed indices for pruned_weights.','line_number':411,'multiline':False]
['text':' if compressed_indices_mapping is [0], it is a indicator that','line_number':420,'multiline':False]
['text':' we should fallback to non sparse embedding look up kernel.','line_number':421,'multiline':False]
['text':' NB: -8 to account for scale and bias','line_number':429,'multiline':False]
['text':' Avoid `null pointer passed as argument 2` ASAN violation when offsets','line_number':438,'multiline':False]
['text':' tensor is empty.','line_number':439,'multiline':False]
['text':' NOLINTNEXTLINE(cppcoreguidelines-pro-type-member-init)','line_number':450,'multiline':False]
['text':'OutType=','line_number':475,'multiline':True]
['text':'TRHEAD_LOCAL=','line_number':475,'multiline':True]
['text':'block_size=','line_number':476,'multiline':True]
['text':'has_weight=','line_number':477,'multiline':True]
['text':'normalize_by_lengths=','line_number':478,'multiline':True]
['text':'prefetch=','line_number':479,'multiline':True]
['text':' NOLINT(cppcoreguidelines-avoid-magic-numbers)','line_number':479,'multiline':False]
['text':'is_weight_positional=','line_number':480,'multiline':True]
['text':'use_offsets=','line_number':481,'multiline':True]
['text':'output_size=','line_number':486,'multiline':True]
['text':'index_size=','line_number':487,'multiline':True]
['text':'data_size=','line_number':488,'multiline':True]
['text':'input=','line_number':489,'multiline':True]
['text':'indices=','line_number':490,'multiline':True]
['text':'offsets_or_lengths=','line_number':491,'multiline':True]
['text':'weights=','line_number':492,'multiline':True]
['text':'out=','line_number':497,'multiline':True]
['text':' pruned weights','line_number':509,'multiline':False]
['text':'block_size=','line_number':512,'multiline':True]
['text':'has_weight=','line_number':513,'multiline':True]
['text':'normalize_by_lengths=','line_number':514,'multiline':True]
['text':'prefetch=','line_number':515,'multiline':True]
['text':' NOLINT(cppcoreguidelines-avoid-magic-numbers)','line_number':515,'multiline':False]
['text':'is_weight_positional=','line_number':516,'multiline':True]
['text':'use_offsets=','line_number':517,'multiline':True]
['text':'output_size=','line_number':520,'multiline':True]
['text':'index_size=','line_number':521,'multiline':True]
['text':'data_size=','line_number':522,'multiline':True]
['text':'input=','line_number':523,'multiline':True]
['text':'indices=','line_number':524,'multiline':True]
['text':'offsets=','line_number':525,'multiline':True]
['text':'weights=','line_number':526,'multiline':True]
['text':'output=','line_number':530,'multiline':True]
['text':'compressed_indices_table=','line_number':531,'multiline':True]
['text':' For embedding_bag operator with 2D indices, we set the offsets explicitly','line_number':572,'multiline':False]
['text':' here.','line_number':573,'multiline':False]
['text':' Using helper function to support different type combination without the','line_number':602,'multiline':False]
['text':' need to cast, which can be additional performance overhead','line_number':603,'multiline':False]
['text':' default case given the TORCH_CHECK above','line_number':641,'multiline':False]
['text':' For embedding_bag operator with 2D indices, we need to set the offsets','line_number':675,'multiline':False]
['text':' explicitly here.','line_number':676,'multiline':False]
['text':' Using helper function to support different type combination without the','line_number':706,'multiline':False]
['text':' need to cast, which can be additional performance overhead','line_number':707,'multiline':False]
['text':' namespace','line_number':759,'multiline':False]
['text':' scale_grad_by_freq ','line_number':823,'multiline':True]
['text':' mode ','line_number':824,'multiline':True]
['text':' is_embedding_op ','line_number':838,'multiline':True]
['text':' scale_grad_by_freq ','line_number':846,'multiline':True]
['text':' mode ','line_number':847,'multiline':True]
['text':' scale_grad_by_freq ','line_number':881,'multiline':True]
['text':' mode ','line_number':882,'multiline':True]
['text':' scale_grad_by_freq ','line_number':925,'multiline':True]
['text':' mode ','line_number':926,'multiline':True]
['text':'unused scale_grad_by_freq','line_number':937,'multiline':True]
['text':'unused mode','line_number':938,'multiline':True]
['text':' scale_grad_by_freq ','line_number':950,'multiline':True]
['text':' mode ','line_number':951,'multiline':True]
['text':' unused scale_grad_by_freq','line_number':962,'multiline':False]
['text':' unused mode','line_number':963,'multiline':False]
['text':' scale_grad_by_freq ','line_number':975,'multiline':True]
['text':' mode ','line_number':976,'multiline':True]
['text':' unused scale_grad_by_freq','line_number':987,'multiline':False]
['text':' unused mode','line_number':988,'multiline':False]
['text':' scale_grad_by_freq ','line_number':1000,'multiline':True]
['text':' mode ','line_number':1001,'multiline':True]
['text':' pruned_weights ','line_number':1002,'multiline':True]
['text':' per_sample_weights_ ','line_number':1003,'multiline':True]
['text':' compressed_indices_mapping ','line_number':1004,'multiline':True]
['text':' NB: -8 to account for scale and bias','line_number':1028,'multiline':False]
['text':' scale_grad_by_freq ','line_number':1042,'multiline':True]
['text':' mode ','line_number':1043,'multiline':True]
['text':' is_embedding_op ','line_number':1056,'multiline':True]
['text':' Set default offsets here since the FBGEMM lookup op expects it.','line_number':1081,'multiline':False]
['text':' include_last_offset ','line_number':1092,'multiline':True]
['text':' is_embedding_op ','line_number':1093,'multiline':True]
['text':' Function that works on TorchBind packed weights.','line_number':1113,'multiline':False]
['text':' Functions that work on at::Tensor packed weight.','line_number':1127,'multiline':False]
['text':' namespace','line_number':1145,'multiline':False]
['text':' namespace native','line_number':1146,'multiline':False]
['text':' namespace at','line_number':1147,'multiline':False]
