['text':' Batch Normalization','line_number':37,'multiline':False]
['text':' output(n, c, h, w)','line_number':38,'multiline':False]
['text':'     = (input(n, c, h, w) - mean(c)) / sqrt(var(c) + eps) * weight(c)','line_number':39,'multiline':False]
['text':'         + bias(c)','line_number':40,'multiline':False]
['text':' We factor out inv_sigma(c) = 1 / sqrt(var(c) + eps).','line_number':41,'multiline':False]
['text':' NOLINTNEXTLINE(bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions)','line_number':43,'multiline':False]
['text':' NOLINTNEXTLINE(bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions)','line_number':47,'multiline':False]
['text':' NOLINTNEXTLINE(bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions)','line_number':49,'multiline':False]
['text':' create a fake H and W dimension so we can use NHWC','line_number':98,'multiline':False]
['text':' create a fake W dimension so we can use NHWC','line_number':101,'multiline':False]
['text':' Remove the fake dimension, and go back to contiguous format','line_number':152,'multiline':False]
['text':' (since there is no 4th channel). Note, this has a performance','line_number':153,'multiline':False]
['text':' cost.','line_number':154,'multiline':False]
['text':' namespace','line_number':380,'multiline':False]
['text':' optional ','line_number':383,'multiline':True]
['text':' optional ','line_number':383,'multiline':True]
['text':' optional ','line_number':384,'multiline':True]
['text':' optional ','line_number':385,'multiline':True]
['text':' See [Note: hacky wrapper removal for optional tensor]','line_number':389,'multiline':False]
['text':' TODO: this should arguably support 3d as well','line_number':395,'multiline':False]
['text':' namespace native','line_number':415,'multiline':False]
['text':' namespace at','line_number':416,'multiline':False]
