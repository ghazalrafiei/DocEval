['text':' (Const)StridedRandomAccessor is a','line_number':5,'multiline':False]
['text':' (const) random access iterator defined over','line_number':6,'multiline':False]
['text':' a strided array.','line_number':7,'multiline':False]
['text':' The traits below are to introduce __restrict__','line_number':9,'multiline':False]
['text':' modifier on different platforms.','line_number':10,'multiline':False]
['text':' Constructors {','line_number':44,'multiline':False]
['text':' }','line_number':59,'multiline':False]
['text':' Pointer-like operations {','line_number':61,'multiline':False]
['text':' }','line_number':76,'multiline':False]
['text':' Prefix/postfix increment/decrement {','line_number':78,'multiline':False]
['text':' }','line_number':104,'multiline':False]
['text':' Arithmetic operations {','line_number':106,'multiline':False]
['text':' Note that this operator is well-defined when `this` and `other`','line_number':137,'multiline':False]
['text':' represent the same sequences, i.e. when','line_number':138,'multiline':False]
['text':' 1. this.stride == other.stride,','line_number':139,'multiline':False]
['text':' 2. |other - this| / this.stride is an Integer.','line_number':140,'multiline':False]
['text':' }','line_number':145,'multiline':False]
['text':' Comparison operators {','line_number':147,'multiline':False]
['text':' }','line_number':177,'multiline':False]
['text':' Constructors {','line_number':200,'multiline':False]
['text':' }','line_number':215,'multiline':False]
['text':' Pointer-like operations {','line_number':217,'multiline':False]
['text':' }','line_number':232,'multiline':False]
['text':' Prefix/postfix increment/decrement {','line_number':234,'multiline':False]
['text':' }','line_number':260,'multiline':False]
['text':' Arithmetic operations {','line_number':262,'multiline':False]
['text':' Note that here we call BaseType::operator- version','line_number':293,'multiline':False]
['text':' }','line_number':298,'multiline':False]
['text':' namespace at::native','line_number':301,'multiline':False]
