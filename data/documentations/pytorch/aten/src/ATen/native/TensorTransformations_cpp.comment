['text':' for flip_stub','line_number':3,'multiline':False]
['text':' It wraps the dims and checks that there are no repeated dims','line_number':39,'multiline':False]
['text':' Count dimensions in which we need to do work','line_number':44,'multiline':False]
['text':' Nothing to do, we return fast','line_number':54,'multiline':False]
['text':'create dummy output with 0 strides at flipped dimension, to prevent tensorIterator from coalescing flipped dims','line_number':60,'multiline':False]
['text':' This is a SmallVector of _signed_ ints','line_number':73,'multiline':False]
['text':' To understand this transformation, think of a 3D cube.','line_number':78,'multiline':False]
['text':'   - The data ptr points to the lower-left most vertex of the cube','line_number':79,'multiline':False]
['text':'   - The strides tell us how to move in each dimension,','line_number':80,'multiline':False]
['text':'     that is, data + stride[i] advances one element in the dimension i','line_number':81,'multiline':False]
['text':' To flip a dimension:','line_number':82,'multiline':False]
['text':'   - We move the pointer to the opposite vertex of the cube','line_number':83,'multiline':False]
['text':'   - We iterate in the opposite direction (invert the strides)','line_number':84,'multiline':False]
['text':' We know that an dimension has a zero stride and self[i] does not, as we defined above','line_number':87,'multiline':False]
['text':' Note that it may be the case that strides_dummy[i] = 0 not because we set it, but because','line_number':88,'multiline':False]
['text':' strides_self[i] == 0. We do not want to do anything there','line_number':89,'multiline':False]
['text':' Used by CPU and MPS dispatch.','line_number':103,'multiline':False]
['text':' avoid a div zero error below.','line_number':107,'multiline':False]
['text':' Behavior of % is different in C++ vs Python for negative numbers. This','line_number':114,'multiline':False]
['text':' corrects the difference.','line_number':115,'multiline':False]
['text':' check range of dims','line_number':137,'multiline':False]
['text':' handle modulo with negative k','line_number':144,'multiline':False]
['text':' namespace at::native','line_number':240,'multiline':False]
