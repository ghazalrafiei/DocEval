['text':' type: ignore[name-defined]','line_number':18,'multiline':False]
['text':' FIXME: Avoid importing onnx into torch.onnx.','line_number':38,'multiline':False]
['text':' type: ignore[attr-defined]','line_number':41,'multiline':False]
['text':' type: ignore[attr-defined]','line_number':47,'multiline':False]
['text':' Settings for saving one tensor per file.','line_number':49,'multiline':False]
['text':' Offset is zero because there is no other tensor in the same file.','line_number':50,'multiline':False]
['text':' Actual path to write content of tensor.','line_number':61,'multiline':False]
['text':' Create external data's folder if not exists.','line_number':66,'multiline':False]
['text':' if the demo_folder directory is not present','line_number':69,'multiline':False]
['text':' then create it.','line_number':70,'multiline':False]
['text':' Create a fresh file.','line_number':73,'multiline':False]
['text':' No need to call "seek" because offset is 0.','line_number':75,'multiline':False]
['text':' data_file.seek(0)','line_number':76,'multiline':False]
['text':' Write tensor content to the file.','line_number':77,'multiline':False]
['text':' type: ignore[name-defined]','line_number':89,'multiline':False]
['text':' FIXME: Avoid importing onnx into torch.onnx.','line_number':121,'multiline':False]
['text':' type: ignore[attr-defined]','line_number':124,'multiline':False]
['text':' Basically, "transformer.attention.self.query.weight" is mapped','line_number':132,'multiline':False]
['text':' to "transformer_attention_self_query_weight" for mimicking the','line_number':133,'multiline':False]
['text':' name-modifying code in FX-to-ONNX exporter.','line_number':134,'multiline':False]
['text':' See function _replace_get_attr_with_placeholder for details.','line_number':135,'multiline':False]
['text':' This block tries to match the onnx initializer name with torch parameter/buffer','line_number':138,'multiline':False]
['text':'  e.g. A pytorch buffer 'transformer.h.0.attn.bias' can be named 'h.0.attn.bias' in a ONNX initializer','line_number':139,'multiline':False]
['text':' For each PyTorch tensor name loaded by torch.load,','line_number':140,'multiline':False]
['text':'  1.  Search its best match in ONNX model. E.g., the match of','line_number':141,'multiline':False]
['text':'       "transformer_attention_weight" could be "attention_weight".','line_number':142,'multiline':False]
['text':'  2.  Set "tensor" as the initializer of the matched ONNX input.','line_number':143,'multiline':False]
['text':'      E.g., "tensor" is stored as the initializer of "attention_weight".','line_number':144,'multiline':False]
['text':' Step 1 is required because sometimes, tensor names are stored with prefix the dictionary','line_number':145,'multiline':False]
['text':' loaded by torch.load.','line_number':146,'multiline':False]
['text':' Same input name shouldn't be matched again','line_number':148,'multiline':False]
['text':' Find a match. Change name to the matched ONNX input name, so that we','line_number':153,'multiline':False]
['text':' create initializer with the right ONNX name.','line_number':154,'multiline':False]
['text':' Create one file per tensor.','line_number':160,'multiline':False]
['text':' tensor_proto.raw_data is stored to external file at','line_number':161,'multiline':False]
['text':' os.path.join(basepath, relative_tensor_file_path).','line_number':162,'multiline':False]
['text':' Add the tensor_proto to the ONNX model as an initializer with external data.','line_number':166,'multiline':False]
['text':' model_location should be a pure file name such as "file_name.onnx", not "folder/file_name.onnx".','line_number':169,'multiline':False]
['text':' type: ignore[attr-defined]','line_number':170,'multiline':False]
