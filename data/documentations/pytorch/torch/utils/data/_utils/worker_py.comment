['text':' On Windows, the parent ID of the worker process remains unchanged when the manager process','line_number':22,'multiline':False]
['text':' is gone, and the only way to check it through OS is to let the worker have a process handle','line_number':23,'multiline':False]
['text':' of the manager and ask if the process status has changed.','line_number':24,'multiline':False]
['text':' mypy cannot detect this code is windows only','line_number':29,'multiline':False]
['text':' type: ignore[attr-defined]','line_number':30,'multiline':False]
['text':' Value obtained from https://msdn.microsoft.com/en-us/library/ms684880.aspx','line_number':36,'multiline':False]
['text':' type: ignore[attr-defined]','line_number':41,'multiline':False]
['text':' Value obtained from https://msdn.microsoft.com/en-us/library/windows/desktop/ms687032.aspx','line_number':47,'multiline':False]
['text':' type: ignore[no-redef]','line_number':51,'multiline':False]
['text':' The function `_generate_state` is adapted from `numpy.random.SeedSequence`','line_number':128,'multiline':False]
['text':' from https://github.com/numpy/numpy/blob/main/numpy/random/bit_generator.pyx','line_number':129,'multiline':False]
['text':' It's MIT licensed, here is the copyright:','line_number':130,'multiline':False]
['text':' Copyright (c) 2015 Melissa E. O'Neill','line_number':132,'multiline':False]
['text':' Copyright (c) 2019 NumPy Developers','line_number':133,'multiline':False]
['text':'','line_number':134,'multiline':False]
['text':' Permission is hereby granted, free of charge, to any person obtaining a copy','line_number':135,'multiline':False]
['text':' of this software and associated documentation files (the "Software"), to deal','line_number':136,'multiline':False]
['text':' in the Software without restriction, including without limitation the rights','line_number':137,'multiline':False]
['text':' to use, copy, modify, merge, publish, distribute, sublicense, and/or sell','line_number':138,'multiline':False]
['text':' copies of the Software, and to permit persons to whom the Software is','line_number':139,'multiline':False]
['text':' furnished to do so, subject to the following conditions:','line_number':140,'multiline':False]
['text':'','line_number':141,'multiline':False]
['text':' The above copyright notice and this permission notice shall be included in','line_number':142,'multiline':False]
['text':' all copies or substantial portions of the Software.','line_number':143,'multiline':False]
['text':'','line_number':144,'multiline':False]
['text':' THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR','line_number':145,'multiline':False]
['text':' IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,','line_number':146,'multiline':False]
['text':' FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE','line_number':147,'multiline':False]
['text':' AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER','line_number':148,'multiline':False]
['text':' LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,','line_number':149,'multiline':False]
['text':' OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE','line_number':150,'multiline':False]
['text':' SOFTWARE.','line_number':151,'multiline':False]
['text':' This function generates an array of int32 as the seed for','line_number':153,'multiline':False]
['text':' `numpy.random`, in order to prevent state collision due to same','line_number':154,'multiline':False]
['text':' seed and algorithm for `numpy.random` and `random` modules.','line_number':155,'multiline':False]
['text':' TODO: Implement `SeedSequence` like object for `torch.random`','line_number':156,'multiline':False]
['text':' Add in the entropy to the pool.','line_number':187,'multiline':False]
['text':' Mix all bits together so late bits can affect earlier bits.','line_number':191,'multiline':False]
['text':' See NOTE [ Data Loader Multiprocessing Shutdown Logic ] for details on the','line_number':211,'multiline':False]
['text':' logic of this function.','line_number':212,'multiline':False]
['text':' Initialize C side signal handlers for SIGBUS and SIGSEGV. Python signal','line_number':215,'multiline':False]
['text':' module's handlers are executed after Python returns from C low-level','line_number':216,'multiline':False]
['text':' handlers, likely when the same fatal signal had already happened','line_number':217,'multiline':False]
['text':' again.','line_number':218,'multiline':False]
['text':' https://docs.python.org/3/library/signal.html#execution-of-python-signal-handlers','line_number':219,'multiline':False]
['text':' When using Iterable mode, some worker can exit earlier than others due','line_number':257,'multiline':False]
['text':' to the IterableDataset behaving differently for different workers.','line_number':258,'multiline':False]
['text':' When such things happen, an `_IterableDatasetStopIteration` object is','line_number':259,'multiline':False]
['text':' sent over to the main process with the ID of this worker, so that the','line_number':260,'multiline':False]
['text':' main process won't send more tasks to this worker, and will send','line_number':261,'multiline':False]
['text':' `None` to this worker to properly exit it.','line_number':262,'multiline':False]
['text':'','line_number':263,'multiline':False]
['text':' Note that we cannot set `done_event` from a worker as it is shared','line_number':264,'multiline':False]
['text':' among all processes. Instead, we set the `iteration_end` flag to','line_number':265,'multiline':False]
['text':' signify that the iterator is exhausted. When either `done_event` or','line_number':266,'multiline':False]
['text':' `iteration_end` is set, we skip all processing step and just wait for','line_number':267,'multiline':False]
['text':' `None`.','line_number':268,'multiline':False]
['text':' Acknowledge the main process','line_number':279,'multiline':False]
['text':' Recreate the fetcher for worker-reuse policy','line_number':288,'multiline':False]
['text':' Received the final signal','line_number':293,'multiline':False]
['text':' `done_event` is set. But I haven't received the final signal','line_number':297,'multiline':False]
['text':' (None) yet. I will keep continuing until get it, and skip the','line_number':298,'multiline':False]
['text':' processing steps.','line_number':299,'multiline':False]
['text':' Set `iteration_end`','line_number':312,'multiline':False]
['text':'   (1) to save future `next(...)` calls, and','line_number':313,'multiline':False]
['text':'   (2) to avoid sending multiple `_IterableDatasetStopIteration`s.','line_number':314,'multiline':False]
['text':' It is important that we don't store exc_info in a variable.','line_number':317,'multiline':False]
['text':' `ExceptionWrapper` does the correct thing.','line_number':318,'multiline':False]
['text':' See NOTE [ Python Traceback Reference Cycle Problem ]','line_number':319,'multiline':False]
['text':' save memory','line_number':323,'multiline':False]
['text':' Main process will raise KeyboardInterrupt anyways.','line_number':325,'multiline':False]
