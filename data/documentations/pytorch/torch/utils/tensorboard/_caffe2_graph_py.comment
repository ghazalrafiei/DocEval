['text':' Always setting name2 = `{name}_{version}` would work, but we also try','line_number':108,'multiline':False]
['text':' to avoid a trailing `_0`, so we have to be careful not to introduce','line_number':109,'multiline':False]
['text':' name collisions, such as (foo_1, 0) = foo_1 = (foo, 1).','line_number':110,'multiline':False]
['text':' Note: operator names (if any) will be handled later.','line_number':111,'multiline':False]
['text':' Transfer shape.','line_number':114,'multiline':False]
['text':' Rename all operator names (if any) independently so that the','line_number':210,'multiline':False]
['text':' unique-fication happens only once in _fill_missing_operator_names().','line_number':211,'multiline':False]
['text':' Make sure operator names don't collide with blobs.','line_number':283,'multiline':False]
['text':' Float','line_number':360,'multiline':False]
['text':' Integer','line_number':364,'multiline':False]
['text':' String','line_number':368,'multiline':False]
['text':' The value is an empty list.','line_number':385,'multiline':False]
['text':' Add shapes in order.','line_number':407,'multiline':False]
['text':' Here we are sure the name is unique.','line_number':437,'multiline':False]
['text':' Create a name that is likely unique','line_number':445,'multiline':False]
['text':' Create additional output nodes','line_number':456,'multiline':False]
['text':' Node for the current op','line_number':465,'multiline':False]
['text':' Get all ops that have the blob corresponding to 'name' as one of their','line_number':494,'multiline':False]
['text':' outputs. See _operators_to_graph_def.','line_number':495,'multiline':False]
['text':' This blob is not produced but is instead a TF Placeholder where a','line_number':500,'multiline':False]
['text':' value is passed in.','line_number':501,'multiline':False]
['text':'','line_number':548,'multiline':False]
['text':' Only add the op if output is not empty','line_number':620,'multiline':False]
['text':' clear_debug_info','line_number':677,'multiline':False]
['text':' show_forward_only','line_number':678,'multiline':False]
['text':' show_cpu_only','line_number':679,'multiline':False]
['text':' use_tensorflow_naming','line_number':689,'multiline':False]
['text':' .extend() expects an iterable','line_number':701,'multiline':False]
['text':' Show a cleaner, easier-to-interpret version of the model graph','line_number':710,'multiline':False]
['text':' Note: this will inspect the workspace for better or worse.','line_number':753,'multiline':False]
['text':' We don't care about the types, only the shapes','line_number':754,'multiline':False]
['text':' if shapes is None:','line_number':794,'multiline':False]
['text':'     shapes = _try_get_shapes(nets)','line_number':795,'multiline':False]
['text':' _try_get_shapes(nets) depends on workspace.InferShapesAndTypes(nets),','line_number':796,'multiline':False]
['text':' which is currently broken (segfault). We omit the shapes for now.','line_number':797,'multiline':False]
