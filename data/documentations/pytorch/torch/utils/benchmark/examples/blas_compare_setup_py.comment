['text':' no type stub for conda command line interface','line_number':7,'multiline':False]
['text':' type: ignore[import]','line_number':8,'multiline':False]
['text':' blas_compare.py will fail to import these when it's inside a conda env,','line_number':11,'multiline':False]
['text':' but that's fine as it only wants the constants.','line_number':12,'multiline':False]
['text':' Validate install.','line_number':41,'multiline':False]
['text':' EIGEN: SubEnvSpec(','line_number':72,'multiline':False]
['text':'     generic_installs=(),','line_number':73,'multiline':False]
['text':'     special_installs=(),','line_number':74,'multiline':False]
['text':'     environment_variables=("BLAS=Eigen",) + GENERIC_ENV_VARS,','line_number':75,'multiline':False]
['text':'     expected_blas_symbols=(),','line_number':76,'multiline':False]
['text':' ),','line_number':77,'multiline':False]
['text':' This does not appear to be possible using the python API.','line_number':145,'multiline':False]
['text':' Check that they were actually set correctly.','line_number':160,'multiline':False]
['text':' We have to re-run during each build to pick up the new','line_number':171,'multiline':False]
['text':' build config settings.','line_number':172,'multiline':False]
['text':' Shameless abuse of `python -c ...`','line_number':184,'multiline':False]
