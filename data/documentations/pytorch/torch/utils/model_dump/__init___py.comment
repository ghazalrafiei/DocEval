['text':'!/usr/bin/env python3','line_number':1,'multiline':False]
['text':' Maintainer notes follow.','line_number':16,'multiline':False]
['text':' Just forget that it was a device and return the name.','line_number':171,'multiline':False]
['text':' Hack: Pretend this is a module so we don't need custom serialization.','line_number':177,'multiline':False]
['text':' Hack: Wrap the message in a tuple so it looks like a nice state object.','line_number':178,'multiline':False]
['text':' TODO: Undo at least that second hack.  We should support string states.','line_number':179,'multiline':False]
['text':' type: ignore[attr-defined]','line_number':200,'multiline':False]
['text':' Intern strings that are likely to be re-used.','line_number':240,'multiline':False]
['text':' Pickle automatically detects shared structure,','line_number':241,'multiline':False]
['text':' so re-used strings are stored efficiently.','line_number':242,'multiline':False]
['text':' However, JSON has no way of representing this,','line_number':243,'multiline':False]
['text':' so we have to do it manually.','line_number':244,'multiline':False]
['text':' Parse debug info and add begin/end markers if not present','line_number':261,'multiline':False]
['text':' to ensure that we cover the entire source code.','line_number':262,'multiline':False]
['text':' (0, (('', '', 0), 0, 0))','line_number':272,'multiline':False]
['text':' type: ignore[index]','line_number':274,'multiline':False]
['text':' type: ignore[index]','line_number':275,'multiline':False]
['text':' TODO: Handle this case better.  TorchScript ranges are in bytes,','line_number':293,'multiline':False]
['text':' but JS doesn't really handle byte strings.','line_number':294,'multiline':False]
['text':' if bytes and chars are not equivalent for this string,','line_number':295,'multiline':False]
['text':' zero out the ranges so we don't highlight the wrong thing.','line_number':296,'multiline':False]
['text':' TODO: handle errors here and just ignore the file?','line_number':326,'multiline':False]
['text':' NOTE: For a lot of these files (like bytecode),','line_number':327,'multiline':False]
['text':' we could get away with just unpickling, but this should be safer.','line_number':328,'multiline':False]
['text':' Checked the rendered length instead of the file size','line_number':333,'multiline':False]
['text':' because pickles with shared structure can explode in size during rendering.','line_number':334,'multiline':False]
['text':' Note that Python's json serializer does not escape slashes in strings.','line_number':380,'multiline':False]
['text':' Since we're inlining this JSON directly into a script tag, a string','line_number':381,'multiline':False]
['text':' containing "</script>" would end the script prematurely and','line_number':382,'multiline':False]
['text':' mess up our page.  Unconditionally escape fixes that.','line_number':383,'multiline':False]
