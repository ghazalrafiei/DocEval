['text':' noqa: F401','line_number':18,'multiline':False]
['text':' type: ignore[no-redef]','line_number':21,'multiline':False]
['text':' Ignore all extra *args and **kwargs lest you want to reinvent tqdm','line_number':28,'multiline':False]
['text':' Don't bother implementing; use real tqdm if you want','line_number':41,'multiline':False]
['text':' If tqdm is installed use it, otherwise use the fake wrapper','line_number':61,'multiline':False]
['text':' matches bfd8deac from resnet18-bfd8deac.pth','line_number':75,'multiline':False]
['text':' Copied from tools/shared/module_loader to be included in torch package','line_number':98,'multiline':False]
['text':' See https://docs.github.com/en/rest/reference/repos#download-a-repository-archive-zip','line_number':119,'multiline':False]
['text':' Check if callable is defined in the module','line_number':124,'multiline':False]
['text':' The ref wasn't specified by the user, so we need to figure out the','line_number':146,'multiline':False]
['text':' default branch: main or master. Our assumption is that if main exists','line_number':147,'multiline':False]
['text':' then it's the default branch, otherwise it's master.','line_number':148,'multiline':False]
['text':' No internet connection, need to check for cache as last resort','line_number':158,'multiline':False]
['text':' Use urlopen to avoid depending on local git.','line_number':177,'multiline':False]
['text':' Empty response means no more data to process','line_number':190,'multiline':False]
['text':' Setup hub_dir to save downloaded files','line_number':202,'multiline':False]
['text':' Parse github repo information','line_number':206,'multiline':False]
['text':' Github allows branch name with slash '/',','line_number':208,'multiline':False]
['text':' this causes confusion with path on both Linux and Windows.','line_number':209,'multiline':False]
['text':' Backslash is not allowed in Github branch name so no need to','line_number':210,'multiline':False]
['text':' to worry about it.','line_number':211,'multiline':False]
['text':' Github renames folder repo-v1.x.x to repo-1.x.x','line_number':213,'multiline':False]
['text':' We don't know the repo name before downloading the zip file','line_number':214,'multiline':False]
['text':' and inspect name from it.','line_number':215,'multiline':False]
['text':' To check if cached repo exists, we need to normalize folder names.','line_number':216,'multiline':False]
['text':' Check that the repo is in the trusted list','line_number':219,'multiline':False]
['text':' Validate the tag/branch is from the original repo instead of a forked repo','line_number':228,'multiline':False]
['text':' Getting a 300 Multiple Choices error likely means that the ref is both a tag and a branch','line_number':241,'multiline':False]
['text':' in the repo. This can be disambiguated by explicitely using refs/heads/ or refs/tags','line_number':242,'multiline':False]
['text':' See https://git-scm.com/book/en/v2/Git-Internals-Git-References','line_number':243,'multiline':False]
['text':' Here, we do the same as git: we throw a warning, and assume the user wanted the branch','line_number':244,'multiline':False]
['text':' Unzip the code and rename the base folder','line_number':261,'multiline':False]
['text':' rename the repo','line_number':266,'multiline':False]
['text':' To minimize friction of introducing the new trust_repo mechanism, we consider that','line_number':280,'multiline':False]
['text':' if a repo was already downloaded by torchhub, then it is already trusted (even if it's not in the allowlist)','line_number':281,'multiline':False]
['text':' TODO: Remove `None` option in 2.0 and change the default to "check"','line_number':291,'multiline':False]
['text':' At this point we're sure that the user trusts the repo (or wants to trust it)','line_number':315,'multiline':False]
['text':' Note that if a missing dependency is imported at top level of hubconf, it will','line_number':339,'multiline':False]
['text':' throw before this function. It's a chicken and egg situation where we have to','line_number':340,'multiline':False]
['text':' load hubconf to know what're the dependencies, but to import hubconf it requires','line_number':341,'multiline':False]
['text':' a missing package. This is fine, Python will throw proper error message for users.','line_number':342,'multiline':False]
['text':' Issue warning to move data if old env is set','line_number':363,'multiline':False]
['text':' We take functions starts with '_' as internal helper functions','line_number':430,'multiline':False]
['text':' We deliberately save it in a temp file and move it after','line_number':629,'multiline':False]
['text':' download is complete. This prevents a local working checkpoint','line_number':630,'multiline':False]
['text':' being overridden by a broken download.','line_number':631,'multiline':False]
['text':' We deliberately do not use NamedTemporaryFile to avoid restrictive','line_number':632,'multiline':False]
['text':' file permissions being applied to the downloaded file.','line_number':633,'multiline':False]
['text':' Hub used to support automatically extracts from zipfile manually compressed by users.','line_number':671,'multiline':False]
['text':' The legacy zip format expects only one file from torch.save() < 1.6 in the zip.','line_number':672,'multiline':False]
['text':' We should remove this support since zipfile is now default zipfile format for torch.save().','line_number':673,'multiline':False]
['text':' Note: extractall() defaults to overwrite file if exists. No need to clean up beforehand.','line_number':685,'multiline':False]
['text':'       We deliberately don't handle tarfile here since our legacy serialization format was in tar.','line_number':686,'multiline':False]
['text':'       E.g. resnet18-5c106cde.pth which is widely used.','line_number':687,'multiline':False]
['text':' Issue warning to move data if old env is set','line_number':737,'multiline':False]
['text':' Directory already exists, ignore.','line_number':749,'multiline':False]
['text':' Unexpected OSError, re-raise.','line_number':752,'multiline':False]
['text':' r is Optional[Match[str]]','line_number':764,'multiline':False]
