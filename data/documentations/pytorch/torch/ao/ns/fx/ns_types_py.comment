['text':' TODO(future PR): see if we can use typing_extensions's TypedDict instead','line_number':18,'multiline':False]
['text':' to properly type the various keys','line_number':19,'multiline':False]
['text':' {','line_number':20,'multiline':False]
['text':'   # one of NSSingleResultValuesType','line_number':21,'multiline':False]
['text':'   'type': 'weight',','line_number':22,'multiline':False]
['text':'   # the values of type specified above','line_number':23,'multiline':False]
['text':'   'values': [torch.tensor(...), ...],','line_number':24,'multiline':False]
['text':'   # name of the node directly before the logger','line_number':25,'multiline':False]
['text':'   'prev_node_name': 'linear1',','line_number':26,'multiline':False]
['text':'   # type of the underlying function or module','line_number':27,'multiline':False]
['text':'   'prev_node_target_type': torch.nn.functional.linear  # or torch.nn.Linear, etc','line_number':28,'multiline':False]
['text':'   # name of the node responsible for adding this logger','line_number':29,'multiline':False]
['text':'   # Note: this may differ from prev_node_name if we are logging inputs','line_number':30,'multiline':False]
['text':'   'ref_node_name': 'linear1',','line_number':31,'multiline':False]
['text':'   # index of this node within the arg of the input/output node','line_number':32,'multiline':False]
['text':'   # for example, in cat([x1, x2, x3], dim=0), x2 would have index_within_arg == 1','line_number':33,'multiline':False]
['text':'   'index_within_arg': 0,','line_number':34,'multiline':False]
['text':'   # index of this node within the args of the input/output node','line_number':35,'multiline':False]
['text':'   # for example, in add(x1, x2), x2 would have index_of_arg == 1','line_number':36,'multiline':False]
['text':'   'index_of_arg': 0,','line_number':37,'multiline':False]
['text':'   # precomputed comparisons of logger values to reference values','line_number':38,'multiline':False]
['text':'   'comparisons': [torch.tensor(...), ...]','line_number':39,'multiline':False]
['text':'   # name of function used for precomputed comparisons','line_number':40,'multiline':False]
['text':'   'comparison_fn_name': 'sqnr',','line_number':41,'multiline':False]
['text':'   # string representation of qconfig responsible for creating this logger','line_number':42,'multiline':False]
['text':'   'qconfig_str': 'QConfig(...)',','line_number':43,'multiline':False]
['text':' }','line_number':44,'multiline':False]
['text':' {','line_number':47,'multiline':False]
['text':'   'layer_name_1': {  # subgraph name','line_number':48,'multiline':False]
['text':'     'node_output': {  # results type (node_output, node_input, weight)','line_number':49,'multiline':False]
['text':'       'model_name_a':  # model name','line_number':50,'multiline':False]
['text':'          [NSSingleResultType, ...],  # results, ordered by index_within_arg','line_number':51,'multiline':False]
['text':'       'model_name_b':','line_number':52,'multiline':False]
['text':'          [NSSingleResultType, ...],','line_number':53,'multiline':False]
['text':'     },','line_number':54,'multiline':False]
['text':'   },','line_number':55,'multiline':False]
['text':' }','line_number':56,'multiline':False]
['text':'','line_number':57,'multiline':False]
['text':' Defines the underlying target type of a node, for example:','line_number':60,'multiline':False]
['text':' `F.conv1d` for a `call_function` conv node','line_number':61,'multiline':False]
['text':' `nn.Conv1d` for a `call_module` node calling the forward of a `nn.Conv1d` module','line_number':62,'multiline':False]
['text':' `'sigmoid'` for a `call_method` node calling `x.sigmoid()`','line_number':63,'multiline':False]
