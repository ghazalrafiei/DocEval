['text':' keep track of the model we wish to generate report for','line_number':118,'multiline':False]
['text':' keep the reports private so they can't be modified','line_number':121,'multiline':False]
['text':' keep a mapping of desired reports to observers of interest','line_number':125,'multiline':False]
['text':' this is to get the readings, and to remove them, can create a large set','line_number':126,'multiline':False]
['text':' this set can then be used to traverse the graph and remove added observers','line_number':127,'multiline':False]
['text':' initialize each report to have empty set of observers of interest','line_number':130,'multiline':False]
['text':' flags to ensure that we can only prepare and remove observers once','line_number':134,'multiline':False]
['text':' store the reports that we generated for visualization purposes','line_number':138,'multiline':False]
['text':' initially empty since no reports generated','line_number':139,'multiline':False]
['text':' if already prepared once, cannot prepare again','line_number':164,'multiline':False]
['text':' loop through each detector, find where placements should be, and keep track','line_number':168,'multiline':False]
['text':' determine observer points for each detector','line_number':172,'multiline':False]
['text':' map each insert point to the observer to use','line_number':174,'multiline':False]
['text':' update the set of observers this report cares about','line_number':176,'multiline':False]
['text':' now insert all the observers at their desired locations','line_number':179,'multiline':False]
['text':' if we are inserting post, then our target node is the next node','line_number':211,'multiline':False]
['text':' recompile model after inserts are made','line_number':219,'multiline':False]
['text':' if the target matches the fqn, it's the node we are looking for','line_number':233,'multiline':False]
['text':' assert for MyPy','line_number':241,'multiline':False]
['text':' if we haven't prepped model for callibration, then we shouldn't generate report yet','line_number':270,'multiline':False]
['text':' if we already removed the observers, we cannot generate report','line_number':274,'multiline':False]
['text':' keep track of all the reports of interest and their outputs','line_number':278,'multiline':False]
['text':' generate the individual report for the detector','line_number':282,'multiline':False]
['text':' if user wishes to remove inserted observers, go ahead and remove','line_number':286,'multiline':False]
['text':' get the set of all Observers inserted by this instance of ModelReport','line_number':289,'multiline':False]
['text':' go through all_observers_of_interest and remove them from the graph and model','line_number':295,'multiline':False]
['text':' remove the observer from the model','line_number':297,'multiline':False]
['text':' remove the observer from the graph structure','line_number':300,'multiline':False]
['text':' remember to recompile the model','line_number':308,'multiline':False]
['text':' save the generated reports for visualization purposes','line_number':311,'multiline':False]
['text':' return the reports of interest','line_number':318,'multiline':False]
['text':' get the set of keys for both','line_number':332,'multiline':False]
['text':' get the insersection keys and check if same value for both dicts','line_number':336,'multiline':False]
['text':' if it's a tensor we have to handle separately','line_number':343,'multiline':False]
['text':' if dict_b_val not tensor, automatically false','line_number':345,'multiline':False]
['text':' for non-tensor vals','line_number':349,'multiline':False]
['text':' if no non matching shared keys found, return true','line_number':353,'multiline':False]
['text':' we want to reorder and reformat the information so it is ordered in terms of order','line_number':363,'multiline':False]
['text':' found in the model','line_number':364,'multiline':False]
['text':' first create new dict with all modules as keys and features under respective module','line_number':366,'multiline':False]
['text':' get mod -> feature dict and go through','line_number':370,'multiline':False]
['text':' check if already in our accumulation dict','line_number':374,'multiline':False]
['text':' we merge all the features together','line_number':376,'multiline':False]
['text':' merge them together into the new unioned dict','line_number':380,'multiline':False]
['text':' same features keys -> same info, so okay if override','line_number':381,'multiline':False]
['text':' do safety check to make sure shared keys have same info','line_number':383,'multiline':False]
['text':' we just set it','line_number':391,'multiline':False]
['text':' our ordered dict so that modules can be ordered in order of how they appear in model','line_number':394,'multiline':False]
['text':' we loop through modules in graph in order','line_number':397,'multiline':False]
['text':' find that fqn in fqns_to_features','line_number':399,'multiline':False]
['text':' add it to our ordered dict','line_number':401,'multiline':False]
['text':' return the ordered dict of info we created','line_number':404,'multiline':False]
['text':' check if user has generated reports at least once','line_number':417,'multiline':False]
['text':' get the ordered dict mapping modules to their full set of collected features / stats','line_number':421,'multiline':False]
['text':' create and return ModelReportVisualizer instance','line_number':424,'multiline':False]
['text':' keep track of the qconfigmapping','line_number':438,'multiline':False]
['text':' loop through each module / fqn and attempt to create QConfigMapping','line_number':441,'multiline':False]
['text':' if we have a qconfig info for this module','line_number':443,'multiline':False]
['text':' now generate the qconfig and add it to the mapping','line_number':447,'multiline':False]
['text':' add to our config','line_number':450,'multiline':False]
['text':' return compiled mapping','line_number':453,'multiline':False]
['text':' if we haven't prepped model for callibration, then we shouldn't generate mapping yet','line_number':503,'multiline':False]
['text':' if we already removed the observers, we cannot mapping','line_number':507,'multiline':False]
['text':' keep track of qconfig info for each module across detectors','line_number':511,'multiline':False]
['text':' get the info from the detector','line_number':515,'multiline':False]
['text':' we go through the modules','line_number':518,'multiline':False]
['text':' see if we already have info on it','line_number':520,'multiline':False]
['text':' we combine the current options with what is there','line_number':522,'multiline':False]
['text':' we just use this for now','line_number':528,'multiline':False]
['text':' get the mapping info','line_number':549,'multiline':False]
['text':' we will do a bit of processing and remove fqns that don't have input weight recommended','line_number':554,'multiline':False]
['text':' now we generate the QConfig for each of the options','line_number':556,'multiline':False]
['text':' return the generated mapping','line_number':562,'multiline':False]
['text':' get the mapping info','line_number':594,'multiline':False]
['text':' now we generate the QConfig for each of the options','line_number':599,'multiline':False]
['text':' return the generated mapping','line_number':605,'multiline':False]
