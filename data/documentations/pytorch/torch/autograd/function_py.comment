['text':' Formerly known as: _ContextMethodMixin','line_number':26,'multiline':False]
['text':' DO NOT USE: This is only defined to be able to load old serialized models','line_number':262,'multiline':False]
['text':' _forward_cls is defined by derived class','line_number':278,'multiline':False]
['text':' The user should define either backward or vjp but never both.','line_number':279,'multiline':False]
['text':' type: ignore[attr-defined]','line_number':280,'multiline':False]
['text':' type: ignore[attr-defined]','line_number':281,'multiline':False]
['text':' _forward_cls is defined by derived class','line_number':292,'multiline':False]
['text':' type: ignore[attr-defined]','line_number':293,'multiline':False]
['text':' type: ignore[attr-defined]','line_number':296,'multiline':False]
['text':' vjp and backward are alias of each other','line_number':412,'multiline':False]
['text':' for the tracer','line_number':490,'multiline':False]
['text':' See NOTE: [functorch vjp and autograd interaction]','line_number':551,'multiline':False]
['text':' type: ignore[misc]','line_number':553,'multiline':False]
['text':' If any of the inputs have requires_grad=True, we force the outputs','line_number':575,'multiline':False]
['text':' to have requires_grad=True but point to a grad_fn which throws an','line_number':576,'multiline':False]
['text':' error message during (double) back-propagation.','line_number':577,'multiline':False]
['text':' XXX: this is only an approximation of requires_grad - there's no way','line_number':578,'multiline':False]
['text':' to figure out if fn didn't use ctx.saved_tensors and as a result','line_number':579,'multiline':False]
['text':' some Tensors might require grad, even if no args do.','line_number':580,'multiline':False]
['text':' Unfortunately, this leads to unexpected error messages ("no nodes','line_number':581,'multiline':False]
['text':' require computing gradients"), but I don't have a better idea.','line_number':582,'multiline':False]
['text':' These functions would raise an error in backward anyway.','line_number':583,'multiline':False]
['text':' Create aliases of each output that has requires_grad=True. We need','line_number':599,'multiline':False]
['text':' at least one of the inputs to err_fn to require grad so that the','line_number':600,'multiline':False]
['text':' output will have a grad_fn.','line_number':601,'multiline':False]
['text':' obj is namedtuple','line_number':643,'multiline':False]
['text':' We only accept primitive key types, so we needn't inspect them','line_number':681,'multiline':False]
['text':' unflatten a list or tuple input into a nested list/tuple structure','line_number':702,'multiline':False]
['text':' specified by proto','line_number':703,'multiline':False]
['text':' The 'type: ignore' statements are needed here because these functions are declared as '@staticmethod' in the','line_number':744,'multiline':False]
['text':' superclass (Function) but are instance methods here, which mypy reports as incompatible.','line_number':745,'multiline':False]
['text':' type: ignore[misc]','line_number':750,'multiline':False]
['text':' type: ignore[misc]','line_number':757,'multiline':False]
['text':' type: ignore[override]','line_number':763,'multiline':False]
['text':' type: ignore[func-returns-value]','line_number':765,'multiline':False]
['text':' type: ignore[override]','line_number':770,'multiline':False]
['text':' type: ignore[func-returns-value]','line_number':772,'multiline':False]
['text':' type: ignore[misc]','line_number':783,'multiline':False]
