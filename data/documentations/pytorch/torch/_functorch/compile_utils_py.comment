['text':' return a new copy of torch.fx.graph.Graph with CSE applied to the input graph','line_number':22,'multiline':False]
['text':' map from node in the old graph to node in the new graph','line_number':25,'multiline':False]
['text':' map from hash to a node in the new graph','line_number':26,'multiline':False]
['text':' map from hash to token','line_number':27,'multiline':False]
['text':' The placeholder, output, and get_attr nodes are copied to the new graph without change','line_number':29,'multiline':False]
['text':' do not CSE away random operations','line_number':30,'multiline':False]
['text':' n.op == 'call_function', should never see n.op == 'call_module' or 'call_method'','line_number':34,'multiline':False]
['text':' substitute args and kwargs members to their mapping in env if exists','line_number':35,'multiline':False]
['text':' specs can be used to reconstruct nested list/dictionaries','line_number':36,'multiline':False]
['text':' each token corresponds to a unique node','line_number':49,'multiline':False]
['text':' nodes with the same token can be substituted','line_number':50,'multiline':False]
['text':' hash substituted args to a number, do not hash specs because specs are not hashable','line_number':54,'multiline':False]
['text':' check if a node has a substitute and can be eliminated','line_number':58,'multiline':False]
