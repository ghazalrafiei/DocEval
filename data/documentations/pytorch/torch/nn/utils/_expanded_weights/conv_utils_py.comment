['text':' F.pad needs the padding in reverse order from what conv expects','line_number':49,'multiline':False]
['text':' F.pad needs the padding in reverse order from what conv expects','line_number':84,'multiline':False]
['text':' for kwarg names','line_number':99,'multiline':False]
['text':' for op reference','line_number':100,'multiline':False]
['text':' "same" padding may give uneven padding on either side so we need to separate the "padding" attr and total padding','line_number':102,'multiline':False]
['text':' weight and bias don't compute batched gradients; no other arguments are differentiable','line_number':122,'multiline':False]
['text':' set grad_sample field for weight and bias with per sample gradients','line_number':125,'multiline':False]
['text':' n=batch_sz; o=num_out_channels; p=(num_in_channels/groups)*kernel_sz','line_number':149,'multiline':False]
['text':' rearrange the above tensor and extract diagonals.','line_number':151,'multiline':False]
['text':' Input shape: (B, C, D, H, W)','line_number':220,'multiline':False]
['text':' Output shape: (B, C, D+2*padding[2], H+2*padding[1], W+2*padding[0])','line_number':224,'multiline':False]
['text':' Output shape: (B, C, D_out, H_out, W_out, kernel_size[0], kernel_size[1], kernel_size[2])','line_number':229,'multiline':False]
['text':' For D_out, H_out, W_out definitions see :class:`torch.nn.Unfold`','line_number':230,'multiline':False]
['text':' Output shape: (B, D_out, H_out, W_out, C, kernel_size[0], kernel_size[1], kernel_size[2])','line_number':233,'multiline':False]
['text':' Output shape: (B, D_out * H_out * W_out, C * kernel_size[0] * kernel_size[1] * kernel_size[2]','line_number':238,'multiline':False]
