['text':' See https://mypy.readthedocs.io/en/latest/generics.html#generic-methods-and-generic-self for the use','line_number':23,'multiline':False]
['text':' of `T` to annotate `self`. Many methods of `Module` return `self` and we want those return values to be','line_number':24,'multiline':False]
['text':' the type of the subclass, not the looser type of `Module`.','line_number':25,'multiline':False]
['text':' don't do anything for single-line stuff','line_number':40,'multiline':False]
['text':' Trick mypy into not applying contravariance rules to inputs by defining','line_number':360,'multiline':False]
['text':' forward as a value, rather than a function.  See also','line_number':361,'multiline':False]
['text':' https://github.com/python/mypy/issues/8795','line_number':362,'multiline':False]
['text':' Marks whether the corresponding _forward_hooks accept kwargs or not.','line_number':432,'multiline':False]
['text':' As JIT does not support Set[int], this dict is used as a set, where all','line_number':433,'multiline':False]
['text':' hooks represented in this dict accept kwargs.','line_number':434,'multiline':False]
['text':' forward hooks that should always be called even if an exception is raised','line_number':436,'multiline':False]
['text':' Marks whether the corresponding _forward_hooks accept kwargs or not.','line_number':439,'multiline':False]
['text':' As JIT does not support Set[int], this dict is used as a set, where all','line_number':440,'multiline':False]
['text':' hooks represented in this dict accept kwargs.','line_number':441,'multiline':False]
['text':' Backward compatibility: no args used to be allowed when call_super_init=False','line_number':455,'multiline':False]
['text':' If the new tensor has compatible tensor type as the existing tensor,','line_number':806,'multiline':False]
['text':' the current behavior is to change the tensor in-place using `.data =`,','line_number':807,'multiline':False]
['text':' and the future behavior is to overwrite the existing tensor. However,','line_number':808,'multiline':False]
['text':' changing the current behavior is a BC-breaking change, and we want it','line_number':809,'multiline':False]
['text':' to happen in future releases. So for now we introduce the','line_number':810,'multiline':False]
['text':' `torch.__future__.get_overwrite_module_params_on_conversion()`','line_number':811,'multiline':False]
['text':' global flag to let the user control whether they want the future','line_number':812,'multiline':False]
['text':' behavior of overwriting the existing tensor or not.','line_number':813,'multiline':False]
['text':' Tensors stored in modules are graph leaves, and we don't want to','line_number':821,'multiline':False]
['text':' track autograd history of `param_applied`, so we have to use','line_number':822,'multiline':False]
['text':' `with torch.no_grad():`','line_number':823,'multiline':False]
['text':' type: ignore[attr-defined]','line_number':1200,'multiline':False]
['text':' type: ignore[attr-defined]','line_number':1284,'multiline':False]
['text':' At this point we are sure that inputs and result are tuple of Tensors','line_number':1335,'multiline':False]
['text':' At this point the grad_output part of the hook will most likely be correct','line_number':1346,'multiline':False]
['text':' type: ignore[attr-defined]','line_number':1418,'multiline':False]
['text':' type: ignore[attr-defined]','line_number':1484,'multiline':False]
['text':' type ignore was added because at this point one knows that','line_number':1493,'multiline':False]
['text':' torch.jit._trace._trace_module_map is not Optional and has type Dict[Any, Any]','line_number':1494,'multiline':False]
['text':' type: ignore[index, operator] # noqa: B950','line_number':1495,'multiline':False]
['text':' type: ignore[misc]','line_number':1509,'multiline':False]
['text':' If we don't have any hooks, we want to skip the rest of the logic in','line_number':1515,'multiline':False]
['text':' this function, and just call forward.','line_number':1516,'multiline':False]
['text':' type: ignore[misc]','line_number':1540,'multiline':False]
['text':' mark that always called hook is run','line_number':1567,'multiline':False]
['text':' Handle the non-full backward hooks','line_number':1586,'multiline':False]
['text':' run always called hooks if they have not already been run','line_number':1603,'multiline':False]
['text':' For now only forward hooks have the always_call option but perhaps','line_number':1604,'multiline':False]
['text':' this functionality should be added to full backward hooks as well.','line_number':1605,'multiline':False]
['text':' raise exception raised in try block','line_number':1630,'multiline':False]
['text':' Support loading old checkpoints that don't have the following attrs:','line_number':1644,'multiline':False]
['text':' On the return type:','line_number':1668,'multiline':False]
['text':' We choose to return `Any` in the `__getattr__` type signature instead of a more strict `Union[Tensor, Module]`.','line_number':1669,'multiline':False]
['text':' This is done for better interop with various type checkers for the end users.','line_number':1670,'multiline':False]
['text':' Having a stricter return type doesn't play nicely with `register_buffer()` and forces','line_number':1671,'multiline':False]
['text':' people to excessively use type-ignores, asserts, casts, etc.','line_number':1672,'multiline':False]
['text':' See full discussion on the problems with returning `Union` here','line_number':1673,'multiline':False]
['text':' https://github.com/microsoft/pyright/issues/4213','line_number':1674,'multiline':False]
['text':' The user can pass an optional arbitrary mappable object to `state_dict`, in which case `state_dict` returns','line_number':1810,'multiline':False]
['text':' back that same object. But if they pass nothing, an `OrderedDict` is created and returned.','line_number':1811,'multiline':False]
['text':' TODO: Change `*args` to `*` and remove the corresponding warning in docs when BC allows.','line_number':1822,'multiline':False]
['text':' Also remove the logic for arg parsing together.','line_number':1823,'multiline':False]
['text':' TODO: Remove `args` and the parsing logic when BC allows.','line_number':1868,'multiline':False]
['text':' DeprecationWarning is ignored by default','line_number':1876,'multiline':False]
['text':' This is used to avoid copying uninitialized parameters into','line_number':2009,'multiline':False]
['text':' non-lazy modules, since they dont have the hook to do the checks','line_number':2010,'multiline':False]
['text':' in such case, it will error when accessing the .shape attribute.','line_number':2011,'multiline':False]
['text':' Backward compatibility: loading 1-dim tensor from 0.3.* to version 0.4+','line_number':2013,'multiline':False]
['text':' local shape should match the one in checkpoint','line_number':2018,'multiline':False]
['text':' Shape checks are already done above','line_number':2033,'multiline':False]
['text':' get the name of param/buffer/child','line_number':2063,'multiline':False]
['text':' copy state_dict so _load_from_state_dict can modify it','line_number':2110,'multiline':False]
['text':' mypy isn't aware that "_metadata" exists in state_dict','line_number':2114,'multiline':False]
['text':' type: ignore[attr-defined]','line_number':2115,'multiline':False]
['text':' Note that the hook can modify missing_keys and unexpected_keys.','line_number':2129,'multiline':False]
['text':' We treat the extra repr like the sub-module, one item per line','line_number':2482,'multiline':False]
['text':' empty string will be split into list ['']','line_number':2485,'multiline':False]
['text':' simple one-liner info, which most builtin Modules will use','line_number':2497,'multiline':False]
['text':' Eliminate attrs that are not legal Python variable names','line_number':2514,'multiline':False]
['text':' replicas do not have parameters themselves, the replicas reference the original','line_number':2523,'multiline':False]
['text':' module.','line_number':2524,'multiline':False]
['text':' type: ignore[assignment]','line_number':2528,'multiline':False]
