['text':' forward declaration of Node from function.h','line_number':10,'multiline':False]
['text':'/ A RAII guard that enables Anomaly Detection Mode.','line_number':30,'multiline':False]
['text':'/','line_number':31,'multiline':False]
['text':'/ Anomaly detection mode is useful for debugging problems happening','line_number':32,'multiline':False]
['text':'/ in the backward, such as unexpectedly modified tensors or NaNs','line_number':33,'multiline':False]
['text':'/ occuring in the backward.','line_number':34,'multiline':False]
['text':'/','line_number':35,'multiline':False]
['text':'/ The enabling of anomaly mode is global - as soon as there is one','line_number':36,'multiline':False]
['text':'/ such guard, it is enabled for all computation and threads. It also','line_number':37,'multiline':False]
['text':'/ comes with a significant performance penalty.','line_number':38,'multiline':False]
['text':'/','line_number':39,'multiline':False]
['text':'/ Example:','line_number':40,'multiline':False]
['text':'/ @code','line_number':41,'multiline':False]
['text':'/ auto x = torch::tensor({1.}, torch::requires_grad());','line_number':42,'multiline':False]
['text':'/ {','line_number':43,'multiline':False]
['text':'/   torch::autograd::DetectAnomalyGuard detect_anomaly;','line_number':44,'multiline':False]
['text':'/   auto x = torch::tensor({5.0}, torch::requires_grad());','line_number':45,'multiline':False]
['text':'/   auto y = x * x;','line_number':46,'multiline':False]
['text':'/   auto z = y * y;','line_number':47,'multiline':False]
['text':'/   y += 1;','line_number':48,'multiline':False]
['text':'/   z.backward();','line_number':49,'multiline':False]
['text':'/ }','line_number':50,'multiline':False]
['text':'/ @endcode','line_number':51,'multiline':False]
['text':' namespace autograd','line_number':72,'multiline':False]
['text':' namespace torch','line_number':73,'multiline':False]
