['text':' All RPC peers should call into this function at the same time. Each peer','line_number':10,'multiline':False]
['text':' provides its own id and name, and this function uses the given Store to','line_number':11,'multiline':False]
['text':' gather global name-to-id mapping on all peers.','line_number':12,'multiline':False]
['text':' Ranks in dynamic RPC groups will initially call into this to establish the','line_number':19,'multiline':False]
['text':' name-to-id mapping for the current peers in the group. The current rank will','line_number':20,'multiline':False]
['text':' put its own worker info in the store and discover all the ranks that came','line_number':21,'multiline':False]
['text':' before it. NOTE: This needs to be called with the Dynamic RPC group','line_number':22,'multiline':False]
['text':' membership management token held.','line_number':23,'multiline':False]
['text':' Remove name frmo Store, used in dynamic RPC groups.','line_number':29,'multiline':False]
['text':' NOTE: This needs to be called with the Dynamic RPC group','line_number':30,'multiline':False]
['text':' membership management token held.','line_number':31,'multiline':False]
['text':' This performs a synchronization of all call counts by using store.','line_number':37,'multiline':False]
['text':' All RPC peers wait for others to join to exit at the same time.','line_number':38,'multiline':False]
['text':' namespace rpc','line_number':44,'multiline':False]
['text':' namespace distributed','line_number':45,'multiline':False]
['text':' namespace torch','line_number':46,'multiline':False]
