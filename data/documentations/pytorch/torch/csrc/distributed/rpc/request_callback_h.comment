['text':' Functor which is invoked to process an RPC message. This is an abstract class','line_number':9,'multiline':False]
['text':' with some common functionality across all request handlers. Users need to','line_number':10,'multiline':False]
['text':' implement this interface to perform the actual business logic.','line_number':11,'multiline':False]
['text':' Invoke the callback.','line_number':14,'multiline':False]
['text':' RpcAgent implementation should invoke ``RequestCallback`` to process','line_number':22,'multiline':False]
['text':' received requests. There is no restriction on the implementation's','line_number':23,'multiline':False]
['text':' threading model. This function takes an rvalue reference of the Message','line_number':24,'multiline':False]
['text':' object. It is expected to return the future to a response message or','line_number':25,'multiline':False]
['text':' message containing an exception. Different rpc agent implementations are','line_number':26,'multiline':False]
['text':' expected to ensure delivery of the response/exception based on their','line_number':27,'multiline':False]
['text':' implementation specific mechanisms.','line_number':28,'multiline':False]
['text':' namespace rpc','line_number':34,'multiline':False]
['text':' namespace distributed','line_number':35,'multiline':False]
['text':' namespace torch','line_number':36,'multiline':False]
