['text':' The TensorPipe agent splits the RPC message's information across multiple','line_number':16,'multiline':False]
['text':' payloads. This allows the agent to provide the data to TensorPipe without','line_number':17,'multiline':False]
['text':' performing a copy into a single contiguous buffer, and without storing it as','line_number':18,'multiline':False]
['text':' metadata, which is less efficient.','line_number':19,'multiline':False]
['text':' First come the rpc::Message::type() and ::id().','line_number':21,'multiline':False]
['text':' Then comes the rpc::Message::payload();','line_number':24,'multiline':False]
['text':' Last comes the pickle of rpc::Message::tensors() (with the tensors themselves','line_number':26,'multiline':False]
['text':' stored as, well, tensors in the tensorpipe::Message).','line_number':27,'multiline':False]
['text':' streams ','line_number':42,'multiline':True]
['text':' Enforce memory copy if tensor is created from torch::from_blob, means','line_number':44,'multiline':False]
['text':' that the tensor doesn't own the memory.','line_number':45,'multiline':False]
['text':' deviceIndex ','line_number':77,'multiline':True]
['text':' streams ','line_number':79,'multiline':True]
['text':' namespace','line_number':107,'multiline':False]
['text':' As the vector of streams will typically be very small (1-8 items) we expect','line_number':109,'multiline':False]
['text':' a linear search to be as fast (or faster?) than if we used a hashmap.','line_number':110,'multiline':False]
['text':' Metadata','line_number':140,'multiline':False]
['text':' kTpMessageTypeIdx = 0','line_number':143,'multiline':False]
['text':' kTpMessageIdIdx = 1','line_number':146,'multiline':False]
['text':' Payload','line_number':150,'multiline':False]
['text':' TensorPipe uses the same Message class for both reading and writing, thus','line_number':152,'multiline':False]
['text':' it uses non-const pointers even though it doesn't modify them when writing.','line_number':153,'multiline':False]
['text':' NOLINTNEXTLINE(cppcoreguidelines-pro-type-const-cast)','line_number':154,'multiline':False]
['text':' kTpMessagePayloadIdx = 2','line_number':156,'multiline':False]
['text':' The function below might allocate new tensors if there are Tensor views.','line_number':161,'multiline':False]
['text':' Apply stream guard here to include those Tensor allocation operations to','line_number':162,'multiline':False]
['text':' the streams.','line_number':163,'multiline':False]
['text':' Tensors','line_number':165,'multiline':False]
['text':' kTpMessagePickleIdx = 3','line_number':179,'multiline':False]
['text':' FIXME The two resizes below zero out the vectors, which is not needed.','line_number':246,'multiline':False]
['text':' Tensors','line_number':283,'multiline':False]
['text':' No need to pass typeResolver here, as it always processes string and','line_number':302,'multiline':False]
['text':' tensors only','line_number':303,'multiline':False]
['text':' use_storage_device','line_number':310,'multiline':True]
['text':' namespace rpc','line_number':340,'multiline':False]
['text':' namespace distributed','line_number':341,'multiline':False]
['text':' namespace torch','line_number':342,'multiline':False]
['text':' USE_TENSORPIPE','line_number':344,'multiline':False]
