['text':' UCC does not support multiple CUDA devices per process.','line_number':55,'multiline':False]
['text':' Finalizes UCC status or exception of collective request.','line_number':103,'multiline':False]
['text':' The future returned by getFuture.','line_number':146,'multiline':False]
['text':' Store a reference to collective's outputs, used by result','line_number':148,'multiline':False]
['text':' Performs a health check by initializing dummy UCC & UCX communicators and','line_number':170,'multiline':False]
['text':' then destroying them. This will help indicate and signal any','line_number':171,'multiline':False]
['text':' UCC/UCX-related issues prior to the first collective. The actual','line_number':172,'multiline':False]
['text':' initialization and subsequent destruction is ran on a separate thread and','line_number':173,'multiline':False]
['text':' the main thread is signalled about timeouts/errors to report to the','line_number':174,'multiline':False]
['text':' application.','line_number':175,'multiline':False]
['text':' Counting for the sequential number of UCC collective_post call.','line_number':257,'multiline':False]
['text':' Agrees on an initial sequence number for the whole group by having rank 0','line_number':260,'multiline':False]
['text':' create it and broadcast it to other ranks using the store.','line_number':261,'multiline':False]
['text':' Retrieves the current sequence number for the whole group, which should be','line_number':264,'multiline':False]
['text':' in sync. If the returned number is not consistent across the group, it','line_number':265,'multiline':False]
['text':' may indicate that there is some sort of collective desynchronization.','line_number':266,'multiline':False]
['text':' namespace c10d','line_number':351,'multiline':False]
['text':' USE_C10D_UCC','line_number':353,'multiline':False]
