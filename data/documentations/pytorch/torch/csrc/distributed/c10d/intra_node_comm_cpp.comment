['text':' Forces detectedTopology() to return Topology::FULLY_CONNECTED, so','line_number':30,'multiline':False]
['text':' IntraNodeComm can be used even without NVLink connection. This is only used','line_number':31,'multiline':False]
['text':' for testing purposes.','line_number':32,'multiline':False]
['text':'//////////////////////////////////////////////////////////////////////////////','line_number':35,'multiline':False]
['text':' CUDA Functions','line_number':36,'multiline':False]
['text':'//////////////////////////////////////////////////////////////////////////////','line_number':37,'multiline':False]
['text':'//////////////////////////////////////////////////////////////////////////////','line_number':62,'multiline':False]
['text':' Topology Detection','line_number':63,'multiline':False]
['text':'//////////////////////////////////////////////////////////////////////////////','line_number':64,'multiline':False]
['text':' TODO: find a better way to determine this','line_number':66,'multiline':False]
['text':'*
 * Query the nvlink connection among devices.
 ','line_number':92,'multiline':True]
['text':' For each device, loop over devices connected to it via NVLink','line_number':117,'multiline':False]
['text':' We've exhausted the NVLinks connected to this device.','line_number':125,'multiline':False]
['text':' This error is benign. There doesn't seem to be a reliable','line_number':126,'multiline':False]
['text':' way to obtain the maximum link value that can be passed to','line_number':127,'multiline':False]
['text':' the API, so we simply increment the link value until the','line_number':128,'multiline':False]
['text':' API fails or we hit a predefined maximum value.','line_number':129,'multiline':False]
['text':' Remote device is GPU','line_number':132,'multiline':False]
['text':' Unexpected error. Return an empty NvlMesh','line_number':138,'multiline':False]
['text':' Remote device is NVSwitch','line_number':147,'multiline':False]
['text':' Process NVSwitch connections. For simplicity, we assume','line_number':153,'multiline':False]
['text':' all NVSwitches are interconnected.','line_number':154,'multiline':False]
['text':'*
 * Determine if the devices form a hybrid cube mesh
 * topology given a NvlMesh.
 ','line_number':169,'multiline':True]
['text':' TODO: this is insufficent and needs revisit','line_number':183,'multiline':False]
['text':'*
 * Detech topology given a NvlMesh.
 ','line_number':191,'multiline':True]
['text':'//////////////////////////////////////////////////////////////////////////////','line_number':218,'multiline':False]
['text':' Rendezvous and Initialization','line_number':219,'multiline':False]
['text':'//////////////////////////////////////////////////////////////////////////////','line_number':220,'multiline':False]
['text':' Intentionally releasing resources without synchronizing devices. The','line_number':237,'multiline':False]
['text':' teardown logic is safe for propoerly sync'd user program. We don't want','line_number':238,'multiline':False]
['text':' improperly sync'd user program to hang here.','line_number':239,'multiline':False]
['text':'*
 * Use c10d::Store to perform allgather on a trivially copyable type.
 ','line_number':254,'multiline':True]
['text':' First hand shake: exchange hostname and device bus ID','line_number':311,'multiline':False]
['text':' Verify unique devices','line_number':343,'multiline':False]
['text':' Query nvlink connection','line_number':353,'multiline':False]
['text':' Detect topology','line_number':356,'multiline':False]
['text':' Initialize p2p state','line_number':359,'multiline':False]
['text':' Allocate buffer','line_number':362,'multiline':False]
['text':' Second handshake: exchange topology and CUDA IPC handles','line_number':366,'multiline':False]
['text':' Make p2p state and buffer available for IPC','line_number':373,'multiline':False]
['text':' Report usage for testing purposes.','line_number':433,'multiline':False]
['text':' We don't care about overflowing.','line_number':434,'multiline':False]
['text':' namespace intra_node_comm','line_number':447,'multiline':False]
['text':' namespace c10d','line_number':448,'multiline':False]
