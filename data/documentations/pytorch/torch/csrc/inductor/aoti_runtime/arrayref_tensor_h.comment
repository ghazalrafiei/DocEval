['text':' Can't use c10::ArrayRef because it's not truly header-only and','line_number':13,'multiline':False]
['text':' pulls in other c10 headers. This is (sadly) copy-pasted and','line_number':14,'multiline':False]
['text':' adapted.','line_number':15,'multiline':False]
['text':'/ The start of the array, in an external buffer.','line_number':27,'multiline':False]
['text':'/ The number of elements.','line_number':30,'multiline':False]
['text':'/ @name Constructors','line_number':34,'multiline':False]
['text':'/ @{','line_number':35,'multiline':False]
['text':'/ Construct an empty MiniArrayRef.','line_number':37,'multiline':False]
['text':' implicit ','line_number':38,'multiline':True]
['text':'/ Construct an MiniArrayRef from a single element.','line_number':40,'multiline':False]
['text':' TODO Make this explicit','line_number':41,'multiline':False]
['text':'/ Construct an MiniArrayRef from a pointer and length.','line_number':44,'multiline':False]
['text':'/ Construct an MiniArrayRef from a range.','line_number':47,'multiline':False]
['text':' implicit ','line_number':55,'multiline':True]
['text':'/ Construct an MiniArrayRef from a std::vector.','line_number':58,'multiline':False]
['text':' The enable_if stuff here makes sure that this isn't used for','line_number':59,'multiline':False]
['text':' std::vector<bool>, because MiniArrayRef can't work on a std::vector<bool>','line_number':60,'multiline':False]
['text':' bitfield.','line_number':61,'multiline':False]
['text':' implicit ','line_number':63,'multiline':True]
['text':'/ Construct an MiniArrayRef from a std::array','line_number':70,'multiline':False]
['text':' implicit ','line_number':72,'multiline':True]
['text':'/ Construct an MiniArrayRef from a C array.','line_number':75,'multiline':False]
['text':' implicit ','line_number':77,'multiline':True]
['text':'/ Construct an MiniArrayRef from a std::initializer_list.','line_number':79,'multiline':False]
['text':' implicit ','line_number':80,'multiline':True]
['text':'/ @}','line_number':86,'multiline':False]
['text':'/ @name Simple Operations','line_number':87,'multiline':False]
['text':'/ @{','line_number':88,'multiline':False]
['text':' These are actually the same as iterator, since MiniArrayRef only','line_number':97,'multiline':False]
['text':' gives you const iterators.','line_number':98,'multiline':False]
['text':'/ empty - Check if the array is empty.','line_number':113,'multiline':False]
['text':'/ size - Get the array size.','line_number':122,'multiline':False]
['text':'/ equals - Check for element-wise equality.','line_number':127,'multiline':False]
['text':'/ @}','line_number':132,'multiline':False]
['text':'/ @name Operator Overloads','line_number':133,'multiline':False]
['text':'/ @{','line_number':134,'multiline':False]
['text':'/ Disallow accidental assignment from a temporary.','line_number':139,'multiline':False]
['text':'/','line_number':140,'multiline':False]
['text':'/ The declaration here is extra complicated so that "arrayRef = {}"','line_number':141,'multiline':False]
['text':'/ continues to select the move assignment operator.','line_number':142,'multiline':False]
['text':'/ Disallow accidental assignment from a temporary.','line_number':147,'multiline':False]
['text':'/','line_number':148,'multiline':False]
['text':'/ The declaration here is extra complicated so that "arrayRef = {}"','line_number':149,'multiline':False]
['text':'/ continues to select the move assignment operator.','line_number':150,'multiline':False]
['text':' Shim for AOTI generated code to pretend a raw array works like an','line_number':176,'multiline':False]
['text':' AtenTensorHandle.','line_number':177,'multiline':False]
['text':' We need to look the same as RAIIAtenTensorHandle, which returns','line_number':216,'multiline':False]
['text':' an owning AtenTensorHandle from release(). So, we allocate one!','line_number':217,'multiline':False]
['text':' We don't need to free any memory.','line_number':222,'multiline':False]
['text':' We expect generated code to have statically available sizes &','line_number':255,'multiline':False]
['text':' strides for us.','line_number':256,'multiline':False]
['text':' REVIEW: we should add a way to build the DSO in debug mode during','line_number':283,'multiline':False]
['text':' tests so we can have checks like this!','line_number':284,'multiline':False]
['text':' namespace aot_inductor','line_number':356,'multiline':False]
['text':' namespace torch','line_number':357,'multiline':False]
