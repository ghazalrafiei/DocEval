['text':' This class is used as a singleton (see cuda_ipc_global_entities)','line_number':23,'multiline':False]
['text':' This variable is used to track its lifetime to avoid accessing it','line_number':24,'multiline':False]
['text':' after it was destroyed which would lead to segmentation faults','line_number':25,'multiline':False]
['text':' Note that a trvial type is used which doesn't suffer from construction','line_number':26,'multiline':False]
['text':' and destruction order issues','line_number':27,'multiline':False]
['text':' Begin critical section to modify shared blocks','line_number':70,'multiline':False]
['text':' Need to reset blocks out of the critical section here, otherwise it','line_number':83,'multiline':False]
['text':' deadlocks.','line_number':84,'multiline':False]
['text':' unused ','line_number':123,'multiline':True]
['text':' namespace','line_number':139,'multiline':False]
['text':' CUDA have the unofficial limit on the number of recorded blocking','line_number':152,'multiline':False]
['text':' interprocess events, to prevent using of all events, we are switching to','line_number':153,'multiline':False]
['text':' StreamSync before limit reached.','line_number':154,'multiline':False]
['text':'','line_number':155,'multiline':False]
['text':'  ```python','line_number':156,'multiline':False]
['text':'  import torch','line_number':157,'multiline':False]
['text':'  a = [ torch.cuda.Event(','line_number':158,'multiline':False]
['text':'      enable_timing=False, blocking=True, interprocess=True) for i in','line_number':159,'multiline':False]
['text':'      range(30000) ]','line_number':160,'multiline':False]
['text':'  [i.record() for i in a]','line_number':161,'multiline':False]
['text':'  ```','line_number':162,'multiline':False]
['text':'','line_number':163,'multiline':False]
['text':' TODO: More efficient would be to create event inside of main thread (at','line_number':166,'multiline':False]
['text':' the moment of the queue.put). The reason this is more efficient is','line_number':167,'multiline':False]
['text':' because the main thread may have queued extra work on the stream, which','line_number':168,'multiline':False]
['text':' this event will consequently wait for (uselessly).','line_number':169,'multiline':False]
['text':' cuIpcGetEventHandle with HIP is not supported, so we have to sync','line_number':185,'multiline':False]
['text':' stream instead of passing event','line_number':186,'multiline':False]
['text':' No throw ','line_number':205,'multiline':True]
['text':' namespace torch','line_number':260,'multiline':False]
['text':' namespace c10','line_number':266,'multiline':False]
