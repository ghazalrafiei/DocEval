['text':' Lower is a backend-specific method since it returns a backend specific','line_number':52,'multiline':False]
['text':' type. hence, it is convenient to define it differently per-backend rather','line_number':53,'multiline':False]
['text':' than at Node API','line_number':54,'multiline':False]
['text':' The hash of the dag WITH size info. Used for shape caching','line_number':60,'multiline':False]
['text':' The hash of the dag used to look up the compiled graph by a hash','line_number':62,'multiline':False]
['text':' in this case, we will use the dag hash WITHOUT size info if dynamic shape','line_number':63,'multiline':False]
['text':' is enabled and use the dag hash WITH size info otherwise.','line_number':64,'multiline':False]
['text':' Note: this OpKind is separate from ltc_ops.h since it would be a circular','line_number':68,'multiline':False]
['text':' import otherwise, I like leaving TensorList in this file, and I think most of','line_number':69,'multiline':False]
['text':' ltc_ops special cases will be deleted anyway','line_number':70,'multiline':False]
['text':' TensorList represents an at::TensorList which is a vector[Tensor] but is also','line_number':73,'multiline':False]
['text':' a first-class IValue and can be fed as a single input to a TS program.  It is','line_number':74,'multiline':False]
['text':' much easier to handle TensorLists in Lazy Tensor code if they are represented','line_number':75,'multiline':False]
['text':' as a single Node so there can be more than one TensorList and more than one','line_number':76,'multiline':False]
['text':' Tensor side-by-side as operands to an op.','line_number':77,'multiline':False]
['text':'','line_number':78,'multiline':False]
['text':' Note: shape is undefined for TensorList.  We assert in some places that','line_number':79,'multiline':False]
['text':' #shapes matches #outputs and this stems from','line_number':80,'multiline':False]
['text':'       the fact that currently all IR nodes represent tensors (there is no','line_number':81,'multiline':False]
['text':'       type system for this IR).  Becuase of this, TensorList is a bit of a','line_number':82,'multiline':False]
['text':'       hack.','line_number':83,'multiline':False]
['text':'','line_number':84,'multiline':False]
['text':' TODO(whc) once Shape() API is moved to Node base, also make it virtual, and','line_number':85,'multiline':False]
['text':' then implement it as NotImplemented for TensorList, also fixing the assertion','line_number':86,'multiline':False]
['text':' that would fail.','line_number':87,'multiline':False]
['text':' namespace lazy','line_number':105,'multiline':False]
['text':' namespace torch','line_number':106,'multiline':False]
