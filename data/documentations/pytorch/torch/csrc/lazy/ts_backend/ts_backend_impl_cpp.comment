['text':' This function is defined in the codegenerated RegisterDispatchKey.cpp file.','line_number':14,'multiline':False]
['text':' For the TorchScript backend, we have a special case where the registration','line_number':15,'multiline':False]
['text':' does not happen immediately (at static initialization time), so that if an','line_number':16,'multiline':False]
['text':' external backend is loaded, it has a chance to register itself, and','line_number':17,'multiline':False]
['text':' TorchScript only registers itself if explicitly initialized','line_number':18,'multiline':False]
['text':' namespace at','line_number':21,'multiline':False]
['text':' TODO(whc) unify how all our flags are set and parsed as envs','line_number':45,'multiline':False]
['text':'non_blocking=','line_number':98,'multiline':True]
['text':' calling .item() on singleton cpu tensor is fast, and using fill is a','line_number':100,'multiline':False]
['text':' safe, async way to copy cpu to cuda for a single value','line_number':101,'multiline':False]
['text':'non_blocking=','line_number':106,'multiline':True]
['text':'////////////computation client interfaces///////////////////////','line_number':132,'multiline':False]
['text':' std::map<std::string, Metric> GetMetrics() const override { return {}; }','line_number':176,'multiline':False]
['text':' MemoryInfo GetMemoryInfo(const std::string& device) override {','line_number':178,'multiline':False]
['text':'   LOG(FATAL) << "Not implemented yet.";','line_number':179,'multiline':False]
['text':' }','line_number':180,'multiline':False]
['text':' TODO(whc) should this check be made more general? it's written somewhat','line_number':221,'multiline':False]
['text':' oddly','line_number':222,'multiline':False]
['text':' TODO(whc) figure out how to query available devices from pytorch','line_number':246,'multiline':False]
['text':' Note, we ignore the device type specified by the c10::Device since it is','line_number':254,'multiline':False]
['text':' expected to be a virtual device (lazy::), but we need to change this when','line_number':255,'multiline':False]
['text':' we support lazy as a mode','line_number':256,'multiline':False]
['text':' For TS backend, hardware device _is_ eager device','line_number':263,'multiline':False]
['text':' namespace lazy','line_number':283,'multiline':False]
['text':' namespace torch','line_number':284,'multiline':False]
