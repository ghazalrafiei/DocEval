['text':'*
 * Hash utils in this file is adapted from PyTorch/XLA
 * https://github.com/pytorch/xla/blob/e0e5f937a0ba8d904f9608137dc8c51ba439df2d/third_party/xla_client/util.h
 ','line_number':1,'multiline':True]
['text':' Swich from typedef hash_t = uint128 to provide explicit casters','line_number':23,'multiline':False]
['text':' Std* functions use 64-bit hash','line_number':35,'multiline':False]
['text':' Other functions are all 128-bit','line_number':40,'multiline':False]
['text':' Returns a string representation of a hash','line_number':49,'multiline':False]
['text':' Automatic templated implementation for 'arithmetic' types','line_number':62,'multiline':False]
['text':' added because on macos builds the vector<bool> specialization','line_number':70,'multiline':False]
['text':' breaks falling through to the templated arithmetic types above','line_number':71,'multiline':False]
['text':' Specialiazed implementations for proprietary types','line_number':74,'multiline':False]
['text':' Taken from glibc's implementation of hashing optionals,','line_number':156,'multiline':False]
['text':' we want to include a contribution to the hash to distinguish','line_number':157,'multiline':False]
['text':' cases where one or another option was null, but we hope it doesn't','line_number':158,'multiline':False]
['text':' collide with an actually scalar value.','line_number':159,'multiline':False]
['text':'','line_number':160,'multiline':False]
['text':' Use an arbitrary randomly-selected 64-bit integer rather than a','line_number':161,'multiline':False]
['text':' small constant that we then hash at runtime so we don't have to','line_number':162,'multiline':False]
['text':' repeatedly hash a constant at runtime.','line_number':163,'multiline':False]
['text':' Hashing for c10::optional types contributes to hash','line_number':166,'multiline':False]
['text':' for optionals with null value, important to distinguish','line_number':167,'multiline':False]
['text':' between <nullopt, non-nullopt> and <non-nullopt, nullopt> cases','line_number':168,'multiline':False]
['text':' Hashing of containers','line_number':178,'multiline':False]
['text':' Forward declare to allow hashes of vectors of vectors to work.','line_number':179,'multiline':False]
['text':' Need a special case for optional<container>?','line_number':188,'multiline':False]
['text':' Varargs hashing','line_number':226,'multiline':False]
['text':' namespace lazy','line_number':237,'multiline':False]
['text':' namespace torch','line_number':238,'multiline':False]
