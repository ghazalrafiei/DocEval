['text':' Enables caching on for dynamic shapes (aka disable hash on shapes)','line_number':7,'multiline':False]
['text':' Either side could be kNullValue which has node as nullptr','line_number':38,'multiline':False]
['text':' Move shapes into node','line_number':73,'multiline':False]
['text':' Ideally, optional operands should be filtered by the leaf node classes,','line_number':80,'multiline':False]
['text':' but it's just much easier to do it here.','line_number':81,'multiline':False]
['text':' TODO(alanwaketan): Find a way to move the below logic to the leaf node','line_number':82,'multiline':False]
['text':' classes.','line_number':83,'multiline':False]
['text':' Retrieves the full shape of the IR Node.','line_number':110,'multiline':False]
['text':' Retrieves the shape of the output at a given index.','line_number':115,'multiline':False]
['text':' Add the shape computed by the shape_fn','line_number':120,'multiline':False]
['text':' Compute the shape using the provided shape_fn.','line_number':128,'multiline':False]
['text':' We use kNullOutput instead of kNullValue here to avoid implicit casting,','line_number':149,'multiline':False]
['text':' which would prevent this method from returning a reference.','line_number':150,'multiline':False]
['text':' namespace lazy','line_number':173,'multiline':False]
['text':' namespace torch','line_number':174,'multiline':False]
