['text':'*
 * Cache utils in this file is adapted from PyTorch/XLA
 * https://github.com/pytorch/xla/blob/master/third_party/xla_client/cache.h
 ','line_number':1,'multiline':True]
['text':' Generic key and object cache with LRU expiration policy. The objects of type','line_number':18,'multiline':False]
['text':' T will be stored as std::shared_ptr<T> and taken and returned as such, by the','line_number':19,'multiline':False]
['text':' cache API.','line_number':20,'multiline':False]
['text':' Adds an object to the cache, unless it already exists. If the cache grows','line_number':33,'multiline':False]
['text':' beyond the limit set during construction, the oldest used object will be','line_number':34,'multiline':False]
['text':' removed from the cache.','line_number':35,'multiline':False]
['text':' Retrieves the existing object if it exists. If it does, its position in','line_number':55,'multiline':False]
['text':' the LRU list gets moved to the head of the list.','line_number':56,'multiline':False]
['text':' Returns nullptr if no object with the specified key is found within the','line_number':57,'multiline':False]
['text':' cache.','line_number':58,'multiline':False]
['text':' namespace lazy','line_number':143,'multiline':False]
['text':' namespace torch','line_number':144,'multiline':False]
