['text':' ============================================================================','line_number':42,'multiline':False]
['text':' == Value (Tensor, Scalar) summary ==========================================','line_number':43,'multiline':False]
['text':' ============================================================================','line_number':44,'multiline':False]
['text':' Collected during profiling.','line_number':55,'multiline':False]
['text':' Wrap `weak_self_` in `c10::optional` and split device into components to','line_number':64,'multiline':False]
['text':' keep struct default constructable. (which the std::array initializer needs)','line_number':65,'multiline':False]
['text':' Used during post processing.','line_number':71,'multiline':False]
['text':' Set during `calculateUniqueTensorIDs`.','line_number':87,'multiline':False]
['text':' ============================================================================','line_number':98,'multiline':False]
['text':' == ExtraFields =============================================================','line_number':99,'multiline':False]
['text':' ============================================================================','line_number':100,'multiline':False]
['text':' Set in the exit callback.','line_number':112,'multiline':False]
['text':' While building the event tree, we want to report a vulkan event's duration','line_number':183,'multiline':False]
['text':' as 0 so that its end time doesn't exceed that of its parent cpu op','line_number':184,'multiline':False]
['text':' For performance.','line_number':198,'multiline':False]
['text':' For performance.','line_number':223,'multiline':False]
['text':'PyMethodDef','line_number':240,'multiline':True]
['text':' Indicates that `self_` is the kth instance of `cls_` observed.','line_number':256,'multiline':False]
['text':' kth python event observed. (Used by TensorBoard)','line_number':287,'multiline':False]
['text':' Mirrors `libkineto::GenericTraceActivity::Flow`. This information is used','line_number':331,'multiline':False]
['text':' during post processing to properly embed Kineto events into the broader','line_number':332,'multiline':False]
['text':' profiler tree structure. End users are not generally expected to use these','line_number':333,'multiline':False]
['text':' fields directly, but they are available for debugging.','line_number':334,'multiline':False]
['text':' Set in the exit callback.','line_number':431,'multiline':False]
['text':' InputOutputEncoder','line_number':449,'multiline':False]
['text':' Stores each op_events' shapes and dtypes, and concrete values into a','line_number':450,'multiline':False]
['text':' contiguous AppendOnlyList so that we no longer create vectors for shapes','line_number':451,'multiline':False]
['text':' and dtypes on every op. Those vectors can be created during','line_number':452,'multiline':False]
['text':' post-processing.','line_number':453,'multiline':False]
['text':' It splits the data into two categories: input shapes and concrete inputs.','line_number':454,'multiline':False]
['text':' Used during post-processing to unpack the encoded data.','line_number':459,'multiline':False]
['text':' Each method returns a "supplier" lambda which takes no arguments;','line_number':460,'multiline':False]
['text':' invoking the lambda once will return a list of args that represent','line_number':461,'multiline':False]
['text':' the inputs for one op.','line_number':462,'multiline':False]
['text':' The data is split into two streams: "input shapes" and "concrete inputs".','line_number':463,'multiline':False]
['text':' Note: "auto" only works because these are only used in collection.cpp,','line_number':464,'multiline':False]
['text':' where they are implemented.','line_number':465,'multiline':False]
['text':' TODO: generalize to other lists.','line_number':476,'multiline':False]
['text':' Implementation detail for getInputShapeGenerator and','line_number':488,'multiline':False]
['text':' getConcreteInputGenerator','line_number':489,'multiline':False]
['text':' See `containers.h` for block size benchmarks.','line_number':551,'multiline':False]
['text':' NB: This is a destructive operation.','line_number':555,'multiline':False]
['text':' report_input_shapes','line_number':580,'multiline':False]
['text':' with_stack (JIT)','line_number':583,'multiline':False]
['text':' with_modules','line_number':586,'multiline':False]
['text':' with_flops','line_number':589,'multiline':False]
['text':' report extra metadata, i.e. collective communication meta','line_number':592,'multiline':False]
['text':' ProfilerState::KINETO_GPU_FALLBACK or','line_number':595,'multiline':False]
['text':' ProfilerState::KINETO_PRIVATEUSE1_FALLBACK','line_number':596,'multiline':False]
['text':' reportBackendEventToActiveKinetoProfiler','line_number':600,'multiline':False]
['text':' _reportVulkanEventToProfiler','line_number':603,'multiline':False]
['text':' reportMemoryUsage','line_number':607,'multiline':False]
['text':' reportOOMs','line_number':610,'multiline':False]
['text':' with_stack (Python)','line_number':613,'multiline':False]
['text':' NB: This is a destructive operation.','line_number':628,'multiline':False]
['text':' namespace impl','line_number':659,'multiline':False]
['text':' namespace profiler','line_number':660,'multiline':False]
['text':' namespace torch','line_number':661,'multiline':False]
