['text':' data_value_t is the type for Event data values.','line_number':14,'multiline':False]
['text':' Event represents a single event that can be logged out to an external','line_number':17,'multiline':False]
['text':' tracker. This does acquire a lock on logging so should be used relatively','line_number':18,'multiline':False]
['text':' infrequently to avoid performance issues.','line_number':19,'multiline':False]
['text':' name is the name of the event. This is a static string that's used to','line_number':21,'multiline':False]
['text':' differentiate between event types for programmatic access. The type should','line_number':22,'multiline':False]
['text':' be in the format of a fully qualified Python-style class name.','line_number':23,'multiline':False]
['text':' Ex: torch.monitor.MonitorEvent','line_number':24,'multiline':False]
['text':' timestamp is a timestamp relative to the Unix epoch time.','line_number':27,'multiline':False]
['text':' data contains rich information about the event. The contents are event','line_number':30,'multiline':False]
['text':' specific so you should check the type to ensure it's what you expect before','line_number':31,'multiline':False]
['text':' accessing the data.','line_number':32,'multiline':False]
['text':'','line_number':33,'multiline':False]
['text':' NOTE: these events are not versioned and it's up to the consumer of the','line_number':34,'multiline':False]
['text':' events to check the fields to ensure backwards compatibility.','line_number':35,'multiline':False]
['text':' EventHandler represents an abstract event handler that can be registered to','line_number':44,'multiline':False]
['text':' capture events. Every time an event is logged every handler will be called','line_number':45,'multiline':False]
['text':' with the events contents.','line_number':46,'multiline':False]
['text':'','line_number':47,'multiline':False]
['text':' NOTE: The handlers should avoid any IO, blocking calls or heavy computation','line_number':48,'multiline':False]
['text':' as this may block the main thread and cause performance issues.','line_number':49,'multiline':False]
['text':' handle needs to be implemented to handle the events. This may be called','line_number':54,'multiline':False]
['text':' from multiple threads so needs to be thread safe.','line_number':55,'multiline':False]
['text':' logEvent calls each registered event handler with the event. This method can','line_number':59,'multiline':False]
['text':' be called from concurrently from multiple threads.','line_number':60,'multiline':False]
['text':' registerEventHandler registers an EventHandler so it receives any logged','line_number':63,'multiline':False]
['text':' events. Typically an EventHandler will be registered during program','line_number':64,'multiline':False]
['text':' setup and unregistered at the end.','line_number':65,'multiline':False]
['text':' unregisterEventHandler unregisters the event handler pointed to by the','line_number':68,'multiline':False]
['text':' shared_ptr.','line_number':69,'multiline':False]
['text':' namespace monitor','line_number':72,'multiline':False]
['text':' namespace torch','line_number':73,'multiline':False]
