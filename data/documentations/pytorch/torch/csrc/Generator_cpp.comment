['text':' See Note [Acquire lock when using random generators]','line_number':96,'multiline':False]
['text':' See Note [Acquire lock when using random generators]','line_number':117,'multiline':False]
['text':' First try to interpret as unsigned long','line_number':129,'multiline':False]
['text':' If an overflow happened, then the pyobj could be negative,','line_number':133,'multiline':False]
['text':' so try to interpret it as signed long','line_number':134,'multiline':False]
['text':' If any other type of exception happened, rethrow it','line_number':139,'multiline':False]
['text':' See Note [Acquire lock when using random generators]','line_number':156,'multiline':False]
['text':' See Note [Acquire lock when using random generators]','line_number':174,'multiline':False]
['text':' See Note [Acquire lock when using random generators]','line_number':184,'multiline':False]
['text':' NOLINTNEXTLINE(cppcoreguidelines-avoid-c-arrays,modernize-avoid-c-arrays,cppcoreguidelines-avoid-non-const-global-variables)','line_number':212,'multiline':False]
['text':' NOLINTNEXTLINE(cppcoreguidelines-avoid-c-arrays,modernize-avoid-c-arrays,cppcoreguidelines-avoid-non-const-global-variables)','line_number':217,'multiline':False]
['text':' NOLINTNEXTLINE(cppcoreguidelines-avoid-c-arrays,modernize-avoid-c-arrays,cppcoreguidelines-avoid-non-const-global-variables)','line_number':228,'multiline':False]
['text':' tp_name ','line_number':234,'multiline':True]
['text':' tp_basicsize ','line_number':235,'multiline':True]
['text':' tp_itemsize ','line_number':236,'multiline':True]
['text':' tp_dealloc ','line_number':237,'multiline':True]
['text':' tp_vectorcall_offset ','line_number':238,'multiline':True]
['text':' tp_getattr ','line_number':239,'multiline':True]
['text':' tp_setattr ','line_number':240,'multiline':True]
['text':' tp_reserved ','line_number':241,'multiline':True]
['text':' tp_repr ','line_number':242,'multiline':True]
['text':' tp_as_number ','line_number':243,'multiline':True]
['text':' tp_as_sequence ','line_number':244,'multiline':True]
['text':' tp_as_mapping ','line_number':245,'multiline':True]
['text':' tp_hash  ','line_number':246,'multiline':True]
['text':' tp_call ','line_number':247,'multiline':True]
['text':' tp_str ','line_number':248,'multiline':True]
['text':' tp_getattro ','line_number':249,'multiline':True]
['text':' tp_setattro ','line_number':250,'multiline':True]
['text':' tp_as_buffer ','line_number':251,'multiline':True]
['text':' NOLINTNEXTLINE(misc-redundant-expression)','line_number':252,'multiline':False]
['text':' tp_flags ','line_number':253,'multiline':True]
['text':' tp_doc ','line_number':254,'multiline':True]
['text':' tp_traverse ','line_number':255,'multiline':True]
['text':' tp_clear ','line_number':256,'multiline':True]
['text':' tp_richcompare ','line_number':257,'multiline':True]
['text':' tp_weaklistoffset ','line_number':258,'multiline':True]
['text':' tp_iter ','line_number':259,'multiline':True]
['text':' tp_iternext ','line_number':260,'multiline':True]
['text':' tp_methods ','line_number':261,'multiline':True]
['text':' tp_members ','line_number':262,'multiline':True]
['text':' tp_getset ','line_number':263,'multiline':True]
['text':' tp_base ','line_number':264,'multiline':True]
['text':' tp_dict ','line_number':265,'multiline':True]
['text':' tp_descr_get ','line_number':266,'multiline':True]
['text':' tp_descr_set ','line_number':267,'multiline':True]
['text':' tp_dictoffset ','line_number':268,'multiline':True]
['text':' tp_init ','line_number':269,'multiline':True]
['text':' tp_alloc ','line_number':270,'multiline':True]
['text':' tp_new ','line_number':271,'multiline':True]
['text':' Creates a new Python object for a Generator. The Generator must not already','line_number':307,'multiline':False]
['text':' have a PyObject* associated with it.','line_number':308,'multiline':False]
