['text':' execute a Python function, used for Ops we can't optimize but that we want to','line_number':10,'multiline':False]
['text':' optimize around','line_number':11,'multiline':False]
['text':' The Python object which contains the implementation of this function.','line_number':25,'multiline':False]
['text':' This is either a class (non-legacy) or an object (legacy).  See','line_number':26,'multiline':False]
['text':' TraceInterpreterState for execution semantics.','line_number':27,'multiline':False]
['text':' The calling convention for the Python function.','line_number':29,'multiline':False]
['text':' 'c' -- constant argument','line_number':30,'multiline':False]
['text':' 'd' -- dynamic argument','line_number':31,'multiline':False]
['text':' Scalar arguments to the Python function.  Not necessarily passed to','line_number':33,'multiline':False]
['text':' the function in this order; see cconv for the correct order.','line_number':34,'multiline':False]
['text':' recover the autograd.Function instance, if this PythonOp's function','line_number':42,'multiline':False]
['text':' was originally SomeFunction.apply','line_number':43,'multiline':False]
['text':' used in ONNX for discovering symbolics','line_number':44,'multiline':False]
['text':' namespace torch::jit','line_number':50,'multiline':False]
