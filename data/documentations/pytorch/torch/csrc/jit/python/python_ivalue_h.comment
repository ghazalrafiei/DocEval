['text':' concrete ivalue Holder that hold a py::object','line_number':12,'multiline':False]
['text':' We could implement this entirely in C++ via pybind11 but it turns out to','line_number':46,'multiline':False]
['text':' be substantially slower. Namely, the total time taken by markCompleted on','line_number':47,'multiline':False]
['text':' a CUDAFuture is 21.5us with this implementation, but goes up to 58.7us','line_number':48,'multiline':False]
['text':' when using C++. The reason is unclear.','line_number':49,'multiline':False]
['text':' Note [Destructing py::object]','line_number':67,'multiline':False]
['text':' ~~~~~~~~~~~~~~~~~~~~~~~~~~','line_number':68,'multiline':False]
['text':'','line_number':69,'multiline':False]
['text':' (1) Why py_obj_ = py::none(); does not work. Because we also need to','line_number':70,'multiline':False]
['text':' acquire GIL when destructing py::object of None that de-references None.','line_number':71,'multiline':False]
['text':' https://docs.python.org/3/c-api/none.html#c.Py_RETURN_NONE','line_number':72,'multiline':False]
['text':'','line_number':73,'multiline':False]
['text':' https://stackoverflow.com/questions/15287590/why-should-py-increfpy-none-be-required-before-returning-py-none-in-c','line_number':74,'multiline':False]
['text':'','line_number':75,'multiline':False]
['text':' (2) Why we need to call dec_ref() explicitly. Because py::object of','line_number':76,'multiline':False]
['text':' nullptr, on destruction, effectively does nothing because of it calls','line_number':77,'multiline':False]
['text':' Py_XDECREF(NULL) underlying.','line_number':78,'multiline':False]
['text':' https://docs.python.org/3/c-api/refcounting.html#c.Py_XDECREF','line_number':79,'multiline':False]
['text':' explicitly setting PyObject* to nullptr to prevent py::object's dtor to','line_number':83,'multiline':False]
['text':' decref on the PyObject again.','line_number':84,'multiline':False]
['text':' explicit construction to avoid errornous implicit conversion and','line_number':88,'multiline':False]
['text':' copy-initialization','line_number':89,'multiline':False]
['text':' namespace c10::ivalue','line_number':97,'multiline':False]
