['text':' GraphExecutor creates specializations of Graphs for different','line_number':20,'multiline':False]
['text':' dimensionalitities and types of inputs.','line_number':21,'multiline':False]
['text':' XXX: It is guaranteed that this will return false when called on non-tensor','line_number':33,'multiline':False]
['text':' arguments','line_number':34,'multiline':False]
['text':' NOLINTNEXTLINE(cppcoreguidelines-narrowing-conversions,bugprone-narrowing-conversions)','line_number':39,'multiline':False]
['text':' Initialize all fields to 0. This is convenient, because e.g.','line_number':93,'multiline':False]
['text':' requires_grad() can be checked even on tensors AND will make','line_number':94,'multiline':False]
['text':' padding bits all 0s.','line_number':95,'multiline':False]
['text':' [argspec refcounting] reinterpret the IValue to avoid having to refcount','line_number':98,'multiline':False]
['text':' the Tensor microbenchmarks','line_number':99,'multiline':False]
['text':' https://github.com/zdevito/pytorch/commit/21e7200a0a0fc456bea2f10e95b1781f83933d10','line_number':100,'multiline':False]
['text':' show overhead in extra refcounting along this path','line_number':101,'multiline':False]
['text':' NOLINTNEXTLINE(cppcoreguidelines-narrowing-conversions,bugprone-narrowing-conversions)','line_number':107,'multiline':False]
['text':' NOLINTNEXTLINE(bugprone-signed-char-misuse)','line_number':110,'multiline':False]
['text':' NOLINTNEXTLINE(bugprone-signed-char-misuse)','line_number':112,'multiline':False]
['text':' NOLINTNEXTLINE(cppcoreguidelines-init-variables)','line_number':120,'multiline':False]
['text':' equality is fast: check ninputs, and then check the raw array data,','line_number':126,'multiline':False]
['text':' there are no size/stride indirections','line_number':127,'multiline':False]
['text':' hopefully std::vector<bool> has fast equality','line_number':128,'multiline':False]
['text':' NB: we need to break out early when there are no elements, because','line_number':135,'multiline':False]
['text':' passing a nullptr to memcmp is UB.','line_number':136,'multiline':False]
['text':' precomputed on construction','line_number':164,'multiline':False]
['text':' ArgumentSpecCreator takes an initial graph and comes up with a set','line_number':173,'multiline':False]
['text':' of simple instructions to compute the ArgumentSpec given a set of','line_number':174,'multiline':False]
['text':' input tensors.','line_number':175,'multiline':False]
['text':' instructs acts on a stack of a list of input IValues','line_number':177,'multiline':False]
['text':' at the beginning the stack contains a single list of the inputs to the','line_number':178,'multiline':False]
['text':' function the ENTER_ instructs descend into subobjects and push new lists','line_number':179,'multiline':False]
['text':' onto the stack','line_number':180,'multiline':False]
['text':' consume a tuple ivalue from the top-most list, and push the','line_number':182,'multiline':False]
['text':' list of its elements onto the stack as a new list','line_number':183,'multiline':False]
['text':' same as ENTER_TUPLE, but the input is a class','line_number':184,'multiline':False]
['text':' pop the top-most list from the stack','line_number':185,'multiline':False]
['text':' consume an element from the top-most list, and discard','line_number':186,'multiline':False]
['text':' consume a optional tensor for the top-most','line_number':187,'multiline':False]
['text':' list, and add it to the ArgSpec key being','line_number':188,'multiline':False]
['text':' created','line_number':189,'multiline':False]
['text':' consume a tensor for the top-most','line_number':190,'multiline':False]
['text':' list, and add it to the ArgSpec key being created','line_number':191,'multiline':False]
['text':' consume a nontensor optional from the top-most list,','line_number':193,'multiline':False]
['text':' and add it to the ArgSpec key being created','line_number':194,'multiline':False]
['text':' CompleteArgumentSpec represents one particular specialization.','line_number':213,'multiline':False]
['text':' It is designed so that it can be created, hashed, and compared quickly','line_number':214,'multiline':False]
['text':' since it is used along the hot-path of the JIT to check if the code','line_number':215,'multiline':False]
['text':' we have created is valid for the given inputs.','line_number':216,'multiline':False]
['text':' COmpleteArgumentInfoPOD is only used internally in CompleteArgumentSpec','line_number':218,'multiline':False]
['text':' API users should use ArgumentInfo','line_number':219,'multiline':False]
['text':' total size is 64-bit','line_number':221,'multiline':False]
['text':' all other fields are invalid if this is false','line_number':222,'multiline':False]
['text':' scalar type','line_number':223,'multiline':False]
['text':' all TensorInfoPODs are in CompleteArgumentSpec's','line_number':229,'multiline':False]
['text':' tensor_info() array. total_dims is the total number of','line_number':230,'multiline':False]
['text':' dimensions seen so far in all previous members of','line_number':231,'multiline':False]
['text':' tensor_info(), including this tensor 2*total_dims','line_number':232,'multiline':False]
['text':' becomes the offset into the sizes_strides list for the','line_number':233,'multiline':False]
['text':' _next_ tensor in the tensor_info array for tensor 0,','line_number':234,'multiline':False]
['text':' the offset is always 0','line_number':235,'multiline':False]
['text':' NOLINTNEXTLINE(cppcoreguidelines-pro-type-member-init)','line_number':245,'multiline':False]
['text':' NOLINTNEXTLINE(cppcoreguidelines-init-variables)','line_number':249,'multiline':False]
['text':' allocate enough room for all TensorPODs and dimensions','line_number':257,'multiline':False]
['text':' and reinterpret our data array as these structs','line_number':260,'multiline':False]
['text':' NOLINTNEXTLINE(cppcoreguidelines-init-variables)','line_number':261,'multiline':False]
['text':' NOLINTNEXTLINE(cppcoreguidelines-narrowing-conversions,bugprone-narrowing-conversions)','line_number':273,'multiline':False]
['text':' NOLINTNEXTLINE(bugprone-signed-char-misuse)','line_number':275,'multiline':False]
['text':' NOLINTNEXTLINE(bugprone-signed-char-misuse)','line_number':278,'multiline':False]
['text':' each POD has a running tally of all dimensions including its own','line_number':290,'multiline':False]
['text':' we precompute the hash_code to minimize the time inside of hash','line_number':297,'multiline':False]
['text':' table operations where we may need to hold a compiler cache lock.','line_number':298,'multiline':False]
['text':' equality is fast: check ninputs, and then check the raw array data,','line_number':305,'multiline':False]
['text':' there are no size/stride indirections','line_number':306,'multiline':False]
['text':' the start of the sizes_strides information, which comes after the','line_number':327,'multiline':False]
['text':' CompleteArgumentInfoPOD list.','line_number':328,'multiline':False]
['text':' precomputed on construction','line_number':335,'multiline':False]
['text':' layout is ninputs of TensorPOD (each 64-bit) followed by their size and','line_number':337,'multiline':False]
['text':' stride info for 3 tensors:','line_number':338,'multiline':False]
['text':' [t0POD][t1POD][t2POD]...','line_number':339,'multiline':False]
['text':' [t0 sizes][t0 strides][t1 sizes][t1 strides][t2 sizes][t2 strides]','line_number':340,'multiline':False]
['text':' public view of compressed CompleteArgumentInfo','line_number':344,'multiline':False]
['text':' See [valid range], it is always valid to ask for offset for (i + 1)','line_number':366,'multiline':False]
['text':' offsetinto sizes_strides() array where the sizes start for tensor j','line_number':390,'multiline':False]
['text':' [valid range] valid range is [0, ninputs]','line_number':391,'multiline':False]
['text':' (i.e. you can ask for the offset at ninputs, which would be the offset of','line_number':392,'multiline':False]
['text':' the next tensor if it existed)','line_number':393,'multiline':False]
['text':' NOLINTNEXTLINE(cppcoreguidelines-narrowing-conversions,bugprone-narrowing-conversions)','line_number':397,'multiline':False]
['text':' namespace torch::jit','line_number':469,'multiline':False]
['text':' namespace std','line_number':509,'multiline':False]
