['text':' This class facilitates depth-first iteration over all nodes in a graph.','line_number':5,'multiline':False]
['text':' Constructor.','line_number':10,'multiline':False]
['text':' Moves up and to the next node (may move up recursively).','line_number':14,'multiline':False]
['text':' Basically we start from the child block (which is current_)','line_number':19,'multiline':False]
['text':' and we try to find the block that owns it. Now we need to check','line_number':20,'multiline':False]
['text':' if that block is the graph root block, or if it is an If/Loop/etc','line_number':21,'multiline':False]
['text':' block.','line_number':22,'multiline':False]
['text':'','line_number':23,'multiline':False]
['text':' If it's the graph root block we can stop because there is no "up"','line_number':24,'multiline':False]
['text':' but if it is a node (e.g. If/Loop/etc) we need to apply logic','line_number':25,'multiline':False]
['text':' based on where we are coming from to move to the next block.','line_number':26,'multiline':False]
['text':' This might mean that we need to traverse up again (e.g. if we've','line_number':27,'multiline':False]
['text':' reached the end of the else clause in an if block we need to go)','line_number':28,'multiline':False]
['text':' up to the parent block that contains the if.','line_number':29,'multiline':False]
['text':'','line_number':30,'multiline':False]
['text':' Similarly if we've reached the end of the parent block containing','line_number':31,'multiline':False]
['text':' the else clause we might need to go up again so this is a recursive','line_number':32,'multiline':False]
['text':' function.','line_number':33,'multiline':False]
['text':'','line_number':34,'multiline':False]
['text':'              BlockNode (if/loop/with)','line_number':35,'multiline':False]
['text':'                       |','line_number':36,'multiline':False]
['text':'            [Block1]  ... [Block2]','line_number':37,'multiline':False]
['text':'                |','line_number':38,'multiline':False]
['text':'   [ Node1, Node2, Node3, FromNode]','line_number':39,'multiline':False]
['text':'','line_number':40,'multiline':False]
['text':' Get the node that owns the parent block. This node has to be an if,','line_number':44,'multiline':False]
['text':' loop, or with.','line_number':45,'multiline':False]
['text':' If there's no node that owns this current block then we're at the','line_number':48,'multiline':False]
['text':' top of the graph and since we're trying to move up we have reached','line_number':49,'multiline':False]
['text':' the end of the traversal.','line_number':50,'multiline':False]
['text':' Check the type of node this root is.','line_number':55,'multiline':False]
['text':' Need to check if we came from the `then` branch or the `else` branch.','line_number':57,'multiline':False]
['text':' If else block then we move to the next node in the parent block.','line_number':62,'multiline':False]
['text':' If then block then move to the else block if it is not empty.','line_number':68,'multiline':False]
['text':' Since it's empty we move to the next node.','line_number':76,'multiline':False]
['text':' Moves to the next adjacent node or up in to the parent if that is not','line_number':96,'multiline':False]
['text':' possible.','line_number':97,'multiline':False]
['text':' Increment to the next node in the current block.','line_number':103,'multiline':False]
['text':' Check if we're at the end of the block. If so we need','line_number':106,'multiline':False]
['text':' to move upwards (if it makes sense to).','line_number':107,'multiline':False]
['text':' Moves to the next node in the graph into children if it can.','line_number':113,'multiline':False]
['text':' Check if we're currently on a node that contains sub-nodes.','line_number':119,'multiline':False]
['text':' Move next will move up and out of the current node if the block is','line_number':124,'multiline':False]
['text':' empty. `move_up` which is called by `move_next` will handle the','line_number':125,'multiline':False]
['text':' difference between If, Loop, and With blocks appropriately.','line_number':126,'multiline':False]
['text':' Get the next Node in the graph. \returns nullptr if there are no nodes','line_number':133,'multiline':False]
['text':' left.','line_number':134,'multiline':False]
['text':' Try move into the existing node to set the next node to be returned.','line_number':138,'multiline':False]
['text':' This will move to the next node if not possible, or move upwards and','line_number':139,'multiline':False]
['text':' to the next.','line_number':140,'multiline':False]
['text':' namespace torch::jit','line_number':147,'multiline':False]
