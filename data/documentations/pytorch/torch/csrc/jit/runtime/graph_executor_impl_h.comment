['text':' Tunable parameters for deciding when to create/keep subgraphs of','line_number':47,'multiline':False]
['text':' differentiable code','line_number':48,'multiline':False]
['text':' a Graph can be created via tracing, or via a language-based frontend','line_number':52,'multiline':False]
['text':' GraphExecutor runs it. It can run the same graph on many different sizes','line_number':53,'multiline':False]
['text':' and different requires_grad states, and handles specializations for each','line_number':54,'multiline':False]
['text':' situation. GraphExecutor is completely unaware of tracing or module','line_number':55,'multiline':False]
['text':' parameters to keep the tracing concerns separated.','line_number':56,'multiline':False]
['text':' entry point where execution begins','line_number':73,'multiline':False]
['text':' The unoptimized starting graph. This field is effectively const, but we','line_number':92,'multiline':False]
['text':' can't make it so because Graph::copy() is not const (and making it const is','line_number':93,'multiline':False]
['text':' not that easy at this point).','line_number':94,'multiline':False]
['text':' NOLINTNEXTLINE(cppcoreguidelines-non-private-member-variables-in-classes)','line_number':95,'multiline':False]
['text':' NOLINTNEXTLINE(cppcoreguidelines-non-private-member-variables-in-classes)','line_number':97,'multiline':False]
['text':' If false, we'll run the graph as we get it, without any optimizations.','line_number':100,'multiline':False]
['text':' Useful for debugging.','line_number':101,'multiline':False]
['text':' NOLINTNEXTLINE(cppcoreguidelines-non-private-member-variables-in-classes)','line_number':102,'multiline':False]
['text':' NOLINTNEXTLINE(cppcoreguidelines-non-private-member-variables-in-classes)','line_number':104,'multiline':False]
['text':' GraphExecutors can be accessed from multiple threads, so this thread needs','line_number':107,'multiline':False]
['text':' to be held every time we access the fallback or plan_cache.','line_number':108,'multiline':False]
['text':' NOLINTNEXTLINE(cppcoreguidelines-non-private-member-variables-in-classes)','line_number':109,'multiline':False]
['text':' namespace torch::jit','line_number':113,'multiline':False]
