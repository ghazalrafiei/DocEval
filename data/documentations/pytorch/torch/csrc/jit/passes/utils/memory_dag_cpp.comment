['text':' Create a wildcard element, with no corresponding value','line_number':20,'multiline':False]
['text':' namespace','line_number':29,'multiline':False]
['text':' we have already recursed on this element','line_number':71,'multiline':False]
['text':' Give `v` a fresh alias (i.e. it does not point to any value)','line_number':146,'multiline':False]
['text':' This function builds up a bitset representing the "alias set" for','line_number':151,'multiline':False]
['text':' `e` (`MemoryLocations` is just a typedef'd c10::SparseBitVector).','line_number':152,'multiline':False]
['text':' Note on cache invalidation: all mutation should occur through','line_number':154,'multiline':False]
['text':' MemoryDAGBuilder. Thus, once we consume the builder to create an','line_number':155,'multiline':False]
['text':' immutable MemoryDAG, we can cache here without worrying that we','line_number':156,'multiline':False]
['text':' might potentially get invalidated.','line_number':157,'multiline':False]
['text':' Base case: if we don't point to anything, this element is a memory','line_number':164,'multiline':False]
['text':' location. Return itself.','line_number':165,'multiline':False]
['text':' If an element is set as a wildcard, that means that all its memory','line_number':182,'multiline':False]
['text':' locations must point to the wildcard element.','line_number':183,'multiline':False]
['text':' avoid cycles where the wildcard points to itself','line_number':191,'multiline':False]
['text':' Track which memory locations we edited with a new pointer to the wildcard','line_number':196,'multiline':False]
['text':' element.','line_number':197,'multiline':False]
['text':' Update caches in-place.','line_number':201,'multiline':False]
['text':' We take advantage of the fact that we only edited memory locations.','line_number':202,'multiline':False]
['text':'','line_number':203,'multiline':False]
['text':' Say we added a pointer from `MemoryLocationFoo -> WildcardBar`.','line_number':204,'multiline':False]
['text':' For every element, if the cache contains `MemoryLocationFoo`, then we must','line_number':205,'multiline':False]
['text':' add `WildcardBar` to it.','line_number':206,'multiline':False]
['text':' This element is a wildcard element, we can skip it.','line_number':210,'multiline':False]
['text':' This value is not a wildcard.','line_number':216,'multiline':False]
['text':' We didn't rewrite any MemoryLocations to point to this element.','line_number':221,'multiline':False]
['text':' If this element contains an edited memory location, update the cache to','line_number':224,'multiline':False]
['text':' contain the pointed-to wildcard element as well.','line_number':225,'multiline':False]
['text':' namespace jit','line_number':235,'multiline':False]
['text':' namespace torch','line_number':236,'multiline':False]
