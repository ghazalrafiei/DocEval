['text':' Introduction','line_number':8,'multiline':False]
['text':'','line_number':9,'multiline':False]
['text':' The encapsulation part will find the nodes of patterns, like how other','line_number':10,'multiline':False]
['text':' pre-onnx passes are written. But instead of converting the nodes, it will','line_number':11,'multiline':False]
['text':' encapsulate them into a sub-block of a new placeholder node. This part is','line_number':12,'multiline':False]
['text':' called before onnx pass, so it runs before calling symbolic functions.','line_number':13,'multiline':False]
['text':'','line_number':14,'multiline':False]
['text':' Note: Why separate the function into two parts','line_number':15,'multiline':False]
['text':'','line_number':16,'multiline':False]
['text':' The purpose is to support conversions that depend on shape and type','line_number':17,'multiline':False]
['text':' information. Shape and type information is only available after','line_number':18,'multiline':False]
['text':' _jit_pass_onnx, which converts aten nodes to onnx nodes. So there is a','line_number':19,'multiline':False]
['text':' interdependent issue. _jit_pass_onnx depends on preprocess passes to convert','line_number':20,'multiline':False]
['text':' aten nodes into convertable condition, and preprocess passes depend on','line_number':21,'multiline':False]
['text':' _jit_pass_onnx to convert upstream nodes and apply onnx shape inference.','line_number':22,'multiline':False]
['text':' Separating the pass into two parts breaks the interdependency.','line_number':23,'multiline':False]
['text':'','line_number':24,'multiline':False]
['text':' Note: Edit Pattern Encapsulation','line_number':25,'multiline':False]
['text':'','line_number':26,'multiline':False]
['text':' Encapsulation step identifies the pattern, and copies the nodes into','line_number':27,'multiline':False]
['text':' the subblock of a new placeholder node. The outputs of the new placeholder','line_number':28,'multiline':False]
['text':' node are used in place of the original nodes instead. The category of the','line_number':29,'multiline':False]
['text':' pattern is stored as attr::name.','line_number':30,'multiline':False]
['text':' namespace jit','line_number':33,'multiline':False]
['text':' namespace torch','line_number':34,'multiline':False]
