['text':' [unpickler refactor] there is some cruft around PickleOpCode::BUILD,','line_number':21,'multiline':False]
['text':' PickleOpCode::NEWOBJ, and the last_opcode_ member below that should be','line_number':22,'multiline':False]
['text':' deleted at some point, the Pickler doesn't produce it and it's only around to','line_number':23,'multiline':False]
['text':' support models saved before 1.1','line_number':24,'multiline':False]
['text':' tensors inside the pickle are references to the tensor_table.','line_number':31,'multiline':False]
['text':' class_resolver is to resolve strong class type, type_resolver_ is','line_number':32,'multiline':False]
['text':' to resolve any JIT type. class_resolver and type_resolver are not merged','line_number':33,'multiline':False]
['text':' here because some use cases need to get strong class type that','line_number':34,'multiline':False]
['text':' type_resolver_ can not return.','line_number':35,'multiline':False]
['text':' NOLINTNEXTLINE(cppcoreguidelines-pro-type-member-init)','line_number':36,'multiline':False]
['text':' tensors inside the pickle contain meta-data, the raw tensor','line_number':63,'multiline':False]
['text':' dead is retrieved by calling `read_record`.','line_number':64,'multiline':False]
['text':' NOLINTNEXTLINE(cppcoreguidelines-pro-type-member-init)','line_number':65,'multiline':False]
['text':' NOLINTNEXTLINE(performance-move-const-arg)','line_number':80,'multiline':False]
['text':' consume the pickle stream, producing an IValue from the contents.','line_number':87,'multiline':False]
['text':' Type Tags: the pickler will restore the type tags on','line_number':88,'multiline':False]
['text':' List and Dict objects when possible IValue is an Object.','line_number':89,'multiline':False]
['text':' Otherwise, Dict and List objects will end up with Any as their tag.','line_number':90,'multiline':False]
['text':' If you know the type of the ivalue, tags can be restored with','line_number':91,'multiline':False]
['text':' restoreAccurateTypeTags','line_number':92,'multiline':False]
['text':' [type tag serialization]','line_number':95,'multiline':False]
['text':' This is used to determine whether to restore type tags be recursively','line_number':96,'multiline':False]
['text':' descending into the returned stack object (if version_number <= 2), or','line_number':97,'multiline':False]
['text':' if version_number >= 3, to use the type strings included in the pickle','line_number':98,'multiline':False]
['text':' archive for container types. By default this is set to','line_number':99,'multiline':False]
['text':' `kProducedFileFormatVersion` so unless you're loading a pickle file','line_number':100,'multiline':False]
['text':' from alongside a corresponding `version` file, you don't need to set','line_number':101,'multiline':False]
['text':' the version manually.','line_number':102,'multiline':False]
['text':' No arguments ensures that a template argument must be specified','line_number':113,'multiline':False]
['text':' so that the number of bytes read / type read is explicit','line_number':114,'multiline':False]
['text':' Fast path: entirely from buffer.','line_number':119,'multiline':False]
['text':' Don't over-template the slow path, to avoid code size bloat.','line_number':124,'multiline':False]
['text':' Returns the number of bytes read. This should statefully','line_number':152,'multiline':False]
['text':' remember the position. Don't call reader_ directly.','line_number':153,'multiline':False]
['text':' Small buffer to avoid calling reader_ on a per-byte basis.','line_number':155,'multiline':False]
['text':' globals are represented on the stack as IValue integer indices','line_number':162,'multiline':False]
['text':' into this list','line_number':163,'multiline':False]
['text':' When deserializing types on lists and dicts, cache the type here','line_number':169,'multiline':False]
['text':' so we don't have to parse the same type multiple times. Strings','line_number':170,'multiline':False]
['text':' are already de-duplicated and replaced with BINGETs in the','line_number':171,'multiline':False]
['text':' pickler, so we can just use the actual data pointer of each string.','line_number':172,'multiline':False]
['text':' optionally nullptr, needs to be present for creating classes','line_number':175,'multiline':False]
['text':' When set to true, Unpickler will ignore the pickled device and use the','line_number':182,'multiline':False]
['text':' device of the DataPtr returned by the read_record_ function. The default','line_number':183,'multiline':False]
['text':' value of this flag is false.','line_number':184,'multiline':False]
['text':' Used for torch.package to enable sharing of storages across','line_number':189,'multiline':False]
['text':' ScriptModules and eager modules','line_number':190,'multiline':False]
['text':' See [type tag serialization]','line_number':193,'multiline':False]
['text':' See [NOTE] skip_next_read_global','line_number':196,'multiline':False]
['text':' namespace jit','line_number':202,'multiline':False]
['text':' namespace torch','line_number':203,'multiline':False]
