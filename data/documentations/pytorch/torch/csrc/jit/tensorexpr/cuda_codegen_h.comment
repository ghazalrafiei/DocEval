['text':' A class that analyzes the given program relevant for Cuda backends.','line_number':24,'multiline':False]
['text':' An IRMutator that replaces binding loop options with Cuda metavars, and masks','line_number':70,'multiline':False]
['text':' statements blocks which should execute with less reach than the launch','line_number':71,'multiline':False]
['text':' parameter extent.','line_number':72,'multiline':False]
['text':'','line_number':73,'multiline':False]
['text':' We do this by segmenting each block into chunks which should have the same','line_number':74,'multiline':False]
['text':' execution parameters, then if those params differ from the max mask each dim.','line_number':75,'multiline':False]
['text':' NOLINTNEXTLINE(cppcoreguidelines-pro-type-member-init)','line_number':78,'multiline':False]
['text':' When processing a block, stores the contents of each sub-segment.','line_number':116,'multiline':False]
['text':' NOLINTNEXTLINE(cppcoreguidelines-pro-type-member-init)','line_number':117,'multiline':False]
['text':' Returns true if the current execution scope is equivalent to the launch','line_number':141,'multiline':False]
['text':' parameters.','line_number':142,'multiline':False]
['text':' A class that overrides the underlying IRPrinter to produce Cuda C.','line_number':154,'multiline':False]
['text':' Construct Cuda C from the buffer and tensor input, and invoke the kernel','line_number':200,'multiline':False]
['text':' when real arguments are provided.','line_number':201,'multiline':False]
['text':' NOLINTNEXTLINE(cppcoreguidelines-pro-type-member-init)','line_number':205,'multiline':False]
['text':' NOLINTNEXTLINE(cppcoreguidelines-pro-type-member-init)','line_number':214,'multiline':False]
['text':' namespace tensorexpr','line_number':293,'multiline':False]
['text':' namespace jit','line_number':294,'multiline':False]
['text':' namespace torch','line_number':295,'multiline':False]
