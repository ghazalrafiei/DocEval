['text':' NOLINTNEXTLINE(cppcoreguidelines-pro-type-member-init)','line_number':28,'multiline':False]
['text':' NOLINTNEXTLINE(cppcoreguidelines-pro-type-member-init)','line_number':49,'multiline':False]
['text':' NOLINTNEXTLINE(cppcoreguidelines-pro-type-member-init)','line_number':53,'multiline':False]
['text':' NOLINTNEXTLINE(cppcoreguidelines-pro-type-member-init)','line_number':58,'multiline':False]
['text':' NOLINTNEXTLINE(cppcoreguidelines-pro-type-member-init)','line_number':66,'multiline':False]
['text':' NOLINTNEXTLINE(cppcoreguidelines-pro-type-member-init)','line_number':68,'multiline':False]
['text':' NOLINTNEXTLINE(cppcoreguidelines-pro-type-member-init)','line_number':70,'multiline':False]
['text':' NOLINTNEXTLINE(cppcoreguidelines-init-variables)','line_number':162,'multiline':False]
['text':' NOLINTNEXTLINE(cppcoreguidelines-pro-type-member-init)','line_number':187,'multiline':False]
['text':' NOLINTNEXTLINE(cppcoreguidelines-pro-type-member-init)','line_number':191,'multiline':False]
['text':' NOLINTNEXTLINE(cppcoreguidelines-init-variables)','line_number':194,'multiline':False]
['text':' NOLINTNEXTLINE(cppcoreguidelines-init-variables)','line_number':197,'multiline':False]
['text':' NOLINTNEXTLINE(cppcoreguidelines-init-variables)','line_number':231,'multiline':False]
['text':' NOLINTNEXTLINE(modernize-use-emplace)','line_number':241,'multiline':False]
['text':' NOLINTNEXTLINE(modernize-use-emplace)','line_number':243,'multiline':False]
['text':' NOLINTNEXTLINE(modernize-use-emplace)','line_number':245,'multiline':False]
['text':' NOLINTNEXTLINE(cppcoreguidelines-init-variables)','line_number':249,'multiline':False]
['text':' NOLINTNEXTLINE(cppcoreguidelines-init-variables)','line_number':261,'multiline':False]
['text':' NOLINTNEXTLINE(cppcoreguidelines-init-variables)','line_number':276,'multiline':False]
['text':' Evaluates the given expression and returns an int64_t value if the result of','line_number':309,'multiline':False]
['text':' the given expression is int64_t.','line_number':310,'multiline':False]
['text':' Substitutes the given vars with their corresponding expressions in the input','line_number':313,'multiline':False]
['text':' expression.','line_number':314,'multiline':False]
['text':' Substitutes the given vars with their corresponding expressions in the input','line_number':320,'multiline':False]
['text':' statement.','line_number':321,'multiline':False]
['text':' Creates a clone of the input expression and substitutes the given vars with','line_number':327,'multiline':False]
['text':' their corresponding expressions in the clone.','line_number':328,'multiline':False]
['text':' NOTE: This works because cloning reuses variables and does not create new','line_number':329,'multiline':False]
['text':' ones, and `VarMapping` input has variables as the key.','line_number':330,'multiline':False]
['text':' Creates a clone of the input statement and substitutes the given vars with','line_number':336,'multiline':False]
['text':' their corresponding expressions in the clone.','line_number':337,'multiline':False]
['text':' NOTE: This works because cloning reuses variables and does not create new','line_number':338,'multiline':False]
['text':' ones, and `VarMapping` input has variables as the key.','line_number':339,'multiline':False]
['text':' namespace tensorexpr','line_number':345,'multiline':False]
['text':' namespace jit','line_number':346,'multiline':False]
['text':' namespace torch','line_number':347,'multiline':False]
