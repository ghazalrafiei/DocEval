['text':'*
 * class Resolver
 *
 * Represents an "outer environment" in which we an look up names and return
 * a corresponding SugaredValue. This is used during compilation to resolve
 * references to names which are not defined internal to the graph.
 *
 * Example: PythonResolver looks at the enclosing Python scope for `name`.
 *
 * NOTE: When adding methods, keep this an abstract class (i.e. all new methods
 * should be purely virtual). Resist the urge to provide a default
 * implementation; you should explicitly think about how each resolver would
 * handle the method.
 ','line_number':13,'multiline':True]
['text':' Resolve a given name to a SugaredValue. This takes the method `m` that the','line_number':30,'multiline':False]
['text':' caller is currently constructing, since we may need to insert nodes into','line_number':31,'multiline':False]
['text':' the graph to create a value.','line_number':32,'multiline':False]
['text':' Resolve `name` to a TypePtr.','line_number':40,'multiline':False]
['text':' A resolver that only understands "torch.foo()" lookups.','line_number':46,'multiline':False]
['text':' namespace jit','line_number':67,'multiline':False]
['text':' namespace torch','line_number':68,'multiline':False]
