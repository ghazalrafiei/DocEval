['text':'/ A `Transform` that is specialized for the typical `Example<Tensor, Tensor>`','line_number':14,'multiline':False]
['text':'/ combination. It exposes a single `operator()` interface hook (for','line_number':15,'multiline':False]
['text':'/ subclasses), and calls this function on input `Example` objects.','line_number':16,'multiline':False]
['text':'/ Transforms a single input tensor to an output tensor.','line_number':25,'multiline':False]
['text':'/ Implementation of `Transform::apply` that calls `operator()`.','line_number':28,'multiline':False]
['text':'/ A `Lambda` specialized for the typical `Example<Tensor, Tensor>` input type.','line_number':35,'multiline':False]
['text':'/ Creates a `TensorLambda` from the given `function`.','line_number':41,'multiline':False]
['text':'/ Applies the user-provided functor to the input tensor.','line_number':45,'multiline':False]
['text':'/ Normalizes input tensors by subtracting the supplied mean and dividing by','line_number':54,'multiline':False]
['text':'/ the given standard deviation.','line_number':55,'multiline':False]
['text':'/ Constructs a `Normalize` transform. The mean and standard deviation can be','line_number':58,'multiline':False]
['text':'/ anything that is broadcastable over the input tensors (like single','line_number':59,'multiline':False]
['text':'/ scalars).','line_number':60,'multiline':False]
['text':'dim=','line_number':63,'multiline':True]
['text':'dim=','line_number':64,'multiline':True]
['text':'dim=','line_number':66,'multiline':True]
['text':'dim=','line_number':67,'multiline':True]
['text':' namespace transforms','line_number':75,'multiline':False]
['text':' namespace data','line_number':76,'multiline':False]
['text':' namespace torch','line_number':77,'multiline':False]
