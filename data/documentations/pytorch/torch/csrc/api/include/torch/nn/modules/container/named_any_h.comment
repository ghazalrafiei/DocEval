['text':'/ Stores a type erased `Module` with name.','line_number':24,'multiline':False]
['text':'/','line_number':25,'multiline':False]
['text':'/ The `NamedAnyModule` class enables the following API for constructing','line_number':26,'multiline':False]
['text':'/ `nn::Sequential` with named submodules:','line_number':27,'multiline':False]
['text':'/ \rst','line_number':28,'multiline':False]
['text':'/ .. code-block:: cpp','line_number':29,'multiline':False]
['text':'/','line_number':30,'multiline':False]
['text':'/   struct M : torch::nn::Module {','line_number':31,'multiline':False]
['text':'/     explicit M(int value_) : value(value_) {}','line_number':32,'multiline':False]
['text':'/     int value;','line_number':33,'multiline':False]
['text':'/     int forward() {','line_number':34,'multiline':False]
['text':'/       return value;','line_number':35,'multiline':False]
['text':'/     }','line_number':36,'multiline':False]
['text':'/   };','line_number':37,'multiline':False]
['text':'/','line_number':38,'multiline':False]
['text':'/   Sequential sequential({','line_number':39,'multiline':False]
['text':'/     {"m1", std::make_shared<M>(1)},  // shared pointer to `Module` is','line_number':40,'multiline':False]
['text':'/     supported {std::string("m2"), M(2)},  // `Module` is supported','line_number':41,'multiline':False]
['text':'/     {"linear1", Linear(10, 3)}  // `ModuleHolder` is supported','line_number':42,'multiline':False]
['text':'/   });','line_number':43,'multiline':False]
['text':'/ \endrst','line_number':44,'multiline':False]
['text':'/ Creates a `NamedAnyModule` from a (boxed) `Module`.','line_number':47,'multiline':False]
['text':'/ Creates a `NamedAnyModule` from a `Module`, moving or copying it','line_number':52,'multiline':False]
['text':'/ into a `shared_ptr` internally.','line_number':53,'multiline':False]
['text':' NOTE: We need to use `std::remove_reference<M>::type` to get rid of','line_number':54,'multiline':False]
['text':' any reference components for make_unique.','line_number':55,'multiline':False]
['text':'/ Creates a `NamedAnyModule` from a `Module` that is unwrapped from','line_number':63,'multiline':False]
['text':'/ a `ModuleHolder`.','line_number':64,'multiline':False]
['text':'/ Creates a `NamedAnyModule` from a type-erased `AnyModule`.','line_number':69,'multiline':False]
['text':'/ Returns a reference to the name.','line_number':73,'multiline':False]
['text':'/ Returns a reference to the module.','line_number':78,'multiline':False]
['text':'/ Returns a const reference to the module.','line_number':83,'multiline':False]
['text':' namespace nn','line_number':93,'multiline':False]
['text':' namespace torch','line_number':94,'multiline':False]
