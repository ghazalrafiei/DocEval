['text':'/ Options for the `AdaptiveLogSoftmaxWithLoss` module.','line_number':10,'multiline':False]
['text':'/','line_number':11,'multiline':False]
['text':'/ Example:','line_number':12,'multiline':False]
['text':'/ ```','line_number':13,'multiline':False]
['text':'/ AdaptiveLogSoftmaxWithLoss model(AdaptiveLogSoftmaxWithLossOptions(8, 10,','line_number':14,'multiline':False]
['text':'/ {4, 8}).div_value(2.).head_bias(true));','line_number':15,'multiline':False]
['text':'/ ```','line_number':16,'multiline':False]
['text':' implicit ','line_number':18,'multiline':True]
['text':'/ Number of features in the input tensor','line_number':23,'multiline':False]
['text':'/ Number of classes in the dataset','line_number':26,'multiline':False]
['text':'/ Cutoffs used to assign targets to their buckets','line_number':29,'multiline':False]
['text':'/ value used as an exponent to compute sizes of the clusters. Default: 4.0','line_number':32,'multiline':False]
['text':'/ If ``true``, adds a bias term to the 'head' of','line_number':35,'multiline':False]
['text':'/ the adaptive softmax. Default: false','line_number':36,'multiline':False]
['text':' namespace nn','line_number':40,'multiline':False]
['text':' namespace torch','line_number':41,'multiline':False]
