['text':' ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ AnyValue ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~','line_number':19,'multiline':False]
['text':'/ An implementation of `std::any` which stores','line_number':21,'multiline':False]
['text':'/ a type erased object, whose concrete value can be retrieved at runtime by','line_number':22,'multiline':False]
['text':'/ checking if the `typeid()` of a requested type matches the `typeid()` of','line_number':23,'multiline':False]
['text':'/ the object stored.','line_number':24,'multiline':False]
['text':'/ Move construction and assignment is allowed, and follows the default','line_number':27,'multiline':False]
['text':'/ behavior of move for `std::unique_ptr`.','line_number':28,'multiline':False]
['text':'/ Copy construction and assignment is allowed.','line_number':32,'multiline':False]
['text':'/ Constructs the `AnyValue` from value type.','line_number':39,'multiline':False]
['text':' NOLINTNEXTLINE(bugprone-forwarding-reference-overload)','line_number':41,'multiline':False]
['text':'/ Returns a pointer to the value contained in the `AnyValue` if the type','line_number':46,'multiline':False]
['text':'/ passed as template parameter matches the type of the value stored, and','line_number':47,'multiline':False]
['text':'/ returns a null pointer otherwise.','line_number':48,'multiline':False]
['text':'/ Returns the value contained in the `AnyValue` if the type passed as','line_number':63,'multiline':False]
['text':'/ template parameter matches the type of the value stored, and throws an','line_number':64,'multiline':False]
['text':'/ exception otherwise.','line_number':65,'multiline':False]
['text':'/ Returns the `type_info` object of the contained value.','line_number':78,'multiline':False]
['text':'/ \internal','line_number':87,'multiline':False]
['text':'/ The static type of the object we store in the `AnyValue`, which erases the','line_number':88,'multiline':False]
['text':'/ actual object's type, allowing us only to check the `type_info` of the','line_number':89,'multiline':False]
['text':'/ type stored in the dynamic type.','line_number':90,'multiline':False]
['text':'/ \internal','line_number':103,'multiline':False]
['text':'/ The dynamic type of the object we store in the `AnyValue`, which hides the','line_number':104,'multiline':False]
['text':'/ actual object we have erased in this `AnyValue`.','line_number':105,'multiline':False]
['text':'/ A template because T&& would not be universal reference here.','line_number':108,'multiline':False]
['text':' NOLINTNEXTLINE(bugprone-forwarding-reference-overload)','line_number':110,'multiline':False]
['text':'/ The type erased object.','line_number':119,'multiline':False]
['text':' namespace nn','line_number':123,'multiline':False]
['text':' namespace torch','line_number':124,'multiline':False]
