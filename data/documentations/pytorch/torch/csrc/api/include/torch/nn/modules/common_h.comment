['text':'/ This macro enables a module with default arguments in its forward method','line_number':3,'multiline':False]
['text':'/ to be used in a Sequential module.','line_number':4,'multiline':False]
['text':'/','line_number':5,'multiline':False]
['text':'/ Example usage:','line_number':6,'multiline':False]
['text':'/','line_number':7,'multiline':False]
['text':'/ Let's say we have a module declared like this:','line_number':8,'multiline':False]
['text':'/ ```','line_number':9,'multiline':False]
['text':'/ struct MImpl : torch::nn::Module {','line_number':10,'multiline':False]
['text':'/  public:','line_number':11,'multiline':False]
['text':'/   explicit MImpl(int value_) : value(value_) {}','line_number':12,'multiline':False]
['text':'/   torch::Tensor forward(int a, int b = 2, double c = 3.0) {','line_number':13,'multiline':False]
['text':'/     return torch::tensor(a + b + c);','line_number':14,'multiline':False]
['text':'/   }','line_number':15,'multiline':False]
['text':'/  private:','line_number':16,'multiline':False]
['text':'/   int value;','line_number':17,'multiline':False]
['text':'/ };','line_number':18,'multiline':False]
['text':'/ TORCH_MODULE(M);','line_number':19,'multiline':False]
['text':'/ ```','line_number':20,'multiline':False]
['text':'/','line_number':21,'multiline':False]
['text':'/ If we try to use it in a Sequential module and run forward:','line_number':22,'multiline':False]
['text':'/ ```','line_number':23,'multiline':False]
['text':'/ torch::nn::Sequential seq(M(1));','line_number':24,'multiline':False]
['text':'/ seq->forward(1);','line_number':25,'multiline':False]
['text':'/ ```','line_number':26,'multiline':False]
['text':'/','line_number':27,'multiline':False]
['text':'/ We will receive the following error message:','line_number':28,'multiline':False]
['text':'/ ```','line_number':29,'multiline':False]
['text':'/ MImpl's forward() method expects 3 argument(s), but received 1.','line_number':30,'multiline':False]
['text':'/ If MImpl's forward() method has default arguments, please make sure','line_number':31,'multiline':False]
['text':'/ the forward() method is declared with a corresponding','line_number':32,'multiline':False]
['text':'/ `FORWARD_HAS_DEFAULT_ARGS` macro.','line_number':33,'multiline':False]
['text':'/ ```','line_number':34,'multiline':False]
['text':'/','line_number':35,'multiline':False]
['text':'/ The right way to fix this error is to use the `FORWARD_HAS_DEFAULT_ARGS`','line_number':36,'multiline':False]
['text':'/ macro when declaring the module:','line_number':37,'multiline':False]
['text':'/ ```','line_number':38,'multiline':False]
['text':'/ struct MImpl : torch::nn::Module {','line_number':39,'multiline':False]
['text':'/  public:','line_number':40,'multiline':False]
['text':'/   explicit MImpl(int value_) : value(value_) {}','line_number':41,'multiline':False]
['text':'/   torch::Tensor forward(int a, int b = 2, double c = 3.0) {','line_number':42,'multiline':False]
['text':'/     return torch::tensor(a + b + c);','line_number':43,'multiline':False]
['text':'/   }','line_number':44,'multiline':False]
['text':'/  protected:','line_number':45,'multiline':False]
['text':'/   /*','line_number':46,'multiline':False]
['text':'/   NOTE: looking at the argument list of `forward`:','line_number':47,'multiline':False]
['text':'/   `forward(int a, int b = 2, double c = 3.0)`','line_number':48,'multiline':False]
['text':'/   we saw the following default arguments:','line_number':49,'multiline':False]
['text':'/   ----------------------------------------------------------------','line_number':50,'multiline':False]
['text':'/   0-based index of default |         Default value of arg','line_number':51,'multiline':False]
['text':'/   arg in forward arg list  |  (wrapped by `torch::nn::AnyValue()`)','line_number':52,'multiline':False]
['text':'/   ----------------------------------------------------------------','line_number':53,'multiline':False]
['text':'/               1            |       torch::nn::AnyValue(2)','line_number':54,'multiline':False]
['text':'/               2            |       torch::nn::AnyValue(3.0)','line_number':55,'multiline':False]
['text':'/   ----------------------------------------------------------------','line_number':56,'multiline':False]
['text':'/   Thus we pass the following arguments to the `FORWARD_HAS_DEFAULT_ARGS`','line_number':57,'multiline':False]
['text':'/   macro:','line_number':58,'multiline':False]
['text':'/   */','line_number':59,'multiline':False]
['text':'/   FORWARD_HAS_DEFAULT_ARGS({1, torch::nn::AnyValue(2)}, {2,','line_number':60,'multiline':False]
['text':'/   torch::nn::AnyValue(3.0)})','line_number':61,'multiline':False]
['text':'/  private:','line_number':62,'multiline':False]
['text':'/   int value;','line_number':63,'multiline':False]
['text':'/ };','line_number':64,'multiline':False]
['text':'/ TORCH_MODULE(M);','line_number':65,'multiline':False]
['text':'/ ```','line_number':66,'multiline':False]
['text':'/ Now, running the following would work:','line_number':67,'multiline':False]
['text':'/ ```','line_number':68,'multiline':False]
['text':'/ torch::nn::Sequential seq(M(1));','line_number':69,'multiline':False]
['text':'/ seq->forward(1);  // This correctly populates the default arguments for','line_number':70,'multiline':False]
['text':'/ `MImpl::forward`','line_number':71,'multiline':False]
['text':'/ ```','line_number':72,'multiline':False]
