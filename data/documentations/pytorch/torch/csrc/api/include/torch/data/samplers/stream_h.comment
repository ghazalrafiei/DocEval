['text':' namespace serialize','line_number':14,'multiline':False]
['text':' namespace torch','line_number':15,'multiline':False]
['text':'/ A wrapper around a batch size value, which implements the','line_number':21,'multiline':False]
['text':'/ `CustomBatchRequest` interface.','line_number':22,'multiline':False]
['text':'/ A sampler for (potentially infinite) streams of data.','line_number':30,'multiline':False]
['text':'/','line_number':31,'multiline':False]
['text':'/ The major feature of the `StreamSampler` is that it does not return','line_number':32,'multiline':False]
['text':'/ particular indices, but instead only the number of elements to fetch from','line_number':33,'multiline':False]
['text':'/ the dataset. The dataset has to decide how to produce those elements.','line_number':34,'multiline':False]
['text':'/ Constructs the `StreamSampler` with the number of individual examples that','line_number':37,'multiline':False]
['text':'/ should be fetched until the sampler is exhausted.','line_number':38,'multiline':False]
['text':'/ Resets the internal state of the sampler.','line_number':41,'multiline':False]
['text':'/ Returns a `BatchSize` object with the number of elements to fetch in the','line_number':44,'multiline':False]
['text':'/ next batch. This number is the minimum of the supplied `batch_size` and','line_number':45,'multiline':False]
['text':'/ the difference between the `epoch_size` and the current index. If the','line_number':46,'multiline':False]
['text':'/ `epoch_size` has been reached, returns an empty optional.','line_number':47,'multiline':False]
['text':'/ Serializes the `StreamSampler` to the `archive`.','line_number':50,'multiline':False]
['text':'/ Deserializes the `StreamSampler` from the `archive`.','line_number':53,'multiline':False]
['text':' namespace samplers','line_number':61,'multiline':False]
['text':' namespace data','line_number':62,'multiline':False]
['text':' namespace torch','line_number':63,'multiline':False]
