['text':' ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ TransformerEncoder','line_number':18,'multiline':False]
['text':' ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~','line_number':19,'multiline':False]
['text':'/ TransformerEncoder module.','line_number':21,'multiline':False]
['text':'/ See','line_number':22,'multiline':False]
['text':'/ https://pytorch.org/docs/master/generated/torch.nn.TransformerEncoder.html','line_number':23,'multiline':False]
['text':'/ to learn abouut the exact behavior of this encoder layer module.','line_number':24,'multiline':False]
['text':'/','line_number':25,'multiline':False]
['text':'/ See the documentation for `torch::nn::TransformerEncoder` class to learn','line_number':26,'multiline':False]
['text':'/ what constructor arguments are supported for this encoder module.','line_number':27,'multiline':False]
['text':'/','line_number':28,'multiline':False]
['text':'/ Example:','line_number':29,'multiline':False]
['text':'/ ```','line_number':30,'multiline':False]
['text':'/ TransformerEncoderLayer encoderLayer(TransformerEncoderLayerOptions(512,','line_number':31,'multiline':False]
['text':'/ 8).dropout(0.1)); TransformerEncoder','line_number':32,'multiline':False]
['text':'/ encoder(TransformerEncoderOptions(encoderLayer,','line_number':33,'multiline':False]
['text':'/ 6).norm(LayerNorm(LayerNormOptions({2}))));','line_number':34,'multiline':False]
['text':'/ ```','line_number':35,'multiline':False]
['text':'/ options with which this `TransformerEncoder` was constructed','line_number':59,'multiline':False]
['text':'/ module list that contains all the encoder layers','line_number':62,'multiline':False]
['text':'/ optional normalization module','line_number':65,'multiline':False]
['text':'/ A `ModuleHolder` subclass for `TransformerEncoderImpl`.','line_number':69,'multiline':False]
['text':'/ See the documentation for `TransformerEncoderImpl` class to learn what','line_number':70,'multiline':False]
['text':'/ methods it provides, and examples of how to use `TransformerEncoder` with','line_number':71,'multiline':False]
['text':'/ `torch::nn::TransformerEncoderOptions`.','line_number':72,'multiline':False]
['text':'/ See the documentation for `ModuleHolder` to learn about PyTorch's','line_number':73,'multiline':False]
['text':'/ module storage semantics.','line_number':74,'multiline':False]
['text':' ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ TransformerDecoder','line_number':77,'multiline':False]
['text':' ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~','line_number':78,'multiline':False]
['text':'/ TransformerDecoder is a stack of N decoder layers.','line_number':80,'multiline':False]
['text':'/ See','line_number':81,'multiline':False]
['text':'/ https://pytorch.org/docs/master/generated/torch.nn.TransformerDecoder.html','line_number':82,'multiline':False]
['text':'/ to learn abouut the exact behavior of this decoder module','line_number':83,'multiline':False]
['text':'/','line_number':84,'multiline':False]
['text':'/ See the documentation for `torch::nn::TransformerDecoderOptions` class to','line_number':85,'multiline':False]
['text':'/ learn what constructor arguments are supported for this decoder module','line_number':86,'multiline':False]
['text':'/','line_number':87,'multiline':False]
['text':'/ Example:','line_number':88,'multiline':False]
['text':'/ ```','line_number':89,'multiline':False]
['text':'/ TransformerDecoderLayer decoder_layer(TransformerDecoderLayerOptions(512,','line_number':90,'multiline':False]
['text':'/ 8).dropout(0.1)); TransformerDecoder','line_number':91,'multiline':False]
['text':'/ transformer_decoder(TransformerDecoderOptions(decoder_layer,','line_number':92,'multiline':False]
['text':'/ 6).norm(LayerNorm(LayerNormOptions({2})))); const auto memory =','line_number':93,'multiline':False]
['text':'/ torch::rand({10, 32, 512}); const auto tgt = torch::rand({20, 32, 512});','line_number':94,'multiline':False]
['text':'/ auto out = transformer_decoder(tgt, memory);','line_number':95,'multiline':False]
['text':'/ ```','line_number':96,'multiline':False]
['text':'/ Pass the inputs (and mask) through the decoder layer in turn.','line_number':111,'multiline':False]
['text':'/ Args:','line_number':112,'multiline':False]
['text':'/       tgt: the sequence to the decoder layer (required).','line_number':113,'multiline':False]
['text':'/       memory: the sequence from the last layer of the encoder (required).','line_number':114,'multiline':False]
['text':'/       tgt_mask: the mask for the tgt sequence (optional).','line_number':115,'multiline':False]
['text':'/       memory_mask: the mask for the memory sequence (optional).','line_number':116,'multiline':False]
['text':'/       tgt_key_padding_mask: the mask for the tgt keys per batch','line_number':117,'multiline':False]
['text':'/       (optional). memory_key_padding_mask: the mask for the memory keys','line_number':118,'multiline':False]
['text':'/       per batch (optional).','line_number':119,'multiline':False]
['text':'/ The options used to configure this module.','line_number':128,'multiline':False]
['text':'/ Cloned layers of decoder layers','line_number':131,'multiline':False]
['text':'/ optional layer normalization module','line_number':134,'multiline':False]
['text':'/ A `ModuleHolder` subclass for `TransformerDecoderImpl`.','line_number':145,'multiline':False]
['text':'/ See the documentation for `TransformerDecoderImpl` class to learn what','line_number':146,'multiline':False]
['text':'/ methods it provides, and examples of how to use `TransformerDecoder` with','line_number':147,'multiline':False]
['text':'/ `torch::nn::TransformerDecoderOptions`.','line_number':148,'multiline':False]
['text':'/ See the documentation for `ModuleHolder` to learn about PyTorch's','line_number':149,'multiline':False]
['text':'/ module storage semantics.','line_number':150,'multiline':False]
['text':' namespace nn','line_number':153,'multiline':False]
['text':' namespace torch','line_number':154,'multiline':False]
