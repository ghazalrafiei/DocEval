['text':' Special case: when a module is mocked, PackageExporter writes out a','line_number':63,'multiline':False]
['text':' `_mock` module that implements our mocking stubs. If we re-package code,','line_number':64,'multiline':False]
['text':' we may encounter a `_mock` module from the original package. If we do,','line_number':65,'multiline':False]
['text':' just ignore it and write a `_mock` module once.','line_number':66,'multiline':False]
['text':' Special case: PackageImporter adds a fake module','line_number':68,'multiline':False]
['text':' (`torch_package_importer`) that allows packaged code to access it. Don't','line_number':69,'multiline':False]
['text':' re-export this.','line_number':70,'multiline':False]
['text':' What action to take on a module that matches this pattern.','line_number':107,'multiline':False]
['text':' The value of `allow_empty` the user gave when specifying the pattern.','line_number':109,'multiline':False]
['text':' Whether this pattern has been matched during packaging.','line_number':111,'multiline':False]
['text':' Group errors by reason.','line_number':135,'multiline':False]
['text':' Print additional context if it's provided.','line_number':153,'multiline':False]
['text':' Save the dependency graph so that tooling can get at it.','line_number':177,'multiline':False]
['text':' is a byte buffer','line_number':234,'multiline':False]
['text':' A graph tracking all the modules and pickle objects added to this','line_number':243,'multiline':False]
['text':' package and the dependencies between them.','line_number':244,'multiline':False]
['text':' - Each node is a module name (or a pickle name that looks like '<foo.obj.pkl>')','line_number':245,'multiline':False]
['text':' - Each directed edge (u, v) means u depends on v.','line_number':246,'multiline':False]
['text':' - Nodes may contain metadata that describe how to write the thing to the zipfile.','line_number':247,'multiline':False]
['text':' These are OrderedDicts for compatibility with RemovableHandle.','line_number':252,'multiline':False]
['text':' Generic OrderedDict type annotations are not present until 3.7.','line_number':253,'multiline':False]
['text':' The real type signature is OrderedDict[int, Callable[[PackageExporter, str], None]]','line_number':254,'multiline':False]
['text':' list of tuples with arguments to save_source_string','line_number':287,'multiline':False]
['text':' we delay the call to save_source_string so that we record all the source files','line_number':302,'multiline':False]
['text':' being provided by this directory structure _before_ attempting to resolve the dependencies','line_number':303,'multiline':False]
['text':' on the source. This makes sure we don't try to copy over modules that will just get','line_number':304,'multiline':False]
['text':' overwritten by this directory blob','line_number':305,'multiline':False]
['text':' Use a dict to get uniquing but also deterministic order','line_number':362,'multiline':False]
['text':' handle the case where someone did something like `from pack import sub`','line_number':365,'multiline':False]
['text':' where `sub` is a submodule. In this case we don't have to save pack, just sub.','line_number':366,'multiline':False]
['text':' this ensures we don't pick up additional dependencies on pack.','line_number':367,'multiline':False]
['text':' However, in the case where `sub` is not a submodule but an object, then we do have','line_number':368,'multiline':False]
['text':' to save pack.','line_number':369,'multiline':False]
['text':' we don't need to save `pack`','line_number':374,'multiline':False]
['text':' Special case: PackageImporter provides a special module called','line_number':472,'multiline':False]
['text':' `torch_package_importer` that allows packaged modules to reference','line_number':473,'multiline':False]
['text':' their PackageImporter. We don't want to re-export this.','line_number':474,'multiline':False]
['text':' Requiring a denied module just adds an error to the graph.','line_number':505,'multiline':False]
['text':' If we are interning this module, we need to retrieve its','line_number':510,'multiline':False]
['text':' dependencies and package those as well.','line_number':511,'multiline':False]
['text':' No patterns have matched. Explicitly add this as an error.','line_number':516,'multiline':False]
['text':' Subtle: if the import above succeeded, either:','line_number':546,'multiline':False]
['text':'   1. The module name is not mangled, and this was just a regular import, or','line_number':547,'multiline':False]
['text':'   2. The module name is mangled, but one of the importers was able to','line_number':548,'multiline':False]
['text':'      recognize the mangling and import it.','line_number':549,'multiline':False]
['text':' Either way, it is now safe to demangle this name so that we don't','line_number':550,'multiline':False]
['text':' serialize the mangled version to the package.','line_number':551,'multiline':False]
['text':' Find dependencies of this module and require them as well.','line_number':554,'multiline':False]
['text':' Couldn't find a source!  Add it to our dependency graph as broken','line_number':558,'multiline':False]
['text':' and continue.','line_number':559,'multiline':False]
['text':' Write the pickle data for `obj`','line_number':623,'multiline':False]
['text':' pickletools.dis(data_value)','line_number':664,'multiline':False]
['text':' If not module was passed on in the entries preceeding this one, continue.','line_number':688,'multiline':False]
['text':' a global reference','line_number':696,'multiline':False]
['text':' TODO: Once we decide to break serialization FC, we can','line_number':918,'multiline':False]
['text':' remove this case','line_number':919,'multiline':False]
['text':' serialize storage if not already written','line_number':936,'multiline':False]
['text':' If __exit__ was called because an exception was raised, we do not','line_number':972,'multiline':False]
['text':' attempt to finalize the package. Instead, control is returned to the','line_number':973,'multiline':False]
['text':' caller to continue raising the exception.','line_number':974,'multiline':False]
['text':' Do the bare minimum to leave the open buffer in a valid state.','line_number':976,'multiline':False]
['text':' 1. Check the graph for any errors inserted during dependency analysis.','line_number':1000,'multiline':False]
['text':' 2. Check that all patterns for which allow_empty=False have been matched at least once.','line_number':1005,'multiline':False]
['text':' The node in the dependency graph contains metadata that tells us','line_number':1046,'multiline':False]
['text':' how to intern the module.','line_number':1047,'multiline':False]
['text':' This node came from save_pickle, we don't need to write any source for it.','line_number':1054,'multiline':False]
['text':' even though these are in the standard library, we do not allow them to be','line_number':1185,'multiline':False]
['text':' automatically externed since they offer a lot of system level access','line_number':1186,'multiline':False]
