['text':' type: ignore[attr-defined]','line_number':39,'multiline':False]
['text':' If this is a method, then the signature will include a type for','line_number':117,'multiline':False]
['text':' `self`, but type comments do not contain a `self`. So strip it','line_number':118,'multiline':False]
['text':' away here so everything is consistent (`inspect.ismethod` does','line_number':119,'multiline':False]
['text':' not work here since `fn` is unbound at this point)','line_number':120,'multiline':False]
['text':' This might happen both because we failed to get the source of fn, or','line_number':132,'multiline':False]
['text':' because it didn't have any annotations.','line_number':133,'multiline':False]
['text':' A stricter version of `inspect.isroutine` that does not pass for built-in','line_number':141,'multiline':False]
['text':' functions','line_number':142,'multiline':False]
['text':' noqa: B004','line_number':147,'multiline':False]
['text':' If `the_callable` is a class, de-sugar the call so we can still get','line_number':148,'multiline':False]
['text':' the signature','line_number':149,'multiline':False]
['text':' noqa: B004','line_number':166,'multiline':False]
['text':' De-sugar calls to classes','line_number':167,'multiline':False]
['text':' The `fn` was not a method or function (maybe a class with a __call__','line_number':175,'multiline':False]
['text':' method, so use a default param name list)','line_number':176,'multiline':False]
['text':' Make sure the function definition is not a class instantiation','line_number':181,'multiline':False]
['text':' type: ignore[arg-type] # noqa: P204','line_number':209,'multiline':False]
['text':' `type: ignore` comments may be needed in JIT'ed functions for mypy, due','line_number':249,'multiline':False]
['text':' to the hack in torch/_VF.py.','line_number':250,'multiline':False]
['text':' An ignore type comment can be of following format:','line_number':252,'multiline':False]
['text':'   1) type: ignore','line_number':253,'multiline':False]
['text':'   2) type: ignore[rule-code]','line_number':254,'multiline':False]
['text':' This ignore statement must be at the end of the line','line_number':255,'multiline':False]
['text':' adding an extra backslash before the space, to avoid triggering','line_number':257,'multiline':False]
['text':' one of the checks in .github/workflows/lint.yml','line_number':258,'multiline':False]
['text':' Catch common typo patterns like extra spaces, typo in 'ignore', etc.','line_number':263,'multiline':False]
['text':' noqa: B950','line_number':273,'multiline':False]
['text':' Only 1 type line, quit now','line_number':278,'multiline':False]
['text':' Parse split up argument types according to PEP 484','line_number':281,'multiline':False]
['text':' https://www.python.org/dev/peps/pep-0484/#suggested-syntax-for-python-2-7-and-straddling-code','line_number':282,'multiline':False]
['text':' Note: anything annotated as `Optional[T]` will automatically','line_number':332,'multiline':False]
['text':' be returned as `Union[T, None]` per','line_number':333,'multiline':False]
['text':' https://github.com/python/typing/blob/master/src/typing.py#L850','line_number':334,'multiline':False]
['text':' Finds common type for enum values belonging to an Enum class. If not all','line_number':350,'multiline':False]
['text':' values have the same type, AnyType is returned.','line_number':351,'multiline':False]
['text':' If Enum values are of different types, an exception will be raised here.','line_number':360,'multiline':False]
['text':' Even though Python supports this case, we chose to not implement it to','line_number':361,'multiline':False]
['text':' avoid overcomplicate logic here for a rare use case. Please report a','line_number':362,'multiline':False]
['text':' feature request if you find it necessary.','line_number':363,'multiline':False]
['text':' always returns a tuple!','line_number':403,'multiline':False]
['text':' Special case for the empty Tuple type annotation `Tuple[()]`','line_number':412,'multiline':False]
['text':' Raise error if key or value is None','line_number':423,'multiline':False]
['text':' TODO: this is hack to recognize NumberType','line_number':443,'multiline':False]
['text':' We need these extra checks because both `None` and invalid','line_number':447,'multiline':False]
['text':' values will return `None`','line_number':448,'multiline':False]
['text':' TODO: Determine if the other cases need to be fixed as well','line_number':449,'multiline':False]
['text':' type: ignore[arg-type]','line_number':457,'multiline':False]
['text':' dtype not yet bound in as its own type','line_number':488,'multiline':False]
['text':' Maybe resolve a NamedTuple to a Tuple Type','line_number':503,'multiline':False]
['text':' TODO: Consider not exporting these during wildcard import (reserve','line_number':539,'multiline':False]
['text':' that for the types; for idiomatic typing code.)','line_number':540,'multiline':False]
