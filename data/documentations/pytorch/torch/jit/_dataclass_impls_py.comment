['text':' Functions for synthesizing magic methods for JIT-compiled dataclasses','line_number':1,'multiline':False]
['text':' Parse the function declaration','line_number':21,'multiline':False]
['text':' This should only happen if there's some unforeseeable change','line_number':25,'multiline':False]
['text':' in the dataclasses module that makes our synthesized code fail','line_number':26,'multiline':False]
['text':' Parse the function','line_number':32,'multiline':False]
['text':' Supporting default factories in the way that people expect would sort of require us to','line_number':45,'multiline':False]
['text':' allow compiling lambda functions, which is not currently supported.','line_number':46,'multiline':False]
['text':' Simply read off the generated __init__ signature from CPython's implementation. It'll be','line_number':55,'multiline':False]
['text':' almost correct except for InitVar annotations, which we need to handle specially.','line_number':56,'multiline':False]
['text':' Handle InitVars if needed (only works on Python 3.8+, when a `type` attribute was added to InitVar);','line_number':59,'multiline':False]
['text':' see CPython commit here https://github.com/python/cpython/commit/01ee12ba35a333e8a6a25c4153c4a21838e9585c','line_number':60,'multiline':False]
['text':' The TorchScript interpreter can't handle InitVar annotations, so we unwrap the underlying type here','line_number':67,'multiline':False]
['text':' type: ignore[attr-defined]','line_number':69,'multiline':False]
['text':' Assign all attributes to self','line_number':76,'multiline':False]
['text':' Call user's impl of __post_init__ if it exists','line_number':81,'multiline':False]
['text':' This is a placeholder at the moment since the TorchScript interpreter doesn't call __repr__','line_number':88,'multiline':False]
['text':' This is just a placeholder to prevent compilation from failing; this won't even get called at','line_number':113,'multiline':False]
['text':' all right now because the TorchScript interpreter doesn't call custom __hash__ implementations','line_number':114,'multiline':False]
['text':' Implementation for __eq__ and __ne__','line_number':121,'multiline':False]
['text':' Type refinement for optional fields; we need this to avoid type errors from the interpreter','line_number':163,'multiline':False]
