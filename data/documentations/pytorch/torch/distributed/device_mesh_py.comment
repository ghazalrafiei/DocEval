['text':' Copyright (c) Meta Platforms, Inc. and affiliates','line_number':1,'multiline':False]
['text':' We need to create the stubs when distributed is not available.','line_number':18,'multiline':False]
['text':' Otherwise, we would fail the doc tests (```./.ci/pytorch/docs-test.sh```),','line_number':19,'multiline':False]
['text':' since it would try to import ``torch.distributed.device_mesh`` or','line_number':20,'multiline':False]
['text':' ``torch.distributed.init_device_mesh`` but cannot find them.','line_number':21,'multiline':False]
['text':' type: ignore[attr-defined]','line_number':29,'multiline':False]
['text':' type: ignore[attr-defined]','line_number':32,'multiline':False]
['text':' only import numpy typing when type checking','line_number':50,'multiline':False]
['text':' swap the current dim to the last dim then reshape to flatten out other','line_number':72,'multiline':False]
['text':' dims, so we can just extract the list of ranks which contains cur_rank.','line_number':73,'multiline':False]
['text':' Assign the current DeviceMesh as the parent of the child DeviceMesh.','line_number':90,'multiline':False]
['text':' ProcessGroup can't tell us this info so we have to infer it, assume','line_number':118,'multiline':False]
['text':' homogeneous hardware for now','line_number':119,'multiline':False]
['text':' type: ignore[union-attr]','line_number':137,'multiline':False]
['text':' private field to pre-generate DeviceMesh's hash','line_number':214,'multiline':False]
['text':' Skip process group initialization if xla device.','line_number':218,'multiline':False]
['text':' TODO(yeounoh) implement DeviceMesh backend and register XLA backend.','line_number':219,'multiline':False]
['text':' always try to create default (world) pg, even if it is not initialized','line_number':221,'multiline':False]
['text':' already. The world pg is used for device mesh identity (rank) on each','line_number':222,'multiline':False]
['text':' process (we need to know if the current global rank is in the mesh or not).','line_number':223,'multiline':False]
['text':' TODO: if user want to pass pg_options, offer a way to do it','line_number':240,'multiline':False]
['text':' automatically set the current cuda/cuda-like device base on num of gpu devices available in each host','line_number':242,'multiline':False]
['text':' NOTE: This device selection would only work for homogeneous hardware.','line_number':243,'multiline':False]
['text':' calculate the coordinates of the current global rank on the mesh','line_number':255,'multiline':False]
['text':' group tag/ranks associated with each mesh dimension, each mesh dimension should','line_number':264,'multiline':False]
['text':' have one sub-group per rank','line_number':265,'multiline':False]
['text':' if the mesh is the same as world_pg, we just append the default','line_number':269,'multiline':False]
['text':' pg to the first dim groups, as new_group cannot have the exact','line_number':270,'multiline':False]
['text':' same ranks as world','line_number':271,'multiline':False]
['text':' create sub pgs base on the mesh argument specified','line_number':279,'multiline':False]
['text':' swap the current dim to the last dim','line_number':281,'multiline':False]
['text':' then reshape to flatten out other dims','line_number':282,'multiline':False]
['text':' multi-dim mesh, create subgroups by looping over the pg_ranks','line_number':286,'multiline':False]
['text':' for each dim and append the groups','line_number':287,'multiline':False]
['text':' call new_group regardless of the current rank in the','line_number':290,'multiline':False]
['text':' pg or not, it's required that all ranks participate','line_number':291,'multiline':False]
['text':' in subgroup construction','line_number':292,'multiline':False]
['text':' only add to dim_groups if the current rank in the subgroup','line_number':294,'multiline':False]
['text':' set this mesh as the current mesh in mesh env','line_number':307,'multiline':False]
['text':' pyre-fixme[2]: Parameter must be annotated.','line_number':311,'multiline':False]
['text':' pop this mesh from mesh env','line_number':313,'multiline':False]
['text':' type: ignore[arg-type]','line_number':466,'multiline':False]
['text':' type: ignore[arg-type]','line_number':470,'multiline':False]
