['text':' type: ignore[import]','line_number':63,'multiline':False]
['text':' Specification of process groups for hybrid sharding strategies.','line_number':69,'multiline':False]
['text':' Overall specification of process group.','line_number':71,'multiline':False]
['text':' TODO (awgu): Refactor this later','line_number':75,'multiline':False]
['text':' NOTE: Since non-self attributes cannot be type annotated, several attributes','line_number':93,'multiline':False]
['text':' on `state` are defined first as local variables before being assigned.','line_number':94,'multiline':False]
['text':' Raise an error here, since this is manual wrapping with no process group','line_number':113,'multiline':False]
['text':' passed in, there is no way to ensure all wrapped FSDP instances use the same','line_number':114,'multiline':False]
['text':' process groups.','line_number':115,'multiline':False]
['text':' We currently only allow _inter_node_pg to be the outermost dimension, and the','line_number':158,'multiline':False]
['text':' process_group(intra_node) to be the innermost dimension.','line_number':159,'multiline':False]
['text':' we shard across intra-node','line_number':172,'multiline':False]
['text':' save _inter_node_pg to allreduce across.','line_number':174,'multiline':False]
['text':' Check type and assign state.process_group and state._inter_node_pg.','line_number':177,'multiline':False]
['text':' Assuming that user passed in as intra node group and inter node group','line_number':179,'multiline':False]
['text':' as documented.','line_number':180,'multiline':False]
['text':' Create state for allreduce','line_number':187,'multiline':False]
['text':' the inter-node pg that is returned','line_number':245,'multiline':False]
['text':' Assuming fully homogeneous setup','line_number':249,'multiline':False]
['text':' every rank always needs to call dist.new_group','line_number':256,'multiline':False]
['text':' TODO: FSDP's contract for buffers is not well-defined. They are','line_number':325,'multiline':False]
['text':' implicitly ignored for most functionality since they are not sharded;','line_number':326,'multiline':False]
['text':' however, FSDP still imposes some semantics on buffers (e.g. buffer mixed','line_number':327,'multiline':False]
['text':' precision). We should formalize this contract and decide if we need to','line_number':328,'multiline':False]
['text':' compute and store `_ignored_buffers`.','line_number':329,'multiline':False]
['text':' Sort for consistent ordering for unit test regex matching','line_number':347,'multiline':False]
['text':' Save a mapping from clean fully-qualified buffer name (starting from','line_number':413,'multiline':False]
['text':' `module`) to its original dtype for restoring that dtype during model','line_number':414,'multiline':False]
['text':' checkpointing when buffer mixed precision is enabled. The names should','line_number':415,'multiline':False]
['text':' be clean since the casting happens in a `summon_full_params()` context.','line_number':416,'multiline':False]
['text':' We clamp the strategy to `NO_SHARD` for world size of 1 since they are','line_number':436,'multiline':False]
['text':' currently functionally equivalent. This may change if/when we integrate','line_number':437,'multiline':False]
['text':' FSDP with MoE.','line_number':438,'multiline':False]
['text':' Mapping from fully sharded module to the handles it is responsible to','line_number':468,'multiline':False]
['text':' unshard and reshard (see [Note: Fully Sharded Module])','line_number':469,'multiline':False]
['text':' Invariant: `state.params` contains exactly the `FlatParameter`s of the','line_number':472,'multiline':False]
['text':' handles in `state._handle`','line_number':473,'multiline':False]
['text':' Used to prevent running the pre-backward hook multiple times','line_number':494,'multiline':False]
['text':' The data structures use tuples of handles to generalize over the case','line_number':506,'multiline':False]
['text':' where a module's forward involves multiple handles.','line_number':507,'multiline':False]
['text':' TODO: we need to add additional check once we support FSDP + PiPPy.','line_number':513,'multiline':False]
['text':' This check is currently sufficient, since we only support FSDP + TP.','line_number':514,'multiline':False]
['text':' We need to explicilty set _fsdp_extension to None.','line_number':518,'multiline':False]
['text':' Otherwise, we will run into an infinite recursion when getting the attribute.','line_number':519,'multiline':False]
['text':' Materialize the module if needed','line_number':550,'multiline':False]
['text':' TODO: We may relax this by taking the FSDP instance's wrapped','line_number':653,'multiline':False]
['text':' module to provide more flexibility to the user.','line_number':654,'multiline':False]
['text':' Treat modules that cannot compose with `fully_shard` as ignored modules,','line_number':656,'multiline':False]
['text':' meaning that their subtrees are ignored','line_number':657,'multiline':False]
['text':' NOTE: Even if `ignored_root_modules` is empty, do not return early so','line_number':661,'multiline':False]
['text':' that this FSDP instance can get any ignored modules from its children.','line_number':662,'multiline':False]
['text':' Include child modules and exclude nested FSDP modules themselves','line_number':664,'multiline':False]
['text':' Include nested FSDP modules' ignored modules','line_number':677,'multiline':False]
['text':' Always include nested FSDP modules' ignored parameters','line_number':710,'multiline':False]
['text':' Always include nested FSDP modules' ignored buffer names','line_number':739,'multiline':False]
['text':' We allow module to be partially on CPU and partially on GPU if device_id is not','line_number':768,'multiline':False]
['text':' None, since the device_id arg will result in the CPU portion being moved to','line_number':769,'multiline':False]
['text':' GPU. This is useful in cases where part of the module may be parallelized','line_number':770,'multiline':False]
['text':' by another algorithm and may already be on GPU. We'd like to enforce device_id','line_number':771,'multiline':False]
['text':' to not be None, otherwise we'd flatten parameters in a mixed module which is','line_number':772,'multiline':False]
['text':' not supported.','line_number':773,'multiline':False]
['text':' TODO: We need to establish a contract for FSDP and buffers. For now, we','line_number':828,'multiline':False]
['text':' skip checking for meta buffers from ignored modules. We should consider','line_number':829,'multiline':False]
['text':' refactoring the initialization holistically to avoid so many traversals.','line_number':830,'multiline':False]
['text':' Run default meta device initialization','line_number':863,'multiline':False]
['text':' Assume that each module's `reset_parameters()` only initializes its','line_number':869,'multiline':False]
['text':' own parameters and not those of its children','line_number':870,'multiline':False]
['text':' As a contract to the user, only call `reset_parameters()` if','line_number':873,'multiline':False]
['text':' the module has directly managed parameters/buffers','line_number':874,'multiline':False]
['text':' type: ignore[operator]','line_number':881,'multiline':False]
['text':' Run BFS to collect the modules to materialize via `reset_parameters()`,','line_number':894,'multiline':False]
['text':' stopping at any module with FSDP already applied or at ignored modules.','line_number':895,'multiline':False]
['text':' BFS from `module` without traversing any nested FSDP instances to','line_number':933,'multiline':False]
['text':' collect the parameters/buffers that have not yet been managed','line_number':934,'multiline':False]
['text':' NOTE: We include a check to only move parameters/buffers that are','line_number':941,'multiline':False]
['text':' on CPU device. If they are on a CUDA device different from the','line_number':942,'multiline':False]
['text':' one specified by `device_id`, then this does NOT move them. This','line_number':943,'multiline':False]
['text':' is so that we can raise an error in `_get_compute_device()`.','line_number':944,'multiline':False]
['text':' Move the parameters and buffers like the `.data` code path in','line_number':986,'multiline':False]
['text':' `nn.Module._apply()`, which underlies `nn.Module.to()`','line_number':987,'multiline':False]
['text':' Determined by model param placement','line_number':1034,'multiline':False]
['text':' Determined by custom backend','line_number':1037,'multiline':False]
['text':' TODO: See how to deprecate!','line_number':1048,'multiline':False]
['text':' Avoid re-synchronizing buffers in case of nested wrapping','line_number':1062,'multiline':False]
['text':' Assumes that each call to this method passes in disjoint `params` and','line_number':1081,'multiline':False]
['text':' and `buffers` across calls, so there is no chance of re-synchronizing','line_number':1082,'multiline':False]
