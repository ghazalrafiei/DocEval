['text':' mypy: ignore-errors','line_number':1,'multiline':False]
['text':' if the index is valid then replace the input dimension with the new dimension','line_number':75,'multiline':False]
['text':' otherwise the dimension will not be replaced and the clause will contain False','line_number':76,'multiline':False]
['text':' print(constraints)','line_number':86,'multiline':False]
['text':' if the index is valid, we generate a constraint for getting an item','line_number':116,'multiline':False]
['text':' otherwise this clause will have been UNSAT due to the wrong index','line_number':117,'multiline':False]
['text':' generate a result tensor of the expected size','line_number':155,'multiline':False]
['text':' generate a place-holder list of the right rank','line_number':159,'multiline':False]
['text':' where "slice" does not contribute to the rank and "None" does','line_number':160,'multiline':False]
['text':' append 1 to the right location of the resulting tensor','line_number':167,'multiline':False]
['text':' append the remaining dimensions to the right location','line_number':177,'multiline':False]
['text':' check if the index is valid','line_number':184,'multiline':False]
['text':' check if the resulting tensor is within bounds','line_number':187,'multiline':False]
['text':' precision constraints','line_number':205,'multiline':False]
['text':' matching','line_number':227,'multiline':False]
['text':' the convolution result is a tensor of size 4','line_number':336,'multiline':False]
['text':' the second dimension of the output is equal to the output channels','line_number':339,'multiline':False]
['text':' the input corresponds to the output in the first dimension of the convolution','line_number':342,'multiline':False]
['text':' the maxpool result is a tensor of size 4','line_number':363,'multiline':False]
['text':' the input corresponds to the output in the first and second dimension of maxpool','line_number':366,'multiline':False]
['text':' this will be evaluated right here','line_number':390,'multiline':False]
['text':' this tells us there is a dynamic variable','line_number':405,'multiline':False]
['text':' dynamic tensor','line_number':443,'multiline':False]
['text':' size 1 tensor','line_number':468,'multiline':False]
['text':' size 2 tensor','line_number':474,'multiline':False]
['text':' size 3 tensor','line_number':477,'multiline':False]
['text':' size 4 tensor','line_number':480,'multiline':False]
['text':' then there must be exactly one occurrence of dyn','line_number':486,'multiline':False]
['text':' tensor 1','line_number':494,'multiline':False]
['text':' tensor 2','line_number':500,'multiline':False]
['text':' tensor 3','line_number':505,'multiline':False]
['text':' tensor 4','line_number':510,'multiline':False]
['text':' Introduce dimensions','line_number':530,'multiline':False]
['text':' dyn possibility','line_number':534,'multiline':False]
['text':' tensor possibility','line_number':538,'multiline':False]
['text':' generate dimensions to create tensors of size 1','line_number':539,'multiline':False]
['text':' generate dimensions to create tensors of size 2','line_number':543,'multiline':False]
['text':' generate dimensions to create tensors of size 3','line_number':548,'multiline':False]
['text':' generate dimensions to create tensors of size 4','line_number':553,'multiline':False]
['text':' transform parameters into tuples incase they are not already','line_number':618,'multiline':False]
['text':' generate all possibilities of being equal or not equal to dyn for my_list','line_number':654,'multiline':False]
['text':' then the inputs are the same length so they all have dimensions at "index"','line_number':751,'multiline':False]
['text':' we don't set the input dimension to 1, since it doesn't exist.','line_number':757,'multiline':False]
['text':' pad the shorter input with None so we can pass it to the broadcasting helper function','line_number':790,'multiline':False]
['text':' for every padding size, we also consider broadcasting','line_number':805,'multiline':False]
['text':' we consider the possibilities for broadcasting for every dimension. Since we already','line_number':809,'multiline':False]
['text':' padded d1, we do not consider it while broadcasting','line_number':810,'multiline':False]
['text':' combine all constraints into a conjunction','line_number':815,'multiline':False]
['text':' without padding, broadcast all possibilities for tensors of size i','line_number':1027,'multiline':False]
['text':' with padding, broadcast all possibilities for tensors of size i','line_number':1031,'multiline':False]
