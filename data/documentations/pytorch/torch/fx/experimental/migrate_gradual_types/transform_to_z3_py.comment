['text':' type: ignore[import]','line_number':11,'multiline':False]
['text':' with dimension transformations we consider the encoding','line_number':54,'multiline':False]
['text':' then we have an algebraic expression which means that we disregard the','line_number':60,'multiline':False]
['text':' first element of the encoding','line_number':61,'multiline':False]
['text':' The assumption here is that the LHS and RHS must be dimensions','line_number':66,'multiline':False]
['text':' if one of the instances is a number','line_number':78,'multiline':False]
['text':' if the dimensions are not dyn, this will come into effect','line_number':93,'multiline':False]
['text':' there would have been another constraint specifying if a given dimension','line_number':94,'multiline':False]
['text':' is dyn or not','line_number':95,'multiline':False]
['text':' type: ignore[var-annotated]','line_number':234,'multiline':False]
['text':' print(new_constraints.conjucts[0])','line_number':239,'multiline':False]
['text':' print(*new_constraints.conjucts, sep='\n')','line_number':240,'multiline':False]
['text':' transform precision, matching, consistency till obtaining a fixed point','line_number':242,'multiline':False]
['text':' print(new_constraints)','line_number':244,'multiline':False]
['text':' print(new_constraints.conjucts)','line_number':245,'multiline':False]
['text':' new_constraints.conjucts = new_constraints.conjucts[:-1]','line_number':246,'multiline':False]
['text':' print(*new_constraints.conjucts, sep='\n')','line_number':247,'multiline':False]
['text':' print(transformed)','line_number':250,'multiline':False]
['text':' type: ignore[var-annotated]','line_number':279,'multiline':False]
['text':' we know the constraint is a conjunction where the last constraint is about the conditional','line_number':286,'multiline':False]
['text':' so remove the last constraint','line_number':287,'multiline':False]
['text':' transform precision, matching, consistency till obtaining a fixed point','line_number':290,'multiline':False]
['text':' since the function returns a list of one element, we get the first element','line_number':294,'multiline':False]
['text':' we are only interested in the RHS in this case because the LHS just stores','line_number':295,'multiline':False]
['text':' the result','line_number':296,'multiline':False]
['text':' we make sure the constraint is of the form:','line_number':298,'multiline':False]
['text':' c = b where b is a boolean expression','line_number':299,'multiline':False]
['text':' and we consider b (constraint.rhs) for transformation','line_number':300,'multiline':False]
['text':' transform the condition constraint','line_number':305,'multiline':False]
