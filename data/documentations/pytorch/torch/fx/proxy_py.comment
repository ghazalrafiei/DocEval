['text':' Keep a copy of prev scope to restore on exit','line_number':70,'multiline':False]
['text':' Update scope to current scope','line_number':72,'multiline':False]
['text':' Save a reference so we can restore it','line_number':75,'multiline':False]
['text':' Feature flag for mutable schema checking','line_number':94,'multiline':False]
['text':' Enableby default in 1.12','line_number':95,'multiline':False]
['text':' Feature flag for assert tracing','line_number':97,'multiline':False]
['text':' Feature flag for proxying accesses to buffer values','line_number':99,'multiline':False]
['text':' Name of the function to be traced. It will only be used when','line_number':102,'multiline':False]
['text':' ``root`` is an instance of ``nn.Module``','line_number':103,'multiline':False]
['text':' Maps the containing module's name to the operator name','line_number':106,'multiline':False]
['text':' Records the module call stack','line_number':109,'multiline':False]
['text':' Mapping of node name to module scope','line_number':112,'multiline':False]
['text':' TODO node_name_to_scope will be depreciated in favor of','line_number':130,'multiline':False]
['text':' node.meta['nn_module_stack']','line_number':131,'multiline':False]
['text':' Optionally set stack trace on the created Node for debugging purposes','line_number':136,'multiline':False]
['text':' Explicitly set the stack_trace, nn_module_stack and source_fn on the node.meta','line_number':143,'multiline':False]
['text':' If other meta fields are needed, they can be added here','line_number':144,'multiline':False]
['text':' Here we decrement to account for the sequence_nr having','line_number':149,'multiline':False]
['text':' just been incremented while tracing this lowered aten op.','line_number':150,'multiline':False]
['text':' The sequence_nr increments every time a new autograd Node','line_number':152,'multiline':False]
['text':' is created. During the FWD pass we store the sequence_nr','line_number':153,'multiline':False]
['text':' corresponding to the last autograd Node created on this fx','line_number':154,'multiline':False]
['text':' node's meta.  A single aten op can create multiple autograd','line_number':155,'multiline':False]
['text':' nodes as is the case with in-place foreach ops. During the','line_number':156,'multiline':False]
['text':' BWD pass we retrieve the sequence_nr stored on the current','line_number':157,'multiline':False]
['text':' executing autograd Node. See NOTE [ Sequence Number ].','line_number':158,'multiline':False]
['text':' stack_trace would have innermost frame at the bottom','line_number':202,'multiline':False]
['text':' We have to do a little dance here. Basically, walk up the callstack and','line_number':212,'multiline':False]
['text':' record the first frame not in the pytorch source. This is the frame executing','line_number':213,'multiline':False]
['text':' the user code during tracing.','line_number':214,'multiline':False]
['text':' aggregates','line_number':248,'multiline':False]
['text':' NamedTuple constructors don't seem to like getting a generator','line_number':250,'multiline':False]
['text':' expression as an argument to their constructor, so build this','line_number':251,'multiline':False]
['text':' intermediate tuple and unpack it into the NamedTuple constructor','line_number':252,'multiline':False]
['text':' type: ignore[arg-type]','line_number':254,'multiline':False]
['text':' Check for invalid dict keys. We do not want a Proxy to appear','line_number':260,'multiline':False]
['text':' anywhere within the key. Since keys can be collection types,','line_number':261,'multiline':False]
['text':' we iterate through the key with map_aggregate','line_number':262,'multiline':False]
['text':' base case: we unwrap the Proxy object','line_number':283,'multiline':False]
['text':' used in Proxy object when just appending to the graph while not tracing.','line_number':328,'multiline':False]
['text':' This allows you to create a Proxy object around a raw Node','line_number':379,'multiline':False]
['text':' note: not added to the graph yet, if this is a method call','line_number':388,'multiline':False]
['text':' we peephole optimize to the method invocation','line_number':389,'multiline':False]
['text':' type: ignore[index]','line_number':408,'multiline':False]
['text':' check if this boolean is used in an assertion, bytecode pattern for assertions','line_number':417,'multiline':False]
['text':' is pretty stable for Python 3.7--3.9','line_number':418,'multiline':False]
['text':' TODO: Define how to symbolically trace HigherOrderOperators','line_number':477,'multiline':False]
['text':' the node for attributes is added lazily, since most will just be method calls','line_number':494,'multiline':False]
['text':' which do not rely on the getitem call','line_number':495,'multiline':False]
