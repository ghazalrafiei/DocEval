['text':' Creates subgraphs out of main graph','line_number':39,'multiline':False]
['text':' type: ignore[union-attr]','line_number':160,'multiline':False]
['text':' type: ignore[index]','line_number':164,'multiline':False]
['text':' noqa: B950','line_number':172,'multiline':False]
['text':' add node to partitions','line_number':191,'multiline':False]
['text':' Global State Nodes are nodes which by their global state effects,','line_number':199,'multiline':False]
['text':' "taint" all downstream nodes while they are active.','line_number':200,'multiline':False]
['text':' For grad regions:','line_number':207,'multiline':False]
['text':' ------------------------','line_number':208,'multiline':False]
['text':' 1. first region: we do nothing','line_number':209,'multiline':False]
['text':' 2. subsequent regions: we insert the set_grad at the beginning','line_number':210,'multiline':False]
['text':' For autocast regions:','line_number':213,'multiline':False]
['text':' ------------------------','line_number':214,'multiline':False]
['text':' 1. first region: we will only insert the _exit at the end','line_number':215,'multiline':False]
['text':' 2. intermediate regions: we will insert both the','line_number':216,'multiline':False]
['text':'    _enter at the beginning and _exit at the end','line_number':217,'multiline':False]
['text':' 3. last region: we will only insert _enter at the beginning','line_number':218,'multiline':False]
['text':' We will do so in the order in which the autocasts were instantiated.','line_number':219,'multiline':False]
['text':' Should all be python constants','line_number':239,'multiline':False]
['text':' split nodes into partitions','line_number':267,'multiline':False]
['text':' TODO currently placeholders/parameters aren't put into random partitions,','line_number':272,'multiline':False]
['text':' rather they're added to the graphs where they are used down below','line_number':273,'multiline':False]
['text':' do not capture cross-partition dependencies for global state nodes as they will be','line_number':289,'multiline':False]
['text':' self-contained - their setup and unwind will be isolated to each partition submodule.','line_number':290,'multiline':False]
['text':' noqa: B950','line_number':297,'multiline':False]
['text':' find partitions with no dependencies','line_number':300,'multiline':False]
['text':' check partitions for circular dependencies and create topological partition ordering','line_number':306,'multiline':False]
['text':' Enter prelude','line_number':318,'multiline':False]
['text':' is it really a good idea to copy this?','line_number':332,'multiline':False]
['text':' add placeholders to partition inputs','line_number':335,'multiline':False]
['text':' Transform nodes and collect targets for partition's submodule','line_number':346,'multiline':False]
['text':' swap out old graph nodes in kw/args with references to new nodes in this submodule','line_number':351,'multiline':False]
['text':' target = target_atoms[-1]','line_number':367,'multiline':False]
['text':' Fill in the passed-in mapping from new qualname to old qualname','line_number':370,'multiline':False]
['text':' When creating the split module later, the submodules will have','line_number':372,'multiline':False]
['text':' path prefix matching the corresponding partition's submod_name','line_number':373,'multiline':False]
['text':' Exit epilogue','line_number':389,'multiline':False]
['text':' is it really a good idea to copy this?','line_number':405,'multiline':False]
['text':' original module environment dict mapping node names to nodes','line_number':407,'multiline':False]
['text':' Set up values to construct base module','line_number':409,'multiline':False]
['text':' Go through the graph to construct the mapping dict','line_number':420,'multiline':False]
['text':' Do some things iterating over the partitions in topological order again:','line_number':424,'multiline':False]
['text':' 1) Finish off submodule Graphs by setting corresponding outputs','line_number':425,'multiline':False]
['text':' 2) Construct GraphModules for each submodule','line_number':426,'multiline':False]
['text':' 3) Construct the base graph by emitting calls to those submodules in','line_number':427,'multiline':False]
['text':'    topological order or original order specified by keep_original_order','line_number':428,'multiline':False]
['text':' Set correct output values','line_number':438,'multiline':False]
['text':' skip output node generation if there are no output values','line_number':443,'multiline':False]
['text':' first get the attr nodes required by this partition','line_number':451,'multiline':False]
['text':' Construct GraphModule for this partition','line_number':455,'multiline':False]
['text':' type: ignore[attr-defined]','line_number':456,'multiline':False]
['text':' noqa: B950','line_number':466,'multiline':False]
['text':' Emit call in base graph to this submodule','line_number':468,'multiline':False]
['text':' Unpack multiple return values from submodule','line_number':476,'multiline':False]
['text':' type: ignore[index]','line_number':479,'multiline':False]
['text':' noqa: B950','line_number':487,'multiline':False]
