['text':' fx.Node.target typename, as returned by `get_node_target()`','line_number':13,'multiline':False]
['text':' Arguments' dtypes for a given node, see `OperatorSupport`','line_number':16,'multiline':False]
['text':' Target not found in _support_dict meaning that we don't support this op at all','line_number':83,'multiline':False]
['text':' The rule for target is None meaning that we accept any dtype','line_number':87,'multiline':False]
['text':' type: ignore[misc]','line_number':91,'multiline':False]
['text':' Check args dtypes','line_number':93,'multiline':False]
['text':' None indicates we don't care about the dtype of args[i]','line_number':98,'multiline':False]
['text':' If arg is not a node then we don't check it','line_number':102,'multiline':False]
['text':' type: ignore[arg-type]','line_number':106,'multiline':False]
['text':' Check kwargs dtypes','line_number':110,'multiline':False]
['text':' If arg is not a node then we don't check it','line_number':115,'multiline':False]
['text':' type: ignore[arg-type]','line_number':119,'multiline':False]
['text':' ======================================================================','line_number':126,'multiline':False]
['text':' Functional interfaces and utils for defining basic operator support logic','line_number':127,'multiline':False]
['text':' and composing them into more complex ones','line_number':128,'multiline':False]
['text':' ======================================================================','line_number':129,'multiline':False]
['text':' escape dtype check for get_attr node','line_number':191,'multiline':False]
['text':' type: ignore[union-attr]','line_number':218,'multiline':False]
