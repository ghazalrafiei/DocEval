['text':' This file is dual licensed under the terms of the Apache License, Version','line_number':1,'multiline':False]
['text':' 2.0, and the BSD License. See the LICENSE file in the root of this repository','line_number':2,'multiline':False]
['text':' for complete details.','line_number':3,'multiline':False]
['text':' Please keep the duplicated `isinstance` check','line_number':73,'multiline':False]
['text':' in the six comparisons hereunder','line_number':74,'multiline':False]
['text':' unless you find a way to avoid adding overhead function calls.','line_number':75,'multiline':False]
['text':' Deliberately not anchored to the start and end of the string, to make it','line_number':113,'multiline':False]
['text':' easier for 3rd party code to reuse','line_number':114,'multiline':False]
['text':' Validate the version and parse it into pieces','line_number':197,'multiline':False]
['text':' Store the parsed out pieces of the version','line_number':202,'multiline':False]
['text':' Generate a key which will be used for sorting','line_number':214,'multiline':False]
['text':' Epoch','line_number':240,'multiline':False]
['text':' Release segment','line_number':244,'multiline':False]
['text':' Pre-release','line_number':247,'multiline':False]
['text':' Post-release','line_number':251,'multiline':False]
['text':' Development release','line_number':255,'multiline':False]
['text':' Local version segment','line_number':259,'multiline':False]
['text':' Epoch','line_number':372,'multiline':False]
['text':' Release segment','line_number':376,'multiline':False]
['text':' We consider there to be an implicit 0 in a pre-release if there is','line_number':457,'multiline':False]
['text':' not a numeral associated with it.','line_number':458,'multiline':False]
['text':' We normalize any letters to their lower case form','line_number':462,'multiline':False]
['text':' We consider some words to be alternate spellings of other words and','line_number':465,'multiline':False]
['text':' in those cases we want to normalize the spellings to our preferred','line_number':466,'multiline':False]
['text':' spelling.','line_number':467,'multiline':False]
['text':' We assume if we are given a number, but we are not given a letter','line_number':479,'multiline':False]
['text':' then this is using the implicit post release syntax (e.g. 1.0-1)','line_number':480,'multiline':False]
['text':' When we compare a release version, we want to compare it with all of the','line_number':512,'multiline':False]
['text':' trailing zeros removed. So we'll use a reverse the list, drop all the now','line_number':513,'multiline':False]
['text':' leading zeros until we come to something non zero, then take the rest','line_number':514,'multiline':False]
['text':' re-reverse it back into the correct order and make it a tuple and use','line_number':515,'multiline':False]
['text':' that for our sorting key.','line_number':516,'multiline':False]
['text':' We need to "trick" the sorting algorithm to put 1.0.dev0 before 1.0a0.','line_number':521,'multiline':False]
['text':' We'll do this by abusing the pre segment, but we _only_ want to do this','line_number':522,'multiline':False]
['text':' if there is not a pre or a post segment. If we have one of those then','line_number':523,'multiline':False]
['text':' the normal sorting rules will handle this case correctly.','line_number':524,'multiline':False]
['text':' Versions without a pre-release (except as noted above) should sort after','line_number':527,'multiline':False]
['text':' those with one.','line_number':528,'multiline':False]
['text':' Versions without a post segment should sort before those with one.','line_number':534,'multiline':False]
['text':' Versions without a development segment should sort after those with one.','line_number':541,'multiline':False]
['text':' Versions without a local segment should sort before those with one.','line_number':549,'multiline':False]
['text':' Versions with a local segment need that segment parsed to implement','line_number':552,'multiline':False]
['text':' the sorting rules in PEP440.','line_number':553,'multiline':False]
['text':' - Alpha numeric segments sort before numeric segments','line_number':554,'multiline':False]
['text':' - Alpha numeric segments sort lexicographically','line_number':555,'multiline':False]
['text':' - Numeric segments sort numerically','line_number':556,'multiline':False]
['text':' - Shorter versions sort before longer versions when the prefixes','line_number':557,'multiline':False]
['text':'   match exactly','line_number':558,'multiline':False]
