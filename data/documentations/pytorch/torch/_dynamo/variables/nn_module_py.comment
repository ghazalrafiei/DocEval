['text':' implement list/iter/tuple/etc calls','line_number':92,'multiline':False]
['text':' Mark the class dynamic unless its module initialization','line_number':142,'multiline':False]
['text':' see if we can fallback to __getattr__, which is not checked by getattr_static','line_number':198,'multiline':False]
['text':' if we can't find a __getattr__, just raise the AttributeError','line_number':204,'multiline':False]
['text':' Support possibly common cases of class members','line_number':231,'multiline':False]
['text':' We do not want to unroll sequential if it has hooks, since evaporating it','line_number':253,'multiline':False]
['text':' will cause hooks to not fire!','line_number':254,'multiline':False]
['text':' This terminates and restart the tracing process','line_number':255,'multiline':False]
['text':' Unroll sequential','line_number':258,'multiline':False]
['text':' TODO: Use named_children when it supports remove_duplicate=False.','line_number':264,'multiline':False]
['text':' The module type will change after it is called','line_number':280,'multiline':False]
['text':' The pre-hook runs to initialize the module shapes, then deletes itself.  After this,','line_number':284,'multiline':False]
['text':' the module is more or less not lazy and can be treated as a normal module regardless of','line_number':285,'multiline':False]
['text':' is_allowed or other variations.','line_number':286,'multiline':False]
['text':' If we are tracing the higher order op, we want Dynamo to step','line_number':289,'multiline':False]
['text':' inside the module call so that Dynamo can see the underlying','line_number':290,'multiline':False]
['text':' parameters and buffers and raise them as inputs to the graph.','line_number':291,'multiline':False]
['text':' End of fn, this bubbles up and restarts tracing.','line_number':296,'multiline':False]
['text':' TODO: do we want to support __call__ for GM's?','line_number':315,'multiline':False]
['text':' If so at least some changes are needed, we don't allow inlining','line_number':316,'multiline':False]
['text':' the call_wrapped currently, and maybe other issues too','line_number':317,'multiline':False]
['text':' Helper function to put a `call_method` node in FX graph,','line_number':348,'multiline':False]
['text':' with nn.Module as the first arg.','line_number':349,'multiline':False]
['text':' Example: `self.layer.__call__(x)`','line_number':373,'multiline':False]
['text':' This is used for explicit calling `__call__` in a forward function.','line_number':374,'multiline':False]
['text':' Dynamo inlines `__call__`, includes hooks.','line_number':375,'multiline':False]
['text':' Example: `self.layer.forward(x)`','line_number':378,'multiline':False]
['text':' This is used for explicit calling `forward` in a forward function.','line_number':379,'multiline':False]
['text':' Dynamo puts `call_method` node in FX, doesn't trigger hooks.','line_number':380,'multiline':False]
['text':' Build a TupleVariable of NNModules','line_number':552,'multiline':False]
['text':' Turn the slice into the list of integers','line_number':556,'multiline':False]
['text':' Inline the function','line_number':599,'multiline':False]
['text':' A loose heuristic, but seems to be generally good before we drop into the','line_number':607,'multiline':False]
['text':' manual handling of inputs','line_number':608,'multiline':False]
['text':' We may have cloned a variabletracker for a LazyModule earlier (e.g. tracking side-effects)','line_number':642,'multiline':False]
['text':' and then later we called and mutated the LazyModule into a MaterializedModule.','line_number':643,'multiline':False]
['text':' We do not do the mutation upon first seeing a LazyModule since we preserve eager semantics to only','line_number':644,'multiline':False]
['text':' mutate upon first call, but this requires we update multiple copies of the VariableTracker post-mutation.','line_number':645,'multiline':False]
['text':' see comment on lazy module handling in NNModuleVariable.call_function for context','line_number':684,'multiline':False]
['text':' this makes us behave like a usual UnspecializedNNModuleVariable for guarding purposes','line_number':790,'multiline':False]
