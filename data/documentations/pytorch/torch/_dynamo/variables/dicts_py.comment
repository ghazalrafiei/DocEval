['text':' All the keys are constants','line_number':27,'multiline':False]
['text':' instructions to load collections.OrderedDict if necessary','line_number':42,'multiline':False]
['text':' instructions to build the dict keys and values','line_number':50,'multiline':False]
['text':' BUILD_MAP and calling collections.OrderedDict if necessary','line_number':60,'multiline':False]
['text':' BUILD_MAP only if user_cls is dict','line_number':66,'multiline':False]
['text':' missing item, return the default value','line_number':149,'multiline':False]
['text':' all keys in kwargs are valid (`str`s)','line_number':176,'multiline':False]
['text':' all keys in kwargs are valid (`str`s)','line_number':196,'multiline':False]
['text':' Return false for unsupported defaults. This ensures that a bad handler','line_number':256,'multiline':False]
['text':' path is not taken in BuiltinVariable for getitem.','line_number':257,'multiline':False]
['text':' Note - Set is still backed by a list, because we want set behavior over the contents,','line_number':318,'multiline':False]
['text':' Note - this is only used for producing a set','line_number':338,'multiline':False]
['text':' Somewhat duplicative of CommonListMethodsVariable - but better than to violate substitution','line_number':399,'multiline':False]
['text':' principles and end up with things like direct item access attempts on a set, or','line_number':400,'multiline':False]
['text':' getitem sources.','line_number':401,'multiline':False]
['text':' Something created locally can't have any extra fields on it','line_number':447,'multiline':False]
['text':' Maybe add a guard','line_number':450,'multiline':False]
['text':' ModelOutput() excludes None, though generic datclasses don't','line_number':473,'multiline':False]
['text':' TODO(jansel): implement unpacking logic in ModelOutput.__post_init__','line_number':528,'multiline':False]
['text':' __init__ function of a dataclass might not have yet defined the key','line_number':540,'multiline':False]
['text':' True if using default OrderedDict.__init__ and did not implement __post_init__','line_number':607,'multiline':False]
['text':' hack for HF usecase:','line_number':614,'multiline':False]
['text':'   assume dataclass annotation for ModelOutput subclass','line_number':615,'multiline':False]
['text':'   assume self.create is AA to ModelOutput.__post_init__','line_number':616,'multiline':False]
['text':' called from user_defined.py','line_number':623,'multiline':False]
['text':' when is_matching_cls(cls) is true','line_number':624,'multiline':False]
['text':' avoid tracing when returning ModelOutput from forward func','line_number':627,'multiline':False]
['text':' CustomDict() init with empty arguments','line_number':636,'multiline':False]
['text':' @dataclass CustomDict(a=1, b=2)','line_number':639,'multiline':False]
['text':' CustomDict(a=1, b=2) in the general (non-dataclass) case.','line_number':644,'multiline':False]
['text':' CustomDict({'a': 1, 'b': 2})','line_number':647,'multiline':False]
['text':' called from builder.py','line_number':664,'multiline':False]
['text':' 'RETURN_VALUE triggered compile'','line_number':676,'multiline':False]
['text':' called from torch/_dynamo/codegen.py','line_number':677,'multiline':False]
['text':' for python dict method without overridden','line_number':699,'multiline':False]
['text':' for user overridden method','line_number':702,'multiline':False]
['text':' We need to monkeypatch transformers here, sadly.','line_number':725,'multiline':False]
['text':' TODO(voz): Upstream to transformers lib','line_number':726,'multiline':False]
['text':' Lazily install monkeypatch the first time we see it in dynamo','line_number':748,'multiline':False]
['text':' Fallback to dict implementation','line_number':802,'multiline':False]
