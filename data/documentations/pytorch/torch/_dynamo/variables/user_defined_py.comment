['text':' TODO(ybliang): support kwargs','line_number':121,'multiline':False]
['text':' [NOTE] OrderedDict, dict subtypes must always have source','line_number':295,'multiline':False]
['text':' We cannot instantiate such subtypes in-graph due to builtin __new__','line_number':296,'multiline':False]
['text':' subclass of OrderedDict','line_number':298,'multiline':False]
['text':' OrderedDict, dict subtypes must always have source','line_number':300,'multiline':False]
['text':' OrderedDict, dict subtypes must always have source','line_number':314,'multiline':False]
['text':' OrderedDict, dict subtypes must always have source','line_number':323,'multiline':False]
['text':' OrderedDict, dict subtypes must always have source','line_number':337,'multiline':False]
['text':' check for methods implemented in C++','line_number':340,'multiline':False]
['text':' TODO(jansel): add a guard to check for monkey patching?','line_number':347,'multiline':False]
['text':' TypeError: unhashable type','line_number':379,'multiline':False]
['text':' simulate the inference_mode.clone implementation','line_number':419,'multiline':False]
['text':' getattr_static doesn't work on these','line_number':479,'multiline':False]
['text':' Since we get subobj via self._getattr_static, which may not trigger dynamic lookup.','line_number':527,'multiline':False]
['text':' Static lookup can't tell us it's a method or function correctly,','line_number':528,'multiline':False]
['text':' so we trigger dynamic lookup here to get the correct type.','line_number':529,'multiline':False]
['text':' index of the registration in the side_effects owned register_hook/handle list, used during removal.','line_number':675,'multiline':False]
['text':' This reconstruct is actually pretty unique - it does not construct the object from scratch.','line_number':689,'multiline':False]
['text':' Handles always come from a register_hook call on a tensor, and so, rerunning that for the codegen of a','line_number':690,'multiline':False]
['text':' hook would be incorrect.','line_number':691,'multiline':False]
['text':' Instead, the invariant is that codegen has already produced the handle and stored it at a known name.','line_number':692,'multiline':False]
['text':' It is an invariant that at this point, a STORE_FAST was executed for this name.','line_number':695,'multiline':False]
