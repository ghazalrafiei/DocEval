['text':' NB - We CAN have ConstantVariable.create(set) because of how sets interact with guards.','line_number':14,'multiline':False]
['text':' A locally created set should always become a SetVariable, as the items in the set will already either be sourced','line_number':15,'multiline':False]
['text':' from somewhere else, or unsourced. An input set would imply sources derived from set contents. For example, an','line_number':16,'multiline':False]
['text':' input list's contents will have a source like some_list[0], some_list[1][1], etc. For a set, arbitrary access is','line_number':17,'multiline':False]
['text':' not possible. This is a solvable problem, but one we have not taken on yet. As such, input sets are not allowed to','line_number':18,'multiline':False]
['text':' become SetVariables. The solution here is to create a ConstantSetVariable that is more like a ConstantVariable.','line_number':19,'multiline':False]
['text':' As this does not exist, we cannot add sets to this invariant.','line_number':20,'multiline':False]
['text':' Routing for list and tuple literals.','line_number':39,'multiline':False]
['text':' return f"ConstantVariable({self.value})"','line_number':74,'multiline':False]
['text':' The structure within is_literal get routed to variables.BaseListVariable','line_number':109,'multiline':False]
['text':' Promote to SymNodeVariable for operations involving dynamic shapes.','line_number':148,'multiline':False]
['text':' Addition between a non sym and sym makes a sym','line_number':176,'multiline':False]
['text':' sym_num = tx.output.register_attr_or_module(','line_number':177,'multiline':False]
['text':'     add_target, f"sym_shape_{add_target}", source=None','line_number':178,'multiline':False]
['text':' )','line_number':179,'multiline':False]
