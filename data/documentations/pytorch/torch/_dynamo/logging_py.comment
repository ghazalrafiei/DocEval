['text':' Disable progress bar by default, not in dynamo config because otherwise get a circular import','line_number':6,'multiline':False]
['text':' Return all loggers that torchdynamo/torchinductor is responsible for','line_number':10,'multiline':False]
['text':' Creates a logging function that logs a message with a step # prepended.','line_number':19,'multiline':False]
['text':' get_step_logger should be lazily called (i.e. at runtime, not at module-load time)','line_number':20,'multiline':False]
['text':' so that step numbers are initialized properly. e.g.:','line_number':21,'multiline':False]
['text':' @functools.lru_cache(None)','line_number':23,'multiline':False]
['text':' def _step_logger():','line_number':24,'multiline':False]
['text':'     return get_step_logger(logging.getLogger(...))','line_number':25,'multiline':False]
['text':' def fn():','line_number':27,'multiline':False]
['text':'     _step_logger()(logging.INFO, "msg")','line_number':28,'multiline':False]
['text':' Update num_steps if more phases are added: Dynamo, AOT, Backend','line_number':32,'multiline':False]
['text':' This is very inductor centric','line_number':33,'multiline':False]
['text':' _inductor.utils.has_triton() gives a circular import error here','line_number':34,'multiline':False]
['text':' noqa: F401','line_number':38,'multiline':False]
