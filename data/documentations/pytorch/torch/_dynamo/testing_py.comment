['text':' if isinstance(loss, torch.Tensor) and loss.item() > 1:','line_number':74,'multiline':False]
['text':'     log.warning(','line_number':75,'multiline':False]
['text':'         f"High loss value alert - {loss:.2f}. Can result in unstable gradients."','line_number':76,'multiline':False]
['text':'     )','line_number':77,'multiline':False]
['text':' Treat None and zero grad as same','line_number':86,'multiline':False]
['text':' Mean does not work on integer tensors','line_number':125,'multiline':False]
['text':' TODO: shouldn't this be f_locals/f_globals from frame?','line_number':177,'multiline':False]
['text':' Equivalent to backend="eager", but also records graphs that','line_number':221,'multiline':False]
['text':' we can assert on','line_number':222,'multiline':False]
['text':' strip comments as comments have path to files which may differ from','line_number':242,'multiline':False]
['text':' system to system.','line_number':243,'multiline':False]
['text':' NB: Doesn't handle slots correctly, but whatever','line_number':332,'multiline':False]
['text':' test Python 3.11+ specific features','line_number':339,'multiline':False]
['text':' Controls tests generated in test/inductor/test_torchinductor_dynamic_shapes.py','line_number':346,'multiline':False]
['text':' and test/dynamo/test_dynamic_shapes.py','line_number':347,'multiline':False]
['text':' Controls tests generated in test/inductor/test_torchinductor_codegen_dynamic_shapes.py','line_number':353,'multiline':False]
['text':' Controls test generated in test/inductor/test_cpp_wrapper.py','line_number':359,'multiline':False]
