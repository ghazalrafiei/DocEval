['text':' type: ignore[assignment]','line_number':15,'multiline':False]
['text':' we monkey patch FX to prevent infinite loop of trying to convert','line_number':119,'multiline':False]
['text':' our generated code','line_number':120,'multiline':False]
['text':' type: ignore[attr-defined]','line_number':167,'multiline':False]
['text':' Check if the function was decorated using torch._dynamo.optimize','line_number':174,'multiline':False]
['text':' Check if there is global import of torch.*','line_number':178,'multiline':False]
['text':' ... or a global import of numpy.*','line_number':184,'multiline':False]
['text':' Some packages like pytest can be updated during runtime. So, make a','line_number':213,'multiline':False]
['text':' copy of values to avoid issues like "RuntimeError: dictionary','line_number':214,'multiline':False]
['text':' changed size during iteration"','line_number':215,'multiline':False]
['text':' if config.debug:','line_number':226,'multiline':False]
['text':'     print(','line_number':227,'multiline':False]
['text':'         f"Assuming that object of type {type(obj)} does not have a tensor"','line_number':228,'multiline':False]
['text':'     )','line_number':229,'multiline':False]
['text':' Check if the passed arguments are of type Tensor','line_number':232,'multiline':False]
['text':' not needed, but cleans up torchbench error stats','line_number':300,'multiline':False]
['text':' setattr could be tricky to handle generally,','line_number':303,'multiline':False]
['text':' but also not likely useful to compile- skip the whole frame','line_number':304,'multiline':False]
['text':' optimizer support is still incomplete see','line_number':309,'multiline':False]
['text':' test_state_dict in test/dynamo/test_optimizers.py','line_number':310,'multiline':False]
['text':' Check if the frame is generated by an exec builtin call','line_number':313,'multiline':False]
['text':' TODO - Running exec generated frame seems propagates f_globals to the','line_number':314,'multiline':False]
['text':' next frames.','line_number':315,'multiline':False]
['text':' namedtuple subclass constructor. Empty builtins cause issue with','line_number':324,'multiline':False]
['text':' len keyword in LIST_LEN guard.','line_number':325,'multiline':False]
['text':' type: ignore[attr-defined]','line_number':397,'multiline':False]
['text':' type: ignore[attr-defined]','line_number':402,'multiline':False]
['text':' we have to use `OrderedDict` to make `RemovableHandle` work.','line_number':416,'multiline':False]
['text':' This is shared across restarts','line_number':454,'multiline':False]
['text':' Skipping Dynamo on a frame without any extracted graph.','line_number':569,'multiline':False]
['text':' This does not affect eager functionality. But this is necessary','line_number':570,'multiline':False]
['text':' for export for cases where Dynamo-reconstructed bytecode can create','line_number':571,'multiline':False]
['text':' new function frames, confusing export in thinking that there','line_number':572,'multiline':False]
['text':' are extra graphs now.','line_number':573,'multiline':False]
['text':' We should not run the guard_export_fn when Dynamo does not','line_number':588,'multiline':False]
['text':' generate any graph. This can happen in export when TorchDynamo','line_number':589,'multiline':False]
['text':' generated bytecode has some reconstruction logic for mutated','line_number':590,'multiline':False]
['text':' variables which can trigger TorchDynamo on the children frames but','line_number':591,'multiline':False]
['text':' they are benign and do not generate any new graphs.','line_number':592,'multiline':False]
['text':' These two exception types are "soft" failure, in the sense that','line_number':688,'multiline':False]
['text':' we know this is due to something we didn't implement all the','line_number':689,'multiline':False]
['text':' way, scare the user less about it.  That being said, if you','line_number':690,'multiline':False]
['text':' are trying to understand why a graph break happened, it's still','line_number':691,'multiline':False]
['text':' important to have this information, so offer it.','line_number':692,'multiline':False]
['text':'','line_number':693,'multiline':False]
['text':' NB: NotImplementedError used to be on this list, but actually','line_number':694,'multiline':False]
['text':' it is impossible for it to reach here, as it is converted into','line_number':695,'multiline':False]
['text':' InternalTorchDynamoError.  This behavior seemed reasonable','line_number':696,'multiline':False]
['text':' to me (ezyang, Aug 2023) so I kept it, but maybe at some point','line_number':697,'multiline':False]
['text':' someone wanted these to also get suppressed.  If so, you'll','line_number':698,'multiline':False]
['text':' need to make these exceptions not get wrapped','line_number':699,'multiline':False]
['text':' We intentionally don't want to suppress error here.','line_number':701,'multiline':False]
['text':' Suppress the error.  NB: It's very important to do the','line_number':709,'multiline':False]
['text':' suppression logging HERE, where the actual suppression','line_number':710,'multiline':False]
['text':' happens. Previously it was somewhere else and so it was','line_number':711,'multiline':False]
['text':' possible to accidentally not log at all.','line_number':712,'multiline':False]
['text':' type: ignore[attr-defined]','line_number':723,'multiline':False]
['text':' type: ignore[attr-defined]','line_number':724,'multiline':False]
['text':' TODO mlazos: add support for same args, or record them','line_number':728,'multiline':False]
