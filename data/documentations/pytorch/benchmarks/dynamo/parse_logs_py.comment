['text':' This script takes the logs produced by the benchmark scripts (e.g.,','line_number':6,'multiline':False]
['text':' torchbench.py) and parses it into a CSV file that summarizes what','line_number':7,'multiline':False]
['text':' is failing and why.  It is kept separate from the benchmark script','line_number':8,'multiline':False]
['text':' emitting a more structured output as it is often more convenient','line_number':9,'multiline':False]
['text':' to iterate quickly on log files offline instead of having to make','line_number':10,'multiline':False]
['text':' a change to the benchmark script and then do a full sweep to see','line_number':11,'multiline':False]
['text':' the updates.','line_number':12,'multiline':False]
['text':'','line_number':13,'multiline':False]
['text':' This script is not very well written, feel free to rewrite it as necessary','line_number':14,'multiline':False]
['text':' If the log contains a gist URL, extract it so we can include it in the CSV','line_number':20,'multiline':False]
['text':' Split the log into an entry per benchmark','line_number':26,'multiline':False]
['text':' Entries schema example:','line_number':30,'multiline':False]
['text':' `['hf_Bert', None, '','line_number':31,'multiline':False]
['text':'  PASS\nTIMING: entire_frame_compile:1.80925 backend_compile:6e-05\nDynamo produced 1 graph(s) covering 367 ops\n']`','line_number':32,'multiline':False]
['text':' Sometimes backtraces will be in third party code, which results','line_number':64,'multiline':False]
['text':' in very long file names.  Delete the absolute path in this case.','line_number':65,'multiline':False]
['text':' Assume we run torchbench, huggingface, timm_models in that order','line_number':73,'multiline':False]
['text':' (as output doesn't say which suite the benchmark is part of)','line_number':74,'multiline':False]
['text':' TODO: make this more robust','line_number':75,'multiline':False]
['text':' 3 = 1 + number of matches in the entries split regex','line_number':79,'multiline':False]
['text':' Payload that will go into the csv','line_number':88,'multiline':False]
['text':' Attempt to extract out useful information from the traceback','line_number':101,'multiline':False]
['text':' Sometimes, the benchmark will say FAIL without any useful info','line_number':130,'multiline':False]
['text':' See https://github.com/pytorch/torchdynamo/issues/1910','line_number':131,'multiline':False]
['text':' call_* op count: 970 | FakeTensor.__torch_dispatch__:35285 | ProxyTorchDispatchMode.__torch_dispatch__:13339','line_number':149,'multiline':False]
['text':' TODO: rewrite this to work with arbitrarily many stats','line_number':151,'multiline':False]
['text':' If the context string is too long, don't put it in the CSV.','line_number':166,'multiline':False]
['text':' This is a hack to try to make it more likely that Google Sheets will','line_number':167,'multiline':False]
['text':' offer to split columns','line_number':168,'multiline':False]
['text':' Temporary file names are meaningless, report it's generated code in this','line_number':172,'multiline':False]
['text':' case','line_number':173,'multiline':False]
