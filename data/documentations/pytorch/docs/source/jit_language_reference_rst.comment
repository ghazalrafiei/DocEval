['text':' These are hidden from the docs, but these are necessary for `doctest`','line_number':8,'multiline':False]
['text':' since the `inspect` module doesn't play nicely with the execution','line_number':9,'multiline':False]
['text':' environment for `doctest`','line_number':10,'multiline':False]
['text':' type: (int, Tuple[Tensor, Tensor]) -> Tensor','line_number':161,'multiline':False]
['text':' This annotates the list to be a `List[Tuple[int, float]]`','line_number':211,'multiline':False]
['text':' If `z` is None, its type cannot be inferred, so it must','line_number':253,'multiline':False]
['text':' be specified (above)','line_number':254,'multiline':False]
['text':' type: (Optional[int], Optional[int], Optional[int]) -> int','line_number':258,'multiline':False]
['text':' Refinement for an attribute by assigning it to a local','line_number':263,'multiline':False]
['text':' Refinement via an `assert`','line_number':268,'multiline':False]
['text':' TODO: fix the source file resolving so this can be tested','line_number':294,'multiline':False]
['text':' Declare a TorchScript class','line_number':336,'multiline':False]
['text':' type: (Pair) -> Tensor','line_number':345,'multiline':False]
['text':' type: (Point) -> Tensor','line_number':396,'multiline':False]
['text':' interpreted as int','line_number':432,'multiline':False]
['text':' interpreted as a float','line_number':433,'multiline':False]
['text':' Since nothing in the model calls `top_level_method`, the compiler','line_number':582,'multiline':False]
['text':' must be explicitly told to compile this method','line_number':583,'multiline':False]
['text':' `my_script_module` will have the compiled methods `forward`, `helper`,','line_number':591,'multiline':False]
['text':' `top_level_method`, and `other_helper`','line_number':592,'multiline':False]
['text':' short-hand for a = a + b, does not operate in-place on a','line_number':629,'multiline':False]
['text':' `Final` from the `typing_extensions` module can also be used','line_number':852,'multiline':False]
['text':'class-and-instance-variable-annotations>`_ class annotations.','line_number':889,'multiline':False]
['text':' `words` is initialized as an empty list, so its type must be specified','line_number':900,'multiline':False]
['text':' The type could potentially be inferred if `a_dict` (below) was not','line_number':903,'multiline':False]
['text':' empty, but this annotation ensures `some_dict` will be made into the','line_number':904,'multiline':False]
['text':' proper type','line_number':905,'multiline':False]
['text':' `int`s can be inferred','line_number':913,'multiline':False]
['text':' type: (str) -> int','line_number':917,'multiline':False]
