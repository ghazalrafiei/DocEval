['text':' Providing input and output names sets the display names for values','line_number':22,'multiline':False]
['text':' within the model's graph. Setting these does not change the semantics','line_number':23,'multiline':False]
['text':' of the graph; it is only for readability.','line_number':24,'multiline':False]
['text':'','line_number':25,'multiline':False]
['text':' The inputs to the network consist of the flat list of inputs (i.e.','line_number':26,'multiline':False]
['text':' the values you would pass to the forward() method) followed by the','line_number':27,'multiline':False]
['text':' flat list of parameters. You can partially specify names, i.e. provide','line_number':28,'multiline':False]
['text':' a list here shorter than the number of inputs to the model, and we will','line_number':29,'multiline':False]
['text':' only set that subset of names, starting from the beginning.','line_number':30,'multiline':False]
['text':' These are the inputs and parameters to the network, which have taken on','line_number':41,'multiline':False]
['text':' the names we specified earlier.','line_number':42,'multiline':False]
['text':' ---- omitted for brevity ----','line_number':48,'multiline':False]
['text':' Every statement consists of some output tensors (and their types),','line_number':51,'multiline':False]
['text':' the operator to be run (with its attributes, e.g., kernels, strides,','line_number':52,'multiline':False]
['text':' etc.), its input tensors (%actual_input_1, %learned_0, %learned_1)','line_number':53,'multiline':False]
['text':' ---- omitted for brevity ----','line_number':57,'multiline':False]
['text':' Dynamic means that the shape is not known. This may be because of a','line_number':59,'multiline':False]
['text':' limitation of our implementation (which we would like to fix in a','line_number':60,'multiline':False]
['text':' future release) or shapes which are truly dynamic.','line_number':61,'multiline':False]
['text':' ---- omitted for brevity ----','line_number':66,'multiline':False]
['text':' Load the ONNX model','line_number':80,'multiline':False]
['text':' Check that the model is well formed','line_number':83,'multiline':False]
['text':' Print a human readable representation of the graph','line_number':86,'multiline':False]
['text':'deployModel>`_.','line_number':90,'multiline':False]
['text':' Bad! Will be replaced with constants during tracing.','line_number':154,'multiline':False]
['text':' Good! Tensor operations will be captured during tracing.','line_number':160,'multiline':False]
['text':' Bad! y.item() will be replaced with a constant during tracing.','line_number':168,'multiline':False]
['text':' Good! y will be preserved as a variable during tracing.','line_number':174,'multiline':False]
['text':' Tensor indices that includes negative values.','line_number':249,'multiline':False]
['text':' Workarounds: use positive index values.','line_number':251,'multiline':False]
['text':' Multiple tensor indices if any has rank >= 2','line_number':258,'multiline':False]
['text':' Workarounds: use single tensor index with rank >= 2,','line_number':260,'multiline':False]
['text':'              or multiple consecutive tensor indices with rank == 1.','line_number':261,'multiline':False]
['text':' Multiple tensor indices that are not consecutive','line_number':263,'multiline':False]
['text':' Workarounds: transpose `data` such that tensor indices are consecutive.','line_number':265,'multiline':False]
['text':' Tensor indices that includes negative values.','line_number':267,'multiline':False]
['text':' Workarounds: use positive index values.','line_number':269,'multiline':False]
['text':' Implicit broadcasting required for new_data.','line_number':271,'multiline':False]
['text':' Workarounds: expand new_data explicitly.','line_number':273,'multiline':False]
['text':' Example:','line_number':274,'multiline':False]
['text':'   data shape: [3, 4, 5]','line_number':275,'multiline':False]
['text':'   new_data shape: [5]','line_number':276,'multiline':False]
['text':'   expected new_data shape after broadcasting: [2, 2, 2, 5]','line_number':277,'multiline':False]
['text':'. Change the model to not use that operator.','line_number':290,'multiline':False]
['text':'. Create a symbolic function to convert the operator and register it as a custom symbolic function.','line_number':291,'multiline':False]
['text':'. Contribute to PyTorch to add the same symbolic function to :mod:`torch.onnx` itself.','line_number':292,'multiline':False]
['text':'aten>`_ is PyTorch's built-in tensor library.','line_number':342,'multiline':False]
['text':' module','line_number':377,'multiline':False]
['text':' example input','line_number':378,'multiline':False]
['text':' Logs a warning and returns None','line_number':488,'multiline':False]
['text':' Copy type and shape from original node.','line_number':490,'multiline':False]
['text':' There are three opset version needed to be aligned','line_number':538,'multiline':False]
['text':' This is (1) the opset version in ONNX function','line_number':539,'multiline':False]
['text':' auto wrapped as Constants','line_number':550,'multiline':False]
['text':' setType API provides shape/type to ONNX shape/type inference','line_number':559,'multiline':False]
['text':' Register custom symbolic function','line_number':563,'multiline':False]
['text':' There are three opset version needed to be aligned','line_number':564,'multiline':False]
['text':' This is (2) the opset version in registry','line_number':565,'multiline':False]
['text':' There are three opset version needed to be aligned','line_number':572,'multiline':False]
['text':' This is (2) the opset version in exporter','line_number':573,'multiline':False]
['text':' only needed if you want to specify an opset version > 1.','line_number':579,'multiline':False]
['text':' Define custom symbolic function','line_number':601,'multiline':False]
['text':' Register custom symbolic function','line_number':607,'multiline':False]
['text':' Calling custom op','line_number':618,'multiline':False]
['text':' only needed if you want to specify an opset version > 1.','line_number':627,'multiline':False]
['text':' prepare model, args, opset_version','line_number':648,'multiline':False]
