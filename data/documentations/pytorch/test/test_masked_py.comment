['text':' Owner(s): ["module: masked operators"]','line_number':1,'multiline':False]
['text':' eliminate mask and dim_position keyword arguments:','line_number':76,'multiline':False]
['text':' scalar input is an elementary slice','line_number':82,'multiline':False]
['text':' eliminate keepdim keyword argument if specified:','line_number':85,'multiline':False]
['text':' eliminate dim argument that may appear both as args or kwargs','line_number':88,'multiline':False]
['text':' element:','line_number':89,'multiline':False]
['text':' dim is specified in args','line_number':91,'multiline':False]
['text':' dim may be specified in kwargs','line_number':96,'multiline':False]
['text':' dimensions along which the reduction operation is applied:','line_number':100,'multiline':False]
['text':' slices in product(*ranges) define all elementary slices:','line_number':102,'multiline':False]
['text':' shape of output for the keepdim=True case:','line_number':104,'multiline':False]
['text':' keepdim=True version of the output, filled with nan or 0:','line_number':114,'multiline':False]
['text':' apply op to all elementary slices:','line_number':117,'multiline':False]
['text':' data of an elementary slice is 1D sequence and has only','line_number':123,'multiline':False]
['text':' masked-in elements:','line_number':124,'multiline':False]
['text':' empty elementary slice','line_number':127,'multiline':False]
['text':' reshape output for the keepdim=False case','line_number':132,'multiline':False]
['text':' scalar input','line_number':144,'multiline':False]
['text':' after gh-59958 is resolved, replace the usage of this function','line_number':180,'multiline':False]
['text':' with torch.Tensor.to_dense','line_number':181,'multiline':False]
['text':' strided layouts are always supported','line_number':219,'multiline':False]
['text':' torch.var/torch.std does not support integer inputs','line_number':285,'multiline':False]
['text':' check masked invariance:','line_number':307,'multiline':False]
['text':'  op(inp, mask).to_dense() == op(inp.to_dense(), mask.to_dense()) at outmask','line_number':308,'multiline':False]
['text':'','line_number':309,'multiline':False]
['text':' make some specified mask elements as explicit masked-out masks:','line_number':361,'multiline':False]
['text':' make specified input elements have zero values:','line_number':376,'multiline':False]
['text':' expected where result:','line_number':386,'multiline':False]
['text':' Z value corresponds to masked-in elements that are not','line_number':388,'multiline':False]
['text':' specified in the input and it will be replaced with a zero','line_number':389,'multiline':False]
['text':' check invariance:','line_number':424,'multiline':False]
['text':'  torch.where(mask.to_dense(), input.to_dense(), fill_value)','line_number':425,'multiline':False]
['text':'    == where(mask, input, fill_value).to_dense(fill_value)','line_number':426,'multiline':False]
