['text':' Owner(s): ["module: fx"]','line_number':1,'multiline':False]
['text':' Select add_2 node to remove','line_number':169,'multiline':False]
['text':' Without host saturation, the model will be split into two partitions.','line_number':507,'multiline':False]
['text':' dev_0 holds partition 0 of 192 bytes and dev_1 holds partition 1 of 48 bytes.','line_number':508,'multiline':False]
['text':' With host saturation, partition 1 will be replicated to dev_4, and partition 2','line_number':516,'multiline':False]
['text':' will be replicated to dev_2.','line_number':517,'multiline':False]
['text':' bn need not be folded in conv','line_number':554,'multiline':False]
['text':' Make sure the graph is well-formed','line_number':592,'multiline':False]
['text':' Check the IR to make sure there's a call_function node with target == "Assert"','line_number':595,'multiline':False]
['text':' Ensure that the assert throws when it's supposed to and doesn't throw when it's not supposed to','line_number':603,'multiline':False]
['text':' Confirm that the output is correct','line_number':608,'multiline':False]
['text':' Test serialization/deserialization','line_number':631,'multiline':False]
['text':' Make sure the graph is well-formed','line_number':651,'multiline':False]
['text':' Check the IR to make sure there's a call_function node with target == "Assert"','line_number':654,'multiline':False]
['text':' Ensure that the assert throws when it's supposed to and doesn't throw when it's not supposed to','line_number':662,'multiline':False]
['text':' Confirm that the output is correct','line_number':667,'multiline':False]
['text':' Make sure the graph is well-formed','line_number':679,'multiline':False]
['text':' Check the IR to make sure there's a call_function node with target == "Assert"','line_number':682,'multiline':False]
['text':' Ensure that the assert throws when it's supposed to and doesn't throw when it's not supposed to','line_number':690,'multiline':False]
['text':' Confirm that the output is correct','line_number':695,'multiline':False]
['text':' Make sure the graph is well-formed','line_number':711,'multiline':False]
['text':' Check the IR to make sure there's a call_function node with target == "Assert"','line_number':714,'multiline':False]
['text':' Ensure that the assert throws when it's supposed to and doesn't throw when it's not supposed to','line_number':722,'multiline':False]
['text':' Confirm that the output is correct','line_number':731,'multiline':False]
['text':' symbolically trace model','line_number':746,'multiline':False]
['text':' random mod partitioning','line_number':750,'multiline':False]
['text':' Add some random meta info to make sure it is kept around.','line_number':754,'multiline':False]
['text':' split module in module with submodules','line_number':765,'multiline':False]
['text':' Check that test_meta_info was still on all nodes.','line_number':770,'multiline':False]
['text':' we want this','line_number':792,'multiline':False]
['text':' this is dead','line_number':793,'multiline':False]
['text':' split into before (0), target (1), and after(2)','line_number':799,'multiline':False]
['text':' Smoke test trivially splitting resnet into 1 partition works','line_number':846,'multiline':False]
['text':' There was an issue before causing submodule names to be aliased','line_number':847,'multiline':False]
['text':' Test Tensor/Tensor callsite','line_number':892,'multiline':False]
['text':' Test Tensor/scalar callsite','line_number':907,'multiline':False]
['text':' `leaves` contains the set of standard `nn.Modules` that are not','line_number':930,'multiline':False]
['text':' currently symbolically traceable. Ideally this set would be empty','line_number':931,'multiline':False]
['text':' Skip modules that are not standard `torch.nn`','line_number':973,'multiline':False]
['text':' instances, including functionals. (functionals','line_number':974,'multiline':False]
['text':' are tested in test_normalize_args)','line_number':975,'multiline':False]
['text':' Generate a class to wrap this standard `nn.Module` instance','line_number':989,'multiline':False]
['text':' Use `Node.normalized_arguments` to get a new set of arguments','line_number':1007,'multiline':False]
['text':' to feed to the Module. Then, rewrite the node to only take','line_number':1008,'multiline':False]
['text':' in those arguments as kwargs','line_number':1009,'multiline':False]
['text':' These Modules have an RNG in their forward, so testing','line_number':1027,'multiline':False]
['text':' correctness by comparing outputs is not correct. Skip that','line_number':1028,'multiline':False]
['text':' check for these','line_number':1029,'multiline':False]
['text':' Smoke test torchscript compilation since now we're emitting type annotations','line_number':1104,'multiline':False]
['text':' `leaves` contains the set of standard `nn.Modules` that are not','line_number':1111,'multiline':False]
['text':' currently symbolically traceable. Ideally this set would be empty','line_number':1112,'multiline':False]
['text':' Return type differs based on boolean dispatch :(','line_number':1126,'multiline':False]
['text':' AnnotateTypesWithSchema doesn't work with bound C++ functions','line_number':1130,'multiline':False]
['text':' Smoke test torchscript compilation since now we're emitting type annotations','line_number':1134,'multiline':False]
['text':' by default, fx transform loses type annotation of getitem nodes.','line_number':1157,'multiline':False]
['text':' split module in module with submodules','line_number':1227,'multiline':False]
['text':' Recipe taken from here:','line_number':1265,'multiline':False]
['text':' https://docs.python.org/3/library/importlib.html#importing-a-source-file-directly','line_number':1266,'multiline':False]
['text':' node.attrs_for_lowering has an addition field of class name','line_number':1319,'multiline':False]
['text':' Utility function for counting matmuls for test assertions.','line_number':1329,'multiline':False]
['text':' Simple test case in which there are two matmuls of the same size to merge.','line_number':1340,'multiline':False]
['text':' Initialize inputs.','line_number':1351,'multiline':False]
['text':' Initialize RHS for matmuls.','line_number':1355,'multiline':False]
['text':' Construct SimpleMergeMatmulModule and call merge_matmul on it.','line_number':1358,'multiline':False]
['text':' Numerical correctness check.','line_number':1362,'multiline':False]
['text':' Basic graph structure check; original module should have 2 matmuls','line_number':1367,'multiline':False]
['text':' and optimized module should have 1.','line_number':1368,'multiline':False]
['text':' Test case in which there are multiple matmuls of different sizes to merge.','line_number':1372,'multiline':False]
['text':' For some reason using a list comprehension or for-loop for this','line_number':1382,'multiline':False]
['text':' doesn't work.','line_number':1383,'multiline':False]
['text':' Initialize inputs.','line_number':1395,'multiline':False]
['text':' Initialize RHS.','line_number':1398,'multiline':False]
['text':' Construct FiveMergeMatmulModule and call merge_matmul on it.','line_number':1401,'multiline':False]
['text':' Numerical correctness check.','line_number':1405,'multiline':False]
['text':' Basic graph structure check; original module should have len(inputs) matmuls','line_number':1410,'multiline':False]
['text':' and optimized module should have 1.','line_number':1411,'multiline':False]
['text':' Simple test case in which two matmuls cannot be merged due to a data dependency between','line_number':1415,'multiline':False]
['text':' the LHS operands.','line_number':1416,'multiline':False]
['text':' Initialize inputs.','line_number':1428,'multiline':False]
['text':' Initialize RHS for matmuls.','line_number':1431,'multiline':False]
['text':' Construct UnmergeableMatmulModule and call merge_matmul on it.','line_number':1434,'multiline':False]
['text':' Numerical correctness check.','line_number':1438,'multiline':False]
['text':' Basic graph structure check; the number of matrix multiplcations should not have changed.','line_number':1443,'multiline':False]
['text':' These ops currently don't trace in FX for various reasons (i.e. they take a list of tensors)','line_number':1566,'multiline':False]
['text':' Complex type not supported in FX','line_number':1589,'multiline':False]
['text':' Complex type not supported in FX','line_number':1598,'multiline':False]
['text':' Test normalize_function by itself','line_number':1604,'multiline':False]
['text':' Test normalized_arguments as part of FX','line_number':1620,'multiline':False]
['text':' SymPy symbols.','line_number':1717,'multiline':False]
['text':' Z3 symbols.','line_number':1720,'multiline':False]
['text':' Integer constants.','line_number':1735,'multiline':False]
['text':' Arithmetic operations.','line_number':1744,'multiline':False]
['text':' Logical operations.','line_number':1753,'multiline':False]
['text':' Other operations.','line_number':1765,'multiline':False]
['text':' Solutions for target is a subset of the solutions for the source.','line_number':1805,'multiline':False]
['text':' Solutions for target is NOT a subset of the solutions for the source.','line_number':1821,'multiline':False]
['text':' This expression is less restrictive than its counterpart.','line_number':1823,'multiline':False]
['text':' Variable.','line_number':1836,'multiline':False]
['text':' Name with special characters.','line_number':1838,'multiline':False]
['text':' Renamed function fpplications.','line_number':1840,'multiline':False]
['text':' Chain of associative operations.','line_number':1843,'multiline':False]
['text':' Revert 'Not' conversions.','line_number':1851,'multiline':False]
['text':' Ignore 'ToInt' and 'ToReal' functions.','line_number':1855,'multiline':False]
['text':' Convert to floor division: 'idiv'.','line_number':1858,'multiline':False]
