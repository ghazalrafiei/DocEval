['text':' Owner(s): ["module: typing"]','line_number':1,'multiline':False]
['text':' for requires_grad_ example','line_number':47,'multiline':False]
['text':' NB: We are parsing this file as Python 2, so we must use','line_number':48,'multiline':False]
['text':' Python 2 type annotation syntax','line_number':49,'multiline':False]
['text':' OK, so here's the deal.  mypy treats installed packages','line_number':86,'multiline':False]
['text':' and local modules differently: if a package is installed,','line_number':87,'multiline':False]
['text':' mypy will refuse to use modules from that package for type','line_number':88,'multiline':False]
['text':' checking unless the module explicitly says that it supports','line_number':89,'multiline':False]
['text':' type checking. (Reference:','line_number':90,'multiline':False]
['text':' https://mypy.readthedocs.io/en/latest/running_mypy.html#missing-imports','line_number':91,'multiline':False]
['text':' )','line_number':92,'multiline':False]
['text':'','line_number':93,'multiline':False]
['text':' Now, PyTorch doesn't support typechecking, and we shouldn't','line_number':94,'multiline':False]
['text':' claim that it supports typechecking (it doesn't.) However, not','line_number':95,'multiline':False]
['text':' claiming we support typechecking is bad for this test, which','line_number':96,'multiline':False]
['text':' wants to use the partial information we get from the bits of','line_number':97,'multiline':False]
['text':' PyTorch which are typed to check if it typechecks.  And','line_number':98,'multiline':False]
['text':' although mypy will work directly if you are working in source,','line_number':99,'multiline':False]
['text':' some of our tests involve installing PyTorch and then running','line_number':100,'multiline':False]
['text':' its tests.','line_number':101,'multiline':False]
['text':'','line_number':102,'multiline':False]
['text':' The guidance we got from Michael Sullivan and Joshua Oreman,','line_number':103,'multiline':False]
['text':' and also independently developed by Thomas Viehmann,','line_number':104,'multiline':False]
['text':' is that we should create a fake directory and add symlinks for','line_number':105,'multiline':False]
['text':' the packages that should typecheck.  So that is what we do','line_number':106,'multiline':False]
['text':' here.','line_number':107,'multiline':False]
['text':'','line_number':108,'multiline':False]
['text':' If you want to run mypy by hand, and you run from PyTorch','line_number':109,'multiline':False]
['text':' root directory, it should work fine to skip this step (since','line_number':110,'multiline':False]
['text':' mypy will preferentially pick up the local files first).  The','line_number':111,'multiline':False]
['text':' temporary directory here is purely needed for CI.  For this','line_number':112,'multiline':False]
['text':' reason, we also still drop the generated file in the test','line_number':113,'multiline':False]
['text':' source folder, for ease of inspection when there are failures.','line_number':114,'multiline':False]
['text':' TODO: Would be better not to chdir here, this affects the','line_number':125,'multiline':False]
['text':' entire process!','line_number':126,'multiline':False]
['text':' needed because of torch.lu_unpack, see gh-36584','line_number':130,'multiline':False]
