['text':' Owner(s): ["module: unknown"]','line_number':1,'multiline':False]
['text':' Cannot instantiate the abstract base','line_number':20,'multiline':False]
['text':' Can instantiate the model with no configs','line_number':22,'multiline':False]
['text':' Can instantiate the model with configs','line_number':28,'multiline':False]
['text':' Make sure there are no parametrizations before `prepare`','line_number':39,'multiline':False]
['text':' No 'linear1' to make sure it will be skipped in the sparsification','line_number':45,'multiline':False]
['text':' Check if default argument is not assigned if explicit','line_number':49,'multiline':False]
['text':' Check if FQN and module are pointing to the same location','line_number':52,'multiline':False]
['text':' Check if parameterizations are attached','line_number':55,'multiline':False]
['text':' Check the expected keys in the state_dict','line_number':79,'multiline':False]
['text':' Check loading static_dict creates an equivalent model','line_number':88,'multiline':False]
['text':' Make sure the masks are different in the beginning','line_number':95,'multiline':False]
['text':' Make sure the states are loaded, and are correct','line_number':106,'multiline':False]
['text':' Make sure the masks (and all dicts) are the same after loading','line_number':109,'multiline':False]
['text':' We cannot compare modules as they are different','line_number':117,'multiline':False]
['text':' The groups are unordered','line_number':212,'multiline':False]
['text':' Before step','line_number':220,'multiline':False]
['text':' checking sparsity level is 0','line_number':222,'multiline':False]
['text':' After step','line_number':227,'multiline':False]
['text':' checking sparsity level has increased','line_number':229,'multiline':False]
['text':' Test if the mask collapses to all zeros if the weights are randomized','line_number':230,'multiline':False]
['text':' After step','line_number':236,'multiline':False]
['text':' checking sparsity level did not collapse','line_number':238,'multiline':False]
['text':' make sure the sparsity level is approximately 50%','line_number':247,'multiline':False]
['text':' mean works on float only','line_number':248,'multiline':False]
['text':' Make sure each block has exactly 50% zeros','line_number':250,'multiline':False]
['text':' Check mask exists','line_number':266,'multiline':False]
['text':' Check parametrization exists and is correct','line_number':268,'multiline':False]
['text':' Create a config and model with all the testcases','line_number':290,'multiline':False]
['text':' Make sure the number of zeros is not > values in a block','line_number':297,'multiline':False]
['text':' Level of sparsity is achieved','line_number':326,'multiline':False]
['text':' Ratio of individual zeros in the tensor','line_number':331,'multiline':False]
['text':' The groups are unordered','line_number':344,'multiline':False]
['text':' Before step','line_number':353,'multiline':False]
['text':' checking sparsity level is 0','line_number':355,'multiline':False]
['text':' After step','line_number':364,'multiline':False]
['text':' checking sparsity level has increased','line_number':366,'multiline':False]
['text':' Test if the mask collapses to all zeros if the weights are randomized','line_number':368,'multiline':False]
['text':' After step','line_number':374,'multiline':False]
['text':' checking sparsity level did not collapse','line_number':376,'multiline':False]
['text':' Check mask exists','line_number':384,'multiline':False]
['text':' Check parametrization exists and is correct','line_number':386,'multiline':False]
['text':' only diagonal to be present','line_number':402,'multiline':False]
['text':' should raise a ValueError when nearliness arg is illegal','line_number':425,'multiline':False]
['text':' verify that mask created corresponds to the nearliness','line_number':435,'multiline':False]
['text':' helper function to verify nearliness of a mask','line_number':438,'multiline':False]
