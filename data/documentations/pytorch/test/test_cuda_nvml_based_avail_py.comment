['text':' Owner(s): ["module: cuda"]','line_number':1,'multiline':False]
['text':' NOTE: Each of the tests in this module need to be run in a brand new process to ensure CUDA is uninitialized','line_number':10,'multiline':False]
['text':' prior to test initiation.','line_number':11,'multiline':False]
['text':' Before executing the desired tests, we need to disable CUDA initialization and fork_handler additions that would','line_number':13,'multiline':False]
['text':' otherwise be triggered by the `torch.testing._internal.common_utils` module import','line_number':14,'multiline':False]
['text':' NOTE: Because `remove_device_and_dtype_suffixes` initializes CUDA context (triggered via the import of','line_number':17,'multiline':False]
['text':' `torch.testing._internal.common_device_type` which imports `torch.testing._internal.common_cuda`) we need','line_number':18,'multiline':False]
['text':' to bypass that method here which should be irrelevant to the parameterized tests in this module.','line_number':19,'multiline':False]
['text':' type: ignore[misc, assignment] # noqa: F811','line_number':25,'multiline':False]
['text':' clear the lru_cache on this method before our test','line_number':36,'multiline':False]
['text':' These tests validate the behavior and activation of the weaker, NVML-based, user-requested','line_number':43,'multiline':False]
['text':' `torch.cuda.is_available()` assessment. The NVML-based assessment should be attempted when','line_number':44,'multiline':False]
['text':' `PYTORCH_NVML_BASED_CUDA_CHECK` is set to 1, reverting to the default CUDA Runtime API check otherwise.','line_number':45,'multiline':False]
['text':' If the NVML-based assessment is attempted but fails, the CUDA Runtime API check should be executed','line_number':46,'multiline':False]
['text':' rest of the string is ignored','line_number':76,'multiline':False]
['text':' Negatives abort parsing','line_number':78,'multiline':False]
['text':' Double mention of ordinal returns empty set','line_number':80,'multiline':False]
['text':' Unary pluses and minuses','line_number':82,'multiline':False]
['text':' Random string is used as empty set','line_number':84,'multiline':False]
['text':' Random string is used as separator','line_number':86,'multiline':False]
['text':' GPU ids are parsed','line_number':88,'multiline':False]
['text':' Ordinals are not included in GPUid set','line_number':90,'multiline':False]
['text':' MIG ids are parsed','line_number':92,'multiline':False]
['text':' First invalid UUID aborts parsing','line_number':108,'multiline':False]
['text':' First ambigous UUID aborts parsing','line_number':111,'multiline':False]
['text':' Duplicate UUIDs result in empty set','line_number':113,'multiline':False]
['text':' Ordinal out of bounds aborts parsing','line_number':124,'multiline':False]
