['text':' Owner(s): ["module: dynamo"]','line_number':1,'multiline':False]
['text':' This also mirrors config from `test/dynamo/test_dynamic_shapes.py:make_dynamic_cls`','line_number':34,'multiline':False]
['text':' Checks that a dict matches a dict with "regex keys". That is,','line_number':80,'multiline':False]
['text':' the keys are regex expressions.','line_number':81,'multiline':False]
['text':' Given a `func` that has a single call to `wrap`,','line_number':155,'multiline':False]
['text':' we check that:','line_number':156,'multiline':False]
['text':' - there are no graph breaks','line_number':157,'multiline':False]
['text':' - eager vs torch.compile has the same result (correctness)','line_number':158,'multiline':False]
['text':' - other compilation metrics, e.g, # of ops in the dynamo captured graph,','line_number':159,'multiline':False]
['text':'   the wrap has the expected number of args, etc','line_number':160,'multiline':False]
['text':'','line_number':161,'multiline':False]
['text':' we have one or multiple runs through with each of the args from args_generator,','line_number':162,'multiline':False]
['text':' and we will check:','line_number':163,'multiline':False]
['text':' - correctness and no graph breaks for every run','line_number':164,'multiline':False]
['text':' - other compilation metrics only for the first run, since automatic_dynamic_shapes','line_number':165,'multiline':False]
['text':'   may compile another dynamic version graph for the later runs','line_number':166,'multiline':False]
['text':' check correctness and no graph breaks','line_number':173,'multiline':False]
['text':' check other compilation metrics','line_number':177,'multiline':False]
['text':' We always return/check the graph from the first run if return_graph = True','line_number':183,'multiline':False]
['text':' Since, `x` is unused, we don't lift it to','line_number':239,'multiline':False]
['text':' be the input.','line_number':240,'multiline':False]
['text':' Since, `x` is unused, we don't lift it to','line_number':255,'multiline':False]
['text':' be the input.','line_number':256,'multiline':False]
['text':' NOQA: B950','line_number':337,'multiline':False]
['text':' Ensure that we recompile here','line_number':449,'multiline':False]
['text':' Since, `x` is unused, we don't lift it to','line_number':534,'multiline':False]
['text':' be the input.','line_number':535,'multiline':False]
['text':' No changes to args of outer wrap','line_number':560,'multiline':False]
['text':' z was lifted to arg of inner wrap','line_number':565,'multiline':False]
['text':' addition + wrap + getitem','line_number':567,'multiline':False]
['text':' Innermost body function: z was also lifted to arg','line_number':572,'multiline':False]
['text':' verify that we `don't` recompile','line_number':1075,'multiline':False]
['text':' We increase the number of ops to 2 and 3 for top-level graph because of an additional','line_number':1185,'multiline':False]
['text':' get_item call created by the flatten/unflatten logic in HOP speculation.','line_number':1186,'multiline':False]
['text':' Dynamic shapes produce a slightly different graph.','line_number':1204,'multiline':False]
['text':' Each branch takes 3 inputs (buffer, x, z)','line_number':1336,'multiline':False]
['text':' Dynamic shapes produce a slightly different graph.','line_number':1359,'multiline':False]
['text':' There is graph break right when we enter body of map','line_number':1530,'multiline':False]
['text':' Dynamic shapes produce a slightly different graph.','line_number':1630,'multiline':False]
['text':' Numbers don't get lifted, so args is still 2.','line_number':1662,'multiline':False]
['text':' Numbers don't get lifted, so args is still 2.','line_number':1685,'multiline':False]
['text':' In the future, there should be a per-HigherOrderOperator switch','line_number':1715,'multiline':False]
['text':' on whether or not to fallback or raise a loud error.','line_number':1716,'multiline':False]
['text':' For now we just fallback by default.','line_number':1717,'multiline':False]
['text':' 3 args - 1 for input, and other 2 for the weight and bias','line_number':1774,'multiline':False]
['text':' Check that the linear bias and weight are getattr in the outer graph','line_number':1777,'multiline':False]
['text':' Check that the inner function has one op and its a linear op','line_number':1780,'multiline':False]
['text':' Check that the innermost graph does not have any params','line_number':1786,'multiline':False]
['text':' Check that the linear bias and weight are getattr in the outer graph','line_number':1908,'multiline':False]
['text':' Check that the inner function has one op and its a linear op','line_number':1911,'multiline':False]
['text':' Check that the innermost graph does not have any params','line_number':1915,'multiline':False]
['text':' np.number are lifted to graph inputs','line_number':1967,'multiline':False]
['text':' Two levels of wrap ops','line_number':1998,'multiline':False]
['text':' second iteration is key, hooks would have fired during aot trace','line_number':2038,'multiline':False]
['text':' on first iter','line_number':2039,'multiline':False]
['text':' Dynamic shapes produce a slightly different graph.','line_number':2241,'multiline':False]
['text':' noqa: B950','line_number':2261,'multiline':False]
['text':' Dynamic shapes produce a slightly different graph.','line_number':2310,'multiline':False]
['text':' Dynamic shapes produce a slightly different graph.','line_number':2366,'multiline':False]
['text':' Dynamic shapes produce a slightly different graph.','line_number':2409,'multiline':False]
['text':' Graph break because dynamo is unable to get source `fn` and','line_number':2452,'multiline':False]
['text':' functools.wraps in `grad` leads to graph-break','line_number':2453,'multiline':False]
['text':' Dynamic shapes produce a slightly different graph.','line_number':2456,'multiline':False]
['text':' Dynamic shapes produce a slightly different graph.','line_number':2498,'multiline':False]
['text':' Dynamic shapes produce a slightly different graph.','line_number':2542,'multiline':False]
['text':' Dynamic shapes produce a slightly different graph.','line_number':2593,'multiline':False]
['text':' Dynamic shapes produce a slightly different graph.','line_number':2788,'multiline':False]
['text':' We have verified above that this','line_number':2820,'multiline':False]
['text':' function compiles','line_number':2821,'multiline':False]
['text':' Dynamic shapes produce a slightly different graph.','line_number':2870,'multiline':False]
['text':' Dynamic shapes produce a slightly different graph.','line_number':2909,'multiline':False]
['text':' Dynamic shapes produce a slightly different graph.','line_number':2949,'multiline':False]
['text':' Dynamic shapes produce a slightly different graph.','line_number':2991,'multiline':False]
['text':' Dynamic shapes produce a slightly different graph.','line_number':3036,'multiline':False]
['text':' Dynamic shapes produce a slightly different graph.','line_number':3077,'multiline':False]
['text':' Dynamic shapes produce a slightly different graph.','line_number':3126,'multiline':False]
['text':' Dynamic shapes produce a slightly different graph.','line_number':3172,'multiline':False]
['text':' Dynamic shapes produce a slightly different graph.','line_number':3211,'multiline':False]
['text':' Dynamic shapes produce a slightly different graph.','line_number':3251,'multiline':False]
['text':' We have verified above that this','line_number':3358,'multiline':False]
['text':' function compiles','line_number':3359,'multiline':False]
['text':' Third invocation of `opt` makes `in_dims` as SymInt.','line_number':3411,'multiline':False]
['text':' Third invocation of `opt` makes `in_dims` as SymInt.','line_number':3428,'multiline':False]
['text':' mm recomputed in the bwd','line_number':3511,'multiline':False]
['text':' mm recomputed in the bwd','line_number':3532,'multiline':False]
['text':' dropout decomp is known to diverge with eager','line_number':3557,'multiline':False]
['text':' dropout decomp is known to diverge with eager','line_number':3574,'multiline':False]
['text':' One graph for torch.sin on the input, and other for torch.cos.','line_number':3598,'multiline':False]
