['text':' Owner(s): ["module: dynamo"]','line_number':1,'multiline':False]
['text':' We don't specialize on range with dynamic shapes, which','line_number':324,'multiline':False]
['text':' means we fail to unroll the loop.','line_number':325,'multiline':False]
['text':' TODO: Consider forcing specialization when we iterate over','line_number':326,'multiline':False]
['text':' the loop','line_number':327,'multiline':False]
['text':' just one graph','line_number':360,'multiline':False]
['text':' NB: This COULD validly be 2, but we don't test disjointness in the','line_number':405,'multiline':False]
['text':' guards for when x and y didn't duck size together, so we end up','line_number':406,'multiline':False]
['text':' with a generic graph that also works when x and y happen to duck','line_number':407,'multiline':False]
['text':' size together.','line_number':408,'multiline':False]
['text':' this overspecializes!','line_number':413,'multiline':False]
['text':' checking here we don't create 2^n graphs','line_number':478,'multiline':False]
['text':' graph break','line_number':487,'multiline':False]
['text':' graph break','line_number':502,'multiline':False]
['text':' graph break','line_number':504,'multiline':False]
['text':' graph break','line_number':518,'multiline':False]
