['text':' Generate test data with few bits of precision, to minimize error','line_number':17,'multiline':False]
['text':' accumulation from floating-point reordering.','line_number':18,'multiline':False]
['text':'dilation=','line_number':43,'multiline':True]
['text':'dilation=','line_number':73,'multiline':True]
['text':'dilation=','line_number':138,'multiline':True]
['text':' Input dimensions.','line_number':163,'multiline':False]
['text':' Filter dimensions.','line_number':169,'multiline':False]
['text':' Output dims.','line_number':174,'multiline':False]
['text':' Compute reference result.','line_number':178,'multiline':False]
['text':' Double check the output size is as expected.','line_number':183,'multiline':False]
['text':' FIXME: We have to use a `std::vector` parameter here and then unpack','line_number':196,'multiline':False]
['text':' it, because we don't have an overload allowing for an arbitrary number','line_number':197,'multiline':False]
['text':' of ExprHandle/VarHandle parameters.','line_number':198,'multiline':False]
['text':' FIXME: We have to use `call` and construct a `std::vector` here','line_number':207,'multiline':False]
['text':' because the `operator()` overload is only specialized for a small','line_number':208,'multiline':False]
['text':' number of arguments.','line_number':209,'multiline':False]
['text':' FIXME: If you forget one of the reduction dims, you get a segfault.','line_number':212,'multiline':False]
['text':' Could that be caught by a verifier?','line_number':213,'multiline':False]
['text':' FIXME: It'd be nice to have a single header that pulls in things like','line_number':216,'multiline':False]
['text':' LoopNest, IRSimplifier, etc.','line_number':217,'multiline':False]
['text':' namespace jit','line_number':233,'multiline':False]
['text':' namespace torch','line_number':234,'multiline':False]
