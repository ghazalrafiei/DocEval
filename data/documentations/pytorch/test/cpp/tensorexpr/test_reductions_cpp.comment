['text':' Sum an array to a single value.','line_number':71,'multiline':False]
['text':' Sum a 2D tensor to a 1D tensor with dynamic shapes.','line_number':92,'multiline':False]
['text':' NOLINTNEXTLINE(bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions)','line_number':122,'multiline':False]
['text':' Sum a 3D tensor to both a 2D and 1D tensor, then reduce the 2D tensor flat to','line_number':131,'multiline':False]
['text':' check our work.','line_number':132,'multiline':False]
['text':' NOLINTNEXTLINE(bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions)','line_number':161,'multiline':False]
['text':' We're combining an additional dimension of 3, so the sum is 3x.','line_number':178,'multiline':False]
['text':' This is the same as just reducing the original result across that axis.','line_number':185,'multiline':False]
['text':' Sum a large (10 D) Tensor 5 dimensions in.','line_number':201,'multiline':False]
['text':' NOLINTNEXTLINE(bugprone-integer-division)','line_number':221,'multiline':False]
['text':' Reduce via Mul rather than Add using a custom Reducer.','line_number':228,'multiline':False]
['text':' NOLINTNEXTLINE(bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions)','line_number':258,'multiline':False]
['text':' Maximum reductions.','line_number':267,'multiline':False]
['text':' Minimum reduction, with custom initialization.','line_number':306,'multiline':False]
['text':' Works normally (note that out data starts lower than the correct','line_number':331,'multiline':False]
['text':' minimum).','line_number':332,'multiline':False]
['text':' With an initalizer lower than the min, that's the min.','line_number':336,'multiline':False]
['text':' Example implementation of Any/All.','line_number':341,'multiline':False]
['text':' TODO: this is very awkward without logical And/Or operators.','line_number':342,'multiline':False]
['text':' input has 0-39 in 4 rows.','line_number':370,'multiline':False]
['text':' only the first row has 1','line_number':376,'multiline':False]
['text':' 15 in the 3rd row','line_number':384,'multiline':False]
['text':' 11 is in row 2.','line_number':412,'multiline':False]
['text':' All are positive.','line_number':420,'multiline':False]
['text':' NOLINTNEXTLINE(bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions)','line_number':525,'multiline':False]
['text':' NOLINTNEXTLINE(cppcoreguidelines-avoid-c-arrays,modernize-avoid-c-arrays)','line_number':566,'multiline':False]
['text':' NOLINTNEXTLINE(cppcoreguidelines-avoid-magic-numbers,bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions)','line_number':571,'multiline':False]
['text':' From the quip:
  for k in 0..1:  // blockIdx
    for m in 0..128:
      for n in 0..64: // threadIdx
        SumOp(c(k, n), 0, a(k, m, n), {m})
  ','line_number':641,'multiline':True]
['text':' NOLINTNEXTLINE(clang-analyzer-deadcode.DeadStores)','line_number':668,'multiline':False]
['text':' Try rfactoring N outer loops','line_number':796,'multiline':False]
['text':' Split a reduction axis with a tail loop.','line_number':824,'multiline':False]
['text':' Split a reduction axis cleanly so there is no tail loop.','line_number':855,'multiline':False]
['text':' Split a reduction axis with only a tail loop (the split loop will be size 0','line_number':885,'multiline':False]
['text':' and eliminated out).','line_number':886,'multiline':False]
['text':' Split a reduction axis with a mask.','line_number':917,'multiline':False]
['text':' Split a reduction axis cleanly not requiring a mask.','line_number':948,'multiline':False]
['text':' Split a reduction axis with all logic in the mask.','line_number':978,'multiline':False]
['text':' Test an rfactor when there are two ReduceOps in the graph due to a','line_number':1009,'multiline':False]
['text':' splitWithTail.','line_number':1010,'multiline':False]
['text':' Suppress unused variable warning','line_number':1047,'multiline':False]
['text':' Test an rfactor which ends up being eliminated since the total loop size is','line_number':1052,'multiline':False]
['text':' smaller than the split factor.','line_number':1053,'multiline':False]
['text':' NOLINTNEXTLINE(cppcoreguidelines-init-variables)','line_number':1070,'multiline':False]
['text':' Check the IR to verify the rfactored reduce is eliminated.','line_number':1093,'multiline':False]
['text':' TODO: The alloc free should be eliminated here since it is size 0.','line_number':1094,'multiline':False]
['text':' dtype=float, dims=[0]','line_number':1097,'multiline':False]
['text':' TODO: rfactor output is not consistent yet, will fix (@nickg).','line_number':1105,'multiline':False]
['text':' torch::jit::testing::FileCheck().run(verification_pattern, oss.str());','line_number':1106,'multiline':False]
['text':' Cannot inline a reduction computation','line_number':1136,'multiline':False]
['text':' dtype=float, dims=[4]','line_number':1288,'multiline':False]
['text':' NOLINTNEXTLINE(cppcoreguidelines-avoid-magic-numbers)','line_number':1323,'multiline':False]
['text':' dtype=float, dims=[1]','line_number':1364,'multiline':False]
['text':' NOLINTNEXTLINE(cppcoreguidelines-avoid-magic-numbers)','line_number':1397,'multiline':False]
['text':' dtype=float, dims=[1]','line_number':1438,'multiline':False]
['text':' NOLINTNEXTLINE(cppcoreguidelines-avoid-magic-numbers)','line_number':1471,'multiline':False]
['text':' dtype=float, dims=[1, 32, 12]','line_number':1505,'multiline':False]
['text':' NOLINTNEXTLINE(cppcoreguidelines-init-variables)','line_number':1575,'multiline':False]
['text':' Split outer reduction axis.','line_number':1578,'multiline':False]
['text':' Split reduction consumer.','line_number':1581,'multiline':False]
['text':' reduction changes but cache does not.','line_number':1591,'multiline':False]
['text':' NOLINTNEXTLINE(cppcoreguidelines-init-variables)','line_number':1625,'multiline':False]
['text':' reorder outer reduction axes.','line_number':1628,'multiline':False]
['text':' Split reduction consumer.','line_number':1632,'multiline':False]
['text':' neither reduction body not cache changes.','line_number':1642,'multiline':False]
['text':' NOLINTNEXTLINE(cppcoreguidelines-init-variables)','line_number':1680,'multiline':False]
['text':' dtype=float, dims=[n]','line_number':1700,'multiline':False]
['text':' dtype=float, dims=[n]','line_number':1701,'multiline':False]
['text':' NOLINTNEXTLINE(cppcoreguidelines-init-variables)','line_number':1746,'multiline':False]
['text':' dtype=float, dims=[n]','line_number':1766,'multiline':False]
['text':' dtype=float, dims=[1]','line_number':1767,'multiline':False]
['text':' Vectorizing should not change result.','line_number':1819,'multiline':False]
['text':' But if we rfactor this so it's not a reduce axis we can vectorize that','line_number':1860,'multiline':False]
['text':' loop.','line_number':1861,'multiline':False]
['text':' Vectorizing should not change result.','line_number':1894,'multiline':False]
['text':' namespace jit','line_number':1931,'multiline':False]
['text':' namespace torch','line_number':1932,'multiline':False]
