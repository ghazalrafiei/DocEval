['text':' Tests go in torch::jit','line_number':7,'multiline':False]
['text':' Create data whose initial bytes look like a Flatbuffer stream.','line_number':12,'multiline':False]
['text':' First four bytes don't matter.','line_number':14,'multiline':False]
['text':' Magic string.','line_number':15,'multiline':False]
['text':' Trailing bytes don't matter.','line_number':16,'multiline':False]
['text':' The data should be identified as Flatbuffer.','line_number':18,'multiline':False]
['text':' Create data whose initial bytes look like a ZIP stream.','line_number':23,'multiline':False]
['text':' Magic string.','line_number':25,'multiline':False]
['text':' Trailing bytes don't matter.','line_number':26,'multiline':False]
['text':' The data should be identified as ZIP.','line_number':29,'multiline':False]
['text':' Since the Flatbuffer and ZIP magic bytes are at different offsets,','line_number':34,'multiline':False]
['text':' the same data could be identified as both. Demonstrate that Flatbuffer','line_number':35,'multiline':False]
['text':' takes precedence. (See details in file_format.h)','line_number':36,'multiline':False]
['text':' ZIP magic string.','line_number':38,'multiline':False]
['text':' Flatbuffer magic string.','line_number':39,'multiline':False]
['text':' Trailing bytes don't matter.','line_number':40,'multiline':False]
['text':' The data should be identified as Flatbuffer.','line_number':42,'multiline':False]
['text':' Create data that doesn't look like any known format.','line_number':47,'multiline':False]
['text':' The data should be classified as unknown.','line_number':53,'multiline':False]
['text':' Create data with fewer than kFileFormatHeaderSize (8) bytes.','line_number':58,'multiline':False]
['text':' The data should be classified as unknown.','line_number':62,'multiline':False]
['text':' Create an empty stream.','line_number':67,'multiline':False]
['text':' The data should be classified as unknown.','line_number':70,'multiline':False]
['text':' Create a stream with valid Flatbuffer data.','line_number':75,'multiline':False]
['text':' Flatbuffer magic string.','line_number':78,'multiline':False]
['text':' Demonstrate that the data would normally be identified as Flatbuffer.','line_number':81,'multiline':False]
['text':' Mark the stream as bad, and demonstrate that it is in an error state.','line_number':84,'multiline':False]
['text':' Demonstrate that the stream is in an error state.','line_number':86,'multiline':False]
['text':' The data should now be classified as unknown.','line_number':89,'multiline':False]
['text':' Create data with a Flatbuffer header at a non-zero offset into the stream.','line_number':94,'multiline':False]
['text':' Add initial padding.','line_number':96,'multiline':False]
['text':' Add a valid Flatbuffer header.','line_number':99,'multiline':False]
['text':' Flatbuffer magic string.','line_number':101,'multiline':False]
['text':' Seek just after the padding.','line_number':103,'multiline':False]
['text':' Demonstrate that the stream points to the beginning of the Flatbuffer data,','line_number':105,'multiline':False]
['text':' not to the padding.','line_number':106,'multiline':False]
['text':' The data should be identified as Flatbuffer.','line_number':109,'multiline':False]
['text':' The stream position should be where it was before identification.','line_number':112,'multiline':False]
['text':' A missing file should be classified as unknown.','line_number':117,'multiline':False]
['text':' namespace jit','line_number':123,'multiline':False]
['text':' namespace torch','line_number':124,'multiline':False]
