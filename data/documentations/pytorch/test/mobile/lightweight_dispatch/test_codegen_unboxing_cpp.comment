['text':' Cover codegen'd unboxing logic for these types:','line_number':8,'multiline':False]
['text':''Device',','line_number':9,'multiline':False]
['text':''Device?',','line_number':10,'multiline':False]
['text':''Dimname',','line_number':11,'multiline':False]
['text':''Dimname[1]',','line_number':12,'multiline':False]
['text':''Dimname[]',','line_number':13,'multiline':False]
['text':''Dimname[]?',','line_number':14,'multiline':False]
['text':''Generator?',','line_number':15,'multiline':False]
['text':''Layout?',','line_number':16,'multiline':False]
['text':''MemoryFormat',','line_number':17,'multiline':False]
['text':''MemoryFormat?',','line_number':18,'multiline':False]
['text':''Scalar',','line_number':19,'multiline':False]
['text':''Scalar?',','line_number':20,'multiline':False]
['text':''ScalarType',','line_number':21,'multiline':False]
['text':''ScalarType?',','line_number':22,'multiline':False]
['text':''Scalar[]',','line_number':23,'multiline':False]
['text':''Storage',','line_number':24,'multiline':False]
['text':''Stream',','line_number':25,'multiline':False]
['text':''Tensor',','line_number':26,'multiline':False]
['text':''Tensor(a!)',','line_number':27,'multiline':False]
['text':''Tensor(a!)[]',','line_number':28,'multiline':False]
['text':''Tensor(a)',','line_number':29,'multiline':False]
['text':''Tensor(b!)',','line_number':30,'multiline':False]
['text':''Tensor(c!)',','line_number':31,'multiline':False]
['text':''Tensor(d!)',','line_number':32,'multiline':False]
['text':''Tensor?',','line_number':33,'multiline':False]
['text':''Tensor?[]',','line_number':34,'multiline':False]
['text':''Tensor[]',','line_number':35,'multiline':False]
['text':''bool',','line_number':36,'multiline':False]
['text':''bool?',','line_number':37,'multiline':False]
['text':''bool[2]',','line_number':38,'multiline':False]
['text':''bool[3]',','line_number':39,'multiline':False]
['text':''bool[4]',','line_number':40,'multiline':False]
['text':''float',','line_number':41,'multiline':False]
['text':''float?',','line_number':42,'multiline':False]
['text':''float[]?',','line_number':43,'multiline':False]
['text':''int',','line_number':44,'multiline':False]
['text':''int?',','line_number':45,'multiline':False]
['text':''int[1]',','line_number':46,'multiline':False]
['text':''int[1]?',','line_number':47,'multiline':False]
['text':''int[2]',','line_number':48,'multiline':False]
['text':''int[2]?',','line_number':49,'multiline':False]
['text':''int[3]',','line_number':50,'multiline':False]
['text':''int[4]',','line_number':51,'multiline':False]
['text':''int[5]',','line_number':52,'multiline':False]
['text':''int[6]',','line_number':53,'multiline':False]
['text':''int[]',','line_number':54,'multiline':False]
['text':''int[]?',','line_number':55,'multiline':False]
['text':''str',','line_number':56,'multiline':False]
['text':''str?'','line_number':57,'multiline':False]
['text':' covers int[], ScalarType?, Layout?, Device?, bool?','line_number':61,'multiline':False]
['text':' Load check in model: ModelWithDTypeDeviceLayoutPinMemory.ptl','line_number':63,'multiline':False]
['text':'  class ModelWithDTypeDeviceLayoutPinMemory(torch.nn.Module):','line_number':66,'multiline':False]
['text':'    def forward(self, x: int):','line_number':67,'multiline':False]
['text':'        a = torch.ones([3, x], dtype=torch.int64, layout=torch.strided, device="cpu")','line_number':68,'multiline':False]
['text':'        return a','line_number':69,'multiline':False]
['text':' Load check in model: ModelWithTensorOptional.ptl','line_number':78,'multiline':False]
['text':'    class ModelWithTensorOptional(torch.nn.Module):','line_number':81,'multiline':False]
['text':'      def forward(self, index):','line_number':82,'multiline':False]
['text':'        a = torch.zeros(2, 2)','line_number':83,'multiline':False]
['text':'        a[0][1] = 1','line_number':84,'multiline':False]
['text':'        a[1][0] = 2','line_number':85,'multiline':False]
['text':'        a[1][1] = 3','line_number':86,'multiline':False]
['text':'        return a[index]','line_number':87,'multiline':False]
['text':' Load check in model: ModelWithScalarList.ptl','line_number':101,'multiline':False]
['text':'    class ModelWithScalarList(torch.nn.Module):','line_number':104,'multiline':False]
['text':'      def forward(self, a: int):','line_number':105,'multiline':False]
['text':'        values = torch.tensor([4., 1., 1., 16.], )','line_number':106,'multiline':False]
['text':'        if a == 0:','line_number':107,'multiline':False]
['text':'          return torch.gradient(values, spacing=torch.scalar_tensor(2., dtype=torch.float64))','line_number':108,'multiline':False]
['text':'        elif a == 1:','line_number':109,'multiline':False]
['text':'          return torch.gradient(values, spacing=[torch.tensor(1.).item()])','line_number':110,'multiline':False]
['text':' Load check in model: ModelWithFloatList.ptl','line_number':123,'multiline':False]
['text':' model = torch.nn.Upsample(scale_factor=(2.0,), mode="linear")','line_number':126,'multiline':False]
['text':' Load check in model: ModelWithListOfOptionalTensors.ptl','line_number':135,'multiline':False]
['text':' class ModelWithListOfOptionalTensors(torch.nn.Module):','line_number':138,'multiline':False]
['text':'   def forward(self, index):','line_number':139,'multiline':False]
['text':'      values = torch.tensor([4., 1., 1., 16.], )','line_number':140,'multiline':False]
['text':'      return values[[index, torch.tensor(0)]]','line_number':141,'multiline':False]
['text':' Load check in model: ModelWithArrayOfInt.ptl','line_number':150,'multiline':False]
['text':' model = torch.nn.Conv2d(1, 2, (2, 2), stride=(1, 1), padding=(1, 1))','line_number':153,'multiline':False]
['text':' Load check in model: ModelWithTensors.ptl','line_number':161,'multiline':False]
['text':'  class ModelWithTensors(torch.nn.Module):','line_number':164,'multiline':False]
['text':'    def forward(self, a):','line_number':165,'multiline':False]
['text':'      values = torch.ones(size=[2, 3], names=['N', 'C'])','line_number':166,'multiline':False]
['text':'      values[0][0] = a[0]','line_number':167,'multiline':False]
['text':'      return values','line_number':168,'multiline':False]
['text':' Load check in model: ModelWithStringOptional.ptl','line_number':177,'multiline':False]
['text':'  class ModelWithStringOptional(torch.nn.Module):','line_number':180,'multiline':False]
['text':'    def forward(self, b):','line_number':181,'multiline':False]
['text':'      a = torch.tensor(3, dtype=torch.int64)','line_number':182,'multiline':False]
['text':'      out = torch.empty(size=[1], dtype=torch.float)','line_number':183,'multiline':False]
['text':'      torch.div(b, a, out=out)','line_number':184,'multiline':False]
['text':'      return [torch.div(b, a, rounding_mode='trunc'), out]','line_number':185,'multiline':False]
['text':' Load check in model: ModelWithMultipleOps.ptl','line_number':196,'multiline':False]
['text':' class ModelWithMultipleOps(torch.nn.Module):','line_number':199,'multiline':False]
['text':'     def __init__(self):','line_number':200,'multiline':False]
['text':'         super().__init__()','line_number':201,'multiline':False]
['text':'         self.ops = torch.nn.Sequential(','line_number':202,'multiline':False]
['text':'             torch.nn.ReLU(),','line_number':203,'multiline':False]
['text':'             torch.nn.Flatten(),','line_number':204,'multiline':False]
['text':'         )','line_number':205,'multiline':False]
['text':'','line_number':206,'multiline':False]
['text':'     def forward(self, x):','line_number':207,'multiline':False]
['text':'         x[1] = -2','line_number':208,'multiline':False]
['text':'         return self.ops(x)','line_number':209,'multiline':False]
['text':' namespace mobile','line_number':218,'multiline':False]
['text':' namespace jit','line_number':219,'multiline':False]
['text':' namespace torch','line_number':220,'multiline':False]
