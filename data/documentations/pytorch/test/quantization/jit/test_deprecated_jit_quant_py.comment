['text':' Owner(s): ["oncall: quantization"]','line_number':1,'multiline':False]
['text':' Replace parameter values s.t. the range of values is exactly','line_number':30,'multiline':False]
['text':' 255, thus we will have 0 quantization error in the quantized','line_number':31,'multiline':False]
['text':' GEMM call. This i s for testing purposes.','line_number':32,'multiline':False]
['text':'','line_number':33,'multiline':False]
['text':' Note that the current implementation does not support','line_number':34,'multiline':False]
['text':' accumulation values outside of the range representable by a','line_number':35,'multiline':False]
['text':' 16 bit integer, instead resulting in a saturated value. We','line_number':36,'multiline':False]
['text':' must take care that in our test we do not end up with a dot','line_number':37,'multiline':False]
['text':' product that overflows the int16 range, e.g.','line_number':38,'multiline':False]
['text':' (255*127+255*127) = 64770. So, we hardcode the test values','line_number':39,'multiline':False]
['text':' here and ensure a mix of signedness.','line_number':40,'multiline':False]
['text':' Replace parameter values s.t. the range of values is exactly','line_number':115,'multiline':False]
['text':' 255, thus we will have 0 quantization error in the quantized','line_number':116,'multiline':False]
['text':' GEMM call. This i s for testing purposes.','line_number':117,'multiline':False]
['text':'','line_number':118,'multiline':False]
['text':' Note that the current implementation does not support','line_number':119,'multiline':False]
['text':' accumulation values outside of the range representable by a','line_number':120,'multiline':False]
['text':' 16 bit integer, instead resulting in a saturated value. We','line_number':121,'multiline':False]
['text':' must take care that in our test we do not end up with a dot','line_number':122,'multiline':False]
['text':' product that overflows the int16 range, e.g.','line_number':123,'multiline':False]
['text':' (255*127+255*127) = 64770. So, we hardcode the test values','line_number':124,'multiline':False]
['text':' here and ensure a mix of signedness.','line_number':125,'multiline':False]
['text':' Compare int8 quantized to unquantized','line_number':167,'multiline':False]
['text':' Compare fp16 quantized to unquantized','line_number':174,'multiline':False]
['text':' Compare quantize scripted module to unquantized','line_number':184,'multiline':False]
['text':' Compare export/import to unquantized','line_number':190,'multiline':False]
['text':' type: (torch.Tensor, Tuple[torch.Tensor, torch.Tensor])','line_number':217,'multiline':False]
['text':'        -> Tuple[torch.Tensor, Tuple[torch.Tensor, torch.Tensor]]','line_number':218,'multiline':False]
['text':' Suppression: using deprecated quant api','line_number':223,'multiline':False]
