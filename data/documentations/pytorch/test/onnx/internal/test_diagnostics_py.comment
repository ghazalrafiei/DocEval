['text':' Owner(s): ["module: onnx"]','line_number':1,'multiline':False]
['text':' NOTE: self.assertNoLogs only exist >= Python 3.10','line_number':194,'multiline':False]
['text':' Add this dummy log such that we can pass self.assertLogs, and inspect','line_number':195,'multiline':False]
['text':' assert_log_context.records to check if the log we don't want is not emitted.','line_number':196,'multiline':False]
['text':' Dynamo onnx exporter diagnostic context expects fx_diagnostics.Diagnostic','line_number':230,'multiline':False]
['text':' instead of base infra.Diagnostic.','line_number':231,'multiline':False]
['text':' trigger warning for missing shape inference.','line_number':264,'multiline':False]
['text':' trigger warning for missing shape inference.','line_number':296,'multiline':False]
['text':' trigger error for operator unsupported until newer opset version.','line_number':310,'multiline':False]
['text':' fmt: skip','line_number':332,'multiline':False]
['text':' Do not break the above line, otherwise it will not work with Python-3.8+','line_number':333,'multiline':False]
['text':' for mypy','line_number':335,'multiline':False]
['text':' for mypy','line_number':338,'multiline':False]
['text':' for mypy','line_number':340,'multiline':False]
['text':' for mypy','line_number':348,'multiline':False]
['text':' node missing onnx shape inference warning only comes from ToONNX (_jit_pass_onnx)','line_number':351,'multiline':False]
['text':' after node-level shape type inference and processed symbolic_fn output type','line_number':352,'multiline':False]
['text':' type: ignore[attr-defined]','line_number':395,'multiline':False]
['text':' type: ignore[attr-defined]','line_number':396,'multiline':False]
['text':' type: ignore[attr-defined]','line_number':400,'multiline':False]
['text':' type: ignore[attr-defined]','line_number':405,'multiline':False]
['text':' NOTE: self.assertNoLogs only exist >= Python 3.10','line_number':423,'multiline':False]
['text':' Add this dummy log such that we can pass self.assertLogs, and inspect','line_number':424,'multiline':False]
['text':' assert_log_context.records to check if the log level is correct.','line_number':425,'multiline':False]
['text':' NOTE: self.assertNoLogs only exist >= Python 3.10','line_number':488,'multiline':False]
['text':' Add this dummy log such that we can pass self.assertLogs, and inspect','line_number':489,'multiline':False]
['text':' assert_log_context.records to check if the log level is correct.','line_number':490,'multiline':False]
['text':' Modify the reference_val to reflect this function is evaluated','line_number':514,'multiline':False]
['text':' `expensive_formatting_function` should NOT be evaluated.','line_number':519,'multiline':False]
['text':' Modify the reference_val to reflect this function is evaluated','line_number':540,'multiline':False]
['text':' `expensive_formatting_function` should NOT be evaluated.','line_number':545,'multiline':False]
['text':' The method expects 'Diagnostic' or its subclasses as arguments.','line_number':613,'multiline':False]
['text':' Passing any other type will trigger a TypeError.','line_number':614,'multiline':False]
