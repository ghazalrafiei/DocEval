['text':' Owner(s): ["oncall: jit"]','line_number':1,'multiline':False]
['text':' Make the helper files in test/ importable','line_number':12,'multiline':False]
['text':' type: (int, float) -> float','line_number':74,'multiline':False]
['text':' type: () -> float','line_number':78,'multiline':False]
['text':' basic slices','line_number':200,'multiline':False]
['text':' multi-dim: indexes','line_number':213,'multiline':False]
['text':' multi-dim: mixed slicing and indexing','line_number':219,'multiline':False]
['text':' zero-sized slices','line_number':229,'multiline':False]
['text':' trivial expression usage','line_number':233,'multiline':False]
['text':' None for new dimensions','line_number':237,'multiline':False]
['text':' dynamic expression usage','line_number':248,'multiline':False]
['text':' Indexing with tensor (basic)','line_number':276,'multiline':False]
['text':' NB: indexing with tensors and indexing with sequences can be implemented','line_number':283,'multiline':False]
['text':' in a very similar way (sequences are converted to tensors), so only one','line_number':284,'multiline':False]
['text':' case needs to be tested extensively.','line_number':285,'multiline':False]
['text':' XXX: When we can index with sequences, replace these cases with','line_number':286,'multiline':False]
['text':' sequence indexing expressions; those are much easier to read.','line_number':287,'multiline':False]
['text':' Misc sequence advanced indexing','line_number':289,'multiline':False]
['text':' [[0, 1, 3]]','line_number':292,'multiline':False]
['text':' [[0, 2], [1, 3]]','line_number':294,'multiline':False]
['text':' [[[0, 1], [0, 1]], [[0, 1], [0, 1]]]','line_number':296,'multiline':False]
['text':' [[0, 2], [1, 3], [1, 1]]','line_number':298,'multiline':False]
['text':' [[0, 2], 1, [1, 1]]','line_number':300,'multiline':False]
['text':' [:, :, [0, 3, 4]]','line_number':302,'multiline':False]
['text':' [:, [2, 4, 5, 7], 2:4]','line_number':304,'multiline':False]
['text':' [[2, 3], :, :]','line_number':306,'multiline':False]
['text':' [:, [0, 2, 3], [1, 3, 4]]','line_number':308,'multiline':False]
['text':' [:, [0], [1, 2, 4]]','line_number':310,'multiline':False]
['text':' [:, [0, 1, 3], [4]]','line_number':312,'multiline':False]
['text':' [:, [[0, 1], [1, 0]], [[2, 3]]]','line_number':314,'multiline':False]
['text':' [:, [[0, 1], [2, 3]], [[0]]]','line_number':316,'multiline':False]
['text':' [:, [[5, 6]], [[0, 3], [4, 4]]]','line_number':318,'multiline':False]
['text':' [[0, 2, 3], [1, 3, 4], :]','line_number':320,'multiline':False]
['text':' [0, [1, 2, 4], :]','line_number':322,'multiline':False]
['text':' [[0, 1, 3], 4, :]','line_number':324,'multiline':False]
['text':' [[[0, 1], [1, 0]], [[2, 1], [3, 5]], :]','line_number':326,'multiline':False]
['text':' [[[0, 1], [1, 0]], [[2, 3]], :]','line_number':328,'multiline':False]
['text':' [[[0, 1], [2, 3]], [[0]], :]','line_number':330,'multiline':False]
['text':' [[[2, 1]], [[0, 3], [4, 4]], :]','line_number':332,'multiline':False]
['text':' [[[2]], [[0, 3], [4, 1]], 0:2]','line_number':334,'multiline':False]
['text':' indexing with list is equivalent to indexing with tensor','line_number':343,'multiline':False]
['text':' test re-assignment on imported source','line_number':401,'multiline':False]
