['text':' Owner(s): ["oncall: jit"]','line_number':1,'multiline':False]
['text':' Make the helper files in test/ importable','line_number':12,'multiline':False]
['text':' type: (Dict[str, int]) -> bool','line_number':26,'multiline':False]
['text':' Check evaluation order','line_number':32,'multiline':False]
['text':' no stdout capturing on windows','line_number':50,'multiline':False]
['text':' type: (Dict[str, int]) -> bool','line_number':54,'multiline':False]
['text':' type: (Dict[Tensor, int], Tensor) -> bool','line_number':64,'multiline':False]
['text':' Check for invalid value type annotation','line_number':115,'multiline':False]
['text':' Check for invalid key type annotation','line_number':121,'multiline':False]
['text':' Check for invalid key and value type annotation','line_number':127,'multiline':False]
['text':' type: (Tuple[Tensor, Tuple[int, Tensor]], str) -> Tensor','line_number':136,'multiline':False]
['text':' type: (Tuple[Tensor, Tensor]) -> Tuple[Tensor, Tensor]','line_number':151,'multiline':False]
['text':' noqa: C409','line_number':160,'multiline':False]
['text':' noqa: C409','line_number':172,'multiline':False]
['text':' type: (int) -> Tuple[Tensor, Tensor]','line_number':179,'multiline':False]
['text':' type: (List[int]) -> Tuple[Tensor, List[int]]','line_number':186,'multiline':False]
['text':' type: (List[bool]) -> Tuple[List[bool], List[bool], List[List[bool]]]','line_number':193,'multiline':False]
['text':' type: (Tuple[int, List[List[int]]]) -> int','line_number':203,'multiline':False]
['text':' to avoid defining sum_list in multiple tests','line_number':235,'multiline':False]
['text':' type: (List[int]) -> int','line_number':238,'multiline':False]
['text':' type: () -> int','line_number':259,'multiline':False]
['text':' type: (int) -> int','line_number':273,'multiline':False]
['text':' noqa: T484','line_number':275,'multiline':False]
['text':' type: (str) -> str','line_number':294,'multiline':False]
['text':' type: (List[str]) -> str','line_number':304,'multiline':False]
['text':' type: (Dict[str, int]) -> int','line_number':315,'multiline':False]
['text':' type: (Dict[str, int]) -> Tuple[str, int]','line_number':324,'multiline':False]
['text':' type: (List[int], List[int]) -> int','line_number':345,'multiline':False]
['text':' type: (Tuple[int, float]) -> float','line_number':389,'multiline':False]
['text':' type: (Tuple[Tuple[int, int], Tuple[int, int]]) -> int','line_number':398,'multiline':False]
['text':' type: (Tuple[Tensor, Tensor], Tensor) -> Tensor','line_number':425,'multiline':False]
['text':' type: (int, Tuple[int, Tuple[int, int]], Tuple[int, int]) -> int','line_number':433,'multiline':False]
['text':' type: (List[int], Tensor, int) -> Tuple[int, Tensor, int]','line_number':440,'multiline':False]
['text':' type: () -> Tuple[int, int, Tuple[int, int], Tuple[int, int]]','line_number':447,'multiline':False]
['text':' type: (Tuple[int, int]) -> Tuple[int, int]','line_number':454,'multiline':False]
['text':' side effect','line_number':465,'multiline':False]
['text':' ordering','line_number':469,'multiline':False]
['text':' type: (Optional[int], Optional[int]) -> Optional[int]','line_number':481,'multiline':False]
['text':' type: (Optional[int]) -> int','line_number':495,'multiline':False]
['text':' type: (Optional[int]) -> int','line_number':505,'multiline':False]
['text':' type: (int) -> int','line_number':511,'multiline':False]
['text':' type: (bool) -> Optional[int]','line_number':518,'multiline':False]
['text':' type: (Optional[List[float]]) -> int','line_number':530,'multiline':False]
['text':' type: (Optional[BroadcastingList2[float]]) -> int','line_number':535,'multiline':False]
['text':' type: (Tuple[float, float]) -> int','line_number':540,'multiline':False]
['text':' type: (Optional[Tuple[int, int]]) -> Tuple[int, int]','line_number':547,'multiline':False]
['text':' type: (_1, _2) -> _1','line_number':565,'multiline':False]
['text':' see [local resolution in python]','line_number':569,'multiline':False]
['text':' type: (_GoogLeNetOutputs) -> _GoogLeNetOutputs','line_number':574,'multiline':False]
['text':' see [local resolution in python]','line_number':584,'multiline':False]
['text':' type: (_GoogLeNetOutputs) -> _GoogLeNetOutputs','line_number':589,'multiline':False]
['text':' see [local resolution in python]','line_number':601,'multiline':False]
['text':' assert that this has a location associated with the error.','line_number':606,'multiline':False]
['text':' note the " +" is regex (i.e. "at least one space")','line_number':607,'multiline':False]
['text':' See #104484','line_number':612,'multiline':False]
['text':' In python >=3.10, inspect.get_annotations doesn't always return the same values.','line_number':613,'multiline':False]
['text':' Sometimes it will show all annotations; other times it will show only annotations','line_number':614,'multiline':False]
['text':' that show in that class, not classes it inherits fro.','line_number':615,'multiline':False]
