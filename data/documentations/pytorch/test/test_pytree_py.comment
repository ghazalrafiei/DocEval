['text':' Owner(s): ["module: pytree"]','line_number':1,'multiline':False]
['text':' Check the parameter names are the same.','line_number':46,'multiline':False]
['text':' Check the positional parameters are the same.','line_number':51,'multiline':False]
['text':' Check parameter kinds and default values are the same.','line_number':80,'multiline':False]
['text':' Check parameter annotations are the same.','line_number':84,'multiline':False]
['text':' Custom types are leaf nodes by default','line_number':128,'multiline':False]
['text':' Register MyDict as a pytree node','line_number':135,'multiline':False]
['text':' Do not allow registering the same type twice','line_number':146,'multiline':False]
['text':' Check that values is actually List[Tensor] and not (ReturnType(...),)','line_number':462,'multiline':False]
['text':' NB: python basic data structures (dict list tuple) all have','line_number':483,'multiline':False]
['text':' contents equality defined on them, so the following works for them.','line_number':484,'multiline':False]
['text':' Same (flat) structures','line_number':604,'multiline':False]
['text':' Mismatched (flat) structures','line_number':609,'multiline':False]
['text':' Same (nested) structures','line_number':617,'multiline':False]
['text':' Mismatched (nested) structures','line_number':620,'multiline':False]
['text':' Broadcasting single value','line_number':623,'multiline':False]
['text':' Broadcast multiple things','line_number':629,'multiline':False]
['text':' Check that it looks sane','line_number':696,'multiline':False]
['text':' Check that it looks sane','line_number':711,'multiline':False]
['text':' py_pytree.tree_structure([])','line_number':726,'multiline':False]
['text':' py_pytree.tree_structure(())','line_number':728,'multiline':False]
['text':' py_pytree.tree_structure({})','line_number':730,'multiline':False]
['text':' py_pytree.tree_structure([0])','line_number':732,'multiline':False]
['text':' py_pytree.tree_structure([0, 1])','line_number':734,'multiline':False]
['text':' py_pytree.tree_structure((0, 1, 2))','line_number':743,'multiline':False]
['text':' py_pytree.tree_structure({"a": 0, "b": 1, "c": 2})','line_number':753,'multiline':False]
['text':' py_pytree.tree_structure(OrderedDict([("a", (0, 1)), ("b", 2), ("c", {"a": 3, "b": 4, "c": 5})])','line_number':763,'multiline':False]
['text':' py_pytree.tree_structure([(0, 1, [2, 3])])','line_number':788,'multiline':False]
['text':' py_pytree.tree_structure(defaultdict(list, {"a": [0, 1], "b": [1, 2], "c": {}}))','line_number':811,'multiline':False]
['text':' Ensure that the spec is valid','line_number':838,'multiline':False]
['text':' The context in the namedtuple is different now because we recreated','line_number':857,'multiline':False]
['text':' the namedtuple type.','line_number':858,'multiline':False]
['text':' py_pytree.tree_structure(OrderedDict([(1, (0, 1)), (2, 2), (3, {4: 3, 5: 4, 6: 5})]))','line_number':964,'multiline':False]
['text':' Ensure that the spec is valid','line_number':984,'multiline':False]
['text':' Check that it looks sane','line_number':1016,'multiline':False]
['text':' Check that it looks sane','line_number':1026,'multiline':False]
