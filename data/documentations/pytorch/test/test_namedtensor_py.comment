['text':' Owner(s): ["module: named tensor"]','line_number':1,'multiline':False]
['text':' This is a metalanguage for describing a shape of a tensor compactly.','line_number':32,'multiline':False]
['text':' 'N:3,C:2' -> size = [3, 2], names: ['N', 'C']','line_number':33,'multiline':False]
['text':' 'None:3,None:2' -> size = [3, 2], names: ['None', 'None']','line_number':34,'multiline':False]
['text':' '3,2' -> size = [3, 2], names=None passed to ctor.','line_number':35,'multiline':False]
['text':' '' -> size: [], names:None','line_number':44,'multiline':False]
['text':' '3, 2' -> size = [3, 2], None names.','line_number':48,'multiline':False]
['text':' namedshape: str','line_number':58,'multiline':False]
['text':' TODO(rzou): It would be nice for this to be a "real" python warning.','line_number':72,'multiline':False]
['text':' Right now this error message only prints once and doesn't respect','line_number':73,'multiline':False]
['text':' warnings.simplefilter behavior (where python users can control whether','line_number':74,'multiline':False]
['text':' or not to display warnings once, all the time, or never).','line_number':75,'multiline':False]
['text':' TODO(rzou): Some form of this check should be added to self.assertEqual.','line_number':97,'multiline':False]
['text':' Right now I don't know what it should look like.','line_number':98,'multiline':False]
['text':' materialize [None, None]','line_number':154,'multiline':False]
['text':' Ran it N times to reduce flakiness','line_number':157,'multiline':False]
['text':' Unnamed tensor -> Unnamed tensor','line_number':181,'multiline':False]
['text':' Named tensor -> Named tensor','line_number':186,'multiline':False]
['text':' Partially named tensor -> named tensor','line_number':191,'multiline':False]
['text':' Too few names','line_number':196,'multiline':False]
['text':' Cannot change Tensor[D] to Tensor[N]','line_number':201,'multiline':False]
['text':' Cannot change Tensor[D] to Tensor[None]','line_number':206,'multiline':False]
['text':' globbing behavior exists','line_number':211,'multiline':False]
['text':' This type of contiguous is special-cased and therefore needs its own test','line_number':336,'multiline':False]
['text':' This type of copy is special-cased and therefore needs its own test','line_number':342,'multiline':False]
['text':' Check that we didn't modify tensor.names','line_number':367,'multiline':False]
['text':' rename returns a view on the tensor','line_number':378,'multiline':False]
['text':' Check that it works with unnamed tensors','line_number':390,'multiline':False]
['text':' Check that it works with named tensors','line_number':399,'multiline':False]
['text':' Test empty glob','line_number':408,'multiline':False]
['text':' Multiple globs throw','line_number':414,'multiline':False]
['text':' Test torch.full','line_number':479,'multiline':False]
['text':' there's no way to distinguish between names=None and not passing in names.','line_number':518,'multiline':False]
['text':' If the user passes in names=None they are asking for trouble.','line_number':519,'multiline':False]
['text':' Smoke test for info functions / methods / attributes on named tensors.','line_number':586,'multiline':False]
['text':' autograd related attributes','line_number':634,'multiline':False]
['text':' avoid division by 0','line_number':666,'multiline':False]
['text':' In-place ops have the constraint that they must not change shape.','line_number':726,'multiline':False]
['text':' Implemented via TensorIterator, so just check that each version','line_number':775,'multiline':False]
['text':' (out-of-place, inplace, out=) propagates names.','line_number':776,'multiline':False]
['text':' There are a few pow cases that don't go through TensorIterator.','line_number':797,'multiline':False]
['text':' Test them here.','line_number':798,'multiline':False]
['text':' Get a better error message by catching the error and asserting.','line_number':851,'multiline':False]
['text':' All of these operate on 2x2 tensors.','line_number':879,'multiline':False]
['text':' unary pointwise','line_number':881,'multiline':False]
['text':' conversions','line_number':940,'multiline':False]
['text':' cumsum and cumprod','line_number':956,'multiline':False]
['text':' views','line_number':964,'multiline':False]
['text':' creation functions','line_number':967,'multiline':False]
['text':' bernoulli variants','line_number':975,'multiline':False]
['text':' basic','line_number':1043,'multiline':False]
['text':' int overload','line_number':1048,'multiline':False]
['text':' list overload','line_number':1053,'multiline':False]
['text':' Non-contiguous flatten: N and H are not "adjacent" in memory.','line_number':1058,'multiline':False]
['text':' test args: tensor, int, namedshape','line_number':1079,'multiline':False]
['text':' test args: namedtensor, str, namedshape','line_number':1101,'multiline':False]
['text':' test invalid args: namedtensor, str, sizes','line_number':1106,'multiline':False]
['text':' test invalid args: namedtensor, int, sizes','line_number':1110,'multiline':False]
['text':' accepts OrderedDict','line_number':1125,'multiline':False]
['text':' Unflatten left-most','line_number':1130,'multiline':False]
['text':' Unflatten right-most','line_number':1135,'multiline':False]
['text':' Return the 0-th value','line_number':1233,'multiline':False]
['text':' simple','line_number':1278,'multiline':False]
['text':' left broadcast','line_number':1284,'multiline':False]
['text':' right broadcast','line_number':1290,'multiline':False]
['text':' error','line_number':1296,'multiline':False]
['text':' out=','line_number':1302,'multiline':False]
['text':' simple','line_number':1309,'multiline':False]
['text':' error: zero dim','line_number':1315,'multiline':False]
['text':' error: names don't match','line_number':1321,'multiline':False]
['text':' error: different number of dims','line_number':1327,'multiline':False]
['text':' out=','line_number':1333,'multiline':False]
['text':' simple','line_number':1340,'multiline':False]
['text':' left broadcast','line_number':1346,'multiline':False]
['text':' right broadcast','line_number':1352,'multiline':False]
['text':' error','line_number':1358,'multiline':False]
['text':' inplace','line_number':1364,'multiline':False]
['text':' inplace, computed names don't match output tensor names','line_number':1370,'multiline':False]
['text':' Please don't use this as a name in a different test.','line_number':1392,'multiline':False]
['text':' Please don't use this as a name in a different test.','line_number':1402,'multiline':False]
['text':' non-compile-time constants are not interned','line_number':1403,'multiline':False]
['text':' Internally, PyTorch should not hold a reference to the uninterned string','line_number':1416,'multiline':False]
['text':' Instead, we should hold a new reference to the interned version.','line_number':1419,'multiline':False]
['text':' trivial','line_number':1489,'multiline':False]
['text':' unsqueeze behavior','line_number':1495,'multiline':False]
['text':' transpose behavior','line_number':1501,'multiline':False]
['text':' unsqueeze / transpose','line_number':1507,'multiline':False]
['text':' All input dimensions must be named','line_number':1513,'multiline':False]
['text':' not enough names','line_number':1517,'multiline':False]
['text':' names not found','line_number':1521,'multiline':False]
['text':' ... = ['N', 'H', 'W', 'C']','line_number':1528,'multiline':False]
['text':' ... = ['H', 'C']','line_number':1533,'multiline':False]
['text':' ... = ['N', 'W']','line_number':1538,'multiline':False]
['text':' ... = ['H', 'C']','line_number':1543,'multiline':False]
['text':' ... = []','line_number':1548,'multiline':False]
['text':' Input tensor partially named','line_number':1553,'multiline':False]
['text':' Input order partially named','line_number':1562,'multiline':False]
['text':' Input order duplicate names','line_number':1566,'multiline':False]
['text':' align_as calls align_to internally. align_to has pretty substantial tests,','line_number':1571,'multiline':False]
['text':' so just test some basic things here.','line_number':1572,'multiline':False]
['text':' basic tests','line_number':1602,'multiline':False]
['text':' single-dim alignment test','line_number':1612,'multiline':False]
['text':' multiple dim alignment test','line_number':1622,'multiline':False]
['text':' scalar tensor tests','line_number':1632,'multiline':False]
['text':' unnamed tensor tests','line_number':1642,'multiline':False]
['text':' unnamed dim alignment tests','line_number':1656,'multiline':False]
['text':' left arg is unnamed','line_number':1714,'multiline':False]
['text':' right arg is unnamed','line_number':1720,'multiline':False]
['text':' out=','line_number':1726,'multiline':False]
['text':' full names','line_number':1755,'multiline':False]
['text':' no name on bias','line_number':1761,'multiline':False]
['text':' partially named bias','line_number':1767,'multiline':False]
['text':' out=','line_number':1773,'multiline':False]
['text':' inplace','line_number':1779,'multiline':False]
['text':' full names','line_number':1792,'multiline':False]
['text':' no name on left tensor','line_number':1798,'multiline':False]
['text':' no name on right tensor','line_number':1804,'multiline':False]
['text':' out=','line_number':1810,'multiline':False]
['text':' duplicate names after mm','line_number':1816,'multiline':False]
['text':' matching error (batch dimensions must be alignable)','line_number':1822,'multiline':False]
['text':' misalignment (batch dimension is getting contracted)','line_number':1828,'multiline':False]
['text':' input tensors are less than 1D','line_number':1836,'multiline':False]
['text':' 1D @ 1D','line_number':1846,'multiline':False]
['text':' ND @ 1D','line_number':1852,'multiline':False]
['text':' 1D @ ND','line_number':1862,'multiline':False]
['text':' 2D @ 2D','line_number':1872,'multiline':False]
['text':' ND @ ND where N >= 2','line_number':1882,'multiline':False]
['text':' out=','line_number':1896,'multiline':False]
['text':' duplicate names after mm','line_number':1902,'multiline':False]
['text':' misalignment (batch dimension is getting contracted)','line_number':1908,'multiline':False]
['text':' left arg is unnamed','line_number':1921,'multiline':False]
['text':' right arg is unnamed','line_number':1927,'multiline':False]
['text':' out=','line_number':1933,'multiline':False]
['text':' full names','line_number':1941,'multiline':False]
['text':' no name on bias','line_number':1947,'multiline':False]
['text':' out=','line_number':1953,'multiline':False]
['text':' inplace','line_number':1959,'multiline':False]
['text':' sigmoid forward is supported by named tensors, but sigmoid_backward','line_number':1966,'multiline':False]
['text':' is not (see native_functions.yaml). Test that autograd ignores names','line_number':1967,'multiline':False]
['text':' and that the sigmoid_backward succeeds.','line_number':1968,'multiline':False]
['text':' Check that names weren't propagated','line_number':1977,'multiline':False]
['text':' Cause all warnings to always be triggered.','line_number':1987,'multiline':False]
['text':' torch.dot ignores the names of both tensors','line_number':2001,'multiline':False]
