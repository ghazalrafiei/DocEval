['text':' Owner(s): ["module: distributions"]','line_number':1,'multiline':False]
['text':' Needed to squash batch dims for testing jacobian','line_number':86,'multiline':False]
['text':' Generate pytest ids','line_number':106,'multiline':False]
['text':' For corr_cholesky the last dim in the vector','line_number':139,'multiline':False]
['text':' must be of size (dim * dim) // 2','line_number':140,'multiline':False]
['text':' verify that the input data are valid','line_number':203,'multiline':False]
['text':' should be implemented at least by caching','line_number':210,'multiline':False]
['text':' bypass cache','line_number':213,'multiline':False]
['text':' verify function inverse','line_number':219,'multiline':False]
['text':' verify weaker function pseudo-inverse','line_number':227,'multiline':False]
['text':' this should not crash','line_number':290,'multiline':False]
['text':' check on different inputs','line_number':307,'multiline':False]
['text':' check on different inputs','line_number':324,'multiline':False]
['text':' check on different inputs','line_number':342,'multiline':False]
['text':' Test shape','line_number':355,'multiline':False]
['text':' Expand if required','line_number':359,'multiline':False]
['text':' Reshape to squash batch dims to a single batch dim','line_number':365,'multiline':False]
['text':' 1. Transforms with unit jacobian','line_number':368,'multiline':False]
['text':' 2. Transforms with 0 off-diagonal elements','line_number':372,'multiline':False]
['text':' assert off-diagonal elements are zero','line_number':375,'multiline':False]
['text':' 3. Transforms with non-0 off-diagonal elements','line_number':378,'multiline':False]
['text':' Note that jacobian will have shape (batch_dims, y_event_dims, batch_dims, x_event_dims)','line_number':390,'multiline':False]
['text':' However, batches are independent so this can be converted into a (batch_dims, event_dims, event_dims)','line_number':391,'multiline':False]
['text':' after reshaping the event dims (see above) to give a batched square matrix whose determinant','line_number':392,'multiline':False]
['text':' can be computed.','line_number':393,'multiline':False]
['text':' Remove extra zero-valued dims (for inverse stick-breaking).','line_number':399,'multiline':False]
['text':' Check validation in .__init__().','line_number':463,'multiline':False]
['text':' Check sampling is sufficiently expanded.','line_number':470,'multiline':False]
['text':' Check log_prob shape on full samples.','line_number':476,'multiline':False]
['text':' Check log_prob shape on partial samples.','line_number':480,'multiline':False]
['text':' Evaluating `log_prob` will create a weakref `_inv` which cannot be pickled. Here, we check','line_number':489,'multiline':False]
['text':' that `__getstate__` correctly handles the weakref, and that we can evaluate the density after.','line_number':490,'multiline':False]
