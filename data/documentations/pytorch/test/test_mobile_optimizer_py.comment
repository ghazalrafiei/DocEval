['text':' Owner(s): ["oncall: mobile"]','line_number':1,'multiline':False]
['text':' There were ASAN failures when fold_conv_bn was run on','line_number':267,'multiline':False]
['text':' already quantized conv modules. Verifying that this does','line_number':268,'multiline':False]
['text':' not happen again.','line_number':269,'multiline':False]
['text':' this line should not have ASAN failures','line_number':305,'multiline':False]
['text':' Expected to be False since no bundled inputs methods were added','line_number':373,'multiline':False]
['text':' Add bundled inputs methods to the module','line_number':379,'multiline':False]
['text':' Now they should be preserved','line_number':382,'multiline':False]
['text':' All of the bundled inputs methods were preserved','line_number':385,'multiline':False]
['text':' If not all 3 bundled inputs methods are present in the module,','line_number':394,'multiline':False]
['text':' we will not try to preserve them unless specified by the user.','line_number':395,'multiline':False]
['text':' Specifically preserve get_all_bundled_inputs even if it's the only one','line_number':400,'multiline':False]
['text':' bundled inputs method available.','line_number':401,'multiline':False]
['text':' TODO: test nn.Sequential after #42039 is fixed','line_number':447,'multiline':False]
['text':' basic case','line_number':471,'multiline':False]
['text':' generic case','line_number':485,'multiline':False]
['text':' run forward 3 times until segfault, see https://github.com/pytorch/pytorch/issues/52463','line_number':506,'multiline':False]
['text':' The call to self.inner.dummy_method_not_cloned should not raise an error','line_number':534,'multiline':False]
['text':' The call to self.inner.pqr should not raise an error','line_number':536,'multiline':False]
['text':' The call to self.inner.dummy_method_not_cloned should not raise an error','line_number':542,'multiline':False]
['text':' The call to self.inner.pqr should not raise an error','line_number':544,'multiline':False]
['text':' Check that the methods exist on the original model.','line_number':562,'multiline':False]
['text':' Case-1: Successfully clone, ignoring 2 methods, keeping all attributes.','line_number':568,'multiline':False]
['text':' ignored_methods','line_number':571,'multiline':False]
['text':' ignored_attributes','line_number':572,'multiline':False]
['text':' Check that the ignored methods don't exist on the cloned model.','line_number':575,'multiline':False]
['text':' Check that the cloned class has a classname that starts with __torch__.','line_number':581,'multiline':False]
['text':' Case-2: Successfully clone the module, ignoring the attribute pqr, and the method that references it.','line_number':589,'multiline':False]
['text':' Check that the ignored methods don't exist on the cloned model.','line_number':596,'multiline':False]
['text':' Case-3: The statement below will throw since dummy_method_cloned2 is preserved,','line_number':604,'multiline':False]
['text':' and references dummy_method_not_cloned, which is not cloned.','line_number':605,'multiline':False]
['text':' Case-4: The statement below will throw since dummy_method_ref_attr_pqr','line_number':609,'multiline':False]
['text':' is preserved, and references "pqr", which is not cloned.','line_number':610,'multiline':False]
