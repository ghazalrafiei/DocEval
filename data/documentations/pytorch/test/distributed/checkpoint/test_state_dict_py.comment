['text':' Owner(s): ["oncall: distributed"]','line_number':1,'multiline':False]
['text':' Initialize original model and distributed model.','line_number':66,'multiline':False]
['text':' Train 10 steps.','line_number':69,'multiline':False]
['text':' Get the state_dict, and compare the result','line_number':83,'multiline':False]
['text':' Initialize a completely new model to simulate checkpoint load.','line_number':93,'multiline':False]
['text':' Simulate DCP distributed load. We need to first get the state_dict and','line_number':96,'multiline':False]
['text':' pass them to DCP to load the saved state_dict from the storage.','line_number':97,'multiline':False]
['text':' Then finally we can call set_state_dict().','line_number':98,'multiline':False]
['text':' We won't be able to load the partial state_dict back.','line_number':105,'multiline':False]
['text':' Since we already have the state_dict saved before, no need to call DCP.','line_number':107,'multiline':False]
['text':' We can directly load them back. This asser is to ensure that optimizer','line_number':108,'multiline':False]
['text':' state storage are initialized.','line_number':109,'multiline':False]
['text':' self.assertEqual(len(curr_dist_osd[STATE]), len(dist_osd[STATE]))','line_number':110,'multiline':False]
['text':' Check if the new state_dict are the same','line_number':119,'multiline':False]
['text':' Test _patch_model_state_dict, and _patch_optimizer_state_dict','line_number':127,'multiline':False]
['text':' TODO: remove this return after we complete the composable API side change for device_mesh','line_number':147,'multiline':False]
['text':' TODO: enable use_dtensor once 2D device_mesh support is fully landed.','line_number':275,'multiline':False]
['text':' TODO: enable the test after FSDP + apply_optimizer_in_backward works.','line_number':283,'multiline':False]
['text':' Disable this test as it is broken after','line_number':284,'multiline':False]
['text':' https://github.com/pytorch/pytorch/pull/108298.','line_number':285,'multiline':False]
