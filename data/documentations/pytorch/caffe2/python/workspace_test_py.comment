['text':' check if fetched is correct.','line_number':159,'multiline':False]
['text':' check if fetched is correct.','line_number':173,'multiline':False]
['text':' fetch by name now','line_number':178,'multiline':False]
['text':' size of blob "testblob_str1" = size_str1 * meta_.itemsize() + strs1_len','line_number':244,'multiline':False]
['text':' size of blob "testblob_str2" = size_str2 * meta_.itemsize() + strs2_len','line_number':245,'multiline':False]
['text':' long strings trigger array of object creation','line_number':260,'multiline':False]
['text':' small strings trigger NPY_STRING array','line_number':276,'multiline':False]
['text':' this is actual string, not a tensor of strings','line_number':285,'multiline':False]
['text':' check if fetched is correct.','line_number':305,'multiline':False]
['text':' The following should raise an error.','line_number':364,'multiline':False]
['text':' so this should never happen.','line_number':366,'multiline':False]
['text':' check if fetched is correct.','line_number':389,'multiline':False]
['text':' CUDA has convenient mem stats, let's use them to make sure we didn't','line_number':409,'multiline':False]
['text':' leak memory','line_number':410,'multiline':False]
['text':' clean up everything','line_number':450,'multiline':False]
['text':' Also, the immediate mode should not invade the original namespace,','line_number':479,'multiline':False]
['text':' so we check if this is so.','line_number':480,'multiline':False]
['text':' for testing we will look into the _immediate_root_folder variable','line_number':493,'multiline':False]
['text':' but in normal usage you should not access that.','line_number':494,'multiline':False]
['text':' After termination, immediate mode should have the root folder','line_number':500,'multiline':False]
['text':' deleted.','line_number':501,'multiline':False]
['text':' If we do not specify overwrite, this should raise an error.','line_number':520,'multiline':False]
['text':' But, if we specify overwrite, this should pass.','line_number':523,'multiline':False]
['text':' Overwrite can also be a kwarg.','line_number':525,'multiline':False]
['text':' Use this test with a bigger model to see how using Predictor allows to','line_number':650,'multiline':False]
['text':' avoid issues with low protobuf size limit in Python','line_number':651,'multiline':False]
['text':'','line_number':652,'multiline':False]
['text':' def test_predictor_predefined(self):','line_number':653,'multiline':False]
['text':'     workspace.ResetWorkspace()','line_number':654,'multiline':False]
['text':'     path = 'caffe2/caffe2/test/assets/'','line_number':655,'multiline':False]
['text':'     with open(path + 'squeeze_predict_net.pb') as f:','line_number':656,'multiline':False]
['text':'         self.predict_net = f.read()','line_number':657,'multiline':False]
['text':'     with open(path + 'squeeze_init_net.pb') as f:','line_number':658,'multiline':False]
['text':'         self.init_net = f.read()','line_number':659,'multiline':False]
['text':'     self.predictor = workspace.Predictor(self.init_net, self.predict_net)','line_number':660,'multiline':False]
['text':'     inputs = [np.zeros((1, 3, 256, 256), dtype='f')]','line_number':662,'multiline':False]
['text':'     outputs = self.predictor.run(inputs)','line_number':663,'multiline':False]
['text':'     self.assertEqual(len(outputs), 1)','line_number':664,'multiline':False]
['text':'     self.assertEqual(outputs[0].shape, (1, 1000, 1, 1))','line_number':665,'multiline':False]
['text':'     self.assertAlmostEqual(outputs[0][0][0][0][0], 5.19026289e-05)','line_number':666,'multiline':False]
['text':' TODO: make caffe2 side load return python-sided module','line_number':890,'multiline':False]
['text':' right now it returns the base class (torch._C.ScriptModule)','line_number':891,'multiline':False]
['text':' self.assertTrue(isinstance(workspace.FetchBlob('m'), torch.jit.ScriptModule))','line_number':892,'multiline':False]
['text':' do something with the module','line_number':894,'multiline':False]
['text':' clean up temp folder.','line_number':905,'multiline':False]
