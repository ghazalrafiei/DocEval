['text':'# @package onnx','line_number':1,'multiline':False]
['text':' Module caffe2.python.onnx.backend','line_number':2,'multiline':False]
['text':' When onnx is built against a version of protobuf that is older than','line_number':13,'multiline':False]
['text':' that which is vendored with caffe2, onnx will crash if caffe2's','line_number':14,'multiline':False]
['text':' vendored protobuf is loaded first. We can work around this by','line_number':15,'multiline':False]
['text':' importing onnx first, which will cause it to go out and pick up the','line_number':16,'multiline':False]
['text':' system protobuf.','line_number':17,'multiline':False]
['text':' TODO: Move this into ONNX main library','line_number':68,'multiline':False]
['text':' this is a proto!','line_number':83,'multiline':False]
['text':' TODO: this doesn't work with RNN ops','line_number':94,'multiline':False]
['text':' TODO: Move this into ONNX main library','line_number':102,'multiline':False]
['text':' The greatest version of the ONNX operator set which we are aware of.','line_number':126,'multiline':False]
['text':' Models whose version is larger than this will cause us to emit a warning','line_number':127,'multiline':False]
['text':' that we are attempting to translate on a "best effort" basis.','line_number':128,'multiline':False]
['text':'','line_number':129,'multiline':False]
['text':' If you increase this, make SURE you cross-reference all BC-breaking','line_number':130,'multiline':False]
['text':' changes from one version to the next, and any that you did not','line_number':131,'multiline':False]
['text':' implement, mark as broken in _broken_operators','line_number':132,'multiline':False]
['text':' This dictionary will record operators which are KNOWN to be','line_number':135,'multiline':False]
['text':' broken, so we give a good error message rather than do something','line_number':136,'multiline':False]
['text':' bogus and then fail.','line_number':137,'multiline':False]
['text':' 'BrokenOp': version_it_was_broken_in','line_number':139,'multiline':False]
['text':' Operators that are different between Caffe2 and','line_number':142,'multiline':False]
['text':' ONNX but only in their name.','line_number':143,'multiline':False]
['text':' In most cases, this should be empty - as the effort of ONNX is','line_number':144,'multiline':False]
['text':' to unify the operator definitions.','line_number':145,'multiline':False]
['text':' operators whose behavior is different beyond renaming','line_number':182,'multiline':False]
['text':' the value is an attribute of this class that is a','line_number':183,'multiline':False]
['text':' function from ToffeIR node_def to caffe2 op_def','line_number':184,'multiline':False]
['text':' Dummy name generator','line_number':195,'multiline':False]
['text':' NB: By default, you will use the LATEST definition of the operator,','line_number':202,'multiline':False]
['text':' so this interface MAY make BC-breaking changes.  Specify an','line_number':203,'multiline':False]
['text':' opset_version if you don't want this to version.','line_number':204,'multiline':False]
['text':' temporary!','line_number':213,'multiline':False]
['text':' Use the onnx.numpy_helper because the data may be raw','line_number':258,'multiline':False]
['text':' input and recurrence biases are squashed together in onnx','line_number':316,'multiline':False]
['text':' but not in caffe2','line_number':317,'multiline':False]
['text':' make a copy, which is safe to mutate','line_number':382,'multiline':False]
['text':' caffe2 has a different order from onnx. We need to rearrange','line_number':438,'multiline':False]
['text':'  z r h  -> r z h','line_number':439,'multiline':False]
['text':' caffe2 has a different order from onnx. We need to rearrange','line_number':459,'multiline':False]
['text':'   i o f c -> i f o c','line_number':460,'multiline':False]
['text':' in the forward case, storage is shared between the','line_number':481,'multiline':False]
['text':' last outputs. We need to decouple them so that the','line_number':482,'multiline':False]
['text':' VariableLengthSequencePadding only mutates','line_number':483,'multiline':False]
['text':' n.outputs[0]','line_number':484,'multiline':False]
['text':' We want to decide whether to put all of our weight-reshaping','line_number':507,'multiline':False]
['text':' operators in the init net or the predict net. We can put','line_number':508,'multiline':False]
['text':' them in the init net iff the inputs to those operators are','line_number':509,'multiline':False]
['text':' already available, either as graph initializers, or as the','line_number':510,'multiline':False]
['text':' output of other operators in the init net. The latter case','line_number':511,'multiline':False]
['text':' occurs, for example, when exporting from pytorch to onnx.','line_number':512,'multiline':False]
['text':' In most production use, we expect has_initializers to be','line_number':513,'multiline':False]
['text':' true.','line_number':514,'multiline':False]
['text':' ONNX does no ship onnx.optimizer since version 1.9+','line_number':658,'multiline':False]
['text':' TODO: make this more efficient','line_number':669,'multiline':False]
['text':' Prior to onnx version update to onnx-1.8.0, errors caused by failures in','line_number':702,'multiline':False]
['text':' in the onnx shape inference call were being supressed. Hence a try-catch block','line_number':703,'multiline':False]
['text':' is added around the infer_shapes call to avoid these failures and preserve status','line_number':704,'multiline':False]
['text':' Directly load initializer data into blobs in workspace','line_number':718,'multiline':False]
['text':' TODO: This method needs a refactor for clarity','line_number':741,'multiline':False]
['text':' extract value infos from pred model (value infos of','line_number':746,'multiline':False]
['text':' node's inputs that are in init model should be all','line_number':747,'multiline':False]
['text':' available in pred model)','line_number':748,'multiline':False]
['text':' onnx opset 7 and newest caffe2 have adopted full onnx broadcast semantics','line_number':828,'multiline':False]
['text':' so we don't need this hack anymore','line_number':829,'multiline':False]
['text':' Prior to onnx version update to onnx-1.8.0, errors caused by failures in','line_number':876,'multiline':False]
['text':' in the onnx shape inference call were being supressed. Hence a try-catch block','line_number':877,'multiline':False]
['text':' is added around the infer_shapes call to avoid these failures and preserve status','line_number':878,'multiline':False]
['text':' Optimizer module has been removed in ONNX-1.9 or later, warn caller if that is the case','line_number':886,'multiline':False]
['text':' wrapper for backwards compatibility','line_number':934,'multiline':False]
['text':' TODO: should have an unspported list of operators, be optimistic for now','line_number':954,'multiline':False]
['text':' noqa','line_number':965,'multiline':False]
