['text':'# @package beam_search','line_number':1,'multiline':False]
['text':' Module caffe2.python.models.seq2seq.beam_search','line_number':2,'multiline':False]
['text':' TODO: make attentions a generic state','line_number':91,'multiline':False]
['text':' data_dependencies is a list of blobs that the operator should wait for','line_number':92,'multiline':False]
['text':' before beginning execution. This ensures that ops are run in the correct','line_number':93,'multiline':False]
['text':' order when the RecurrentNetwork op is embedded in a DAGNet, for ex.','line_number':94,'multiline':False]
['text':' [beam_size, beam_size]','line_number':178,'multiline':False]
['text':' [beam_size, beam_size]','line_number':185,'multiline':False]
['text':' [beam_size]','line_number':191,'multiline':False]
['text':' [beam_size, beam_size]','line_number':197,'multiline':False]
['text':' [beam_size, beam_size]','line_number':205,'multiline':False]
['text':' [beam_size, beam_size]','line_number':210,'multiline':False]
['text':' [beam_size * beam_size]','line_number':215,'multiline':False]
['text':' current_beam_size (predecessor states from previous step)','line_number':236,'multiline':False]
['text':' is 1 on first step (so we just need beam_size scores),','line_number':237,'multiline':False]
['text':' and beam_size subsequently (so we need all beam_size * beam_size','line_number':238,'multiline':False]
['text':' scores)','line_number':239,'multiline':False]
['text':' [current_beam_size * beam_size]','line_number':245,'multiline':False]
['text':' [1, current_beam_size * beam_size]','line_number':250,'multiline':False]
['text':' [1, beam_size]','line_number':259,'multiline':False]
['text':' [1, beam_size]','line_number':270,'multiline':False]
['text':' [beam_size, encoder_length, 1]','line_number':282,'multiline':False]
['text':' [1, beam_size, encoder_length]','line_number':287,'multiline':False]
['text':' [beam_size * beam_size]','line_number':293,'multiline':False]
