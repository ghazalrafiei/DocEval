['text':' run with blob sizes','line_number':72,'multiline':False]
['text':' Trick is here to have same input appear twice in a same Sum','line_number':133,'multiline':False]
['text':' Check that the last activations are not shared','line_number':188,'multiline':False]
['text':' Test networks produce exactly same gradients','line_number':195,'multiline':False]
['text':' Run with the forward optimization','line_number':213,'multiline':False]
['text':' Create set of blobs on CPU side and GPU side and check they don't','line_number':254,'multiline':False]
['text':' overlap','line_number':255,'multiline':False]
['text':' "name_x//shared_gradinp_0_shared" if using "name_x/"','line_number':296,'multiline':False]
['text':' Test networks produce exactly same gradients','line_number':305,'multiline':False]
['text':' Branch','line_number':343,'multiline':False]
['text':' Test networks produce exactly same results','line_number':367,'multiline':False]
['text':' Branch','line_number':402,'multiline':False]
['text':' Extra test with when one of the parameters is also an input.','line_number':425,'multiline':False]
['text':' This caused a bug before.','line_number':426,'multiline':False]
['text':'##','line_number':432,'multiline':False]
['text':' Test networks produce exactly same results','line_number':437,'multiline':False]
['text':' This test reproduces scenario where dag traversal for finding','line_number':453,'multiline':False]
['text':' shared blobs was not always starting from ops with in degree of 0','line_number':454,'multiline':False]
['text':' Branch','line_number':473,'multiline':False]
['text':' adding name_x/fc5_w as heads (which belongs to non-root op)','line_number':491,'multiline':False]
['text':' to make sure that dag traversal always starts from root ops','line_number':492,'multiline':False]
['text':' This is specifically to verify the op schema check being done in memonger','line_number':499,'multiline':False]
['text':' enforce inplace op','line_number':506,'multiline':False]
['text':' Here inplace op is specifically a root op to repro the scenario where dag','line_number':514,'multiline':False]
['text':' memonger could treat all the output blobs as shareable blobs and fails','line_number':515,'multiline':False]
['text':' assertion of input blob with the same name not allowed to share','line_number':516,'multiline':False]
['text':' enforce inplace op','line_number':523,'multiline':False]
['text':' Run once to see all blobs are set up correctly','line_number':582,'multiline':False]
['text':' 0','line_number':603,'multiline':False]
['text':' 1','line_number':605,'multiline':False]
['text':' 2','line_number':607,'multiline':False]
['text':' 3','line_number':609,'multiline':False]
['text':' longer path is in front of the shorter one','line_number':619,'multiline':False]
['text':' two outputs: conv2 and data4','line_number':624,'multiline':False]
['text':' 0','line_number':626,'multiline':False]
['text':' 1','line_number':628,'multiline':False]
['text':' 2','line_number':630,'multiline':False]
['text':' 3','line_number':632,'multiline':False]
['text':' 4','line_number':634,'multiline':False]
['text':' 5','line_number':636,'multiline':False]
['text':' longer path is in front of the shorter one','line_number':646,'multiline':False]
['text':' single node','line_number':651,'multiline':False]
['text':' 0','line_number':653,'multiline':False]
['text':' longer path is in front of the shorter one','line_number':663,'multiline':False]
['text':' out is external output','line_number':823,'multiline':False]
['text':' and u is aliased so cannot be freed','line_number':824,'multiline':False]
['text':' no double frees','line_number':828,'multiline':False]
['text':' Check a freed blob is not used anymore','line_number':831,'multiline':False]
