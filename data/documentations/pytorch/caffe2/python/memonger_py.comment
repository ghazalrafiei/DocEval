['text':'# @package memonger','line_number':1,'multiline':False]
['text':' Module caffe2.python.memonger','line_number':2,'multiline':False]
['text':' Note: need to look at _{namescope} pattern as it matches','line_number':42,'multiline':False]
['text':' to handle the auto-split gradients','line_number':43,'multiline':False]
['text':' TODO: something smarter','line_number':47,'multiline':False]
['text':' Collect ops that have something to do with gradients','line_number':55,'multiline':False]
['text':' Hacky way to get activations, think of a better way','line_number':63,'multiline':False]
['text':' Remove last activations, as they are usually accessed externally','line_number':69,'multiline':False]
['text':' Gradient ops','line_number':72,'multiline':False]
['text':' Sanity check: check that all external inputs are properly accounted','line_number':120,'multiline':False]
['text':' and that no gradient ops are included in 'net'','line_number':121,'multiline':False]
['text':' Evaluate','line_number':202,'multiline':False]
['text':' Remove such blobs that are not input at all and external outputs','line_number':259,'multiline':False]
['text':' .. then find last use of each can-release blob, and insert a Free op','line_number':267,'multiline':False]
['text':' distances are negative','line_number':326,'multiline':False]
['text':' node with longest distance to source is the target','line_number':328,'multiline':False]
['text':' Hack to get networkx 2.0 happy: it uses list in pred.','line_number':336,'multiline':False]
['text':' TODO(tulloch): are there cases with multiple predecessors?','line_number':337,'multiline':False]
['text':' Manually making a sorted descendent list','line_number':447,'multiline':False]
['text':' Blob to check','line_number':627,'multiline':False]
['text':' Blobs in ranges[0:-1] are incompatible with ranges[-1] so that we can','line_number':629,'multiline':False]
['text':' reduce it to a smaller problem.','line_number':630,'multiline':False]
['text':' Try to assign 'find_range' to each assignment in init_assignment','line_number':635,'multiline':False]
['text':' reduce to a smaller dp problem','line_number':643,'multiline':False]
['text':' Try to put 'find_range' in a new assignment','line_number':648,'multiline':False]
['text':' best_assignments[k]: best assignments for first k blobs ranges_sorted[0:(k+1)]','line_number':664,'multiline':False]
['text':' Find best assignment for blobs ranges_sorted[0:ii]','line_number':666,'multiline':False]
['text':' closest best_assignment that is independent of ranges_sorted[ii]','line_number':668,'multiline':False]
['text':' Need to find best assignment for blobs in 'ranges_part'','line_number':672,'multiline':False]
['text':' Sort the ranges based on when they are last used.','line_number':725,'multiline':False]
['text':' If LiveRange.used is None, then the blob is never used and could','line_number':726,'multiline':False]
['text':' be consumed externally. Sort these to the end of the list as opposed','line_number':727,'multiline':False]
['text':' to the beginning so that they can be shared as well.','line_number':728,'multiline':False]
['text':' Update None values','line_number':733,'multiline':False]
['text':' Sharable blobs','line_number':736,'multiline':False]
['text':' Static blobs, not sharable','line_number':738,'multiline':False]
['text':' verify_assignments(best_assignment)','line_number':752,'multiline':False]
['text':' Descend into subnets of the recurrent network','line_number':789,'multiline':False]
['text':' Apply on alias_dst','line_number':802,'multiline':False]
['text':' Apply on link_external','line_number':808,'multiline':False]
['text':' Recurse into step nets','line_number':814,'multiline':False]
['text':' Store renamings','line_number':822,'multiline':False]
['text':' Reorder ops in net based on the computed linearlized order.','line_number':877,'multiline':False]
['text':' If the graph has multiple topological orderings and if the NetDef's','line_number':878,'multiline':False]
['text':' ordering differs from the order used to compute ranges, then the','line_number':879,'multiline':False]
['text':' runtime might end up overwriting blobs before they are used.','line_number':880,'multiline':False]
['text':' Operator wise equality checks','line_number':941,'multiline':False]
['text':' Print debug info','line_number':950,'multiline':False]
['text':' Net wise equality check','line_number':963,'multiline':False]
