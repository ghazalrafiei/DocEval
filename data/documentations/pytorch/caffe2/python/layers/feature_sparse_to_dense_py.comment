['text':' @package sparse_to_dense','line_number':1,'multiline':False]
['text':' Module caffe2.python.layers.sparse_to_dense','line_number':2,'multiline':False]
['text':' We don't know dimensions of embeddings in input data.','line_number':110,'multiline':False]
['text':' Even though they should match dimensions from feature config,','line_number':111,'multiline':False]
['text':' we keep ranges blob to check input data later.','line_number':112,'multiline':False]
['text':' We don't know dimensions of embeddings in input data.','line_number':135,'multiline':False]
['text':' Even though they should match dimensions from feature config,','line_number':136,'multiline':False]
['text':' we keep ranges blob to check input data later.','line_number':137,'multiline':False]
['text':' Currently this schema with ranges and values is only for','line_number':138,'multiline':False]
['text':' generic type enum 1. If new types are implemented, we need to','line_number':139,'multiline':False]
['text':' modify the ParseGeneric operator, and this part accordingly','line_number':140,'multiline':False]
['text':' TODO(amalevich): This schema is producing ranges. And thus if there is','line_number':167,'multiline':False]
['text':' something using it it should support ranges as well. It might be','line_number':168,'multiline':False]
['text':' confusing, if we don't add better support for ranges/have it as a','line_number':169,'multiline':False]
['text':' first layer','line_number':170,'multiline':False]
['text':' TODO(amalevich): Consider moving this data to schema, instead','line_number':173,'multiline':False]
['text':' Structs doesn't support attaching metadata to them and clonning','line_number':174,'multiline':False]
['text':' will break things badly, but this is the most elegant way to pass','line_number':175,'multiline':False]
['text':' this info around. Should we change it or it'll be too much work and','line_number':176,'multiline':False]
['text':' not worse it?','line_number':177,'multiline':False]
['text':' Add operators to all types that need to be densified','line_number':183,'multiline':False]
['text':' Alias helps to enforce the fact that all SparseToDense calls','line_number':212,'multiline':False]
['text':' produce new blobs.','line_number':213,'multiline':False]
['text':' Reusing blob names might result in some weird consequences','line_number':214,'multiline':False]
['text':' during the delivery time, when content of the blobs is','line_number':215,'multiline':False]
['text':' generated based on the inputSpecs.','line_number':216,'multiline':False]
['text':' TODO: merge this to the case above?','line_number':221,'multiline':False]
['text':' Alias helps to enforce the fact that all SparseToDense calls','line_number':236,'multiline':False]
['text':' produce new blobs.','line_number':237,'multiline':False]
['text':' Reusing blob names might result in some weird consequences','line_number':238,'multiline':False]
['text':' during the delivery time, when content of the blobs is','line_number':239,'multiline':False]
['text':' generated based on the inputSpecs.','line_number':240,'multiline':False]
['text':' Alias helps to enforce the fact that all SparseToDense calls','line_number':260,'multiline':False]
['text':' produce new blobs.','line_number':261,'multiline':False]
['text':' Reusing blob names might result in some weird consequences','line_number':262,'multiline':False]
['text':' during the delivery time, when content of the blobs is','line_number':263,'multiline':False]
['text':' generated based on the inputSpecs.','line_number':264,'multiline':False]
['text':' Currently our implementation only supports','line_number':279,'multiline':False]
['text':' generic type enum 1. If new types are implemented, we need to','line_number':280,'multiline':False]
['text':' modify the ParseGeneric operator, the schema above,','line_number':281,'multiline':False]
['text':' and this part accordingly to parse the generic feature strings','line_number':282,'multiline':False]
['text':' into input_record','line_number':283,'multiline':False]
['text':' Alias helps to enforce the fact that all SparseToDense calls','line_number':293,'multiline':False]
['text':' produce new blobs.','line_number':294,'multiline':False]
['text':' Reusing blob names might result in some weird consequences','line_number':295,'multiline':False]
['text':' during the delivery time, when content of the blobs is','line_number':296,'multiline':False]
['text':' generated based on the inputSpecs.','line_number':297,'multiline':False]
['text':' The features that are accessed are just those features that appear in','line_number':321,'multiline':False]
['text':' the input specs','line_number':322,'multiline':False]
