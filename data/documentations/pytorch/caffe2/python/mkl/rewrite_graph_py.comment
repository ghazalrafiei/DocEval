['text':' Simple rewrite for now - assume entire graph can be executed','line_number':38,'multiline':False]
['text':' with MKL, so just insert copy ops for external_input[0] and','line_number':39,'multiline':False]
['text':' external_output[0]','line_number':40,'multiline':False]
['text':' Modify input/outputs to point to copied MKL blobs.','line_number':49,'multiline':False]
['text':' Rename any subsequent consumers of an output blob.','line_number':65,'multiline':False]
['text':' Temporarily disable conv+relu fusion until we verify further','line_number':80,'multiline':False]
['text':' net.ParseFromString(','line_number':81,'multiline':False]
['text':'     C.transform_optimizeForMKLDNN(net.SerializeToString()))','line_number':82,'multiline':False]
['text':' For xrayocr model with lstm, only rewrite the non-lstm part of the net to','line_number':87,'multiline':False]
['text':' enable mkl, then copy the temporary output blob at the break point','line_number':88,'multiline':False]
['text':' and all external inputs for lstm part to cpu, and execuate rest of the net','line_number':89,'multiline':False]
['text':' (two lstm) on cpu','line_number':90,'multiline':False]
['text':' This only works for the xrayocr lstm model which uses the first 'Shape' op','line_number':91,'multiline':False]
['text':' to decide the break point, and after two lstm it's external_output','line_number':92,'multiline':False]
['text':' directly so there's no need to copy back to ideep/mkl','line_number':93,'multiline':False]
['text':' Modify input/outputs to point to copied MKL blobs.','line_number':106,'multiline':False]
['text':' the net may contain some external_inputs falsely added during ONNX->Caffe2','line_number':113,'multiline':False]
['text':' This should be taken care of in early steps during pytorch_to_caffe2,','line_number':114,'multiline':False]
['text':' but if not it can cause issue in follow up steps, so check here to confirm','line_number':115,'multiline':False]
['text':' look for if the external_input blob is output of any op in the net','line_number':118,'multiline':False]
['text':' the first Shape op mark the starting point of LSTM chunk of the net','line_number':126,'multiline':False]
['text':' any external input in the LSTM part need to be copied to CPU','line_number':133,'multiline':False]
['text':' make sure we found the expected break point of the net','line_number':138,'multiline':False]
['text':' create op to copy external input blobs used in LSTM part from IDEEP to CPU','line_number':141,'multiline':False]
['text':' rename input blobs in LSTM part to use the CPU copy','line_number':146,'multiline':False]
['text':' rearrange all ops in correct order','line_number':162,'multiline':False]
['text':' the first Shape op mark the starting point of LSTM chunk of the net','line_number':170,'multiline':False]
['text':' all LSTM ops should run on CPU','line_number':172,'multiline':False]
['text':' RecurrentNetwork has a nested step_net that needs special treatment','line_number':178,'multiline':False]
['text':' set device to CPU','line_number':183,'multiline':False]
['text':' rename inputs in op of nested net','line_number':188,'multiline':False]
['text':' rename external inputs of nested net','line_number':196,'multiline':False]
['text':' Temporarily disable conv+relu fusion until we verify further','line_number':204,'multiline':False]
['text':' net.ParseFromString(','line_number':205,'multiline':False]
['text':'     C.transform_optimizeForMKLDNN(net.SerializeToString()))','line_number':206,'multiline':False]
['text':' All parameter initialization should run on MKL','line_number':212,'multiline':False]
