['text':' CAFFE2_USE_LITE_PROTO','line_number':6,'multiline':False]
['text':' !CAFFE2_USE_LITE_PROTO','line_number':8,'multiline':False]
['text':' A wrapper function to return device name string for use in blob serialization','line_number':29,'multiline':False]
['text':' / deserialization. This should have one to one correspondence with','line_number':30,'multiline':False]
['text':' caffe2/proto/caffe2.proto: enum DeviceType.','line_number':31,'multiline':False]
['text':'','line_number':32,'multiline':False]
['text':' Note that we can't use DeviceType_Name, because that is only available in','line_number':33,'multiline':False]
['text':' protobuf-full, and some platforms (like mobile) may want to use','line_number':34,'multiline':False]
['text':' protobuf-lite instead.','line_number':35,'multiline':False]
['text':' Returns if the two DeviceOptions are pointing to the same device.','line_number':40,'multiline':False]
['text':' Common interfaces that reads file contents into a string.','line_number':46,'multiline':False]
['text':' Common interfaces that are supported by both lite and full protobuf.','line_number':50,'multiline':False]
['text':' namespace TextFormat','line_number':70,'multiline':False]
['text':' Text format MessageLite wrappers: these functions do nothing but just','line_number':77,'multiline':False]
['text':' allowing things to compile. It will produce a runtime error if you are using','line_number':78,'multiline':False]
['text':' MessageLite but still want text support.','line_number':79,'multiline':False]
['text':'filename','line_number':81,'multiline':True]
['text':'proto','line_number':82,'multiline':True]
['text':' Just to suppress compiler warning.','line_number':85,'multiline':False]
['text':'proto','line_number':92,'multiline':True]
['text':'filename','line_number':93,'multiline':True]
['text':' CAFFE2_USE_LITE_PROTO','line_number':113,'multiline':False]
['text':' namespace TextFormat','line_number':119,'multiline':False]
['text':' Read Proto from a file, letting the code figure out if it is text or binary.','line_number':135,'multiline':False]
['text':' CAFFE2_USE_LITE_PROTO','line_number':145,'multiline':False]
['text':' A simplified version compared to the full CreateOperator, if you do not need','line_number':180,'multiline':False]
['text':' to specify args.','line_number':181,'multiline':False]
['text':'*
 * @brief A helper class to index into arguments.
 *
 * This helper helps us to more easily index into a set of arguments
 * that are present in the operator. To save memory, the argument helper
 * does not copy the operator def, so one would need to make sure that the
 * lifetime of the OperatorDef object outlives that of the ArgumentHelper.
 ','line_number':205,'multiline':True]
['text':' **** Arguments Utils *****','line_number':314,'multiline':False]
['text':' Helper methods to get an argument from OperatorDef or NetDef given argument','line_number':316,'multiline':False]
['text':' name. Throws if argument does not exist.','line_number':317,'multiline':False]
['text':' Helper methods to get an argument from OperatorDef or NetDef given argument','line_number':320,'multiline':False]
['text':' name. Returns nullptr if argument does not exist.','line_number':321,'multiline':False]
['text':' Helper methods to query a boolean argument flag from OperatorDef or NetDef','line_number':325,'multiline':False]
['text':' given argument name. If argument does not exist, return default value.','line_number':326,'multiline':False]
['text':' Throws if argument exists but the type is not boolean.','line_number':327,'multiline':False]
['text':' **** End Arguments Utils *****','line_number':353,'multiline':False]
['text':' Given a net, modify the external inputs/outputs if necessary so that','line_number':359,'multiline':False]
['text':' the following conditions are met','line_number':360,'multiline':False]
['text':' - No duplicate external inputs','line_number':361,'multiline':False]
['text':' - No duplicate external outputs','line_number':362,'multiline':False]
['text':' - Going through list of ops in order, all op inputs must be outputs','line_number':363,'multiline':False]
['text':' from other ops, or registered as external inputs.','line_number':364,'multiline':False]
['text':' - All external outputs must be outputs of some operators.','line_number':365,'multiline':False]
['text':' namespace caffe2','line_number':368,'multiline':False]
['text':' namespace std','line_number':381,'multiline':False]
['text':' CAFFE2_UTILS_PROTO_UTILS_H_','line_number':383,'multiline':False]
