['text':' After fork, the child process inherits the data-structures of the parent','line_number':8,'multiline':False]
['text':' process' thread-pool, but since those threads don't exist, the thread-pool','line_number':9,'multiline':False]
['text':' is corrupt. It's leaked in order to prevent segfaults.','line_number':10,'multiline':False]
['text':' Ref: https://github.com/pytorch/pytorch/issues/54752#issuecomment-810315302','line_number':11,'multiline':False]
['text':' namespace','line_number':18,'multiline':False]
['text':' No need to do anything if the count is same','line_number':33,'multiline':False]
['text':' As it stands, pthreadpool is an entirely data parallel framework with no','line_number':40,'multiline':False]
['text':' support for task parallelism.  Hence, all functions are blocking, and no','line_number':41,'multiline':False]
['text':' user-provided tasks can be in flight when the control is returned to the','line_number':42,'multiline':False]
['text':' user of the API, which means re-initializing the library, without the','line_number':43,'multiline':False]
['text':' need to wait on any pending tasks, is all one needs to do to re-adjust','line_number':44,'multiline':False]
['text':' the thread count.','line_number':45,'multiline':False]
['text':' Run on same thread if _NoPThreadPoolGuard guard is enabled','line_number':52,'multiline':False]
['text':' Note: pthreadpool_parallelize_1d() is a blocking function.  The','line_number':73,'multiline':False]
['text':' function pointer to this lambda passed on to','line_number':74,'multiline':False]
['text':' pthreadpool_parallelize_1d() cannot go out of scope until','line_number':75,'multiline':False]
['text':' pthreadpool_parallelize_1d() returns.','line_number':76,'multiline':False]
['text':' Forward declaration','line_number':85,'multiline':False]
['text':' NOLINTNEXTLINE(modernize-make-unique)','line_number':101,'multiline':False]
['text':' namespace caffe2','line_number':118,'multiline':False]
