['text':'-----------------------------------------------------------------------------','line_number':1,'multiline':False]
['text':' MurmurHash3 was written by Austin Appleby, and is placed in the public','line_number':2,'multiline':False]
['text':' domain. The author hereby disclaims copyright to this source code.','line_number':3,'multiline':False]
['text':' Note - The x86 and x64 versions do _not_ produce the same results, as the','line_number':5,'multiline':False]
['text':' algorithms are optimized for their respective platforms. You can still','line_number':6,'multiline':False]
['text':' compile and run any of them on any platform, but your performance with the','line_number':7,'multiline':False]
['text':' non-native version will be less than optimal.','line_number':8,'multiline':False]
['text':'-----------------------------------------------------------------------------','line_number':12,'multiline':False]
['text':' Platform-specific functions and macros','line_number':13,'multiline':False]
['text':' Microsoft Visual Studio','line_number':15,'multiline':False]
['text':' Other compilers','line_number':28,'multiline':False]
['text':' defined(_MSC_VER)','line_number':30,'multiline':False]
['text':' !defined(_MSC_VER)','line_number':47,'multiline':False]
['text':'-----------------------------------------------------------------------------','line_number':49,'multiline':False]
['text':' Block read - if your platform needs to do endian-swapping or can only','line_number':50,'multiline':False]
['text':' handle aligned reads, do the conversion here','line_number':51,'multiline':False]
['text':'-----------------------------------------------------------------------------','line_number':61,'multiline':False]
['text':' Finalization mix - force all bits of a hash block to avalanche','line_number':62,'multiline':False]
['text':'----------','line_number':74,'multiline':False]
['text':'----------','line_number':97,'multiline':False]
['text':' body','line_number':98,'multiline':False]
['text':'----------','line_number':114,'multiline':False]
['text':' tail','line_number':115,'multiline':False]
['text':'----------','line_number':136,'multiline':False]
['text':' finalization','line_number':137,'multiline':False]
['text':'-----------------------------------------------------------------------------','line_number':146,'multiline':False]
['text':'----------','line_number':166,'multiline':False]
['text':' body','line_number':167,'multiline':False]
['text':'----------','line_number':214,'multiline':False]
['text':' tail','line_number':215,'multiline':False]
['text':'----------','line_number':290,'multiline':False]
['text':' finalization','line_number':291,'multiline':False]
['text':'-----------------------------------------------------------------------------','line_number':323,'multiline':False]
['text':'----------','line_number':339,'multiline':False]
['text':' body','line_number':340,'multiline':False]
['text':'----------','line_number':367,'multiline':False]
['text':' tail','line_number':368,'multiline':False]
['text':'----------','line_number':431,'multiline':False]
['text':' finalization','line_number':432,'multiline':False]
['text':' namespace caffe2','line_number':450,'multiline':False]
