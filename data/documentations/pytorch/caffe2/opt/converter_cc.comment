['text':' TODO: include all the other ways of adding these args.','line_number':18,'multiline':False]
['text':' e.g. strides, stride_h, etc.','line_number':19,'multiline':False]
['text':' namespace','line_number':56,'multiline':False]
['text':' NOLINTNEXTLINE(performance-for-range-copy)','line_number':65,'multiline':False]
['text':' Default to using the stored operator.','line_number':89,'multiline':False]
['text':' Default to using the stored operator.','line_number':103,'multiline':False]
['text':' There are literally three ways to define shapes in Conv in Caffe2','line_number':115,'multiline':False]
['text':' Does not override default converter to OperatorDef','line_number':153,'multiline':False]
['text':' NOLINTNEXTLINE(modernize-use-equals-default)','line_number':155,'multiline':False]
['text':' Does not override default converter to OperatorDef','line_number':174,'multiline':False]
['text':' NOLINTNEXTLINE(modernize-use-equals-default)','line_number':176,'multiline':False]
['text':' Does not override default converter to OperatorDef','line_number':215,'multiline':False]
['text':' NOLINTNEXTLINE(modernize-use-equals-default)','line_number':217,'multiline':False]
['text':' Does not override default converter to OperatorDef','line_number':231,'multiline':False]
['text':' NOLINTNEXTLINE(modernize-use-equals-default)','line_number':233,'multiline':False]
['text':' Does not override default converter to OperatorDef','line_number':247,'multiline':False]
['text':' NOLINTNEXTLINE(modernize-use-equals-default)','line_number':249,'multiline':False]
['text':' Does not override default converter to OperatorDef','line_number':274,'multiline':False]
['text':' NOLINTNEXTLINE(modernize-use-equals-default)','line_number':276,'multiline':False]
['text':' Does not override default converter to OperatorDef','line_number':302,'multiline':False]
['text':' NOLINTNEXTLINE(modernize-use-equals-default)','line_number':304,'multiline':False]
['text':' namespace','line_number':309,'multiline':False]
['text':' Generic attributes associated with Ops here','line_number':326,'multiline':False]
['text':'/ \brief Ingest a caffe2 protobuf model and output an NNModule.','line_number':343,'multiline':False]
['text':'/ \param net The caffe2 protobuf NetDef','line_number':344,'multiline':False]
['text':'/ \brief We keep track of the producer of the blob.','line_number':352,'multiline':False]
['text':'/ Because Caffe2 Nets are really just ordered operations','line_number':353,'multiline':False]
['text':'/ we can just keep track of the most recent producer of','line_number':354,'multiline':False]
['text':'/ a blob and draw and edge from that to any consumer we','line_number':355,'multiline':False]
['text':'/ come by. If a new operator produces the blob we simply','line_number':356,'multiline':False]
['text':'/ replace it in this map.','line_number':357,'multiline':False]
['text':'/ \brief For the construction of the control flow graph we keep track','line_number':365,'multiline':False]
['text':'/ of a current basic block, which we split up as we come across control','line_number':366,'multiline':False]
['text':'/ flow operations such as if and while.','line_number':367,'multiline':False]
['text':' Create an empty node for the operator.','line_number':371,'multiline':False]
['text':' First calculate in-edges (data dependencies).','line_number':372,'multiline':False]
['text':' If we've never seen this tensor, make one.','line_number':374,'multiline':False]
['text':' Then save outputs into the blobMap for later consumption.','line_number':389,'multiline':False]
['text':' In strict mode we ensure the input names are valid','line_number':407,'multiline':False]
['text':' Otherwise, we add the blobs to the graph as no-ops','line_number':421,'multiline':False]
['text':' We may have swapped out some of the edges.','line_number':467,'multiline':False]
['text':' Maximally preserve the order of external inputs and outputs.','line_number':498,'multiline':False]
['text':' We copy the old net rather than mutate it.','line_number':525,'multiline':False]
['text':' Simply iterate through the CFG and populate data dependencies','line_number':531,'multiline':False]
['text':' with the DFG','line_number':532,'multiline':False]
['text':' Save the operator to the net.','line_number':577,'multiline':False]
['text':' Maximally preserve the order of external inputs and outputs.','line_number':582,'multiline':False]
['text':' Reverse iterate, swapping new element in front each time','line_number':614,'multiline':False]
['text':' Note that this compensates for modifying the list inplace','line_number':649,'multiline':False]
['text':' namespace caffe2','line_number':654,'multiline':False]
