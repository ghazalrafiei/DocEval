['text':' deal with cases that inverse elements are out of feature map boundary','line_number':27,'multiline':False]
['text':' empty','line_number':29,'multiline':False]
['text':' reference in forward','line_number':63,'multiline':False]
['text':' T v1 = bottom_data[y_low * width + x_low];','line_number':64,'multiline':False]
['text':' T v2 = bottom_data[y_low * width + x_high];','line_number':65,'multiline':False]
['text':' T v3 = bottom_data[y_high * width + x_low];','line_number':66,'multiline':False]
['text':' T v4 = bottom_data[y_high * width + x_high];','line_number':67,'multiline':False]
['text':' T val = (w1 * v1 + w2 * v2 + w3 * v3 + w4 * v4);','line_number':68,'multiline':False]
['text':' (n, c, ph, pw) is an element in the pooled output','line_number':90,'multiline':False]
['text':' Do not using rounding; this implementation detail is critical','line_number':99,'multiline':False]
['text':' backward compatibility','line_number':108,'multiline':False]
['text':' Force malformed ROIs to be 1x1','line_number':109,'multiline':False]
['text':' We use roi_bin_grid to sample the grid and mimic integral','line_number':123,'multiline':False]
['text':' e.g., = 2','line_number':126,'multiline':False]
['text':' We do average (integral) pooling inside a bin','line_number':130,'multiline':False]
['text':' e.g. = 4','line_number':131,'multiline':False]
['text':' e.g., iy = 0, 1','line_number':133,'multiline':False]
['text':' e.g., 0.5, 1.5','line_number':137,'multiline':False]
['text':' if','line_number':174,'multiline':False]
['text':' ix','line_number':175,'multiline':False]
['text':' iy','line_number':176,'multiline':False]
['text':' CUDA_1D_KERNEL_LOOP','line_number':177,'multiline':False]
['text':' RoIAlignBackward','line_number':178,'multiline':False]
['text':' namespace','line_number':180,'multiline':False]
['text':' Input data to pool','line_number':184,'multiline':False]
['text':' RoIs','line_number':185,'multiline':False]
['text':' Gradient of net w.r.t. output of "forward" op','line_number':186,'multiline':False]
['text':' (aka "gradOutput")','line_number':187,'multiline':False]
['text':' Gradient of net w.r.t. input to','line_number':190,'multiline':False]
['text':' "forward" op (aka "gradInput")','line_number':191,'multiline':False]
['text':' Must zero-out dX before accumulating gradients','line_number':193,'multiline':False]
['text':' (TODO): Kaiming - is this safe?','line_number':194,'multiline':False]
['text':' Handle possibly empty gradient if there were no rois','line_number':198,'multiline':False]
['text':' namespace caffe2','line_number':228,'multiline':False]
