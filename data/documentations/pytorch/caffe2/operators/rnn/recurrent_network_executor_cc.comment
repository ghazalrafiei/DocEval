['text':'*
 * Implementation of RecurrentNetworkExecutor that uses thread pool for
 * multithreaded execution of RNNs. Used with CPU.
 ','line_number':7,'multiline':True]
['text':'*
 * Run forwardpass with T timesteps.
 ','line_number':30,'multiline':True]
['text':' NOLINTNEXTLINE(clang-diagnostic-sign-compare)','line_number':39,'multiline':False]
['text':' Launch "frontier"-ops first.','line_number':47,'multiline':False]
['text':'*
 * Run backward pass with T timesteps.
 ','line_number':57,'multiline':True]
['text':' NOLINTNEXTLINE(clang-diagnostic-sign-compare)','line_number':66,'multiline':False]
['text':' Frontier','line_number':71,'multiline':False]
['text':'*
 * Runs a single op and updates its dependencies when finished. If
 * dependent ops are ready to run, adds them to the task_queue.
 ','line_number':84,'multiline':True]
['text':'thread_id','line_number':88,'multiline':True]
['text':' Reset input dependency counter','line_number':111,'multiline':False]
['text':' Run the operator','line_number':114,'multiline':False]
['text':' Knock down dependencies and start next ops, if this','line_number':117,'multiline':False]
['text':' was last dependency fulfilled.','line_number':118,'multiline':False]
['text':' Schedule next op, if this was the last dependency. Note that on','line_number':131,'multiline':False]
['text':' first timestep we don't have recurrent inputs.','line_number':132,'multiline':False]
['text':' Decrement countdown: when at zero, we have run all ops and can','line_number':143,'multiline':False]
['text':' notify the caller thread.','line_number':144,'multiline':False]
['text':'*
 * Run-loop for executor threads: pop tasks from task_queue and execute
 * them with RunOp().
 ','line_number':152,'multiline':True]
['text':' Check for limited timestep parallelism, and if too many timesteps would','line_number':167,'multiline':False]
['text':' be started concurrently, return the task to task queue.','line_number':168,'multiline':False]
['text':' Return to queue','line_number':172,'multiline':False]
['text':' NOLINTNEXTLINE(clang-diagnostic-sign-compare)','line_number':180,'multiline':False]
['text':'*
 * Start worker threads if not started yet, wait until all tasks
 * finished, or a failure. Called by Run() and RunBackwards().
 ','line_number':199,'multiline':True]
['text':' Start threads if not started','line_number':207,'multiline':False]
['text':' NOLINTNEXTLINE(clang-diagnostic-sign-compare)','line_number':209,'multiline':False]
['text':' NOLINTNEXTLINE(modernize-use-emplace)','line_number':212,'multiline':False]
['text':' Wait until threads finish.','line_number':217,'multiline':False]
['text':' Log if we are still running, so that we catch deadlocks.. there','line_number':221,'multiline':False]
['text':' should not be any deadlocks, but...','line_number':222,'multiline':False]
['text':' namespace caffe2','line_number':237,'multiline':False]
