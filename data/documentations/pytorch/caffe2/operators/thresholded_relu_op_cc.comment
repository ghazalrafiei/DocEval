['text':' Naive implementation
  const float* Xdata = X.data<float>();
  float* Ydata = Y->template mutable_data<float>();
  for (int i = 0; i < X.size(); ++i) {
    Xdata[i] -= alpha_;
    Ydata[i] = std::max(Xdata[i], 0.0f);
  }
  ','line_number':18,'multiline':True]
['text':' Non vectorized implementation
  for (int i = 0; i < Y.size(); ++i) {
    dXdata[i] = Ydata[i] > 0 ? dYdata[i] : 0;
  }
  ','line_number':44,'multiline':True]
['text':' Input: X, output: Y','line_number':57,'multiline':False]
['text':' Input: Y, dY, output: dX','line_number':73,'multiline':False]
['text':' namespace caffe2','line_number':95,'multiline':False]
