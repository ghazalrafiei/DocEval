['text':'//////////////////////////////////////////////////////////////////////////////','line_number':15,'multiline':False]
['text':' Range reducers: can leverage that input segment is continuous and provide','line_number':16,'multiline':False]
['text':' special implementation','line_number':17,'multiline':False]
['text':'//////////////////////////////////////////////////////////////////////////////','line_number':18,'multiline':False]
['text':' Put forward and backward in the same template?','line_number':20,'multiline':False]
['text':'context','line_number':34,'multiline':True]
['text':' do we need to go through wrapper in math.h?','line_number':35,'multiline':False]
['text':'data_in','line_number':49,'multiline':True]
['text':' unused','line_number':49,'multiline':False]
['text':'data_out','line_number':50,'multiline':True]
['text':' unused','line_number':50,'multiline':False]
['text':' do we have some op that does it smartly with minimum number of memcpy?','line_number':52,'multiline':False]
['text':' Put forward and backward in the same template?','line_number':71,'multiline':False]
['text':'context','line_number':85,'multiline':True]
['text':' GO','line_number':107,'multiline':False]
['text':' GI','line_number':108,'multiline':False]
['text':' I','line_number':109,'multiline':False]
['text':' O','line_number':110,'multiline':False]
['text':'context','line_number':111,'multiline':True]
['text':'context','line_number':147,'multiline':True]
['text':' GO','line_number':169,'multiline':False]
['text':' GI','line_number':170,'multiline':False]
['text':' I','line_number':171,'multiline':False]
['text':' O','line_number':172,'multiline':False]
['text':'context','line_number':173,'multiline':True]
['text':'context','line_number':209,'multiline':True]
['text':' GO','line_number':226,'multiline':False]
['text':' GI','line_number':227,'multiline':False]
['text':'data_in','line_number':228,'multiline':True]
['text':' I','line_number':228,'multiline':False]
['text':'data_out','line_number':229,'multiline':True]
['text':' O','line_number':229,'multiline':False]
['text':'context','line_number':230,'multiline':True]
['text':'context','line_number':268,'multiline':True]
['text':' GO','line_number':285,'multiline':False]
['text':' GI','line_number':286,'multiline':False]
['text':' I','line_number':287,'multiline':False]
['text':' O','line_number':288,'multiline':False]
['text':'context','line_number':289,'multiline':True]
['text':'//////////////////////////////////////////////////////////////////////////////','line_number':322,'multiline':False]
['text':' Incremental reducers: consume elements one by one','line_number':323,'multiline':False]
['text':'//////////////////////////////////////////////////////////////////////////////','line_number':324,'multiline':False]
['text':' Base implementation, everything can be overwritten','line_number':326,'multiline':False]
['text':'meta','line_number':364,'multiline':True]
['text':'context','line_number':364,'multiline':True]
['text':' which of the original inputs are required for gradient computation','line_number':369,'multiline':False]
['text':'def','line_number':378,'multiline':True]
['text':'def','line_number':382,'multiline':True]
['text':' True if the backward op requires the output of the forward op.','line_number':386,'multiline':False]
['text':'original_input','line_number':407,'multiline':True]
['text':'value','line_number':408,'multiline':True]
['text':'input_grad','line_number':409,'multiline':True]
['text':' optional grad to populate','line_number':409,'multiline':False]
['text':'skip_dims','line_number':410,'multiline':True]
['text':' Put forward and backward in the same template?','line_number':419,'multiline':False]
['text':'context','line_number':430,'multiline':True]
['text':' add a wrapper in Context for it','line_number':432,'multiline':False]
['text':'offset','line_number':441,'multiline':True]
['text':'meta','line_number':463,'multiline':True]
['text':'context','line_number':465,'multiline':True]
['text':' static if','line_number':475,'multiline':False]
['text':'schema','line_number':497,'multiline':True]
['text':' Put forward and backward in the same template?','line_number':500,'multiline':False]
['text':'context','line_number':531,'multiline':True]
['text':' do we have a wrapper for it?','line_number':533,'multiline':False]
['text':' which of the original inputs are required for gradient computation','line_number':554,'multiline':False]
['text':' optional grad to populate','line_number':578,'multiline':False]
['text':'skip_dims','line_number':579,'multiline':True]
['text':'meta','line_number':590,'multiline':True]
['text':'context','line_number':592,'multiline':True]
['text':'length','line_number':601,'multiline':True]
['text':' Special version which is called with the main input too, used only if','line_number':606,'multiline':False]
['text':' additional input grad is requested','line_number':607,'multiline':False]
['text':'length','line_number':615,'multiline':True]
['text':'context','line_number':659,'multiline':True]
['text':'offset','line_number':670,'multiline':True]
['text':'meta','line_number':710,'multiline':True]
['text':'context','line_number':712,'multiline':True]
['text':'schema','line_number':745,'multiline':True]
['text':'context','line_number':758,'multiline':True]
['text':' add a wrapper in Context for it','line_number':760,'multiline':False]
['text':'offset','line_number':768,'multiline':True]
['text':'def','line_number':791,'multiline':True]
['text':'meta','line_number':802,'multiline':True]
['text':'context','line_number':804,'multiline':True]
['text':'offset','line_number':813,'multiline':True]
['text':'context','line_number':814,'multiline':True]
['text':'length','line_number':815,'multiline':True]
['text':'schema','line_number':834,'multiline':True]
['text':' namespace caffe2','line_number':837,'multiline':False]
['text':' CAFFE2_OPERATORS_RECUDER_FUNCTORS_H_','line_number':839,'multiline':False]
