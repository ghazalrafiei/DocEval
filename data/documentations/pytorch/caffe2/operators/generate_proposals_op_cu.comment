['text':' BBOX_XFORM_CLIP_DEFAULT','line_number':5,'multiline':False]
['text':' leading dimension of out_boxes','line_number':33,'multiline':False]
['text':' box_conv_index : # of the same box, but indexed in','line_number':39,'multiline':False]
['text':' the scores from the conv layer, of shape (A,H,W)','line_number':40,'multiline':False]
['text':' the num_images dimension was already removed','line_number':41,'multiline':False]
['text':' box_conv_index = a*K + h*W + w','line_number':42,'multiline':False]
['text':' We want to decompose box_conv_index in (a,h,w)','line_number':45,'multiline':False]
['text':' such as box_conv_index = a*K + h*W + w','line_number':46,'multiline':False]
['text':' (avoiding modulos in the process)','line_number':47,'multiline':False]
['text':' stride of A','line_number':49,'multiline':False]
['text':' stride of H','line_number':52,'multiline':False]
['text':' dW = 1','line_number':55,'multiline':False]
['text':' Loading the anchor a','line_number':57,'multiline':False]
['text':' float4 is a struct with float x,y,z,w','line_number':58,'multiline':False]
['text':' x1,y1,x2,y2 :coordinates of anchor a, shifted for position (h,w)','line_number':60,'multiline':False]
['text':' TODO use fast math when possible','line_number':68,'multiline':False]
['text':' Deltas for that box','line_number':70,'multiline':False]
['text':' Deltas of shape (num_images,4*A,K)','line_number':71,'multiline':False]
['text':' We're going to compute 4 scattered reads','line_number':72,'multiline':False]
['text':' better than the alternative, ie transposing the complete deltas','line_number':73,'multiline':False]
['text':' array first','line_number':74,'multiline':False]
['text':' Stride of K between each dimension','line_number':77,'multiline':False]
['text':' Upper bound on dw,dh','line_number':85,'multiline':False]
['text':' Applying the deltas','line_number':89,'multiline':False]
['text':' TODO fuse madd','line_number':92,'multiline':False]
['text':' Clipping box to image','line_number':104,'multiline':False]
['text':' Filter boxes','line_number':114,'multiline':False]
['text':' Removing boxes with one dim < min_size','line_number':115,'multiline':False]
['text':' (center of box is in image, because of previous step)','line_number':116,'multiline':False]
['text':' may have changed','line_number':117,'multiline':False]
['text':' We are not deleting the box right now even if !keep_box','line_number':121,'multiline':False]
['text':' we want to keep the relative order of the elements stable','line_number':122,'multiline':False]
['text':' we'll do it in such a way later','line_number':123,'multiline':False]
['text':' d_boxes_keep_flags size: (num_images,prenms_nboxes)','line_number':124,'multiline':False]
['text':' d_out_boxes size: (num_images,prenms_nboxes)','line_number':125,'multiline':False]
['text':' d_inout_scores size: (num_images,KA)','line_number':130,'multiline':False]
['text':' for NMS','line_number':132,'multiline':False]
['text':' leading dimension of out_boxes','line_number':155,'multiline':False]
['text':' box_conv_index : # of the same box, but indexed in','line_number':162,'multiline':False]
['text':' the scores from the conv layer, of shape (A,H,W)','line_number':163,'multiline':False]
['text':' the num_images dimension was already removed','line_number':164,'multiline':False]
['text':' box_conv_index = a*K + h*W + w','line_number':165,'multiline':False]
['text':' We want to decompose box_conv_index in (a,h,w)','line_number':168,'multiline':False]
['text':' such as box_conv_index = a*K + h*W + w','line_number':169,'multiline':False]
['text':' (avoiding modulos in the process)','line_number':170,'multiline':False]
['text':' stride of A','line_number':172,'multiline':False]
['text':' stride of H','line_number':175,'multiline':False]
['text':' dW = 1','line_number':178,'multiline':False]
['text':' Loading the anchor a and applying shifts.','line_number':180,'multiline':False]
['text':' RotatedBox in [ctr_x, ctr_y, w, h, angle] format.','line_number':181,'multiline':False]
['text':' Zero shift for width, height and angle.','line_number':182,'multiline':False]
['text':' x_ctr shifted for w','line_number':184,'multiline':False]
['text':' y_ctr shifted for h','line_number':185,'multiline':False]
['text':' TODO use fast math when possible','line_number':187,'multiline':False]
['text':' Deltas for that box','line_number':189,'multiline':False]
['text':' Deltas of shape (num_images,5*A,K)','line_number':190,'multiline':False]
['text':' We're going to compute 5 scattered reads','line_number':191,'multiline':False]
['text':' better than the alternative, ie transposing the complete deltas','line_number':192,'multiline':False]
['text':' array first','line_number':193,'multiline':False]
['text':' Stride of K between each dimension','line_number':195,'multiline':False]
['text':' Upper bound on dw,dh','line_number':203,'multiline':False]
['text':' Convert back to degrees','line_number':207,'multiline':False]
['text':' Applying the deltas','line_number':210,'multiline':False]
['text':' Normalize angle to be within [angle_bound_lo, angle_bound_hi].','line_number':218,'multiline':False]
['text':' Deltas are guaranteed to be <= period / 2 while computing training','line_number':219,'multiline':False]
['text':' targets by bbox_transform_inv.','line_number':220,'multiline':False]
['text':' CAFFE_ENFORCE(period > 0 && period % 180 == 0);','line_number':222,'multiline':False]
['text':' Clipping box to image.','line_number':230,'multiline':False]
['text':' Only clip boxes that are almost upright (with a tolerance of','line_number':231,'multiline':False]
['text':' clip_angle_thresh) for backward compatibility with horizontal boxes.','line_number':232,'multiline':False]
['text':' Convert from [x_ctr, y_ctr, w, h] to [x1, y1, x2, y2]','line_number':238,'multiline':False]
['text':' Clip','line_number':244,'multiline':False]
['text':' Convert back to [x_ctr, y_ctr, w, h]','line_number':250,'multiline':False]
['text':' Filter boxes.','line_number':257,'multiline':False]
['text':' Removing boxes with one dim < min_size or center outside the image.','line_number':258,'multiline':False]
['text':' We are not deleting the box right now even if !keep_box','line_number':262,'multiline':False]
['text':' we want to keep the relative order of the elements stable','line_number':263,'multiline':False]
['text':' we'll do it in such a way later','line_number':264,'multiline':False]
['text':' d_boxes_keep_flags size: (num_images,prenms_nboxes)','line_number':265,'multiline':False]
['text':' d_out_boxes size: (num_images,prenms_nboxes)','line_number':266,'multiline':False]
['text':' d_inout_scores size: (num_images,KA)','line_number':271,'multiline':False]
['text':' for NMS','line_number':273,'multiline':False]
['text':' Scattered memory accesses','line_number':290,'multiline':False]
['text':' postnms_nboxes is small anyway','line_number':291,'multiline':False]
['text':' Scattered memory accesses','line_number':314,'multiline':False]
['text':' postnms_nboxes is small anyway','line_number':315,'multiline':False]
['text':' One 1D line sets the 1D data','line_number':335,'multiline':False]
['text':' One thread sets the last+1 offset','line_number':338,'multiline':False]
['text':' namespace','line_number':345,'multiline':False]
['text':' Getting data members ready','line_number':369,'multiline':False]
['text':' We'll sort the scores','line_number':371,'multiline':False]
['text':' we want to remember their original indexes,','line_number':372,'multiline':False]
['text':' ie their indexes in the tensor of shape (num_images,A,K)','line_number':373,'multiline':False]
['text':' from the conv layer','line_number':374,'multiline':False]
['text':' each row of d_conv_layer_indexes is at first initialized to 1..A*K','line_number':375,'multiline':False]
['text':' d_image_offset[i] = i*K*A for i from 1 to num_images+1','line_number':380,'multiline':False]
['text':' Used by the segmented sort to only sort scores within one image','line_number':381,'multiline':False]
['text':' The following calls to CUB primitives do nothing','line_number':385,'multiline':False]
['text':' (because the first arg is nullptr)','line_number':386,'multiline':False]
['text':' except setting cub_*_temp_storage_bytes','line_number':387,'multiline':False]
['text':' sort all bits','line_number':403,'multiline':False]
['text':' Allocate temporary storage for CUB','line_number':406,'multiline':False]
['text':' Allocate temporary storage for CUB','line_number':423,'multiline':False]
['text':' Initialize :','line_number':428,'multiline':False]
['text':' - each row of dev_conv_layer_indexes to 1..K*A','line_number':429,'multiline':False]
['text':' - each d_nboxes to 0','line_number':430,'multiline':False]
['text':' - d_image_offset[i] = K*A*i for i 1..num_images+1','line_number':431,'multiline':False]
['text':' 2D grid','line_number':432,'multiline':False]
['text':' blockDim.y == 1','line_number':435,'multiline':False]
['text':' Sorting input scores','line_number':441,'multiline':False]
['text':' sort all bits','line_number':461,'multiline':False]
['text':' Keeping only the topN pre_nms','line_number':464,'multiline':False]
['text':' Generating the boxes associated to the topN pre_nms scores','line_number':467,'multiline':False]
['text':' blockDim.y == 1','line_number':481,'multiline':False]
['text':' blockDim.y == 1','line_number':505,'multiline':False]
['text':' Sub matrices for current image','line_number':557,'multiline':False]
['text':' Moving valid boxes (ie the ones with d_boxes_keep_flags[ibox] == true)','line_number':567,'multiline':False]
['text':' to the output tensors','line_number':568,'multiline':False]
['text':' We know prenms_boxes <= topN_prenms, because nboxes_generated <=','line_number':604,'multiline':False]
['text':' topN_prenms. Calling NMS on the generated boxes','line_number':605,'multiline':False]
['text':' All operations done after previous sort were keeping the relative order','line_number':620,'multiline':False]
['text':' of the elements the elements are still sorted keep topN <=> truncate the','line_number':621,'multiline':False]
['text':' array','line_number':622,'multiline':False]
['text':' Moving the out boxes to the output tensors,','line_number':625,'multiline':False]
['text':' adding the image_index dimension on the fly','line_number':626,'multiline':False]
['text':' Using a buffer because we cannot call ShrinkTo','line_number':660,'multiline':False]
['text':' namespace caffe2','line_number':683,'multiline':False]
