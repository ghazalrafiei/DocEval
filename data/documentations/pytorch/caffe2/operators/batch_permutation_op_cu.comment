['text':' NOTE: an alternative implementation if we want to align the index with','line_number':31,'multiline':False]
['text':' the output tensor (rather than the input tensor).','line_number':32,'multiline':False]
['text':' int idx = -1;','line_number':33,'multiline':False]
['text':' for (size_t i = 0; i < N; ++i) {','line_number':34,'multiline':False]
['text':'   if (indices[i] == n) {','line_number':35,'multiline':False]
['text':'     idx = i;','line_number':36,'multiline':False]
['text':'   }','line_number':37,'multiline':False]
['text':' }','line_number':38,'multiline':False]
['text':' CUDA_KERNEL_ASSERT2(idx >= 0);','line_number':39,'multiline':False]
['text':' CUDA_KERNEL_ASSERT2(idx < N);','line_number':40,'multiline':False]
['text':' dst[index] = src[idx * K + k];','line_number':41,'multiline':False]
['text':' namespace','line_number':50,'multiline':False]
['text':' namespace caffe2','line_number':113,'multiline':False]
