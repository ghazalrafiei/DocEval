['text':' magic float and magic int to take care of rounding','line_number':27,'multiline':False]
['text':' int magic_round(float f): interpret_int32(f + 12582912.0f) - 0x4B400000','line_number':28,'multiline':False]
['text':' Some detail:','line_number':29,'multiline':False]
['text':' 12582912.0f is 2**23 + 2**22. The trick is based on the fact that when you','line_number':30,'multiline':False]
['text':' add a small number to a large number, the result rounds to the precision of','line_number':31,'multiline':False]
['text':' the least significant bit of the large number. For IEEE-754','line_number':32,'multiline':False]
['text':' single-precision number mantissa has 23 bits, and adding 2**23 would cause','line_number':33,'multiline':False]
['text':' rounding to the nearest even integer. The we cast to int and subtract the','line_number':34,'multiline':False]
['text':' same number (0x4B400000 is the integer representation of 12582912.0f) to','line_number':35,'multiline':False]
['text':' get only the mantissa. This works if -2**22 < x < 2**22, but preserves the','line_number':36,'multiline':False]
['text':' sign for negative numbers.','line_number':37,'multiline':False]
['text':' namespace','line_number':65,'multiline':False]
['text':' namespace int8','line_number':89,'multiline':False]
['text':' namespace caffe2','line_number':91,'multiline':False]
['text':' CAFFE2_OPERATORS_INT8_QUANTIZE_OP_H_','line_number':93,'multiline':False]
