['text':' for StaticLinkingProtector','line_number':2,'multiline':False]
['text':' Keep track of stages of initialization to differentiate between','line_number':17,'multiline':False]
['text':' (a) Re-entrant calls to GlobalInit (e.g. caller registers a Caffe2 init','line_number':18,'multiline':False]
['text':' function which might in turn indirectly invoke GlobalInit).','line_number':19,'multiline':False]
['text':' (b) Successive calls to GlobalInit, which are handled as documented in','line_number':20,'multiline':False]
['text':' init.h.','line_number':21,'multiline':False]
['text':' Note that this is NOT attempting to address thread-safety, see comments','line_number':22,'multiline':False]
['text':' in init.h.','line_number':23,'multiline':False]
['text':' namespace internal','line_number':39,'multiline':False]
['text':' NOTE: if init_state == internal::State::Initializing at this point, do','line_number':53,'multiline':False]
['text':' nothing because that indicates a re-entrant call','line_number':54,'multiline':False]
['text':' Reparse command line flags','line_number':57,'multiline':False]
['text':' If an exception is thrown, go back to Uninitialized state','line_number':63,'multiline':False]
['text':' Print out the current build version. Using cerr as LOG(INFO) might be off','line_number':75,'multiline':False]
['text':' All other initialization functions.','line_number':83,'multiline':False]
['text':' TODO: if we fail GlobalInit(), should we continue?','line_number':91,'multiline':False]
['text':' This is a version of the GlobalInit where no argument is passed in.','line_number':96,'multiline':False]
['text':' On mobile devices, use this global init, since we cannot pass the','line_number':97,'multiline':False]
['text':' command line options to caffe2, no arguments are passed.','line_number':98,'multiline':False]
['text':' NOLINTNEXTLINE(modernize-avoid-c-arrays,cppcoreguidelines-avoid-c-arrays)','line_number':100,'multiline':False]
['text':' namespace caffe2','line_number':111,'multiline':False]
