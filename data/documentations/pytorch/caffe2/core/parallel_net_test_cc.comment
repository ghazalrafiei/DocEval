['text':' NOLINT','line_number':1,'multiline':False]
['text':' NOLINT','line_number':2,'multiline':False]
['text':' When measuring time, we relax the measured time by +- 40ms.','line_number':10,'multiline':False]
['text':' Even more so on Windows','line_number':14,'multiline':False]
['text':' SleepOp basically sleeps for a given number of seconds.','line_number':18,'multiline':False]
['text':' We allow arbitrary inputs and at most one output so that we can','line_number':19,'multiline':False]
['text':' test scaffolding of networks. If the output is 1, it will be filled with','line_number':20,'multiline':False]
['text':' vector<int64_t> with two elements: start time and end time.','line_number':21,'multiline':False]
['text':' NOLINTNEXTLINE(cppcoreguidelines-avoid-c-arrays,modernize-avoid-c-arrays)','line_number':53,'multiline':False]
['text':' Run a network and get its duration in milliseconds.','line_number':88,'multiline':False]
['text':' Run once to kick in potential initialization (can be slower)','line_number':96,'multiline':False]
['text':' Now run and time it','line_number':98,'multiline':False]
['text':' Inspect the time - it should be around 200 milliseconds, since sleep3 can','line_number':101,'multiline':False]
['text':' run in parallel with sleep1 and sleep2.','line_number':102,'multiline':False]
['text':' namespace','line_number':108,'multiline':False]
['text':' For sanity check, we also test the sequential time - it should take 0.35','line_number':115,'multiline':False]
['text':' seconds instead since everything has to be sequential.','line_number':116,'multiline':False]
['text':' This network has two operators reading the same blob at the same time. This','line_number':122,'multiline':False]
['text':' should not change anything and the DAG should still make sleep2 and sleep3','line_number':123,'multiline':False]
['text':' run in parallel.','line_number':124,'multiline':False]
['text':' NOLINTNEXTLINE(cppcoreguidelines-avoid-c-arrays,modernize-avoid-c-arrays)','line_number':125,'multiline':False]
['text':' For sanity check, we also test the sequential time - it should take 0.35','line_number':165,'multiline':False]
['text':' seconds instead since everything has to be sequential.','line_number':166,'multiline':False]
['text':' This network has two operators writing out the sleep2 blob. As a result, the','line_number':173,'multiline':False]
['text':' operator sleep2-again creates a write after write dependency and the whole','line_number':174,'multiline':False]
['text':' process should be sequential.','line_number':175,'multiline':False]
['text':' NOLINTNEXTLINE(cppcoreguidelines-avoid-c-arrays,modernize-avoid-c-arrays)','line_number':176,'multiline':False]
['text':' This network has an operator writing to sleep1 while another operator is','line_number':222,'multiline':False]
['text':' accessing it. As a result, the operator sleep1-again creates a write after','line_number':223,'multiline':False]
['text':' read dependency and the whole process should be sequential.','line_number':224,'multiline':False]
['text':' NOLINTNEXTLINE(cppcoreguidelines-avoid-c-arrays,modernize-avoid-c-arrays)','line_number':225,'multiline':False]
['text':' This network has an operator writing to sleep1 while another','line_number':271,'multiline':False]
['text':' operator has a control dependency on it. As a result, the operator','line_number':272,'multiline':False]
['text':' sleep1-again creates a write after read dependency and the whole','line_number':273,'multiline':False]
['text':' process should be sequential.','line_number':274,'multiline':False]
['text':' NOLINTNEXTLINE(cppcoreguidelines-avoid-c-arrays,modernize-avoid-c-arrays)','line_number':275,'multiline':False]
['text':' namespace caffe2','line_number':322,'multiline':False]
