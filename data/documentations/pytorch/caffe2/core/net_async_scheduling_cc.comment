['text':' NOLINTNEXTLINE(cppcoreguidelines-pro-type-member-init)','line_number':7,'multiline':False]
['text':' check that we do not cross device boundary','line_number':31,'multiline':False]
['text':' schedule() is not supposed to throw, all exceptions in the ops are caught','line_number':36,'multiline':False]
['text':' and reported in the end of the graph's execution, the full graph of tasks','line_number':37,'multiline':False]
['text':' is expected to be scheduled','line_number':38,'multiline':False]
['text':' Schedule a child if:','line_number':79,'multiline':False]
['text':' - there is failure, we skip an op execution and finish the job','line_number':80,'multiline':False]
['text':' - forced scheduling though always_schedule_child_','line_number':81,'multiline':False]
['text':' - finish_chain_ is set, in this case parents are','line_number':82,'multiline':False]
['text':'   guaranteed to be finished','line_number':83,'multiline':False]
['text':' - in all other cases, check parents with canSchedule','line_number':84,'multiline':False]
['text':' if DFS scheduling is enabled, run children inline,','line_number':87,'multiline':False]
['text':' ignore DFS scheduling in callbacks','line_number':88,'multiline':False]
['text':' parent is not finished yet, check if this is blocking us','line_number':103,'multiline':False]
['text':' from scheduling a child','line_number':104,'multiline':False]
['text':' we can't schedule a child because of this parent,','line_number':106,'multiline':False]
['text':' check if parent supports callback','line_number':107,'multiline':False]
['text':' one of parents failed, set failure flag and wrap up execution','line_number':125,'multiline':False]
['text':' some parents are blocking us from scheduling a child and don't','line_number':129,'multiline':False]
['text':' support callbacks, using polling','line_number':130,'multiline':False]
['text':' NOLINTNEXTLINE(modernize-avoid-bind)','line_number':134,'multiline':False]
['text':' some parents are blocking us from scheduling a child and they','line_number':138,'multiline':False]
['text':' support callbacks','line_number':139,'multiline':False]
['text':' NOLINTNEXTLINE(modernize-avoid-bind)','line_number':141,'multiline':False]
['text':' we're ready to schedule a child','line_number':146,'multiline':False]
['text':' In case of net's failure, make sure all pending tasks are finished','line_number':153,'multiline':False]
['text':' finishRun may cause waiters to wake up and destroy the net,','line_number':158,'multiline':False]
['text':' before we call finishRun we need to make sure all other (finishing)','line_number':159,'multiline':False]
['text':' tasks are done;','line_number':160,'multiline':False]
['text':' Bumping and checking the counter after the task's job is done','line_number':161,'multiline':False]
['text':' error of core scheduling and/or logic, will call terminate','line_number':168,'multiline':False]
['text':' schedule the task if:','line_number':204,'multiline':False]
['text':'  - parents are ready','line_number':205,'multiline':False]
['text':'  - we failed / cleanup started (no ops will run)','line_number':206,'multiline':False]
['text':' NOLINTNEXTLINE(modernize-avoid-bind)','line_number':213,'multiline':False]
['text':' wait for scheduled ops and make sure all events are marked as finished','line_number':220,'multiline':False]
['text':' notify observers and waiters','line_number':225,'multiline':False]
['text':' schedule() is not expected to throw, at this moment all the initial tasks','line_number':256,'multiline':False]
['text':' will be scheduled and the full graph of tasks will be executed','line_number':257,'multiline':False]
['text':' SetFinished may throw, e.g. when we call it on already finished','line_number':285,'multiline':False]
['text':' event, and in some other cases (CUDA)','line_number':286,'multiline':False]
['text':' throw and catch exception to preserve stack trace','line_number':290,'multiline':False]
['text':' ignore','line_number':297,'multiline':False]
['text':' NOLINTNEXTLINE(clang-analyzer-optin.cplusplus.VirtualCall)','line_number':304,'multiline':False]
['text':' namespace caffe2','line_number':310,'multiline':False]
