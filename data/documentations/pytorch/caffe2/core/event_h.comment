['text':' For the following functions, void* shall be interpreted as the corresponding','line_number':24,'multiline':False]
['text':' context object corresponding to the device type associated with the','line_number':25,'multiline':False]
['text':' functions.','line_number':26,'multiline':False]
['text':' Initializes event','line_number':28,'multiline':False]
['text':' Called on event to signal that CPU part of operation is finished,','line_number':31,'multiline':False]
['text':' Optionally accepts error message from CPU part.','line_number':32,'multiline':False]
['text':' Should be called no more than once per event','line_number':33,'multiline':False]
['text':' Waits and returns as soon as possible in order schedule next operation,','line_number':36,'multiline':False]
['text':' e.g. for CUDA->CUDA waits only for CPU part of CUDA op,','line_number':37,'multiline':False]
['text':' for CUDA->CPU waits till the CUDA op is fully completed.','line_number':38,'multiline':False]
['text':' Prepares context to synchronize device part of operation.','line_number':39,'multiline':False]
['text':' Can be called concurrently from multiple threads','line_number':40,'multiline':False]
['text':' Waits till operation is fully finished,','line_number':43,'multiline':False]
['text':' can be called concurrently from multiple threads','line_number':44,'multiline':False]
['text':' Queries current status of operation,','line_number':47,'multiline':False]
['text':' can be called concurrently from multiple threads','line_number':48,'multiline':False]
['text':' Sets callback that is called when event is finished','line_number':54,'multiline':False]
['text':' Nothing needs to be done in the destructor, as the event creator should','line_number':67,'multiline':False]
['text':' set the proper destruction process for the unique_ptr.','line_number':68,'multiline':False]
['text':' CAFFE2_USE_EXCEPTION_PTR','line_number':110,'multiline':False]
['text':' If parent op has succeeded, then we can run any child op;','line_number':148,'multiline':False]
['text':' If parent op is in scheduled state, we need to check that:','line_number':149,'multiline':False]
['text':'  - child op supports async scheduling','line_number':150,'multiline':False]
['text':'  - there's a way to setup synchronization between async parent and','line_number':151,'multiline':False]
['text':'    child - both child and parent should use the same type of device,','line_number':152,'multiline':False]
['text':'    non-blocking synchronization between different device types is not','line_number':153,'multiline':False]
['text':'    supported','line_number':154,'multiline':False]
['text':' If parent op is in another state (initialized or failed) then scheduling','line_number':155,'multiline':False]
['text':' is not possible','line_number':156,'multiline':False]
['text':' CAFFE2_USE_EXCEPTION_PTR','line_number':187,'multiline':False]
['text':' CAFFE2_USE_EXCEPTION_PTR','line_number':201,'multiline':False]
['text':' CAFFE2_USE_EXCEPTION_PTR','line_number':215,'multiline':False]
['text':' event_ is going to be accessed by the EventCreate/Record/Wait/Finish','line_number':218,'multiline':False]
['text':' functions, but one should not use it outside the own Event functionalities.','line_number':219,'multiline':False]
['text':' In the future we may move it to a private member.','line_number':220,'multiline':False]
['text':' CAFFE2_USE_EXCEPTION_PTR','line_number':229,'multiline':False]
['text':' namespace caffe2','line_number':374,'multiline':False]
['text':' CAFFE2_CORE_EVENT_H_','line_number':376,'multiline':False]
