['text':'/ \brief A binary graph matching algorithm based on Kahn's algorithm.','line_number':9,'multiline':False]
['text':' Topologically sorted matching subgraphs.','line_number':21,'multiline':False]
['text':' Find the initial frontier.','line_number':24,'multiline':False]
['text':' This boolean will store which type of match we are looking for.','line_number':47,'multiline':False]
['text':' If true we are looking for the condition to return true,','line_number':48,'multiline':False]
['text':' if false we are looking for the condition to return false','line_number':49,'multiline':False]
['text':' Only if we currently have a frontier should we add a subgraph to the','line_number':52,'multiline':False]
['text':' vector of matches.','line_number':53,'multiline':False]
['text':' As long as there is a frontier we continue the algorithm.','line_number':58,'multiline':False]
['text':' Swap everything if we exhausted the current frontier.','line_number':60,'multiline':False]
['text':' The main algorithm is inspired by','line_number':70,'multiline':False]
['text':' https://en.wikipedia.org/wiki/Topological_sorting#Kahn's_algorithm','line_number':71,'multiline':False]
['text':' originally written by @yinghai','line_number':72,'multiline':False]
['text':' namespace algorithm','line_number':105,'multiline':False]
['text':' namespace nom','line_number':106,'multiline':False]
['text':' NOM_GRAPH_BINARYMATCHIMPL_H','line_number':108,'multiline':False]
