['text':' using tools/ to optimize test run.','line_number':10,'multiline':False]
['text':' all test times except first two','line_number':367,'multiline':False]
['text':' An optimal sharding would look like the below, but we don't need to compute this for the test:','line_number':376,'multiline':False]
['text':' optimal_shards = [','line_number':377,'multiline':False]
['text':'     (sum_of_rest, ['super_long_test', 'long_test1']),','line_number':378,'multiline':False]
['text':'     (sum_of_rest, [i for i in self.tests if i != 'super_long_test' and i != 'long_test1']),','line_number':379,'multiline':False]
['text':' ]','line_number':380,'multiline':False]
['text':' The calculated shard should not have a ratio worse than 7/6 for num_shards = 2','line_number':386,'multiline':False]
['text':' All the tests should be represented by some shard','line_number':392,'multiline':False]
