['text':' This should just work.','line_number':14,'multiline':False]
['text':' This should never be triggered.','line_number':23,'multiline':False]
['text':' This should never be triggered.','line_number':36,'multiline':False]
['text':' arguments are expanded only once','line_number':44,'multiline':False]
['text':' namespace','line_number':57,'multiline':False]
['text':' This case is a little tricky. We have a temporary','line_number':71,'multiline':False]
['text':' std::initializer_list to which our temporary ArrayRef','line_number':72,'multiline':False]
['text':' refers. Temporary lifetime extension by binding a const reference','line_number':73,'multiline':False]
['text':' to the ArrayRef doesn't extend the lifetime of the','line_number':74,'multiline':False]
['text':' std::initializer_list, just the ArrayRef, so we end up with a','line_number':75,'multiline':False]
['text':' dangling ArrayRef. This test forces the implementation to get it','line_number':76,'multiline':False]
['text':' right.','line_number':77,'multiline':False]
['text':' namespace','line_number':101,'multiline':False]
['text':' It's not really a test but rather a convenient thing that you can run and','line_number':108,'multiline':False]
['text':' see all messages','line_number':109,'multiline':False]
['text':' ::c10::Error already does LOG(ERROR) ','line_number':117,'multiline':True]
['text':' NOLINTNEXTLINE(cppcoreguidelines-avoid-goto,hicpp-avoid-goto)','line_number':153,'multiline':False]
['text':' namespace c10_test','line_number':159,'multiline':False]
