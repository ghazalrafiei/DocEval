['text':'*
 * This is a simple bitset class with sizeof(long long int) bits.
 * You can set bits, unset bits, query bits by index,
 * and query for the first set bit.
 * Before using this class, please also take a look at std::bitset,
 * which has more functionality and is more generic. It is probably
 * a better fit for your use case. The sole reason for c10::utils::bitset
 * to exist is that std::bitset misses a find_first_set() method.
 ','line_number':13,'multiline':True]
['text':' MSVCs _BitScanForward64 expects int64_t','line_number':25,'multiline':False]
['text':' POSIX ffsll expects long long int','line_number':28,'multiline':False]
['text':' there is an issure for gcc 5.3.0 when define default function as constexpr','line_number':39,'multiline':False]
['text':' see https://gcc.gnu.org/bugzilla/show_bug.cgi?id=68754.','line_number':40,'multiline':False]
['text':' Call the given functor with the index of each bit that is set','line_number':60,'multiline':False]
['text':' -1 because find_first_set() is not one-indexed.','line_number':66,'multiline':False]
['text':' Return the index of the first set bit. The returned index is one-indexed','line_number':75,'multiline':False]
['text':' (i.e. if the very first bit is set, this function returns '1'), and a','line_number':76,'multiline':False]
['text':' return of '0' means that there was no bit set.','line_number':77,'multiline':False]
['text':' namespace utils','line_number':119,'multiline':False]
['text':' namespace c10','line_number':120,'multiline':False]
