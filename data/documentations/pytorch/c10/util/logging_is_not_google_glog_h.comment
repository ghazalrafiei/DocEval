['text':' Log severity level constants.','line_number':21,'multiline':False]
['text':' Return the stream associated with the logger object.','line_number':31,'multiline':False]
['text':' When there is a fatal log, we simply abort.','line_number':37,'multiline':False]
['text':' This class is used to explicitly ignore values in the conditional','line_number':47,'multiline':False]
['text':' logging macros.  This avoids compiler warnings like "value computed','line_number':48,'multiline':False]
['text':' is not used" and "statement has no effect".','line_number':49,'multiline':False]
['text':' This has to be an operator with a precedence lower than << but','line_number':53,'multiline':False]
['text':' higher than ?:','line_number':54,'multiline':False]
['text':' Log a message and terminate.','line_number':58,'multiline':False]
['text':' Helpers for TORCH_CHECK_NOTNULL(). Two are necessary to support both raw','line_number':64,'multiline':False]
['text':' pointers and smart pointers.','line_number':65,'multiline':False]
['text':' namespace c10','line_number':83,'multiline':False]
['text':' ---------------------- Logging Macro definitions --------------------------','line_number':85,'multiline':False]
['text':' If n is under the compile time caffe log threshold, The _CAFFE_LOG(n)','line_number':90,'multiline':False]
['text':' should not generate anything in optimized code.','line_number':91,'multiline':False]
['text':' Log with source location information override (to be used in generic','line_number':108,'multiline':False]
['text':' warning/error handlers implemented as functions, not macros)','line_number':109,'multiline':False]
['text':' Log only if condition is met.  Otherwise evaluates to void.','line_number':114,'multiline':False]
['text':' Check for a given boolean condition.','line_number':120,'multiline':False]
['text':' Debug only version of CHECK','line_number':124,'multiline':False]
['text':' NDEBUG','line_number':127,'multiline':False]
['text':' Optimized version - generates no code.','line_number':128,'multiline':False]
['text':' NDEBUG','line_number':137,'multiline':False]
['text':' TORCH_CHECK_OP macro definitions','line_number':143,'multiline':False]
['text':' Debug only versions of TORCH_CHECK_OP macros.','line_number':152,'multiline':False]
['text':' !NDEBUG','line_number':159,'multiline':False]
['text':' These versions generate no code in optimized mode.','line_number':160,'multiline':False]
['text':' NDEBUG','line_number':179,'multiline':False]
['text':' Check that a pointer is not null.','line_number':181,'multiline':False]
['text':' Debug only version of TORCH_CHECK_NOTNULL','line_number':187,'multiline':False]
['text':' !NDEBUG','line_number':191,'multiline':False]
['text':' Optimized version - generates no code.','line_number':192,'multiline':False]
['text':' NDEBUG','line_number':196,'multiline':False]
['text':' ---------------------- Support for std objects --------------------------','line_number':198,'multiline':False]
['text':' These are adapted from glog to support a limited set of logging capability','line_number':199,'multiline':False]
['text':' for STL objects.','line_number':200,'multiline':False]
['text':' Forward declare these two, and define them after all the container streams','line_number':203,'multiline':False]
['text':' operators so that we can recurse from pair -> container -> container -> pair','line_number':204,'multiline':False]
['text':' properly.','line_number':205,'multiline':False]
['text':' namespace std','line_number':208,'multiline':False]
['text':' namespace c10','line_number':213,'multiline':False]
['text':' namespace std','line_number':241,'multiline':False]
['text':' Output at most 100 elements -- appropriate if used for logging.','line_number':246,'multiline':False]
['text':' namespace c10','line_number':256,'multiline':False]
['text':' C10_UTIL_LOGGING_IS_NOT_GOOGLE_GLOG_H_','line_number':258,'multiline':False]
