['text':'===- llvm/ADT/SmallVector.cpp - 'Normally small' vectors ----------------===//','line_number':1,'multiline':False]
['text':'','line_number':2,'multiline':False]
['text':' Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.','line_number':3,'multiline':False]
['text':' See https://llvm.org/LICENSE.txt for license information.','line_number':4,'multiline':False]
['text':' SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception','line_number':5,'multiline':False]
['text':'','line_number':6,'multiline':False]
['text':'===----------------------------------------------------------------------===//','line_number':7,'multiline':False]
['text':'','line_number':8,'multiline':False]
['text':' This file implements the SmallVector class.','line_number':9,'multiline':False]
['text':'','line_number':10,'multiline':False]
['text':'===----------------------------------------------------------------------===//','line_number':11,'multiline':False]
['text':' ATen: modified from llvm::SmallVector.','line_number':13,'multiline':False]
['text':' replaced llvm::safe_malloc with std::bad_alloc','line_number':14,'multiline':False]
['text':' deleted LLVM_ENABLE_EXCEPTIONS','line_number':15,'multiline':False]
['text':' Check that no bytes are wasted and everything is well-aligned.','line_number':23,'multiline':False]
['text':' These structures may cause binary compat warnings on AIX. Suppress the','line_number':25,'multiline':False]
['text':' warning since we are only using these types for the static assertions below.','line_number':26,'multiline':False]
['text':' namespace','line_number':40,'multiline':False]
['text':'/ Report that MinSize doesn't fit into this vector's size type. Throws','line_number':64,'multiline':False]
['text':'/ std::length_error or calls report_fatal_error.','line_number':65,'multiline':False]
['text':'/ Report that this vector is already at maximum capacity. Throws','line_number':75,'multiline':False]
['text':'/ std::length_error or calls report_fatal_error.','line_number':76,'multiline':False]
['text':' Note: Moving this function into the header may cause performance regression.','line_number':85,'multiline':False]
['text':' Ensure we can fit the new capacity.','line_number':90,'multiline':False]
['text':' This is only going to be applicable when the capacity is 32 bit.','line_number':91,'multiline':False]
['text':' Ensure we can meet the guarantee of space for at least one more element.','line_number':95,'multiline':False]
['text':' The above check alone will not catch the case where grow is called with a','line_number':96,'multiline':False]
['text':' default MinSize of 0, but the current capacity cannot be increased.','line_number':97,'multiline':False]
['text':' This is only going to be applicable when the capacity is 32 bit.','line_number':98,'multiline':False]
['text':' In theory 2*capacity can overflow if the capacity is 64 bit, but the','line_number':102,'multiline':False]
['text':' original capacity would never be large enough for this to be a problem.','line_number':103,'multiline':False]
['text':' Always grow.','line_number':104,'multiline':False]
['text':' Note: Moving this function into the header may cause performance regression.','line_number':108,'multiline':False]
['text':' NOLINTNEXTLINE(cppcoreguidelines-no-malloc)','line_number':115,'multiline':False]
['text':' Note: Moving this function into the header may cause performance regression.','line_number':123,'multiline':False]
['text':' NOLINTNEXTLINE(cppcoreguidelines-no-malloc)','line_number':132,'multiline':False]
['text':' Copy the elements over.  No need to run dtors on PODs.','line_number':138,'multiline':False]
['text':' If this wasn't grown from the inline copy, grow the allocated space.','line_number':141,'multiline':False]
['text':' NOLINTNEXTLINE(cppcoreguidelines-no-malloc)','line_number':142,'multiline':False]
['text':' Disable the uint64_t instantiation for 32-bit builds.','line_number':155,'multiline':False]
['text':' Both uint32_t and uint64_t instantiations are needed for 64-bit builds.','line_number':156,'multiline':False]
['text':' This instantiation will never be used in 32-bit builds, and will cause','line_number':157,'multiline':False]
['text':' warnings when sizeof(Size_T) > sizeof(size_t).','line_number':158,'multiline':False]
['text':' Assertions to ensure this #if stays in sync with SmallVectorSizeType.','line_number':162,'multiline':False]
