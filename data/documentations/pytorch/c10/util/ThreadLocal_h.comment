['text':'*
 * Android versions with libgnustl incorrectly handle thread_local C++
 * qualifier with composite types. NDK up to r17 version is affected.
 *
 * (A fix landed on Jun 4 2018:
 * https://android-review.googlesource.com/c/toolchain/gcc/+/683601)
 *
 * In such cases, use c10::ThreadLocal<T> wrapper
 * which is `pthread_*` based with smart pointer semantics.
 *
 * In addition, convenient macro C10_DEFINE_TLS_static is available.
 * To define static TLS variable of type std::string, do the following
 * ```
 *  C10_DEFINE_TLS_static(std::string, str_tls_);
 *  ///////
 *  {
 *    *str_tls_ = "abc";
 *    assert(str_tls_->length(), 3);
 *  }
 * ```
 *
 * (see c10/test/util/ThreadLocal_test.cpp for more examples)
 ','line_number':5,'multiline':True]
['text':' defined(C10_ANDROID) && defined(__GLIBCXX__) && __GLIBCXX__ < 20180604','line_number':32,'multiline':False]
['text':' !defined(C10_PREFER_CUSTOM_THREAD_LOCAL_STORAGE)','line_number':34,'multiline':False]
['text':'*
 * @brief Temporary thread_local C++ qualifier replacement for Android
 * based on `pthread_*`.
 * To be used with composite types that provide default ctor.
 ','line_number':43,'multiline':True]
['text':' namespace c10','line_number':93,'multiline':False]
['text':' defined(C10_PREFER_CUSTOM_THREAD_LOCAL_STORAGE)','line_number':103,'multiline':False]
['text':'*
 * @brief Default thread_local implementation for non-Android cases.
 * To be used with composite types that provide default ctor.
 ','line_number':107,'multiline':True]
['text':' namespace c10','line_number':136,'multiline':False]
['text':' defined(C10_PREFER_CUSTOM_THREAD_LOCAL_STORAGE)','line_number':153,'multiline':False]
