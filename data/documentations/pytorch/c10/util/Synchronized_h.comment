['text':'*
 * A very simple Synchronization class for error-free use of data
 * in a multi-threaded context. See folly/docs/Synchronized.md for
 * the inspiration of this class.
 *
 * Full URL:
 * https://github.com/facebook/folly/blob/main/folly/docs/Synchronized.md
 *
 * This class implements a small subset of the generic functionality
 * implemented by folly:Synchronized<T>. Specifically, only withLock<T>
 * is implemented here since it's the smallest possible API that is
 * able to cover a large surface area of functionality offered by
 * folly::Synchronized<T>.
 ','line_number':9,'multiline':True]
['text':' Don't permit copy construction, move, assignment, or','line_number':33,'multiline':False]
['text':' move assignment, since the underlying std::mutex','line_number':34,'multiline':False]
['text':'  isn't necessarily copyable/moveable.','line_number':35,'multiline':False]
['text':'*
   * To use, call withLock<T> with a callback that accepts T either
   * by copy or by reference. Use the protected variable in the
   * provided callback safely.
   ','line_number':41,'multiline':True]
['text':'*
   * To use, call withLock<T> with a callback that accepts T either
   * by copy or by const reference. Use the protected variable in
   * the provided callback safely.
   ','line_number':52,'multiline':True]
['text':' end namespace c10','line_number':63,'multiline':False]
