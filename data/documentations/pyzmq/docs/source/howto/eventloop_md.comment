['text':' Eventloops and PyZMQ','line_number':3,'multiline':False]
['text':'# AsyncIO','line_number':11,'multiline':False]
['text':'# Tornado IOLoop','line_number':50,'multiline':False]
['text':'## Futures and coroutines','line_number':62,'multiline':False]
['text':'## {class}`ZMQStream`','line_number':94,'multiline':False]
['text':'### {meth}`send`','line_number':99,'multiline':False]
['text':'### {meth}`on_recv`','line_number':108,'multiline':False]
['text':'### {meth}`on_recv_stream`','line_number':140,'multiline':False]
['text':'### {meth}`flush`','line_number':166,'multiline':False]
['text':'## {func}`install()`','line_number':175,'multiline':False]
['text':' Use a ZMQ-compatible I/O loop so that we can use `ZMQStream`.','line_number':225,'multiline':False]
['text':'# PyZMQ and gevent','line_number':241,'multiline':False]
