['text':' The `_SupportsArray` protocol only cares about the default dtype','line_number':34,'multiline':False]
['text':' (i.e. `dtype=None` or no `dtype` parameter at all) of the to-be returned','line_number':35,'multiline':False]
['text':' array.','line_number':36,'multiline':False]
['text':' Concrete implementations of the protocol are responsible for adding','line_number':37,'multiline':False]
['text':' any and all remaining overloads','line_number':38,'multiline':False]
['text':' TODO: Wait until mypy supports recursive objects in combination with typevars','line_number':56,'multiline':False]
['text':' A subset of `npt.ArrayLike` that can be parametrized w.r.t. `np.generic`','line_number':65,'multiline':False]
['text':' A union representing array-like objects; consists of two typevars:','line_number':71,'multiline':False]
['text':' One representing types that can be parametrized w.r.t. `np.dtype`','line_number':72,'multiline':False]
['text':' and another one for the rest','line_number':73,'multiline':False]
['text':' `ArrayLike<X>_co`: array-like objects that can be coerced into `X`','line_number':94,'multiline':False]
['text':' given the casting rules `same_kind`','line_number':95,'multiline':False]
['text':' Extra ArrayLike type so that pyright can deal with NDArray[Any]','line_number':156,'multiline':False]
['text':' Used as the first overload, should only match NDArray[Any],','line_number':157,'multiline':False]
['text':' not any actual types.','line_number':158,'multiline':False]
['text':' https://github.com/numpy/numpy/pull/22193','line_number':159,'multiline':False]
