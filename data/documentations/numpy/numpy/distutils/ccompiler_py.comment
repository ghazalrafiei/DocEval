['text':' globals for parallel build management','line_number':31,'multiline':False]
['text':' defined in unixcompiler.py','line_number':52,'multiline':False]
['text':' dep_file is a makefile containing 'object: dependencies'','line_number':57,'multiline':False]
['text':' formatted like posix shell (spaces escaped, \ line continuations)','line_number':58,'multiline':False]
['text':' the last line contains the compiler commandline arguments as some','line_number':59,'multiline':False]
['text':' projects may compile an extension multiple times with different','line_number':60,'multiline':False]
['text':' arguments','line_number':61,'multiline':False]
['text':' check if any of the dependencies is newer than the object','line_number':77,'multiline':False]
['text':' the dependencies includes the source used to create the object','line_number':78,'multiline':False]
['text':' no object counts as newer (shouldn't happen if dep_file exists)','line_number':83,'multiline':False]
['text':' Py3k does not have unbound method anymore, MethodType does not work','line_number':90,'multiline':False]
['text':'#####################################################################','line_number':95,'multiline':False]
['text':'# Method that subclasses may redefine. But don't call this method,','line_number':96,'multiline':False]
['text':'# it i private to CCompiler class and may return unexpected','line_number':97,'multiline':False]
['text':'# results if used elsewhere. So, you have been warned..','line_number':98,'multiline':False]
['text':' Using customized CCompiler.spawn.','line_number':113,'multiline':False]
['text':' OSError doesn't have the same hooks for the exception','line_number':152,'multiline':False]
['text':' output, but exec_command() historically would use an','line_number':153,'multiline':False]
['text':' empty string for EnvironmentError (base class for','line_number':154,'multiline':False]
['text':' OSError)','line_number':155,'multiline':False]
['text':' o = b''','line_number':156,'multiline':False]
['text':' still that would make the end-user lost in translation!','line_number':157,'multiline':False]
['text':' status previously used by exec_command() for parent','line_number':163,'multiline':False]
['text':' of OSError','line_number':164,'multiline':False]
['text':' use a convenience return here so that any kind of','line_number':167,'multiline':False]
['text':' caught exception will execute the default code after the','line_number':168,'multiline':False]
['text':' try / except block, which handles various exceptions','line_number':169,'multiline':False]
['text':' Chop off the drive','line_number':215,'multiline':False]
['text':' If abs, chop off leading /','line_number':216,'multiline':False]
['text':' Resolve starting relative path components, middle ones','line_number':218,'multiline':False]
['text':' (if any) have been handled by os.path.normpath above.','line_number':219,'multiline':False]
['text':' setup semaphore to not exceed number of compile jobs when parallelized at','line_number':276,'multiline':False]
['text':' extension level (python >= 3.5)','line_number':277,'multiline':False]
['text':' check if we are currently already processing the same object','line_number':313,'multiline':False]
['text':' happens when using the same source in multiple extensions','line_number':314,'multiline':False]
['text':' need explicit lock as there is no atomic check and add with GIL','line_number':316,'multiline':False]
['text':' file not being worked on, start working','line_number':318,'multiline':False]
['text':' wait for the processing to end','line_number':322,'multiline':False]
['text':' retrieve slot from our #job semaphore and build','line_number':326,'multiline':False]
['text':' register being done processing','line_number':330,'multiline':False]
['text':' f77 objects can be built in parallel','line_number':350,'multiline':False]
['text':' build f90 modules serial, module files are generated during','line_number':352,'multiline':False]
['text':' compilation and may be used by files later in the list so the','line_number':353,'multiline':False]
['text':' ordering is important','line_number':354,'multiline':False]
['text':' build parallel','line_number':361,'multiline':False]
['text':' access result to raise errors','line_number':365,'multiline':False]
['text':' build serial','line_number':367,'multiline':False]
['text':' Return *all* object filenames, not just the ones we just built.','line_number':371,'multiline':False]
['text':' clang defaults to a non-strict floating error point model.','line_number':403,'multiline':False]
['text':' However, '-ftrapping-math' is not currently supported (2023-04-08)','line_number':404,'multiline':False]
['text':' for macosx_arm64.','line_number':405,'multiline':False]
['text':' Since NumPy and most Python libs give warnings for these, override:','line_number':406,'multiline':False]
['text':' See FCompiler.customize for suggested usage.','line_number':509,'multiline':False]
['text':' In general, distutils uses -Wstrict-prototypes, but this option is','line_number':513,'multiline':False]
['text':' not valid for C++ code, only for C.  Remove it if it's there to','line_number':514,'multiline':False]
['text':' avoid a spurious warning on every compilation.','line_number':515,'multiline':False]
['text':' check if compiler supports gcc style automatic dependencies','line_number':536,'multiline':False]
['text':' run on every extension so skip for known good compilers','line_number':537,'multiline':False]
['text':' version string may appear in the second line, so getting rid','line_number':589,'multiline':False]
['text':' of new lines:','line_number':590,'multiline':False]
['text':' match the historical returns for a parent','line_number':658,'multiline':False]
['text':' exception class caught by exec_command()','line_number':659,'multiline':False]
['text':' output isn't actually a filepath but we do this','line_number':663,'multiline':False]
['text':' for now to match previous distutils behavior','line_number':664,'multiline':False]
['text':' AIX needs the ld_so_aix script included with Python','line_number':701,'multiline':False]
['text':'This is required by i 7.4 and prievous for PRId64 in printf() call.','line_number':705,'multiline':False]
['text':'This a bug of gcc10.3, which failed to handle the TLS init.','line_number':707,'multiline':False]
['text':' On windows platforms, we want to default to mingw32 (gcc)','line_number':745,'multiline':False]
['text':' because msvc can't build blitz stuff.','line_number':746,'multiline':False]
['text':' Try first C compilers from numpy.distutils.','line_number':758,'multiline':False]
['text':' the version of this function provided by CPython allows the following','line_number':801,'multiline':False]
['text':' to return lists, which are unpacked automatically:','line_number':802,'multiline':False]
['text':' - compiler.runtime_library_dir_option','line_number':803,'multiline':False]
['text':' our version extends the behavior to:','line_number':804,'multiline':False]
['text':' - compiler.library_dir_option','line_number':805,'multiline':False]
['text':' - compiler.library_option','line_number':806,'multiline':False]
['text':' - compiler.find_library_file','line_number':807,'multiline':False]
['text':' Also fix up the various compiler modules, which do','line_number':819,'multiline':False]
['text':' from distutils.ccompiler import gen_lib_options','line_number':820,'multiline':False]
['text':' Don't bother with mwerks, as we don't support Classic Mac.','line_number':821,'multiline':False]
