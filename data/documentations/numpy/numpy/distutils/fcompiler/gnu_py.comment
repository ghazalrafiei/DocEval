['text':' XXX: handle cross compilation','line_number':19,'multiline':False]
['text':' Strip warning(s) that may be emitted by gfortran','line_number':33,'multiline':False]
['text':' Gfortran versions from after 2010 will output a simple string','line_number':38,'multiline':False]
['text':' (usually "x.y", "x.y.z" or "x.y.z-q") for ``-dumpversion``; older','line_number':39,'multiline':False]
['text':' gfortrans may still return long version strings (``-dumpversion`` was','line_number':40,'multiline':False]
['text':' an alias for ``--version``)','line_number':41,'multiline':False]
['text':' Try to find a valid version string','line_number':43,'multiline':False]
['text':' g77 provides a longer version string that starts with GNU','line_number':46,'multiline':False]
['text':' Fortran','line_number':47,'multiline':False]
['text':' gfortran only outputs a version string such as #.#.#, so check','line_number':51,'multiline':False]
['text':' if the match is at the start of the string','line_number':52,'multiline':False]
['text':' Output probably from --version, try harder:','line_number':56,'multiline':False]
['text':' the '0' is for early g77's','line_number':65,'multiline':False]
['text':' at some point in the 4.x series, the ' 95' was dropped','line_number':68,'multiline':False]
['text':' from the version string','line_number':69,'multiline':False]
['text':' If still nothing, raise an error to make the problem easy to find.','line_number':72,'multiline':False]
['text':' Use --fcompiler=gnu95 for f90 codes','line_number':86,'multiline':False]
['text':' Cygwin: f771: warning: -fPIC ignored for target (all code is','line_number':96,'multiline':False]
['text':' position independent)','line_number':97,'multiline':False]
['text':' use -mno-cygwin for g77 when Python is not Cygwin-Python','line_number':101,'multiline':False]
['text':' If MACOSX_DEPLOYMENT_TARGET is set, we simply trust the value','line_number':113,'multiline':False]
['text':' and leave it alone.  But, distutils will complain if the','line_number':114,'multiline':False]
['text':' environment's value is different from the one in the Python','line_number':115,'multiline':False]
['text':' Makefile used to build Python.  We let distutils handle this','line_number':116,'multiline':False]
['text':' error checking.','line_number':117,'multiline':False]
['text':' If MACOSX_DEPLOYMENT_TARGET is not set in the environment,','line_number':119,'multiline':False]
['text':' we try to get it first from sysconfig and then','line_number':120,'multiline':False]
['text':' fall back to setting it to 10.9 This is a reasonable default','line_number':121,'multiline':False]
['text':' even when using the official Python dist and those derived','line_number':122,'multiline':False]
['text':' from it.','line_number':123,'multiline':False]
['text':' SunOS often has dynamically loaded symbols defined in the','line_number':135,'multiline':False]
['text':' static library libg2c.a  The linker doesn't like this.  To','line_number':136,'multiline':False]
['text':' ignore the problem, use the -mimpure-text flag.  It isn't','line_number':137,'multiline':False]
['text':' the safest thing, but seems to work. 'man gcc' says:','line_number':138,'multiline':False]
['text':' ".. Instead of using -mimpure-text, you should compile all','line_number':139,'multiline':False]
['text':'  source code with -fpic or -fPIC."','line_number':140,'multiline':False]
['text':' if windows and not cygwin, libg2c lies in a different folder','line_number':181,'multiline':False]
['text':' For Macports / Linux, libgfortran and libgcc are not co-located','line_number':192,'multiline':False]
['text':' With this compiler version building Fortran BLAS/LAPACK','line_number':225,'multiline':False]
['text':' with -O3 caused failures in lib.lapack heevr,syevr tests.','line_number':226,'multiline':False]
['text':' Linux/Solaris/Unix support RPATH, Windows does not','line_number':251,'multiline':False]
['text':' TODO: could use -Xlinker here, if it's supported','line_number':254,'multiline':False]
['text':' AIX RPATH is called LIBPATH','line_number':260,'multiline':False]
['text':' gcc-4 series releases do not support -mno-cygwin option','line_number':277,'multiline':False]
['text':' use -mno-cygwin flag for gfortran when Python is not','line_number':280,'multiline':False]
['text':' Cygwin-Python','line_number':281,'multiline':False]
['text':' get arches the C compiler gets.','line_number':321,'multiline':False]
['text':' check the arches the Fortran compiler supports, and compare with','line_number':325,'multiline':False]
['text':' arch flags from C compiler','line_number':326,'multiline':False]
['text':' For Macports / Linux, libgfortran and libgcc are not co-located','line_number':359,'multiline':False]
['text':' Nothing to do','line_number':443,'multiline':False]
['text':' No PowerPC!','line_number':462,'multiline':False]
['text':' MSVC specific code','line_number':468,'multiline':False]
['text':' MSVC cannot link objects compiled by GNU fortran','line_number':477,'multiline':False]
['text':' Compile a DLL and return the lib for the DLL as','line_number':486,'multiline':False]
['text':' the object. Also keep track of previous DLLs that','line_number':487,'multiline':False]
['text':' we have compiled so that we can link against them.','line_number':488,'multiline':False]
['text':' If there are .a archives, assume they are self-contained','line_number':490,'multiline':False]
['text':' static libraries, and build separate DLLs for each','line_number':491,'multiline':False]
