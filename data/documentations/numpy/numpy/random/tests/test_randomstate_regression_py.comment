['text':' Make sure generated random variables are in [-pi, pi].','line_number':16,'multiline':False]
['text':' Regression test for ticket #986.','line_number':17,'multiline':False]
['text':' Test for ticket #921','line_number':23,'multiline':False]
['text':' Test for ticket #5623','line_number':27,'multiline':False]
['text':' Check for 32-bit systems','line_number':29,'multiline':False]
['text':' Check for 64-bit systems','line_number':33,'multiline':False]
['text':' Test for ticket #923','line_number':39,'multiline':False]
['text':' these two frequency counts should be close to theoretical','line_number':43,'multiline':False]
['text':' numbers with this large sample','line_number':44,'multiline':False]
['text':' theoretical large N result is 0.49706795','line_number':45,'multiline':False]
['text':' theoretical large N result is 0.19882718','line_number':49,'multiline':False]
['text':' Test for trac ticket #2074','line_number':55,'multiline':False]
['text':' Check that custom RandomState does not call into global state','line_number':67,'multiline':False]
['text':' If m.state is not honored, the result will change','line_number':73,'multiline':False]
['text':' Test for multivariate_normal issue with 'size' argument.','line_number':77,'multiline':False]
['text':' Check that the multivariate_normal size argument can be a','line_number':78,'multiline':False]
['text':' numpy integer.','line_number':79,'multiline':False]
['text':' Test that beta with small a and b parameters does not produce','line_number':85,'multiline':False]
['text':' NaNs due to roundoff errors causing 0 / 0, gh-5851','line_number':86,'multiline':False]
['text':' The sum of probs should be 1.0 with some tolerance.','line_number':92,'multiline':False]
['text':' For low precision dtypes the tolerance was too tight.','line_number':93,'multiline':False]
['text':' See numpy github issue 6123.','line_number':94,'multiline':False]
['text':' Test that permuting an array of different length strings','line_number':105,'multiline':False]
['text':' will not cause a segfault on garbage collection','line_number':106,'multiline':False]
['text':' Tests gh-7710','line_number':107,'multiline':False]
['text':' Force Garbage Collection - should not segfault.','line_number':115,'multiline':False]
['text':' Test that permuting an array of objects will not cause','line_number':120,'multiline':False]
['text':' a segfault on garbage collection.','line_number':121,'multiline':False]
['text':' See gh-7719','line_number':122,'multiline':False]
['text':' Force Garbage Collection - should not segfault.','line_number':129,'multiline':False]
['text':' GH 13159','line_number':156,'multiline':False]
['text':' GH 13669','line_number':162,'multiline':False]
['text':' GH 9867, now long since the NumPy default changed.','line_number':168,'multiline':False]
['text':' GH 14189','line_number':181,'multiline':False]
['text':' Regression test for gh-14522.  Ensure that future versions','line_number':190,'multiline':False]
['text':' generate the same variates as version 1.16.','line_number':191,'multiline':False]
['text':' Regression test for gh-14522.  Ensure that future versions','line_number':197,'multiline':False]
['text':' generate the same variates as version 1.16.','line_number':198,'multiline':False]
['text':' gh-20483','line_number':207,'multiline':False]
['text':' Ensure that empty p-vals are correctly handled','line_number':208,'multiline':False]
['text':' gh-20483','line_number':214,'multiline':False]
