['text':' Windows and some 32-bit platforms, e.g., ARM','line_number':28,'multiline':False]
['text':' seed must be an unsigned 32 bit integer','line_number':90,'multiline':False]
['text':' seed must be an unsigned 32 bit integer','line_number':95,'multiline':False]
['text':' gh-9832','line_number':103,'multiline':False]
['text':' Tests the corner case of n == 0 for the binomial distribution.','line_number':121,'multiline':False]
['text':' binomial(0, p) should be zero for any p in [0, 1].','line_number':122,'multiline':False]
['text':' This test addresses issue #3480.','line_number':123,'multiline':False]
['text':' Issue #4571.','line_number':130,'multiline':False]
['text':' gh-3173','line_number':148,'multiline':False]
['text':' Non-index integer types should gracefully truncate floats','line_number':187,'multiline':False]
['text':' Make sure the cached every-other-Gaussian is reset.','line_number':203,'multiline':False]
['text':' When the state is saved with a cached Gaussian, make sure the','line_number':210,'multiline':False]
['text':' cached Gaussian is restored.','line_number':211,'multiline':False]
['text':' Make sure we can accept old state tuples that do not have the','line_number':221,'multiline':False]
['text':' cached Gaussian value.','line_number':222,'multiline':False]
['text':' Ensure that the negative binomial results take floating point','line_number':233,'multiline':False]
['text':' arguments without truncation.','line_number':234,'multiline':False]
['text':' valid integer/boolean types','line_number':281,'multiline':False]
['text':' Test for ticket #1690','line_number':312,'multiline':False]
['text':' Don't use fixed seed','line_number':326,'multiline':False]
['text':' We use a sha256 hash of generated sequences of 1000 samples','line_number':341,'multiline':False]
['text':' in the range [0, 6) for all but bool, where the range','line_number':342,'multiline':False]
['text':' is [0, 2). Hashes are for little endian numbers.','line_number':343,'multiline':False]
['text':' view as little endian for hash','line_number':357,'multiline':False]
['text':' bools do not depend on endianness','line_number':366,'multiline':False]
['text':' When stored in Numpy arrays, `lbnd` is casted','line_number':397,'multiline':False]
['text':' as np.int64, and `ubnd` is casted as np.uint64.','line_number':398,'multiline':False]
['text':' Checking whether `lbnd` >= `ubnd` used to be','line_number':399,'multiline':False]
['text':' done solely via direct comparison, which is incorrect','line_number':400,'multiline':False]
['text':' because when Numpy tries to compare both numbers,','line_number':401,'multiline':False]
['text':' it casts both to np.float64 because there is','line_number':402,'multiline':False]
['text':' no integer superset of np.int64 and np.uint64. However,','line_number':403,'multiline':False]
['text':' `ubnd` is too large to be represented in np.float64,','line_number':404,'multiline':False]
['text':' causing it be round down to np.iinfo(np.int64).max,','line_number':405,'multiline':False]
['text':' leading to a ValueError because `lbnd` now equals','line_number':406,'multiline':False]
['text':' the new `ubnd`.','line_number':407,'multiline':False]
['text':' None of these function calls should','line_number':414,'multiline':False]
['text':' generate a ValueError now.','line_number':415,'multiline':False]
['text':' See gh-7203','line_number':420,'multiline':False]
['text':' The legacy random generation forces the use of "long" on this','line_number':429,'multiline':False]
['text':' branch even when the input is `int` and the default dtype','line_number':430,'multiline':False]
['text':' for int changed (dtype=int is also the functions default)','line_number':431,'multiline':False]
['text':' Make sure the random distribution returns the correct value for a','line_number':442,'multiline':False]
['text':' given seed','line_number':443,'multiline':False]
['text':' Tests whether random_integers can generate the','line_number':521,'multiline':False]
['text':' maximum allowed Python int that can be converted','line_number':522,'multiline':False]
['text':' into a C long. Previous implementations of this','line_number':523,'multiline':False]
['text':' method have thrown an OverflowError when attempting','line_number':524,'multiline':False]
['text':' to generate this integer.','line_number':525,'multiline':False]
['text':' DeprecationWarning raised with high == None','line_number':546,'multiline':False]
['text':' DeprecationWarning raised with high != None','line_number':551,'multiline':False]
['text':' gh-13087','line_number':610,'multiline':False]
['text':' Check scalar','line_number':619,'multiline':False]
['text':' Check 0-d array','line_number':631,'multiline':False]
['text':' Check multi dimensional array','line_number':644,'multiline':False]
['text':' Check zero-size','line_number':653,'multiline':False]
['text':' Test lists, arrays (of various dtypes), and multidimensional versions','line_number':684,'multiline':False]
['text':' of both, c-contiguous or not:','line_number':685,'multiline':False]
['text':' gh-11442','line_number':695,'multiline':False]
['text':' gh-4270','line_number':699,'multiline':False]
['text':' gh-3263','line_number':711,'multiline':False]
['text':' gh-3173','line_number':805,'multiline':False]
['text':' gh-2089','line_number':817,'multiline':False]
['text':' Test nbad = 0','line_number':901,'multiline':False]
['text':' Test ngood = 0','line_number':910,'multiline':False]
['text':' contiguous path:','line_number':968,'multiline':False]
['text':' non-contiguous path:','line_number':971,'multiline':False]
['text':' Check for default size, was raising deprecation warning','line_number':1000,'multiline':False]
['text':' Check that non positive-semidefinite covariance warns with','line_number':1005,'multiline':False]
['text':' RuntimeWarning','line_number':1006,'multiline':False]
['text':' and that it doesn't warn with RuntimeWarning check_valid='ignore'','line_number':1011,'multiline':False]
['text':' and that it raises with RuntimeWarning check_valid='raises'','line_number':1015,'multiline':False]
['text':' For some reason on 32-bit x86 Ubuntu 12.10 the [1, 0] entry in this','line_number':1105,'multiline':False]
['text':' matrix differs by 24 nulps. Discussion:','line_number':1106,'multiline':False]
['text':'   https://mail.python.org/pipermail/numpy-discussion/2012-September/063801.html','line_number':1107,'multiline':False]
['text':' Consensus is that this is probably some gcc quirk that affects','line_number':1108,'multiline':False]
['text':' rounding but not in any important way, so we just use a looser','line_number':1109,'multiline':False]
['text':' tolerance on this test:','line_number':1110,'multiline':False]
['text':' (fmax / 1e17) - fmin is within range, so this should not throw','line_number':1231,'multiline':False]
['text':' account for i386 extended precision DBL_MAX / 1e17 + DBL_MAX >','line_number':1232,'multiline':False]
['text':' DBL_MAX by increasing fmin a bit','line_number':1233,'multiline':False]
['text':' Tests that exceptions are correctly propagated in distributions','line_number':1237,'multiline':False]
['text':' when called with objects that throw exceptions when converted to','line_number':1238,'multiline':False]
['text':' scalars.','line_number':1239,'multiline':False]
['text':'','line_number':1240,'multiline':False]
['text':' Regression test for gh: 8865','line_number':1241,'multiline':False]
['text':' check infinite loop, gh-4720','line_number':1267,'multiline':False]
['text':' guard against changes in RandomState when Generator is fixed','line_number':1273,'multiline':False]
['text':' tests that functions that broadcast behave','line_number':1317,'multiline':False]
['text':' correctly when presented with non-scalar arguments','line_number':1318,'multiline':False]
['text':' make sure each state produces the same sequence even in threads','line_number':1905,'multiline':False]
['text':' threaded generation','line_number':1915,'multiline':False]
['text':' the same serial','line_number':1921,'multiline':False]
['text':' these platforms change x87 fpu precision mode in threads','line_number':1925,'multiline':False]
['text':' See Issue #4263','line_number':1950,'multiline':False]
['text':' p < 1.0','line_number':1969,'multiline':False]
['text':' p <= 1','line_number':1989,'multiline':False]
['text':' Ensure returned array dtype is correct for platform','line_number':2019,'multiline':False]
['text':' GH-16833','line_number':2040,'multiline':False]
['text':' Directly call reduce which is used in pickling','line_number':2052,'multiline':False]
['text':' Simulate unpickling an old pickle that only has the name','line_number':2054,'multiline':False]
['text':' GH 21808','line_number':2068,'multiline':False]
['text':' GH 21808','line_number':2079,'multiline':False]
['text':' GH 21808','line_number':2093,'multiline':False]
['text':' GH 21808','line_number':2102,'multiline':False]
