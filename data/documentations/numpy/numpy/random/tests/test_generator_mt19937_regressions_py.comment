['text':' Make sure generated random variables are in [-pi, pi].','line_number':13,'multiline':False]
['text':' Regression test for ticket #986.','line_number':14,'multiline':False]
['text':' Test for ticket #921','line_number':20,'multiline':False]
['text':' Test for ticket #5623','line_number':24,'multiline':False]
['text':' Check for 32-bit systems','line_number':25,'multiline':False]
['text':' Test for ticket #923','line_number':29,'multiline':False]
['text':' these two frequency counts should be close to theoretical','line_number':32,'multiline':False]
['text':' numbers with this large sample','line_number':33,'multiline':False]
['text':' theoretical large N result is 0.49706795','line_number':34,'multiline':False]
['text':' theoretical large N result is 0.19882718','line_number':38,'multiline':False]
['text':' Test for trac ticket #2074','line_number':44,'multiline':False]
['text':' Check that custom BitGenerator does not call into global state','line_number':56,'multiline':False]
['text':' If m.state is not honored, the result will change','line_number':61,'multiline':False]
['text':' Test for multivariate_normal issue with 'size' argument.','line_number':65,'multiline':False]
['text':' Check that the multivariate_normal size argument can be a','line_number':66,'multiline':False]
['text':' numpy integer.','line_number':67,'multiline':False]
['text':' Test that beta with small a and b parameters does not produce','line_number':73,'multiline':False]
['text':' NaNs due to roundoff errors causing 0 / 0, gh-5851','line_number':74,'multiline':False]
['text':' gh-24203: beta would hang with very small parameters.','line_number':79,'multiline':False]
['text':' gh-24266: beta would generate nan when the parameters','line_number':83,'multiline':False]
['text':' were subnormal or a small multiple of the smallest normal.','line_number':84,'multiline':False]
['text':' The sum of probs should be 1.0 with some tolerance.','line_number':90,'multiline':False]
['text':' For low precision dtypes the tolerance was too tight.','line_number':91,'multiline':False]
['text':' See numpy github issue 6123.','line_number':92,'multiline':False]
['text':' Test that permuting an array of different length strings','line_number':103,'multiline':False]
['text':' will not cause a segfault on garbage collection','line_number':104,'multiline':False]
['text':' Tests gh-7710','line_number':105,'multiline':False]
['text':' Force Garbage Collection - should not segfault.','line_number':112,'multiline':False]
['text':' Test that permuting an array of objects will not cause','line_number':117,'multiline':False]
['text':' a segfault on garbage collection.','line_number':118,'multiline':False]
['text':' See gh-7719','line_number':119,'multiline':False]
['text':' Force Garbage Collection - should not segfault.','line_number':125,'multiline':False]
['text':' Regression test for gh-17007.','line_number':161,'multiline':False]
['text':' When p = 1e-30, the probability that a sample will exceed 2**63-1','line_number':162,'multiline':False]
['text':' is 0.9999999999907766, so we expect the result to be all 2**63-1.','line_number':163,'multiline':False]
