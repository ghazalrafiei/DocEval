['text':' seed must be an unsigned 32 bit integer','line_number':33,'multiline':False]
['text':' seed must be an unsigned 32 bit integer','line_number':38,'multiline':False]
['text':' gh-9832','line_number':46,'multiline':False]
['text':' Tests the corner case of n == 0 for the binomial distribution.','line_number':56,'multiline':False]
['text':' binomial(0, p) should be zero for any p in [0, 1].','line_number':57,'multiline':False]
['text':' This test addresses issue #3480.','line_number':58,'multiline':False]
['text':' Issue #4571.','line_number':65,'multiline':False]
['text':' gh-3173','line_number':83,'multiline':False]
['text':' Make sure the cached every-other-Gaussian is reset.','line_number':116,'multiline':False]
['text':' When the state is saved with a cached Gaussian, make sure the','line_number':123,'multiline':False]
['text':' cached Gaussian is restored.','line_number':124,'multiline':False]
['text':' Make sure we can accept old state tuples that do not have the','line_number':134,'multiline':False]
['text':' cached Gaussian value.','line_number':135,'multiline':False]
['text':' Ensure that the negative binomial results take floating point','line_number':146,'multiline':False]
['text':' arguments without truncation.','line_number':147,'multiline':False]
['text':' valid integer/boolean types','line_number':155,'multiline':False]
['text':' Test for ticket #1690','line_number':186,'multiline':False]
['text':' Don't use fixed seed','line_number':200,'multiline':False]
['text':' We use a sha256 hash of generated sequences of 1000 samples','line_number':216,'multiline':False]
['text':' in the range [0, 6) for all but bool, where the range','line_number':217,'multiline':False]
['text':' is [0, 2). Hashes are for little endian numbers.','line_number':218,'multiline':False]
['text':' view as little endian for hash','line_number':232,'multiline':False]
['text':' bools do not depend on endianness','line_number':241,'multiline':False]
['text':' When stored in Numpy arrays, `lbnd` is casted','line_number':248,'multiline':False]
['text':' as np.int64, and `ubnd` is casted as np.uint64.','line_number':249,'multiline':False]
['text':' Checking whether `lbnd` >= `ubnd` used to be','line_number':250,'multiline':False]
['text':' done solely via direct comparison, which is incorrect','line_number':251,'multiline':False]
['text':' because when Numpy tries to compare both numbers,','line_number':252,'multiline':False]
['text':' it casts both to np.float64 because there is','line_number':253,'multiline':False]
['text':' no integer superset of np.int64 and np.uint64. However,','line_number':254,'multiline':False]
['text':' `ubnd` is too large to be represented in np.float64,','line_number':255,'multiline':False]
['text':' causing it be round down to np.iinfo(np.int64).max,','line_number':256,'multiline':False]
['text':' leading to a ValueError because `lbnd` now equals','line_number':257,'multiline':False]
['text':' the new `ubnd`.','line_number':258,'multiline':False]
['text':' None of these function calls should','line_number':265,'multiline':False]
['text':' generate a ValueError now.','line_number':266,'multiline':False]
['text':' See gh-7203','line_number':271,'multiline':False]
['text':' The legacy rng uses "long" as the default integer:','line_number':280,'multiline':False]
['text':' gh-7284: Ensure that we get Python data types','line_number':284,'multiline':False]
['text':' Make sure the random distribution returns the correct value for a','line_number':291,'multiline':False]
['text':' given seed','line_number':292,'multiline':False]
['text':' Tests whether random_integers can generate the','line_number':333,'multiline':False]
['text':' maximum allowed Python int that can be converted','line_number':334,'multiline':False]
['text':' into a C long. Previous implementations of this','line_number':335,'multiline':False]
['text':' method have thrown an OverflowError when attempting','line_number':336,'multiline':False]
['text':' to generate this integer.','line_number':337,'multiline':False]
['text':' DeprecationWarning raised with high == None','line_number':351,'multiline':False]
['text':' DeprecationWarning raised with high != None','line_number':356,'multiline':False]
['text':' gh-13087','line_number':412,'multiline':False]
['text':' Check scalar','line_number':421,'multiline':False]
['text':' Check 0-d array','line_number':433,'multiline':False]
['text':' Check multi dimensional array','line_number':446,'multiline':False]
['text':' Check zero-size','line_number':455,'multiline':False]
['text':' Test lists, arrays (of various dtypes), and multidimensional versions','line_number':477,'multiline':False]
['text':' of both, c-contiguous or not:','line_number':478,'multiline':False]
['text':' gh-11442','line_number':488,'multiline':False]
['text':' gh-4270','line_number':492,'multiline':False]
['text':' gh-3263','line_number':503,'multiline':False]
['text':' Create a dict works like a sequence but isn't one','line_number':519,'multiline':False]
['text':' The array was created fine, and did not modify any objects:','line_number':541,'multiline':False]
['text':' The old API gives incorrect results, but warns about it.','line_number':545,'multiline':False]
['text':' gh-18273','line_number':554,'multiline':False]
['text':' allow graceful handling of memoryviews','line_number':555,'multiline':False]
['text':' (treat the same as arrays)','line_number':556,'multiline':False]
['text':' gh-3173','line_number':612,'multiline':False]
['text':' gh-2089','line_number':624,'multiline':False]
['text':' gh-15876','line_number':628,'multiline':False]
['text':' Test nbad = 0','line_number':694,'multiline':False]
['text':' Test ngood = 0','line_number':703,'multiline':False]
['text':' Check for default size, was raising deprecation warning','line_number':778,'multiline':False]
['text':' Check that non positive-semidefinite covariance warns with','line_number':783,'multiline':False]
['text':' RuntimeWarning','line_number':784,'multiline':False]
['text':' and that it doesn't warn with RuntimeWarning check_valid='ignore'','line_number':789,'multiline':False]
['text':' and that it raises with RuntimeWarning check_valid='raises'','line_number':793,'multiline':False]
['text':' For some reason on 32-bit x86 Ubuntu 12.10 the [1, 0] entry in this','line_number':860,'multiline':False]
['text':' matrix differs by 24 nulps. Discussion:','line_number':861,'multiline':False]
['text':'   https://mail.python.org/pipermail/numpy-discussion/2012-September/063801.html','line_number':862,'multiline':False]
['text':' Consensus is that this is probably some gcc quirk that affects','line_number':863,'multiline':False]
['text':' rounding but not in any important way, so we just use a looser','line_number':864,'multiline':False]
['text':' tolerance on this test:','line_number':865,'multiline':False]
['text':' (fmax / 1e17) - fmin is within range, so this should not throw','line_number':976,'multiline':False]
['text':' account for i386 extended precision DBL_MAX / 1e17 + DBL_MAX >','line_number':977,'multiline':False]
['text':' DBL_MAX by increasing fmin a bit','line_number':978,'multiline':False]
['text':' Tests that exceptions are correctly propagated in distributions','line_number':982,'multiline':False]
['text':' when called with objects that throw exceptions when converted to','line_number':983,'multiline':False]
['text':' scalars.','line_number':984,'multiline':False]
['text':'','line_number':985,'multiline':False]
['text':' Regression test for gh: 8865','line_number':986,'multiline':False]
['text':' check infinite loop, gh-4720','line_number':1014,'multiline':False]
['text':' tests that functions that broadcast behave','line_number':1050,'multiline':False]
['text':' correctly when presented with non-scalar arguments','line_number':1051,'multiline':False]
['text':' TODO: Include test for randint once it can broadcast','line_number':1058,'multiline':False]
['text':' Can steal the test written in PR #6938','line_number':1059,'multiline':False]
['text':' make sure each state produces the same sequence even in threads','line_number':1621,'multiline':False]
['text':' threaded generation','line_number':1631,'multiline':False]
['text':' the same serial','line_number':1637,'multiline':False]
['text':' these platforms change x87 fpu precision mode in threads','line_number':1641,'multiline':False]
['text':' See Issue #4263','line_number':1663,'multiline':False]
['text':' p < 1.0','line_number':1682,'multiline':False]
['text':' p <= 1','line_number':1702,'multiline':False]
