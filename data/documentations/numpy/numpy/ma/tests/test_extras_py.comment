['text':' pylint: disable-msg=W0611, W0612, W0511','line_number':1,'multiline':False]
['text':'','line_number':37,'multiline':False]
['text':' Tests masked_all','line_number':39,'multiline':False]
['text':' Standard dtype','line_number':40,'multiline':False]
['text':' Flexible dtype','line_number':44,'multiline':False]
['text':' Nested dtype','line_number':54,'multiline':False]
['text':' Test masked_all works with nested array with dtype of an 'object'','line_number':69,'multiline':False]
['text':' refers to issue #15895','line_number':70,'multiline':False]
['text':' same as above except that the array is not nested','line_number':81,'multiline':False]
['text':' Tests masked_all','line_number':91,'multiline':False]
['text':' Standard dtype','line_number':92,'multiline':False]
['text':' Flexible dtype','line_number':97,'multiline':False]
['text':' Nested dtype','line_number':103,'multiline':False]
['text':' Test clump_masked','line_number':127,'multiline':False]
['text':'','line_number':130,'multiline':False]
['text':' Test clump_unmasked','line_number':138,'multiline':False]
['text':' Test flatnotmasked_contiguous','line_number':148,'multiline':False]
['text':' No mask','line_number':150,'multiline':False]
['text':' mask of all false','line_number':153,'multiline':False]
['text':' Some mask','line_number':156,'multiline':False]
['text':'','line_number':160,'multiline':False]
['text':' Several tests of average. Why so many ? Good point...','line_number':167,'multiline':False]
['text':' Test of average.','line_number':169,'multiline':False]
['text':' More tests of average.','line_number':188,'multiline':False]
['text':' Yet more tests of average!','line_number':222,'multiline':False]
['text':' Test that `keepdims` works with average','line_number':246,'multiline':False]
['text':' Test average on integers with mask','line_number':255,'multiline':False]
['text':' Test with complex data.','line_number':262,'multiline':False]
['text':' (Regression test for https://github.com/numpy/numpy/issues/2684)','line_number':263,'multiline':False]
['text':' Test with the 'weights' argument.','line_number':285,'multiline':False]
['text':' Test with masked weights.','line_number':329,'multiline':False]
['text':' (Regression test for https://github.com/numpy/numpy/issues/10438)','line_number':330,'multiline':False]
['text':' weights should be masked if needed','line_number':345,'multiline':False]
['text':' depending on the array mask. This is to avoid summing','line_number':346,'multiline':False]
['text':' masked nan or other values that are not cancelled by a zero','line_number':347,'multiline':False]
['text':' Tests for mr_, the equivalent of r_ for masked arrays.','line_number':373,'multiline':False]
['text':' Tests mr_ on 1D arrays.','line_number':376,'multiline':False]
['text':' Tests mr_ on 2D arrays.','line_number':387,'multiline':False]
['text':' append columns','line_number':394,'multiline':False]
['text':' Tests notmasked_edges and notmasked_contiguous.','line_number':417,'multiline':False]
['text':' Tests unmasked_edges','line_number':420,'multiline':False]
['text':'','line_number':435,'multiline':False]
['text':'','line_number':444,'multiline':False]
['text':' Tests notmasked_contiguous','line_number':454,'multiline':False]
['text':'','line_number':477,'multiline':False]
['text':' Tests compress_nd','line_number':489,'multiline':False]
['text':' axis=None','line_number':495,'multiline':False]
['text':' axis=0','line_number':504,'multiline':False]
['text':' axis=1','line_number':515,'multiline':False]
['text':' axis=2','line_number':534,'multiline':False]
['text':' axis=(0, 1)','line_number':556,'multiline':False]
['text':' axis=(1, 2)','line_number':567,'multiline':False]
['text':' axis=(0, 2)','line_number':586,'multiline':False]
['text':' Tests compress_rowcols','line_number':601,'multiline':False]
['text':' Tests mask_rowcols.','line_number':621,'multiline':False]
['text':' Test deprecation of the axis argument to `mask_rows` and `mask_cols`','line_number':656,'multiline':False]
['text':' Tests dot product','line_number':665,'multiline':False]
['text':'','line_number':667,'multiline':False]
['text':'','line_number':679,'multiline':False]
['text':'','line_number':692,'multiline':False]
['text':'','line_number':700,'multiline':False]
['text':'','line_number':711,'multiline':False]
['text':'','line_number':722,'multiline':False]
['text':'','line_number':733,'multiline':False]
['text':'','line_number':754,'multiline':False]
['text':'','line_number':766,'multiline':False]
['text':' See gh-6611','line_number':776,'multiline':False]
['text':' Tests 2D functions','line_number':793,'multiline':False]
['text':' Tests kwargs functions','line_number':803,'multiline':False]
['text':' Tests apply_over_axes','line_number':815,'multiline':False]
['text':' test that even which computes handles inf / x = masked','line_number':833,'multiline':False]
['text':' all masked','line_number':840,'multiline':False]
['text':' integer','line_number':860,'multiline':False]
['text':' float','line_number':865,'multiline':False]
['text':' Valid axis values should not raise exception','line_number':892,'multiline':False]
['text':' Invalid axis values should raise exception','line_number':900,'multiline':False]
['text':' Check values','line_number':911,'multiline':False]
['text':' integer','line_number':934,'multiline':False]
['text':' float','line_number':939,'multiline':False]
['text':' integer','line_number':944,'multiline':False]
['text':' float','line_number':949,'multiline':False]
['text':' Tests median w/ 2D','line_number':960,'multiline':False]
['text':' Tests median w/ 2D arrays and different axis.','line_number':976,'multiline':False]
['text':' Tests median w/ 3D','line_number':988,'multiline':False]
['text':' integer float even odd','line_number':1004,'multiline':False]
['text':' integer float even odd','line_number':1018,'multiline':False]
['text':' Randomly set some elements to True:','line_number':1046,'multiline':False]
['text':' scalar result','line_number':1076,'multiline':False]
['text':' no axis','line_number':1124,'multiline':False]
['text':' axis0','line_number':1128,'multiline':False]
['text':' axis1','line_number':1134,'multiline':False]
['text':' axis02','line_number':1140,'multiline':False]
['text':' 255 is max value, used as filler for sort','line_number':1147,'multiline':False]
['text':' no mask','line_number':1170,'multiline':False]
['text':' empty arrays','line_number':1199,'multiline':False]
['text':' multiple dimensions','line_number':1206,'multiline':False]
['text':' no axis','line_number':1208,'multiline':False]
['text':' axis 0 and 1','line_number':1215,'multiline':False]
['text':' axis 2','line_number':1220,'multiline':False]
['text':' Test cov on 1D variable w/o missing values','line_number':1240,'multiline':False]
['text':' Test cov on 1 2D variable w/o missing values','line_number':1248,'multiline':False]
['text':' Test cov 1 1D variable w/missing values','line_number':1256,'multiline':False]
['text':'','line_number':1265,'multiline':False]
['text':'','line_number':1270,'multiline':False]
['text':' 2 1D variables w/ missing values','line_number':1271,'multiline':False]
['text':' Test cov on 2D variable w/ missing value','line_number':1280,'multiline':False]
['text':' ddof raises DeprecationWarning','line_number':1308,'multiline':False]
['text':' ddof has no or negligible effect on the function','line_number':1316,'multiline':False]
['text':' bias raises DeprecationWarning','line_number':1326,'multiline':False]
['text':' bias has no or negligible effect on the function','line_number':1333,'multiline':False]
['text':' Test cov on 1D variable w/o missing values','line_number':1337,'multiline':False]
['text':' Test corrcoef on 1 2D variable w/o missing values','line_number':1348,'multiline':False]
['text':' Test corrcoef 1 1D variable w/missing values','line_number':1359,'multiline':False]
['text':' 2 1D variables w/ missing values','line_number':1375,'multiline':False]
['text':' ddof and bias have no or negligible effect on the function','line_number':1382,'multiline':False]
['text':' Test corrcoef on 2D variable w/ missing value','line_number':1389,'multiline':False]
['text':' ddof and bias have no or negligible effect on the function','line_number':1399,'multiline':False]
['text':'','line_number':1409,'multiline':False]
['text':' Tests polyfit','line_number':1411,'multiline':False]
['text':' On ndarrays','line_number':1412,'multiline':False]
['text':' ON 1D maskedarrays','line_number':1416,'multiline':False]
['text':'','line_number':1421,'multiline':False]
['text':'','line_number':1427,'multiline':False]
['text':'','line_number':1432,'multiline':False]
['text':'','line_number':1437,'multiline':False]
['text':' Test unique on list','line_number':1469,'multiline':False]
['text':' Test unique on masked data w/use_mask=True','line_number':1478,'multiline':False]
['text':'','line_number':1484,'multiline':False]
['text':' Test all masked','line_number':1494,'multiline':False]
['text':'','line_number':1500,'multiline':False]
['text':' Test masked','line_number':1501,'multiline':False]
['text':' Tests mediff1d','line_number':1509,'multiline':False]
['text':' Test ediff1d w/ to_begin','line_number':1518,'multiline':False]
['text':'','line_number':1525,'multiline':False]
['text':' Test ediff1d w/ to_end','line_number':1533,'multiline':False]
['text':'','line_number':1540,'multiline':False]
['text':' Test ediff1d w/ to_begin and to_end','line_number':1548,'multiline':False]
['text':'','line_number':1555,'multiline':False]
['text':' Test ediff1d w/ a ndarray','line_number':1564,'multiline':False]
['text':'','line_number':1572,'multiline':False]
['text':' Test intersect1d','line_number':1580,'multiline':False]
['text':' Test setxor1d','line_number':1588,'multiline':False]
['text':'','line_number':1593,'multiline':False]
['text':'','line_number':1598,'multiline':False]
['text':'','line_number':1604,'multiline':False]
['text':'','line_number':1610,'multiline':False]
['text':' the tests for in1d cover most of isin's behavior','line_number':1614,'multiline':False]
['text':' if in1d is removed, would need to change those tests to test','line_number':1615,'multiline':False]
['text':' isin instead.','line_number':1616,'multiline':False]
['text':'compare results of np.isin to ma.isin','line_number':1630,'multiline':False]
['text':' Test in1d','line_number':1635,'multiline':False]
['text':'','line_number':1640,'multiline':False]
['text':'','line_number':1645,'multiline':False]
['text':' Test in1d's invert parameter','line_number':1649,'multiline':False]
['text':' Test union1d','line_number':1661,'multiline':False]
['text':' Tests gh-10340, arguments to union1d should be','line_number':1668,'multiline':False]
['text':' flattened if they are not already 1D','line_number':1669,'multiline':False]
['text':'','line_number':1675,'multiline':False]
['text':' Test setdiff1d','line_number':1679,'multiline':False]
['text':'','line_number':1684,'multiline':False]
['text':' Test setdiff1d_charray','line_number':1692,'multiline':False]
['text':' Test atleast_2d','line_number':1701,'multiline':False]
['text':' the atleast and diagflat function should work with scalars','line_number':1711,'multiline':False]
['text':' GitHub issue #3367','line_number':1712,'multiline':False]
['text':' Additionally, the atleast functions should accept multiple scalars','line_number':1713,'multiline':False]
['text':' correctly','line_number':1714,'multiline':False]
['text':' 2D','line_number':1830,'multiline':False]
['text':' 4D','line_number':1851,'multiline':False]
