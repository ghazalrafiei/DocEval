['text':' Ticket #3','line_number':25,'multiline':False]
['text':' Ticket #7','line_number':30,'multiline':False]
['text':' Ticket #16','line_number':34,'multiline':False]
['text':' Ticket #35','line_number':44,'multiline':False]
['text':' Should succeed','line_number':45,'multiline':False]
['text':' Ticket #40','line_number':49,'multiline':False]
['text':' Ticket #43','line_number':53,'multiline':False]
['text':' Check that nothing is done when order='F' and array C/F-contiguous','line_number':59,'multiline':False]
['text':' Check that ravel works when order='F' and array C/F-contiguous','line_number':64,'multiline':False]
['text':' Ticket #47','line_number':69,'multiline':False]
['text':' Ticket #49','line_number':76,'multiline':False]
['text':' Ticket #50','line_number':84,'multiline':False]
['text':' Ticket #58.','line_number':93,'multiline':False]
['text':' Ticket #60','line_number':103,'multiline':False]
['text':' Should succeed','line_number':104,'multiline':False]
['text':' Ticket #64','line_number':107,'multiline':False]
['text':' Ticket #65','line_number':114,'multiline':False]
['text':' Ticket #67','line_number':121,'multiline':False]
['text':' Trac Ticket #72','line_number':126,'multiline':False]
['text':' https://github.com/numpy/numpy/issues/565','line_number':127,'multiline':False]
['text':' Ticket #79','line_number':137,'multiline':False]
['text':' Should succeed.','line_number':141,'multiline':False]
['text':' Ticket #86','line_number':144,'multiline':False]
['text':' Ticket #93','line_number':149,'multiline':False]
['text':' Ticket #105','line_number':154,'multiline':False]
['text':' GitHub issue #369','line_number':167,'multiline':False]
['text':' Ticket #2185','line_number':177,'multiline':False]
['text':' Ticket #106','line_number':193,'multiline':False]
['text':' Dummy array to detect bad memory access:','line_number':196,'multiline':False]
['text':' Do the same for the built-in dot:','line_number':202,'multiline':False]
['text':' Ticket #111','line_number':207,'multiline':False]
['text':' Ticket #119','line_number':251,'multiline':False]
['text':' Should succeed','line_number':254,'multiline':False]
['text':' Ticket #126','line_number':257,'multiline':False]
['text':' Ticket #128','line_number':262,'multiline':False]
['text':' Ticket #133','line_number':268,'multiline':False]
['text':' Ticket #143','line_number':275,'multiline':False]
['text':' Check that numpy float and python longs can be added correctly.','line_number':279,'multiline':False]
['text':' Ticket #151','line_number':284,'multiline':False]
['text':' Ticket #160','line_number':288,'multiline':False]
['text':' Ticket #190','line_number':296,'multiline':False]
['text':' Fix in r2836','line_number':302,'multiline':False]
['text':' Create non-contiguous Fortran ordered array','line_number':303,'multiline':False]
['text':' Correct behaviour of ticket #194','line_number':308,'multiline':False]
['text':' Ticket #194','line_number':316,'multiline':False]
['text':' See also Issue gh-2870, test for non-array assignment','line_number':333,'multiline':False]
['text':' and equivalent unsafe casted array assignment','line_number':334,'multiline':False]
['text':' Only warns','line_number':342,'multiline':False]
['text':' Implemented in r2840','line_number':345,'multiline':False]
['text':' Ticket #196','line_number':355,'multiline':False]
['text':' Wrong way','line_number':357,'multiline':False]
['text':' Correct way','line_number':359,'multiline':False]
['text':' Ticket #202','line_number':363,'multiline':False]
['text':' Ticket #205','line_number':371,'multiline':False]
['text':' Ticket #222','line_number':380,'multiline':False]
['text':' Ticket #239','line_number':387,'multiline':False]
['text':' Ticket #243','line_number':396,'multiline':False]
['text':' Ticket #246','line_number':403,'multiline':False]
['text':' Lexsort memory error','line_number':409,'multiline':False]
['text':' Issue gh-4123','line_number':414,'multiline':False]
['text':' Ticket #14228','line_number':425,'multiline':False]
['text':' Works','line_number':427,'multiline':False]
['text':' Was: MemoryError','line_number':430,'multiline':False]
['text':' a void dtype with no fields','line_number':449,'multiline':False]
['text':' Check that arrays and scalars pickled on Py2 are','line_number':455,'multiline':False]
['text':' unpickleable on Py3 using encoding='bytes'','line_number':456,'multiline':False]
['text':' (original, py2_pickle)','line_number':459,'multiline':False]
['text':' noqa','line_number':462,'multiline':False]
['text':' noqa','line_number':467,'multiline':False]
['text':' noqa','line_number':472,'multiline':False]
['text':' Ticket #251','line_number':485,'multiline':False]
['text':' Ticket #265','line_number':490,'multiline':False]
['text':' Ticket #270 (gh-868)','line_number':497,'multiline':False]
['text':' Ticket #273','line_number':501,'multiline':False]
['text':' Make sure methods and functions have same default axis','line_number':515,'multiline':False]
['text':' keyword and arguments','line_number':516,'multiline':False]
['text':' Ticket #298','line_number':550,'multiline':False]
['text':' Ticket #302','line_number':555,'multiline':False]
['text':' Ticket #312','line_number':560,'multiline':False]
['text':' Ticket #322','line_number':568,'multiline':False]
['text':' Ticket #324','line_number':580,'multiline':False]
['text':' Issue #465 and related checks','line_number':586,'multiline':False]
['text':' Ticket #327','line_number':593,'multiline':False]
['text':' Ticket #330','line_number':598,'multiline':False]
['text':' Ticket #334','line_number':602,'multiline':False]
['text':' Ticket #335','line_number':606,'multiline':False]
['text':' Ticket #341','line_number':610,'multiline':False]
['text':' Ticket #342','line_number':614,'multiline':False]
['text':' Ticket #344','line_number':619,'multiline':False]
['text':' Make sure reshape order works.','line_number':625,'multiline':False]
['text':' Issue #380, test reshaping of zero strided arrays','line_number':633,'multiline':False]
['text':' GitHub Issue #2700, setting shape failed for 0-sized arrays','line_number':639,'multiline':False]
['text':' GitHub issue gh-2949, bad strides for trailing ones of new shape','line_number':644,'multiline':False]
['text':' not contiguous','line_number':645,'multiline':False]
['text':' Ticket #352','line_number':653,'multiline':False]
['text':' Make sure optimization is not called in this case.','line_number':658,'multiline':False]
['text':' Ticket #372','line_number':668,'multiline':False]
['text':' Ticket #374','line_number':679,'multiline':False]
['text':' Changeset #3443','line_number':686,'multiline':False]
['text':' Ticket #413','line_number':694,'multiline':False]
['text':' Convolve should raise an error for empty input array.','line_number':705,'multiline':False]
['text':' Ticket #449','line_number':710,'multiline':False]
['text':' Changeset 3557','line_number':716,'multiline':False]
['text':' Ticket #483','line_number':721,'multiline':False]
['text':' Ensure that 'take' honours output parameter.','line_number':726,'multiline':False]
['text':' Issue gh-3001','line_number':734,'multiline':False]
['text':' Ticket #501','line_number':747,'multiline':False]
['text':' Should succeed','line_number':750,'multiline':False]
['text':' Ticket #503','line_number':753,'multiline':False]
['text':' Ticket #514','line_number':762,'multiline':False]
['text':' Ticket #516','line_number':768,'multiline':False]
['text':' Should succeed','line_number':770,'multiline':False]
['text':' Ticket #540','line_number':773,'multiline':False]
['text':' Ticket #546','line_number':778,'multiline':False]
['text':' Ticket #555','line_number':783,'multiline':False]
['text':' Ticket #562','line_number':788,'multiline':False]
['text':' Ticket #588','line_number':798,'multiline':False]
['text':' This used to trigger the object-type version of','line_number':806,'multiline':False]
['text':' the bitwise_or operation, because float64 -> object','line_number':807,'multiline':False]
['text':' casting succeeds','line_number':808,'multiline':False]
['text':' Ticket #600','line_number':817,'multiline':False]
['text':' Ticket #616','line_number':825,'multiline':False]
['text':' Old special case (different code path):','line_number':842,'multiline':False]
['text':' Ticket #603','line_number':847,'multiline':False]
['text':' Check argsort for strings containing zeros.','line_number':865,'multiline':False]
['text':' Check sort for strings containing zeros.','line_number':871,'multiline':False]
['text':' Ticket #658','line_number':877,'multiline':False]
['text':' Ticket #657','line_number':881,'multiline':False]
['text':' Ticket #658','line_number':896,'multiline':False]
['text':' Ticket #633','line_number':900,'multiline':False]
['text':' NB. this is probably CPython-specific','line_number':904,'multiline':False]
['text':' -- 0d -> 1-d broadcast slice assignment','line_number':916,'multiline':False]
['text':' -- 1-d -> 2-d broadcast slice assignment','line_number':933,'multiline':False]
['text':' -- 2-d copying + flattening','line_number':952,'multiline':False]
['text':' -- concatenate, repeat, take, choose','line_number':975,'multiline':False]
['text':' Avoid pyflakes unused variable warning','line_number':1000,'multiline':False]
['text':' Ticket 702','line_number':1003,'multiline':False]
['text':' Should succeed','line_number':1009,'multiline':False]
['text':' Ticket #711','line_number':1012,'multiline':False]
['text':' refcount of 'd' might hit zero here','line_number':1023,'multiline':False]
['text':' trying to induce a segfault by doing it again...','line_number':1025,'multiline':False]
['text':' Ticket #713','line_number':1034,'multiline':False]
['text':' Ticket #714','line_number':1041,'multiline':False]
['text':' Non-native endian arrays were incorrectly filled with scalars','line_number':1045,'multiline':False]
['text':' before r5034.','line_number':1046,'multiline':False]
['text':' Test for ticket #551, changeset r5140','line_number':1056,'multiline':False]
['text':' y is now typically not aligned on a 8-byte boundary','line_number':1060,'multiline':False]
['text':' This shouldn't cause a segmentation fault:','line_number':1062,'multiline':False]
['text':' Ticket #788, changeset r5155','line_number':1066,'multiline':False]
['text':' The test data file was generated by scipy.io.savemat.','line_number':1067,'multiline':False]
['text':' The dtype is float64, but the isbuiltin attribute is 0.','line_number':1068,'multiline':False]
['text':' Ticket #789, changeset 5217.','line_number':1078,'multiline':False]
['text':' compress with out argument segfaulted if cannot cast safely','line_number':1079,'multiline':False]
['text':' Ticket #791','line_number':1092,'multiline':False]
['text':' These methods do not preserve subclasses','line_number':1157,'multiline':False]
['text':' Ticket #793, changeset r5215','line_number':1162,'multiline':False]
['text':' Comparisons fail for NaN, so we can't use random memory','line_number':1163,'multiline':False]
['text':' for the test.','line_number':1164,'multiline':False]
['text':' Make sure that .item() fails graciously when it should','line_number':1172,'multiline':False]
['text':' Ticket #825','line_number':1182,'multiline':False]
['text':' Ticket 794.','line_number':1190,'multiline':False]
['text':' Ticket #674','line_number':1198,'multiline':False]
['text':' Ticket #816','line_number':1208,'multiline':False]
['text':' Ticket #840 - order should be an invalid keyword.','line_number':1222,'multiline':False]
['text':' No ticket','line_number':1236,'multiline':False]
['text':'Issue #1550','line_number':1244,'multiline':False]
['text':'Create test string data, construct void scalar from data and assert','line_number':1246,'multiline':False]
['text':'that void scalar contains original data.','line_number':1247,'multiline':False]
['text':'Create record scalar, construct from data and assert that','line_number':1254,'multiline':False]
['text':'reconstructed scalar is correct.','line_number':1255,'multiline':False]
['text':' Test pickle and unpickle of void and record scalars','line_number':1262,'multiline':False]
['text':' Ticket #950','line_number':1271,'multiline':False]
['text':' Try to ensure that x->data contains non-zero floats','line_number':1275,'multiline':False]
['text':' `dot` should just return zero (m, n) matrix','line_number':1287,'multiline':False]
['text':' Regression test for #1061.','line_number':1293,'multiline':False]
['text':' Set a size which cannot fit into a 64 bits signed integer','line_number':1294,'multiline':False]
['text':' Regression test for #1062.','line_number':1301,'multiline':False]
['text':' Set a size which cannot fit into a 64 bits signed integer','line_number':1302,'multiline':False]
['text':' Ticket #1058','line_number':1310,'multiline':False]
['text':' Ticket #1078: segfaults when creating an array with a sequence of','line_number':1317,'multiline':False]
['text':' 0d arrays.','line_number':1318,'multiline':False]
['text':' Ticket #1081: weird array with strange input...','line_number':1332,'multiline':False]
['text':' Ticket #1080.','line_number':1338,'multiline':False]
['text':' Ticket #1106.','line_number':1343,'multiline':False]
['text':' Ticket #1217, don't segfault.','line_number':1350,'multiline':False]
['text':' Ticket #1235.','line_number':1357,'multiline':False]
['text':' Ticket #1240.','line_number':1370,'multiline':False]
['text':' gh-15790','line_number':1377,'multiline':False]
['text':' Ticket #1198 and #1267','line_number':1396,'multiline':False]
['text':' Ticket #1267','line_number':1410,'multiline':False]
['text':' Ticket #1267','line_number':1417,'multiline':False]
['text':' This didn't require a fix, but it's worth testing anyway, because','line_number':1418,'multiline':False]
['text':' it may fail if .dot stops enforcing the arrays to be BEHAVED','line_number':1419,'multiline':False]
['text':' Ticket #1259 and gh-441','line_number':1425,'multiline':False]
['text':' always native-endian','line_number':1428,'multiline':False]
['text':' little-endian machine','line_number':1431,'multiline':False]
['text':' big-endian machine','line_number':1434,'multiline':False]
['text':' double check real and imaginary parts:','line_number':1436,'multiline':False]
['text':' Ticket #1299','line_number':1441,'multiline':False]
['text':' Ticket #1299 second test','line_number':1454,'multiline':False]
['text':' Ticket #1254','line_number':1465,'multiline':False]
['text':' Ticket #1317.','line_number':1470,'multiline':False]
['text':' Bug #1436; the following should succeed','line_number':1489,'multiline':False]
['text':' Check if log1p is behaving on 32 bit intel systems.','line_number':1493,'multiline':False]
['text':' Ticket #1345: the following should not cause a crash','line_number':1503,'multiline':False]
['text':' not x[0] because it is unordered','line_number':1511,'multiline':False]
['text':' Check that the out= argument in var and std has an effect','line_number':1535,'multiline':False]
['text':' ticket #1563','line_number':1552,'multiline':False]
['text':' shouldn't raise an exception','line_number':1558,'multiline':False]
['text':' ticket #1548','line_number':1562,'multiline':False]
['text':' ticket #939','line_number':1571,'multiline':False]
['text':' On Python 3, tofile/fromfile used to get (#1610) the Python','line_number':1585,'multiline':False]
['text':' file handle out of sync','line_number':1586,'multiline':False]
['text':' Ticket #2218','line_number':1625,'multiline':False]
['text':' should not cause a segmentation fault','line_number':1639,'multiline':False]
['text':' From e-mail thread "__eq__ with str and object" (Keith Goodman)','line_number':1643,'multiline':False]
['text':' [0] if nonzero() ignores swap','line_number':1655,'multiline':False]
['text':' The second use of itemsize was throwing an exception because in','line_number':1663,'multiline':False]
['text':' ctors.c, discover_itemsize was calling PyObject_Length without','line_number':1664,'multiline':False]
['text':' checking the return code.  This failed to get the length of the','line_number':1665,'multiline':False]
['text':' number 2, and the exception hung around until something checked','line_number':1666,'multiline':False]
['text':' PyErr_Occurred() and returned an error.','line_number':1667,'multiline':False]
['text':' all and any for floats','line_number':1673,'multiline':False]
['text':' Array scalars are both C and Fortran contiguous','line_number':1690,'multiline':False]
['text':' Similar to GitHub issue #387','line_number':1697,'multiline':False]
['text':' Issue #10779','line_number':1705,'multiline':False]
['text':' Ensure proper handling of objects','line_number':1706,'multiline':False]
['text':' that don't support axis specification','line_number':1707,'multiline':False]
['text':' when squeezing','line_number':1708,'multiline':False]
['text':' it is perfectly reasonable that prior','line_number':1717,'multiline':False]
['text':' to numpy version 1.7.0 a subclass of ndarray','line_number':1718,'multiline':False]
['text':' might have been created that did not expect','line_number':1719,'multiline':False]
['text':' squeeze to have an axis argument','line_number':1720,'multiline':False]
['text':' NOTE: this example is somewhat artificial;','line_number':1721,'multiline':False]
['text':' it is designed to simulate an old API','line_number':1722,'multiline':False]
['text':' expectation to guard against regression','line_number':1723,'multiline':False]
['text':' if no axis argument is specified the old API','line_number':1729,'multiline':False]
['text':' expectation should give the correct result','line_number':1730,'multiline':False]
['text':' likewise, axis=None should work perfectly well','line_number':1734,'multiline':False]
['text':' with the old API expectation','line_number':1735,'multiline':False]
['text':' however, specification of any particular axis','line_number':1739,'multiline':False]
['text':' should raise a TypeError in the context of the','line_number':1740,'multiline':False]
['text':' old API specification, even when using a valid','line_number':1741,'multiline':False]
['text':' axis specification like 1 for this array','line_number':1742,'multiline':False]
['text':' this would silently succeed for array','line_number':1744,'multiline':False]
['text':' subclasses / objects that did not support','line_number':1745,'multiline':False]
['text':' squeeze axis argument handling before fixing','line_number':1746,'multiline':False]
['text':' Issue #10779','line_number':1747,'multiline':False]
['text':' check for the same behavior when using an invalid','line_number':1750,'multiline':False]
['text':' axis specification -- in this case axis=0 does not','line_number':1751,'multiline':False]
['text':' have size 1, but the priority should be to raise','line_number':1752,'multiline':False]
['text':' a TypeError for the axis argument and NOT a','line_number':1753,'multiline':False]
['text':' ValueError for squeezing a non-empty dimension','line_number':1754,'multiline':False]
['text':' the new API knows how to handle the axis','line_number':1758,'multiline':False]
['text':' argument and will return a ValueError if','line_number':1759,'multiline':False]
['text':' attempting to squeeze an axis that is not','line_number':1760,'multiline':False]
['text':' of length 1','line_number':1761,'multiline':False]
['text':' GitHub issue #387','line_number':1766,'multiline':False]
['text':' Object arrays with references to themselves can cause problems','line_number':1775,'multiline':False]
['text':' Test the same for a circular reference.','line_number':1784,'multiline':False]
['text':' NumPy has no tp_traverse currently, so circular references','line_number':1790,'multiline':False]
['text':' cannot be detected. So resolve it:','line_number':1791,'multiline':False]
['text':' This was causing a to become like the above','line_number':1794,'multiline':False]
['text':' but is fine with a reference to a different array','line_number':1800,'multiline':False]
['text':' An object array being copied into itself DECREF'ed before INCREF'ing','line_number':1808,'multiline':False]
['text':' causing segmentation faults (gh-3787)','line_number':1809,'multiline':False]
['text':' will segfault if object was deleted','line_number':1814,'multiline':False]
['text':' Setfield should not overwrite Object fields with non-Object data','line_number':1822,'multiline':False]
['text':' Ticket #1756','line_number':1853,'multiline':False]
['text':' Check that alignment flag is updated on stride setting','line_number':1870,'multiline':False]
['text':' Check that loads does not clobber interned strings','line_number':1901,'multiline':False]
['text':' Check that unpickling hacks in Py3 that support','line_number':1917,'multiline':False]
['text':' encoding='latin1' work correctly.','line_number':1918,'multiline':False]
['text':' Python2 output for pickle.dumps(numpy.array([129], dtype='b'))','line_number':1920,'multiline':False]
['text':' noqa','line_number':1921,'multiline':False]
['text':' This should work:','line_number':1922,'multiline':False]
['text':' Should not segfault:','line_number':1925,'multiline':False]
['text':' Check that scalar unpickling hack in Py3 that supports','line_number':1929,'multiline':False]
['text':' encoding='latin1' work correctly.','line_number':1930,'multiline':False]
['text':' Python2 output for pickle.dumps(...)','line_number':1932,'multiline':False]
['text':' (original, python2_pickle, koi8r_validity)','line_number':1934,'multiline':False]
['text':' noqa','line_number':1936,'multiline':False]
['text':' noqa','line_number':1940,'multiline':False]
['text':' different 8-bit code point in KOI8-R vs latin1','line_number':1943,'multiline':False]
['text':' noqa','line_number':1945,'multiline':False]
['text':' Decoding under non-latin1 encoding (e.g.) KOI8-R can','line_number':1952,'multiline':False]
['text':' produce bad results, but should not segfault.','line_number':1953,'multiline':False]
['text':' Unicode code points happen to lie within latin1,','line_number':1955,'multiline':False]
['text':' but are different in koi8-r, resulting to silent','line_number':1956,'multiline':False]
['text':' bogus results','line_number':1957,'multiline':False]
['text':' Unicode code points outside latin1, so results','line_number':1961,'multiline':False]
['text':' to an encoding exception','line_number':1962,'multiline':False]
['text':' astype records -> object','line_number':1974,'multiline':False]
['text':' '=' records -> object','line_number':1976,'multiline':False]
['text':' '=' object -> records','line_number':1980,'multiline':False]
['text':' Ticket # 1870','line_number':1986,'multiline':False]
['text':' The inner list should get assigned to the object elements','line_number':1987,'multiline':False]
['text':' The first dimension should get broadcast','line_number':1996,'multiline':False]
['text':' Ticket #1917 - ensure that array data doesn't leak','line_number':2003,'multiline':False]
['text':' 100MB times 1000 would give 100GB of memory usage if it leaks','line_number':2005,'multiline':False]
['text':' Ticket #2021, should not segfault.','line_number':2017,'multiline':False]
['text':' Ticket #1990 - Data can be truncated in creation of an array from a','line_number':2022,'multiline':False]
['text':' mixed sequence of numeric values and strings (gh-2583)','line_number':2023,'multiline':False]
['text':' test also with longer strings','line_number':2031,'multiline':False]
['text':' Ticket #2081. Python compiled with two byte unicode','line_number':2038,'multiline':False]
['text':' can lead to truncation if itemsize is not properly','line_number':2039,'multiline':False]
['text':' adjusted for NumPy's four byte unicode.','line_number':2040,'multiline':False]
['text':' Ticket #2063 must always choose stable sort for argsort to','line_number':2045,'multiline':False]
['text':' get consistent results','line_number':2046,'multiline':False]
['text':' Ticket #1578, the mismatch only showed up when running','line_number':2053,'multiline':False]
['text':' python-debug for python versions >= 2.7, and then as','line_number':2054,'multiline':False]
['text':' a core dump and error message.','line_number':2055,'multiline':False]
['text':' Ticket #1588','line_number':2060,'multiline':False]
['text':' This used to segfault:','line_number':2063,'multiline':False]
['text':' Check the final string:','line_number':2065,'multiline':False]
['text':' Ticket #2189, it used to segfault, so we check that it raises the','line_number':2069,'multiline':False]
['text':' proper exception.','line_number':2070,'multiline':False]
['text':' Ticket #2066, similar problem:','line_number':2073,'multiline':False]
['text':' Issue gh-2668 (trac 2076), segfault on sparc due to misalignment','line_number':2080,'multiline':False]
['text':' 2D array','line_number':2083,'multiline':False]
['text':' Fortran write followed by (C or F) read caused bus error','line_number':2085,'multiline':False]
['text':' Ticket #4024.','line_number':2116,'multiline':False]
['text':' Ticket #4369.','line_number':2123,'multiline':False]
['text':' Ticket #3311.','line_number':2130,'multiline':False]
['text':' Ticket #6456.','line_number':2141,'multiline':False]
['text':' Ensure that we have actually copied the item.','line_number':2149,'multiline':False]
['text':' Ensure we are allowed to have references to the same object.','line_number':2151,'multiline':False]
['text':' Check the references hold for the copied objects.','line_number':2153,'multiline':False]
['text':' Ticket #8536.','line_number':2157,'multiline':False]
['text':' Deepcopy should succeed','line_number':2158,'multiline':False]
['text':' gh-4494','line_number':2164,'multiline':False]
['text':' gh-4613','line_number':2172,'multiline':False]
['text':' dummy class where __array__ throws exception','line_number':2175,'multiline':False]
['text':' gh-4709','line_number':2190,'multiline':False]
['text':' gh-3926','line_number':2201,'multiline':False]
['text':' gh-5672','line_number':2208,'multiline':False]
['text':' gh-5743','line_number':2216,'multiline':False]
['text':' gh-2014','line_number':2222,'multiline':False]
['text':' gh-6250','line_number':2235,'multiline':False]
['text':' Simple case','line_number':2240,'multiline':False]
['text':' The case in the bug report.','line_number':2246,'multiline':False]
['text':' gh-6530 / gh-6553','line_number':2256,'multiline':False]
['text':' gh-6922. The following should not segfault','line_number':2260,'multiline':False]
['text':' gh-7455','line_number':2265,'multiline':False]
['text':' 64 bit. The following are the prime factors of 2**63 + 5,','line_number':2268,'multiline':False]
['text':' plus a leading 2, so when multiplied together as int64,','line_number':2269,'multiline':False]
['text':' the result overflows to a total size of 10.','line_number':2270,'multiline':False]
['text':' 32 bit. The following are the prime factors of 2**31 + 5,','line_number':2273,'multiline':False]
['text':' plus a leading 2, so when multiplied together as int32,','line_number':2274,'multiline':False]
['text':' the result overflows to a total size of 10.','line_number':2275,'multiline':False]
['text':' gh-2865','line_number':2282,'multiline':False]
['text':' mapping python objects to other dtypes','line_number':2283,'multiline':False]
['text':' wrong number/type of tuple elements in dict','line_number':2290,'multiline':False]
['text':' disallowed as of 1.13','line_number':2295,'multiline':False]
['text':' allowed as a special case due to existing use, see gh-2798','line_number':2298,'multiline':False]
['text':' In particular, the above union dtype (and union dtypes in general)','line_number':2301,'multiline':False]
['text':' should mainly behave like the main (object) dtype:','line_number':2302,'multiline':False]
['text':' gh-8887 - __hash__ would be None despite tp_hash being set','line_number':2307,'multiline':False]
['text':' Test fix for gh-11668.','line_number':2340,'multiline':False]
['text':' The following used to segfault on pypy, due to NPY_TITLE_KEY','line_number':2347,'multiline':False]
['text':' not working properly and resulting to double-decref of the','line_number':2348,'multiline':False]
['text':' structured array field items:','line_number':2349,'multiline':False]
['text':' See: https://bitbucket.org/pypy/pypy/issues/2789','line_number':2350,'multiline':False]
['text':' gh-11384','line_number':2357,'multiline':False]
['text':' gh-11507','line_number':2373,'multiline':False]
['text':' arrays and scalars','line_number':2385,'multiline':False]
['text':' gh-12837','line_number':2393,'multiline':False]
['text':' unpickling ndarray goes through _frombuffer for protocol 5','line_number':2397,'multiline':False]
['text':' gh-11993 update to ValueError (see gh-16909), since strings can in','line_number':2403,'multiline':False]
['text':' principle be converted to complex, but this string cannot.','line_number':2404,'multiline':False]
['text':' gh-12711','line_number':2409,'multiline':False]
['text':' The use of safe casting means, that 1<<20 is cast unsafely, an','line_number':2414,'multiline':False]
['text':' error may be better, but currently there is no mechanism for it.','line_number':2415,'multiline':False]
['text':' gh-12745 (would fail with pickle5 installed)','line_number':2420,'multiline':False]
['text':' Make sure __array__ is used instead of Sequence methods.','line_number':2439,'multiline':False]
['text':' gh-13659, would raise in broadcasting [x=t for x in result]','line_number':2451,'multiline':False]
['text':'gh-14214','line_number':2457,'multiline':False]
['text':' gh-17068','line_number':2464,'multiline':False]
['text':' gh-17068','line_number':2469,'multiline':False]
['text':' instead of [(b'', '|V8')]','line_number':2474,'multiline':False]
['text':' gh-17111','line_number':2479,'multiline':False]
['text':' blas stride = stride//itemsize > int32 max','line_number':2480,'multiline':False]
['text':' name conversion was failing for python 3 strings','line_number':2490,'multiline':False]
['text':' resulting in the default '?' name. Also test utf-8','line_number':2491,'multiline':False]
['text':' encoding using non-ascii name.','line_number':2492,'multiline':False]
['text':' gh-18075','line_number':2519,'multiline':False]
['text':' Ensure signed types before unsigned','line_number':2520,'multiline':False]
['text':' gh-22845','line_number':2533,'multiline':False]
['text':' create two arrays with bit patterns that do not overlap.','line_number':2534,'multiline':False]
['text':' needs to be large enough to test both SIMD and scalar paths','line_number':2535,'multiline':False]
['text':' ufuncs are pickled with a semi-private path in','line_number':2553,'multiline':False]
['text':' numpy.core._multiarray_umath and must be loadable without warning','line_number':2554,'multiline':False]
['text':' despite np.core being deprecated.','line_number':2555,'multiline':False]
['text':' noqa','line_number':2556,'multiline':False]
['text':' gh-25295','line_number':2578,'multiline':False]
