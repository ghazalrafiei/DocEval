['text':' need to define this at the top level to test pickling','line_number':23,'multiline':False]
['text':' This shouldn't happen unless a user intentionally calls','line_number':197,'multiline':False]
['text':' __array_function__ with invalid arguments, but check that we raise','line_number':198,'multiline':False]
['text':' an appropriate error all the same.','line_number':199,'multiline':False]
['text':' assert_equal uses the overloaded np.iscomplexobj() internally','line_number':231,'multiline':False]
['text':' should not raise','line_number':283,'multiline':False]
['text':' we don't need to implement every option on __array_function__','line_number':334,'multiline':False]
['text':' implementations','line_number':335,'multiline':False]
['text':' but new options on implementations can't be used','line_number':342,'multiline':False]
['text':' all of these functions need an argument:','line_number':367,'multiline':False]
['text':' The lambda function will be named "<lambda>", but the TypeError','line_number':375,'multiline':False]
['text':' should show the name as "func"','line_number':376,'multiline':False]
['text':' We replace the qualname currently, but it used `__name__`','line_number':394,'multiline':False]
['text':' (relevant functions have the same name and qualname anyway)','line_number':395,'multiline':False]
['text':' If the dispatcher raises an error, we must not attempt to mutate it','line_number':403,'multiline':False]
['text':' unmodified exception','line_number':417,'multiline':False]
['text':' Check that str and repr are sensible','line_number':420,'multiline':False]
['text':' no like argument','line_number':428,'multiline':False]
['text':' not keyword only','line_number':429,'multiline':False]
['text':' not last (not that it matters)','line_number':430,'multiline':False]
['text':' We sanity check the signature, and these should fail.','line_number':433,'multiline':False]
['text':' Cover internal sanity check for passing like as first positional arg','line_number':438,'multiline':False]
['text':' Mainly a unit-test to increase coverage','line_number':449,'multiline':False]
['text':' gh-12162: should still be defined even if __array_function__ doesn't','line_number':473,'multiline':False]
['text':' implement np.array_repr()','line_number':474,'multiline':False]
['text':' We need a proxy for mocks because __array_function__ is only looked','line_number':508,'multiline':False]
['text':' up in the class dict','line_number':509,'multiline':False]
['text':' note: the internal implementation of np.sum() calls the .sum() method','line_number':536,'multiline':False]
['text':' Check that `like=` isn't propagated downstream','line_number':565,'multiline':False]
['text':' Special-case np.empty to ensure values match','line_number':629,'multiline':False]
['text':' Instantiate ref if it's the MyNoArrayFunctionArray class','line_number':646,'multiline':False]
['text':' Raises the error about `value_error` being invalid first','line_number':688,'multiline':False]
['text':' required for loadtxt and genfromtxt to init w/o error.','line_number':698,'multiline':False]
['text':' Special-case np.empty to ensure values match','line_number':703,'multiline':False]
['text':' We provide a `__get__` implementation, make sure it works','line_number':711,'multiline':False]
['text':' valid argument to mean:','line_number':716,'multiline':False]
['text':' mean of the arange','line_number':725,'multiline':False]
['text':' Tries to operate on the class','line_number':727,'multiline':False]
['text':' Manual binding also works (the above may shortcut):','line_number':730,'multiline':False]
['text':' unbound actually','line_number':734,'multiline':False]
['text':' classmethod','line_number':737,'multiline':False]
