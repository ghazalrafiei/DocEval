['text':' Setup for optimize einsum','line_number':19,'multiline':False]
['text':' Need enough arguments','line_number':29,'multiline':False]
['text':' subscripts must be a string','line_number':33,'multiline':False]
['text':' issue 4528 revealed a segfault with this call','line_number':36,'multiline':False]
['text':' number of operands must match count in subscripts string','line_number':39,'multiline':False]
['text':' can't have more subscripts than dimensions in the operand','line_number':45,'multiline':False]
['text':' invalid ellipsis','line_number':53,'multiline':False]
['text':' invalid subscript character','line_number':60,'multiline':False]
['text':' output subscripts must appear in input','line_number':65,'multiline':False]
['text':' output subscripts may only be specified once','line_number':68,'multiline':False]
['text':' dimensions must match when being collapsed','line_number':72,'multiline':False]
['text':' gh-11221 - 'c' erroneously appeared in the error message','line_number':79,'multiline':False]
['text':' out parameter must be an array','line_number':86,'multiline':False]
['text':' order parameter must be a valid order','line_number':90,'multiline':False]
['text':' casting parameter must be a valid casting','line_number':94,'multiline':False]
['text':' dtype parameter must be a valid dtype','line_number':98,'multiline':False]
['text':' other keyword arguments are rejected','line_number':102,'multiline':False]
['text':' broadcasting to new dimensions must be enabled explicitly','line_number':105,'multiline':False]
['text':' Check order kwarg, asanyarray allows 1d to pass through','line_number':111,'multiline':False]
['text':' Exceptions created by object arithmetic should','line_number':116,'multiline':False]
['text':' successfully propagate','line_number':117,'multiline':False]
['text':' raised from unbuffered_loop_nop1_ndim2','line_number':159,'multiline':False]
['text':' raised from unbuffered_loop_nop1_ndim3','line_number':162,'multiline':False]
['text':' raised from unbuffered_loop_nop2_ndim2','line_number':167,'multiline':False]
['text':' raised from unbuffered_loop_nop2_ndim3','line_number':172,'multiline':False]
['text':' raised from PyArray_EinsteinSum','line_number':175,'multiline':False]
['text':' pass-through','line_number':179,'multiline':False]
['text':' output is writeable whenever input is writeable','line_number':198,'multiline':False]
['text':' transpose','line_number':205,'multiline':False]
['text':' diagonal','line_number':217,'multiline':False]
['text':' diagonal with various ways of broadcasting an additional dimension','line_number':229,'multiline':False]
['text':' triple diagonal','line_number':293,'multiline':False]
['text':' swap axes','line_number':305,'multiline':False]
['text':' Check various sums.  Does many sizes to exercise unrolled loops.','line_number':320,'multiline':False]
['text':' sum(a, axis=-1)','line_number':322,'multiline':False]
['text':' sum(a, axis=0)','line_number':339,'multiline':False]
['text':' trace(a)','line_number':356,'multiline':False]
['text':' gh-15961: should accept numpy int64 type in subscript list','line_number':365,'multiline':False]
['text':' multiply(a, b)','line_number':370,'multiline':False]
['text':' scalar case','line_number':371,'multiline':False]
['text':' inner(a,b)','line_number':380,'multiline':False]
['text':' outer(a,b)','line_number':396,'multiline':False]
['text':' Suppress the complex warnings for the 'as f8' tests','line_number':405,'multiline':False]
['text':' matvec(a,b) / a.dot(b) where a is matrix, b is vector','line_number':409,'multiline':False]
['text':' matmat(a,b) / a.dot(b) where a is matrix, b is matrix','line_number':452,'multiline':False]
['text':' matrix triple product (note this is not currently an efficient','line_number':478,'multiline':False]
['text':' way to multiply 3 matrices)','line_number':479,'multiline':False]
['text':' tensordot(a, b)','line_number':503,'multiline':False]
['text':' logical_and(logical_and(a!=0, b!=0), c!=0)','line_number':523,'multiline':False]
['text':' Various stride0, contiguous, and SSE aligned variants','line_number':542,'multiline':False]
['text':' An object array, summed as the data type','line_number':565,'multiline':False]
['text':' Can be a python object when dtype is object','line_number':571,'multiline':False]
['text':' Can be a python object when dtype is object','line_number':577,'multiline':False]
['text':' A case which was failing (ticket #1885)','line_number':580,'multiline':False]
['text':' singleton dimensions broadcast (gh-10343)','line_number':586,'multiline':False]
['text':' a blas-compatible contraction broadcasting case which was failing','line_number':594,'multiline':False]
['text':' for optimize=True (ticket #10930)','line_number':595,'multiline':False]
['text':' all-ones array was bypassing bug (ticket #10930)','line_number':601,'multiline':False]
['text':' Cases which were failing (gh-10899)','line_number':613,'multiline':False]
['text':' contig_contig_outstride0_two','line_number':617,'multiline':False]
['text':' stride0_contig_outstride0_two','line_number':619,'multiline':False]
['text':' contig_stride0_outstride0_two','line_number':621,'multiline':False]
['text':' This call used to crash because of a bug in','line_number':691,'multiline':False]
['text':' PyArray_AssignZero','line_number':692,'multiline':False]
['text':' Regression test for issue #10369 (test unicode inputs with Python 2)','line_number':698,'multiline':False]
['text':' The iterator had an issue with buffering this reduction','line_number':704,'multiline':False]
['text':' Issue #2027, was a problem in the contiguous 3-argument','line_number':712,'multiline':False]
['text':' inner loop implementation','line_number':713,'multiline':False]
['text':' Ensure explicitly setting out=None does not cause an error','line_number':724,'multiline':False]
['text':' see issue gh-15776 and issue gh-15256','line_number':725,'multiline':False]
['text':' Issue #7741, make sure that all letters of Latin alphabet (both uppercase & lowercase) can be used','line_number':744,'multiline':False]
['text':' when creating a subscript from arrays','line_number':745,'multiline':False]
['text':' Issue #2455 change in handling ellipsis','line_number':755,'multiline':False]
['text':' remove the 'middle broadcast' error','line_number':756,'multiline':False]
['text':' only use the 'RIGHT' iteration in prepare_op_axes','line_number':757,'multiline':False]
['text':' adds auto broadcast on left where it belongs','line_number':758,'multiline':False]
['text':' broadcast on right has to be explicit','line_number':759,'multiline':False]
['text':' We need to test the optimized parsing as well','line_number':760,'multiline':False]
['text':' used to raise error','line_number':768,'multiline':False]
['text':' used to raise error','line_number':776,'multiline':False]
['text':' used to raise error','line_number':777,'multiline':False]
['text':' used to raise error','line_number':785,'multiline':False]
['text':' used to raise error','line_number':794,'multiline':False]
['text':' Issue #4485 obscure einsum bug','line_number':797,'multiline':False]
['text':' This case revealed a bug in nditer where it reported a stride','line_number':798,'multiline':False]
['text':' as 'fixed' (0) when it was in fact not fixed during processing','line_number':799,'multiline':False]
['text':' (0 or 4). The reason for the bug was that the check for a fixed','line_number':800,'multiline':False]
['text':' stride was using the information from the 2D inner loop reuse','line_number':801,'multiline':False]
['text':' to restrict the iteration dimensions it had to validate to be','line_number':802,'multiline':False]
['text':' the same, but that 2D inner loop reuse logic is only triggered','line_number':803,'multiline':False]
['text':' during the buffer copying step, and hence it was invalid to','line_number':804,'multiline':False]
['text':' rely on those values. The fix is to check all the dimensions','line_number':805,'multiline':False]
['text':' of the stride in question, which in the test case reveals that','line_number':806,'multiline':False]
['text':' the stride is not fixed.','line_number':807,'multiline':False]
['text':'','line_number':808,'multiline':False]
['text':' NOTE: This test is triggered by the fact that the default buffersize,','line_number':809,'multiline':False]
['text':'       used by einsum, is 8192, and 3*2731 = 8193, is larger than that','line_number':810,'multiline':False]
['text':'       and results in a mismatch between the buffering and the','line_number':811,'multiline':False]
['text':'       striding for operand A.','line_number':812,'multiline':False]
['text':' The following is the original test case from the bug report,','line_number':818,'multiline':False]
['text':' made repeatable by changing random arrays to aranges.','line_number':819,'multiline':False]
['text':' Issue #5147.','line_number':827,'multiline':False]
['text':' The bug only occurred when output argument of einssum was used.','line_number':828,'multiline':False]
['text':' Issues gh-14692 and gh-12689','line_number':837,'multiline':False]
['text':' Bug with signed vs unsigned char errored on power9 and s390x Linux','line_number':838,'multiline':False]
['text':' Issue gh-5907, tests that the all contiguous special case','line_number':845,'multiline':False]
['text':' actually checks the contiguity of the output','line_number':846,'multiline':False]
['text':' Always worked (inner iteration is done with 0-stride):','line_number':851,'multiline':False]
['text':' Example 1:','line_number':854,'multiline':False]
['text':' Example 2, buffering causes x to be contiguous but','line_number':858,'multiline':False]
['text':' special cases do not catch the operation before:','line_number':859,'multiline':False]
['text':' Test originally added to cover broken float16 path: gh-20305','line_number':870,'multiline':False]
['text':' Likely most are covered elsewhere, at least partially.','line_number':871,'multiline':False]
['text':' Simple test, designed to exercise most specialized code paths,','line_number':873,'multiline':False]
['text':' note the +0.5 for floats.  This makes sure we use a float value','line_number':874,'multiline':False]
['text':' where the results must be exact.','line_number':875,'multiline':False]
['text':' contig -> scalar:','line_number':879,'multiline':False]
['text':' contig, contig -> contig:','line_number':882,'multiline':False]
['text':' noncontig, noncontig -> contig:','line_number':885,'multiline':False]
['text':' contig + contig -> scalar','line_number':888,'multiline':False]
['text':' contig + scalar -> contig (with out)','line_number':890,'multiline':False]
['text':' scalar + contig -> contig (with out)','line_number':894,'multiline':False]
['text':' scalar + contig -> scalar','line_number':897,'multiline':False]
['text':' Use einsum to compare to not have difference due to sum round-offs:','line_number':899,'multiline':False]
['text':' contig + scalar -> scalar','line_number':901,'multiline':False]
['text':' Use einsum to compare to not have difference due to sum round-offs:','line_number':903,'multiline':False]
['text':' contig + contig + contig -> scalar','line_number':905,'multiline':False]
['text':' four arrays:','line_number':909,'multiline':False]
['text':' See gh-5946.','line_number':914,'multiline':False]
['text':' Use array of True embedded in False.','line_number':915,'multiline':False]
['text':' Tests all paths of the optimization function against','line_number':929,'multiline':False]
['text':' conventional einsum','line_number':930,'multiline':False]
['text':' Hadamard outer products','line_number':947,'multiline':False]
['text':' Simple index transformation cases','line_number':952,'multiline':False]
['text':' Long test cases','line_number':958,'multiline':False]
['text':' Inner products','line_number':969,'multiline':False]
['text':' Outer products','line_number':978,'multiline':False]
['text':' Difficult edge cases for optimization','line_number':987,'multiline':False]
['text':' Inner products','line_number':1002,'multiline':False]
['text':' Randomly built test cases','line_number':1010,'multiline':False]
['text':' gh-10792','line_number':1024,'multiline':False]
['text':' Ensures broadcasting cases are not mistaken for GEMM','line_number':1030,'multiline':False]
['text':' Edge case found in gh-11308','line_number':1045,'multiline':False]
['text':' Ensure output order is respected for optimize cases, the below','line_number':1050,'multiline':False]
['text':' conraction should yield a reshaped tensor view','line_number':1051,'multiline':False]
['text':' gh-16415','line_number':1052,'multiline':False]
['text':' Builds views based off initial operands','line_number':1088,'multiline':False]
['text':' Checks if list of tuples are equivalent','line_number':1098,'multiline':False]
['text':' Ensure memory constraints are satisfied','line_number':1107,'multiline':False]
['text':' Long complex cases','line_number':1125,'multiline':False]
['text':' Long test 1','line_number':1127,'multiline':False]
['text':' Long test 2','line_number':1137,'multiline':False]
['text':' Difficult edge cases','line_number':1148,'multiline':False]
['text':' Edge test1','line_number':1150,'multiline':False]
['text':' Edge test2','line_number':1158,'multiline':False]
['text':' Edge test3','line_number':1166,'multiline':False]
['text':' Edge test4','line_number':1174,'multiline':False]
['text':' Edge test5','line_number':1182,'multiline':False]
['text':' Test explicit path handling','line_number':1192,'multiline':False]
['text':' Double check einsum works on the input path','line_number':1205,'multiline':False]
['text':'gh-20962','line_number':1211,'multiline':False]
['text':' Double check einsum works on the input path','line_number':1218,'multiline':False]
['text':'gh-10794','line_number':1237,'multiline':False]
['text':' no error for any spacing','line_number':1240,'multiline':False]
['text':' sanity check','line_number':1247,'multiline':False]
['text':'gh-10080, out overlaps one of the operands','line_number':1250,'multiline':False]
