['text':'
 * This is a PRIVATE INTERNAL NumPy header, intended to be used *ONLY*
 * by the iterator implementation code. All other internal NumPy code
 * should use the exposed iterator API.
 ','line_number':1,'multiline':True]
['text':'********* ITERATOR CONSTRUCTION TIMING *************','line_number':29,'multiline':True]
['text':'****************************************************','line_number':53,'multiline':True]
['text':'********* PRINTF DEBUG TRACING *************','line_number':55,'multiline':True]
['text':'********************************************','line_number':69,'multiline':True]
['text':' Rounds up a number of bytes to be divisible by sizeof intptr_t ','line_number':71,'multiline':True]
['text':' Internal iterator flags ','line_number':78,'multiline':True]
['text':' The perm is the identity ','line_number':80,'multiline':True]
['text':' The perm has negative entries (indicating flipped axes) ','line_number':82,'multiline':True]
['text':' The iterator is tracking an index ','line_number':84,'multiline':True]
['text':' The iterator is tracking a multi-index ','line_number':86,'multiline':True]
['text':' The iteration order was forced on construction ','line_number':88,'multiline':True]
['text':' The inner loop is handled outside the iterator ','line_number':90,'multiline':True]
['text':' The iterator is ranged ','line_number':92,'multiline':True]
['text':' The iterator is buffered ','line_number':94,'multiline':True]
['text':' The iterator should grow the buffered inner loop when possible ','line_number':96,'multiline':True]
['text':' There is just one iteration, can specialize iternext for that ','line_number':98,'multiline':True]
['text':' Delay buffer allocation until first Reset* call ','line_number':100,'multiline':True]
['text':' Iteration needs API access during iternext ','line_number':102,'multiline':True]
['text':' Iteration includes one or more operands being reduced ','line_number':104,'multiline':True]
['text':' Reduce iteration doesn't need to recalculate reduce loops next time ','line_number':106,'multiline':True]
['text':'
 * Offset of (combined) ArrayMethod flags for all transfer functions.
 * For now, we use the top 8 bits.
 ','line_number':108,'multiline':True]
['text':' Internal iterator per-operand iterator flags ','line_number':114,'multiline':True]
['text':' The operand will be written to ','line_number':116,'multiline':True]
['text':' The operand will be read from ','line_number':118,'multiline':True]
['text':' The operand needs type conversion/byte swapping/alignment ','line_number':120,'multiline':True]
['text':' The operand never needs buffering ','line_number':122,'multiline':True]
['text':' The operand is aligned ','line_number':124,'multiline':True]
['text':' The operand is being reduced ','line_number':126,'multiline':True]
['text':' The operand is for temporary use, does not have a backing array ','line_number':128,'multiline':True]
['text':' The operand requires masking when copying buffer -> array ','line_number':130,'multiline':True]
['text':' The operand's data pointer is pointing into its buffer ','line_number':132,'multiline':True]
['text':' The operand must be copied (with UPDATEIFCOPY if also ITFLAG_WRITE) ','line_number':134,'multiline':True]
['text':' The operand has temporary data, write it back at dealloc ','line_number':136,'multiline':True]
['text':'
 * The data layout of the iterator is fully specified by
 * a triple (itflags, ndim, nop).  These three variables
 * are expected to exist in all functions calling these macros,
 * either as true variables initialized to the correct values
 * from the iterator, or as constants in the case of specialized
 * functions such as the various iternext functions.
 ','line_number':139,'multiline':True]
['text':' Initial fixed position data ','line_number':149,'multiline':True]
['text':' iterindex is only used if RANGED or BUFFERED is set ','line_number':154,'multiline':True]
['text':' The rest is variable ','line_number':156,'multiline':True]
['text':' Byte sizes of the iterator members ','line_number':166,'multiline':True]
['text':' Could be sizeof intp ','line_number':174,'multiline':True]
['text':' Byte offsets of the iterator members starting from iter->iter_flexdata ','line_number':183,'multiline':True]
['text':' Internal-only ITERATOR DATA MEMBER ACCESS ','line_number':208,'multiline':True]
['text':' Internal-only BUFFERDATA MEMBER ACCESS ','line_number':242,'multiline':True]
['text':' Probably unnecessary, but make sure what follows is intptr aligned: ','line_number':248,'multiline':True]
['text':' Internal-only AXISDATA MEMBER ACCESS. ','line_number':277,'multiline':True]
['text':' Size of one AXISDATA struct within the iterator ','line_number':292,'multiline':True]
['text':' intp shape ','line_number':294,'multiline':True]
['text':' intp index ','line_number':296,'multiline':True]
['text':' intp stride[nop+1] AND char* ptr[nop+1] ','line_number':298,'multiline':True]
['text':'
 * Macro to advance an AXISDATA pointer by a specified count.
 * Requires that sizeof_axisdata be previously initialized
 * to NIT_AXISDATA_SIZEOF(itflags, ndim, nop).
 ','line_number':302,'multiline':True]
['text':' Size of the whole iterator ','line_number':312,'multiline':True]
['text':' Internal helper functions shared between implementation files ','line_number':318,'multiline':True]
['text':'*
 * Undo the axis permutation of the iterator. When the operand has fewer
 * dimensions then the iterator, this can return negative values for
 * inserted (broadcast) dimensions.
 *
 * @param axis Axis for which to undo the iterator axis permutation.
 * @param ndim If `op_axes` is being used, this is the iterator dimension,
 *             otherwise this is the operand dimension.
 * @param perm The iterator axis permutation NIT_PERM(iter)
 * @param axis_flipped Will be set to true if this is a flipped axis
 *        (i.e. is iterated in reversed order) and otherwise false.
 *        Can be NULL if the information is not needed.
 * @return The unpermuted axis. Without `op_axes` this is correct, with
 *         `op_axes` this indexes into `op_axes` (unpermuted iterator axis)
 ','line_number':320,'multiline':True]
['text':' The iterator treats axis reversed, thus adjust by ndim ','line_number':340,'multiline':True]
['text':'
 * Function to get the ArrayMethod flags of the transfer functions.
 * TODO: This function should be public and removed from `nditer_impl.h`, but
 *       this requires making the ArrayMethod flags public API first.
 ','line_number':367,'multiline':True]
['text':' NUMPY_CORE_SRC_MULTIARRAY_NDITER_IMPL_H_ ','line_number':375,'multiline':True]
