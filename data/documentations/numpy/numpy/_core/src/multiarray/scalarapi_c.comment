['text':' lazy initialization, to reduce the memory used by string scalars ','line_number':76,'multiline':True]
['text':' Note: no & needed here, so can't use CASE ','line_number':87,'multiline':True]
['text':'
     * Must be a user defined type with an associated (registered) dtype.
     * Thus, it cannot be flexible (user dtypes cannot be), so we can (and
     * pretty much have no choice but to) assume the below logic always works.
     * I.e. this assumes that the logic would also works for most of our types.
     ','line_number':91,'multiline':True]
['text':'
     * Use the alignment flag to figure out where the data begins
     * after a PyObject_HEAD
     ','line_number':98,'multiline':True]
['text':' now round-up to the nearest alignment value ','line_number':104,'multiline':True]
['text':'NUMPY_API
 * return 1 if an object is exactly a numpy scalar
 ','line_number':112,'multiline':True]
['text':'NUMPY_API
 * Convert to c-type
 *
 * no error checking is performed -- ctypeptr must be same type as scalar
 * in case of flexible type, the data is not copied
 * into ctypeptr which is expected to be a pointer to pointer
 ','line_number':127,'multiline':True]
['text':'NUMPY_API
 * Cast Scalar to c-type
 *
 * The output buffer must be large-enough to receive the value, this function
 * should only be used for subclasses of `np.generic`, we can only guarantee
 * it works for NumPy builtins.
 ','line_number':153,'multiline':True]
['text':'NUMPY_API
 * Cast Scalar to c-type
 ','line_number':181,'multiline':True]
['text':'NUMPY_API
 * Get 0-dim array from scalar
 *
 * 0-dim array from array-scalar object
 * always contains a copy of the data
 * unless outcode is NULL, it is of void type and the referrer does
 * not own it either.
 *
 * steals reference to outcode
 ','line_number':203,'multiline':True]
['text':' convert to 0-dim array of scalar typecode ','line_number':216,'multiline':True]
['text':' the dtype used by the array may be different to the one requested ','line_number':241,'multiline':True]
['text':' Need to INCREF just the PyObject portion ','line_number':255,'multiline':True]
['text':'
             * Since the type is equivalent, and we haven't handed the array
             * to anyone yet, let's fix the dtype to be what was requested,
             * even if it is equivalent to what was passed in.
             ','line_number':266,'multiline':True]
['text':' cast if necessary to desired output typecode ','line_number':277,'multiline':True]
['text':'New reference ','line_number':284,'multiline':True]
['text':'NUMPY_API
 ','line_number':285,'multiline':True]
['text':' if it's a builtin type, then use the typenumber ','line_number':290,'multiline':True]
['text':' Check the generic types ','line_number':296,'multiline':True]
['text':'
     * Otherwise --- type is a sub-type of an array scalar
     * not corresponding to a registered data-type object.
     ','line_number':360,'multiline':True]
['text':' Do special thing for VOID sub-types ','line_number':365,'multiline':True]
['text':'NUMPY_API
 * Return descr object from array scalar.
 *
 * New reference
 ','line_number':395,'multiline':True]
['text':' Timedelta ','line_number':419,'multiline':True]
['text':'NUMPY_API
 * Get a typeobject from a type-number -- can return NULL.
 *
 * New reference
 ','line_number':465,'multiline':True]
['text':' Does nothing with descr (cannot be NULL) ','line_number':486,'multiline':True]
['text':'NUMPY_API
  Get scalar-equivalent to a region of memory described by a descriptor.
','line_number':487,'multiline':True]
['text':' Eliminate NULL bytes ','line_number':513,'multiline':True]
['text':'
             * make sure itemsize is a multiple of 4
             * so round up to nearest multiple
             ','line_number':521,'multiline':True]
['text':' we need the full string length here, else copyswap will write too
           many bytes ','line_number':529,'multiline':True]
['text':' copyswap needs an array object, but only actually cares about the
         * dtype
         ','line_number':535,'multiline':True]
['text':' truncation occurs here ','line_number':545,'multiline':True]
['text':' String type ','line_number':563,'multiline':True]
['text':'
         * We need to copy the resolution information over to the scalar
         * Get the void * from the metadata dictionary
         ','line_number':573,'multiline':True]
['text':'
             * No base available for copyswp and no swap required.
             * Copy data directly into dest.
             ','line_number':621,'multiline':True]
['text':' copyswap for OBJECT increments the reference count ','line_number':634,'multiline':True]
['text':' Return Array Scalar if 0-d array object is encountered ','line_number':639,'multiline':True]
['text':'NUMPY_API
 *
 * Return either an array or the appropriate Python object if the array
 * is 0d and matches a Python type.
 * steals reference to mp
 ','line_number':641,'multiline':True]
