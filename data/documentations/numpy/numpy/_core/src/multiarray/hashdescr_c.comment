['text':'
 * How does this work ? The hash is computed from a list which contains all the
 * information specific to a type. The hard work is to build the list
 * (_array_descr_walk). The list is built as follows:
 *      * If the dtype is builtin (no fields, no subarray), then the list
 *      contains 6 items which uniquely define one dtype (_array_descr_builtin)
 *      * If the dtype is a compound array, one walk on each field. For each
 *      field, we append title, names, offset to the final list used for
 *      hashing, and then append the list recursively built for each
 *      corresponding dtype (_array_descr_walk_fields)
 *      * If the dtype is a subarray, one adds the shape tuple to the list, and
 *      then append the list recursively built for each corresponding dtype
 *      (_array_descr_walk_subarray)
 *
 ','line_number':15,'multiline':True]
['text':'
 * normalize endian character: always return 'I', '<' or '>'
 ','line_number':36,'multiline':True]
['text':'
 * Return true if descr is a builtin type
 ','line_number':54,'multiline':True]
['text':'
 * Add to l all the items which uniquely define a builtin type
 ','line_number':68,'multiline':True]
['text':'
     * For builtin type, hash relies on : kind + byteorder + flags +
     * type_num + elsize + alignment
     ','line_number':77,'multiline':True]
['text':'
 * Walk inside the fields and add every item which will be used for hashing
 * into the list l
 *
 * Return 0 on success
 ','line_number':102,'multiline':True]
['text':'
         * For each field, add the key + descr + offset to l
         ','line_number':126,'multiline':True]
['text':' XXX: are those checks necessary ? ','line_number':131,'multiline':True]
['text':'
 * Walk into subarray, and add items for hashing in l
 *
 * Return 0 on success
 ','line_number':188,'multiline':True]
['text':'
     * Add shape and descr itself to the list of object to hash
     ','line_number':199,'multiline':True]
['text':'
 * 'Root' function to walk into a dtype. May be called recursively
 ','line_number':229,'multiline':True]
['text':'
 * Return 0 if successful
 ','line_number':257,'multiline':True]
['text':'
     * Convert the list to tuple and compute the tuple hash using python
     * builtin function
     ','line_number':276,'multiline':True]
['text':' XXX: does PyObject_Hash set an exception on failure ? ','line_number':288,'multiline':True]
