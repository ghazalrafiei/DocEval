['text':'
 * Object to store information needed for advanced (also fancy) indexing.
 * Not public, so does not have to be a Python object in principle.
 ','line_number':7,'multiline':True]
['text':' number of advanced indexing arrays ("fancy" indices) ','line_number':13,'multiline':True]
['text':' Total size of the result (see `nd` and `dimensions` below) ','line_number':15,'multiline':True]
['text':'
         * Arrays used in the iteration:
         * - The original array indexed (subscription or assignment)
         * - extra-op: is used for the subscription result array or the
         *   values being assigned.
         *   (As of writing `ufunc.at` does not use this mechanism.)
         * - "subspace": If not all dimensions are indexed using advanced
         *   indices, the "subspace" is a view into `array` that omits all
         *   dimensions indexed by advanced indices.
         *   (The result of replacing all indexing arrays by a `0`.)
         ','line_number':18,'multiline':True]
['text':'
         * Pointer into the array when all index arrays are 0, used as base
         * for all calculations.
         ','line_number':33,'multiline':True]
['text':'
         * Iterator and information for all indexing (fancy) arrays.
         * When no "subspace" is needed it also iterates the `extra_op`.
         ','line_number':39,'multiline':True]
['text':'
         * When a "subspace" is used, `extra_op` needs a dedicated iterator
         * and we need yet another iterator for the original array.
         ','line_number':48,'multiline':True]
['text':'
         * Total number of total dims of the result and how many of those
         * are created by the advanced indexing result.
         * (This is not the same as `num_fancy` as advanced indices can add
         * or remove dimensions.)
         ','line_number':61,'multiline':True]
['text':'
         * After binding "consec" denotes at which axis the fancy axes
         * are inserted.  When all advanced indices are consecutive, NumPy
         * preserves their position in the result (see advanced indexing docs).
         ','line_number':69,'multiline':True]
['text':' Result dimensions/shape ','line_number':75,'multiline':True]
['text':'
         * The axes iterated by the advanced index and the length and strides
         * for each of these axes. (The fast paths copy some of this.)
         ','line_number':78,'multiline':True]
['text':' Count and pointer used as state by the slow `PyArray_MapIterNext` ','line_number':86,'multiline':True]
['text':'
 * Struct into which indices are parsed.
 * I.e. integer ones should only be parsed once, slices and arrays
 * need to be validated later and for the ellipsis we need to find how
 * many slices it represents.
 ','line_number':94,'multiline':True]
['text':'
     * Object of index: slice, array, or NULL. Owns a reference.
     ','line_number':101,'multiline':True]
['text':'
     * Value of an integer index, number of slices an Ellipsis is worth,
     * -1 if input was an integer array and the original size of the
     * boolean array if it is a converted boolean array.
     ','line_number':105,'multiline':True]
['text':' kind of index, see constants in mapping.c ','line_number':111,'multiline':True]
['text':'
 * Prototypes for Mapping calls --- not part of the C-API
 * because only useful as part of a getitem call.
 ','line_number':137,'multiline':True]
['text':' NUMPY_CORE_SRC_MULTIARRAY_MAPPING_H_ ','line_number':165,'multiline':True]
