['text':'
 * These are mainly needed for value based promotion in ufuncs.  It
 * may be necessary to make them (partially) public, to allow user-defined
 * dtypes to perform value based casting.
 ','line_number':12,'multiline':True]
['text':'
 * When we get a Python int, float, or complex, we may have to use weak
 * promotion logic.
 * To implement this, we sometimes have to tag the converted (temporary)
 * array when the original object was a Python scalar.
 *
 * @param obj The original Python object.
 * @param arr The array into which the Python object was converted.
 * @param[in,out] **dtype A pointer to the array's DType, if not NULL it will be
 *        replaced with the abstract DType.
 * @return 0 if the `obj` was not a python scalar, and 1 if it was.
 ','line_number':25,'multiline':True]
['text':'
     * We check the array dtype for two reasons: First, booleans are
     * integer subclasses.  Second, an int, float, or complex could have
     * a custom DType registered, and then we should use that.
     * Further, `np.float64` is a double subclass, so must reject it.
     ','line_number':41,'multiline':True]
['text':' NUMPY_CORE_SRC_MULTIARRAY_ABSTRACTDTYPES_H_ ','line_number':81,'multiline':True]
