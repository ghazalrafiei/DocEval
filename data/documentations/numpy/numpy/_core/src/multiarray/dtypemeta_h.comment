['text':' DType flags, currently private, since we may just expose functions
   Other publicly visible flags are in _dtype_api.h                   ','line_number':13,'multiline':True]
['text':' DType methods, these could be moved into its own struct ','line_number':19,'multiline':True]
['text':'
     * Currently only used for experimental user DTypes.
     ','line_number':26,'multiline':True]
['text':'
     * Either NULL or fetches a clearing function.  Clearing means deallocating
     * any referenced data and setting it to a safe state.  For Python objects
     * this means using `Py_CLEAR` which is equivalent to `Py_DECREF` and
     * setting the `PyObject *` to NULL.
     * After the clear, the data must be fillable via cast/copy and calling
     * clear a second time must be safe.
     * If the DType class does not implement `get_clear_loop` setting
     * NPY_ITEM_REFCOUNT on its dtype instances is invalid.  Note that it is
     * acceptable for  NPY_ITEM_REFCOUNT to indicate references that are not
     * Python objects.
     ','line_number':31,'multiline':True]
['text':'
       Either NULL or a function that sets a function pointer to a traversal
       loop that fills an array with zero values appropriate for the dtype. If
       get_fill_zero_loop is undefined or the function pointer set by it is
       NULL, the array buffer is allocated with calloc. If this function is
       defined and it sets a non-NULL function pointer, the array buffer is
       allocated with malloc and the zero-filling loop function pointer is
       called to fill the buffer. For the best performance, avoid using this
       function if a zero-filled array buffer allocated with calloc makes sense
       for the dtype.

       Note that this is currently used only for zero-filling a newly allocated
       array. While it can be used to zero-fill an already-filled buffer, that
       will not work correctly for arrays holding references. If you need to do
       that, clear the array first.
    ','line_number':44,'multiline':True]
['text':'
     * Either NULL or a function that performs finalization on a dtype, either
     * returning that dtype or a newly created instance that has the same
     * parameters, if any, as the operand dtype.
     ','line_number':61,'multiline':True]
['text':'
     * The casting implementation (ArrayMethod) to convert between two
     * instances of this DType, stored explicitly for fast access:
     ','line_number':67,'multiline':True]
['text':'
     * Dictionary of ArrayMethods representing most possible casts
     * (structured and object are exceptions).
     * This should potentially become a weak mapping in the future.
     ','line_number':72,'multiline':True]
['text':'
     * Storage for `descr->f`, since we may need to allow some customizatoin
     * here at least in a transition period and we need to set it on every
     * dtype instance for backward compatibility.  (Keep this at end)
     ','line_number':79,'multiline':True]
['text':' This must be updated if new slots before within_dtype_castingimpl','line_number':87,'multiline':False]
['text':' are added','line_number':88,'multiline':False]
['text':'
 * Macros for convenient classmethod calls, since these require
 * the DType both for the slot lookup and as first arguments.
 *
 * (Macros may include NULL checks where appropriate)
 ','line_number':103,'multiline':True]
['text':'
 * This function will hopefully be phased out or replaced, but was convenient
 * for incremental implementation of new DTypes based on DTypeMeta.
 * (Error checking is not required for DescrFromType, assuming that the
 * type is valid.)
 ','line_number':126,'multiline':True]
['text':'
 * NumPy's builtin DTypes:
 ','line_number':160,'multiline':True]
['text':' Integers ','line_number':199,'multiline':True]
['text':' Integer aliases ','line_number':210,'multiline':True]
['text':' Floats ','line_number':221,'multiline':True]
['text':' Complex ','line_number':226,'multiline':True]
['text':' String/Bytes ','line_number':230,'multiline':True]
['text':' Datetime/Timedelta ','line_number':233,'multiline':True]
['text':' Object/Void ','line_number':236,'multiline':True]
['text':' NUMPY_CORE_SRC_MULTIARRAY_DTYPEMETA_H_ ','line_number':244,'multiline':True]
