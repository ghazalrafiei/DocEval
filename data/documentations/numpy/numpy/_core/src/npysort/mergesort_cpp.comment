['text':' -*- c -*- ','line_number':1,'multiline':True]
['text':'
 * The purpose of this module is to add faster sort functions
 * that are type-specific.  This is done by altering the
 * function table for the builtin descriptors.
 *
 * These sorting functions are copied almost directly from numarray
 * with a few modifications (complex comparisons compare the imaginary
 * part if the real parts are equal, for example), and the names
 * are changed.
 *
 * The original sorting code is due to Charles R. Harris who wrote
 * it for numarray.
 ','line_number':3,'multiline':True]
['text':'
 * Quick sort is usually the fastest, but the worst case scenario can
 * be slower than the merge and heap sorts.  The merge sort requires
 * extra memory and so for large arrays may not be useful.
 *
 * The merge sort is *stable*, meaning that equal components
 * are unmoved from their entry versions, so it can be used to
 * implement lexicographic sorting on multiple keys.
 *
 * The heap sort is included for completeness.
 ','line_number':17,'multiline':True]
['text':'
 *****************************************************************************
 **                            NUMERIC SORTS                                **
 *****************************************************************************
 ','line_number':43,'multiline':True]
['text':' merge sort ','line_number':56,'multiline':True]
['text':' insertion sort ','line_number':79,'multiline':True]
['text':' merge sort ','line_number':118,'multiline':True]
['text':' insertion sort ','line_number':141,'multiline':True]
['text':'
 
 *****************************************************************************
 **                             STRING SORTS                                **
 *****************************************************************************
 ','line_number':173,'multiline':True]
['text':' merge sort ','line_number':187,'multiline':True]
['text':' insertion sort ','line_number':210,'multiline':True]
['text':' Items that have zero size don't make sense to sort ','line_number':235,'multiline':True]
['text':' merge sort ','line_number':269,'multiline':True]
['text':' insertion sort ','line_number':292,'multiline':True]
['text':' Items that have zero size don't make sense to sort ','line_number':315,'multiline':True]
['text':'
 *****************************************************************************
 **                             GENERIC SORT                                **
 *****************************************************************************
 ','line_number':332,'multiline':True]
['text':' merge sort ','line_number':345,'multiline':True]
['text':' insertion sort ','line_number':368,'multiline':True]
['text':' Items that have zero size don't make sense to sort ','line_number':395,'multiline':True]
['text':' merge sort ','line_number':422,'multiline':True]
['text':' insertion sort ','line_number':445,'multiline':True]
['text':' Items that have zero size don't make sense to sort ','line_number':467,'multiline':True]
['text':'**************************************
 * C > C++ dispatch
 **************************************','line_number':484,'multiline':True]
