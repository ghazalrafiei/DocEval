['text':' -*- c -*- ','line_number':1,'multiline':True]
['text':'
 * The purpose of this module is to add faster sort functions
 * that are type-specific.  This is done by altering the
 * function table for the builtin descriptors.
 *
 * These sorting functions are copied almost directly from numarray
 * with a few modifications (complex comparisons compare the imaginary
 * part if the real parts are equal, for example), and the names
 * are changed.
 *
 * The original sorting code is due to Charles R. Harris who wrote
 * it for numarray.
 ','line_number':3,'multiline':True]
['text':'
 * Quick sort is usually the fastest, but the worst case scenario can
 * be slower than the merge and heap sorts.  The merge sort requires
 * extra memory and so for large arrays may not be useful.
 *
 * The merge sort is *stable*, meaning that equal components
 * are unmoved from their entry versions, so it can be used to
 * implement lexicographic sorting on multiple keys.
 *
 * The heap sort is included for completeness.
 ','line_number':17,'multiline':True]
['text':'
 *****************************************************************************
 **                             GENERIC SORT                                **
 *****************************************************************************
 ','line_number':46,'multiline':True]
['text':' no need for sorting elements of no size ','line_number':59,'multiline':True]
['text':' The array needs to be offset by one for heapsort indexing ','line_number':122,'multiline':True]
['text':'**************************************
 * C > C++ dispatch
 **************************************','line_number':168,'multiline':True]
