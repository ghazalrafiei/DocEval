['text':' utility functions that profit from templates ','line_number':4,'multiline':True]
['text':'*begin repeat
 *  #name = int, uint, long, ulong,
 *          longlong, ulonglong#
 *  #type = npy_int, npy_uint, npy_long, npy_ulong,
 *          npy_longlong, npy_ulonglong#
 *  #MAX = NPY_MAX_INT, NPY_MAX_UINT, NPY_MAX_LONG, NPY_MAX_ULONG,
 *         NPY_MAX_LONGLONG, NPY_MAX_ULONGLONG#
 *
 *  #neg = (1,0)*3#
 *  #abs_func = abs*2, labs*2, llabs*2#
 ','line_number':9,'multiline':True]
['text':'
 * writes result of a * b into r
 * returns 1 if a * b overflowed else returns 0
 * 
 * These functions are not designed to work if either a or b is negative, but
 * that is not checked. Could use absolute values and adjust the sign if that
 * functionality was desired.
 ','line_number':20,'multiline':True]
['text':'
     * avoid expensive division on common no overflow case
     ','line_number':37,'multiline':True]
['text':'*end repeat*','line_number':53,'multiline':True]
['text':' this function only supports non-negative numbers ','line_number':61,'multiline':True]
['text':'
     * avoid expensive division on common no overflow case
     ','line_number':66,'multiline':True]
