['text':' NPY_HAVE_CPU_FEATURES','line_number':6,'multiline':False]
['text':' TODO(@seiko2plus):','line_number':9,'multiline':False]
['text':' - covers half-precision operations that being supported by numpy/halffloat.h','line_number':10,'multiline':False]
['text':' - add support for arithmetic operations','line_number':11,'multiline':False]
['text':' - enables __fp16 causes massive FP exceptions on aarch64,','line_number':12,'multiline':False]
['text':'   needs a deep investigation','line_number':13,'multiline':False]
['text':'/ @addtogroup cpp_core_types','line_number':17,'multiline':False]
['text':'/ @{','line_number':18,'multiline':False]
['text':'/ Provides a type that implements 16-bit floating point (half-precision).','line_number':20,'multiline':False]
['text':'/ This type is ensured to be 16-bit size.','line_number':21,'multiline':False]
['text':' ndef __ARM_FP16_FORMAT_IEEE','line_number':22,'multiline':False]
['text':'/ Whether `Half` has a full native HW support.','line_number':25,'multiline':False]
['text':'/ Whether `Half` has a native HW support for single/double conversion.','line_number':27,'multiline':False]
['text':'/ Default constructor. initialize nothing.','line_number':47,'multiline':False]
['text':'/ Construct from float','line_number':50,'multiline':False]
['text':'/ If there are no hardware optimization available, rounding will always','line_number':51,'multiline':False]
['text':'/ be set to ties to even.','line_number':52,'multiline':False]
['text':'/ Construct from double.','line_number':72,'multiline':False]
['text':'/ If there are no hardware optimization available, rounding will always','line_number':73,'multiline':False]
['text':'/ be set to ties to even.','line_number':74,'multiline':False]
['text':'/ Cast to float','line_number':87,'multiline':False]
['text':'/ Cast to double','line_number':107,'multiline':False]
['text':'/ Returns a new Half constructed from the IEEE 754 binary16.','line_number':125,'multiline':False]
['text':'/ Returns the IEEE 754 binary16 representation.','line_number':132,'multiline':False]
['text':'/ @name Comparison operators (ordered)','line_number':138,'multiline':False]
['text':'/ @{','line_number':139,'multiline':False]
['text':'/ @}','line_number':160,'multiline':False]
['text':'/ @name Comparison operators (unordered)','line_number':162,'multiline':False]
['text':'/ @{','line_number':163,'multiline':False]
['text':'/ @} Comparison operators','line_number':168,'multiline':False]
['text':'/ @name Comparison with no guarantee of NaN behavior','line_number':170,'multiline':False]
['text':'/ @{','line_number':171,'multiline':False]
['text':' if both `a` and `b` have same sign','line_number':178,'multiline':False]
['text':'   Test if `a` > `b` when `a` has the sign','line_number':179,'multiline':False]
['text':'        or `a` < `b` when is not.','line_number':180,'multiline':False]
['text':'   And make sure they are not equal to each other','line_number':181,'multiline':False]
['text':'       in case of both are equal to +-0','line_number':182,'multiline':False]
['text':' else','line_number':183,'multiline':False]
['text':'   Test if  `a` has the sign.','line_number':184,'multiline':False]
['text':'        and `a` != -0.0 and `b` != 0.0','line_number':185,'multiline':False]
['text':' if both `a` and `b` have same sign','line_number':195,'multiline':False]
['text':'   Test if `a` > `b` when `a` has the sign','line_number':196,'multiline':False]
['text':'        or `a` < `b` when is not.','line_number':197,'multiline':False]
['text':'        or a == b (needed even if we used <= above instead','line_number':198,'multiline':False]
['text':'                   since testing +-0 still required)','line_number':199,'multiline':False]
['text':' else','line_number':200,'multiline':False]
['text':'   Test if `a` has the sign','line_number':201,'multiline':False]
['text':'        or `a` and `b` equal to +-0.0','line_number':202,'multiline':False]
['text':' fast16 cast is not worth it, since unpack op should involved.','line_number':208,'multiline':False]
['text':'/ @} Comparison','line_number':212,'multiline':False]
['text':'/ @name Properties','line_number':214,'multiline':False]
['text':' @{','line_number':215,'multiline':False]
['text':'/ @} Properties','line_number':221,'multiline':False]
['text':' __ARM_FP16_FORMAT_IEEE','line_number':226,'multiline':False]
['text':' __ARM_FP16_FORMAT_IEEE','line_number':259,'multiline':False]
['text':'/ @} cpp_core_types','line_number':261,'multiline':False]
['text':' namespace np','line_number':263,'multiline':False]
['text':' NUMPY_CORE_SRC_COMMON_HALF_HPP','line_number':265,'multiline':False]
