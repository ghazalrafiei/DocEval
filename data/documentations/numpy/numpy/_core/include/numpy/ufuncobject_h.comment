['text':'
 * The legacy generic inner loop for a standard element-wise or
 * generalized ufunc.
 ','line_number':11,'multiline':True]
['text':'
 * The most generic one-dimensional inner loop for
 * a masked standard element-wise ufunc. "Masked" here means that it skips
 * doing calculations on any items for which the maskptr array has a true
 * value.
 ','line_number':21,'multiline':True]
['text':' Forward declaration for the type resolver and loop selector typedefs ','line_number':33,'multiline':True]
['text':'
 * Given the operands for calling a ufunc, should determine the
 * calculation input and output data types and return an inner loop function.
 * This function should validate that the casting rule is being followed,
 * and fail if it is not.
 *
 * For backwards compatibility, the regular type resolution function does not
 * support auxiliary data with object semantics. The type resolution call
 * which returns a masked generic function returns a standard NpyAuxData
 * object, for which the NPY_AUXDATA_FREE and NPY_AUXDATA_CLONE macros
 * work.
 *
 * ufunc:             The ufunc object.
 * casting:           The 'casting' parameter provided to the ufunc.
 * operands:          An array of length (ufunc->nin + ufunc->nout),
 *                    with the output parameters possibly NULL.
 * type_tup:          Either NULL, or the type_tup passed to the ufunc.
 * out_dtypes:        An array which should be populated with new
 *                    references to (ufunc->nin + ufunc->nout) new
 *                    dtypes, one for each input and output. These
 *                    dtypes should all be in native-endian format.
 *
 * Should return 0 on success, -1 on failure (with exception set),
 * or -2 if Py_NotImplemented should be returned.
 ','line_number':36,'multiline':True]
['text':'
         * nin: Number of inputs
         * nout: Number of outputs
         * nargs: Always nin + nout (Why is it stored?)
         ','line_number':71,'multiline':True]
['text':'
         * Identity for reduction, any of PyUFunc_One, PyUFunc_Zero
         * PyUFunc_MinusOne, PyUFunc_None, PyUFunc_ReorderableNone,
         * PyUFunc_IdentityValue.
         ','line_number':78,'multiline':True]
['text':' Array of one-dimensional core loops ','line_number':85,'multiline':True]
['text':' Array of funcdata that gets passed into the functions ','line_number':87,'multiline':True]
['text':' The number of elements in 'functions' and 'data' ','line_number':89,'multiline':True]
['text':' Used to be unused field 'check_return' ','line_number':92,'multiline':True]
['text':' The name of the ufunc ','line_number':95,'multiline':True]
['text':' Array of type numbers, of size ('nargs' * 'ntypes') ','line_number':98,'multiline':True]
['text':' Documentation string ','line_number':101,'multiline':True]
['text':' generalized ufunc parameters ','line_number':108,'multiline':True]
['text':' 0 for scalar ufunc; 1 for generalized ufunc ','line_number':110,'multiline':True]
['text':' number of distinct dimension names in signature ','line_number':112,'multiline':True]
['text':'
         * dimension indices of input/output argument k are stored in
         * core_dim_ixs[core_offsets[k]..core_offsets[k]+core_num_dims[k]-1]
         ','line_number':115,'multiline':True]
['text':' numbers of core dimensions of each argument ','line_number':120,'multiline':True]
['text':'
         * dimension indices in a flatted form; indices
         * are in the range of [0,core_num_dim_ix)
         ','line_number':122,'multiline':True]
['text':'
         * positions of 1st core dimensions of each
         * argument in core_dim_ixs, equivalent to cumsum(core_num_dims)
         ','line_number':127,'multiline':True]
['text':' signature string for printing purpose ','line_number':132,'multiline':True]
['text':'
         * A function which resolves the types and fills an array
         * with the dtypes for the inputs and outputs.
         ','line_number':135,'multiline':True]
['text':' Was the legacy loop resolver ','line_number':140,'multiline':True]
['text':'
         * This was blocked off to be the "new" inner loop selector in 1.7,
         * but this was never implemented. (This is also why the above
         * selector is called the "legacy" selector.)
         ','line_number':142,'multiline':True]
['text':' Was previously the `PyUFunc_MaskedInnerLoopSelectionFunc` ','line_number':153,'multiline':True]
['text':'
         * List of flags for each operand when ufunc is called by nditer object.
         * These flags will be used in addition to the default flags for each
         * operand set by nditer object.
         ','line_number':156,'multiline':True]
['text':'
         * List of global flags used when ufunc is called by nditer object.
         * These flags will be used in addition to the default global flags
         * set by nditer object.
         ','line_number':163,'multiline':True]
['text':' New in NPY_API_VERSION 0x0000000D and above ','line_number':170,'multiline':True]
['text':'
         * for each core_num_dim_ix distinct dimension names,
         * the possible "frozen" size (-1 if not frozen).
         ','line_number':172,'multiline':True]
['text':'
         * for each distinct core dimension, a set of UFUNC_CORE_DIM* flags
         ','line_number':178,'multiline':True]
['text':' Identity for reduction, when identity == PyUFunc_IdentityValue ','line_number':183,'multiline':True]
['text':' NPY_FEATURE_VERSION >= NPY_1_16_API_VERSION ','line_number':185,'multiline':True]
['text':' New in NPY_API_VERSION 0x0000000F and above ','line_number':187,'multiline':True]
['text':' New private fields related to dispatching ','line_number':189,'multiline':True]
['text':' A PyListObject of `(tuple of DTypes, ArrayMethod/Promoter)` ','line_number':191,'multiline':True]
['text':' Generalized ufunc; 0x0001 reserved for possible use as CORE_ENABLED ','line_number':197,'multiline':True]
['text':' the core dimension's size will be determined by the operands. ','line_number':198,'multiline':True]
['text':' the core dimension may be absent ','line_number':200,'multiline':True]
['text':' flags inferred during execution ','line_number':202,'multiline':True]
['text':'
 * UFunc has unit of 0, and the order of operations can be reordered
 * This case allows reduction with multiple axes at once.
 ','line_number':218,'multiline':True]
['text':'
 * UFunc has unit of 1, and the order of operations can be reordered
 * This case allows reduction with multiple axes at once.
 ','line_number':223,'multiline':True]
['text':'
 * UFunc has unit of -1, and the order of operations can be reordered
 * This case allows reduction with multiple axes at once. Intended for
 * bitwise_and reduction.
 ','line_number':228,'multiline':True]
['text':'
 * UFunc has no unit, and the order of operations cannot be reordered.
 * This case does not allow reduction with multiple axes at once.
 ','line_number':234,'multiline':True]
['text':'
 * UFunc has no unit, and the order of operations can be reordered
 * This case allows reduction with multiple axes at once.
 ','line_number':239,'multiline':True]
['text':'
 * UFunc unit is an identity_value, and the order of operations can be reordered
 * This case allows reduction with multiple axes at once.
 ','line_number':244,'multiline':True]
['text':' A linked-list of function information for
   user-defined 1-d loops.
 ','line_number':263,'multiline':True]
['text':'
 * THESE MACROS ARE DEPRECATED.
 * Use npy_set_floatstatus_* in the npymath library.
 ','line_number':280,'multiline':True]
['text':' Make sure it gets defined if it isn't already ','line_number':292,'multiline':True]
['text':' Clear the floating point exception default of Borland C++ ','line_number':294,'multiline':True]
['text':' NUMPY_CORE_INCLUDE_NUMPY_UFUNCOBJECT_H_ ','line_number':306,'multiline':True]
