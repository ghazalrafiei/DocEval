['text':' TODO where is the right place to put this kind of type aliasing?','line_number':95,'multiline':False]
['text':' TODO does it make sense to have variation within a Mark's','line_number':119,'multiline':False]
['text':' properties about whether they are grouping?','line_number':120,'multiline':False]
['text':' TODO make this method private? Would extender every need to call directly?','line_number':126,'multiline':False]
['text':' Special case width because it needs to be resolved and added to the dataframe','line_number':158,'multiline':False]
['text':' during layer prep (so the Move operations use it properly).','line_number':159,'multiline':False]
['text':' TODO how does width *scaling* work, e.g. for violin width by count?','line_number':160,'multiline':False]
['text':' TODO Might this obviate the identity scale? Just don't add a scale?','line_number':174,'multiline':False]
['text':' TODO add source_func or similar to transform the source value?','line_number':189,'multiline':False]
['text':' e.g. set linewidth as a proportion of pointsize?','line_number':190,'multiline':False]
['text':' TODO type scales','line_number':200,'multiline':False]
['text':' TODO The original version of this (in seaborn._base) did more checking.','line_number':202,'multiline':False]
['text':' Paring that down here for the prototype to see what restrictions make sense.','line_number':203,'multiline':False]
['text':' TODO rethink this to map from scale type to "DV priority" and use that?','line_number':205,'multiline':False]
['text':' e.g. Nominal > Discrete > Continuous','line_number':206,'multiline':False]
['text':' TODO First clause only needed to handle non-rgba arrays,','line_number':277,'multiline':False]
['text':' which we are trying to handle upstream','line_number':278,'multiline':False]
['text':' Second check here catches vectors of strings with identity scale','line_number':281,'multiline':False]
['text':' It could probably be handled better upstream. This is a tricky problem','line_number':282,'multiline':False]
['text':' TODO should we be implementing fill here too?','line_number':294,'multiline':False]
['text':' (i.e. set fillalpha to 0 when fill=False)','line_number':295,'multiline':False]
