['text':' https://github.com/apache/thrift/raw/master/test/DocTest.thrift','line_number':1,'multiline':False]['text':'
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements. See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership. The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License. You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations
 * under the License.
 ','line_number':2,'multiline':True]['text':'*
 * Program doctext.
 *
 * Seriously, this is the documentation for this whole program.
 ','line_number':21,'multiline':True]['text':' C++ comment','line_number':30,'multiline':False]['text':' c style comment ','line_number':31,'multiline':True]['text':'* Some doc text goes here.  Wow I am [nesting these] (no more nesting.) ','line_number':35,'multiline':True]['text':'* This is how to document a parameter ','line_number':39,'multiline':True]['text':'* And this is a doc for a parameter that has no specific value assigned ','line_number':42,'multiline':True]['text':'* This is how you would do a typedef doc ','line_number':51,'multiline':True]['text':'* And this is where you would document a struct ','line_number':54,'multiline':True]['text':'* And the members of a struct ','line_number':58,'multiline':True]['text':'* doct text goes before a comma ','line_number':61,'multiline':True]['text':'*
 * You can document constants now too.  Yeehaw!
 ','line_number':68,'multiline':True]['text':'* Everyone get in on the docu-action! ','line_number':73,'multiline':True]['text':'* Struct insanity ','line_number':83,'multiline':True]['text':'* This is doc for field 1 ','line_number':87,'multiline':True]['text':'* And this is doc for field 2 ','line_number':90,'multiline':True]['text':' C1 ','line_number':104,'multiline':True]['text':'* Doc ','line_number':105,'multiline':True]['text':' C2 ','line_number':106,'multiline':True]['text':' C3 ','line_number':107,'multiline':True]['text':'* This is where you would document a Service ','line_number':114,'multiline':True]['text':'* And this is how you would document functions in a service ','line_number':118,'multiline':True]['text':'* Like this one ','line_number':124,'multiline':True]['text':'* This is an example of a function with params documented ','line_number':133,'multiline':True]['text':'* This param is a thing ','line_number':136,'multiline':True]['text':' So you think you've got this all worked, out eh? ','line_number':145,'multiline':True]['text':'/ This style of Doxy-comment doesn't work.','line_number':150,'multiline':False]['text':'*
 * This is a trivial example of a multiline docstring.
 ','line_number':153,'multiline':True]['text':'*
 * This is the canonical example
 * of a multiline docstring.
 ','line_number':158,'multiline':True]['text':'*
 * The last line is non-blank.
 * I said non-blank! ','line_number':164,'multiline':True]['text':'* Both the first line
 * are non blank. ;-)
 * and the last line ','line_number':169,'multiline':True]['text':'*
 *    INDENTED TITLE
 * The text is less indented.
 ','line_number':174,'multiline':True]['text':'*       First line indented.
 * Unfortunately, this does not get indented.
 ','line_number':180,'multiline':True]['text':'*
 * void code_in_comment() {
 *   printf("hooray code!");
 * }
 ','line_number':186,'multiline':True]['text':'*
     * Indented Docstring.
     * This whole docstring is indented.
     *   This line is indented further.
     ','line_number':193,'multiline':True]['text':'* Irregular docstring.
 * We will have to punt
  * on this thing ','line_number':200,'multiline':True]['text':'*
 * note the space
 * before these lines
* but not this
 * one
 ','line_number':205,'multiline':True]['text':'*
* Flush against
* the left.
','line_number':213,'multiline':True]['text':'*
  No stars in this one.
  It should still work fine, though.
    Including indenting.
    ','line_number':219,'multiline':True]['text':'* Trailing whitespace   
Sloppy trailing whitespace   
is truncated.   ','line_number':226,'multiline':True]['text':'*
 * This is a big one.
 *
 * We'll have some blank lines in it.
 * 
 * void as_well_as(some code) {
 *   puts("YEEHAW!");
 * }
 ','line_number':231,'multiline':True]['text':'*
*
*
','line_number':242,'multiline':True]['text':'*no room for newline here','line_number':248,'multiline':True]['text':' * / ','line_number':250,'multiline':True]['text':'*
 * /
 ','line_number':253,'multiline':True]['text':' Comment-end tokens can of course have more than one asterisk ','line_number':259,'multiline':True]['text':' ? ','line_number':260,'multiline':True]['text':' Comment-end tokens can of course have more than one asterisk *','line_number':261,'multiline':True]['text':' ? ','line_number':262,'multiline':True]['text':' Comment-end tokens can of course have more than one asterisk **','line_number':263,'multiline':True]['text':' ? ','line_number':264,'multiline':True]['text':'* Comment-end tokens can of course have more than one asterisk ','line_number':265,'multiline':True]['text':' ? ','line_number':266,'multiline':True]['text':'* Comment-end tokens can of course have more than one asterisk *','line_number':267,'multiline':True]['text':' ? ','line_number':268,'multiline':True]['text':'* Comment-end tokens can of course have more than one asterisk **','line_number':269,'multiline':True]['text':' ? ','line_number':270,'multiline':True]['text':'** Comment-end tokens can of course have more than one asterisk ','line_number':271,'multiline':True]['text':' ? ','line_number':272,'multiline':True]['text':'** Comment-end tokens can of course have more than one asterisk *','line_number':273,'multiline':True]['text':' ? ','line_number':274,'multiline':True]['text':'** Comment-end tokens can of course have more than one asterisk **','line_number':275,'multiline':True]['text':' ? ','line_number':276,'multiline':True]['text':'* This is a comment ','line_number':279,'multiline':True]['text':'* This is also a comment *','line_number':281,'multiline':True]['text':'* Yet another comment! ','line_number':283,'multiline':True]['text':' THE END ','line_number':288,'multiline':True]