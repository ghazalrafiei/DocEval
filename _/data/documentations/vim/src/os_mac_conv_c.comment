['text':' vi:set ts=8 sts=4 sw=4 noet:
 *
 * VIM - Vi IMproved	by Bram Moolenaar
 *
 * Do ":help uganda"  in Vim to read copying and usage conditions.
 * Do ":help credits" in Vim to see a list of people who contributed.
 * See README.txt for an overview of the Vim source code.
 ','line_number':1,'multiline':True]['text':'
 * os_mac_conv.c: Code specifically for Mac string conversions.
 *
 * This code has been put in a separate file to avoid the conflicts that are
 * caused by including both the X11 and Carbon header files.
 ','line_number':9,'multiline':True]['text':' A few dummy types to be able to generate function prototypes.','line_number':28,'multiline':False]['text':' Converter for composing decomposed HFS+ file paths','line_number':37,'multiline':False]['text':' Converter used by mac_utf16_to_utf8','line_number':39,'multiline':False]['text':'
 * A Mac version of string_convert_ext() for special cases.
 ','line_number':42,'multiline':True]['text':' When conversion failed, try excluding bytes from the end, helps when','line_number':82,'multiline':False]['text':' there is an incomplete byte sequence.  Only do up to 6 bytes to avoid','line_number':83,'multiline':False]['text':' looping a long time when there really is something unconvertible.','line_number':84,'multiline':False]['text':'  Determine output buffer size','line_number':107,'multiline':False]['text':' conversion failed for the whole string, but maybe it will work','line_number':131,'multiline':False]['text':' for each character','line_number':132,'multiline':False]['text':'
 * Conversion from Apple MacRoman char encoding to UTF-8 or latin1, using
 * standard Carbon framework.
 * Input: "ptr[*sizep]".
 * "real_size" is the size of the buffer that "ptr" points to.
 * output is in-place, "sizep" is adjusted.
 * Returns OK or FAIL.
 ','line_number':174,'multiline':True]['text':' MacRoman is an 8-bit encoding, no need to move bytes to','line_number':192,'multiline':False]['text':' conv_rest[].','line_number':193,'multiline':False]['text':'
     * If there is a conversion error, try using another
     * conversion.
     ','line_number':196,'multiline':True]['text':' no lossy conversion','line_number':207,'multiline':False]['text':' not external representation','line_number':208,'multiline':False]['text':'
 * Conversion from UTF-8 or latin1 to MacRoman.
 * Input: "from[fromlen]"
 * Output: "to[maxtolen]" length in "*tolenp"
 * Unconverted rest in rest[*restlenp].
 * Returns OK or FAIL.
 ','line_number':221,'multiline':True]['text':' no lossy conversion','line_number':260,'multiline':False]['text':' not external representation (since vim','line_number':261,'multiline':False]['text':' handles this internally)','line_number':262,'multiline':False]['text':'
 * Initializes text converters
 ','line_number':273,'multiline':True]['text':' On pre-10.3, Unicode normalization is not available so','line_number':300,'multiline':False]['text':' fall back to non-normalizing converter','line_number':301,'multiline':False]['text':'
 * Destroys text converters
 ','line_number':308,'multiline':True]['text':'
 * Conversion from UTF-16 UniChars to 'encoding'
 * The function signature uses the real type of UniChar (as typedef'ed in
 * CFBase.h) to avoid clashes with X11 header files in the .pro file
 ','line_number':327,'multiline':True]['text':' Following code borrows somewhat from os_mswin.c','line_number':338,'multiline':False]['text':' Convert to utf-8 first, works better with iconv','line_number':344,'multiline':False]['text':' We might be called before we have p_enc set up.','line_number':350,'multiline':False]['text':' If encoding (p_enc) is any unicode, it is actually in utf-8 (vim','line_number':353,'multiline':False]['text':' internal unicode is always utf-8) so don't convert in such cases','line_number':354,'multiline':False]['text':' p_enc is utf-8, so we're done.','line_number':361,'multiline':False]['text':'
 * Conversion from 'encoding' to UTF-16 UniChars
 * The function return uses the real type of UniChar (as typedef'ed in
 * CFBase.h) to avoid clashes with X11 header files in the .pro file
 ','line_number':381,'multiline':True]['text':' Following code borrows somewhat from os_mswin.c','line_number':392,'multiline':False]['text':' Use MacRoman by default, we might be called before we have p_enc','line_number':401,'multiline':False]['text':' set up.  Convert to utf-8 first, works better with iconv().  Does','line_number':402,'multiline':False]['text':' nothing if 'encoding' is "utf-8".','line_number':403,'multiline':False]['text':'
 * Converts from UTF-16 UniChars to CFString
 * The void * return type is actually a CFStringRef
 ','line_number':441,'multiline':True]['text':'
 * Converts a decomposed HFS+ UTF-8 path to precomposed UTF-8
 ','line_number':464,'multiline':True]['text':'
 * Converts from UTF-16 UniChars to precomposed UTF-8
 ','line_number':494,'multiline':True]['text':'
 * Converts from UTF-8 to UTF-16 UniChars
 ','line_number':531,'multiline':True]['text':'
 * Sets LANG environment variable in Vim from Mac locale
 ','line_number':567,'multiline':True]['text':' $LANG is not set, either because it was unset or Vim was started','line_number':578,'multiline':False]['text':' from the Dock.  Query the system locale.','line_number':579,'multiline':False]['text':' Make sure strtod() uses a decimal point, not a comma.','line_number':592,'multiline':False]['text':' MACOS_CONVERT','line_number':597,'multiline':False]