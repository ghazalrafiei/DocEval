['text':' vi:set ts=8 sts=4 sw=4 noet:
 *
 * VIM - Vi IMproved	by Bram Moolenaar
 *
 * Do ":help uganda"  in Vim to read copying and usage conditions.
 * Do ":help credits" in Vim to see a list of people who contributed.
 * See README.txt for an overview of the Vim source code.
 ','line_number':1,'multiline':True]['text':'
 * vim9.h: types and globals used for Vim9 script.
 ','line_number':10,'multiline':True]['text':' execute Ex command line isn_arg.string','line_number':19,'multiline':False]['text':' execute Ex command from isn_arg.number items on stack','line_number':20,'multiline':False]['text':' execute Ex command from isn_arg.string split at NL','line_number':21,'multiline':False]['text':' execute EX command that is only a range','line_number':22,'multiline':False]['text':' evaluate expression isn_arg.string with legacy syntax.','line_number':23,'multiline':False]['text':' :echo with isn_arg.echo.echo_count items on top of stack','line_number':24,'multiline':False]['text':' :execute with isn_arg.number items on top of stack','line_number':25,'multiline':False]['text':' :echomsg with isn_arg.number items on top of stack','line_number':26,'multiline':False]['text':' :echoconsole with isn_arg.number items on top of stack','line_number':27,'multiline':False]['text':' :echowindow with isn_arg.number items on top of stack','line_number':28,'multiline':False]['text':' :echoerr with isn_arg.number items on top of stack','line_number':29,'multiline':False]['text':' compute range from isn_arg.string, push to stack','line_number':30,'multiline':False]['text':' :s command with expression','line_number':31,'multiline':False]['text':' source autoload script, isn_arg.number is the script ID','line_number':33,'multiline':False]['text':' instructions compiled from expression','line_number':34,'multiline':False]['text':' construct an object, using construct_T','line_number':35,'multiline':False]['text':' object member, index is isn_arg.number','line_number':36,'multiline':False]['text':' interface member, index is isn_arg.classmember','line_number':37,'multiline':False]['text':' store value in "this" object member, index is','line_number':38,'multiline':False]['text':' isn_arg.number','line_number':39,'multiline':False]['text':' load class member, using isn_arg.classmember','line_number':40,'multiline':False]['text':' store in class member, using isn_arg.classmember','line_number':41,'multiline':False]['text':' get and set variables','line_number':43,'multiline':False]['text':' push local variable isn_arg.number','line_number':44,'multiline':False]['text':' push v: variable isn_arg.number','line_number':45,'multiline':False]['text':' push g: variable isn_arg.string','line_number':46,'multiline':False]['text':' push g: autoload variable isn_arg.string','line_number':47,'multiline':False]['text':' push b: variable isn_arg.string','line_number':48,'multiline':False]['text':' push w: variable isn_arg.string','line_number':49,'multiline':False]['text':' push t: variable isn_arg.string','line_number':50,'multiline':False]['text':' push g: dict','line_number':51,'multiline':False]['text':' push b: dict','line_number':52,'multiline':False]['text':' push w: dict','line_number':53,'multiline':False]['text':' push t: dict','line_number':54,'multiline':False]['text':' push s: variable isn_arg.loadstore','line_number':55,'multiline':False]['text':' push exported variable isn_arg.loadstore','line_number':56,'multiline':False]['text':' push variable from outer scope isn_arg.outer','line_number':57,'multiline':False]['text':' push script-local variable isn_arg.script.','line_number':58,'multiline':False]['text':' push option isn_arg.string','line_number':59,'multiline':False]['text':' push environment variable isn_arg.string','line_number':60,'multiline':False]['text':' push register isn_arg.number','line_number':61,'multiline':False]['text':' pop into local variable isn_arg.number','line_number':63,'multiline':False]['text':' pop into v: variable isn_arg.number','line_number':64,'multiline':False]['text':' pop into global variable isn_arg.string','line_number':65,'multiline':False]['text':' pop into global autoload variable isn_arg.string','line_number':66,'multiline':False]['text':' pop into buffer-local variable isn_arg.string','line_number':67,'multiline':False]['text':' pop into window-local variable isn_arg.string','line_number':68,'multiline':False]['text':' pop into tab-local variable isn_arg.string','line_number':69,'multiline':False]['text':' pop into script variable isn_arg.loadstore','line_number':70,'multiline':False]['text':' pop into exported script variable isn_arg.loadstore','line_number':71,'multiline':False]['text':' pop variable into outer scope isn_arg.outer','line_number':72,'multiline':False]['text':' pop into script variable isn_arg.script','line_number':73,'multiline':False]['text':' pop into option isn_arg.storeopt','line_number':74,'multiline':False]['text':' pop into option isn_arg.storeopt','line_number':75,'multiline':False]['text':' pop into environment variable isn_arg.string','line_number':76,'multiline':False]['text':' pop into register isn_arg.number','line_number':77,'multiline':False]['text':' ISN_STOREOTHER, // pop into other script variable isn_arg.other.','line_number':78,'multiline':False]['text':' store number into local variable isn_arg.storenr.stnr_idx','line_number':80,'multiline':False]['text':' store into list or dictionary, using','line_number':81,'multiline':False]['text':' isn_arg.storeindex; value/index/variable on stack','line_number':82,'multiline':False]['text':' store into blob,','line_number':83,'multiline':False]['text':' value/index 1/index 2/variable on stack','line_number':84,'multiline':False]['text':' unlet variable isn_arg.unlet.ul_name','line_number':86,'multiline':False]['text':' unlet environment variable isn_arg.unlet.ul_name','line_number':87,'multiline':False]['text':' unlet item of list or dict','line_number':88,'multiline':False]['text':' unlet items of list','line_number':89,'multiline':False]['text':' :lock and :unlock for local variable member','line_number':91,'multiline':False]['text':' lock constant value','line_number':92,'multiline':False]['text':' constants','line_number':94,'multiline':False]['text':' push number isn_arg.number','line_number':95,'multiline':False]['text':' push bool value isn_arg.number','line_number':96,'multiline':False]['text':' push special value isn_arg.number','line_number':97,'multiline':False]['text':' push float isn_arg.fnumber','line_number':98,'multiline':False]['text':' push string isn_arg.string','line_number':99,'multiline':False]['text':' push blob isn_arg.blob','line_number':100,'multiline':False]['text':' push func isn_arg.string','line_number':101,'multiline':False]['text':' push NULL channel','line_number':102,'multiline':False]['text':' push NULL job','line_number':103,'multiline':False]['text':' push NULL object','line_number':104,'multiline':False]['text':' push class, uses isn_arg.classarg','line_number':105,'multiline':False]['text':' push list from stack items, size is isn_arg.number','line_number':106,'multiline':False]['text':' -1 for null_list','line_number':107,'multiline':False]['text':' push dict from stack items, size is isn_arg.number','line_number':108,'multiline':False]['text':' -1 for null_dict','line_number':109,'multiline':False]['text':' push NULL partial','line_number':110,'multiline':False]['text':' get item from autoload import, function or variable','line_number':112,'multiline':False]['text':' function call','line_number':114,'multiline':False]['text':' call builtin function isn_arg.bfunc','line_number':115,'multiline':False]['text':' call def function isn_arg.dfunc','line_number':116,'multiline':False]['text':' call method on interface, uses isn_arg.mfunc','line_number':117,'multiline':False]['text':' call user function or funcref/partial isn_arg.ufunc','line_number':118,'multiline':False]['text':' call partial, use isn_arg.pfunc','line_number':119,'multiline':False]['text':' cleanup after ISN_PCALL with cpf_top set','line_number':120,'multiline':False]['text':' return, result is on top of stack','line_number':121,'multiline':False]['text':' Push void, then return','line_number':122,'multiline':False]['text':' Push constructed object, then return','line_number':123,'multiline':False]['text':' push a function ref to dfunc isn_arg.funcref','line_number':124,'multiline':False]['text':' create a global function from a lambda function','line_number':125,'multiline':False]['text':' list functions','line_number':126,'multiline':False]['text':' :defer  argument count is isn_arg.number','line_number':127,'multiline':False]['text':' expression operations','line_number':129,'multiline':False]['text':' jump if condition is matched isn_arg.jump','line_number':130,'multiline':False]['text':' jump if argument is already set, uses','line_number':131,'multiline':False]['text':' isn_arg.jumparg','line_number':132,'multiline':False]['text':' jump if argument is not set, uses','line_number':133,'multiline':False]['text':' isn_arg.jumparg','line_number':134,'multiline':False]['text':' loop','line_number':136,'multiline':False]['text':' get next item from a list, uses isn_arg.forloop','line_number':137,'multiline':False]['text':' jump if condition false, store funcref count, uses','line_number':138,'multiline':False]['text':' isn_arg.whileloop','line_number':139,'multiline':False]['text':' handle variables for closures, uses isn_arg.endloop','line_number':140,'multiline':False]['text':' add entry to ec_trystack, uses isn_arg.tryref','line_number':142,'multiline':False]['text':' pop value of stack, store in v:exception','line_number':143,'multiline':False]['text':' push v:exception','line_number':144,'multiline':False]['text':' drop v:exception','line_number':145,'multiline':False]['text':' start of :finally block','line_number':146,'multiline':False]['text':' take entry off from ec_trystack','line_number':147,'multiline':False]['text':' handle :continue or :break inside a :try statement','line_number':148,'multiline':False]['text':' more expression operations','line_number':150,'multiline':False]['text':' add two lists','line_number':151,'multiline':False]['text':' add two blobs','line_number':152,'multiline':False]['text':' operation with two arguments; isn_arg.op.op_type is exprtype_T','line_number':154,'multiline':False]['text':' comparative operations; isn_arg.op.op_type is exprtype_T, op_ic used','line_number':159,'multiline':False]['text':' expression operations','line_number':174,'multiline':False]['text':' concatenate isn_arg.number strings','line_number':175,'multiline':False]['text':' [expr] string index','line_number':176,'multiline':False]['text':' [expr:expr] string slice','line_number':177,'multiline':False]['text':' append to a list, like add()','line_number':178,'multiline':False]['text':' [expr] list index','line_number':179,'multiline':False]['text':' [expr:expr] list slice','line_number':180,'multiline':False]['text':' [expr] blob index','line_number':181,'multiline':False]['text':' [expr:expr] blob slice','line_number':182,'multiline':False]['text':' [expr] runtime index','line_number':183,'multiline':False]['text':' [expr:expr] runtime slice','line_number':184,'multiline':False]['text':' drop isn_arg.number items from start of list','line_number':185,'multiline':False]['text':' append to a blob, like add()','line_number':186,'multiline':False]['text':' push list item, isn_arg.number is the index','line_number':187,'multiline':False]['text':' dict[member]','line_number':188,'multiline':False]['text':' dict.member using isn_arg.string','line_number':189,'multiline':False]['text':' falsy/truthy to bool, uses isn_arg.tobool','line_number':190,'multiline':False]['text':' convert value to bool','line_number':191,'multiline':False]['text':' convert value to string at isn_arg.tostring on stack','line_number':192,'multiline':False]['text':' like ISN_2STRING but check type','line_number':193,'multiline':False]['text':' apply "-" to number','line_number':194,'multiline':False]['text':' check value type is isn_arg.type.ct_type','line_number':196,'multiline':False]['text':' check list length is isn_arg.checklen.cl_min_len','line_number':197,'multiline':False]['text':' set dict type to isn_arg.type.ct_type','line_number':198,'multiline':False]['text':' clear dict saved by ISN_MEMBER/ISN_STRINGMEMBER','line_number':200,'multiline':False]['text':' use or clear dict saved by ISN_MEMBER/ISN_STRINGMEMBER','line_number':201,'multiline':False]['text':' ":put", uses isn_arg.put','line_number':203,'multiline':False]['text':' set cmdmod','line_number':205,'multiline':False]['text':' undo ISN_CMDMOD','line_number':206,'multiline':False]['text':' start a line for profiling','line_number':208,'multiline':False]['text':' end a line for profiling','line_number':209,'multiline':False]['text':' check for debug breakpoint, uses isn_arg.debug','line_number':211,'multiline':False]['text':' unpack list into items, uses isn_arg.unpack','line_number':213,'multiline':False]['text':' move item on stack up or down','line_number':214,'multiline':False]['text':' pop stack and discard value','line_number':215,'multiline':False]['text':' :redir =>','line_number':217,'multiline':False]['text':' :redir END, isn_arg.number == 1 for append','line_number':218,'multiline':False]['text':' first part of :cexpr  isn_arg.number is cmdidx','line_number':220,'multiline':False]['text':' second part of :cexpr, uses isn_arg.cexpr','line_number':221,'multiline':False]['text':' end marker in list of instructions','line_number':223,'multiline':False]['text':' arguments to ISN_BCALL','line_number':227,'multiline':False]['text':' index in "global_functions"','line_number':229,'multiline':False]['text':' number of arguments on top of stack','line_number':230,'multiline':False]['text':' arguments to ISN_DCALL','line_number':233,'multiline':False]['text':' index in "def_functions" for ISN_DCALL','line_number':235,'multiline':False]['text':' number of arguments on top of stack','line_number':236,'multiline':False]['text':' arguments to ISN_METHODCALL','line_number':239,'multiline':False]['text':' interface used','line_number':241,'multiline':False]['text':' index in "def_functions" for ISN_DCALL','line_number':242,'multiline':False]['text':' number of arguments on top of stack','line_number':243,'multiline':False]['text':' arguments to ISN_PCALL','line_number':246,'multiline':False]['text':' when TRUE partial is above the arguments','line_number':248,'multiline':False]['text':' number of arguments on top of stack','line_number':249,'multiline':False]['text':' arguments to ISN_UCALL and ISN_XCALL','line_number':252,'multiline':False]['text':' number of arguments on top of stack','line_number':255,'multiline':False]['text':' arguments to ISN_GETITEM','line_number':258,'multiline':False]['text':' pop and jump if false','line_number':267,'multiline':False]['text':' pop and jump if false for :while','line_number':268,'multiline':False]['text':' jump if top of stack is truthy, drop if not','line_number':269,'multiline':False]['text':' jump if top of stack is true, drop if not','line_number':270,'multiline':False]['text':' jump if top of stack is false, drop if not','line_number':271,'multiline':False]['text':' arguments to ISN_JUMP','line_number':274,'multiline':False]['text':' position to jump to','line_number':277,'multiline':False]['text':' arguments to ISN_JUMP_IF_ARG_SET and ISN_JUMP_IF_ARG_NOT_SET','line_number':280,'multiline':False]['text':' argument index, negative','line_number':282,'multiline':False]['text':' position to jump to','line_number':283,'multiline':False]['text':' arguments to ISN_FOR','line_number':286,'multiline':False]['text':' loop variable index','line_number':288,'multiline':False]['text':' position to jump to after done','line_number':289,'multiline':False]['text':' arguments to ISN_WHILE','line_number':292,'multiline':False]['text':' variable index for funcref count','line_number':294,'multiline':False]['text':' position to jump to after done','line_number':295,'multiline':False]['text':' arguments to ISN_ENDLOOP','line_number':298,'multiline':False]['text':' variable index of funcrefs.ga_len','line_number':300,'multiline':False]['text':' nested loop depth','line_number':301,'multiline':False]['text':' first variable declared in the loop','line_number':302,'multiline':False]['text':' number of variables declared in the loop','line_number':303,'multiline':False]['text':' indirect arguments to ISN_TRY','line_number':306,'multiline':False]['text':' position to jump to on throw','line_number':308,'multiline':False]['text':' :finally or :endtry position to jump to','line_number':309,'multiline':False]['text':' :endtry position to jump to','line_number':310,'multiline':False]['text':' arguments to ISN_TRY','line_number':313,'multiline':False]['text':' arguments to ISN_TRYCONT','line_number':318,'multiline':False]['text':' number of nested try statements','line_number':320,'multiline':False]['text':' position to jump to, WHILE or FOR','line_number':321,'multiline':False]['text':' arguments to ISN_ECHO','line_number':324,'multiline':False]['text':' :echo instead of :echon','line_number':326,'multiline':False]['text':' number of expressions','line_number':327,'multiline':False]['text':' arguments to ISN_OPNR, ISN_OPFLOAT, etc.','line_number':330,'multiline':False]['text':' TRUE with '#', FALSE with '?', else MAYBE','line_number':333,'multiline':False]['text':' arguments to ISN_CHECKTYPE','line_number':336,'multiline':False]['text':' offset in stack, -1 is bottom','line_number':339,'multiline':False]['text':' argument index or zero','line_number':340,'multiline':False]['text':' when TRUE checking variable instead of arg','line_number':341,'multiline':False]['text':' arguments to ISN_STORENR','line_number':344,'multiline':False]['text':' arguments to ISN_STOREOPT and ISN_STOREFUNCOPT','line_number':350,'multiline':False]['text':' arguments to ISN_LOADS and ISN_STORES','line_number':356,'multiline':False]['text':' variable name (with s: for ISN_STORES)','line_number':358,'multiline':False]['text':' script ID','line_number':359,'multiline':False]['text':' arguments to ISN_LOADSCRIPT and ISN_STORESCRIPT','line_number':362,'multiline':False]['text':' script ID','line_number':364,'multiline':False]['text':' index in sn_var_vals','line_number':365,'multiline':False]['text':' sn_script_seq when compiled','line_number':366,'multiline':False]['text':' type of the variable when compiled','line_number':367,'multiline':False]['text':' arguments to ISN_UNLET','line_number':374,'multiline':False]['text':' variable name with g:, w:, etc.','line_number':376,'multiline':False]['text':' forceit flag','line_number':377,'multiline':False]['text':' extra arguments for funcref_T','line_number':380,'multiline':False]['text':' function name for legacy function','line_number':382,'multiline':False]['text':' info about variables inside loops','line_number':383,'multiline':False]['text':' class for a method','line_number':384,'multiline':False]['text':' class or object method','line_number':385,'multiline':False]['text':' method index on "fre_class"','line_number':386,'multiline':False]['text':' arguments to ISN_FUNCREF','line_number':389,'multiline':False]['text':' function index for :def function','line_number':391,'multiline':False]['text':' optional extra information','line_number':392,'multiline':False]['text':' arguments to ISN_NEWFUNC','line_number':395,'multiline':False]['text':' name of the lambda already defined','line_number':397,'multiline':False]['text':' name of the global function to be created','line_number':398,'multiline':False]['text':' ifno about variables inside loops','line_number':399,'multiline':False]['text':' arguments to ISN_CHECKLEN','line_number':406,'multiline':False]['text':' minimum length','line_number':408,'multiline':False]['text':' longer is allowed','line_number':409,'multiline':False]['text':' arguments to ISN_SHUFFLE','line_number':412,'multiline':False]['text':' item to move (relative to top of stack)','line_number':414,'multiline':False]['text':' places to move upwards','line_number':415,'multiline':False]['text':' arguments to ISN_PUT','line_number':418,'multiline':False]['text':' register, can be NUL','line_number':420,'multiline':False]['text':' line number to put below','line_number':421,'multiline':False]['text':' arguments to ISN_CMDMOD','line_number':424,'multiline':False]['text':' allocated','line_number':426,'multiline':False]['text':' arguments to ISN_UNPACK','line_number':429,'multiline':False]['text':' number of items to produce','line_number':431,'multiline':False]['text':' last item gets list of remainder','line_number':432,'multiline':False]['text':' arguments to ISN_LOADOUTER and ISN_STOREOUTER','line_number':435,'multiline':False]['text':' index','line_number':437,'multiline':False]['text':' nesting level, stack frames to go up','line_number':438,'multiline':False]['text':' used for outer_depth for loop variables','line_number':441,'multiline':False]['text':' arguments to ISN_SUBSTITUTE','line_number':443,'multiline':False]['text':' :s command','line_number':445,'multiline':False]['text':' sequence of instructions','line_number':446,'multiline':False]['text':' indirect arguments to ISN_TRY','line_number':449,'multiline':False]['text':' arguments to ISN_CEXPR_CORE','line_number':456,'multiline':False]['text':' arguments to ISN_2STRING and ISN_2STRING_ANY','line_number':461,'multiline':False]['text':' arguments to ISN_2BOOL','line_number':467,'multiline':False]['text':' arguments to ISN_DEBUG','line_number':473,'multiline':False]['text':' current number of local variables','line_number':475,'multiline':False]['text':' first line to break after','line_number':476,'multiline':False]['text':' arguments to ISN_DEFER','line_number':479,'multiline':False]['text':' local variable index for defer list','line_number':481,'multiline':False]['text':' number of arguments','line_number':482,'multiline':False]['text':' arguments to ISN_ECHOWINDOW','line_number':485,'multiline':False]['text':' number of arguments','line_number':487,'multiline':False]['text':' time argument (msec)','line_number':488,'multiline':False]['text':' arguments to ISN_CONSTRUCT','line_number':491,'multiline':False]['text':' size of object in bytes','line_number':493,'multiline':False]['text':' class the object is created from','line_number':494,'multiline':False]['text':' arguments to ISN_STORE_CLASSMEMBER, ISN_LOAD_CLASSMEMBER, ISN_GET_ITF_MEMBER','line_number':497,'multiline':False]['text':' arguments to ISN_STOREINDEX','line_number':503,'multiline':False]['text':' arguments to ISN_LOCKUNLOCK','line_number':509,'multiline':False]['text':' for exec_command','line_number':511,'multiline':False]['text':' executing, null if not class/obj method','line_number':512,'multiline':False]['text':' is lval_root a function arg','line_number':513,'multiline':False]['text':'
 * Instruction
 ','line_number':516,'multiline':True]['text':'
 * Info about a function defined with :def.  Used in "def_functions".
 ','line_number':576,'multiline':True]['text':' struct containing most stuff','line_number':580,'multiline':False]['text':' how many ufunc_T point to this dfunc_T','line_number':581,'multiline':False]['text':' index in def_functions','line_number':582,'multiline':False]['text':' if TRUE function was deleted','line_number':583,'multiline':False]['text':' TRUE when in','line_number':584,'multiline':False]['text':' delete_def_function_contents()','line_number':585,'multiline':False]['text':' Value of sctx_T sc_seq when the function','line_number':586,'multiline':False]['text':' was compiled.','line_number':587,'multiline':False]['text':' name used for error messages','line_number':588,'multiline':False]['text':' default argument instructions','line_number':590,'multiline':False]['text':' names of local vars','line_number':591,'multiline':False]['text':' After compiling "df_instr" and/or "df_instr_prof" is not NULL.','line_number':593,'multiline':False]['text':' function body to be executed','line_number':594,'multiline':False]['text':' size of "df_instr"','line_number':595,'multiline':False]['text':' size of "df_instr_debug"','line_number':596,'multiline':False]['text':' like "df_instr" with debugging','line_number':597,'multiline':False]['text':' like "df_instr" with profiling','line_number':599,'multiline':False]['text':' size of "df_instr_prof"','line_number':600,'multiline':False]['text':' number of local variables','line_number':603,'multiline':False]['text':' one if a closure was created','line_number':604,'multiline':False]['text':' index of local variable that has a list','line_number':605,'multiline':False]['text':' of deferred function calls; zero if not','line_number':606,'multiline':False]['text':' set','line_number':607,'multiline':False]['text':' Number of entries used by stack frame for a function call.','line_number':610,'multiline':False]['text':' - ec_dfunc_idx:   function index','line_number':611,'multiline':False]['text':' - ec_iidx:	     instruction index','line_number':612,'multiline':False]['text':' - ec_instr:       instruction list pointer','line_number':613,'multiline':False]['text':' - ec_outer:	     stack used for closures','line_number':614,'multiline':False]['text':' - funclocal:	     function-local data','line_number':615,'multiline':False]['text':' - ec_frame_idx:   previous frame index','line_number':616,'multiline':False]['text':' Used for "lnum" when a range is to be taken from the stack.','line_number':628,'multiline':False]['text':' Used for "lnum" when a range is to be taken from the stack and "!" is used.','line_number':631,'multiline':False]['text':' Keep in sync with get_compile_type()','line_number':634,'multiline':False]['text':' Structure passed between the compile_expr* functions to keep track of','line_number':649,'multiline':False]['text':' constants that have been parsed but for which no code was produced yet.  If','line_number':650,'multiline':False]['text':' possible expressions on these constants are applied at compile time.  If','line_number':651,'multiline':False]['text':' that is not possible, the code to push the constants needs to be generated','line_number':652,'multiline':False]['text':' before other instructions.','line_number':653,'multiline':False]['text':' Using 50 should be more than enough of 5 levels of ().','line_number':654,'multiline':False]['text':' stack of ppconst constants','line_number':657,'multiline':False]['text':' active entries in pp_tv[]','line_number':658,'multiline':False]['text':' all generated code was constants, used for a','line_number':659,'multiline':False]['text':' list or dict with constant members','line_number':660,'multiline':False]['text':' values for ctx_skip','line_number':663,'multiline':False]['text':' condition is a constant, produce code','line_number':665,'multiline':False]['text':' condition is a constant, do NOT produce code','line_number':666,'multiline':False]['text':' condition is not a constant, produce code','line_number':667,'multiline':False]['text':'
 * Chain of jump instructions where the end label needs to be set.
 ','line_number':670,'multiline':True]['text':' chain end_label locations','line_number':675,'multiline':False]['text':' instruction idx where to set end','line_number':676,'multiline':False]['text':'
 * info specific for the scope of :if / elseif / else
 ','line_number':679,'multiline':True]['text':' a block was unconditionally executed','line_number':684,'multiline':False]['text':' every block ends in :return','line_number':685,'multiline':False]['text':' instruction idx at IF or ELSEIF','line_number':686,'multiline':False]['text':' instructions to set end label','line_number':687,'multiline':False]['text':' info used by :for and :while needed for ENDLOOP','line_number':690,'multiline':False]['text':' ctx_locals.ga_len at loop start','line_number':692,'multiline':False]['text':' ctx_closure_count at loop start','line_number':693,'multiline':False]['text':' index of var that holds funcref count','line_number':694,'multiline':False]['text':' nested loop depth','line_number':695,'multiline':False]['text':'
 * info specific for the scope of :while
 ','line_number':698,'multiline':True]['text':' instruction idx at WHILE','line_number':702,'multiline':False]['text':' instructions to set end','line_number':703,'multiline':False]['text':' info for LOOPEND','line_number':704,'multiline':False]['text':'
 * info specific for the scope of :for
 ','line_number':707,'multiline':True]['text':' instruction idx at FOR','line_number':711,'multiline':False]['text':' break instructions','line_number':712,'multiline':False]['text':' info for LOOPEND','line_number':713,'multiline':False]['text':'
 * info specific for the scope of :try
 ','line_number':716,'multiline':True]['text':' instruction idx at TRY','line_number':720,'multiline':False]['text':' jump to :finally or :endtry','line_number':721,'multiline':False]['text':' instruction idx of last CATCH','line_number':722,'multiline':False]['text':' "catch" without argument encountered','line_number':723,'multiline':False]['text':' "finally" encountered','line_number':724,'multiline':False]['text':' one of the blocks did not end in return','line_number':725,'multiline':False]['text':'
 * Info for one scope, pointed to by "ctx_scope".
 ','line_number':737,'multiline':True]['text':' scope containing this one','line_number':742,'multiline':False]['text':' ctx_locals.ga_len before scope','line_number':744,'multiline':False]['text':' ctx_skip before the block','line_number':745,'multiline':False]['text':' number of loop scopes, including this','line_number':746,'multiline':False]['text':'
 * Entry for "ctx_locals".  Used for arguments and local variables.
 ','line_number':755,'multiline':True]['text':' index of the variable on the stack','line_number':761,'multiline':False]['text':' depth for variable inside a loop or -1','line_number':762,'multiline':False]['text':' index of first variable inside a loop or -1','line_number':763,'multiline':False]['text':' nesting level, using ctx_outer scope','line_number':764,'multiline':False]['text':' ASSIGN_VAR (can be assigned to),','line_number':765,'multiline':False]['text':' ASSIGN_FINAL (no assignment) or ASSIGN_CONST','line_number':766,'multiline':False]['text':' (value cannot be changed)','line_number':767,'multiline':False]['text':' when TRUE this is an argument','line_number':768,'multiline':False]['text':' Destination for an assignment or ":unlet" with an index.','line_number':771,'multiline':False]['text':' Used by compile_lhs() to store information about the LHS of an assignment','line_number':788,'multiline':False]['text':' and one argument of ":unlet" with an index.','line_number':789,'multiline':False]['text':' type of destination','line_number':791,'multiline':False]['text':' allocated name excluding the last','line_number':793,'multiline':False]['text':' "[expr]" or ".name".','line_number':794,'multiline':False]['text':' length of the variable without','line_number':795,'multiline':False]['text':' "[expr]" or ".name"','line_number':796,'multiline':False]['text':' allocated name including the last','line_number':797,'multiline':False]['text':' "[expr]" or ".name" for :redir','line_number':798,'multiline':False]['text':' length of the variable including','line_number':799,'multiline':False]['text':' any "[expr]" or ".name"','line_number':800,'multiline':False]['text':' end of the destination, including','line_number':801,'multiline':False]['text':' "[expr]" or ".name".','line_number':802,'multiline':False]['text':' end including any type','line_number':803,'multiline':False]['text':' has "[expr]" or ".name"','line_number':805,'multiline':False]['text':' create new local variable','line_number':807,'multiline':False]['text':' for when destination is an option','line_number':808,'multiline':False]['text':' for when destination is a v:var','line_number':809,'multiline':False]['text':' used for existing local destination','line_number':811,'multiline':False]['text':' used for argument destination','line_number':812,'multiline':False]['text':' points to destination lvar','line_number':813,'multiline':False]['text':' for dest_class_member','line_number':815,'multiline':False]['text':' for dest_class_member','line_number':816,'multiline':False]['text':' type was specified','line_number':821,'multiline':False]['text':' object member index','line_number':823,'multiline':False]['text':' list/dict/object member type','line_number':824,'multiline':False]['text':' used by ISN_REDIREND','line_number':826,'multiline':False]['text':'
 * Context for compiling lines of a :def function.
 * Stores info about the local variables and condition stack.
 ','line_number':829,'multiline':True]['text':' current function','line_number':834,'multiline':False]['text':' line number in current function','line_number':835,'multiline':False]['text':' start of current line or NULL','line_number':836,'multiline':False]['text':' generated instructions','line_number':837,'multiline':False]['text':' line number below previous command, for','line_number':839,'multiline':False]['text':' debugging','line_number':840,'multiline':False]['text':' currently visible local variables','line_number':844,'multiline':False]['text':' set to one if a FUNCREF was used in the','line_number':846,'multiline':False]['text':' function','line_number':847,'multiline':False]['text':' incremented for each closure created in','line_number':848,'multiline':False]['text':' the function.','line_number':849,'multiline':False]['text':' current scope, NULL at toplevel','line_number':852,'multiline':False]['text':' last seen statement was "return"','line_number':853,'multiline':False]['text':' last seen statement was "throw"','line_number':854,'multiline':False]['text':' outer scope for lambda or nested','line_number':856,'multiline':False]['text':' function','line_number':857,'multiline':False]['text':' var in ctx_outer was used','line_number':858,'multiline':False]['text':' type of each item on the stack','line_number':860,'multiline':False]['text':' list of pointers to allocated types','line_number':861,'multiline':False]['text':' ISN_CMDMOD was generated','line_number':863,'multiline':False]['text':' LHS for ":redir => var", valid when','line_number':865,'multiline':False]['text':' lhs_name is not NULL','line_number':866,'multiline':False]['text':'
 * List of special functions for "compile_arguments()".
 ','line_number':869,'multiline':True]['text':' {skip} in searchpair() and searchpairpos()','line_number':874,'multiline':False]['text':' {sub} in substitute(), when prefixed with \=','line_number':875,'multiline':False]['text':' flags for typval2type()','line_number':878,'multiline':False]['text':' get most specific type for member','line_number':880,'multiline':False]['text':' flags for call_def_function()','line_number':882,'multiline':False]['text':' use the partial arguments','line_number':883,'multiline':False]