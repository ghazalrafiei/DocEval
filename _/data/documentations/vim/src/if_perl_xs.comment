['text':' vi:set ts=8 sts=4 sw=4 noet:
 *
 * VIM - Vi IMproved	by Bram Moolenaar
 *
 * Do ":help uganda"  in Vim to read copying and usage conditions.
 * Do ":help credits" in Vim to see a list of people who contributed.
 ','line_number':1,'multiline':True]['text':'
 * if_perl.xs: Main code for Perl interface support.
 *		Mostly written by Sven Verdoolaege.
 ','line_number':8,'multiline':True]['text':' avoid memset redeclaration ','line_number':13,'multiline':True]['text':' don't include if_perl.pro from proto.h ','line_number':14,'multiline':True]['text':'
 * Currently 32-bit version of ActivePerl is built with VC6 (or MinGW since
 * ActivePerl 5.18).
 * (http://community.activestate.com/faq/windows-compilers-perl-modules)
 * It means that time_t should be 32-bit. However the default size of
 * time_t is 64-bit since VC8. So we have to define _USE_32BIT_TIME_T.
 ','line_number':16,'multiline':True]['text':' Work around for using MSVC and ActivePerl 5.18.','line_number':30,'multiline':False]['text':' Work around for using MSVC and Strawberry Perl 5.30.','line_number':32,'multiline':False]['text':' Work around for using MSVC and Strawberry Perl 5.32.','line_number':34,'multiline':False]['text':' Work around for warning C4273 (inconsistent DLL linkage).','line_number':39,'multiline':False]['text':' Workaround for perl < 5.8.7 ','line_number':55,'multiline':True]['text':'
 * Work around clashes between Perl and Vim namespace.	proto.h doesn't
 * include if_perl.pro and perlsfio.pro when IN_PERL_FILE is defined, because
 * we need the CV typedef.  proto.h can't be moved to after including
 * if_perl.h, because we get all sorts of name clashes then.
 ','line_number':69,'multiline':True]['text':' Perl compatibility stuff. This should ensure compatibility with older','line_number':82,'multiline':False]['text':' versions of Perl.','line_number':83,'multiline':False]['text':' Work around for ActivePerl 5.20.3+: Avoid generating (g)vim.lib.','line_number':92,'multiline':False]['text':'
 * Quoting Jan Dubois of Active State:
 *    ActivePerl build 822 still identifies itself as 5.8.8 but already
 *    contains many of the changes from the upcoming Perl 5.8.9 release.
 *
 * The changes include addition of two symbols (Perl_sv_2iv_flags,
 * Perl_newXS_flags) not present in earlier releases.
 *
 * Jan Dubois suggested the following guarding scheme.
 *
 * Active State defined ACTIVEPERL_VERSION as a string in versions before
 * 5.8.8; and so the comparison to 822 below needs to be guarded.
 ','line_number':99,'multiline':True]['text':' Suppress Infinite warnings when compiling XS modules under macOS 12 Monterey.','line_number':135,'multiline':False]['text':' Compatibility hacks over ','line_number':140,'multiline':True]['text':'
 * For dynamic linked perl.
 ','line_number':147,'multiline':True]['text':' just generating prototypes ','line_number':152,'multiline':True]['text':'
 * Wrapper defines
 ','line_number':178,'multiline':True]['text':'
 * Declare HANDLE for perl.dll and function pointers.
 ','line_number':330,'multiline':True]['text':' Perl-5.18 has a different Perl_croak_xs_usage signature. ','line_number':346,'multiline':True]['text':' Perl-5.18 has a different Perl_sv_free2 signature. ','line_number':443,'multiline':True]['text':'
 * Table of name to function pointer of perl.
 ','line_number':503,'multiline':True]['text':' In 5.30, GIMME_V requires linking to Perl_block_gimme() instead of being','line_number':664,'multiline':False]['text':' completely inline. Just use the deprecated GIMME for simplicity.','line_number':665,'multiline':False]['text':'
 * Make all runtime-links of perl.
 *
 * 1. Get module handle using dlopen() or vimLoadLib().
 * 2. Get pointer to perl function by GetProcAddress.
 * 3. Repeat 2, until get all functions will be used.
 *
 * Parameter 'libname' provides name of DLL.
 * Return OK or FAIL.
 ','line_number':670,'multiline':True]['text':'
 * If runtime-link-perl(DLL) was loaded successfully, return TRUE.
 * There were no DLL loaded, return FALSE.
 ','line_number':708,'multiline':True]['text':' DYNAMIC_PERL ','line_number':717,'multiline':True]['text':'
 * perl_init(): initialize perl interpreter
 * We have to call perl_parse to initialize some structures,
 * there's nothing to actually parse.
 ','line_number':723,'multiline':True]['text':'
 * Clean up after ourselves.
 ','line_number':753,'multiline':True]['text':'
 * msg_split(): send a message to the message handling routines
 * split at '\n' first though.
 ','line_number':771,'multiline':True]['text':' highlighting attributes ','line_number':778,'multiline':True]['text':' replace \n with \0 ','line_number':785,'multiline':True]['text':'
 * This stub is needed because an "#ifdef FEAT_EVAL" around Eval() doesn't
 * work properly.
 ','line_number':794,'multiline':True]['text':'
 * Create a new reference to an SV pointing to the SCR structure
 * The b_perl_private/w_perl_private part of the SCR structure points to the
 * SV, so there can only be one such SV for a particular SCR structure.  When
 * the last reference has gone (DESTROY is called),
 * b_perl_private/w_perl_private is reset; When the screen goes away before
 * all references are gone, the value of the SV is reset;
 * any subsequent use of any of those reference will produce
 * a warning. (see typemap)
 ','line_number':808,'multiline':True]['text':'
 * perl_win_free
 *	Remove all references to the window to be destroyed
 ','line_number':857,'multiline':True]['text':'
 * Handler for the magic variables $main::curwin and $main::curbuf.
 * The handler is put into the magic vtbl for these variables.
 * (This is effectively a C-level equivalent of a tied variable).
 * There is no "set" function as the variables are read-only.
 ','line_number':894,'multiline':True]['text':' XXX: This magic variable is a bit confusing...','line_number':914,'multiline':False]['text':' Is currently refcounted ?','line_number':915,'multiline':False]['text':' !PROTO ','line_number':922,'multiline':True]['text':'
 * VIM_init(): Vim-specific initialisation.
 * Make the magical main::curwin and main::curbuf variables
 ','line_number':927,'multiline':True]['text':'
     * Setup the Safe compartment.
     * It shouldn't be a fatal error if the Safe module is missing.
     * XXX: Only shares the 'Msg' routine (which has to be called
     * like 'Msg(...)').
     ','line_number':946,'multiline':True]['text':'
 * ":perl"
 ','line_number':960,'multiline':True]['text':' avoid a warning for unreachable code ','line_number':1010,'multiline':True]['text':' float ','line_number':1117,'multiline':True]['text':' integer ','line_number':1121,'multiline':True]['text':' references should be string ','line_number':1122,'multiline':True]['text':' FALLTHROUGH ','line_number':1126,'multiline':True]['text':' string ','line_number':1127,'multiline':True]['text':' list ','line_number':1149,'multiline':True]['text':' dictionary ','line_number':1189,'multiline':True]['text':' not convertible ','line_number':1241,'multiline':True]['text':'
 * "perleval()"
 ','line_number':1252,'multiline':True]['text':' avoid a warning for unreachable code ','line_number':1285,'multiline':True]['text':'
 * ":perldo".
 ','line_number':1318,'multiline':True]['text':' Check the line number, the command my have deleted lines. ','line_number':1364,'multiline':True]['text':' flags ','line_number':1433,'multiline':True]['text':' popped ','line_number':1435,'multiline':True]['text':' open ','line_number':1436,'multiline':True]['text':' binmode ','line_number':1437,'multiline':True]['text':' arg ','line_number':1438,'multiline':True]['text':' fileno ','line_number':1439,'multiline':True]['text':' dup ','line_number':1440,'multiline':True]['text':' read ','line_number':1441,'multiline':True]['text':' unread ','line_number':1442,'multiline':True]['text':' seek ','line_number':1444,'multiline':True]['text':' tell ','line_number':1445,'multiline':True]['text':' close ','line_number':1446,'multiline':True]['text':' flush ','line_number':1447,'multiline':True]['text':' fill ','line_number':1448,'multiline':True]['text':' eof ','line_number':1449,'multiline':True]['text':' error ','line_number':1450,'multiline':True]['text':' clearerr ','line_number':1451,'multiline':True]['text':' setlinebuf ','line_number':1452,'multiline':True]['text':' get_base ','line_number':1453,'multiline':True]['text':' get_bufsiz ','line_number':1454,'multiline':True]['text':' get_ptr ','line_number':1455,'multiline':True]['text':' get_cnt ','line_number':1456,'multiline':True]['text':' set_ptrcnt ','line_number':1457,'multiline':True]['text':' Use Vim routine for print operator ','line_number':1460,'multiline':True]['text':' PERLIO_LAYERS && !USE_SFIO ','line_number':1468,'multiline':True]['text':' Certain functionality that we use like SvREFCNT_dec are inlined for','line_number':1472,'multiline':False]['text':' performance reasons. They reference Perl APIs like Perl_sv_free2(), which','line_number':1473,'multiline':False]['text':' would cause linking errors in dynamic builds as we don't link against Perl','line_number':1474,'multiline':False]['text':' during build time. Manually fix it here by redirecting these functions','line_number':1475,'multiline':False]['text':' towards the dynamically loaded version.','line_number':1476,'multiline':False]['text':' DYNAMIC_PERL','line_number':1522,'multiline':False]['text':' DynaLoader is a special case ','line_number':1531,'multiline':True]['text':' put cursor on an existing line ','line_number':1757,'multiline':True]['text':' No file name returns an empty string ','line_number':1778,'multiline':True]['text':' Set curwin/curbuf for "vimbuf" and save some things. ','line_number':1846,'multiline':True]['text':' Only when a window was found. ','line_number':1850,'multiline':True]['text':' restore curwin/curbuf and a few other things ','line_number':1857,'multiline':True]['text':' Careful: autocommands may have made "vimbuf" invalid! ','line_number':1859,'multiline':True]['text':' set curwin/curbuf for "vimbuf" and save some things ','line_number':1899,'multiline':True]['text':' Only when a window was found. ','line_number':1903,'multiline':True]['text':' restore curwin/curbuf and a few other things ','line_number':1911,'multiline':True]['text':' Careful: autocommands may have made "vimbuf"
			 * invalid! ','line_number':1913,'multiline':True]['text':' set curwin/curbuf for "vimbuf" and save some things ','line_number':1945,'multiline':True]['text':' Only when a window for "vimbuf" was found. ','line_number':1949,'multiline':True]['text':' restore curwin/curbuf and a few other things ','line_number':1956,'multiline':True]['text':' Careful: autocommands may have made "vimbuf" invalid! ','line_number':1958,'multiline':True]