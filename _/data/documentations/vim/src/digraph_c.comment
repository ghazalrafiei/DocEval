['text':' vi:set ts=8 sts=4 sw=4 noet:
 *
 * VIM - Vi IMproved	by Bram Moolenaar
 *
 * Do ":help uganda"  in Vim to read copying and usage conditions.
 * Do ":help credits" in Vim to see a list of people who contributed.
 * See README.txt for an overview of the Vim source code.
 ','line_number':1,'multiline':True]['text':'
 * digraph.c: code for digraphs
 ','line_number':10,'multiline':True]['text':' digraphs added by the user','line_number':29,'multiline':False]['text':'
 * digraphs for Unicode from RFC1345
 * (also work for ISO-8859-1 aka latin1)
 *
 * Note: Characters marked with XX are not included literally, because some
 * compilers cannot handle them (Amiga SAS/C is the most picky one).
 ','line_number':32,'multiline':True]['text':' LF for NUL','line_number':40,'multiline':False]['text':' ¡ Vim 5.x compatible','line_number':121,'multiline':False]['text':' ¢ Vim 5.x compatible','line_number':123,'multiline':False]['text':' £ Vim 5.x compatible','line_number':125,'multiline':False]['text':' ¤ Vim 5.x compatible','line_number':127,'multiline':False]['text':' ¥ Vim 5.x compatible','line_number':129,'multiline':False]['text':' ¦ Vim 5.x compatible','line_number':131,'multiline':False]['text':' © Vim 5.x compatible','line_number':135,'multiline':False]['text':' ¬ Vim 5.x compatible','line_number':139,'multiline':False]['text':' ¯ Vim 5.x compatible','line_number':143,'multiline':False]['text':' ° Vim 5.x compatible','line_number':145,'multiline':False]['text':' ² Vim 5.x compatible','line_number':148,'multiline':False]['text':' ³ Vim 5.x compatible','line_number':150,'multiline':False]['text':' ¶ Vim 5.x compatible','line_number':154,'multiline':False]['text':' · Vim 5.x compatible','line_number':156,'multiline':False]['text':' ¹ Vim 5.x compatible','line_number':159,'multiline':False]['text':' ¿ Vim 5.x compatible','line_number':166,'multiline':False]['text':' À Vim 5.x compatible','line_number':168,'multiline':False]['text':' Â Vim 5.x compatible','line_number':171,'multiline':False]['text':' Ã Vim 5.x compatible','line_number':173,'multiline':False]['text':' Ä Vim 5.x compatible','line_number':175,'multiline':False]['text':' Å Vim 5.x compatible','line_number':177,'multiline':False]['text':' È Vim 5.x compatible','line_number':181,'multiline':False]['text':' Ê Vim 5.x compatible','line_number':184,'multiline':False]['text':' Ë Vim 5.x compatible','line_number':186,'multiline':False]['text':' Ì Vim 5.x compatible','line_number':188,'multiline':False]['text':' Î Vim 5.x compatible','line_number':191,'multiline':False]['text':' Ï Vim 5.x compatible','line_number':193,'multiline':False]['text':' Ñ Vim 5.x compatible','line_number':196,'multiline':False]['text':' Ò Vim 5.x compatible','line_number':198,'multiline':False]['text':' Ô Vim 5.x compatible','line_number':201,'multiline':False]['text':' Õ Vim 5.x compatible','line_number':203,'multiline':False]['text':' × Vim 5.x compatible','line_number':206,'multiline':False]['text':' Ù Vim 5.x compatible','line_number':209,'multiline':False]['text':' Û Vim 5.x compatible','line_number':212,'multiline':False]['text':' Þ Vim 5.x compatible','line_number':216,'multiline':False]['text':' à Vim 5.x compatible','line_number':219,'multiline':False]['text':' â Vim 5.x compatible','line_number':222,'multiline':False]['text':' ã Vim 5.x compatible','line_number':224,'multiline':False]['text':' ä Vim 5.x compatible','line_number':226,'multiline':False]['text':' å Vim 5.x compatible','line_number':228,'multiline':False]['text':' è Vim 5.x compatible','line_number':232,'multiline':False]['text':' ê Vim 5.x compatible','line_number':235,'multiline':False]['text':' ë Vim 5.x compatible','line_number':237,'multiline':False]['text':' ì Vim 5.x compatible','line_number':239,'multiline':False]['text':' î Vim 5.x compatible','line_number':242,'multiline':False]['text':' ñ Vim 5.x compatible','line_number':246,'multiline':False]['text':' ò Vim 5.x compatible','line_number':248,'multiline':False]['text':' ô Vim 5.x compatible','line_number':251,'multiline':False]['text':' õ Vim 5.x compatible','line_number':253,'multiline':False]['text':' ù Vim 5.x compatible','line_number':258,'multiline':False]['text':' û Vim 5.x compatible','line_number':261,'multiline':False]['text':' x XX  Vim 5.x compatible','line_number':266,'multiline':False]['text':' extra alternative, easier to remember','line_number':773,'multiline':False]['text':' extra alternative, easier to remember','line_number':775,'multiline':False]['text':' extra alternative, easier to remember','line_number':809,'multiline':False]['text':' extra alternative, easier to remember','line_number':811,'multiline':False]['text':' euro','line_number':899,'multiline':False]['text':' euro','line_number':900,'multiline':False]['text':' rouble','line_number':901,'multiline':False]['text':' rouble','line_number':902,'multiline':False]['text':' code points 0xe000 - 0xefff excluded, they have no assigned','line_number':1427,'multiline':False]['text':' characters, only used in proposals.','line_number':1428,'multiline':False]['text':' end marker','line_number':1435,'multiline':False]['text':'
 * handle digraphs after typing a character
 ','line_number':1438,'multiline':True]['text':' character before K_BS','line_number':1444,'multiline':False]['text':' last typed character','line_number':1445,'multiline':False]['text':' init values','line_number':1447,'multiline':False]['text':'
 * Find a digraph for "val".  If found return the string to display it.
 * If not found return NULL.
 ','line_number':1463,'multiline':True]['text':' convert the character from 'encoding' to Unicode','line_number':1482,'multiline':False]['text':'
 * Get a digraph.  Used after typing CTRL-K on the command line or in normal
 * mode.
 * Returns composed character, or NUL when ESC was used.
 ','line_number':1521,'multiline':True]['text':' TRUE when called from the cmdline','line_number':1528,'multiline':False]['text':' ESC cancels CTRL-K','line_number':1538,'multiline':False]['text':' insert special key code','line_number':1541,'multiline':False]['text':' ESC cancels CTRL-K','line_number':1559,'multiline':False]['text':'
 * Lookup the pair "char1", "char2" in the digraph tables.
 * If no match, return "char2".
 * If "meta_char" is TRUE and "char1" is a space, return "char2" | 0x80.
 ','line_number':1564,'multiline':True]['text':'
     * Search user digraphs first.
     ','line_number':1579,'multiline':True]['text':'
     * Search default digraphs.
     ','line_number':1593,'multiline':True]['text':'
	 * Convert the Unicode digraph to 'encoding'.
	 ','line_number':1615,'multiline':True]['text':' Ignore multi-byte characters when not in multi-byte mode.','line_number':1635,'multiline':False]['text':' digraph deleted or not found','line_number':1639,'multiline':False]['text':' <space> <char> --> meta-char','line_number':1641,'multiline':False]['text':'
 * Get digraph.
 * Allow for both char1-char2 and char2-char1
 ','line_number':1648,'multiline':True]['text':'
 * Add a digraph to the digraph table.
 ','line_number':1664,'multiline':True]['text':' If the digraph already exists, replace "result".','line_number':1673,'multiline':False]['text':' Add a new digraph to the table.','line_number':1685,'multiline':False]['text':'
 * Check the characters are valid for a digraph.
 * If they are valid, returns TRUE; otherwise, give an error message and
 * returns FALSE.
 ','line_number':1696,'multiline':True]['text':'
 * Add the digraphs in the argument to the digraph table.
 * format: {c1}{c2} char {c1}{c2} char ...
 ','line_number':1723,'multiline':True]['text':' May need to convert the result to 'encoding'.','line_number':1781,'multiline':False]['text':' clear screen, because some digraphs may be wrong, in which case we','line_number':1811,'multiline':False]['text':' messed up ScreenLines','line_number':1812,'multiline':False]['text':' add a space to draw a composing char on','line_number':1987,'multiline':False]['text':'
 * Get the two digraph characters from a typval.
 * Return OK or FAIL.
 ','line_number':2004,'multiline':True]['text':' FEAT_DIGRAPHS','line_number':2064,'multiline':False]['text':'
 * "digraph_get()" function
 ','line_number':2067,'multiline':True]['text':' Return empty string for failure','line_number':2079,'multiline':False]['text':'
 * "digraph_getlist()" function
 ','line_number':2109,'multiline':True]['text':'
 * "digraph_set()" function
 ','line_number':2139,'multiline':True]['text':'
 * "digraph_setlist()" function
 ','line_number':2163,'multiline':True]['text':' Empty list always results in success.','line_number':2185,'multiline':False]['text':' FEAT_EVAL','line_number':2215,'multiline':False]['text':' structure used for b_kmap_ga.ga_data','line_number':2220,'multiline':False]['text':' maximum length of "from" or "to"','line_number':2227,'multiline':False]['text':'
 * Set up key mapping tables for the 'keymap' option.
 * Returns NULL if OK, an error message for failure.  This only needs to be
 * used when setting the option, not later when the value has already been
 * checked.
 ','line_number':2231,'multiline':True]['text':' Stop any active keymap and clear the table.  Also remove','line_number':2244,'multiline':False]['text':' b:keymap_name, as no keymap is active now.','line_number':2245,'multiline':False]['text':' Source the keymap file.  It will contain a ":loadkeymap" command','line_number':2254,'multiline':False]['text':' which will call ex_loadkeymap() below.','line_number':2255,'multiline':False]['text':' try finding "keymap/'keymap'_'encoding'.vim"  in 'runtimepath'','line_number':2261,'multiline':False]['text':' try finding "keymap/'keymap'.vim" in 'runtimepath'','line_number':2266,'multiline':False]['text':'
 * ":loadkeymap" command: load the following lines as the keymap.
 ','line_number':2281,'multiline':True]['text':' max length of "to" and "from" together','line_number':2291,'multiline':False]['text':'
     * Stop any active keymap and clear the table.
     ','line_number':2302,'multiline':True]['text':' Set 'cpoptions' to "C" to avoid line continuation.','line_number':2310,'multiline':False]['text':'
     * Get each line of the sourced file, break at the end.
     ','line_number':2313,'multiline':True]['text':'
     * setup ":lnoremap" to map the keys
     ','line_number':2347,'multiline':True]['text':'
 * Stop using 'keymap'.
 ','line_number':2364,'multiline':True]['text':' Set 'cpoptions' to "C" to avoid line continuation.','line_number':2378,'multiline':False]['text':' clear the ":lmap"s','line_number':2381,'multiline':False]['text':' FEAT_KEYMAP','line_number':2409,'multiline':False]