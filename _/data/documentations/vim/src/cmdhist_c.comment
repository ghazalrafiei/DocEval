['text':' vi:set ts=8 sts=4 sw=4 noet:
 *
 * VIM - Vi IMproved	by Bram Moolenaar
 *
 * Do ":help uganda"  in Vim to read copying and usage conditions.
 * Do ":help credits" in Vim to see a list of people who contributed.
 * See README.txt for an overview of the Vim source code.
 ','line_number':1,'multiline':True]['text':'
 * cmdhist.c: Functions for the history of the command-line.
 ','line_number':10,'multiline':True]['text':' lastused entry','line_number':17,'multiline':False]['text':' identifying (unique) number of newest history entry','line_number':19,'multiline':False]['text':' actual length of history tables','line_number':20,'multiline':False]['text':'
 * Return the length of the history tables
 ','line_number':22,'multiline':True]['text':'
 * Return a pointer to a specified history table
 ','line_number':31,'multiline':True]['text':'
 * Translate a history character to the associated type number.
 ','line_number':62,'multiline':True]['text':' must be '?' or '/'','line_number':76,'multiline':False]['text':'
 * Table of history names.
 * These names are used in :history and various hist...() functions.
 * It is sufficient to give the significant prefix of a history name.
 ','line_number':79,'multiline':True]['text':'
 * Function given to ExpandGeneric() to obtain the possible first
 * arguments of the ":history command.
 ','line_number':95,'multiline':True]['text':'
 * init_history() - Initialize the command line history.
 * Also used to re-allocate the history when the size changes.
 ','line_number':119,'multiline':True]['text':' new length of history table','line_number':126,'multiline':False]['text':' If size of history table changed, reallocate it','line_number':132,'multiline':False]['text':' history length didn't change','line_number':134,'multiline':False]['text':' history length changed','line_number':137,'multiline':False]['text':' adjust the tables','line_number':138,'multiline':False]['text':' out of memory!','line_number':143,'multiline':False]['text':' first one: just keep the old length','line_number':145,'multiline':False]['text':' Already changed one table, now we can only have zero','line_number':150,'multiline':False]['text':' length for all tables.','line_number':151,'multiline':False]['text':' there are no entries yet','line_number':160,'multiline':False]['text':' array becomes bigger','line_number':165,'multiline':False]['text':' array becomes smaller or 0','line_number':175,'multiline':False]['text':' copy newest entries','line_number':180,'multiline':False]['text':' remove older entries','line_number':182,'multiline':False]['text':'
 * Check if command line 'str' is already in history.
 * If 'move_to_front' is TRUE, matching entry is moved to end of history.
 ','line_number':206,'multiline':True]['text':' Move the entry to the front if it exists','line_number':214,'multiline':False]['text':' ignore entries read from viminfo','line_number':216,'multiline':False]['text':' For search history, check that the separator character matches as','line_number':230,'multiline':False]['text':' well.','line_number':231,'multiline':False]['text':'
 * Convert history name (from table above) to its HIST_ equivalent.
 * When "name" is empty, return "cmd" history.
 * Returns -1 for unknown history name.
 ','line_number':264,'multiline':True]['text':' No argument: use current history.','line_number':275,'multiline':False]['text':' last seen maptick','line_number':289,'multiline':False]['text':'
 * Add the given string to the given history.  If the string is already in the
 * history then it is moved to the front.  "histype" may be one of he HIST_
 * values.
 ','line_number':291,'multiline':True]['text':' consider maptick when inside a mapping','line_number':300,'multiline':False]['text':' separator character used (search hist)','line_number':301,'multiline':False]['text':' no history','line_number':306,'multiline':False]['text':' Searches inside the same mapping overwrite each other, so that only','line_number':312,'multiline':False]['text':' the last line is kept.  Be careful not to remove a line that was moved','line_number':313,'multiline':False]['text':' down, only lines that were added.','line_number':314,'multiline':False]['text':' Current line is from the same mapping, remove it','line_number':319,'multiline':False]['text':' Store the separator after the NUL of the string.','line_number':338,'multiline':False]['text':'
 * Get identifier of newest history entry.
 * "histype" may be one of the HIST_ values.
 ','line_number':353,'multiline':True]['text':'
 * Calculate history index from a number:
 *   num > 0: seen as identifying number of a history entry
 *   num < 0: relative position in history wrt newest entry
 * "histype" may be one of the HIST_ values.
 ','line_number':367,'multiline':True]['text':'
 * Get a history entry by its index.
 * "histype" may be one of the HIST_ values.
 ','line_number':409,'multiline':True]['text':'
 * Clear all entries of a history.
 * "histype" may be one of the HIST_ values.
 ','line_number':423,'multiline':True]['text':' mark history as cleared','line_number':442,'multiline':False]['text':' reset identifier counter','line_number':443,'multiline':False]['text':'
 * Remove all entries matching {str} from a history.
 * "histype" may be one of the HIST_ values.
 ','line_number':449,'multiline':True]['text':' always match case','line_number':472,'multiline':False]['text':'
 * Remove an indexed entry from a history.
 * "histype" may be one of the HIST_ values.
 ','line_number':507,'multiline':True]['text':' When deleting the last added search string in a mapping, reset','line_number':522,'multiline':False]['text':' last_maptick, so that the last added search string isn't deleted again.','line_number':523,'multiline':False]['text':'
 * "histadd()" function
 ','line_number':540,'multiline':True]['text':' NULL on type error','line_number':559,'multiline':False]['text':'
 * "histdel()" function
 ','line_number':573,'multiline':True]['text':' NULL on type error','line_number':588,'multiline':False]['text':' only one argument: clear entire history','line_number':592,'multiline':False]['text':' index given: remove that entry','line_number':595,'multiline':False]['text':' string given: remove all matching entries','line_number':599,'multiline':False]['text':'
 * "histget()" function
 ','line_number':605,'multiline':True]['text':' NULL on type error','line_number':620,'multiline':False]['text':' -1 on type error','line_number':630,'multiline':False]['text':'
 * "histnr()" function
 ','line_number':636,'multiline':True]['text':' FEAT_EVAL','line_number':656,'multiline':False]['text':'
 * Very specific function to remove the value in ":set key=val" from the
 * history.
 ','line_number':659,'multiline':True]['text':'
 * :history command - print a history
 ','line_number':692,'multiline':True]