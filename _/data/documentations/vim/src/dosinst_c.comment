['text':' vi:set ts=8 sts=4 sw=4 noet:
 *
 * VIM - Vi IMproved	by Bram Moolenaar
 *
 * Do ":help uganda"  in Vim to read copying and usage conditions.
 * Do ":help credits" in Vim to see a list of people who contributed.
 * See README.txt for an overview of the Vim source code.
 ','line_number':1,'multiline':True]['text':'
 * dosinst.c: Install program for Vim on MS-DOS and MS-Windows
 *
 * Compile with Make_mvc.mak, Make_cyg.mak or Make_ming.mak.
 ','line_number':10,'multiline':True]['text':'
 * Include common code for dosinst.c and uninstall.c.
 ','line_number':16,'multiline':True]['text':' Macro to do an error check I was typing over and over','line_number':26,'multiline':False]['text':' installable vim.exe exists','line_number':36,'multiline':False]['text':' installable gvim.exe exists','line_number':37,'multiline':False]['text':' name of existing vimrc file','line_number':39,'multiline':False]['text':' name of vimrc file to create','line_number':40,'multiline':False]['text':' when not NULL, use this as the default','line_number':42,'multiline':False]['text':' directory to write .bat files in','line_number':43,'multiline':False]['text':' when not NULL, use this as the default','line_number':44,'multiline':False]['text':' install dir for NSIS','line_number':45,'multiline':False]['text':'
 * Structure used for each choice the user can make.
 ','line_number':47,'multiline':True]['text':' non-zero when choice is active','line_number':52,'multiline':False]['text':' text displayed for this choice','line_number':53,'multiline':False]['text':' function to change this choice','line_number':54,'multiline':False]['text':' argument for function','line_number':55,'multiline':False]['text':' function to install this choice','line_number':56,'multiline':False]['text':' choices the user can make','line_number':59,'multiline':False]['text':' number of choices available','line_number':60,'multiline':False]['text':' non-zero when selected to install the popup menu entry.','line_number':126,'multiline':False]['text':' non-zero when selected to install the "Open with" entry.','line_number':129,'multiline':False]['text':' non-zero when need to add an uninstall entry in the registry','line_number':132,'multiline':False]['text':'
 * Definitions of the directory name (under $VIM) of the vimfiles directory
 * and its subdirectories:
 ','line_number':135,'multiline':True]['text':'
 * Obtain a choice from a table.
 * First entry is a question, others are choices.
 ','line_number':152,'multiline':True]['text':'
 * Check if the user unpacked the archives properly.
 * Sets "runtimeidx".
 ','line_number':183,'multiline':True]['text':' check for presence of the correct version number in installdir[]','line_number':194,'multiline':False]['text':' check if filetype.vim is present, which means the runtime archive has','line_number':207,'multiline':False]['text':' been unpacked','line_number':208,'multiline':False]['text':' Check if vim.exe or gvim.exe is in the current directory.','line_number':219,'multiline':False]['text':'
 * Compare paths "p[plen]" to "q[qlen]".  Return 0 if they match.
 * Ignores case and differences between '/' and '\'.
 * "plen" and "qlen" can be negative, strlen() is used then.
 ','line_number':238,'multiline':True]['text':' End of "p": check if "q" also ends or just has a slash.','line_number':254,'multiline':False]['text':' match','line_number':257,'multiline':False]['text':' match with trailing slash','line_number':260,'multiline':False]['text':' no match','line_number':261,'multiline':False]['text':' End of "q": check if "p" also ends or just has a slash.','line_number':264,'multiline':False]['text':' match','line_number':267,'multiline':False]['text':' match with trailing slash','line_number':270,'multiline':False]['text':' no match','line_number':271,'multiline':False]['text':' no match','line_number':277,'multiline':False]['text':'NOTREACHED','line_number':279,'multiline':False]['text':'
 * If the executable "**destination" is in the install directory, find another
 * one in $PATH.
 * On input "**destination" is the path of an executable in allocated memory
 * (or NULL).
 * "*destination" is set to NULL or the location of the file.
 ','line_number':282,'multiline':True]['text':'
     * No action needed if exe not found or not in this directory.
     ','line_number':298,'multiline':True]['text':' .exe -> .exx','line_number':311,'multiline':False]['text':'
 * Check if there is a vim.[exe|bat|, gvim.[exe|bat|, etc. in the path.
 * When "check_bat_only" is TRUE, only find "default_bat_dir".
 ','line_number':341,'multiline':True]['text':' avoid looking in the "installdir" by chdir to system root','line_number':350,'multiline':False]['text':'
 * Get the value of $VIMRUNTIME or $VIM and write it in $TEMP/vimini.ini, so
 * that NSIS can read it.
 * When not set, use the directory of a previously installed Vim.
 ','line_number':376,'multiline':True]['text':' First get $VIMRUNTIME.  If it's set, remove the tail.','line_number':389,'multiline':False]['text':' Use the directory from an old uninstall entry.','line_number':402,'multiline':False]['text':' Let NSIS know there is no default, it should use','line_number':406,'multiline':False]['text':' $PROGRAMFILES.','line_number':407,'multiline':False]['text':' NSIS also uses GetTempPath(), thus we should get the same directory','line_number':412,'multiline':False]['text':' name as where NSIS will look for vimini.ini.','line_number':413,'multiline':False]['text':' Make it look like an .ini file, so that NSIS can read it with a','line_number':421,'multiline':False]['text':' ReadINIStr command.','line_number':422,'multiline':False]['text':'
 * Callback used for EnumWindows():
 * Count the window if the title looks like it is for the uninstaller.
 ','line_number':436,'multiline':True]['text':'ARGSUSED','line_number':440,'multiline':False]['text':'
 * Run the uninstaller silently.
 ','line_number':453,'multiline':True]['text':' Copy the uninstaller to a temporary exe.','line_number':472,'multiline':False]['text':' Run the copied uninstaller silently.','line_number':486,'multiline':False]['text':'
 * Check for already installed Vims.
 * Return non-zero when found one.
 ','line_number':497,'multiline':True]['text':' Open the key named Vim*','line_number':534,'multiline':False]['text':' get the DisplayName out of it to show the user','line_number':539,'multiline':False]['text':' get the UninstallString','line_number':572,'multiline':False]['text':' Remember the directory, it is used as the default for NSIS.','line_number':578,'multiline':False]['text':' save the number of uninstall keys so we can know if','line_number':601,'multiline':False]['text':' it changed','line_number':602,'multiline':False]['text':' Find existing .bat files before deleting them.','line_number':607,'multiline':False]['text':' Retry with non silent.','line_number':614,'multiline':False]['text':' Execute the uninstall program.  Put it in double','line_number':618,'multiline':False]['text':' quotes if there is an embedded space.','line_number':619,'multiline':False]['text':' Count the number of windows with a title that','line_number':630,'multiline':False]['text':' match the installer, so that we can check when','line_number':631,'multiline':False]['text':' it's done.  The uninstaller copies itself,','line_number':632,'multiline':False]['text':' executes the copy and exits, thus we can't wait','line_number':633,'multiline':False]['text':' for the process to finish.','line_number':634,'multiline':False]['text':' wait for uninstaller to start up','line_number':635,'multiline':False]['text':' Did not find the uninstaller, ask user to','line_number':640,'multiline':False]['text':' press Enter when done. Just in case.','line_number':641,'multiline':False]['text':' wait for the uninstaller to','line_number':653,'multiline':False]['text':' finish','line_number':654,'multiline':False]['text':' Check if an uninstall reg key was deleted.','line_number':662,'multiline':False]['text':' if it was, we want to decrement key_index.','line_number':663,'multiline':False]['text':' if we don't do this, we will skip the key','line_number':664,'multiline':False]['text':' immediately after any key that we delete.','line_number':665,'multiline':False]['text':' Do not uninstall','line_number':677,'multiline':False]['text':' just drop through and redo the loop','line_number':681,'multiline':False]['text':'
 * Find out information about the system.
 ','line_number':697,'multiline':True]['text':' This may take a little while, let the user know what we're doing.','line_number':709,'multiline':False]['text':'
     * If $VIM is set, check that it's pointing to our directory.
     ','line_number':712,'multiline':True]['text':'
     * If $VIMRUNTIME is set, check that it's pointing to our runtime directory.
     ','line_number':734,'multiline':True]['text':'
     * Check if there is a vim.[exe|bat|, gvim.[exe|bat|, etc. in the path.
     ','line_number':754,'multiline':True]['text':'
     * A .exe in the install directory may be found anyway on Windows 2000.
     * Check for this situation and find another executable if necessary.
     * w.briscoe@ponl.com 2001-01-20
     ','line_number':759,'multiline':True]['text':'
     * Check if there is an existing ../_vimrc or ../.vimrc file.
     ','line_number':782,'multiline':True]['text':' short version of .vimrc','line_number':789,'multiline':False]['text':'
 * Add a dummy choice to avoid that the numbering changes depending on items
 * in the environment.  The user may type a number he remembered without
 * looking.
 ','line_number':802,'multiline':True]['text':'//////////////////////////////////////////////','line_number':818,'multiline':False]['text':' stuff for creating the batch files.','line_number':819,'multiline':False]['text':'
 * Install the vim.bat, gvim.bat, etc. files.
 ','line_number':821,'multiline':True]['text':'
     * Don't use double quotes for the "set" argument, also when it
     * contains a space.  The quotes would be included in the value.
     * The order of preference is:
     * 1. $VIMRUNTIME/vim.exe	    (user preference)
     * 2. $VIM/vim81/vim.exe	    (hard coded version)
     * 3. installdir/vim.exe	    (hard coded install directory)
     ','line_number':851,'multiline':True]['text':' Give an error message when the executable could not be found.','line_number':865,'multiline':False]['text':' For gvim.exe use "start /b" to avoid that the console window','line_number':891,'multiline':False]['text':' stays open.','line_number':892,'multiline':False]['text':' Always use quotes, $VIM or $VIMRUNTIME might have a space.','line_number':895,'multiline':False]['text':' Always use quotes, $VIM or $VIMRUNTIME might have a space.','line_number':900,'multiline':False]['text':' Always use quotes, $VIM or $VIMRUNTIME might have a space.','line_number':907,'multiline':False]['text':'
 * Make the text string for choice "idx".
 * The format "fmt" is must have one %s item, which "arg" is used for.
 ','line_number':917,'multiline':True]['text':'
 * Toggle the "Overwrite .../vim.bat" to "Don't overwrite".
 ','line_number':931,'multiline':True]['text':'
 * Do some work for a batch file entry: Append the batch file name to the path
 * and set the text for the choice.
 ','line_number':952,'multiline':True]['text':'
 * Select a directory to write the batch file line.
 ','line_number':964,'multiline':True]['text':'
     * first round: count number of names in path;
     * second round: save names to names[].
     ','line_number':991,'multiline':True]['text':' Selected last item, don't create bat file.','line_number':1029,'multiline':False]['text':' Selected one of the paths.  For the first item only keep the path,','line_number':1036,'multiline':False]['text':' for the others append the batch file name.','line_number':1037,'multiline':False]['text':' let the user select a default directory or NONE','line_number':1057,'multiline':False]['text':' update the individual batch file selections','line_number':1065,'multiline':False]['text':' Only make it active when the first item has a path and the vim.exe','line_number':1068,'multiline':False]['text':' or gvim.exe exists (there is a changefunc then).','line_number':1069,'multiline':False]['text':'
 * Initialize a choice for creating a batch file.
 ','line_number':1086,'multiline':True]['text':' will be set below','line_number':1100,'multiline':False]['text':' A [g]vim.bat exists: Only choice is to overwrite it or not.','line_number':1103,'multiline':False]['text':' Prefer using the same path as an existing .bat file.','line_number':1111,'multiline':False]['text':' No [g]vim.bat exists: Write it to a directory in $PATH.  Use','line_number':1115,'multiline':False]['text':' $WINDIR by default, if it's empty the first item in $PATH.','line_number':1116,'multiline':False]['text':' "cannot happen"','line_number':1123,'multiline':False]['text':'
 * Set up the choices for installing .bat files.
 * For these items "arg" is the index in targets[].
 ','line_number':1142,'multiline':True]['text':' The first item is used to switch installing batch files on/off and','line_number':1151,'multiline':False]['text':' setting the default path.','line_number':1152,'multiline':False]['text':' Add items for each batch file target.  Only used when not disabled by','line_number':1160,'multiline':False]['text':' the first item.  When a .exe exists, don't offer to create a .bat.','line_number':1161,'multiline':False]['text':'
 * Install the vimrc file.
 ','line_number':1170,'multiline':True]['text':' If an old vimrc file exists, overwrite it.','line_number':1179,'multiline':False]['text':' Otherwise create a new one.','line_number':1180,'multiline':False]['text':' Use the diff.exe that comes with the self-extracting gvim.exe.','line_number':1240,'multiline':False]['text':' Use quotes only when needed, they may cause trouble.','line_number':1252,'multiline':False]['text':' Always escape "!".','line_number':1253,'multiline':False]['text':' If the path has a space:  When using cmd.exe (Win NT/2000/XP) put','line_number':1264,'multiline':False]['text':' quotes around the diff command and rely on the default value of','line_number':1265,'multiline':False]['text':' shellxquote to solve the quoting problem for the whole command.','line_number':1266,'multiline':False]['text':'','line_number':1267,'multiline':False]['text':' Otherwise put a double quote just before the space and at the','line_number':1268,'multiline':False]['text':' end of the command.  Putting quotes around the whole thing','line_number':1269,'multiline':False]['text':' doesn't work on Win 95/98/ME.  This is mostly guessed!','line_number':1270,'multiline':False]['text':' Switch to NOT change or create a vimrc file.','line_number':1301,'multiline':False]['text':' Switch to change or create a vimrc file.','line_number':1313,'multiline':False]['text':'
 * Change the choice how to run Vim.
 ','line_number':1325,'multiline':True]['text':'
 * Change the choice if keys are to be remapped.
 ','line_number':1335,'multiline':True]['text':'
 * Change the choice how to select text.
 ','line_number':1345,'multiline':True]['text':' set path for a new _vimrc file (also when not used)','line_number':1358,'multiline':False]['text':' Set opposite value and then toggle it by calling change_vimrc_choice()','line_number':1362,'multiline':False]['text':' default way to run Vim','line_number':1373,'multiline':False]['text':' Whether to remap keys','line_number':1380,'multiline':False]['text':' default way to use the mouse','line_number':1387,'multiline':False]['text':'
 * Add some entries to the registry:
 * - to add "Edit with Vim" to the context * menu
 * - to add Vim to the "Open with..." list
 * - to uninstall Vim
 ','line_number':1566,'multiline':True]['text':'ARGSUSED','line_number':1572,'multiline':False]['text':' For the NSIS installer use the generated uninstaller.','line_number':1649,'multiline':False]['text':'
 * Only add the choice for the popup menu entry when gvim.exe was found and
 * both gvimext.dll and regedit.exe exist.
 ','line_number':1688,'multiline':True]['text':' set the text','line_number':1704,'multiline':False]['text':'
 * Only add the choice for the open-with menu entry when gvim.exe was found
 * and regedit.exe exist.
 ','line_number':1726,'multiline':True]['text':' set the text','line_number':1738,'multiline':False]['text':'
 * Create a shell link.
 *
 * returns 0 on failure, non-zero on successful completion.
 *
 * NOTE:  Currently untested with mingw.
 ','line_number':1745,'multiline':True]['text':' Initialize COM library','line_number':1766,'multiline':False]['text':' Instantiate a COM object for the ShellLink, store a pointer to it','line_number':1774,'multiline':False]['text':' in shelllink_ptr.','line_number':1775,'multiline':False]['text':' If the instantiation was successful...','line_number':1782,'multiline':False]['text':' ...Then build a PersistFile interface for the ShellLink so we can','line_number':1784,'multiline':False]['text':' save it as a file after we build it.','line_number':1785,'multiline':False]['text':' translate the (possibly) multibyte shortcut filename to windows','line_number':1793,'multiline':False]['text':' Unicode so it can be used as a file name.','line_number':1794,'multiline':False]['text':' set the attributes','line_number':1797,'multiline':False]['text':' save the shortcut to a file and return the PersistFile object','line_number':1805,'multiline':False]['text':' Return the ShellLink object','line_number':1815,'multiline':False]['text':'
 * Build a path to where we will put a specified link.
 *
 * Return 0 on error, non-zero on success
 ','line_number':1827,'multiline':True]['text':' Make sure the directory exists (create Start Menu\Programs\Vim).','line_number':1847,'multiline':False]['text':' Ignore errors if it already exists.','line_number':1848,'multiline':False]['text':' build the path to the shortcut and the path to gvim.exe','line_number':1851,'multiline':False]['text':' Name of the shortcut','line_number':1859,'multiline':False]['text':' Name of the executable (e.g., vim.exe)','line_number':1860,'multiline':False]['text':' Create the shortcut:','line_number':1878,'multiline':False]['text':'
 * We used to use "homedir" as the working directory, but that is a bad choice
 * on multi-user systems.  However, not specifying a directory results in the
 * current directory to be c:\Windows\system32 on Windows 7. Use environment
 * variables instead.
 ','line_number':1883,'multiline':True]['text':'
 * Create shortcut(s) in the Start Menu\Programs\Vim folder.
 ','line_number':1891,'multiline':True]['text':' For Windows NT the working dir of the vimtutor.bat must be right,','line_number':1930,'multiline':False]['text':' otherwise gvim.exe won't be found and using gvimbat doesn't work.','line_number':1931,'multiline':False]['text':' Creating the URL shortcut works a bit differently...','line_number':1941,'multiline':False]['text':'
 * Function to actually create the shortcuts
 *
 * Currently I am supplying no working directory to the shortcut.  This
 *    means that the initial working dir will be:
 *    - the location of the shortcut if no file is supplied
 *    - the location of the file being edited if a file is supplied (ie via
 *      drag and drop onto the shortcut).
 ','line_number':1973,'multiline':True]['text':' Create shortcut(s) on the desktop','line_number':1985,'multiline':False]['text':' Start menu','line_number':2042,'multiline':False]['text':' set the text','line_number':2046,'multiline':False]['text':'
 * Add the choice for the desktop shortcuts.
 ','line_number':2050,'multiline':True]['text':' Shortcut to gvim','line_number':2056,'multiline':False]['text':' Shortcut to evim','line_number':2065,'multiline':False]['text':' Shortcut to gview','line_number':2074,'multiline':False]['text':'
 * Attempt to register OLE for Vim.
 ','line_number':2084,'multiline':True]['text':'
 * Remove the last part of directory "path[]" to get its parent, and put the
 * result in "to[]".
 ','line_number':2099,'multiline':True]['text':' skip the last character just in case it is a '\\'','line_number':2110,'multiline':False]['text':'
 * To get the "real" home directory:
 * - get value of $HOME
 * - if not found, get value of $HOMEDRIVE$HOMEPATH
 * - if not found, get value of $USERPROFILE
 *
 * This code is based on init_homedir() in misc1.c, keep in sync!
 ','line_number':2136,'multiline':True]['text':'
     * Typically, $HOME is not defined on Windows, unless the user has
     * specifically defined it for Vim's sake.  However, on Windows NT
     * platforms, $HOMEDRIVE and $HOMEPATH are automatically defined for
     * each user.  Try constructing $HOME from these.
     ','line_number':2160,'multiline':True]['text':'
     * Weird but true: $HOME may contain an indirect reference to another
     * variable, esp. "%USERPROFILE%".  Happens when $USERPROFILE isn't set
     * when $HOME is being set.
     ','line_number':2186,'multiline':True]['text':' empty is same as not set','line_number':2211,'multiline':False]['text':'
 * Change the directory that the vim plugin directories will be created in:
 * $HOME, $VIM or nowhere.
 ','line_number':2220,'multiline':True]['text':' Don't offer the $HOME choice if $HOME isn't set.','line_number':2229,'multiline':False]['text':'
 * Create the plugin directories...
 ','line_number':2236,'multiline':True]['text':'ARGSUSED','line_number':2239,'multiline':False]['text':' switch on the location that the user wants the plugin directories','line_number':2250,'multiline':False]['text':' built in','line_number':2251,'multiline':False]['text':' Go to the %VIM% directory - check env first, then go one dir','line_number':2256,'multiline':False]['text':'	   below installdir if there is no %VIM% environment variable.','line_number':2257,'multiline':False]['text':'	   The accuracy of $VIM is checked in inspect_system(), so we','line_number':2258,'multiline':False]['text':'	   can be sure it is ok to use here.','line_number':2259,'multiline':False]['text':' No $VIM in path','line_number':2261,'multiline':False]['text':' Find the $HOME directory.  Its existence was already checked.','line_number':2269,'multiline':False]['text':' Do not create vim plugin directory.','line_number':2281,'multiline':False]['text':' Now, just create the directory.	If it already exists, it will fail','line_number':2286,'multiline':False]['text':' silently.','line_number':2287,'multiline':False]['text':'
 * Add the creation of runtime files to the setup sequence.
 ','line_number':2301,'multiline':True]['text':' Check if the "compiler" directory already exists.  That's a good','line_number':2317,'multiline':False]['text':' indication that the plugin directories were already created.','line_number':2318,'multiline':False]['text':' No $VIM in path, use the install dir.','line_number':2331,'multiline':False]['text':'
 * Setup the choices and the default values.
 ','line_number':2345,'multiline':True]['text':' install the batch files','line_number':2351,'multiline':False]['text':' (over) write _vimrc file','line_number':2354,'multiline':False]['text':' Whether to add Vim to the popup menu','line_number':2357,'multiline':False]['text':' Whether to add Vim to the "Open With..." menu','line_number':2360,'multiline':False]['text':' Whether to add Vim to the Start Menu.','line_number':2363,'multiline':False]['text':' Whether to add shortcuts to the Desktop.','line_number':2366,'multiline':False]['text':' Whether to create the runtime directories.','line_number':2369,'multiline':False]['text':'
 * Setup installation choices based on command line switches
 ','line_number':2404,'multiline':True]['text':' Setup default vimrc choices.  If there is already a _vimrc file,','line_number':2438,'multiline':False]['text':' it will NOT be overwritten.','line_number':2439,'multiline':False]['text':' No $HOME in environment','line_number':2506,'multiline':False]['text':' No choice specified, default to vim directory','line_number':2518,'multiline':False]['text':' This is always done when gvim is found','line_number':2524,'multiline':False]['text':' Unknown switch','line_number':2526,'multiline':False]['text':'
 * Show a few screens full of helpful information.
 ','line_number':2535,'multiline':True]['text':'
 * Install the choices.
 ','line_number':2663,'multiline':True]['text':' Install the selected choices.','line_number':2671,'multiline':False]['text':' Add some entries to the registry, if needed.','line_number':2676,'multiline':False]['text':' Register gvim with OLE.','line_number':2683,'multiline':False]['text':'
 * request_choice
 ','line_number':2688,'multiline':True]['text':'
     * Run interactively if there are no command line arguments.
     ','line_number':2710,'multiline':True]['text':' Initialize this program.','line_number':2718,'multiline':False]['text':' Only check for already installed Vims.  Used by NSIS installer.','line_number':2724,'multiline':False]['text':' Find the value of $VIM, because NSIS isn't able to do this by','line_number':2727,'multiline':False]['text':' itself.','line_number':2728,'multiline':False]['text':' When nothing found exit quietly.  If something found wait for','line_number':2731,'multiline':False]['text':' a little while, so that the user can read the messages.','line_number':2732,'multiline':False]['text':' Check if the user unpacked the archives properly.','line_number':2741,'multiline':False]['text':' Check for already installed Vims.','line_number':2744,'multiline':False]['text':' Find out information about the system.','line_number':2748,'multiline':False]['text':' Setup all the choices.','line_number':2753,'multiline':False]['text':' Let the user change choices and finally install (or quit).','line_number':2756,'multiline':False]['text':' Change a choice.','line_number':2765,'multiline':False]['text':' Help','line_number':2774,'multiline':False]['text':' Install!','line_number':2779,'multiline':False]['text':' Quit','line_number':2786,'multiline':False]['text':'
	 * Run non-interactive - setup according to the command line switches
	 ','line_number':2799,'multiline':True]['text':' Avoid that the user has to hit Enter, just wait a little bit to','line_number':2805,'multiline':False]['text':' allow reading the messages.','line_number':2806,'multiline':False]