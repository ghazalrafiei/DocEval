['text':' vi:set ts=8 sts=4 sw=4 noet:
 *
 * VIM - Vi IMproved		by Bram Moolenaar
 *				GUI/Motif support by Robert Webb
 *
 * Do ":help uganda"  in Vim to read copying and usage conditions.
 * Do ":help credits" in Vim to see a list of people who contributed.
 * See README.txt for an overview of the Vim source code.
 ','line_number':1,'multiline':True]['text':'
 * Code for menus.  Used for the GUI and 'wildmenu'.
 ','line_number':11,'multiline':True]['text':' maximum depth of menus','line_number':19,'multiline':False]['text':' When non-zero no menu must be added or cleared.  Prevents the list of menus','line_number':49,'multiline':False]['text':' changing while listing them.','line_number':50,'multiline':False]['text':' The character for each menu mode','line_number':63,'multiline':False]['text':'  0 ','line_number':69,'multiline':True]['text':'  5 ','line_number':70,'multiline':True]['text':' 10 ','line_number':71,'multiline':True]['text':' 15 ','line_number':72,'multiline':True]['text':' 20 ','line_number':73,'multiline':True]['text':' 25 ','line_number':74,'multiline':True]['text':' 30 ','line_number':75,'multiline':True]['text':'
 * Return TRUE if "name" is a window toolbar menu name.
 ','line_number':80,'multiline':True]['text':'
 * If "menus_locked" is set then give an error and return TRUE.
 * Otherwise return FALSE.
 ','line_number':105,'multiline':True]['text':'
 * Do the :menu command and relatives.
 ','line_number':120,'multiline':True]['text':' Ex command arguments','line_number':125,'multiline':False]['text':' TRUE for "menu enable", FALSE for "menu','line_number':145,'multiline':False]['text':' disable','line_number':146,'multiline':False]['text':' Locate an optional "icon=filename" argument.','line_number':180,'multiline':False]['text':'
     * Fill in the priority table.
     ','line_number':200,'multiline':True]['text':' mark end of the table','line_number':227,'multiline':False]['text':'
     * Check for "disable" or "enable" argument.
     ','line_number':229,'multiline':True]['text':'
     * If there is no argument, display all menus.
     ','line_number':243,'multiline':True]['text':'
     * Need to get the toolbar icon index before doing the translation.
     ','line_number':253,'multiline':True]['text':'
     * If there is only a menu name, display menus with that name.
     ','line_number':298,'multiline':True]['text':' Assume the window toolbar menu will change.','line_number':320,'multiline':False]['text':'
	 * Change sensitivity of the menu.
	 * For the PopUp menu, remove a menu for each mode separately.
	 * Careful: menu_nable_recurse() changes menu_path.
	 ','line_number':325,'multiline':True]['text':' meaning: do all menus','line_number':330,'multiline':False]['text':'
	 * Delete menu(s).
	 ','line_number':354,'multiline':True]['text':' meaning: remove all menus','line_number':357,'multiline':False]['text':'
	 * For the PopUp menu, remove a menu for each mode separately.
	 ','line_number':360,'multiline':True]['text':' Careful: remove_menu() changes menu_path','line_number':377,'multiline':False]['text':'
	 * Add menu(s).
	 * Replace special key codes.
	 ','line_number':385,'multiline':True]['text':' "<Nop>" means nothing','line_number':389,'multiline':False]['text':' Menu tips are plain text.','line_number':395,'multiline':False]['text':'
	 * For the PopUp menu, add a menu for each mode separately.
	 ','line_number':411,'multiline':True]['text':' Include all modes, to make ":amenu" work','line_number':422,'multiline':False]['text':' If the menubar height changed, resize the window','line_number':443,'multiline':False]['text':'
 * Add the menu with the given name to the menu hierarchy
 ','line_number':471,'multiline':True]['text':' passes modes, iconfile, iconidx,','line_number':477,'multiline':False]['text':' icon_builtin, silent[0], noremap[0]','line_number':478,'multiline':False]['text':' may add tearoff item','line_number':482,'multiline':False]['text':' Make a copy so we can stuff around with it, since it could be const','line_number':512,'multiline':False]['text':' Get name of this element in the menu hierarchy, and the simplified','line_number':522,'multiline':False]['text':' name (without mnemonic and accelerator text).','line_number':523,'multiline':False]['text':' Only a mnemonic or accelerator is not valid.','line_number':540,'multiline':False]['text':' See if it's already there','line_number':545,'multiline':False]['text':' Count menus, to find where this one needs to be inserted.','line_number':576,'multiline':False]['text':' Ignore menus that are not in the menubar (PopUp and Toolbar)','line_number':577,'multiline':False]['text':' Not already there, so let's add it','line_number':608,'multiline':False]['text':' separate mnemonic and accelerator text from actual menu name','line_number':616,'multiline':False]['text':' the default','line_number':633,'multiline':False]['text':'
	     * Add after menu that has lower priority.
	     ','line_number':638,'multiline':True]['text':' the tearoff item must be present in the modes of each item.','line_number':653,'multiline':False]['text':'
	     * If this menu option was previously only available in other
	     * modes, then make sure it's available for this one now
	     * Also enable a menu when it's created or changed.
	     ','line_number':662,'multiline':True]['text':' If adding a tearbar (addtearoff == FALSE) don't update modes','line_number':668,'multiline':False]['text':'
	 * Add the menu item when it's used in one of the modes, but not when
	 * only a tooltip is defined.
	 ','line_number':678,'multiline':True]['text':' Otherwise it will be added when GUI starts','line_number':685,'multiline':False]['text':' Real menu item, not sub-menu','line_number':689,'multiline':False]['text':' Want to update menus now even if mode not changed','line_number':692,'multiline':False]['text':' Sub-menu (not at end of path yet)','line_number':697,'multiline':False]['text':' When adding a new submenu, may add a tearoff item','line_number':703,'multiline':False]['text':'
		 * The pointers next_name & path_name refer to a string with
		 * \'s and ^V's stripped out. But menu_path is a "raw"
		 * string, so we must correct for special characters.
		 ','line_number':715,'multiline':True]['text':' FEAT_GUI','line_number':743,'multiline':False]['text':'
     * Only add system menu items which have not been defined yet.
     * First check if this was an ":amenu".
     ','line_number':754,'multiline':True]['text':' loop over all modes, may add more than one','line_number':770,'multiline':False]['text':' free any old menu','line_number':775,'multiline':False]['text':' For "amenu", may insert an extra character.','line_number':778,'multiline':False]['text':' Don't do this if adding a tearbar (addtearoff == FALSE).','line_number':779,'multiline':False]['text':' Don't do this for "<Nop>".','line_number':780,'multiline':False]['text':' Append CTRL-\ CTRL-G to obey 'insertmode'.','line_number':821,'multiline':False]['text':' Need to update the menu tip.','line_number':836,'multiline':False]['text':' Delete any empty submenu we added before discovering the error.  Repeat','line_number':847,'multiline':False]['text':' for higher levels.','line_number':848,'multiline':False]['text':' safety check','line_number':857,'multiline':False]['text':'
 * Set the (sub)menu with the given name to enabled or disabled.
 * Called recursively.
 ','line_number':865,'multiline':True]['text':' Got to bottom of hierarchy','line_number':879,'multiline':False]['text':' Get name of this element in the menu hierarchy','line_number':881,'multiline':False]['text':' Find the menu','line_number':884,'multiline':False]['text':'
	     * When name is empty, we are doing all menu items for the given
	     * modes, so keep looping, otherwise we are just doing the named
	     * menu item (which has been found) so break here.
	     ','line_number':906,'multiline':True]['text':' Want to update menus now even if mode not changed','line_number':923,'multiline':False]['text':'
 * Remove the (sub)menu with the given name from the menu hierarchy
 * Called recursively.
 ','line_number':930,'multiline':True]['text':' don't give error messages','line_number':939,'multiline':False]['text':' Got to bottom of hierarchy','line_number':946,'multiline':False]['text':' Get name of this element in the menu hierarchy','line_number':948,'multiline':False]['text':' Find the menu','line_number':951,'multiline':False]['text':'
		 * If we are removing all entries for this menu,MENU_ALL_MODES,
		 * Then kill any tearoff before we start
		 ','line_number':965,'multiline':True]['text':'
	     * When name is empty, we are removing all menu items for the given
	     * modes, so keep looping, otherwise we are just removing the named
	     * menu item (which has been found) so break here.
	     ','line_number':985,'multiline':True]['text':' Remove the menu item for the given mode[s].  If the menu item','line_number':993,'multiline':False]['text':' is no longer valid in ANY mode, delete it','line_number':994,'multiline':False]['text':' Recalculate modes for menu based on the new updated children','line_number':1016,'multiline':False]['text':' there's a tear bar.','line_number':1019,'multiline':False]['text':' don't count tearoff bar','line_number':1020,'multiline':False]['text':' Need to update the menu tip.','line_number':1031,'multiline':False]['text':' The menu item is no longer valid in ANY mode, so delete it','line_number':1038,'multiline':False]['text':' there's a tear bar.','line_number':1040,'multiline':False]['text':'
 * Remove the WinBar menu from window "wp".
 ','line_number':1051,'multiline':True]['text':'
 * Free the given menu structure and remove it from the linked list.
 ','line_number':1061,'multiline':True]['text':' Free machine specific menu structures (only when already created)','line_number':1073,'multiline':False]['text':' Also may rebuild a tearoff'ed menu','line_number':1074,'multiline':False]['text':' Don't change *menup until after calling gui_mch_destroy_menu(). The','line_number':1079,'multiline':False]['text':' MacOS code needs the original structure to properly delete the menu.','line_number':1080,'multiline':False]['text':' Want to update menus now even if mode not changed','line_number':1100,'multiline':False]['text':'
 * Free the menu->string with the given index.
 ','line_number':1105,'multiline':True]['text':'
 * Show the mapping associated with a menu item or hierarchy in a sub-menu.
 ','line_number':1122,'multiline':True]['text':' First, find the (sub)menu with the given name','line_number':1138,'multiline':False]['text':' Found menu','line_number':1146,'multiline':False]['text':' make sure the list of menus doesn't change while listing them','line_number':1175,'multiline':False]['text':' list the matching menu mappings','line_number':1178,'multiline':False]['text':'
 * Recursively show the mappings associated with the menus under the given one
 ','line_number':1186,'multiline':True]['text':' "q" hit for "--more--"','line_number':1201,'multiline':False]['text':' Same highlighting as for directories!?','line_number':1210,'multiline':False]['text':' "q" hit for "--more--"','line_number':1220,'multiline':False]['text':' recursively show all children.  Skip PopUp[nvoci].','line_number':1256,'multiline':False]['text':'
 * Used when expanding menu names.
 ','line_number':1263,'multiline':True]['text':' TRUE for ":emenu" command','line_number':1269,'multiline':False]['text':'
 * Work out what to complete when doing command line completion of menu names.
 ','line_number':1271,'multiline':True]['text':' Check for priority numbers, enable and disable','line_number':1292,'multiline':False]['text':' ":tearoff" and ":popup" only use menus, not entries','line_number':1322,'multiline':False]['text':' TODO: check for next command?','line_number':1326,'multiline':False]['text':' Complete the menu name','line_number':1327,'multiline':False]['text':'
	 * With :unmenu, you only want to match menus for the appropriate mode.
	 * With :menu though you might want to add a menu with the same name as
	 * one in another mode, so match menus from other modes too.
	 ','line_number':1331,'multiline':True]['text':' Found menu','line_number':1356,'multiline':False]['text':'
			 * Menu path continues, but we have reached a leaf.
			 * Or menu exists only in another mode.
			 ','line_number':1360,'multiline':True]['text':' No menu found with the name we were looking for','line_number':1378,'multiline':False]['text':' We're in the mapping part','line_number':1396,'multiline':False]['text':'
 * Function given to ExpandGeneric() to obtain the list of (sub)menus (not
 * entries).
 ','line_number':1401,'multiline':True]['text':' first call: start at first item','line_number':1415,'multiline':False]['text':' Skip PopUp[nvoci].','line_number':1424,'multiline':False]['text':' at end of linked list','line_number':1438,'multiline':False]['text':' Advance to next menu entry.','line_number':1461,'multiline':False]['text':'
 * Function given to ExpandGeneric() to obtain the list of menus and menu
 * entries.
 ','line_number':1477,'multiline':True]['text':'hack','line_number':1487,'multiline':False]['text':' first call: start at first item','line_number':1493,'multiline':False]['text':' Skip Browse-style entries, popup menus and separators.','line_number':1502,'multiline':False]['text':' at end of linked list','line_number':1520,'multiline':False]['text':' hack on menu separators:  use a 'magic' char for the separator','line_number':1539,'multiline':False]['text':' so that '.' in names gets escaped properly','line_number':1540,'multiline':False]['text':' Advance to next menu entry.','line_number':1567,'multiline':False]['text':'
 * Skip over this element of the menu path and return the start of the next
 * element.  Any \ and ^Vs are removed from the current element.
 * "name" may be modified.
 ','line_number':1583,'multiline':True]['text':'
 * Return TRUE when "name" matches with menu "menu".  The name is compared in
 * two ways: raw menu name and menu name without '&'.  ignore part after a TAB.
 ','line_number':1607,'multiline':True]['text':'
 * Return the modes specified by the given menu command (eg :menu! returns
 * MENU_CMDLINE_MODE | MENU_INSERT_MODE).
 * If "noremap" is not NULL, then the flag it points to is set according to
 * whether the command is a "nore" command.
 * If "unmenu" is not NULL, then the flag it points to is set according to
 * whether the command is an "unmenu" command.
 ','line_number':1635,'multiline':True]['text':' Was there a "!" after the command?','line_number':1646,'multiline':False]['text':' vmenu, vunmenu, vnoremenu','line_number':1654,'multiline':False]['text':' xmenu, xunmenu, xnoremenu','line_number':1657,'multiline':False]['text':' smenu, sunmenu, snoremenu','line_number':1660,'multiline':False]['text':' omenu','line_number':1663,'multiline':False]['text':' imenu','line_number':1666,'multiline':False]['text':' tlmenu, tlunmenu, tlnoremenu','line_number':1670,'multiline':False]['text':' tmenu','line_number':1676,'multiline':False]['text':' cmenu','line_number':1678,'multiline':False]['text':' amenu','line_number':1681,'multiline':False]['text':' nmenu, not noremenu','line_number':1687,'multiline':False]['text':' FALLTHROUGH','line_number':1692,'multiline':False]['text':' menu!!','line_number':1695,'multiline':False]['text':' menu','line_number':1697,'multiline':False]['text':'
 * Return the string representation of the menu modes. Does the opposite
 * of get_menu_cmd_modes().
 ','line_number':1709,'multiline':True]['text':'
 * Modify a menu name starting with "PopUp" to include the mode character.
 * Returns the name in allocated memory (NULL for failure).
 ','line_number':1752,'multiline':True]['text':'
 * Return the index into the menu->strings or menu->noremap arrays for the
 * current state.  Returns MENU_INDEX_INVALID if there is no mapping for the
 * given menu in the current mode.
 ','line_number':1776,'multiline':True]['text':'
 * Duplicate the menu item text and then process to see if a mnemonic key
 * and/or accelerator text has been identified.
 * Returns a pointer to allocated memory, or NULL for failure.
 * If mnemonic != NULL, *mnemonic is set to the character after the first '&'.
 * If actext != NULL, *actext is set to the text after the first TAB.
 ','line_number':1816,'multiline':True]['text':' Locate accelerator text, after the first TAB','line_number':1829,'multiline':False]['text':' Find mnemonic characters "&a" and reduce "&&" to "&".','line_number':1840,'multiline':False]['text':' trailing "&"','line_number':1846,'multiline':False]['text':'
		 * Well there is a bug in the Motif libraries on OS390 Unix.
		 * The mnemonic keys needs to be converted to ASCII values
		 * first.
		 * This behavior has been seen in 2.8 and 2.9.
		 ','line_number':1853,'multiline':True]['text':'
 * Return TRUE if "name" can be a menu in the MenuBar.
 ','line_number':1871,'multiline':True]['text':'
 * Return TRUE if "name" is a popup menu name.
 ','line_number':1883,'multiline':True]['text':'
 * Return TRUE if "name" is part of a popup menu.
 ','line_number':1893,'multiline':True]['text':'
 * Return TRUE if "name" is a toolbar menu name.
 ','line_number':1905,'multiline':True]['text':'
 * Return TRUE if the name is a menu separator identifier: Starts and ends
 * with '-'
 ','line_number':1914,'multiline':True]['text':'
 * Return TRUE if the menu is hidden:  Starts with ']'
 ','line_number':1924,'multiline':True]['text':'
 * Return TRUE if the menu is the tearoff menu.
 ','line_number':1933,'multiline':True]['text':' must be a "r" command, like Insert mode','line_number':1970,'multiline':False]['text':'
 * Display the Special "PopUp" menu as a pop-up at the current mouse
 * position.  The "PopUpn" menu is for Normal mode, "PopUpi" for Insert mode,
 * etc.
 ','line_number':1985,'multiline':True]['text':' Only show a popup when it is defined and has entries','line_number':2010,'multiline':False]['text':' Update the menus now, in case the MenuPopup autocommand did','line_number':2017,'multiline':False]['text':' anything.','line_number':2018,'multiline':False]['text':'
 * Check that a pointer appears in the menu tree.  Used to protect from using
 * a menu that was deleted after it was selected but before the event was
 * handled.
 * Return OK or FAIL.  Used recursively.
 ','line_number':2034,'multiline':True]['text':'
 * After we have started the GUI, then we can create any menus that have been
 * defined.  This is done once here.  add_menu_path() may have already been
 * called to define these menus, and may be called again.  This function calls
 * itself recursively.	Should be called at the top level with:
 * gui_create_initial_menus(root_menu);
 ','line_number':2053,'multiline':True]['text':' Don't add a menu when only a tip was defined.','line_number':2067,'multiline':False]['text':'
 * Used recursively by gui_update_menus (see below)
 ','line_number':2083,'multiline':True]['text':' Never hide a toplevel menu, it may make the menubar resize or','line_number':2102,'multiline':False]['text':' disappear. Same problem for ToolBar items.','line_number':2103,'multiline':False]['text':'
 * Make sure only the valid menu items appear for this mode.  If
 * force_menu_update is not TRUE, then we only do this if the mode has changed
 * since last time.  If "modes" is not 0, then we use these modes instead.
 ','line_number':2117,'multiline':True]['text':'
 * Check if a key is used as a mnemonic for a toplevel menu.
 * Case of the key is ignored.
 ','line_number':2144,'multiline':True]['text':' FEAT_GUI','line_number':2162,'multiline':False]['text':'
 * Deal with tearoff items that are added like a menu item.
 * Currently only for Win32 GUI.  Others may follow later.
 ','line_number':2166,'multiline':True]['text':'
 * Recursively add tearoff items
 ','line_number':2189,'multiline':True]['text':' Add the menu name to the menu path.  Insert a backslash before','line_number':2210,'multiline':False]['text':' dots (it's used to separate menu names).','line_number':2211,'multiline':False]['text':' check if tearoff already exists','line_number':2229,'multiline':False]['text':' remove TEAR_STRING','line_number':2233,'multiline':False]['text':'
 * Add tear-off menu item for a submenu.
 * "tearpath" is the menu path, and must have room to add TEAR_STRING.
 ','line_number':2246,'multiline':True]['text':' Priority of tear-off is always 1','line_number':2270,'multiline':False]['text':'
 * Recursively destroy tearoff items
 ','line_number':2293,'multiline':True]['text':' check if tearoff exists','line_number':2303,'multiline':False]['text':' Disconnect the item and free the memory','line_number':2306,'multiline':False]['text':' if not the last one','line_number':2309,'multiline':False]['text':' FEAT_GUI_MSWIN && FEAT_TEAROFF','line_number':2316,'multiline':False]['text':'
 * Execute "menu".  Use by ":emenu" and the window toolbar.
 * "eap" is NULL for the window toolbar.
 * "mode_idx" specifies a MENU_INDEX_ value, use MENU_INDEX_INVALID to depend
 * on the current state.
 ','line_number':2318,'multiline':True]['text':' Use the Insert mode entry when returning to Insert mode.','line_number':2331,'multiline':False]['text':' GEDDES: This is not perfect - but it is a','line_number':2352,'multiline':False]['text':' quick way of detecting whether we are doing this from a','line_number':2353,'multiline':False]['text':' selection - see if the range matches up with the visual','line_number':2354,'multiline':False]['text':' select start and end.','line_number':2355,'multiline':False]['text':' Set it up for visual mode - equivalent to gv.','line_number':2359,'multiline':False]['text':' Set it up for line-wise visual mode','line_number':2367,'multiline':False]['text':' Activate visual mode','line_number':2376,'multiline':False]['text':' Adjust the cursor to make sure it is in the correct pos','line_number':2385,'multiline':False]['text':' for exclusive mode','line_number':2386,'multiline':False]['text':' For the WinBar menu always use the Normal mode menu.','line_number':2392,'multiline':False]['text':' When executing a script or function execute the commands right now.','line_number':2398,'multiline':False]['text':' Also for the window toolbar.','line_number':2399,'multiline':False]['text':' Otherwise put them in the typeahead buffer.','line_number':2400,'multiline':False]['text':' case MENU_INDEX_TIP: cannot happen','line_number':2440,'multiline':False]['text':'
 * Lookup a menu by the descriptor name e.g. "File.New"
 * Returns NULL if the menu is not found
 ','line_number':2448,'multiline':True]['text':' Find in the menu hierarchy','line_number':2469,'multiline':False]['text':'
 * Given a menu descriptor, e.g. "File.New", find it in the menu hierarchy and
 * execute it.
 ','line_number':2507,'multiline':True]['text':' Found the menu, so execute.','line_number':2539,'multiline':False]['text':'
 * Handle a click in the window toolbar of "wp" at column "col".
 ','line_number':2543,'multiline':True]['text':' Clicking in the window toolbar of a not-current window.','line_number':2568,'multiline':False]['text':' Make that window the current one and save Visual mode.','line_number':2569,'multiline':False]['text':' Note: the command might close the current window.','line_number':2577,'multiline':False]['text':'
 * Given a menu descriptor, e.g. "File.New", find it in the menu hierarchy.
 ','line_number':2599,'multiline':True]['text':' find the end of one dot-separated name and put a NUL at the dot','line_number':2619,'multiline':False]['text':' found a menu item instead of a sub-menu','line_number':2628,'multiline':False]['text':' found a full match','line_number':2636,'multiline':False]['text':' didn't find it','line_number':2642,'multiline':False]['text':' Found a match, search the sub-menu.','line_number':2645,'multiline':False]['text':'
 * Translation of menu names.  Just a simple lookup table.
 ','line_number':2659,'multiline':True]['text':' English name','line_number':2665,'multiline':False]['text':' same, without '&'','line_number':2666,'multiline':False]['text':' translated name','line_number':2667,'multiline':False]['text':'
 * ":menutrans".
 * This function is also defined without the +multi_lang feature, in which
 * case the commands are ignored.
 ','line_number':2673,'multiline':True]['text':'
     * ":menutrans clear": clear all translations.
     ','line_number':2690,'multiline':True]['text':' Delete all "menutrans_" global variables.','line_number':2704,'multiline':False]['text':' ":menutrans from to": add translation','line_number':2710,'multiline':False]['text':'
 * Find the character just after one part of a menu name.
 ','line_number':2755,'multiline':True]['text':'
 * Lookup part of a menu name in the translations.
 * Return a pointer to the translation or NULL if not found.
 ','line_number':2772,'multiline':True]['text':' Now try again while ignoring '&' characters.','line_number':2787,'multiline':False]['text':'
 * Unescape the name in the translate dictionary table.
 ','line_number':2806,'multiline':True]['text':' FEAT_MULTI_LANG','line_number':2818,'multiline':False]['text':'
 * Isolate the menu name.
 * Skip the menu name, and translate <Tab> into a real TAB.
 ','line_number':2820,'multiline':True]['text':'
 * Get the information about a menu item in mode 'which'
 ','line_number':2847,'multiline':True]['text':' Return all the top-level menus','line_number':2858,'multiline':False]['text':' get all the children.  Skip PopUp[nvoci].','line_number':2866,'multiline':False]['text':' skip tearoff menu item','line_number':2873,'multiline':False]['text':' Get the first mode in which the menu is available','line_number':2909,'multiline':False]['text':' just in case, avoid Coverity warning','line_number':2912,'multiline':False]['text':' If there are submenus, add all the submenu display names','line_number':2939,'multiline':False]['text':' skip tearoff menu','line_number':2952,'multiline':False]['text':'
 * "menu_info()" function
 * Return information about a menu (including all the child menus)
 ','line_number':2961,'multiline':True]['text':' menu mode','line_number':2989,'multiline':False]['text':' Default is modes for "menu"','line_number':2993,'multiline':False]['text':' Locate the specified menu or menu item','line_number':2999,'multiline':False]['text':' Find in the menu hierarchy','line_number':3011,'multiline':False]['text':' specified menu not found','line_number':3027,'multiline':False]['text':' FEAT_MENU','line_number':3034,'multiline':False]