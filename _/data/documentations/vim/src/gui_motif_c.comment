['text':' vi:set ts=8 sts=4 sw=4 noet:
 *
 * VIM - Vi IMproved		by Bram Moolenaar
 *				GUI/Motif support by Robert Webb
 *
 * Do ":help uganda"  in Vim to read copying and usage conditions.
 * Do ":help credits" in Vim to see a list of people who contributed.
 * See README.txt for an overview of the Vim source code.
 ','line_number':1,'multiline':True]['text':' for our Enhanced Button Widget','line_number':52,'multiline':False]['text':' remember the last set value for the tearoff item','line_number':80,'multiline':False]['text':'
 * Call-back routines.
 ','line_number':99,'multiline':True]['text':'
 * Tabline single mouse click timeout handler
 ','line_number':146,'multiline':True]['text':'
 * check if the tabline tab scroller is clicked
 ','line_number':157,'multiline':True]['text':' Tab scroller (next) is visible','line_number':176,'multiline':False]['text':' Clicked on the scroller','line_number':179,'multiline':False]['text':'
	     * Double click on the tabline gutter, add a new tab
	     ','line_number':214,'multiline':True]['text':'
	     * Single click on the tabline gutter, start a timer to check
	     * for double clicks
	     ','line_number':221,'multiline':True]['text':' Middle mouse click on tabpage label closes that tab.','line_number':234,'multiline':False]['text':' When ignoring events don't show the menu.','line_number':243,'multiline':False]['text':' LINTED: avoid warning: dubious operation on enum','line_number':250,'multiline':False]['text':'
 * End of call-back routines
 ','line_number':283,'multiline':True]['text':'
 * Implement three dimensional shading of insensitive labels.
 * By Marcin Dalecki.
 ','line_number':287,'multiline':True]['text':' FIXME: we should be doing the whole drawing ourself here.','line_number':317,'multiline':False]['text':'
 * Create all the motif widgets necessary.
 ','line_number':374,'multiline':True]['text':'
     * Install the 3D shade effect drawing routines.
     ','line_number':387,'multiline':True]['text':'
     * Start out by adding the configured border width into the border offset
     ','line_number':396,'multiline':True]['text':'
     * Install the tearOffModel resource converter.
     ','line_number':401,'multiline':True]['text':' Make sure the "Quit" menu entry of the window manager is ignored','line_number':408,'multiline':False]['text':' Make sure there is enough room for arguments!','line_number':424,'multiline':False]['text':' Always stick to right hand side.','line_number':434,'multiline':False]['text':'
     * Create an empty ToolBar. We should get buttons defined from menu.vim.
     ','line_number':446,'multiline':True]['text':' Create the Vim GUI tabline','line_number':479,'multiline':False]['text':'
     * Set the size of the minor next/prev scrollers to zero, so
     * that they are not displayed. Due to a bug in OpenMotif 2.3,
     * even if these children widget are unmanaged, they are again
     * managed by the Notebook widget and the notebook widget geometry
     * is adjusted to account for the minor scroller widgets.
     ','line_number':499,'multiline':True]['text':' Create the tabline popup menu','line_number':513,'multiline':False]['text':' Add the buttons to the tabline popup menu','line_number':516,'multiline':False]['text':'
	 * These take some control away from the user, but avoids making them
	 * add resources to get a decent looking setup.
	 ','line_number':566,'multiline':True]['text':'
     * Install the callbacks.
     ','line_number':575,'multiline':True]['text':' Pretend we don't have input focus, we will get an event if we do.','line_number':580,'multiline':False]['text':'
 * Called when the GUI is not going to start after all.
 ','line_number':584,'multiline':True]['text':' Give keyboard focus to the textArea instead of the toolbar.','line_number':604,'multiline':False]['text':'
 * Manage dialog centered on pointer.
 ','line_number':622,'multiline':True]['text':' Temporarily set value of XmNmappedWhenManaged','line_number':635,'multiline':False]['text':' to stop the dialog from popping up right away','line_number':636,'multiline':False]['text':' Get the pointer position (x, y)','line_number':642,'multiline':False]['text':' Translate the pointer position (x, y) into a position for the new','line_number':646,'multiline':False]['text':' window that will place the pointer at its center','line_number':647,'multiline':False]['text':' Ensure that the dialog remains on screen','line_number':655,'multiline':False]['text':' Set desired window position in the DialogShell','line_number':667,'multiline':False]['text':' Map the widget','line_number':670,'multiline':False]['text':' Restore the value of XmNmappedWhenManaged','line_number':673,'multiline':False]['text':'
 * Encapsulate the way an XmFontList is created.
 ','line_number':679,'multiline':True]['text':' Motif 1.1 method','line_number':688,'multiline':False]['text':' Motif 1.2 method','line_number':691,'multiline':False]['text':' Motif 1.2 method','line_number':708,'multiline':False]['text':'
 * Menu stuff.
 ','line_number':723,'multiline':True]['text':' toolBar is attached to top form','line_number':746,'multiline':False]['text':'
 * Enable or disable mnemonics for the toplevel menus.
 ','line_number':845,'multiline':True]['text':'
     * Don't enable menu mnemonics when the menu bar is disabled, LessTif
     * crashes when using a mnemonic then.
     ','line_number':851,'multiline':True]['text':' Only create the popup menu when it's actually used, otherwise there','line_number':885,'multiline':False]['text':' is a delay when using the right mouse button.','line_number':886,'multiline':False]['text':' submenu: count the tearoff item (needed for LessTif)','line_number':920,'multiline':False]['text':' failed','line_number':927,'multiline':False]['text':' The "Help" menu is a special case, and should be placed at the far','line_number':930,'multiline':False]['text':' right hand side of the menu-bar.  It's recognized by its high priority.','line_number':931,'multiline':False]['text':' add accelerator text','line_number':940,'multiline':False]['text':' failed','line_number':955,'multiline':False]['text':' Set the colors for the tear off widget','line_number':959,'multiline':False]['text':' When we add a top-level item to the menu bar, we can figure out how','line_number':967,'multiline':False]['text':' high the menu bar should be.','line_number':968,'multiline':False]['text':'
 * Add mnemonic and accelerator text to a menu button.
 ','line_number':974,'multiline':True]['text':' Add accelerator text, if there is one','line_number':982,'multiline':False]['text':'
 * Set the tearoff for one menu widget on or off, and set the color of the
 * tearoff widget.
 ','line_number':1007,'multiline':True]['text':'
 * Compute the height of the menu bar.
 * We need to check all the items for their position and height, for the case
 * there are several rows, and/or some characters extend higher or lower.
 ','line_number':1047,'multiline':True]['text':' can be NULL when deleting menu','line_number':1054,'multiline':False]['text':' normal height of a menu item','line_number':1059,'multiline':False]['text':'
     * Get the height of the new item, before managing it, because it will
     * still reflect the font size.  After managing it depends on the menu
     * height, which is what we just wanted to get!.
     ','line_number':1061,'multiline':True]['text':' Find any menu Widget, to be able to call XtManageChild()','line_number':1069,'multiline':False]['text':'
     * Now manage the menu item, to make them all be positioned (makes an
     * extra row when needed, removes it when not needed).
     ','line_number':1078,'multiline':True]['text':'
     * Now find the menu item that is the furthest down, and get its position.
     ','line_number':1085,'multiline':True]['text':'
     * This computation is the result of trial-and-error:
     * maxy =	The maximum position of an item; required for when there are
     *		two or more rows
     * height = height of an item, before managing it;	Hopefully this will
     *		change with the font height.  Includes shadow-border.
     * shadow =	shadow-border; must be subtracted from the height.
     * margin = margin around the menu buttons;  Must be added.
     * Add 4 for the underlining of shortcut keys.
     ','line_number':1104,'multiline':True]['text':' Somehow the menu bar doesn't resize automatically.  Set it here,','line_number':1116,'multiline':False]['text':' even though this is a catch 22.  Don't do this when starting up,','line_number':1117,'multiline':False]['text':' somehow the menu gets very high then.','line_number':1118,'multiline':False]['text':'
 * Icons used by the toolbar code.
 ','line_number':1125,'multiline':True]['text':'
 * Read an Xpm file.  Return OK or FAIL.
 ','line_number':1132,'multiline':True]['text':' Create the "sensitive" pixmap','line_number':1145,'multiline':False]['text':'
 * Allocated a pixmap for toolbar menu "menu".
 * When it's to be read from a file, "fname" is set to the file name
 * (in allocated memory).
 * Return a blank pixmap if it fails.
 ','line_number':1157,'multiline':True]['text':' buffer storing expanded pathname','line_number':1166,'multiline':False]['text':' xpm array','line_number':1167,'multiline':False]['text':' start with NULL path','line_number':1171,'multiline':False]['text':' Use the "icon="  argument.','line_number':1175,'multiline':False]['text':' If it failed, try using the menu name.','line_number':1179,'multiline':False]['text':'
 * Add arguments for the toolbar pixmap to a menu item.
 ','line_number':1201,'multiline':True]['text':' FEAT_TOOLBAR','line_number':1224,'multiline':False]['text':' Don't add Popup menu items when the popup menu isn't used.','line_number':1233,'multiline':False]['text':' fallback label if pixmap not found','line_number':1242,'multiline':False]['text':'
	     * A separator has the format "-sep%d[:%d]-". The optional :%d is
	     * a width specifier. If no width is specified then we choose one.
	     ','line_number':1252,'multiline':True]['text':' Without shadows one can't sense whatever the button has been','line_number':1270,'multiline':False]['text':' pressed or not! However we want to save a bit of space...','line_number':1271,'multiline':False]['text':' Need the highlightThickness to see the focus.','line_number':1272,'multiline':False]['text':' Set the label here, so that we can switch between icons/text','line_number':1278,'multiline':False]['text':' by changing the XmNlabelType resource.','line_number':1279,'multiline':False]['text':' When adding first item to toolbar it might have to be enabled .','line_number':1310,'multiline':False]['text':' toolbar menu item','line_number':1316,'multiline':False]['text':' No parent, must be a non-menubar menu','line_number':1319,'multiline':False]['text':' Add menu separator','line_number':1325,'multiline':False]['text':' count the tearoff item (needed for LessTif)','line_number':1331,'multiline':False]['text':' count the tearoff item (needed for LessTif)','line_number':1348,'multiline':False]['text':' add accelerator text','line_number':1361,'multiline':False]['text':'
 * This function will destroy/create the popup menus dynamically,
 * according to the value of 'mousemodel'.
 * This will fix the "right mouse button freeze" that occurs when
 * there exists a popup menu but it isn't managed.
 ','line_number':1367,'multiline':True]['text':' When GUI hasn't started the menus have not been created.','line_number':1378,'multiline':False]['text':' Popup menu will be used.  Create the popup menus.','line_number':1390,'multiline':False]['text':' Popup menu will not be used.  Destroy the popup menus.','line_number':1396,'multiline':False]['text':' TRUE for colors, FALSE for font','line_number':1488,'multiline':False]['text':' For a toolbar item: Free the pixmap and allocate a new one,','line_number':1500,'multiline':False]['text':' so that the background color is right.','line_number':1501,'multiline':False]['text':' If we have a tooltip, then we need to change its font','line_number':1511,'multiline':False]['text':' If we have a tooltip, then we need to change its font','line_number':1529,'multiline':False]['text':' Set the colors/font for the tear off widget','line_number':1546,'multiline':False]['text':' Set the colors for the children','line_number':1556,'multiline':False]['text':'
 * Destroy the machine specific menu widget.
 ','line_number':1562,'multiline':True]['text':' Please be sure to destroy the parent widget first (i.e. menu->id).','line_number':1568,'multiline':False]['text':' On the other hand, problems have been reported that the submenu must be','line_number':1569,'multiline':False]['text':' deleted first...','line_number':1570,'multiline':False]['text':' We try to destroy this before the actual menu, because there are','line_number':1586,'multiline':False]['text':' callbacks, etc. that will be unregistered during the tooltip','line_number':1587,'multiline':False]['text':' destruction.','line_number':1588,'multiline':False]['text':'','line_number':1589,'multiline':False]['text':' If you call "gui_mch_destroy_beval_area()" after destroying','line_number':1590,'multiline':False]['text':' menu->id, then the tooltip's window will have already been','line_number':1591,'multiline':False]['text':' deallocated by Xt, and unknown behaviour will ensue (probably','line_number':1592,'multiline':False]['text':' a core dump).','line_number':1593,'multiline':False]['text':' When removing last toolbar item, don't display the toolbar.','line_number':1607,'multiline':False]['text':' FEAT_MENU','line_number':1626,'multiline':False]['text':'
 * Set the menu and scrollbar colors to their default values.
 ','line_number':1628,'multiline':True]['text':'
 * Scrollbar stuff.
 ','line_number':1650,'multiline':True]['text':' Motif has max one past the end','line_number':1666,'multiline':False]['text':' The scrollbars of this type are all disabled, adjust the','line_number':1763,'multiline':False]['text':' textArea attachment offset.','line_number':1764,'multiline':False]['text':' SBAR_VERT or SBAR_HORIZ','line_number':1788,'multiline':False]['text':' This should not only set the through color but also adjust','line_number':1850,'multiline':False]['text':' related colors, such as shadows.','line_number':1851,'multiline':False]['text':' Set the through color directly, in case XmChangeColor() decided','line_number':1855,'multiline':False]['text':' to change it.','line_number':1856,'multiline':False]['text':' This is needed for the rectangle below the vertical scrollbars.','line_number':1869,'multiline':False]['text':'
 * Miscellaneous stuff:
 ','line_number':1874,'multiline':True]['text':'
 * Look for a widget in the widget tree w, with a mnemonic matching keycode.
 * When one is found, simulate a button press on that widget and give it the
 * keyboard focus.  If the mnemonic is on a label, look in the userData field
 * of the label to see if it points to another widget, and give that the focus.
 ','line_number':1884,'multiline':True]['text':'
 * Callback routine for dialog mnemonic processing.
 ','line_number':1955,'multiline':True]['text':'
 * Search the widget tree under w for widgets with mnemonics.  When found, add
 * a passive grab to the dialog widget for the mnemonic character, thus
 * directing mnemonic events to the dialog widget.
 ','line_number':1969,'multiline':True]['text':'
 * Add a handler for mnemonics in a dialog.  Motif itself only handles
 * mnemonics in menus. Mnemonics added or changed after this call will be
 * ignored.
 *
 * To add a mnemonic to a text field or list, set the XmNmnemonic resource on
 * the appropriate label and set the XmNuserData resource of the label to the
 * widget to get the focus when the mnemonic is typed.
 ','line_number':2015,'multiline':True]['text':'
 * Removes the event handler and key-grabs for dialog mnemonic handling.
 ','line_number':2035,'multiline':True]['text':'
 * Use the 'guifont' or 'guifontset' as a fontlist for a dialog widget.
 ','line_number':2050,'multiline':True]['text':' We should force the widget to recalculate its','line_number':2068,'multiline':False]['text':' geometry now.','line_number':2069,'multiline':False]['text':' We should force the widget to recalculate its','line_number':2087,'multiline':False]['text':' geometry now.','line_number':2088,'multiline':False]['text':'
 * file selector related stuff
 ','line_number':2102,'multiline':True]['text':' not used right now','line_number':2111,'multiline':False]['text':' used to set up XmStrings','line_number':2118,'multiline':False]['text':'
 * This function is used to translate the predefined label text of the
 * precomposed dialogs. We do this explicitly to allow:
 *
 * - usage of gettext for translation, as in all the other places.
 *
 * - equalize the messages between different GUI implementations as far as
 * possible.
 ','line_number':2123,'multiline':True]['text':'
 * Put up a file requester.
 * Returns the selected name in allocated memory, or NULL for Cancel.
 ','line_number':2188,'multiline':True]['text':' select file to write','line_number':2194,'multiline':False]['text':' title for the window','line_number':2195,'multiline':False]['text':' default name','line_number':2196,'multiline':False]['text':' not used (extension added)','line_number':2197,'multiline':False]['text':' initial directory, NULL for current dir','line_number':2198,'multiline':False]['text':' file name filter','line_number':2199,'multiline':False]['text':' There a difference between the resource name and value, Therefore, we','line_number':2206,'multiline':False]['text':' avoid to (ab-)use the (maybe internationalized!) dialog title as a','line_number':2207,'multiline':False]['text':' dialog name.','line_number':2208,'multiline':False]['text':' The default selection should be the full path, "dflt" is only the','line_number':2222,'multiline':False]['text':' file name.','line_number':2223,'multiline':False]['text':' Can only use one pattern for a file name.  Get the first pattern out of','line_number':2230,'multiline':False]['text':' the filter.  An empty pattern means everything matches.','line_number':2231,'multiline':False]['text':' end of description, start of pattern','line_number':2241,'multiline':False]['text':' end of (first) pattern','line_number':2243,'multiline':False]['text':' This is to save us from silly external settings using not fixed with','line_number':2272,'multiline':False]['text':' fonts for file selection.','line_number':2273,'multiline':False]['text':' We have no help in this window, so hide help button','line_number':2283,'multiline':False]['text':' sit in a loop until the dialog box has gone away','line_number':2290,'multiline':False]['text':'
 * The code below was originally taken from
 *	/usr/examples/motif/xmsamplers/xmeditor.c
 * on Digital Unix 4.0d, but heavily modified.
 ','line_number':2306,'multiline':True]['text':'
 * Process callback from Dialog cancel actions.
 ','line_number':2312,'multiline':True]['text':'  widget id','line_number':2317,'multiline':False]['text':'  data from application','line_number':2318,'multiline':False]['text':'  data from widget class','line_number':2319,'multiline':False]['text':'
 * Process callback from Dialog actions.
 ','line_number':2329,'multiline':True]['text':'  widget id','line_number':2334,'multiline':False]['text':'  data from application','line_number':2335,'multiline':False]['text':'  data from widget class','line_number':2336,'multiline':False]['text':' get the filename from the file selection box','line_number':2347,'multiline':False]['text':' popdown the file selection box','line_number':2350,'multiline':False]['text':' FEAT_BROWSE','line_number':2354,'multiline':False]['text':'
 * Callback function for the textfield.  When CR is hit this works like
 * hitting the "OK" button, ESC like "Cancel".
 ','line_number':2360,'multiline':True]['text':'
     * We need to be careful here, since in case of gadgets, there is
     * no way to get the background color directly from the widget itself.
     * In such cases we get it from The Core part of his parent instead.
     ','line_number':2423,'multiline':True]['text':' buffer of size IOSIZE','line_number':2467,'multiline':False]['text':' if our pointer is currently hidden, then we should show it.','line_number':2493,'multiline':False]['text':' Check 'v' flag in 'guioptions': vertical button placement.','line_number':2498,'multiline':False]['text':' Set the title of the Dialog window','line_number':2501,'multiline':False]['text':' make a copy, so that we can insert NULs','line_number':2512,'multiline':False]['text':' Count the number of buttons and allocate buttons[].','line_number':2517,'multiline':False]['text':'
     * Create the buttons.
     ','line_number':2529,'multiline':True]['text':' Layout properly.','line_number':2572,'multiline':False]['text':' fill in a form as invisible separator','line_number':2589,'multiline':False]['text':' fill in a form as invisible separator','line_number':2619,'multiline':False]['text':' Create the separator for beauty.','line_number':2647,'multiline':False]['text':' Form holding both message and pixmap labels','line_number':2683,'multiline':False]['text':' Add a pixmap, left of the message.','line_number':2693,'multiline':False]['text':' Create the dialog message.','line_number':2728,'multiline':False]['text':' Since LessTif is apparently having problems with the creation of','line_number':2729,'multiline':False]['text':' properly localized string, we use LtoR here. The symptom is that the','line_number':2730,'multiline':False]['text':' string is not shown properly in multiple lines as it does in native','line_number':2731,'multiline':False]['text':' Motif.','line_number':2732,'multiline':False]['text':' This only works after the textfield has been realised.','line_number':2794,'multiline':False]['text':' Loop until a button is pressed or the dialog is killed somehow.','line_number':2804,'multiline':False]['text':' FEAT_GUI_DIALOG','line_number':2830,'multiline':False]['text':' how many children toolBar has','line_number':2836,'multiline':False]['text':' Assume that we want to show the toolbar if p_toolbar contains','line_number':2843,'multiline':False]['text':' valid option settings, therefore p_toolbar must not be NULL.','line_number':2844,'multiline':False]['text':' Assumption: toolbar is NULL if there is no toolbar,','line_number':2868,'multiline':False]['text':'	       otherwise it contains the toolbar menu structure.','line_number':2869,'multiline':False]['text':'','line_number':2870,'multiline':False]['text':' Assumption: "numChildren" == the number of items in the list','line_number':2871,'multiline':False]['text':'	       of items beginning with toolbar->children.','line_number':2872,'multiline':False]['text':' Enable/Disable tooltip (OK to enable while','line_number':2880,'multiline':False]['text':' currently enabled).','line_number':2881,'multiline':False]['text':'
 * A toolbar button has been pushed; now reset the input focus
 * such that the user can type page up/down etc. and have the
 * input go to the editor window, not the button
 ','line_number':2981,'multiline':True]['text':' total Toolbar height','line_number':2997,'multiline':False]['text':' height of each widget','line_number':2998,'multiline':False]['text':' list of toolBar's children','line_number':2999,'multiline':False]['text':' how many children toolBar has','line_number':3000,'multiline':False]['text':' get height of XmFrame parent','line_number':3006,'multiline':False]['text':' Hack: When starting up we get wrong dimensions.','line_number':3032,'multiline':False]['text':'
 * Show or hide the tabline.
 ','line_number':3059,'multiline':True]['text':'
 * Return TRUE when tabline is displayed.
 ','line_number':3122,'multiline':True]['text':'
 * Update the labels of the tabline.
 ','line_number':3131,'multiline':True]['text':' Add a label for each tab page.  They all contain the same text area.','line_number':3152,'multiline':False]['text':' Add the tab','line_number':3162,'multiline':False]['text':'
	 * Change the label text only if it is different
	 ','line_number':3180,'multiline':True]['text':'
		 * Force a resize of the tab label button
		 ','line_number':3191,'multiline':True]['text':' Remove any old labels.','line_number':3205,'multiline':False]['text':'
 * Set the current tab to "nr".  First tab is 1.
 ','line_number':3228,'multiline':True]['text':'
 * Set the colors of Widget "id" to the menu colors.
 ','line_number':3245,'multiline':True]['text':'
 * Set the colors of Widget "id" to the scrollbar colors.
 ','line_number':3261,'multiline':True]['text':'
 * Set the fontlist for Widget "id" to use gui.menu_fontset or gui.menu_font.
 ','line_number':3277,'multiline':True]['text':' We should force the widget to recalculate its','line_number':3296,'multiline':False]['text':' geometry now.','line_number':3297,'multiline':False]['text':' We should force the widget to recalculate its','line_number':3317,'multiline':False]['text':' geometry now.','line_number':3318,'multiline':False]['text':'
 * We don't create it twice for the sake of speed.
 ','line_number':3331,'multiline':True]['text':' the main dialog widget','line_number':3337,'multiline':False]['text':' 'Exact match' check button','line_number':3338,'multiline':False]['text':' 'match case' check button','line_number':3339,'multiline':False]['text':' search direction 'Up' radio button','line_number':3340,'multiline':False]['text':' search direction 'Down' radio button','line_number':3341,'multiline':False]['text':' 'Find what' entry text widget','line_number':3342,'multiline':False]['text':' 'Replace with' entry text widget','line_number':3343,'multiline':False]['text':' 'Find Next' action button','line_number':3344,'multiline':False]['text':' 'Replace With' action button','line_number':3345,'multiline':False]['text':' 'Replace All' action button','line_number':3346,'multiline':False]['text':' 'Undo' action button','line_number':3347,'multiline':False]['text':' suppress_dialog_mnemonics(cd->dialog);','line_number':3364,'multiline':False]['text':' No need to be Vi compatible here.','line_number':3406,'multiline':False]['text':' Get the search/replace strings from the dialog','line_number':3414,'multiline':False]['text':' the scape key pops the whole dialog down','line_number':3457,'multiline':False]['text':' Get the search string to use.','line_number':3522,'multiline':False]['text':' If the dialog already exists, just raise it.','line_number':3525,'multiline':False]['text':' If the window is already up, just pop it to the top','line_number':3530,'multiline':False]['text':' Create a fresh new dialog window','line_number':3547,'multiline':False]['text':'
	     * Make the entry activation only change the input focus onto the
	     * with item.
	     ','line_number':3706,'multiline':True]['text':'
	     * Make the entry activation do the search.
	     ','line_number':3719,'multiline':True]['text':' Get the maximum width between the label widgets and line them up.','line_number':3729,'multiline':False]['text':'
 * Synchronize all gui elements, which are dependent upon the
 * main text font used. Those are in esp. the find/replace dialogs.
 * If you don't understand why this should be needed, please try to
 * search for "pi\xea\xb6\xe6" in iso8859-2.
 ','line_number':3872,'multiline':True]['text':' FIXME: Unless we find out how to create a XmFontList from a XFontSet,','line_number':3886,'multiline':False]['text':' we just give up here on font synchronization.','line_number':3887,'multiline':False]['text':' OK this loop is a bit tricky...','line_number':3894,'multiline':False]