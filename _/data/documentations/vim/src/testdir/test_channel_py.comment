['text':'!/usr/bin/env python','line_number':1,'multiline':False]['text':'','line_number':2,'multiline':False]['text':' Server that will accept connections from a Vim channel.','line_number':3,'multiline':False]['text':' Used by test_channel.vim.','line_number':4,'multiline':False]['text':'','line_number':5,'multiline':False]['text':' This requires Python 2.6 or later.','line_number':6,'multiline':False]['text':' Python 3','line_number':16,'multiline':False]['text':' Python 2','line_number':19,'multiline':False]['text':' We may receive two messages at once. Take the part up to the','line_number':39,'multiline':False]['text':' newline, which should be after the matching "]".','line_number':40,'multiline':False]['text':' Send a response if the sequence number is positive.','line_number':59,'multiline':False]['text':' simply send back a string','line_number':62,'multiline':False]['text':' Need to wait for Vim to give up, otherwise it','line_number':69,'multiline':False]['text':' sometimes fails on OS X.','line_number':70,'multiline':False]['text':' Need to wait for Vim to give up, otherwise the double','line_number':77,'multiline':False]['text':' quote in the "ok" response terminates the string.','line_number':78,'multiline':False]['text':' Need to wait for Vim to give up, otherwise the ]','line_number':85,'multiline':False]['text':' in the "ok" response terminates the list.','line_number':86,'multiline':False]['text':' send back the argument','line_number':98,'multiline':False]['text':' Send two ex commands at the same time, before','line_number':101,'multiline':False]['text':' replying to the request.','line_number':102,'multiline':False]['text':' Wait a bit, so that the "ex" command is handled','line_number':113,'multiline':False]['text':' before the "ch_evalexpr() returns.  Otherwise we are','line_number':114,'multiline':False]['text':' outside the try/catch when the "ex" command is','line_number':115,'multiline':False]['text':' handled.','line_number':116,'multiline':False]['text':' Send a normal command.','line_number':124,'multiline':False]['text':' Send an eval request.  We ignore the response.','line_number':130,'multiline':False]['text':' Send an eval request.  We ignore the response.','line_number':136,'multiline':False]['text':' Send an eval request.  We ignore the response.','line_number':142,'multiline':False]['text':' Send an eval request that will fail.','line_number':148,'multiline':False]['text':' Send an eval request that works but the result can't','line_number':154,'multiline':False]['text':' be encoded.','line_number':155,'multiline':False]['text':' Send an eval request missing the third argument.','line_number':161,'multiline':False]['text':' Send an expr request.','line_number':167,'multiline':False]['text':' Send back the last received eval result.','line_number':193,'multiline':False]['text':' we're done','line_number':218,'multiline':False]['text':' Crash!','line_number':222,'multiline':False]['text':' Negative numbers are used for "eval" responses.','line_number':234,'multiline':False]['text':' Write the port number in Xportnr, so that the test knows it.','line_number':246,'multiline':False]['text':' Wait half a second before opening the port to test waittime in ch_open().','line_number':252,'multiline':False]['text':' We do want to get the port number, get that first.  We cannot open the','line_number':253,'multiline':False]['text':' socket, guess a port is free.','line_number':254,'multiline':False]['text':' Each addr is a (family, type, proto, canonname, sockaddr) tuple','line_number':263,'multiline':False]['text':' Start a thread with the server.  That thread will then start a new thread','line_number':270,'multiline':False]['text':' for each connection.','line_number':271,'multiline':False]['text':' Main thread terminates, but the server continues running','line_number':279,'multiline':False]['text':' until server.shutdown() is called.','line_number':280,'multiline':False]