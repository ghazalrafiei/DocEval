['text':' vi:set ts=8 sts=4 sw=4 noet:
 *
 * VIM - Vi IMproved	by Bram Moolenaar
 *
 * Do ":help uganda"  in Vim to read copying and usage conditions.
 * Do ":help credits" in Vim to see a list of people who contributed.
 * See README.txt for an overview of the Vim source code.
 ','line_number':1,'multiline':True]['text':'
 * quickfix.c: functions for quickfix mode, using a file with error messages
 ','line_number':10,'multiline':True]['text':'
 * For each error the next struct is allocated and linked in a list.
 ','line_number':24,'multiline':True]['text':' pointer to next error in the list','line_number':30,'multiline':False]['text':' pointer to previous error in the list','line_number':31,'multiline':False]['text':' line number where the error occurred','line_number':32,'multiline':False]['text':' line number when the error has range or zero','line_number':33,'multiline':False]['text':' file number for the line','line_number':34,'multiline':False]['text':' column where the error occurred','line_number':35,'multiline':False]['text':' column when the error has range or zero','line_number':36,'multiline':False]['text':' error number','line_number':37,'multiline':False]['text':' module name for this error','line_number':38,'multiline':False]['text':' search pattern for the error','line_number':39,'multiline':False]['text':' description of the error','line_number':40,'multiline':False]['text':' set to TRUE if qf_col and qf_end_col is','line_number':41,'multiline':False]['text':' screen column','line_number':42,'multiline':False]['text':' set to TRUE if line has been deleted','line_number':43,'multiline':False]['text':' type of the error (mostly 'E'); 1 for','line_number':44,'multiline':False]['text':' :helpgrep','line_number':45,'multiline':False]['text':' custom user data associated with this item','line_number':46,'multiline':False]['text':' valid error message detected','line_number':47,'multiline':False]['text':'
 * There is a stack of error lists.
 ','line_number':50,'multiline':True]['text':'
 * Quickfix list type.
 ','line_number':57,'multiline':True]['text':' Quickfix list - global list','line_number':62,'multiline':False]['text':' Location list - per window list','line_number':63,'multiline':False]['text':' Internal - Temporary list used by getqflist()/getloclist()','line_number':64,'multiline':False]['text':'
 * Quickfix/Location list definition
 * Contains a list of entries (qfline_T). qf_start points to the first entry
 * and qf_last points to the last entry. qf_count contains the list size.
 *
 * Usually the list contains one or more entries. But an empty list can be
 * created using setqflist()/setloclist() with a title and/or user context
 * information and entries can be added later using setqflist()/setloclist().
 ','line_number':67,'multiline':True]['text':' Unique identifier for this list','line_number':78,'multiline':False]['text':' pointer to the first error','line_number':80,'multiline':False]['text':' pointer to the last error','line_number':81,'multiline':False]['text':' pointer to the current error','line_number':82,'multiline':False]['text':' number of errors (0 means empty list)','line_number':83,'multiline':False]['text':' current index in the error list','line_number':84,'multiline':False]['text':' TRUE if not a single valid entry found','line_number':85,'multiline':False]['text':' TRUE if at least one item has user_data attached','line_number':86,'multiline':False]['text':' title derived from the command that created','line_number':87,'multiline':False]['text':' the error list or set by setqflist','line_number':88,'multiline':False]['text':' context set by setqflist/setloclist','line_number':89,'multiline':False]['text':' 'quickfixtextfunc' callback function','line_number':90,'multiline':False]['text':'
 * Quickfix/Location list stack definition
 * Contains a list of quickfix/location lists (qf_list_T)
 ','line_number':102,'multiline':True]['text':' Count of references to this list. Used only for location lists.','line_number':108,'multiline':False]['text':' When a location list window reference this list, qf_refcount','line_number':109,'multiline':False]['text':' will be 2. Otherwise, qf_refcount will be 1. When qf_refcount','line_number':110,'multiline':False]['text':' reaches 0, the list is freed.','line_number':111,'multiline':False]['text':' current number of lists','line_number':113,'multiline':False]['text':' current error list','line_number':114,'multiline':False]['text':' type of list','line_number':116,'multiline':False]['text':' quickfix window buffer number','line_number':117,'multiline':False]['text':' global quickfix list','line_number':120,'multiline':False]['text':' Last used quickfix list id','line_number':121,'multiline':False]['text':' maximum number of % recognized','line_number':123,'multiline':False]['text':'
 * Structure used to hold the info of one part of 'errorformat'
 ','line_number':125,'multiline':True]['text':' pre-formatted part of 'errorformat'','line_number':131,'multiline':False]['text':' pointer to next (NULL if last)','line_number':132,'multiline':False]['text':' indices of used % patterns','line_number':133,'multiline':False]['text':' prefix of this format line:','line_number':134,'multiline':False]['text':'   'D' enter directory','line_number':135,'multiline':False]['text':'   'X' leave directory','line_number':136,'multiline':False]['text':'   'A' start of multi-line message','line_number':137,'multiline':False]['text':'   'E' error message','line_number':138,'multiline':False]['text':'   'W' warning message','line_number':139,'multiline':False]['text':'   'I' informational message','line_number':140,'multiline':False]['text':'   'N' note message','line_number':141,'multiline':False]['text':'   'C' continuation line','line_number':142,'multiline':False]['text':'   'Z' end of multi-line message','line_number':143,'multiline':False]['text':'   'G' general, unspecific message','line_number':144,'multiline':False]['text':'   'P' push file (partial) message','line_number':145,'multiline':False]['text':'   'Q' pop/quit file (partial) message','line_number':146,'multiline':False]['text':'   'O' overread (partial) message','line_number':147,'multiline':False]['text':' additional flags given in prefix','line_number':148,'multiline':False]['text':'   '-' do not include this line','line_number':149,'multiline':False]['text':'   '+' include whole line in message','line_number':150,'multiline':False]['text':' %> used','line_number':151,'multiline':False]['text':' List of location lists to be deleted.','line_number':154,'multiline':False]['text':' Used to delay the deletion of locations lists by autocmds.','line_number':155,'multiline':False]['text':' Counter to prevent autocmds from freeing up location lists when they are','line_number':163,'multiline':False]['text':' still being used.','line_number':164,'multiline':False]['text':' cached across qf_parse_line() calls','line_number':167,'multiline':False]['text':' callback function for 'quickfixtextfunc'','line_number':169,'multiline':False]['text':' Quickfix window check helper macro','line_number':193,'multiline':False]['text':' Location list window check helper macro','line_number':195,'multiline':False]['text':' Quickfix and location list stack check helper macros','line_number':198,'multiline':False]['text':'
 * Return location list for window 'wp'
 * For location list window, return the referenced location list
 ','line_number':204,'multiline':True]['text':' Macro to loop through all the items in a quickfix list','line_number':210,'multiline':False]['text':' Quickfix item index starts from 1, so i below starts at 1','line_number':211,'multiline':False]['text':'
 * Looking up a buffer can be slow if there are many.  Remember the last one
 * to make this a lot faster if there are multiple matches in the same file.
 ','line_number':217,'multiline':True]['text':'
 * Get a growarray to buffer text in.  Shared between various commands to avoid
 * many alloc/free calls.
 ','line_number':226,'multiline':True]['text':' Reset the length to zero.  Retain ga_data from previous use to avoid','line_number':241,'multiline':False]['text':' many alloc/free calls.','line_number':242,'multiline':False]['text':'
 * The "qfga" grow array buffer is reused across multiple quickfix commands as
 * a temporary buffer to reduce the number of alloc/free calls.  But if the
 * buffer size is large, then to avoid holding on to that memory, clear the
 * grow array.  Otherwise just reset the grow array length.
 ','line_number':248,'multiline':True]['text':'
 * Maximum number of bytes allowed per line while reading a errorfile.
 ','line_number':263,'multiline':True]['text':'
 * Patterns used.  Keep in sync with qf_parse_fmt[].
 ','line_number':268,'multiline':True]['text':' only used when at end','line_number':277,'multiline':False]['text':' 1','line_number':278,'multiline':False]['text':' 2','line_number':279,'multiline':False]['text':' 3','line_number':280,'multiline':False]['text':' 4','line_number':281,'multiline':False]['text':' 5','line_number':282,'multiline':False]['text':' 6','line_number':283,'multiline':False]['text':' 7','line_number':284,'multiline':False]['text':' 8','line_number':286,'multiline':False]['text':' 9','line_number':288,'multiline':False]['text':' 10','line_number':289,'multiline':False]['text':' 11','line_number':290,'multiline':False]['text':' 12','line_number':291,'multiline':False]['text':' 13','line_number':292,'multiline':False]['text':'
 * Convert an errorformat pattern to a regular expression pattern.
 * See fmt_pat definition above for the list of supported patterns.  The
 * pattern specifier is supplied in "efmpat".  The converted pattern is stored
 * in "regpat".  Returns a pointer to the location after the pattern.
 ','line_number':295,'multiline':True]['text':' Each errorformat pattern can occur only once','line_number':313,'multiline':False]['text':' Also match "c:" in the file name, even when','line_number':331,'multiline':False]['text':' checking for a colon next: "%f:".','line_number':332,'multiline':False]['text':' "\%(\a:\)\="','line_number':333,'multiline':False]['text':' A file name may contain spaces, but this isn't','line_number':342,'multiline':False]['text':' in "\f".  For "%f:%l:%m" there may be a ":" in','line_number':343,'multiline':False]['text':' the file name.  Use ".\{-1,}x" instead (x is','line_number':344,'multiline':False]['text':' the next character), the requirement that :999:','line_number':345,'multiline':False]['text':' follows should work.','line_number':346,'multiline':False]['text':' File name followed by '\\' or '%': include as','line_number':352,'multiline':False]['text':' many file name chars as possible.','line_number':353,'multiline':False]['text':'
 * Convert a scanf like format in 'errorformat' to a regular expression.
 * Returns a pointer to the location after the pattern.
 ','line_number':370,'multiline':True]['text':' %*[^a-z0-9] etc.','line_number':385,'multiline':False]['text':' could be ']'','line_number':391,'multiline':False]['text':' skip ;','line_number':394,'multiline':False]['text':' %*\D, %*\s etc.','line_number':402,'multiline':False]['text':' TODO: scanf()-like: %*ud, %*3c, %*f, ... ?','line_number':409,'multiline':False]['text':'
 * Analyze/parse an errorformat prefix.
 ','line_number':419,'multiline':True]['text':'
 * Converts a 'errorformat' string part in 'efm' to a regular expression
 * pattern.  The resulting regex pattern is returned in "regpat". Additional
 * information about the 'erroformat' pattern is returned in "fmt_ptr".
 * Returns OK or FAIL.
 ','line_number':438,'multiline':True]['text':' Build a regexp pattern for a 'errorformat' option part','line_number':456,'multiline':False]['text':' regexp magic characters','line_number':483,'multiline':False]['text':' analyse prefix','line_number':488,'multiline':False]['text':' prefix is allowed only at the beginning of the errorformat','line_number':490,'multiline':False]['text':' option part','line_number':491,'multiline':False]['text':' copy normal character','line_number':502,'multiline':False]['text':' escape regexp atoms','line_number':507,'multiline':False]['text':'
 * Free the 'errorformat' information list
 ','line_number':518,'multiline':True]['text':'
 * Compute the size of the buffer used to convert a 'errorformat' pattern into
 * a regular expression pattern.
 ','line_number':535,'multiline':True]['text':' "%f" can become twelve chars longer (see efm_to_regpat)','line_number':549,'multiline':False]['text':' "%f" can become two chars longer','line_number':551,'multiline':False]['text':'
 * Return the length of a 'errorformat' option part (separated by ",").
 ','line_number':557,'multiline':True]['text':'
 * Parse the 'errorformat' option. Multiple parts in the 'errorformat' option
 * are parsed and converted to regular expressions. Returns information about
 * the parsed 'errorformat' option.
 ','line_number':572,'multiline':True]['text':' Each part of the format string is copied and modified from errorformat','line_number':587,'multiline':False]['text':' to regex prog.  Only a few % characters are allowed.','line_number':588,'multiline':False]['text':' Get some space to modify the format string into.','line_number':590,'multiline':False]['text':' Allocate a new eformat structure and put it at the end of the list','line_number':597,'multiline':False]['text':' first one','line_number':601,'multiline':False]['text':' Isolate one part in the 'errorformat' option','line_number':607,'multiline':False]['text':' Advance to next part','line_number':614,'multiline':False]['text':' skip comma and spaces','line_number':615,'multiline':False]['text':' nothing found','line_number':618,'multiline':False]['text':'
 * State information used to parse lines and add entries to a quickfix/location
 * list.
 ','line_number':642,'multiline':True]['text':'
 * Allocate more memory for the line buffer used for parsing lines.
 ','line_number':661,'multiline':True]['text':' If the line exceeds LINE_MAXLEN exclude the last','line_number':669,'multiline':False]['text':' byte since it's not a NL character.','line_number':670,'multiline':False]['text':'
 * Get the next string (separated by newline) from state->p_str.
 ','line_number':689,'multiline':True]['text':' Get the next line from the supplied string','line_number':695,'multiline':False]['text':' Reached the end of the string','line_number':700,'multiline':False]['text':' Increment using len in order to discard the rest of the','line_number':722,'multiline':False]['text':' line if it exceeds LINE_MAXLEN.','line_number':723,'multiline':False]['text':'
 * Get the next string from the List item state->p_li.
 ','line_number':730,'multiline':True]['text':' Skip non-string items','line_number':742,'multiline':False]['text':' End of the list','line_number':744,'multiline':False]['text':' next item','line_number':765,'multiline':False]['text':'
 * Get the next string from state->buf.
 ','line_number':769,'multiline':True]['text':' Get the next line from the supplied buffer','line_number':778,'multiline':False]['text':'
 * Get the next string from file state->fd.
 ','line_number':802,'multiline':True]['text':' The current line exceeds IObuff, continue reading using','line_number':818,'multiline':False]['text':' growbuf until EOL or LINE_MAXLEN bytes is read.','line_number':819,'multiline':False]['text':' Copy the read part of the line, excluding null-terminator','line_number':828,'multiline':False]['text':' The current line is longer than LINE_MAXLEN, continue','line_number':858,'multiline':False]['text':' reading but discard everything until EOL or EOF is','line_number':859,'multiline':False]['text':' reached.','line_number':860,'multiline':False]['text':' Convert a line if it contains a non-ASCII character.','line_number':873,'multiline':False]['text':'
 * Get the next string from a file/buffer/list/string.
 ','line_number':899,'multiline':True]['text':' Get the next line from the supplied string','line_number':912,'multiline':False]['text':' Get the next line from the supplied list','line_number':915,'multiline':False]['text':' Get the next line from the supplied buffer','line_number':919,'multiline':False]['text':' Get the next line from the supplied file','line_number':923,'multiline':False]['text':' remove newline/CR from the line','line_number':929,'multiline':False]['text':'
 * Parse the match for filename ('%f') pattern in regmatch.
 * Return the matched value in "fields->namebuf".
 ','line_number':962,'multiline':True]['text':' Expand ~/file and $HOME/file to full path.','line_number':974,'multiline':False]['text':' For separate filename patterns (%O, %P and %Q), the specified file','line_number':980,'multiline':False]['text':' should exist.','line_number':981,'multiline':False]['text':'
 * Parse the match for buffer number ('%b') pattern in regmatch.
 * Return the matched value in "fields->bnr".
 ','line_number':989,'multiline':True]['text':'
 * Parse the match for error number ('%n') pattern in regmatch.
 * Return the matched value in "fields->enr".
 ','line_number':1005,'multiline':True]['text':'
 * Parse the match for line number ('%l') pattern in regmatch.
 * Return the matched value in "fields->lnum".
 ','line_number':1018,'multiline':True]['text':'
 * Parse the match for end line number ('%e') pattern in regmatch.
 * Return the matched value in "fields->end_lnum".
 ','line_number':1031,'multiline':True]['text':'
 * Parse the match for column number ('%c') pattern in regmatch.
 * Return the matched value in "fields->col".
 ','line_number':1044,'multiline':True]['text':'
 * Parse the match for end column number ('%k') pattern in regmatch.
 * Return the matched value in "fields->end_col".
 ','line_number':1057,'multiline':True]['text':'
 * Parse the match for error type ('%t') pattern in regmatch.
 * Return the matched value in "fields->type".
 ','line_number':1070,'multiline':True]['text':'
 * Copy a non-error line into the error string.  Return the matched line in
 * "fields->errmsg".
 ','line_number':1083,'multiline':True]['text':' linelen + null terminator','line_number':1094,'multiline':False]['text':' copy whole line to error message','line_number':1100,'multiline':False]['text':'
 * Parse the match for error message ('%m') pattern in regmatch.
 * Return the matched value in "fields->errmsg".
 ','line_number':1106,'multiline':True]['text':' len + null terminator','line_number':1121,'multiline':False]['text':'
 * Parse the match for rest of a single-line file message ('%r') pattern.
 * Return the matched value in "tail".
 ','line_number':1131,'multiline':True]['text':'
 * Parse the match for the pointer line ('%p') pattern in regmatch.
 * Return the matched value in "fields->col".
 ','line_number':1144,'multiline':True]['text':'
 * Parse the match for the virtual column number ('%v') pattern in regmatch.
 * Return the matched value in "fields->col".
 ','line_number':1171,'multiline':True]['text':'
 * Parse the match for the search text ('%s') pattern in regmatch.
 * Return the matched value in "fields->pattern".
 ','line_number':1185,'multiline':True]['text':'
 * Parse the match for the module ('%o') pattern in regmatch.
 * Return the matched value in "fields->module".
 ','line_number':1207,'multiline':True]['text':'
 * 'errorformat' format pattern parser functions.
 * The '%f' and '%r' formats are parsed differently from other formats.
 * See qf_parse_match() for details.
 * Keep in sync with fmt_pat[].
 ','line_number':1225,'multiline':True]['text':' %f','line_number':1233,'multiline':False]['text':' %r','line_number':1242,'multiline':False]['text':'
 * Parse the error format pattern matches in "regmatch" and set the values in
 * "fields".  fmt_ptr contains the 'efm' format specifiers/prefixes that have a
 * match.  Returns QF_OK if all the matches are successfully parsed. On
 * failure, returns QF_FAIL or QF_NOMEM.
 ','line_number':1249,'multiline':True]['text':' Extract error message data from matched line.','line_number':1278,'multiline':False]['text':' We check for an actual submatch, because "\[" and "\]" in','line_number':1279,'multiline':False]['text':' the 'errorformat' may cause the wrong submatch to be used.','line_number':1280,'multiline':False]['text':' %f','line_number':1285,'multiline':False]['text':' %+','line_number':1289,'multiline':False]['text':' %m','line_number':1291,'multiline':False]['text':' %r','line_number':1294,'multiline':False]['text':' others','line_number':1296,'multiline':False]['text':'
 * Parse an error line in 'linebuf' using a single error format string in
 * 'fmt_ptr->prog' and return the matching values in 'fields'.
 * Returns QF_OK if the efm format matches completely and the fields are
 * successfully copied. Otherwise returns QF_FAIL or QF_NOMEM.
 ','line_number':1306,'multiline':True]['text':' Always ignore case when looking for a matching error.','line_number':1345,'multiline':False]['text':'
 * Parse directory error format prefixes (%D and %X).
 * Push and pop directories from the directory stack when scanning directory
 * names.
 ','line_number':1357,'multiline':True]['text':' enter directory','line_number':1365,'multiline':False]['text':' leave directory','line_number':1377,'multiline':False]['text':'
 * Parse global file name error format prefixes (%O, %P and %Q).
 ','line_number':1383,'multiline':True]['text':'
 * Parse a non-error line (a line which doesn't match any of the error
 * format in 'efm').
 ','line_number':1413,'multiline':True]['text':' no match found, remove file name','line_number':1420,'multiline':False]['text':' don't jump to this line','line_number':1421,'multiline':False]['text':'
 * Parse multi-line error format prefixes (%C and %Z)
 ','line_number':1427,'multiline':True]['text':' only printable chars allowed','line_number':1461,'multiline':False]['text':'
 * Parse a line and get the quickfix fields.
 * Return the QF_ status.
 ','line_number':1490,'multiline':True]['text':' If there was no %> item start at the first pattern','line_number':1508,'multiline':False]['text':' Otherwise start from the last used pattern','line_number':1513,'multiline':False]['text':' Try to match each part of 'errorformat' until we find a complete','line_number':1518,'multiline':False]['text':' match or no match.','line_number':1519,'multiline':False]['text':' 'D' and 'X' directory specifiers','line_number':1537,'multiline':False]['text':' honor %> item','line_number':1552,'multiline':False]['text':' start of a multi-line message','line_number':1558,'multiline':False]['text':' reset continuation','line_number':1559,'multiline':False]['text':' continuation of multi-line msg','line_number':1562,'multiline':False]['text':' global file names','line_number':1568,'multiline':False]['text':' generally exclude this line','line_number':1573,'multiline':False]['text':' also exclude continuation lines','line_number':1576,'multiline':False]['text':'
 * Returns TRUE if the specified quickfix/location stack is empty
 ','line_number':1585,'multiline':True]['text':'
 * Returns TRUE if the specified quickfix/location list is empty.
 ','line_number':1594,'multiline':True]['text':'
 * Returns TRUE if the specified quickfix/location list is not empty and
 * has valid entries.
 ','line_number':1603,'multiline':True]['text':'
 * Return a pointer to a list in the specified quickfix stack
 ','line_number':1613,'multiline':True]['text':'
 * Allocate the fields used for parsing lines and populating a quickfix list.
 ','line_number':1622,'multiline':True]['text':'
 * Free the fields used for parsing lines and populating a quickfix list.
 ','line_number':1640,'multiline':True]['text':'
 * Setup the state information used for parsing lines and populating a
 * quickfix list.
 ','line_number':1652,'multiline':True]['text':'
 * Cleanup the state information used for parsing lines and populating a
 * quickfix list.
 ','line_number':1691,'multiline':True]['text':'
 * Process the next line from a file/buffer/list/string and add it
 * to the quickfix list 'qfl'.
 ','line_number':1706,'multiline':True]['text':' Get the next line from a file/buffer/list/string','line_number':1719,'multiline':False]['text':'
 * Read the errorfile "efile" into memory, line by line, building the error
 * list.
 * Alternative: when "efile" is NULL read errors from buffer "buf".
 * Alternative: when "tv" is not NULL get errors from the string or list.
 * Always use 'errorformat' from "buf" if there is a local value.
 * Then "lnumfirst" and "lnumlast" specify the range of lines to use.
 * Set the title of the list to "qf_title".
 * Return -1 for error, number of errors for success.
 ','line_number':1750,'multiline':True]['text':' TRUE: start a new error list','line_number':1768,'multiline':False]['text':' first line number to use','line_number':1769,'multiline':False]['text':' last line number to use','line_number':1770,'multiline':False]['text':' default: return error flag','line_number':1782,'multiline':False]['text':' Do not used the cached buffer, it may have been wiped out.','line_number':1785,'multiline':False]['text':' make place for a new list','line_number':1797,'multiline':False]['text':' Adding to existing list, use last entry.','line_number':1804,'multiline':False]['text':' Use the local value of 'errorformat' if it's set.','line_number':1811,'multiline':False]['text':' If the errorformat didn't change between calls, then reuse the','line_number':1817,'multiline':False]['text':' previously parsed values.','line_number':1818,'multiline':False]['text':' free the previously parsed data','line_number':1821,'multiline':False]['text':' parse the current 'efm'','line_number':1825,'multiline':False]['text':' nothing found','line_number':1831,'multiline':False]['text':' got_int is reset here, because it was probably set when killing the','line_number':1834,'multiline':False]['text':' ":make" command, but we still want to read the errorfile then.','line_number':1835,'multiline':False]['text':' Read the lines in the error file one by one.','line_number':1838,'multiline':False]['text':' Try to recognize one of the error formats in each line.','line_number':1839,'multiline':False]['text':' memory alloc failure','line_number':1843,'multiline':False]['text':' end of input','line_number':1845,'multiline':False]['text':' no valid entry found','line_number':1856,'multiline':False]['text':' return number of matches','line_number':1867,'multiline':False]['text':' Error when creating a new list. Free the new list','line_number':1875,'multiline':False]['text':'
 * Read the errorfile "efile" into memory, line by line, building the error
 * list. Set the error list's title to qf_title.
 * Return -1 for error, number of errors for success.
 ','line_number':1890,'multiline':True]['text':' TRUE: start a new error list','line_number':1899,'multiline':False]['text':'
 * Set the title of the specified quickfix list. Frees the previous title.
 * Prepends ':' to the title.
 ','line_number':1916,'multiline':True]['text':'
 * The title of a quickfix/location list is set, by default, to the command
 * that created the quickfix list with the ":" prefix.
 * Create a quickfix list title string by prepending ":" to a user command.
 * Returns a pointer to a static buffer with the title.
 ','line_number':1935,'multiline':True]['text':'
 * Return a pointer to the current list in the specified quickfix stack
 ','line_number':1950,'multiline':True]['text':'
 * Prepare for adding a new quickfix list. If the current list is in the
 * middle of the stack, then all the following lists are freed and then
 * the new list is added.
 ','line_number':1959,'multiline':True]['text':' If the current entry is not the last entry, delete entries beyond','line_number':1970,'multiline':False]['text':' the current entry.  This makes it possible to browse in a tree-like','line_number':1971,'multiline':False]['text':' way with ":grep".','line_number':1972,'multiline':False]['text':' When the stack is full, remove to oldest entry','line_number':1976,'multiline':False]['text':' Otherwise, add a new entry.','line_number':1977,'multiline':False]['text':'
 * Queue location list stack delete request.
 ','line_number':1995,'multiline':True]['text':'
 * Return the global quickfix stack window buffer number.
 ','line_number':2012,'multiline':True]['text':'
 * Wipe the quickfix window buffer (if present) for the specified
 * quickfix/location list.
 ','line_number':2021,'multiline':True]['text':' If the quickfix buffer is not loaded in any window, then','line_number':2036,'multiline':False]['text':' wipe the buffer.','line_number':2037,'multiline':False]['text':'
 * Free a location list stack
 ','line_number':2043,'multiline':True]['text':' Remove reference to this list','line_number':2055,'multiline':False]['text':' If the location list is still in use, then queue the delete request','line_number':2057,'multiline':False]['text':' to be processed later.','line_number':2058,'multiline':False]['text':' No references to this location list.','line_number':2068,'multiline':False]['text':' If the quickfix window buffer is loaded, then wipe it','line_number':2069,'multiline':False]['text':'
 * Free all the quickfix/location lists in the stack.
 ','line_number':2078,'multiline':True]['text':' location list','line_number':2089,'multiline':False]['text':' quickfix list','line_number':2094,'multiline':False]['text':'
 * Delay freeing of location list stacks when the quickfix code is running.
 * Used to avoid problems with autocmds freeing location list stacks when the
 * quickfix code is still referencing the stack.
 * Must always call decr_quickfix_busy() exactly once after this.
 ','line_number':2099,'multiline':True]['text':'
 * Safe to free location list stacks. Process any delayed delete requests.
 ','line_number':2111,'multiline':True]['text':' No longer referencing the location lists. Process all the pending','line_number':2119,'multiline':False]['text':' delete requests.','line_number':2120,'multiline':False]['text':'
 * Add an entry to the end of the list of errors.
 * Returns QF_OK on success or QF_FAIL on a memory allocation failure.
 ','line_number':2153,'multiline':True]['text':' quickfix list entry','line_number':2159,'multiline':False]['text':' optional directory name','line_number':2160,'multiline':False]['text':' file name or NULL','line_number':2161,'multiline':False]['text':' module name or NULL','line_number':2162,'multiline':False]['text':' buffer number or zero','line_number':2163,'multiline':False]['text':' message','line_number':2164,'multiline':False]['text':' line number','line_number':2165,'multiline':False]['text':' line number for end','line_number':2166,'multiline':False]['text':' column','line_number':2167,'multiline':False]['text':' column for end','line_number':2168,'multiline':False]['text':' using visual column','line_number':2169,'multiline':False]['text':' search pattern','line_number':2170,'multiline':False]['text':' error number','line_number':2171,'multiline':False]['text':' type character','line_number':2172,'multiline':False]['text':' custom user data or NULL','line_number':2173,'multiline':False]['text':' valid entry','line_number':2174,'multiline':False]['text':' pointer to qf_last or NULL','line_number':2177,'multiline':False]['text':' only printable chars allowed','line_number':2227,'multiline':False]['text':' first element in the list','line_number':2233,'multiline':False]['text':' first valid entry','line_number':2249,'multiline':False]['text':'
 * Allocate a new quickfix/location list stack
 ','line_number':2258,'multiline':True]['text':'
 * Return the location list stack for window 'wp'.
 * If not present, allocate a location list stack
 ','line_number':2276,'multiline':True]['text':' For a location list window, use the referenced location list','line_number':2284,'multiline':False]['text':' For a non-location list window, w_llist_ref should not point to a','line_number':2287,'multiline':False]['text':' location list.','line_number':2288,'multiline':False]['text':' new location list','line_number':2292,'multiline':False]['text':'
 * Get the quickfix/location list stack to use for the specified Ex command.
 * For a location list command, returns the stack for the current window.  If
 * the location list is not found, then returns NULL and prints an error
 * message if 'print_emsg' is TRUE.
 ','line_number':2296,'multiline':True]['text':'
 * Get the quickfix/location list stack to use for the specified Ex command.
 * For a location list command, returns the stack for the current window.
 * If the location list is not present, then allocates a new one.
 * Returns NULL if the allocation fails.  For a location list command, sets
 * 'pwinp' to curwin.
 ','line_number':2321,'multiline':True]['text':'
 * Copy location list entries from 'from_qfl' to 'to_qfl'.
 ','line_number':2344,'multiline':True]['text':' copy all the location entries in this list','line_number':2354,'multiline':False]['text':' qf_add_entry() will not set the qf_num field, as the','line_number':2375,'multiline':False]['text':' directory and file names are not supplied. So the qf_fnum','line_number':2376,'multiline':False]['text':' field is copied here.','line_number':2377,'multiline':False]['text':' file number','line_number':2379,'multiline':False]['text':' error type','line_number':2380,'multiline':False]['text':' current location','line_number':2382,'multiline':False]['text':'
 * Copy the specified location list 'from_qfl' to 'to_qfl'.
 ','line_number':2388,'multiline':True]['text':' Some of the fields are populated by qf_add_entry()','line_number':2394,'multiline':False]['text':' current index in the list','line_number':2424,'multiline':False]['text':' Assign a new ID for the location list','line_number':2426,'multiline':False]['text':' When no valid entries are present in the list, qf_ptr points to','line_number':2430,'multiline':False]['text':' the first item in the list','line_number':2431,'multiline':False]['text':'
 * Copy the location list stack 'from' window to 'to' window.
 ','line_number':2441,'multiline':True]['text':' When copying from a location list window, copy the referenced','line_number':2450,'multiline':False]['text':' location list. For other windows, copy the location list for','line_number':2451,'multiline':False]['text':' that window.','line_number':2452,'multiline':False]['text':' no location list to copy','line_number':2458,'multiline':False]['text':' allocate a new location list','line_number':2461,'multiline':False]['text':' Copy the location lists one at a time','line_number':2467,'multiline':False]['text':' current list','line_number':2480,'multiline':False]['text':'
 * Get buffer number for file "directory/fname".
 * Also sets the b_has_qf_entry flag.
 ','line_number':2483,'multiline':True]['text':' no file name','line_number':2494,'multiline':False]['text':' Here we check if the file really exists.','line_number':2508,'multiline':False]['text':' This should normally be true, but if make works without','line_number':2509,'multiline':False]['text':' "leaving directory"-messages we might have missed a','line_number':2510,'multiline':False]['text':' directory change.','line_number':2511,'multiline':False]['text':' Use concatenated directory name and file name','line_number':2521,'multiline':False]['text':'
 * Push dirbuf onto the directory stack and return pointer to actual dir or
 * NULL on error.
 ','line_number':2551,'multiline':True]['text':' allocate new stack element and hook it in','line_number':2561,'multiline':False]['text':' store directory on the stack','line_number':2569,'multiline':False]['text':' Okay we don't have an absolute path.','line_number':2576,'multiline':False]['text':' dirbuf must be a subdir of one of the directories on the stack.','line_number':2577,'multiline':False]['text':' Let's search...','line_number':2578,'multiline':False]['text':' clean up all dirs we already left','line_number':2592,'multiline':False]['text':' Nothing found -> it must be on top level','line_number':2601,'multiline':False]['text':'
 * pop dirbuf from the directory stack and return previous directory or NULL if
 * stack is empty
 ','line_number':2620,'multiline':True]['text':' TODO: Should we check if dirbuf is the directory on top of the stack?','line_number':2629,'multiline':False]['text':' What to do if it isn't?','line_number':2630,'multiline':False]['text':' pop top element and free it','line_number':2632,'multiline':False]['text':' return NEW top element as current dir or NULL if stack is empty','line_number':2641,'multiline':False]['text':'
 * clean up directory stack
 ','line_number':2645,'multiline':True]['text':'
 * Check in which directory of the directory stack the given file can be
 * found.
 * Returns a pointer to the directory name or NULL if not found.
 * Cleans up intermediate directory entries.
 *
 * TODO: How to solve the following problem?
 * If we have this directory tree:
 *     ./
 *     ./aa
 *     ./aa/bb
 *     ./bb
 *     ./bb/x.c
 * and make says:
 *     making all in aa
 *     making all in bb
 *     x.c:9: Error
 * Then qf_push_dir thinks we are in ./aa/bb, but we are in ./bb.
 * qf_guess_filepath will return NULL.
 ','line_number':2661,'multiline':True]['text':' no dirs on the stack - there's nothing we can do','line_number':2688,'multiline':False]['text':' If concat_fnames failed, just go on. The worst thing that can happen','line_number':2699,'multiline':False]['text':' is that we delete the entire stack.','line_number':2700,'multiline':False]['text':' clean up all dirs we already left','line_number':2709,'multiline':False]['text':'
 * Returns TRUE if a quickfix/location list with the given identifier exists.
 ','line_number':2721,'multiline':True]['text':' Location list','line_number':2734,'multiline':False]['text':'
 * When loading a file from the quickfix, the autocommands may modify it.
 * This may invalidate the current quickfix entry.  This function checks
 * whether an entry is still present in the quickfix list.
 * Similar to location list.
 ','line_number':2746,'multiline':True]['text':' Search for the entry in the current list','line_number':2758,'multiline':False]['text':' Entry is not found','line_number':2763,'multiline':False]['text':'
 * Get the next valid entry in the current quickfix/location list. The search
 * starts from the current entry.  Returns NULL on failure.
 ','line_number':2769,'multiline':True]['text':'
 * Get the previous valid entry in the current quickfix/location list. The
 * search starts from the current entry.  Returns NULL on failure.
 ','line_number':2799,'multiline':True]['text':'
 * Get the n'th (errornr) previous/next valid entry from the current entry in
 * the quickfix list.
 *   dir == FORWARD or FORWARD_FILE: next valid entry
 *   dir == BACKWARD or BACKWARD_FILE: previous valid entry
 ','line_number':2829,'multiline':True]['text':'
 * Get n'th (errornr) quickfix entry from the current entry in the quickfix
 * list 'qfl'. Returns a pointer to the new entry and the index in 'new_qfidx'
 ','line_number':2876,'multiline':True]['text':' New error number is less than the current error number','line_number':2886,'multiline':False]['text':' New error number is greater than the current error number','line_number':2892,'multiline':False]['text':'
 * Get a entry specified by 'errornr' and 'dir' from the current
 * quickfix/location list. 'errornr' specifies the index of the entry and 'dir'
 * specifies the direction (FORWARD/BACKWARD/FORWARD_FILE/BACKWARD_FILE).
 * Returns a pointer to the entry and the index of the new entry is stored in
 * 'new_qfidx'.
 ','line_number':2904,'multiline':True]['text':' next/prev valid entry','line_number':2921,'multiline':False]['text':' go to specified number','line_number':2923,'multiline':False]['text':'
 * Find a window displaying a Vim help file in the current tab page.
 ','line_number':2930,'multiline':True]['text':'
 * Set the location list for the specified window to 'qi'.
 ','line_number':2945,'multiline':True]['text':'
 * Find a help window or open one. If 'newwin' is TRUE, then open a new help
 * window.
 ','line_number':2955,'multiline':True]['text':' Split off help window; put it at far top if no position','line_number':2973,'multiline':False]['text':' specified, the current window is vertically split and narrow.','line_number':2974,'multiline':False]['text':' If the user asks to open a new window, then copy the location list.','line_number':2979,'multiline':False]['text':' Otherwise, don't copy the location list.','line_number':2980,'multiline':False]['text':' When using location list, the new window should use the supplied','line_number':2992,'multiline':False]['text':' location list. If the user asks to open a new window, then the new','line_number':2993,'multiline':False]['text':' window will get a copy of the location list.','line_number':2994,'multiline':False]['text':' don't want insert mode in help file','line_number':3000,'multiline':False]['text':'
 * Find a non-quickfix window using the given location list stack in the
 * current tabpage.
 * Returns NULL if a matching window is not found.
 ','line_number':3005,'multiline':True]['text':'
 * Find a window containing a normal buffer in the current tab page.
 ','line_number':3022,'multiline':True]['text':'
 * Go to a window in any tabpage containing the specified file.  Returns TRUE
 * if successfully jumped to the window. Otherwise returns FALSE.
 ','line_number':3037,'multiline':True]['text':'
 * Create a new window to show a file above the quickfix window. Called when
 * only the quickfix window is present.
 ','line_number':3057,'multiline':True]['text':' not enough room for window','line_number':3070,'multiline':False]['text':' don't split again','line_number':3071,'multiline':False]['text':' The new window should use the location list from the','line_number':3075,'multiline':False]['text':' location list window','line_number':3076,'multiline':False]['text':'
 * Go to a window that shows the right buffer. If the window is not found, go
 * to the window just above the location list window. This is used for opening
 * a file from a location window and not from a quickfix window. If some usable
 * window is previously found, then it is supplied in 'use_win'.
 ','line_number':3081,'multiline':True]['text':' Find the window showing the selected file in the current tab page.','line_number':3094,'multiline':False]['text':' Find a previous usable window','line_number':3100,'multiline':False]['text':' wrap around the top','line_number':3107,'multiline':False]['text':' go to previous window','line_number':3109,'multiline':False]['text':' If the location list for the window is not set, then set it','line_number':3115,'multiline':False]['text':' to the location list from the location window','line_number':3116,'multiline':False]['text':'
 * Go to a window that contains the specified buffer 'qf_fnum'. If a window is
 * not found, then go to the window just above the quickfix window. This is
 * used for opening a file from a quickfix window and not from a location
 * window.
 ','line_number':3121,'multiline':True]['text':' wrap around the top','line_number':3140,'multiline':False]['text':' go to previous window','line_number':3142,'multiline':False]['text':' Didn't find it, go to the window before the quickfix','line_number':3146,'multiline':False]['text':' window, unless 'switchbuf' contains 'uselast': in this case we','line_number':3147,'multiline':False]['text':' try to jump to the previously used window first.','line_number':3148,'multiline':False]['text':' Remember a usable window.','line_number':3160,'multiline':False]['text':'
 * Find a suitable window for opening a file (qf_fnum) from the
 * quickfix/location list and jump to it.  If the file is already opened in a
 * window, jump to it. Otherwise open a new window to display the file. If
 * 'newwin' is TRUE, then always open a new window. This is called from either
 * a quickfix or a location list window.
 ','line_number':3168,'multiline':True]['text':' If opening a new window, then don't use the location list referred by','line_number':3182,'multiline':False]['text':' the current window.  Otherwise two windows will refer to the same','line_number':3183,'multiline':False]['text':' location list.','line_number':3184,'multiline':False]['text':' Find a non-quickfix window with this location list','line_number':3190,'multiline':False]['text':' Locate a window showing a normal buffer','line_number':3198,'multiline':False]['text':' If no usable window is found and 'switchbuf' contains "usetab"','line_number':3204,'multiline':False]['text':' then search in other tabs.','line_number':3205,'multiline':False]['text':' If there is only one window and it is the quickfix window, create a','line_number':3209,'multiline':False]['text':' new one above the quickfix window.','line_number':3210,'multiline':False]['text':' close it when fail','line_number':3215,'multiline':False]['text':' In a location window','line_number':3219,'multiline':False]['text':' In a quickfix window','line_number':3221,'multiline':False]['text':'
 * Edit the selected file or help file.
 * Returns OK if successfully edited the file, FAIL on failing to open the
 * buffer and QF_ABORT if the quickfix/location list was freed by an autocmd
 * when opening the buffer.
 ','line_number':3228,'multiline':True]['text':' Open help file (do_ecmd() will set b_help flag, readfile() will','line_number':3251,'multiline':False]['text':' set b_p_ro flag).','line_number':3252,'multiline':False]['text':' If a location list, check whether the associated window is still','line_number':3267,'multiline':False]['text':' present.','line_number':3268,'multiline':False]['text':' Check if the list was changed.  The pointers may happen to be identical,','line_number':3287,'multiline':False]['text':' thus also check qf_changedtick.','line_number':3288,'multiline':False]['text':'
 * Go to the error line in the current file using either line/column number or
 * a search pattern.
 ','line_number':3303,'multiline':True]['text':' Go to line with error, unless qf_lnum is 0.','line_number':3318,'multiline':False]['text':' Move the cursor to the first line in the buffer','line_number':3343,'multiline':False]['text':'
 * Display quickfix list index and size message
 ','line_number':3351,'multiline':True]['text':' Update the screen before showing the message, unless the screen','line_number':3367,'multiline':False]['text':' scrolled up.','line_number':3368,'multiline':False]['text':' Add the message, skipping leading whitespace and newlines.','line_number':3375,'multiline':False]['text':' Output the message.  Overwrite to avoid scrolling when the 'O'','line_number':3380,'multiline':False]['text':' flag is present in 'shortmess'; But when not jumping, print the','line_number':3381,'multiline':False]['text':' whole message.','line_number':3382,'multiline':False]['text':'
 * Find a usable window for opening a file from the quickfix/location list. If
 * a window is not found then open a new window. If 'newwin' is TRUE, then open
 * a new window.
 * Returns OK if successfully jumped or opened a window. Returns FAIL if not
 * able to jump/open a window.  Returns NOTDONE if a file is not associated
 * with the entry.  Returns QF_ABORT if the quickfix/location list was modified
 * by an autocmd.
 ','line_number':3394,'multiline':True]['text':' For ":helpgrep" find a help window or open one.','line_number':3415,'multiline':False]['text':' If currently in the quickfix window, find another window to show the','line_number':3431,'multiline':False]['text':' file in.','line_number':3432,'multiline':False]['text':' If there is no file specified, we don't know where to go.','line_number':3435,'multiline':False]['text':' But do advance, otherwise ":cn" gets stuck.','line_number':3436,'multiline':False]['text':'
 * Edit a selected file from the quickfix/location list and jump to a
 * particular line/column, adjust the folds and display a message about the
 * jump.
 * Returns OK on success and FAIL on failing to open the file/buffer.  Returns
 * QF_ABORT if the quickfix/location list is freed by an autocmd when opening
 * the file.
 ','line_number':3458,'multiline':True]['text':' If there is a file name, read the wanted file if needed, and check','line_number':3481,'multiline':False]['text':' autowrite etc.','line_number':3482,'multiline':False]['text':' When not switched to another buffer, still need to set pc mark','line_number':3494,'multiline':False]['text':'
 * Jump to a quickfix line and try to use an existing window.
 ','line_number':3511,'multiline':True]['text':'
 * Jump to a quickfix line.
 * If dir == 0 go to entry "errornr".
 * If dir == FORWARD go "errornr" valid entries forward.
 * If dir == BACKWARD go "errornr" valid entries backward.
 * If dir == FORWARD_FILE go "errornr" valid entries files backward.
 * If dir == BACKWARD_FILE go "errornr" valid entries files backward
 * else if "errornr" is zero, redisplay the same line
 * If 'forceit' is TRUE, then can discard changes to the current buffer.
 * If 'newwin' is TRUE, then open the file in a new window.
 ','line_number':3523,'multiline':True]['text':' getting file may reset it','line_number':3551,'multiline':False]['text':' No need to print the error message if it's visible in the error','line_number':3583,'multiline':False]['text':' window','line_number':3584,'multiline':False]['text':' Quickfix/location list was modified by an autocmd','line_number':3605,'multiline':False]['text':' Close opened window','line_number':3613,'multiline':False]['text':' Couldn't open file, so put index back where it was.  This could','line_number':3616,'multiline':False]['text':' happen if the file was readonly and we changed something.','line_number':3617,'multiline':False]['text':' Restore old 'switchbuf' value, but not when an autocommand or','line_number':3631,'multiline':False]['text':' modeline has changed the value.','line_number':3632,'multiline':False]['text':' Highlight attributes used for displaying entries from the quickfix list.','line_number':3639,'multiline':False]['text':'
 * Display information about a single entry from the quickfix/location list.
 * Used by ":clist/:llist" commands.
 * 'cursel' will be set to TRUE for the currently selected entry in the
 * quickfix list.
 ','line_number':3644,'multiline':True]['text':' :helpgrep','line_number':3668,'multiline':False]['text':' Support for filtering entries using :filter /pat/ clist','line_number':3678,'multiline':False]['text':' Match against the module name, file name, search pattern and','line_number':3679,'multiline':False]['text':' text of the entry.','line_number':3680,'multiline':False]['text':' Remove newlines and leading whitespace from the text.  For an','line_number':3715,'multiline':False]['text':' unrecognized line keep the indent, the compiler may mark a word','line_number':3716,'multiline':False]['text':' with ^^^^.','line_number':3717,'multiline':False]['text':' show one line at a time','line_number':3723,'multiline':False]['text':'
 * ":clist": list all errors
 * ":llist": list all locations
 ','line_number':3726,'multiline':True]['text':' if not :cl!, only show','line_number':3740,'multiline':False]['text':' recognised errors','line_number':3741,'multiline':False]['text':' Shorten all the file names, so that it is easy to read','line_number':3778,'multiline':False]['text':' Get the attributes for the different quickfix highlight items.  Note','line_number':3781,'multiline':False]['text':' that this depends on syntax items defined in the qf.vim syntax file','line_number':3782,'multiline':False]['text':'
 * Remove newlines and leading whitespace from an error message.
 * Add the result to the grow array "gap".
 ','line_number':3805,'multiline':True]['text':'
 * Add the range information from the lnum, col, end_lnum, and end_col values
 * of a quickfix entry to the grow array "gap".
 ','line_number':3827,'multiline':True]['text':'
 * Display information (list number, list size and the title) about a
 * quickfix/location list.
 ','line_number':3862,'multiline':True]['text':'
 * ":colder [count]": Up in the quickfix stack.
 * ":cnewer [count]": Down in the quickfix stack.
 * ":lolder [count]": Up in the location list stack.
 * ":lnewer [count]": Down in the location list stack.
 ','line_number':3894,'multiline':True]['text':'
 * Display the information about all the quickfix/location lists in the stack
 ','line_number':3938,'multiline':True]['text':' Jump to the specified quickfix list','line_number':3955,'multiline':False]['text':'
 * Free all the entries in the error list "idx". Note that other information
 * associated with the list like context and title are not freed.
 ','line_number':3975,'multiline':True]['text':' Somehow qf_count may have an incorrect value, set it to 1','line_number':3999,'multiline':False]['text':' to avoid crashing when it's wrong.','line_number':4000,'multiline':False]['text':' TODO: Avoid qf_count being incorrect.','line_number':4001,'multiline':False]['text':'
 * Free error list "idx". Frees all the entries in the quickfix list,
 * associated context information and the title.
 ','line_number':4024,'multiline':True]['text':'
 * qf_mark_adjust: adjust marks
 ','line_number':4041,'multiline':True]['text':'
 * Make a nice message out of the error character and the error number:
 *  char    number	message
 *  e or E    0		" error"
 *  w or W    0		" warning"
 *  i or I    0		" info"
 *  n or N    0		" note"
 *  0	      0		""
 *  other     0		" c"
 *  e or E    n		" error n"
 *  w or W    n		" warning n"
 *  i or I    n		" info n"
 *  n or N    n		" note n"
 *  0	      n		" error n"
 *  other     n		" c n"
 *  1	      x		""	:helpgrep
 ','line_number':4093,'multiline':True]['text':'
 * When "split" is FALSE: Open the entry/result under the cursor.
 * When "split" is TRUE: Open the entry/result under the cursor in a new window.
 ','line_number':4142,'multiline':True]['text':' Open the selected entry in a new window','line_number':4162,'multiline':False]['text':'
 * ":cwindow": open the quickfix window if we have errors to display,
 *	       close it if not.
 * ":lwindow": open the location list window if we have locations to display,
 *	       close it if not.
 ','line_number':4171,'multiline':True]['text':' Look for an existing quickfix window.','line_number':4189,'multiline':False]['text':' If a quickfix window is open but we have no errors to display,','line_number':4192,'multiline':False]['text':' close the window.  If a quickfix window is not open, then open','line_number':4193,'multiline':False]['text':' it if we have errors; otherwise, leave it closed.','line_number':4194,'multiline':False]['text':'
 * ":cclose": close the window showing the list of errors.
 * ":lclose": close the window showing the location list
 ','line_number':4206,'multiline':True]['text':' Find existing quickfix window and close it.','line_number':4219,'multiline':False]['text':'
 * Set "w:quickfix_title" if "qi" has a title.
 ','line_number':4225,'multiline':True]['text':'
 * Goto a quickfix or location list window (if present).
 * Returns OK if the window is found, FAIL otherwise.
 ','line_number':4235,'multiline':True]['text':'
 * Set options for the buffer in the quickfix or location list window.
 ','line_number':4264,'multiline':True]['text':' switch off 'swapfile'','line_number':4270,'multiline':False]['text':'
 * Open a new quickfix or location list window, load the quickfix buffer and
 * set the appropriate options for the window.
 * Returns FAIL if the window could not be opened.
 ','line_number':4285,'multiline':True]['text':' The current window becomes the previous window afterwards.','line_number':4301,'multiline':False]['text':' Create the new quickfix window at the very bottom, except when','line_number':4305,'multiline':False]['text':' :belowright or :aboveleft is used.','line_number':4306,'multiline':False]['text':' Default is to open the window below the current window','line_number':4308,'multiline':False]['text':' not enough room for window','line_number':4313,'multiline':False]['text':' For the location list window, create a reference to the','line_number':4318,'multiline':False]['text':' location list stack from the window 'win'.','line_number':4319,'multiline':False]['text':' don't store info when in another window','line_number':4325,'multiline':False]['text':' Use the existing quickfix buffer','line_number':4328,'multiline':False]['text':' Create a new quickfix buffer','line_number':4335,'multiline':False]['text':' save the number of the new buffer','line_number':4340,'multiline':False]['text':' Set the options for the quickfix buffer/window (if not already done)','line_number':4344,'multiline':False]['text':' Do this even if the quickfix buffer was already present, as an autocmd','line_number':4345,'multiline':False]['text':' might have previously deleted (:bdelete) the quickfix buffer.','line_number':4346,'multiline':False]['text':' Only set the height when still in the same tab page and there is no','line_number':4350,'multiline':False]['text':' window to the side.','line_number':4351,'multiline':False]['text':' set 'winfixheight'','line_number':4354,'multiline':False]['text':'
 * ":copen": open a window that shows the list of errors.
 * ":lopen": open a window that shows the location list.
 ','line_number':4361,'multiline':True]['text':' stop Visual mode','line_number':4384,'multiline':False]['text':' Find an existing quickfix window, or open a new one.','line_number':4389,'multiline':False]['text':' Save the current index here, as updating the quickfix buffer may free','line_number':4402,'multiline':False]['text':' the quickfix list','line_number':4403,'multiline':False]['text':' Fill the buffer with the quickfix list.','line_number':4406,'multiline':False]['text':' scroll to show the line','line_number':4414,'multiline':False]['text':'
 * Move the cursor in the quickfix window to "lnum".
 ','line_number':4417,'multiline':True]['text':' scroll to show the line','line_number':4431,'multiline':False]['text':' update ruler','line_number':4433,'multiline':False]['text':'
 * :cbottom/:lbottom commands.
 ','line_number':4438,'multiline':True]['text':'
 * Return the number of the current entry (line number in the quickfix
 * window).
 ','line_number':4455,'multiline':True]['text':' In the location list window, use the referenced location list','line_number':4465,'multiline':False]['text':'
 * Update the cursor position in the quickfix window to the current error.
 * Return TRUE if there is a quickfix window.
 ','line_number':4471,'multiline':True]['text':' previous qf_index or zero','line_number':4478,'multiline':False]['text':' Put the cursor on the current error in the quickfix window, so that','line_number':4483,'multiline':False]['text':' it's viewable.','line_number':4484,'multiline':False]['text':'
 * Check whether the given window is displaying the specified quickfix/location
 * stack.
 ','line_number':4505,'multiline':True]['text':' A window displaying the quickfix buffer will have the w_llist_ref field','line_number':4512,'multiline':False]['text':' set to NULL.','line_number':4513,'multiline':False]['text':' A window displaying a location list buffer will have the w_llist_ref','line_number':4514,'multiline':False]['text':' pointing to the location list.','line_number':4515,'multiline':False]['text':'
 * Find a window displaying the quickfix/location stack 'qi' in the current tab
 * page.
 ','line_number':4524,'multiline':True]['text':'
 * Find a quickfix buffer.
 * Searches in windows opened in all the tab pages.
 ','line_number':4539,'multiline':True]['text':' buffer is no longer present','line_number':4555,'multiline':False]['text':'
 * Process the 'quickfixtextfunc' option value.
 * Returns OK or FAIL.
 ','line_number':4566,'multiline':True]['text':'
 * Update the w:quickfix_title variable in the quickfix/location list window in
 * all the tab pages.
 ','line_number':4579,'multiline':True]['text':'
 * Find the quickfix buffer.  If it exists, update the contents.
 ','line_number':4602,'multiline':True]['text':' Check if a buffer for the quickfix list exists.  Update it.','line_number':4612,'multiline':False]['text':' Find the file window (non-quickfix) with this location list','line_number':4626,'multiline':False]['text':' File window is not found. Find the location list window.','line_number':4629,'multiline':False]['text':' autocommands may cause trouble','line_number':4637,'multiline':False]['text':' set curwin/curbuf to buf and save a few things','line_number':4643,'multiline':False]['text':' failed to find a window for "buf"','line_number':4646,'multiline':False]['text':' restore curwin/curbuf and a few other things','line_number':4660,'multiline':False]['text':' Only redraw when added lines are visible.  This avoids flickering','line_number':4665,'multiline':False]['text':' when the added lines are not visible.','line_number':4666,'multiline':False]['text':' always called after incr_quickfix_busy()','line_number':4670,'multiline':False]['text':'
 * Add an error line to the quickfix buffer.
 ','line_number':4674,'multiline':True]['text':' quickfix window buffer','line_number':4679,'multiline':False]['text':' If the 'quickfixtextfunc' function returned a non-empty custom string','line_number':4691,'multiline':False]['text':' for this entry, then use it.','line_number':4692,'multiline':False]['text':' :helpgrep','line_number':4705,'multiline':False]['text':' Shorten the file name if not done already.','line_number':4709,'multiline':False]['text':' For optimization, do this only for the first entry in a','line_number':4710,'multiline':False]['text':' buffer.','line_number':4711,'multiline':False]['text':' Remove newlines and leading whitespace from the text.','line_number':4735,'multiline':False]['text':' For an unrecognized line keep the indent, the compiler may','line_number':4736,'multiline':False]['text':' mark a word with ^^^^.','line_number':4737,'multiline':False]['text':'
 * Call the 'quickfixtextfunc' function to get the list of lines to display in
 * the quickfix window for the entries 'start_idx' to 'end_idx'.
 ','line_number':4749,'multiline':True]['text':' this doesn't work properly recursively','line_number':4761,'multiline':False]['text':' If 'quickfixtextfunc' is set, then use the user-supplied function to get','line_number':4764,'multiline':False]['text':' the text to display. Use the local value of 'quickfixtextfunc' if it is','line_number':4765,'multiline':False]['text':' set.','line_number':4766,'multiline':False]['text':' create the dict argument','line_number':4775,'multiline':False]['text':'
 * Fill current buffer with quickfix errors, replacing any previous contents.
 * curbuf must be the quickfix buffer!
 * If "old_last" is not NULL append the items after this one.
 * When "old_last" is NULL then "buf" must equal "curbuf"!  Because
 * ml_delete() is used and autocommands will be triggered.
 ','line_number':4807,'multiline':True]['text':' delete all existing lines','line_number':4831,'multiline':False]['text':' Check if there is anything to display','line_number':4836,'multiline':False]['text':' Add one line for each error','line_number':4845,'multiline':False]['text':' Use the text supplied by the user defined function (if any).','line_number':4869,'multiline':False]['text':' If the returned value is not string, then ignore the rest','line_number':4870,'multiline':False]['text':' of the returned values and use the default.','line_number':4871,'multiline':False]['text':' Delete the empty line which is now at the end','line_number':4894,'multiline':False]['text':' correct cursor position','line_number':4900,'multiline':False]['text':' Set the 'filetype' to "qf" each time after filling the buffer.','line_number':4905,'multiline':False]['text':' This resembles reading a file into a buffer, it's more logical when','line_number':4906,'multiline':False]['text':' using autocommands.','line_number':4907,'multiline':False]['text':' don't detect 'filetype'','line_number':4913,'multiline':False]['text':' make sure it will be redrawn','line_number':4921,'multiline':False]['text':' Restore KeyTyped, setting 'filetype' may reset it.','line_number':4925,'multiline':False]['text':'
 * For every change made to the quickfix list, update the changed tick.
 ','line_number':4929,'multiline':True]['text':'
 * Return the quickfix/location list number with the given identifier.
 * Returns -1 if list is not found.
 ','line_number':4938,'multiline':True]['text':'
 * If the current list is not "save_qfid" and we can find the list with that ID
 * then make it the current list.
 * This is used when autocommands may have changed the current list.
 * Returns OK if successfully restored the list. Returns FAIL if the list with
 * the specified identifier (save_qfid) is not found in the stack.
 ','line_number':4953,'multiline':True]['text':' list is not present','line_number':4970,'multiline':False]['text':'
 * Jump to the first entry if there is one.
 ','line_number':4976,'multiline':True]['text':' Autocommands might have cleared the list, check for that.','line_number':4985,'multiline':False]['text':'
 * Return TRUE when using ":vimgrep" for ":grep".
 ','line_number':4990,'multiline':True]['text':'
 * Return the make/grep autocmd name.
 ','line_number':5004,'multiline':True]['text':'
 * Return the name for the errorfile, in allocated memory.
 * Find a new unique name when 'makeef' contains "##".
 * Returns NULL for error.
 ','line_number':5022,'multiline':True]['text':' Keep trying until the name doesn't exist yet.','line_number':5053,'multiline':False]['text':' Don't accept a symbolic link, it's a security risk.','line_number':5069,'multiline':False]['text':'
 * Form the complete command line to invoke 'make'/'grep'. Quote the command
 * using 'shellquote' and append 'shellpipe'. Echo the fully formed command.
 ','line_number':5079,'multiline':True]['text':' If 'shellpipe' empty: don't redirect to 'errorfile'.','line_number':5098,'multiline':False]['text':' Display the fully formed command.  Output a newline if there's something','line_number':5102,'multiline':False]['text':' else than the :make command that was typed (in which case the cursor is','line_number':5103,'multiline':False]['text':' in column 0).','line_number':5104,'multiline':False]['text':' show what we are doing','line_number':5109,'multiline':False]['text':'
 * Used for ":make", ":lmake", ":grep", ":lgrep", ":grepadd", and ":lgrepadd"
 ','line_number':5114,'multiline':True]['text':' Redirect ":grep" to ":vimgrep" if 'grepprg' is "internal".','line_number':5131,'multiline':False]['text':' in case it's not unique','line_number':5156,'multiline':False]['text':' let the shell know if we are redirecting output or not','line_number':5165,'multiline':False]['text':' read window status report and redraw before message','line_number':5170,'multiline':False]['text':' Remember the current quickfix list identifier, so that we can','line_number':5192,'multiline':False]['text':' check for autocommands changing the current quickfix list.','line_number':5193,'multiline':False]['text':' display the first error','line_number':5199,'multiline':False]['text':'
 * Returns the number of entries in the current quickfix/location list.
 ','line_number':5209,'multiline':True]['text':'
 * Returns the number of valid entries in the current quickfix/location list.
 ','line_number':5222,'multiline':True]['text':' Count all valid entries','line_number':5243,'multiline':False]['text':' Count the number of files','line_number':5246,'multiline':False]['text':'
 * Returns the current index of the quickfix/location list.
 * Returns 0 if there is an error.
 ','line_number':5256,'multiline':True]['text':'
 * Returns the current index in the quickfix/location list (counting only valid
 * entries). If no valid entries are in the list, then returns 1.
 ','line_number':5271,'multiline':True]['text':' check if the list has valid errors','line_number':5290,'multiline':False]['text':' Count the number of files','line_number':5302,'multiline':False]['text':'
 * Get the 'n'th valid error entry in the quickfix or location list.
 * Used by :cdo, :ldo, :cfdo and :lfdo commands.
 * For :cdo and :ldo returns the 'n'th valid error entry.
 * For :cfdo and :lfdo returns the 'n'th valid file entry.
 ','line_number':5315,'multiline':True]['text':' check if the list has valid errors','line_number':5328,'multiline':False]['text':' Count the number of files','line_number':5341,'multiline':False]['text':'
 * ":cc", ":crewind", ":cfirst" and ":clast".
 * ":ll", ":lrewind", ":lfirst" and ":llast".
 * ":cdo", ":ldo", ":cfdo" and ":lfdo"
 ','line_number':5360,'multiline':True]['text':' For cdo and ldo commands, jump to the nth valid error.','line_number':5392,'multiline':False]['text':' For cfdo and lfdo commands, jump to the nth valid file entry.','line_number':5393,'multiline':False]['text':'
 * ":cnext", ":cnfile", ":cNext" and ":cprevious".
 * ":lnext", ":lNext", ":lprevious", ":lnfile", ":lNfile" and ":lpfile".
 * Also, used by ":cdo", ":ldo", ":cfdo" and ":lfdo" commands.
 ','line_number':5403,'multiline':True]['text':' Depending on the command jump to either next or previous entry/file.','line_number':5425,'multiline':False]['text':'
 * Find the first entry in the quickfix list 'qfl' from buffer 'bnr'.
 * The index of the entry is stored in 'errornr'.
 * Returns NULL if an entry is not found.
 ','line_number':5449,'multiline':True]['text':' Find the first entry in this file','line_number':5460,'multiline':False]['text':'
 * Find the first quickfix entry on the same line as 'entry'. Updates 'errornr'
 * with the error number for the first entry. Assumes the entries are sorted in
 * the quickfix list by line number.
 ','line_number':5469,'multiline':True]['text':'
 * Find the last quickfix entry on the same line as 'entry'. Updates 'errornr'
 * with the error number for the last entry. Assumes the entries are sorted in
 * the quickfix list by line number.
 ','line_number':5489,'multiline':True]['text':'
 * Returns TRUE if the specified quickfix entry is
 *   after the given line (linewise is TRUE)
 *   or after the line and column.
 ','line_number':5509,'multiline':True]['text':'
 * Returns TRUE if the specified quickfix entry is
 *   before the given line (linewise is TRUE)
 *   or before the line and column.
 ','line_number':5524,'multiline':True]['text':'
 * Returns TRUE if the specified quickfix entry is
 *   on or after the given line (linewise is TRUE)
 *   or on or after the line and column.
 ','line_number':5539,'multiline':True]['text':'
 * Returns TRUE if the specified quickfix entry is
 *   on or before the given line (linewise is TRUE)
 *   or on or before the line and column.
 ','line_number':5554,'multiline':True]['text':'
 * Find the first quickfix entry after position 'pos' in buffer 'bnr'.
 * If 'linewise' is TRUE, returns the entry after the specified line and treats
 * multiple entries on a single line as one. Otherwise returns the entry after
 * the specified line and column.
 * 'qfp' points to the very first entry in the buffer and 'errornr' is the
 * index of the very first entry in the quickfix list.
 * Returns NULL if an entry is not found after 'pos'.
 ','line_number':5569,'multiline':True]['text':' First entry is after position 'pos'','line_number':5587,'multiline':False]['text':' Find the entry just before or at the position 'pos'','line_number':5590,'multiline':False]['text':' No entries found after position 'pos'','line_number':5600,'multiline':False]['text':' Use the entry just after position 'pos'','line_number':5603,'multiline':False]['text':'
 * Find the first quickfix entry before position 'pos' in buffer 'bnr'.
 * If 'linewise' is TRUE, returns the entry before the specified line and
 * treats multiple entries on a single line as one. Otherwise returns the entry
 * before the specified line and column.
 * 'qfp' points to the very first entry in the buffer and 'errornr' is the
 * index of the very first entry in the quickfix list.
 * Returns NULL if an entry is not found before 'pos'.
 ','line_number':5610,'multiline':True]['text':' Find the entry just before the position 'pos'','line_number':5627,'multiline':False]['text':' If multiple entries are on the same line, then use the first entry','line_number':5640,'multiline':False]['text':'
 * Find a quickfix entry in 'qfl' closest to position 'pos' in buffer 'bnr' in
 * the direction 'dir'.
 ','line_number':5646,'multiline':True]['text':' Find the first entry in this file','line_number':5663,'multiline':False]['text':' no entry in this file','line_number':5666,'multiline':False]['text':'
 * Get the nth quickfix entry below the specified entry.  Searches forward in
 * the list. If linewise is TRUE, then treat multiple entries on a single line
 * as one.
 ','line_number':5676,'multiline':True]['text':' Treat all the entries on the same line in this file as one','line_number':5691,'multiline':False]['text':'
 * Get the nth quickfix entry above the specified entry.  Searches backwards in
 * the list. If linewise is TRUE, then treat multiple entries on a single line
 * as one.
 ','line_number':5707,'multiline':True]['text':' If multiple entries are on the same line, then use the first entry','line_number':5724,'multiline':False]['text':'
 * Find the n'th quickfix entry adjacent to position 'pos' in buffer 'bnr' in
 * the specified direction.  Returns the error number in the quickfix list or 0
 * if an entry is not found.
 ','line_number':5730,'multiline':True]['text':' Find an entry closest to the specified position','line_number':5747,'multiline':False]['text':' Go to the n'th entry in the current buffer','line_number':5754,'multiline':False]['text':'
 * Jump to a quickfix entry in the current file nearest to the current line or
 * current line/col.
 * ":cabove", ":cbelow", ":labove", ":lbelow", ":cafter", ":cbefore",
 * ":lafter" and ":lbefore" commands
 ','line_number':5764,'multiline':True]['text':' Check whether the current buffer has any quickfix entries','line_number':5786,'multiline':False]['text':' check if the list has valid errors','line_number':5802,'multiline':False]['text':' Forward motion commands','line_number':5813,'multiline':False]['text':' A quickfix entry column number is 1 based whereas cursor column','line_number':5819,'multiline':False]['text':' number is 0 based. Adjust the column number.','line_number':5820,'multiline':False]['text':'
 * Return the autocmd name for the :cfile Ex commands
 ','line_number':5835,'multiline':True]['text':'
 * ":cfile"/":cgetfile"/":caddfile" commands.
 * ":lfile"/":lgetfile"/":laddfile" commands.
 ','line_number':5853,'multiline':True]['text':' init for gcc','line_number':5864,'multiline':False]['text':' This function is used by the :cfile, :cgetfile and :caddfile','line_number':5899,'multiline':False]['text':' commands.','line_number':5900,'multiline':False]['text':' :cfile always creates a new quickfix list and jumps to the','line_number':5901,'multiline':False]['text':' first error.','line_number':5902,'multiline':False]['text':' :cgetfile creates a new quickfix list but doesn't jump to the','line_number':5903,'multiline':False]['text':' first error.','line_number':5904,'multiline':False]['text':' :caddfile adds to an existing quickfix list. If there is no','line_number':5905,'multiline':False]['text':' quickfix list then a new list is created.','line_number':5906,'multiline':False]['text':' Jump to the first error for a new list and if autocmds didn't','line_number':5925,'multiline':False]['text':' free the list.','line_number':5926,'multiline':False]['text':' display the first error','line_number':5929,'multiline':False]['text':'
 * Return the vimgrep autocmd name.
 ','line_number':5935,'multiline':True]['text':'
 * Initialize the regmatch used by vimgrep for pattern "s".
 ','line_number':5955,'multiline':True]['text':' Get the search pattern: either white-separated or enclosed in //','line_number':5961,'multiline':False]['text':' Pattern is empty, use last search pattern.','line_number':5966,'multiline':False]['text':'
 * Display a file name when vimgrep is running.
 ','line_number':5981,'multiline':True]['text':' overwrite this message','line_number':5999,'multiline':False]['text':' don't wait for this message','line_number':6000,'multiline':False]['text':'
 * Load a dummy buffer to search for a pattern using vimgrep.
 ','line_number':6005,'multiline':True]['text':' Don't do Filetype autocommands to avoid loading syntax and','line_number':6021,'multiline':False]['text':' indent scripts, a great speed improvement.','line_number':6022,'multiline':False]['text':' Don't use modelines here, it's useless.','line_number':6025,'multiline':False]['text':' Load file into a buffer, so that 'fileencoding' is detected,','line_number':6029,'multiline':False]['text':' autocommands applied, etc.','line_number':6030,'multiline':False]['text':'
 * Check whether a quickfix/location list is valid. Autocmds may remove or
 * change a quickfix list when vimgrep is running. If the list is not found,
 * create a new list.
 ','line_number':6041,'multiline':True]['text':' Verify that the quickfix/location list was not freed by an autocmd','line_number':6053,'multiline':False]['text':' An autocmd has freed the location list.','line_number':6058,'multiline':False]['text':' Quickfix list is not found, create a new one.','line_number':6064,'multiline':False]['text':'
 * Search for a pattern in all the lines in a buffer and add the matching lines
 * to a quickfix list.
 ','line_number':6076,'multiline':True]['text':' Regular expression match','line_number':6103,'multiline':False]['text':' Pass the buffer number so that it gets used even for a','line_number':6107,'multiline':False]['text':' dummy buffer, unless duplicate_name is set, then the','line_number':6108,'multiline':False]['text':' buffer will be wiped out below.','line_number':6109,'multiline':False]['text':' dir','line_number':6111,'multiline':False]['text':' vis_col','line_number':6121,'multiline':False]['text':' search pattern','line_number':6122,'multiline':False]['text':' nr','line_number':6123,'multiline':False]['text':' type','line_number':6124,'multiline':False]['text':' user_data','line_number':6125,'multiline':False]['text':' valid','line_number':6126,'multiline':False]['text':' Fuzzy string match','line_number':6151,'multiline':False]['text':' Pass the buffer number so that it gets used even for a','line_number':6155,'multiline':False]['text':' dummy buffer, unless duplicate_name is set, then the','line_number':6156,'multiline':False]['text':' buffer will be wiped out below.','line_number':6157,'multiline':False]['text':' dir','line_number':6159,'multiline':False]['text':' vis_col','line_number':6168,'multiline':False]['text':' search pattern','line_number':6169,'multiline':False]['text':' nr','line_number':6170,'multiline':False]['text':' type','line_number':6171,'multiline':False]['text':' user_data','line_number':6172,'multiline':False]['text':' valid','line_number':6173,'multiline':False]['text':'
 * Jump to the first match and update the directory.
 ','line_number':6197,'multiline':True]['text':' If we jumped to another buffer redrawing will already be','line_number':6213,'multiline':False]['text':' taken care of.','line_number':6214,'multiline':False]['text':' Jump to the directory used after loading the buffer.','line_number':6217,'multiline':False]['text':'
 * :vimgrep command arguments
 ','line_number':6229,'multiline':True]['text':' maximum number of matches to find','line_number':6234,'multiline':False]['text':' search pattern','line_number':6235,'multiline':False]['text':' search modifier','line_number':6236,'multiline':False]['text':' list of files to search','line_number':6237,'multiline':False]['text':' number of files','line_number':6238,'multiline':False]['text':' compiled search pattern','line_number':6239,'multiline':False]['text':' quickfix list title','line_number':6240,'multiline':False]['text':'
 * Process :vimgrep command arguments. The command syntax is:
 *
 *	:{count}vimgrep /{pattern}/[g][j] {file} ...
 ','line_number':6243,'multiline':True]['text':' Get the search pattern: either white-separated or enclosed in //','line_number':6265,'multiline':False]['text':' Parse the list of arguments, wildcards have already been expanded.','line_number':6284,'multiline':False]['text':'
 * Return TRUE if "buf" had an existing swap file, the current swap file does
 * not end in ".swp".
 ','line_number':6295,'multiline':True]['text':'
 * Search for a pattern in a list of files and populate the quickfix list with
 * the matches.
 ','line_number':6312,'multiline':True]['text':' Remember the current directory, because a BufRead autocommand that does','line_number':6343,'multiline':False]['text':' ":lcd %:p:h" changes the meaning of short path names.','line_number':6344,'multiline':False]['text':' Display the file name every second or so, show the user we are','line_number':6354,'multiline':False]['text':' working on it.','line_number':6355,'multiline':False]['text':' Remember that a buffer with this name already exists.','line_number':6363,'multiline':False]['text':' Use existing, loaded buffer.','line_number':6371,'multiline':False]['text':' Check whether the quickfix list is still valid. When loading a','line_number':6374,'multiline':False]['text':' buffer above, autocommands might have changed the quickfix list.','line_number':6375,'multiline':False]['text':' Try for a match in all lines of the buffer.','line_number':6388,'multiline':False]['text':' For ":1vimgrep" look for first match only.','line_number':6389,'multiline':False]['text':' Never keep a dummy buffer if there is another buffer','line_number':6400,'multiline':False]['text':' with the same name.','line_number':6401,'multiline':False]['text':' "unload"','line_number':6406,'multiline':False]['text':' "wipe"','line_number':6407,'multiline':False]['text':' "delete"','line_number':6408,'multiline':False]['text':' When no match was found we don't need to remember the','line_number':6410,'multiline':False]['text':' buffer, wipe it out.  If there was a match and it','line_number':6411,'multiline':False]['text':' wasn't the first one or we won't jump there: only','line_number':6412,'multiline':False]['text':' unload the buffer.','line_number':6413,'multiline':False]['text':' Ignore 'hidden' here, because it may lead to having too','line_number':6414,'multiline':False]['text':' many swap files.','line_number':6415,'multiline':False]['text':' Keeping the buffer, remove the dummy flag.','line_number':6426,'multiline':False]['text':' Keeping the buffer, remove the dummy flag.','line_number':6434,'multiline':False]['text':' If the buffer is still loaded we need to use the','line_number':6437,'multiline':False]['text':' directory we jumped to below.','line_number':6438,'multiline':False]['text':' The buffer is still loaded, the Filetype autocommands','line_number':6444,'multiline':False]['text':' need to be done now, in that buffer.  And the modelines','line_number':6445,'multiline':False]['text':' need to be done (again).  But not the window-local','line_number':6446,'multiline':False]['text':' options!','line_number':6447,'multiline':False]['text':'
 * ":vimgrep {pattern} file(s)"
 * ":vimgrepadd {pattern} file(s)"
 * ":lvimgrep {pattern} file(s)"
 * ":lvimgrepadd {pattern} file(s)"
 ','line_number':6471,'multiline':True]['text':' make place for a new list','line_number':6512,'multiline':False]['text':' Remember the current quickfix list identifier, so that we can check for','line_number':6536,'multiline':False]['text':' autocommands changing the current quickfix list.','line_number':6537,'multiline':False]['text':' The QuickFixCmdPost autocmd may free the quickfix list. Check the list','line_number':6543,'multiline':False]['text':' is still valid.','line_number':6544,'multiline':False]['text':' Jump to first match.','line_number':6552,'multiline':False]['text':' If we loaded a dummy buffer into the current window, the autocommands','line_number':6564,'multiline':False]['text':' may have messed up things, need to redraw and recompute folds.','line_number':6565,'multiline':False]['text':'
 * Restore current working directory to "dirname_start" if they differ, taking
 * into account whether it is set locally or globally.
 ','line_number':6581,'multiline':True]['text':' If the directory has changed, change it back by building up an','line_number':6596,'multiline':False]['text':' appropriate ex command and executing it.','line_number':6597,'multiline':False]['text':'
 * Load file "fname" into a dummy buffer and return the buffer pointer,
 * placing the directory resulting from the buffer load into the
 * "resulting_dir" pointer. "resulting_dir" must be allocated by the caller
 * prior to calling this function. Restores directory to "dirname_start" prior
 * to returning, if autocmds or the 'autochdir' option have changed it.
 *
 * If creating the dummy buffer does not fail, must call unload_dummy_buffer()
 * or wipe_dummy_buffer() later!
 *
 * Returns NULL if it fails.
 ','line_number':6608,'multiline':True]['text':' in: old directory','line_number':6623,'multiline':False]['text':' out: new directory','line_number':6624,'multiline':False]['text':' Allocate a buffer without putting it in the buffer list.','line_number':6633,'multiline':False]['text':' Init the options.','line_number':6639,'multiline':False]['text':' need to open the memfile before putting the buffer in a window','line_number':6642,'multiline':False]['text':' Make sure this buffer isn't wiped out by autocommands.','line_number':6645,'multiline':False]['text':' set curwin/curbuf to buf and save a few things','line_number':6648,'multiline':False]['text':' Need to set the filename for autocommands.','line_number':6652,'multiline':False]['text':' Create swap file now to avoid the ATTENTION message.','line_number':6655,'multiline':False]['text':' Remove the "dummy" flag, otherwise autocommands may not','line_number':6658,'multiline':False]['text':' work.','line_number':6659,'multiline':False]['text':' Bloody autocommands changed the buffer!  Can happen when','line_number':6674,'multiline':False]['text':' using netrw and editing a remote file.  Use the current','line_number':6675,'multiline':False]['text':' buffer instead, delete the dummy one after restoring the','line_number':6676,'multiline':False]['text':' window stuff.','line_number':6677,'multiline':False]['text':' restore curwin/curbuf and a few other things','line_number':6683,'multiline':False]['text':' Add back the "dummy" flag, otherwise buflist_findname_stat() won't','line_number':6690,'multiline':False]['text':' skip it.','line_number':6691,'multiline':False]['text':' When autocommands/'autochdir' option changed directory: go back.','line_number':6695,'multiline':False]['text':' Let the caller know what the resulting dir was first, in case it is','line_number':6696,'multiline':False]['text':' important.','line_number':6697,'multiline':False]['text':'
 * Wipe out the dummy buffer that load_dummy_buffer() created. Restores
 * directory to "dirname_start" prior to returning, if autocmds or the
 * 'autochdir' option have changed it.
 ','line_number':6711,'multiline':True]['text':' If any autocommand opened a window on the dummy buffer, close that','line_number':6719,'multiline':False]['text':' window.  If we can't close them all then give up.','line_number':6720,'multiline':False]['text':' safety check','line_number':6738,'multiline':False]['text':' Reset the error/interrupt/exception state here so that aborting()','line_number':6743,'multiline':False]['text':' returns FALSE when wiping out the buffer.  Otherwise it doesn't','line_number':6744,'multiline':False]['text':' work when got_int is set.','line_number':6745,'multiline':False]['text':' Restore the error/interrupt/exception state if not discarded by a','line_number':6752,'multiline':False]['text':' new aborting error, interrupt, or uncaught exception.','line_number':6753,'multiline':False]['text':' When autocommands/'autochdir' option changed directory: go back.','line_number':6756,'multiline':False]['text':'
 * Unload the dummy buffer that load_dummy_buffer() created. Restores
 * directory to "dirname_start" prior to returning, if autocmds or the
 * 'autochdir' option have changed it.
 ','line_number':6761,'multiline':True]['text':' safety check','line_number':6769,'multiline':False]['text':' When autocommands/'autochdir' option changed directory: go back.','line_number':6774,'multiline':False]['text':'
 * Copy the specified quickfix entry items into a new dict and append the dict
 * to 'list'.  Returns OK on success.
 ','line_number':6779,'multiline':True]['text':' Handle entries with a non-existing buffer number.','line_number':6790,'multiline':False]['text':'
 * Add each quickfix error to list "list" as a dictionary.
 * If qf_idx is -1, use the current list. Otherwise, use the specified list.
 * If eidx is not 0, then return only the specified entry. Otherwise return
 * all the entries.
 ','line_number':6821,'multiline':True]['text':' Flags used by getqflist()/getloclist() to determine which fields to return.','line_number':6878,'multiline':False]['text':'
 * Parse text from 'di' and return the quickfix list items.
 * Existing quickfix lists are not modified.
 ','line_number':6896,'multiline':True]['text':' Only a List value is supported','line_number':6909,'multiline':False]['text':' If errorformat is supplied then use it, otherwise use the 'efm'','line_number':6913,'multiline':False]['text':' option setting','line_number':6914,'multiline':False]['text':'
 * Return the quickfix/location list window identifier in the current tabpage.
 ','line_number':6944,'multiline':True]['text':' The quickfix window can be opened even if the quickfix list is not set','line_number':6952,'multiline':False]['text':' using ":copen". This is not true for location lists.','line_number':6953,'multiline':False]['text':'
 * Returns the number of the buffer displayed in the quickfix/location list
 * window. If there is no buffer associated with the list or the buffer is
 * wiped out, then returns 0.
 ','line_number':6962,'multiline':True]['text':'
 * Convert the keys in 'what' to quickfix list property flags.
 ','line_number':6978,'multiline':True]['text':' File window ID is applicable only to location list windows','line_number':6990,'multiline':False]['text':'
 * Return the quickfix list index based on 'nr' or 'id' in 'what'.
 * If 'nr' and 'id' are not present in 'what' then return the current
 * quickfix list index.
 * If 'nr' is zero then return the current quickfix list index.
 * If 'nr' is '$' then return the last quickfix list index.
 * If 'id' is present then return the index of the quickfix list with that id.
 * If 'id' is zero then return the quickfix list index specified by 'nr'.
 * Return -1, if quickfix list is not present or if the stack is empty.
 ','line_number':7033,'multiline':True]['text':' default is the current list','line_number':7049,'multiline':False]['text':' Use the specified quickfix/location list','line_number':7052,'multiline':False]['text':' for zero use the current list','line_number':7055,'multiline':False]['text':' Get the last quickfix list number','line_number':7066,'multiline':False]['text':' Look for a list with the specified id','line_number':7074,'multiline':False]['text':' For zero, use the current list or the list specified by 'nr'','line_number':7077,'multiline':False]['text':'
 * Return default values for quickfix list properties in retdict.
 ','line_number':7088,'multiline':True]['text':'
 * Return the quickfix list title as 'title' in retdict
 ','line_number':7130,'multiline':True]['text':'
 * Returns the identifier of the window used to display files from a location
 * list.  If there is no associated window, then returns 0. Useful only when
 * called from a location list window.
 ','line_number':7139,'multiline':True]['text':'
 * Return the quickfix list items/entries as 'items' in retdict.
 * If eidx is not 0, then return the item at the specified index.
 ','line_number':7159,'multiline':True]['text':'
 * Return the quickfix list context (if any) as 'context' in retdict.
 ','line_number':7179,'multiline':True]['text':'
 * Return the current quickfix list index as 'idx' in retdict.
 * If a specific entry index (eidx) is supplied, then use that.
 ','line_number':7207,'multiline':True]['text':' For empty lists, current index is set to 0','line_number':7218,'multiline':False]['text':'
 * Return the 'quickfixtextfunc' function of a quickfix/location list
 ','line_number':7224,'multiline':True]['text':'
 * Return quickfix/location list details (title) as a
 * dictionary. 'what' contains the details to return. If 'list_idx' is -1,
 * then current list is used. Otherwise the specified list is used.
 ','line_number':7246,'multiline':True]['text':' List is not present or is empty','line_number':7273,'multiline':False]['text':' If an entry index is specified, use that','line_number':7279,'multiline':False]['text':'
 * Add a new quickfix entry to list at 'qf_idx' in the stack 'qi' from the
 * items in the dict 'd'. If it is a valid error entry, then set 'valid_entry'
 * to TRUE.
 ','line_number':7315,'multiline':True]['text':' Mark entries with non-existing buffer number as not valid. Give the','line_number':7357,'multiline':False]['text':' error message only once.','line_number':7358,'multiline':False]['text':' If the 'valid' field is present it overrules the detected value.','line_number':7370,'multiline':False]['text':' dir','line_number':7375,'multiline':False]['text':' vis_col','line_number':7384,'multiline':False]['text':' search pattern','line_number':7385,'multiline':False]['text':'
 * Add list of entries to quickfix/location list. Each list entry is
 * a dictionary with item information.
 ','line_number':7404,'multiline':True]['text':' make place for a new list','line_number':7425,'multiline':False]['text':' Adding to existing list, use last entry.','line_number':7431,'multiline':False]['text':' Skip non-dict items','line_number':7442,'multiline':False]['text':' Check if any valid error entries are added to the list.','line_number':7454,'multiline':False]['text':' no valid entry','line_number':7458,'multiline':False]['text':' If not appending to the list, set the current error to the first entry','line_number':7461,'multiline':False]['text':' Update the current error index if not appending to the list or if the','line_number':7465,'multiline':False]['text':' list was empty before and it is not empty now.','line_number':7466,'multiline':False]['text':' Don't update the cursor in quickfix window when appending entries','line_number':7470,'multiline':False]['text':'
 * Get the quickfix list index from 'nr' or 'id'
 ','line_number':7476,'multiline':True]['text':' default is the current list','line_number':7487,'multiline':False]['text':' Use the specified quickfix/location list','line_number':7491,'multiline':False]['text':' for zero use the current list','line_number':7494,'multiline':False]['text':' When creating a new list, accept qf_idx pointing to the next','line_number':7500,'multiline':False]['text':' non-available list and add the new list at the end of the','line_number':7501,'multiline':False]['text':' stack.','line_number':7502,'multiline':False]['text':' use the specified list','line_number':7509,'multiline':False]['text':' Use the quickfix/location list with the specified id','line_number':7528,'multiline':False]['text':'
 * Set the quickfix list title.
 ','line_number':7538,'multiline':True]['text':'
 * Set quickfix list items/entries.
 ','line_number':7557,'multiline':True]['text':'
 * Set quickfix list items/entries from a list of lines.
 ','line_number':7577,'multiline':True]['text':' Use the user supplied errorformat settings (if present)','line_number':7592,'multiline':False]['text':' Only a List value is supported','line_number':7601,'multiline':False]['text':'
 * Set quickfix list context.
 ','line_number':7614,'multiline':True]['text':'
 * Set the current index in the specified quickfix list
 ','line_number':7631,'multiline':True]['text':' If the specified index is '$', then use the last entry','line_number':7642,'multiline':False]['text':' Otherwise use the specified index','line_number':7649,'multiline':False]['text':' sanity check','line_number':7655,'multiline':False]['text':' If the current list is modified and it is displayed in the quickfix','line_number':7667,'multiline':False]['text':' window, then Update it.','line_number':7668,'multiline':False]['text':'
 * Set the current index in the specified quickfix list
 ','line_number':7675,'multiline':True]['text':'
 * Set quickfix/location list properties (title, items, context).
 * Also used to add items from parsing a list of lines.
 * Used by the setqflist() and setloclist() Vim script functions.
 ','line_number':7695,'multiline':True]['text':' List not found','line_number':7713,'multiline':False]['text':'
 * Free the entire quickfix/location list stack.
 * If the quickfix/location list window is open, then clear it.
 ','line_number':7745,'multiline':True]['text':' If the quickfix/location list window is open, then clear it','line_number':7757,'multiline':False]['text':' If in the location list window, then use the non-location list','line_number':7765,'multiline':False]['text':' window with this location list (if present)','line_number':7766,'multiline':False]['text':' quickfix list','line_number':7775,'multiline':False]['text':' If the location list window is open, then create a new empty','line_number':7781,'multiline':False]['text':' location list','line_number':7782,'multiline':False]['text':' first free the list reference in the location list window','line_number':7789,'multiline':False]['text':'
 * Populate the quickfix list with the items supplied in the list
 * of dictionaries. "title" will be copied to w:quickfix_title.
 * "action" is 'a' for add, 'r' for replace.  Otherwise create a new list.
 * When "what" is not NULL then only set some properties.
 ','line_number':7799,'multiline':True]['text':' Free the entire quickfix or location list stack','line_number':7825,'multiline':False]['text':' A dict argument cannot be specified with a non-empty list argument','line_number':7830,'multiline':False]['text':'
 * Mark the quickfix context and callback function as in use for all the lists
 * in a quickfix stack.
 ','line_number':7875,'multiline':True]['text':'
 * Mark the context of the quickfix list and the location lists (if present) as
 * "in use". So that garbage collection doesn't free the context.
 ','line_number':7901,'multiline':True]['text':' In a location list window and none of the other windows is','line_number':7938,'multiline':False]['text':' referring to this location list. Mark the location list','line_number':7939,'multiline':False]['text':' context as still in use.','line_number':7940,'multiline':False]['text':'
 * Return the autocmd name for the :cbuffer Ex commands
 ','line_number':7951,'multiline':True]['text':'
 * Process and validate the arguments passed to the :cbuffer, :caddbuffer,
 * :cgetbuffer, :lbuffer, :laddbuffer, :lgetbuffer Ex commands.
 ','line_number':7969,'multiline':True]['text':'
 * ":[range]cbuffer [bufnr]" command.
 * ":[range]caddbuffer [bufnr]" command.
 * ":[range]cgetbuffer [bufnr]" command.
 * ":[range]lbuffer [bufnr]" command.
 * ":[range]laddbuffer [bufnr]" command.
 * ":[range]lgetbuffer [bufnr]" command.
 ','line_number':8019,'multiline':True]['text':' Must come after autocommands.','line_number':8050,'multiline':False]['text':' Remember the current quickfix list identifier, so that we can','line_number':8082,'multiline':False]['text':' check for autocommands changing the current quickfix list.','line_number':8083,'multiline':False]['text':' Autocommands changed buffer, don't jump now, "qi" may','line_number':8092,'multiline':False]['text':' be invalid.','line_number':8093,'multiline':False]['text':' Jump to the first error for a new list and if autocmds didn't','line_number':8096,'multiline':False]['text':' free the list.','line_number':8097,'multiline':False]['text':' display the first error','line_number':8101,'multiline':False]['text':'
 * Return the autocmd name for the :cexpr Ex commands.
 ','line_number':8108,'multiline':True]['text':' Remember the current quickfix list identifier, so that we can','line_number':8171,'multiline':False]['text':' check for autocommands changing the current quickfix list.','line_number':8172,'multiline':False]['text':' Jump to the first error for a new list and if autocmds didn't','line_number':8178,'multiline':False]['text':' free the list.','line_number':8179,'multiline':False]['text':' display the first error','line_number':8182,'multiline':False]['text':'
 * ":cexpr {expr}", ":cgetexpr {expr}", ":caddexpr {expr}" command.
 * ":lexpr {expr}", ":lgetexpr {expr}", ":laddexpr {expr}" command.
 * Also: ":caddexpr", ":cgetexpr", "laddexpr" and "laddexpr".
 ','line_number':8192,'multiline':True]['text':' Evaluate the expression.  When the result is a string or a list we can','line_number':8205,'multiline':False]['text':' use it to fill the errorlist.','line_number':8206,'multiline':False]['text':'
 * Get the location list for ":lhelpgrep"
 ','line_number':8216,'multiline':True]['text':' If the current window is a help window, then use it','line_number':8225,'multiline':False]['text':' Find an existing help window','line_number':8229,'multiline':False]['text':' Help window not found','line_number':8232,'multiline':False]['text':' Allocate a new location list for help text matches','line_number':8239,'multiline':False]['text':'
 * Search for a pattern in a help file.
 ','line_number':8248,'multiline':True]['text':' Convert a line if 'encoding' is not utf-8 and','line_number':8270,'multiline':False]['text':' the line contains a non-ASCII character.','line_number':8271,'multiline':False]['text':' remove trailing CR, LF, spaces, etc.','line_number':8283,'multiline':False]['text':' dir','line_number':8288,'multiline':False]['text':' col','line_number':8296,'multiline':False]['text':' end_col','line_number':8298,'multiline':False]['text':' vis_col','line_number':8299,'multiline':False]['text':' search pattern','line_number':8300,'multiline':False]['text':' nr','line_number':8301,'multiline':False]['text':' type','line_number':8302,'multiline':False]['text':' user_data','line_number':8303,'multiline':False]['text':' valid','line_number':8304,'multiline':False]['text':'
 * Search for a pattern in all the help files in the doc directory under
 * the given directory.
 ','line_number':8321,'multiline':True]['text':' Find all "*.txt" and "*.??x" files in the "doc" directory.','line_number':8340,'multiline':False]['text':' Skip files for a different language.','line_number':8350,'multiline':False]['text':'
 * Search for a pattern in all the help files in the 'runtimepath'
 * and add the matches to a quickfix list.
 * 'lang' is the language specifier.  If supplied, then only matches in the
 * specified language are found.
 ','line_number':8366,'multiline':True]['text':' Help files are in utf-8 or latin1, convert lines when 'encoding'','line_number':8379,'multiline':False]['text':' differs.','line_number':8380,'multiline':False]['text':' Go through all the directories in 'runtimepath'','line_number':8385,'multiline':False]['text':'
 * ":helpgrep {pattern}"
 ','line_number':8402,'multiline':True]['text':' Make 'cpoptions' empty, the 'l' flag should not be used here.','line_number':8439,'multiline':False]['text':' Check for a specified language','line_number':8447,'multiline':False]['text':' create a new quickfix list','line_number':8456,'multiline':False]['text':' Darn, some plugin changed the value.  If it's still empty it was','line_number':8475,'multiline':False]['text':' changed and restored, need to restore in the complicated way.','line_number':8476,'multiline':False]['text':' This may open a window and source scripts, do this after 'cpo' was','line_number':8484,'multiline':False]['text':' restored.','line_number':8485,'multiline':False]['text':' When adding a location list to an existing location list stack,','line_number':8492,'multiline':False]['text':' if the autocmd made the stack invalid, then just return.','line_number':8493,'multiline':False]['text':' Jump to first match.','line_number':8501,'multiline':False]['text':' If the help window is not opened or if it already points to the','line_number':8511,'multiline':False]['text':' correct location list, then free the new location list.','line_number':8512,'multiline':False]['text':' current window didn't have a location list associated with it','line_number':8519,'multiline':False]['text':' before. Associate the new location list now.','line_number':8520,'multiline':False]['text':' Free all location lists','line_number':8533,'multiline':False]['text':' FEAT_QUICKFIX','line_number':8541,'multiline':False]['text':'
 * "getloclist()" function
 ','line_number':8573,'multiline':True]['text':'
 * "getqflist()" function
 ','line_number':8592,'multiline':True]['text':'
 * Used by "setqflist()" and "setloclist()" functions
 ','line_number':8606,'multiline':True]['text':' type error; errmsg already given','line_number':8640,'multiline':False]['text':'
 * "setloclist()" function
 ','line_number':8675,'multiline':True]['text':'
 * "setqflist()" function
 ','line_number':8698,'multiline':True]