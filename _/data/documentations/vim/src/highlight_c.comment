['text':' vi:set ts=8 sts=4 sw=4 noet:
 *
 * VIM - Vi IMproved	by Bram Moolenaar
 *
 * Do ":help uganda"  in Vim to read copying and usage conditions.
 * Do ":help credits" in Vim to see a list of people who contributed.
 * See README.txt for an overview of the Vim source code.
 ','line_number':1,'multiline':True]['text':'
 * Highlighting stuff.
 ','line_number':10,'multiline':True]['text':' term has been set','line_number':16,'multiline':False]['text':' cterm has been set','line_number':17,'multiline':False]['text':' gui has been set','line_number':18,'multiline':False]['text':' link has been set','line_number':19,'multiline':False]['text':'
 * The "term", "cterm" and "gui" arguments can be any combination of the
 * following names, separated by commas (but no spaces!).
 ','line_number':23,'multiline':True]['text':' length of all attribute names, plus commas, together (and a bit more)','line_number':35,'multiline':False]['text':'
 * Structure that stores information about a highlight group.
 * The ID of a highlight group is also called group ID.  It is the index in
 * the highlight_ga array PLUS ONE.
 ','line_number':40,'multiline':True]['text':' highlight group name','line_number':47,'multiline':False]['text':' uppercase of sg_name','line_number':48,'multiline':False]['text':' "hi clear" was used','line_number':49,'multiline':False]['text':' for normal terminals','line_number':50,'multiline':False]['text':' "term=" highlighting attributes','line_number':51,'multiline':False]['text':' terminal string for start highl','line_number':52,'multiline':False]['text':' terminal string for stop highl','line_number':53,'multiline':False]['text':' Screen attr for term mode','line_number':54,'multiline':False]['text':' for color terminals','line_number':55,'multiline':False]['text':' "cterm=" highlighting attr','line_number':56,'multiline':False]['text':' bold attr was set for light color','line_number':57,'multiline':False]['text':' terminal fg color number + 1','line_number':58,'multiline':False]['text':' terminal bg color number + 1','line_number':59,'multiline':False]['text':' terminal ul color number + 1','line_number':60,'multiline':False]['text':' Screen attr for color term mode','line_number':61,'multiline':False]['text':' for when using the GUI','line_number':62,'multiline':False]['text':' GUI foreground color handle','line_number':64,'multiline':False]['text':' GUI background color handle','line_number':65,'multiline':False]['text':' GUI special color handle','line_number':66,'multiline':False]['text':' GUI font handle','line_number':69,'multiline':False]['text':' GUI fontset handle','line_number':71,'multiline':False]['text':' GUI font or fontset name','line_number':73,'multiline':False]['text':' Screen attr for GUI mode','line_number':74,'multiline':False]['text':' Store the sp color name for the GUI or synIDattr()','line_number':77,'multiline':False]['text':' "gui=" highlighting attributes','line_number':78,'multiline':False]['text':' GUI foreground color name','line_number':79,'multiline':False]['text':' GUI background color name','line_number':80,'multiline':False]['text':' GUI special color name','line_number':81,'multiline':False]['text':' link to this highlight group ID','line_number':83,'multiline':False]['text':' default link; restored in highlight_clear()','line_number':84,'multiline':False]['text':' combination of SG_* flags','line_number':85,'multiline':False]['text':' script where the default link was set','line_number':87,'multiline':False]['text':' script in which the group was last set','line_number':88,'multiline':False]['text':' highlight groups for 'highlight' option','line_number':92,'multiline':False]['text':'
 * An attribute number is the index in attr_table plus ATTR_OFF.
 ','line_number':96,'multiline':True]['text':'
 * The default highlight groups.  These are compiled-in for fast startup and
 * they still work when the runtime files can't be found.
 * When making changes here, also change runtime/colors/default.vim!
 * The #ifdefs are needed to reduce the amount of static data.  Helps to make
 * the 16 bit DOS (museum) version compile.
 ','line_number':117,'multiline':True]['text':' should be different, but what?','line_number':161,'multiline':False]['text':' Default colors only used with a light background.','line_number':175,'multiline':False]['text':' Default colors only used with a dark background.','line_number':264,'multiline':False]['text':'
 * Returns the number of highlight groups.
 ','line_number':354,'multiline':True]['text':'
 * Returns the name of a highlight group.
 ','line_number':363,'multiline':True]['text':'
 * Returns the ID of the link to a highlight group.
 ','line_number':372,'multiline':True]['text':' include groups where 'bg' doesn't matter','line_number':384,'multiline':False]['text':' clear group first','line_number':385,'multiline':False]['text':' Try finding the color scheme file.  Used when a color file was loaded','line_number':393,'multiline':False]['text':' and 'background' or 't_Co' is changed.','line_number':394,'multiline':False]['text':' The value of g:colors_name could be freed when sourcing the script,','line_number':398,'multiline':False]['text':' making "p" invalid, so copy it.','line_number':399,'multiline':False]['text':' Didn't use a color file, use the compiled-in colors.','line_number':414,'multiline':False]['text':' Don't do anything before the call with both == TRUE from main().','line_number':423,'multiline':False]['text':' Not everything has been setup then, and that call will overrule','line_number':424,'multiline':False]['text':' everything anyway.','line_number':425,'multiline':False]['text':' Reverse looks ugly, but grey may not work for 8 colors.  Thus let it','line_number':435,'multiline':False]['text':' depend on the number of colors available.','line_number':436,'multiline':False]['text':' With 8 colors brown is equal to yellow, need to use black for Search fg','line_number':437,'multiline':False]['text':' to avoid Statement highlighted text disappears.','line_number':438,'multiline':False]['text':' Clear the attributes, needed when changing the t_Co value.','line_number':439,'multiline':False]['text':' If syntax highlighting is enabled load the highlighting for it.','line_number':453,'multiline':False]['text':'
 * Load a default color list. Intended to support legacy color names but allows
 * the user to override the color values. Only loaded once.
 ','line_number':471,'multiline':True]['text':' Lacking a default color list isn't the end of the world but it is likely','line_number':478,'multiline':False]['text':' an inconvenience so users should know when it is missing.','line_number':479,'multiline':False]['text':'
 * Load color file "name".
 * Return OK for success, FAIL for failure.
 ','line_number':485,'multiline':True]['text':' When being called recursively, this is probably because setting','line_number':496,'multiline':False]['text':' 'background' caused the highlighting to be reloaded.  This means it is','line_number':497,'multiline':False]['text':' working, thus we should return OK.','line_number':498,'multiline':False]['text':' indices:','line_number':531,'multiline':False]['text':' 0, 1, 2, 3,','line_number':532,'multiline':False]['text':' 4, 5, 6, 7,','line_number':533,'multiline':False]['text':' 8, 9, 10, 11,','line_number':534,'multiline':False]['text':' 12, 13,','line_number':535,'multiline':False]['text':' 14, 15, 16, 17,','line_number':536,'multiline':False]['text':' 18, 19, 20, 21, 22,','line_number':537,'multiline':False]['text':' 23, 24, 25, 26, 27','line_number':538,'multiline':False]['text':' for xterm with 88 colors...','line_number':546,'multiline':False]['text':' for xterm with 256 colors...','line_number':554,'multiline':False]['text':' for terminals with less than 16 colors...','line_number':562,'multiline':False]['text':'
 * Lookup the "cterm" value to be used for color with index "idx" in
 * color_names[].
 * "boldp" will be set to TRUE or FALSE for a foreground color when using 8
 * colors, otherwise it will be unchanged.
 ','line_number':571,'multiline':True]['text':' Use the _16 table to check if it's a valid color name.','line_number':583,'multiline':False]['text':' t_Co is 8: use the 8 colors table','line_number':589,'multiline':False]['text':' On qnx, the 8 & 16 color arrays are the same','line_number':591,'multiline':False]['text':' set/reset bold attribute to get light foreground','line_number':599,'multiline':False]['text':' colors (on some terminals, e.g. "linux")','line_number':600,'multiline':False]['text':' truncate to 8 colors','line_number':606,'multiline':False]['text':' Guess: if the termcap entry ends in 'm', it is','line_number':611,'multiline':False]['text':' probably an xterm-like terminal.  Use the changed','line_number':612,'multiline':False]['text':' order for colors.','line_number':613,'multiline':False]['text':' Terminal.app has a bug: 15 is light grey. Use white','line_number':630,'multiline':False]['text':' from the color cube instead.','line_number':631,'multiline':False]['text':'
 * Link highlight group 'from_hg' to 'to_hg'.
 * 'dodefault' is set to TRUE for ":highlight default link".
 * 'forceit' is set to TRUE for ":highlight! link"
 * 'init' is set to TRUE when initializing all the highlight groups.
 ','line_number':638,'multiline':True]['text':' Don't allow a link when there already is some highlighting','line_number':679,'multiline':False]['text':' for the group, unless '!' is used','line_number':680,'multiline':False]['text':' Only call highlight_changed() once after multiple changes.','line_number':703,'multiline':False]['text':'
 * Reset all highlighting to the defaults. Removes all highlighting for the
 * groups added by the user.
 ','line_number':710,'multiline':True]['text':' First, we do not destroy the old values, but allocate the new','line_number':720,'multiline':False]['text':' ones and update the display. THEN we destroy the old values.','line_number':721,'multiline':False]['text':' If we destroy the old values first, then the old values','line_number':722,'multiline':False]['text':' (such as GuiFont's or GuiFontset's) will still be displayed but','line_number':723,'multiline':False]['text':' invalid because they were free'd.','line_number':724,'multiline':False]['text':' This only needs to be done when there is no Menu highlight','line_number':740,'multiline':False]['text':' group defined by default, which IS currently the case.','line_number':741,'multiline':False]['text':' Ok, we're done allocating the new default graphics items.','line_number':756,'multiline':False]['text':' The screen should already be refreshed at this point.','line_number':757,'multiline':False]['text':' It is now Ok to clear out the old data.','line_number':758,'multiline':False]['text':' Clear all default highlight groups and load the defaults.','line_number':765,'multiline':False]['text':'
 * Set the 'term' or 'cterm' or 'gui' attributes for the highlight group at
 * index 'idx'.
 * 'key' is one of 'TERM' or 'CTERM' or 'GUI'
 * 'arg' is the list of attribute names separated by comma.
 * 'init' is set to TRUE when initializing all the highlight groups.
 * Returns TRUE if the attributes are set.
 ','line_number':778,'multiline':True]['text':' another one follows','line_number':813,'multiline':False]['text':'
 * Set the font for the highlight group at 'idx'.
 * 'arg' is the font name.
 * Returns TRUE if the font is changed.
 ','line_number':851,'multiline':True]['text':' in non-GUI fonts are simply ignored','line_number':866,'multiline':False]['text':' Font name didn't change, ignore.','line_number':870,'multiline':False]['text':' GUI not started yet, always accept the name.','line_number':874,'multiline':False]['text':' First, save the current font/fontset.','line_number':885,'multiline':False]['text':' Then try to allocate the font/fontset.','line_number':886,'multiline':False]['text':' If the allocation fails, HL_TABLE()[idx].sg_font OR','line_number':887,'multiline':False]['text':' sg_fontset will be set to NOFONT or NOFONTSET respectively.','line_number':888,'multiline':False]['text':' New fontset was accepted. Free the old one, if there','line_number':900,'multiline':False]['text':' was one.','line_number':901,'multiline':False]['text':' New font was accepted. Free the old one, if there was','line_number':912,'multiline':False]['text':' one.','line_number':913,'multiline':False]['text':'
 * Set the cterm foreground color for the Normal highlight group to "color" and
 * the bold attribute to "bold".
 ','line_number':927,'multiline':True]['text':' Don't do this if the GUI is used.','line_number':937,'multiline':False]['text':'
 * Set the cterm foreground color for the highlight group at 'idx' to 'color'.
 ','line_number':947,'multiline':True]['text':'
 * Set the cterm background color for the Normal highlight group to "color".
 ','line_number':959,'multiline':True]['text':' Don't mess with 'background' if the GUI is used.','line_number':967,'multiline':False]['text':' Limit the heuristic to the standard 16 colors','line_number':980,'multiline':False]['text':' Set the 'background' option if the value is','line_number':983,'multiline':False]['text':' wrong.','line_number':984,'multiline':False]['text':'
 * Set the cterm background color for the highlight group at 'idx' to 'color'.
 ','line_number':997,'multiline':True]['text':'
 * Set the cterm underline color for the Normal highlight group to "color".
 ','line_number':1008,'multiline':True]['text':' Don't do this if the GUI is used.','line_number':1016,'multiline':False]['text':'
 * Set the cterm underline color for the highlight group at 'idx' to 'color'.
 ','line_number':1026,'multiline':True]['text':'
 * Set the cterm fg/bg/ul color for the highlight group at 'idx'.
 * 'key' is one of 'CTERMFG' or 'CTERMBG' or 'CTERMUL'.
 * 'keystart' is the color name/value.
 * 'arg' is the color name or the numeric value as a string.
 * 'is_normal_group' is set if the highlight group is 'NORMAL'
 * 'init' is set to TRUE when initializing highlighting.
 * Called for the ":highlight" command and the "hlset()" function.
 *
 * Returns TRUE if the color is set.
 ','line_number':1037,'multiline':True]['text':' When setting the foreground color, and previously the "bold"','line_number':1067,'multiline':False]['text':' flag was set for a light color, reset it now','line_number':1068,'multiline':False]['text':' reduce calls to STRICMP a bit, it can be slow','line_number':1111,'multiline':False]['text':' set/reset bold attribute to get light foreground','line_number':1125,'multiline':False]['text':' colors (on some terminals, e.g. "linux")','line_number':1126,'multiline':False]['text':' Add one to the argument, to avoid zero.  Zero is used for','line_number':1136,'multiline':False]['text':' "NONE", then "color" is -1.','line_number':1137,'multiline':False]['text':' ctermul','line_number':1142,'multiline':False]['text':'
 * Set the GUI foreground color for the highlight group at 'idx'.
 * Returns TRUE if the color is set.
 ','line_number':1149,'multiline':True]['text':' In GUI guifg colors are only used when recognized','line_number':1177,'multiline':False]['text':'
 * Set the GUI background color for the highlight group at 'idx'.
 * Returns TRUE if the color is set.
 ','line_number':1218,'multiline':True]['text':' In GUI guibg colors are only used when recognized','line_number':1246,'multiline':False]['text':'
 * Set the GUI undercurl/strikethrough color for the highlight group at 'idx'.
 * Returns TRUE if the color is set.
 ','line_number':1287,'multiline':True]['text':' In GUI guisp colors are only used when recognized','line_number':1308,'multiline':False]['text':'
 * Set the start/stop terminal codes for a highlight group.
 * Returns TRUE if the terminal code is set.
 ','line_number':1331,'multiline':True]['text':' The "start" and "stop"  arguments can be a literal escape','line_number':1347,'multiline':False]['text':' sequence, or a comma separated list of terminal codes.','line_number':1348,'multiline':False]['text':' Isolate one termcap name','line_number':1355,'multiline':False]['text':' out of memory','line_number':1360,'multiline':False]['text':' lookup the escape sequence for the item','line_number':1362,'multiline':False]['text':' ignore non-existing things','line_number':1365,'multiline':False]['text':' Append it to the already found stuff','line_number':1368,'multiline':False]['text':' Advance to the next item','line_number':1376,'multiline':False]['text':' another one follows','line_number':1378,'multiline':False]['text':' Copy characters from arg[] to buf[], translating <> codes.','line_number':1384,'multiline':False]['text':' recognized special char','line_number':1388,'multiline':False]['text':' copy as normal char','line_number':1390,'multiline':False]['text':' resetting the value','line_number':1396,'multiline':False]['text':'
 * Handle the ":highlight .." command.
 * When using ":hi clear" this is called recursively for each group with
 * "forceit" and "init" both TRUE.
 ','line_number':1413,'multiline':True]['text':' TRUE when called for initializing','line_number':1422,'multiline':False]['text':' "Normal" group','line_number':1438,'multiline':False]['text':' "Menu" group','line_number':1440,'multiline':False]['text':' "Scrollbar" group','line_number':1441,'multiline':False]['text':' "Tooltip" group','line_number':1442,'multiline':False]['text':' need to update colors?','line_number':1449,'multiline':False]['text':' If no argument, list current highlighting.','line_number':1455,'multiline':False]['text':' TODO: only call when the group has attributes set','line_number':1459,'multiline':False]['text':' Isolate the name.','line_number':1464,'multiline':False]['text':' Check for "default" argument.','line_number':1468,'multiline':False]['text':' Check for "clear" or "link" argument.','line_number':1477,'multiline':False]['text':' ":highlight {group-name}": list highlighting for one group.','line_number':1483,'multiline':False]['text':' Handle ":highlight link {from} {to}" command.','line_number':1494,'multiline':False]['text':' ":highlight clear [group]" command.','line_number':1529,'multiline':False]['text':' ":highlight clear" without group name','line_number':1532,'multiline':False]['text':' Find the group name in the table.  If it does not exist yet, add it.','line_number':1541,'multiline':False]['text':' failed (out of memory)','line_number':1543,'multiline':False]['text':' index is ID minus one','line_number':1545,'multiline':False]['text':' Return if "default" was used and the group already has settings.','line_number':1547,'multiline':False]['text':' Make a copy so we can check if any attribute actually changed.','line_number':1551,'multiline':False]['text':' Clear the highlighting for ":hi clear {group}" and ":hi clear".','line_number':1565,'multiline':False]['text':' Isolate the key ("term", "ctermfg", "ctermbg", "font", "guifg"','line_number':1584,'multiline':False]['text':' or "guibg").','line_number':1585,'multiline':False]['text':' Check for the equal sign.','line_number':1608,'multiline':False]['text':' Isolate the argument.','line_number':1617,'multiline':False]['text':' guifg='color name'','line_number':1619,'multiline':False]['text':' Store the argument.','line_number':1651,'multiline':False]['text':' in non-GUI fonts are simply ignored','line_number':1664,'multiline':False]['text':' When highlighting has been given for a group, don't link it.','line_number':1723,'multiline':False]['text':' Continue with next argument.','line_number':1727,'multiline':False]['text':' If there is an error, and it's a new entry, remove it from the table.','line_number':1731,'multiline':False]['text':' Need to update all groups, because they might be using "bg"','line_number':1742,'multiline':False]['text':' and/or "fg", which have been changed now.','line_number':1743,'multiline':False]['text':' Only call highlight_changed() once, after a sequence of highlight','line_number':1791,'multiline':False]['text':' commands, and only if an attribute actually changed.','line_number':1792,'multiline':False]['text':' Do not trigger a redraw when highlighting is changed while','line_number':1800,'multiline':False]['text':' redrawing.  This may happen when evaluating 'statusline' changes the','line_number':1801,'multiline':False]['text':' StatusLine group.','line_number':1802,'multiline':False]['text':'
 * Reset the cterm colors to what they were before Vim was started, if
 * possible.  Otherwise reset them to zero.
 ','line_number':1825,'multiline':True]['text':' Since t_me has been set, this probably means that the user','line_number':1833,'multiline':False]['text':' wants to use this as default colors.  Need to reset default','line_number':1834,'multiline':False]['text':' background/foreground colors.','line_number':1835,'multiline':False]['text':'
 * Return TRUE if highlight group "idx" has any settings.
 * When "check_link" is TRUE also check for an existing link.
 ','line_number':1856,'multiline':True]['text':'
 * Clear highlighting for one group.
 ','line_number':1878,'multiline':True]['text':' Restore default link and context if they exist. Otherwise clears.','line_number':1916,'multiline':False]['text':' Since we set the default link, set the location to where the default','line_number':1919,'multiline':False]['text':' link was set.','line_number':1920,'multiline':False]['text':'
 * Set the normal foreground and background colors according to the "Normal"
 * highlighting group.  For X11 also set "Menu", "Scrollbar", and
 * "Tooltip" colors.
 ','line_number':1926,'multiline':True]['text':' If the normal fg or bg color changed a complete redraw is','line_number':1989,'multiline':False]['text':' required.','line_number':1990,'multiline':False]['text':' if the GUI color is INVALCOLOR then we use the default cterm','line_number':1994,'multiline':False]['text':' color','line_number':1995,'multiline':False]['text':'
 * Set the colors for "Normal", "Menu", "Tooltip" or "Scrollbar".
 ','line_number':2007,'multiline':True]['text':'
 * Get the font of the "Normal" group.
 * Returns "" when it's not found or not set.
 ','line_number':2038,'multiline':True]['text':'
 * Set font for "Normal" group.  Called by gui_mch_init_font() when a font has
 * actually chosen to be used.
 ','line_number':2058,'multiline':True]['text':'
 * Set background color for "Normal" group.  Called by gui_set_bg_color()
 * when the color is known.
 ','line_number':2075,'multiline':True]['text':' must have been allocated','line_number':2081,'multiline':False]['text':'
 * Set foreground color for "Normal" group.  Called by gui_set_fg_color()
 * when the color is known.
 ','line_number':2096,'multiline':True]['text':' must have been allocated','line_number':2102,'multiline':False]['text':'
 * Return the handle for a font name.
 * Returns NOFONT when failed.
 ','line_number':2117,'multiline':True]['text':'
 * Return the handle for a fontset name.
 * Returns NOFONTSET when failed.
 ','line_number':2131,'multiline':True]['text':'
 * Get the font or fontset for one highlight group.
 ','line_number':2145,'multiline':True]['text':' set normal font','line_number':2152,'multiline':False]['text':' set menu font','line_number':2153,'multiline':False]['text':' set tooltip font','line_number':2154,'multiline':False]['text':' free current font/fontset','line_number':2155,'multiline':False]['text':' If 'guifontset' is not empty, first try using the name as a','line_number':2158,'multiline':False]['text':' fontset.  If that doesn't work, use it as a font name.','line_number':2159,'multiline':False]['text':' In Motif, the Tooltip highlight group is always a fontset','line_number':2165,'multiline':False]['text':' If it worked and it's the Normal group, use it as the normal','line_number':2183,'multiline':False]['text':' fontset.  Same for the Menu group.','line_number':2184,'multiline':False]['text':' YIKES!  This is a bug waiting to crash the program','line_number':2193,'multiline':False]['text':' The Athena widget set could not handle switching between','line_number':2201,'multiline':False]['text':' displaying a single font and a fontset.','line_number':2202,'multiline':False]['text':' If the XtNinternational resource is set to True at widget','line_number':2203,'multiline':False]['text':' creation, then a fontset is always used, otherwise an','line_number':2204,'multiline':False]['text':' XFontStruct is used.','line_number':2205,'multiline':False]['text':' If it worked and it's the Normal group, use it as the','line_number':2218,'multiline':False]['text':' normal font.  Same for the Menu group.','line_number':2219,'multiline':False]['text':' FEAT_GUI','line_number':2237,'multiline':False]['text':'
 * Return the handle for a color name.
 * Returns INVALCOLOR when failed.
 ','line_number':2240,'multiline':True]['text':' Guess that the foreground is black or white.','line_number':2261,'multiline':False]['text':' Guess that the background is white or black.','line_number':2276,'multiline':False]['text':' On MS-Windows an RGB macro is available and it produces 0x00bbggrr color','line_number':2284,'multiline':False]['text':' values as used by the MS-Windows GDI api.  It should be used only for','line_number':2285,'multiline':False]['text':' MS-Windows GDI builds.','line_number':2286,'multiline':False]['text':' Name is in "#rrggbb" format','line_number':2326,'multiline':False]['text':' Returns the color currently mapped to the given name or INVALCOLOR if no','line_number':2336,'multiline':False]['text':' such name exists in the color table. The convention is to use lowercase for','line_number':2337,'multiline':False]['text':' all keys in the v:colornames dictionary. The value can be either a string in','line_number':2338,'multiline':False]['text':' the form #rrggbb or a number, either of which is converted to a guicolor_T.','line_number':2339,'multiline':False]['text':' Only non X11 colors (not present in rgb.txt) and colors in','line_number':2394,'multiline':False]['text':' color_names[], useful when $VIMRUNTIME is not found,.','line_number':2395,'multiline':False]['text':' No X11','line_number':2408,'multiline':False]['text':' No X11','line_number':2420,'multiline':False]['text':' No X11','line_number':2421,'multiline':False]['text':' Check if the name is one of the colors we know','line_number':2434,'multiline':False]['text':'
     * Not a traditional color. Load additional color aliases and then consult the alias table.
     ','line_number':2440,'multiline':True]['text':'
 * Table with the specifications for an attribute number.
 * Note that this table is used by ALL buffers.  This is required because the
 * GUI can redraw at any time for any buffer.
 ','line_number':2468,'multiline':True]['text':'
 * Return the attr number for a set of colors and font.
 * Add a new entry to the term_attr_table, cterm_attr_table or gui_attr_table
 * if the combination is new.
 * Return 0 for error (no more room).
 ','line_number':2487,'multiline':True]['text':' Init the table, in case it wasn't done yet.','line_number':2500,'multiline':False]['text':' Try to find an entry with the same specifications.','line_number':2504,'multiline':False]['text':' Running out of attribute entries!  remove all attributes, and','line_number':2557,'multiline':False]['text':' compute new ones for all groups.','line_number':2558,'multiline':False]['text':' When called recursively, we are really out of numbers.','line_number':2559,'multiline':False]['text':' This is a new combination of colors and font, add an entry.','line_number':2577,'multiline':False]['text':'
 * Get an attribute index for a cterm entry.
 * Uses an existing entry when possible or adds one when needed.
 ','line_number':2623,'multiline':True]['text':'
 * Get an attribute index for a 'termguicolors' entry.
 * Uses an existing entry when possible or adds one when needed.
 ','line_number':2647,'multiline':True]['text':' If both GUI colors are not set fall back to the cterm colors.  Helps','line_number':2660,'multiline':False]['text':' if the GUI only has an attribute, such as undercurl.','line_number':2661,'multiline':False]['text':'
 * Get an attribute index for a cterm entry.
 * Uses an existing entry when possible or adds one when needed.
 ','line_number':2676,'multiline':True]['text':'
 * Clear all highlight tables.
 ','line_number':2693,'multiline':True]['text':'
 * Combine special attributes (e.g., for spelling) with other attributes
 * (e.g., for syntax highlighting).
 * "prim_attr" overrules "char_attr".
 * This creates a new group when required.
 * Since we expect there to be few spelling mistakes we don't cache the
 * result.
 * Return the resulting attributes.
 ','line_number':2715,'multiline':True]['text':' If both fg and bg are not set fall back to cterm colors.','line_number':2813,'multiline':False]['text':' Helps for SpellBad which uses undercurl in the GUI.','line_number':2814,'multiline':False]['text':' did ":syntax clear"','line_number':2872,'multiline':False]['text':'
 * Get the highlight attributes (HL_BOLD etc.) from an attribute nr.
 * Only to be used when "attr" > HL_ALL.
 ','line_number':2878,'multiline':True]['text':' highlighting not set','line_number':2897,'multiline':False]['text':' did ":syntax clear"','line_number':2907,'multiline':False]['text':' did ":syntax clear"','line_number':2916,'multiline':False]['text':' index is ID minus one','line_number':2931,'multiline':False]['text':' type == LIST_ATTR','line_number':3008,'multiline':False]['text':' don't want "inverse"','line_number':3018,'multiline':False]['text':'
 * Return "1" if highlight group "id" has attribute "flag".
 * Return NULL otherwise.
 ','line_number':3039,'multiline':True]['text':' 'g' for GUI, 'c' for cterm, 't' for term','line_number':3047,'multiline':False]['text':'
 * Return color name of highlight group "id".
 ','line_number':3073,'multiline':True]['text':' "font", "fg", "bg", "sp", "ul", "fg#", "bg#" or "sp#"','line_number':3079,'multiline':False]['text':' 'g' for GUI, 'c' for cterm, 't' for term','line_number':3080,'multiline':False]['text':' return font name','line_number':3107,'multiline':False]['text':' return #RRGGBB form (only possible when GUI is running)','line_number':3112,'multiline':False]['text':' term doesn't have color','line_number':3156,'multiline':False]['text':'
 * Return color name of highlight group "id" as RGB value.
 ','line_number':3164,'multiline':True]['text':' TRUE = fg, FALSE = bg','line_number':3170,'multiline':False]['text':'
 * Output the syntax list header.
 * Return TRUE when started a new line.
 ','line_number':3189,'multiline':True]['text':' did header already','line_number':3195,'multiline':False]['text':' length of string that comes','line_number':3196,'multiline':False]['text':' highlight group id','line_number':3197,'multiline':False]['text':' wrap around is like starting a new line','line_number':3220,'multiline':False]['text':' output at least one space','line_number':3224,'multiline':False]['text':' avoid hang for tiny window','line_number':3226,'multiline':False]['text':' Show "xxx" with the attributes.','line_number':3231,'multiline':False]['text':'
 * Set the attribute numbers for a highlight group.
 * Called after one of the attributes has changed.
 ','line_number':3243,'multiline':True]['text':' index in array','line_number':3249,'multiline':False]['text':' The "Normal" group doesn't need an attribute number','line_number':3254,'multiline':False]['text':' For the GUI mode: If there are other than "normal" highlighting','line_number':3259,'multiline':False]['text':' attributes, need to allocate an attr number.','line_number':3260,'multiline':False]['text':' For the term mode: If there are other than "normal" highlighting','line_number':3285,'multiline':False]['text':' attributes, need to allocate an attr number.','line_number':3286,'multiline':False]['text':' For the color term mode: If there are other than "normal"','line_number':3297,'multiline':False]['text':' highlighting attributes, need to allocate an attr number.','line_number':3298,'multiline':False]['text':' Only use the underline/undercurl color when used, it may clear the','line_number':3316,'multiline':False]['text':' background color if not supported.','line_number':3317,'multiline':False]['text':' If both fg and bg are invalid fall back to the cterm colors.','line_number':3326,'multiline':False]['text':' Helps when the GUI only uses an attribute, e.g. undercurl.','line_number':3327,'multiline':False]['text':'
 * Lookup a highlight group name and return its ID.
 * If it is not found, 0 is returned.
 ','line_number':3336,'multiline':True]['text':' Avoid using stricmp() too much, it's slow on some systems','line_number':3346,'multiline':False]['text':' Avoid alloc()/free(), these are slow too.  ID names over 200 chars','line_number':3347,'multiline':False]['text':' don't deserve to be found!','line_number':3348,'multiline':False]['text':'
 * Lookup a highlight group name and return its attributes.
 * Return zero if not found.
 ','line_number':3358,'multiline':True]['text':'
 * Return TRUE if highlight group "name" exists.
 ','line_number':3373,'multiline':True]['text':'
 * Return the name of highlight group "id".
 * When not a valid ID return an empty string.
 ','line_number':3383,'multiline':True]['text':'
 * Like syn_name2id(), but take a pointer + length argument.
 ','line_number':3397,'multiline':True]['text':'
 * Find highlight group name in the table and return its ID.
 * The argument is a pointer to the name and the length of the name.
 * If it doesn't exist yet, a new entry is created.
 * Return 0 for failure.
 ','line_number':3415,'multiline':True]['text':' doesn't exist yet','line_number':3437,'multiline':False]['text':'
 * Add new highlight group and return its ID.
 * "name" must be an allocated string, it will be consumed.
 * Return 0 for failure.
 ','line_number':3444,'multiline':True]['text':' Check that the name is valid (ASCII letters, digits, underscores, dots, or hyphens).','line_number':3455,'multiline':False]['text':' This is an error, but since there previously was no check only','line_number':3466,'multiline':False]['text':' give a warning.','line_number':3467,'multiline':False]['text':' First call for this growarray: init growing array.','line_number':3474,'multiline':False]['text':' Make room for at least one other syntax_highlight entry.','line_number':3488,'multiline':False]['text':' ID is index plus one','line_number':3512,'multiline':False]['text':'
 * When, just after calling syn_add_group(), an error is discovered, this
 * function deletes the new name.
 ','line_number':3515,'multiline':True]['text':'
 * Translate a group ID to highlight attributes.
 * "hl_id" must be valid: > 0, caller must check.
 ','line_number':3527,'multiline':True]['text':' index is ID minus one','line_number':3538,'multiline':False]['text':' Only use GUI attr when the GUI is being used.','line_number':3541,'multiline':False]['text':'
 * Get the GUI colors and attributes for a group ID.
 * NOTE: the colors will be INVALCOLOR when not set, the color otherwise.
 ','line_number':3555,'multiline':True]['text':' index is ID minus one','line_number':3565,'multiline':False]['text':' index is ID minus one','line_number':3583,'multiline':False]['text':'
 * Translate a group ID to the final group ID (following links).
 ','line_number':3589,'multiline':True]['text':' Can be called from eval!!','line_number':3599,'multiline':False]['text':' Follow links until there is no more.','line_number':3601,'multiline':False]['text':' Look out for loops!  Break after 100 links.','line_number':3602,'multiline':False]['text':' index is ID minus one','line_number':3605,'multiline':False]['text':'
 * Call this function just after the GUI has started.
 * Also called when 'termguicolors' was set, gui.in_use will be FALSE then.
 * It finds the font and color handles for the highlighting groups.
 ','line_number':3615,'multiline':True]['text':' First get the colors from the "Normal" and "Menu" group, if set','line_number':3625,'multiline':False]['text':' TRUE: might set the menu font','line_number':3638,'multiline':False]['text':' TRUE: might set the tooltip font','line_number':3639,'multiline':False]['text':' need to get a new attr number','line_number':3672,'multiline':False]['text':'
 * Apply difference between User[1-9] and HLF_S to HLF_SNC, HLF_ST or HLF_STNC.
 ','line_number':3678,'multiline':True]['text':' At long last we can apply','line_number':3739,'multiline':False]['text':'
 * Translate the 'highlight' option into attributes in highlight_attr[] and
 * set up the user highlights User1..9.  If FEAT_STL_OPT is in use, a set of
 * corresponding highlights to use on top of HLF_SNC is computed.
 * Called only when the 'highlight' option has been changed and upon first
 * screen redraw after any :highlight command.
 * Return FAIL when an invalid flag is found in 'highlight'.  OK otherwise.
 ','line_number':3744,'multiline':True]['text':' use 30 to avoid compiler warning','line_number':3762,'multiline':False]['text':' Clear all attributes.','line_number':3782,'multiline':False]['text':' First set all attributes to their default value.','line_number':3786,'multiline':False]['text':' Then use the attributes from the 'highlight' option.','line_number':3787,'multiline':False]['text':' just in case','line_number':3794,'multiline':False]['text':' Allow several hl_flags to be combined, like "bu" for','line_number':3806,'multiline':False]['text':' bold-underlined.','line_number':3807,'multiline':False]['text':' parse up to comma','line_number':3809,'multiline':False]['text':' ignore white space','line_number':3811,'multiline':False]['text':' Combination with ':' is not allowed.','line_number':3814,'multiline':False]['text':' Note: Keep this in sync with expand_set_highlight().','line_number':3817,'multiline':False]['text':' no highlighting','line_number':3825,'multiline':False]['text':' highlight group name','line_number':3843,'multiline':False]['text':' no combinations','line_number':3844,'multiline':False]['text':' skip comma and spaces','line_number':3872,'multiline':False]['text':' Setup the user highlights','line_number':3877,'multiline':False]['text':'','line_number':3878,'multiline':False]['text':' Temporarily utilize 28 more hl entries:','line_number':3879,'multiline':False]['text':' 9 for User1-User9 combined with StatusLineNC','line_number':3880,'multiline':False]['text':' 9 for User1-User9 combined with StatusLineTerm','line_number':3881,'multiline':False]['text':' 9 for User1-User9 combined with StatusLineTermNC','line_number':3882,'multiline':False]['text':' 1 for StatusLine default','line_number':3883,'multiline':False]['text':' Have to be in there simultaneously in case of table overflows in','line_number':3884,'multiline':False]['text':' get_attr_entry()','line_number':3885,'multiline':False]['text':' Make sure id_S is always valid to simplify code below. Use the last','line_number':3892,'multiline':False]['text':' entry.','line_number':3893,'multiline':False]['text':' USER_HIGHLIGHT','line_number':3933,'multiline':False]['text':'
 * Handle command line completion for :highlight command.
 ','line_number':3941,'multiline':True]['text':' Default: expand group names','line_number':3949,'multiline':False]['text':' (part of) subcommand already typed','line_number':3958,'multiline':False]['text':' past "default" or group name','line_number':3963,'multiline':False]['text':' past group name','line_number':3974,'multiline':False]['text':' past first group name','line_number':3983,'multiline':False]['text':' past group name(s)','line_number':3989,'multiline':False]['text':'
 * List highlighting matches in a nice way.
 ','line_number':3993,'multiline':True]['text':'
 * Function given to ExpandGeneric() to obtain the list of group names.
 ','line_number':4016,'multiline':True]['text':'
 * Obtain a highlight group name.
 * When "skip_cleared" is TRUE don't return a cleared entry.
 ','line_number':4025,'multiline':True]['text':' Items are never removed from the table, skip the ones that were','line_number':4035,'multiline':False]['text':' cleared.','line_number':4036,'multiline':False]['text':'
 * Free all the highlight group fonts.
 * Used when quitting for systems which need it.
 ','line_number':4056,'multiline':True]['text':'
 * Convert each of the highlight attribute bits (bold, standout, underline,
 * etc.) set in 'hlattr' into a separate boolean item in a Dictionary with
 * the attribute name as the key.
 ','line_number':4088,'multiline':True]['text':' don't want "inverse"','line_number':4108,'multiline':False]['text':'
 * Return the attributes of the highlight group at index 'hl_idx' as a
 * Dictionary. If 'resolve_link' is TRUE, then resolves the highlight group
 * links recursively.
 ','line_number':4115,'multiline':True]['text':' highlight group id is 1-based','line_number':4133,'multiline':False]['text':' resolve the highlight group link recursively','line_number':4143,'multiline':False]['text':' If only 'name' is present, then the highlight group is cleared.','line_number':4219,'multiline':False]['text':'
 * "hlget([name])" function
 * Return the attributes of a specific highlight group (if specified) or all
 * the highlight groups.
 ','line_number':4229,'multiline':True]['text':' highlight group name supplied','line_number':4253,'multiline':False]['text':'
 * Returns the string value at 'dict[key]'. Returns NULL, if 'key' is not in
 * 'dict' or the value is not a string type. If the value is not a string type
 * or is NULL, then 'error' is set to TRUE.
 ','line_number':4280,'multiline':True]['text':'
 * Convert the highlight attribute Dictionary at 'dict[key]' into a string
 * value in 'attr_str' of length 'len'. Returns FALSE if 'dict[key]' is not a
 * Dictionary or is NULL.
 ','line_number':4305,'multiline':True]['text':' If the attribute dict is empty, then return NONE to clear the attributes','line_number':4336,'multiline':False]['text':' Temporary buffer used to store the command string produced by hlset().','line_number':4362,'multiline':False]['text':' IObuff cannot be used for this as the error messages produced by hlset()','line_number':4363,'multiline':False]['text':' internally use IObuff.','line_number':4364,'multiline':False]['text':'
 * Add the highlight attribute "attr" of length "attrlen" and "value" at
 * "dptr", which points into "hlsetBuf".
 * Returns the updated pointer.
 ','line_number':4368,'multiline':True]['text':' Do nothing if the value is not specified or is empty','line_number':4378,'multiline':False]['text':'
 * Add or update a highlight group using 'dict' items. Returns TRUE if
 * successfully updated the highlight group.
 ','line_number':4394,'multiline':True]['text':' clear a highlight group','line_number':4436,'multiline':False]['text':' link highlight groups','line_number':4450,'multiline':False]['text':' If 'cleared' or 'linksto' are specified, then don't process the other','line_number':4462,'multiline':False]['text':' attributes.','line_number':4463,'multiline':False]['text':' If none of the attributes are specified, then do nothing.','line_number':4516,'multiline':False]['text':'
 * "hlset([{highlight_attr}])" function
 * Add or modify highlight groups
 ','line_number':4552,'multiline':True]