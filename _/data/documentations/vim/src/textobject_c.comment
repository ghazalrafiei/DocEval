['text':' vi:set ts=8 sts=4 sw=4 noet:
 *
 * VIM - Vi IMproved	by Bram Moolenaar
 *
 * Do ":help uganda"  in Vim to read copying and usage conditions.
 * Do ":help credits" in Vim to see a list of people who contributed.
 * See README.txt for an overview of the Vim source code.
 ','line_number':1,'multiline':True]['text':'
 * textobject.c: functions for text objects
 ','line_number':10,'multiline':True]['text':'
 * Find the start of the next sentence, searching in the direction specified
 * by the "dir" argument.  The cursor is positioned on the start of the next
 * sentence when found.  If the next sentence is found, return OK.  Return FAIL
 * otherwise.  See ":h sentence" for the precise definition of a "sentence"
 * text object.
 ','line_number':18,'multiline':True]['text':' do not skip blanks','line_number':33,'multiline':False]['text':'
	 * if on an empty line, skip up to a non-empty line
	 ','line_number':47,'multiline':True]['text':'
	 * if on the start of a paragraph or a section and searching forward,
	 * go to the next line
	 ','line_number':59,'multiline':True]['text':' go back to the previous non-white non-punctuation character','line_number':74,'multiline':False]['text':' remember the line where the search started','line_number':95,'multiline':False]['text':' find end of sentence','line_number':99,'multiline':False]['text':' skip NUL at EOL','line_number':121,'multiline':False]['text':' skip white space','line_number':135,'multiline':False]['text':' didn't actually move, advance one character and try again','line_number':142,'multiline':False]['text':'
 * Find the next paragraph or section in direction 'dir'.
 * Paragraphs are currently supposed to be separated by empty lines.
 * If 'what' is NUL we go to the next paragraph.
 * If 'what' is '{' or '}' we go to the next section.
 * If 'both' is TRUE also stop at '}'.
 * Return TRUE if the next paragraph or section was found.
 ','line_number':158,'multiline':True]['text':' Return: TRUE if last char is to be included','line_number':168,'multiline':False]['text':' TRUE after separating lines have been skipped','line_number':175,'multiline':False]['text':' TRUE on first line','line_number':176,'multiline':False]['text':' first line of a closed fold','line_number':179,'multiline':False]['text':' last line of a closed fold','line_number':180,'multiline':False]['text':' TRUE if a closed fold was skipped this','line_number':181,'multiline':False]['text':' iteration','line_number':182,'multiline':False]['text':' skip folded lines','line_number':196,'multiline':False]['text':' POSIX has its own ideas of what a paragraph boundary is and it','line_number':205,'multiline':False]['text':' doesn't match historical Vi: It also stops at a "{" in the','line_number':206,'multiline':False]['text':' first column and at an empty line.','line_number':207,'multiline':False]['text':' include line with '}'','line_number':226,'multiline':False]['text':' Put the cursor on the last character in the last line and make the','line_number':233,'multiline':False]['text':' motion inclusive.','line_number':234,'multiline':False]['text':'
 * check if the string 's' is a nroff macro that is in option 'opt'
 ','line_number':248,'multiline':True]['text':' Accept two characters in the option being equal to two characters','line_number':258,'multiline':False]['text':' in the line.  A space in the option matches with a space in the','line_number':259,'multiline':False]['text':' line or the line having ended.','line_number':260,'multiline':False]['text':'
 * startPS: return TRUE if line 'lnum' is the start of a section or paragraph.
 * If 'para' is '{' or '}' only check for sections.
 * If 'both' is TRUE also stop at '}'
 ','line_number':275,'multiline':True]['text':'
 * The following routines do the word searches performed by the 'w', 'W',
 * 'b', 'B', 'e', and 'E' commands.
 ','line_number':294,'multiline':True]['text':'
 * To perform these searches, characters are placed into one of three
 * classes, and transitions between classes determine word boundaries.
 *
 * The classes are:
 *
 * 0 - white space
 * 1 - punctuation
 * 2 or higher - keyword characters (letters, digits and underscore)
 ','line_number':299,'multiline':True]['text':' TRUE for "W", "B" or "E"','line_number':310,'multiline':False]['text':'
 * cls() - returns the class of character at curwin->w_cursor
 *
 * If a 'W', 'B', or 'E' motion is being done (cls_bigword == TRUE), chars
 * from class 2 and higher are reported as class 1 since only white space
 * boundaries are of interest.
 ','line_number':312,'multiline':True]['text':' If cls_bigword, report multi-byte chars as class 1.','line_number':329,'multiline':False]['text':' process code leading/trailing bytes','line_number':333,'multiline':False]['text':' If cls_bigword is TRUE, report all non-blanks as class 1.','line_number':344,'multiline':False]['text':'
 * fwd_word(count, type, eol) - move forward one word
 *
 * Returns FAIL if the cursor was already at the end of the file.
 * If eol is TRUE, last word stops at end of line (for operators).
 ','line_number':354,'multiline':True]['text':' "W", "E" or "B"','line_number':363,'multiline':False]['text':' starting class','line_number':366,'multiline':False]['text':' When inside a range of folded lines, move to the last char of the','line_number':375,'multiline':False]['text':' last line.','line_number':376,'multiline':False]['text':'
	 * We always move at least one character, unless on the last
	 * character in the buffer.
	 ','line_number':382,'multiline':True]['text':' started at last char in file','line_number':388,'multiline':False]['text':' started at last char in line','line_number':390,'multiline':False]['text':'
	 * Go one char past end of current word (if any)
	 ','line_number':393,'multiline':True]['text':'
	 * go to next non-white
	 ','line_number':404,'multiline':True]['text':'
	     * We'll stop if we land on a blank line
	     ','line_number':409,'multiline':True]['text':'
 * bck_word() - move backward 'count' words
 *
 * If stop is TRUE and we are already on the start of a word, move one less.
 *
 * Returns FAIL if top of the file was reached.
 ','line_number':423,'multiline':True]['text':' starting class','line_number':433,'multiline':False]['text':' When inside a range of folded lines, move to the first char of the','line_number':440,'multiline':False]['text':' first line.','line_number':441,'multiline':False]['text':' started at start of file','line_number':446,'multiline':False]['text':'
	     * Skip white space before the word.
	     * Stop on an empty line.
	     ','line_number':451,'multiline':True]['text':' hit start of file, stop here','line_number':460,'multiline':False]['text':'
	     * Move backward to start of this word.
	     ','line_number':464,'multiline':True]['text':' overshot - forward one','line_number':471,'multiline':False]['text':'
 * end_word() - move to the end of the word
 *
 * There is an apparent bug in the 'e' motion of the real vi. At least on the
 * System V Release 3 version for the 80386. Unlike 'b' and 'w', the 'e'
 * motion crosses blank lines. When the real vi crosses a blank line in an
 * 'e' motion, the cursor is placed on the FIRST character of the next
 * non-blank line. The 'E' command, however, works correctly. Since this
 * appears to be a bug, I have not duplicated it here.
 *
 * Returns FAIL if end of the file was reached.
 *
 * If stop is TRUE and we are already on the end of a word, move one less.
 * If empty is TRUE stop on an empty line.
 ','line_number':479,'multiline':True]['text':' starting class','line_number':501,'multiline':False]['text':' When inside a range of folded lines, move to the last char of the','line_number':508,'multiline':False]['text':' last line.','line_number':509,'multiline':False]['text':'
	 * If we're in the middle of a word, we just have to move to the end
	 * of it.
	 ','line_number':517,'multiline':True]['text':'
	     * Move forward to end of the current word
	     ','line_number':523,'multiline':True]['text':'
	     * We were at the end of a word. Go to the end of the next word.
	     * First skip white space, if 'empty' is TRUE, stop at empty line.
	     ','line_number':531,'multiline':True]['text':' hit end of file, stop here','line_number':540,'multiline':False]['text':'
	     * Move forward to the end of this word.
	     ','line_number':544,'multiline':True]['text':' overshot - one char backward','line_number':550,'multiline':False]['text':' we move only one word less','line_number':552,'multiline':False]['text':'
 * Move back to the end of the word.
 *
 * Returns FAIL if start of the file was reached.
 ','line_number':557,'multiline':True]['text':' TRUE for "B"','line_number':565,'multiline':False]['text':' TRUE: stop at end of line.','line_number':566,'multiline':False]['text':' starting class','line_number':568,'multiline':False]['text':'
	 * Move backward to before the start of this word.
	 ','line_number':581,'multiline':True]['text':'
	 * Move backward to end of the previous word
	 ','line_number':591,'multiline':True]['text':'
 * Skip a row of characters of the same class.
 * Return TRUE when end-of-file reached, FALSE otherwise.
 ','line_number':606,'multiline':True]['text':'
 * Go back to the start of the word or the start of white space
 ','line_number':619,'multiline':True]['text':' starting class','line_number':625,'multiline':False]['text':' stop at start of line','line_number':630,'multiline':False]['text':' stop at start of word','line_number':633,'multiline':False]['text':'
 * Skip count/2 sentences and count/2 separating white spaces.
 ','line_number':657,'multiline':True]['text':' cursor is at start of sentence','line_number':663,'multiline':False]['text':'
 * Find word under cursor, cursor at end.
 * Used while an operator is pending, and in Visual mode.
 ','line_number':676,'multiline':True]['text':' TRUE: include word and white space','line_number':684,'multiline':False]['text':' FALSE == word, TRUE == WORD','line_number':685,'multiline':False]['text':' Correct cursor when 'selection' is exclusive','line_number':695,'multiline':False]['text':'
     * When Visual mode is not active, or when the VIsual area is only one
     * character, select the word and/or white space under the cursor.
     ','line_number':699,'multiline':True]['text':'
	 * Go to start of current word or white space.
	 ','line_number':705,'multiline':True]['text':'
	 * If the start is on white space, and white space should be included
	 * ("	word"), or start is not on white space, and white space should
	 * not be included ("word"), find end of word.
	 ','line_number':711,'multiline':True]['text':'
	     * If the start is not on white space, and white space should be
	     * included ("word	 "), or start is on white space and white
	     * space should not be included ("	 "), find start of word.
	     * If we end up in the first column of the next line (single char
	     * word) back up to end of the line.
	     ','line_number':723,'multiline':True]['text':' should do something when inclusive == FALSE !','line_number':742,'multiline':False]['text':' update the inversion','line_number':744,'multiline':False]['text':'
     * When count is still > 0, extend with more objects.
     ','line_number':754,'multiline':True]['text':'
	     * In Visual mode, with cursor at start: move cursor back.
	     ','line_number':762,'multiline':True]['text':'
	     * Move cursor forward one word and/or white area.
	     ','line_number':781,'multiline':True]['text':'
		 * If end is just past a new-line, we don't want to include
		 * the first character on the line.
		 * Put cursor on last char of white.
		 ','line_number':790,'multiline':True]['text':'
	 * If we don't include white space at the end, move the start
	 * to include some white space there. This makes "daw" work
	 * better on the last word in a sentence (and "2daw" on last-but-one
	 * word).  Also when "2daw" deletes "word." at the end of the line
	 * (cursor is at start of next line).
	 * But don't delete white space at start of line (indent).
	 ','line_number':810,'multiline':True]['text':' save cursor position','line_number':818,'multiline':False]['text':' put cursor back at end','line_number':831,'multiline':False]['text':' show mode later','line_number':841,'multiline':False]['text':'
 * Find sentence(s) under the cursor, cursor at end.
 * When Visual active, extend it by one or more sentences.
 ','line_number':850,'multiline':True]['text':' Find start of next sentence.','line_number':866,'multiline':False]['text':'
     * When the Visual area is bigger than one character: Extend it.
     ','line_number':868,'multiline':True]['text':'
	     * Cursor at start of Visual area.
	     * Find out where we are:
	     * - in the white space before a sentence
	     * - in a sentence or just after it
	     * - at the start of a sentence
	     ','line_number':876,'multiline':True]['text':' exactly at start of sentence','line_number':899,'multiline':False]['text':' inside a sentence, go to its end (start of next)','line_number':901,'multiline':False]['text':' "as" gets twice as much as "is"','line_number':904,'multiline':False]['text':'
	     * Cursor at end of Visual area.
	     * Find out where we are:
	     * - just before a sentence
	     * - just before or in the white space before a sentence
	     * - in a sentence
	     ','line_number':918,'multiline':True]['text':' not just before a sentence','line_number':927,'multiline':False]['text':' in the sentence','line_number':941,'multiline':False]['text':' in/before white before a sentence','line_number':943,'multiline':False]['text':' "as" gets twice as much as "is"','line_number':947,'multiline':False]['text':'
     * If the cursor started on a blank, check if it is just before the start
     * of the next sentence.
     ','line_number':956,'multiline':True]['text':' VIM_ISWHITE() is a macro','line_number':960,'multiline':False]['text':' go back to first blank','line_number':965,'multiline':False]['text':'
	 * If the blank in front of the sentence is included, exclude the
	 * blanks at the end of the sentence, go back to the first blank.
	 * If there are no trailing blanks, try to include leading blanks.
	 ','line_number':988,'multiline':True]['text':' VIM_ISWHITE() is a macro','line_number':996,'multiline':False]['text':' Avoid getting stuck with "is" on a single space before a sentence.','line_number':1006,'multiline':False]['text':' show mode later','line_number':1013,'multiline':False]['text':' update the inversion','line_number':1014,'multiline':False]['text':' include a newline after the sentence, if there is one','line_number':1018,'multiline':False]['text':'
 * Find block under the cursor, cursor at end.
 * "what" and "other" are two matching parenthesis/brace/etc.
 ','line_number':1029,'multiline':True]['text':' TRUE == include white space','line_number':1037,'multiline':False]['text':' '(', '{', etc.','line_number':1038,'multiline':False]['text':' ')', '}', etc.','line_number':1039,'multiline':False]['text':' '{' at start of line','line_number':1047,'multiline':False]['text':' remember where we started','line_number':1050,'multiline':False]['text':'
     * If we start on '(', '{', ')', '}', etc., use the whole block inclusive.
     ','line_number':1053,'multiline':True]['text':' ignore indent','line_number':1059,'multiline':False]['text':' cursor on '(' or '{', move cursor just after it','line_number':1064,'multiline':False]['text':' cursor at low end of Visual','line_number':1070,'multiline':False]['text':'
     * Search backwards for unclosed '(', '{', etc..
     * Put this position in start_pos.
     * Ignore quotes here.  Keep the "M" flag in 'cpo', as that is what the
     * user wants.
     ','line_number':1075,'multiline':True]['text':' the findmatch for end_pos will overwrite *pos','line_number':1090,'multiline':False]['text':' the findmatch for end_pos will overwrite *pos','line_number':1100,'multiline':False]['text':'
     * Search for matching ')', '}', etc.
     * Put this position in curwin->w_cursor.
     ','line_number':1105,'multiline':True]['text':'
     * Try to exclude the '(', '{', ')', '}', etc. when "include" is FALSE.
     * If the ending '}', ')' or ']' is only preceded by indent, skip that
     * indent.  But only if the resulting area is not smaller than what we
     * started with.
     ','line_number':1116,'multiline':True]['text':'
	 * In Visual mode, when the resulting area is not bigger than what we
	 * started with, extend it to the next block, and then exclude again.
	 * Don't try to expand the area if the area is empty.
	 ','line_number':1134,'multiline':True]['text':' include the line break','line_number':1168,'multiline':False]['text':' update the inversion','line_number':1171,'multiline':False]['text':' Include the character under the cursor.','line_number':1182,'multiline':False]['text':' End is before the start (no text in between <>, [], etc.): don't','line_number':1185,'multiline':False]['text':' operate on any text.','line_number':1186,'multiline':False]['text':'
 * Return TRUE if the cursor is on a "<aaa>" tag.  Ignore "<aaa/>".
 * When "end_tag" is TRUE return TRUE if the cursor is on "</aaa>".
 ','line_number':1194,'multiline':True]['text':' We search forward until the cursor, because searching backwards is','line_number':1212,'multiline':False]['text':' very slow for DBCS encodings.','line_number':1213,'multiline':False]['text':' check for '<' under cursor','line_number':1220,'multiline':False]['text':' find '<' under/before cursor','line_number':1231,'multiline':False]['text':' find '>' before cursor','line_number':1234,'multiline':False]['text':' check that there is a '/' after the '<'','line_number':1246,'multiline':False]['text':' check that there is no '/' after the '<'','line_number':1249,'multiline':False]['text':' check that the matching '>' is not preceded by '/'','line_number':1253,'multiline':False]['text':'
 * Find tag block under the cursor, cursor at end.
 ','line_number':1266,'multiline':True]['text':' TRUE == include white space','line_number':1273,'multiline':False]['text':' remember where we started','line_number':1294,'multiline':False]['text':' old_end is inclusive','line_number':1297,'multiline':False]['text':'
     * If we start on "<aaa>" select that block.
     ','line_number':1299,'multiline':True]['text':' ignore indent','line_number':1306,'multiline':False]['text':' cursor on start tag, move to its '>'','line_number':1313,'multiline':False]['text':' cursor on end tag, move to just before it','line_number':1320,'multiline':False]['text':' cursor at low end of Visual','line_number':1331,'multiline':False]['text':'
     * Search backwards for unclosed "<aaa>".
     * Put this position in start_pos.
     ','line_number':1337,'multiline':True]['text':'
     * Search for matching "</aaa>".  First isolate the "aaa".
     ','line_number':1354,'multiline':True]['text':' Can't find other end or it's before the previous end.  Could be a','line_number':1387,'multiline':False]['text':' HTML tag that doesn't have a matching end.  Search backwards for','line_number':1388,'multiline':False]['text':' another starting tag.','line_number':1389,'multiline':False]['text':' Include up to the '>'.','line_number':1397,'multiline':False]['text':' Exclude the '<' of the end tag.','line_number':1406,'multiline':False]['text':' If the closing tag is on new line, do not decrement cursor, but','line_number':1407,'multiline':False]['text':' make operation exclusive, so that the linefeed will be selected','line_number':1408,'multiline':False]['text':' do not decrement cursor','line_number':1410,'multiline':False]['text':' Exclude the start tag.','line_number':1419,'multiline':False]['text':' If we are in Visual mode and now have the same text as before set','line_number':1430,'multiline':False]['text':' "do_include" and try again.','line_number':1431,'multiline':False]['text':' If the end is before the start there is no text between tags, select','line_number':1444,'multiline':False]['text':' the char under the cursor.','line_number':1445,'multiline':False]['text':' update the inversion','line_number':1452,'multiline':False]['text':' End is before the start: there is no text between tags; operate','line_number':1461,'multiline':False]['text':' on an empty area.','line_number':1462,'multiline':False]['text':' TRUE == include white space','line_number':1481,'multiline':False]['text':' 'p' for paragraph, 'S' for section','line_number':1482,'multiline':False]['text':' not implemented yet','line_number':1495,'multiline':False]['text':'
     * When visual area is more than one line: extend it.
     ','line_number':1500,'multiline':True]['text':'
     * First move back to the start_lnum of the paragraph or white lines
     ','line_number':1554,'multiline':True]['text':' stop at first white line','line_number':1560,'multiline':False]['text':' stop at first non-white line of start of paragraph','line_number':1565,'multiline':False]['text':'
     * Move past the end of any white lines.
     ','line_number':1573,'multiline':True]['text':'
	     * skip to end of paragraph
	     ','line_number':1595,'multiline':True]['text':'
	 * skip to end of white lines after paragraph
	 ','line_number':1607,'multiline':True]['text':'
     * If there are no empty lines at the end, try to find some empty lines at
     * the start (unless that has been done already).
     ','line_number':1616,'multiline':True]['text':' Problem: when doing "Vipipip" nothing happens in a single white','line_number':1626,'multiline':False]['text':' line, we get stuck there.  Trap this here.','line_number':1627,'multiline':False]['text':' update the inversion','line_number':1636,'multiline':False]['text':'
 * Search quote char from string line[col].
 * Quote character escaped by one of the characters in "escape" is not counted
 * as a quote.
 * Returns column number of "quotechar" or -1 when not found.
 ','line_number':1651,'multiline':True]['text':' escape characters, can be NULL','line_number':1662,'multiline':False]['text':'
 * Search backwards in "line" from column "col_start" to find "quotechar".
 * Quote character escaped by one of the characters in "escape" is not counted
 * as a quote.
 * Return the found column or zero.
 ','line_number':1687,'multiline':True]['text':' escape characters, can be NULL','line_number':1698,'multiline':False]['text':' uneven number of escape chars, skip it','line_number':1712,'multiline':False]['text':'
 * Find quote under the cursor, cursor at end.
 * Returns TRUE if found, else FALSE.
 ','line_number':1719,'multiline':True]['text':' TRUE == include quote char','line_number':1727,'multiline':False]['text':' Quote character','line_number':1728,'multiline':False]['text':' Visual selection <= 1 char','line_number':1734,'multiline':False]['text':' Visual starts before cursor','line_number':1735,'multiline':False]['text':' adjusted pos for 'selection'','line_number':1736,'multiline':False]['text':' Looks like "i'" done before','line_number':1737,'multiline':False]['text':' Has quote inside selection','line_number':1738,'multiline':False]['text':' restore VIsual on abort','line_number':1740,'multiline':False]['text':' When 'selection' is "exclusive" move the cursor to where it would be','line_number':1742,'multiline':False]['text':' with 'selection' "inclusive", so that the logic is the same for both.','line_number':1743,'multiline':False]['text':' The cursor then is moved forward after adjusting the area.','line_number':1744,'multiline':False]['text':' this only works within one line','line_number':1747,'multiline':False]['text':' VIsual needs to be the start of Visual selection.','line_number':1768,'multiline':False]['text':' Check if the existing selection exactly spans the text inside','line_number':1781,'multiline':False]['text':' quotes.','line_number':1782,'multiline':False]['text':' Find out if we have a quote in the selection.','line_number':1802,'multiline':False]['text':' check for going over the end of the line, which can happen if','line_number':1805,'multiline':False]['text':' the line was changed after the Visual area was selected.','line_number':1806,'multiline':False]['text':' Already selecting something and on a quote character.  Find the','line_number':1819,'multiline':False]['text':' next quoted string.','line_number':1820,'multiline':False]['text':' Assume we are on a closing quote: move to after the next','line_number':1823,'multiline':False]['text':' opening quote.','line_number':1824,'multiline':False]['text':' We were on a starting quote perhaps?','line_number':1832,'multiline':False]['text':' We were on an ending quote perhaps?','line_number':1846,'multiline':False]['text':' The cursor is on a quote, we don't know if it's the opening or','line_number':1866,'multiline':False]['text':' closing quote.  Search from the start of the line to find out.','line_number':1867,'multiline':False]['text':' Also do this when there is a Visual area, a' may leave the cursor','line_number':1868,'multiline':False]['text':' in between two strings.','line_number':1869,'multiline':False]['text':' Find open quote character.','line_number':1873,'multiline':False]['text':' Find close quote character.','line_number':1877,'multiline':False]['text':' If is cursor between start and end quote character, it is','line_number':1882,'multiline':False]['text':' target text object.','line_number':1883,'multiline':False]['text':' Search backward for a starting quote.','line_number':1891,'multiline':False]['text':' No quote before the cursor, look after the cursor.','line_number':1895,'multiline':False]['text':' Find close quote character.','line_number':1901,'multiline':False]['text':' When "include" is TRUE, include spaces after closing quote or before','line_number':1908,'multiline':False]['text':' the starting quote.','line_number':1909,'multiline':False]['text':' Set start position.  After vi" another i" must include the ".','line_number':1920,'multiline':False]['text':' For v2i" include the quotes.','line_number':1921,'multiline':False]['text':' Set the start of the Visual area when the Visual area was empty, we','line_number':1927,'multiline':False]['text':' were just inside quotes or the Visual area didn't start at a quote','line_number':1928,'multiline':False]['text':' and didn't include a quote.','line_number':1929,'multiline':False]['text':' Set end position.','line_number':1948,'multiline':False]['text':' After vi" another i" must include the ".','line_number':1950,'multiline':False]['text':' decrement cursor when 'selection' is not exclusive','line_number':1958,'multiline':False]['text':' Cursor is at start of Visual area.  Set the end of the Visual','line_number':1964,'multiline':False]['text':' area when it was just inside quotes or it didn't end at a','line_number':1965,'multiline':False]['text':' quote.','line_number':1966,'multiline':False]['text':' show mode later','line_number':1981,'multiline':False]['text':' Set inclusive and other oap's flags.','line_number':1986,'multiline':False]