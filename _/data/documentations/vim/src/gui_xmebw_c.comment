['text':' vi:set ts=8 sts=4 sw=4 noet:
 *
 * VIM - Vi IMproved	by Bram Moolenaar
 *
 * Do ":help uganda"  in Vim to read copying and usage conditions.
 * Do ":help credits" in Vim to see a list of people who contributed.
 * See README.txt for an overview of the Vim source code.
 ','line_number':1,'multiline':True]['text':'
 *
 * (C) 2002,2005 by Marcin Dalecki <martin@dalecki.de>
 *
 * MARCIN DALECKI ASSUMES NO RESPONSIBILITY FOR THE USE OR INABILITY TO USE ANY
 * OF THIS SOFTWARE . THIS SOFTWARE IS PROVIDED "AS IS" WITHOUT WARRANTY OF ANY
 * KIND, AND MARCIN DALECKI EXPRESSLY DISCLAIMS ALL IMPLIED WARRANTIES,
 * INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF MERCHANTABILITY AND
 * FITNESS FOR A PARTICULAR PURPOSE.
 ','line_number':9,'multiline':True]['text':'
 * Enhanced Motif PushButton widget with move over behavior.
 ','line_number':20,'multiline':True]['text':' Provide some missing wrappers, which are missed from the LessTif','line_number':55,'multiline':False]['text':' implementation.  Also missing in Motif 1.2 and earlier.','line_number':56,'multiline':False]['text':'','line_number':57,'multiline':False]['text':' We neither use XmeGetPixmapData or _XmGetPixmapData, since with LessTif the','line_number':58,'multiline':False]['text':' pixmap will not appear in its caches properly. We cache the interesting','line_number':59,'multiline':False]['text':' values in XmEnhancedButtonPart instead ourself.','line_number':60,'multiline':False]['text':' Older VMS systems do not have xos_r.h and cannot haldle XtProcessLocking','line_number':72,'multiline':False]['text':'
 * Motif internals we have to cheat around with.
 ','line_number':86,'multiline':True]['text':' Hopefully this will never change...','line_number':90,'multiline':False]['text':'
 * Declaration of class methods.
 ','line_number':105,'multiline':True]['text':'
 * Declaration of action methods.
 ','line_number':113,'multiline':True]['text':'
 * 4 x 4 stipple for desensitized widgets
 ','line_number':121,'multiline':True]['text':'
 * Override actions.
 ','line_number':129,'multiline':True]['text':' This is needed to work around a bug in Lesstif 2, leaving the extension','line_number':160,'multiline':False]['text':' NULL somehow results in getting it set to an invalid pointer.','line_number':161,'multiline':False]['text':' next_extension      ','line_number':164,'multiline':True]['text':' record_type	   ','line_number':165,'multiline':True]['text':' version		   ','line_number':166,'multiline':True]['text':' record_size	   ','line_number':167,'multiline':True]['text':' widget_baseline	   ','line_number':168,'multiline':True]['text':' widget_display_rect ','line_number':169,'multiline':True]['text':' widget_margins      ','line_number':170,'multiline':True]['text':' core_class fields','line_number':176,'multiline':False]['text':' superclass		 ','line_number':177,'multiline':True]['text':' class_name		 ','line_number':178,'multiline':True]['text':' widget_size		 ','line_number':179,'multiline':True]['text':' class_initialize	 ','line_number':180,'multiline':True]['text':' class_part_initialize ','line_number':181,'multiline':True]['text':' class_inited		 ','line_number':182,'multiline':True]['text':' initialize		 ','line_number':183,'multiline':True]['text':' initialize_hook	 ','line_number':184,'multiline':True]['text':' realize		 ','line_number':185,'multiline':True]['text':' actions		 ','line_number':186,'multiline':True]['text':' num_actions		 ','line_number':187,'multiline':True]['text':' resources		 ','line_number':188,'multiline':True]['text':' num_resources	 ','line_number':189,'multiline':True]['text':' xrm_class		 ','line_number':190,'multiline':True]['text':' compress_motion	 ','line_number':191,'multiline':True]['text':' compress_exposure	 ','line_number':192,'multiline':True]['text':' compress_enterleave	 ','line_number':193,'multiline':True]['text':' visible_interest	 ','line_number':194,'multiline':True]['text':' destroy		 ','line_number':195,'multiline':True]['text':' resize		 ','line_number':196,'multiline':True]['text':' expose		 ','line_number':197,'multiline':True]['text':' set_values		 ','line_number':198,'multiline':True]['text':' set_values_hook	 ','line_number':199,'multiline':True]['text':' set_values_almost	 ','line_number':200,'multiline':True]['text':' get_values_hook	 ','line_number':201,'multiline':True]['text':' accept_focus		 ','line_number':202,'multiline':True]['text':' version		 ','line_number':203,'multiline':True]['text':' callback_private	 ','line_number':204,'multiline':True]['text':' tm_table		 ','line_number':205,'multiline':True]['text':' query_geometry	 ','line_number':206,'multiline':True]['text':' display_accelerator	 ','line_number':207,'multiline':True]['text':' extension		 ','line_number':208,'multiline':True]['text':' primitive_class fields','line_number':211,'multiline':False]['text':' border highlight	 ','line_number':213,'multiline':True]['text':' border_unhighlight	 ','line_number':214,'multiline':True]['text':' translations		 ','line_number':215,'multiline':True]['text':' arm and activate	 ','line_number':216,'multiline':True]['text':' synthetic resources	 ','line_number':217,'multiline':True]['text':' number of syn res	 ','line_number':218,'multiline':True]['text':' extension		 ','line_number':219,'multiline':True]['text':' label_class fields','line_number':222,'multiline':False]['text':' setOverrideCallback	 ','line_number':224,'multiline':True]['text':' menuProcs		 ','line_number':225,'multiline':True]['text':' translations		 ','line_number':226,'multiline':True]['text':' extension		 ','line_number':227,'multiline':True]['text':' pushbutton_class record','line_number':230,'multiline':False]['text':' extension		 ','line_number':232,'multiline':True]['text':' enhancedbutton_class fields','line_number':235,'multiline':False]['text':' stipple_bitmap	 ','line_number':237,'multiline':True]['text':'
 * Create a slightly fainter pixmap to be shown on button entry.
 ','line_number':246,'multiline':True]['text':' XPM','line_number':278,'multiline':False]['text':' width height ncolors cpp [x_hot y_hot]','line_number':281,'multiline':False]['text':' colors','line_number':283,'multiline':False]['text':' pixels','line_number':288,'multiline':False]['text':'
 * Set the pixmap.
 ','line_number':302,'multiline':True]['text':' Configure defines XPMATTRIBUTES_TYPE as XpmAttributes or as','line_number':308,'multiline':False]['text':' XpmAttributes_21, depending on what is in Xm/XpmP.h.','line_number':309,'multiline':False]['text':' Make sure there is a default value for the pixmap.','line_number':339,'multiline':False]['text':' We use dynamic colors, get them now.','line_number':358,'multiline':False]['text':' Setup color substitution table.','line_number':366,'multiline':False]['text':' Create the "sensitive" pixmap.','line_number':376,'multiline':False]['text':' accuracy isn't crucial','line_number':378,'multiline':False]['text':' If something failed, we will fill in the default pixmap.','line_number':387,'multiline':False]['text':' TODO: does the shift depend on label_location somehow?','line_number':396,'multiline':False]['text':' Create the "highlight" pixmap.','line_number':410,'multiline':False]['text':' SGI doesn't have it','line_number':412,'multiline':False]['text':' accuracy isn't crucial','line_number':418,'multiline':False]['text':' Create the "insensitive" pixmap.','line_number':454,'multiline':False]['text':' accuracy isn't crucial','line_number':456,'multiline':False]['text':' Need to create new Pixmaps with the mask applied.','line_number':462,'multiline':False]['text':' if unhighlight trait in parent use specified GC...','line_number':581,'multiline':False]['text':' ...otherwise, use parent's background GC','line_number':587,'multiline':False]['text':'
 * Draw the label contained in the pushbutton.
 ','line_number':667,'multiline':True]['text':'
     * If the button contains a labeled pixmap, we will take it instead of our
     * own pixmap.
     ','line_number':696,'multiline':True]['text':' pushbutton is not armed','line_number':711,'multiline':False]['text':'
     *	Temporarily remove the Xm3D_ENHANCE_PIXEL hack ("adjustment") from the
     *	margin values, so we don't confuse Label.
     ','line_number':715,'multiline':True]['text':' ...so KHelp event is delivered correctly.','line_number':773,'multiline':False]['text':' etched in menu button','line_number':782,'multiline':False]['text':' !ActiveTearOff ||','line_number':858,'multiline':False]['text':' Find out how big the pixmap is','line_number':930,'multiline':False]['text':'
     * Please note that we manipulate the width only in case of push buttons
     * not used in the context of a menu pane.
     ','line_number':939,'multiline':True]['text':' FIXME: We should calculate a drawing offset for the pixmap here to','line_number':973,'multiline':False]['text':' adjust it.','line_number':974,'multiline':False]['text':' Invoke Label's Resize procedure.','line_number':987,'multiline':False]['text':' Create a bitmap for stippling (Drawable resources are cheap).','line_number':1009,'multiline':False]['text':' First see what type of extended label this is.','line_number':1020,'multiline':False]['text':' FIXME: this is not the perfect way to deal with menus, which do not','line_number':1026,'multiline':False]['text':' have any string set right now.','line_number':1027,'multiline':False]['text':'
     * Clear the old pixmaps.
     ','line_number':1046,'multiline':True]['text':'
     * Make sure that lost sensitivity is causing the border to vanish as well.
     ','line_number':1091,'multiline':True]['text':'
	     * Artificially let the highlight appear if the mouse is over us.
	     ','line_number':1117,'multiline':True]['text':' Best way to get the root window of object:','line_number':1120,'multiline':False]['text':'
     * Check for changed ExtLabelString.
     ','line_number':1141,'multiline':True]['text':' Don't change the pixmaps','line_number':1147,'multiline':False]['text':'
     * Compute the area allocated to the label of the pushbutton; fill in the
     * dimensions in the box.
     ','line_number':1207,'multiline':True]['text':'
     * Redraw the background.
     ','line_number':1237,'multiline':True]['text':' Don't shade if the button contains a label with a pixmap, since','line_number':1244,'multiline':False]['text':' there is no variant of the label available with the needed','line_number':1245,'multiline':False]['text':' background.','line_number':1246,'multiline':False]['text':' really need to fill with background if not armed ?','line_number':1261,'multiline':False]['text':'
	 *  NOTE: PushButton has two types of shadows: primitive-shadow and
	 *  default-button-shadow.  If pushbutton is in a menu only primitive
	 *  shadows are drawn.
	 ','line_number':1281,'multiline':True]['text':'
	 * Clear the area not occupied by label with parents background color.
	 * Label will invoke BorderUnhighlight() on the highlight_thickness
	 * area, which is redundant when XmEXTERNAL_HIGHLIGHT default button
	 * shadow emphasis is used.
	 ','line_number':1303,'multiline':True]['text':' The call above erases the border highlighting.','line_number':1331,'multiline':False]['text':'
		 *  - get the topShadowColor and bottomShadowColor from the
		 *  parent; use those colors to construct top and bottom gc;
		 *  use these GCs to draw the shadows of the button.
		 *
		 *  - Should not be called if pushbutton is in a row column or
		 *  in a menu.
		 *
		 *  - Should be called only if a defaultbuttonshadow is to be
		 *  drawn.
		 ','line_number':1347,'multiline':True]['text':'
		 * May need more complex computation for getting the GCs.
		 ','line_number':1375,'multiline':True]['text':' Use the parent's GC so monochrome works.','line_number':1381,'multiline':False]['text':' Use your own pixel for drawing.','line_number':1387,'multiline':False]['text':'
		 * Compute location of bounding box to contain the
		 * defaultButtonShadow.
		 ','line_number':1404,'multiline':True]['text':' FEAT_TOOLBAR','line_number':1460,'multiline':False]