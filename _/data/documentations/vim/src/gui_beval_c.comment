['text':' vi:set ts=8 sts=4 sw=4 noet:
 *
 * VIM - Vi IMproved	by Bram Moolenaar
 *			Visual Workshop integration by Gordon Prieur
 *
 * Do ":help uganda"  in Vim to read copying and usage conditions.
 * Do ":help credits" in Vim to see a list of people who contributed.
 * See README.txt for an overview of the Vim source code.
 ','line_number':1,'multiline':True]['text':' on Win32 only get_beval_info() is required','line_number':15,'multiline':False]['text':'
 * Currently, we assume that there can be only one BalloonEval showing
 * on-screen at any given moment.  This variable will hold the currently
 * showing BalloonEval or NULL if none is showing.
 ','line_number':38,'multiline':True]['text':'
 * Create a balloon-evaluation area for a Widget.
 * There can be either a "mesg" for a fixed string or "mesgCB" to generate a
 * message by calling this callback function.
 * When "mesg" is not NULL it must remain valid for as long as the balloon is
 * used.  It is not freed here.
 * Returns a pointer to the resulting object (NULL when out of memory).
 ','line_number':72,'multiline':True]['text':' get from gui.dpy','line_number':88,'multiline':False]['text':'
	 * Set up event handler which will keep its eyes on the pointer,
	 * and when the pointer rests in a certain spot for a given time
	 * interval, show the beval.
	 ','line_number':115,'multiline':True]['text':'
	 * Now create and save the screen width and height. Used in drawing.
	 ','line_number':124,'multiline':True]['text':'
 * Destroy a balloon-eval and free its associated memory.
 ','line_number':142,'multiline':True]['text':' Children will automatically be destroyed','line_number':150,'multiline':False]['text':'
 * This function returns the BalloonEval * associated with the currently
 * displayed tooltip.  Returns NULL if there is no tooltip currently showing.
 *
 * Assumption: Only one tooltip can be shown at a time.
 ','line_number':179,'multiline':True]['text':' !FEAT_GUI_MSWIN','line_number':191,'multiline':False]['text':'
 * Show a balloon with "mesg".
 ','line_number':196,'multiline':True]['text':' !FEAT_GUI_MSWIN','line_number':209,'multiline':False]['text':' FEAT_NETBEANS_INTG || PROTO','line_number':210,'multiline':False]['text':'
 * Hide the given balloon.
 ','line_number':214,'multiline':True]['text':'
     * Connect to the generic "event" signal instead of the individual
     * signals for each event type, because the former is emitted earlier.
     * This allows us to catch events independently of the signal handlers
     * in gui_gtk_x11.c.
     ','line_number':229,'multiline':True]['text':'
     * Nasty:  Key press events go to the main window thus the drawing area
     * will never see them.  This means we have to connect to the main window
     * as well in order to catch those events.
     ','line_number':238,'multiline':True]['text':'
		 * GDK_POINTER_MOTION_HINT_MASK is set, thus we cannot obtain
		 * the coordinates from the GdkEventMotion struct directly.
		 ','line_number':289,'multiline':True]['text':'
	     * Ignore LeaveNotify events that are not "normal".
	     * Apparently we also get it when somebody else grabs focus.
	     ','line_number':319,'multiline':True]['text':' continue emission','line_number':340,'multiline':False]['text':' Ignore LeaveNotify events that are not "normal".','line_number':357,'multiline':False]['text':' Apparently we also get it when somebody else grabs focus.','line_number':358,'multiline':False]['text':' continue emission','line_number':366,'multiline':False]['text':'
     * Moved out of the balloon location: cancel it.
     * Remember button state
     ','line_number':379,'multiline':True]['text':' Mouse buttons are pressed - no balloon now','line_number':386,'multiline':False]['text':'
	     * Alt is pressed -- enter super-evaluate-mode,
	     * where there is no time delay
	     ','line_number':395,'multiline':True]['text':' Don't do this for key release, we apparently get these with','line_number':432,'multiline':False]['text':' focus changes in some GTK version.','line_number':433,'multiline':False]['text':'
     * If the timer event happens then the mouse has stopped long enough for
     * a request to be started. The request will only send to the debugger if
     * there the mouse is pointing at real data.
     ','line_number':449,'multiline':True]['text':' don't call me again','line_number':456,'multiline':False]['text':' continue emission','line_number':500,'multiline':False]['text':' !GTK_CHECK_VERSION(3,0,0)','line_number':502,'multiline':False]['text':' !FEAT_GUI_GTK','line_number':504,'multiline':False]['text':'
 * The X event handler. All it does is call the real event handler.
 ','line_number':529,'multiline':True]['text':'
 * The real event handler. Called by pointerEventEH() whenever an event we are
 * interested in occurs.
 ','line_number':544,'multiline':True]['text':' a measure of how much the pointer moved','line_number':552,'multiline':False]['text':' used to compute distance','line_number':553,'multiline':False]['text':'
		 * Moved out of the balloon location: cancel it.
		 * Remember button state
		 ','line_number':569,'multiline':True]['text':' Mouse buttons are pressed - no balloon now','line_number':576,'multiline':False]['text':'
		     * Alt is pressed -- enter super-evaluate-mode,
		     * where there is no time delay
		     ','line_number':581,'multiline':True]['text':'
	 * Motif version: Keystrokes will be caught by the
	 * "textArea" widget, and handled in gui_x11_key_hit_cb().
	 ','line_number':609,'multiline':True]['text':' Ignore LeaveNotify events that are not "normal".','line_number':665,'multiline':False]['text':' Apparently we also get it when somebody else grabs focus.','line_number':666,'multiline':False]['text':' Happens for me every two seconds (some clipboard tool?)','line_number':667,'multiline':False]['text':'
     * If the timer event happens then the mouse has stopped long enough for
     * a request to be started. The request will only send to the debugger if
     * there the mouse is pointing at real data.
     ','line_number':688,'multiline':True]['text':' !FEAT_GUI_GTK','line_number':696,'multiline':False]['text':' Determine the beval to display','line_number':704,'multiline':False]['text':'
 * Convert the string to UTF-8 if 'encoding' is not "utf-8".
 * Replace any non-printable characters and invalid bytes sequences with
 * "^X" or "<xx>" escapes, and apply SpecialKey highlighting to them.
 * TAB and NL are passed through unscathed.
 ','line_number':715,'multiline':True]['text':' Convert to UTF-8 if it isn't already','line_number':735,'multiline':False]['text':' First let's see how much we need to allocate','line_number':743,'multiline':False]['text':' be quick for ASCII','line_number':747,'multiline':False]['text':' nonprintable: ^X','line_number':750,'multiline':False]['text':' reject overlong sequences','line_number':758,'multiline':False]['text':' illegal byte or','line_number':760,'multiline':False]['text':' control char: <xx>','line_number':761,'multiline':False]['text':' Note: we assume here that utf_printable() doesn't','line_number':763,'multiline':False]['text':' care about characters outside the BMP.','line_number':764,'multiline':False]['text':' nonprintable: <xxxx>','line_number':765,'multiline':False]['text':' Now go for the real work','line_number':774,'multiline':False]['text':' Look up the RGB values of the SpecialKey foreground color.','line_number':789,'multiline':False]['text':' Be quick for ASCII','line_number':809,'multiline':False]['text':' reject overlong sequences','line_number':820,'multiline':False]['text':' Careful: we can't just use transchar_byte() here,','line_number':826,'multiline':False]['text':' since 'encoding' is not necessarily set to "utf-8".','line_number':827,'multiline':False]['text':' <xx>','line_number':830,'multiline':False]['text':' Note: we assume here that utf_printable() doesn't','line_number':835,'multiline':False]['text':' care about characters outside the BMP.','line_number':836,'multiline':False]['text':' <xx> or <xxxx>','line_number':837,'multiline':False]['text':' ^X','line_number':842,'multiline':False]['text':'
 * Draw a balloon.
 ','line_number':897,'multiline':True]['text':'
     * Dirty trick:  Enable wrapping mode on the label's layout behind its
     * back.  This way GtkLabel won't try to constrain the wrap width to a
     * builtin maximum value of about 65 Latin characters.
     ','line_number':931,'multiline':True]['text':' try to come up with some reasonable width','line_number':943,'multiline':False]['text':' Calculate the balloon's width and height.','line_number':948,'multiline':False]['text':' Compute position of the balloon area','line_number':955,'multiline':False]['text':' Get out of the way of the mouse pointer','line_number':960,'multiline':False]['text':' Sanitize values','line_number':966,'multiline':False]['text':' Show the balloon','line_number':972,'multiline':False]['text':'
 * Undraw a balloon.
 ','line_number':984,'multiline':True]['text':' !FEAT_GUI_GTK','line_number':1050,'multiline':False]['text':'
 * Draw a balloon.
 ','line_number':1052,'multiline':True]['text':' Show the Balloon','line_number':1067,'multiline':False]['text':' Calculate the label's width and height','line_number':1069,'multiline':False]['text':' For the callback function we parse NL characters to create a','line_number':1071,'multiline':False]['text':' multi-line label.  This doesn't work for all languages, but','line_number':1072,'multiline':False]['text':' XmStringCreateLocalized() doesn't do multi-line labels...','line_number':1073,'multiline':False]['text':' Compute position of the balloon area','line_number':1095,'multiline':False]['text':' Set tooltip colors','line_number':1106,'multiline':False]['text':'
 * Undraw a balloon.
 ','line_number':1124,'multiline':True]['text':' !FEAT_GUI_GTK','line_number':1176,'multiline':False]['text':' !FEAT_GUI_MSWIN','line_number':1177,'multiline':False]['text':' FEAT_BEVAL_GUI','line_number':1179,'multiline':False]