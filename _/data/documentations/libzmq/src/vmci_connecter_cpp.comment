['text':' SPDX-License-Identifier: MPL-2.0 ','line_number':1,'multiline':True]['text':'  We are not polling for incoming data, so we are actually called','line_number':50,'multiline':False]['text':'  because of error here. However, we can get error on out event as well','line_number':51,'multiline':False]['text':'  on some platforms, so we'll simply handle both events in the same way.','line_number':52,'multiline':False]['text':'  TODO this is still very similar to (t)ipc_connecter_t, maybe the','line_number':63,'multiline':False]['text':'  differences can be factored out','line_number':64,'multiline':False]['text':'  Handle the error condition by attempt to reconnect.','line_number':79,'multiline':False]['text':'  Open the connecting socket.','line_number':134,'multiline':False]['text':'  Connect may succeed in synchronous manner.','line_number':137,'multiline':False]['text':'  Connection establishment may be delayed. Poll for its completion.','line_number':143,'multiline':False]['text':'  add userspace connect timeout','line_number':150,'multiline':False]['text':'  Handle any other error condition by eventual reconnect.','line_number':154,'multiline':False]['text':'  Resolve the address','line_number':174,'multiline':False]['text':'  TODO we should emit some event in this case!','line_number':185,'multiline':False]['text':' Set the socket to non-blocking mode so that we get async connect().','line_number':192,'multiline':False]['text':'  Connect to the remote peer.','line_number':199,'multiline':False]['text':'  Connect was successful immediately.','line_number':205,'multiline':False]['text':'  Translate error codes indicating asynchronous connect has been','line_number':210,'multiline':False]['text':'  launched to a uniform EINPROGRESS.','line_number':211,'multiline':False]['text':'  Async connect has finished. Check whether an error occurred','line_number':227,'multiline':False]['text':'  Assert if the error was caused by 0MQ bug.','line_number':238,'multiline':False]['text':'  Networking problems are OK. No need to assert.','line_number':239,'multiline':False]['text':'  Following code should handle both Berkeley-derived socket','line_number':251,'multiline':False]['text':'  implementations and Solaris.','line_number':252,'multiline':False]['text':'  Return the newly connected socket.','line_number':268,'multiline':False]