['text':' SPDX-License-Identifier: MPL-2.0 ','line_number':1,'multiline':True]['text':'  Condition variable class encapsulates OS mutex in a platform-independent way.','line_number':9,'multiline':False]['text':' this assumes that the mutex mutex_ has been locked by the caller','line_number':81,'multiline':False]['text':' unlock mtx and wait cv.notify_all(), lock mtx after cv.notify_all()','line_number':85,'multiline':False]['text':' time expired','line_number':88,'multiline':False]['text':' this assumes that the mutex associated with _cv has been locked by the caller','line_number':97,'multiline':False]['text':'Atomically releases lock, blocks the current executing thread,','line_number':129,'multiline':False]['text':'and adds it to the list of threads waiting on *this. The thread','line_number':130,'multiline':False]['text':'will be unblocked when broadcast() is executed.','line_number':131,'multiline':False]['text':'It may also be unblocked spuriously. When unblocked, regardless','line_number':132,'multiline':False]['text':'of the reason, lock is reacquired and wait exits.','line_number':133,'multiline':False]['text':' remove sem from listeners','line_number':153,'multiline':False]