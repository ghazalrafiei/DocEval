['text':' SPDX-License-Identifier: MPL-2.0 ','line_number':1,'multiline':True]['text':'  When socket is being closed down we don't want to wait till pending','line_number':21,'multiline':False]['text':'  subscription commands are sent to the wire.','line_number':22,'multiline':False]['text':'  Send all the cached subscriptions to the new upstream peer.','line_number':46,'multiline':False]['text':'  Send all the cached subscriptions to the hiccuped pipe.','line_number':69,'multiline':False]['text':' make sure to use a multi-thread safe function to avoid race conditions with I/O threads','line_number':100,'multiline':False]['text':' where subscriptions are processed:','line_number':101,'multiline':False]['text':' room for future options here','line_number':112,'multiline':False]['text':'  User message sent upstream to XPUB socket','line_number':129,'multiline':False]['text':'  Process subscribe message','line_number':134,'multiline':False]['text':'  This used to filter out duplicate subscriptions,','line_number':135,'multiline':False]['text':'  however this is already done on the XPUB side and','line_number':136,'multiline':False]['text':'  doing it here as well breaks ZMQ_XPUB_VERBOSE','line_number':137,'multiline':False]['text':'  when there are forwarding devices involved.','line_number':138,'multiline':False]['text':'  Process unsubscribe message','line_number':148,'multiline':False]['text':'  User message sent upstream to XPUB socket','line_number':158,'multiline':False]['text':'  Subscription can be added/removed anytime.','line_number':171,'multiline':False]['text':'  If there's already a message prepared by a previous call to zmq_poll,','line_number':177,'multiline':False]['text':'  return it straight ahead.','line_number':178,'multiline':False]['text':'  TODO: This can result in infinite loop in the case of continuous','line_number':187,'multiline':False]['text':'  stream of non-matching messages which breaks the non-blocking recv','line_number':188,'multiline':False]['text':'  semantics.','line_number':189,'multiline':False]['text':'  Get a message using fair queueing algorithm.','line_number':191,'multiline':False]['text':'  If there's no message available, return immediately.','line_number':194,'multiline':False]['text':'  The same when error occurs.','line_number':195,'multiline':False]['text':'  Check whether the message matches at least one subscription.','line_number':199,'multiline':False]['text':'  Non-initial parts of the message are passed','line_number':200,'multiline':False]['text':'  Message doesn't match. Pop any remaining parts of the message','line_number':206,'multiline':False]['text':'  from the pipe.','line_number':207,'multiline':False]['text':'  There are subsequent parts of the partly-read message available.','line_number':217,'multiline':False]['text':'  If there's already a message prepared by a previous call to zmq_poll,','line_number':221,'multiline':False]['text':'  return straight ahead.','line_number':222,'multiline':False]['text':'  TODO: This can result in infinite loop in the case of continuous','line_number':226,'multiline':False]['text':'  stream of non-matching messages.','line_number':227,'multiline':False]['text':'  Get a message using fair queueing algorithm.','line_number':229,'multiline':False]['text':'  If there's no message available, return immediately.','line_number':232,'multiline':False]['text':'  The same when error occurs.','line_number':233,'multiline':False]['text':'  Check whether the message matches at least one subscription.','line_number':239,'multiline':False]['text':'  Message doesn't match. Pop any remaining parts of the message','line_number':245,'multiline':False]['text':'  from the pipe.','line_number':246,'multiline':False]['text':'  Create the subscription message.','line_number':268,'multiline':False]['text':'  Send it to the pipe.','line_number':273,'multiline':False]['text':'  If we reached the SNDHWM, and thus cannot send the subscription, drop','line_number':275,'multiline':False]['text':'  the subscription message instead. This matches the behaviour of','line_number':276,'multiline':False]['text':'  zmq_setsockopt(ZMQ_SUBSCRIBE, ...), which also drops subscriptions','line_number':277,'multiline':False]['text':'  when the SNDHWM is reached.','line_number':278,'multiline':False]