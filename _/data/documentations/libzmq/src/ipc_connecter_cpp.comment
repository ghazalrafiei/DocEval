['text':' SPDX-License-Identifier: MPL-2.0 ','line_number':1,'multiline':True]['text':'  Handle the error condition by attempt to reconnect.','line_number':44,'multiline':False]['text':'  Open the connecting socket.','line_number':56,'multiline':False]['text':'  Connect may succeed in synchronous manner.','line_number':59,'multiline':False]['text':'  Connection establishment may be delayed. Poll for its completion.','line_number':65,'multiline':False]['text':' TODO, tcp_connecter_t adds a connect timer in this case; maybe this','line_number':72,'multiline':False]['text':' should be done here as well (and then this could be pulled up to','line_number':73,'multiline':False]['text':' stream_connecter_base_t).','line_number':74,'multiline':False]['text':'stop connecting after called zmq_disconnect','line_number':76,'multiline':False]['text':'  Handle any other error condition by eventual reconnect.','line_number':84,'multiline':False]['text':'  Create the socket.','line_number':96,'multiline':False]['text':'  Set the non-blocking flag.','line_number':101,'multiline':False]['text':'  Connect to the remote peer.','line_number':104,'multiline':False]['text':'  Connect was successful immediately.','line_number':108,'multiline':False]['text':'  Translate other error codes indicating asynchronous connect has been','line_number':112,'multiline':False]['text':'  launched to a uniform EINPROGRESS.','line_number':113,'multiline':False]['text':'  Forward the error.','line_number':126,'multiline':False]['text':'  Following code should handle both Berkeley-derived socket','line_number':132,'multiline':False]['text':'  implementations and Solaris.','line_number':133,'multiline':False]['text':'  Assert if the error was caused by 0MQ bug.','line_number':144,'multiline':False]['text':'  Networking problems are OK. No need to assert.','line_number':145,'multiline':False]