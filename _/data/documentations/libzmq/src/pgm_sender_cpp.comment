['text':' SPDX-License-Identifier: MPL-2.0 ','line_number':1,'multiline':True]['text':'  Allocate 2 fds for PGM socket.','line_number':55,'multiline':False]['text':'  Fill fds from PGM transport and add them to the poller.','line_number':63,'multiline':False]['text':'  Set POLLIN. We will never want to stop polling for uplink = we never','line_number':72,'multiline':False]['text':'  want to stop processing NAKs.','line_number':73,'multiline':False]['text':'  Set POLLOUT for downlink_socket_handle.','line_number':78,'multiline':False]['text':'  In-event on sender side means NAK or SPMR receiving from some peer.','line_number':142,'multiline':False]['text':'  POLLOUT event from send socket. If write buffer is empty,','line_number':153,'multiline':False]['text':'  try to read new data from the encoder.','line_number':154,'multiline':False]['text':'  First two bytes (sizeof uint16_t) are used to store message','line_number':156,'multiline':False]['text':'  offset in following steps. Note that by passing our buffer to','line_number':157,'multiline':False]['text':'  the get data function we prevent it from returning its own buffer.','line_number':158,'multiline':False]['text':'  If there are no data to write stop polling for output.','line_number':176,'multiline':False]['text':'  Put offset information in the buffer.','line_number':184,'multiline':False]['text':'  Send the data.','line_number':194,'multiline':False]['text':'  We can write either all data or 0 which means rate limit reached.','line_number':197,'multiline':False]['text':' Stop polling handle and wait for tx timeout','line_number':204,'multiline':False]['text':'  Timer cancels on return by poller_base.','line_number':216,'multiline':False]['text':' Restart polling handle and retry sending','line_number':221,'multiline':False]