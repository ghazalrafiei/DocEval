['text':' SPDX-License-Identifier: MPL-2.0 ','line_number':1,'multiline':True]['text':'  Helper base class for encoders. It implements the state machine that','line_number':23,'multiline':False]['text':'  fills the outgoing buffer. Derived classes should implement individual','line_number':24,'multiline':False]['text':'  state machine actions.','line_number':25,'multiline':False]['text':'  The function returns a batch of binary data. The data','line_number':44,'multiline':False]['text':'  are filled to a supplied buffer. If no buffer is supplied (data_','line_number':45,'multiline':False]['text':'  points to NULL) decoder object will provide buffer of its own.','line_number':46,'multiline':False]['text':'  If there are no more data to return, run the state machine.','line_number':57,'multiline':False]['text':'  If there are still no data, return what we already have','line_number':58,'multiline':False]['text':'  in the buffer.','line_number':59,'multiline':False]['text':'  If there are no data in the buffer yet and we are able to','line_number':72,'multiline':False]['text':'  fill whole buffer in a single go, let's use zero-copy.','line_number':73,'multiline':False]['text':'  There's no disadvantage to it as we cannot stuck multiple','line_number':74,'multiline':False]['text':'  messages into the buffer anyway. Note that subsequent','line_number':75,'multiline':False]['text':'  write(s) are non-blocking, thus each single write writes','line_number':76,'multiline':False]['text':'  at most SO_SNDBUF bytes at once not depending on how large','line_number':77,'multiline':False]['text':'  is the chunk returned from here.','line_number':78,'multiline':False]['text':'  As a consequence, large messages being sent won't block','line_number':79,'multiline':False]['text':'  other engines running in the same I/O thread for excessive','line_number':80,'multiline':False]['text':'  amounts of time.','line_number':81,'multiline':False]['text':'  Copy data to the buffer. If the buffer is full, return.','line_number':90,'multiline':False]['text':'  Prototype of state machine action.','line_number':110,'multiline':False]['text':'  This function should be called from derived class to write the data','line_number':113,'multiline':False]['text':'  to the buffer and schedule next state machine action.','line_number':114,'multiline':False]['text':'  Where to get the data to write from.','line_number':129,'multiline':False]['text':'  How much data to write before next step should be executed.','line_number':132,'multiline':False]['text':'  Next step. If set to NULL, it means that associated data stream','line_number':135,'multiline':False]['text':'  is dead.','line_number':136,'multiline':False]['text':'  The buffer for encoded data.','line_number':141,'multiline':False]