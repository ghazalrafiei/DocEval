['text':' SPDX-License-Identifier: MPL-2.0 ','line_number':1,'multiline':True]['text':'  Get the pipe into passive state. That way, if the users starts by','line_number':12,'multiline':False]['text':'  polling on the associated file descriptor it will get woken up when','line_number':13,'multiline':False]['text':'  new command is posted.','line_number':14,'multiline':False]['text':'  TODO: Retrieve and deallocate commands inside the cpipe.','line_number':21,'multiline':False]['text':' Work around problem that other threads might still be in our','line_number':23,'multiline':False]['text':' send() method, by waiting on the mutex before disappearing.','line_number':24,'multiline':False]['text':' TODO: make a copy of array and signal outside the lock','line_number':36,'multiline':False]['text':'  Try to get the command straight away.','line_number':71,'multiline':False]['text':'  If the timeout is zero, it will be quicker to release the lock, giving other a chance to send a command','line_number':75,'multiline':False]['text':'  and immediately relock it.','line_number':76,'multiline':False]['text':'  Wait for signal from the command sender.','line_number':81,'multiline':False]['text':'  Another thread may already fetch the command','line_number':89,'multiline':False]