['text':' SPDX-License-Identifier: MPL-2.0 ','line_number':1,'multiline':True]['text':'  Z85 codec, taken from 0MQ RFC project, implements RFC32 Z85 encoding','line_number':69,'multiline':False]['text':'  Maps base 256 to base 85','line_number':71,'multiline':False]['text':'  Maps base 85 to base 256','line_number':82,'multiline':False]['text':'  We chop off lower 32 and higher 128 ranges','line_number':83,'multiline':False]['text':'  0xFF denotes invalid characters within this range','line_number':84,'multiline':False]['text':'  --------------------------------------------------------------------------','line_number':95,'multiline':False]['text':'  Encode a binary frame as a string; destination string MUST be at least','line_number':96,'multiline':False]['text':'  size * 5 / 4 bytes long plus 1 byte for the null terminator. Returns','line_number':97,'multiline':False]['text':'  dest. Size must be a multiple of 4.','line_number':98,'multiline':False]['text':'  Returns NULL and sets errno = EINVAL for invalid input.','line_number':99,'multiline':False]['text':'  Accumulate value in base 256 (binary)','line_number':111,'multiline':False]['text':'  Output value in base 85','line_number':114,'multiline':False]['text':'  --------------------------------------------------------------------------','line_number':129,'multiline':False]['text':'  Decode an encoded string into a binary frame; dest must be at least','line_number':130,'multiline':False]['text':'  strlen (string) * 4 / 5 bytes long. Returns dest. strlen (string)','line_number':131,'multiline':False]['text':'  must be a multiple of 5.','line_number':132,'multiline':False]['text':'  Returns NULL and sets errno = EINVAL for invalid input.','line_number':133,'multiline':False]['text':'  Accumulate value in base 85','line_number':146,'multiline':False]['text':'  Invalid z85 encoding, represented value exceeds 0xffffffff','line_number':148,'multiline':False]['text':'  Invalid z85 encoding, character outside range','line_number':154,'multiline':False]['text':'  Invalid z85 encoding, invalid character or represented value exceeds 0xffffffff','line_number':159,'multiline':False]['text':'  Output value in base 256','line_number':164,'multiline':False]['text':'  --------------------------------------------------------------------------','line_number':184,'multiline':False]['text':'  Generate a public/private keypair with libsodium.','line_number':185,'multiline':False]['text':'  Generated keys will be 40 byte z85-encoded strings.','line_number':186,'multiline':False]['text':'  Returns 0 on success, -1 on failure, setting errno.','line_number':187,'multiline':False]['text':'  Sets errno = ENOTSUP in the absence of a CURVE library.','line_number':188,'multiline':False]['text':'  --------------------------------------------------------------------------','line_number':216,'multiline':False]['text':'  Derive the public key from a private key using libsodium.','line_number':217,'multiline':False]['text':'  Derived key will be 40 byte z85-encoded string.','line_number':218,'multiline':False]['text':'  Returns 0 on success, -1 on failure, setting errno.','line_number':219,'multiline':False]['text':'  Sets errno = ENOTSUP in the absence of a CURVE library.','line_number':220,'multiline':False]['text':' Return codes are suppressed as none of these can actually fail.','line_number':237,'multiline':False]['text':'  --------------------------------------------------------------------------','line_number':252,'multiline':False]['text':'  Initialize a new atomic counter, which is set to zero','line_number':253,'multiline':False]['text':'  Se the value of the atomic counter','line_number':262,'multiline':False]['text':'  Increment the atomic counter, and return the old value','line_number':269,'multiline':False]['text':'  Decrement the atomic counter and return 1 (if counter >= 1), or','line_number':276,'multiline':False]['text':'  0 if counter hit zero.','line_number':277,'multiline':False]['text':'  Return actual value of atomic counter','line_number':284,'multiline':False]['text':'  Destroy atomic counter, and set reference to NULL','line_number':291,'multiline':False]