['text':' SPDX-License-Identifier: MPL-2.0 ','line_number':1,'multiline':True]['text':'  Fine as long as map is not cleared.','line_number':34,'multiline':False]['text':'  Size is cached to avoid iteration through recently added descriptors.','line_number':97,'multiline':False]['text':'  fd_entries_[i] may not be stored, since calls to','line_number':100,'multiline':False]['text':'  in_event/out_event may reallocate the vector','line_number':101,'multiline':False]['text':'  TODO: can the is_retired_fd be true at this point? if it','line_number':111,'multiline':False]['text':'  was retired before, we would already have continued, and I','line_number':112,'multiline':False]['text':'  don't see where it might have been modified','line_number':113,'multiline':False]['text':'  And if rc == 0, we can break instead of continuing','line_number':114,'multiline':False]['text':'  TODO: same as above','line_number':123,'multiline':False]['text':'  Family is not currently being iterated and can be safely','line_number':150,'multiline':False]['text':'  modified in-place. So later it can be skipped without','line_number':151,'multiline':False]['text':'  re-verifying its content.','line_number':152,'multiline':False]['text':'  Otherwise mark removed entries as retired. It will be cleaned up','line_number':155,'multiline':False]['text':'  at the end of the iteration. See zmq::select_t::loop','line_number':156,'multiline':False]['text':'  get_fd_family may fail and return AF_UNSPEC if the socket was not','line_number':177,'multiline':False]['text':'  successfully connected. In that case, we need to look for the','line_number':178,'multiline':False]['text':'  socket in all family_entries.','line_number':179,'multiline':False]['text':'  no-op... thread is stopped when no more fds or timers are registered','line_number':269,'multiline':False]['text':'  Execute any due timers.','line_number':280,'multiline':False]['text':' TODO sleep for timeout','line_number':295,'multiline':False]['text':'
            On Windows select does not allow to mix descriptors from different
            service providers. It seems to work for AF_INET and AF_INET6,
            but fails for AF_INET and VMCI. The workaround is to use
            WSAEventSelect and WSAWaitForMultipleEvents to wait, then use
            select to find out what actually changed. WSAWaitForMultipleEvents
            cannot be used alone, because it does not support more than 64 events
            which is not enough.

            To reduce unnecessary overhead, WSA is only used when there are more
            than one family. Moreover, AF_INET and AF_INET6 are considered the same
            family because Windows seems to handle them properly.
            See get_fd_family for details.
        ','line_number':307,'multiline':True]['text':'  If there is just one family, there is no reason to use WSA events.','line_number':322,'multiline':False]['text':' TODO: I don't really understand why we are doing this. If any of','line_number':326,'multiline':False]['text':' the events was signaled, we will call select for each fd_family','line_number':327,'multiline':False]['text':' afterwards. The only benefit is if none of the events was','line_number':328,'multiline':False]['text':' signaled, then we continue early.','line_number':329,'multiline':False]['text':' IMHO, either WSAEventSelect/WSAWaitForMultipleEvents or select','line_number':330,'multiline':False]['text':' should be used, but not both','line_number':331,'multiline':False]['text':'  http://stackoverflow.com/q/35043420/188530','line_number':346,'multiline':False]['text':'  There is no reason to wait again after WSAWaitForMultipleEvents.','line_number':381,'multiline':False]['text':'  Simply collect what is ready.','line_number':382,'multiline':False]['text':'  select will fail when run with empty sets.','line_number':400,'multiline':False]['text':' On Windows we don't need to copy the whole fd_set.','line_number':433,'multiline':False]['text':' SOCKETS are continuous from the beginning of fd_array in fd_set.','line_number':434,'multiline':False]['text':' We just need to copy fd_count elements of fd_array.','line_number':435,'multiline':False]['text':' We gain huge memcpy() improvement if number of used SOCKETs is much lower than FD_SETSIZE.','line_number':436,'multiline':False]['text':' On Windows we don't need to copy the whole fd_set.','line_number':457,'multiline':False]['text':' SOCKETS are continuous from the beginning of fd_array in fd_set.','line_number':458,'multiline':False]['text':' We just need to copy fd_count elements of fd_array.','line_number':459,'multiline':False]['text':' We gain huge memcpy() improvement if number of used SOCKETs is much lower than FD_SETSIZE.','line_number':460,'multiline':False]['text':' cache the results of determine_fd_family, as this is frequently called','line_number':525,'multiline':False]['text':' for the same sockets, and determine_fd_family is expensive','line_number':526,'multiline':False]['text':' just overwrite a random entry','line_number':542,'multiline':False]['text':' could be optimized by some LRU strategy','line_number':543,'multiline':False]['text':'  Use sockaddr_storage instead of sockaddr to accommodate different structure sizes','line_number':552,'multiline':False]['text':'  AF_INET and AF_INET6 can be mixed in select','line_number':569,'multiline':False]['text':'  TODO: If proven otherwise, should simply return addr.sa_family','line_number':570,'multiline':False]