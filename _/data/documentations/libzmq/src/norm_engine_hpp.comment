['text':' create NORM instance, session, etc','line_number':32,'multiline':False]['text':'  i_engine interface implementation.','line_number':38,'multiline':False]['text':'  Plug the engine to the session.','line_number':39,'multiline':False]['text':'  Terminate and deallocate the engine. Note that 'detached'','line_number':43,'multiline':False]['text':'  events are not fired on termination.','line_number':44,'multiline':False]['text':'  This method is called by the session to signalise that more','line_number':47,'multiline':False]['text':'  messages can be written to the pipe.','line_number':48,'multiline':False]['text':'  This method is called by the session to signalise that there','line_number':51,'multiline':False]['text':'  are messages to send available.','line_number':52,'multiline':False]['text':' i_poll_events interface implementation.','line_number':59,'multiline':False]['text':' (we only need in_event() for NormEvent notification)','line_number':60,'multiline':False]['text':' (i.e., don't have any output events or timers (yet))','line_number':61,'multiline':False]['text':' Used to keep track of streams from multiple senders','line_number':75,'multiline':False]['text':' These are used to feed data to decoder','line_number':95,'multiline':False]['text':' and its underlying "msg" buffer','line_number':96,'multiline':False]['text':' This invokes the decoder "decode" method','line_number':101,'multiline':False]['text':' returning 0 if more data is needed,','line_number':102,'multiline':False]['text':' 1 if the message is complete, If an error','line_number':103,'multiline':False]['text':' occurs the 'sync' is dropped and the','line_number':104,'multiline':False]['text':' decoder re-initialized','line_number':105,'multiline':False]['text':' end class zmq::norm_engine_t::NormRxStreamState::List','line_number':136,'multiline':False]['text':' end class zmq::norm_engine_t::NormRxStreamState','line_number':160,'multiline':False]['text':' Sender state','line_number':171,'multiline':False]['text':' for tx messages (we use v2 for now)','line_number':173,'multiline':False]['text':' zmq has msg(s) to send','line_number':177,'multiline':False]['text':' norm has tx queue vacancy','line_number':178,'multiline':False]['text':' TBD - maybe don't need buffer if can access zmq message buffer directly?','line_number':179,'multiline':False]['text':' Receiver state','line_number':184,'multiline':False]['text':' Lists of norm rx streams from remote senders','line_number':185,'multiline':False]['text':' zmq ready to receive msg(s)','line_number':186,'multiline':False]['text':' rx streams waiting for data reception','line_number':188,'multiline':False]['text':' rx streams ready for NormStreamRead()','line_number':190,'multiline':False]['text':' rx streams w/ msg ready for push to zmq','line_number':192,'multiline':False]['text':' filedescriptor used to read norm events through the wrapper','line_number':196,'multiline':False]['text':' end class norm_engine_t','line_number':201,'multiline':False]['text':' ZMQ_HAVE_NORM','line_number':204,'multiline':False]['text':' !__ZMQ_NORM_ENGINE_HPP_INCLUDED__','line_number':206,'multiline':False]