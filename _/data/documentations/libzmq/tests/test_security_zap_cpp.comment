['text':' SPDX-License-Identifier: MPL-2.0 ','line_number':1,'multiline':True]['text':'unused_','line_number':8,'multiline':True]['text':'unused_','line_number':13,'multiline':True]['text':'unused_','line_number':18,'multiline':True]['text':'unused_','line_number':23,'multiline':True]['text':'unused_','line_number':28,'multiline':True]['text':'unused_','line_number':33,'multiline':True]['text':'unused_','line_number':38,'multiline':True]['text':'unused_','line_number':43,'multiline':True]['text':'unused_','line_number':48,'multiline':True]['text':'  there may be more than one ZAP request due to repeated attempts by the','line_number':93,'multiline':False]['text':'  client (actually only in case if ZAP status code 300)','line_number':94,'multiline':False]['text':'  there may be more than one ZAP request due to repeated attempts by the','line_number':113,'multiline':False]['text':'  client','line_number':114,'multiline':False]['text':' we can use a 0 timeout here, since the client socket is already closed','line_number':141,'multiline':False]['text':'  TODO the failed status (300/500) should be observable as monitoring events on the client side as well (they are','line_number':227,'multiline':False]['text':'  already transmitted as an ERROR message)','line_number':228,'multiline':False]['text':' TODO this looks wrong, where will the enforce value be used?','line_number':273,'multiline':False]['text':'  no ZAP handler','line_number':275,'multiline':False]