['text':' SPDX-License-Identifier: MPL-2.0 ','line_number':1,'multiline':True]['text':'  We have to give the connects time to finish otherwise the requests','line_number':26,'multiline':False]['text':'  will not properly round-robin. We could alternatively connect the','line_number':27,'multiline':False]['text':'  REQ sockets to the REP sockets.','line_number':28,'multiline':False]['text':' Send our peer-replies, and expect every REP it used once in order','line_number':31,'multiline':False]['text':' Wait for connects to finish.','line_number':68,'multiline':False]['text':' There still is a race condition when a stale peer's message','line_number':72,'multiline':False]['text':' arrives at the REQ just after a request was sent to that peer.','line_number':73,'multiline':False]['text':' To avoid that happening in the test, sleep for a bit.','line_number':74,'multiline':False]['text':' Receive on router i','line_number':80,'multiline':False]['text':' Send back replies on all routers','line_number':83,'multiline':False]['text':' Receive only the good reply','line_number':90,'multiline':False]['text':' Send a multi-part request.','line_number':111,'multiline':False]['text':' Receive peer routing id','line_number':117,'multiline':False]['text':' Receive the rest.','line_number':130,'multiline':False]['text':' Send back a single-part reply.','line_number':133,'multiline':False]['text':' Receive reply.','line_number':138,'multiline':False]['text':' SHALL route outgoing messages to connected peers using a round-robin','line_number':201,'multiline':False]['text':' strategy.','line_number':202,'multiline':False]['text':' The request and reply messages SHALL have this format on the wire:','line_number':206,'multiline':False]['text':' * A delimiter, consisting of an empty frame, added by the REQ socket.','line_number':207,'multiline':False]['text':' * One or more data frames, comprising the message visible to the','line_number':208,'multiline':False]['text':'   application.','line_number':209,'multiline':False]['text':' SHALL block on sending, or return a suitable error, when it has no','line_number':213,'multiline':False]['text':' connected peers.','line_number':214,'multiline':False]['text':' SHALL accept an incoming message only from the last peer that it sent a','line_number':217,'multiline':False]['text':' request to.','line_number':218,'multiline':False]['text':' SHALL discard silently any messages received from other peers.','line_number':219,'multiline':False]['text':' TODO PH: this test is still failing; disabled for now to allow build to','line_number':220,'multiline':False]['text':' complete.','line_number':221,'multiline':False]['text':' RUN_TEST (test_req_only_listens_to_current_peer_inproc);','line_number':222,'multiline':False]['text':' RUN_TEST (test_req_only_listens_to_current_peer_tcp);','line_number':223,'multiline':False]