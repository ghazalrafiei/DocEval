['text':' SPDX-License-Identifier: MPL-2.0 ','line_number':1,'multiline':True]['text':'  *************************************************************************
    NOTE to contributors. This file comprises the principal public contract
    for ZeroMQ API users. Any change to this file supplied in a stable
    release SHOULD not break existing applications.
    In practice this means that the value of constants must not change, and
    that old values may not be reused for new constants.
    *************************************************************************
','line_number':2,'multiline':True]['text':'  Version macros for compile-time API version detection                     ','line_number':14,'multiline':True]['text':'  Handle DSO symbol visibility                                             ','line_number':34,'multiline':True]['text':'  Define integer types needed for event interface                          ','line_number':57,'multiline':True]['text':' needed for sigset_t definition in zmq_ppoll','line_number':82,'multiline':False]['text':'  32-bit AIX's pollfd struct members are called reqevents and rtnevents so it','line_number':86,'multiline':False]['text':'  defines compatibility macros for them. Need to include that header first to','line_number':87,'multiline':False]['text':'  stop build failures since zmq_pollset_t defines them as events and revents.','line_number':88,'multiline':False]['text':'****************************************************************************','line_number':94,'multiline':True]['text':'  0MQ errors.                                                               ','line_number':95,'multiline':True]['text':'****************************************************************************','line_number':96,'multiline':True]['text':'  A number random enough not to collide with different errno ranges on      ','line_number':98,'multiline':True]['text':'  different OSes. The assumption is that error_t is at least 32-bit type.   ','line_number':99,'multiline':True]['text':'  On Windows platform some of the standard POSIX errnos are not defined.    ','line_number':102,'multiline':True]['text':'  Native 0MQ error codes.                                                   ','line_number':158,'multiline':True]['text':'  This function retrieves the errno as it is known to 0MQ library. The goal ','line_number':164,'multiline':True]['text':'  of this function is to make the code 100% portable, including where 0MQ   ','line_number':165,'multiline':True]['text':'  compiled with certain CRT library (on Windows) is linked to an            ','line_number':166,'multiline':True]['text':'  application that uses different CRT library.                              ','line_number':167,'multiline':True]['text':'  Resolves system errors and 0MQ errors to human-readable string.           ','line_number':170,'multiline':True]['text':'  Run-time API version detection                                            ','line_number':173,'multiline':True]['text':'****************************************************************************','line_number':176,'multiline':True]['text':'  0MQ infrastructure (a.k.a. context) initialisation & termination.         ','line_number':177,'multiline':True]['text':'****************************************************************************','line_number':178,'multiline':True]['text':'  Context options                                                           ','line_number':180,'multiline':True]['text':'  Default for new contexts                                                  ','line_number':192,'multiline':True]['text':'  Old (legacy) API                                                          ','line_number':204,'multiline':True]['text':'****************************************************************************','line_number':210,'multiline':True]['text':'  0MQ message definition.                                                   ','line_number':211,'multiline':True]['text':'****************************************************************************','line_number':212,'multiline':True]['text':' Some architectures, like sparc64 and some variants of aarch64, enforce pointer
 * alignment and raise sigbus on violations. Make sure applications allocate
 * zmq_msg_t on addresses aligned on a pointer-size boundary to avoid this issue.
 ','line_number':214,'multiline':True]['text':'****************************************************************************','line_number':253,'multiline':True]['text':'  0MQ socket definition.                                                    ','line_number':254,'multiline':True]['text':'****************************************************************************','line_number':255,'multiline':True]['text':'  Socket types.                                                             ','line_number':257,'multiline':True]['text':'  Deprecated aliases                                                        ','line_number':271,'multiline':True]['text':'  Socket options.                                                           ','line_number':275,'multiline':True]['text':'  Message options                                                           ','line_number':353,'multiline':True]['text':'  Send/recv options.                                                        ','line_number':357,'multiline':True]['text':'  Security mechanisms                                                       ','line_number':361,'multiline':True]['text':'  RADIO-DISH protocol                                                       ','line_number':367,'multiline':True]['text':'  Deprecated options and aliases                                            ','line_number':370,'multiline':True]['text':'  Deprecated Message options                                                ','line_number':383,'multiline':True]['text':'****************************************************************************','line_number':386,'multiline':True]['text':'  GSSAPI definitions                                                        ','line_number':387,'multiline':True]['text':'****************************************************************************','line_number':388,'multiline':True]['text':'  GSSAPI principal name types                                               ','line_number':390,'multiline':True]['text':'****************************************************************************','line_number':395,'multiline':True]['text':'  0MQ socket events and monitoring                                          ','line_number':396,'multiline':True]['text':'****************************************************************************','line_number':397,'multiline':True]['text':'  Socket transport events (TCP, IPC and TIPC only)                          ','line_number':399,'multiline':True]['text':'  Unspecified system errors during handshake. Event value is an errno.      ','line_number':413,'multiline':True]['text':'  Handshake complete successfully with successful authentication (if        *
 *  enabled). Event value is unused.                                          ','line_number':415,'multiline':True]['text':'  Protocol errors between ZMTP peers or between server and ZAP handler.     *
 *  Event value is one of ZMQ_PROTOCOL_ERROR_*                                ','line_number':418,'multiline':True]['text':'  Failed authentication requests. Event value is the numeric ZAP status     *
 *  code, i.e. 300, 400 or 500.                                               ','line_number':421,'multiline':True]['text':' the following two may be due to erroneous configuration of a peer','line_number':436,'multiline':False]['text':'****************************************************************************','line_number':463,'multiline':True]['text':'  Hide socket fd type; this was before zmq_poller_event_t typedef below     ','line_number':464,'multiline':True]['text':'****************************************************************************','line_number':465,'multiline':True]['text':' Windows uses a pointer-sized unsigned integer to store the socket fd.','line_number':468,'multiline':False]['text':'****************************************************************************','line_number':478,'multiline':True]['text':'  Deprecated I/O multiplexing. Prefer using zmq_poller API                  ','line_number':479,'multiline':True]['text':'****************************************************************************','line_number':480,'multiline':True]['text':'****************************************************************************','line_number':499,'multiline':True]['text':'  Message proxying                                                          ','line_number':500,'multiline':True]['text':'****************************************************************************','line_number':501,'multiline':True]['text':'****************************************************************************','line_number':509,'multiline':True]['text':'  Probe library capabilities                                                ','line_number':510,'multiline':True]['text':'****************************************************************************','line_number':511,'multiline':True]['text':'  Deprecated aliases ','line_number':516,'multiline':True]['text':'  Deprecated methods ','line_number':521,'multiline':True]['text':'****************************************************************************','line_number':531,'multiline':True]['text':'  Encryption functions                                                      ','line_number':532,'multiline':True]['text':'****************************************************************************','line_number':533,'multiline':True]['text':'  Encode data with Z85 encoding. Returns encoded data                       ','line_number':535,'multiline':True]['text':'  Decode data with Z85 encoding. Returns decoded data                       ','line_number':539,'multiline':True]['text':'  Generate z85-encoded public and private keypair with libsodium. ','line_number':542,'multiline':True]['text':'  Returns 0 on success.                                                     ','line_number':543,'multiline':True]['text':'  Derive the z85-encoded public key from the z85-encoded secret key.        ','line_number':546,'multiline':True]['text':'  Returns 0 on success.                                                     ','line_number':547,'multiline':True]['text':'****************************************************************************','line_number':551,'multiline':True]['text':'  Atomic utility methods                                                    ','line_number':552,'multiline':True]['text':'****************************************************************************','line_number':553,'multiline':True]['text':'****************************************************************************','line_number':562,'multiline':True]['text':'  Scheduling timers                                                         ','line_number':563,'multiline':True]['text':'****************************************************************************','line_number':564,'multiline':True]['text':'****************************************************************************','line_number':582,'multiline':True]['text':'  These functions are not documented by man pages -- use at your own risk.  ','line_number':583,'multiline':True]['text':'  If you need these to be part of the formal ZMQ API, then (a) write a man  ','line_number':584,'multiline':True]['text':'  page, and (b) write a test case in tests.                                 ','line_number':585,'multiline':True]['text':'****************************************************************************','line_number':586,'multiline':True]['text':'  Helper functions are used by perf tests so that they don't have to care   ','line_number':588,'multiline':True]['text':'  about minutiae of time-related functions on different OS platforms.       ','line_number':589,'multiline':True]['text':'  Starts the stopwatch. Returns the handle to the watch.                    ','line_number':591,'multiline':True]['text':'  Returns the number of microseconds elapsed since the stopwatch was        ','line_number':594,'multiline':True]['text':'  started, but does not stop or deallocate the stopwatch.                   ','line_number':595,'multiline':True]['text':'  Stops the stopwatch. Returns the number of microseconds elapsed since     ','line_number':598,'multiline':True]['text':'  the stopwatch was started, and deallocates that watch.                    ','line_number':599,'multiline':True]['text':'  Sleeps for specified number of seconds.                                   ','line_number':602,'multiline':True]['text':' Start a thread. Returns a handle to the thread.                            ','line_number':607,'multiline':True]['text':' Wait for thread to complete then free up resources.                        ','line_number':610,'multiline':True]['text':'****************************************************************************','line_number':614,'multiline':True]['text':'  These functions are DRAFT and disabled in stable releases, and subject to ','line_number':615,'multiline':True]['text':'  change at ANY time until declared stable.                                 ','line_number':616,'multiline':True]['text':'****************************************************************************','line_number':617,'multiline':True]['text':'  DRAFT Socket types.                                                       ','line_number':621,'multiline':True]['text':'  DRAFT Socket options.                                                     ','line_number':632,'multiline':True]['text':'  DRAFT ZMQ_NORM_MODE options                                               ','line_number':666,'multiline':True]['text':'  DRAFT ZMQ_RECONNECT_STOP options                                          ','line_number':673,'multiline':True]['text':'  DRAFT Context options                                                     ','line_number':678,'multiline':True]['text':'  DRAFT Context methods.                                                    ','line_number':681,'multiline':True]['text':'  DRAFT Socket methods.                                                     ','line_number':691,'multiline':True]['text':'  DRAFT Msg methods.                                                        ','line_number':696,'multiline':True]['text':'  DRAFT Msg property names.                                                 ','line_number':704,'multiline':True]['text':'  Router notify options                                                     ','line_number':710,'multiline':True]['text':'****************************************************************************','line_number':714,'multiline':True]['text':'  Poller polling on sockets,fd and thread-safe sockets                      ','line_number':715,'multiline':True]['text':'****************************************************************************','line_number':716,'multiline':True]['text':'  DRAFT Socket monitoring events                                            ','line_number':752,'multiline':True]['text':' Windows has no sigset_t','line_number':771,'multiline':False]['text':' ZMQ_BUILD_DRAFT_API','line_number':778,'multiline':False]