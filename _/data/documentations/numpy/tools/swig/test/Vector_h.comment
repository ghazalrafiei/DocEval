['text':' The following macro defines the prototypes for a family of','line_number':4,'multiline':False]['text':' functions that work with 1D arrays with the forms','line_number':5,'multiline':False]['text':'','line_number':6,'multiline':False]['text':'     TYPE SNAMELength( TYPE vector[3]);','line_number':7,'multiline':False]['text':'     TYPE SNAMEProd(   TYPE * series, int size);','line_number':8,'multiline':False]['text':'     TYPE SNAMESum(    int size, TYPE * series);','line_number':9,'multiline':False]['text':'     void SNAMEReverse(TYPE array[3]);','line_number':10,'multiline':False]['text':'     void SNAMEOnes(   TYPE * array,  int size);','line_number':11,'multiline':False]['text':'     void SNAMEZeros(  int size, TYPE * array);','line_number':12,'multiline':False]['text':'     void SNAMEEOSplit(TYPE vector[3], TYPE even[3], TYPE odd[3]);','line_number':13,'multiline':False]['text':'     void SNAMETwos(   TYPE * twoVec, int size);','line_number':14,'multiline':False]['text':'     void SNAMEThrees( int size, TYPE * threeVec);','line_number':15,'multiline':False]['text':'','line_number':16,'multiline':False]['text':' for any specified type TYPE (for example: short, unsigned int, long','line_number':17,'multiline':False]['text':' long, etc.) with given short name SNAME (for example: short, uint,','line_number':18,'multiline':False]['text':' longLong, etc.).  The macro is then expanded for the given','line_number':19,'multiline':False]['text':' TYPE/SNAME pairs.  The resulting functions are for testing numpy','line_number':20,'multiline':False]['text':' interfaces, respectively, for:','line_number':21,'multiline':False]['text':'','line_number':22,'multiline':False]['text':'  * 1D input arrays, hard-coded length','line_number':23,'multiline':False]['text':'  * 1D input arrays','line_number':24,'multiline':False]['text':'  * 1D input arrays, data last','line_number':25,'multiline':False]['text':'  * 1D in-place arrays, hard-coded length','line_number':26,'multiline':False]['text':'  * 1D in-place arrays','line_number':27,'multiline':False]['text':'  * 1D in-place arrays, data last','line_number':28,'multiline':False]['text':'  * 1D argout arrays, hard-coded length','line_number':29,'multiline':False]['text':'  * 1D argout arrays','line_number':30,'multiline':False]['text':'  * 1D argout arrays, data last','line_number':31,'multiline':False]['text':'','line_number':32,'multiline':False]