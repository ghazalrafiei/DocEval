['text':' avoid np.zeros's lazy allocation that might cause','line_number':24,'multiline':False]['text':' page faults during benchmark','line_number':25,'multiline':False]['text':' avoid np.zeros's lazy allocation that might cause','line_number':34,'multiline':False]['text':' page faults during benchmark','line_number':35,'multiline':False]['text':' Having copy as a `mode` of the block3D','line_number':90,'multiline':False]['text':' allows us to directly compare the benchmark of block','line_number':91,'multiline':False]['text':' to that of a direct memory copy into new buffers with','line_number':92,'multiline':False]['text':' the ASV framework.','line_number':93,'multiline':False]['text':' block and copy will be plotted on the same graph','line_number':94,'multiline':False]['text':' as opposed to being displayed as separate benchmarks','line_number':95,'multiline':False]['text':' Slow setup method: hence separated from the others above','line_number':101,'multiline':False]['text':' mode == 'copy'','line_number':132,'multiline':False]['text':' Retain old benchmark name for backward compat','line_number':135,'multiline':False]