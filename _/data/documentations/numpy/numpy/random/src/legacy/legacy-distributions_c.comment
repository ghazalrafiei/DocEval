['text':'
 * This file contains generation code for distribution that have been modified
 * since Generator was introduced. These are preserved using identical code
 * to what was in NumPy 1.16 so that the stream of values generated by
 * RandomState is not changed when there are changes that affect Generator.
 *
 * These functions should not be changed except if they contain code that
 * cannot be compiled. They should not be changed for bug fixes, performance
 * improvements that can change the values produced, or enhancements to precision.
 ','line_number':1,'multiline':True]['text':' Polar method, a more efficient version of the Box-Muller approach. ','line_number':33,'multiline':True]['text':' Keep for next call ','line_number':35,'multiline':True]['text':' We use -log(1-U) since U is [0, 1) ','line_number':43,'multiline':True]['text':' Insert nan guard here to avoid changing the stream ','line_number':132,'multiline':True]['text':' Use Johnk's algorithm ','line_number':193,'multiline':True]['text':' D1 = 2*sqrt(2/e) ','line_number':288,'multiline':True]['text':' D2 = 3 - 2*sqrt(3/e) ','line_number':289,'multiline':True]['text':' 16 for 16-decimal-digit precision in D1 and D2 ','line_number':314,'multiline':True]['text':' fast rejection: ','line_number':321,'multiline':True]['text':' fast acceptance: ','line_number':329,'multiline':True]['text':' fast rejection: ','line_number':333,'multiline':True]['text':' log(0.0) is ok here, since always accept ','line_number':336,'multiline':True]['text':' acceptance ','line_number':338,'multiline':True]['text':' this is a correction to HRUA* by Ivan Frohne in rv.py ','line_number':341,'multiline':True]['text':' another fix from rv.py to allow sample to exceed popsize/2 ','line_number':345,'multiline':True]['text':'
 * This is a wrapper function that matches the expected template. In the legacy
 * generator, all int types are long, so this accepts int64 and then converts
 * them to longs. These values must be in bounds for long and this is checked
 * outside this function
 *
 * The remaining are included for the return type only
 ','line_number':369,'multiline':True]['text':' with double precision rho is zero until 1.4e-8 ','line_number':424,'multiline':True]['text':'
       * second order taylor expansion around kappa = 0
       * precise until relatively large kappas as second order is 0
       ','line_number':426,'multiline':True]['text':' Path for 1e-5 <= kappa <= 1e6 ','line_number':432,'multiline':True]['text':'
       * V==0.0 is ok here since Y >= 0 always leads
       * to accept, while Y < 0 always rejects
       ','line_number':444,'multiline':True]