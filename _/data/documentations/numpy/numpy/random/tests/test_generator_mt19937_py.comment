['text':' seed must be an unsigned 32 bit integer','line_number':67,'multiline':False]['text':' seed must be an unsigned integer','line_number':72,'multiline':False]['text':' Tests the corner case of n == 0 for the binomial distribution.','line_number':83,'multiline':False]['text':' binomial(0, p) should be zero for any p in [0, 1].','line_number':84,'multiline':False]['text':' This test addresses issue #3480.','line_number':85,'multiline':False]['text':' Issue #4571.','line_number':92,'multiline':False]['text':' gh-3173','line_number':110,'multiline':False]['text':' Error cases...','line_number':157,'multiline':False]['text':' `colors` must be a 1-d sequence','line_number':159,'multiline':False]['text':' Negative nsample','line_number':163,'multiline':False]['text':' Negative color','line_number':167,'multiline':False]['text':' nsample exceeds sum(colors)','line_number':171,'multiline':False]['text':' nsample exceeds sum(colors) (edge case of empty colors)','line_number':175,'multiline':False]['text':' Validation errors associated with very large values in colors.','line_number':179,'multiline':False]['text':' Set the seed, but in fact, all the results in this test are','line_number':191,'multiline':False]['text':' deterministic, so we don't really need this.','line_number':192,'multiline':False]['text':' Cases for nsample:','line_number':219,'multiline':False]['text':'     nsample < 10','line_number':220,'multiline':False]['text':'     10 <= nsample < colors.sum()/2','line_number':221,'multiline':False]['text':'     colors.sum()/2 < nsample < colors.sum() - 10','line_number':222,'multiline':False]['text':'     colors.sum() - 10 < nsample < colors.sum()','line_number':223,'multiline':False]['text':' This sample is large enough to compare its mean to','line_number':243,'multiline':False]['text':' the expected values.','line_number':244,'multiline':False]['text':' Make sure the cached every-other-Gaussian is reset.','line_number':296,'multiline':False]['text':' When the state is saved with a cached Gaussian, make sure the','line_number':303,'multiline':False]['text':' cached Gaussian is restored.','line_number':304,'multiline':False]['text':' Ensure that the negative binomial results take floating point','line_number':314,'multiline':False]['text':' arguments without truncation.','line_number':315,'multiline':False]['text':' valid integer/boolean types','line_number':322,'multiline':False]['text':' Test for ticket #1690','line_number':426,'multiline':False]['text':' Test for ticket #1690','line_number':441,'multiline':False]['text':' Don't use fixed seed','line_number':456,'multiline':False]['text':' We use a sha256 hash of generated sequences of 1000 samples','line_number':493,'multiline':False]['text':' in the range [0, 6) for all but bool, where the range','line_number':494,'multiline':False]['text':' is [0, 2). Hashes are for little endian numbers.','line_number':495,'multiline':False]['text':' view as little endian for hash','line_number':509,'multiline':False]['text':' bools do not depend on endianness','line_number':520,'multiline':False]['text':' view as little endian for hash','line_number':533,'multiline':False]['text':' When stored in Numpy arrays, `lbnd` is casted','line_number':617,'multiline':False]['text':' as np.int64, and `ubnd` is casted as np.uint64.','line_number':618,'multiline':False]['text':' Checking whether `lbnd` >= `ubnd` used to be','line_number':619,'multiline':False]['text':' done solely via direct comparison, which is incorrect','line_number':620,'multiline':False]['text':' because when Numpy tries to compare both numbers,','line_number':621,'multiline':False]['text':' it casts both to np.float64 because there is','line_number':622,'multiline':False]['text':' no integer superset of np.int64 and np.uint64. However,','line_number':623,'multiline':False]['text':' `ubnd` is too large to be represented in np.float64,','line_number':624,'multiline':False]['text':' causing it be round down to np.iinfo(np.int64).max,','line_number':625,'multiline':False]['text':' leading to a ValueError because `lbnd` now equals','line_number':626,'multiline':False]['text':' the new `ubnd`.','line_number':627,'multiline':False]['text':' None of these function calls should','line_number':634,'multiline':False]['text':' generate a ValueError now.','line_number':635,'multiline':False]['text':' See gh-7203','line_number':640,'multiline':False]['text':' gh-7284: Ensure that we get Python data types','line_number':655,'multiline':False]['text':' See gh-7203','line_number':661,'multiline':False]['text':' See gh-7203','line_number':675,'multiline':False]['text':' chi2max is the maximum acceptable chi-squared value.','line_number':692,'multiline':False]['text':' p-value ~4.6e-25','line_number':695,'multiline':False]['text':' p-value ~7.7e-30','line_number':696,'multiline':False]['text':' p-value ~3.0e-25','line_number':697,'multiline':False]['text':' p-value ~3.5e-25','line_number':698,'multiline':False]['text':' Regression test for gh-14774.','line_number':702,'multiline':False]['text':' Make sure the random distribution returns the correct value for a','line_number':712,'multiline':False]['text':' given seed','line_number':713,'multiline':False]['text':' Test masked rejection sampling algorithm to generate array of','line_number':725,'multiline':False]['text':' uint32 in an interval.','line_number':726,'multiline':False]['text':' Tests whether integers with closed=True can generate the','line_number':739,'multiline':False]['text':' maximum allowed Python int that can be converted','line_number':740,'multiline':False]['text':' into a C long. Previous implementations of this','line_number':741,'multiline':False]['text':' method have thrown an OverflowError when attempting','line_number':742,'multiline':False]['text':' to generate this integer.','line_number':743,'multiline':False]['text':' The probability of a 1 in the least significant bit is 0.25.','line_number':783,'multiline':False]['text':' With a sample size of 100000, the probability that num_ones_in_lsb','line_number':784,'multiline':False]['text':' is outside the following range is less than 5e-11.','line_number':785,'multiline':False]['text':' gh-13087','line_number':847,'multiline':False]['text':' Check scalar','line_number':856,'multiline':False]['text':' Check 0-d array','line_number':868,'multiline':False]['text':' Check multi dimensional array','line_number':881,'multiline':False]['text':' Check zero-size','line_number':890,'multiline':False]['text':' gh 9867','line_number':915,'multiline':False]['text':' Test lists, arrays (of various dtypes), and multidimensional versions','line_number':942,'multiline':False]['text':' of both, c-contiguous or not:','line_number':943,'multiline':False]['text':' gh-11442','line_number':953,'multiline':False]['text':' gh-4270','line_number':957,'multiline':False]['text':' gh-3263','line_number':1000,'multiline':False]['text':' Verify that the original x0 was modified in-place as expected.','line_number':1111,'multiline':False]['text':' gh-3173','line_number':1187,'multiline':False]['text':' gh-2089','line_number':1199,'multiline':False]['text':' gh-15876','line_number':1203,'multiline':False]['text':' 1.0e-10 -> runtime x 10; 1e-11 -> runtime x 200, etc.','line_number':1220,'multiline':False]['text':' Use alpha.max() < 0.1 to trigger stick breaking code path','line_number':1236,'multiline':False]['text':' This set of parameters includes inputs with alpha.max() >= 0.1 and','line_number':1244,'multiline':False]['text':' alpha.max() < 0.1 to exercise both generation methods within the','line_number':1245,'multiline':False]['text':' dirichlet code.','line_number':1246,'multiline':False]['text':' Test nbad = 0','line_number':1332,'multiline':False]['text':' Test ngood = 0','line_number':1341,'multiline':False]['text':' contiguous path:','line_number':1401,'multiline':False]['text':' non-contiguous path:','line_number':1404,'multiline':False]['text':' Check for default size, was raising deprecation warning','line_number':1435,'multiline':False]['text':' Check that non symmetric covariance input raises exception when','line_number':1439,'multiline':False]['text':' check_valid='raises' if using default svd method.','line_number':1440,'multiline':False]['text':' Check that non positive-semidefinite covariance warns with','line_number':1446,'multiline':False]['text':' RuntimeWarning','line_number':1447,'multiline':False]['text':' and that it doesn't warn with RuntimeWarning check_valid='ignore'','line_number':1455,'multiline':False]['text':' and that it raises with RuntimeWarning check_valid='raises'','line_number':1459,'multiline':False]['text':' check degenerate samples from singular covariance matrix','line_number':1465,'multiline':False]['text':' these are pretty loose and are only designed to detect major errors','line_number':1508,'multiline':False]['text':' Verify that p=0 raises an exception.','line_number':1527,'multiline':False]['text':' Verify that values of p and n that would result in an overflow','line_number':1532,'multiline':False]['text':' or infinite loop raise an exception.','line_number':1533,'multiline':False]['text':' For some reason on 32-bit x86 Ubuntu 12.10 the [1, 0] entry in this','line_number':1591,'multiline':False]['text':' matrix differs by 24 nulps. Discussion:','line_number':1592,'multiline':False]['text':'   https://mail.python.org/pipermail/numpy-discussion/2012-September/063801.html','line_number':1593,'multiline':False]['text':' Consensus is that this is probably some gcc quirk that affects','line_number':1594,'multiline':False]['text':' rounding but not in any important way, so we just use a looser','line_number':1595,'multiline':False]['text':' tolerance on this test:','line_number':1596,'multiline':False]['text':' (fmax / 1e17) - fmin is within range, so this should not throw','line_number':1754,'multiline':False]['text':' account for i386 extended precision DBL_MAX / 1e17 + DBL_MAX >','line_number':1755,'multiline':False]['text':' DBL_MAX by increasing fmin a bit','line_number':1756,'multiline':False]['text':' Tests that exceptions are correctly propagated in distributions','line_number':1775,'multiline':False]['text':' when called with objects that throw exceptions when converted to','line_number':1776,'multiline':False]['text':' scalars.','line_number':1777,'multiline':False]['text':'','line_number':1778,'multiline':False]['text':' Regression test for gh: 8865','line_number':1779,'multiline':False]['text':' check infinite loop, gh-4720','line_number':1805,'multiline':False]['text':' tests that functions that broadcast behave','line_number':1867,'multiline':False]['text':' correctly when presented with non-scalar arguments','line_number':1868,'multiline':False]['text':' ValueError for arguments that are too big.','line_number':2385,'multiline':False]['text':' Ensure that size is not broadcast','line_number':2459,'multiline':False]['text':' make sure each state produces the same sequence even in threads','line_number':2481,'multiline':False]['text':' threaded generation','line_number':2491,'multiline':False]['text':' the same serial','line_number':2497,'multiline':False]['text':' these platforms change x87 fpu precision mode in threads','line_number':2501,'multiline':False]['text':' See Issue #4263','line_number':2526,'multiline':False]['text':' p < 1.0','line_number':2545,'multiline':False]['text':' p <= 1','line_number':2565,'multiline':False]['text':' Each config contains the initial seed, a number of raw steps','line_number':2614,'multiline':False]['text':' the sha256 hashes of the initial and the final states' keys and','line_number':2615,'multiline':False]['text':' the position of the initial and the final state.','line_number':2616,'multiline':False]['text':' These were produced using the original C implementation.','line_number':2617,'multiline':False]['text':' Burn step','line_number':2622,'multiline':False]['text':' 1 arg','line_number':2651,'multiline':False]['text':' Check out','line_number':2659,'multiline':False]['text':' 2 arg','line_number':2664,'multiline':False]['text':' 3 arg','line_number':2674,'multiline':False]['text':' GH 18142','line_number':2692,'multiline':False]['text':' GH 14333','line_number':2702,'multiline':False]['text':' GH 18704','line_number':2716,'multiline':False]['text':' GH 18704','line_number':2729,'multiline':False]['text':' Directly call reduce which is used in pickling','line_number':2740,'multiline':False]['text':' Simulate unpickling an old pickle that only has the name','line_number':2742,'multiline':False]