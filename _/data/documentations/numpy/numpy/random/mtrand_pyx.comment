['text':'!python','line_number':1,'multiline':False]['text':'cython: wraparound=False, nonecheck=False, boundscheck=False, cdivision=True, language_level=3, binding=True','line_number':2,'multiline':False]['text':' Pickling support:','line_number':200,'multiline':False]['text':' numpy 1.17.0, 2019-05-28','line_number':776,'multiline':False]['text':' Implementation detail: the use a masked method to generate','line_number':784,'multiline':False]['text':' bounded uniform integers. Lemire's method is preferable since it is','line_number':785,'multiline':False]['text':' faster. randomgen allows a choice, we will always use the slower but','line_number':786,'multiline':False]['text':' backward compatible one.','line_number':787,'multiline':False]['text':' Interpret the uint32s as little-endian to convert them to bytes','line_number':848,'multiline':False]['text':' consistently.','line_number':849,'multiline':False]['text':' Format and Verify input','line_number':955,'multiline':False]['text':' __index__ must return an integer by python rules.','line_number':959,'multiline':False]['text':' `shape == None` means `shape == ()`, but with scalar unpacking at the','line_number':996,'multiline':False]['text':' end','line_number':997,'multiline':False]['text':' Actual sampling','line_number':1006,'multiline':False]['text':' searchsorted returns a scalar','line_number':1013,'multiline':False]['text':' force cast to int for LLP64','line_number':1014,'multiline':False]['text':' In most cases a scalar will have been made an array','line_number':1050,'multiline':False]['text':' Use samples as indices for a if a is array-like','line_number':1053,'multiline':False]['text':' If size == () then the user requested a 0-d array as opposed to','line_number':1058,'multiline':False]['text':' a scalar object when size is None. However a[idx] is always a','line_number':1059,'multiline':False]['text':' scalar and not an array. So this makes sure the result is an','line_number':1060,'multiline':False]['text':' array, taking into account that np.array(item) may not work','line_number':1061,'multiline':False]['text':' for object arrays.','line_number':1062,'multiline':False]['text':' needed to get around Pyrex's automatic reference-counting','line_number':1185,'multiline':False]['text':' rules because EnsureArray steals a reference','line_number':1186,'multiline':False]['text':' Complicated, continuous distributions:','line_number':1403,'multiline':False]['text':' Complicated, discrete distributions:','line_number':3371,'multiline':False]['text':' Uses a custom implementation since self._binomial is required','line_number':3464,'multiline':False]['text':' Match historical output type','line_number':3615,'multiline':False]['text':' Match historical output type','line_number':3698,'multiline':False]['text':' Match historical output type','line_number':3794,'multiline':False]['text':' Match historical output type','line_number':3856,'multiline':False]['text':' This legacy function supports "long" values only (checked below).','line_number':3961,'multiline':False]['text':' Match historical output type','line_number':3977,'multiline':False]['text':' Match historical output type','line_number':3987,'multiline':False]['text':' Match historical output type','line_number':4075,'multiline':False]['text':' Multivariate distributions:','line_number':4078,'multiline':False]['text':' Check preconditions on arguments','line_number':4216,'multiline':False]['text':' Compute shape of output and create a matrix of independent','line_number':4233,'multiline':False]['text':' standard normally distributed random numbers. The matrix has rows','line_number':4234,'multiline':False]['text':' with the same length as mean and as many rows are necessary to','line_number':4235,'multiline':False]['text':' form a matrix of shape final_shape.','line_number':4236,'multiline':False]['text':' Transform matrix of standard normals into matrix where each row','line_number':4241,'multiline':False]['text':' contains multivariate normals with the desired covariance.','line_number':4242,'multiline':False]['text':' Compute A such that dot(transpose(A),A) == cov.','line_number':4243,'multiline':False]['text':' Then the matrix products of the rows of x and A has the desired','line_number':4244,'multiline':False]['text':' covariance. Note that sqrt(s)*v where (u,s,v) is the singular value','line_number':4245,'multiline':False]['text':' decomposition of cov is such an A.','line_number':4246,'multiline':False]['text':'','line_number':4247,'multiline':False]['text':' Also check that cov is positive-semidefinite. If so, the u.T and v','line_number':4248,'multiline':False]['text':' matrices should be equal up to roundoff error if cov is','line_number':4249,'multiline':False]['text':' symmetric and the singular value of the corresponding row is','line_number':4250,'multiline':False]['text':' not zero. We continue to use the SVD rather than Cholesky in','line_number':4251,'multiline':False]['text':' order to preserve current outputs. Note that symmetry has not','line_number':4252,'multiline':False]['text':' been checked.','line_number':4253,'multiline':False]['text':' GH10839, ensure double to make tol meaningful','line_number':4255,'multiline':False]['text':' Only check if pvals is non-empty due no checks in kahan_sum','line_number':4383,'multiline':False]['text':' When floating, but not float dtype, and close, improve the error','line_number':4385,'multiline':False]['text':' 1.0001 works for float16 and float32','line_number':4386,'multiline':False]['text':' gh-20483: Avoids divide by 0','line_number':4413,'multiline':False]['text':' =================','line_number':4509,'multiline':False]['text':' Pure python algo','line_number':4510,'multiline':False]['text':' =================','line_number':4511,'multiline':False]['text':' alpha   = N.atleast_1d(alpha)','line_number':4512,'multiline':False]['text':' k       = alpha.size','line_number':4513,'multiline':False]['text':' if n == 1:','line_number':4515,'multiline':False]['text':'     val = N.zeros(k)','line_number':4516,'multiline':False]['text':'     for i in range(k):','line_number':4517,'multiline':False]['text':'         val[i]   = sgamma(alpha[i], n)','line_number':4518,'multiline':False]['text':'     val /= N.sum(val)','line_number':4519,'multiline':False]['text':' else:','line_number':4520,'multiline':False]['text':'     val = N.zeros((k, n))','line_number':4521,'multiline':False]['text':'     for i in range(k):','line_number':4522,'multiline':False]['text':'         val[i]   = sgamma(alpha[i], n)','line_number':4523,'multiline':False]['text':'     val /= N.sum(val, axis = 0)','line_number':4524,'multiline':False]['text':'     val = val.T','line_number':4525,'multiline':False]['text':' return val','line_number':4526,'multiline':False]['text':' Shuffling and permutations:','line_number':4570,'multiline':False]['text':' Fast, statically typed path: shuffle the underlying buffer.','line_number':4625,'multiline':False]['text':' Only for non-empty, 1d objects of class ndarray (subclasses such','line_number':4626,'multiline':False]['text':' as MaskedArrays may not support this approach).','line_number':4627,'multiline':False]['text':' As the array x could contain python objects we use a buffer','line_number':4631,'multiline':False]['text':' of bytes for the swaps to avoid leaving one of the objects','line_number':4632,'multiline':False]['text':' within the buffer and erroneously decrementing it's refcount','line_number':4633,'multiline':False]['text':' when the function exits.','line_number':4634,'multiline':False]['text':' GC'd at function exit','line_number':4635,'multiline':False]['text':' We trick gcc into providing a specialized implementation for','line_number':4638,'multiline':False]['text':' the most common case, yielding a ~33% performance improvement.','line_number':4639,'multiline':False]['text':' Note that apparently, only one branch can ever be specialized.','line_number':4640,'multiline':False]['text':' shuffling is a no-op','line_number':4647,'multiline':False]['text':' Cython adds no stacklevel','line_number':4659,'multiline':False]['text':' i == j is not needed and memcpy is undefined.','line_number':4666,'multiline':False]['text':' Untyped path.','line_number':4671,'multiline':False]['text':' See gh-18206. We may decide to deprecate here in the future.','line_number':4673,'multiline':False]['text':' Cython does not add a level','line_number':4680,'multiline':False]['text':' keep using long as the default here (main numpy switched to intp)','line_number':4744,'multiline':False]['text':' shuffle has fast-path for 1-d','line_number':4753,'multiline':False]['text':' Return a copy if same memory','line_number':4755,'multiline':False]['text':' Shuffle index array, dtype to ensure fast path','line_number':4761,'multiline':False]['text':' Old aliases that should not be removed','line_number':4895,'multiline':False]