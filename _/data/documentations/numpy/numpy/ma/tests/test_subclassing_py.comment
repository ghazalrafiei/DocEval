['text':' pylint: disable-msg=W0611, W0612, W0511,R0201','line_number':1,'multiline':False]['text':' from numpy.ma.core import (','line_number':17,'multiline':False]['text':' produces a better error message than assert_(a.startswith(b))','line_number':20,'multiline':False]['text':' Defines a generic np.ndarray subclass, that stores some metadata','line_number':24,'multiline':False]['text':' in the  dictionary `info`.','line_number':25,'multiline':False]['text':' Also a subclass that overrides __str__, __repr__ and __setitem__, disallowing','line_number':75,'multiline':False]['text':' setting to non-class values (and thus np.ma.core.masked_print_option)','line_number':76,'multiline':False]['text':' and overrides __array_wrap__, updating the info dict, to check that this','line_number':77,'multiline':False]['text':' doesn't get destroyed by MaskedArray._update_from.  But this one also needs','line_number':78,'multiline':False]['text':' its own iterator...','line_number':79,'multiline':False]['text':' Return a repr that does not start with 'name('','line_number':114,'multiline':False]['text':' validation ensures direct assignment with ndarray or','line_number':123,'multiline':False]['text':' masked_print_option will fail','line_number':124,'multiline':False]['text':' ensure getter returns our own class also for scalars','line_number':128,'multiline':False]['text':' scalar','line_number':130,'multiline':False]['text':' Test suite for masked subclasses of ndarray.','line_number':180,'multiline':False]['text':' Tests whether the subclass is kept.','line_number':188,'multiline':False]['text':' Tests subclassing MaskedArray','line_number':198,'multiline':False]['text':' Tests masked_unary_operation','line_number':203,'multiline':False]['text':' Tests masked_binary_operation','line_number':210,'multiline':False]['text':' Result should be a msubarray','line_number':212,'multiline':False]['text':' Result should work','line_number':215,'multiline':False]['text':' Tests domained_masked_binary_operation','line_number':223,'multiline':False]['text':'','line_number':234,'multiline':False]['text':'','line_number':240,'multiline':False]['text':' Test that inplace methods from data get used (gh-4617)','line_number':246,'multiline':False]['text':'','line_number':252,'multiline':False]['text':'','line_number':257,'multiline':False]['text':' Checks that masked_array(...,subok=True) preserves the class.','line_number':264,'multiline':False]['text':'','line_number':269,'multiline':False]['text':'','line_number':274,'multiline':False]['text':'','line_number':279,'multiline':False]['text':'','line_number':284,'multiline':False]['text':' getter should  return a ComplicatedSubArray, even for single item','line_number':295,'multiline':False]['text':' first check we wrote ComplicatedSubArray correctly','line_number':296,'multiline':False]['text':' now that it propagates inside the MaskedArray','line_number':301,'multiline':False]['text':' also for flattened version (which goes via MaskedIterator)','line_number':308,'multiline':False]['text':' setter should only work with ComplicatedSubArray input','line_number':313,'multiline':False]['text':' first check we wrote ComplicatedSubArray correctly','line_number':314,'multiline':False]['text':' now that it propagates inside the MaskedArray','line_number':316,'multiline':False]['text':' also for flattened version (which goes via MaskedIterator)','line_number':321,'multiline':False]['text':' first without override','line_number':351,'multiline':False]['text':' Test that ufuncs and methods conserve extra information consistently;','line_number':364,'multiline':False]['text':' see gh-7122.','line_number':365,'multiline':False]['text':' Get the masked representation of the Quantity-like class','line_number':390,'multiline':False]['text':' Test sharing the mask','line_number':394,'multiline':False]['text':' Get the masked representation of the Quantity-like class','line_number':399,'multiline':False]['text':' Test that the mask is not shared when copy=True','line_number':403,'multiline':False]['text':' Get the masked representation of the Quantity-like class','line_number':408,'multiline':False]['text':' The change did not affect the original mask','line_number':411,'multiline':False]['text':' Test that the mask is False and not shared when keep_mask=False','line_number':413,'multiline':False]['text':' Test suite for classes that wrap MaskedArrays','line_number':419,'multiline':False]['text':' Tests masked_unary_operation','line_number':427,'multiline':False]['text':' Tests masked_binary_operation','line_number':433,'multiline':False]['text':' Result should be a WrappedArray','line_number':435,'multiline':False]['text':' add and '+' should call the same ufunc','line_number':439,'multiline':False]['text':' Test domained binary operations','line_number':443,'multiline':False]['text':' Test broadcasting','line_number':447,'multiline':False]['text':' Should raise an error','line_number':455,'multiline':False]