['text':' pylint: disable-msg=W0400,W0511,W0611,W0612,W0614,R0201,E1102','line_number':1,'multiline':False]['text':' For parametrized numeric testing','line_number':63,'multiline':False]['text':' Base test class for MaskedArrays.','line_number':69,'multiline':False]['text':' Base data definition.','line_number':72,'multiline':False]['text':' Tests some basic array attributes.','line_number':87,'multiline':False]['text':' Checks masking a scalar','line_number':98,'multiline':False]['text':' Test of basic array creation and properties in 1 dimension.','line_number':109,'multiline':False]['text':' Test of basic array creation and properties in 2 dimensions.','line_number':127,'multiline':False]['text':' Tests concatenations.','line_number':147,'multiline':False]['text':' basic concatenation','line_number':149,'multiline':False]['text':' Tests concatenations.','line_number':156,'multiline':False]['text':' Concatenation along an axis','line_number':158,'multiline':False]['text':' Tests the concatenation on flexible arrays.','line_number':177,'multiline':False]['text':' Check the use of ndmin','line_number':186,'multiline':False]['text':' Make sure we're not losing the original mask w/ ndmin','line_number':193,'multiline':False]['text':' Tests how masks are initialized at the creation of Maskedarrays.','line_number':201,'multiline':False]['text':' The first works, but should not (ideally), there may be no way','line_number':223,'multiline':False]['text':' to solve this, however, as long as `np.ma.masked` is an ndarray.','line_number':224,'multiline':False]['text':' Tries to create a float array, using `float(np.ma.masked)`.','line_number':227,'multiline':False]['text':' We may want to define this is invalid behaviour in the future!','line_number':228,'multiline':False]['text':' (requiring np.ma.masked to be a known NumPy scalar probably','line_number':229,'multiline':False]['text':' with a DType.)','line_number':230,'multiline':False]['text':' Tests creating a masked array from a list of masked arrays.','line_number':234,'multiline':False]['text':' Tests the regression in gh-18551','line_number':246,'multiline':False]['text':' The above only failed due a long chain of oddity, try also with','line_number':252,'multiline':False]['text':' an object array that cannot be converted to bool always:','line_number':253,'multiline':False]['text':' Check that the NotBool actually fails like we would expect:','line_number':258,'multiline':False]['text':' used to fail due to 'V' padding field in x.dtype.descr','line_number':269,'multiline':False]['text':' `mask` is misspelled.','line_number':273,'multiline':False]['text':' See Issue #6646','line_number':286,'multiline':False]['text':' See Issue #6646','line_number':294,'multiline':False]['text':' Checks fix_invalid.','line_number':302,'multiline':False]['text':' Test of masked element','line_number':310,'multiline':False]['text':' Tests setting elements with object','line_number':318,'multiline':False]['text':' Tests conversions and indexing','line_number':331,'multiline':False]['text':' test conversion to strings','line_number':336,'multiline':False]['text':' raises?','line_number':337,'multiline':False]['text':' raises?','line_number':338,'multiline':False]['text':' tests of indexing','line_number':340,'multiline':False]['text':' Setitem shouldn't warn, because the assignment might be masked','line_number':381,'multiline':False]['text':' and warning for a masked assignment is weird (see gh-23000)','line_number':382,'multiline':False]['text':' (When the value is masked, otherwise a warning would be acceptable','line_number':383,'multiline':False]['text':' but is not given currently.)','line_number':384,'multiline':False]['text':' not a valid integer...','line_number':388,'multiline':False]['text':' The masked scalar is special cased, but test anyway (it's NaN):','line_number':390,'multiline':False]['text':' Finally, a large value that cannot be cast to the float32 `x`','line_number':392,'multiline':False]['text':' Tests of some subtle points of copying and sizing.','line_number':400,'multiline':False]['text':' Default for masked array is not to copy; see gh-10318.','line_number':415,'multiline':False]['text':'assert_( y2a._mask is not m)','line_number':432,'multiline':False]['text':'assert_( y2a._mask is not m)','line_number':437,'multiline':False]['text':' Copy is False by default','line_number':463,'multiline':False]['text':' gh-9430','line_number':472,'multiline':False]['text':' Tests copy works on python builtins (issue#8019)','line_number':478,'multiline':False]['text':' Tests that the copy method is immutable, GitHub issue #5247','line_number':483,'multiline':False]['text':' Postponed from PR #15410, perhaps address in the future.','line_number':513,'multiline':False]['text':' assert_equal(format(masked, " >5"), "   --")','line_number':514,'multiline':False]['text':' assert_equal(format(masked, " <5"), "--   ")','line_number':515,'multiline':False]['text':' Expect a FutureWarning for using format_spec with MaskedElement','line_number':517,'multiline':False]['text':' arrays with a continuation','line_number':533,'multiline':False]['text':' line-wrapped 1d arrays are correctly aligned','line_number':544,'multiline':False]['text':' 2d arrays cause wrapping','line_number':555,'multiline':False]['text':' but not it they're a row vector','line_number':570,'multiline':False]['text':' dtype=int is implied, so not shown','line_number':580,'multiline':False]['text':' Tests pickling','line_number':624,'multiline':False]['text':' partially masked','line_number':629,'multiline':False]['text':' Fully masked','line_number':630,'multiline':False]['text':' Fully unmasked','line_number':631,'multiline':False]['text':' Test pickling w/ a subclass of ndarray','line_number':646,'multiline':False]['text':' Test pickling MaskedConstant','line_number':657,'multiline':False]['text':' Tests pickling w/ structured array','line_number':666,'multiline':False]['text':' Tests pickling w/ F_CONTIGUOUS arrays','line_number':675,'multiline':False]['text':' Tests single element subscripts of Maskedarrays.','line_number':684,'multiline':False]['text':' Tests some communication issues with Python.','line_number':692,'multiline':False]['text':' Test of other odd features','line_number':712,'multiline':False]['text':' Tests some more features.','line_number':740,'multiline':False]['text':' Tests some generic features','line_number':755,'multiline':False]['text':' Test filled w/ flexible dtype','line_number':767,'multiline':False]['text':' Test filled w/ mvoid','line_number':780,'multiline':False]['text':' Filled using default','line_number':783,'multiline':False]['text':' Explicit fill_value','line_number':786,'multiline':False]['text':' Using predefined filling values','line_number':789,'multiline':False]['text':' Test filled w/ nested dtype','line_number':794,'multiline':False]['text':' test if mask gets set correctly (see #6760)','line_number':806,'multiline':False]['text':' Test filled w/ F-contiguous array','line_number':814,'multiline':False]['text':' this is currently ignored','line_number':817,'multiline':False]['text':' Checks that _optinfo dictionary isn't back-propagated','line_number':822,'multiline':False]['text':' Test printing a masked array w/ fancy dtype.','line_number':850,'multiline':False]['text':' Test 0-d array with multi-dimensional dtype','line_number':858,'multiline':False]['text':' Test flatten_structured_array on arrays','line_number':870,'multiline':False]['text':' On ndarray','line_number':871,'multiline':False]['text':' On masked_array','line_number':878,'multiline':False]['text':' On masked array with nested structure','line_number':886,'multiline':False]['text':' Keeping the initial shape','line_number':896,'multiline':False]['text':' Test creating a mvoid object','line_number':905,'multiline':False]['text':' Test mvoid.__getitem__','line_number':919,'multiline':False]['text':' w/o mask','line_number':923,'multiline':False]['text':' w/ mask','line_number':928,'multiline':False]['text':' exotic dtype','line_number':935,'multiline':False]['text':' Test iteration on __getitem__','line_number':944,'multiline':False]['text':' w/o mask','line_number':948,'multiline':False]['text':' w/ mask','line_number':950,'multiline':False]['text':' Test printing a mvoid','line_number':954,'multiline':False]['text':' also check if there are object datatypes (see gh-7493)','line_number':966,'multiline':False]['text':' regression test for gh-6019','line_number':972,'multiline':False]['text':' additional tests with structured arrays','line_number':980,'multiline':False]['text':' check that we return a view.','line_number':1014,'multiline':False]['text':' Base test class for MaskedArrays.','line_number':1020,'multiline':False]['text':' Base data definition.','line_number':1023,'multiline':False]['text':' Test of basic arithmetic.','line_number':1043,'multiline':False]['text':' Tests mixed arithmetic.','line_number':1096,'multiline':False]['text':' Tests some scalar arithmetic on MaskedArrays.','line_number':1109,'multiline':False]['text':' Masked singleton should remain masked no matter what','line_number':1110,'multiline':False]['text':' Tests (in)equality on masked singleton','line_number':1119,'multiline':False]['text':' Checks that there's no collapsing to masked','line_number':1127,'multiline':False]['text':' Check that we're not losing the shape of a singleton','line_number':1139,'multiline':False]['text':' Make sure we don't lose the shape in some circumstances','line_number':1148,'multiline':False]['text':' Test various functions such as sin, cos.','line_number':1154,'multiline':False]['text':' Tests count','line_number':1182,'multiline':False]['text':' Tests count works on python builtins (issue#8019)','line_number':1207,'multiline':False]['text':' Tests minimum and maximum.','line_number':1212,'multiline':False]['text':' max doesn't work if shaped','line_number':1214,'multiline':False]['text':' following are true because of careful selection of data','line_number':1217,'multiline':False]['text':' Test np.min/maximum.reduce on array w/ full False mask','line_number':1255,'multiline':False]['text':' Tests the min/max functions with explicit outputs','line_number':1261,'multiline':False]['text':' Initialize','line_number':1266,'multiline':False]['text':' Use the np version','line_number':1269,'multiline':False]['text':' Use the ma version','line_number':1278,'multiline':False]['text':' Additional tests on max/min','line_number':1284,'multiline':False]['text':' Additional tests on max/min for non-standard float and complex dtypes','line_number':1306,'multiline':False]['text':' Non-complex type only test','line_number':1324,'multiline':False]['text':' Complex types only test','line_number':1331,'multiline':False]['text':' Tests add, sum, product.','line_number':1348,'multiline':False]['text':' Test binary operations on 2D data','line_number':1369,'multiline':False]['text':' Test domained binary operations on 2D data','line_number':1405,'multiline':False]['text':' Check that we don't shrink a mask when not wanted','line_number':1441,'multiline':False]['text':' Binary operations','line_number':1442,'multiline':False]['text':' In place binary operation','line_number':1447,'multiline':False]['text':' Domained binary operation','line_number':1450,'multiline':False]['text':' In place binary operation','line_number':1453,'multiline':False]['text':' check the case ufuncs should set the mask to false','line_number':1458,'multiline':False]['text':' check we don't get array([False], dtype=bool)','line_number':1460,'multiline':False]['text':' Check that the mask is not shrunk on array creation when not wanted','line_number':1464,'multiline':False]['text':' Tests mod','line_number':1469,'multiline':False]['text':' Test of take, transpose, inner, outer products','line_number':1480,'multiline':False]['text':' Check complex','line_number':1500,'multiline':False]['text':' A ndarray as explicit input','line_number':1518,'multiline':False]['text':' ... the result should be the given output','line_number':1522,'multiline':False]['text':' Test the equality of structured arrays','line_number':1532,'multiline':False]['text':' complicated dtype, 2-dimensional array.','line_number':1563,'multiline':False]['text':' Test the equality of structured arrays','line_number':1575,'multiline':False]['text':' complicated dtype, 2-dimensional array.','line_number':1606,'multiline':False]['text':' Test the obvious.','line_number':1622,'multiline':False]['text':' Expect the mask set only for items with all fields masked.','line_number':1625,'multiline':False]['text':' The masked element will indicated not equal, because the','line_number':1629,'multiline':False]['text':' masks did not match.','line_number':1630,'multiline':False]['text':' ensure simple examples are symmetric and make sense.','line_number':1635,'multiline':False]['text':' from https://github.com/numpy/numpy/pull/8590#discussion_r101126465','line_number':1636,'multiline':False]['text':' Also check it is the same if we do it element by element.','line_number':1656,'multiline':False]['text':' Test the equality of structured arrays','line_number':1671,'multiline':False]['text':' Test the equality of structured arrays','line_number':1703,'multiline':False]['text':' Test the equality of structured arrays','line_number':1736,'multiline':False]['text':' Regression test for failing doctest in MaskedArray.nonzero','line_number':1775,'multiline':False]['text':' after gh-24556.','line_number':1776,'multiline':False]['text':' Test the equality of structured arrays','line_number':1786,'multiline':False]['text':' Test the equality of structured arrays','line_number':1821,'multiline':False]['text':' See gh-21770, mask propagation is broken for strings (and some other','line_number':1854,'multiline':False]['text':' cases) so we explicitly test strings here.','line_number':1855,'multiline':False]['text':' In principle only == and != may need special handling...','line_number':1856,'multiline':False]['text':' Really, comparisons with None should not be done, but check them','line_number':1862,'multiline':False]['text':' anyway. Note that pep8 will flag these tests.','line_number':1863,'multiline':False]['text':' Deprecation is in place for arrays, and when it happens this','line_number':1864,'multiline':False]['text':' test will fail (and have to be changed accordingly).','line_number':1865,'multiline':False]['text':' With partial mask','line_number':1867,'multiline':False]['text':' With nomask','line_number':1874,'multiline':False]['text':' With complete mask','line_number':1878,'multiline':False]['text':' Fully masked, even comparison to None should return "masked"','line_number':1882,'multiline':False]['text':' test comparison with both masked and regular arrays.','line_number':1900,'multiline':False]['text':' Check that the mask is not back-propagated when using numpy functions','line_number':1910,'multiline':False]['text':' Tests the keep mask flag','line_number':1929,'multiline':False]['text':' We default to true','line_number':1937,'multiline':False]['text':' Test hard_mask','line_number':1942,'multiline':False]['text':' We need to copy, to avoid updating d in xh !','line_number':1947,'multiline':False]['text':' Switch to soft mask','line_number':1971,'multiline':False]['text':' Switch back to hard mask','line_number':1976,'multiline':False]['text':' Another test of hardmask','line_number':1997,'multiline':False]['text':' OK, yet another test of hardmask','line_number':2007,'multiline':False]['text':' Make sure that harden_mask/soften_mask//unshare_mask returns self','line_number':2008,'multiline':False]['text':' Checks the behaviour of _smallmask','line_number':2021,'multiline':False]['text':' Tests .shrink_mask()','line_number':2033,'multiline':False]['text':' Mask cannot be shrunk on structured types, so is a no-op','line_number':2039,'multiline':False]['text':' Test that flat can return all types of items [#4585, #4615]','line_number':2046,'multiline':False]['text':' test 2-D record array','line_number':2047,'multiline':False]['text':' ... on structured array w/ masked records','line_number':2048,'multiline':False]['text':' check that the mask's dtype is updated when dtype is changed','line_number':2076,'multiline':False]['text':' raises?','line_number':2081,'multiline':False]['text':' check that dtype changes that change shape of mask too much','line_number':2084,'multiline':False]['text':' are not allowed','line_number':2085,'multiline':False]['text':' raises?','line_number':2091,'multiline':False]['text':' check that nomask is preserved','line_number':2094,'multiline':False]['text':' Test _check_fill_value set to valid and invalid values','line_number':2105,'multiline':False]['text':' Tests _check_fill_value with records','line_number':2121,'multiline':False]['text':' A check on a list should return a single record','line_number':2124,'multiline':False]['text':' A check on None should output the defaults','line_number':2128,'multiline':False]['text':'.....Using a structured type as fill_value should work','line_number':2134,'multiline':False]['text':'.....Using a flexible type w/ a different type shouldn't matter','line_number':2140,'multiline':False]['text':' BEHAVIOR in 1.5 and earlier, and 1.13 and later: match structured','line_number':2141,'multiline':False]['text':' types by position','line_number':2142,'multiline':False]['text':'.....Using an object-array shouldn't matter either','line_number':2149,'multiline':False]['text':' NOTE: This test was never run properly as "fill_value" rather than','line_number':2155,'multiline':False]['text':' "fill_val" was assigned.  Written properly, it fails.','line_number':2156,'multiline':False]['text':'fill_val = np.array((-999, -12345678.9, "???"))','line_number':2157,'multiline':False]['text':'fval = _check_fill_value(fill_val, ndtype)','line_number':2158,'multiline':False]['text':'assert_(isinstance(fval, ndarray))','line_number':2159,'multiline':False]['text':'assert_equal(fval.item(), [-999, -12345678.9, b"???"])','line_number':2160,'multiline':False]['text':'.....One-field-only flexible type should work as well','line_number':2161,'multiline':False]['text':' Tests the behavior of fill_value during conversion','line_number':2168,'multiline':False]['text':' We had a tailored comment to make sure special attributes are','line_number':2169,'multiline':False]['text':' properly dealt with','line_number':2170,'multiline':False]['text':' check all calling conventions','line_number':2192,'multiline':False]['text':' Yet more fun with the fill_value','line_number':2217,'multiline':False]['text':' gh-10483   test multi-field index fill value','line_number':2241,'multiline':False]['text':' test comparison does not raise:','line_number':2248,'multiline':False]['text':' Tests yet more exotic flexible dtypes','line_number':2252,'multiline':False]['text':' The shape shouldn't matter','line_number':2260,'multiline':False]['text':' but when indexing, fill value should become scalar not tuple','line_number':2277,'multiline':False]['text':' See issue #6723','line_number':2278,'multiline':False]['text':' Test default fillvalue for datetime64 and timedelta64 types.','line_number':2283,'multiline':False]['text':' See issue #4476, this would return '?' which would cause errors','line_number':2284,'multiline':False]['text':' elsewhere','line_number':2285,'multiline':False]['text':' Tests extremum fill values for flexible type.','line_number':2298,'multiline':False]['text':' Test setting fill_value on individual fields','line_number':2333,'multiline':False]['text':' Explicit fill_value','line_number':2335,'multiline':False]['text':' Implicit fill_value','line_number':2344,'multiline':False]['text':' Check that fill_value is always defined for structured arrays','line_number':2352,'multiline':False]['text':' Test adding a fill_value parameter to empty/ones/zeros','line_number':2365,'multiline':False]['text':' Test that shape can be provides as an argument','line_number':2379,'multiline':False]['text':' GH issue 6106','line_number':2380,'multiline':False]['text':' Test the behavior of fill_value in view','line_number':2391,'multiline':False]['text':' Create initial masked array','line_number':2393,'multiline':False]['text':' Check that fill_value is preserved by default','line_number':2396,'multiline':False]['text':' Check that fill_value is preserved if dtype is specified and the','line_number':2400,'multiline':False]['text':' dtype is an ndarray sub-class and has a _fill_value attribute','line_number':2401,'multiline':False]['text':' Check that fill_value is preserved if type is specified and the','line_number':2405,'multiline':False]['text':' dtype is an ndarray sub-class and has a _fill_value attribute (by','line_number':2406,'multiline':False]['text':' default, the first argument is dtype, not type)','line_number':2407,'multiline':False]['text':' Check that code does not crash if passed an ndarray sub-class that','line_number':2411,'multiline':False]['text':' does not have a _fill_value attribute','line_number':2412,'multiline':False]['text':' Check that fill_value can be overridden with view','line_number':2416,'multiline':False]['text':' Check that fill_value can be overridden with view (using type=)','line_number':2420,'multiline':False]['text':' Check that fill_value gets reset if passed a dtype but not a','line_number':2424,'multiline':False]['text':' fill_value. This is because even though in some cases one can safely','line_number':2425,'multiline':False]['text':' cast the fill_value, e.g. if taking an int64 view of an int32 array,','line_number':2426,'multiline':False]['text':' in other cases, this cannot be done (e.g. int32 view of an int64','line_number':2427,'multiline':False]['text':' array with a large fill_value).','line_number':2428,'multiline':False]['text':' Test whether fill values work as expected for structured dtypes','line_number':2433,'multiline':False]['text':' containing bytes or str.  See issue #7259.','line_number':2434,'multiline':False]['text':' Test class for the application of ufuncs on MaskedArrays.','line_number':2441,'multiline':False]['text':' Base data definition.','line_number':2444,'multiline':False]['text':' Tests new ufuncs on MaskedArrays.','line_number':2454,'multiline':False]['text':' Tests reduce on MaskedArrays.','line_number':2484,'multiline':False]['text':' Tests extrema on MaskedArrays.','line_number':2493,'multiline':False]['text':' Check that the mask of the result is a ndarray (not a MaskedArray...)','line_number':2504,'multiline':False]['text':' Check that NotImplemented is returned at appropriate places','line_number':2514,'multiline':False]['text':' and that __array_priority__ is respected','line_number':2533,'multiline':False]['text':' check that a nan in masked position does not','line_number':2557,'multiline':False]['text':' cause ufunc warnings','line_number':2558,'multiline':False]['text':' test unary and binary ufuncs','line_number':2565,'multiline':False]['text':' test different unary domains','line_number':2570,'multiline':False]['text':' test binary domains','line_number':2578,'multiline':False]['text':' also check that allclose uses ma ufuncs, to avoid warning','line_number':2581,'multiline':False]['text':' Test MaskedArray Arithmetic','line_number':2585,'multiline':False]['text':' Test of inplace additions','line_number':2603,'multiline':False]['text':' Test of inplace additions','line_number':2618,'multiline':False]['text':' Test of inplace subtractions','line_number':2630,'multiline':False]['text':' Test of inplace subtractions','line_number':2638,'multiline':False]['text':' Test of inplace multiplication','line_number':2650,'multiline':False]['text':' Test of inplace multiplication','line_number':2658,'multiline':False]['text':' Test of inplace division','line_number':2670,'multiline':False]['text':' Test of inplace division','line_number':2681,'multiline':False]['text':' Test of inplace division','line_number':2689,'multiline':False]['text':' Test keeping data w/ (inplace) addition','line_number':2721,'multiline':False]['text':' Test add w/ scalar','line_number':2723,'multiline':False]['text':' Test iadd w/ scalar','line_number':2727,'multiline':False]['text':' Test add w/ array','line_number':2731,'multiline':False]['text':' Test iadd w/ array','line_number':2736,'multiline':False]['text':' Test keeping data w/ (inplace) subtraction','line_number':2743,'multiline':False]['text':' Test sub w/ scalar','line_number':2744,'multiline':False]['text':' Test isub w/ scalar','line_number':2749,'multiline':False]['text':' Test sub w/ array','line_number':2754,'multiline':False]['text':' Test isub w/ array','line_number':2759,'multiline':False]['text':' Test keeping data w/ (inplace) multiplication','line_number':2766,'multiline':False]['text':' Test mul w/ scalar','line_number':2767,'multiline':False]['text':' Test imul w/ scalar','line_number':2772,'multiline':False]['text':' Test mul w/ array','line_number':2777,'multiline':False]['text':' Test imul w/ array','line_number':2782,'multiline':False]['text':' Test keeping data w/ (inplace) division','line_number':2789,'multiline':False]['text':' Test div on scalar','line_number':2790,'multiline':False]['text':' Test idiv on scalar','line_number':2795,'multiline':False]['text':' Test div on array','line_number':2800,'multiline':False]['text':' Test idiv on array','line_number':2805,'multiline':False]['text':' Test keeping data w/ (inplace) power','line_number':2812,'multiline':False]['text':' Test pow on scalar','line_number':2813,'multiline':False]['text':' Test ipow on scalar','line_number':2818,'multiline':False]['text':' Test of inplace additions','line_number':2866,'multiline':False]['text':' Test of inplace additions','line_number':2878,'multiline':False]['text':' Test of inplace subtractions','line_number':2893,'multiline':False]['text':' Test of inplace subtractions','line_number':2904,'multiline':False]['text':' Test of inplace multiplication','line_number':2919,'multiline':False]['text':' Test of inplace multiplication','line_number':2930,'multiline':False]['text':' Test of inplace division','line_number':2945,'multiline':False]['text':' Check for TypeError in case of unsupported types','line_number':2946,'multiline':False]['text':' Test of inplace division','line_number':2965,'multiline':False]['text':' Check for TypeError in case of unsupported types','line_number':2966,'multiline':False]['text':' Test of inplace division','line_number':2989,'multiline':False]['text':' May get a DeprecationWarning or a TypeError.','line_number':2999,'multiline':False]['text':'','line_number':3000,'multiline':False]['text':' This is a consequence of the fact that this is true divide','line_number':3001,'multiline':False]['text':' and will require casting to float for calculation and','line_number':3002,'multiline':False]['text':' casting back to the original type. This will only be raised','line_number':3003,'multiline':False]['text':' with integers. Whether it is an error or warning is only','line_number':3004,'multiline':False]['text':' dependent on how stringent the casting rules are.','line_number':3005,'multiline':False]['text':'','line_number':3006,'multiline':False]['text':' Will handle the same way.','line_number':3007,'multiline':False]['text':' Test of inplace division','line_number':3025,'multiline':False]['text':' May get a DeprecationWarning or a TypeError.','line_number':3034,'multiline':False]['text':'','line_number':3035,'multiline':False]['text':' This is a consequence of the fact that this is true divide','line_number':3036,'multiline':False]['text':' and will require casting to float for calculation and','line_number':3037,'multiline':False]['text':' casting back to the original type. This will only be raised','line_number':3038,'multiline':False]['text':' with integers. Whether it is an error or warning is only','line_number':3039,'multiline':False]['text':' dependent on how stringent the casting rules are.','line_number':3040,'multiline':False]['text':'','line_number':3041,'multiline':False]['text':' Will handle the same way.','line_number':3042,'multiline':False]['text':' Test keeping data w/ (inplace) power','line_number':3064,'multiline':False]['text':' Test pow on scalar','line_number':3068,'multiline':False]['text':' Test ipow on scalar','line_number':3074,'multiline':False]['text':' Test class for miscellaneous MaskedArrays methods.','line_number':3081,'multiline':False]['text':' Base data definition.','line_number':3083,'multiline':False]['text':' Tests some MaskedArray methods.','line_number':3115,'multiline':False]['text':' Tests allclose on arrays','line_number':3133,'multiline':False]['text':' Test allclose w/ infs','line_number':3137,'multiline':False]['text':' Test allclose w/ masked','line_number':3142,'multiline':False]['text':' Test comparison w/ scalar','line_number':3147,'multiline':False]['text':' Test that the function works for MIN_INT integer typed arrays','line_number':3152,'multiline':False]['text':' Allclose currently works for timedelta64 as long as `atol` is','line_number':3157,'multiline':False]['text':' an integer or also a timedelta64','line_number':3158,'multiline':False]['text':' Checks the any/all methods/functions.','line_number':3164,'multiline':False]['text':' Some fun with all and any','line_number':3190,'multiline':False]['text':' Tests argmin & argmax on MaskedArrays.','line_number':3208,'multiline':False]['text':' Tests clip on MaskedArrays.','line_number':3231,'multiline':False]['text':' gh-14140','line_number':3248,'multiline':False]['text':' test compress','line_number':3255,'multiline':False]['text':' Tests compressed','line_number':3286,'multiline':False]['text':' Tests empty/like','line_number':3295,'multiline':False]['text':' check empty_like mask handling','line_number':3309,'multiline':False]['text':' Tests zeros/like','line_number':3317,'multiline':False]['text':' check zeros_like mask handling','line_number':3331,'multiline':False]['text':' Tests ones/like','line_number':3339,'multiline':False]['text':' check ones_like mask handling','line_number':3353,'multiline':False]['text':' Tests put.','line_number':3362,'multiline':False]['text':' GitHub issue 6425','line_number':3392,'multiline':False]['text':' Tests put on hardmask','line_number':3406,'multiline':False]['text':' w/o mask, w/o masked values','line_number':3418,'multiline':False]['text':' w/ mask, w/o masked values','line_number':3422,'multiline':False]['text':' w/o mask, w/ masked values','line_number':3427,'multiline':False]['text':' w/ mask, w/ masked values','line_number':3433,'multiline':False]['text':' w/ mask, w/ masked values + hardmask','line_number':3438,'multiline':False]['text':' Tests ravel','line_number':3445,'multiline':False]['text':' Checks that small_mask is preserved','line_number':3452,'multiline':False]['text':' Test that the fill_value is preserved','line_number':3455,'multiline':False]['text':' Test index ordering','line_number':3462,'multiline':False]['text':' Ravelling must ravel mask and data in the same order always to avoid','line_number':3469,'multiline':False]['text':' misaligning the two in the ravel result.','line_number':3470,'multiline':False]['text':' NOTE: Can be wrong if arr order is neither C nor F and `order="K"`','line_number':3481,'multiline':False]['text':' Tests reshape','line_number':3485,'multiline':False]['text':' Test sort','line_number':3495,'multiline':False]['text':' Check sort of 2D array.','line_number':3552,'multiline':False]['text':' 2D array w/o mask','line_number':3553,'multiline':False]['text':' 2D array w/mask','line_number':3560,'multiline':False]['text':' 3D','line_number':3569,'multiline':False]['text':' Test sort on structured dtype.','line_number':3592,'multiline':False]['text':' Test sort on dtype with subarray (gh-8069)','line_number':3614,'multiline':False]['text':' Just check that the sort does not error, structured array subarrays','line_number':3615,'multiline':False]['text':' are treated as byte strings and that leads to differing behavior','line_number':3616,'multiline':False]['text':' depending on endianness and `endwith`.','line_number':3617,'multiline':False]['text':' Test argsort','line_number':3624,'multiline':False]['text':' Check squeeze','line_number':3629,'multiline':False]['text':' normal ndarrays return a view','line_number':3636,'multiline':False]['text':' so maskedarrays should too','line_number':3643,'multiline':False]['text':' Tests swapaxes on MaskedArrays.','line_number':3652,'multiline':False]['text':' Tests take','line_number':3675,'multiline':False]['text':' assert_equal crashes when passed np.ma.mask','line_number':3682,'multiline':False]['text':' Test take w/ masked indices','line_number':3693,'multiline':False]['text':' No mask','line_number':3697,'multiline':False]['text':' Masked indices','line_number':3705,'multiline':False]['text':' Masked input + masked indices','line_number':3715,'multiline':False]['text':' Tests to list','line_number':3723,'multiline':False]['text':' ... on 1D','line_number':3724,'multiline':False]['text':' ... on 2D','line_number':3730,'multiline':False]['text':' ... on structured array w/ masked records','line_number':3738,'multiline':False]['text':' ... on structured array w/ masked fields','line_number':3748,'multiline':False]['text':' ... on mvoid','line_number':3753,'multiline':False]['text':' Test mvoid.tolist: make sure we return a standard Python object','line_number':3759,'multiline':False]['text':' w/o mask: each entry is a np.void whose elements are standard Python','line_number':3761,'multiline':False]['text':' w/ mask: each entry is a ma.void whose elements should be','line_number':3765,'multiline':False]['text':' standard Python','line_number':3766,'multiline':False]['text':' Test the conversion to records','line_number':3773,'multiline':False]['text':' Test the reconstruction of a masked_array from a record','line_number':3805,'multiline':False]['text':' Test a _arraymethod w/ n argument','line_number':3823,'multiline':False]['text':' gh-9430','line_number':3833,'multiline':False]['text':' Base data definition.','line_number':3863,'multiline':False]['text':' Tests cumsum & cumprod on MaskedArrays.','line_number':3895,'multiline':False]['text':' Tests cumsum/cumprod w/ output','line_number':3908,'multiline':False]['text':' A ndarray as explicit input','line_number':3916,'multiline':False]['text':' ... the result should be the given output','line_number':3920,'multiline':False]['text':' Tests ptp on MaskedArrays.','line_number':3929,'multiline':False]['text':' Test sum on object dtype','line_number':3949,'multiline':False]['text':' Test prod on object dtype','line_number':3956,'multiline':False]['text':' Test mean/anom on object dtype','line_number':3963,'multiline':False]['text':' Tests trace on MaskedArrays.','line_number':3993,'multiline':False]['text':' gh-5560','line_number':4002,'multiline':False]['text':' Tests dot on MaskedArrays.','line_number':4008,'multiline':False]['text':' regression test','line_number':4032,'multiline':False]['text':' gh-5769','line_number':4041,'multiline':False]['text':' check array type is preserved and out works','line_number':4048,'multiline':False]['text':' Tests var & std on MaskedArrays.','line_number':4057,'multiline':False]['text':' Test a special case for var','line_number':4080,'multiline':False]['text':' Using a masked array as explicit output','line_number':4090,'multiline':False]['text':' Using a ndarray as explicit output','line_number':4094,'multiline':False]['text':' Using a masked array as explicit output','line_number':4105,'multiline':False]['text':' Using a ndarray as explicit output','line_number':4109,'multiline':False]['text':' Test diag','line_number':4126,'multiline':False]['text':' Test the combination nomask & methods w/ axis','line_number':4140,'multiline':False]['text':' Test overflow in masked arrays','line_number':4161,'multiline':False]['text':' gh-20272','line_number':4162,'multiline':False]['text':' GH 22465','line_number':4168,'multiline':False]['text':' GH 22465','line_number':4181,'multiline':False]['text':' Test class for miscellaneous MaskedArrays methods.','line_number':4208,'multiline':False]['text':' Base data definition.','line_number':4210,'multiline':False]['text':' Tests var & std on MaskedArrays.','line_number':4242,'multiline':False]['text':' Test class for miscellaneous functions.','line_number':4261,'multiline':False]['text':' Tests masking functions.','line_number':4295,'multiline':False]['text':' Tests some generic features.','line_number':4311,'multiline':False]['text':' test that masked_where on a structured array sets a structured','line_number':4325,'multiline':False]['text':' mask (see issue #2972)','line_number':4326,'multiline':False]['text':' NOTE: The float16 "uses" 1e20 as mask, which overflows to inf','line_number':4329,'multiline':False]['text':'       and warns.  Unrelated to this test, but probably undesired.','line_number':4330,'multiline':False]['text':'       But NumPy previously did not warn for this overflow.','line_number':4331,'multiline':False]['text':' gh-4520','line_number':4338,'multiline':False]['text':' Testing round with an explicit output','line_number':4383,'multiline':False]['text':' A ndarray as explicit input','line_number':4388,'multiline':False]['text':' ... the result should be the given output','line_number':4392,'multiline':False]['text':' Testing round with scalar/zero dimension input','line_number':4401,'multiline':False]['text':' GH issue 2244','line_number':4402,'multiline':False]['text':' Test power w/ broadcasting','line_number':4452,'multiline':False]['text':' No broadcasting, base & exp w/ mask','line_number':4461,'multiline':False]['text':' No broadcasting, base w/ mask, exp w/o mask','line_number':4465,'multiline':False]['text':' No broadcasting, base w/o mask, exp w/ mask','line_number':4469,'multiline':False]['text':' Test the where function','line_number':4485,'multiline':False]['text':' The fill value is 1e20, it cannot be converted to `int`:','line_number':4510,'multiline':False]['text':' Set False to masked','line_number':4528,'multiline':False]['text':' Set True to masked','line_number':4537,'multiline':False]['text':' Test the type conservation with where','line_number':4576,'multiline':False]['text':' Issue 8599','line_number':4584,'multiline':False]['text':' Issue 8600','line_number':4594,'multiline':False]['text':' getdata() used to be bad for pandas series due to its _data','line_number':4624,'multiline':False]['text':' attribute.  This test is a regression test mainly and may be','line_number':4625,'multiline':False]['text':' removed if getdata() is adjusted.','line_number':4626,'multiline':False]['text':' Matplotlib relied on masked_invalid always returning a full mask','line_number':4639,'multiline':False]['text':' (Also astropy projects, but were ok with it gh-22720 and gh-22842)','line_number':4640,'multiline':False]['text':' mask of a should not be mutated','line_number':4645,'multiline':False]['text':' Test choose','line_number':4650,'multiline':False]['text':' Check with some masked indices','line_number':4659,'multiline':False]['text':' Check with some masked choices','line_number':4664,'multiline':False]['text':' Test choose with an explicit out keyword','line_number':4673,'multiline':False]['text':' Check with some masked indices + out','line_number':4680,'multiline':False]['text':' Check with some masked choices + out ina ndarray !','line_number':4686,'multiline':False]['text':' Try the default','line_number':4697,'multiline':False]['text':' Try w/ arguments as list instead of tuple','line_number':4701,'multiline':False]['text':' Try w/ order','line_number':4705,'multiline':False]['text':' Try w/ order','line_number':4709,'multiline':False]['text':' Flexible','line_number':4721,'multiline':False]['text':' Standard w/ shape','line_number':4727,'multiline':False]['text':' Standard standard','line_number':4733,'multiline':False]['text':' Nested','line_number':4739,'multiline':False]['text':' Named+ shape','line_number':4746,'multiline':False]['text':' 2 names','line_number':4752,'multiline':False]['text':' nested boolean types should preserve identity','line_number':4758,'multiline':False]['text':' Test make_mask','line_number':4767,'multiline':False]['text':' w/ a list as an input','line_number':4768,'multiline':False]['text':' w/ a ndarray as an input','line_number':4773,'multiline':False]['text':' w/ a flexible-type ndarray as an input - use default','line_number':4778,'multiline':False]['text':' w/ a flexible-type ndarray as an input - use input dtype','line_number':4784,'multiline':False]['text':' w/ a flexible-type ndarray as an input - use input dtype','line_number':4790,'multiline':False]['text':' Ensure this also works for void','line_number':4797,'multiline':False]['text':' test that nomask is returned when m is nomask.','line_number':4806,'multiline':False]['text':' Initialize','line_number':4815,'multiline':False]['text':' Test using nomask as input','line_number':4818,'multiline':False]['text':' Using False as input','line_number':4823,'multiline':False]['text':' Using another array w / the same dtype','line_number':4826,'multiline':False]['text':' Using another array w / a different dtype','line_number':4831,'multiline':False]['text':' Using nested arrays','line_number':4838,'multiline':False]['text':' Tests flatten mask','line_number':4846,'multiline':False]['text':' Standard dtype','line_number':4847,'multiline':False]['text':' Flexible dtype','line_number':4850,'multiline':False]['text':' Test functions on ndarrays','line_number':4864,'multiline':False]['text':' Test compress function on ndarray and masked array','line_number':4873,'multiline':False]['text':' Address Github #2495.','line_number':4874,'multiline':False]['text':' Test ma.compressed function.','line_number':4886,'multiline':False]['text':' Address gh-4026','line_number':4887,'multiline':False]['text':' Test case when input data is ndarray subclass','line_number':4892,'multiline':False]['text':' Test that compress flattens','line_number':4900,'multiline':False]['text':' Test case when input is MaskedArray subclass','line_number':4906,'multiline':False]['text':' with .compressed() overridden','line_number':4913,'multiline':False]['text':' Set w/ nomask or masked','line_number':4971,'multiline':False]['text':' Set w/ simple boolean','line_number':4976,'multiline':False]['text':' Set w/ list','line_number':4981,'multiline':False]['text':' Check setting an element of a record)','line_number':4988,'multiline':False]['text':' Test getmaskarray on flexible dtype','line_number':5028,'multiline':False]['text':' Test view w/ flexible dtype','line_number':5040,'multiline':False]['text':' Transform globally to simple dtype','line_number':5046,'multiline':False]['text':' Transform globally to dty','line_number':5050,'multiline':False]['text':' No mask','line_number':5071,'multiline':False]['text':' One element masked','line_number':5072,'multiline':False]['text':' All element masked','line_number':5073,'multiline':False]['text':' Issue 4866: check that one can set individual items in [record][col]','line_number':5076,'multiline':False]['text':' and [col][record] order','line_number':5077,'multiline':False]['text':' Issue 2403','line_number':5084,'multiline':False]['text':' soft mask','line_number':5086,'multiline':False]['text':' hard mask','line_number':5094,'multiline':False]['text':' 8510','line_number':5106,'multiline':False]['text':' check that len() works for mvoid (Github issue #576)','line_number':5113,'multiline':False]['text':' gh-5962 - object arrays of arrays do something special','line_number':5143,'multiline':False]['text':' set the first object to be an unmasked masked constant. A little fiddly','line_number':5152,'multiline':False]['text':' check the above line did what we were aiming for','line_number':5155,'multiline':False]['text':' test that getitem returned the value by identity','line_number':5158,'multiline':False]['text':' now mask the masked value!','line_number':5161,'multiline':False]['text':' View globally','line_number':5192,'multiline':False]['text':' View globally','line_number':5220,'multiline':False]['text':' View on 1 masked element','line_number':5225,'multiline':False]['text':' View on 1 unmasked element','line_number':5230,'multiline':False]['text':' test axis arg behaves the same as ndarray (including multiple axes)','line_number':5246,'multiline':False]['text':' mask out last element of last dimension','line_number':5250,'multiline':False]['text':' test axis arg','line_number':5258,'multiline':False]['text':' test keepdims arg','line_number':5267,'multiline':False]['text':' test both at once','line_number':5273,'multiline':False]['text':' test np.ma.count specially','line_number':5293,'multiline':False]['text':' check the 'nomask' path','line_number':5310,'multiline':False]['text':' check the 'masked' singleton','line_number':5324,'multiline':False]['text':' check 0-d arrays do not allow axis > 0','line_number':5327,'multiline':False]['text':' sanity check','line_number':5333,'multiline':False]['text':' now try with a vector','line_number':5336,'multiline':False]['text':' lots of things could go wrong here','line_number':5340,'multiline':False]['text':' most importantly, we do not want to create a new MaskedConstant','line_number':5355,'multiline':False]['text':' instance','line_number':5356,'multiline':False]['text':' copies should not exist, but if they do, it should be obvious that','line_number':5361,'multiline':False]['text':' something is wrong','line_number':5362,'multiline':False]['text':' create a new instance in a weird way','line_number':5365,'multiline':False]['text':' gh-9328','line_number':5380,'multiline':False]['text':' copy is a no-op, like it is with np.True_','line_number':5381,'multiline':False]['text':' https://github.com/astropy/astropy/issues/6645','line_number':5430,'multiline':False]['text':' TODO: Test masked_object, masked_equal, ...','line_number':5445,'multiline':False]['text':' check nomask array is updated in place','line_number':5469,'multiline':False]['text':' check masked array is updated in place','line_number':5473,'multiline':False]['text':' check masked array with masked_invalid is updated in place','line_number':5477,'multiline':False]['text':' When `axis` is specified, `values` must have the correct shape.','line_number':5510,'multiline':False]['text':' regression test for Python 3, where 'unicode' was not defined','line_number':5521,'multiline':False]['text':' check that giving an output argument always returns that output.','line_number':5526,'multiline':False]['text':' Regression test for gh-8416.','line_number':5527,'multiline':False]['text':' the mask of the output should not affect the result, however it is passed','line_number':5535,'multiline':False]['text':' Also test the same indirectly, via np.array','line_number':5577,'multiline':False]['text':' See gh-12070','line_number':5594,'multiline':False]['text':' a void dtype with no fields','line_number':5610,'multiline':False]['text':' these arrays contain no values, so there's little to test - but this','line_number':5613,'multiline':False]['text':' shouldn't crash','line_number':5614,'multiline':False]['text':' testing for absence of reported error','line_number':5669,'multiline':False]