['text':' test axis must be in bounds','line_number':237,'multiline':False]['text':' OK','line_number':240,'multiline':False]['text':' Scalars cannot be concatenated','line_number':244,'multiline':False]['text':' dimensionality must match','line_number':248,'multiline':False]['text':' test shapes must match except for concatenation axis','line_number':256,'multiline':False]['text':' OK','line_number':261,'multiline':False]['text':' No arrays to concatenate raises ValueError','line_number':274,'multiline':False]['text':' When no axis is given, concatenate uses flattened versions.','line_number':299,'multiline':False]['text':' This also had a bug with many arrays (see gh-5979).','line_number':300,'multiline':False]['text':' Once upon a time, this was the same as `axis=None` now it fails','line_number':305,'multiline':False]['text':' (with an unspecified error, as multiple things are wrong here)','line_number':306,'multiline':False]['text':' Test concatenate function','line_number':311,'multiline':False]['text':' One sequence returns unmodified (but as array)','line_number':312,'multiline':False]['text':' Any sequence','line_number':315,'multiline':False]['text':' 1D default concatenation','line_number':318,'multiline':False]['text':' Mixed sequence types','line_number':321,'multiline':False]['text':' Explicit axis specification','line_number':324,'multiline':False]['text':' Including negative','line_number':326,'multiline':False]['text':' 2D','line_number':328,'multiline':False]['text':' Arrays much match shape','line_number':336,'multiline':False]['text':' 3D','line_number':338,'multiline':False]['text':' Compare usage of `out=out` with `dtype=out.dtype`','line_number':379,'multiline':False]['text':' Note that U0 and S0 should be deprecated eventually and changed to','line_number':406,'multiline':False]['text':' actually give the empty string result (together with `np.array`)','line_number':407,'multiline':False]['text':' The actual dtype should be identical to a cast (of a double array):','line_number':409,'multiline':False]['text':' non-iterable input','line_number':426,'multiline':False]['text':' 0d input','line_number':429,'multiline':False]['text':' 1d input examples','line_number':434,'multiline':False]['text':' all input types','line_number':440,'multiline':False]['text':' all shapes for 1d input','line_number':443,'multiline':False]['text':' all shapes for 2d input','line_number':451,'multiline':False]['text':' empty arrays','line_number':458,'multiline':False]['text':' out','line_number':461,'multiline':False]['text':' edge cases','line_number':465,'multiline':False]['text':' do not accept generators','line_number':478,'multiline':False]['text':'casting and dtype test','line_number':482,'multiline':False]['text':'casting and dtype with TypeError','line_number':488,'multiline':False]['text':' blocking small arrays and large arrays go through different paths.','line_number':522,'multiline':False]['text':' the algorithm is triggered depending on the number of element','line_number':523,'multiline':False]['text':' copies required.','line_number':524,'multiline':False]['text':' We define a test fixture that forces most tests to go through','line_number':525,'multiline':False]['text':' both code paths.','line_number':526,'multiline':False]['text':' Ultimately, this should be removed if a single algorithm is found','line_number':527,'multiline':False]['text':' to be faster for both small and large arrays.','line_number':528,'multiline':False]['text':' # # 1-D vectors are treated as row arrays','line_number':587,'multiline':False]['text':' # # 1-D vectors are treated as row arrays','line_number':603,'multiline':False]['text':' a bit more complicated','line_number':621,'multiline':False]['text':' missing brackets','line_number':751,'multiline':False]['text':' 3D','line_number':786,'multiline':False]['text':' 2D','line_number':805,'multiline':False]['text':' don't recurse into non-lists','line_number':826,'multiline':False]