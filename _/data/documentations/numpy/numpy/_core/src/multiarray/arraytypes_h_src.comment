['text':' needed for blasfuncs ','line_number':9,'multiline':True]['text':' for _pyarray_correlate ','line_number':23,'multiline':True]['text':'*begin repeat
 * #TYPE = BYTE, UBYTE, SHORT, USHORT, INT, UINT,
 *         LONG, ULONG, LONGLONG, ULONGLONG,
 *         HALF, FLOAT, DOUBLE, LONGDOUBLE,
 *         CFLOAT, CDOUBLE, CLONGDOUBLE#
 ','line_number':31,'multiline':True]['text':'
 * The setitem functions are currently directly used in certain branches
 * of the scalar-math code. (Yes, this would be nice to refactor...)
 ','line_number':37,'multiline':True]['text':'*end repeat*','line_number':45,'multiline':True]['text':'*begin repeat
 * #TYPE = BYTE, UBYTE, SHORT, USHORT, INT, UINT,
 *         LONG, ULONG, LONGLONG, ULONGLONG,
 *         FLOAT, DOUBLE, LONGDOUBLE#
 * #type = byte, ubyte, short, ushort, int, uint,
 *         long, ulong, longlong, ulonglong,
 *         float, double, longdouble#
 ','line_number':51,'multiline':True]['text':'*begin repeat1
 * #func = argmax, argmin#
 ','line_number':59,'multiline':True]['text':'*end repeat1*','line_number':64,'multiline':True]['text':'*end repeat*','line_number':65,'multiline':True]['text':'
 * Define DType and scalar type names and aliases as used in Python.
 ','line_number':70,'multiline':True]['text':'*begin repeat
 * #NAME = BOOL,
 *         HALF, FLOAT, DOUBLE, LONGDOUBLE,
 *         CFLOAT, CDOUBLE, CLONGDOUBLE,
 *         STRING, UNICODE, VOID, OBJECT,
 *         DATETIME, TIMEDELTA#
 * #name = bool,
 *         float16, float32, float64, longdouble,
 *         complex64, complex128, clongdouble,
 *         bytes_, str_, void, object_,
 *         datetime64, timedelta64#
 * #Name = Bool,
 *         Float16, Float32, Float64, LongDouble,
 *         Complex64, Complex128, CLongDouble,
 *         Bytes, Str, Void, Object,
 *         DateTime64, TimeDelta64#
 ','line_number':74,'multiline':True]['text':'*end repeat*','line_number':94,'multiline':True]['text':'
 * Give integers different names when they are the same size (gh-9799).
 * `intX` always refers to the first int of that size in the sequence
 * `['LONG', 'LONGLONG', 'INT', 'SHORT', 'BYTE']`.
 * Unfortunately, since the bitsize names are not strictly fixed, we add
 * the C name for all integer types (as aliases).
 *
 * Right now, we do not define the C aliases for floats (which are always
 * the same).
 ','line_number':97,'multiline':True]['text':'*begin repeat
 * #NAME = BYTE, SHORT, INT, LONG, LONGLONG,
 *         UBYTE, USHORT, UINT, ULONG, ULONGLONG#
 * #CNAME = (BYTE, SHORT, INT, LONG, LONGLONG)*2#
 * #cname = byte, short, intc, long, longlong,
 *          ubyte, ushort, uintc, ulong, ulonglong#
 * #CName = Byte, Short, Int, Long, LongLong,
 *          UByte, UShort, UInt, ULong, ULongLong#
 * #bitname = int*5, uint*5#
 * #BitName = Int*5, UInt*5#
 ','line_number':122,'multiline':True]['text':' The C-name is considered just an alias for these: ','line_number':138,'multiline':True]['text':' The bitsof macro includes math, so cannot be stringified ','line_number':142,'multiline':True]['text':'*end repeat*','line_number':160,'multiline':True]['text':' NUMPY_CORE_SRC_MULTIARRAY_ARRAYTYPES_H_ ','line_number':167,'multiline':True]