['text':'
 * This file defines a compile time constant casting table for use in
 * a few situations:
 * 1. As a fast-path in can-cast (untested how much it helps).
 * 2. To define the actual cast safety stored on the CastingImpl/ArrayMethod
 * 3. For scalar math, since it also needs cast safety information.
 *
 * It is useful to have this constant to allow writing compile time generic
 * code based on cast safety in the scalar math code.
 ','line_number':1,'multiline':True]['text':' The from type fits into to (it has a smaller or equal number of bits) ','line_number':18,'multiline':True]['text':' Unsigned "from" fits a signed integer if it is truly smaller ','line_number':20,'multiline':True]['text':' Integer "from" only fits a float if it is truly smaller or double... ','line_number':22,'multiline':True]['text':'
 * NOTE: The Order is bool, integers (signed, unsigned) tuples, float, cfloat,
 *       then 6 fixed ones (object, string, unicode, void, datetime, timedelta),
 *       and finally half.
 *       Note that in the future we may only need the numeric casts here, but
 *       currently it fills in the others as well.
 ','line_number':28,'multiline':True]['text':' Floats are similar to ints, but cap at double ','line_number':53,'multiline':True]['text':' Bool safely casts to anything except datetime (has no zero) ','line_number':67,'multiline':True]['text':' Integers in pairs of signed, unsigned ','line_number':71,'multiline':True]['text':' Floats and complex ','line_number':77,'multiline':True]['text':'
         * Following the main numeric types are:
         * object, string, unicode, void, datetime, timedelta (and half)
         ','line_number':84,'multiline':True]['text':' object casts safely only to itself ','line_number':88,'multiline':True]['text':' bool + ints ','line_number':89,'multiline':True]['text':' floats (without half) ','line_number':90,'multiline':True]['text':' String casts safely to object, unicode and void ','line_number':92,'multiline':True]['text':' bool + ints ','line_number':93,'multiline':True]['text':' floats (without half) ','line_number':94,'multiline':True]['text':' Unicode casts safely to object and void ','line_number':96,'multiline':True]['text':' bool + ints ','line_number':97,'multiline':True]['text':' floats (without half) ','line_number':98,'multiline':True]['text':' Void cast safely to object ','line_number':100,'multiline':True]['text':' bool + ints ','line_number':101,'multiline':True]['text':' floats (without half) ','line_number':102,'multiline':True]['text':' datetime cast safely to object, string, unicode, void ','line_number':104,'multiline':True]['text':' bool + ints ','line_number':105,'multiline':True]['text':' floats (without half) ','line_number':106,'multiline':True]['text':' timedelta cast safely to object, string, unicode, void ','line_number':108,'multiline':True]['text':' bool + ints ','line_number':109,'multiline':True]['text':' floats (without half) ','line_number':110,'multiline':True]['text':' half ','line_number':112,'multiline':True]['text':' NUMPY_CORE_SRC_MULTIARRAY_CAN_CAST_TABLE_H_ ','line_number':124,'multiline':True]