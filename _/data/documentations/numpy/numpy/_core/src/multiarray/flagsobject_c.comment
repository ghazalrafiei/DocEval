['text':' Array Flags Object ','line_number':1,'multiline':True]['text':'
 * Get New ArrayFlagsObject
 ','line_number':25,'multiline':True]['text':'NUMPY_API
 * Update Several Flags at once.
 ','line_number':59,'multiline':True]['text':' Always update both, as its not trivial to guess one from the other ','line_number':65,'multiline':True]['text':'
     * This is not checked by default WRITEABLE is not
     * part of UPDATE_ALL
     ','line_number':77,'multiline':True]['text':'
 * Check whether the given array is stored contiguously
 * in memory. And update the passed in ap flags appropriately.
 *
 * The traditional rule is that for an array to be flagged as C contiguous,
 * the following must hold:
 *
 * strides[-1] == itemsize
 * strides[i] == shape[i+1] * strides[i + 1]
 *
 * And for an array to be flagged as F contiguous, the obvious reversal:
 *
 * strides[0] == itemsize
 * strides[i] == shape[i - 1] * strides[i - 1]
 *
 * According to these rules, a 0- or 1-dimensional array is either both
 * C- and F-contiguous, or neither; and an array with 2+ dimensions
 * can be C- or F- contiguous, or neither, but not both (unless it has only
 * a single element).
 * We correct this, however.  When a dimension has length 1, its stride is
 * never used and thus has no effect on the  memory layout.
 * The above rules thus only apply when ignoring all size 1 dimensions.
 ','line_number':92,'multiline':True]['text':' contiguous by definition ','line_number':126,'multiline':True]['text':' check if fortran contiguous ','line_number':146,'multiline':True]['text':' relies on setflags order being write, align, uic ','line_number':265,'multiline':True]['text':'
     * This code should go away in a future release, so do not mangle the
     * array_setflags function with an extra kwarg
     ','line_number':360,'multiline':True]['text':'mp_length','line_number':677,'multiline':True]['text':'mp_subscript','line_number':678,'multiline':True]['text':'mp_ass_subscript','line_number':679,'multiline':True]