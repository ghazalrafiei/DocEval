['text':'@targets
 ** $maxopt baseline
 ** sse2 (avx2 fma3) avx512f
 ** neon asimd
 ** vsx2 vsx3
 ** vx vxe
 *','line_number':1,'multiline':True]['text':' Provides the various *_LOOP macros','line_number':16,'multiline':False]['text':'*begin repeat
 * #type = npy_float, npy_double#
 * #sfx = f32, f64#
 * #bsfx = b32, b64#
 * #usfx = b32, u64#
 * #VECTOR = NPY_SIMD_F32, NPY_SIMD_F64#
 * #is_double = 0, 1#
 * #c = f, #
 * #INF = NPY_INFINITYF, NPY_INFINITY#
 * #NAN = NPY_NANF, NPY_NAN#
 ','line_number':19,'multiline':True]['text':'
     * If real or imag = INF, then convert it to inf + j*inf
     * Handles: inf + j*nan, nan + j*inf
     ','line_number':39,'multiline':True]['text':'
     * If real or imag = NAN, then convert it to nan + j*nan
     * Handles: x + j*nan, nan + j*x
     ','line_number':47,'multiline':True]['text':'
     * Calculate div_mask to prevent 0./0. and inf/inf operations in div
     ','line_number':58,'multiline':True]['text':' VECTOR','line_number':71,'multiline':False]['text':'*end repeat*','line_number':72,'multiline':True]['text':'*******************************************************************************
 ** Defining ufunc inner functions
 *******************************************************************************','line_number':74,'multiline':True]['text':'*begin repeat
 * complex types
 * #TYPE = CFLOAT, CDOUBLE#
 * #ftype = npy_float, npy_double#
 * #VECTOR = NPY_SIMD_F32, NPY_SIMD_F64#
 * #sfx = f32, f64#
 * #c = f, #
 * #C = F, #
 ','line_number':77,'multiline':True]['text':'*end repeat*','line_number':139,'multiline':True]