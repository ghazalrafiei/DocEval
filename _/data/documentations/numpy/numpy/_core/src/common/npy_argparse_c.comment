['text':'*
 * Small wrapper converting to array just like CPython does.
 *
 * We could use our own PyArray_PyIntAsInt function, but it handles floats
 * differently.
 * A disadvantage of this function compared to ``PyArg_*("i")`` code is that
 * it will not say which parameter is wrong.
 *
 * @param obj The python object to convert
 * @param value The output value
 *
 * @returns 0 on failure and 1 on success (`NPY_FAIL`, `NPY_SUCCEED`)
 ','line_number':15,'multiline':True]['text':' Pythons behaviour is to check only for float explicitly... ','line_number':31,'multiline':True]['text':'*
 * Internal function to initialize keyword argument parsing.
 *
 * This does a few simple jobs:
 *
 * * Check the input for consistency to find coding errors, for example
 *   a parameter not marked with | after one marked with | (optional).
 * 2. Find the number of positional-only arguments, the number of
 *    total, required, and keyword arguments.
 * 3. Intern all keyword arguments strings to allow fast, identity based
 *    parsing and avoid string creation overhead on each call.
 *
 * @param funcname Name of the function, mainly used for errors.
 * @param cache A cache object stored statically in the parsing function
 * @param va_orig Argument list to npy_parse_arguments
 * @return 0 on success, -1 on failure
 ','line_number':56,'multiline':True]['text':' Count length first: ','line_number':86,'multiline':True]['text':' Check if this is the sentinel, only converter may be NULL ','line_number':91,'multiline':True]['text':' advance to actual name. ','line_number':122,'multiline':True]['text':' advance to actual name. ','line_number':127,'multiline':True]['text':' Empty string signals positional only ','line_number':144,'multiline':True]['text':'
     * Do any necessary string allocation and interning,
     * creating a caching object.
     ','line_number':173,'multiline':True]['text':' NULL kw_strings for easier cleanup (and NULL termination) ','line_number':182,'multiline':True]['text':' Advance through non-kwargs, which do not require setup. ','line_number':187,'multiline':True]['text':' ignore | and $ ','line_number':193,'multiline':True]['text':' not initialized ','line_number':212,'multiline':True]['text':'*
 * Generic helper for argument parsing
 *
 * See macro version for an example pattern of how to use this function.
 *
 * @param funcname
 * @param cache
 * @param args Python passed args (METH_FASTCALL)
 * @param len_args
 * @param kwnames
 * @param ... List of arguments (see macro version).
 *
 * @return Returns 0 on success and -1 on failure.
 ','line_number':253,'multiline':True]['text':' cache_ptr is a NULL initialized persistent storage for data ','line_number':269,'multiline':True]['text':' ... is NULL, NULL, NULL terminated: name, converter, value ','line_number':272,'multiline':True]['text':' NOTE: Could remove the limit but too many kwargs are slow anyway. ','line_number':291,'multiline':True]['text':' Without kwargs, do not iterate all converters. ','line_number':298,'multiline':True]['text':' If there are any kwargs, first handle them ','line_number':302,'multiline':True]['text':' Super-fast path, check identity: ','line_number':316,'multiline':True]['text':' Slow fallback, if identity checks failed for some reason ','line_number':323,'multiline':True]['text':' Invalid keyword argument. ','line_number':334,'multiline':True]['text':' There could be an identical positional argument ','line_number':345,'multiline':True]['text':'
     * There cannot be too many args, too many kwargs would find an
     * incorrect one above.
     ','line_number':357,'multiline':True]['text':' At this time `all_arguments` holds either NULLs or the objects ','line_number':363,'multiline':True]['text':' It is usually the users responsibility to clean up. ','line_number':387,'multiline':True]['text':' TODO: Implementing cleanup if/when needed should not be hard ','line_number':391,'multiline':True]['text':' Required arguments are typically not passed as keyword arguments ','line_number':400,'multiline':True]['text':' (PyArg_* also does this after the actual parsing is finished) ','line_number':402,'multiline':True]