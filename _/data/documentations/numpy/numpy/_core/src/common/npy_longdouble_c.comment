['text':'
 * Heavily derived from PyLong_FromDouble
 * Notably, we can't set the digits directly, so have to shift and or instead.
 ','line_number':12,'multiline':True]['text':'
     * number of bits to extract at a time. CPython uses 30, but that's because
     * it's tied to the internal long representation
     ','line_number':21,'multiline':True]['text':' ldval = frac*2**expo; 0.0 <= frac < 1.0 ','line_number':44,'multiline':True]['text':' Get the MSBs of the integral part of the float ','line_number':59,'multiline':True]['text':' v = v << chunk_size ','line_number':64,'multiline':True]['text':' v = v | chunk ','line_number':75,'multiline':True]['text':' Remove the msbs, and repeat ','line_number':82,'multiline':True]['text':' v = -v ','line_number':87,'multiline':True]['text':' Helper function to get unicode(PyLong).encode('utf8') ','line_number':100,'multiline':True]['text':'*
 * TODO: currently a hack that converts the long through a string. This is
 * correct, but slow.
 *
 * Another approach would be to do this numerically, in a similar way to
 * PyLong_AsDouble.
 * However, in order to respect rounding modes correctly, this needs to know
 * the size of the mantissa, which is platform-dependent.
 ','line_number':114,'multiline':True]['text':' convert the long to a string ','line_number':130,'multiline':True]['text':' convert the string to a long double and capture errors ','line_number':142,'multiline':True]['text':' strtold returns INFINITY of the correct sign. ','line_number':146,'multiline':True]['text':' Extra characters at the end of the string, or nothing parsed ','line_number':160,'multiline':True]['text':' finally safe to decref now that we're done with `end` ','line_number':168,'multiline':True]