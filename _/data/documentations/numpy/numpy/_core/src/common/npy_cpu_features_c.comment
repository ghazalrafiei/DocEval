['text':' To guarantee the CPU baseline definitions are in scope.','line_number':2,'multiline':False]['text':' To guarantee the CPU definitions are in scope.','line_number':4,'multiline':False]['text':'******************* Private Definitions ********************','line_number':6,'multiline':True]['text':' Hold all CPU features boolean values','line_number':8,'multiline':False]['text':'******************* Private Declarations ********************','line_number':11,'multiline':True]['text':' Almost detect all CPU features in runtime','line_number':13,'multiline':False]['text':'
 * Enable or disable CPU dispatched features at runtime if the environment variable
 * `NPY_ENABLE_CPU_FEATURES`  or  `NPY_DISABLE_CPU_FEATURES`
 * depends on the value of boolean parameter `disable`(toggle).
 *
 * Multiple features can be present, and separated by space, comma, or tab.
 * Raises an error if parsing fails or if the feature was not enabled or disabled
','line_number':16,'multiline':True]['text':' Ensure the build's CPU baseline features are supported at runtime ','line_number':27,'multiline':True]['text':'******************* Public Definitions ********************','line_number':31,'multiline':True]['text':'******************* Private Definitions ********************','line_number':178,'multiline':True]['text':'*
 * Returns CPU feature's ID, if the 'feature' was part of baseline
 * features that had been configured via --cpu-baseline
 * otherwise it returns 0
','line_number':182,'multiline':True]['text':'*
 * Returns CPU feature's ID, if the 'feature' was part of dispatched
 * features that had been configured via --cpu-dispatch
 * otherwise it returns 0
','line_number':195,'multiline':True]['text':' extra arg for msvc','line_number':222,'multiline':False]['text':' trim the last space','line_number':226,'multiline':False]['text':' More than enough for this era','line_number':254,'multiline':False]['text':'comma and space including (htab, vtab, CR, LF, FF)','line_number':272,'multiline':False]['text':' check if the feature is part of dispatched features','line_number':288,'multiline':False]['text':' check if the feature supported by the running machine','line_number':296,'multiline':False]['text':' Finally we can disable or mark for enabling','line_number':303,'multiline':False]['text':' Disables any unmarked dispatched feature.','line_number':309,'multiline':False]['text':' extra arg for msvc','line_number':314,'multiline':False]['text':' trim the last space','line_number':319,'multiline':False]['text':' trim the last space','line_number':339,'multiline':False]['text':'***************************************************************
 * This section is reserved to defining @npy__cpu_init_features
 * for each CPU architecture, please try to keep it clean. Ty
 ***************************************************************','line_number':362,'multiline':True]['text':'**************** X86 *****************','line_number':367,'multiline':True]['text':' named form of xgetbv not supported on OSX, so must use byte form, see:
     * https://github.com/asmjit/asmjit/issues/78
    ','line_number':383,'multiline':True]['text':' %ebx may be the PIC register','line_number':403,'multiline':False]['text':' validate platform support','line_number':428,'multiline':False]['text':' check OSXSAVE','line_number':452,'multiline':False]['text':' check AVX OS support','line_number':455,'multiline':False]['text':' second call to the cpuid to get extended AMD feature bits','line_number':464,'multiline':False]['text':' third call to the cpuid to get extended AVX2 & AVX512 feature bits','line_number':469,'multiline':False]['text':' detect AVX2 & FMA3','line_number':474,'multiline':False]['text':' check AVX512 OS support','line_number':477,'multiline':False]['text':'*
     * On darwin, machines with AVX512 support, by default, threads are created with
     * AVX512 masked off in XCR0 and an AVX-sized savearea is used.
     * However, AVX512 capabilities are advertised in the commpage and via sysctl.
     * for more information, check:
     *  - https://github.com/apple/darwin-xnu/blob/0a798f6738bc1db01281fc08ae024145e84df927/osfmk/i386/fpu.c#L175-L201
     *  - https://github.com/golang/go/issues/43089
     *  - https://github.com/numpy/numpy/issues/19319
     ','line_number':480,'multiline':True]['text':' cpu_capabilities64 undefined in versions < 13','line_number':492,'multiline':False]['text':' Knights Landing','line_number':505,'multiline':False]['text':' Knights Mill','line_number':510,'multiline':False]['text':' Skylake-X','line_number':519,'multiline':False]['text':' Cascade Lake','line_number':526,'multiline':False]['text':' Cannon Lake','line_number':531,'multiline':False]['text':' Ice Lake','line_number':537,'multiline':False]['text':' Sapphire Rapids','line_number':545,'multiline':False]['text':'**************** POWER *****************','line_number':553,'multiline':True]['text':' defines PPC_FEATURE_HAS_VSX','line_number':559,'multiline':False]['text':' __linux__','line_number':594,'multiline':False]['text':' TODO: AIX, OpenBSD','line_number':607,'multiline':False]['text':'**************** ZARCH *****************','line_number':622,'multiline':True]['text':'**************** ARM *****************','line_number':658,'multiline':True]['text':'
 * we aren't sure of what kind kernel or clib we deal with
 * so we play it safe
','line_number':672,'multiline':True]['text':' linker should handle it','line_number':680,'multiline':False]['text':' linker should handle it','line_number':683,'multiline':False]['text':' detect the end','line_number':717,'multiline':False]['text':'
         * try parsing with /proc/cpuinfo, if sandboxed
         * failback to compiler definitions
        ','line_number':733,'multiline':True]['text':' Detect Arm8 (aarch32 state)','line_number':745,'multiline':False]['text':' Is this could happen? maybe disabled by kernel','line_number':755,'multiline':False]['text':' BTW this will break the baseline of AARCH64','line_number':756,'multiline':False]['text':' We have nothing else todo','line_number':785,'multiline':False]['text':'********** Unsupported ARCH **********','line_number':816,'multiline':True]['text':'
     * just in case if the compiler doesn't respect ANSI
     * but for knowing platforms it still nessecery, because @npy__cpu_init_features
     * may called multiple of times and we need to clear the disabled features by
     * ENV Var or maybe in the future we can support other methods like
     * global variables, go back to @npy__cpu_try_disable_env for more understanding
     ','line_number':821,'multiline':True]