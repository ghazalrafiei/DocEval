['text':'
 * This functionality is designed specifically for the ufunc machinery to
 * dispatch based on multiple DTypes.  Since this is designed to be used
 * as purely a cache, it currently does no reference counting.
 * Even though this is a cache, there is currently no maximum size.  It may
 * make sense to limit the size, or count collisions:  If too many collisions
 * occur, we could grow the cache, otherwise, just replace an old item that
 * was presumably not used for a long time.
 *
 * If a different part of NumPy requires a custom hashtable, the code should
 * be reused with care since specializing it more for the ufunc dispatching
 * case is likely desired.
 ','line_number':1,'multiline':True]['text':' Rotate left 31 bits ','line_number':24,'multiline':True]['text':' Rotate left 13 bits ','line_number':29,'multiline':True]['text':'
 * This hashing function is basically the Python tuple hash with the type
 * identity hash inlined. The tuple hash itself is a reduced version of xxHash.
 *
 * Users cannot control pointers, so we do not have to worry about DoS attacks?
 ','line_number':32,'multiline':True]['text':'
         * Lane is the single item hash, which for us is the rotated pointer.
         * Identical to the python type hash (pointers end with 0s normally).
         ','line_number':43,'multiline':True]['text':' The item is not in the cache; return the empty bucket ','line_number':75,'multiline':True]['text':' This is a match, so return the item/bucket ','line_number':79,'multiline':True]['text':' Hash collision, perturb like Python (must happen rarely!) ','line_number':82,'multiline':True]['text':' Python uses the macro PERTURB_SHIFT == 5 ','line_number':83,'multiline':True]['text':' Start with a size of 4 ','line_number':100,'multiline':True]['text':' Double in size ','line_number':129,'multiline':True]['text':'
             * Should possibly be improved.  However, we assume that we
             * almost never shrink.  Still if we do, do not shrink as much
             * as possible to avoid growing right away.
             ','line_number':135,'multiline':True]['text':' Decrement, setitem will increment again ','line_number':163,'multiline':True]['text':'*
 * Add an item to the identity cache.  The storage location must not change
 * unless the cache is cleared.
 *
 * @param tb The mapping.
 * @param key The key, must be a C-array of pointers of the length
 *        corresponding to the mapping.
 * @param value Normally a Python object, no reference counting is done.
 *        use NULL to clear an item.  If the item does not exist, no
 *        action is performed for NULL.
 * @param replace If 1, allow replacements.
 * @returns 0 on success, -1 with a MemoryError or RuntimeError (if an item
 *        is added which is already in the cache).  The caller should avoid
 *        the RuntimeError.
 ','line_number':172,'multiline':True]['text':' Shrink, only if a new value is added. ','line_number':192,'multiline':True]['text':' Clear the bucket -- just the value should be enough though. ','line_number':208,'multiline':True]