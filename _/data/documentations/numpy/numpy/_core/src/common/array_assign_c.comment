['text':'
 * This file implements some helper functions for the array assignment
 * routines. The actual assignment routines are in array_assign_*.c
 *
 * Written by Mark Wiebe (mwwiebe@gmail.com)
 * Copyright (c) 2011 by Enthought, Inc.
 *
 * See LICENSE.txt for the license.
 ','line_number':1,'multiline':True]['text':' See array_assign.h for parameter documentation ','line_number':27,'multiline':True]['text':' Can't broadcast to fewer dimensions ','line_number':36,'multiline':True]['text':'
     * Process from the end to the start, so that 'strides' and 'out_strides'
     * can point to the same memory.
     ','line_number':41,'multiline':True]['text':' If it doesn't have dimension one, it must match ','line_number':47,'multiline':True]['text':' New dimensions get a zero stride ','line_number':59,'multiline':True]['text':' See array_assign.h for parameter documentation ','line_number':87,'multiline':True]['text':'
     * The code below expects the following:
     *  * that alignment is a power of two, as required by the C standard.
     *  * that casting from pointer to uintp gives a sensible representation
     *    we can use bitwise operations on (perhaps *not* req. by C std,
     *    but assumed by glibc so it should be fine)
     *  * that casting stride from intp to uintp (to avoid dependence on the
     *    signed int representation) preserves remainder wrt alignment, so
     *    stride%a is the same as ((unsigned intp)stride)%a. Req. by C std.
     *
     *  The code checks whether the lowest log2(alignment) bits of `data`
     *  and all `strides` are 0, as this implies that
     *  (data + n*stride)%alignment == 0 for all integers n.
     ','line_number':93,'multiline':True]['text':' skip dim == 1 as it is not required to have stride 0 ','line_number':113,'multiline':True]['text':' if shape[i] == 1, the stride is never used ','line_number':115,'multiline':True]['text':' an array with zero elements is always aligned ','line_number':119,'multiline':True]['text':' always return false for alignment == 0, which means cannot-be-aligned ','line_number':130,'multiline':True]['text':' Returns 1 if the arrays have overlapping data, 0 otherwise ','line_number':153,'multiline':True]