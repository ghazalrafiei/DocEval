['text':' Note: np.unique() is split into four functions in the array API:','line_number':9,'multiline':False]['text':' unique_all, unique_counts, unique_inverse, and unique_values (this is done','line_number':10,'multiline':False]['text':' to remove polymorphic return types).','line_number':11,'multiline':False]['text':' Note: The various unique() functions are supposed to return multiple NaNs.','line_number':13,'multiline':False]['text':' This does not match the NumPy behavior, however, this is currently left as a','line_number':14,'multiline':False]['text':' TODO in this implementation as this behavior may be reverted in np.unique().','line_number':15,'multiline':False]['text':' See https://github.com/numpy/numpy/issues/20326.','line_number':16,'multiline':False]['text':' Note: The functions here return a namedtuple (np.unique() returns a normal','line_number':18,'multiline':False]['text':' tuple).','line_number':19,'multiline':False]['text':' np.unique() flattens inverse indices, but they need to share x's shape','line_number':51,'multiline':False]['text':' See https://github.com/numpy/numpy/issues/20638','line_number':52,'multiline':False]['text':' np.unique() flattens inverse indices, but they need to share x's shape','line_number':87,'multiline':False]['text':' See https://github.com/numpy/numpy/issues/20638','line_number':88,'multiline':False]