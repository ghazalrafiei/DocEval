['text':' from numpy/testing/_private/utils.py','line_number':11,'multiline':False]['text':' architectures and compilers to test','line_number':27,'multiline':False]['text':' fake objects','line_number':67,'multiline':False]['text':' x86_64','line_number':78,'multiline':False]['text':' gcc','line_number':79,'multiline':False]['text':' converting multi-target into parentheses str format to be equivalent','line_number':123,'multiline':False]['text':' to the configuration statements syntax.','line_number':124,'multiline':False]['text':' convert tuple that represent multi-target into parentheses str format','line_number':131,'multiline':False]['text':' return targets from 'sources_status' since the order is matters','line_number':141,'multiline':False]['text':' check sanity of argument's validation','line_number':304,'multiline':False]['text':' unknowing features','line_number':306,'multiline':False]['text':' groups and polices aren't acceptable','line_number':307,'multiline':False]['text':' only takes what platform supports and skip the others','line_number':316,'multiline':False]['text':' without casing exceptions','line_number':317,'multiline':False]['text':' any features in cpu_dispatch must be ignored if it's part of baseline','line_number':329,'multiline':False]['text':' baseline combining implied features, so we count','line_number':340,'multiline':False]['text':' on it instead of testing 'feature_implies()'' directly','line_number':341,'multiline':False]['text':' .* between two spaces can validate features in between','line_number':344,'multiline':False]['text':' in icc and msvc, FMA3 and AVX2 can't be separated','line_number':352,'multiline':False]['text':' both need to implies each other, same for avx512f & cd','line_number':353,'multiline':False]['text':' in msvc, following features can't be separated too','line_number':367,'multiline':False]['text':' in ppc64le VSX and VSX2 can't be separated','line_number':374,'multiline':False]['text':' in aarch64 following features can't be separated','line_number':376,'multiline':False]['text':' max & native','line_number':381,'multiline':False]['text':' in icc, xop and fam4 aren't supported','line_number':402,'multiline':False]['text':' in msvc, avx512_knl avx512_knm aren't supported','line_number':405,'multiline':False]['text':' min','line_number':411,'multiline':False]['text':' an exception must triggered if native flag isn't supported','line_number':421,'multiline':False]['text':' when option "native" is activated through the args','line_number':422,'multiline':False]['text':' testing normalize -march','line_number':448,'multiline':False]['text':' asimdfhm implies asimdhp','line_number':463,'multiline':False]['text':' no features','line_number':488,'multiline':False]['text':' test skipping baseline features','line_number':542,'multiline':False]['text':' test skipping non-dispatch features','line_number':556,'multiline':False]['text':' test skipping features that not supported','line_number':569,'multiline':False]['text':' test skipping features that implies each other','line_number':584,'multiline':False]['text':' 'keep_baseline', generate objects for baseline features','line_number':606,'multiline':False]['text':' neon, neon_vfpv4, asimd implies each other','line_number':621,'multiline':False]['text':' 'keep_sort', leave the sort as-is','line_number':625,'multiline':False]['text':' neon, neon_vfpv4, asimd implies each other','line_number':639,'multiline':False]['text':' 'autovec', skipping features that can't be','line_number':643,'multiline':False]['text':' vectorized by the compiler','line_number':644,'multiline':False]['text':' neon, neon_vfpv4, asimd implies each other','line_number':661,'multiline':False]['text':' 'maxopt' and autovec set the max acceptable optimization flags','line_number':665,'multiline':False]['text':' 'werror', force compilers to treat warnings as errors','line_number':673,'multiline':False]['text':' test skip duplicating and sorting','line_number':697,'multiline':False]['text':' vsx2 part of the default baseline of ppc64le, option ("min")','line_number':718,'multiline':False]['text':' asimd part of the default baseline of aarch64, option ("min")','line_number':721,'multiline':False]['text':' test skipping implied features and auto-sort','line_number':735,'multiline':False]['text':' vsx2 part of baseline','line_number':746,'multiline':False]['text':' test skipping implied features and keep sort','line_number':749,'multiline':False]['text':' test compiler variety and avoiding duplicating','line_number':764,'multiline':False]