['text':'
 * ProGuard -- shrinking, optimization, obfuscation, and preverification
 *             of Java bytecode.
 *
 * Copyright (c) 2002-2019 Guardsquare NV
 *
 * This program is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License as published by the Free
 * Software Foundation; either version 2 of the License, or (at your option)
 * any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
 * more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 ','line_number':1,'multiline':True]['text':'*
 * This ClassVisitor prints out the renamed classes and class members with
 * their old names and new names.
 *
 * @see ClassRenamer
 *
 * @author Eric Lafortune
 ','line_number':34,'multiline':True]['text':' A field serving as a return value for the visitor methods.','line_number':50,'multiline':False]['text':'*
     * Creates a new MappingPrinter that prints to the given writer.
     * @param printWriter the writer to which to print.
     ','line_number':54,'multiline':True]['text':' Implementations for ClassVisitor.','line_number':64,'multiline':False]['text':' Print out the class mapping.','line_number':71,'multiline':False]['text':' Print out the class members.','line_number':77,'multiline':False]['text':' Implementations for MemberVisitor.','line_number':83,'multiline':False]['text':' Print out the field mapping.','line_number':94,'multiline':False]['text':' Print out the method mapping, if it has line numbers.','line_number':112,'multiline':False]['text':' Otherwise print out the method mapping without line numbers.','line_number':116,'multiline':False]['text':' Implementations for AttributeVisitor.','line_number':129,'multiline':False]['text':' Does the method have any local line numbers at all?','line_number':156,'multiline':False]['text':' Print out the line number range of the method,','line_number':161,'multiline':False]['text':' ignoring line numbers of any inlined methods.','line_number':162,'multiline':False]['text':' Print out the method mapping without line numbers.','line_number':174,'multiline':False]['text':' Print out the line numbers of any inlined methods and their','line_number':184,'multiline':False]['text':' enclosing methods.','line_number':185,'multiline':False]['text':' Are we entering or exiting an inlined block (or a merged block)?','line_number':194,'multiline':False]['text':' We're testing on the identities out of convenience.','line_number':195,'multiline':False]['text':' Source can be null for injected code.','line_number':198,'multiline':False]['text':' Are we entering or exiting the block?','line_number':201,'multiline':False]['text':' We're entering an inlined block.','line_number':206,'multiline':False]['text':' Accumulate its enclosing line numbers, so they can be','line_number':207,'multiline':False]['text':' printed out for each inlined block.','line_number':208,'multiline':False]['text':' TODO: There appear to be cases where the stack is empty at this point, so we've added a check.','line_number':221,'multiline':False]['text':' We're exiting an inlined block.','line_number':224,'multiline':False]['text':' Pop its enclosing line number.','line_number':225,'multiline':False]['text':' TODO: There appear to be cases where the stack is empty at this point, so we've added a check.','line_number':231,'multiline':False]['text':' When exiting a top-level inlined block, the source might be null.','line_number':234,'multiline':False]['text':' See LineNumberLinearizer, line 185, exiting an inlined block.','line_number':235,'multiline':False]['text':' Small utility methods.','line_number':247,'multiline':False]['text':'*
     * Prints out the mapping of the specified inlined methods and its
     * enclosing methods.
     ','line_number':249,'multiline':True]['text':' Parse the information from the source string of the','line_number':262,'multiline':False]['text':' inlined method.','line_number':263,'multiline':False]['text':' Compute the shifted line number range.','line_number':277,'multiline':False]['text':' Print out the line number range of the inlined method.','line_number':281,'multiline':False]['text':' Print out the line numbers of the accumulated enclosing','line_number':293,'multiline':False]['text':' methods.','line_number':294,'multiline':False]['text':'*
     * Prints out the mapping of the specified enclosing method.
     ','line_number':311,'multiline':True]['text':' Parse the information from the source string of the enclosing','line_number':321,'multiline':False]['text':' method.','line_number':322,'multiline':False]['text':' We need the first line number to correct the shifted enclosing','line_number':344,'multiline':False]['text':' line number back to its original range.','line_number':345,'multiline':False]['text':' Print out the line number of the enclosing method.','line_number':354,'multiline':False]