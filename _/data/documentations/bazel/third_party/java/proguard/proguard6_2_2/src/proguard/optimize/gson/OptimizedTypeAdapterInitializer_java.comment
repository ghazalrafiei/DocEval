['text':'
 * ProGuard -- shrinking, optimization, obfuscation, and preverification
 *             of Java bytecode.
 *
 * Copyright (c) 2002-2019 Guardsquare NV
 *
 * This program is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License as published by the Free
 * Software Foundation; either version 2 of the License, or (at your option)
 * any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
 * more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 ','line_number':1,'multiline':True]['text':'*
 * This class visitor transforms the template _OptimizedTypeAdapter into a full
 * implementation of a GSON TypeAdapter for a specific domain class.
 *
 * The read() and write() methods will be implemented appropriately and will
 * delegate to the toJson$xxx() and fromJson$xxx() methods that are injected
 * into the domain classes.
 *
 * The visited class will be renamed, e.g. if the domain class for which the
 * TypeAdapter is meant to be used is called DomainObject, the class name will
 * be OptimizedDomainObjectTypeAdapter.
 *
 * @author Lars Vandenbergh
 ','line_number':35,'multiline':True]['text':'*
     * Creates a new OptimizedTypeAdapterInitializer.
     *
     * @param typeAdapterClassName   the class name of the optimized type
     *                               adapter.
     * @param objectProgramClass     the class name of the domain class for
     *                               which the type adapter is meant.
     * @param codeAttributeEditor    the code attribute editor used to edit
     *                               the code attribute of the read() and
     *                               write() methods.
     * @param serializationInfo      contains information on which classes
     *                               and fields to serialize and how.
     * @param deserializationInfo    contains information on which classes
     *                               and fields to deserialize and how.
     * @param instanceCreatorClasses class pool that contains all domain
     *                               classes for which an InstanceCreator
     *                               is registered.
     * @param classVisitor           visitor to which all implemented type
     *                               adapters are delegated.
     ','line_number':63,'multiline':True]['text':' Implementations for ClassVisitor.','line_number':102,'multiline':False]['text':' Rename template class to specific type adapter class name.','line_number':111,'multiline':False]['text':' Make sure the enum is accessible from the type adapter.','line_number':122,'multiline':False]['text':' Pass on to class visitor.','line_number':145,'multiline':False]['text':' Implementations for ConstantVisitor.','line_number':155,'multiline':False]['text':' Implementations for AttributeVisitor.','line_number':173,'multiline':False]['text':' Implementations for LocalVariableInfoVisitor.','line_number':185,'multiline':False]['text':'*
     * Visits the code attribute of the the read() method of the TypeAdapter and
     * provides it with a proper implementation for enum types.
     ','line_number':201,'multiline':True]['text':' Implementations for AttributeVisitor.','line_number':209,'multiline':False]['text':' Deserialization','line_number':221,'multiline':False]['text':'*
     * Visits the code attribute of the the read() method of the TypeAdapter and
     * provides it with a proper implementation for non-enum types.
     ','line_number':305,'multiline':True]['text':' Implementations for AttributeVisitor.','line_number':313,'multiline':False]['text':' Peek the next value and check if it is null.','line_number':331,'multiline':False]['text':' If it is null, skip value in JSON.','line_number':341,'multiline':False]['text':' Return null as result.','line_number':346,'multiline':False]['text':' If the next value is not null, create an instance of the domain class.','line_number':350,'multiline':False]['text':' For classes for which an InstanceCreator is registered, we','line_number':364,'multiline':False]['text':' let the instance creator instantiate the class.','line_number':365,'multiline':False]['text':' Deserialize object by calling its fromJson$ method.','line_number':386,'multiline':False]['text':' Return deserialized object.','line_number':401,'multiline':False]['text':'*
     * Visits the code attribute of the the write() method of the TypeAdapter and
     * provides it with a proper implementation for enum types.
     ','line_number':411,'multiline':True]['text':' Implementations for AttributeVisitor.','line_number':419,'multiline':False]['text':' Check if the passed value is null.','line_number':435,'multiline':False]['text':' If it is null, write null value in JSON.','line_number':439,'multiline':False]['text':' If it is not null, serialize value.','line_number':447,'multiline':False]['text':'*
     * Visits the code attribute of the the write() method of the TypeAdapter and
     * provides it with a proper implementation for non-enum types.
     ','line_number':490,'multiline':True]['text':' Implementations for AttributeVisitor.','line_number':498,'multiline':False]['text':' Check if the passed value is null.','line_number':517,'multiline':False]['text':' If it is null, write null value in JSON.','line_number':521,'multiline':False]['text':' If the next value is not null, serialize object by calling its toJson$ method.','line_number':529,'multiline':False]