['text':'
 * ProGuard -- shrinking, optimization, obfuscation, and preverification
 *             of Java bytecode.
 *
 * Copyright (c) 2002-2019 Guardsquare NV
 *
 * This program is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License as published by the Free
 * Software Foundation; either version 2 of the License, or (at your option)
 * any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
 * more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 ','line_number':1,'multiline':True]['text':'*
 * This <code>ClassVisitor</code> comes up with obfuscated names for the
 * classes it visits, and for their class members. The actual renaming is
 * done afterward.
 *
 * @see ClassRenamer
 *
 * @author Eric Lafortune
 ','line_number':34,'multiline':True]['text':' Map: [package prefix - new package prefix]','line_number':60,'multiline':False]['text':' Map: [package prefix - package name factory]','line_number':63,'multiline':False]['text':' Map: [package prefix - numeric class name factory]','line_number':66,'multiline':False]['text':' Map: [package prefix - numeric class name factory]','line_number':69,'multiline':False]['text':' Field acting as temporary variables and as return values for names','line_number':72,'multiline':False]['text':' of outer classes and types of inner classes.','line_number':73,'multiline':False]['text':'*
     * Creates a new ClassObfuscator.
     * @param programClassPool        the class pool in which class names
     *                                have to be unique.
     * @param libraryClassPool        the class pool from which class names
     *                                have to be avoided.
     * @param classNameFactory        the optional class obfuscation dictionary.
     * @param packageNameFactory      the optional package obfuscation
     *                                dictionary.
     * @param useMixedCaseClassNames  specifies whether obfuscated packages and
     *                                classes can get mixed-case names.
     * @param keepPackageNames        the optional filter for which matching
     *                                package names are kept.
     * @param flattenPackageHierarchy the base package if the obfuscated package
     *                                hierarchy is to be flattened.
     * @param repackageClasses        the base package if the obfuscated classes
     *                                are to be repackaged.
     * @param allowAccessModification specifies whether obfuscated classes can
     *                                be freely moved between packages.
     ','line_number':78,'multiline':True]['text':' First append the package separator if necessary.','line_number':111,'multiline':False]['text':' First append the package separator if necessary.','line_number':118,'multiline':False]['text':' Map the root package onto the root package.','line_number':132,'multiline':False]['text':' Collect all names that have already been taken.','line_number':135,'multiline':False]['text':' Implementations for ClassVisitor.','line_number':141,'multiline':False]['text':' Does this class still need a new name?','line_number':145,'multiline':False]['text':' Make sure the outer class has a name, if it exists. The name will','line_number':149,'multiline':False]['text':' be stored as the new class name, as a side effect, so we'll be','line_number':150,'multiline':False]['text':' able to use it as a prefix.','line_number':151,'multiline':False]['text':' Figure out a package prefix. The package prefix may actually be','line_number':154,'multiline':False]['text':' the an outer class prefix, if any, or it may be the fixed base','line_number':155,'multiline':False]['text':' package, if classes are to be repackaged.','line_number':156,'multiline':False]['text':' Come up with a new class name, numeric or ordinary.','line_number':161,'multiline':False]['text':' This can happen for dubious input, if the outer class of a program','line_number':173,'multiline':False]['text':' class is a library class, and its name is requested.','line_number':174,'multiline':False]['text':' Implementations for AttributeVisitor.','line_number':179,'multiline':False]['text':' Make sure the outer classes have a name, if they exist.','line_number':186,'multiline':False]['text':' Make sure the enclosing class has a name.','line_number':193,'multiline':False]['text':' Implementations for InnerClassesInfoVisitor.','line_number':204,'multiline':False]['text':' Make sure the outer class has a name, if it exists.','line_number':208,'multiline':False]['text':'*
     * Returns whether the given inner class name is a numeric name.
     ','line_number':228,'multiline':True]['text':' Implementations for ConstantVisitor.','line_number':254,'multiline':False]['text':' Make sure the outer class has a name.','line_number':258,'multiline':False]['text':'*
     * This ClassVisitor collects package names and class names that have to
     * be kept.
     ','line_number':263,'multiline':True]['text':' Does the program class already have a new name?','line_number':271,'multiline':False]['text':' Remember not to use this name.','line_number':275,'multiline':False]['text':' Are we not aggressively repackaging all obfuscated classes?','line_number':278,'multiline':False]['text':' Keep the package name for all other classes in the same','line_number':284,'multiline':False]['text':' package. Do this recursively if we're not doing any','line_number':285,'multiline':False]['text':' repackaging.','line_number':286,'multiline':False]['text':' Get the new name or the original name of the library class.','line_number':298,'multiline':False]['text':' Remember not to use this name.','line_number':305,'multiline':False]['text':' Are we not aggressively repackaging all obfuscated classes?','line_number':308,'multiline':False]['text':' Keep the package name for all other classes in the same','line_number':314,'multiline':False]['text':' package. Do this recursively if we're not doing any','line_number':315,'multiline':False]['text':' repackaging.','line_number':316,'multiline':False]['text':'*
         * Makes sure the package name of the given class will always be mapped
         * consistently with its new name.
         ','line_number':325,'multiline':True]['text':' Put the mapping of this package prefix, and possibly of its','line_number':336,'multiline':False]['text':' entire hierarchy, into the package prefix map.','line_number':337,'multiline':False]['text':' Small utility methods.','line_number':356,'multiline':False]['text':'*
     * Finds or creates the new package prefix for the given package.
     ','line_number':358,'multiline':True]['text':' Doesn't the package prefix have a new package prefix yet?','line_number':363,'multiline':False]['text':' Are we keeping the package name?','line_number':367,'multiline':False]['text':' Are we forcing a new package prefix?','line_number':376,'multiline':False]['text':' Are we forcing a new superpackage prefix?','line_number':382,'multiline':False]['text':' Otherwise figure out the new superpackage prefix, recursively.','line_number':383,'multiline':False]['text':' Come up with a new package prefix.','line_number':388,'multiline':False]['text':' Remember to use this mapping in the future.','line_number':391,'multiline':False]['text':'*
     * Creates a new package prefix in the given new superpackage.
     ','line_number':399,'multiline':True]['text':' Find the right name factory for this package.','line_number':404,'multiline':False]['text':' We haven't seen packages in this superpackage before. Create','line_number':409,'multiline':False]['text':' a new name factory for them.','line_number':410,'multiline':False]['text':'*
     * Creates a new package prefix in the given new superpackage, with the
     * given package name factory.
     ','line_number':427,'multiline':True]['text':' Come up with package names until we get an original one.','line_number':434,'multiline':False]['text':' Let the factory produce a package name.','line_number':438,'multiline':False]['text':'*
     * Creates a new class name in the given new package.
     ','line_number':449,'multiline':True]['text':' Find the right name factory for this package.','line_number':454,'multiline':False]['text':' We haven't seen classes in this package before.','line_number':459,'multiline':False]['text':' Create a new name factory for them.','line_number':460,'multiline':False]['text':'*
     * Creates a new class name in the given new package.
     ','line_number':477,'multiline':True]['text':' Find the right name factory for this package.','line_number':482,'multiline':False]['text':' We haven't seen classes in this package before.','line_number':487,'multiline':False]['text':' Create a new name factory for them.','line_number':488,'multiline':False]['text':'*
     * Creates a new class name in the given new package, with the given
     * class name factory.
     ','line_number':499,'multiline':True]['text':' Come up with class names until we get an original one.','line_number':506,'multiline':False]['text':' Let the factory produce a class name.','line_number':511,'multiline':False]['text':' Explicitly make sure the name isn't used again if we have a','line_number':519,'multiline':False]['text':' user-specified dictionary and we're not allowed to have mixed case','line_number':520,'multiline':False]['text':' class names -- just to protect against problematic dictionaries.','line_number':521,'multiline':False]['text':'*
     * Returns the given class name, unchanged if mixed-case class names are
     * allowed, or the lower-case version otherwise.
     ','line_number':532,'multiline':True]['text':'*
     * Assigns a new name to the given class.
     * @param clazz the given class.
     * @param name  the new name.
     ','line_number':544,'multiline':True]['text':'*
     * Retrieves the new name of the given class.
     * @param clazz the given class.
     * @return the class's new name, or <code>null</code> if it doesn't
     *         have one yet.
     ','line_number':555,'multiline':True]