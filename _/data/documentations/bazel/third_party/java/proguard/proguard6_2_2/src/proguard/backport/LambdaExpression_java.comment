['text':'
 * ProGuard -- shrinking, optimization, obfuscation, and preverification
 *             of Java bytecode.
 *
 * Copyright (c) 2002-2019 Guardsquare NV
 *
 * This program is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License as published by the Free
 * Software Foundation; either version 2 of the License, or (at your option)
 * any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
 * more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 ','line_number':1,'multiline':True]['text':'*
 * A small helper class that captures useful information
 * about a lambda expression as encountered in a class file.
 *
 * @author Thomas Neidhart
 ','line_number':27,'multiline':True]['text':' The referenced class of the lambda expression.','line_number':35,'multiline':False]['text':' The referenced bootstrap method index.','line_number':38,'multiline':False]['text':' The referenced bootstrap method info.','line_number':40,'multiline':False]['text':' The lambda factory method type.','line_number':43,'multiline':False]['text':' The implemented interfaces of the Lambda expression.','line_number':46,'multiline':False]['text':' The additional bridge method descriptors to be added.','line_number':49,'multiline':False]['text':' The name and descriptor of the implemented interface method.','line_number':52,'multiline':False]['text':' Information regarding the invoked method.','line_number':56,'multiline':False]['text':' The created lambda class.','line_number':65,'multiline':False]['text':'*
     * Creates a new initialized LambdaExpression (except for the lambdaClass).
     ','line_number':69,'multiline':True]['text':'*
     * Returns the class name of the converted anonymous class.
     ','line_number':104,'multiline':True]['text':'*
     * Returns whether the lambda expression is serializable.
     ','line_number':130,'multiline':True]['text':'*
     * Returns whether the lambda expression is actually a method reference.
     ','line_number':146,'multiline':True]['text':'*
     * Returns whether the lambda expression is stateless.
     ','line_number':155,'multiline':True]['text':' The lambda expression is stateless if the factory method does','line_number':160,'multiline':False]['text':' not have arguments.','line_number':161,'multiline':False]['text':'*
     * Returns whether the invoked method is a static interface method.
     ','line_number':167,'multiline':True]['text':' We assume unknown classes are not interfaces.','line_number':172,'multiline':False]['text':'*
     * Returns whether the invoked method is a non-static, private synthetic
     * method in an interface.
     ','line_number':179,'multiline':True]['text':'*
     * Returns whether an accessor method is needed to access
     * the invoked method from the lambda class.
     ','line_number':191,'multiline':True]['text':' We assume unknown classes don't need an accessor method.','line_number':197,'multiline':False]['text':'*
     * Returns whether the lambda expression is a method reference
     * to a private constructor.
     ','line_number':206,'multiline':True]['text':' Small Utility methods.','line_number':218,'multiline':False]