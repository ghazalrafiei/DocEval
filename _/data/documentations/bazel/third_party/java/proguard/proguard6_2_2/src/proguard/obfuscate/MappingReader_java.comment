['text':'
 * ProGuard -- shrinking, optimization, obfuscation, and preverification
 *             of Java bytecode.
 *
 * Copyright (c) 2002-2019 Guardsquare NV
 *
 * This program is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License as published by the Free
 * Software Foundation; either version 2 of the License, or (at your option)
 * any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
 * more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 ','line_number':1,'multiline':True]['text':'*
 * This class can parse mapping files and invoke a processor for each of the
 * mapping entries.
 *
 * @author Eric Lafortune
 ','line_number':26,'multiline':True]['text':'*
     * Reads the mapping file, presenting all of the encountered mapping entries
     * to the given processor.
     ','line_number':43,'multiline':True]['text':' Read the subsequent class mappings and class member mappings.','line_number':58,'multiline':False]['text':' Is it a non-comment line?','line_number':70,'multiline':False]['text':' Is it a class mapping or a class member mapping?','line_number':73,'multiline':False]['text':' Process the class mapping and remember the class's','line_number':76,'multiline':False]['text':' old name.','line_number':77,'multiline':False]['text':' Process the class member mapping, in the context of','line_number':82,'multiline':False]['text':' the current old class name.','line_number':83,'multiline':False]['text':' This shouldn't happen.','line_number':101,'multiline':False]['text':'*
     * Parses the given line with a class mapping and processes the
     * results with the given mapping processor. Returns the old class name,
     * or null if any subsequent class member lines can be ignored.
     ','line_number':107,'multiline':True]['text':' See if we can parse "___ -> ___:", containing the original','line_number':115,'multiline':False]['text':' class name and the new class name.','line_number':116,'multiline':False]['text':' Extract the elements.','line_number':130,'multiline':False]['text':' Process this class name mapping.','line_number':134,'multiline':False]['text':'*
     * Parses the given line with a class member mapping and processes the
     * results with the given mapping processor.
     ','line_number':141,'multiline':True]['text':' See if we can parse one of','line_number':149,'multiline':False]['text':'     ___ ___ -> ___','line_number':150,'multiline':False]['text':'     ___:___:___ ___(___) -> ___','line_number':151,'multiline':False]['text':'     ___:___:___ ___(___):___ -> ___','line_number':152,'multiline':False]['text':'     ___:___:___ ___(___):___:___ -> ___','line_number':153,'multiline':False]['text':' containing the optional line numbers, the return type, the original','line_number':154,'multiline':False]['text':' field/method name, optional arguments, the optional original line','line_number':155,'multiline':False]['text':' numbers, and the new field/method name. The original field/method','line_number':156,'multiline':False]['text':' name may contain an original class name "___.___".','line_number':157,'multiline':False]['text':' Extract the elements.','line_number':177,'multiline':False]['text':' Does the method name contain an explicit original class name?','line_number':182,'multiline':False]['text':' Process this class member mapping.','line_number':191,'multiline':False]['text':' Is it a field or a method?','line_number':196,'multiline':False]