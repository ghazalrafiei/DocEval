['text':'
 * ProGuard -- shrinking, optimization, obfuscation, and preverification
 *             of Java bytecode.
 *
 * Copyright (c) 2002-2019 Guardsquare NV
 *
 * This program is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License as published by the Free
 * Software Foundation; either version 2 of the License, or (at your option)
 * any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
 * more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 ','line_number':1,'multiline':True]['text':'*
 * This StringParser can create StringMatcher instances for regular expressions
 * matching file names. The regular expressions can contain the following
 * wildcards:
 * '?'  for a single regular file name character,
 * '*'  for any number of regular file name characters, and
 * '**' for any number of regular file name characters or directory separator
 *      characters (always including '/').
 *
 * @author Eric Lafortune
 ','line_number':25,'multiline':True]['text':' Implementations for StringParser.','line_number':38,'multiline':False]['text':' Look for wildcards.','line_number':45,'multiline':False]['text':' Is there a '**' wildcard?','line_number':48,'multiline':False]['text':' Create a matcher for the wildcard and, recursively, for the','line_number':51,'multiline':False]['text':' remainder of the string.','line_number':52,'multiline':False]['text':' Is there a '*' wildcard?','line_number':62,'multiline':False]['text':' Create a matcher for the wildcard and, recursively, for the','line_number':65,'multiline':False]['text':' remainder of the string.','line_number':66,'multiline':False]['text':' Is there a '?' wildcard?','line_number':76,'multiline':False]['text':' Create a matcher for the wildcard and, recursively, for the','line_number':79,'multiline':False]['text':' remainder of the string.','line_number':80,'multiline':False]['text':' Return a matcher for the fixed first part of the regular expression,','line_number':91,'multiline':False]['text':' if any, and the remainder.','line_number':92,'multiline':False]['text':'*
     * A main method for testing file name matching.
     ','line_number':99,'multiline':True]