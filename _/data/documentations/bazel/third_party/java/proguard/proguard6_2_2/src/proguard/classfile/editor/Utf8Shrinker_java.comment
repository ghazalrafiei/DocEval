['text':'
 * ProGuard -- shrinking, optimization, obfuscation, and preverification
 *             of Java bytecode.
 *
 * Copyright (c) 2002-2019 Guardsquare NV
 *
 * This program is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License as published by the Free
 * Software Foundation; either version 2 of the License, or (at your option)
 * any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
 * more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 ','line_number':1,'multiline':True]['text':'*
 * This ClassVisitor removes UTF-8 constant pool entries that are not used.
 *
 * @author Eric Lafortune
 ','line_number':38,'multiline':True]['text':' A visitor info flag to indicate the UTF-8 constant pool entry is being used.','line_number':56,'multiline':False]['text':' Implementations for ClassVisitor.','line_number':63,'multiline':False]['text':' Mark the UTF-8 entries referenced by the other constant pool entries.','line_number':67,'multiline':False]['text':' Mark the UTF-8 entries referenced by the fields and methods.','line_number':70,'multiline':False]['text':' Mark the UTF-8 entries referenced by the attributes.','line_number':74,'multiline':False]['text':' Shift the used constant pool entries together, filling out the','line_number':77,'multiline':False]['text':' index map.','line_number':78,'multiline':False]['text':' Remap the references to the constant pool if it has shrunk.','line_number':83,'multiline':False]['text':' Remap all constant pool references.','line_number':88,'multiline':False]['text':' Implementations for MemberVisitor.','line_number':95,'multiline':False]['text':' Mark the name and descriptor UTF-8 entries.','line_number':99,'multiline':False]['text':' Mark the UTF-8 entries referenced by the attributes.','line_number':103,'multiline':False]['text':' Implementations for ConstantVisitor.','line_number':108,'multiline':False]['text':' Implementations for AttributeVisitor.','line_number':132,'multiline':False]['text':' This is the best we can do for unknown attributes.','line_number':136,'multiline':False]['text':' Mark the UTF-8 entries referenced by the inner classes.','line_number':161,'multiline':False]['text':' These entries have already been marked in the constant pool.','line_number':170,'multiline':False]['text':'clazz.constantPoolEntryAccept(this, enclosingMethodAttribute.u2classIndex);','line_number':171,'multiline':False]['text':'clazz.constantPoolEntryAccept(this, enclosingMethodAttribute.u2nameAndTypeIndex);','line_number':172,'multiline':False]['text':' Mark the UTF-8 entries referenced by the parameter information.','line_number':236,'multiline':False]['text':' Mark the UTF-8 entries referenced by the attributes.','line_number':251,'multiline':False]['text':' Mark the UTF-8 entries referenced by the local variables.','line_number':278,'multiline':False]['text':' Mark the UTF-8 entries referenced by the local variable types.','line_number':287,'multiline':False]['text':' Mark the UTF-8 entries referenced by the annotations.','line_number':296,'multiline':False]['text':' Mark the UTF-8 entries referenced by the annotations.','line_number':305,'multiline':False]['text':' Mark the UTF-8 entries referenced by the element value.','line_number':314,'multiline':False]['text':' Implementations for InnerClassesInfoVisitor.','line_number':319,'multiline':False]['text':' Implementations for ParameterInfoVisitor.','line_number':330,'multiline':False]['text':' Implementations for LocalVariableInfoVisitor.','line_number':341,'multiline':False]['text':' Implementations for LocalVariableTypeInfoVisitor.','line_number':350,'multiline':False]['text':' Implementations for AnnotationVisitor.','line_number':359,'multiline':False]['text':' Mark the UTF-8 entries referenced by the element values.','line_number':365,'multiline':False]['text':' Implementations for ElementValueVisitor.','line_number':370,'multiline':False]['text':' Only the string constant element value refers to a UTF-8 entry.','line_number':379,'multiline':False]['text':' Mark the UTF-8 entries referenced by the annotation.','line_number':417,'multiline':False]['text':' Mark the UTF-8 entries referenced by the element values.','line_number':429,'multiline':False]['text':' Small utility methods.','line_number':434,'multiline':False]['text':'*
     * Marks the given UTF-8 constant pool entry of the given class.
     ','line_number':436,'multiline':True]['text':'*
     * Marks the given VisitorAccepter as being used.
     * In this context, the VisitorAccepter will be a Utf8Constant object.
     ','line_number':445,'multiline':True]['text':'*
     * Returns whether the given VisitorAccepter has been marked as being used.
     * In this context, the VisitorAccepter will be a Utf8Constant object.
     ','line_number':455,'multiline':True]['text':'*
     * Removes all UTF-8 entries that are not marked as being used
     * from the given constant pool.
     * @return the new number of entries.
     ','line_number':465,'multiline':True]['text':' Create a new index map, if necessary.','line_number':472,'multiline':False]['text':' Shift the used constant pool entries together.','line_number':481,'multiline':False]['text':' Is the constant being used? Don't update the flag if this is the','line_number':486,'multiline':False]['text':' second half of a long entry.','line_number':487,'multiline':False]['text':' Remember the new index.','line_number':496,'multiline':False]['text':' Shift the constant pool entry.','line_number':499,'multiline':False]['text':' Remember an invalid index.','line_number':504,'multiline':False]['text':' Clear the remaining constant pool elements.','line_number':509,'multiline':False]