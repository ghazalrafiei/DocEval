['text':'
 * ProGuard -- shrinking, optimization, obfuscation, and preverification
 *             of Java bytecode.
 *
 * Copyright (c) 2002-2019 Guardsquare NV
 *
 * This program is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License as published by the Free
 * Software Foundation; either version 2 of the License, or (at your option)
 * any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
 * more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 ','line_number':1,'multiline':True]['text':'*
 * This ClassVisitor initializes the superclass hierarchy of all classes that
 * it visits.
 * <p>
 * Visited library classes get direct references to their superclasses and
 * interfaces, replacing the superclass names and interface names. The direct
 * references are equivalent to the names, but they are more efficient to work
 * with.
 * <p>
 * This visitor optionally prints warnings if some superclasses can't be found
 * or if they are in the program class pool.
 *
 * @author Eric Lafortune
 ','line_number':28,'multiline':True]['text':'*
     * Creates a new ClassSuperHierarchyInitializer that initializes the super
     * hierarchy of all visited class files.
     ','line_number':53,'multiline':True]['text':'*
     * Creates a new ClassSuperHierarchyInitializer that initializes the super
     * hierarchy of all visited class files, optionally printing warnings if
     * some classes can't be found or if they are in the program class pool.
     ','line_number':63,'multiline':True]['text':' Implementations for ClassVisitor.','line_number':80,'multiline':False]['text':' Link to the super class.','line_number':84,'multiline':False]['text':' Link to the interfaces.','line_number':87,'multiline':False]['text':' Link to the super class.','line_number':96,'multiline':False]['text':' Keep a reference to the superclass.','line_number':100,'multiline':False]['text':' Link to the interfaces.','line_number':104,'multiline':False]['text':' Keep a reference to the interface class.','line_number':112,'multiline':False]['text':' Implementations for ConstantVisitor.','line_number':122,'multiline':False]['text':' Small utility methods.','line_number':131,'multiline':False]['text':'*
     * Returns the class with the given name, either for the program class pool
     * or from the library class pool, or <code>null</code> if it can't be found.
     ','line_number':133,'multiline':True]['text':' First look for the class in the program class pool.','line_number':139,'multiline':False]['text':' Otherwise look for the class in the library class pool.','line_number':142,'multiline':False]['text':' We didn't find the superclass or interface. Print a warning.','line_number':150,'multiline':False]['text':' The superclass or interface was found in the program class pool.','line_number':161,'multiline':False]['text':' Print a warning.','line_number':162,'multiline':False]