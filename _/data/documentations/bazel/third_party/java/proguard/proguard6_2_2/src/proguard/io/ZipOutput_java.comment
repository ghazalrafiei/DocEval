['text':'
 * ProGuard -- shrinking, optimization, obfuscation, and preverification
 *             of Java bytecode.
 *
 * Copyright (c) 2002-2019 Guardsquare NV
 *
 * This program is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License as published by the Free
 * Software Foundation; either version 2 of the License, or (at your option)
 * any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
 * more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 ','line_number':1,'multiline':True]['text':'*
 * This class writes zip data to a given output stream. It returns a new
 * output stream for each zip entry that is opened. An entry can be compressed
 * or uncompressed. Uncompressed entries can be aligned to a multiple of a
 * given number of bytes.
 *
 * Multiple entries and output streams can be open at the same time. The entries
 * are added to the central directory in the order in which they are opened, but
 * the corresponding data are only written when their output streams are closed.
 *
 * The code automatically computes the CRC and lengths of the data, for
 * compressed and uncompressed data.
 *
 * @author Eric Lafortune
 ','line_number':29,'multiline':True]['text':'*
     * Creates a new ZipOutput.
     * @param outputStream the output stream to which the zip data will be
     *                     written.
     ','line_number':68,'multiline':True]['text':'*
     * Creates a new ZipOutput that aligns uncompressed entries.
     * @param outputStream          the output stream to which the zip data will
     *                              be written.
     * @param header                an optional header for the jar file.
     * @param comment               optional comment for the entire zip file.
     * @param uncompressedAlignment the requested alignment of uncompressed data.
     ','line_number':80,'multiline':True]['text':'*
     * Creates a new zip entry, returning an output stream to write its data.
     * It is the caller's responsibility to close the output stream.
     * @param name             the name of the zip entry.
     * @param compress         specifies whether the entry should be compressed.
     * @param modificationTime the modification date and time of the zip entry,
     *                         in DOS format.
     * @return                 an output stream for writing the data of the
     *                         zip entry.
     ','line_number':105,'multiline':True]['text':'*
     * Creates a new zip entry, returning an output stream to write its data.
     * It is the caller's responsibility to close the output stream.
     * @param name             the name of the zip entry.
     * @param compress         specifies whether the entry should be compressed.
     * @param modificationTime the modification date and time of the zip entry,
     *                         in DOS format.
     * @param extraField       optional extra field data. These should contain
     *                         chunks, each with a short ID, a short length
     *                         (little endian), and their corresponding data.
     *                         The IDs 0-31 are reserved for Pkware.
     *                         Java's jar tool just specifies an ID 0xcafe on
     *                         its first entry.
     * @param comment          optional comment.
     * @return                 an output stream for writing the data of the
     *                         zip entry.
     ','line_number':128,'multiline':True]['text':' Check if the name hasn't been used yet.','line_number':152,'multiline':False]['text':' Add the entry to the list that will be put in the central directory.','line_number':164,'multiline':False]['text':'*
     * Closes the zip archive, also closing the underlying output stream.
     ','line_number':171,'multiline':True]['text':' Write the central directory.','line_number':176,'multiline':False]['text':' Close the underlying output stream.','line_number':188,'multiline':False]['text':' Make sure the archive can't be used any further.','line_number':191,'multiline':False]['text':'*
     * Starts the central directory.
     ','line_number':198,'multiline':True]['text':' The central directory as such doesn't have a header.','line_number':203,'multiline':False]['text':'*
     * Ends the central directory.
     ','line_number':208,'multiline':True]['text':' The size of the central directory, not counting this trailer.','line_number':218,'multiline':False]['text':' Number of this disk.','line_number':222,'multiline':False]['text':' Number of disk with central directory.','line_number':223,'multiline':False]['text':' Number of records on this disk.','line_number':224,'multiline':False]['text':' Total number of records.','line_number':225,'multiline':False]['text':' Size of central directory, in bytes.','line_number':226,'multiline':False]['text':' Offset of central directory.','line_number':227,'multiline':False]['text':' No comment.','line_number':231,'multiline':False]['text':' Comment length and comment.','line_number':236,'multiline':False]['text':'*
     * This class represents a zip entry in its enclosing zip file. It can
     * provide an output stream and write its headers and its data to the main
     * zip output stream. In fact, it automatically writes its local header and
     * data when the output stream is closed.
     ','line_number':244,'multiline':True]['text':'*
         * Creates a new zip entry, returning output stream to write its data.
         * It is the caller's responsibility to close the output stream.
         * @param name             the name of the zip entry.
         * @param compressed       specifies whether the entry should be
         *                         compressed.
         * @param modificationTime the modification date and time of the zip
         *                         entry, in DOS format.
         * @param extraField       optional extra field data. These should
         *                         contain chunks, each with a short ID, a short
         *                         length (little endian), and their
         *                         corresponding data. The IDs 0-31 are reserved
         *                         for Pkware. Java's jar tool just specifies an
         *                         ID 0xcafe on its first entry.
         * @param comment          optional comment.
         * @return                 an output stream for writing the zip data.
         ','line_number':263,'multiline':True]['text':'*
         * Writes the local file header, which precedes the data, to the main
         * zip output stream.
         ','line_number':302,'multiline':True]['text':'*
         * Writes the file header for the central directory to the main zip
         * output stream.
         ','line_number':338,'multiline':True]['text':' Creation version.','line_number':350,'multiline':False]['text':' Extraction Version.','line_number':351,'multiline':False]['text':' Disk number of file start.','line_number':366,'multiline':False]['text':' Internal file attributes.','line_number':367,'multiline':False]['text':' External file attributes.','line_number':368,'multiline':False]['text':'*
         * This OutputStream writes its uncompressed zip entry out to its zip
         * output stream when it is closed.
         ','line_number':383,'multiline':True]['text':' Overridden methods for OutputStream.','line_number':398,'multiline':False]['text':'public void write(byte[] b) throws IOException','line_number':408,'multiline':False]['text':'{','line_number':409,'multiline':False]['text':'    // The super implementation delegates to the method below.','line_number':410,'multiline':False]['text':'    super.write(b);','line_number':411,'multiline':False]['text':'}','line_number':412,'multiline':False]['text':'*
         * This OutputStream writes its compressed zip entry out to its zip
         * output stream when it is closed.
         ','line_number':440,'multiline':True]['text':' Overridden methods for OutputStream.','line_number':457,'multiline':False]['text':'public void write(int b) throws IOException','line_number':459,'multiline':False]['text':'{','line_number':460,'multiline':False]['text':'    // The super implementation delegates to the method below.','line_number':461,'multiline':False]['text':'    super.write(b);','line_number':462,'multiline':False]['text':'}','line_number':463,'multiline':False]['text':'','line_number':464,'multiline':False]['text':'','line_number':465,'multiline':False]['text':'public void write(byte[] b) throws IOException','line_number':466,'multiline':False]['text':'{','line_number':467,'multiline':False]['text':'    // The super implementation delegates to the method below.','line_number':468,'multiline':False]['text':'    super.write(b);','line_number':469,'multiline':False]['text':'}','line_number':470,'multiline':False]['text':' Make sure the memory is freed. [JDK-4797189]','line_number':484,'multiline':False]['text':' Small utility methods.','line_number':505,'multiline':False]['text':'*
     * Writes out a little-endian short value to the zip output stream.
     ','line_number':507,'multiline':True]['text':'*
     * Writes out a little-endian int value to the zip output stream.
     ','line_number':517,'multiline':True]['text':'*
     * Writes out a little-endian int value to the zip output stream.
     ','line_number':529,'multiline':True]['text':'*
     * Provides a simple test for this class, creating a zip file with the
     * given name and a few aligned/compressed/uncompressed zip entries.
     ','line_number':541,'multiline':True]