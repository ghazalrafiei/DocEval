['text':'
 * ProGuard -- shrinking, optimization, obfuscation, and preverification
 *             of Java bytecode.
 *
 * Copyright (c) 2002-2019 Guardsquare NV
 *
 * This program is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License as published by the Free
 * Software Foundation; either version 2 of the License, or (at your option)
 * any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
 * more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 ','line_number':1,'multiline':True]['text':'*
 * This ClassVisitor marks all program classes that are a simple wrapper for a
 * single non-null instance of another class.
 *
 * A wrapper class has
 * - exactly one non-static field, which references an object,
 * - exactly one initializer, with a single parameter that is never null,
 *   that initializes the field,
 * - no subclasses.
 *
 * @see StoringInvocationUnit
 * @author Eric Lafortune
 ','line_number':33,'multiline':True]['text':'*','line_number':52,'multiline':False]['text':'/
    public  static       boolean DEBUG = System.getProperty("wcm")  != null;
    //','line_number':54,'multiline':True]['text':' Instruction pattern:','line_number':65,'multiline':False]['text':'   this.x = arg0;','line_number':66,'multiline':False]['text':'   super.<init>;','line_number':67,'multiline':False]['text':'   return;','line_number':68,'multiline':False]['text':' Fields acting as parameters and return values for the visitor methods.','line_number':81,'multiline':False]['text':' Implementations for ClassVisitor.','line_number':86,'multiline':False]['text':' Can we find one non-static field with a class type?','line_number':95,'multiline':False]['text':' Can we find exactly one initializer that initializes this','line_number':100,'multiline':False]['text':' field?','line_number':101,'multiline':False]['text':' Implementations for MemberVisitor.','line_number':113,'multiline':False]['text':' Is the field non-static and of a class type?','line_number':117,'multiline':False]['text':' Is the method an initializer?','line_number':141,'multiline':False]['text':' Does it have exactly one parameter?','line_number':144,'multiline':False]['text':' Is the parameter a non-null reference?','line_number':147,'multiline':False]['text':' Does the method initialize the field?','line_number':155,'multiline':False]['text':' Implementations for AttributeVisitor.','line_number':171,'multiline':False]['text':' Is the initializer initializing the field?','line_number':178,'multiline':False]['text':' Small utility methods.','line_number':208,'multiline':False]