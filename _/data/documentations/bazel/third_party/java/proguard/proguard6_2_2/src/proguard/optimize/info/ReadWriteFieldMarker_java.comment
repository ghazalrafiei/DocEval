['text':'
 * ProGuard -- shrinking, optimization, obfuscation, and preverification
 *             of Java bytecode.
 *
 * Copyright (c) 2002-2019 Guardsquare NV
 *
 * This program is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License as published by the Free
 * Software Foundation; either version 2 of the License, or (at your option)
 * any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
 * more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 ','line_number':1,'multiline':True]['text':'*
 * This InstructionVisitor marks all fields that are write-only.
 *
 * @author Eric Lafortune
 ','line_number':32,'multiline':True]['text':'*','line_number':43,'multiline':False]['text':'/
    private static       boolean DEBUG = System.getProperty("rwfm") != null;
    //','line_number':45,'multiline':True]['text':' Parameters for the visitor methods.','line_number':55,'multiline':False]['text':' We'll set them to true by default, in case this class is being used','line_number':56,'multiline':False]['text':' as a field visitor.','line_number':57,'multiline':False]['text':'*
     * Creates a new ReadWriteFieldMarker that marks fields that are read and
     * fields that are written.
     * @param repeatTrigger a mutable boolean flag that is set whenever a field
     *                      gets a mark that it didn't have before.
     ','line_number':62,'multiline':True]['text':'*
     * Creates a new ReadWriteFieldMarker that marks fields that are read and
     * fields that are written, as specified.
     * @param repeatTrigger a mutable boolean flag that is set whenever a field
     *                      gets a mark that it didn't have before.
     * @param markReading   specifies whether fields may be marked as read.
     * @param markWriting   specifies whether fields may be marked as written.
     ','line_number':74,'multiline':True]['text':' Implementations for InstructionVisitor.','line_number':92,'multiline':False]['text':' Check for instructions that involve fields.','line_number':101,'multiline':False]['text':' Mark the field, if any, as being read from and written to.','line_number':106,'multiline':False]['text':' Mark the field as being read from.','line_number':114,'multiline':False]['text':' Mark the field as being written to.','line_number':122,'multiline':False]['text':' Implementations for ConstantVisitor.','line_number':131,'multiline':False]['text':' Mark the referenced field, if any.','line_number':138,'multiline':False]['text':' Mark the referenced field.','line_number':145,'multiline':False]['text':' Implementations for MemberVisitor.','line_number':150,'multiline':False]['text':' Mark the field if it is being read from.','line_number':157,'multiline':False]['text':' Mark the field if it is being written to.','line_number':163,'multiline':False]['text':' Small utility methods.','line_number':171,'multiline':False]