['text':'
 * ProGuard -- shrinking, optimization, obfuscation, and preverification
 *             of Java bytecode.
 *
 * Copyright (c) 2002-2019 Guardsquare NV
 *
 * This program is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License as published by the Free
 * Software Foundation; either version 2 of the License, or (at your option)
 * any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
 * more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 ','line_number':1,'multiline':True]['text':'*
 * This ClassVisitor and MemberVisitor recursively marks all classes and class
 * elements that are being used.
 *
 * @see ClassShrinker
 *
 * @author Eric Lafortune
 ','line_number':38,'multiline':True]['text':'         AnnotationVisitor,','line_number':63,'multiline':False]['text':'         ElementValueVisitor,','line_number':64,'multiline':False]['text':' A visitor info flag to indicate the ProgramMember object is being used,','line_number':67,'multiline':False]['text':' if its Clazz can be determined as being used as well.','line_number':68,'multiline':False]['text':' A visitor info flag to indicate the visitor accepter is being used.','line_number':70,'multiline':False]['text':' Implementations for ClassVisitor.','line_number':85,'multiline':False]['text':' Mark this class.','line_number':91,'multiline':False]['text':' Mark this class's name.','line_number':101,'multiline':False]['text':' Mark the superclass.','line_number':104,'multiline':False]['text':' Give the interfaces preliminary marks.','line_number':107,'multiline':False]['text':' Explicitly mark the <clinit> method, if it's not empty.','line_number':111,'multiline':False]['text':' Process all class members that have already been marked as possibly used.','line_number':116,'multiline':False]['text':' Mark the attributes.','line_number':120,'multiline':False]['text':' We're not going to analyze all library code. We're assuming that','line_number':131,'multiline':False]['text':' if this class is being used, all of its methods will be used as','line_number':132,'multiline':False]['text':' well. We'll mark them as such (here and in all subclasses).','line_number':133,'multiline':False]['text':' Mark the superclass.','line_number':135,'multiline':False]['text':' Mark the interfaces.','line_number':142,'multiline':False]['text':' Mark all methods.','line_number':155,'multiline':False]['text':'*
     * This ClassVisitor marks ProgramClass objects as possibly used,
     * and it visits LibraryClass objects with its outer UsageMarker.
     ','line_number':161,'multiline':True]['text':' We can't process the interface yet, because it might not','line_number':172,'multiline':False]['text':' be required. Give it a preliminary mark.','line_number':173,'multiline':False]['text':' Make sure all library interface methods are marked.','line_number':180,'multiline':False]['text':'*
     * This MemberVisitor marks ProgramMethod objects of default
     * implementations that may be present in interface classes.
     ','line_number':186,'multiline':True]['text':' Implementations for MemberVisitor.','line_number':194,'multiline':False]['text':' Mark the method body.','line_number':202,'multiline':False]['text':' Note that, if the method has been marked as possibly used,','line_number':205,'multiline':False]['text':' the method hierarchy has already been marked (cfr. below).','line_number':206,'multiline':False]['text':'*
     * This MemberVisitor marks ProgramField and ProgramMethod objects that
     * have already been marked as possibly used.
     ','line_number':212,'multiline':True]['text':' Implementations for MemberVisitor.','line_number':220,'multiline':False]['text':' Has the method already been referenced?','line_number':224,'multiline':False]['text':' Mark the name and descriptor.','line_number':229,'multiline':False]['text':' Mark the attributes.','line_number':233,'multiline':False]['text':' Mark the classes referenced in the descriptor string.','line_number':236,'multiline':False]['text':' Has the method already been referenced?','line_number':244,'multiline':False]['text':' Mark the method body.','line_number':249,'multiline':False]['text':' Note that, if the method has been marked as possibly used,','line_number':252,'multiline':False]['text':' the method hierarchy has already been marked (cfr. below).','line_number':253,'multiline':False]['text':'*
     * This AttributeVisitor marks ProgramMethod objects of non-empty methods.
     ','line_number':259,'multiline':True]['text':' Implementations for AttributeVisitor.','line_number':266,'multiline':False]['text':' Implementations for MemberVisitor.','line_number':281,'multiline':False]['text':' Is the field's class used?','line_number':287,'multiline':False]['text':' Mark the field body.','line_number':292,'multiline':False]['text':' Hasn't the field been marked as possibly being used yet?','line_number':296,'multiline':False]['text':' We can't process the field yet, because the class isn't','line_number':299,'multiline':False]['text':' marked as being used (yet). Give it a preliminary mark.','line_number':300,'multiline':False]['text':' Is the method's class used?','line_number':311,'multiline':False]['text':' Mark the method body.','line_number':316,'multiline':False]['text':' Mark the method hierarchy.','line_number':319,'multiline':False]['text':' Hasn't the method been marked as possibly being used yet?','line_number':323,'multiline':False]['text':' We can't process the method yet, because the class isn't','line_number':326,'multiline':False]['text':' marked as being used (yet). Give it a preliminary mark.','line_number':327,'multiline':False]['text':' Mark the method hierarchy.','line_number':330,'multiline':False]['text':' Mark the method hierarchy.','line_number':346,'multiline':False]['text':' Mark the name and descriptor.','line_number':354,'multiline':False]['text':' Mark the attributes.','line_number':358,'multiline':False]['text':' Mark the classes referenced in the descriptor string.','line_number':361,'multiline':False]['text':' Mark the name and descriptor.','line_number':368,'multiline':False]['text':' Mark the attributes.','line_number':372,'multiline':False]['text':' Mark the classes referenced in the descriptor string.','line_number':375,'multiline':False]['text':'*
     * Marks the hierarchy of implementing or overriding methods corresponding
     * to the given method, if any.
     ','line_number':380,'multiline':True]['text':' Only visit the hierarchy if the method is not private, static, or','line_number':386,'multiline':False]['text':' an initializer.','line_number':387,'multiline':False]['text':' We can skip private and static methods in the hierarchy, and','line_number':394,'multiline':False]['text':' also abstract methods, unless they might widen a current','line_number':395,'multiline':False]['text':' non-public access.','line_number':396,'multiline':False]['text':' Mark default implementations in interfaces down the hierarchy,','line_number':403,'multiline':False]['text':' if this is an interface itself.','line_number':404,'multiline':False]['text':' TODO: This may be premature if there aren't any concrete implementing classes.','line_number':405,'multiline':False]['text':' Mark other implementations.','line_number':415,'multiline':False]['text':' Implementations for ConstantVisitor.','line_number':426,'multiline':False]['text':' Mark the referenced class and class member, if any.','line_number':481,'multiline':False]['text':' Mark the referenced descriptor classes.','line_number':505,'multiline':False]['text':' Mark the bootstrap methods attribute.','line_number':508,'multiline':False]['text':' Mark the referenced descriptor classes.','line_number':522,'multiline':False]['text':' Mark the bootstrap methods attribute.','line_number':525,'multiline':False]['text':' When compiled with "-target 1.2" or higher, the class or','line_number':551,'multiline':False]['text':' interface actually containing the referenced class member may','line_number':552,'multiline':False]['text':' be higher up the hierarchy. Make sure it's marked, in case it','line_number':553,'multiline':False]['text':' isn't used elsewhere.','line_number':554,'multiline':False]['text':' Mark the referenced class member itself.','line_number':557,'multiline':False]['text':' Mark the referenced class itself.','line_number':571,'multiline':False]['text':' Mark the referenced descriptor classes.','line_number':585,'multiline':False]['text':'*
     * This AttributeVisitor marks the bootstrap methods attributes, their
     * method entries, their method handles, and their arguments.
     ','line_number':625,'multiline':True]['text':' Implementations for AttributeVisitor.','line_number':643,'multiline':False]['text':' Implementations for BootstrapMethodInfoVisitor.','line_number':663,'multiline':False]['text':' Mark the constant pool entries referenced by the arguments.','line_number':671,'multiline':False]['text':' Implementations for AttributeVisitor.','line_number':677,'multiline':False]['text':' Note that attributes are typically only referenced once, so we don't','line_number':678,'multiline':False]['text':' test if they have been marked already.','line_number':679,'multiline':False]['text':' This is the best we can do for unknown attributes.','line_number':683,'multiline':False]['text':' Don't mark the attribute and its name here. We may mark it in','line_number':692,'multiline':False]['text':' MyBootStrapMethodsAttributeUsageMarker.','line_number':693,'multiline':False]['text':' Don't mark the attribute and its name yet. We may mark it later, in','line_number':717,'multiline':False]['text':' InnerUsageMarker.','line_number':718,'multiline':False]['text':'markAsUsed(innerClassesAttribute);','line_number':719,'multiline':False]['text':'markConstant(clazz, innerClassesAttribute.u2attrNameIndex);','line_number':721,'multiline':False]['text':' Do mark the outer class entries.','line_number':723,'multiline':False]['text':' Don't mark the attribute and its contents yet. We may mark it later,','line_number':740,'multiline':False]['text':' in NestUsageMarker.','line_number':741,'multiline':False]['text':'markAsUsed(nestHostAttribute);','line_number':742,'multiline':False]['text':'markConstant(clazz, nestHostAttribute.u2attributeNameIndex);','line_number':744,'multiline':False]['text':'markConstant(clazz, nestHostAttribute.u2hostClassIndex);','line_number':745,'multiline':False]['text':' Don't mark the attribute and its contents yet. We may mark it later,','line_number':751,'multiline':False]['text':' in NestUsageMarker.','line_number':752,'multiline':False]['text':'markAsUsed(nestMembersAttribute);','line_number':753,'multiline':False]['text':'markConstant(clazz, nestMembersAttribute.u2attributeNameIndex);','line_number':755,'multiline':False]['text':' Mark the nest member entries.','line_number':757,'multiline':False]['text':'nestMembersAttribute.memberClassConstantsAccept(clazz, this);','line_number':758,'multiline':False]['text':' Mark the constant pool entries referenced by the contained info.','line_number':770,'multiline':False]['text':' Mark the constant pool entries referenced by the provides info.','line_number':777,'multiline':False]['text':' Mark the constant pool entries referenced by the packages info.','line_number':797,'multiline':False]['text':' Don't mark the referenced classes. We'll clean them up in','line_number':825,'multiline':False]['text':' ClassShrinker, if they appear unused.','line_number':826,'multiline':False]['text':'// Mark the classes referenced in the descriptor string.','line_number':827,'multiline':False]['text':'signatureAttribute.referencedClassesAccept(this);','line_number':828,'multiline':False]['text':' Mark the constant pool entries referenced by the parameter information.','line_number':847,'multiline':False]['text':' Mark the constant pool entries referenced by the exceptions.','line_number':858,'multiline':False]['text':' Mark the constant pool entries referenced by the instructions,','line_number':869,'multiline':False]['text':' by the exceptions, and by the attributes.','line_number':870,'multiline':False]['text':' Mark the constant pool entries referenced by the stack map frames.','line_number':883,'multiline':False]['text':' Mark the constant pool entries referenced by the stack map frames.','line_number':894,'multiline':False]['text':' Don't mark the attribute and its contents yet. We may mark them later,','line_number':909,'multiline':False]['text':' in LocalVariableTypeUsageMarker.','line_number':910,'multiline':False]['text':'markAsUsed(localVariableTableAttribute);','line_number':911,'multiline':False]['text':'','line_number':912,'multiline':False]['text':'markConstant(clazz, localVariableTableAttribute.u2attributeNameIndex);','line_number':913,'multiline':False]['text':'','line_number':914,'multiline':False]['text':'// Mark the constant pool entries referenced by the local variables.','line_number':915,'multiline':False]['text':'localVariableTableAttribute.localVariablesAccept(clazz, method, codeAttribute, this);','line_number':916,'multiline':False]['text':' Don't mark the attribute and its contents yet. We may mark them later,','line_number':922,'multiline':False]['text':' in LocalVariableTypeUsageMarker.','line_number':923,'multiline':False]['text':'markAsUsed(localVariableTypeTableAttribute);','line_number':924,'multiline':False]['text':'','line_number':925,'multiline':False]['text':'markConstant(clazz, localVariableTypeTableAttribute.u2attributeNameIndex);','line_number':926,'multiline':False]['text':'','line_number':927,'multiline':False]['text':'// Mark the constant pool entries referenced by the local variable types.','line_number':928,'multiline':False]['text':'localVariableTypeTableAttribute.localVariablesAccept(clazz, method, codeAttribute, this);','line_number':929,'multiline':False]['text':' Don't mark the attribute and its contents yet. We may mark them later,','line_number':935,'multiline':False]['text':' in AnnotationUsageMarker.','line_number':936,'multiline':False]['text':'markAsUsed(annotationsAttribute);','line_number':937,'multiline':False]['text':'','line_number':938,'multiline':False]['text':'markConstant(clazz, annotationsAttribute.u2attributeNameIndex);','line_number':939,'multiline':False]['text':'','line_number':940,'multiline':False]['text':'// Mark the constant pool entries referenced by the annotations.','line_number':941,'multiline':False]['text':'annotationsAttribute.annotationsAccept(clazz, this);','line_number':942,'multiline':False]['text':' Don't mark the attribute and its contents yet. We may mark them later,','line_number':948,'multiline':False]['text':' in AnnotationUsageMarker.','line_number':949,'multiline':False]['text':'markAsUsed(parameterAnnotationsAttribute);','line_number':950,'multiline':False]['text':'','line_number':951,'multiline':False]['text':'markConstant(clazz, parameterAnnotationsAttribute.u2attributeNameIndex);','line_number':952,'multiline':False]['text':'','line_number':953,'multiline':False]['text':'// Mark the constant pool entries referenced by the annotations.','line_number':954,'multiline':False]['text':'parameterAnnotationsAttribute.annotationsAccept(clazz, method, this);','line_number':955,'multiline':False]['text':' Don't mark the attribute and its contents yet. We may mark them later,','line_number':961,'multiline':False]['text':' in AnnotationUsageMarker.','line_number':962,'multiline':False]['text':'markAsUsed(annotationDefaultAttribute);','line_number':963,'multiline':False]['text':'','line_number':964,'multiline':False]['text':'markConstant(clazz, annotationDefaultAttribute.u2attributeNameIndex);','line_number':965,'multiline':False]['text':'','line_number':966,'multiline':False]['text':'// Mark the constant pool entries referenced by the element value.','line_number':967,'multiline':False]['text':'annotationDefaultAttribute.defaultValueAccept(clazz, this);','line_number':968,'multiline':False]['text':' Implementations for ExceptionInfoVisitor.','line_number':972,'multiline':False]['text':' Implementations for InnerClassesInfoVisitor.','line_number':982,'multiline':False]['text':' At this point, we only mark outer classes of this class.','line_number':986,'multiline':False]['text':' Inner class can be marked later, by InnerUsageMarker.','line_number':987,'multiline':False]['text':' Mark the constant pool entries referenced by the contained info.','line_number':993,'multiline':False]['text':' Implementations for StackMapFrameVisitor.','line_number':1001,'multiline':False]['text':' Mark the constant pool entries referenced by the verification types.','line_number':1008,'multiline':False]['text':' Mark the constant pool entries referenced by the verification types.','line_number':1015,'multiline':False]['text':' Mark the constant pool entries referenced by the verification types.','line_number':1022,'multiline':False]['text':' Implementations for VerificationTypeVisitor.','line_number':1028,'multiline':False]['text':' Implementations for ParameterInfoVisitor.','line_number':1039,'multiline':False]['text':' Implementations for LocalVariableInfoVisitor.','line_number':1047,'multiline':False]['text':' Implementations for LocalVariableTypeInfoVisitor.','line_number':1056,'multiline':False]['text':' Implementations for RequiresInfoVisitor.','line_number':1065,'multiline':False]['text':' Implementations for ExportsInfoVisitor.','line_number':1074,'multiline':False]['text':' Implementations for OpensInfoVisitor.','line_number':1083,'multiline':False]['text':' Implementations for ProvidesInfoVisitor.','line_number':1092,'multiline':False]['text':'    // Implementations for AnnotationVisitor.','line_number':1100,'multiline':False]['text':'','line_number':1101,'multiline':False]['text':'    public void visitAnnotation(Clazz clazz, Annotation annotation)','line_number':1102,'multiline':False]['text':'    {','line_number':1103,'multiline':False]['text':'        markConstant(clazz, annotation.u2typeIndex);','line_number':1104,'multiline':False]['text':'','line_number':1105,'multiline':False]['text':'        // Mark the constant pool entries referenced by the element values.','line_number':1106,'multiline':False]['text':'        annotation.elementValuesAccept(clazz, this);','line_number':1107,'multiline':False]['text':'    }','line_number':1108,'multiline':False]['text':'','line_number':1109,'multiline':False]['text':'','line_number':1110,'multiline':False]['text':'    // Implementations for ElementValueVisitor.','line_number':1111,'multiline':False]['text':'','line_number':1112,'multiline':False]['text':'    public void visitConstantElementValue(Clazz clazz, Annotation annotation, ConstantElementValue constantElementValue)','line_number':1113,'multiline':False]['text':'    {','line_number':1114,'multiline':False]['text':'        markOptionalConstant(clazz, constantElementValue.u2elementNameIndex);','line_number':1115,'multiline':False]['text':'        markConstant(        clazz, constantElementValue.u2constantValueIndex);','line_number':1116,'multiline':False]['text':'    }','line_number':1117,'multiline':False]['text':'','line_number':1118,'multiline':False]['text':'','line_number':1119,'multiline':False]['text':'    public void visitEnumConstantElementValue(Clazz clazz, Annotation annotation, EnumConstantElementValue enumConstantElementValue)','line_number':1120,'multiline':False]['text':'    {','line_number':1121,'multiline':False]['text':'        markOptionalConstant(clazz, enumConstantElementValue.u2elementNameIndex);','line_number':1122,'multiline':False]['text':'        markConstant(        clazz, enumConstantElementValue.u2typeNameIndex);','line_number':1123,'multiline':False]['text':'        markConstant(        clazz, enumConstantElementValue.u2constantNameIndex);','line_number':1124,'multiline':False]['text':'    }','line_number':1125,'multiline':False]['text':'','line_number':1126,'multiline':False]['text':'','line_number':1127,'multiline':False]['text':'    public void visitClassElementValue(Clazz clazz, Annotation annotation, ClassElementValue classElementValue)','line_number':1128,'multiline':False]['text':'    {','line_number':1129,'multiline':False]['text':'        markOptionalConstant(clazz, classElementValue.u2elementNameIndex);','line_number':1130,'multiline':False]['text':'','line_number':1131,'multiline':False]['text':'        // Mark the referenced class constant pool entry.','line_number':1132,'multiline':False]['text':'        markConstant(clazz, classElementValue.u2classInfoIndex);','line_number':1133,'multiline':False]['text':'    }','line_number':1134,'multiline':False]['text':'','line_number':1135,'multiline':False]['text':'','line_number':1136,'multiline':False]['text':'    public void visitAnnotationElementValue(Clazz clazz, Annotation annotation, AnnotationElementValue annotationElementValue)','line_number':1137,'multiline':False]['text':'    {','line_number':1138,'multiline':False]['text':'        markOptionalConstant(clazz, annotationElementValue.u2elementNameIndex);','line_number':1139,'multiline':False]['text':'','line_number':1140,'multiline':False]['text':'        // Mark the constant pool entries referenced by the annotation.','line_number':1141,'multiline':False]['text':'        annotationElementValue.annotationAccept(clazz, this);','line_number':1142,'multiline':False]['text':'    }','line_number':1143,'multiline':False]['text':'','line_number':1144,'multiline':False]['text':'','line_number':1145,'multiline':False]['text':'    public void visitArrayElementValue(Clazz clazz, Annotation annotation, ArrayElementValue arrayElementValue)','line_number':1146,'multiline':False]['text':'    {','line_number':1147,'multiline':False]['text':'        markOptionalConstant(clazz, arrayElementValue.u2elementNameIndex);','line_number':1148,'multiline':False]['text':'','line_number':1149,'multiline':False]['text':'        // Mark the constant pool entries referenced by the element values.','line_number':1150,'multiline':False]['text':'        arrayElementValue.elementValuesAccept(clazz, annotation, this);','line_number':1151,'multiline':False]['text':'    }','line_number':1152,'multiline':False]['text':' Implementations for InstructionVisitor.','line_number':1155,'multiline':False]['text':' Also mark the parameterless constructor of the class, in case the','line_number':1164,'multiline':False]['text':' string constant or class constant is being used in a Class.forName','line_number':1165,'multiline':False]['text':' or a .class construct.','line_number':1166,'multiline':False]['text':' Small utility methods.','line_number':1172,'multiline':False]['text':'*
     * Marks the given visitor accepter as being used.
     ','line_number':1174,'multiline':True]['text':'*
     * Returns whether the given visitor accepter should still be marked as
     * being used.
     ','line_number':1183,'multiline':True]['text':'*
     * Returns whether the given visitor accepter has been marked as being used.
     ','line_number':1193,'multiline':True]['text':'*
     * Marks the given visitor accepter as possibly being used.
     ','line_number':1202,'multiline':True]['text':'*
     * Returns whether the given visitor accepter should still be marked as
     * possibly being used.
     ','line_number':1211,'multiline':True]['text':'*
     * Returns whether the given visitor accepter has been marked as possibly
     * being used.
     ','line_number':1222,'multiline':True]['text':'*
     * Clears any usage marks from the given visitor accepter.
     ','line_number':1232,'multiline':True]['text':'*
     * Marks the specified constant pool entries of the given class.
     * This includes visiting any referenced objects.
     ','line_number':1241,'multiline':True]['text':'*
     * Marks the specified constant pool entry of the given class, if the index
     * is not 0. This includes visiting any referenced objects.
     ','line_number':1256,'multiline':True]['text':'*
     * Marks the specified constant pool entry of the given class.
     * This includes visiting any referenced objects.
     ','line_number':1269,'multiline':True]