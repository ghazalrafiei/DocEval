['text':'
 * ProGuard -- shrinking, optimization, obfuscation, and preverification
 *             of Java bytecode.
 *
 * Copyright (c) 2002-2019 Guardsquare NV
 *
 * This program is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License as published by the Free
 * Software Foundation; either version 2 of the License, or (at your option)
 * any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
 * more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 ','line_number':1,'multiline':True]['text':'*
 * This Constant represents a UTF-8 constant in the constant pool.
 *
 * @author Eric Lafortune
 ','line_number':28,'multiline':True]['text':' There are a lot of Utf8Constant objects, so we're optimising their storage.','line_number':53,'multiline':False]['text':' Initially, we're storing the UTF-8 bytes in a byte array.','line_number':54,'multiline':False]['text':' When the corresponding String is requested, we ditch the array and just','line_number':55,'multiline':False]['text':' store the String.','line_number':56,'multiline':False]['text':'private int u2length;','line_number':58,'multiline':False]['text':'*
     * Creates an uninitialized Utf8Constant.
     *
     ','line_number':64,'multiline':True]['text':'*
     * Creates a Utf8Constant containing the given string.
     ','line_number':73,'multiline':True]['text':'*
     * Initializes the UTF-8 data with an array of bytes.
     ','line_number':83,'multiline':True]['text':'*
     * Returns the UTF-8 data as an array of bytes.
     ','line_number':93,'multiline':True]['text':'*
     * Initializes the UTF-8 data with a String.
     ','line_number':111,'multiline':True]['text':'*
     * Returns the UTF-8 data as a String.
     ','line_number':121,'multiline':True]['text':' Implementations for Constant.','line_number':139,'multiline':False]['text':' Small utility methods.','line_number':152,'multiline':False]['text':'*
     * Switches to a byte array representation of the UTF-8 data.
     ','line_number':154,'multiline':True]['text':'*
     * Switches to a String representation of the UTF-8 data.
     ','line_number':167,'multiline':True]['text':'*
     * Returns the modified UTF-8 byte array representation of the given string.
     ','line_number':180,'multiline':True]['text':' We're computing the byte array ourselves, because the implementation','line_number':185,'multiline':False]['text':' of String.getBytes("UTF-8") has a bug, at least up to JRE 1.4.2.','line_number':186,'multiline':False]['text':' Also note the special treatment of the 0 character.','line_number':187,'multiline':False]['text':' Compute the byte array length.','line_number':189,'multiline':False]['text':' The character is represented by one, two, or three bytes.','line_number':196,'multiline':False]['text':' Allocate the byte array with the computed length.','line_number':203,'multiline':False]['text':' Fill out the array.','line_number':206,'multiline':False]['text':' The 0 character gets a two-byte representation in classes.','line_number':213,'multiline':False]['text':' The character is represented by a single byte.','line_number':219,'multiline':False]['text':' The character is represented by two bytes.','line_number':224,'multiline':False]['text':' The character is represented by three bytes.','line_number':230,'multiline':False]['text':'*
     * Returns the String representation of the given modified UTF-8 byte array.
     ','line_number':241,'multiline':True]['text':' We're computing the string ourselves, because the implementation','line_number':246,'multiline':False]['text':' of "new String(bytes)" doesn't honor the special treatment of','line_number':247,'multiline':False]['text':' the 0 character in JRE 1.6_u11.','line_number':248,'multiline':False]['text':' Allocate the byte array with the computed length.','line_number':250,'multiline':False]['text':' Fill out the array.','line_number':253,'multiline':False]['text':' Depending on the flag bits in the first byte, the character','line_number':261,'multiline':False]['text':' is represented by a single byte, by two bytes, or by three','line_number':262,'multiline':False]['text':' bytes. We're not checking the redundant flag bits in the','line_number':263,'multiline':False]['text':' second byte and the third byte.','line_number':264,'multiline':False]