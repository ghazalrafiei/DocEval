['text':'
 * ProGuard -- shrinking, optimization, obfuscation, and preverification
 *             of Java bytecode.
 *
 * Copyright (c) 2002-2019 Guardsquare NV
 *
 * This program is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License as published by the Free
 * Software Foundation; either version 2 of the License, or (at your option)
 * any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
 * more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 ','line_number':1,'multiline':True]['text':'*
 * This class represents a partially evaluated long value.
 *
 * @author Eric Lafortune
 ','line_number':25,'multiline':True]['text':'*
     * Returns the specific long value, if applicable.
     ','line_number':32,'multiline':True]['text':' Basic unary methods.','line_number':41,'multiline':False]['text':'*
     * Returns the negated value of this LongValue.
     ','line_number':43,'multiline':True]['text':'*
     * Converts this LongValue to an IntegerValue.
     ','line_number':49,'multiline':True]['text':'*
     * Converts this LongValue to a FloatValue.
     ','line_number':54,'multiline':True]['text':'*
     * Converts this LongValue to a DoubleValue.
     ','line_number':59,'multiline':True]['text':' Basic binary methods.','line_number':65,'multiline':False]['text':'*
     * Returns the generalization of this LongValue and the given other
     * LongValue.
     ','line_number':67,'multiline':True]['text':'*
     * Returns the sum of this LongValue and the given LongValue.
     ','line_number':76,'multiline':True]['text':'*
     * Returns the difference of this LongValue and the given LongValue.
     ','line_number':84,'multiline':True]['text':'*
     * Returns the difference of the given LongValue and this LongValue.
     ','line_number':92,'multiline':True]['text':'*
     * Returns the product of this LongValue and the given LongValue.
     ','line_number':100,'multiline':True]['text':'*
     * Returns the quotient of this LongValue and the given LongValue.
     ','line_number':109,'multiline':True]['text':'*
     * Returns the quotient of the given LongValue and this LongValue.
     ','line_number':118,'multiline':True]['text':'*
     * Returns the remainder of this LongValue divided by the given
     * LongValue.
     ','line_number':127,'multiline':True]['text':'*
     * Returns the remainder of the given LongValue divided by this
     * LongValue.
     ','line_number':137,'multiline':True]['text':'*
     * Returns this LongValue, shifted left by the given IntegerValue.
     ','line_number':147,'multiline':True]['text':'*
     * Returns this LongValue, shifted right by the given IntegerValue.
     ','line_number':155,'multiline':True]['text':'*
     * Returns this unsigned LongValue, shifted left by the given
     * IntegerValue.
     ','line_number':163,'multiline':True]['text':'*
     * Returns the logical <i>and</i> of this LongValue and the given
     * LongValue.
     ','line_number':172,'multiline':True]['text':'*
     * Returns the logical <i>or</i> of this LongValue and the given
     * LongValue.
     ','line_number':181,'multiline':True]['text':'*
     * Returns the logical <i>xor</i> of this LongValue and the given
     * LongValue.
     ','line_number':190,'multiline':True]['text':'*
     * Returns an IntegerValue with value -1, 0, or 1, if this LongValue is
     * less than, equal to, or greater than the given LongValue, respectively.
     ','line_number':199,'multiline':True]['text':' Derived binary methods.','line_number':209,'multiline':False]['text':'*
     * Returns an IntegerValue with value 1, 0, or -1, if this LongValue is
     * less than, equal to, or greater than the given LongValue, respectively.
     ','line_number':211,'multiline':True]['text':' Similar binary methods, but this time with more specific arguments.','line_number':221,'multiline':False]['text':'*
     * Returns the generalization of this LongValue and the given other
     * SpecificLongValue.
     ','line_number':223,'multiline':True]['text':'*
     * Returns the sum of this LongValue and the given SpecificLongValue.
     ','line_number':233,'multiline':True]['text':'*
     * Returns the difference of this LongValue and the given SpecificLongValue.
     ','line_number':241,'multiline':True]['text':'*
     * Returns the difference of the given SpecificLongValue and this LongValue.
     ','line_number':249,'multiline':True]['text':'*
     * Returns the product of this LongValue and the given SpecificLongValue.
     ','line_number':257,'multiline':True]['text':'*
     * Returns the quotient of this LongValue and the given
     * SpecificLongValue.
     ','line_number':265,'multiline':True]['text':'*
     * Returns the quotient of the given SpecificLongValue and this
     * LongValue.
     ','line_number':274,'multiline':True]['text':'*
     * Returns the remainder of this LongValue divided by the given
     * SpecificLongValue.
     ','line_number':283,'multiline':True]['text':'*
     * Returns the remainder of the given SpecificLongValue divided by this
     * LongValue.
     ','line_number':292,'multiline':True]['text':'*
     * Returns this LongValue, shifted left by the given SpecificLongValue.
     ','line_number':301,'multiline':True]['text':'*
     * Returns this LongValue, shifted right by the given SpecificLongValue.
     ','line_number':309,'multiline':True]['text':'*
     * Returns this unsigned LongValue, shifted right by the given
     * SpecificLongValue.
     ','line_number':317,'multiline':True]['text':'*
     * Returns the logical <i>and</i> of this LongValue and the given
     * SpecificLongValue.
     ','line_number':326,'multiline':True]['text':'*
     * Returns the logical <i>or</i> of this LongValue and the given
     * SpecificLongValue.
     ','line_number':335,'multiline':True]['text':'*
     * Returns the logical <i>xor</i> of this LongValue and the given
     * SpecificLongValue.
     ','line_number':344,'multiline':True]['text':'*
     * Returns an IntegerValue with value -1, 0, or 1, if this LongValue is
     * less than, equal to, or greater than the given SpecificLongValue,
     * respectively.
     ','line_number':353,'multiline':True]['text':' Derived binary methods.','line_number':364,'multiline':False]['text':'*
     * Returns an IntegerValue with value 1, 0, or -1, if this LongValue is
     * less than, equal to, or greater than the given SpecificLongValue,
     * respectively.
     ','line_number':366,'multiline':True]['text':' Similar binary methods, but this time with particular arguments.','line_number':377,'multiline':False]['text':'*
     * Returns the generalization of this LongValue and the given other
     * ParticularLongValue.
     ','line_number':379,'multiline':True]['text':'*
     * Returns the sum of this LongValue and the given ParticularLongValue.
     ','line_number':389,'multiline':True]['text':'*
     * Returns the difference of this LongValue and the given ParticularLongValue.
     ','line_number':397,'multiline':True]['text':'*
     * Returns the difference of the given ParticularLongValue and this LongValue.
     ','line_number':405,'multiline':True]['text':'*
     * Returns the product of this LongValue and the given ParticularLongValue.
     ','line_number':413,'multiline':True]['text':'*
     * Returns the quotient of this LongValue and the given
     * ParticularLongValue.
     ','line_number':421,'multiline':True]['text':'*
     * Returns the quotient of the given ParticularLongValue and this
     * LongValue.
     ','line_number':430,'multiline':True]['text':'*
     * Returns the remainder of this LongValue divided by the given
     * ParticularLongValue.
     ','line_number':439,'multiline':True]['text':'*
     * Returns the remainder of the given ParticularLongValue divided by this
     * LongValue.
     ','line_number':448,'multiline':True]['text':'*
     * Returns this LongValue, shifted left by the given ParticularIntegerValue.
     ','line_number':457,'multiline':True]['text':'*
     * Returns this LongValue, shifted right by the given ParticularIntegerValue.
     ','line_number':465,'multiline':True]['text':'*
     * Returns this unsigned LongValue, shifted right by the given
     * ParticularIntegerValue.
     ','line_number':473,'multiline':True]['text':'*
     * Returns the logical <i>and</i> of this LongValue and the given
     * ParticularLongValue.
     ','line_number':482,'multiline':True]['text':'*
     * Returns the logical <i>or</i> of this LongValue and the given
     * ParticularLongValue.
     ','line_number':491,'multiline':True]['text':'*
     * Returns the logical <i>xor</i> of this LongValue and the given
     * ParticularLongValue.
     ','line_number':500,'multiline':True]['text':'*
     * Returns an IntegerValue with value -1, 0, or 1, if this LongValue is
     * less than, equal to, or greater than the given ParticularLongValue,
     * respectively.
     ','line_number':509,'multiline':True]['text':' Derived binary methods.','line_number':520,'multiline':False]['text':'*
     * Returns an IntegerValue with value 1, 0, or -1, if this LongValue is
     * less than, equal to, or greater than the given ParticularLongValue,
     * respectively.
     ','line_number':522,'multiline':True]['text':' Implementations for Value.','line_number':533,'multiline':False]