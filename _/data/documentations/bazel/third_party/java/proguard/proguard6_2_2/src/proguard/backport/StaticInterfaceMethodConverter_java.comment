['text':'
 * ProGuard -- shrinking, optimization, obfuscation, and preverification
 *             of Java bytecode.
 *
 * Copyright (c) 2002-2019 Guardsquare NV
 *
 * This program is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License as published by the Free
 * Software Foundation; either version 2 of the License, or (at your option)
 * any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
 * more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 ','line_number':1,'multiline':True]['text':'*
 * This ClassVisitor moves all static interface methods in the visited
 * interfaces to a separate util class and updates all invocations in
 * the program class pool.
 *
 * @author Thomas Neidhart
 ','line_number':37,'multiline':True]['text':' Implementations for ClassVisitor.','line_number':69,'multiline':False]['text':' Collect all static methods of the interface class.','line_number':78,'multiline':False]['text':' Copy all static interface methods to the utility class.','line_number':90,'multiline':False]['text':' Add the method to the utility class.','line_number':108,'multiline':False]['text':' Mark the method for removal from the','line_number':111,'multiline':False]['text':' interface class.','line_number':112,'multiline':False]['text':' Add the utility class to the program class pool','line_number':117,'multiline':False]['text':' and the injected class name map.','line_number':118,'multiline':False]['text':' Change all invokestatic invocations of the static interface','line_number':122,'multiline':False]['text':' methods to use the utility class instead.','line_number':123,'multiline':False]['text':' Initialize the hierarchy and references of the utility class.','line_number':126,'multiline':False]['text':' Remove the static methods from the interface class and','line_number':133,'multiline':False]['text':' shrink the constant pool of unused constants.','line_number':134,'multiline':False]['text':' Small utility methods.','line_number':145,'multiline':False]['text':' Add a private constructor.','line_number':171,'multiline':False]['text':'*
     * Replaces all static invocations of the given methods in the given
     * interface class by invocations of copies of these methods in the
     * given utility class.
     ','line_number':187,'multiline':True]['text':'*
     * This ClassVisitor delegates its visits to classes that
     * reference a given class via any RefConstant.
     ','line_number':244,'multiline':True]['text':' Implementations for ClassVisitor.','line_number':266,'multiline':False]['text':' Implementations for ConstantVisitor.','line_number':280,'multiline':False]