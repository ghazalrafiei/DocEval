['text':'
 * ProGuard -- shrinking, optimization, obfuscation, and preverification
 *             of Java bytecode.
 *
 * Copyright (c) 2002-2019 Guardsquare NV
 *
 * This program is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License as published by the Free
 * Software Foundation; either version 2 of the License, or (at your option)
 * any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
 * more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 ','line_number':1,'multiline':True]['text':'*
 * This ClassVisitor removes NameAndType constant pool entries that are not
 * used.
 *
 * @author Eric Lafortune
 ','line_number':34,'multiline':True]['text':' A visitor info flag to indicate the NameAndType constant pool entry is being used.','line_number':46,'multiline':False]['text':' Implementations for ClassVisitor.','line_number':53,'multiline':False]['text':' Mark the NameAndType entries referenced by all other constant pool','line_number':57,'multiline':False]['text':' entries.','line_number':58,'multiline':False]['text':' Mark the NameAndType entries referenced by all EnclosingMethod','line_number':61,'multiline':False]['text':' attributes.','line_number':62,'multiline':False]['text':' Shift the used constant pool entries together, filling out the','line_number':65,'multiline':False]['text':' index map.','line_number':66,'multiline':False]['text':' Remap the references to the constant pool if it has shrunk.','line_number':71,'multiline':False]['text':' Remap all constant pool references.','line_number':76,'multiline':False]['text':' Implementations for ConstantVisitor.','line_number':83,'multiline':False]['text':' Implementations for AttributeVisitor.','line_number':100,'multiline':False]['text':' Small utility methods.','line_number':114,'multiline':False]['text':'*
     * Marks the given UTF-8 constant pool entry of the given class.
     ','line_number':116,'multiline':True]['text':'*
     * Marks the given VisitorAccepter as being used.
     * In this context, the VisitorAccepter will be a NameAndTypeConstant object.
     ','line_number':125,'multiline':True]['text':'*
     * Returns whether the given VisitorAccepter has been marked as being used.
     * In this context, the VisitorAccepter will be a NameAndTypeConstant object.
     ','line_number':135,'multiline':True]['text':'*
     * Removes all NameAndType entries that are not marked as being used
     * from the given constant pool.
     * @return the new number of entries.
     ','line_number':145,'multiline':True]['text':' Create a new index map, if necessary.','line_number':152,'multiline':False]['text':' Shift the used constant pool entries together.','line_number':162,'multiline':False]['text':' Is the constant being used? Don't update the flag if this is the','line_number':167,'multiline':False]['text':' second half of a long entry.','line_number':168,'multiline':False]['text':' Remember the new index.','line_number':177,'multiline':False]['text':' Shift the constant pool entry.','line_number':180,'multiline':False]['text':' Remember an invalid index.','line_number':185,'multiline':False]['text':' Clear the remaining constant pool elements.','line_number':190,'multiline':False]