['text':' Copyright 2017 The Abseil Authors.','line_number':1,'multiline':False]['text':'','line_number':2,'multiline':False]['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':3,'multiline':False]['text':' you may not use this file except in compliance with the License.','line_number':4,'multiline':False]['text':' You may obtain a copy of the License at','line_number':5,'multiline':False]['text':'','line_number':6,'multiline':False]['text':'      http://www.apache.org/licenses/LICENSE-2.0','line_number':7,'multiline':False]['text':'','line_number':8,'multiline':False]['text':' Unless required by applicable law or agreed to in writing, software','line_number':9,'multiline':False]['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':10,'multiline':False]['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':11,'multiline':False]['text':' See the License for the specific language governing permissions and','line_number':12,'multiline':False]['text':' limitations under the License.','line_number':13,'multiline':False]['text':' Logging levels.','line_number':108,'multiline':False]['text':' Deprecated name.','line_number':112,'multiline':False]['text':' Regex to match/parse log line prefixes.','line_number':116,'multiline':False]['text':' Mask to convert integer thread ids to unsigned quantities for logging purposes','line_number':126,'multiline':False]['text':' Extra property set on the LogRecord created by ABSLLogger when its level is','line_number':129,'multiline':False]['text':' CRITICAL/FATAL.','line_number':130,'multiline':False]['text':' Extra prefix added to the log message when a non-absl logger logs a','line_number':132,'multiline':False]['text':' CRITICAL/FATAL message.','line_number':133,'multiline':False]['text':' Used by findCaller to skip callers from */logging/__init__.py.','line_number':136,'multiline':False]['text':' The ABSL logger instance, initialized in _initialize().','line_number':139,'multiline':False]['text':' The ABSL handler instance, initialized in _initialize().','line_number':141,'multiline':False]['text':' Abseil C++ has no DEBUG level, mapping it to INFO here.','line_number':146,'multiline':False]['text':' --verbosity is set to higher than 1 for vlog.','line_number':191,'multiline':False]['text':' Also update root level when absl_handler is used.','line_number':194,'multiline':False]['text':' Make absl logger inherit from the root logger. absl logger might have','line_number':196,'multiline':False]['text':' a non-NOTSET value if logging.set_verbosity() is called at import time.','line_number':197,'multiline':False]['text':' For lack of an immutable type, be defensive and return a copy.','line_number':215,'multiline':False]['text':' Modifications to the dict aren't supported and won't have any affect.','line_number':216,'multiline':False]['text':' While Py3 could use MappingProxyType, that isn't deepcopy friendly, so','line_number':217,'multiline':False]['text':' just return a copy.','line_number':218,'multiline':False]['text':' Visibility: module-private.','line_number':227,'multiline':False]['text':' This is called by absl.app.run() during initialization.','line_number':228,'multiline':False]['text':' Preserve the order so that serialization is deterministic.','line_number':242,'multiline':False]['text':' --stderrthreshold also accepts numeric strings whose values are','line_number':278,'multiline':False]['text':' Abseil C++ log levels.','line_number':279,'multiline':False]['text':' Normalize to strings.','line_number':281,'multiline':False]['text':' Use 'warning' as the canonical name.','line_number':285,'multiline':False]['text':' type: (Any, Any, Any) -> NoReturn','line_number':383,'multiline':False]['text':' Counter to keep track of number of log entries per token.','line_number':420,'multiline':False]['text':' Can't use a defaultdict because defaultdict isn't atomic, whereas','line_number':434,'multiline':False]['text':' setdefault is.','line_number':435,'multiline':False]['text':' Keeps track of the last log time of the given token.','line_number':455,'multiline':False]['text':' Note: must be a dict since set/get is atomic in CPython.','line_number':456,'multiline':False]['text':' Note: entries are never released as their number is expected to be low.','line_number':457,'multiline':False]['text':' Even though this function supports level that is greater than 1, users','line_number':539,'multiline':False]['text':' should use logging.vlog instead for such cases.','line_number':540,'multiline':False]['text':' Treat this as vlog, 1 is equivalent to DEBUG.','line_number':541,'multiline':False]['text':' Match standard logging's behavior. Before use_absl_handler() and','line_number':548,'multiline':False]['text':' logging is configured, there is no handler attached on _absl_logger nor','line_number':549,'multiline':False]['text':' logging.root. So logs go no where.','line_number':550,'multiline':False]['text':' Even though this function supports level that is greater than 1, users','line_number':585,'multiline':False]['text':' should use logging.vlog instead for such cases.','line_number':586,'multiline':False]['text':' Treat this as vlog, 1 is equivalent to DEBUG.','line_number':587,'multiline':False]['text':' Deprecated function.','line_number':616,'multiline':False]['text':' Strip the extension (foobar.par becomes foobar, and','line_number':670,'multiline':False]['text':' fubar.py becomes fubar). We do this so that the log','line_number':671,'multiline':False]['text':' file names are similar to C++ log file names.','line_number':672,'multiline':False]['text':' Prepend py_ to files so that python code gets a unique file, and','line_number':675,'multiline':False]['text':' so that C++ libraries do not try to write to the same log files as us.','line_number':676,'multiline':False]['text':' This can happen, e.g. when running under docker w/o passwd file.','line_number':684,'multiline':False]['text':' Windows doesn't have os.getuid','line_number':686,'multiline':False]['text':' Get a list of possible log dirs (will try to use them in order).','line_number':709,'multiline':False]['text':' log_dir was explicitly specified as an arg, so use it and it alone.','line_number':711,'multiline':False]['text':' log_dir flag was provided, so use it and it alone (this mimics the','line_number':714,'multiline':False]['text':' behavior of the same flag in logging.cc).','line_number':715,'multiline':False]['text':' Find the first usable log dir.','line_number':720,'multiline':False]['text':' When the level is FATAL, but not logged from absl, lower the level so','line_number':740,'multiline':False]['text':' it's treated as ERROR.','line_number':741,'multiline':False]['text':' Indicates if we still need to warn about pre-init logs going to stderr.','line_number':809,'multiline':False]['text':' os.symlink is not available on Windows Python 2.','line_number':835,'multiline':False]['text':' Create a symlink to the log file with a canonical name.','line_number':837,'multiline':False]['text':' If it fails, we're sad but it's no error.  Commonly, this','line_number':844,'multiline':False]['text':' fails because the symlink was created by another user and so','line_number':845,'multiline':False]['text':' we can't modify it','line_number':846,'multiline':False]['text':' A ValueError is thrown if we try to flush a closed file.','line_number':862,'multiline':False]['text':' emit() is protected by a lock in logging.Handler, so we don't need to','line_number':876,'multiline':False]['text':' protect here again.','line_number':877,'multiline':False]['text':' People occasionally call logging functions at import time before','line_number':896,'multiline':False]['text':' our flags may have even been defined yet, let alone even parsed, as we','line_number':897,'multiline':False]['text':' rely on the C++ side to define some flags for us and app init to','line_number':898,'multiline':False]['text':' deal with parsing.  Match the C++ library behavior of notify and emit','line_number':899,'multiline':False]['text':' such messages to stderr.  It encourages people to clean-up and does','line_number':900,'multiline':False]['text':' not hide the message.','line_number':901,'multiline':False]['text':' Also implies "before flag has been defined".','line_number':903,'multiline':False]['text':' Die when the record is created from ABSLLogger and level is FATAL.','line_number':919,'multiline':False]['text':' Flush the log before dying.','line_number':921,'multiline':False]['text':' In threaded python, sys.exit() from a non-main thread only','line_number':923,'multiline':False]['text':' exits the thread in question.','line_number':924,'multiline':False]['text':' Do not close the stream if it's sys.stderr|stdout. They may be','line_number':933,'multiline':False]['text':' redirected or overridden to files, which should be managed by users','line_number':934,'multiline':False]['text':' explicitly.','line_number':935,'multiline':False]['text':' A ValueError is thrown if we try to run isatty() on a closed file.','line_number':941,'multiline':False]['text':' Use sys._getframe(2) instead of logging.currentframe(), it's slightly','line_number':1053,'multiline':False]['text':' faster because there is one less frame to traverse.','line_number':1054,'multiline':False]['text':' pylint: disable=protected-access','line_number':1055,'multiline':False]['text':' Add property to the LogRecord created by this logger.','line_number':1114,'multiline':False]['text':' This will be used by the ABSLHandler to determine whether it should','line_number':1115,'multiline':False]['text':' treat CRITICAL/FATAL logs as really FATAL.','line_number':1116,'multiline':False]['text':' The absl handler logs to stderr by default. To prevent double logging to','line_number':1206,'multiline':False]['text':' stderr, the following code tries its best to remove other handlers that','line_number':1207,'multiline':False]['text':' emit to stderr. Those handlers are most commonly added when','line_number':1208,'multiline':False]['text':' logging.info/debug is called before calling use_absl_handler().','line_number':1209,'multiline':False]['text':' pylint: disable=protected-access','line_number':1220,'multiline':False]['text':' pylint: disable=protected-access','line_number':1221,'multiline':False]