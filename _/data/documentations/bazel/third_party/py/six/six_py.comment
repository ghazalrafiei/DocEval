['text':' Copyright (c) 2010-2020 Benjamin Peterson','line_number':1,'multiline':False]['text':'','line_number':2,'multiline':False]['text':' Permission is hereby granted, free of charge, to any person obtaining a copy','line_number':3,'multiline':False]['text':' of this software and associated documentation files (the "Software"), to deal','line_number':4,'multiline':False]['text':' in the Software without restriction, including without limitation the rights','line_number':5,'multiline':False]['text':' to use, copy, modify, merge, publish, distribute, sublicense, and/or sell','line_number':6,'multiline':False]['text':' copies of the Software, and to permit persons to whom the Software is','line_number':7,'multiline':False]['text':' furnished to do so, subject to the following conditions:','line_number':8,'multiline':False]['text':'','line_number':9,'multiline':False]['text':' The above copyright notice and this permission notice shall be included in all','line_number':10,'multiline':False]['text':' copies or substantial portions of the Software.','line_number':11,'multiline':False]['text':'','line_number':12,'multiline':False]['text':' THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR','line_number':13,'multiline':False]['text':' IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,','line_number':14,'multiline':False]['text':' FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE','line_number':15,'multiline':False]['text':' AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER','line_number':16,'multiline':False]['text':' LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,','line_number':17,'multiline':False]['text':' OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE','line_number':18,'multiline':False]['text':' SOFTWARE.','line_number':19,'multiline':False]['text':' Useful for very coarse version differentiation.','line_number':35,'multiline':False]['text':' Jython always uses 32 bits.','line_number':56,'multiline':False]['text':' It's possible to have sizeof(long) != sizeof(Py_ssize_t).','line_number':59,'multiline':False]['text':' 32-bit','line_number':67,'multiline':False]['text':' 64-bit','line_number':70,'multiline':False]['text':' Invokes __set__.','line_number':98,'multiline':False]['text':' This is a bit ugly, but it avoids running this again by','line_number':100,'multiline':False]['text':' removing this descriptor.','line_number':101,'multiline':False]['text':' Subclasses should override this','line_number':140,'multiline':False]['text':' in case of a reload','line_number':207,'multiline':False]['text':' eventually raises ImportError','line_number':232,'multiline':False]['text':' same as get_code','line_number':234,'multiline':False]['text':' mark as package','line_number':248,'multiline':False]['text':' Add windows specific modules.','line_number':322,'multiline':False]['text':' mark as package','line_number':496,'multiline':False]['text':' Workaround for standalone backslash','line_number':671,'multiline':False]['text':' If the file has an encoding, encode unicode with it.','line_number':768,'multiline':False]['text':' This does exactly the same what the :func:`py3:functools.update_wrapper`','line_number':825,'multiline':False]['text':' function does on Python versions after 3.2. It sets the ``__wrapped__``','line_number':826,'multiline':False]['text':' attribute on ``wrapper`` object and it doesn't raise an error if any of','line_number':827,'multiline':False]['text':' the attributes mentioned in ``assigned`` and ``updated`` are missing on','line_number':828,'multiline':False]['text':' ``wrapped`` object.','line_number':829,'multiline':False]['text':' This requires a bit of explanation: the basic idea is to make a dummy','line_number':858,'multiline':False]['text':' metaclass for one level of class instantiation that replaces itself with','line_number':859,'multiline':False]['text':' the actual metaclass.','line_number':860,'multiline':False]['text':' This version introduced PEP 560 that requires a bit','line_number':865,'multiline':False]['text':' of extra care (we mimic what is done by __build_class__).','line_number':866,'multiline':False]['text':' Optimization: Fast return for the common case.','line_number':927,'multiline':False]['text':' Complete the moves implementation.','line_number':976,'multiline':False]['text':' This code is at the end of this module to speed up module loading.','line_number':977,'multiline':False]['text':' Turn this module into a package.','line_number':978,'multiline':False]['text':' required for PEP 302 and PEP 451','line_number':979,'multiline':False]['text':' see PEP 366 @ReservedAssignment','line_number':980,'multiline':False]['text':' PEP 451 @UndefinedVariable','line_number':982,'multiline':False]['text':' Remove other six meta path importers, since they cause problems. This can','line_number':983,'multiline':False]['text':' happen if six is removed from sys.modules and then reloaded. (Setuptools does','line_number':984,'multiline':False]['text':' this for some reason.)','line_number':985,'multiline':False]['text':' Here's some real nastiness: Another "instance" of the six module might','line_number':988,'multiline':False]['text':' be floating around. Therefore, we can't use isinstance() to check for','line_number':989,'multiline':False]['text':' the six meta path importer, since the other six instance will have','line_number':990,'multiline':False]['text':' inserted an importer with different class.','line_number':991,'multiline':False]['text':' Finally, add the importer to the meta path import hook.','line_number':997,'multiline':False]