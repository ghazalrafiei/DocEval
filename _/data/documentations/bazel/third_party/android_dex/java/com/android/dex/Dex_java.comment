['text':'
 * Copyright (C) 2011 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ','line_number':1,'multiline':True]['text':'*
 * The bytes of a dex file in memory for reading and writing. All int offsets
 * are unsigned.
 ','line_number':47,'multiline':True]['text':' Provided as a convenience to avoid a memory allocation to benefit Dalvik.','line_number':56,'multiline':False]['text':' Note: libcore.util.EmptyArray cannot be accessed when this code isn't run on Dalvik.','line_number':57,'multiline':False]['text':'*
     * Creates a new dex that reads from {@code data}. It is an error to modify
     * {@code data} after using it to create a dex buffer.
     ','line_number':70,'multiline':True]['text':'*
     * Creates a new empty dex of the specified size.
     ','line_number':84,'multiline':True]['text':'*
     * Creates a new dex buffer of the dex in {@code in}, and closes {@code in}.
     ','line_number':92,'multiline':True]['text':'*
     * Creates a new dex buffer from the dex file {@code file}.
     ','line_number':103,'multiline':True]['text':'*
     * It is the caller's responsibility to close {@code in}.
     ','line_number':127,'multiline':True]['text':' positioned ByteBuffers aren't thread safe','line_number':152,'multiline':False]['text':' necessary?','line_number':177,'multiline':False]['text':' necessary?','line_number':189,'multiline':False]['text':'*
     * Returns a copy of the the bytes of this dex.
     ','line_number':205,'multiline':True]['text':' positioned ByteBuffers aren't thread safe','line_number':209,'multiline':False]['text':'*
     * Returns the signature of all but the first 32 bytes of this dex. The
     * first 32 bytes of dex files are not specified to be included in the
     * signature.
     ','line_number':267,'multiline':True]['text':' positioned ByteBuffers aren't thread safe','line_number':280,'multiline':False]['text':'*
     * Returns the checksum of all but the first 12 bytes of {@code dex}.
     ','line_number':291,'multiline':True]['text':' positioned ByteBuffers aren't thread safe','line_number':297,'multiline':False]['text':'*
     * Generates the signature and checksum of the dex file {@code out} and
     * writes them to the file.
     ','line_number':308,'multiline':True]['text':'*
     * Look up a descriptor index from a type index. Cheaper than:
     * {@code open(tableOfContents.typeIds.off + (index * SizeOf.TYPE_ID_ITEM)).readInt();}
     ','line_number':317,'multiline':True]['text':' padding','line_number':483,'multiline':False]['text':'
                 * We can't read the tries until we've read the catch handlers.
                 * Unfortunately they're in the opposite order in the dex file
                 * so we need to read them out-of-order.
                 ','line_number':486,'multiline':True]['text':' field index diff','line_number':565,'multiline':False]['text':' method index diff','line_number':576,'multiline':False]['text':'*
         * Returns a byte array containing the bytes from {@code start} to this
         * section's current position.
         ','line_number':584,'multiline':True]['text':'*
         * Skips bytes until the position is aligned to a multiple of 4.
         ','line_number':616,'multiline':True]['text':'*
         * Writes 0x00 until the position is aligned to a multiple of 4.
         ','line_number':623,'multiline':True]['text':'*
         * Returns the number of bytes used by this section.
         ','line_number':705,'multiline':True]