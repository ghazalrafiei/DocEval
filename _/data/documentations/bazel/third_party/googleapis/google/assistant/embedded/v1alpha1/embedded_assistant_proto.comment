['text':' Copyright 2017 Google Inc.','line_number':1,'multiline':False]['text':'','line_number':2,'multiline':False]['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':3,'multiline':False]['text':' you may not use this file except in compliance with the License.','line_number':4,'multiline':False]['text':' You may obtain a copy of the License at','line_number':5,'multiline':False]['text':'','line_number':6,'multiline':False]['text':'     http://www.apache.org/licenses/LICENSE-2.0','line_number':7,'multiline':False]['text':'','line_number':8,'multiline':False]['text':' Unless required by applicable law or agreed to in writing, software','line_number':9,'multiline':False]['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':10,'multiline':False]['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':11,'multiline':False]['text':' See the License for the specific language governing permissions and','line_number':12,'multiline':False]['text':' limitations under the License.','line_number':13,'multiline':False]['text':' Service that implements Google Assistant API.','line_number':28,'multiline':False]['text':' Initiates or continues a conversation with the embedded assistant service.','line_number':30,'multiline':False]['text':' Each call performs one round-trip, sending an audio request to the service','line_number':31,'multiline':False]['text':' and receiving the audio response. Uses bidirectional streaming to receive','line_number':32,'multiline':False]['text':' results, such as the `END_OF_UTTERANCE` event, while sending audio.','line_number':33,'multiline':False]['text':'','line_number':34,'multiline':False]['text':' A conversation is one or more gRPC connections, each consisting of several','line_number':35,'multiline':False]['text':' streamed requests and responses.','line_number':36,'multiline':False]['text':' For example, the user says *Add to my shopping list* and the assistant','line_number':37,'multiline':False]['text':' responds *What do you want to add?*. The sequence of streamed requests and','line_number':38,'multiline':False]['text':' responses in the first gRPC message could be:','line_number':39,'multiline':False]['text':'','line_number':40,'multiline':False]['text':' *   ConverseRequest.config','line_number':41,'multiline':False]['text':' *   ConverseRequest.audio_in','line_number':42,'multiline':False]['text':' *   ConverseRequest.audio_in','line_number':43,'multiline':False]['text':' *   ConverseRequest.audio_in','line_number':44,'multiline':False]['text':' *   ConverseRequest.audio_in','line_number':45,'multiline':False]['text':' *   ConverseResponse.event_type.END_OF_UTTERANCE','line_number':46,'multiline':False]['text':' *   ConverseResponse.result.microphone_mode.DIALOG_FOLLOW_ON','line_number':47,'multiline':False]['text':' *   ConverseResponse.audio_out','line_number':48,'multiline':False]['text':' *   ConverseResponse.audio_out','line_number':49,'multiline':False]['text':' *   ConverseResponse.audio_out','line_number':50,'multiline':False]['text':'','line_number':51,'multiline':False]['text':' The user then says *bagels* and the assistant responds','line_number':52,'multiline':False]['text':' *OK, I've added bagels to your shopping list*. This is sent as another gRPC','line_number':53,'multiline':False]['text':' connection call to the `Converse` method, again with streamed requests and','line_number':54,'multiline':False]['text':' responses, such as:','line_number':55,'multiline':False]['text':'','line_number':56,'multiline':False]['text':' *   ConverseRequest.config','line_number':57,'multiline':False]['text':' *   ConverseRequest.audio_in','line_number':58,'multiline':False]['text':' *   ConverseRequest.audio_in','line_number':59,'multiline':False]['text':' *   ConverseRequest.audio_in','line_number':60,'multiline':False]['text':' *   ConverseResponse.event_type.END_OF_UTTERANCE','line_number':61,'multiline':False]['text':' *   ConverseResponse.result.microphone_mode.CLOSE_MICROPHONE','line_number':62,'multiline':False]['text':' *   ConverseResponse.audio_out','line_number':63,'multiline':False]['text':' *   ConverseResponse.audio_out','line_number':64,'multiline':False]['text':' *   ConverseResponse.audio_out','line_number':65,'multiline':False]['text':' *   ConverseResponse.audio_out','line_number':66,'multiline':False]['text':'','line_number':67,'multiline':False]['text':' Although the precise order of responses is not guaranteed, sequential','line_number':68,'multiline':False]['text':' ConverseResponse.audio_out messages will always contain sequential portions','line_number':69,'multiline':False]['text':' of audio.','line_number':70,'multiline':False]['text':' Specifies how to process the `ConverseRequest` messages.','line_number':74,'multiline':False]['text':' *Required* Specifies how to process the subsequent incoming audio.','line_number':76,'multiline':False]['text':' *Required* Specifies how to format the audio that will be returned.','line_number':79,'multiline':False]['text':' *Required* Represents the current dialog state.','line_number':82,'multiline':False]['text':' Specifies how to process the `audio_in` data that will be provided in','line_number':86,'multiline':False]['text':' subsequent requests. For recommended settings, see the Google Assistant SDK','line_number':87,'multiline':False]['text':' [best practices](https://developers.google.com/assistant/best-practices).','line_number':88,'multiline':False]['text':' Audio encoding of the data sent in the audio message.','line_number':90,'multiline':False]['text':' Audio must be one-channel (mono). The only language supported is "en-US".','line_number':91,'multiline':False]['text':' Not specified. Will return result [google.rpc.Code.INVALID_ARGUMENT][].','line_number':93,'multiline':False]['text':' Uncompressed 16-bit signed little-endian samples (Linear PCM).','line_number':96,'multiline':False]['text':' This encoding includes no header, only the raw audio bytes.','line_number':97,'multiline':False]['text':' [`FLAC`](https://xiph.org/flac/documentation.html) (Free Lossless Audio','line_number':100,'multiline':False]['text':' Codec) is the recommended encoding because it is','line_number':101,'multiline':False]['text':' lossless--therefore recognition is not compromised--and','line_number':102,'multiline':False]['text':' requires only about half the bandwidth of `LINEAR16`. This encoding','line_number':103,'multiline':False]['text':' includes the `FLAC` stream header followed by audio data. It supports','line_number':104,'multiline':False]['text':' 16-bit and 24-bit samples, however, not all fields in `STREAMINFO` are','line_number':105,'multiline':False]['text':' supported.','line_number':106,'multiline':False]['text':' *Required* Encoding of audio data sent in all `audio_in` messages.','line_number':110,'multiline':False]['text':' *Required* Sample rate (in Hertz) of the audio data sent in all `audio_in`','line_number':113,'multiline':False]['text':' messages. Valid values are from 16000-24000, but 16000 is optimal.','line_number':114,'multiline':False]['text':' For best results, set the sampling rate of the audio source to 16000 Hz.','line_number':115,'multiline':False]['text':' If that's not possible, use the native sample rate of the audio source','line_number':116,'multiline':False]['text':' (instead of re-sampling).','line_number':117,'multiline':False]['text':' Specifies the desired format for the server to use when it returns','line_number':121,'multiline':False]['text':' `audio_out` messages.','line_number':122,'multiline':False]['text':' Audio encoding of the data returned in the audio message. All encodings are','line_number':124,'multiline':False]['text':' raw audio bytes with no header, except as indicated below.','line_number':125,'multiline':False]['text':' Not specified. Will return result [google.rpc.Code.INVALID_ARGUMENT][].','line_number':127,'multiline':False]['text':' Uncompressed 16-bit signed little-endian samples (Linear PCM).','line_number':130,'multiline':False]['text':' MP3 audio encoding. The sample rate is encoded in the payload.','line_number':133,'multiline':False]['text':' Opus-encoded audio wrapped in an ogg container. The result will be a','line_number':136,'multiline':False]['text':' file which can be played natively on Android and in some browsers (such','line_number':137,'multiline':False]['text':' as Chrome). The quality of the encoding is considerably higher than MP3','line_number':138,'multiline':False]['text':' while using the same bitrate. The sample rate is encoded in the payload.','line_number':139,'multiline':False]['text':' *Required* The encoding of audio data to be returned in all `audio_out`','line_number':143,'multiline':False]['text':' messages.','line_number':144,'multiline':False]['text':' *Required* The sample rate in Hertz of the audio data returned in','line_number':147,'multiline':False]['text':' `audio_out` messages. Valid values are: 16000-24000.','line_number':148,'multiline':False]['text':' *Required* Current volume setting of the device's audio output.','line_number':151,'multiline':False]['text':' Valid values are 1 to 100 (corresponding to 1% to 100%).','line_number':152,'multiline':False]['text':' Provides information about the current dialog state.','line_number':156,'multiline':False]['text':' *Required* The `conversation_state` value returned in the prior','line_number':158,'multiline':False]['text':' `ConverseResponse`. Omit (do not set the field) if there was no prior','line_number':159,'multiline':False]['text':' `ConverseResponse`. If there was a prior `ConverseResponse`, do not omit','line_number':160,'multiline':False]['text':' this field; doing so will end that conversation (and this new request will','line_number':161,'multiline':False]['text':' start a new conversation).','line_number':162,'multiline':False]['text':' The audio containing the assistant's response to the query. Sequential chunks','line_number':166,'multiline':False]['text':' of audio data are received in sequential `ConverseResponse` messages.','line_number':167,'multiline':False]['text':' *Output-only* The audio data containing the assistant's response to the','line_number':169,'multiline':False]['text':' query. Sequential chunks of audio data are received in sequential','line_number':170,'multiline':False]['text':' `ConverseResponse` messages.','line_number':171,'multiline':False]['text':' The semantic result for the user's spoken query.','line_number':175,'multiline':False]['text':' Possible states of the microphone after a `Converse` RPC completes.','line_number':177,'multiline':False]['text':' No mode specified.','line_number':179,'multiline':False]['text':' The service is not expecting a follow-on question from the user.','line_number':182,'multiline':False]['text':' The microphone should remain off until the user re-activates it.','line_number':183,'multiline':False]['text':' The service is expecting a follow-on question from the user. The','line_number':186,'multiline':False]['text':' microphone should be re-opened when the `AudioOut` playback completes','line_number':187,'multiline':False]['text':' (by starting a new `Converse` RPC call to send the new audio).','line_number':188,'multiline':False]['text':' *Output-only* The recognized transcript of what the user said.','line_number':192,'multiline':False]['text':' *Output-only* The text of the assistant's spoken response. This is only','line_number':195,'multiline':False]['text':' returned for an IFTTT action.','line_number':196,'multiline':False]['text':' *Output-only* State information for subsequent `ConverseRequest`. This','line_number':199,'multiline':False]['text':' value should be saved in the client and returned in the','line_number':200,'multiline':False]['text':' `conversation_state` with the next `ConverseRequest`. (The client does not','line_number':201,'multiline':False]['text':' need to interpret or otherwise use this value.) There is no need to save','line_number':202,'multiline':False]['text':' this information across device restarts.','line_number':203,'multiline':False]['text':' *Output-only* Specifies the mode of the microphone after this `Converse`','line_number':206,'multiline':False]['text':' RPC is processed.','line_number':207,'multiline':False]['text':' *Output-only* Updated volume level. The value will be 0 or omitted','line_number':210,'multiline':False]['text':' (indicating no change) unless a voice command such as "Increase the volume"','line_number':211,'multiline':False]['text':' or "Set volume level 4" was recognized, in which case the value will be','line_number':212,'multiline':False]['text':' between 1 and 100 (corresponding to the new volume level of 1% to 100%).','line_number':213,'multiline':False]['text':' Typically, a client should use this volume level when playing the','line_number':214,'multiline':False]['text':' `audio_out` data, and retain this value as the current volume level and','line_number':215,'multiline':False]['text':' supply it in the `AudioOutConfig` of the next `ConverseRequest`. (Some','line_number':216,'multiline':False]['text':' clients may also implement other ways to allow the current volume level to','line_number':217,'multiline':False]['text':' be changed, for example, by providing a knob that the user can turn.)','line_number':218,'multiline':False]['text':' The top-level message sent by the client. Clients must send at least two, and','line_number':222,'multiline':False]['text':' typically numerous `ConverseRequest` messages. The first message must','line_number':223,'multiline':False]['text':' contain a `config` message and must not contain `audio_in` data. All','line_number':224,'multiline':False]['text':' subsequent messages must contain `audio_in` data and must not contain a','line_number':225,'multiline':False]['text':' `config` message.','line_number':226,'multiline':False]['text':' Exactly one of these fields must be specified in each `ConverseRequest`.','line_number':228,'multiline':False]['text':' The `config` message provides information to the recognizer that','line_number':230,'multiline':False]['text':' specifies how to process the request.','line_number':231,'multiline':False]['text':' The first `ConverseRequest` message must contain a `config` message.','line_number':232,'multiline':False]['text':' The audio data to be recognized. Sequential chunks of audio data are sent','line_number':235,'multiline':False]['text':' in sequential `ConverseRequest` messages. The first `ConverseRequest`','line_number':236,'multiline':False]['text':' message must not contain `audio_in` data and all subsequent','line_number':237,'multiline':False]['text':' `ConverseRequest` messages must contain `audio_in` data. The audio bytes','line_number':238,'multiline':False]['text':' must be encoded as specified in `AudioInConfig`.','line_number':239,'multiline':False]['text':' Audio must be sent at approximately real-time (16000 samples per second).','line_number':240,'multiline':False]['text':' An error will be returned if audio is sent significantly faster or','line_number':241,'multiline':False]['text':' slower.','line_number':242,'multiline':False]['text':' The top-level message received by the client. A series of one or more','line_number':247,'multiline':False]['text':' `ConverseResponse` messages are streamed back to the client.','line_number':248,'multiline':False]['text':' Indicates the type of event.','line_number':250,'multiline':False]['text':' No event specified.','line_number':252,'multiline':False]['text':' This event indicates that the server has detected the end of the user's','line_number':255,'multiline':False]['text':' speech utterance and expects no additional speech. Therefore, the server','line_number':256,'multiline':False]['text':' will not process additional audio (although it may subsequently return','line_number':257,'multiline':False]['text':' additional results). The client should stop sending additional audio','line_number':258,'multiline':False]['text':' data, half-close the gRPC connection, and wait for any additional results','line_number':259,'multiline':False]['text':' until the server closes the gRPC connection.','line_number':260,'multiline':False]['text':' Exactly one of these fields will be populated in each `ConverseResponse`.','line_number':264,'multiline':False]['text':' *Output-only* If set, returns a [google.rpc.Status][google.rpc.Status] message that','line_number':266,'multiline':False]['text':' specifies the error for the operation.','line_number':267,'multiline':False]['text':' If an error occurs during processing, this message will be set and there','line_number':268,'multiline':False]['text':' will be no further messages sent.','line_number':269,'multiline':False]['text':' *Output-only* Indicates the type of event.','line_number':272,'multiline':False]['text':' *Output-only* The audio containing the assistant's response to the query.','line_number':275,'multiline':False]['text':' *Output-only* The semantic result for the user's spoken query.','line_number':278,'multiline':False]