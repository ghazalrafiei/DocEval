['text':' Copyright 2016 Google Inc.','line_number':1,'multiline':False]['text':'','line_number':2,'multiline':False]['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':3,'multiline':False]['text':' you may not use this file except in compliance with the License.','line_number':4,'multiline':False]['text':' You may obtain a copy of the License at','line_number':5,'multiline':False]['text':'','line_number':6,'multiline':False]['text':'     http://www.apache.org/licenses/LICENSE-2.0','line_number':7,'multiline':False]['text':'','line_number':8,'multiline':False]['text':' Unless required by applicable law or agreed to in writing, software','line_number':9,'multiline':False]['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':10,'multiline':False]['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':11,'multiline':False]['text':' See the License for the specific language governing permissions and','line_number':12,'multiline':False]['text':' limitations under the License.','line_number':13,'multiline':False]['text':' A linear alignment can be represented by one CIGAR string. Describes the','line_number':31,'multiline':False]['text':' mapped position and local alignment of the read to the reference.','line_number':32,'multiline':False]['text':' The position of this alignment.','line_number':34,'multiline':False]['text':' The mapping quality of this alignment. Represents how likely','line_number':37,'multiline':False]['text':' the read maps to this position as opposed to other locations.','line_number':38,'multiline':False]['text':'','line_number':39,'multiline':False]['text':' Specifically, this is -10 log10 Pr(mapping position is wrong), rounded to','line_number':40,'multiline':False]['text':' the nearest integer.','line_number':41,'multiline':False]['text':' Represents the local alignment of this sequence (alignment matches, indels,','line_number':44,'multiline':False]['text':' etc) against the reference.','line_number':45,'multiline':False]['text':' A read alignment describes a linear alignment of a string of DNA to a','line_number':49,'multiline':False]['text':' [reference sequence][google.genomics.v1.Reference], in addition to metadata','line_number':50,'multiline':False]['text':' about the fragment (the molecule of DNA sequenced) and the read (the bases','line_number':51,'multiline':False]['text':' which were read by the sequencer). A read is equivalent to a line in a SAM','line_number':52,'multiline':False]['text':' file. A read belongs to exactly one read group and exactly one','line_number':53,'multiline':False]['text':' [read group set][google.genomics.v1.ReadGroupSet].','line_number':54,'multiline':False]['text':'','line_number':55,'multiline':False]['text':' For more genomics resource definitions, see [Fundamentals of Google','line_number':56,'multiline':False]['text':' Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)','line_number':57,'multiline':False]['text':'','line_number':58,'multiline':False]['text':' ### Reverse-stranded reads','line_number':59,'multiline':False]['text':'','line_number':60,'multiline':False]['text':' Mapped reads (reads having a non-null `alignment`) can be aligned to either','line_number':61,'multiline':False]['text':' the forward or the reverse strand of their associated reference. Strandedness','line_number':62,'multiline':False]['text':' of a mapped read is encoded by `alignment.position.reverseStrand`.','line_number':63,'multiline':False]['text':'','line_number':64,'multiline':False]['text':' If we consider the reference to be a forward-stranded coordinate space of','line_number':65,'multiline':False]['text':' `[0, reference.length)` with `0` as the left-most position and','line_number':66,'multiline':False]['text':' `reference.length` as the right-most position, reads are always aligned left','line_number':67,'multiline':False]['text':' to right. That is, `alignment.position.position` always refers to the','line_number':68,'multiline':False]['text':' left-most reference coordinate and `alignment.cigar` describes the alignment','line_number':69,'multiline':False]['text':' of this read to the reference from left to right. All per-base fields such as','line_number':70,'multiline':False]['text':' `alignedSequence` and `alignedQuality` share this same left-to-right','line_number':71,'multiline':False]['text':' orientation; this is true of reads which are aligned to either strand. For','line_number':72,'multiline':False]['text':' reverse-stranded reads, this means that `alignedSequence` is the reverse','line_number':73,'multiline':False]['text':' complement of the bases that were originally reported by the sequencing','line_number':74,'multiline':False]['text':' machine.','line_number':75,'multiline':False]['text':'','line_number':76,'multiline':False]['text':' ### Generating a reference-aligned sequence string','line_number':77,'multiline':False]['text':'','line_number':78,'multiline':False]['text':' When interacting with mapped reads, it's often useful to produce a string','line_number':79,'multiline':False]['text':' representing the local alignment of the read to reference. The following','line_number':80,'multiline':False]['text':' pseudocode demonstrates one way of doing this:','line_number':81,'multiline':False]['text':'','line_number':82,'multiline':False]['text':'     out = ""','line_number':83,'multiline':False]['text':'     offset = 0','line_number':84,'multiline':False]['text':'     for c in read.alignment.cigar {','line_number':85,'multiline':False]['text':'       switch c.operation {','line_number':86,'multiline':False]['text':'       case "ALIGNMENT_MATCH", "SEQUENCE_MATCH", "SEQUENCE_MISMATCH":','line_number':87,'multiline':False]['text':'         out += read.alignedSequence[offset:offset+c.operationLength]','line_number':88,'multiline':False]['text':'         offset += c.operationLength','line_number':89,'multiline':False]['text':'         break','line_number':90,'multiline':False]['text':'       case "CLIP_SOFT", "INSERT":','line_number':91,'multiline':False]['text':'         offset += c.operationLength','line_number':92,'multiline':False]['text':'         break','line_number':93,'multiline':False]['text':'       case "PAD":','line_number':94,'multiline':False]['text':'         out += repeat("*", c.operationLength)','line_number':95,'multiline':False]['text':'         break','line_number':96,'multiline':False]['text':'       case "DELETE":','line_number':97,'multiline':False]['text':'         out += repeat("-", c.operationLength)','line_number':98,'multiline':False]['text':'         break','line_number':99,'multiline':False]['text':'       case "SKIP":','line_number':100,'multiline':False]['text':'         out += repeat(" ", c.operationLength)','line_number':101,'multiline':False]['text':'         break','line_number':102,'multiline':False]['text':'       case "CLIP_HARD":','line_number':103,'multiline':False]['text':'         break','line_number':104,'multiline':False]['text':'       }','line_number':105,'multiline':False]['text':'     }','line_number':106,'multiline':False]['text':'     return out','line_number':107,'multiline':False]['text':'','line_number':108,'multiline':False]['text':' ### Converting to SAM's CIGAR string','line_number':109,'multiline':False]['text':'','line_number':110,'multiline':False]['text':' The following pseudocode generates a SAM CIGAR string from the','line_number':111,'multiline':False]['text':' `cigar` field. Note that this is a lossy conversion','line_number':112,'multiline':False]['text':' (`cigar.referenceSequence` is lost).','line_number':113,'multiline':False]['text':'','line_number':114,'multiline':False]['text':'     cigarMap = {','line_number':115,'multiline':False]['text':'       "ALIGNMENT_MATCH": "M",','line_number':116,'multiline':False]['text':'       "INSERT": "I",','line_number':117,'multiline':False]['text':'       "DELETE": "D",','line_number':118,'multiline':False]['text':'       "SKIP": "N",','line_number':119,'multiline':False]['text':'       "CLIP_SOFT": "S",','line_number':120,'multiline':False]['text':'       "CLIP_HARD": "H",','line_number':121,'multiline':False]['text':'       "PAD": "P",','line_number':122,'multiline':False]['text':'       "SEQUENCE_MATCH": "=",','line_number':123,'multiline':False]['text':'       "SEQUENCE_MISMATCH": "X",','line_number':124,'multiline':False]['text':'     }','line_number':125,'multiline':False]['text':'     cigarStr = ""','line_number':126,'multiline':False]['text':'     for c in read.alignment.cigar {','line_number':127,'multiline':False]['text':'       cigarStr += c.operationLength + cigarMap[c.operation]','line_number':128,'multiline':False]['text':'     }','line_number':129,'multiline':False]['text':'     return cigarStr','line_number':130,'multiline':False]['text':' The server-generated read ID, unique across all reads. This is different','line_number':132,'multiline':False]['text':' from the `fragmentName`.','line_number':133,'multiline':False]['text':' The ID of the read group this read belongs to. A read belongs to exactly','line_number':136,'multiline':False]['text':' one read group. This is a server-generated ID which is distinct from SAM's','line_number':137,'multiline':False]['text':' RG tag (for that value, see','line_number':138,'multiline':False]['text':' [ReadGroup.name][google.genomics.v1.ReadGroup.name]).','line_number':139,'multiline':False]['text':' The ID of the read group set this read belongs to. A read belongs to','line_number':142,'multiline':False]['text':' exactly one read group set.','line_number':143,'multiline':False]['text':' The fragment name. Equivalent to QNAME (query template name) in SAM.','line_number':146,'multiline':False]['text':' The orientation and the distance between reads from the fragment are','line_number':149,'multiline':False]['text':' consistent with the sequencing protocol (SAM flag 0x2).','line_number':150,'multiline':False]['text':' The fragment is a PCR or optical duplicate (SAM flag 0x400).','line_number':153,'multiline':False]['text':' The observed length of the fragment, equivalent to TLEN in SAM.','line_number':156,'multiline':False]['text':' The read number in sequencing. 0-based and less than numberReads. This','line_number':159,'multiline':False]['text':' field replaces SAM flag 0x40 and 0x80.','line_number':160,'multiline':False]['text':' The number of reads in the fragment (extension to SAM flag 0x1).','line_number':163,'multiline':False]['text':' Whether this read did not pass filters, such as platform or vendor quality','line_number':166,'multiline':False]['text':' controls (SAM flag 0x200).','line_number':167,'multiline':False]['text':' The linear alignment for this alignment record. This field is null for','line_number':170,'multiline':False]['text':' unmapped reads.','line_number':171,'multiline':False]['text':' Whether this alignment is secondary. Equivalent to SAM flag 0x100.','line_number':174,'multiline':False]['text':' A secondary alignment represents an alternative to the primary alignment','line_number':175,'multiline':False]['text':' for this read. Aligners may return secondary alignments if a read can map','line_number':176,'multiline':False]['text':' ambiguously to multiple coordinates in the genome. By convention, each read','line_number':177,'multiline':False]['text':' has one and only one alignment where both `secondaryAlignment`','line_number':178,'multiline':False]['text':' and `supplementaryAlignment` are false.','line_number':179,'multiline':False]['text':' Whether this alignment is supplementary. Equivalent to SAM flag 0x800.','line_number':182,'multiline':False]['text':' Supplementary alignments are used in the representation of a chimeric','line_number':183,'multiline':False]['text':' alignment. In a chimeric alignment, a read is split into multiple','line_number':184,'multiline':False]['text':' linear alignments that map to different reference contigs. The first','line_number':185,'multiline':False]['text':' linear alignment in the read will be designated as the representative','line_number':186,'multiline':False]['text':' alignment; the remaining linear alignments will be designated as','line_number':187,'multiline':False]['text':' supplementary alignments. These alignments may have different mapping','line_number':188,'multiline':False]['text':' quality scores. In each linear alignment in a chimeric alignment, the read','line_number':189,'multiline':False]['text':' will be hard clipped. The `alignedSequence` and','line_number':190,'multiline':False]['text':' `alignedQuality` fields in the alignment record will only','line_number':191,'multiline':False]['text':' represent the bases for its respective linear alignment.','line_number':192,'multiline':False]['text':' The bases of the read sequence contained in this alignment record,','line_number':195,'multiline':False]['text':' **without CIGAR operations applied** (equivalent to SEQ in SAM).','line_number':196,'multiline':False]['text':' `alignedSequence` and `alignedQuality` may be','line_number':197,'multiline':False]['text':' shorter than the full read sequence and quality. This will occur if the','line_number':198,'multiline':False]['text':' alignment is part of a chimeric alignment, or if the read was trimmed. When','line_number':199,'multiline':False]['text':' this occurs, the CIGAR for this read will begin/end with a hard clip','line_number':200,'multiline':False]['text':' operator that will indicate the length of the excised sequence.','line_number':201,'multiline':False]['text':' The quality of the read sequence contained in this alignment record','line_number':204,'multiline':False]['text':' (equivalent to QUAL in SAM).','line_number':205,'multiline':False]['text':' `alignedSequence` and `alignedQuality` may be shorter than the full read','line_number':206,'multiline':False]['text':' sequence and quality. This will occur if the alignment is part of a','line_number':207,'multiline':False]['text':' chimeric alignment, or if the read was trimmed. When this occurs, the CIGAR','line_number':208,'multiline':False]['text':' for this read will begin/end with a hard clip operator that will indicate','line_number':209,'multiline':False]['text':' the length of the excised sequence.','line_number':210,'multiline':False]['text':' The mapping of the primary alignment of the','line_number':213,'multiline':False]['text':' `(readNumber+1)%numberReads` read in the fragment. It replaces','line_number':214,'multiline':False]['text':' mate position and mate strand in SAM.','line_number':215,'multiline':False]['text':' A map of additional read alignment information. This must be of the form','line_number':218,'multiline':False]['text':' map<string, string[]> (string key mapping to a list of string values).','line_number':219,'multiline':False]