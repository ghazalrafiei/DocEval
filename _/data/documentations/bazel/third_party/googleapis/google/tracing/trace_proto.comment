['text':' Copyright 2016 Google Inc.','line_number':1,'multiline':False]['text':'','line_number':2,'multiline':False]['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':3,'multiline':False]['text':' you may not use this file except in compliance with the License.','line_number':4,'multiline':False]['text':' You may obtain a copy of the License at','line_number':5,'multiline':False]['text':'','line_number':6,'multiline':False]['text':'     http://www.apache.org/licenses/LICENSE-2.0','line_number':7,'multiline':False]['text':'','line_number':8,'multiline':False]['text':' Unless required by applicable law or agreed to in writing, software','line_number':9,'multiline':False]['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':10,'multiline':False]['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':11,'multiline':False]['text':' See the License for the specific language governing permissions and','line_number':12,'multiline':False]['text':' limitations under the License.','line_number':13,'multiline':False]['text':' A TraceId uniquely identifies a Trace. It is conceptually a 128-bit value,','line_number':29,'multiline':False]['text':' represented as a string, containing the hex-encoded value.','line_number':30,'multiline':False]['text':' Trace ID specified as a hex-encoded string. *Must* be 32 bytes long.','line_number':32,'multiline':False]['text':' Binary module.','line_number':37,'multiline':False]['text':' E.g. main binary, kernel modules, and dynamic libraries','line_number':38,'multiline':False]['text':' such as libc.so, sharedlib.so','line_number':39,'multiline':False]['text':' Build_id is a unique identifier for the module,','line_number':42,'multiline':False]['text':' probably a hash of its contents','line_number':43,'multiline':False]['text':' Presents a single stack frame in a stack trace.','line_number':48,'multiline':False]['text':' Fully qualified names which uniquely identify function/method/etc.','line_number':50,'multiline':False]['text':' Used when function name is ‘mangled’. Not guaranteed to be fully','line_number':53,'multiline':False]['text':' qualified but usually it is.','line_number':54,'multiline':False]['text':' File name of the frame.','line_number':57,'multiline':False]['text':' Line number of the frame.','line_number':60,'multiline':False]['text':' Column number is important in JavaScript(anonymous functions),','line_number':63,'multiline':False]['text':' Might not be available in some languages.','line_number':64,'multiline':False]['text':' Binary module the code is loaded from.','line_number':67,'multiline':False]['text':' source_version is deployment specific. It might be','line_number':70,'multiline':False]['text':' better to be stored in deployment metadata.','line_number':71,'multiline':False]['text':' However, in distributed tracing, it’s hard to keep track of','line_number':72,'multiline':False]['text':' source/binary versions at one place for all spans.','line_number':73,'multiline':False]['text':' Stack frames of this stack trace.','line_number':77,'multiline':False]['text':' User can choose to use his own hash function to hash large labels to save','line_number':80,'multiline':False]['text':' network bandwidth and storage.','line_number':81,'multiline':False]['text':' Typical usage is to pass both initially to inform the storage of the','line_number':82,'multiline':False]['text':' mapping. And in subsequent calls, pass in stack_trace_hash_id only.','line_number':83,'multiline':False]['text':' User shall verify the hash value is successfully stored.','line_number':84,'multiline':False]['text':' Allowed label values.','line_number':88,'multiline':False]['text':' The value of the label.','line_number':90,'multiline':False]['text':' A string value.','line_number':92,'multiline':False]['text':' An integer value.','line_number':95,'multiline':False]['text':' A boolean value.','line_number':98,'multiline':False]['text':' A span represents a single operation within a trace. Spans can be nested','line_number':103,'multiline':False]['text':' and form a trace tree. Often, a trace contains a root span that describes the','line_number':104,'multiline':False]['text':' end-to-end latency and, optionally, one or more subspans for','line_number':105,'multiline':False]['text':' its sub-operations. Spans do not need to be contiguous. There may be gaps','line_number':106,'multiline':False]['text':' between spans in a trace.','line_number':107,'multiline':False]['text':' A time-stamped annotation in the Span.','line_number':109,'multiline':False]['text':' Text annotation with a set of labels.','line_number':111,'multiline':False]['text':' A user-supplied message describing the event.','line_number':113,'multiline':False]['text':' A set of labels on the annotation.','line_number':116,'multiline':False]['text':' An event describing an RPC message sent/received on the network.','line_number':120,'multiline':False]['text':' The type of the network event. SENT or RECV event.','line_number':122,'multiline':False]['text':' If available, this is the kernel time:','line_number':131,'multiline':False]['text':' For sent messages, this is the time at which the first bit was sent.','line_number':132,'multiline':False]['text':' For received messages, this is the time at which the last bit was','line_number':133,'multiline':False]['text':' received.','line_number':134,'multiline':False]['text':' Every message has an identifier, that must be different from all the','line_number':139,'multiline':False]['text':' network messages in this span.','line_number':140,'multiline':False]['text':' This is very important when the request/response are streamed.','line_number':141,'multiline':False]['text':' Number of bytes send/receive.','line_number':144,'multiline':False]['text':' The local machine absolute timestamp when this event happened.','line_number':148,'multiline':False]['text':' Optional field for user supplied <string, LabelValue> map','line_number':152,'multiline':False]['text':' Optional field that can be used only for network events.','line_number':155,'multiline':False]['text':' Link one span with another which may be in a different Trace. Used (for','line_number':160,'multiline':False]['text':' example) in batching operations, where a single batch handler processes','line_number':161,'multiline':False]['text':' multiple requests from different traces.','line_number':162,'multiline':False]['text':' The type of the link.','line_number':164,'multiline':False]['text':' The trace and span identifier of the linked span.','line_number':173,'multiline':False]['text':' Identifier for the span. Must be a 64-bit integer other than 0 and','line_number':181,'multiline':False]['text':' unique within a trace.','line_number':182,'multiline':False]['text':' Name of the span. The span name is sanitized and displayed in the','line_number':185,'multiline':False]['text':' Stackdriver Trace tool in the {% dynamic print site_values.console_name %}.','line_number':186,'multiline':False]['text':' The name may be a method name or some other per-call site name.','line_number':187,'multiline':False]['text':' For the same executable and the same call point, a best practice is','line_number':188,'multiline':False]['text':' to use a consistent name, which makes it easier to correlate','line_number':189,'multiline':False]['text':' cross-trace spans.','line_number':190,'multiline':False]['text':' ID of parent span. 0 or missing if this is a root span.','line_number':193,'multiline':False]['text':' Local machine clock in nanoseconds from the UNIX epoch,','line_number':196,'multiline':False]['text':' at which span execution started.','line_number':197,'multiline':False]['text':' On the server side these are the times when the server application','line_number':198,'multiline':False]['text':' handler starts running.','line_number':199,'multiline':False]['text':' Local machine clock in nanoseconds from the UNIX epoch,','line_number':202,'multiline':False]['text':' at which span execution ended.','line_number':203,'multiline':False]['text':' On the server side these are the times when the server application','line_number':204,'multiline':False]['text':' handler finishes running.','line_number':205,'multiline':False]['text':' Properties of a span. Labels at the span level.','line_number':208,'multiline':False]['text':' E.g.','line_number':209,'multiline':False]['text':' "/instance_id": "my-instance"','line_number':210,'multiline':False]['text':' "/zone": "us-central1-a"','line_number':211,'multiline':False]['text':' "/grpc/peer_address": "ip:port" (dns, etc.)','line_number':212,'multiline':False]['text':' "/grpc/deadline": "Duration"','line_number':213,'multiline':False]['text':' "/http/user_agent"','line_number':214,'multiline':False]['text':' "/http/request_bytes": 300','line_number':215,'multiline':False]['text':' "/http/response_bytes": 1200','line_number':216,'multiline':False]['text':' "/http/url": google.com/apis','line_number':217,'multiline':False]['text':' "/pid"','line_number':218,'multiline':False]['text':' "abc.com/mylabel": "my label value"','line_number':219,'multiline':False]['text':' Stack trace captured at the start of the span. This is optional.','line_number':222,'multiline':False]['text':' A collection of time-stamped events.','line_number':225,'multiline':False]['text':' A collection of links.','line_number':228,'multiline':False]['text':' The final status of the Span. This is optional.','line_number':231,'multiline':False]['text':' True if this Span has a remote parent (is an RPC server Span).','line_number':234,'multiline':False]['text':' A trace describes how long it takes for an application to perform some','line_number':238,'multiline':False]['text':' operations. It consists of a tree of spans, each of which contains details','line_number':239,'multiline':False]['text':' about an operation with time information and operation details.','line_number':240,'multiline':False]['text':' Globally unique identifier for the trace. Common to all the spans.','line_number':242,'multiline':False]['text':' Collection of spans in the trace. The root span has parent_id == 0.','line_number':245,'multiline':False]