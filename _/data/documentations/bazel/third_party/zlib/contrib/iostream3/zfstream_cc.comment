['text':'
 * A C++ I/O streams interface to the zlib gz* functions
 *
 * by Ludwig Schwardt <schwardt@sun.ac.za>
 * original version by Kevin Ruland <kevin@rodin.wustl.edu>
 *
 * This version is standard-compliant and compatible with gcc 3.x.
 ','line_number':1,'multiline':True]['text':' for strcpy, strcat, strlen (mode strings)','line_number':11,'multiline':False]['text':' for BUFSIZ','line_number':12,'multiline':False]['text':' Internal buffer sizes (default and "unbuffered" versions)','line_number':14,'multiline':False]['text':'***************************************************************************','line_number':18,'multiline':True]['text':' Default constructor','line_number':20,'multiline':False]['text':' No buffers to start with','line_number':25,'multiline':False]['text':' Destructor','line_number':29,'multiline':False]['text':' Sync output buffer and close only if responsible for file','line_number':32,'multiline':False]['text':' (i.e. attached streams should be left open at this stage)','line_number':33,'multiline':False]['text':' Make sure internal buffer is deallocated','line_number':37,'multiline':False]['text':' Set compression level and strategy','line_number':41,'multiline':False]['text':' Open gzipped file','line_number':49,'multiline':False]['text':' Fail if file already open','line_number':54,'multiline':False]['text':' Don't support simultaneous read/write access (yet)','line_number':57,'multiline':False]['text':' Build mode string for gzopen and check it [27.8.1.3.2]','line_number':61,'multiline':False]['text':' Attempt to open file','line_number':66,'multiline':False]['text':' On success, allocate internal buffer and set flags','line_number':70,'multiline':False]['text':' Attach to gzipped file','line_number':77,'multiline':False]['text':' Fail if file already open','line_number':82,'multiline':False]['text':' Don't support simultaneous read/write access (yet)','line_number':85,'multiline':False]['text':' Build mode string for gzdopen and check it [27.8.1.3.2]','line_number':89,'multiline':False]['text':' Attempt to attach to file','line_number':94,'multiline':False]['text':' On success, allocate internal buffer and set flags','line_number':98,'multiline':False]['text':' Close gzipped file','line_number':105,'multiline':False]['text':' Fail immediately if no file is open','line_number':109,'multiline':False]['text':' Assume success','line_number':112,'multiline':False]['text':' Attempt to sync and close gzipped file','line_number':114,'multiline':False]['text':' File is now gone anyway (postcondition [27.8.1.3.8])','line_number':119,'multiline':False]['text':' Destroy internal buffer if it exists','line_number':122,'multiline':False]['text':' * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * ','line_number':127,'multiline':True]['text':' Convert int open mode to mode string','line_number':129,'multiline':False]['text':' Check for valid flag combinations - see [27.8.1.3.2] (Table 92)','line_number':140,'multiline':False]['text':' Original zfstream hardcoded the compression level to maximum here...','line_number':141,'multiline':False]['text':' Double the time for less than 1% size improvement seems','line_number':142,'multiline':False]['text':' excessive though - keeping it at the default level','line_number':143,'multiline':False]['text':' To change back, just append "9" to the next three mode strings','line_number':144,'multiline':False]['text':' No read/write mode yet','line_number':153,'multiline':False]['text':'  if (testi && testo && !testt && !testa)','line_number':154,'multiline':False]['text':'    strcpy(c_mode, "r+");','line_number':155,'multiline':False]['text':'  if (testi && testo && testt && !testa)','line_number':156,'multiline':False]['text':'    strcpy(c_mode, "w+");','line_number':157,'multiline':False]['text':' Mode string should be empty for invalid combination of flags','line_number':159,'multiline':False]['text':' Determine number of characters in internal get buffer','line_number':167,'multiline':False]['text':' Calls to underflow will fail if file not opened for reading','line_number':171,'multiline':False]['text':' Make sure get area is in use','line_number':174,'multiline':False]['text':' Fill get area from gzipped file','line_number':181,'multiline':False]['text':' If something is left in the get area by chance, return it','line_number':185,'multiline':False]['text':' (this shouldn't normally happen, as underflow is only supposed','line_number':186,'multiline':False]['text':' to be called when gptr >= egptr, but it serves as error check)','line_number':187,'multiline':False]['text':' If the file hasn't been opened for reading, produce error','line_number':191,'multiline':False]['text':' Attempt to fill internal buffer from gzipped file','line_number':195,'multiline':False]['text':' (buffer must be guaranteed to exist...)','line_number':196,'multiline':False]['text':' Indicates error or EOF','line_number':198,'multiline':False]['text':' Reset get area','line_number':201,'multiline':False]['text':' Make all bytes read from file available as get area','line_number':205,'multiline':False]['text':' Return next character in get area','line_number':208,'multiline':False]['text':' Write put area to gzipped file','line_number':212,'multiline':False]['text':' Determine whether put area is in use','line_number':216,'multiline':False]['text':' Double-check pointer range','line_number':219,'multiline':False]['text':' Add extra character to buffer if not EOF','line_number':222,'multiline':False]['text':' Number of characters to write to file','line_number':228,'multiline':False]['text':' Overflow doesn't fail if nothing is to be written','line_number':230,'multiline':False]['text':' If the file hasn't been opened for writing, produce error','line_number':233,'multiline':False]['text':' If gzipped file won't accept all bytes written to it, fail','line_number':236,'multiline':False]['text':' Reset next pointer to point to pbase on success','line_number':239,'multiline':False]['text':' Write extra character to file if not EOF','line_number':243,'multiline':False]['text':' If the file hasn't been opened for writing, produce error','line_number':246,'multiline':False]['text':' Impromptu char buffer (allows "unbuffered" output)','line_number':249,'multiline':False]['text':' If gzipped file won't accept this character, fail','line_number':251,'multiline':False]['text':' If you got here, you have succeeded (even if c was EOF)','line_number':256,'multiline':False]['text':' The return value should therefore be non-EOF','line_number':257,'multiline':False]['text':' Assign new buffer','line_number':264,'multiline':False]['text':' First make sure stuff is sync'ed, for safety','line_number':269,'multiline':False]['text':' If buffering is turned off on purpose via setbuf(0,0), still allocate one...','line_number':272,'multiline':False]['text':' "Unbuffered" only really refers to put [27.8.1.4.10], while get needs at','line_number':273,'multiline':False]['text':' least a buffer of size 1 (very inefficient though, therefore make it bigger?)','line_number':274,'multiline':False]['text':' This follows from [27.5.2.4.3]/12 (gptr needs to point at something, it seems)','line_number':275,'multiline':False]['text':' Replace existing buffer (if any) with small internal buffer','line_number':278,'multiline':False]['text':' Replace existing buffer (if any) with external buffer','line_number':287,'multiline':False]['text':' Write put area to gzipped file (i.e. ensures that put area is empty)','line_number':297,'multiline':False]['text':' * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * ','line_number':304,'multiline':True]['text':' Allocate internal buffer','line_number':306,'multiline':False]['text':' If internal buffer required, allocate one','line_number':310,'multiline':False]['text':' Check for buffered vs. "unbuffered"','line_number':313,'multiline':False]['text':' Allocate internal buffer','line_number':316,'multiline':False]['text':' Get area starts empty and will be expanded by underflow as need arises','line_number':318,'multiline':False]['text':' Setup entire internal buffer as put area.','line_number':320,'multiline':False]['text':' The one-past-end pointer actually points to the last element of the buffer,','line_number':321,'multiline':False]['text':' so that overflow(c) can safely add the extra character c to the sequence.','line_number':322,'multiline':False]['text':' These pointers remain in place for the duration of the buffer','line_number':323,'multiline':False]['text':' Even in "unbuffered" case, (small?) get buffer is still required','line_number':328,'multiline':False]['text':' "Unbuffered" means no put buffer','line_number':332,'multiline':False]['text':' If buffer already allocated, reset buffer pointers just to make sure no','line_number':338,'multiline':False]['text':' stale chars are lying around','line_number':339,'multiline':False]['text':' Destroy internal buffer','line_number':345,'multiline':False]['text':' If internal buffer exists, deallocate it','line_number':349,'multiline':False]['text':' Preserve unbuffered status by zeroing size','line_number':352,'multiline':False]['text':' Reset buffer pointers to initial state if external buffer exists','line_number':362,'multiline':False]['text':'***************************************************************************','line_number':371,'multiline':True]['text':' Default constructor initializes stream buffer','line_number':373,'multiline':False]['text':' Initialize stream buffer and open file','line_number':378,'multiline':False]['text':' Initialize stream buffer and attach to file','line_number':387,'multiline':False]['text':' Open file and go into fail() state if unsuccessful','line_number':396,'multiline':False]['text':' Attach to file and go into fail() state if unsuccessful','line_number':407,'multiline':False]['text':' Close file','line_number':418,'multiline':False]['text':'***************************************************************************','line_number':426,'multiline':True]['text':' Default constructor initializes stream buffer','line_number':428,'multiline':False]['text':' Initialize stream buffer and open file','line_number':433,'multiline':False]['text':' Initialize stream buffer and attach to file','line_number':442,'multiline':False]['text':' Open file and go into fail() state if unsuccessful','line_number':451,'multiline':False]['text':' Attach to file and go into fail() state if unsuccessful','line_number':462,'multiline':False]['text':' Close file','line_number':473,'multiline':False]