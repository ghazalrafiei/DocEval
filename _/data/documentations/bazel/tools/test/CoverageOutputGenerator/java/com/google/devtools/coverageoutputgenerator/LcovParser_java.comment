['text':' Copyright 2018 The Bazel Authors. All rights reserved.','line_number':1,'multiline':False]['text':'','line_number':2,'multiline':False]['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':3,'multiline':False]['text':' you may not use this file except in compliance with the License.','line_number':4,'multiline':False]['text':' You may obtain a copy of the License at','line_number':5,'multiline':False]['text':'','line_number':6,'multiline':False]['text':'    http://www.apache.org/licenses/LICENSE-2.0','line_number':7,'multiline':False]['text':'','line_number':8,'multiline':False]['text':' Unless required by applicable law or agreed to in writing, software','line_number':9,'multiline':False]['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':10,'multiline':False]['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':11,'multiline':False]['text':' See the License for the specific language governing permissions and','line_number':12,'multiline':False]['text':' limitations under the License.','line_number':13,'multiline':False]['text':'*
 * A parser for the lcov tracefile format used by geninfo. See <a
 * href="http://ltp.sourceforge.net/coverage/lcov/geninfo.1.php">lcov documentation</a>
 ','line_number':43,'multiline':True]['text':'*
   * Reads the tracefile line by line and creates a SourceFileCoverage object for each section of
   * the file between a SF:<source file> line and an end_of_record line.
   *
   * @return a list of each source file path found in the tracefile
   ','line_number':61,'multiline':True]['text':'*
   * Merges {@code currentSourceFileCoverage} into {@code allSourceFilesCoverageData} and resets
   * {@code currentSourceFileCoverage} to null.
   ','line_number':80,'multiline':True]['text':'*
   * Reads the line and redirects the parsing to the corresponding {@code parseXLine} method. Every
   * {@code parseXLine} methods fills in data to {@code currentSourceFileCoverage} accordingly.
   ','line_number':89,'multiline':True]['text':' currentSourceFileCoverage should be null only before calling an SF line, otherwise','line_number':97,'multiline':False]['text':' the object should have been created in parseSFLine. If currentSourceFileCoverage is null','line_number':98,'multiline':False]['text':' here it means the parser arrived in an invalid state.','line_number':99,'multiline':False]['text':' SF:<path to source file name>','line_number':144,'multiline':False]['text':' FN:<line number of function start>,<function name>','line_number':159,'multiline':False]['text':' FNDA:<execution count>,<function name>','line_number':178,'multiline':False]['text':' FNF:<number of functions found>','line_number':197,'multiline':False]['text':' FNH:<number of function hit>','line_number':215,'multiline':False]['text':' BA:<line number>,<taken>','line_number':233,'multiline':False]['text':' BRDA:<line number>,<block number>,<branch number>,<taken>','line_number':267,'multiline':False]['text':' BRF:<number of branches found>','line_number':305,'multiline':False]['text':' BRH:<number of branches hit>','line_number':323,'multiline':False]['text':' DA:<line number>,<execution count>,[,<checksum>]','line_number':341,'multiline':False]['text':' LH:<nr of lines with non-zero exec count>','line_number':371,'multiline':False]['text':' LF:<number of instrumented lines>','line_number':388,'multiline':False]