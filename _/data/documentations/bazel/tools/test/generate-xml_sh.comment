['text':'!/usr/bin/env bash','line_number':1,'multiline':False]['text':' Copyright 2018 The Bazel Authors. All rights reserved.','line_number':3,'multiline':False]['text':'','line_number':4,'multiline':False]['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':5,'multiline':False]['text':' you may not use this file except in compliance with the License.','line_number':6,'multiline':False]['text':' You may obtain a copy of the License at','line_number':7,'multiline':False]['text':'','line_number':8,'multiline':False]['text':'    http://www.apache.org/licenses/LICENSE-2.0','line_number':9,'multiline':False]['text':'','line_number':10,'multiline':False]['text':' Unless required by applicable law or agreed to in writing, software','line_number':11,'multiline':False]['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':12,'multiline':False]['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':13,'multiline':False]['text':' See the License for the specific language governing permissions and','line_number':14,'multiline':False]['text':' limitations under the License.','line_number':15,'multiline':False]['text':' Keep this in sync with test-setup.sh!','line_number':24,'multiline':False]['text':' Replace invalid XML characters and invalid sequence in CDATA','line_number':26,'multiline':False]['text':' We do this in four steps:','line_number':27,'multiline':False]['text':'','line_number':28,'multiline':False]['text':' 1. Add a single whitespace character to the end of every line','line_number':29,'multiline':False]['text':'','line_number':30,'multiline':False]['text':' 2. Replace every sequence of legal characters followed by an illegal','line_number':31,'multiline':False]['text':'    character *or* followed by a legal character at the end of the line with','line_number':32,'multiline':False]['text':'    the same sequence of legal characters followed by a question mark','line_number':33,'multiline':False]['text':'    character (replacing the illegal or last character). Since this will','line_number':34,'multiline':False]['text':'    always replace the last character in a line with a question mark, we','line_number':35,'multiline':False]['text':'    make sure to append a whitespace in step #1.','line_number':36,'multiline':False]['text':'','line_number':37,'multiline':False]['text':'    A character is legal if it is a valid UTF-8 character that is allowed in','line_number':38,'multiline':False]['text':'    an XML file (this excludes a few control codes, but otherwise allows','line_number':39,'multiline':False]['text':'    most UTF-8 characters).','line_number':40,'multiline':False]['text':'','line_number':41,'multiline':False]['text':'    We can't use sed in UTF-8 mode, because it would fail on the first','line_number':42,'multiline':False]['text':'    illegal character. Instead, we have to match legal characters by their','line_number':43,'multiline':False]['text':'    8-bit binary sequences, and also switch sed to an 8-bit mode.','line_number':44,'multiline':False]['text':'','line_number':45,'multiline':False]['text':'    The legal UTF codepoint ranges are 9,a,d,20-d7ff,e000-fffd,10000-10ffff,','line_number':46,'multiline':False]['text':'    which results in the following 8-bit binary UTF-8 matchers:','line_number':47,'multiline':False]['text':'       [\x9\xa\xd\x20-\x7f]                         <--- (9,A,D,20-7F)','line_number':48,'multiline':False]['text':'       [\xc0-\xdf][\x80-\xbf]                       <--- (0080-07FF)','line_number':49,'multiline':False]['text':'       [\xe0-\xec][\x80-\xbf][\x80-\xbf]            <--- (0800-CFFF)','line_number':50,'multiline':False]['text':'       [\xed][\x80-\x9f][\x80-\xbf]                 <--- (D000-D7FF)','line_number':51,'multiline':False]['text':'       [\xee][\x80-\xbf][\x80-\xbf]                 <--- (E000-EFFF)','line_number':52,'multiline':False]['text':'       [\xef][\x80-\xbe][\x80-\xbf]                 <--- (F000-FFEF)','line_number':53,'multiline':False]['text':'       [\xef][\xbf][\x80-\xbd]                      <--- (FFF0-FFFD)','line_number':54,'multiline':False]['text':'       [\xf0-\xf7][\x80-\xbf][\x80-\xbf][\x80-\xbf] <--- (010000-10FFFF)','line_number':55,'multiline':False]['text':'','line_number':56,'multiline':False]['text':'    We omit \xa and \xd below since sed already splits the input into lines.','line_number':57,'multiline':False]['text':'','line_number':58,'multiline':False]['text':' 3. Remove the last character in the line, which we expect to be a','line_number':59,'multiline':False]['text':'    question mark (that was originally added as a whitespace in step #1).','line_number':60,'multiline':False]['text':'','line_number':61,'multiline':False]['text':' 4. Replace the string ']]>' with ']]>]]<![CDATA[>' to prevent escaping the','line_number':62,'multiline':False]['text':'    surrounding CDATA block.','line_number':63,'multiline':False]['text':'','line_number':64,'multiline':False]['text':' Sed supports the necessary operations as of version 4.4, but not in all','line_number':65,'multiline':False]['text':' earlier versions. Specifically, we have found that sed 4.1.5 is not 8-bit','line_number':66,'multiline':False]['text':' safe even when set to an 8-bit locale.','line_number':67,'multiline':False]['text':'','line_number':68,'multiline':False]['text':' OSX sed does not support escape sequences (\xhh), use echo as workaround.','line_number':69,'multiline':False]['text':'','line_number':70,'multiline':False]['text':' Alternatives considered:','line_number':71,'multiline':False]['text':' Perl - We originally used Perl, but wanted to avoid the dependency.','line_number':72,'multiline':False]['text':'        Recent versions of Perl now error on invalid utf-8 characters.','line_number':73,'multiline':False]['text':' tr   - tr only replaces single-byte sequences, so cannot handle utf-8.','line_number':74,'multiline':False]['text':' For testing, we allow calling this script with "-", in which case we only','line_number':95,'multiline':False]['text':' perform the encoding step. We intentionally ignore the rest of the parameters.','line_number':96,'multiline':False]['text':' Ensure that test shards have unique names in the xml output.','line_number':111,'multiline':False]