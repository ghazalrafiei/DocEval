['text':' Copyright 2016 The Bazel Authors. All rights reserved.','line_number':1,'multiline':False]['text':'','line_number':2,'multiline':False]['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':3,'multiline':False]['text':' you may not use this file except in compliance with the License.','line_number':4,'multiline':False]['text':' You may obtain a copy of the License at','line_number':5,'multiline':False]['text':'','line_number':6,'multiline':False]['text':' http://www.apache.org/licenses/LICENSE-2.0','line_number':7,'multiline':False]['text':'','line_number':8,'multiline':False]['text':' Unless required by applicable law or agreed to in writing, software','line_number':9,'multiline':False]['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':10,'multiline':False]['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':11,'multiline':False]['text':' See the License for the specific language governing permissions and','line_number':12,'multiline':False]['text':' limitations under the License.','line_number':13,'multiline':False]['text':' A structure to pass around the FSEvents info and the list of paths.','line_number':25,'multiline':False]['text':' FSEvents run loop (thread)','line_number':27,'multiline':False]['text':' FSEvents stream reference (reference to the listened stream)','line_number':30,'multiline':False]['text':' If true, fsevents dropped events so we don't know what changed exactly.','line_number':33,'multiline':False]['text':' List of paths that have been changed since last polling.','line_number':36,'multiline':False]['text':' Mutex to protect concurrent accesses to paths and everything_changed.','line_number':39,'multiline':False]['text':' Callback called when an event is reported by the FSEvents API','line_number':49,'multiline':False]['text':' Either we lost events or they were coalesced. Assume everything changed','line_number':62,'multiline':False]['text':' and give up, which matches the fsevents documentation in that the','line_number':63,'multiline':False]['text':' caller is expected to rescan the directory contents on its own.','line_number':64,'multiline':False]['text':' A directory was renamed. When this happens, fsevents may or may not','line_number':69,'multiline':False]['text':' give us individual events about which files changed underneath, which','line_number':70,'multiline':False]['text':' means we have to rescan the directories in order to know what changed.','line_number':71,'multiline':False]['text':'','line_number':72,'multiline':False]['text':' The problem is that we cannot rescan the source of the move to discover','line_number':73,'multiline':False]['text':' which files "disappeared"... so we have no choice but to rescan','line_number':74,'multiline':False]['text':' everything. Well, in theory, we could try to track directory inodes and','line_number':75,'multiline':False]['text':' using those to guess which files within them moved... but that'd be way','line_number':76,'multiline':False]['text':' too much complexity for this rather-uncommon use case.','line_number':77,'multiline':False]['text':' Create a FSEventStreamContext to pass around (env, fsEventsDiffAwareness)','line_number':91,'multiline':False]['text':' Create an CFArrayRef of CFStringRef from the Java array of String','line_number':101,'multiline':False]['text':' Save the info pointer to FSEventsDiffAwareness#nativePointer','line_number':119,'multiline':False]['text':' namespace','line_number':135,'multiline':False]