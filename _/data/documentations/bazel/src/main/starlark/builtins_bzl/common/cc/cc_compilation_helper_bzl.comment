['text':' Copyright 2023 The Bazel Authors. All rights reserved.','line_number':1,'multiline':False]['text':'','line_number':2,'multiline':False]['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':3,'multiline':False]['text':' you may not use this file except in compliance with the License.','line_number':4,'multiline':False]['text':' You may obtain a copy of the License at','line_number':5,'multiline':False]['text':'','line_number':6,'multiline':False]['text':'    http://www.apache.org/licenses/LICENSE-2.0','line_number':7,'multiline':False]['text':'','line_number':8,'multiline':False]['text':' Unless required by applicable law or agreed to in writing, software','line_number':9,'multiline':False]['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':10,'multiline':False]['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':11,'multiline':False]['text':' See the License for the specific language governing permissions and','line_number':12,'multiline':False]['text':' limitations under the License.','line_number':13,'multiline':False]['text':' Very crude way of determining driver length, but the best one at the same time.','line_number':70,'multiline':False]['text':' Unix','line_number':72,'multiline':False]['text':' Windows','line_number':74,'multiline':False]['text':' paths.normalize differs from Java normalize call in a way','line_number':78,'multiline':False]['text':' that if string to be normalized is "." Starlark version returns ".",','line_number':79,'multiline':False]['text':' while Java version returns an empty string "".','line_number':80,'multiline':False]['text':' Because of this if label.package is an empty string and strip_prefix','line_number':81,'multiline':False]['text':' is "." paths.get_relative("", ".") returns "." instead of "".','line_number':82,'multiline':False]['text':' TODO(bazel-team): Here we use the implementationDeps to build the dependents of this rule's','line_number':152,'multiline':False]['text':' module map. This is technically incorrect for the following reasons:','line_number':153,'multiline':False]['text':'  - Clang will not issue a layering_check warning if headers from implementation deps are','line_number':154,'multiline':False]['text':'    included from headers of this library.','line_number':155,'multiline':False]['text':'  - If we were to ever build with modules, Clang might store this dependency inside the .pcm','line_number':156,'multiline':False]['text':' It should be evaluated whether this is ok.  If this turned into a problem at some','line_number':157,'multiline':False]['text':' point, we could probably just declare two different modules with different use-declarations','line_number':158,'multiline':False]['text':' in the module map file.','line_number':159,'multiline':False]['text':' DO NOT use ctx, this is a temporary placeholder','line_number':175,'multiline':False]['text':' to avoid adding a new field to CcCompilationHelper.','line_number':176,'multiline':False]['text':' Once compile is in Starlark we can directly pass in actions here.','line_number':177,'multiline':False]['text':' Single usage of ctx.','line_number':209,'multiline':False]['text':' Setup the include path; local include directories come before those inherited from deps or','line_number':212,'multiline':False]['text':' from the toolchain; in case of aliasing (same include file found on different entries),','line_number':213,'multiline':False]['text':' prefer the local include rather than the inherited one.','line_number':214,'multiline':False]['text':' Add in the roots for well-formed include names for source files and','line_number':215,'multiline':False]['text':' generated files. It is important that the execRoot (EMPTY_FRAGMENT) comes','line_number':216,'multiline':False]['text':' before the genfilesFragment to preferably pick up source files. Otherwise','line_number':217,'multiline':False]['text':' we might pick up stale generated files.','line_number':218,'multiline':False]['text':' Do not add system_include_dirs and include_dirs directly to compilation context.','line_number':233,'multiline':False]['text':' Populate the map only when code coverage collection is enabled, to report the actual','line_number':261,'multiline':False]['text':' source file name in the coverage output file.','line_number':262,'multiline':False]['text':' There are different modes for module compilation:','line_number':302,'multiline':False]['text':' 1. We create the module map and compile the module so that libraries depending on us can','line_number':303,'multiline':False]['text':'    use the resulting module artifacts in their compilation (compiled is true).','line_number':304,'multiline':False]['text':' 2. We create the module map so that libraries depending on us will include the headers','line_number':305,'multiline':False]['text':'    textually (compiled is false).','line_number':306,'multiline':False]['text':' Do not set module map related attributes.','line_number':380,'multiline':False]