['text':' Copyright 2022 The Bazel Authors. All rights reserved.','line_number':1,'multiline':False]['text':'','line_number':2,'multiline':False]['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':3,'multiline':False]['text':' you may not use this file except in compliance with the License.','line_number':4,'multiline':False]['text':' You may obtain a copy of the License at','line_number':5,'multiline':False]['text':'','line_number':6,'multiline':False]['text':'    http://www.apache.org/licenses/LICENSE-2.0','line_number':7,'multiline':False]['text':'','line_number':8,'multiline':False]['text':' Unless required by applicable law or agreed to in writing, software','line_number':9,'multiline':False]['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':10,'multiline':False]['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':11,'multiline':False]['text':' See the License for the specific language governing permissions and','line_number':12,'multiline':False]['text':' limitations under the License.','line_number':13,'multiline':False]['text':' TODO: This appears to be vestigial. It's only added because','line_number':75,'multiline':False]['text':' GraphlessQueryTest.testLabelsOperator relies on it to test for','line_number':76,'multiline':False]['text':' query behavior of implicit dependencies.','line_number':77,'multiline':False]['text':' keep-sorted start','line_number':110,'multiline':False]['text':' keep-sorted end','line_number':128,'multiline':False]['text':' @unused','line_number':132,'multiline':False]['text':' @unused','line_number':136,'multiline':False]['text':' @unused','line_number':140,'multiline':False]['text':' NOTE: Undocumented API; private to builtins','line_number':144,'multiline':False]['text':' @unused','line_number':164,'multiline':False]['text':' TODO: This should use the configuration instead of the Bazel OS.','line_number':172,'multiline':False]['text':' This is just legacy behavior.','line_number':173,'multiline':False]['text':' NOTE: --build_python_zip defauls to true on Windows','line_number':202,'multiline':False]['text':' When --build_python_zip is enabled, then the zip file becomes','line_number':205,'multiline':False]['text':' one of the default outputs.','line_number':206,'multiline':False]['text':' The logic here is a bit convoluted. Essentially, there are 3 types of','line_number':210,'multiline':False]['text':' executables produced:','line_number':211,'multiline':False]['text':' 1. (non-Windows) A bootstrap template based program.','line_number':212,'multiline':False]['text':' 2. (non-Windows) A self-executable zip file of a bootstrap template based program.','line_number':213,'multiline':False]['text':' 3. (Windows) A native Windows executable that finds and launches','line_number':214,'multiline':False]['text':'    the actual underlying Bazel program (one of the above). Note that','line_number':215,'multiline':False]['text':'    it implicitly assumes one of the above is located next to it, and','line_number':216,'multiline':False]['text':'    that --build_python_zip defaults to true for Windows.','line_number':217,'multiline':False]['text':' On Windows, the main executable has an "exe" extension, so','line_number':234,'multiline':False]['text':' here we re-use the un-extensioned name for the bootstrap output.','line_number':235,'multiline':False]['text':' The launcher looks for the non-zip executable next to','line_number':238,'multiline':False]['text':' itself, so add it to the default outputs.','line_number':239,'multiline':False]['text':' Otherwise, this should be the Windows case of launcher + zip.','line_number':255,'multiline':False]['text':' Double check this just to make sure.','line_number':256,'multiline':False]['text':' Needed to inherit PATH when using non-MSVC compilers like MinGW','line_number':343,'multiline':False]['text':' Don't include the original executable because it isn't used by the','line_number':394,'multiline':False]['text':' zip file, so no need to build it for the action.','line_number':395,'multiline':False]['text':' Don't include the zipfile itself because it's an output.','line_number':396,'multiline':False]['text':' NOTE: External runfiles (artifacts in other repos) will have a leading','line_number':418,'multiline':False]['text':' path component of "../" so that they refer outside the main workspace','line_number':419,'multiline':False]['text':' directory and into the runfiles root. By normalizing, we simplify e.g.','line_number':420,'multiline':False]['text':' "workspace/../foo/bar" to simply "foo/bar".','line_number':421,'multiline':False]['text':' Though the rules require the CcToolchain, it isn't actually used.','line_number':446,'multiline':False]['text':' NOTE: External runfiles (artifacts in other repos) will have a','line_number':460,'multiline':False]['text':' leading path component of "../" so that they refer outside the','line_number':461,'multiline':False]['text':' main workspace directory and into the runfiles root. By','line_number':462,'multiline':False]['text':' normalizing, we simplify e.g. "workspace/../foo/bar" to simply','line_number':463,'multiline':False]['text':' "foo/bar"','line_number':464,'multiline':False]['text':' @unused','line_number':475,'multiline':False]['text':' @unused','line_number':479,'multiline':False]['text':' @unused','line_number':483,'multiline':False]