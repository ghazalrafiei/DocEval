['text':' Copyright 2014 The Bazel Authors. All rights reserved.','line_number':1,'multiline':False]['text':'','line_number':2,'multiline':False]['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':3,'multiline':False]['text':' you may not use this file except in compliance with the License.','line_number':4,'multiline':False]['text':' You may obtain a copy of the License at','line_number':5,'multiline':False]['text':'','line_number':6,'multiline':False]['text':'    http://www.apache.org/licenses/LICENSE-2.0','line_number':7,'multiline':False]['text':'','line_number':8,'multiline':False]['text':' Unless required by applicable law or agreed to in writing, software','line_number':9,'multiline':False]['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':10,'multiline':False]['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':11,'multiline':False]['text':' See the License for the specific language governing permissions and','line_number':12,'multiline':False]['text':' limitations under the License.','line_number':13,'multiline':False]['text':' Dumps embedded binaries that were extracted from the Bazel zip to disk.','line_number':33,'multiline':False]['text':' The platform-specific implementations may use multi-threaded I/O.','line_number':34,'multiline':False]['text':' Requests to write the `data` of `size` bytes to disk under `path`.','line_number':37,'multiline':False]['text':' The actual writing may happen asynchronously.','line_number':38,'multiline':False]['text':' `path` must be an absolute path. All of its parent directories will be','line_number':39,'multiline':False]['text':' created.','line_number':40,'multiline':False]['text':' The caller retains ownership of `data` and may release it immediately after','line_number':41,'multiline':False]['text':' this method returns.','line_number':42,'multiline':False]['text':' Callers may call this method repeatedly, but only from the same thread','line_number':43,'multiline':False]['text':' (this method is not thread-safe).','line_number':44,'multiline':False]['text':' If writing fails, this method sets a flag in the `Dumper`, and `Finish`','line_number':45,'multiline':False]['text':' will return false. Subsequent `Dump` calls will have no effect.','line_number':46,'multiline':False]['text':' Finishes dumping data.','line_number':50,'multiline':False]['text':'','line_number':51,'multiline':False]['text':' This method may block in case the Dumper is asynchronous and some async','line_number':52,'multiline':False]['text':' writes are still in progress.','line_number':53,'multiline':False]['text':' Subsequent `Dump` calls after this method have no effect.','line_number':54,'multiline':False]['text':'','line_number':55,'multiline':False]['text':' Returns true if there were no errors in any of the `Dump` calls.','line_number':56,'multiline':False]['text':' Returns false if any of the `Dump` calls failed, and if `error` is not','line_number':57,'multiline':False]['text':' null then puts an error message in `error`.','line_number':58,'multiline':False]['text':' Destructor. Subclasses should make sure it calls `Finish(nullptr)`.','line_number':61,'multiline':False]['text':' Creates a new Dumper. The caller takes ownership of the returned object.','line_number':68,'multiline':False]['text':' Returns nullptr upon failure and puts an error message in `error` (if `error`','line_number':69,'multiline':False]['text':' is not nullptr).','line_number':70,'multiline':False]['text':' namespace embedded_binaries','line_number':73,'multiline':False]['text':' A signal-safe version of fprintf(stderr, ...).','line_number':105,'multiline':False]['text':' Locates a file named `executable` in the PATH. Returns a path to the first','line_number':110,'multiline':False]['text':' matching file, or an empty string if `executable` is not found on the PATH.','line_number':111,'multiline':False]['text':' Gets an absolute path to the binary being executed that is guaranteed to be','line_number':114,'multiline':False]['text':' readable.','line_number':115,'multiline':False]['text':' Returns the directory Bazel can use to store output.','line_number':118,'multiline':False]['text':' Returns the current user's home directory, or the empty string if unknown.','line_number':121,'multiline':False]['text':' On Linux/macOS, this is $HOME. On Windows this is %USERPROFILE%.','line_number':122,'multiline':False]['text':' Warn about dubious filesystem types, such as NFS, case-insensitive (?).','line_number':125,'multiline':False]['text':' Returns elapsed milliseconds since some unspecified start of time.','line_number':128,'multiline':False]['text':' The results are monotonic, i.e. subsequent calls to this method never return','line_number':129,'multiline':False]['text':' a value less than a previous result.','line_number':130,'multiline':False]['text':' Set cpu and IO scheduling properties. Note that this can take ~50ms','line_number':133,'multiline':False]['text':' on Linux, so it should only be called when necessary.','line_number':134,'multiline':False]['text':' Returns the current working directory of the specified process, or nullptr','line_number':137,'multiline':False]['text':' if the directory is unknown.','line_number':138,'multiline':False]['text':' Returns the absolute path to the user's local JDK install, to be used as','line_number':143,'multiline':False]['text':' the default target javabase and as a fall-back host_javabase. This is not','line_number':144,'multiline':False]['text':' the embedded JDK.','line_number':145,'multiline':False]['text':' Return the path to the JVM binary relative to a javabase, e.g. "bin/java".','line_number':148,'multiline':False]['text':' Start the Bazel server's JVM in the current directory.','line_number':151,'multiline':False]['text':'','line_number':152,'multiline':False]['text':' Note on Windows: 'server_jvm_args' is NOT expected to be escaped for','line_number':153,'multiline':False]['text':' CreateProcessW.','line_number':154,'multiline':False]['text':'','line_number':155,'multiline':False]['text':' This function does not return on success.','line_number':156,'multiline':False]['text':' Execute the "bazel run" request in the current directory.','line_number':161,'multiline':False]['text':'','line_number':162,'multiline':False]['text':' Note on Windows: 'run_request_args' IS expected to be escaped for','line_number':163,'multiline':False]['text':' CreateProcessW.','line_number':164,'multiline':False]['text':'','line_number':165,'multiline':False]['text':' This function does not return on success.','line_number':166,'multiline':False]['text':' Starts a daemon process with its standard output and standard error','line_number':178,'multiline':False]['text':' redirected (and conditionally appended) to the file "daemon_output". Sets','line_number':179,'multiline':False]['text':' server_startup to an object that can be used to query if the server is','line_number':180,'multiline':False]['text':' still alive. The PID of the daemon started is written into server_dir,','line_number':181,'multiline':False]['text':' both as a symlink (for legacy reasons) and as a file, and returned to the','line_number':182,'multiline':False]['text':' caller.','line_number':183,'multiline':False]['text':' A character used to separate paths in a list.','line_number':191,'multiline':False]['text':' Create a symlink to directory ``target`` at location ``link``.','line_number':194,'multiline':False]['text':' Returns true on success, false on failure. The target must be absolute.','line_number':195,'multiline':False]['text':' Implemented via junctions on Windows.','line_number':196,'multiline':False]['text':' HANDLE ','line_number':202,'multiline':True]['text':' Acquires a lock on the output base. Exits if the lock cannot be acquired.','line_number':208,'multiline':False]['text':' Sets ``lock`` to a value that can subsequently be passed to ReleaseLock().','line_number':209,'multiline':False]['text':' Returns the number of milliseconds spent with waiting for the lock.','line_number':210,'multiline':False]['text':' Releases the lock on the output base. In case of an error, continues as','line_number':214,'multiline':False]['text':' usual.','line_number':215,'multiline':False]['text':' Verifies whether the server process still exists. Returns true if it does.','line_number':218,'multiline':False]['text':' Kills a server process based on its PID.','line_number':221,'multiline':False]['text':' Returns true if the server process was found and killed.','line_number':222,'multiline':False]['text':' WARNING! This function can be called from a signal handler!','line_number':223,'multiline':False]['text':' Wait for approximately the specified number of milliseconds. The actual','line_number':226,'multiline':False]['text':' amount of time waited may be more or less because of interrupts or system','line_number':227,'multiline':False]['text':' clock resolution.','line_number':228,'multiline':False]['text':' Mark path as being excluded from backups (if supported by operating system).','line_number':231,'multiline':False]['text':' Returns the canonical form of the base dir given a root and a hashable','line_number':234,'multiline':False]['text':' string. The resulting dir is composed of the root + md5(hashable)','line_number':235,'multiline':False]['text':' Create a safe installation directory where we keep state, installations etc.','line_number':239,'multiline':False]['text':' This method ensures that the directory is created, is owned by the current','line_number':240,'multiline':False]['text':' user, and not accessible to anyone else.','line_number':241,'multiline':False]['text':' Returns true and prints a warning if Bazel was started by clicking its icon.','line_number':254,'multiline':False]['text':' This is typical on Windows. Other platforms should return false, unless they','line_number':255,'multiline':False]['text':' wish to handle this case too.','line_number':256,'multiline':False]['text':' Ensure we have open file descriptors for stdin/stdout/stderr.','line_number':259,'multiline':False]['text':' Returns true iff the current terminal is running inside an Emacs.','line_number':264,'multiline':False]['text':' Returns true iff both stdout and stderr support color and cursor movement.','line_number':267,'multiline':False]['text':' This is used to determine whether or not to use stylized output, which relies','line_number':268,'multiline':False]['text':' on both stdout and stderr being standard terminals to avoid confusing UI','line_number':269,'multiline':False]['text':' issues (ie one stream deleting a line the other intended to be displayed).','line_number':270,'multiline':False]['text':' Returns the number of columns of the terminal to which stdout is connected,','line_number':273,'multiline':False]['text':' or 80 if there is no such terminal.','line_number':274,'multiline':False]['text':' Gets the system-wide explicit limit for the given resource.','line_number':277,'multiline':False]['text':'','line_number':278,'multiline':False]['text':' The resource is one of the RLIMIT_* constants defined in sys/resource.h.','line_number':279,'multiline':False]['text':' Returns 0 if the limit could not be fetched and returns -1 if the function','line_number':280,'multiline':False]['text':' is not implemented for this platform.','line_number':281,'multiline':False]['text':'','line_number':282,'multiline':False]['text':' It is OK to call this function with a parameter of -1 to check if the','line_number':283,'multiline':False]['text':' function is implemented for the platform.','line_number':284,'multiline':False]['text':' Raises soft system resource limits to hard limits in an attempt to let','line_number':287,'multiline':False]['text':' large builds work. This is a best-effort operation and may or may not be','line_number':288,'multiline':False]['text':' implemented for a given platform. Returns true if all limits were properly','line_number':289,'multiline':False]['text':' raised; false otherwise.','line_number':290,'multiline':False]['text':' Raises the soft coredump limit to the hard limit in an attempt to let','line_number':293,'multiline':False]['text':' coredumps work. This is a best-effort operation and may or may not be','line_number':294,'multiline':False]['text':' implemented for a given platform. Returns true if all limits were properly','line_number':295,'multiline':False]['text':' raised; false otherwise.','line_number':296,'multiline':False]['text':' if defined(_WIN32) || defined(__CYGWIN__)','line_number':301,'multiline':False]['text':' This function has no effect on Unix platforms.','line_number':303,'multiline':False]['text':' On Windows, this function looks into PATH to find python.exe, if python','line_number':304,'multiline':False]['text':' binary is found then add','line_number':305,'multiline':False]['text':' --default_override=0:build=--python_path=<python/path> into options.','line_number':306,'multiline':False]['text':' namespace blaze','line_number':309,'multiline':False]['text':' BAZEL_SRC_MAIN_CPP_BLAZE_UTIL_PLATFORM_H_','line_number':311,'multiline':False]