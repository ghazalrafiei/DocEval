['text':' Copyright 2015 The Bazel Authors. All rights reserved.','line_number':1,'multiline':False]['text':'','line_number':2,'multiline':False]['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':3,'multiline':False]['text':' you may not use this file except in compliance with the License.','line_number':4,'multiline':False]['text':' You may obtain a copy of the License at','line_number':5,'multiline':False]['text':'','line_number':6,'multiline':False]['text':'    http://www.apache.org/licenses/LICENSE-2.0','line_number':7,'multiline':False]['text':'','line_number':8,'multiline':False]['text':' Unless required by applicable law or agreed to in writing, software','line_number':9,'multiline':False]['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':10,'multiline':False]['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':11,'multiline':False]['text':' See the License for the specific language governing permissions and','line_number':12,'multiline':False]['text':' limitations under the License.','line_number':13,'multiline':False]['text':' PATH_MAX','line_number':21,'multiline':False]['text':' Performance optimization: memoize the paths we already created a','line_number':95,'multiline':False]['text':' directory for, to spare a stat in attempting to recreate an already','line_number':96,'multiline':False]['text':' existing directory.','line_number':97,'multiline':False]['text':' namespace embedded_binaries','line_number':124,'multiline':False]['text':' The number of the last received signal that should cause the client','line_number':128,'multiline':False]['text':' to shutdown.  This is saved so that the client's WTERMSIG can be set','line_number':129,'multiline':False]['text':' correctly.  (Currently only SIGPIPE uses this mechanism.)','line_number':130,'multiline':False]['text':' Signal handler.','line_number':133,'multiline':False]['text':' Unblock all signals.','line_number':191,'multiline':False]['text':' SIGWINCH is reserved for Bazel server internal use and cannot be passed to','line_number':196,'multiline':False]['text':' it. The JVM is not attached to a terminal, making a signal insufficient to','line_number':197,'multiline':False]['text':' react to window size change event anyway.','line_number':198,'multiline':False]['text':' Kill ourselves with the same signal, so that callers see the','line_number':207,'multiline':False]['text':' right WTERMSIG value.','line_number':208,'multiline':False]['text':' (in case raise didn't kill us for some reason)','line_number':211,'multiline':False]['text':' Converter of C++ data structures to a C-style array of strings.','line_number':248,'multiline':False]['text':'','line_number':249,'multiline':False]['text':' The primary consumer of this class is the execv family of functions','line_number':250,'multiline':False]['text':' (including posix_spawn) which require mutable arrays as their inputs even','line_number':251,'multiline':False]['text':' if they do not modify them.','line_number':252,'multiline':False]['text':' Constructs a new CharPP from a list of arguments.','line_number':255,'multiline':False]['text':' Constructs a new CharPP from a list of environment variables.','line_number':265,'multiline':False]['text':' Deletes all memory held by the CharPP.','line_number':289,'multiline':False]['text':' Obtains the raw pointer to the array of strings.','line_number':297,'multiline':False]['text':' Prevent copies as we manually manage memory.','line_number':302,'multiline':False]['text':' TODO(jmmv): This execution does not respect any settings we might apply','line_number':315,'multiline':False]['text':' to the server process with ConfigureDaemonProcess when executed in the','line_number':316,'multiline':False]['text':' background as a daemon.  Because we use that function to lower the','line_number':317,'multiline':False]['text':' priority of Bazel on macOS from a QoS perspective, this could have','line_number':318,'multiline':False]['text':' adverse scheduling effects on any tools invoked via ExecuteProgram.','line_number':319,'multiline':False]['text':' TODO(jmmv): Mark BAZEL_DIE as ATTRIBUTE_NORETURN so that the following','line_number':325,'multiline':False]['text':' code is not necessary.','line_number':326,'multiline':False]['text':' Not reachable.','line_number':327,'multiline':False]['text':' Notifies the client about the death of the server process by keeping a socket','line_number':346,'multiline':False]['text':' open in the server. If the server dies for any reason, the socket will be','line_number':347,'multiline':False]['text':' closed, which can be detected by the client.','line_number':348,'multiline':False]['text':' Timeout, server is still alive','line_number':376,'multiline':False]['text':' Whether it's an error or pfd.revents & POLLHUP > 0, we assume child is','line_number':379,'multiline':False]['text':' dead.','line_number':380,'multiline':False]['text':' Sets platform-specific attributes for the creation of the daemon process.','line_number':385,'multiline':False]['text':'','line_number':386,'multiline':False]['text':' Returns zero on success or -1 on error, in which case errno is set to the','line_number':387,'multiline':False]['text':' corresponding error details.','line_number':388,'multiline':False]['text':' Wait for daemonize to exit. This guarantees that the pid file exists.','line_number':456,'multiline':False]['text':' The path already exists.','line_number':503,'multiline':False]['text':' Check ownership and mode, and verify that it is a directory.','line_number':504,'multiline':False]['text':' Set non-buffered output mode for stderr/stdout. The server already','line_number':561,'multiline':False]['text':' line-buffers messages where it makes sense, so there's no need to do set','line_number':562,'multiline':False]['text':' line-buffering here. On the other hand the server sometimes sends binary','line_number':563,'multiline':False]['text':' output (when for example a query returns results as proto), in which case','line_number':564,'multiline':False]['text':' we must not perform line buffering on the client side. So turn off','line_number':565,'multiline':False]['text':' buffering here completely.','line_number':566,'multiline':False]['text':' Ensure we have three open fds.  Otherwise we can end up with','line_number':570,'multiline':False]['text':' bizarre things like stdout going to the lock file, etc.','line_number':571,'multiline':False]['text':' A signal-safe version of fprintf(stderr, ...).','line_number':577,'multiline':False]['text':'','line_number':578,'multiline':False]['text':' WARNING: any output from the blaze client may be interleaved','line_number':579,'multiline':False]['text':' with output from the blaze server.  In --curses mode,','line_number':580,'multiline':False]['text':' the Blaze server often erases the previous line of output.','line_number':581,'multiline':False]['text':' So, be sure to end each such message with TWO newlines,','line_number':582,'multiline':False]['text':' otherwise it may be erased by the next message from the','line_number':583,'multiline':False]['text':' Blaze server.','line_number':584,'multiline':False]['text':' Also, it's a good idea to start each message with a newline,','line_number':585,'multiline':False]['text':' in case the Blaze server has written a partial line.','line_number':586,'multiline':False]['text':' We don't care, just placate the compiler.','line_number':594,'multiline':False]['text':' If we're building with glibc <2.20, or another libc which predates','line_number':600,'multiline':False]['text':' OFD locks, define the constant ourselves.  This assumes that the libc','line_number':601,'multiline':False]['text':' and kernel definitions for struct flock are identical.','line_number':602,'multiline':False]['text':' Prefer OFD locks if available.  POSIX locks can be lost "accidentally"','line_number':608,'multiline':False]['text':' due to any close() on the lock file, and are not reliably preserved','line_number':609,'multiline':False]['text':' across execve() on Linux, which we need for --batch mode.','line_number':610,'multiline':False]['text':' F_OFD_SETLK was added in Linux 3.15.  Older kernels return EINVAL.','line_number':619,'multiline':False]['text':' Fall back to F_SETLK in that case.','line_number':620,'multiline':False]['text':' Keep server from inheriting a useless fd if we are not in batch mode','line_number':642,'multiline':False]['text':' This doesn't really matter now, but allows us to subdivide the lock','line_number':655,'multiline':False]['text':' later if that becomes meaningful.  (Ranges beyond EOF can be locked.)','line_number':656,'multiline':False]['text':' Take the exclusive server lock.  If we fail, we busy-wait until the lock','line_number':659,'multiline':False]['text':' becomes available.','line_number':660,'multiline':False]['text':'','line_number':661,'multiline':False]['text':' We used to rely on fcntl(F_SETLKW) to lazy-wait for the lock to become','line_number':662,'multiline':False]['text':' available, which is theoretically fine, but doing so prevents us from','line_number':663,'multiline':False]['text':' determining if the PID of the server holding the lock has changed under the','line_number':664,'multiline':False]['text':' hood.  There have been multiple bug reports where users (especially macOS','line_number':665,'multiline':False]['text':' ones) mention that the Blaze invocation hangs on a non-existent PID.  This','line_number':666,'multiline':False]['text':' should help troubleshoot those scenarios in case there really is a bug','line_number':667,'multiline':False]['text':' somewhere.','line_number':668,'multiline':False]['text':' Each time we learn a new lock owner, print it out.','line_number':681,'multiline':False]['text':' If we took the lock on the first try, force the reported wait time to 0 to','line_number':701,'multiline':False]['text':' avoid unnecessary noise in the logs.  In this metric, we are only','line_number':702,'multiline':False]['text':' interested in knowing how long it took for other commands to complete, not','line_number':703,'multiline':False]['text':' how fast acquiring a lock is.','line_number':704,'multiline':False]['text':' Identify ourselves in the lockfile.','line_number':707,'multiline':False]['text':' The contents are printed for human consumption when another client','line_number':708,'multiline':False]['text':' fails to take the lock, but not parsed otherwise.','line_number':709,'multiline':False]['text':' Arguably we should ensure this fits in the 4KB we lock.  In practice no one','line_number':712,'multiline':False]['text':' will have a cwd long enough to overflow that, and nothing currently uses','line_number':713,'multiline':False]['text':' the rest of the lock file anyway.','line_number':714,'multiline':False]['text':' NOLINT (single-threaded)','line_number':718,'multiline':False]['text':' Kill the process and make sure it's dead before proceeding.','line_number':730,'multiline':False]['text':' NOLINT (single-threaded)','line_number':759,'multiline':False]['text':' GNU Emacs <25.1 (and ~all non-GNU emacsen) set EMACS=t, but >=25.1 doesn't','line_number':770,'multiline':False]['text':' do that and instead sets INSIDE_EMACS=<stuff> (where <stuff> can look like','line_number':771,'multiline':False]['text':' e.g. "25.1.1,comint").  So we check both variables for maximum','line_number':772,'multiline':False]['text':' compatibility.','line_number':773,'multiline':False]['text':' Emacs 22+ terminal emulation uses 'eterm-color' as its terminfo name and,','line_number':781,'multiline':False]['text':' more importantly, supports color in terminals.','line_number':782,'multiline':False]['text':' see https://github.com/emacs-mirror/emacs/blob/master/etc/NEWS.22#L331-L333','line_number':783,'multiline':False]['text':' $COLUMNS is a valid number','line_number':804,'multiline':False]['text':' default if not a terminal.','line_number':808,'multiline':False]['text':' Raises a resource limit to the maximum allowed value.','line_number':811,'multiline':False]['text':'','line_number':812,'multiline':False]['text':' This function raises the limit of the resource given in "resource" from its','line_number':813,'multiline':False]['text':' soft limit to its hard limit. If the hard limit is unlimited and','line_number':814,'multiline':False]['text':' allow_infinity is false, uses the kernel-level limit because setting the','line_number':815,'multiline':False]['text':' soft limit to unlimited may not work.','line_number':816,'multiline':False]['text':'','line_number':817,'multiline':False]['text':' Note that this is a best-effort operation. Any failure during this process','line_number':818,'multiline':False]['text':' will result in a warning but execution will continue.','line_number':819,'multiline':False]['text':' Nothing to do. Return early to prevent triggering any warnings caused by','line_number':829,'multiline':False]['text':' the code below. This way, we will only show warnings the first time the','line_number':830,'multiline':False]['text':' Blaze server is started and not on each command invocation.','line_number':831,'multiline':False]['text':' If not implemented (-1) or on an error (0), do nothing and try to','line_number':837,'multiline':False]['text':' increase the soft limit to the hard one. This might fail, but it's good','line_number':838,'multiline':False]['text':' to try anyway.','line_number':839,'multiline':False]['text':' do nothing.','line_number':872,'multiline':False]['text':' namespace blaze.','line_number':875,'multiline':False]