['text':' Copyright 2014 The Bazel Authors. All rights reserved.','line_number':1,'multiline':False]['text':'','line_number':2,'multiline':False]['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':3,'multiline':False]['text':' you may not use this file except in compliance with the License.','line_number':4,'multiline':False]['text':' You may obtain a copy of the License at','line_number':5,'multiline':False]['text':'','line_number':6,'multiline':False]['text':'    http://www.apache.org/licenses/LICENSE-2.0','line_number':7,'multiline':False]['text':'','line_number':8,'multiline':False]['text':' Unless required by applicable law or agreed to in writing, software','line_number':9,'multiline':False]['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':10,'multiline':False]['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':11,'multiline':False]['text':' See the License for the specific language governing permissions and','line_number':12,'multiline':False]['text':' limitations under the License.','line_number':13,'multiline':False]['text':' Error modes of the pipe.','line_number':26,'multiline':False]['text':'','line_number':27,'multiline':False]['text':' This is a platform-independent abstraction of `errno`. If you need to','line_number':28,'multiline':False]['text':' handle an errno value, add an entry here and update the platform-specific','line_number':29,'multiline':False]['text':' pipe implementations accordingly.','line_number':30,'multiline':False]['text':' EINTR','line_number':34,'multiline':False]['text':' Sends `size` bytes from `buffer` through the pipe.','line_number':39,'multiline':False]['text':' Returns true if `size` is not negative and could send all the data.','line_number':40,'multiline':False]['text':' Receives at most `size` bytes into `buffer` from the pipe.','line_number':43,'multiline':False]['text':' Returns the number of bytes received.','line_number':44,'multiline':False]['text':' If `size` is negative or if there's an error, then returns -1, and if','line_number':45,'multiline':False]['text':' `error` isn't NULL then sets its value to one of the `Errors`.','line_number':46,'multiline':False]['text':' Replaces 'content' with data read from a source using `ReadFromHandle`.','line_number':50,'multiline':False]['text':' If `max_size` is positive, the method reads at most that many bytes;','line_number':51,'multiline':False]['text':' otherwise the method reads everything.','line_number':52,'multiline':False]['text':' Returns false on error. Can be called from a signal handler.','line_number':53,'multiline':False]['text':' Reads up to `size` bytes using `ReadFromHandle` into `data`.','line_number':56,'multiline':False]['text':' There must be enough memory allocated at `data`.','line_number':57,'multiline':False]['text':' Returns true on success, false on error.','line_number':58,'multiline':False]['text':' Writes `content` into file `filename`, and chmods it to `perm`.','line_number':61,'multiline':False]['text':' Returns false on failure.','line_number':62,'multiline':False]['text':' Lists all files in `path` and all of its subdirectories.','line_number':69,'multiline':False]['text':'','line_number':70,'multiline':False]['text':' Does not follow symlinks / junctions.','line_number':71,'multiline':False]['text':'','line_number':72,'multiline':False]['text':' Populates `result` with the full paths of the files. Every entry will have','line_number':73,'multiline':False]['text':' `path` as its prefix. If `path` is a file, `result` contains just this','line_number':74,'multiline':False]['text':' file.','line_number':75,'multiline':False]['text':' Visible for testing only.','line_number':81,'multiline':False]['text':' Visible for testing only.','line_number':85,'multiline':False]['text':' namespace blaze_util','line_number':90,'multiline':False]['text':' BAZEL_SRC_MAIN_CPP_UTIL_FILE_H_','line_number':92,'multiline':False]