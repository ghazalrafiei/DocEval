['text':' Copyright 2020 The Bazel Authors. All rights reserved.','line_number':1,'multiline':False]['text':'','line_number':2,'multiline':False]['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':3,'multiline':False]['text':' you may not use this file except in compliance with the License.','line_number':4,'multiline':False]['text':' You may obtain a copy of the License at','line_number':5,'multiline':False]['text':'','line_number':6,'multiline':False]['text':'    http://www.apache.org/licenses/LICENSE-2.0','line_number':7,'multiline':False]['text':'','line_number':8,'multiline':False]['text':' Unless required by applicable law or agreed to in writing, software','line_number':9,'multiline':False]['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':10,'multiline':False]['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':11,'multiline':False]['text':' See the License for the specific language governing permissions and','line_number':12,'multiline':False]['text':' limitations under the License.','line_number':13,'multiline':False]['text':' POSIX support for Starlark CPU profiler.','line_number':15,'multiline':False]['text':' for htonl','line_number':17,'multiline':False]['text':' darwin','line_number':30,'multiline':False]['text':' static native boolean supported();','line_number':36,'multiline':False]['text':' the write end of the profile event pipe','line_number':42,'multiline':False]['text':' darwin','line_number':47,'multiline':False]['text':' SIGPROF handler.','line_number':54,'multiline':False]['text':' Warning: asynchronous! See signal-safety(7) for the programming discipline.','line_number':55,'multiline':False]['text':' Send an event containing the int32be-encoded OS thread ID.','line_number':65,'multiline':False]['text':' The Java router thread cannot keep up.','line_number':71,'multiline':False]['text':'','line_number':72,'multiline':False]['text':' A busy 12-core machine receives 12 * 100Hz = 1200 signals per second,','line_number':73,'multiline':False]['text':' and thus writes 4.8KB/s to the pipe. The default pipe buffer','line_number':74,'multiline':False]['text':' size on Linux is 64KiB, sufficient to buffer ~14s of data.','line_number':75,'multiline':False]['text':' (It is a quarter of that on Mac OS X.)','line_number':76,'multiline':False]['text':'','line_number':77,'multiline':False]['text':' Rather than block in write(2), causing the JVM to deadlock,','line_number':78,'multiline':False]['text':' we print an error and discard the event.','line_number':79,'multiline':False]['text':' We shouldn't use perror in a signal handler.','line_number':85,'multiline':False]['text':' Strictly, we shouldn't use strerror either,','line_number':86,'multiline':False]['text':' but for all errors returned by write it merely','line_number':87,'multiline':False]['text':' returns a constant.','line_number':88,'multiline':False]['text':' static native jint gettid();','line_number':100,'multiline':False]['text':' makeFD: return new FileDescriptor(fd)','line_number':106,'multiline':False]['text':'','line_number':107,'multiline':False]['text':' This would be easy to do in Java, but for the field being private.','line_number':108,'multiline':False]['text':' Java really does everything it can to make system programming hateful.','line_number':109,'multiline':False]['text':' exception','line_number':112,'multiline':False]['text':' exception','line_number':115,'multiline':False]['text':' exception','line_number':119,'multiline':False]['text':' static native FileDescriptor createPipe();','line_number':125,'multiline':False]['text':' Create a pipe for profile events from the handler to Java.','line_number':128,'multiline':False]['text':' The default pipe size is 64KiB on Linux and 16KiB on Mac OS X.','line_number':129,'multiline':False]['text':' Make the write end non-blocking so that the signal','line_number':137,'multiline':False]['text':' handler can detect overflow (rather than deadlock).','line_number':138,'multiline':False]['text':' Return the read end of the event pipe,','line_number':141,'multiline':False]['text':' wrapped by a java FileDescriptor.','line_number':142,'multiline':False]['text':' static native boolean startTimer(long period_micros);','line_number':146,'multiline':False]['text':' Install the signal handler.','line_number':150,'multiline':False]['text':' Use sigaction(2) not signal(2) so that we can correctly','line_number':151,'multiline':False]['text':' restore the previous handler if necessary.','line_number':152,'multiline':False]['text':' the JVM doesn't expect EINTR','line_number':155,'multiline':False]['text':' Is a handler already in effect?','line_number':161,'multiline':False]['text':' Check for 3-arg and 1-arg forms.','line_number':162,'multiline':False]['text':' don't rely on this GNU extension','line_number':163,'multiline':False]['text':' The initial handler (DFL or IGN) may vary by thread package.','line_number':167,'multiline':False]['text':' Someone else is profiling this JVM.','line_number':169,'multiline':False]['text':' Restore their handler and fail.','line_number':170,'multiline':False]['text':' Start the CPU interval timer.','line_number':175,'multiline':False]['text':' static native void stopTimer();','line_number':189,'multiline':False]['text':' Disarm the CPU interval timer.','line_number':192,'multiline':False]['text':' Uninstall signal handler.','line_number':199,'multiline':False]['text':' namespace cpu_profiler','line_number':203,'multiline':False]