['text':' Copyright 2018 The Bazel Authors. All rights reserved.','line_number':1,'multiline':False]['text':'','line_number':2,'multiline':False]['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':3,'multiline':False]['text':' you may not use this file except in compliance with the License.','line_number':4,'multiline':False]['text':' You may obtain a copy of the License at','line_number':5,'multiline':False]['text':'','line_number':6,'multiline':False]['text':'    http://www.apache.org/licenses/LICENSE-2.0','line_number':7,'multiline':False]['text':'','line_number':8,'multiline':False]['text':' Unless required by applicable law or agreed to in writing, software','line_number':9,'multiline':False]['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':10,'multiline':False]['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':11,'multiline':False]['text':' See the License for the specific language governing permissions and','line_number':12,'multiline':False]['text':' limitations under the License.','line_number':13,'multiline':False]['text':'*
 * Annotation processor for {@link StarlarkMethod}. See that class for requirements.
 *
 * <p>These properties can be relied upon at runtime without additional checks.
 ','line_number':48,'multiline':True]['text':' A set containing a TypeElement for each class with a StarlarkMethod.selfCall annotation.','line_number':63,'multiline':False]['text':' A multimap where keys are class element, and values are the callable method names identified in','line_number':65,'multiline':False]['text':' that class (where "method name" is StarlarkMethod.name).','line_number':66,'multiline':False]['text':' Ensure StarlarkBuiltin-annotated classes implement StarlarkValue.','line_number':97,'multiline':False]['text':' Only methods are annotated with StarlarkMethod.','line_number':108,'multiline':False]['text':' This is ensured by the @Target(ElementType.METHOD) annotation.','line_number':109,'multiline':False]['text':' Check the annotation itself.','line_number':118,'multiline':False]['text':' Verify that result type, if final, might satisfy Starlark.fromJava.','line_number':169,'multiline':False]['text':' (If the type is non-final we can't prove that all subclasses are invalid.)','line_number':170,'multiline':False]['text':' Returning false allows downstream processors to work on the same annotations','line_number':191,'multiline':False]['text':' TODO(adonovan): obviate these checks by separating field/method interfaces.','line_number':195,'multiline':False]['text':' useStructField is incompatible with special thread-related parameters,','line_number':197,'multiline':False]['text':' because unlike a method, which is actively called within a thread,','line_number':198,'multiline':False]['text':' a field is a passive part of a data structure that may be accessed','line_number':199,'multiline':False]['text':' from Java threads that don't have anything to do with Starlark threads.','line_number':200,'multiline':False]['text':' However, the StarlarkSemantics is available even to fields,','line_number':201,'multiline':False]['text':' because it is a required parameter for all attribute-selection','line_number':202,'multiline':False]['text':' operations x.f.','line_number':203,'multiline':False]['text':'','line_number':204,'multiline':False]['text':' Not having a thread forces implementations to assume Mutability=null,','line_number':205,'multiline':False]['text':' which is not quite right. Perhaps one day we can abolish Mutability','line_number':206,'multiline':False]['text':' in favor of a tracing approach as in go.starlark.net.','line_number':207,'multiline':False]['text':' Check @Param annotations match parameters.','line_number':250,'multiline':False]['text':' Check parameter ordering.','line_number':267,'multiline':False]['text':' There is no default value.','line_number':282,'multiline':False]['text':' There is a default value.','line_number':290,'multiline':False]['text':' No positional parameters without a default value can come after this parameter.','line_number':291,'multiline':False]['text':' Not positional.','line_number':294,'multiline':False]['text':' No positional parameters can come after this parameter.','line_number':295,'multiline':False]['text':' No positional-only parameters can come after this parameter.','line_number':306,'multiline':False]['text':' Checks consistency of a single parameter with its Param annotation.','line_number':320,'multiline':False]['text':' type of the Java method parameter','line_number':322,'multiline':False]['text':' Give helpful hint for parameter of type Integer.','line_number':324,'multiline':False]['text':' Reject an entry of Param.allowedTypes if not assignable to the parameter variable.','line_number':333,'multiline':False]['text':' Reject generic types C<T> other than C<?>,','line_number':347,'multiline':False]['text':' since reflective calls check only the toplevel class.','line_number':348,'multiline':False]['text':' Check sense of flag-controlled parameters.','line_number':364,'multiline':False]['text':' Ensure positional arguments are documented.','line_number':394,'multiline':False]['text':' Returns the logical type of ParamType.type.','line_number':405,'multiline':False]['text':' See explanation of this hack at Element.getAnnotation','line_number':407,'multiline':False]['text':' and at https://stackoverflow.com/a/10167558.','line_number':408,'multiline':False]['text':' insufficient parameters?','line_number':430,'multiline':False]['text':' not safe to proceed','line_number':441,'multiline':False]['text':' Allow any supertype of Tuple.','line_number':446,'multiline':False]['text':' Allow any supertype of Dict<String, Object>.','line_number':461,'multiline':False]['text':' surplus parameters?','line_number':501,'multiline':False]['text':' first surplus parameter','line_number':504,'multiline':False]['text':' Reports a (formatted) error and fails the compilation.','line_number':523,'multiline':False]