['text':' Copyright 2015 The Bazel Authors. All rights reserved.','line_number':1,'multiline':False]['text':'','line_number':2,'multiline':False]['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':3,'multiline':False]['text':' you may not use this file except in compliance with the License.','line_number':4,'multiline':False]['text':' You may obtain a copy of the License at','line_number':5,'multiline':False]['text':'','line_number':6,'multiline':False]['text':'    http://www.apache.org/licenses/LICENSE-2.0','line_number':7,'multiline':False]['text':'','line_number':8,'multiline':False]['text':' Unless required by applicable law or agreed to in writing, software','line_number':9,'multiline':False]['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':10,'multiline':False]['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':11,'multiline':False]['text':' See the License for the specific language governing permissions and','line_number':12,'multiline':False]['text':' limitations under the License.','line_number':13,'multiline':False]['text':'*
 * A printer of Starlark values.
 *
 * <p>Subclasses may override methods such as {@link #repr} and {@link #printList} to alter the
 * formatting behavior.
 ','line_number':23,'multiline':True]['text':' TODO(adonovan): disallow printing of objects that are not Starlark values.','line_number':29,'multiline':False]['text':' Stack of values in the middle of being printed.','line_number':34,'multiline':False]['text':' Each renders as "..." if recursively encountered,','line_number':35,'multiline':False]['text':' indicating a cycle.','line_number':36,'multiline':False]['text':'* Creates a printer that writes to the given buffer. ','line_number':40,'multiline':True]['text':'* Creates a printer that uses a fresh buffer. ','line_number':45,'multiline':True]['text':'* Appends a char to the printer's buffer ','line_number':50,'multiline':True]['text':'* Appends a char sequence to the printer's buffer ','line_number':57,'multiline':True]['text':'* Appends a char subsequence to the printer's buffer ','line_number':64,'multiline':True]['text':'* Appends an integer to the printer's buffer ','line_number':71,'multiline':True]['text':'* Appends a long integer to the printer's buffer ','line_number':78,'multiline':True]['text':'*
   * Appends a list to the printer's buffer. List elements are rendered with {@code repr}.
   *
   * <p>May be overridden by subclasses.
   *
   * @param list the list of objects to repr (each as with repr)
   * @param before a string to print before the list items, e.g. an opening bracket
   * @param separator a separator to print between items
   * @param after a string to print after the list items, e.g. a closing bracket
   ','line_number':85,'multiline':True]['text':'*
   * Appends the {@code StarlarkValue.debugPrint} representation of a value (as used by the Starlark
   * {@code print} statement) to the printer's buffer.
   *
   * <p>Implementations of StarlarkValue may define their own behavior of {@code debugPrint}.
   ','line_number':111,'multiline':True]['text':'*
   * Appends the {@code StarlarkValue.str} representation of a value to the printer's buffer. Unlike
   * {@code repr(x)}, it does not quote strings at top level, though strings and other values
   * appearing as elements of other structures are quoted as if by {@code repr}.
   *
   * <p>Implementations of StarlarkValue may define their own behavior of {@code str}.
   ','line_number':126,'multiline':True]['text':'*
   * Appends the {@code StarlarkValue.repr} (quoted) representation of a value to the printer's
   * buffer. The quoted form is often a Starlark expression that evaluates to the value.
   *
   * <p>Implementations of StarlarkValue may define their own behavior of {@code repr}.
   *
   * <p>Cyclic values are rendered as {@code ...} if they are recursively encountered by the same
   * printer. (Implementations of {@link StarlarkValue#repr} should avoid calling {@code
   * Starlark#repr}, as it creates another printer, which hide cycles from the cycle detector.)
   *
   * <p>In addition to Starlark values, {@code repr} also prints instances of classes Map, List,
   * Map.Entry, or Class. All other values are formatted using their {@code toString} method.
   * TODO(adonovan): disallow that.
   ','line_number':146,'multiline':True]['text':' atomic values (leaves of the object graph)','line_number':161,'multiline':False]['text':' Java null is not a valid Starlark value, but sometimes printers are used on non-Starlark','line_number':163,'multiline':False]['text':' values such as Locations or Nodes.','line_number':164,'multiline':False]['text':' a non-Starlark value','line_number':179,'multiline':False]['text':' a non-Starlark value','line_number':183,'multiline':False]['text':' compound values (may form cycles in the object graph)','line_number':188,'multiline':False]['text':' elided cycle','line_number':191,'multiline':False]['text':' -- non-Starlark values --','line_number':197,'multiline':False]['text':' All other non-Starlark Java values (e.g. Node, Location).','line_number':213,'multiline':False]['text':' Starlark code cannot access values of o that would reach here,','line_number':214,'multiline':False]['text':' and native code is already trusted to be deterministic.','line_number':215,'multiline':False]['text':' TODO(bazel-team): support \x escapes','line_number':254,'multiline':False]['text':' no need to support UTF-8','line_number':257,'multiline':False]['text':' Reports whether x is already present on the visitation stack, pushing it if not.','line_number':261,'multiline':False]['text':' cyclic?','line_number':263,'multiline':False]['text':'*
   * Appends a string, formatted as if by Starlark's {@code str % tuple} operator, to the printer's
   * buffer.
   *
   * <p>Supported conversions:
   *
   * <ul>
   *   <li>{@code %s} (convert as if by {@code str()})
   *   <li>{@code %r} (convert as if by {@code repr()})
   *   <li>{@code %d} (convert an integer to its decimal representation)
   * </ul>
   *
   * To encode a literal percent character, escape it as {@code %%}. It is an error to have a
   * non-escaped {@code %} at the end of the string or followed by any character not listed above.
   *
   * @param format the format string
   * @param arguments an array containing arguments to substitute into the format operators in order
   * @throws IllegalFormatException if the format string is invalid or the arguments do not match it
   ','line_number':283,'multiline':True]['text':'* Same as {@link #format}, but with a list instead of variadic args. ','line_number':307,'multiline':True]['text':' see b/178189609','line_number':308,'multiline':False]['text':' N.B. MissingFormatWidthException is the only kind of IllegalFormatException','line_number':311,'multiline':False]['text':' whose constructor can take and display arbitrary error message, hence its use below.','line_number':312,'multiline':False]['text':' TODO(adonovan): this suggests we're using the wrong exception. Throw IAE?','line_number':313,'multiline':False]['text':' index of next character in pattern','line_number':317,'multiline':False]['text':' index of next argument in arguments','line_number':318,'multiline':False]['text':' %%: literal %','line_number':336,'multiline':False]['text':' get argument','line_number':342,'multiline':False]['text':' The call to Starlark.repr doesn't cause an infinite recursion','line_number':411,'multiline':False]['text':' because it's only used to format a string properly.','line_number':412,'multiline':False]