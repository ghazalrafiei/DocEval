['text':' Copyright 2014 The Bazel Authors. All rights reserved.','line_number':1,'multiline':False]['text':'','line_number':2,'multiline':False]['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':3,'multiline':False]['text':' you may not use this file except in compliance with the License.','line_number':4,'multiline':False]['text':' You may obtain a copy of the License at','line_number':5,'multiline':False]['text':'','line_number':6,'multiline':False]['text':'    http://www.apache.org/licenses/LICENSE-2.0','line_number':7,'multiline':False]['text':'','line_number':8,'multiline':False]['text':' Unless required by applicable law or agreed to in writing, software','line_number':9,'multiline':False]['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':10,'multiline':False]['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':11,'multiline':False]['text':' See the License for the specific language governing permissions and','line_number':12,'multiline':False]['text':' limitations under the License.','line_number':13,'multiline':False]['text':'*
 * A Sequence is a finite iterable sequence of Starlark values, such as a list or tuple.
 *
 * <p>Sequences implement the read-only operations of the {@link List} interface, but not its update
 * operations, similar to {@code ImmutableList}. The specification of {@code List} governs how such
 * methods behave and in particular how they report errors. Subclasses of sequence may define ad-hoc
 * mutator methods, such as {@link StarlarkList#extend}, exposed to Starlark, or Java, or both.
 *
 * <p>In principle, subclasses of Sequence could also define the standard update operations of List,
 * but there appears to be little demand, and doing so carries some risk of obscuring unintended
 * mutations to Starlark values that would currently cause the program to crash.
 ','line_number':24,'multiline':True]['text':'* Returns an ImmutableList object with the current underlying contents of this Sequence. ','line_number':44,'multiline':True]['text':'* Retrieves an entry from a Sequence. ','line_number':49,'multiline':True]['text':'*
   * Compares two sequences of values. Sequences compare equal if corresponding elements compare
   * equal using {@code x[i] == y[i]}. Otherwise, the result is the ordered comparison of the first
   * element for which {@code x[i] != y[i]}. If one list is a prefix of another, the result is the
   * comparison of the list's sizes.
   *
   * @throws ClassCastException if any comparison failed.
   ','line_number':61,'multiline':True]['text':' First test for equality. This avoids an unnecessary','line_number':74,'multiline':False]['text':' ordered comparison, which may be unsupported despite','line_number':75,'multiline':False]['text':' the values being equal. Also, it is potentially more','line_number':76,'multiline':False]['text':' expensive. For example, list==list need not look at','line_number':77,'multiline':False]['text':' the elements if the lengths are unequal.','line_number':78,'multiline':False]['text':' The ordered comparison of unequal elements should','line_number':83,'multiline':False]['text':' always be nonzero unless compareTo is inconsistent.','line_number':84,'multiline':False]['text':'*
   * Compares two sequences of value for equality. Sequences compare equal if they are the same size
   * and corresponding elements compare equal.
   ','line_number':97,'multiline':True]['text':'*
   * Returns the slice of this sequence, {@code this[start:stop:step]}. <br>
   * For positive strides ({@code step > 0}), {@code 0 <= start <= stop <= size()}. <br>
   * For negative strides ({@code step < 0}), {@code -1 <= stop <= start < size()}. <br>
   * The caller must ensure that the start and stop indices are valid and that step is non-zero.
   ','line_number':119,'multiline':True]['text':'*
   * Casts a non-null Starlark value {@code x} to a {@code Sequence<T>}, after checking that each
   * element is an instance of {@code elemType}. On error, it throws an EvalException whose message
   * includes {@code what}, ideally a string literal, as a description of the role of {@code x}.
   ','line_number':127,'multiline':True]['text':' safe','line_number':147,'multiline':False]['text':'* Like {@link #cast}, but if x is None, returns an immutable empty list. ','line_number':152,'multiline':True]