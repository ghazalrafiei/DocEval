['text':' Copyright 2014 The Bazel Authors. All rights reserved.','line_number':1,'multiline':False]['text':'','line_number':2,'multiline':False]['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':3,'multiline':False]['text':' you may not use this file except in compliance with the License.','line_number':4,'multiline':False]['text':' You may obtain a copy of the License at','line_number':5,'multiline':False]['text':'','line_number':6,'multiline':False]['text':'    http://www.apache.org/licenses/LICENSE-2.0','line_number':7,'multiline':False]['text':'','line_number':8,'multiline':False]['text':' Unless required by applicable law or agreed to in writing, software','line_number':9,'multiline':False]['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':10,'multiline':False]['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':11,'multiline':False]['text':' See the License for the specific language governing permissions and','line_number':12,'multiline':False]['text':' limitations under the License.','line_number':13,'multiline':False]['text':'* A Tuple is an immutable finite sequence of values. ','line_number':26,'multiline':True]['text':' Prohibit instantiation outside of package.','line_number':47,'multiline':False]['text':' The shared (sole) empty tuple.','line_number':50,'multiline':False]['text':'* Returns the empty tuple. ','line_number':53,'multiline':True]['text':'* Returns a Tuple that wraps the specified array, which must not be subsequently modified. ','line_number':58,'multiline':True]['text':'* Returns a tuple containing the given elements. ','line_number':70,'multiline':True]['text':'* Returns a tuple containing the given elements. ','line_number':78,'multiline':True]['text':'* Returns a two-element tuple. ','line_number':83,'multiline':True]['text':' Equivalent to of(a, b) but avoids variadic array allocation.','line_number':85,'multiline':False]['text':'* Returns a three-element tuple. ','line_number':89,'multiline':True]['text':' Equivalent to of(a, b, c) but avoids variadic array allocation.','line_number':91,'multiline':False]['text':'* Returns a tuple that is the concatenation of two tuples. ','line_number':95,'multiline':True]['text':' This slightly violates the java.util.List equivalence contract','line_number':121,'multiline':False]['text':' because it considers the class, not just the elements.','line_number':122,'multiline':False]['text':' This is needed because in Starlark tuples are never equal to lists, however in Java they both','line_number':123,'multiline':False]['text':' implement List interface.','line_number':124,'multiline':False]['text':' TODO(adonovan): StarlarkValue has 3 String methods yet still we need this fourth. Why?','line_number':128,'multiline':False]['text':'*
   * Returns a new ImmutableList<T> backed by {@code array}, which must not be subsequently
   * modified.
   ','line_number':134,'multiline':True]['text':' TODO(adonovan): move this somewhere more appropriate.','line_number':138,'multiline':False]['text':' Construct an ImmutableList that shares the array.','line_number':140,'multiline':False]['text':' ImmutableList relies on the implementation of Collection.toArray','line_number':141,'multiline':False]['text':' not subsequently modifying the returned array.','line_number':142,'multiline':False]['text':'* Returns a Tuple containing n consecutive repeats of this tuple. ','line_number':162,'multiline':True]