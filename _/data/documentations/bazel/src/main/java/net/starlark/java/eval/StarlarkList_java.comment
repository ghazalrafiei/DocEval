['text':' Copyright 2014 The Bazel Authors. All rights reserved.','line_number':1,'multiline':False]['text':'','line_number':2,'multiline':False]['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':3,'multiline':False]['text':' you may not use this file except in compliance with the License.','line_number':4,'multiline':False]['text':' You may obtain a copy of the License at','line_number':5,'multiline':False]['text':'','line_number':6,'multiline':False]['text':'    http://www.apache.org/licenses/LICENSE-2.0','line_number':7,'multiline':False]['text':'','line_number':8,'multiline':False]['text':' Unless required by applicable law or agreed to in writing, software','line_number':9,'multiline':False]['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':10,'multiline':False]['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':11,'multiline':False]['text':' See the License for the specific language governing permissions and','line_number':12,'multiline':False]['text':' limitations under the License.','line_number':13,'multiline':False]['text':'*
 * A StarlarkList is a mutable finite sequence of values.
 *
 * <p>Starlark operations on lists, including element update and the {@code append}, {@code insert},
 * and {@code extend} methods, may insert arbitrary Starlark values as list elements, regardless of
 * the type argument used to reference to the list from Java code. Therefore, as long as a list is
 * mutable, Java code should refer to it only through a type such as {@code StarlarkList<Object>} or
 * {@code StarlarkList<?>} to avoid undermining the type-safety of the Java application. Once the
 * list becomes frozen, it is safe to {@link #cast} it to a more specific type that accurately
 * reflects its elements, such as {@code StarlarkList<String>}.
 *
 * <p>The following List methods, by inheriting their implementations from AbstractList, are
 * effectively disabled. Use the corresponding methods with "element" in their name; they may report
 * mutation failure by throwing a checked exception.
 *
 * <pre>
 *   boolean add(E)                    -- use addElement
 *   boolean remove(Object)            -- use removeElement
 *   boolean addAll(Collection)        -- use addElements
 *   boolean addAll(int, Collection)
 *   boolean removeAll(Collection)     -- use removeElements
 *   boolean retainAll(Collection)
 *   void clear()                      -- use clearElements
 *   E set(int, E)                     -- use setElementAt
 *   void add(int, E)                  -- use addElementAt
 *   E remove(int)                     -- use removeElementAt
 * </pre>
 ','line_number':35,'multiline':True]['text':' It's always possible to overeat in small bites but we'll','line_number':83,'multiline':False]['text':' try to stop someone swallowing the world in one gulp.','line_number':84,'multiline':False]['text':' Prohibit instantiation outside of package.','line_number':89,'multiline':False]['text':'*
   * Takes ownership of the supplied array of class Object[].class, and returns a new StarlarkList
   * instance that initially wraps the array. The caller must not subsequently modify the array, but
   * the StarlarkList instance may do so.
   ','line_number':92,'multiline':True]['text':' Even a frozen list is unhashable.','line_number':113,'multiline':False]['text':'*
   * A shared instance for the empty list with immutable mutability.
   *
   * <p>Other immutable empty list objects can exist, e.g. lists that were once mutable but whose
   * environments were then frozen. This instance is for empty lists that were always frozen from
   * the beginning.
   ','line_number':117,'multiline':True]['text':'* Returns an empty frozen list of the desired type. ','line_number':126,'multiline':True]['text':'* Returns a new, empty list with the specified Mutability. ','line_number':132,'multiline':True]['text':'*
   * Returns a {@code StarlarkList} whose items are given by an iterable and which has the given
   * {@link Mutability}. If {@code mutability} is null, the list is immutable.
   ','line_number':137,'multiline':True]['text':' safe','line_number':147,'multiline':False]['text':'*
   * Returns an immutable list with the given elements. Equivalent to {@code copyOf(null, elems)}.
   ','line_number':162,'multiline':True]['text':'*
   * Creates an immutable {@link StarlarkList} with lazily supplied elements.
   *
   * <p>The given supplier is not invoked until the list is accessed and is invoked at most once.
   * This can be used to create a {@link StarlarkList} while deferring an expensive computation
   * until the list is actually accessed.
   ','line_number':169,'multiline':True]['text':'* An associated convenience type for LazyImmutableStarlarkLists ','line_number':180,'multiline':True]['text':'*
   * Returns a {@code StarlarkList} with the given items and the {@link Mutability}. If {@code
   * mutability} is null, the list is immutable.
   ','line_number':183,'multiline':True]['text':'* Returns an immutable {@code StarlarkList} with the given items. ','line_number':196,'multiline':True]['text':'*
   * Returns a new {@code StarlarkList} that is the concatenation of two {@code StarlarkList}s. The
   * new list will have the given {@link Mutability}.
   ','line_number':204,'multiline':True]['text':' This slightly violates the java.util.List equivalence contract','line_number':231,'multiline':False]['text':' because it considers the class, not just the elements.','line_number':232,'multiline':False]['text':' This is needed because in Starlark lists are never equal to tuples, however in Java they both','line_number':233,'multiline':False]['text':' implement List interface.','line_number':234,'multiline':False]['text':' Hash the elements elems[0:size].','line_number':241,'multiline':False]['text':' TODO(adonovan): StarlarkValue has 3 String methods yet still we need this fourth. Why?','line_number':256,'multiline':False]['text':'* Returns a new StarlarkList containing n consecutive repeats of this tuple. ','line_number':262,'multiline':True]['text':' common case','line_number':287,'multiline':False]['text':'*
   * Appends an element to the end of the list, after validating that mutation is allowed.
   *
   * @param element the element to add
   ','line_number':298,'multiline':True]['text':'*
   * Inserts an element at a given position to the list.
   *
   * @param index the new element's index
   * @param element the element to add
   ','line_number':305,'multiline':True]['text':'*
   * Appends all the elements to the end of the list.
   *
   * @param elements the elements to add
   ','line_number':313,'multiline':True]['text':'*
   * Removes the element at a given index. The index must already have been validated to be in
   * range.
   *
   * @param index the index of the element to remove
   ','line_number':320,'multiline':True]['text':'*
   * Sets the position at the given index to contain the given value. Precondition: {@code 0 <=
   * index < size()}.
   ','line_number':328,'multiline':True]['text':' unchecked','line_number':358,'multiline':False]['text':' unchecked','line_number':373,'multiline':False]['text':' TODO(adonovan): this is wrong','line_number':397,'multiline':False]['text':' TODO(adonovan): this is wrong','line_number':400,'multiline':False]['text':' TODO(adonovan): this is wrong','line_number':406,'multiline':False]['text':' TODO(adonovan): this is wrong','line_number':409,'multiline':False]['text':' TODO(adonovan): this is not what Python3 does','line_number':436,'multiline':False]['text':'*
   * Mutates this list in-place to reduce memory usage, and returns an optimized list (which might
   * be the same as this instance).
   *
   * <p>This operation is not protected by the mutability mechanism. It is the caller's
   * responsibility to ensure this list is not concurrently accessed during this method's execution.
   *
   * <p>The mutated list and the returned list are both equivalent to the original list.
   *
   * <p>The mutability must be frozen prior to calling this method.
   ','line_number':451,'multiline':True]['text':' the following List methods are deliberately left unsupported for now, but could be implemented','line_number':487,'multiline':False]['text':' if the need ever arises','line_number':488,'multiline':False]