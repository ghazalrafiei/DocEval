['text':' Copyright 2020 The Bazel Authors. All rights reserved.','line_number':1,'multiline':False]['text':'','line_number':2,'multiline':False]['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':3,'multiline':False]['text':' you may not use this file except in compliance with the License.','line_number':4,'multiline':False]['text':' You may obtain a copy of the License at','line_number':5,'multiline':False]['text':'','line_number':6,'multiline':False]['text':'    http://www.apache.org/licenses/LICENSE-2.0','line_number':7,'multiline':False]['text':'','line_number':8,'multiline':False]['text':' Unless required by applicable law or agreed to in writing, software','line_number':9,'multiline':False]['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':10,'multiline':False]['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':11,'multiline':False]['text':' See the License for the specific language governing permissions and','line_number':12,'multiline':False]['text':' limitations under the License.','line_number':13,'multiline':False]['text':'* Script-based tests of Starlark evaluator. ','line_number':38,'multiline':True]['text':' Tests for Starlark.','line_number':41,'multiline':False]['text':'','line_number':42,'multiline':False]['text':' In each test file, chunks are separated by "\n---\n".','line_number':43,'multiline':False]['text':' Each chunk is evaluated separately.','line_number':44,'multiline':False]['text':' A comment containing','line_number':45,'multiline':False]['text':'     ### regular expression','line_number':46,'multiline':False]['text':' specifies an expected error on that line.','line_number':47,'multiline':False]['text':' The part after '###', with leading/trailing spaces removed,','line_number':48,'multiline':False]['text':' must be a valid regular expression matching the error.','line_number':49,'multiline':False]['text':' If there is no "###", the test will succeed iff there is no error.','line_number':50,'multiline':False]['text':'','line_number':51,'multiline':False]['text':' Within the file, the assert_ and assert_eq functions may be used to','line_number':52,'multiline':False]['text':' report errors without stopping the program. (They are not evaluation','line_number':53,'multiline':False]['text':' errors that can be caught with a '###' expectation.)','line_number':54,'multiline':False]['text':' TODO(adonovan): improve this test driver (following go.starlark.net):','line_number':56,'multiline':False]['text':'','line_number':57,'multiline':False]['text':' - extract support for "chunked files" into a library','line_number':58,'multiline':False]['text':'   and reuse it for tests of lexer, parser, resolver.','line_number':59,'multiline':False]['text':' - require that some frame of each EvalException match the file/line of the expectation.','line_number':60,'multiline':False]['text':' Verify error matches expectation.','line_number':120,'multiline':False]['text':' Constructor for simple structs, for testing.','line_number':134,'multiline':False]['text':' blaze','line_number':177,'multiline':False]['text':' bazel','line_number':179,'multiline':False]['text':' prepare chunk','line_number':187,'multiline':False]['text':' extract expectations: ### "regular expression"','line_number':197,'multiline':False]['text':' Compile regular expression in comment.','line_number':209,'multiline':False]['text':' parse & execute','line_number':225,'multiline':False]['text':' e.g. assert_eq','line_number':228,'multiline':False]['text':' parser/resolver errors','line_number':239,'multiline':False]['text':'','line_number':240,'multiline':False]['text':' Static errors cannot be suppressed by expectations:','line_number':241,'multiline':False]['text':' it would be dangerous because the presence of a static','line_number':242,'multiline':False]['text':' error prevents execution of any dynamic assertions in','line_number':243,'multiline':False]['text':' a chunk. Tests of static errors belong in syntax/.','line_number':244,'multiline':False]['text':' includes location','line_number':246,'multiline':False]['text':' evaluation error','line_number':251,'multiline':False]['text':'','line_number':252,'multiline':False]['text':' TODO(adonovan): the old logic checks only that each error is matched','line_number':253,'multiline':False]['text':' by at least one expectation. Instead, ensure that errors','line_number':254,'multiline':False]['text':' and exceptions match exactly. Furthermore, look only at errors','line_number':255,'multiline':False]['text':' whose stack has a frame with a file/line that matches the expectation.','line_number':256,'multiline':False]['text':' This requires inspecting EvalException stack.','line_number':257,'multiline':False]['text':' (There can be at most one dynamic error per chunk.','line_number':258,'multiline':False]['text':' Do we even need to allow multiple expectations?)','line_number':259,'multiline':False]['text':' unhandled exception (incl. InterruptedException)','line_number':266,'multiline':False]['text':' unmatched expectations','line_number':274,'multiline':False]['text':' advance line number','line_number':280,'multiline':False]['text':' for "\n---\n"','line_number':281,'multiline':False]['text':' Called by assert_ and assert_eq when the test encounters an error.','line_number':289,'multiline':False]['text':' Does not stop the program; multiple failures may be reported in a single run.','line_number':290,'multiline':False]['text':' pop the built-in function','line_number':294,'multiline':False]['text':' A trivial struct-like class with Starlark fields defined by a map.','line_number':322,'multiline':False]['text':' This repr function prints only the fields.','line_number':347,'multiline':False]['text':' Any methods are still accessible through dir/getattr/hasattr.','line_number':348,'multiline':False]