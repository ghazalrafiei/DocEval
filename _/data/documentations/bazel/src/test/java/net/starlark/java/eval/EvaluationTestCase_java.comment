['text':' Copyright 2006 The Bazel Authors. All rights reserved.','line_number':1,'multiline':False]['text':'','line_number':2,'multiline':False]['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':3,'multiline':False]['text':' you may not use this file except in compliance with the License.','line_number':4,'multiline':False]['text':' You may obtain a copy of the License at','line_number':5,'multiline':False]['text':'','line_number':6,'multiline':False]['text':'    http://www.apache.org/licenses/LICENSE-2.0','line_number':7,'multiline':False]['text':'','line_number':8,'multiline':False]['text':' Unless required by applicable law or agreed to in writing, software','line_number':9,'multiline':False]['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':10,'multiline':False]['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':11,'multiline':False]['text':' See the License for the specific language governing permissions and','line_number':12,'multiline':False]['text':' limitations under the License.','line_number':13,'multiline':False]['text':'* Helper class for tests that evaluate Starlark code. ','line_number':29,'multiline':True]['text':' TODO(adonovan): simplify this class out of existence.','line_number':30,'multiline':False]['text':' Most of its callers should be using the script-based test harness in net.starlark.java.eval.','line_number':31,'multiline':False]['text':' TODO(adonovan): extended only by StarlarkFlagGuardingTest; specialize that one test instead.','line_number':32,'multiline':False]['text':' created lazily by getStarlarkThread','line_number':36,'multiline':False]['text':' created lazily by getModule','line_number':37,'multiline':False]['text':'*
   * Updates the semantics used to filter predeclared bindings, and carried by subsequently created
   * threads. Causes a new StarlarkThread and Module to be created when next needed.
   ','line_number':39,'multiline':True]['text':' Re-initialize the thread and module with the new semantics when needed.','line_number':46,'multiline':False]['text':' TODO(adonovan): don't let subclasses inherit vaguely specified "helpers".','line_number':51,'multiline':False]['text':' Separate all the tests clearly into tests of the scanner, parser, resolver,','line_number':52,'multiline':False]['text':' and evaluation.','line_number':53,'multiline':False]['text':'* Updates a global binding in the module. ','line_number':55,'multiline':True]['text':' TODO(adonovan): rename setGlobal.','line_number':56,'multiline':False]['text':'* Returns the value of a global binding in the module. ','line_number':63,'multiline':True]['text':' TODO(adonovan): rename getGlobal.','line_number':64,'multiline':False]['text':'* Joins the lines, parses them as an expression, and evaluates it. ','line_number':69,'multiline':True]['text':'* Joins the lines, parses them as a file, and executes it. ','line_number':75,'multiline':True]['text':' A hook for subclasses to alter the created module.','line_number':82,'multiline':False]['text':' Implementations may add to the predeclared environment,','line_number':83,'multiline':False]['text':' and return the module's client data value.','line_number':84,'multiline':False]['text':' TODO(adonovan): only used in StarlarkFlagGuardingTest; move there.','line_number':85,'multiline':False]['text':' no client data','line_number':87,'multiline':False]['text':' see StarlarkFlagGuardingTest','line_number':101,'multiline':False]['text':'*
   * Verifies that a piece of Starlark code fails at the specified location with either a {@link
   * SyntaxError} or an {@link EvalException} having the specified error message.
   *
   * <p>For a {@link SyntaxError}, the location checked is the first reported error's location. For
   * an {@link EvalException}, the location checked is the location of the innermost stack frame.
   *
   * @param failingLine 1-based line where the error is expected
   * @param failingColumn 1-based column where the error is expected.
   ','line_number':116,'multiline':True]['text':'* Encapsulates a separate test which can be executed by a Scenario. ','line_number':162,'multiline':True]['text':'*
   * A test scenario (a script of steps). Beware: Scenario is an inner class that mutates its
   * enclosing EvaluationTestCase as it executes the script.
   ','line_number':167,'multiline':True]['text':'* Allows the execution of several statements before each following test. ','line_number':188,'multiline':True]['text':'*
     * Allows the update of the specified variable before each following test
     *
     * @param name The name of the variable that should be updated
     * @param value The new value of the variable
     * @return This {@code Scenario}
     ','line_number':195,'multiline':True]['text':'*
     * Evaluates two expressions and asserts that their results are equal.
     *
     * @param src The source expression to be evaluated
     * @param expectedEvalString The expression of the expected result
     * @return This {@code Scenario}
     * @throws Exception
     ','line_number':208,'multiline':True]['text':'* Evaluates an expression and compares its result to the expected object. ','line_number':222,'multiline':True]['text':'* Evaluates an expression and compares its result to the ordered list of expected objects. ','line_number':229,'multiline':True]['text':'* Evaluates an expression and checks whether it fails with the expected error. ','line_number':236,'multiline':True]['text':'*
     * Evaluates an expression and checks whether it fails with the expected error at the expected
     * location.
     *
     * <p>See {@link #checkEvalErrorAtLocation} for how an error's location is determined.
     *
     * @param failingLine 1-based line where the error is expected.
     * @param failingColumn 1-based column where the error is expected.
     ','line_number':243,'multiline':True]['text':'* Evaluates the expresson and checks whether it fails with the expected error. ','line_number':260,'multiline':True]['text':'* Looks up the value of the specified variable and compares it to the expected value. ','line_number':267,'multiline':True]['text':'*
     * Creates a Testable that checks whether the evaluation of the given expression fails with the
     * expected error.
     *
     * @param exactMatch whether the error message must be identical to the expected error.
     ','line_number':274,'multiline':True]['text':'*
     * Creates a Testable that checks whether the evaluation of the given expression fails with the
     * expected evaluation error in the expected location.
     *
     * <p>See {@link #checkEvalErrorAtLocation} for how an error's location is determined.
     *
     * @param failingLine 1-based line where the error is expected.
     * @param failingColumn 1-based column where the error is expected.
     ','line_number':294,'multiline':True]['text':'*
     * Creates a Testable that checks whether the value of the expression is a sequence containing
     * the expected elements.
     ','line_number':313,'multiline':True]['text':'*
     * Creates a testable that compares the value of the expression to a specified result.
     *
     * @param src The expression to be evaluated
     * @param expected Either the expected object or an expression whose evaluation leads to the
     *     expected object
     * @param expectedIsExpression Signals whether {@code expected} is an object or an expression
     * @return An instance of Testable that runs the comparison
     ','line_number':326,'multiline':True]['text':' We could also print the actual object and compare the string to the expected','line_number':343,'multiline':False]['text':' expression, but then the order of elements would matter.','line_number':344,'multiline':False]['text':'*
     * Creates a Testable that looks up the given variable and compares its value to the expected
     * value
     *
     * @param name
     * @param expected
     * @return An instance of Testable that does both lookup and comparison
     ','line_number':354,'multiline':True]['text':'*
     * Executes the given Testable
     * @param testable
     * @throws Exception
     ','line_number':371,'multiline':True]['text':'*
   * A simple decorator that allows the execution of setup actions before running a {@code Testable}
   ','line_number':381,'multiline':True]['text':'*
     * Executes all stored actions and updates plus the actual {@code Testable}
     ','line_number':393,'multiline':True]['text':'* A container for collection actions that should be executed before a test ','line_number':403,'multiline':True]['text':'*
     * Registers an update to a module variable to be bound before a test
     *
     * @param name
     * @param value
     ','line_number':411,'multiline':True]['text':'* Registers a sequence of statements for execution prior to a test. ','line_number':427,'multiline':True]['text':'*
     * Executes all stored actions and updates
     *
     * @throws Exception
     ','line_number':438,'multiline':True]