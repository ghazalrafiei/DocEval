['text':'!/bin/bash -eu','line_number':1,'multiline':False]['text':'','line_number':2,'multiline':False]['text':' Copyright 2018 The Bazel Authors. All rights reserved.','line_number':3,'multiline':False]['text':'','line_number':4,'multiline':False]['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':5,'multiline':False]['text':' you may not use this file except in compliance with the License.','line_number':6,'multiline':False]['text':' You may obtain a copy of the License at','line_number':7,'multiline':False]['text':'','line_number':8,'multiline':False]['text':'    http://www.apache.org/licenses/LICENSE-2.0','line_number':9,'multiline':False]['text':'','line_number':10,'multiline':False]['text':' Unless required by applicable law or agreed to in writing, software','line_number':11,'multiline':False]['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':12,'multiline':False]['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':13,'multiline':False]['text':' See the License for the specific language governing permissions and','line_number':14,'multiline':False]['text':' limitations under the License.','line_number':15,'multiline':False]['text':' Unit tests for tools/test/collect_cc_code_coverage.sh','line_number':17,'multiline':False]['text':' Load the test setup defined in the parent directory','line_number':19,'multiline':False]['text':' Check if all the tools required by CC coverage are installed.','line_number':26,'multiline':False]['text':' These are the variables needed by tools/test/collect_cc_coverage.sh','line_number':30,'multiline':False]['text':' They will be properly sub-shelled when invoking the script.','line_number':31,'multiline':False]['text':' Directory containing gcno and gcda files.','line_number':33,'multiline':False]['text':' Location of gcov.','line_number':35,'multiline':False]['text':' Location from where the code coverage collection was invoked.','line_number':37,'multiline':False]['text':' Location of the instrumented file manifest.','line_number':39,'multiline':False]['text':' Path to the canonical C++ coverage script.','line_number':42,'multiline':False]['text':' Return a string in the form "device_id%inode" for a given file.','line_number':45,'multiline':False]['text':'','line_number':46,'multiline':False]['text':' Checking if two files have the same deviceID and inode is enough to','line_number':47,'multiline':False]['text':' determine if they are the same. For more details about inodes see','line_number':48,'multiline':False]['text':' http://www.grymoire.com/Unix/Inodes.html.','line_number':49,'multiline':False]['text':'','line_number':50,'multiline':False]['text':' - file   The absolute path of the file.','line_number':51,'multiline':False]['text':' Setup to be run for every test.','line_number':57,'multiline':False]['text':' COVERAGE_DIR has to be different than ROOT and PWD for the test to be','line_number':61,'multiline':False]['text':' accurate.','line_number':62,'multiline':False]['text':' The script expects gcov to be at $COVERAGE_GCOV_PATH.','line_number':69,'multiline':False]['text':' Create the CC sources.','line_number':73,'multiline':False]['text':'include "a.h"','line_number':81,'multiline':False]['text':'include "b.h"','line_number':82,'multiline':False]['text':'include <stdio.h>','line_number':118,'multiline':False]['text':'include "a.h"','line_number':119,'multiline':False]['text':'include "different/a.h"','line_number':120,'multiline':False]['text':' Even though gcov expects the gcda files to be next to the gcno files,','line_number':139,'multiline':False]['text':' during Bazel execution this will not be the case. collect_cc_coverage.sh','line_number':140,'multiline':False]['text':' expects them to be in the COVERAGE_DIR and will move the gcno files itself.','line_number':141,'multiline':False]['text':' We cannot use -fprofile-dir during compilation because this causes the','line_number':142,'multiline':False]['text':' filenames to undergo mangling; see','line_number':143,'multiline':False]['text':' https://github.com/bazelbuild/bazel/issues/16229','line_number':144,'multiline':False]['text':' All generated .gcno files need to be in the manifest otherwise','line_number':150,'multiline':False]['text':' the coverage report will be incomplete.','line_number':151,'multiline':False]['text':' Generates and executes an instrumented binary:','line_number':157,'multiline':False]['text':'','line_number':158,'multiline':False]['text':' Reads the list of source files along with object files paths. Uses them','line_number':159,'multiline':False]['text':' to produce object files and link them to an instrumented binary using g++.','line_number':160,'multiline':False]['text':' This step also generates the notes (.gcno) files.','line_number':161,'multiline':False]['text':'','line_number':162,'multiline':False]['text':' Executes the instrumented binary. This step also generates the','line_number':163,'multiline':False]['text':' profile data (.gcda) files.','line_number':164,'multiline':False]['text':'','line_number':165,'multiline':False]['text':' - [(source_file, object_file),...] - source files and object file paths','line_number':166,'multiline':False]['text':' - path_to_binary destination of the binary produced by g++','line_number':167,'multiline':False]['text':' -ge 2 ]]; do','line_number':173,'multiline':False]['text':' Asserts if coverage result in gcov format for coverage_srcs/a.cc is included','line_number':193,'multiline':False]['text':' in the given output file.','line_number':194,'multiline':False]['text':'','line_number':195,'multiline':False]['text':' - output_file    The location of the coverage output file.','line_number':196,'multiline':False]['text':' The expected coverage result for coverage_srcs/a.cc in gcov format.','line_number':200,'multiline':False]['text':' Asserts if coverage result in gcov format for coverage_srcs/t.cc is included','line_number':211,'multiline':False]['text':' in the given output file.','line_number':212,'multiline':False]['text':'','line_number':213,'multiline':False]['text':' - output_file    The location of the coverage output file.','line_number':214,'multiline':False]['text':' The expected coverage result for coverage_srcs/t.cc in gcov format.','line_number':218,'multiline':False]['text':' The expected coverage result for coverage_srcs/b.h in gcov format.','line_number':231,'multiline':False]['text':' The expected coverage result for coverage_srcs/different/a.cc in gcov format.','line_number':244,'multiline':False]['text':' The expected coverage result for coverage_srcs/a.cc in gcov format.','line_number':257,'multiline':False]['text':' Asserts if coverage result in gcov format for coverage_srcs/t.cc is included','line_number':266,'multiline':False]['text':' in the given output file.','line_number':267,'multiline':False]['text':'','line_number':268,'multiline':False]['text':' - output_file    The location of the coverage output file.','line_number':269,'multiline':False]['text':' The expected coverage result for coverage_srcs/t.cc in gcov format.','line_number':273,'multiline':False]['text':' The expected coverage result for coverage_srcs/b.h in gcov format.','line_number':284,'multiline':False]['text':' The expected coverage result for coverage_srcs/different/a.cc in gcov format.','line_number':295,'multiline':False]['text':' gcov -v | grep "gcov" outputs a line that looks like this:','line_number':307,'multiline':False]['text':' gcov (Debian 7.3.0-5) 7.3.0','line_number':308,'multiline':False]['text':' Location of the output file of the C++ coverage script when gcov is used.','line_number':320,'multiline':False]['text':' If the file _cc_coverge.gcov does not exist, it means we are using gcc 9','line_number':323,'multiline':False]['text':' or higher which uses json.gz files as intermediate format. We will keep','line_number':324,'multiline':False]['text':' testing gcc 7 and 8 until most users have migrated.','line_number':325,'multiline':False]['text':' Assert that the coverage output file contains the coverage data for the','line_number':327,'multiline':False]['text':' two cc files: coverage_srcs/a.cc and coverage_srcs/t.cc.','line_number':328,'multiline':False]['text':' The result for each source file must be asserted separately because the','line_number':329,'multiline':False]['text':' coverage gcov does not guarantee any particular order.','line_number':330,'multiline':False]['text':' The order can differ for example based on OS or version. The source files','line_number':331,'multiline':False]['text':' order in the coverage report is not relevant.','line_number':332,'multiline':False]['text':' This assertion is needed to make sure no other source files are included','line_number':338,'multiline':False]['text':' in the output file.','line_number':339,'multiline':False]['text':' There may or may not be "gcda" in the extension.','line_number':346,'multiline':False]['text':' Remove all branch information from the json.','line_number':361,'multiline':False]['text':' We disable branch coverage for gcov 7 and it is easier to remove it','line_number':362,'multiline':False]['text':' than it is to put it back.','line_number':363,'multiline':False]['text':' Replace "branches": [..] with "branches": [] - (non-empty [..])','line_number':364,'multiline':False]