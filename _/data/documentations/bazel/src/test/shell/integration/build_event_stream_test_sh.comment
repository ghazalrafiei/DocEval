['text':'!/bin/bash','line_number':1,'multiline':False]['text':'','line_number':2,'multiline':False]['text':' Copyright 2016 The Bazel Authors. All rights reserved.','line_number':3,'multiline':False]['text':'','line_number':4,'multiline':False]['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':5,'multiline':False]['text':' you may not use this file except in compliance with the License.','line_number':6,'multiline':False]['text':' You may obtain a copy of the License at','line_number':7,'multiline':False]['text':'','line_number':8,'multiline':False]['text':'    http://www.apache.org/licenses/LICENSE-2.0','line_number':9,'multiline':False]['text':'','line_number':10,'multiline':False]['text':' Unless required by applicable law or agreed to in writing, software','line_number':11,'multiline':False]['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':12,'multiline':False]['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':13,'multiline':False]['text':' See the License for the specific language governing permissions and','line_number':14,'multiline':False]['text':' limitations under the License.','line_number':15,'multiline':False]['text':' Load the test setup defined in the parent directory','line_number':17,'multiline':False]['text':'### SETUP #############################################################','line_number':24,'multiline':False]['text':'!/bin/sh','line_number':34,'multiline':False]['text':'!/bin/sh','line_number':40,'multiline':False]['text':'!/bin/sh','line_number':46,'multiline':False]['text':' only matches "out2.txt"','line_number':160,'multiline':False]['text':'!/bin/sh','line_number':188,'multiline':False]['text':'### TESTS #############################################################','line_number':319,'multiline':False]['text':' Basic properties of the event stream','line_number':322,'multiline':False]['text':' - a completed target explicitly requested should be reported','line_number':323,'multiline':False]['text':' - after success the stream should close naturally, without any','line_number':324,'multiline':False]['text':'   reports about aborted events','line_number':325,'multiline':False]['text':' - the command line is reported in structured and unstructured form','line_number':326,'multiline':False]['text':' - the target_kind is reported','line_number':327,'multiline':False]['text':' - for single-configuration builds, there is precisely one configuration','line_number':328,'multiline':False]['text':'   event reported; also make variables are shown','line_number':329,'multiline':False]['text':' Command line','line_number':333,'multiline':False]['text':' Options parsed. Since cmd_line lines are a substring of the equivalent','line_number':340,'multiline':False]['text':' explicit_cmd_line lines, we expect 2 instances for these.','line_number':341,'multiline':False]['text':' Structured command line. Expect the explicit flags to appear twice,','line_number':348,'multiline':False]['text':' in the canonical and original command lines. We did not pass a tool','line_number':349,'multiline':False]['text':' command line, but still expect an empty report.','line_number':350,'multiline':False]['text':' too vague to count.','line_number':357,'multiline':False]['text':' Build Finished','line_number':370,'multiline':False]['text':' Target kind for the sh_test','line_number':378,'multiline':False]['text':' Test size should be reported','line_number':381,'multiline':False]['text':' Configuration reported with make variables','line_number':384,'multiline':False]['text':' Verify that certain information is present in the log as part of','line_number':390,'multiline':False]['text':' the TargetConfigured event (verifying that it comes at least before','line_number':391,'multiline':False]['text':' the first TargetCompleted event, which is fine, if we only ask for','line_number':392,'multiline':False]['text':' a single target).','line_number':393,'multiline':False]['text':' ...same true when running a test suite containing that test','line_number':444,'multiline':False]['text':' Requesting a test, we expect','line_number':457,'multiline':False]['text':' - precisely one test summary (for the single test we run)','line_number':458,'multiline':False]['text':' - that is properly chained (no additional progress events)','line_number':459,'multiline':False]['text':' - the correct overall status being reported','line_number':460,'multiline':False]['text':' Requesting a test, we expect','line_number':483,'multiline':False]['text':' - precisely one test summary (for the single test we run)','line_number':484,'multiline':False]['text':' - that is properly chained (no additional progress events)','line_number':485,'multiline':False]['text':' Run a failing test declared as flaky.','line_number':499,'multiline':False]['text':' We expect to see 3 attempts to happen, and also find the 3 xml files','line_number':500,'multiline':False]['text':' mentioned in the stream.','line_number':501,'multiline':False]['text':' Moreover, as the test consistently fails, we expect the overall status','line_number':502,'multiline':False]['text':' to be reported as failure.','line_number':503,'multiline':False]['text':'!/bin/sh','line_number':531,'multiline':False]['text':'!/bin/sh','line_number':551,'multiline':False]['text':' Verify that the start time of a test is reported, regardless whether','line_number':580,'multiline':False]['text':' it was cached or not.','line_number':581,'multiline':False]['text':' Check individual test attempts. Even in more complicated','line_number':594,'multiline':False]['text':' situations, with some test rerun and some not, all events are properly','line_number':595,'multiline':False]['text':' announced by the test actions (and not chained into the progress events).','line_number':596,'multiline':False]['text':' Check individual test attempts. Even in more complicated','line_number':606,'multiline':False]['text':' situations, with some test rerun and some not, all events are properly','line_number':607,'multiline':False]['text':' announced by the test actions (and not chained into the progress events).','line_number':608,'multiline':False]['text':' Verify that both, clean and cached test results are reported correctly,','line_number':618,'multiline':False]['text':' including the appropriate reference to log files.','line_number':619,'multiline':False]['text':' verify that normal successful actions are not reported, but extra actions','line_number':681,'multiline':False]['text':' are','line_number':682,'multiline':False]['text':' Action ids should contain label and configuration if those exist.','line_number':700,'multiline':False]['text':' Assumes action_completed id is 6 lines long','line_number':701,'multiline':False]['text':' In outputgroups/rules.bzl, the `my_rule` definition defines four output','line_number':713,'multiline':False]['text':' groups with different (successful/failed) action counts:','line_number':714,'multiline':False]['text':'    1. foo_outputs (1 successful/1 failed)','line_number':715,'multiline':False]['text':'    2. bar_outputs (6/0)','line_number':716,'multiline':False]['text':'    3. baz_outputs (0/1)','line_number':717,'multiline':False]['text':'    4. skip_outputs (1/0)','line_number':718,'multiline':False]['text':'    5. _validation implicit with --experimental_run_validations (1/0)','line_number':719,'multiline':False]['text':'','line_number':720,'multiline':False]['text':' We request the first three output groups and expect foo_outputs and','line_number':721,'multiline':False]['text':' bar_outputs to appear in BEP, because both groups have at least one','line_number':722,'multiline':False]['text':' successful action.','line_number':723,'multiline':False]['text':' Verify that a URI is produced for foo's successful action's output but not','line_number':738,'multiline':False]['text':' its failed action's output.','line_number':739,'multiline':False]['text':' Verify that a URI is produced for all of bar's successful actions' outputs.','line_number':742,'multiline':False]['text':' Verify that nested NamedSetOfFiles structure is preserved in BEP.','line_number':746,'multiline':False]['text':' validation outputs shouldn't appear in BEP','line_number':755,'multiline':False]['text':' Successful and failed action start/end times should be present and take','line_number':780,'multiline':False]['text':' place after the year 1999.','line_number':781,'multiline':False]['text':' target completes due to -k','line_number':841,'multiline':False]['text':' One "aborted" for failed aspect analysis, another for target_summary_id','line_number':842,'multiline':False]['text':' announced by "completed" event asserted above','line_number':843,'multiline':False]['text':' no summary due to analysis failure','line_number':845,'multiline':False]['text':' In outputgroups/rules.bzl, the `my_rule` definition defines four output','line_number':849,'multiline':False]['text':' groups with different (successful/failed) action counts:','line_number':850,'multiline':False]['text':'    1. foo_outputs (1 successful/1 failed)','line_number':851,'multiline':False]['text':'    2. bar_outputs (6/0)','line_number':852,'multiline':False]['text':'    3. baz_outputs (0/1)','line_number':853,'multiline':False]['text':'    4. skip_outputs (1/0)','line_number':854,'multiline':False]['text':'    5. _validation implicit with --experimental_run_validations (1/0)','line_number':855,'multiline':False]['text':'','line_number':856,'multiline':False]['text':' We request the first two output groups and expect only bar_outputs to','line_number':857,'multiline':False]['text':' appear in BEP, because all actions contributing to bar_outputs succeeded.','line_number':858,'multiline':False]['text':'','line_number':859,'multiline':False]['text':' Similarly, in semifailingaspect.bzl, the `semifailing_aspect` definition','line_number':860,'multiline':False]['text':' defines two output groups: good-aspect-out and bad-aspect-out. We only','line_number':861,'multiline':False]['text':' expect to see good-aspect-out in BEP because its actions all succeeded.','line_number':862,'multiline':False]['text':' Verify that a URI is produced for foo's successful action's output but not','line_number':878,'multiline':False]['text':' its failed action's output.','line_number':879,'multiline':False]['text':' Validation outputs shouldn't appear in BEP (incl. no output group)','line_number':897,'multiline':False]['text':' When building but not testing a test, there won't be a test summary','line_number':903,'multiline':False]['text':' (as nothing was tested), so it should not be announced.','line_number':904,'multiline':False]['text':' Still, no event should only be chained in by progress events.','line_number':905,'multiline':False]['text':' Build Finished','line_number':912,'multiline':False]['text':' We expect the "help" command to not generate a build-event stream,','line_number':921,'multiline':False]['text':' but the "build" command to do.','line_number':922,'multiline':False]['text':' Verifies usage of multiple build event transports at the same time','line_number':933,'multiline':False]['text':' Verify that the json transport writes json files','line_number':946,'multiline':False]['text':' check for some typical fragments that would be encoded differently in the','line_number':949,'multiline':False]['text':' proto text format.','line_number':950,'multiline':False]['text':' We expect precisely one action being reported (the failed one) and','line_number':960,'multiline':False]['text':' precisely on report on a completed target; moreover, the action has','line_number':961,'multiline':False]['text':' to be reported first.','line_number':962,'multiline':False]['text':' We expect precisely one action being reported (the failed one) and','line_number':979,'multiline':False]['text':' precisely on report on a completed target; moreover, the action has','line_number':980,'multiline':False]['text':' to be reported first.','line_number':981,'multiline':False]['text':' Verify that the expected configurations for actions are reported.','line_number':999,'multiline':False]['text':' Expect the following configurations:','line_number':1000,'multiline':False]['text':' 1. The top-level target configuration','line_number':1001,'multiline':False]['text':' 2. Host configuration (since example contains transition to host).','line_number':1002,'multiline':False]['text':' 3. Trimmed top-level target configuration (since non-test rule).','line_number':1003,'multiline':False]['text':' As the action fails, we expect the configuration of the action to be','line_number':1004,'multiline':False]['text':' reported as well.','line_number':1005,'multiline':False]['text':' TODO(blaze-configurability-team): remove explicit trim_test_configuration','line_number':1006,'multiline':False]['text':' once it is (very soon) default true.','line_number':1007,'multiline':False]['text':' Verify that if loading fails, this is properly reported as the','line_number':1015,'multiline':False]['text':' reason for the target expansion event not resulting in targets','line_number':1016,'multiline':False]['text':' being expanded.','line_number':1017,'multiline':False]['text':' The same should hold true, if the server has already analyzed the target','line_number':1037,'multiline':False]['text':' verify that an indirect visibility error is reported, including the','line_number':1050,'multiline':False]['text':' target that violates visibility constraints.','line_number':1051,'multiline':False]['text':' There should be precisely one event with target_configured as event id type','line_number':1057,'multiline':False]['text':' We don't expect an expanded message in this case, since all patterns failed.','line_number':1079,'multiline':False]['text':' TODO(aehlig): readd, once we stop reporting the important artifacts','line_number':1096,'multiline':False]['text':'               for every target completion','line_number':1097,'multiline':False]['text':'','line_number':1098,'multiline':False]['text':' function test_artifact_dedup() {','line_number':1099,'multiline':False]['text':'   bazel build --build_event_text_file=$TEST_log \','line_number':1100,'multiline':False]['text':'       pkg:innergroup pkg:outergroup \','line_number':1101,'multiline':False]['text':'   || fail "bazel build failed"','line_number':1102,'multiline':False]['text':'   expect_log_once "name.*sourcefileA"','line_number':1103,'multiline':False]['text':'   expect_log_once "name.*sourcefileB"','line_number':1104,'multiline':False]['text':'   expect_log_once "name.*sourcefileC"','line_number':1105,'multiline':False]['text':'   expect_not_log 'aborted'','line_number':1106,'multiline':False]['text':' }','line_number':1107,'multiline':False]['text':' Verify that bazel's stdout/stderr is included in the build event stream.','line_number':1110,'multiline':False]['text':' Make sure we generate enough output on stderr','line_number':1112,'multiline':False]['text':' Take a line that is likely not the output of an action (possibly reported','line_number':1116,'multiline':False]['text':' independently in the stream) and still characteristic enough to not occur','line_number':1117,'multiline':False]['text':' in the stream by accident. Taking the first line mentioning the test name','line_number':1118,'multiline':False]['text':' is likely some form of progress report.','line_number':1119,'multiline':False]['text':' Verify that the option --bes_outerr_buffer_size ensures that messages are','line_number':1126,'multiline':False]['text':' flushed out to the BEP immediately','line_number':1127,'multiline':False]['text':' As we requested no buffereing, each action output has to be reported','line_number':1132,'multiline':False]['text':' immediately, creating an individual progress event.','line_number':1133,'multiline':False]['text':' Even if the build target is a source file, the stream should be correctly','line_number':1138,'multiline':False]['text':' and bazel shouldn't crash.','line_number':1139,'multiline':False]['text':' no test_summary events or references to them','line_number':1153,'multiline':False]['text':' no test_summary events or references to them','line_number':1168,'multiline':False]['text':' If alias:it would be reported as the underlying alias/actual:it, then','line_number':1205,'multiline':False]['text':' there would be no event for alias:it. So we can check the correct reporting','line_number':1206,'multiline':False]['text':' by checking for aborted events.','line_number':1207,'multiline':False]['text':' There should be precisely one event with target_completed as event id type','line_number':1254,'multiline':False]['text':' Moreover, we expect precisely one event identified by an unconfigured label','line_number':1258,'multiline':False]['text':' There should be precisely two events with target_completed as event id type','line_number':1264,'multiline':False]['text':' Moreover, we expect precisely one event identified by an unconfigured label','line_number':1268,'multiline':False]['text':' Check the arglist','line_number':1277,'multiline':False]['text':' Structured command line. Expect the explicit flags to appear twice,','line_number':1281,'multiline':False]['text':' in the canonical and original command lines','line_number':1282,'multiline':False]['text':' Expect the actual tool command line flag to appear twice, because of the two','line_number':1287,'multiline':False]['text':' bazel command lines that are reported','line_number':1288,'multiline':False]['text':' Check the contents of the tool command line','line_number':1293,'multiline':False]['text':' Depending on a hard-coded index is a bit brittle, but 0 should be the index','line_number':1433,'multiline':False]['text':' of the top-level nested set at least.','line_number':1434,'multiline':False]['text':' Strip newlines. BSD grep doesn't support -z, so use tr first.','line_number':1435,'multiline':False]['text':' Non-zero used heap size.','line_number':1446,'multiline':False]['text':' Do an initial invocation to get Bazel to load packages necessary for','line_number':1455,'multiline':False]['text':' toolchain resolution and also the //external package. This way we don't need','line_number':1456,'multiline':False]['text':' to bother making careful assertions about these packages in our actual test','line_number':1457,'multiline':False]['text':' logic below.','line_number':1458,'multiline':False]['text':' We use 3 different sorts of package loading errors to exercise different','line_number':1477,'multiline':False]['text':' parts of the code...','line_number':1478,'multiline':False]['text':'','line_number':1479,'multiline':False]['text':' ... for this sort of BUILD file, PackageFunction notices the illegal load','line_number':1480,'multiline':False]['text':' statement after parsing the file and doesn't proceed to BUILD file','line_number':1481,'multiline':False]['text':' evaluation. It then throws a Skyframe error.','line_number':1482,'multiline':False]['text':' ... for this sort of BUILD file, PackageFunction notices the illegal syntax','line_number':1486,'multiline':False]['text':' after parsing the BUILD file and doesn't proceed to BUILD file evaluation.','line_number':1487,'multiline':False]['text':' But it doesn't throw a Skyframe error (instead, it returns a PackageValue','line_number':1488,'multiline':False]['text':' that has an errorful Package).','line_number':1489,'multiline':False]['text':' ... for this sort of BUILD file, PackageFunction parses it successfully and','line_number':1493,'multiline':False]['text':' then evaluates it. PackageFunction then encounters the evaluation error and','line_number':1494,'multiline':False]['text':' returns a PackageValue that has an errorful Package.','line_number':1495,'multiline':False]['text':' On this invocation, Bazel attempts to load exactly 5 packages.','line_number':1517,'multiline':False]['text':' This package is attempted to be loaded during the target parsing phase.','line_number':1519,'multiline':False]['text':' This package is attempted to be loaded during the target parsing phase.','line_number':1521,'multiline':False]['text':' This package is attempted to be loaded during the target parsing phase.','line_number':1523,'multiline':False]['text':' This package is attempted to be loaded during the target parsing phase.','line_number':1525,'multiline':False]['text':' This package is attempted to be loaded while traversing the dep edge','line_number':1527,'multiline':False]['text':' //successful:successful -> //dep-of-successful:dep during the analysis','line_number':1528,'multiline':False]['text':' phase.','line_number':1529,'multiline':False]['text':' In contrast, the metric in the BEP counts only successfully loaded packages','line_number':1533,'multiline':False]['text':' Of the 5 packages that are attempted to be loaded, 2 were successful:','line_number':1534,'multiline':False]['text':'   * //successful','line_number':1535,'multiline':False]['text':'   * //dep-of-successful','line_number':1536,'multiline':False]