['text':'!/bin/bash','line_number':1,'multiline':False]['text':'','line_number':2,'multiline':False]['text':' Copyright 2015 The Bazel Authors. All rights reserved.','line_number':3,'multiline':False]['text':'','line_number':4,'multiline':False]['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':5,'multiline':False]['text':' you may not use this file except in compliance with the License.','line_number':6,'multiline':False]['text':' You may obtain a copy of the License at','line_number':7,'multiline':False]['text':'','line_number':8,'multiline':False]['text':'    http://www.apache.org/licenses/LICENSE-2.0','line_number':9,'multiline':False]['text':'','line_number':10,'multiline':False]['text':' Unless required by applicable law or agreed to in writing, software','line_number':11,'multiline':False]['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':12,'multiline':False]['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':13,'multiline':False]['text':' See the License for the specific language governing permissions and','line_number':14,'multiline':False]['text':' limitations under the License.','line_number':15,'multiline':False]['text':'','line_number':16,'multiline':False]['text':' An end-to-end test that Bazel produces runfiles trees as expected.','line_number':17,'multiline':False]['text':' --- begin runfiles.bash initialization ---','line_number':19,'multiline':False]['text':' Copy-pasted from Bazel's Bash runfiles library (tools/bash/runfiles/runfiles.bash).','line_number':20,'multiline':False]['text':' --- end runfiles.bash initialization ---','line_number':40,'multiline':False]['text':' We disable Python toolchains in EXTRA_BUILD_FLAGS because it throws off the','line_number':56,'multiline':False]['text':' counts and manifest checks in test_foo_runfiles.','line_number':57,'multiline':False]['text':' TODO(#8169): Update this test and remove the toolchain opt-out.','line_number':58,'multiline':False]['text':'### SETUP #############################################################','line_number':70,'multiline':False]['text':' This is basically a cross-platform version of `find -printf '%n %y %Y'`.','line_number':89,'multiline':False]['text':' i.e. recursively print paths, their raw file type, and for symbolic links,','line_number':90,'multiline':False]['text':' the type of file the link points to.','line_number':91,'multiline':False]['text':' Macs don't support `find -printf`, and stat, readlink etc all have different','line_number':92,'multiline':False]['text':' args and format specifiers. Basic bash works fine, though.','line_number':93,'multiline':False]['text':' The various special file types shouldn't occur in practice, so just','line_number':106,'multiline':False]['text':' call them unknown','line_number':107,'multiline':False]['text':'### TESTS #############################################################','line_number':114,'multiline':False]['text':' Must be executable to trigger the obscured runfile check','line_number':133,'multiline':False]['text':' we get a warning that hidden.txt is inaccessible','line_number':147,'multiline':False]['text':' workaround until we use assert/fail macros in the tests below','line_number':182,'multiline':False]['text':' output manifest exists and is non-empty','line_number':185,'multiline':False]['text':' these are real empty files','line_number':194,'multiline':False]['text':' These are basically tuples of (path filetype)','line_number':201,'multiline':False]['text':' For shell binary and python binary, we build both `bin` and `bin.exe`,','line_number':228,'multiline':False]['text':' but on Linux we only build `bin`.','line_number':229,'multiline':False]['text':' Sort and delete empty lines. This makes it easier to append to the','line_number':237,'multiline':False]['text':' expected string and not have to worry about stray newlines from shell','line_number':238,'multiline':False]['text':' commands and quoting.','line_number':239,'multiline':False]['text':' The manifest only records files and symlinks, not real directories','line_number':244,'multiline':False]['text':' that accounts for everything','line_number':250,'multiline':False]['text':' Add the repo mapping manifest entry for Bazel.','line_number':266,'multiline':False]['text':' Rebuild the same target with a new dependency.','line_number':280,'multiline':False]['text':' workaround until we use assert/fail macros in the tests below','line_number':291,'multiline':False]['text':' output manifest exists and is non-empty','line_number':294,'multiline':False]['text':' these are real directories','line_number':300,'multiline':False]['text':' these directory should not exist anymore','line_number':304,'multiline':False]['text':' these are symlinks to the source tree','line_number':316,'multiline':False]['text':' that accounts for everything','line_number':322,'multiline':False]['text':' For shell binary, we build both `bin` and `bin.exe`, but on Linux we only build `bin`','line_number':324,'multiline':False]['text':' That's why we have one more symlink on Windows.','line_number':325,'multiline':False]['text':' Add the repo mapping manifest entry for Bazel.','line_number':363,'multiline':False]['text':' TODO(b/174761497): Re-enable the test outside of Bazel.','line_number':379,'multiline':False]['text':' Rewrite the workspace name but leave the rest of WORKSPACE alone.','line_number':382,'multiline':False]['text':' Change workspace name to bar.','line_number':398,'multiline':False]['text':' regression test for b/237547165','line_number':406,'multiline':False]['text':' Build once to create a runfiles directory.','line_number':493,'multiline':False]['text':' Remove the MANIFEST file that was created by the previous build.','line_number':496,'multiline':False]['text':' Create an inaccessible file in the place where build-runfiles writes','line_number':497,'multiline':False]['text':' its temporary results.','line_number':498,'multiline':False]['text':'','line_number':499,'multiline':False]['text':' This simulates the case where the runfiles creation process is','line_number':500,'multiline':False]['text':' interrupted and leaves the temporary file behind. The temporary file','line_number':501,'multiline':False]['text':' may become read-only if it was stored in a snapshot.','line_number':502,'multiline':False]['text':' Even with the inaccessible temporary file in place, build-runfiles','line_number':507,'multiline':False]['text':' should complete successfully. The MANIFEST file should be recreated.','line_number':508,'multiline':False]