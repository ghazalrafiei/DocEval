['text':'!/bin/bash','line_number':1,'multiline':False]['text':'','line_number':2,'multiline':False]['text':' Copyright 2019 The Bazel Authors. All rights reserved.','line_number':3,'multiline':False]['text':'','line_number':4,'multiline':False]['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':5,'multiline':False]['text':' you may not use this file except in compliance with the License.','line_number':6,'multiline':False]['text':' You may obtain a copy of the License at','line_number':7,'multiline':False]['text':'','line_number':8,'multiline':False]['text':'    http://www.apache.org/licenses/LICENSE-2.0','line_number':9,'multiline':False]['text':'','line_number':10,'multiline':False]['text':' Unless required by applicable law or agreed to in writing, software','line_number':11,'multiline':False]['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':12,'multiline':False]['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':13,'multiline':False]['text':' See the License for the specific language governing permissions and','line_number':14,'multiline':False]['text':' limitations under the License.','line_number':15,'multiline':False]['text':'','line_number':16,'multiline':False]['text':' Test sandboxing spawn strategy','line_number':17,'multiline':False]['text':'','line_number':18,'multiline':False]['text':' Load the test setup defined in the parent directory','line_number':22,'multiline':False]['text':' Disallow some common messages we might see during a crash.','line_number':108,'multiline':False]['text':' Pass a no-op flag to the test to workaround a bug in macOS's default','line_number':115,'multiline':False]['text':' and ancient bash version which causes it to error out on an empty','line_number':116,'multiline':False]['text':' argument list when $@ is consumed and set -u is enabled.','line_number':117,'multiline':False]['text':' Ensure the sandbox base does not contain protected files that would prevent','line_number':147,'multiline':False]['text':' a simple "rm -rf" from working under an unprivileged user.','line_number':148,'multiline':False]['text':' And now ensure Bazel reconstructs the sandbox base on a second build.','line_number':151,'multiline':False]['text':' Still warning in this case even when the flag is flipped','line_number':188,'multiline':False]['text':' Restart Bazel and check we don't print spurious "Deleting stale sandbox"','line_number':230,'multiline':False]['text':' warnings.','line_number':231,'multiline':False]['text':' Ensure that, even if we don't clean up the sandbox at all (with','line_number':250,'multiline':False]['text':' --sandbox_debug), consecutive builds don't step on each other by trying to','line_number':251,'multiline':False]['text':' reuse previous spawn identifiers.','line_number':252,'multiline':False]['text':' Need to make sure the bazel server runs under systemd, too.','line_number':318,'multiline':False]['text':' The workspace name is initialized in testenv.sh; use that var rather than','line_number':375,'multiline':False]['text':' hardcoding it here. The extra sed pass is so we can selectively expand that','line_number':376,'multiline':False]['text':' one var while keeping the rest of the heredoc literal.','line_number':377,'multiline':False]['text':'!/bin/sh','line_number':379,'multiline':False]['text':' Test for #400: Linux sandboxing and relative symbolic links.','line_number':393,'multiline':False]['text':'','line_number':394,'multiline':False]['text':' let A = examples/genrule/symlinks/a/b/x.txt -> ../x.txt','line_number':395,'multiline':False]['text':' where   examples/genrule/symlinks/a/b -> examples/genrule/symlinks/ok/sub','line_number':396,'multiline':False]['text':' thus the realpath of A is example/genrule/symlinks/ok/x.txt','line_number':397,'multiline':False]['text':' but if the code doesn't correctly resolve intermediate symlinks and instead','line_number':398,'multiline':False]['text':' uses string operations to handle ".." parts, it will arrive at:','line_number':399,'multiline':False]['text':' examples/genrule/symlinks/a/x.txt, which is wrong.','line_number':400,'multiline':False]['text':'','line_number':401,'multiline':False]['text':' Create cyclic symbolic links to check whether the strategy catches that.','line_number':596,'multiline':False]['text':'!/bin/sh','line_number':623,'multiline':False]['text':' Tests that /proc/self == /proc/$$. This should always be true unless the PID namespace is active without /proc being remounted correctly.','line_number':638,'multiline':False]['text':' Catch the head and tail commands failing.','line_number':656,'multiline':False]['text':' This is the generic "we caught an IOException" log message used by the','line_number':676,'multiline':False]['text':' SandboxedStrategy. We don't want to see this in this case, because we have','line_number':677,'multiline':False]['text':' special handling that prints a better error message and then lets the','line_number':678,'multiline':False]['text':' sandbox code throw the actual ExecException.','line_number':679,'multiline':False]['text':' There was no ExecException during sandboxed execution, because the action','line_number':682,'multiline':False]['text':' returned an exit code of 0.','line_number':683,'multiline':False]['text':' This is the error message telling us that some output artifacts couldn't be copied.','line_number':686,'multiline':False]['text':' The build fails, because the action didn't generate its output artifact.','line_number':689,'multiline':False]['text':' This is the generic "we caught an IOException" log message used by the','line_number':704,'multiline':False]['text':' SandboxedStrategy. We don't want to see this in this case, because we have','line_number':705,'multiline':False]['text':' special handling that prints a better error message and then lets the','line_number':706,'multiline':False]['text':' sandbox code throw the actual ExecException.','line_number':707,'multiline':False]['text':' This is the error message printed by the EventHandler telling us that some','line_number':710,'multiline':False]['text':' output artifacts couldn't be copied.','line_number':711,'multiline':False]['text':' This is the UserExecException telling us that the build failed.','line_number':714,'multiline':False]