['text':'!/bin/bash','line_number':1,'multiline':False]['text':'','line_number':2,'multiline':False]['text':' Copyright 2015 The Bazel Authors. All rights reserved.','line_number':3,'multiline':False]['text':'','line_number':4,'multiline':False]['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':5,'multiline':False]['text':' you may not use this file except in compliance with the License.','line_number':6,'multiline':False]['text':' You may obtain a copy of the License at','line_number':7,'multiline':False]['text':'','line_number':8,'multiline':False]['text':'    http://www.apache.org/licenses/LICENSE-2.0','line_number':9,'multiline':False]['text':'','line_number':10,'multiline':False]['text':' Unless required by applicable law or agreed to in writing, software','line_number':11,'multiline':False]['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':12,'multiline':False]['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':13,'multiline':False]['text':' See the License for the specific language governing permissions and','line_number':14,'multiline':False]['text':' limitations under the License.','line_number':15,'multiline':False]['text':'','line_number':16,'multiline':False]['text':' Testing environment for the Bazel integration tests','line_number':17,'multiline':False]['text':'','line_number':18,'multiline':False]['text':' TODO(bazel-team): This file is currently an append of the old testenv.sh and','line_number':19,'multiline':False]['text':' test-setup.sh files. This must be cleaned up eventually.','line_number':20,'multiline':False]['text':' TODO(bazel-team): Factor each test suite's is-this-windows setup check to use','line_number':22,'multiline':False]['text':' this var instead, or better yet a common $IS_WINDOWS var.','line_number':23,'multiline':False]['text':' Set some environment variables needed on Windows.','line_number':49,'multiline':False]['text':' TODO(philwo) remove this once we have a Bazel release that includes the CL','line_number':51,'multiline':False]['text':' moving the Windows-specific TEST_TMPDIR into TestStrategy.','line_number':52,'multiline':False]['text':' Make the command "bazel" available for tests.','line_number':59,'multiline':False]['text':' Convert PATH_TO_BAZEL_WRAPPER to Unix path style on Windows, because it will be','line_number':70,'multiline':False]['text':' added into PATH. There's problem if PATH=C:/msys64/usr/bin:/usr/local,','line_number':71,'multiline':False]['text':' because ':' is used as both path separator and in C:/msys64/...','line_number':72,'multiline':False]['text':'################## shell/bazel/testenv ##################################','line_number':81,'multiline':False]['text':' Setting up the environment for Bazel integration tests.','line_number':82,'multiline':False]['text':'','line_number':83,'multiline':False]['text':' WORKSPACE file','line_number':87,'multiline':False]['text':' Java','line_number':91,'multiline':False]['text':' Tools directory location','line_number':98,'multiline':False]['text':' Platforms','line_number':101,'multiline':False]['text':' Sandbox tools','line_number':104,'multiline':False]['text':' Test data','line_number':108,'multiline':False]['text':' Third-party','line_number':112,'multiline':False]['text':' Skylib','line_number':115,'multiline':False]['text':' This function copies the tools directory from Bazel.','line_number':127,'multiline':False]['text':' Report whether a given directory name corresponds to a tools directory.','line_number':140,'multiline':False]['text':' Copy the examples of the base workspace','line_number':152,'multiline':False]['text':'','line_number':159,'multiline':False]['text':' Find a random unused TCP port','line_number':160,'multiline':False]['text':'','line_number':161,'multiline':False]['text':'','line_number':188,'multiline':False]['text':' A uniform SHA-256 command that works across platforms.','line_number':189,'multiline':False]['text':'','line_number':190,'multiline':False]['text':' sha256sum is the fastest option, but may not be available on macOS (where it','line_number':191,'multiline':False]['text':' is usually called 'gsha256sum'), so we optionally fallback to shasum.','line_number':192,'multiline':False]['text':'','line_number':193,'multiline':False]['text':'################## shell/bazel/test-setup ###############################','line_number':209,'multiline':False]['text':' Setup bazel for integration tests','line_number':210,'multiline':False]['text':'','line_number':211,'multiline':False]['text':' OS X has a limit in the pipe length, so force the root to a shorter one','line_number':213,'multiline':False]['text':' Delete stale installation directory from previously failed tests. On Windows','line_number':216,'multiline':False]['text':' we regularly get the same TEST_TMPDIR but a failed test may only partially','line_number':217,'multiline':False]['text':' clean it up, and the next time the test runs, Bazel reports a corrupt','line_number':218,'multiline':False]['text':' installation error. See https://github.com/bazelbuild/bazel/issues/3618','line_number':219,'multiline':False]['text':' Here we unset variable that were set by the invoking Blaze instance','line_number':227,'multiline':False]['text':' Runs a command, retrying if needed for a fixed timeout.','line_number':230,'multiline':False]['text':'','line_number':231,'multiline':False]['text':' Necessary to use it on Windows, typically when deleting directory trees,','line_number':232,'multiline':False]['text':' because the OS cannot delete open files, which we attempt to do when deleting','line_number':233,'multiline':False]['text':' workspaces where a Bazel server is still in the middle of shutting down.','line_number':234,'multiline':False]['text':' (Because "bazel shutdown" returns sooner than the server actually shuts down.)','line_number':235,'multiline':False]['text':' Set the user root properly for this test invocation.','line_number':251,'multiline':False]['text':' Print all progress messages because we regularly grep the output in tests.','line_number':254,'multiline':False]['text':' Disable terminal-specific features.','line_number':257,'multiline':False]['text':' Prevent SIGBUS during JVM actions.','line_number':260,'multiline':False]['text':' Enable Bzlmod in all shell integration tests','line_number':267,'multiline':False]['text':' TODO: Remove this flag once all dependencies are mirrored.','line_number':330,'multiline':False]['text':' See https://github.com/bazelbuild/bazel/pull/19549 for more context.','line_number':331,'multiline':False]['text':' For reducing SSD usage on our physical Mac machines.','line_number':334,'multiline':False]['text':' Required for runfiles library on Windows, since $(rlocation) lookups','line_number':347,'multiline':False]['text':' can't do directories. We use android-28's android.jar as the anchor','line_number':348,'multiline':False]['text':' for the androidsdk location.','line_number':349,'multiline':False]['text':' Sets up sufficient platform definitions to support Android shell tests using','line_number':366,'multiline':False]['text':' platform-based toolchain resolution.','line_number':367,'multiline':False]['text':'','line_number':368,'multiline':False]['text':' See resolve_android_toolchains in','line_number':369,'multiline':False]['text':' src/test/shell/bazel/android/android_helper.sh for how to platform-based','line_number':370,'multiline':False]['text':' toolchain resolution.','line_number':371,'multiline':False]['text':' TODO(bazel-team): we should use remote repositories.','line_number':461,'multiline':False]['text':' If the current platform is Windows, defines a Python toolchain for our','line_number':488,'multiline':False]['text':' Windows CI machines. Otherwise does nothing.','line_number':489,'multiline':False]['text':'','line_number':490,'multiline':False]['text':' Our Windows CI machines have Python 2 and 3 installed at C:\Python2 and','line_number':491,'multiline':False]['text':' C:\Python3 respectively.','line_number':492,'multiline':False]['text':'','line_number':493,'multiline':False]['text':' Since the tools directory is not cleared between test cases, this only needs','line_number':494,'multiline':False]['text':' to run once per suite. However, the toolchain must still be registered','line_number':495,'multiline':False]['text':' somehow.','line_number':496,'multiline':False]['text':'','line_number':497,'multiline':False]['text':' TODO(#7844): Delete this custom (and machine-specific) test setup once we have','line_number':498,'multiline':False]['text':' an autodetecting Python toolchain for Windows.','line_number':499,'multiline':False]['text':' Sets up Objective-C tools. Mac only.','line_number':545,'multiline':False]['text':' Write the default WORKSPACE file, wiping out any custom WORKSPACE setup.','line_number':629,'multiline':False]['text':' If the current platform is Windows, registers our custom Windows Python','line_number':644,'multiline':False]['text':' toolchain. Otherwise does nothing.','line_number':645,'multiline':False]['text':'','line_number':646,'multiline':False]['text':' Since this modifies the WORKSPACE file, it must be called between test cases.','line_number':647,'multiline':False]['text':' --extra_toolchains has left-to-right precedence semantics, but the bazelrc','line_number':653,'multiline':False]['text':' is processed before the command line. This means that any matching','line_number':654,'multiline':False]['text':' toolchains added to the bazelrc will always take precedence over toolchains','line_number':655,'multiline':False]['text':' set up by test cases. Instead, we add the toolchain to WORKSPACE so that it','line_number':656,'multiline':False]['text':' has lower priority than whatever is passed on the command line.','line_number':657,'multiline':False]['text':' Set up a lockfile to avoid accessing BCR for tests with a clean workspace.','line_number':663,'multiline':False]['text':' Set-up a new, clean workspace with only the tools installed.','line_number':669,'multiline':False]['text':' Set-up a clean default workspace.','line_number':688,'multiline':False]['text':' Clean up all files that are not in tools directories, to restart','line_number':702,'multiline':False]['text':' from a clean workspace','line_number':703,'multiline':False]['text':' This is called by unittest.bash upon eventual exit of the test suite.','line_number':733,'multiline':False]['text':' Try to shutdown Bazel at the end to prevent a "Cannot delete path" error','line_number':736,'multiline':False]['text':' on Windows when the outer Bazel tries to delete $TEST_TMPDIR.','line_number':737,'multiline':False]['text':'','line_number':743,'multiline':False]['text':' Simples assert to make the tests more readable','line_number':744,'multiline':False]['text':'','line_number':745,'multiline':False]['text':'################## shell/integration/testenv ############################','line_number':792,'multiline':False]['text':' Setting up the environment for our legacy integration tests.','line_number':793,'multiline':False]['text':'','line_number':794,'multiline':False]['text':' do nothing as test-setup already does that','line_number':802,'multiline':False]['text':'################## Extra ############################','line_number':819,'multiline':False]['text':' Functions that need to be called before each test.','line_number':821,'multiline':False]['text':' Optional environment changes.','line_number':825,'multiline':False]['text':' Creates a fake Python default runtime that just outputs a marker string','line_number':831,'multiline':False]['text':' indicating which version was used, without executing any Python code.','line_number':832,'multiline':False]['text':' The stub script template automatically appends ".exe" to the Python binary','line_number':834,'multiline':False]['text':' name if it doesn't already end in ".exe", ".com", or ".bat".','line_number':835,'multiline':False]['text':' Windows .bat has uppercase ECHO and no shebang.','line_number':874,'multiline':False]['text':'!/bin/sh','line_number':881,'multiline':False]