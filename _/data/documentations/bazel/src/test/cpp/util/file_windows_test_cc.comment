['text':' Copyright 2016 The Bazel Authors. All rights reserved.','line_number':1,'multiline':False]['text':'','line_number':2,'multiline':False]['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':3,'multiline':False]['text':' you may not use this file except in compliance with the License.','line_number':4,'multiline':False]['text':' You may obtain a copy of the License at','line_number':5,'multiline':False]['text':'','line_number':6,'multiline':False]['text':'    http://www.apache.org/licenses/LICENSE-2.0','line_number':7,'multiline':False]['text':'','line_number':8,'multiline':False]['text':' Unless required by applicable law or agreed to in writing, software','line_number':9,'multiline':False]['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':10,'multiline':False]['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':11,'multiline':False]['text':' See the License for the specific language governing permissions and','line_number':12,'multiline':False]['text':' limitations under the License.','line_number':13,'multiline':False]['text':' !defined(_WIN32) && !defined(__CYGWIN__)','line_number':40,'multiline':False]['text':' This is a macro so the assertions will have the correct line number.','line_number':57,'multiline':False]['text':' string& ','line_number':58,'multiline':True]['text':' const string& ','line_number':66,'multiline':True]['text':' const string& ','line_number':66,'multiline':True]['text':' Asserts that dir1 can be created with some content, and dir2 doesn't exist.','line_number':76,'multiline':False]['text':' One half of the teardown test: assert that test.teardown.b was cleaned up.','line_number':90,'multiline':False]['text':' Other half of the teardown test: assert that test.teardown.a was cleaned up.','line_number':95,'multiline':False]['text':' We just need "bin/<something>" or "usr/bin/<something>".','line_number':103,'multiline':False]['text':' Forward slashes are converted to backslashes.','line_number':104,'multiline':False]['text':' Create junction target that'll double as the fake msys root.','line_number':127,'multiline':False]['text':' Set the BAZEL_SH root so we can resolve MSYS paths.','line_number':132,'multiline':False]['text':' Create a junction pointing to an existing directory.','line_number':136,'multiline':False]['text':' Create a junction pointing to a non-existent directory.','line_number':141,'multiline':False]['text':' Create a directory under `tempdir`, verify that IsDirectory reports true.','line_number':159,'multiline':False]['text':' Verify that IsDirectory works for a junction.','line_number':168,'multiline':False]['text':' Create a directory under `tempdir`, a file inside it, and a junction','line_number':185,'multiline':False]['text':' pointing to it.','line_number':186,'multiline':False]['text':' Non-existent files cannot be unlinked.','line_number':198,'multiline':False]['text':' Directories cannot be unlinked.','line_number':200,'multiline':False]['text':' Junctions can be unlinked, even if the pointed directory is not empty.','line_number':202,'multiline':False]['text':' Files can be unlinked.','line_number':204,'multiline':False]['text':' Test that we can create come directories, can't create others.','line_number':213,'multiline':False]['text':' Create some scratch directories: $TEST_TMPDIR/directory/subdirectory','line_number':275,'multiline':False]['text':' Create a dummy file: $TEST_TMPDIR/directory/subdirectory/foo.txt','line_number':279,'multiline':False]['text':' Create junctions next to directory and subdirectory, pointing to them.','line_number':285,'multiline':False]['text':' Use short paths and mixed casing to test that the canonicalization can','line_number':286,'multiline':False]['text':' resolve these.','line_number':287,'multiline':False]['text':'   $TEST_TMPDIR/junc12345 -> $TEST_TMPDIR/DIRECT~1','line_number':288,'multiline':False]['text':'   $TEST_TMPDIR/junc12~1/junc67890 -> $TEST_TMPDIR/JUNC12~1/SubDir~1','line_number':289,'multiline':False]['text':' Expect that $TEST_TMPDIR/sym1/sym2/foo.txt is readable.','line_number':296,'multiline':False]['text':' Assert the canonical path of foo.txt via the real path and via sym2.','line_number':299,'multiline':False]['text':' The latter contains at least two junction components, shortened paths, and','line_number':300,'multiline':False]['text':' mixed casing.','line_number':301,'multiline':False]['text':' Assert the canonical path of "subdirectory" via the real path and via sym2.','line_number':308,'multiline':False]['text':' The latter contains at least two junction components, shortened paths, and','line_number':309,'multiline':False]['text':' mixed casing.','line_number':310,'multiline':False]['text':' Assert that a directory is always a good embedded binary. (We do not care','line_number':329,'multiline':False]['text':' about directories' mtimes.)','line_number':330,'multiline':False]['text':' Assert that junctions whose target exists are "good" embedded binaries.','line_number':332,'multiline':False]['text':' Assert that checking fails for non-existent directories and dangling','line_number':337,'multiline':False]['text':' junctions.','line_number':338,'multiline':False]['text':' namespace blaze_util','line_number':344,'multiline':False]