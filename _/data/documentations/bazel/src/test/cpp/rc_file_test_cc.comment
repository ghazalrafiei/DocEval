['text':' Copyright 2017 The Bazel Authors. All rights reserved.','line_number':1,'multiline':False]['text':'','line_number':2,'multiline':False]['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':3,'multiline':False]['text':' you may not use this file except in compliance with the License.','line_number':4,'multiline':False]['text':' You may obtain a copy of the License at','line_number':5,'multiline':False]['text':'','line_number':6,'multiline':False]['text':'    http://www.apache.org/licenses/LICENSE-2.0','line_number':7,'multiline':False]['text':'','line_number':8,'multiline':False]['text':' Unless required by applicable law or agreed to in writing, software','line_number':9,'multiline':False]['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':10,'multiline':False]['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':11,'multiline':False]['text':' See the License for the specific language governing permissions and','line_number':12,'multiline':False]['text':' limitations under the License.','line_number':13,'multiline':False]['text':' Assume POSIX if not Windows.','line_number':49,'multiline':False]['text':' Matches an RcFile's canonical source paths list.','line_number':53,'multiline':False]['text':' GetCwd returns a short path on Windows, so we store this expectation now','line_number':82,'multiline':False]['text':' to keep assertions sane in the tests.','line_number':83,'multiline':False]['text':' TODO(bazel-team): The code below deletes all the files in the workspace','line_number':101,'multiline':False]['text':' and other rc-related directories, but it intentionally skips directories.','line_number':102,'multiline':False]['text':' As a consequence, there may be empty directories from test to test.','line_number':103,'multiline':False]['text':' Remove this once blaze_util::DeleteDirectories(path) exists.','line_number':104,'multiline':False]['text':' There should be 2 rc files: the system one and the workspace one. --bazelrc','line_number':210,'multiline':False]['text':' is not passed and therefore is not relevant.','line_number':211,'multiline':False]['text':' Expect that GetRcFiles outputs a warning about these files that are not','line_number':306,'multiline':False]['text':' read as expected.','line_number':307,'multiline':False]['text':' Because of the variety of path representations in windows, this','line_number':332,'multiline':False]['text':' equality test does not attempt to check the entire path.','line_number':333,'multiline':False]['text':' /dev/null is not an error','line_number':351,'multiline':False]['text':' but it does technically count as a file','line_number':354,'multiline':False]['text':' Put fake options in different expected rc files, to check that none of them','line_number':379,'multiline':False]['text':' are read.','line_number':380,'multiline':False]['text':' Expect no error due to the incorrect options, as non of them should have','line_number':393,'multiline':False]['text':' been loaded.','line_number':394,'multiline':False]['text':' Check that the startup options' provenance message contains nothing','line_number':400,'multiline':False]['text':' Check that the startup options' provenance message contains the provenance','line_number':422,'multiline':False]['text':' of the incorrect option.','line_number':423,'multiline':False]['text':' Put fake options in different expected rc files, to check that none of them','line_number':435,'multiline':False]['text':' are read.','line_number':436,'multiline':False]['text':' Expect no error due to the incorrect options, as non of them should have','line_number':452,'multiline':False]['text':' been loaded.','line_number':453,'multiline':False]['text':' Check that the startup options' provenance message contains nothing','line_number':459,'multiline':False]['text':' Check that the startup options' provenance message contains the correct','line_number':486,'multiline':False]['text':' information for the incorrect flag, and does not print the command-line','line_number':487,'multiline':False]['text':' provided startup flags.','line_number':488,'multiline':False]['text':' Expect no error due to the incorrect --foo.','line_number':504,'multiline':False]['text':' Check that the startup options' provenance message contains nothing for the','line_number':513,'multiline':False]['text':' master bazelrc.','line_number':514,'multiline':False]['text':' Expect no error due to the incorrect --foo.','line_number':531,'multiline':False]['text':' Check that the startup options' provenance message contains nothing for the','line_number':537,'multiline':False]['text':' master bazelrc.','line_number':538,'multiline':False]['text':' Check that the startup options' provenance message contains the correct','line_number':557,'multiline':False]['text':' information for the master bazelrc.','line_number':558,'multiline':False]['text':' Add startup flags to the master bazelrc.','line_number':569,'multiline':False]['text':' Check that the startup options get grouped together properly in the output','line_number':580,'multiline':False]['text':' message.','line_number':581,'multiline':False]['text':' Add startup flags to the workspace bazelrc.','line_number':593,'multiline':False]['text':' Override one of the master bazelrc's flags in the commandline rc.','line_number':598,'multiline':False]['text':' Check that the options are reported in the correct order in the provenance','line_number':613,'multiline':False]['text':' message.','line_number':614,'multiline':False]['text':' Override one of the master bazelrc's flags in the custom bazelrc.','line_number':630,'multiline':False]['text':' Add startup flags the imported bazelrc.','line_number':640,'multiline':False]['text':' Check that the options are reported in the correct order in the','line_number':654,'multiline':False]['text':' provenance message, the imported file between the two master flags','line_number':655,'multiline':False]['text':' Import the custom location twice.','line_number':676,'multiline':False]['text':' Import the custom location twice.','line_number':696,'multiline':False]['text':' Import the custom location twice.','line_number':717,'multiline':False]['text':' Import the custom location twice.','line_number':749,'multiline':False]['text':' Import the custom location, and pass it in by flag.','line_number':769,'multiline':False]['text':' rc_file does not differentiate between non-existent and unreadable files. We','line_number':811,'multiline':False]['text':' don't necessarily want try-import to ignore unreadable files, but this test','line_number':812,'multiline':False]['text':' exists to make sure we don't change the behavior by accident. Any change that','line_number':813,'multiline':False]['text':' makes existent but unreadable files a failure with try-import should inform','line_number':814,'multiline':False]['text':' users.','line_number':815,'multiline':False]['text':' The following tests unix-path semantics.','line_number':875,'multiline':False]['text':' Import the custom location twice.','line_number':886,'multiline':False]['text':' !defined(_WIN32) && !defined(__CYGWIN__)','line_number':899,'multiline':False]['text':' TODO(b/112908763): Somehow, in the following tests, we end with a relative','line_number':917,'multiline':False]['text':' path written in the import line on Windows. Figure out what's going on and','line_number':918,'multiline':False]['text':' reinstate these tests','line_number':919,'multiline':False]['text':' Import the system_rc extraneously.','line_number':925,'multiline':False]['text':' Import the workspace_rc extraneously.','line_number':940,'multiline':False]['text':' !defined(_WIN32) && !defined(__CYGWIN__)','line_number':951,'multiline':False]['text':' namespace blaze','line_number':953,'multiline':False]