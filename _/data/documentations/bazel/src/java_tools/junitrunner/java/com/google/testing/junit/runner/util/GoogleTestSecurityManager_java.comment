['text':' Copyright 2004 The Bazel Authors. All Rights Reserved.','line_number':1,'multiline':False]['text':'','line_number':2,'multiline':False]['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':3,'multiline':False]['text':' you may not use this file except in compliance with the License.','line_number':4,'multiline':False]['text':' You may obtain a copy of the License at','line_number':5,'multiline':False]['text':'','line_number':6,'multiline':False]['text':'    http://www.apache.org/licenses/LICENSE-2.0','line_number':7,'multiline':False]['text':'','line_number':8,'multiline':False]['text':' Unless required by applicable law or agreed to in writing, software','line_number':9,'multiline':False]['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':10,'multiline':False]['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':11,'multiline':False]['text':' See the License for the specific language governing permissions and','line_number':12,'multiline':False]['text':' limitations under the License.','line_number':13,'multiline':False]['text':'*
 * A security manager that prevents things that are dangerous or
 * bad in a testing environment. Currently prevents System.exit() and
 * System.setSecurityManager().
 *
 * <p>For simplicity this is a Java 1.1 style security manager, ignoring
 * the whole Permissions framework. This should be fine unless you
 * are testing code that itself manipulates SecurityManagers.
 ','line_number':19,'multiline':True]['text':'* Prevent System.exit() from ever being called. ','line_number':31,'multiline':True]['text':'','line_number':38,'multiline':False]['text':' The code below overrides the Java2 security mechanism to allow','line_number':39,'multiline':False]['text':' (almost) all requests. This is OK vis-a-vis the Java default','line_number':40,'multiline':False]['text':' (which is to run with no security policy at all).','line_number':41,'multiline':False]['text':'','line_number':42,'multiline':False]['text':' The default Java security policy is to pass through to the','line_number':43,'multiline':False]['text':' Permissions check mechanism, which in turn by default denies','line_number':44,'multiline':False]['text':' things. We override all of that (in essence, disabling Java2','line_number':45,'multiline':False]['text':' Permissions) and just allow everything.','line_number':46,'multiline':False]['text':'','line_number':47,'multiline':False]['text':'*
   * Cache a copy of the permission that System.setSecurityManager() checks.
   ','line_number':49,'multiline':True]['text':'* Allow everything but creation of security managers. ','line_number':55,'multiline':True]['text':'* Allow everything. ','line_number':63,'multiline':True]['text':'*
   * If {@code GoogleTestSecurityManager} is the current security manager,
   * uninstall it.
   ','line_number':70,'multiline':True]['text':'*
   * The security manager can be disabled by the test runner (or any other
   * class in the same package) to allow it to exit with a meaningful result
   * code.
   *
   * VisibleForTesting
   ','line_number':89,'multiline':True]