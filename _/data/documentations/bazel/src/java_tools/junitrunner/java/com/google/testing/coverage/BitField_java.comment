['text':' Copyright 2016 The Bazel Authors. All Rights Reserved.','line_number':1,'multiline':False]['text':'','line_number':2,'multiline':False]['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':3,'multiline':False]['text':' you may not use this file except in compliance with the License.','line_number':4,'multiline':False]['text':' You may obtain a copy of the License at','line_number':5,'multiline':False]['text':'','line_number':6,'multiline':False]['text':'    http://www.apache.org/licenses/LICENSE-2.0','line_number':7,'multiline':False]['text':'','line_number':8,'multiline':False]['text':' Unless required by applicable law or agreed to in writing, software','line_number':9,'multiline':False]['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':10,'multiline':False]['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':11,'multiline':False]['text':' See the License for the specific language governing permissions and','line_number':12,'multiline':False]['text':' limitations under the License.','line_number':13,'multiline':False]['text':'*
 * Abstracts bit field operations.
 ','line_number':19,'multiline':True]['text':'*
   * Returns a copy of the underlying byte array.
   *
   * @return byte array copy
   ','line_number':46,'multiline':True]['text':'*
   * Sets or clears a bit at the given index.
   *
   * @param index bit index
   ','line_number':55,'multiline':True]['text':'*
   * Sets or clears a bit at the given index.
   *
   * @param index bit index
   ','line_number':64,'multiline':True]['text':'*
   * Clears a bit at the given index
   *
   * @param index bit index
   ','line_number':86,'multiline':True]['text':'*
   * Checks whether a bit at the given index is set.
   *
   * @param index bit index
   * @return true if set, false otherwise
   ','line_number':95,'multiline':True]['text':'* Performs a non-destructive bit-wise "and" of this bit field with another one. ','line_number':113,'multiline':True]['text':'*
   * Performs a non-destructive bit-wise merge of this bit field and another one.
   *
   * @param other the other bit field
   * @return this bit field
   ','line_number':125,'multiline':True]['text':' Start out with a copy of the larger of the two arrays.','line_number':142,'multiline':False]['text':'*
   * Compares two bit fields for equality.
   *
   * @param obj another object
   * @return true if the other object is a bit field with the same bits set
   ','line_number':152,'multiline':True]['text':'*
   * Compare a BitField object with an array of bytes
   *
   * @param other a byte array to compare to
   * @return true if the underlying byte array is equal to the given byte array
   ','line_number':169,'multiline':True]['text':' JAVA doesn't have the concept of unsigned byte; need to & with 255','line_number':187,'multiline':False]['text':' to avoid exception of IndexOutOfBoundException when b < 0.','line_number':188,'multiline':False]