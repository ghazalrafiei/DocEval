['text':'!/usr/bin/env bash','line_number':1,'multiline':False]['text':' Use privileged mode, which e.g. skips using CDPATH.','line_number':5,'multiline':False]['text':' https://www.shellcheck.net/wiki/SC2031','line_number':7,'multiline':False]['text':' Ensure that the user has a bash that supports -A','line_number':10,'multiline':False]['text':' Checks if a program is in the user's PATH, and is executable.','line_number':62,'multiline':False]['text':'CREATED_FILES[@]} -eq 0 ]]; then','line_number':75,'multiline':False]['text':' Assign variables for a given Vim tag, patch version, or commit.','line_number':142,'multiline':False]['text':' Might exit in case it cannot be found, after updating Vim sources.','line_number':143,'multiline':False]['text':' Interpret parameter as version number (tag).','line_number':147,'multiline':False]['text':' Interpret parameter as commit hash.','line_number':158,'multiline':False]['text':' Update Vim sources.','line_number':167,'multiline':False]['text':' Extract co-authors from the commit message.','line_number':180,'multiline':False]['text':' Remove Co-authored-by and Signed-off-by lines from the commit message.','line_number':183,'multiline':False]['text':' Remove first line of commit message.','line_number':186,'multiline':False]['text':' Patch surgery','line_number':192,'multiline':False]['text':' Remove Filelist, README','line_number':197,'multiline':False]['text':' Remove *.proto, Make*, INSTALL*, gui_*, beval.*, some if_*, gvim, libvterm, tee, VisVim, xpm, xxd','line_number':201,'multiline':False]['text':' Remove runtime/print/','line_number':205,'multiline':False]['text':' Remove unwanted Vim doc files.','line_number':209,'multiline':False]['text':' Remove "Last change ..." changes in doc files.','line_number':213,'multiline':False]['text':' Remove gui, option, setup, screen dumps, testdir/Make_*.mak files','line_number':216,'multiline':False]['text':' Remove testdir/test_*.vim files','line_number':220,'multiline':False]['text':' Remove N/A src/*.[ch] files: sound.c, version.c','line_number':224,'multiline':False]['text':' Remove some *.po files. #5622','line_number':228,'multiline':False]['text':' Remove vimrc_example.vim','line_number':232,'multiline':False]['text':' Rename src/testdir/ paths to test/old/testdir/','line_number':236,'multiline':False]['text':' Rename src/ paths to src/nvim/','line_number':240,'multiline':False]['text':' Rename evalfunc.c to eval/funcs.c','line_number':244,'multiline':False]['text':' Rename evalvars.c to eval/vars.c','line_number':248,'multiline':False]['text':' Rename userfunc.c to eval/userfunc.c','line_number':252,'multiline':False]['text':' Rename evalbuffer.c to eval/buffer.c','line_number':256,'multiline':False]['text':' Rename evalwindow.c to eval/window.c','line_number':260,'multiline':False]['text':' Rename map.c to mapping.c','line_number':264,'multiline':False]['text':' Rename profiler.c to profile.c','line_number':268,'multiline':False]['text':' Rename scriptfile.c to runtime.c','line_number':272,'multiline':False]['text':' Rename session.c to ex_session.c','line_number':276,'multiline':False]['text':' Rename highlight.c to highlight_group.c','line_number':280,'multiline':False]['text':' Rename locale.c to os/lang.c','line_number':284,'multiline':False]['text':' Rename keymap.h to keycodes.h','line_number':288,'multiline':False]['text':' Rename option.h to option_vars.h','line_number':292,'multiline':False]['text':' Rename terminal.txt to nvim_terminal_emulator.txt','line_number':296,'multiline':False]['text':' Rename test_urls.vim to check_urls.vim','line_number':300,'multiline':False]['text':' Rename path to check_colors.vim','line_number':304,'multiline':False]['text':' If the difference are drastic enough uncrustify may need to be used more','line_number':328,'multiline':False]['text':' than once. This is obviously a bug that needs to be fixed on uncrustify's','line_number':329,'multiline':False]['text':' end, but in the meantime this workaround is sufficient.','line_number':330,'multiline':False]['text':' Extract just the "vim-patch:X.Y.ZZZZ" or "vim-patch:sha" portion of each log','line_number':480,'multiline':False]['text':' shellcheck disable=SC2206','line_number':482,'multiline':False]['text':' Remove 'vim-patch:' prefix for each item in array.','line_number':483,'multiline':False]['text':' Create space-separated string from array.','line_number':484,'multiline':False]['text':' Replace spaces with commas.','line_number':485,'multiline':False]['text':',}")"','line_number':486,'multiline':False]['text':' Gets all Vim commits since the "start" commit.','line_number':532,'multiline':False]['text':' Prints all (sorted) "vim-patch:xxx" tokens found in the Nvim git log.','line_number':537,'multiline':False]['text':' Use sedâ€¦{7,7} to normalize (internal) Git hashes (for tokens caches).','line_number':539,'multiline':False]['text':' Prints all patch-numbers (for the current v:version) for which there is','line_number':547,'multiline':False]['text':' a "vim-patch:xxx" token in the Nvim git log.','line_number':548,'multiline':False]['text':' Transform "vim-patch:X.Y.ZZZZ" to "ZZZZ".','line_number':550,'multiline':False]['text':' Avoid "unbound variable" with bash < 4.4 below.','line_number':560,'multiline':False]['text':' Find all "vim-patch:xxx" tokens in the Nvim git log.','line_number':566,'multiline':False]['text':' Create an associative array mapping Vim commits to tags.','line_number':571,'multiline':False]['text':' Exit in case of errors from the above eval (empty vim_commit_tags).','line_number':576,'multiline':False]['text':' Prints a newline-delimited list of Vim commits, for use by scripts.','line_number':583,'multiline':False]['text':' "$1": use extended format? (with subject)','line_number':584,'multiline':False]['text':' "$@" is passed to list_vim_commits, as extra arguments to git-log.','line_number':585,'multiline':False]['text':' Avoid "unbound variable" with bash < 4.4 below.','line_number':589,'multiline':False]['text':' Sets / appends to missing_vim_patches (useful to avoid a subshell when','line_number':596,'multiline':False]['text':' used multiple times to cache tokens/vim_commit_tags).','line_number':597,'multiline':False]['text':' "$1": use extended format? (with subject)','line_number':598,'multiline':False]['text':' "$@": extra arguments to git-log.','line_number':599,'multiline':False]['text':' Massage arguments for git-log.','line_number':611,'multiline':False]['text':' Get missing Vim commits','line_number':630,'multiline':False]['text':' Avoid "unbound variable" with bash < 4.4 below.','line_number':631,'multiline':False]['text':' Check for vim-patch:<commit_hash> (usually runtime updates).','line_number':634,'multiline':False]['text':' Get commit hash, and optional info from line.  This is used in','line_number':640,'multiline':False]['text':' extended mode, and when using e.g. '--format' manually.','line_number':641,'multiline':False]['text':'* }','line_number':646,'multiline':False]['text':' Remove any "patch 8.1.0902: " prefixes, and prefix with ": ".','line_number':648,'multiline':False]['text':' Check for vim-patch:<tag> (not commit hash).','line_number':655,'multiline':False]['text':' "v7.4.0001" => "7.4.0001"','line_number':656,'multiline':False]['text':' Prints a human-formatted list of Vim commits, with instructional messages.','line_number':668,'multiline':False]['text':' Passes "$@" onto list_missing_vimpatches (args for git-log).','line_number':669,'multiline':False]['text':'fnames[@]}','line_number':710,'multiline':False]['text':' Avoid "unbound variable" with bash < 4.4 below.','line_number':722,'multiline':False]['text':' Avoid "unbound variable" with bash < 4.4 below.','line_number':740,'multiline':False]['text':' remove opt','line_number':867,'multiline':False]['text':' remove opt','line_number':872,'multiline':False]['text':' remove opt','line_number':881,'multiline':False]['text':' remove opt','line_number':902,'multiline':False]['text':' vim: et sw=2','line_number':918,'multiline':False]