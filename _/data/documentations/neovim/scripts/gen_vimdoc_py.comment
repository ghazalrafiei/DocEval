['text':'!/usr/bin/env python3','line_number':1,'multiline':False]['text':' Need a `nvim` that supports `-l`, try the local build','line_number':68,'multiline':False]['text':' Until 0.9 is released, use this hacky way to check that "nvim -l foo.lua" works.','line_number':73,'multiline':False]['text':' DEBUG = ('DEBUG' in os.environ)','line_number':85,'multiline':False]['text':' Messages to show on exit.','line_number':103,'multiline':False]['text':' Section ordering.','line_number':110,'multiline':False]['text':' List of files/directories for doxygen to read, relative to `base_dir`','line_number':124,'multiline':False]['text':' file patterns used by doxygen','line_number':126,'multiline':False]['text':' Only function with this prefix are considered','line_number':128,'multiline':False]['text':' Section name overrides.','line_number':130,'multiline':False]['text':' For generated section names.','line_number':134,'multiline':False]['text':' Section helptag.','line_number':136,'multiline':False]['text':' Per-function helptag.','line_number':138,'multiline':False]['text':' Module name overrides (for Lua).','line_number':140,'multiline':False]['text':' Append the docs for these modules, do not start a new section.','line_number':142,'multiline':False]['text':' Exclude fstem for methods','line_number':223,'multiline':False]['text':' Prevents vim.regex.regex','line_number':227,'multiline':False]['text':' `shared` functions are exposed on the `vim` module.','line_number':232,'multiline':False]['text':' HACK. TODO(justinmk): class/structure support in lua2dox','line_number':293,'multiline':False]['text':' Annotations are displayed as line items after API function descriptions.','line_number':357,'multiline':False]['text':' Raises an error with details about `o`, if `cond` is in object `o`,','line_number':391,'multiline':False]['text':' or if `cond()` is callable and returns True.','line_number':392,'multiline':False]['text':' Appends a message to a list which will be printed on exit.','line_number':409,'multiline':False]['text':' Print all collected messages.','line_number':414,'multiline':False]['text':' Print collected messages, then throw an exception.','line_number':420,'multiline':False]['text':' space, used in "programlisting" nodes','line_number':487,'multiline':False]['text':' Gets the length of the last line in `text`, excluding newline ("\n") char.','line_number':497,'multiline':False]['text':' Returns True if node `n` contains only inline (not block-level) elements.','line_number':512,'multiline':False]['text':' if len(n.childNodes) == 0:','line_number':514,'multiline':False]['text':'     return n.nodeType == n.TEXT_NODE or n.nodeName == 'computeroutput'','line_number':515,'multiline':False]['text':' return prefix + text','line_number':531,'multiline':False]['text':' Whitespace used to indent all lines except the first line.','line_number':534,'multiline':False]['text':' XXX: Dummy prefix to force TextWrapper() to wrap the first line.','line_number':548,'multiline':False]['text':' XXX: Remove the dummy prefix.','line_number':559,'multiline':False]['text':' `ret_map` is a name:desc map.','line_number':588,'multiline':False]['text':' space_preceding = (len(text) > 0 and ' ' == text[-1][-1])','line_number':607,'multiline':False]['text':' text += (int(not space_preceding) * ' ')','line_number':608,'multiline':False]['text':' codeblock (```)','line_number':621,'multiline':False]['text':' TODO: currently we don't use this. The "[verbatim]" hint is there as','line_number':632,'multiline':False]['text':' a reminder that we must decide how to format this if we do use it.','line_number':633,'multiline':False]['text':' text += '\n'','line_number':675,'multiline':False]['text':' Example:','line_number':683,'multiline':False]['text':'   <simplesect kind="see">','line_number':684,'multiline':False]['text':'     <para>|autocommand|</para>','line_number':685,'multiline':False]['text':'   </simplesect>','line_number':686,'multiline':False]['text':' Ordered dict of ordered lists.','line_number':723,'multiline':False]['text':' Gather nodes into groups.  Mostly this is because we want "parameterlist"','line_number':732,'multiline':False]['text':' nodes to appear together.','line_number':733,'multiline':False]['text':' Flatten inline text from a tree of non-block nodes.','line_number':737,'multiline':False]['text':' Previous node','line_number':741,'multiline':False]['text':' Generate map from the gathered items.','line_number':784,'multiline':False]['text':' Example:','line_number':795,'multiline':False]['text':'   <simplesect kind="see">','line_number':796,'multiline':False]['text':'     <para>|autocommand|</para>','line_number':797,'multiline':False]['text':'   </simplesect>','line_number':798,'multiline':False]['text':' XXX: Add a space (or any char) to `title` here, otherwise xrefs','line_number':804,'multiline':False]['text':' ("Deprecated" section) acts very weird...','line_number':805,'multiline':False]['text':' Remove any child text nodes that are only whitespace','line_number':827,'multiline':False]['text':' 'programlisting' blocks are Markdown code blocks. Do not include','line_number':863,'multiline':False]['text':' these as a separate paragraph, but append to the last non-empty line','line_number':864,'multiline':False]['text':' in the text','line_number':865,'multiline':False]['text':' Generate text from the gathered items.','line_number':872,'multiline':False]['text':' Map of func_name:docstring.','line_number':910,'multiline':False]['text':' Map of func_name:docstring.','line_number':911,'multiline':False]['text':' Special from lua2dox.lua.','line_number':930,'multiline':False]['text':' Special from lua2dox.lua.','line_number':933,'multiline':False]['text':' XXX: (doxygen 1.8.11) 'argsstring' only includes attributes of','line_number':946,'multiline':False]['text':' non-void functions.  Special-case void functions here.','line_number':947,'multiline':False]['text':' XXX: this is what lua2dox gives us...','line_number':963,'multiline':False]['text':' Handle Object Oriented style functions here.','line_number':977,'multiline':False]['text':'   We make sure they have "self" in the parameters,','line_number':978,'multiline':False]['text':'   and a parent function','line_number':979,'multiline':False]['text':' Minimum 8 chars between signature and vimtag','line_number':1022,'multiline':False]['text':' Tracks `xrefsect` titles.  As of this writing, used only for separating','line_number':1033,'multiline':False]['text':' deprecated functions.','line_number':1034,'multiline':False]['text':' Merge OrderedDicts.','line_number':1073,'multiline':False]['text':' Map of func_name:vim-help-text.','line_number':1102,'multiline':False]['text':' Map of func_name:vim-help-text.','line_number':1103,'multiline':False]['text':' Generate Vim :help for parameters.','line_number':1107,'multiline':False]['text':' Verbatim handling.','line_number':1135,'multiline':False]['text':' Doxygen "@defgroup" directive.','line_number':1198,'multiline':False]['text':' Can't use '.' in @defgroup, so convert to '--'','line_number':1217,'multiline':False]['text':' "vim.json" => "vim-dot-json"','line_number':1218,'multiline':False]['text':' silence warnings','line_number':1250,'multiline':False]['text':' runtime/lua/vim/lsp.lua:209: warning: argument 'foo' not found','line_number':1251,'multiline':False]['text':' Collects all functions as each module is processed.','line_number':1265,'multiline':False]['text':' Generate docs for all functions in the current module.','line_number':1274,'multiline':False]['text':' Extract unformatted (*.mpack).','line_number':1282,'multiline':False]['text':' Extract formatted (:help).','line_number':1284,'multiline':False]['text':' Module/Section id matched against @defgroup.','line_number':1297,'multiline':False]['text':'   "*api-buffer*" => "api-buffer"','line_number':1298,'multiline':False]['text':' When invoked as a filter, args won't be passed, so use an env var.','line_number':1437,'multiline':False]['text':' vim: set ft=python ts=4 sw=4 tw=79 et :','line_number':1447,'multiline':False]