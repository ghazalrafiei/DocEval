['text':'
 *  LibXDiff by Davide Libenzi ( File Differential Library )
 *  Copyright (C) 2003	Davide Libenzi
 *
 *  This library is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public
 *  License as published by the Free Software Foundation; either
 *  version 2.1 of the License, or (at your option) any later version.
 *
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *  Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public
 *  License along with this library; if not, see
 *  <http://www.gnu.org/licenses/>.
 *
 *  Davide Libenzi <davidel@xmailserver.org>
 *
 ','line_number':1,'multiline':True]['text':'
 * Starting at the passed change atom, find the latest change atom to be included
 * inside the differential hunk according to the specified configuration.
 * Also advance xscr if the first changes must be discarded.
 ','line_number':47,'multiline':True]['text':' number of ignored blank lines ','line_number':57,'multiline':True]['text':' remove ignorable changes that are too far before other changes ','line_number':59,'multiline':True]['text':' identifier? ','line_number':102,'multiline':True]['text':' also identifier? ','line_number':103,'multiline':True]['text':' identifiers from VMS and other esoterico ','line_number':104,'multiline':True]['text':' Appended chunk? ','line_number':200,'multiline':True]['text':'
				 * We don't need additional context if
				 * a whole function was added.
				 ','line_number':204,'multiline':True]['text':'
				 * Otherwise get more context from the
				 * pre-image.
				 ','line_number':214,'multiline':True]['text':'
				 * Did we extend context upwards into an
				 * ignored change?
				 ','line_number':231,'multiline':True]['text':' If so, show it after all. ','line_number':240,'multiline':True]['text':'
			 * Overlap with next change?  Then include it
			 * in the current hunk and start over to find
			 * its new end.
			 ','line_number':271,'multiline':True]['text':'
		 * Emit current hunk header.
		 ','line_number':288,'multiline':True]['text':'
		 * Emit pre-context.
		 ','line_number':304,'multiline':True]['text':'
			 * Merge previous with current change atom.
			 ','line_number':312,'multiline':True]['text':'
			 * Removes lines from the first file.
			 ','line_number':319,'multiline':True]['text':'
			 * Adds lines from the second file.
			 ','line_number':326,'multiline':True]['text':'
		 * Emit post-context.
		 ','line_number':339,'multiline':True]