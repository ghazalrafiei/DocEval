['text':'/ Assume max. word len is this many bytes.','line_number':12,'multiline':False]['text':'/ Some places assume a word length fits in a byte, thus it can't be above 255.','line_number':13,'multiline':False]['text':'/< Number of regions supported.','line_number':17,'multiline':False]['text':'/ Type used for indexes in the word tree need to be at least 4 bytes.  If int','line_number':19,'multiline':False]['text':'/ is 8 bytes we could use something smaller, but what?','line_number':20,'multiline':False]['text':'/ Flags used for a word.  Only the lowest byte can be used, the region byte','line_number':27,'multiline':False]['text':'/ comes above it.','line_number':28,'multiline':False]['text':'/< region byte follows','line_number':30,'multiline':False]['text':'/< word with one capital (or all capitals)','line_number':31,'multiline':False]['text':'/< word must be all capitals','line_number':32,'multiline':False]['text':'/< rare word','line_number':33,'multiline':False]['text':'/< bad word','line_number':34,'multiline':False]['text':'/< affix ID follows','line_number':35,'multiline':False]['text':'/< keep-case word, allcap not allowed','line_number':36,'multiline':False]['text':'/< keep-case word','line_number':37,'multiline':False]['text':'/ for <flags2>, shifted up one byte to be used in wn_flags','line_number':41,'multiline':False]['text':'/< word includes affix','line_number':43,'multiline':False]['text':'/< word only valid in compound','line_number':44,'multiline':False]['text':'/< word not to be suggested','line_number':45,'multiline':False]['text':'/< already compounded word, COMPOUNDROOT','line_number':46,'multiline':False]['text':'/< no compounding before this word','line_number':47,'multiline':False]['text':'/< no compounding after this word','line_number':48,'multiline':False]['text':'/ flags for <pflags>','line_number':51,'multiline':False]['text':'/< rare prefix','line_number':53,'multiline':False]['text':'/< prefix is not combining','line_number':54,'multiline':False]['text':'/< to-upper prefix','line_number':55,'multiline':False]['text':'/< prefix with COMPOUNDPERMITFLAG','line_number':56,'multiline':False]['text':'/< prefix with COMPOUNDFORBIDFLAG','line_number':57,'multiline':False]['text':'/ Flags for postponed prefixes in "sl_pidxs".  Must be above affixID (one','line_number':60,'multiline':False]['text':'/ byte) and prefcondnr (two bytes).','line_number':61,'multiline':False]['text':'/< rare postponed prefix','line_number':63,'multiline':False]['text':'/< non-combining postponed prefix','line_number':64,'multiline':False]['text':'/< to-upper postponed prefix','line_number':65,'multiline':False]['text':'/< postponed prefix with COMPOUNDPERMITFLAG','line_number':66,'multiline':False]['text':'/< postponed prefix with COMPOUNDFORBIDFLAG','line_number':67,'multiline':False]['text':'/ flags for <compoptions>','line_number':70,'multiline':False]['text':'/< CHECKCOMPOUNDDUP','line_number':72,'multiline':False]['text':'/< CHECKCOMPOUNDREP','line_number':73,'multiline':False]['text':'/< CHECKCOMPOUNDCASE','line_number':74,'multiline':False]['text':'/< CHECKCOMPOUNDTRIPLE','line_number':75,'multiline':False]['text':'/ Info from "REP", "REPSAL" and "SAL" entries in ".aff" file used in si_rep,','line_number':78,'multiline':False]['text':'/ si_repsal, sl_rep, and si_sal.  Not for sl_sal!','line_number':79,'multiline':False]['text':'/ One replacement: from "ft_from" to "ft_to".','line_number':80,'multiline':False]['text':'/ Info from "SAL" entries in ".aff" file used in sl_sal.','line_number':86,'multiline':False]['text':'/ The info is split for quick processing by spell_soundfold().','line_number':87,'multiline':False]['text':'/ Note that "sm_oneof" and "sm_rules" point into sm_lead.','line_number':88,'multiline':False]['text':'/< leading letters','line_number':90,'multiline':False]['text':'/< length of "sm_lead"','line_number':91,'multiline':False]['text':'/< letters from () or NULL','line_number':92,'multiline':False]['text':'/< rules like ^, $, priority','line_number':93,'multiline':False]['text':'/< replacement.','line_number':94,'multiline':False]['text':'/< wide character copy of "sm_lead"','line_number':95,'multiline':False]['text':'/< wide character copy of "sm_oneof"','line_number':96,'multiline':False]['text':'/< wide character copy of "sm_to"','line_number':97,'multiline':False]['text':'/ Values for SP_*ERROR are negative, positive values are used by','line_number':102,'multiline':False]['text':'/ read_cnt_string().','line_number':103,'multiline':False]['text':'/< spell file truncated error','line_number':105,'multiline':False]['text':'/< format error in spell file','line_number':106,'multiline':False]['text':'/< other error while reading spell file','line_number':107,'multiline':False]['text':'/ Structure used to store words and other info for one language, loaded from','line_number':110,'multiline':False]['text':'/ a .spl file.','line_number':111,'multiline':False]['text':'/ The main access is through the tree in "sl_fbyts/sl_fidxs", storing the','line_number':112,'multiline':False]['text':'/ case-folded words.  "sl_kbyts/sl_kidxs" is for keep-case words.','line_number':113,'multiline':False]['text':'/','line_number':114,'multiline':False]['text':'/ The "byts" array stores the possible bytes in each tree node, preceded by','line_number':115,'multiline':False]['text':'/ the number of possible bytes, sorted on byte value:','line_number':116,'multiline':False]['text':'/      <len> <byte1> <byte2> ...','line_number':117,'multiline':False]['text':'/ The "idxs" array stores the index of the child node corresponding to the','line_number':118,'multiline':False]['text':'/ byte in "byts".','line_number':119,'multiline':False]['text':'/ Exception: when the byte is zero, the word may end here and "idxs" holds','line_number':120,'multiline':False]['text':'/ the flags, region mask and affixID for the word.  There may be several','line_number':121,'multiline':False]['text':'/ zeros in sequence for alternative flag/region/affixID combinations.','line_number':122,'multiline':False]['text':'/< next language','line_number':126,'multiline':False]['text':'/< language name "en", "en.rare", "nl", etc.','line_number':127,'multiline':False]['text':'/< name of .spl file','line_number':128,'multiline':False]['text':'/< true if it's a .add file.','line_number':129,'multiline':False]['text':'/< case-folded word bytes','line_number':131,'multiline':False]['text':'/< length of sl_fbyts','line_number':132,'multiline':False]['text':'/< case-folded word indexes','line_number':133,'multiline':False]['text':'/< keep-case word bytes','line_number':134,'multiline':False]['text':'/< keep-case word indexes','line_number':135,'multiline':False]['text':'/< prefix tree word bytes','line_number':136,'multiline':False]['text':'/< prefix tree word indexes','line_number':137,'multiline':False]['text':'/< infotext string or NULL','line_number':139,'multiline':False]['text':'/ table with up to 8 region names plus NUL','line_number':141,'multiline':False]['text':'/< MIDWORD string or NULL','line_number':144,'multiline':False]['text':'/< hashtable with word count, wordcount_T','line_number':146,'multiline':False]['text':'/< COMPOUNDWORDMAX (default: MAXWLEN)','line_number':148,'multiline':False]['text':'/< COMPOUNDMIN (default: 0)','line_number':149,'multiline':False]['text':'/< COMPOUNDSYLMAX (default: MAXWLEN)','line_number':150,'multiline':False]['text':'/< COMP_* flags','line_number':151,'multiline':False]['text':'/< CHECKCOMPOUNDPATTERN items','line_number':152,'multiline':False]['text':'/< COMPOUNDRULE turned into a regexp progrm','line_number':153,'multiline':False]['text':'/< (NULL when no compounding)','line_number':154,'multiline':False]['text':'/< all COMPOUNDRULE concatenated (or NULL)','line_number':155,'multiline':False]['text':'/< flags for first compound word','line_number':156,'multiline':False]['text':'/< all flags for compound words','line_number':157,'multiline':False]['text':'/< When true: no spaces between words','line_number':158,'multiline':False]['text':'/< SYLLABLE repeatable chars or NULL','line_number':159,'multiline':False]['text':'/< syllable items','line_number':160,'multiline':False]['text':'/< number of items in "sl_prefprog"','line_number':162,'multiline':False]['text':'/< table with regprogs for prefixes','line_number':163,'multiline':False]['text':'/< list of fromto_T entries from REP lines','line_number':165,'multiline':False]['text':'/< indexes where byte first appears, -1 if there is none','line_number':166,'multiline':False]['text':'/< list of salitem_T entries from SAL lines','line_number':167,'multiline':False]['text':'/< indexes where byte first appears, -1 if there is none','line_number':168,'multiline':False]['text':'/< SAL followup','line_number':169,'multiline':False]['text':'/< SAL collapse_result','line_number':170,'multiline':False]['text':'/< SAL remove_accents','line_number':171,'multiline':False]['text':'/< SOFOFROM and SOFOTO instead of SAL items:','line_number':172,'multiline':False]['text':'/< "sl_sal_first" maps chars','line_number':173,'multiline':False]['text':'/< "sl_sal" is a list of wide char lists.','line_number':174,'multiline':False]['text':'/< list of fromto_T entries from REPSAL lines','line_number':175,'multiline':False]['text':'/< sl_rep_first for REPSAL lines','line_number':176,'multiline':False]['text':'/< don't suggest splitting a word','line_number':177,'multiline':False]['text':'/< don't suggest compounding','line_number':178,'multiline':False]['text':' Info from the .sug file.  Loaded on demand.','line_number':180,'multiline':False]['text':'/< timestamp for .sug file','line_number':181,'multiline':False]['text':'/< soundfolded word bytes','line_number':182,'multiline':False]['text':'/< soundfolded word indexes','line_number':183,'multiline':False]['text':'/< buffer with word number table','line_number':184,'multiline':False]['text':'/< true when .sug file was loaded or failed to load','line_number':185,'multiline':False]['text':'/< true, if there is a MAP line','line_number':187,'multiline':False]['text':'/< MAP for multi-byte chars','line_number':188,'multiline':False]['text':'/< MAP for first 256 chars','line_number':189,'multiline':False]['text':'/< table with soundfolded words that have','line_number':190,'multiline':False]['text':'/< handled, see add_sound_suggest()','line_number':191,'multiline':False]['text':'/ Structure used in "b_langp", filled from 'spelllang'.','line_number':194,'multiline':False]['text':'/< info for this language','line_number':196,'multiline':False]['text':'/< language used for sound folding or NULL','line_number':197,'multiline':False]['text':'/< language used for REP items or NULL','line_number':198,'multiline':False]['text':'/< bitmask for region or REGION_ALL','line_number':199,'multiline':False]['text':' string at start of Vim .sug file','line_number':204,'multiline':False]['text':'/< word valid in all regions','line_number':208,'multiline':False]['text':'/ The tables used for recognizing word characters according to spelling.','line_number':210,'multiline':False]['text':'/ These are only used for the first 256 characters of 'encoding'.','line_number':211,'multiline':False]['text':'/< flags: is word char','line_number':213,'multiline':False]['text':'/< flags: is uppercase char','line_number':214,'multiline':False]['text':'/< chars: folded case','line_number':215,'multiline':False]['text':'/< chars: upper case','line_number':216,'multiline':False]['text':' Use our own character-case definitions, because the current locale may','line_number':219,'multiline':False]['text':' differ from what the .spl file uses.','line_number':220,'multiline':False]['text':' These must not be called with negative number!','line_number':221,'multiline':False]['text':' Multi-byte implementation.  For Unicode we can call utf_*(), but don't do','line_number':222,'multiline':False]['text':' that for ASCII, because we don't want to use 'casemap' here.  Otherwise use','line_number':223,'multiline':False]['text':' the "w" library function for characters above 255.','line_number':224,'multiline':False]['text':'/ Values for "what" argument of spell_add_word()','line_number':231,'multiline':False]['text':'/< nr of times word was seen','line_number':239,'multiline':False]['text':'/< word','line_number':240,'multiline':False]