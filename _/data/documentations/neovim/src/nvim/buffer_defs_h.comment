['text':'/ Reference to a buffer that stores the value of buf_free_count.','line_number':9,'multiline':False]['text':'/ bufref_valid() only needs to check "buf" when the count differs.','line_number':10,'multiline':False]['text':' Flags for w_valid.','line_number':38,'multiline':False]['text':' These are set when something in a window structure becomes invalid, except','line_number':39,'multiline':False]['text':' when the cursor is moved.  Call check_cursor_moved() before testing one of','line_number':40,'multiline':False]['text':' the flags.','line_number':41,'multiline':False]['text':' These are reset when that thing has been updated and is valid again.','line_number':42,'multiline':False]['text':'','line_number':43,'multiline':False]['text':' Every function that invalidates one of these must call one of the','line_number':44,'multiline':False]['text':' invalidate_* functions.','line_number':45,'multiline':False]['text':'','line_number':46,'multiline':False]['text':' w_valid is supposed to be used only in screen.c.  From other files, use the','line_number':47,'multiline':False]['text':' functions that set or reset the flags.','line_number':48,'multiline':False]['text':'','line_number':49,'multiline':False]['text':' VALID_BOTLINE    VALID_BOTLINE_AP','line_number':50,'multiline':False]['text':'     on       on      w_botline valid','line_number':51,'multiline':False]['text':'     off      on      w_botline approximated','line_number':52,'multiline':False]['text':'     off      off     w_botline not valid','line_number':53,'multiline':False]['text':'     on       off     not possible','line_number':54,'multiline':False]['text':' w_wrow (window row) is valid','line_number':55,'multiline':False]['text':' w_wcol (window col) is valid','line_number':56,'multiline':False]['text':' w_virtcol (file col) is valid','line_number':57,'multiline':False]['text':' w_cline_height and w_cline_folded valid','line_number':58,'multiline':False]['text':' w_cline_row is valid','line_number':59,'multiline':False]['text':' w_botine and w_empty_rows are valid','line_number':60,'multiline':False]['text':' w_botine is approximated','line_number':61,'multiline':False]['text':' w_topline is valid (for cursor position)','line_number':62,'multiline':False]['text':' flags for b_flags','line_number':64,'multiline':False]['text':' buffer has been recovered','line_number':65,'multiline':False]['text':' need to check readonly when loading file','line_number':66,'multiline':False]['text':' into buffer (set by ":e", may be reset by','line_number':67,'multiline':False]['text':' ":buf")','line_number':68,'multiline':False]['text':' file has never been loaded into buffer,','line_number':69,'multiline':False]['text':' many variables still need to be set','line_number':70,'multiline':False]['text':' Set when file name is changed after','line_number':71,'multiline':False]['text':' starting to edit, reset when file is','line_number':72,'multiline':False]['text':' written out.','line_number':73,'multiline':False]['text':' file didn't exist when editing started','line_number':74,'multiline':False]['text':' Warned for BF_NEW and file created','line_number':75,'multiline':False]['text':' got errors while reading the file','line_number':76,'multiline':False]['text':' dummy buffer, only used internally','line_number':77,'multiline':False]['text':' 'syntax' option was set','line_number':78,'multiline':False]['text':' Mask to check for flags that prevent normal writing','line_number':80,'multiline':False]['text':' display tick type','line_number':86,'multiline':False]['text':' The taggy struct is used to store the information about a :tag command.','line_number':95,'multiline':False]['text':' tag name','line_number':97,'multiline':False]['text':' cursor position BEFORE ":tag"','line_number':98,'multiline':False]['text':' match number','line_number':99,'multiline':False]['text':' buffer number used for cur_match','line_number':100,'multiline':False]['text':' used with tagfunc','line_number':101,'multiline':False]['text':' Structure that contains all options that are local to a window.','line_number':104,'multiline':False]['text':' Used twice in a window: for the current buffer and for all buffers.','line_number':105,'multiline':False]['text':' Also used in wininfo_T.','line_number':106,'multiline':False]['text':' 'arabic'','line_number':109,'multiline':False]['text':' 'breakindent'','line_number':111,'multiline':False]['text':' 'breakindentopt'','line_number':113,'multiline':False]['text':' 'diff'','line_number':115,'multiline':False]['text':' 'foldcolumn'','line_number':117,'multiline':False]['text':' 'fdc' saved for diff mode','line_number':119,'multiline':False]['text':' 'foldenable'','line_number':121,'multiline':False]['text':' 'foldenable' saved for diff mode','line_number':123,'multiline':False]['text':' 'foldignore'','line_number':126,'multiline':False]['text':' 'foldlevel'','line_number':128,'multiline':False]['text':' 'foldlevel' state saved for diff mode','line_number':130,'multiline':False]['text':' 'foldmethod'','line_number':133,'multiline':False]['text':' 'fdm' saved for diff mode','line_number':135,'multiline':False]['text':' 'foldminlines'','line_number':137,'multiline':False]['text':' 'foldnestmax'','line_number':139,'multiline':False]['text':' 'foldexpr'','line_number':141,'multiline':False]['text':' 'foldtext'','line_number':143,'multiline':False]['text':' 'foldmarker'','line_number':145,'multiline':False]['text':' 'linebreak'','line_number':147,'multiline':False]['text':' 'list'','line_number':149,'multiline':False]['text':' 'number'','line_number':151,'multiline':False]['text':' 'relativenumber'','line_number':153,'multiline':False]['text':' 'virtualedit'','line_number':155,'multiline':False]['text':' flags for 'virtualedit'','line_number':157,'multiline':False]['text':' 'numberwidth'','line_number':159,'multiline':False]['text':' 'winfixheight'','line_number':161,'multiline':False]['text':' 'winfixwidth'','line_number':163,'multiline':False]['text':' 'previewwindow'','line_number':165,'multiline':False]['text':' 'rightleft'','line_number':167,'multiline':False]['text':' 'rightleftcmd'','line_number':169,'multiline':False]['text':' 'scroll'','line_number':171,'multiline':False]['text':' 'smoothscroll'','line_number':173,'multiline':False]['text':' 'spell'','line_number':175,'multiline':False]['text':' 'cursorcolumn'','line_number':177,'multiline':False]['text':' 'cursorline'','line_number':179,'multiline':False]['text':' 'cursorlineopt'','line_number':181,'multiline':False]['text':' 'colorcolumn'','line_number':183,'multiline':False]['text':' 'showbreak'','line_number':185,'multiline':False]['text':' 'statuscolumn'','line_number':187,'multiline':False]['text':' 'statusline'','line_number':189,'multiline':False]['text':' 'winbar'','line_number':191,'multiline':False]['text':' 'scrollbind'','line_number':193,'multiline':False]['text':' options were saved for starting diff mode','line_number':194,'multiline':False]['text':' 'scrollbind' saved for diff mode','line_number':196,'multiline':False]['text':' 'wrap'','line_number':199,'multiline':False]['text':' 'wrap' state saved for diff mode','line_number':200,'multiline':False]['text':' 'concealcursor'','line_number':202,'multiline':False]['text':' 'conceallevel'','line_number':204,'multiline':False]['text':' 'cursorbind'','line_number':207,'multiline':False]['text':' 'cursorbind' state saved for diff mode','line_number':208,'multiline':False]['text':' 'signcolumn'','line_number':211,'multiline':False]['text':' 'sidescrolloff' local value','line_number':213,'multiline':False]['text':' 'scrolloff' local value','line_number':215,'multiline':False]['text':' 'winhighlight'','line_number':217,'multiline':False]['text':' 'listchars'','line_number':219,'multiline':False]['text':' 'fillchars'','line_number':221,'multiline':False]['text':' 'winblend'','line_number':223,'multiline':False]['text':' SCTXs for window-local options','line_number':225,'multiline':False]['text':' Window info stored with a buffer.','line_number':229,'multiline':False]['text':'','line_number':230,'multiline':False]['text':' Two types of info are kept for a buffer which are associated with a','line_number':231,'multiline':False]['text':' specific window:','line_number':232,'multiline':False]['text':' 1. Each window can have a different line number associated with a buffer.','line_number':233,'multiline':False]['text':' 2. The window-local options for a buffer work in a similar way.','line_number':234,'multiline':False]['text':' The window-info is kept in a list at b_wininfo.  It is kept in','line_number':235,'multiline':False]['text':' most-recently-used order.','line_number':236,'multiline':False]['text':' next entry or NULL for last entry','line_number':238,'multiline':False]['text':' previous entry or NULL for first entry','line_number':239,'multiline':False]['text':' pointer to window that did set wi_mark','line_number':240,'multiline':False]['text':' last cursor mark in the file','line_number':241,'multiline':False]['text':' true when wi_opt has useful values','line_number':242,'multiline':False]['text':' local window options','line_number':243,'multiline':False]['text':' copy of w_fold_manual','line_number':244,'multiline':False]['text':' clone of w_folds','line_number':245,'multiline':False]['text':' copy of w_changelistidx','line_number':246,'multiline':False]['text':' values for b_syn_spell: what to do with toplevel text','line_number':258,'multiline':False]['text':' spell check if @Spell not defined','line_number':259,'multiline':False]['text':' spell check toplevel text','line_number':260,'multiline':False]['text':' don't spell check toplevel text','line_number':261,'multiline':False]['text':' values for b_syn_foldlevel: how to compute foldlevel on a line','line_number':263,'multiline':False]['text':' use level of item at start of line','line_number':264,'multiline':False]['text':' use lowest local minimum level on line','line_number':265,'multiline':False]['text':' Used for :syntime: timing of executing a syntax pattern.','line_number':269,'multiline':False]['text':' total time used','line_number':271,'multiline':False]['text':' time of slowest call','line_number':272,'multiline':False]['text':' nr of times used','line_number':273,'multiline':False]['text':' nr of times matched','line_number':274,'multiline':False]['text':' These are items normally related to a buffer.  But when using ":ownsyntax"','line_number':277,'multiline':False]['text':' a window may have its own instance.','line_number':278,'multiline':False]['text':' syntax keywords hash table','line_number':280,'multiline':False]['text':' idem, ignore case','line_number':281,'multiline':False]['text':' true when error occurred in HL','line_number':282,'multiline':False]['text':' true when 'redrawtime' reached','line_number':283,'multiline':False]['text':' ignore case for :syn cmds','line_number':284,'multiline':False]['text':' how to compute foldlevel on a line','line_number':285,'multiline':False]['text':' SYNSPL_ values','line_number':286,'multiline':False]['text':' table for syntax patterns','line_number':287,'multiline':False]['text':' table for syntax clusters','line_number':288,'multiline':False]['text':' @Spell cluster ID or 0','line_number':289,'multiline':False]['text':' @NoSpell cluster ID or 0','line_number':290,'multiline':False]['text':' true when there is an item with a','line_number':291,'multiline':False]['text':' "containedin" argument','line_number':292,'multiline':False]['text':' flags about how to sync','line_number':293,'multiline':False]['text':' group to sync on','line_number':294,'multiline':False]['text':' minimal sync lines offset','line_number':295,'multiline':False]['text':' maximal sync lines offset','line_number':296,'multiline':False]['text':' offset for multi-line pattern','line_number':297,'multiline':False]['text':' line continuation pattern','line_number':298,'multiline':False]['text':' line continuation program','line_number':299,'multiline':False]['text':' ignore-case flag for above','line_number':301,'multiline':False]['text':' for ":syntax include"','line_number':302,'multiline':False]['text':' auto-conceal for :syn cmds','line_number':303,'multiline':False]['text':' number of patterns with the HL_FOLD','line_number':304,'multiline':False]['text':' flag set','line_number':305,'multiline':False]['text':' b_sst_array[] contains the state stack for a number of lines, for the','line_number':306,'multiline':False]['text':' start of that line (col == 0).  This avoids having to recompute the','line_number':307,'multiline':False]['text':' syntax state too often.','line_number':308,'multiline':False]['text':' b_sst_array[] is allocated to hold the state for all displayed lines,','line_number':309,'multiline':False]['text':' and states for 1 out of about 20 other lines.','line_number':310,'multiline':False]['text':' b_sst_array        pointer to an array of synstate_T','line_number':311,'multiline':False]['text':' b_sst_len          number of entries in b_sst_array[]','line_number':312,'multiline':False]['text':' b_sst_first        pointer to first used entry in b_sst_array[] or NULL','line_number':313,'multiline':False]['text':' b_sst_firstfree    pointer to first free entry in b_sst_array[] or NULL','line_number':314,'multiline':False]['text':' b_sst_freecount    number of free entries in b_sst_array[]','line_number':315,'multiline':False]['text':' b_sst_check_lnum   entries after this lnum need to be checked for','line_number':316,'multiline':False]['text':'                    validity (MAXLNUM means no check needed)','line_number':317,'multiline':False]['text':' last display tick','line_number':324,'multiline':False]['text':' for spell checking','line_number':326,'multiline':False]['text':' list of pointers to slang_T, see spell.c','line_number':327,'multiline':False]['text':' flags: is midword char','line_number':328,'multiline':False]['text':' multi-byte midword chars','line_number':329,'multiline':False]['text':' 'spellcapcheck'','line_number':330,'multiline':False]['text':' program for 'spellcapcheck'','line_number':331,'multiline':False]['text':' 'spellfile'','line_number':332,'multiline':False]['text':' 'spelllang'','line_number':333,'multiline':False]['text':' 'spelloptions'','line_number':334,'multiline':False]['text':' 'spelloptions' flags','line_number':337,'multiline':False]['text':' all CJK letters as OK','line_number':338,'multiline':False]['text':' syntax iskeyword option','line_number':339,'multiline':False]['text':' iskeyword option','line_number':340,'multiline':False]['text':'/ Type used for changedtick_di member in buf_T','line_number':343,'multiline':False]['text':'/','line_number':344,'multiline':False]['text':'/ Primary exists so that literals of relevant type can be made.','line_number':345,'multiline':False]['text':' Maximum number of maphash blocks we will have','line_number':363,'multiline':False]['text':' buffer: structure that holds information about one file','line_number':366,'multiline':False]['text':'','line_number':367,'multiline':False]['text':' Several windows can share a single Buffer','line_number':368,'multiline':False]['text':' A buffer is unallocated if there is no memfile for it.','line_number':369,'multiline':False]['text':' A buffer is new if the associated file has never been loaded yet.','line_number':370,'multiline':False]['text':' unique id for the buffer (buffer number)','line_number':373,'multiline':False]['text':' associated memline (also contains line count','line_number':376,'multiline':False]['text':' links in list of buffers','line_number':378,'multiline':False]['text':' nr of windows open on this buffer','line_number':381,'multiline':False]['text':' various BF_ flags','line_number':383,'multiline':False]['text':' Buffer is being closed or referenced, don't','line_number':384,'multiline':False]['text':' let autocommands wipe it out.','line_number':385,'multiline':False]['text':' Buffer is being closed, don't allow opening','line_number':386,'multiline':False]['text':' a new window with it.','line_number':387,'multiline':False]['text':' Non-zero when the buffer can't be changed.','line_number':388,'multiline':False]['text':' Used for FileChangedRO','line_number':389,'multiline':False]['text':' b_ffname   has the full path of the file (NULL for no name).','line_number':391,'multiline':False]['text':' b_sfname   is the name as the user typed it (or NULL).','line_number':392,'multiline':False]['text':' b_fname    is the same as b_sfname, unless ":cd" has been done,','line_number':393,'multiline':False]['text':'            then it is the same as b_ffname (NULL for no name).','line_number':394,'multiline':False]['text':' full path file name, allocated','line_number':395,'multiline':False]['text':' short file name, allocated, may be equal to','line_number':396,'multiline':False]['text':' b_ffname','line_number':397,'multiline':False]['text':' current file name, points to b_ffname or','line_number':398,'multiline':False]['text':' b_sfname','line_number':399,'multiline':False]['text':' 'modified': Set to true if something in the','line_number':404,'multiline':False]['text':' file has been changed and not written out.','line_number':405,'multiline':False]['text':' Set if BufModified autocmd has not been','line_number':406,'multiline':False]['text':' triggered since the last time b_changed was','line_number':407,'multiline':False]['text':' modified.','line_number':408,'multiline':False]['text':'/ Change-identifier incremented for each change, including undo.','line_number':410,'multiline':False]['text':'/','line_number':411,'multiline':False]['text':'/ This is a dictionary item used to store b:changedtick.','line_number':412,'multiline':False]['text':' b:changedtick when TextChanged was','line_number':415,'multiline':False]['text':' last triggered.','line_number':416,'multiline':False]['text':' b:changedtick for TextChangedI','line_number':417,'multiline':False]['text':' b:changedtick for TextChangedP','line_number':418,'multiline':False]['text':' Set to true if we are in the middle of','line_number':420,'multiline':False]['text':' saving the buffer.','line_number':421,'multiline':False]['text':' Changes to a buffer require updating of the display.  To minimize the','line_number':423,'multiline':False]['text':' work, remember changes made and update everything at once.','line_number':424,'multiline':False]['text':' true when there are changes since the last','line_number':425,'multiline':False]['text':' time the display was updated','line_number':426,'multiline':False]['text':' topmost lnum that was changed','line_number':427,'multiline':False]['text':' lnum below last changed line, AFTER the','line_number':428,'multiline':False]['text':' change','line_number':429,'multiline':False]['text':' number of extra buffer lines inserted;','line_number':430,'multiline':False]['text':' negative when lines were deleted','line_number':431,'multiline':False]['text':' list of last used info for each window','line_number':432,'multiline':False]['text':' last display tick syntax was updated','line_number':433,'multiline':False]['text':' last display tick decoration providers','line_number':434,'multiline':False]['text':' where invoked','line_number':435,'multiline':False]['text':' last change time of original file','line_number':437,'multiline':False]['text':' nanoseconds of last change time','line_number':438,'multiline':False]['text':' last change time when reading','line_number':439,'multiline':False]['text':' nanoseconds of last read time','line_number':440,'multiline':False]['text':' size of original file in bytes','line_number':441,'multiline':False]['text':' mode of original file','line_number':442,'multiline':False]['text':' time when the buffer was last used; used','line_number':443,'multiline':False]['text':' for viminfo','line_number':444,'multiline':False]['text':' current named marks (mark.c)','line_number':446,'multiline':False]['text':' These variables are set when VIsual_active becomes false','line_number':448,'multiline':False]['text':' b_visual.vi_mode for visualmode()','line_number':450,'multiline':False]['text':' cursor position when last unloading this','line_number':452,'multiline':False]['text':' buffer','line_number':453,'multiline':False]['text':' where Insert mode was left','line_number':454,'multiline':False]['text':' position of last change: '. mark','line_number':455,'multiline':False]['text':' the changelist contains old change positions','line_number':457,'multiline':False]['text':' number of active entries','line_number':459,'multiline':False]['text':' set by u_savecommon()','line_number':460,'multiline':False]['text':' Character table, only used in charset.c for 'iskeyword'','line_number':462,'multiline':False]['text':' bitset with 4*64=256 bits: 1 bit per character 0-255.','line_number':463,'multiline':False]['text':' Table used for mappings local to a buffer.','line_number':466,'multiline':False]['text':' First abbreviation local to a buffer.','line_number':469,'multiline':False]['text':' User commands local to the buffer.','line_number':471,'multiline':False]['text':' start and end of an operator, also used for '[ and ']','line_number':473,'multiline':False]['text':' used for Insstart_orig','line_number':475,'multiline':False]['text':' Have we read ShaDa marks yet?','line_number':478,'multiline':False]['text':' The following only used in undo.c.','line_number':480,'multiline':False]['text':' pointer to oldest header','line_number':481,'multiline':False]['text':' pointer to newest header; may not be valid','line_number':482,'multiline':False]['text':' if b_u_curhead is not NULL','line_number':483,'multiline':False]['text':' pointer to current header','line_number':484,'multiline':False]['text':' current number of headers','line_number':485,'multiline':False]['text':' entry lists are synced','line_number':486,'multiline':False]['text':' last used undo sequence number','line_number':487,'multiline':False]['text':' counter for last file write','line_number':488,'multiline':False]['text':' uh_seq of header below which we are now','line_number':489,'multiline':False]['text':' uh_time of header below which we are now','line_number':490,'multiline':False]['text':' file write nr after which we are now','line_number':491,'multiline':False]['text':' variables for "U" command in undo.c','line_number':493,'multiline':False]['text':' saved line for "U" command','line_number':494,'multiline':False]['text':' line number of line in u_line','line_number':495,'multiline':False]['text':' optional column number','line_number':496,'multiline':False]['text':' ^N/^P have scanned this buffer','line_number':498,'multiline':False]['text':' flags for use of ":lmap" and IM control','line_number':500,'multiline':False]['text':' input mode for insert','line_number':501,'multiline':False]['text':' input mode for search','line_number':502,'multiline':False]['text':'  Use b_p_iminsert value for search','line_number':503,'multiline':False]['text':'  Input via none','line_number':504,'multiline':False]['text':'  Input via langmap','line_number':505,'multiline':False]['text':' using "lmap" mappings','line_number':508,'multiline':False]['text':' 'keymap' was set, call keymap_init()','line_number':509,'multiline':False]['text':' 'keymap' mappings have been loaded','line_number':510,'multiline':False]['text':' the keymap table','line_number':511,'multiline':False]['text':' Options local to a buffer.','line_number':513,'multiline':False]['text':' They are here because their value depends on the type of file','line_number':514,'multiline':False]['text':' or contents of the file being edited.','line_number':515,'multiline':False]['text':' set when options initialized','line_number':516,'multiline':False]['text':' SCTXs for buffer-local options','line_number':518,'multiline':False]['text':'/< 'autoindent'','line_number':520,'multiline':False]['text':'/< b_p_ai saved for paste mode','line_number':521,'multiline':False]['text':'/< 'backupco','line_number':522,'multiline':False]['text':'/< flags for 'backupco','line_number':523,'multiline':False]['text':'/< 'copyindent'','line_number':524,'multiline':False]['text':'/< 'binary'','line_number':525,'multiline':False]['text':'/< 'bomb'','line_number':526,'multiline':False]['text':'/< 'bufhidden'','line_number':527,'multiline':False]['text':'/< 'buftype'','line_number':528,'multiline':False]['text':'/< quickfix exists for buffer','line_number':529,'multiline':False]['text':'/< 'buflisted'','line_number':530,'multiline':False]['text':'/< 'channel'','line_number':531,'multiline':False]['text':'/< 'cindent'','line_number':532,'multiline':False]['text':'/< 'cinoptions'','line_number':533,'multiline':False]['text':'/< 'cinkeys'','line_number':534,'multiline':False]['text':'/< 'cinwords'','line_number':535,'multiline':False]['text':'/< 'cinscopedecls'','line_number':536,'multiline':False]['text':'/< 'comments'','line_number':537,'multiline':False]['text':'/< 'commentstring'','line_number':538,'multiline':False]['text':'/< 'complete'','line_number':539,'multiline':False]['text':'/< 'completeslash'','line_number':541,'multiline':False]['text':'/< 'completefunc'','line_number':543,'multiline':False]['text':'/< 'completefunc' callback','line_number':544,'multiline':False]['text':'/< 'omnifunc'','line_number':545,'multiline':False]['text':'/< 'omnifunc' callback','line_number':546,'multiline':False]['text':'/< 'tagfunc'','line_number':547,'multiline':False]['text':'/< 'tagfunc' callback','line_number':548,'multiline':False]['text':'/< 'endoffile'','line_number':549,'multiline':False]['text':'/< 'endofline'','line_number':550,'multiline':False]['text':'/< 'fixendofline'','line_number':551,'multiline':False]['text':'/< 'expandtab'','line_number':552,'multiline':False]['text':'/< b_p_et saved for binary mode','line_number':553,'multiline':False]['text':'/< b_p_et saved for paste mode','line_number':554,'multiline':False]['text':'/< 'fileencoding'','line_number':555,'multiline':False]['text':'/< 'fileformat'','line_number':556,'multiline':False]['text':'/< 'filetype'','line_number':557,'multiline':False]['text':'/< 'formatoptions'','line_number':558,'multiline':False]['text':'/< 'formatlistpat'','line_number':559,'multiline':False]['text':'/< 'infercase'','line_number':560,'multiline':False]['text':'/< 'iskeyword'','line_number':561,'multiline':False]['text':'/< 'define' local value','line_number':562,'multiline':False]['text':'/< 'include'','line_number':563,'multiline':False]['text':'/< 'includeexpr'','line_number':564,'multiline':False]['text':'/< flags for 'includeexpr'','line_number':565,'multiline':False]['text':'/< 'indentexpr'','line_number':566,'multiline':False]['text':'/< flags for 'indentexpr'','line_number':567,'multiline':False]['text':'/< 'indentkeys'','line_number':568,'multiline':False]['text':'/< 'formatprg'','line_number':569,'multiline':False]['text':'/< 'formatexpr'','line_number':570,'multiline':False]['text':'/< flags for 'formatexpr'','line_number':571,'multiline':False]['text':'/< 'keywordprg'','line_number':572,'multiline':False]['text':'/< 'lisp'','line_number':573,'multiline':False]['text':'/< 'lispoptions'','line_number':574,'multiline':False]['text':'/< 'makeencoding'','line_number':575,'multiline':False]['text':'/< 'matchpairs'','line_number':576,'multiline':False]['text':'/< 'modeline'','line_number':577,'multiline':False]['text':'/< b_p_ml saved for binary mode','line_number':578,'multiline':False]['text':'/< 'modifiable'','line_number':579,'multiline':False]['text':'/< 'nrformats'','line_number':580,'multiline':False]['text':'/< 'preserveindent'','line_number':581,'multiline':False]['text':'/< 'quoteescape'','line_number':582,'multiline':False]['text':'/< 'readonly'','line_number':583,'multiline':False]['text':'/< 'shiftwidth'','line_number':584,'multiline':False]['text':'/< 'scrollback'','line_number':585,'multiline':False]['text':'/< 'smartindent'','line_number':586,'multiline':False]['text':'/< 'softtabstop'','line_number':587,'multiline':False]['text':'/< b_p_sts saved for paste mode','line_number':588,'multiline':False]['text':'/< 'suffixesadd'','line_number':589,'multiline':False]['text':'/< 'swapfile'','line_number':590,'multiline':False]['text':'/< 'synmaxcol'','line_number':591,'multiline':False]['text':'/< 'syntax'','line_number':592,'multiline':False]['text':'/< 'tabstop'','line_number':593,'multiline':False]['text':'/< 'textwidth'','line_number':594,'multiline':False]['text':'/< b_p_tw saved for binary mode','line_number':595,'multiline':False]['text':'/< b_p_tw saved for paste mode','line_number':596,'multiline':False]['text':'/< 'wrapmargin'','line_number':597,'multiline':False]['text':'/< b_p_wm saved for binary mode','line_number':598,'multiline':False]['text':'/< b_p_wm saved for paste mode','line_number':599,'multiline':False]['text':'/< 'varsofttabstop'','line_number':600,'multiline':False]['text':'/< 'varsofttabstop' in internal format','line_number':601,'multiline':False]['text':'/< b_p_vsts saved for paste mode','line_number':602,'multiline':False]['text':'/< 'vartabstop'','line_number':603,'multiline':False]['text':'/< 'vartabstop' in internal format','line_number':604,'multiline':False]['text':'/< 'keymap'','line_number':605,'multiline':False]['text':' local values for options which are normally global','line_number':607,'multiline':False]['text':'/< 'grepprg' local value','line_number':608,'multiline':False]['text':'/< 'makeprg' local value','line_number':609,'multiline':False]['text':'/< 'errorformat' local value','line_number':610,'multiline':False]['text':'/< 'equalprg' local value','line_number':611,'multiline':False]['text':'/< 'path' local value','line_number':612,'multiline':False]['text':'/< 'autoread' local value','line_number':613,'multiline':False]['text':'/< 'tags' local value','line_number':614,'multiline':False]['text':'/< 'tagcase' local value','line_number':615,'multiline':False]['text':'/< flags for 'tagcase'','line_number':616,'multiline':False]['text':'/< 'dictionary' local value','line_number':617,'multiline':False]['text':'/< 'thesaurus' local value','line_number':618,'multiline':False]['text':'/< 'thesaurusfunc' local value','line_number':619,'multiline':False]['text':'/< 'thesaurusfunc' callback','line_number':620,'multiline':False]['text':'/< 'undolevels' local value','line_number':621,'multiline':False]['text':'/< 'undofile'','line_number':622,'multiline':False]['text':'/< 'lispwords' local value','line_number':623,'multiline':False]['text':' end of buffer options','line_number':625,'multiline':False]['text':' values set from b_p_cino','line_number':627,'multiline':False]['text':' non-zero lnum when last line of next binary','line_number':666,'multiline':False]['text':' write should not have an end-of-line','line_number':667,'multiline':False]['text':' last line had eof (CTRL-Z) when it was read','line_number':669,'multiline':False]['text':' last line had eol when it was read','line_number':670,'multiline':False]['text':' first char of 'ff' when edit started','line_number':671,'multiline':False]['text':' 'fileencoding' when edit started or NULL','line_number':672,'multiline':False]['text':' "++bad=" argument when edit started or 0','line_number':673,'multiline':False]['text':' 'bomb' when it was read','line_number':674,'multiline':False]['text':'/< Variable for "b:" Dictionary.','line_number':676,'multiline':False]['text':'/< b: scope dictionary.','line_number':677,'multiline':False]['text':' When a buffer is created, it starts without a swap file.  b_may_swap is','line_number':679,'multiline':False]['text':' then set to indicate that a swap file may be opened later.  It is reset','line_number':680,'multiline':False]['text':' if a swap file could not be opened.','line_number':681,'multiline':False]['text':' Set to true if user has been warned on first','line_number':683,'multiline':False]['text':' change of a read-only file','line_number':684,'multiline':False]['text':' Two special kinds of buffers:','line_number':686,'multiline':False]['text':' help buffer  - used for help files, won't use a swap file.','line_number':687,'multiline':False]['text':' spell buffer - used for spell info, never displayed and doesn't have a','line_number':688,'multiline':False]['text':'                file name.','line_number':689,'multiline':False]['text':' true for help file buffer (when set b_p_bt','line_number':690,'multiline':False]['text':' is "help")','line_number':691,'multiline':False]['text':' True for a spell file buffer, most fields','line_number':692,'multiline':False]['text':' are not used!','line_number':693,'multiline':False]['text':' set by prompt_setprompt()','line_number':695,'multiline':False]['text':' set by prompt_setcallback()','line_number':696,'multiline':False]['text':' set by prompt_setinterrupt()','line_number':697,'multiline':False]['text':' value for restart_edit when entering','line_number':698,'multiline':False]['text':' a prompt buffer window.','line_number':699,'multiline':False]['text':' Info related to syntax highlighting.  w_s','line_number':701,'multiline':False]['text':' normally points to this, but some windows','line_number':702,'multiline':False]['text':' may use a different synblock_T.','line_number':703,'multiline':False]['text':' maximum number of signs on a single line','line_number':706,'multiline':False]['text':' number of lines with max number of signs','line_number':707,'multiline':False]['text':' whether max changed at start of redraw','line_number':708,'multiline':False]['text':' map of invalid ranges to be checked','line_number':709,'multiline':False]['text':' Terminal instance associated with the buffer','line_number':712,'multiline':False]['text':' Additional data from shada file if any.','line_number':714,'multiline':False]['text':' modes where CTRL-C is mapped','line_number':716,'multiline':False]['text':' extmark namespaces','line_number':719,'multiline':False]['text':' number of inline virtual texts','line_number':720,'multiline':False]['text':' number of virt_line blocks','line_number':721,'multiline':False]['text':' number of sign extmarks','line_number':722,'multiline':False]['text':' number of sign extmarks with text','line_number':723,'multiline':False]['text':' array of channel_id:s which have asked to receive updates for this','line_number':725,'multiline':False]['text':' buffer.','line_number':726,'multiline':False]['text':' array of lua callbacks for buffer updates.','line_number':728,'multiline':False]['text':' whether an update callback has requested codepoint size of deleted regions.','line_number':731,'multiline':False]['text':' Measurements of the deleted or replaced region since the last update','line_number':734,'multiline':False]['text':' event. Some consumers of buffer changes need to know the byte size (like','line_number':735,'multiline':False]['text':' tree-sitter) or the corresponding UTF-32/UTF-16 size (like LSP) of the','line_number':736,'multiline':False]['text':' deleted text.','line_number':737,'multiline':False]['text':' The number for times the current line has been flushed in the memline.','line_number':743,'multiline':False]['text':' internal diff failed for this buffer','line_number':746,'multiline':False]['text':' Stuff for diff mode.','line_number':749,'multiline':False]['text':' up to four buffers can be diff'ed','line_number':750,'multiline':False]['text':' Each diffblock defines where a block of lines starts in each of the buffers','line_number':752,'multiline':False]['text':' and how many lines it occupies in that buffer.  When the lines are missing','line_number':753,'multiline':False]['text':' in the buffer the df_count[] is zero.  This is all counted in','line_number':754,'multiline':False]['text':' buffer lines.','line_number':755,'multiline':False]['text':' There is always at least one unchanged line in between the diffs.','line_number':756,'multiline':False]['text':' Otherwise it would have been included in the diff above or below it.','line_number':757,'multiline':False]['text':' df_lnum[] + df_count[] is the lnum below the change.  When in one buffer','line_number':758,'multiline':False]['text':' lines have been inserted, in the other buffer df_lnum[] is the line below','line_number':759,'multiline':False]['text':' the insertion and df_count[] is zero.  When appending lines at the end of','line_number':760,'multiline':False]['text':' the buffer, df_lnum[] is one beyond the end!','line_number':761,'multiline':False]['text':' This is using a linked list, because the number of differences is expected','line_number':762,'multiline':False]['text':' to be reasonable small.  The list is sorted on lnum.','line_number':763,'multiline':False]['text':' line number in buffer','line_number':767,'multiline':False]['text':' nr of inserted/changed lines','line_number':768,'multiline':False]['text':' has the linematch algorithm ran on this diff hunk to divide it into','line_number':769,'multiline':False]['text':' smaller diff hunks?','line_number':770,'multiline':False]['text':'/ Tab pages point to the top frame of each tab page.','line_number':777,'multiline':False]['text':'/ Note: Most values are NOT valid for the current tab page!  Use "curwin",','line_number':778,'multiline':False]['text':'/ "firstwin", etc. for that.  "tp_topframe" is always valid and can be','line_number':779,'multiline':False]['text':'/ compared against "topframe" to find the current tab page.','line_number':780,'multiline':False]['text':'/< next tabpage or NULL','line_number':784,'multiline':False]['text':'/< topframe for the windows','line_number':785,'multiline':False]['text':'/< current window in this Tab page','line_number':786,'multiline':False]['text':'/< previous window in this Tab page','line_number':787,'multiline':False]['text':'/< first window in this Tab page','line_number':788,'multiline':False]['text':'/< last window in this Tab page','line_number':789,'multiline':False]['text':'/< ROWS_AVAIL when Tab page was left','line_number':790,'multiline':False]['text':'/< Columns when Tab page was left, -1 when','line_number':791,'multiline':False]['text':'/< calling win_new_screen_cols() postponed','line_number':792,'multiline':False]['text':'/< value of 'cmdheight' when frame size was set','line_number':793,'multiline':False]['text':'/< list of diffs is outdated','line_number':797,'multiline':False]['text':'/< update diffs before redrawing','line_number':798,'multiline':False]['text':'/< window layout snapshots','line_number':799,'multiline':False]['text':'/< Variable for "t:" Dictionary.','line_number':800,'multiline':False]['text':'/< Internal variables, local to tab page.','line_number':801,'multiline':False]['text':'/< Absolute path of local cwd or NULL.','line_number':802,'multiline':False]['text':'/< Previous directory.','line_number':803,'multiline':False]['text':' Structure to cache info for displayed lines in w_lines[].','line_number':806,'multiline':False]['text':' Each logical line has one entry.','line_number':807,'multiline':False]['text':' The entry tells how the logical line is currently displayed in the window.','line_number':808,'multiline':False]['text':' This is updated when displaying the window.','line_number':809,'multiline':False]['text':' When the display is changed (e.g., when clearing the screen) w_lines_valid','line_number':810,'multiline':False]['text':' is changed to exclude invalid entries.','line_number':811,'multiline':False]['text':' When making changes to the buffer, wl_valid is reset to indicate wl_size','line_number':812,'multiline':False]['text':' may not reflect what is actually in the buffer.  When wl_valid is false,','line_number':813,'multiline':False]['text':' the entries can only be used to count the number of displayed lines used.','line_number':814,'multiline':False]['text':' wl_lnum and wl_lastlnum are invalid too.','line_number':815,'multiline':False]['text':' buffer line number for logical line','line_number':817,'multiline':False]['text':' height in screen lines','line_number':818,'multiline':False]['text':' true values are valid for text in buffer','line_number':819,'multiline':False]['text':' true when this is a range of folded lines','line_number':820,'multiline':False]['text':' last buffer line number for logical line','line_number':821,'multiline':False]['text':' Windows are kept in a tree of frames.  Each frame has a column (FR_COL)','line_number':824,'multiline':False]['text':' or row (FR_ROW) layout or is a leaf, which has a window.','line_number':825,'multiline':False]['text':' FR_LEAF, FR_COL or FR_ROW','line_number':827,'multiline':False]['text':' new width used in win_equal_rec()','line_number':829,'multiline':False]['text':' new height used in win_equal_rec()','line_number':831,'multiline':False]['text':' containing frame or NULL','line_number':832,'multiline':False]['text':' frame right or below in same parent, NULL','line_number':833,'multiline':False]['text':' for last','line_number':834,'multiline':False]['text':' frame left or above in same parent, NULL','line_number':835,'multiline':False]['text':' for first','line_number':836,'multiline':False]['text':' fr_child and fr_win are mutually exclusive','line_number':837,'multiline':False]['text':' first contained frame','line_number':838,'multiline':False]['text':' window that fills this frame; for a snapshot','line_number':839,'multiline':False]['text':' set to the current window','line_number':840,'multiline':False]['text':' frame is a leaf','line_number':843,'multiline':False]['text':' frame with a row of windows','line_number':844,'multiline':False]['text':' frame with a column of windows','line_number':845,'multiline':False]['text':' Struct used for highlighting 'hlsearch' matches, matches defined by','line_number':847,'multiline':False]['text':' ":match" and matches defined by match functions.','line_number':848,'multiline':False]['text':' For 'hlsearch' there is one pattern for all windows.  For ":match" and the','line_number':849,'multiline':False]['text':' match functions there is a different pattern for each window.','line_number':850,'multiline':False]['text':' points to the regexp program; contains last found','line_number':852,'multiline':False]['text':' match (may continue in next line)','line_number':853,'multiline':False]['text':' the buffer to search for a match','line_number':854,'multiline':False]['text':' the line to search for a match','line_number':855,'multiline':False]['text':' attributes to be used for a match','line_number':856,'multiline':False]['text':' attributes currently active in win_line()','line_number':857,'multiline':False]['text':' first lnum to search for multi-line pat','line_number':858,'multiline':False]['text':' in win_line() points to char where HL starts','line_number':859,'multiline':False]['text':' in win_line() points to char where HL ends','line_number':860,'multiline':False]['text':' position specified directly by matchaddpos()','line_number':861,'multiline':False]['text':' true if the cursor is inside the match, used for CurSearch','line_number':862,'multiline':False]['text':' for a time limit','line_number':863,'multiline':False]['text':'/ Same as lpos_T, but with additional field len.','line_number':866,'multiline':False]['text':'/< line number','line_number':868,'multiline':False]['text':'/< column number','line_number':869,'multiline':False]['text':'/< length: 0 - to the end of line','line_number':870,'multiline':False]['text':'/ matchitem_T provides a linked list for storing match items for ":match",','line_number':873,'multiline':False]['text':'/ matchadd() and matchaddpos().','line_number':874,'multiline':False]['text':'/< match ID','line_number':878,'multiline':False]['text':'/< match priority','line_number':879,'multiline':False]['text':' Either a pattern is defined (mit_pattern is not NUL) or a list of','line_number':881,'multiline':False]['text':' positions is given (mit_pos is not NULL and mit_pos_count > 0).','line_number':882,'multiline':False]['text':'/< pattern to highlight','line_number':883,'multiline':False]['text':'/< regexp program for pattern','line_number':884,'multiline':False]['text':'/< array of positions','line_number':886,'multiline':False]['text':'/< nr of entries in mit_pos','line_number':887,'multiline':False]['text':'/< internal position counter','line_number':888,'multiline':False]['text':'/< top buffer line','line_number':889,'multiline':False]['text':'/< bottom buffer line','line_number':890,'multiline':False]['text':'/< struct for doing the actual highlighting','line_number':892,'multiline':False]['text':'/< highlight group ID','line_number':893,'multiline':False]['text':'/< cchar for Conceal highlighting','line_number':894,'multiline':False]['text':'/ Keep in sync with float_relative_str[] in nvim_win_get_config()','line_number':904,'multiline':False]['text':'/ Minimal UI: no number column, eob markers, etc','line_number':914,'multiline':False]['text':' Structure to store last cursor position and topline.  Used by check_lnums()','line_number':968,'multiline':False]['text':' and reset_lnums().','line_number':969,'multiline':False]['text':' original topline value','line_number':971,'multiline':False]['text':' corrected topline value','line_number':972,'multiline':False]['text':' original cursor position','line_number':973,'multiline':False]['text':' corrected cursor position','line_number':974,'multiline':False]['text':'/ Characters from the 'listchars' option.','line_number':977,'multiline':False]['text':'/< first tab character','line_number':984,'multiline':False]['text':'/< second tab character','line_number':985,'multiline':False]['text':'/< third tab character','line_number':986,'multiline':False]['text':'/ Characters from the 'fillchars' option.','line_number':994,'multiline':False]['text':'/< when fold is open','line_number':1007,'multiline':False]['text':'/< when fold is closed','line_number':1008,'multiline':False]['text':'/< continuous fold marker','line_number':1009,'multiline':False]['text':'/ Structure which contains all information that belongs to a window.','line_number':1016,'multiline':False]['text':'/','line_number':1017,'multiline':False]['text':'/ All row numbers are relative to the start of the window, except w_winrow.','line_number':1018,'multiline':False]['text':'/< unique identifier for the window','line_number':1020,'multiline':False]['text':'/< buffer we are a window into (used','line_number':1022,'multiline':False]['text':'/< often, keep it the first item!)','line_number':1023,'multiline':False]['text':'/< for :ownsyntax','line_number':1025,'multiline':False]['text':'/< 'winhighlight' normal id','line_number':1032,'multiline':False]['text':'/< 'winhighlight' normal final attrs','line_number':1033,'multiline':False]['text':'/< 'winhighlight' NormalNC final attrs','line_number':1034,'multiline':False]['text':'/< attrs need to be recalculated','line_number':1036,'multiline':False]['text':'/< link to previous window','line_number':1038,'multiline':False]['text':'/< link to next window','line_number':1039,'multiline':False]['text':'/< window is being closed, don't let','line_number':1040,'multiline':False]['text':'/< autocommands close it too.','line_number':1041,'multiline':False]['text':'/< frame containing this window','line_number':1043,'multiline':False]['text':'/< cursor position in buffer','line_number':1045,'multiline':False]['text':'/< Column we want to be at.  This is','line_number':1047,'multiline':False]['text':'/< used to try to stay in the same column','line_number':1048,'multiline':False]['text':'/< for up/down cursor motions.','line_number':1049,'multiline':False]['text':' If set, then update w_curswant the next','line_number':1051,'multiline':False]['text':' time through cursupdate() to the','line_number':1052,'multiline':False]['text':' current virtual column','line_number':1053,'multiline':False]['text':'/< Where 'cursorline' should be drawn,','line_number':1055,'multiline':False]['text':'/< can be different from w_cursor.lnum','line_number':1056,'multiline':False]['text':'/< for closed folds.','line_number':1057,'multiline':False]['text':'/< where last 'cursorline' was drawn','line_number':1058,'multiline':False]['text':' the next seven are used to update the visual part','line_number':1060,'multiline':False]['text':'/< last known VIsual_mode','line_number':1061,'multiline':False]['text':'/< last known end of visual part','line_number':1062,'multiline':False]['text':'/< first column for block visual part','line_number':1063,'multiline':False]['text':'/< last column for block visual part','line_number':1064,'multiline':False]['text':'/< last known start of visual part','line_number':1065,'multiline':False]['text':'/< last known start of visual part','line_number':1066,'multiline':False]['text':'/< last known value of Curswant','line_number':1067,'multiline':False]['text':'/< cursor lnum when 'rnu' was last redrawn','line_number':1069,'multiline':False]['text':'/ 'listchars' characters. Defaults set in set_chars_option().','line_number':1071,'multiline':False]['text':'/ 'fillchars' characters. Defaults set in set_chars_option().','line_number':1074,'multiline':False]['text':' "w_topline", "w_leftcol" and "w_skipcol" specify the offsets for','line_number':1077,'multiline':False]['text':' displaying the buffer.','line_number':1078,'multiline':False]['text':' buffer line number of the line at the','line_number':1079,'multiline':False]['text':' top of the window','line_number':1080,'multiline':False]['text':' flag set to true when topline is set,','line_number':1081,'multiline':False]['text':' e.g. by winrestview()','line_number':1082,'multiline':False]['text':' number of filler lines above w_topline','line_number':1083,'multiline':False]['text':' w_topfill at last redraw','line_number':1084,'multiline':False]['text':' true when filler lines are actually','line_number':1085,'multiline':False]['text':' below w_topline (at end of file)','line_number':1086,'multiline':False]['text':' w_botfill at last redraw','line_number':1087,'multiline':False]['text':' screen column number of the left most','line_number':1088,'multiline':False]['text':' character in the window; used when','line_number':1089,'multiline':False]['text':' 'wrap' is off','line_number':1090,'multiline':False]['text':' starting screen column for the first','line_number':1091,'multiline':False]['text':' line in the window; used when 'wrap' is','line_number':1092,'multiline':False]['text':' on; does not include win_col_off()','line_number':1093,'multiline':False]['text':' six fields that are only used when there is a WinScrolled autocommand','line_number':1095,'multiline':False]['text':'/< last known value for w_topline','line_number':1096,'multiline':False]['text':'/< last known value for w_topfill','line_number':1097,'multiline':False]['text':'/< last known value for w_leftcol','line_number':1098,'multiline':False]['text':'/< last known value for w_skipcol','line_number':1099,'multiline':False]['text':'/< last known value for w_width','line_number':1100,'multiline':False]['text':'/< last known value for w_height','line_number':1101,'multiline':False]['text':'','line_number':1103,'multiline':False]['text':' Layout of the window in the screen.','line_number':1104,'multiline':False]['text':' May need to add "msg_scrolled" to "w_winrow" in rare situations.','line_number':1105,'multiline':False]['text':'','line_number':1106,'multiline':False]['text':' first row of window in screen','line_number':1107,'multiline':False]['text':' number of rows in window, excluding','line_number':1108,'multiline':False]['text':' status/command line(s)','line_number':1109,'multiline':False]['text':' previous winrow used for 'splitkeep'','line_number':1110,'multiline':False]['text':' previous height used for 'splitkeep'','line_number':1111,'multiline':False]['text':' number of status lines (0 or 1)','line_number':1112,'multiline':False]['text':' number of window bars (0 or 1)','line_number':1113,'multiline':False]['text':' Leftmost column of window in screen.','line_number':1114,'multiline':False]['text':' Width of window, excluding separation.','line_number':1115,'multiline':False]['text':' Number of horizontal separator rows (0 or 1)','line_number':1116,'multiline':False]['text':' Number of vertical separator columns (0 or 1).','line_number':1117,'multiline':False]['text':' backup of cursor pos and topline','line_number':1118,'multiline':False]['text':' if true cursor may be invalid','line_number':1119,'multiline':False]['text':'/< offset from winrow to the inner window area','line_number':1121,'multiline':False]['text':'/< offset from wincol to the inner window area','line_number':1122,'multiline':False]['text':'/< this includes float border but excludes special columns','line_number':1123,'multiline':False]['text':'/< implemented in win_line() (i.e. signs, folds, numbers)','line_number':1124,'multiline':False]['text':' inner size of window, which can be overridden by external UI','line_number':1126,'multiline':False]['text':' external UI request. If non-zero, the inner size will use this.','line_number':1129,'multiline':False]['text':' top, right, bottom, left','line_number':1133,'multiline':False]['text':' outer size of window grid, including border','line_number':1134,'multiline':False]['text':' === start of cached values ====','line_number':1138,'multiline':False]['text':' Recomputing is minimized by storing the result of computations.','line_number':1140,'multiline':False]['text':' Use functions in screen.c to check if they are valid and to update.','line_number':1141,'multiline':False]['text':' w_valid is a bitfield of flags, which indicate if specific values are','line_number':1142,'multiline':False]['text':' valid or need to be recomputed.','line_number':1143,'multiline':False]['text':' last known position of w_cursor, used to adjust w_valid','line_number':1145,'multiline':False]['text':' last known w_leftcol','line_number':1146,'multiline':False]['text':' last known w_skipcol','line_number':1147,'multiline':False]['text':' topline when the viewport was last updated','line_number':1150,'multiline':False]['text':' botline when the viewport was last updated','line_number':1151,'multiline':False]['text':' topfill when the viewport was last updated','line_number':1152,'multiline':False]['text':' skipcol when the viewport was last updated','line_number':1153,'multiline':False]['text':' w_cline_height is the number of physical lines taken by the buffer line','line_number':1155,'multiline':False]['text':' that the cursor is on.  We use this to avoid extra calls to plines_win().','line_number':1156,'multiline':False]['text':' current size of cursor line','line_number':1157,'multiline':False]['text':' cursor line is folded','line_number':1158,'multiline':False]['text':' starting row of the cursor line','line_number':1160,'multiline':False]['text':' column number of the cursor in the','line_number':1162,'multiline':False]['text':' buffer line, as opposed to the column','line_number':1163,'multiline':False]['text':' number we're at on the screen.  This','line_number':1164,'multiline':False]['text':' makes a difference on lines which span','line_number':1165,'multiline':False]['text':' more than one screen line or when','line_number':1166,'multiline':False]['text':' w_leftcol is non-zero','line_number':1167,'multiline':False]['text':' w_wrow and w_wcol specify the cursor position in the window.','line_number':1169,'multiline':False]['text':' This is related to positions in the window, not in the display or','line_number':1170,'multiline':False]['text':' buffer, thus w_wrow is relative to w_winrow.','line_number':1171,'multiline':False]['text':' cursor position in window','line_number':1172,'multiline':False]['text':' number of the line below the bottom of','line_number':1174,'multiline':False]['text':' the window','line_number':1175,'multiline':False]['text':' number of ~ rows in window','line_number':1176,'multiline':False]['text':' number of filler rows at the end of the','line_number':1177,'multiline':False]['text':' window','line_number':1178,'multiline':False]['text':' Info about the lines currently in the window is remembered to avoid','line_number':1180,'multiline':False]['text':' recomputing it every time.  The allocated size of w_lines[] is Rows.','line_number':1181,'multiline':False]['text':' Only the w_lines_valid entries are actually valid.','line_number':1182,'multiline':False]['text':' When the display is up-to-date w_lines[0].wl_lnum is equal to w_topline','line_number':1183,'multiline':False]['text':' and w_lines[w_lines_valid - 1].wl_lnum is equal to w_botline.','line_number':1184,'multiline':False]['text':' Between changing text and updating the display w_lines[] represents','line_number':1185,'multiline':False]['text':' what is currently displayed.  wl_valid is reset to indicated this.','line_number':1186,'multiline':False]['text':' This is used for efficient redrawing.','line_number':1187,'multiline':False]['text':' number of valid entries','line_number':1188,'multiline':False]['text':' array of nested folds','line_number':1191,'multiline':False]['text':' when true: some folds are opened/closed','line_number':1192,'multiline':False]['text':' manually','line_number':1193,'multiline':False]['text':' when true: folding needs to be','line_number':1194,'multiline':False]['text':' recomputed','line_number':1195,'multiline':False]['text':' width of 'number' and 'relativenumber'','line_number':1196,'multiline':False]['text':' column being used','line_number':1197,'multiline':False]['text':' width of 'signcolumn'','line_number':1198,'multiline':False]['text':' minimum width or SCL_NO/SCL_NUM','line_number':1199,'multiline':False]['text':' maximum width or SCL_NO/SCL_NUM','line_number':1200,'multiline':False]['text':' === end of cached values ===','line_number':1202,'multiline':False]['text':' type of redraw to be performed on win','line_number':1204,'multiline':False]['text':' number of window lines to update when','line_number':1205,'multiline':False]['text':' w_redr_type is UPD_REDRAW_TOP','line_number':1206,'multiline':False]['text':' when != 0: first line needing redraw','line_number':1207,'multiline':False]['text':' when != 0: last line needing redraw','line_number':1208,'multiline':False]['text':' if true statusline/winbar must be redrawn','line_number':1209,'multiline':False]['text':' if true border must be redrawn','line_number':1210,'multiline':False]['text':' if true 'statuscolumn' must be redrawn','line_number':1211,'multiline':False]['text':' remember what is shown in the 'statusline'-format elements','line_number':1213,'multiline':False]['text':' cursor position when last redrawn','line_number':1214,'multiline':False]['text':' virtcol when last redrawn','line_number':1215,'multiline':False]['text':' topline when last redrawn','line_number':1216,'multiline':False]['text':' line count when last redrawn','line_number':1217,'multiline':False]['text':' topfill when last redrawn','line_number':1218,'multiline':False]['text':' true if elements show 0-1 (empty line)','line_number':1219,'multiline':False]['text':' reg_recording when last redrawn','line_number':1220,'multiline':False]['text':' get_real_state() when last redrawn','line_number':1221,'multiline':False]['text':' VIsual_mode when last redrawn','line_number':1222,'multiline':False]['text':' alternate file (for # and CTRL-^)','line_number':1224,'multiline':False]['text':' pointer to arglist for this window','line_number':1226,'multiline':False]['text':' current index in argument list (can be','line_number':1227,'multiline':False]['text':' out of range!)','line_number':1228,'multiline':False]['text':' editing another file than w_arg_idx','line_number':1229,'multiline':False]['text':' absolute path of local directory or NULL','line_number':1231,'multiline':False]['text':' previous directory','line_number':1232,'multiline':False]['text':' Options local to a window.','line_number':1233,'multiline':False]['text':' They are local because they influence the layout of the window or','line_number':1234,'multiline':False]['text':' depend on the window layout.','line_number':1235,'multiline':False]['text':' There are two values: w_onebuf_opt is local to the buffer currently in','line_number':1236,'multiline':False]['text':' this window, w_allbuf_opt is for all buffers in this window.','line_number':1237,'multiline':False]['text':' transform a pointer to a "onebuf" option into a "allbuf" option','line_number':1240,'multiline':False]['text':' A few options have local flags for P_INSECURE.','line_number':1243,'multiline':False]['text':' flags for 'statusline'','line_number':1244,'multiline':False]['text':' flags for 'winbar'','line_number':1245,'multiline':False]['text':' flags for 'foldexpr'','line_number':1246,'multiline':False]['text':' flags for 'foldtext'','line_number':1247,'multiline':False]['text':' array of columns to highlight or NULL','line_number':1248,'multiline':False]['text':' flags for cursorline highlighting','line_number':1249,'multiline':False]['text':' minimum width for breakindent','line_number':1251,'multiline':False]['text':' additional shift for breakindent','line_number':1252,'multiline':False]['text':' sbr in 'briopt'','line_number':1253,'multiline':False]['text':' additional indent for lists','line_number':1254,'multiline':False]['text':' indent for specific column','line_number':1255,'multiline':False]['text':'/< Variable for "w:" dictionary.','line_number':1259,'multiline':False]['text':'/< Dictionary with w: variables.','line_number':1260,'multiline':False]['text':' The w_prev_pcmark field is used to check whether we really did jump to','line_number':1262,'multiline':False]['text':' a new line after setting the w_pcmark.  If not, then we revert to','line_number':1263,'multiline':False]['text':' using the previous w_pcmark.','line_number':1264,'multiline':False]['text':' previous context mark','line_number':1265,'multiline':False]['text':' previous w_pcmark','line_number':1266,'multiline':False]['text':' the jumplist contains old cursor positions','line_number':1268,'multiline':False]['text':' number of active entries','line_number':1270,'multiline':False]['text':' current position','line_number':1271,'multiline':False]['text':' current position in b_changelist','line_number':1273,'multiline':False]['text':' head of match list','line_number':1275,'multiline':False]['text':' next match ID','line_number':1276,'multiline':False]['text':' the tagstack grows from 0 upwards:','line_number':1278,'multiline':False]['text':' entry 0: older','line_number':1279,'multiline':False]['text':' entry 1: newer','line_number':1280,'multiline':False]['text':' entry 2: newest','line_number':1281,'multiline':False]['text':' the tag stack','line_number':1282,'multiline':False]['text':' idx just below active entry','line_number':1283,'multiline':False]['text':' number of tags on stack','line_number':1284,'multiline':False]['text':' the grid specific to the window','line_number':1286,'multiline':False]['text':' the grid specific to the window','line_number':1287,'multiline':False]['text':' true if window position changed','line_number':1288,'multiline':False]['text':'/< whether the window is floating','line_number':1289,'multiline':False]['text':' w_fraction is the fractional row of the cursor within the window, from','line_number':1292,'multiline':False]['text':' 0 at the top row to FRACTION_MULT at the last row.','line_number':1293,'multiline':False]['text':' w_prev_fraction_row was the actual cursor row when w_fraction was last','line_number':1294,'multiline':False]['text':' calculated.','line_number':1295,'multiline':False]['text':' line count when ml_nrwidth_width was computed.','line_number':1299,'multiline':False]['text':' line count when 'statuscolumn' width was computed.','line_number':1300,'multiline':False]['text':' nr of chars to print line count.','line_number':1301,'multiline':False]['text':' Location list for this window','line_number':1303,'multiline':False]['text':' Location list reference used in the location list window.','line_number':1304,'multiline':False]['text':' In a non-location list window, w_llist_ref is NULL.','line_number':1305,'multiline':False]['text':' Status line click definitions','line_number':1308,'multiline':False]['text':' Size of the w_status_click_defs array','line_number':1310,'multiline':False]['text':' Window bar click definitions','line_number':1313,'multiline':False]['text':' Size of the w_winbar_click_defs array','line_number':1315,'multiline':False]['text':' Status column click definitions','line_number':1318,'multiline':False]['text':' Size of the w_statuscol_click_defs array','line_number':1320,'multiline':False]['text':'/ Macros defined in Vim, but not in Neovim','line_number':1324,'multiline':False]['text':' uncrustify:off','line_number':1325,'multiline':False]['text':' uncrustify:on','line_number':1328,'multiline':False]