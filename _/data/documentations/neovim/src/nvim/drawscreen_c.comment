['text':' drawscreen.c: Code for updating all the windows on the screen.','line_number':1,'multiline':False]['text':' This is the top level, drawline.c is the middle and grid.c/screen.c the lower level.','line_number':2,'multiline':False]['text':' update_screen() is the function that updates all windows and status lines.','line_number':4,'multiline':False]['text':' It is called from the main loop when must_redraw is non-zero.  It may be','line_number':5,'multiline':False]['text':' called from other places when an immediate screen update is needed.','line_number':6,'multiline':False]['text':'','line_number':7,'multiline':False]['text':' The part of the buffer that is displayed in a window is set with:','line_number':8,'multiline':False]['text':' - w_topline (first buffer line in window)','line_number':9,'multiline':False]['text':' - w_topfill (filler lines above the first line)','line_number':10,'multiline':False]['text':' - w_leftcol (leftmost window cell in window),','line_number':11,'multiline':False]['text':' - w_skipcol (skipped window cells of first line)','line_number':12,'multiline':False]['text':'','line_number':13,'multiline':False]['text':' Commands that only move the cursor around in a window, do not need to take','line_number':14,'multiline':False]['text':' action to update the display.  The main loop will check if w_topline is','line_number':15,'multiline':False]['text':' valid and update it (scroll the window) when needed.','line_number':16,'multiline':False]['text':'','line_number':17,'multiline':False]['text':' Commands that scroll a window change w_topline and must call','line_number':18,'multiline':False]['text':' check_cursor() to move the cursor into the visible part of the window, and','line_number':19,'multiline':False]['text':' call redraw_later(wp, UPD_VALID) to have the window displayed by update_screen()','line_number':20,'multiline':False]['text':' later.','line_number':21,'multiline':False]['text':'','line_number':22,'multiline':False]['text':' Commands that change text in the buffer must call changed_bytes() or','line_number':23,'multiline':False]['text':' changed_lines() to mark the area that changed and will require updating','line_number':24,'multiline':False]['text':' later.  The main loop will call update_screen(), which will update each','line_number':25,'multiline':False]['text':' window that shows the changed buffer.  This assumes text above the change','line_number':26,'multiline':False]['text':' can remain displayed as it is.  Text after the change may need updating for','line_number':27,'multiline':False]['text':' scrolling, folding and syntax highlighting.','line_number':28,'multiline':False]['text':'','line_number':29,'multiline':False]['text':' Commands that change how a window is displayed (e.g., setting 'list') or','line_number':30,'multiline':False]['text':' invalidate the contents of a window in another way (e.g., change fold','line_number':31,'multiline':False]['text':' settings), must call redraw_later(wp, UPD_NOT_VALID) to have the whole window','line_number':32,'multiline':False]['text':' redisplayed by update_screen() later.','line_number':33,'multiline':False]['text':'','line_number':34,'multiline':False]['text':' Commands that change how a buffer is displayed (e.g., setting 'tabstop')','line_number':35,'multiline':False]['text':' must call redraw_curbuf_later(UPD_NOT_VALID) to have all the windows for the','line_number':36,'multiline':False]['text':' buffer redisplayed by update_screen() later.','line_number':37,'multiline':False]['text':'','line_number':38,'multiline':False]['text':' Commands that change highlighting and possibly cause a scroll too must call','line_number':39,'multiline':False]['text':' redraw_later(wp, UPD_SOME_VALID) to update the whole window but still use','line_number':40,'multiline':False]['text':' scrolling to avoid redrawing everything.  But the length of displayed lines','line_number':41,'multiline':False]['text':' must not change, use UPD_NOT_VALID then.','line_number':42,'multiline':False]['text':'','line_number':43,'multiline':False]['text':' Commands that move the window position must call redraw_later(wp, UPD_NOT_VALID).','line_number':44,'multiline':False]['text':' TODO(neovim): should minimize redrawing by scrolling when possible.','line_number':45,'multiline':False]['text':'','line_number':46,'multiline':False]['text':' Commands that change everything (e.g., resizing the screen) must call','line_number':47,'multiline':False]['text':' redraw_all_later(UPD_NOT_VALID) or redraw_all_later(UPD_CLEAR).','line_number':48,'multiline':False]['text':'','line_number':49,'multiline':False]['text':' Things that are handled indirectly:','line_number':50,'multiline':False]['text':' - When messages scroll the screen up, msg_scrolled will be set and','line_number':51,'multiline':False]['text':'   update_screen() called to redraw.','line_number':52,'multiline':False]['text':'/ corner value flags for hsep_connected and vsep_connected','line_number':114,'multiline':False]['text':'/ Check if the cursor line needs to be redrawn because of 'concealcursor'.','line_number':130,'multiline':False]['text':'/','line_number':131,'multiline':False]['text':'/ When cursor is moved at the same time, both lines will be redrawn regardless.','line_number':132,'multiline':False]['text':' Need to recompute cursor column, e.g., when starting Visual mode','line_number':141,'multiline':False]['text':' without concealing.','line_number':142,'multiline':False]['text':'/ Resize default_grid to Rows and Columns.','line_number':146,'multiline':False]['text':'/','line_number':147,'multiline':False]['text':'/ Allocate default_grid.chars[] and other grid arrays.','line_number':148,'multiline':False]['text':'/','line_number':149,'multiline':False]['text':'/ There may be some time between setting Rows and Columns and (re)allocating','line_number':150,'multiline':False]['text':'/ default_grid arrays.  This happens when starting up and when','line_number':151,'multiline':False]['text':'/ (manually) changing the screen size.  Always use default_grid.rows and','line_number':152,'multiline':False]['text':'/ default_grid.Columns to access items in default_grid.chars[].  Use Rows','line_number':153,'multiline':False]['text':'/ and Columns for positioning text etc. where the final size of the screen is','line_number':154,'multiline':False]['text':'/ needed.','line_number':155,'multiline':False]['text':'/','line_number':156,'multiline':False]['text':'/ @return  whether resizing has been done','line_number':157,'multiline':False]['text':' It's possible that we produce an out-of-memory message below, which','line_number':162,'multiline':False]['text':' will cause this function to be called again.  To break the loop, just','line_number':163,'multiline':False]['text':' return here.','line_number':164,'multiline':False]['text':' Allocation of the screen buffers is done only when the size changes and','line_number':170,'multiline':False]['text':' when Rows and Columns have been set and we have started doing full','line_number':171,'multiline':False]['text':' screen stuff.','line_number':172,'multiline':False]['text':' We're changing the size of the screen.','line_number':183,'multiline':False]['text':' - Allocate new arrays for default_grid','line_number':184,'multiline':False]['text':' - Move lines from the old arrays into the new arrays, clear extra','line_number':185,'multiline':False]['text':'   lines (unless the screen is going to be cleared).','line_number':186,'multiline':False]['text':' - Free the old arrays.','line_number':187,'multiline':False]['text':'','line_number':188,'multiline':False]['text':' If anything fails, make grid arrays NULL, so we don't do anything!','line_number':189,'multiline':False]['text':' Continuing with the old arrays may result in a crash, because the','line_number':190,'multiline':False]['text':' size is wrong.','line_number':191,'multiline':False]['text':' blank out the default grid','line_number':218,'multiline':False]['text':' clear the display','line_number':224,'multiline':False]['text':' no need to clear again','line_number':243,'multiline':False]['text':' put cursor on last line for messages','line_number':246,'multiline':False]['text':' can't scroll back','line_number':248,'multiline':False]['text':'/ Set dimensions of the Nvim application "screen".','line_number':259,'multiline':False]['text':' Avoid recursiveness, can happen when setting the window size causes','line_number':262,'multiline':False]['text':' another window-changed signal.','line_number':263,'multiline':False]['text':' just checking...','line_number':268,'multiline':False]['text':' postpone the resizing','line_number':273,'multiline':False]['text':' In rare cases, autocommands may have altered Rows or Columns,','line_number':297,'multiline':False]['text':' so retry to check if we need to allocate the screen again.','line_number':298,'multiline':False]['text':' win_new_screensize will recompute floats position, but tell the','line_number':300,'multiline':False]['text':' compositor to not redraw them yet','line_number':301,'multiline':False]['text':' fit the windows in the new sized screen','line_number':309,'multiline':False]['text':' recompute columns for shown command and ruler','line_number':311,'multiline':False]['text':' Do not apply autocommands more than 3 times to avoid an endless loop','line_number':315,'multiline':False]['text':' in case applying autocommands always changes Rows or Columns.','line_number':316,'multiline':False]['text':' We only redraw when it's needed:','line_number':337,'multiline':False]['text':' - While at the more prompt or executing an external command, don't','line_number':338,'multiline':False]['text':'   redraw, but position the cursor.','line_number':339,'multiline':False]['text':' - While editing the command line, only redraw that. TODO: lies','line_number':340,'multiline':False]['text':' - in Ex mode, don't redraw anything.','line_number':341,'multiline':False]['text':' - Otherwise, redraw right now, and position the cursor.','line_number':342,'multiline':False]['text':' TODO(bfredl): sometimes messes up the output. Implement clear+redraw','line_number':348,'multiline':False]['text':' also for the pager? (or: what if the pager was just a modal window?)','line_number':349,'multiline':False]['text':' TODO(bfredl): ins_compl_show_pum wants to redraw the screen first.','line_number':366,'multiline':False]['text':' For now make sure the nested update_screen() won't redraw the','line_number':367,'multiline':False]['text':' pum at the old position. Try to untangle this later.','line_number':368,'multiline':False]['text':'/ Check if the new Nvim application "screen" dimensions are valid.','line_number':383,'multiline':False]['text':'/ Correct it if it's too small or way too big.','line_number':384,'multiline':False]['text':' Limit Rows and Columns to avoid an overflow in Rows * Columns.','line_number':387,'multiline':False]['text':' need room for one window and command line','line_number':389,'multiline':False]['text':'/ Return true if redrawing should currently be done.','line_number':402,'multiline':False]['text':'/ Redraw the parts of the screen that is marked for redraw.','line_number':409,'multiline':False]['text':'/','line_number':410,'multiline':False]['text':'/ Most code shouldn't call this directly, rather use redraw_later() and','line_number':411,'multiline':False]['text':'/ and redraw_all_later() to mark parts of the screen as needing a redraw.','line_number':412,'multiline':False]['text':' Don't do anything if the screen structures are (not yet) valid.','line_number':418,'multiline':False]['text':' A VimResized autocmd can invoke redrawing in the middle of a resize,','line_number':419,'multiline':False]['text':' which would bypass the checks in screen_resize for popupmenu etc.','line_number':420,'multiline':False]['text':' May have postponed updating diffs.','line_number':425,'multiline':False]['text':' Postpone the redrawing when it's not needed and when being called','line_number':430,'multiline':False]['text':' recursively.','line_number':431,'multiline':False]['text':' must_redraw is reset here, so that when we run into some weird','line_number':438,'multiline':False]['text':' reason to redraw while busy redrawing (e.g., asynchronous','line_number':439,'multiline':False]['text':' scrolling), or update_topline() in win_update() will cause a','line_number':440,'multiline':False]['text':' scroll, or a decoration provider requires a redraw, the screen','line_number':441,'multiline':False]['text':' will be redrawn later or in win_update().','line_number':442,'multiline':False]['text':' let syntax code know we're in a next round of','line_number':447,'multiline':False]['text':' display updating','line_number':448,'multiline':False]['text':' glyph cache full, very rare','line_number':450,'multiline':False]['text':' must use CLEAR, as the contents of screen buffers cannot be','line_number':452,'multiline':False]['text':' compared to their previous state here.','line_number':453,'multiline':False]['text':' TODO(bfredl): if start to cache schar_T values in places (like fcs/lcs)','line_number':454,'multiline':False]['text':' we need to revalidate these here as well!','line_number':455,'multiline':False]['text':' Tricky: vim code can reset msg_scrolled behind our back, so need','line_number':459,'multiline':False]['text':' separate bookkeeping for now.','line_number':460,'multiline':False]['text':' if the screen was scrolled up when displaying a message, scroll it down','line_number':470,'multiline':False]['text':' non-displayed part of msg_grid is considered invalid.','line_number':475,'multiline':False]['text':' UPD_CLEAR is already handled','line_number':484,'multiline':False]['text':' TODO(bfredl): too pessimistic. type could be UPD_NOT_VALID','line_number':496,'multiline':False]['text':' only because windows that are above the separator.','line_number':497,'multiline':False]['text':' screen was only invalid for the msgarea part.','line_number':511,'multiline':False]['text':' @TODO(bfredl): using the same "valid" flag','line_number':512,'multiline':False]['text':' for both messages and floats moving is bit of a mess.','line_number':513,'multiline':False]['text':' reset cmdline_row now (may have been changed temporarily)','line_number':525,'multiline':False]['text':' Check for changed highlighting','line_number':529,'multiline':False]['text':' first clear screen','line_number':535,'multiline':False]['text':' will reset clear_cmdline','line_number':536,'multiline':False]['text':' and set UPD_NOT_VALID for each window','line_number':537,'multiline':False]['text':' clear external cmdline state','line_number':538,'multiline':False]['text':' must_redraw may be set indirectly, avoid another redraw later','line_number':540,'multiline':False]['text':' might need to clear space on default_grid for the message area.','line_number':547,'multiline':False]['text':' "start" callback could have changed highlights for global elements','line_number':557,'multiline':False]['text':' going to clear cmdline (done below)','line_number':563,'multiline':False]['text':' Force redraw when width of 'number' or 'relativenumber' column','line_number':567,'multiline':False]['text':' changes.','line_number':568,'multiline':False]['text':' TODO(bfredl): special casing curwin here is SÅ JÄVLA BULL.','line_number':569,'multiline':False]['text':' Either this should be done for all windows or not at all.','line_number':570,'multiline':False]['text':' Redraw the tab pages line if needed.','line_number':577,'multiline':False]['text':' Correct stored syntax highlighting info for changes in each displayed','line_number':589,'multiline':False]['text':' buffer.  Each buffer must only be done once.','line_number':590,'multiline':False]['text':' Go from top to bottom through the windows, redrawing the ones that need it.','line_number':608,'multiline':False]['text':' reallocate grid if needed.','line_number':620,'multiline':False]['text':' redraw status line and window bar after the window to minimize cursor movement','line_number':635,'multiline':False]['text':' May need to redraw the popup menu.','line_number':644,'multiline':False]['text':' Reset b_mod_set and b_signcols.resized flags.  Going through all windows is','line_number':652,'multiline':False]['text':' probably faster than going through all buffers (there could be many buffers).','line_number':653,'multiline':False]['text':' Clear or redraw the command line.  Done last, because scrolling may','line_number':661,'multiline':False]['text':' mess up the command line.','line_number':662,'multiline':False]['text':' May put up an introductory message when not editing a file','line_number':667,'multiline':False]['text':' either cmdline is cleared, not drawn or mode is last drawn','line_number':676,'multiline':False]['text':'/ Prepare for 'hlsearch' highlighting.','line_number':681,'multiline':False]['text':' just in case it wasn't called before','line_number':688,'multiline':False]['text':' Set the time limit to 'redrawtime'.','line_number':690,'multiline':False]['text':'/ Clean up for 'hlsearch' highlighting.','line_number':694,'multiline':False]['text':'/ Set cursor to its position in the current window.','line_number':808,'multiline':False]['text':'/ Set cursor to its position in the current window.','line_number':814,'multiline':False]['text':'/ @param force  when true, also when not redrawing.','line_number':815,'multiline':False]['text':' With 'rightleft' set and the cursor on a double-wide character,','line_number':825,'multiline':False]['text':' position it on the leftmost column.','line_number':826,'multiline':False]['text':'/ Show current cursor info in ruler and various other places','line_number':837,'multiline':False]['text':'/','line_number':838,'multiline':False]['text':'/ @param always  if false, only show ruler if position has changed.','line_number':839,'multiline':False]['text':' Only draw when something changed.','line_number':846,'multiline':False]['text':'/ @return true when postponing displaying the mode message: when not redrawing','line_number':889,'multiline':False]['text':'/ or inside a mapping.','line_number':890,'multiline':False]['text':' Call char_avail() only when we are going to show something, because it','line_number':893,'multiline':False]['text':' takes a bit of time.  redrawing() may also call char_avail().','line_number':894,'multiline':False]['text':' show mode later','line_number':896,'multiline':False]['text':'/ Show the current mode and ruler.','line_number':902,'multiline':False]['text':'/','line_number':903,'multiline':False]['text':'/ If clear_cmdline is true, clear the rest of the cmdline.','line_number':904,'multiline':False]['text':'/ If clear_cmdline is false there may be a message there that needs to be','line_number':905,'multiline':False]['text':'/ cleared only if a mode is shown.','line_number':906,'multiline':False]['text':'/ If redraw_mode is true show or clear the mode.','line_number':907,'multiline':False]['text':'/ @return the length of the message (0 if no message).','line_number':908,'multiline':False]['text':' don't make non-flushed message part of the showmode','line_number':917,'multiline':False]['text':' show mode later','line_number':932,'multiline':False]['text':' wait a bit before overwriting an important message','line_number':937,'multiline':False]['text':' if the cmdline is more than one line high, erase top lines','line_number':940,'multiline':False]['text':' will reset clear_cmdline','line_number':943,'multiline':False]['text':' Position on the last line in the window, column 0','line_number':946,'multiline':False]['text':' Highlight mode','line_number':948,'multiline':False]['text':' When the screen is too narrow to show the entire mode message,','line_number':950,'multiline':False]['text':' avoid scrolling and truncate instead.','line_number':951,'multiline':False]['text':' CTRL-X in Insert mode','line_number':958,'multiline':False]['text':' These messages can get long, avoid a wrap in a narrow window.','line_number':960,'multiline':False]['text':' Prefer showing edit_submode_extra. With external messages there','line_number':961,'multiline':False]['text':' is no imposed limit.','line_number':962,'multiline':False]['text':' Add a space in between.','line_number':982,'multiline':False]['text':' Don't concatenate separate words to avoid translation','line_number':1030,'multiline':False]['text':' problems.','line_number':1031,'multiline':False]['text':' otherwise it gets too long','line_number':1056,'multiline':False]['text':' overwrite this message','line_number':1066,'multiline':False]['text':' never ask for hit-return for this','line_number':1071,'multiline':False]['text':' Clear the whole command line.  Will reset "clear_cmdline".','line_number':1073,'multiline':False]['text':' NB: also handles clearing the showmode if it was empty or disabled','line_number':1080,'multiline':False]['text':' In Visual mode the size of the selected area must be redrawn.','line_number':1083,'multiline':False]['text':' If the current or last window has no status line and global statusline is disabled,','line_number':1088,'multiline':False]['text':' the ruler is after the mode message and must be redrawn','line_number':1089,'multiline':False]['text':'/ Position for a mode message.','line_number':1105,'multiline':False]['text':'/ Delete mode message.  Used when ESC is typed which is expected to end','line_number':1112,'multiline':False]['text':'/ Insert mode (but Insert mode didn't end yet!).','line_number':1113,'multiline':False]['text':'/ Caller should check "mode_displayed".','line_number':1114,'multiline':False]['text':' Don't delete it right now, when not redrawing or inside a mapping.','line_number':1117,'multiline':False]['text':' delete mode later','line_number':1119,'multiline':False]['text':' Clear the mode message.','line_number':1125,'multiline':False]['text':' columns needed by standard ruler','line_number':1155,'multiline':False]['text':'/ Compute columns for ruler and shown command. 'sc_col' is also used to','line_number':1157,'multiline':False]['text':'/ decide what the maximum length of a message on the status line can be.','line_number':1158,'multiline':False]['text':'/ If there is a status line for the last window, 'sc_col' is independent','line_number':1159,'multiline':False]['text':'/ of 'ru_col'.','line_number':1160,'multiline':False]['text':' no last status line, adjust sc_col','line_number':1169,'multiline':False]['text':' no need for separating space','line_number':1176,'multiline':False]['text':' screen too narrow, will become a mess','line_number':1186,'multiline':False]['text':'/ Redraw entire window "wp" if configured 'signcolumn' width changes.','line_number':1195,'multiline':False]['text':'/ Check if horizontal separator of window "wp" at specified window corner is connected to the','line_number':1222,'multiline':False]['text':'/ horizontal separator of another window','line_number':1223,'multiline':False]['text':'/ Assumes global statusline is enabled','line_number':1224,'multiline':False]['text':'/ Check if vertical separator of window "wp" at specified window corner is connected to the','line_number':1258,'multiline':False]['text':'/ vertical separator of another window','line_number':1259,'multiline':False]['text':'/ Draw the vertical separator right of window "wp"','line_number':1293,'multiline':False]['text':' draw the vertical separator right of this window','line_number':1300,'multiline':False]['text':'/ Draw the horizontal separator below window "wp"','line_number':1307,'multiline':False]['text':' draw the horizontal separator below this window','line_number':1314,'multiline':False]['text':'/ Get the separator connector for specified window corner of window "wp"','line_number':1321,'multiline':False]['text':' It's impossible for windows to be connected neither vertically nor horizontally','line_number':1324,'multiline':False]['text':' So if they're not vertically connected, assume they're horizontally connected','line_number':1325,'multiline':False]['text':'/ Draw separator connecting characters on the corners of window "wp"','line_number':1343,'multiline':False]['text':' Don't draw separator connectors unless global statusline is enabled and the window has','line_number':1346,'multiline':False]['text':' either a horizontal or vertical separator','line_number':1347,'multiline':False]['text':' Determine which edges of the screen the window is located on so we can avoid drawing separators','line_number':1354,'multiline':False]['text':' on corners contained in those edges','line_number':1355,'multiline':False]['text':' Draw the appropriate separator connector in every corner where drawing them is necessary','line_number':1375,'multiline':False]['text':' Make sure not to send cursor position updates to ui.','line_number':1376,'multiline':False]['text':'/ Update a single window.','line_number':1404,'multiline':False]['text':'/','line_number':1405,'multiline':False]['text':'/ This may cause the windows below it also to be redrawn (when clearing the','line_number':1406,'multiline':False]['text':'/ screen or scrolling lines).','line_number':1407,'multiline':False]['text':'/','line_number':1408,'multiline':False]['text':'/ How the window is redrawn depends on wp->w_redr_type.  Each type also','line_number':1409,'multiline':False]['text':'/ implies the one below it.','line_number':1410,'multiline':False]['text':'/ UPD_NOT_VALID    redraw the whole window','line_number':1411,'multiline':False]['text':'/ UPD_SOME_VALID   redraw the whole window but do scroll when possible','line_number':1412,'multiline':False]['text':'/ UPD_REDRAW_TOP   redraw the top w_upd_rows window lines, otherwise like UPD_VALID','line_number':1413,'multiline':False]['text':'/ UPD_INVERTED     redraw the changed part of the Visual area','line_number':1414,'multiline':False]['text':'/ UPD_INVERTED_ALL redraw the whole Visual area','line_number':1415,'multiline':False]['text':'/ UPD_VALID        1. scroll up/down to adjust for a changed w_topline','line_number':1416,'multiline':False]['text':'/                  2. update lines at the top when scrolled down','line_number':1417,'multiline':False]['text':'/                  3. redraw changed text:','line_number':1418,'multiline':False]['text':'/                     - if wp->w_buffer->b_mod_set set, update lines between','line_number':1419,'multiline':False]['text':'/                       b_mod_top and b_mod_bot.','line_number':1420,'multiline':False]['text':'/                     - if wp->w_redraw_top non-zero, redraw lines between','line_number':1421,'multiline':False]['text':'/                       wp->w_redraw_top and wp->w_redr_bot.','line_number':1422,'multiline':False]['text':'/                     - continue redrawing when syntax status is invalid.','line_number':1423,'multiline':False]['text':'/                  4. if scrolled up, update lines at the bottom.','line_number':1424,'multiline':False]['text':'/ This results in three areas that may need updating:','line_number':1425,'multiline':False]['text':'/ top: from first row to top_end (when scrolled down)','line_number':1426,'multiline':False]['text':'/ mid: from mid_start to mid_end (update inversion or changed text)','line_number':1427,'multiline':False]['text':'/ bot: from bot_start to last row (when scrolled up)','line_number':1428,'multiline':False]['text':' Below last row of the top area that needs','line_number':1431,'multiline':False]['text':' updating.  0 when no top area updating.','line_number':1432,'multiline':False]['text':' first row of the mid area that needs','line_number':1433,'multiline':False]['text':' updating.  999 when no mid area updating.','line_number':1434,'multiline':False]['text':' Below last row of the mid area that needs','line_number':1435,'multiline':False]['text':' updating.  0 when no mid area updating.','line_number':1436,'multiline':False]['text':' first row of the bot area that needs','line_number':1437,'multiline':False]['text':' updating.  999 when no bot area updating','line_number':1438,'multiline':False]['text':' true when scrolled down when w_topline got smaller a bit','line_number':1439,'multiline':False]['text':' redraw above mod_top','line_number':1440,'multiline':False]['text':' first line that needs to be redrawn due to','line_number':1442,'multiline':False]['text':' scrolling. only used for EOB','line_number':1443,'multiline':False]['text':' being called recursively','line_number':1445,'multiline':False]['text':' Remember what happened to the previous line.','line_number':1447,'multiline':False]['text':' didn't update a line','line_number':1449,'multiline':False]['text':' updated a normal line','line_number':1450,'multiline':False]['text':' updated a folded line','line_number':1451,'multiline':False]['text':' last parsed text line','line_number':1454,'multiline':False]['text':' Window is zero-height: Only need to draw the separator','line_number':1465,'multiline':False]['text':' draw the horizontal separator below this window','line_number':1467,'multiline':False]['text':' Window is zero-width: Only need to draw the separator.','line_number':1474,'multiline':False]['text':' draw the vertical separator right of this window','line_number':1476,'multiline':False]['text':' reset got_int, otherwise regexp won't work','line_number':1485,'multiline':False]['text':' Set the time limit to 'redrawtime'.','line_number':1488,'multiline':False]['text':' Make sure skipcol is valid, it depends on various options and the window','line_number':1507,'multiline':False]['text':' width.','line_number':1508,'multiline':False]['text':' always round down, the higher value may not be valid','line_number':1522,'multiline':False]['text':' Force redraw when width of 'number' or 'relativenumber' column changes.','line_number':1529,'multiline':False]['text':' When there are both inserted/deleted lines and specific lines to be','line_number':1536,'multiline':False]['text':' redrawn, w_redraw_top and w_redraw_bot may be invalid, just redraw','line_number':1537,'multiline':False]['text':' everything (only happens when redrawing is off for while).','line_number':1538,'multiline':False]['text':' Set mod_top to the first line that needs displaying because of','line_number':1541,'multiline':False]['text':' changes.  Set mod_bot to the first line after the changes.','line_number':1542,'multiline':False]['text':' Need to redraw lines above the change that may be included','line_number':1552,'multiline':False]['text':' in a pattern match.','line_number':1553,'multiline':False]['text':' When 'hlsearch' is on and using a multi-line search pattern, a','line_number':1565,'multiline':False]['text':' change in one line may make the Search highlighting in a','line_number':1566,'multiline':False]['text':' previous line invalid.  Simple solution: redraw all visible','line_number':1567,'multiline':False]['text':' lines above the change.','line_number':1568,'multiline':False]['text':' Same for a match pattern.','line_number':1569,'multiline':False]['text':' A change in a line can cause lines above it to become folded or','line_number':1586,'multiline':False]['text':' unfolded.  Find the top most buffer line that may be affected.','line_number':1587,'multiline':False]['text':' If the line was previously folded and displayed, get the first','line_number':1588,'multiline':False]['text':' line of that fold.  If the line is folded now, get the first','line_number':1589,'multiline':False]['text':' folded line.  Use the minimum of these two.','line_number':1590,'multiline':False]['text':' Find last valid w_lines[] entry above mod_top.  Set lnumt to','line_number':1592,'multiline':False]['text':' the line below it.  If there is no valid entry, use w_topline.','line_number':1593,'multiline':False]['text':' Find the first valid w_lines[] entry below mod_bot.  Set lnumb','line_number':1594,'multiline':False]['text':' to this line.  If there is no valid entry, use MAXLNUM.','line_number':1595,'multiline':False]['text':' When there is a fold column it might need updating','line_number':1605,'multiline':False]['text':' in the next line ("J" just above an open fold).','line_number':1606,'multiline':False]['text':' Now do the same for the bottom line (one above mod_bot).','line_number':1619,'multiline':False]['text':' When a change starts above w_topline and the end is below','line_number':1628,'multiline':False]['text':' w_topline, start redrawing at w_topline.','line_number':1629,'multiline':False]['text':' If the end of the change is above w_topline: do like no change was','line_number':1630,'multiline':False]['text':' made, but redraw the first line to find changes in syntax.','line_number':1631,'multiline':False]['text':' When line numbers are displayed need to redraw all lines below','line_number':1640,'multiline':False]['text':' inserted/deleted lines.','line_number':1641,'multiline':False]['text':' reset for next time','line_number':1647,'multiline':False]['text':' When only displaying the lines at the top, set top_end.  Used when','line_number':1650,'multiline':False]['text':' window has scrolled down for msg_scrolled.','line_number':1651,'multiline':False]['text':' not found (cannot happen?): redraw everything','line_number':1662,'multiline':False]['text':' top area defined, the rest is UPD_VALID','line_number':1665,'multiline':False]['text':' If there are no changes on the screen that require a complete redraw,','line_number':1670,'multiline':False]['text':' handle three cases:','line_number':1671,'multiline':False]['text':' 1: we are off the top of the screen by a few lines: scroll down','line_number':1672,'multiline':False]['text':' 2: wp->w_topline is below wp->w_lines[0].wl_lnum: may scroll up','line_number':1673,'multiline':False]['text':' 3: wp->w_topline is wp->w_lines[0].wl_lnum: find first entry in','line_number':1674,'multiline':False]['text':'    w_lines[] that needs updating.','line_number':1675,'multiline':False]['text':' w_topline is the first changed line and window is not scrolled,','line_number':1683,'multiline':False]['text':' the scrolling from changed lines will be done further down.','line_number':1684,'multiline':False]['text':' New topline is above old topline: May scroll down.','line_number':1689,'multiline':False]['text':' count the number of lines we are off, counting a sequence','line_number':1694,'multiline':False]['text':' of folded lines as one','line_number':1695,'multiline':False]['text':' not too far off','line_number':1707,'multiline':False]['text':' insert extra lines for previously invisible filler lines','line_number':1709,'multiline':False]['text':' less than a screen off','line_number':1713,'multiline':False]['text':' Try to insert the correct number of lines.','line_number':1714,'multiline':False]['text':' If not the last window, delete the lines at the bottom.','line_number':1715,'multiline':False]['text':' win_ins_lines may fail when the terminal can't do it.','line_number':1716,'multiline':False]['text':' Need to update rows that are new, stop at the','line_number':1720,'multiline':False]['text':' first one that scrolled down.','line_number':1721,'multiline':False]['text':' Move the entries that were scrolled, disable','line_number':1725,'multiline':False]['text':' the entries for the lines to be redrawn.','line_number':1726,'multiline':False]['text':' redraw all lines','line_number':1739,'multiline':False]['text':' redraw all lines','line_number':1742,'multiline':False]['text':' New topline is at or below old topline: May scroll up.','line_number':1745,'multiline':False]['text':' When topline didn't change, find first entry in w_lines[] that','line_number':1746,'multiline':False]['text':' needs updating.','line_number':1747,'multiline':False]['text':' try to find wp->w_topline in wp->w_lines[].wl_lnum','line_number':1749,'multiline':False]['text':' if wp->w_topline is not in wp->w_lines[].wl_lnum redraw all','line_number':1761,'multiline':False]['text':' lines','line_number':1762,'multiline':False]['text':' Try to delete the correct number of lines.','line_number':1765,'multiline':False]['text':' wp->w_topline is at wp->w_lines[i].wl_lnum.','line_number':1766,'multiline':False]['text':' If the topline didn't change, delete old filler lines,','line_number':1768,'multiline':False]['text':' otherwise delete filler lines of the new topline...','line_number':1769,'multiline':False]['text':' ... but don't delete new filler lines.','line_number':1775,'multiline':False]['text':' Skip the lines (below the deleted lines) that are still','line_number':1783,'multiline':False]['text':' valid and don't need redrawing.    Copy their info','line_number':1784,'multiline':False]['text':' upwards, to compensate for the deleted lines.  Set','line_number':1785,'multiline':False]['text':' bot_start to the first row that needs redrawing.','line_number':1786,'multiline':False]['text':' stop at line that didn't fit, unless it is still','line_number':1791,'multiline':False]['text':' valid (no lines deleted)','line_number':1792,'multiline':False]['text':' stop at the last valid entry in w_lines[].wl_size','line_number':1800,'multiline':False]['text':' Correct the first entry for filler lines at the top','line_number':1807,'multiline':False]['text':' when it won't get updated below.','line_number':1808,'multiline':False]['text':' When starting redraw in the first line, redraw all lines.','line_number':1817,'multiline':False]['text':' Not UPD_VALID or UPD_INVERTED: redraw all lines.','line_number':1822,'multiline':False]['text':' UPD_SOME_VALID: redraw all lines.','line_number':1828,'multiline':False]['text':' check if we are updating or removing the inverted part','line_number':1834,'multiline':False]['text':' If the type of Visual selection changed, redraw the whole','line_number':1841,'multiline':False]['text':' selection.  Also when the ownership of the X selection is','line_number':1842,'multiline':False]['text':' gained or lost.','line_number':1843,'multiline':False]['text':' redraw more when the cursor moved as well','line_number':1851,'multiline':False]['text':' Find the line numbers that need to be updated: The lines','line_number':1865,'multiline':False]['text':' between the old cursor position and the current cursor','line_number':1866,'multiline':False]['text':' position.  Also check if the Visual position changed.','line_number':1867,'multiline':False]['text':' Visual mode just started','line_number':1874,'multiline':False]['text':' If in block mode and changed column or curwin->w_curswant:','line_number':1897,'multiline':False]['text':' update all lines.','line_number':1898,'multiline':False]['text':' First compute the actual start and end column.','line_number':1899,'multiline':False]['text':' Highlight to the end of the line, unless 'virtualedit' has','line_number':1911,'multiline':False]['text':' "block".','line_number':1912,'multiline':False]['text':' Need to find the longest line.','line_number':1918,'multiline':False]['text':' Use the line numbers of the old Visual area.','line_number':1951,'multiline':False]['text':' There is no need to update lines above the top of the window.','line_number':1961,'multiline':False]['text':' If we know the value of w_botline, use it to restrict the update to','line_number':1966,'multiline':False]['text':' the lines that are visible in the window.','line_number':1967,'multiline':False]['text':' Find the minimal part to be updated.','line_number':1977,'multiline':False]['text':' Watch out for scrolling that made entries in w_lines[] invalid.','line_number':1978,'multiline':False]['text':' E.g., CTRL-U makes the first half of w_lines[] invalid and sets','line_number':1979,'multiline':False]['text':' top_end; need to redraw from top_end to the "to" line.','line_number':1980,'multiline':False]['text':' A middle mouse click with a Visual selection may change the text','line_number':1981,'multiline':False]['text':' above the Visual area and reset wl_valid, do count these for','line_number':1982,'multiline':False]['text':' mid_end (in srow).','line_number':1983,'multiline':False]['text':' find start','line_number':1993,'multiline':False]['text':' find end','line_number':2008,'multiline':False]['text':' Only update until first row of this line','line_number':2011,'multiline':False]['text':' Make sure that the cursorline on a closed fold is redrawn','line_number':2036,'multiline':False]['text':' first line shown in window','line_number':2046,'multiline':False]['text':' Initialize spell related variables for the first drawn line.','line_number':2047,'multiline':False]['text':' Update all the window rows.','line_number':2053,'multiline':False]['text':' first entry in w_lines[].wl_size','line_number':2054,'multiline':False]['text':' current window row to display','line_number':2055,'multiline':False]['text':' starting row of the current line','line_number':2056,'multiline':False]['text':' if true, we hit the end of the file','line_number':2058,'multiline':False]['text':' if true, we finished the last line','line_number':2059,'multiline':False]['text':' stop updating when reached the end of the window (check for _past_','line_number':2061,'multiline':False]['text':' the end of the window is at the end of the loop)','line_number':2062,'multiline':False]['text':' stop updating when hit the end of the file','line_number':2068,'multiline':False]['text':' Remember the starting row of the line that is going to be dealt','line_number':2074,'multiline':False]['text':' with.  It is used further down when the line doesn't fit.','line_number':2075,'multiline':False]['text':' Update a line when it is in an area that needs updating, when it','line_number':2078,'multiline':False]['text':' has changes or w_lines[idx] is invalid.','line_number':2079,'multiline':False]['text':' "bot_start" may be halfway a wrapped line after using','line_number':2080,'multiline':False]['text':' win_scroll_lines(), check if the current line includes it.','line_number':2081,'multiline':False]['text':' When syntax folding is being used, the saved syntax states will','line_number':2082,'multiline':False]['text':' already have been updated, we can't see where the syntax state is','line_number':2083,'multiline':False]['text':' the same again, just update until the end of the window.','line_number':2084,'multiline':False]['text':' match in fixed position might need redraw','line_number':2100,'multiline':False]['text':' if lines were inserted or deleted','line_number':2101,'multiline':False]['text':' When at start of changed lines: May scroll following lines','line_number':2110,'multiline':False]['text':' up or down to minimize redrawing.','line_number':2111,'multiline':False]['text':' Don't do this when the change continues until the end.','line_number':2112,'multiline':False]['text':' Don't scroll when dollar_vcol >= 0, keep the "$".','line_number':2113,'multiline':False]['text':' Don't scroll when redrawing the top, scrolled already above.','line_number':2114,'multiline':False]['text':' Count the old number of window rows, using w_lines[], which','line_number':2123,'multiline':False]['text':' should still contain the sizes for the lines as they are','line_number':2124,'multiline':False]['text':' currently displayed.','line_number':2125,'multiline':False]['text':' Only valid lines have a meaningful wl_lnum.  Invalid','line_number':2127,'multiline':False]['text':' lines are part of the changed area.','line_number':2128,'multiline':False]['text':' Must have found the last valid entry above mod_bot.','line_number':2136,'multiline':False]['text':' Add following invalid entries.','line_number':2137,'multiline':False]['text':' We can't find a valid line below the changed lines,','line_number':2148,'multiline':False]['text':' need to redraw until the end of the window.','line_number':2149,'multiline':False]['text':' Inserting/deleting lines has no use.','line_number':2150,'multiline':False]['text':' Able to count old number of rows: Count new window','line_number':2155,'multiline':False]['text':' rows, and may insert/delete lines','line_number':2156,'multiline':False]['text':' it's getting too much, must redraw the rest','line_number':2173,'multiline':False]['text':' May scroll text up.  If there is not enough','line_number':2180,'multiline':False]['text':' remaining text or scrolling fails, must redraw the','line_number':2181,'multiline':False]['text':' rest.  If scrolling works, must redraw the text','line_number':2182,'multiline':False]['text':' below the scrolled text.','line_number':2183,'multiline':False]['text':' May scroll text down.  If there is not enough','line_number':2192,'multiline':False]['text':' remaining text of scrolling fails, must redraw the','line_number':2193,'multiline':False]['text':' rest.','line_number':2194,'multiline':False]['text':' Scrolled the part at the top that requires','line_number':2201,'multiline':False]['text':' updating down.','line_number':2202,'multiline':False]['text':' When not updating the rest, may need to move w_lines[]','line_number':2208,'multiline':False]['text':' entries.','line_number':2209,'multiline':False]['text':' move entries in w_lines[] upwards','line_number':2214,'multiline':False]['text':' stop at last valid entry in w_lines[]','line_number':2216,'multiline':False]['text':' stop at a line that won't fit','line_number':2222,'multiline':False]['text':' j > i','line_number':2234,'multiline':False]['text':' move entries in w_lines[] downwards','line_number':2235,'multiline':False]['text':' The w_lines[] entries for inserted lines are','line_number':2245,'multiline':False]['text':' now invalid, but wl_size may be used above.','line_number':2246,'multiline':False]['text':' Reset to zero.','line_number':2247,'multiline':False]['text':' When lines are folded, display one line for all of them.','line_number':2257,'multiline':False]['text':' Otherwise, display normally (can be several display lines when','line_number':2258,'multiline':False]['text':' 'wrap' is on).','line_number':2259,'multiline':False]['text':' This line is not going to fit.  Don't draw anything here,','line_number':2271,'multiline':False]['text':' will draw "@  " lines below.','line_number':2272,'multiline':False]['text':' Let the syntax stuff know we skipped a few lines.','line_number':2276,'multiline':False]['text':' Display one line','line_number':2282,'multiline':False]['text':' past end of grid','line_number':2305,'multiline':False]['text':' we may need the size of that too long line later on','line_number':2306,'multiline':False]['text':' 'relativenumber' set and cursor moved vertically: The','line_number':2320,'multiline':False]['text':' text doesn't need to be drawn, but the number column does.','line_number':2321,'multiline':False]['text':' This line does not need to be drawn, advance to the next one.','line_number':2327,'multiline':False]['text':' past end of screen','line_number':2329,'multiline':False]['text':' 'statuscolumn' width has changed or errored, start from the top.','line_number':2337,'multiline':False]['text':' End of loop over all window lines.','line_number':2355,'multiline':False]['text':' Now that the window has been redrawn with the old and new cursor line,','line_number':2357,'multiline':False]['text':' update w_last_cursorline.','line_number':2358,'multiline':False]['text':' Let the syntax stuff know we stop parsing here.','line_number':2367,'multiline':False]['text':' If we didn't hit the end of the file, and we didn't finish the last','line_number':2374,'multiline':False]['text':' line we were working on, then the line didn't fit.','line_number':2375,'multiline':False]['text':' Single line that does not fit!','line_number':2381,'multiline':False]['text':' Don't overwrite it, it can be edited.','line_number':2382,'multiline':False]['text':' Window ends in filler lines.','line_number':2385,'multiline':False]['text':' 'display' has "truncate"','line_number':2388,'multiline':False]['text':' Last line isn't finished: Display "@@@" in the last screen line.','line_number':2389,'multiline':False]['text':' 'display' has "lastline"','line_number':2396,'multiline':False]['text':' Last line isn't finished: Display "@@@" at the end.','line_number':2397,'multiline':False]['text':' If this would split a doublewidth char in two, we need to display "@@@@" instead','line_number':2398,'multiline':False]['text':' we hit the end of the file','line_number':2412,'multiline':False]['text':' Display filler text below last line. win_line() will check','line_number':2416,'multiline':False]['text':' for ml_line_count+1 and only draw filler lines','line_number':2417,'multiline':False]['text':' Make sure the rest of the screen is blank.','line_number':2427,'multiline':False]['text':' write the "eob" character from 'fillchars' to rows that aren't part','line_number':2428,'multiline':False]['text':' of the file.','line_number':2429,'multiline':False]['text':' TODO(bfredl): just keep track of the valid EOB area from last redraw?','line_number':2430,'multiline':False]['text':' if (mod_bot > buf->b_ml.ml_line_count + 1) {','line_number':2435,'multiline':False]['text':' Reset the type of redrawing required, the window has been updated.','line_number':2454,'multiline':False]['text':' Send win_extmarks if needed','line_number':2459,'multiline':False]['text':' There is a trick with w_botline.  If we invalidate it on each','line_number':2467,'multiline':False]['text':' change that might modify it, this will cause a lot of expensive','line_number':2468,'multiline':False]['text':' calls to plines_win() in update_topline() each time.  Therefore the','line_number':2469,'multiline':False]['text':' value of w_botline is often approximated, and this value is used to','line_number':2470,'multiline':False]['text':' compute the value of w_topline.  If the value of w_botline was','line_number':2471,'multiline':False]['text':' wrong, check that the value of w_topline is correct (cursor is on','line_number':2472,'multiline':False]['text':' the visible part of the text).  If it's not, we need to redraw','line_number':2473,'multiline':False]['text':' again.  Mostly this just means scrolling up a few lines, so it','line_number':2474,'multiline':False]['text':' doesn't look too bad.  Only do this for the current window (where','line_number':2475,'multiline':False]['text':' changes are relevant).','line_number':2476,'multiline':False]['text':' may invalidate w_botline again','line_number':2482,'multiline':False]['text':' Don't update for changes in buffer again.','line_number':2484,'multiline':False]['text':' restore got_int, unless CTRL-C was hit while redrawing','line_number':2499,'multiline':False]['text':'/ Scroll `line_count` lines at 'row' in window 'wp'.','line_number':2505,'multiline':False]['text':'/','line_number':2506,'multiline':False]['text':'/ Positive `line_count` means scrolling down, so that more space is available','line_number':2507,'multiline':False]['text':'/ at 'row'. Negative `line_count` implies deleting lines at `row`.','line_number':2508,'multiline':False]['text':' No lines are being moved, just draw over the entire area','line_number':2515,'multiline':False]['text':'/ Call grid_fill() with columns adjusted for 'rightleft' if needed.','line_number':2529,'multiline':False]['text':'/ Return the new offset.','line_number':2530,'multiline':False]['text':'/ Clear lines near the end of the window and mark the unused lines with "c1".','line_number':2550,'multiline':False]['text':'/ Use "c2" as filler character.','line_number':2551,'multiline':False]['text':'/ When "draw_margin" is true, then draw the sign/fold/number columns.','line_number':2552,'multiline':False]['text':' draw the fold column','line_number':2559,'multiline':False]['text':' draw the sign column','line_number':2565,'multiline':False]['text':' draw the number column','line_number':2571,'multiline':False]['text':'/ Compute the width of the foldcolumn.  Based on 'foldcolumn' and how much','line_number':2589,'multiline':False]['text':'/ space is available for window "wp", minus "col".','line_number':2590,'multiline':False]['text':'/ Return the width of the 'number' and 'relativenumber' column.','line_number':2603,'multiline':False]['text':'/ Caller may need to check if 'number' or 'relativenumber' is set.','line_number':2604,'multiline':False]['text':'/ Otherwise it depends on 'numberwidth' and the line count.','line_number':2605,'multiline':False]['text':' cursor line shows "0"','line_number':2611,'multiline':False]['text':' cursor line shows absolute line number','line_number':2614,'multiline':False]['text':' reset for 'statuscolumn'','line_number':2623,'multiline':False]['text':' make sure width is re-estimated','line_number':2625,'multiline':False]['text':' 'numberwidth' gives the minimal width plus one','line_number':2636,'multiline':False]['text':' If 'signcolumn' is set to 'number' and there is a sign to display, then','line_number':2641,'multiline':False]['text':' the minimal width for the number column is 2.','line_number':2642,'multiline':False]['text':'/ Redraw a window later, with wp->w_redr_type >= type.','line_number':2651,'multiline':False]['text':'/','line_number':2652,'multiline':False]['text':'/ Set must_redraw only if not already set to a higher value.','line_number':2653,'multiline':False]['text':'/ e.g. if must_redraw is UPD_CLEAR, type UPD_NOT_VALID will do nothing.','line_number':2654,'multiline':False]['text':' curwin may have been set to NULL when exiting','line_number':2657,'multiline':False]['text':' must_redraw is the maximum of all windows','line_number':2664,'multiline':False]['text':'/ Mark all windows to be redrawn later.','line_number':2670,'multiline':False]['text':' This may be needed when switching tabs.','line_number':2676,'multiline':False]['text':'/ Mark all windows that are editing the current buffer to be updated later.','line_number':2690,'multiline':False]['text':'/ called when the status bars for the buffer 'buf' need to be updated','line_number':2733,'multiline':False]['text':'/ Mark all status lines and window bars for redraw; used after first :cd','line_number':2749,'multiline':False]['text':'/ Marks all status lines and window bars of the current buffer for redraw.','line_number':2763,'multiline':False]['text':'/ Marks all status lines and window bars of the given buffer for redraw.','line_number':2769,'multiline':False]['text':' Redraw the ruler if it is in the command line and was not marked for redraw above','line_number':2781,'multiline':False]['text':'/ Redraw all status lines that need to be redrawn.','line_number':2788,'multiline':False]['text':'/ Redraw all status lines at the bottom of frame "frp".','line_number':2805,'multiline':False]['text':'/ Changed something in the current window, at buffer line "lnum", that','line_number':2825,'multiline':False]['text':'/ requires that line and possibly other lines to be redrawn.','line_number':2826,'multiline':False]['text':'/ Used when entering/leaving Insert mode with the cursor on a folded line.','line_number':2827,'multiline':False]['text':'/ Used to remove the "$" from a change command.','line_number':2828,'multiline':False]['text':'/ Note that when also inserting/deleting lines w_redraw_top and w_redraw_bot','line_number':2829,'multiline':False]['text':'/ may become invalid and the whole window will have to be redrawn.','line_number':2830,'multiline':False]['text':'/ Return true if the cursor line in window "wp" may be concealed, according','line_number':2846,'multiline':False]['text':'/ to the 'concealcursor' option.','line_number':2847,'multiline':False]['text':'/ Whether cursorline is drawn in a special way','line_number':2870,'multiline':False]['text':'/','line_number':2871,'multiline':False]['text':'/ If true, both old and new cursorline will need to be redrawn when moving cursor within windows.','line_number':2872,'multiline':False]['text':'/ Redraw when w_cline_row changes and 'relativenumber' or 'cursorline' is set.','line_number':2879,'multiline':False]['text':'/ Also when concealing is on and 'concealcursor' is not active.','line_number':2880,'multiline':False]['text':' win_line() will redraw the number column and cursorline only.','line_number':2886,'multiline':False]