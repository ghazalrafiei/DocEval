['text':' file I/O and sprintf buffer size','line_number':22,'multiline':False]['text':' length of buffer for small messages','line_number':24,'multiline':False]['text':' cell length (worst case: utf-8','line_number':25,'multiline':False]['text':' takes 6 bytes for one cell)','line_number':26,'multiline':False]['text':' FILETYPE_FILE        used for file type detection','line_number':28,'multiline':False]['text':' FTPLUGIN_FILE        used for loading filetype plugin files','line_number':29,'multiline':False]['text':' INDENT_FILE          used for loading indent files','line_number':30,'multiline':False]['text':' FTOFF_FILE           used for file type detection','line_number':31,'multiline':False]['text':' FTPLUGOF_FILE        used for loading settings files','line_number':32,'multiline':False]['text':' INDOFF_FILE          used for loading indent files','line_number':33,'multiline':False]['text':' How many logs were tried and skipped before log_init.','line_number':88,'multiline':False]['text':' Values for "starting".','line_number':91,'multiline':False]['text':' no screen updating yet','line_number':92,'multiline':False]['text':' not all buffers loaded yet','line_number':93,'multiline':False]['text':'                      0          not starting anymore','line_number':94,'multiline':False]['text':' Number of Rows and Columns in the screen.','line_number':96,'multiline':False]['text':' Note: Use default_grid.rows and default_grid.cols to access items in','line_number':97,'multiline':False]['text':' default_grid.chars[]. They may have different values when the screen','line_number':98,'multiline':False]['text':' wasn't (re)allocated yet after setting Rows or Columns (e.g., when starting','line_number':99,'multiline':False]['text':' up).','line_number':100,'multiline':False]['text':' default value for 'columns'','line_number':101,'multiline':False]['text':' default value for 'lines'','line_number':102,'multiline':False]['text':' nr of rows in the screen','line_number':103,'multiline':False]['text':' nr of columns in the screen','line_number':104,'multiline':False]['text':' When vgetc() is called, it sets mod_mask to the set of modifiers that are','line_number':106,'multiline':False]['text':' held down based on the MOD_MASK_* symbols that are read first.','line_number':107,'multiline':False]['text':' current key modifiers','line_number':108,'multiline':False]['text':' The value of "mod_mask" and the unmodified character before calling merge_modifiers().','line_number':110,'multiline':False]['text':' Cmdline_row is the row where the command line starts, just below the','line_number':114,'multiline':False]['text':' last window.','line_number':115,'multiline':False]['text':' When the cmdline gets longer than the available space the screen gets','line_number':116,'multiline':False]['text':' scrolled up. After a CTRL-D (show matches), after hitting ':' after','line_number':117,'multiline':False]['text':' "hit return", and for the :global command, the command line is','line_number':118,'multiline':False]['text':' temporarily moved.  The old position is restored with the next call to','line_number':119,'multiline':False]['text':' update_screen().','line_number':120,'multiline':False]['text':' cmdline must be redrawn','line_number':123,'multiline':False]['text':' mode must be redrawn','line_number':124,'multiline':False]['text':' cmdline must be cleared','line_number':125,'multiline':False]['text':' mode is being displayed','line_number':126,'multiline':False]['text':' cmdline is encrypted','line_number':127,'multiline':False]['text':' cmdline is being redrawn','line_number':128,'multiline':False]['text':' cmdline was last drawn','line_number':129,'multiline':False]['text':' executing register','line_number':131,'multiline':False]['text':' When '$' is included in 'cpoptions' option set:','line_number':133,'multiline':False]['text':' When a change command is given that deletes only part of a line, a dollar','line_number':134,'multiline':False]['text':' is put at the end of the changed text. dollar_vcol is set to the virtual','line_number':135,'multiline':False]['text':' column of this '$'.  -1 is used to indicate no $ is being displayed.','line_number':136,'multiline':False]['text':' Variables for Insert mode completion.','line_number':139,'multiline':False]['text':' msg for CTRL-X submode','line_number':141,'multiline':False]['text':' prepended to edit_submode','line_number':142,'multiline':False]['text':' appended to edit_submode','line_number':143,'multiline':False]['text':' highl. method for extra info','line_number':144,'multiline':False]['text':' state for putting characters in the message area','line_number':146,'multiline':False]['text':' cmdline is drawn right to left','line_number':147,'multiline':False]['text':' Number of screen lines that windows have','line_number':150,'multiline':False]['text':' scrolled because of printing messages.','line_number':151,'multiline':False]['text':' when true don't set need_wait_return in msg_puts_attr()','line_number':152,'multiline':False]['text':' when msg_scrolled is non-zero','line_number':153,'multiline':False]['text':' Whether the screen is damaged due to scrolling. Sometimes msg_scrolled','line_number':155,'multiline':False]['text':' is reset before the screen is redrawn, so we need to keep track of this.','line_number':156,'multiline':False]['text':' msg to be shown after redraw','line_number':159,'multiline':False]['text':' highlight attr for keep_msg','line_number':160,'multiline':False]['text':' do fileinfo() after redraw','line_number':161,'multiline':False]['text':' msg_start() will scroll','line_number':162,'multiline':False]['text':' msg_outstr() was used in line','line_number':163,'multiline':False]['text':' msg_outstr() was used at all','line_number':164,'multiline':False]['text':' don't wait for this msg','line_number':165,'multiline':False]['text':' don't display errors for now,','line_number':166,'multiline':False]['text':' unless 'debug' is set.','line_number':167,'multiline':False]['text':' printing informative message','line_number':168,'multiline':False]['text':' don't add messages to history','line_number':169,'multiline':False]['text':' need to clear text before','line_number':170,'multiline':False]['text':' displaying a message.','line_number':171,'multiline':False]['text':' don't display errors for','line_number':172,'multiline':False]['text':' expression that is skipped','line_number':173,'multiline':False]['text':' use message of next of several','line_number':174,'multiline':False]['text':'  emsg() calls for throw','line_number':175,'multiline':False]['text':' used by assert_fails()','line_number':176,'multiline':False]['text':' just had ":endif"','line_number':181,'multiline':False]['text':' Dictionary with v: variables','line_number':182,'multiline':False]['text':' Dictionary with g: variables','line_number':183,'multiline':False]['text':'/ g: value','line_number':184,'multiline':False]['text':' incremented by emsg() when a','line_number':186,'multiline':False]['text':' message is displayed or thrown','line_number':187,'multiline':False]['text':' set if vim_beep() is called','line_number':188,'multiline':False]['text':' did_emsg set because of a','line_number':189,'multiline':False]['text':' syntax error','line_number':190,'multiline':False]['text':' always incremented by emsg()','line_number':191,'multiline':False]['text':' exit value for ex mode','line_number':192,'multiline':False]['text':' there is an error message','line_number':193,'multiline':False]['text':' vim_regcomp() called emsg()','line_number':194,'multiline':False]['text':' don't wait for return for now','line_number':196,'multiline':False]['text':' need to wait for return later','line_number':197,'multiline':False]['text':' wait_return() was used and','line_number':198,'multiline':False]['text':' nothing written since then','line_number':199,'multiline':False]['text':' call maketitle() soon','line_number':200,'multiline':False]['text':' 'q' hit at "--more--" msg','line_number':202,'multiline':False]['text':' when inside vgetc() then > 0','line_number':203,'multiline':False]['text':' did set $VIM ourselves','line_number':205,'multiline':False]['text':' idem for $VIMRUNTIME','line_number':206,'multiline':False]['text':'/ Lines left before a "more" message.  Ex mode needs to be able to reset this','line_number':208,'multiline':False]['text':'/ after you type something.','line_number':209,'multiline':False]['text':' lines left for listing','line_number':210,'multiline':False]['text':' don't use more prompt, truncate','line_number':211,'multiline':False]['text':' messages','line_number':212,'multiline':False]['text':' nesting level','line_number':214,'multiline':False]['text':' break below this level','line_number':215,'multiline':False]['text':' did "debug mode" message','line_number':216,'multiline':False]['text':' breakpoint change count','line_number':217,'multiline':False]['text':' breakpoint backtrace level','line_number':218,'multiline':False]['text':' Values for "do_profiling".','line_number':220,'multiline':False]['text':'/< profiling not started','line_number':221,'multiline':False]['text':'/< profiling busy','line_number':222,'multiline':False]['text':'/< profiling paused','line_number':223,'multiline':False]['text':'/< PROF_ values','line_number':224,'multiline':False]['text':'/ Exception currently being thrown.  Used to pass an exception to a different','line_number':226,'multiline':False]['text':'/ cstack.  Also used for discarding an exception before it is caught or made','line_number':227,'multiline':False]['text':'/ pending.  Only valid when did_throw is true.','line_number':228,'multiline':False]['text':'/ An exception is being thrown.  Reset when the exception is caught or as','line_number':231,'multiline':False]['text':'/ long as it is pending in a finally clause.','line_number':232,'multiline':False]['text':'/ Set when a throw that cannot be handled in do_cmdline() must be propagated','line_number':235,'multiline':False]['text':'/ to the cstack of the previously called do_cmdline().','line_number':236,'multiline':False]['text':'/ Set when a ":finish" or ":return" that cannot be handled in do_cmdline()','line_number':239,'multiline':False]['text':'/ must be propagated to the cstack of the previously called do_cmdline().','line_number':240,'multiline':False]['text':'/ Number of nested try conditionals (across function calls and ":source"','line_number':243,'multiline':False]['text':'/ commands).','line_number':244,'multiline':False]['text':'/ When "force_abort" is true, always skip commands after an error message,','line_number':247,'multiline':False]['text':'/ even after the outermost ":endif", ":endwhile" or ":endfor" or for a','line_number':248,'multiline':False]['text':'/ function without the "abort" flag.  It is set to true when "trylevel" is','line_number':249,'multiline':False]['text':'/ non-zero (and ":silent!" was not used) or an exception is being thrown at','line_number':250,'multiline':False]['text':'/ the time an error is detected.  It is set to false when "trylevel" gets','line_number':251,'multiline':False]['text':'/ zero again and there was no error or interrupt or throw.','line_number':252,'multiline':False]['text':'/ "msg_list" points to a variable in the stack of do_cmdline() which keeps','line_number':255,'multiline':False]['text':'/ the list of arguments of several emsg() calls, one of which is to be','line_number':256,'multiline':False]['text':'/ converted to an error exception immediately after the failing command','line_number':257,'multiline':False]['text':'/ returns.  The message to be used for the exception value is pointed to by','line_number':258,'multiline':False]['text':'/ the "throw_msg" field of the first element in the list.  It is usually the','line_number':259,'multiline':False]['text':'/ same as the "msg" field of that element, but can be identical to the "msg"','line_number':260,'multiline':False]['text':'/ field of a later list element, when the "emsg_severe" flag was set when the','line_number':261,'multiline':False]['text':'/ emsg() call was made.','line_number':262,'multiline':False]['text':'/ When set, don't convert an error to an exception.  Used when displaying the','line_number':265,'multiline':False]['text':'/ interrupt message or reporting an exception that is still uncaught at the','line_number':266,'multiline':False]['text':'/ top level (which has already been discarded then).  Also used for the error','line_number':267,'multiline':False]['text':'/ message when no exception can be thrown.','line_number':268,'multiline':False]['text':'/ The stack of all caught and not finished exceptions.  The exception on the','line_number':271,'multiline':False]['text':'/ top of the stack is the one got by evaluation of v:exception.  The complete','line_number':272,'multiline':False]['text':'/ stack of all caught and pending exceptions is embedded in the various','line_number':273,'multiline':False]['text':'/ cstacks; the pending exceptions, however, are not on the caught stack.','line_number':274,'multiline':False]['text':'/','line_number':277,'multiline':False]['text':'/ Garbage collection can only take place when we are sure there are no Lists','line_number':278,'multiline':False]['text':'/ or Dictionaries being used internally.  This is flagged with','line_number':279,'multiline':False]['text':'/ "may_garbage_collect" when we are at the toplevel.','line_number':280,'multiline':False]['text':'/ "want_garbage_collect" is set by the garbagecollect() function, which means','line_number':281,'multiline':False]['text':'/ we do garbage collection before waiting for a char at the toplevel.','line_number':282,'multiline':False]['text':'/ "garbage_collect_at_exit" indicates garbagecollect(1) was called.','line_number':283,'multiline':False]['text':'/','line_number':284,'multiline':False]['text':' Special values for current_SID.','line_number':289,'multiline':False]['text':' when using a modeline','line_number':290,'multiline':False]['text':' for "--cmd" argument','line_number':291,'multiline':False]['text':' for "-c" argument','line_number':292,'multiline':False]['text':' for sourcing environment variable','line_number':293,'multiline':False]['text':' option was reset because of an error','line_number':294,'multiline':False]['text':' don't set scriptID','line_number':295,'multiline':False]['text':' changing window size','line_number':296,'multiline':False]['text':' for Lua scripts/chunks','line_number':297,'multiline':False]['text':' for API clients','line_number':298,'multiline':False]['text':' for sourcing a string with no script item','line_number':299,'multiline':False]['text':' Script CTX being sourced or was sourced to define the current function.','line_number':301,'multiline':False]['text':' ID of the current channel making a client API call','line_number':303,'multiline':False]['text':' Scope information for the code that indirectly triggered the current','line_number':308,'multiline':False]['text':' provider function call','line_number':309,'multiline':False]['text':' int value of T_CCO','line_number':320,'multiline':False]['text':' Flags to indicate an additional string for highlight name completion.','line_number':322,'multiline':False]['text':' when 1 include "None"','line_number':323,'multiline':False]['text':' when 1 include "default"','line_number':324,'multiline':False]['text':' when 2 include "link" and "clear"','line_number':325,'multiline':False]['text':' When highlight_match is true, highlight a match, starting at the cursor','line_number':327,'multiline':False]['text':' position.  Search_match_lines is the number of lines after the match (0 for','line_number':328,'multiline':False]['text':' a match within one line), search_match_endcol the column number of the','line_number':329,'multiline':False]['text':' character just after the match in the last line.','line_number':330,'multiline':False]['text':' show search match pos','line_number':331,'multiline':False]['text':' lines of matched string','line_number':332,'multiline':False]['text':' col nr of match end','line_number':333,'multiline':False]['text':' for :{FIRST},{last}s/pat','line_number':334,'multiline':False]['text':' for :{first},{LAST}s/pat','line_number':335,'multiline':False]['text':' don't use 'smartcase' once','line_number':337,'multiline':False]['text':' need to check file','line_number':339,'multiline':False]['text':' timestamps asap','line_number':340,'multiline':False]['text':' did check timestamps','line_number':341,'multiline':False]['text':' recently','line_number':342,'multiline':False]['text':' Don't check timestamps','line_number':343,'multiline':False]['text':' did ":set modified"','line_number':345,'multiline':False]['text':' Mouse coordinates, set by handle_mouse_event()','line_number':347,'multiline':False]['text':' mouse below last line','line_number':351,'multiline':False]['text':' mouse right of line','line_number':352,'multiline':False]['text':' extending Visual area with','line_number':353,'multiline':False]['text':' mouse dragging','line_number':354,'multiline':False]['text':' The root of the menu hierarchy.','line_number':356,'multiline':False]['text':' While defining the system menu, sys_menu is true.  This avoids','line_number':358,'multiline':False]['text':' overruling of menus that the user already defined.','line_number':359,'multiline':False]['text':' All windows are linked in a list. firstwin points to the first entry,','line_number':362,'multiline':False]['text':' lastwin to the last entry (can be the same as firstwin) and curwin to the','line_number':363,'multiline':False]['text':' currently active window.','line_number':364,'multiline':False]['text':' first window','line_number':365,'multiline':False]['text':' last window','line_number':366,'multiline':False]['text':' previous window','line_number':367,'multiline':False]['text':' NOLINT','line_number':370,'multiline':False]['text':' When using this macro "break" only breaks out of the inner loop. Use "goto"','line_number':372,'multiline':False]['text':' to break out of the tabpage loop.','line_number':373,'multiline':False]['text':' currently active window','line_number':382,'multiline':False]['text':' The window layout is kept in a tree of frames.  topframe points to the top','line_number':384,'multiline':False]['text':' of the tree.','line_number':385,'multiline':False]['text':' top of the window frame tree','line_number':386,'multiline':False]['text':' Tab pages are alternative topframes.  "first_tabpage" points to the first','line_number':388,'multiline':False]['text':' one in the list, "curtab" is the current one. "lastused_tabpage" is the','line_number':389,'multiline':False]['text':' last used one.','line_number':390,'multiline':False]['text':' need to redraw tabline','line_number':394,'multiline':False]['text':' Iterates over all tabs in the tab list','line_number':396,'multiline':False]['text':' All buffers are linked in a list. 'firstbuf' points to the first entry,','line_number':399,'multiline':False]['text':' 'lastbuf' to the last entry and 'curbuf' to the currently active buffer.','line_number':400,'multiline':False]['text':' first buffer','line_number':401,'multiline':False]['text':' last buffer','line_number':402,'multiline':False]['text':' currently active buffer','line_number':403,'multiline':False]['text':' Iterates over all buffers in the buffer list.','line_number':405,'multiline':False]['text':' NOLINT','line_number':412,'multiline':False]['text':' List of files being edited (global argument list).  curwin->w_alist points','line_number':414,'multiline':False]['text':' to this when the window is using the global argument list.','line_number':415,'multiline':False]['text':' global argument list','line_number':416,'multiline':False]['text':'/< the previous argument list id','line_number':417,'multiline':False]['text':' accessed last file in','line_number':418,'multiline':False]['text':' global_alist','line_number':419,'multiline':False]['text':' column for ruler','line_number':421,'multiline':False]['text':' 'rulerfmt' width of ruler when non-zero','line_number':422,'multiline':False]['text':' column for shown command','line_number':423,'multiline':False]['text':' When starting or exiting some things are done differently (e.g. screen','line_number':425,'multiline':False]['text':' updating).','line_number':426,'multiline':False]['text':' First NO_SCREEN, then NO_BUFFERS, then 0 when startup finished.','line_number':428,'multiline':False]['text':' true when planning to exit. Might keep running if there is a changed buffer.','line_number':430,'multiline':False]['text':' internal value of v:dying','line_number':432,'multiline':False]['text':' is stdin a terminal?','line_number':434,'multiline':False]['text':' is stdout a terminal?','line_number':436,'multiline':False]['text':' is stderr a terminal?','line_number':438,'multiline':False]['text':'/ filedesc set by embedder for reading first buffer like `cmd | nvim -`','line_number':441,'multiline':False]['text':' true when doing full-screen output, otherwise only writing some messages.','line_number':444,'multiline':False]['text':'/ Non-zero when only "safe" commands are allowed','line_number':447,'multiline':False]['text':'/ Non-zero when changing text and jumping to another window or editing another buffer is not','line_number':450,'multiline':False]['text':'/ allowed.','line_number':451,'multiline':False]['text':'/ Non-zero when no buffer name can be changed, no buffer can be deleted and','line_number':454,'multiline':False]['text':'/ current directory can't be changed. Used for SwapExists et al.','line_number':455,'multiline':False]['text':'/ Non-zero when evaluating an expression in a "sandbox".  Several things are','line_number':458,'multiline':False]['text':'/ not allowed then.','line_number':459,'multiline':False]['text':'/ Batch-mode: "-es", "-Es", "-l" commandline argument was given.','line_number':462,'multiline':False]['text':'/ Start position of active Visual selection.','line_number':465,'multiline':False]['text':'/ Whether Visual mode is active.','line_number':467,'multiline':False]['text':'/ Whether Select mode is active.','line_number':469,'multiline':False]['text':'/ Register name for Select mode','line_number':471,'multiline':False]['text':'/ Restart Select mode when next cmd finished','line_number':473,'multiline':False]['text':'/ Whether to restart the selection after a Select-mode mapping or menu.','line_number':475,'multiline':False]['text':'/ Type of Visual mode.','line_number':477,'multiline':False]['text':'/ true when redoing Visual.','line_number':479,'multiline':False]['text':' The Visual area is remembered for reselection.','line_number':482,'multiline':False]['text':' 'v', 'V', or Ctrl-V','line_number':483,'multiline':False]['text':' number of lines','line_number':484,'multiline':False]['text':' nr of cols or end col','line_number':485,'multiline':False]['text':'/ When pasting text with the middle mouse button in visual mode with','line_number':487,'multiline':False]['text':'/ restart_edit set, remember where it started so we can set Insstart.','line_number':488,'multiline':False]['text':' This flag is used to make auto-indent work right on lines where only a','line_number':491,'multiline':False]['text':' <RETURN> or <ESC> is typed. It is set when an auto-indent is done, and','line_number':492,'multiline':False]['text':' reset when any other editing is done on the line. If an <ESC> or <RETURN>','line_number':493,'multiline':False]['text':' is received, and did_ai is true, the line is truncated.','line_number':494,'multiline':False]['text':' Column of first char after autoindent.  0 when no autoindent done.  Used','line_number':497,'multiline':False]['text':' when 'backspace' is 0, to avoid backspacing over autoindent.','line_number':498,'multiline':False]['text':' This is a character which will end a start-middle-end comment when typed as','line_number':501,'multiline':False]['text':' the first character on a new line.  It is taken from the last character of','line_number':502,'multiline':False]['text':' the "end" comment leader when the COM_AUTO_END flag is given for that','line_number':503,'multiline':False]['text':' comment end in 'comments'.  It is only valid when did_ai is true.','line_number':504,'multiline':False]['text':' This flag is set after a ":syncbind" to let the check_scrollbind() function','line_number':507,'multiline':False]['text':' know that it should not attempt to perform scrollbinding due to the scroll','line_number':508,'multiline':False]['text':' that was a result of the ":syncbind." (Otherwise, check_scrollbind() will','line_number':509,'multiline':False]['text':' undo some of the work done by ":syncbind.")  -ralston','line_number':510,'multiline':False]['text':' This flag is set when a smart indent has been performed. When the next typed','line_number':513,'multiline':False]['text':' character is a '{' the inserted tab will be deleted again.','line_number':514,'multiline':False]['text':' This flag is set after an auto indent. If the next typed character is a '}'','line_number':517,'multiline':False]['text':' one indent will be removed.','line_number':518,'multiline':False]['text':' This flag is set after an "O" command. If the next typed character is a '{'','line_number':521,'multiline':False]['text':' one indent will be removed.','line_number':522,'multiline':False]['text':'/< for ^^D command in insert mode','line_number':525,'multiline':False]['text':' w_cursor before formatting text.','line_number':527,'multiline':False]['text':' Stuff for insert mode.','line_number':530,'multiline':False]['text':' This is where the latest','line_number':531,'multiline':False]['text':' insert/append mode started.','line_number':532,'multiline':False]['text':' This is where the latest insert/append mode started. In contrast to','line_number':534,'multiline':False]['text':' Insstart, this won't be reset by certain keys and is needed for','line_number':535,'multiline':False]['text':' op_insert(), to detect correctly where inserting by the user started.','line_number':536,'multiline':False]['text':' Stuff for MODE_VREPLACE state.','line_number':539,'multiline':False]['text':' Line count when "gR" started','line_number':540,'multiline':False]['text':' #Lines changed by "gR" so far','line_number':541,'multiline':False]['text':' increase around internal delete/replace','line_number':543,'multiline':False]['text':' These flags are set based upon 'fileencoding'.','line_number':546,'multiline':False]['text':' The characters are internally stored as UTF-8','line_number':547,'multiline':False]['text':' to avoid trouble with NUL bytes.','line_number':548,'multiline':False]['text':' japan','line_number':549,'multiline':False]['text':' euc-jp','line_number':550,'multiline':False]['text':' korea','line_number':551,'multiline':False]['text':' euc-kr','line_number':552,'multiline':False]['text':' chinese','line_number':553,'multiline':False]['text':' euc-cn','line_number':554,'multiline':False]['text':' taiwan','line_number':555,'multiline':False]['text':' euc-tw','line_number':556,'multiline':False]['text':' 2byte-','line_number':557,'multiline':False]['text':'/ Encoding used when 'fencs' is set to "default"','line_number':560,'multiline':False]['text':'/ "State" is the main state of Vim.','line_number':563,'multiline':False]['text':'/ There are other variables that modify the state:','line_number':564,'multiline':False]['text':'/    Visual_mode:    When State is MODE_NORMAL or MODE_INSERT.','line_number':565,'multiline':False]['text':'/    finish_op  :    When State is MODE_NORMAL, after typing the operator and','line_number':566,'multiline':False]['text':'/                    before typing the motion command.','line_number':567,'multiline':False]['text':'/    motion_force:   Last motion_force from do_pending_operator()','line_number':568,'multiline':False]['text':'/    debug_mode:     Debug mode','line_number':569,'multiline':False]['text':' true while an operator is pending','line_number':573,'multiline':False]['text':' count for pending operator','line_number':574,'multiline':False]['text':' motion force for pending operator','line_number':575,'multiline':False]['text':' Ex Mode (Q) state','line_number':577,'multiline':False]['text':' true if Ex mode is active','line_number':578,'multiline':False]['text':'/ Flag set when normal_check() should return 0 when entering Ex mode.','line_number':580,'multiline':False]['text':' No need to print after z or p.','line_number':583,'multiline':False]['text':' 'inccommand' command preview state','line_number':585,'multiline':False]['text':' register for recording  or zero','line_number':588,'multiline':False]['text':' register being executed or zero','line_number':589,'multiline':False]['text':' Flag set when peeking a character and found the end of executed register','line_number':590,'multiline':False]['text':' last recorded register or zero','line_number':592,'multiline':False]['text':' currently no mapping allowed','line_number':594,'multiline':False]['text':' mapping zero not allowed','line_number':595,'multiline':False]['text':' allow key codes when no_mapping is set','line_number':596,'multiline':False]['text':' Don't call u_sync()','line_number':597,'multiline':False]['text':' Call u_sync() once when evaluating','line_number':598,'multiline':False]['text':' an expression.','line_number':599,'multiline':False]['text':' force restart_edit after','line_number':601,'multiline':False]['text':' ex_normal returns','line_number':602,'multiline':False]['text':' call edit when next cmd finished','line_number':603,'multiline':False]['text':' Normally false, set to true after','line_number':604,'multiline':False]['text':' hitting cursor key in insert mode.','line_number':605,'multiline':False]['text':' Used by vgetorpeek() to decide when','line_number':606,'multiline':False]['text':' to call u_sync()','line_number':607,'multiline':False]['text':' put cursor after eol when','line_number':608,'multiline':False]['text':' restarting edit after CTRL-O','line_number':609,'multiline':False]['text':' true when no abbreviations loaded','line_number':611,'multiline':False]['text':' Modes where CTRL-C is mapped.','line_number':613,'multiline':False]['text':' CTRL-C sets got_int','line_number':614,'multiline':False]['text':' Ex command modifiers','line_number':616,'multiline':False]['text':' don't print messages','line_number':618,'multiline':False]['text':' don't print error messages','line_number':619,'multiline':False]['text':' don't redirect error messages','line_number':620,'multiline':False]['text':' don't echo the command line','line_number':621,'multiline':False]['text':' assert_fails() active','line_number':623,'multiline':False]['text':' Values for swap_exists_action: what to do when swap file already exists','line_number':625,'multiline':False]['text':' don't use dialog','line_number':626,'multiline':False]['text':' use dialog when possible','line_number':627,'multiline':False]['text':' quit editing the file','line_number':628,'multiline':False]['text':' recover the file','line_number':629,'multiline':False]['text':' no dialog, mark buffer as read-only','line_number':630,'multiline':False]['text':'/< For dialog when swap file already exists.','line_number':632,'multiline':False]['text':'/< Selected "quit" at the dialog.','line_number':633,'multiline':False]['text':'/< Buffer for sprintf, I/O, etc.','line_number':635,'multiline':False]['text':'/< Buffer for expanding file names','line_number':636,'multiline':False]['text':'/< Small buffer for messages','line_number':637,'multiline':False]['text':'/< Buffer for the os/ layer','line_number':638,'multiline':False]['text':' When non-zero, postpone redrawing.','line_number':646,'multiline':False]['text':' Set to true for "view"','line_number':649,'multiline':False]['text':' Set to true for "-r" option','line_number':650,'multiline':False]['text':' typeahead buffer','line_number':652,'multiline':False]['text':'/ Flag used to indicate that vgetorpeek() returned a char like Esc when the','line_number':655,'multiline':False]['text':'/ :normal argument was exhausted.','line_number':656,'multiline':False]['text':' recursiveness of ex_normal()','line_number':659,'multiline':False]['text':' running expr mapping, prevent use of ex_normal() and text changes','line_number':660,'multiline':False]['text':' ignore script input','line_number':661,'multiline':False]['text':' for ":stopinsert"','line_number':662,'multiline':False]['text':' true if user typed current char','line_number':663,'multiline':False]['text':' true if current char from stuffbuf','line_number':664,'multiline':False]['text':' tick for each non-mapped char','line_number':665,'multiline':False]['text':' type of redraw necessary','line_number':667,'multiline':False]['text':' skip redraw once','line_number':668,'multiline':False]['text':' extra redraw once','line_number':669,'multiline':False]['text':' redraw pum. NB: must_redraw','line_number':670,'multiline':False]['text':' should also be set.','line_number':671,'multiline':False]['text':'/< Write input to this file ("nvim -w").','line_number':675,'multiline':False]['text':' Note that even when handling SIGINT, volatile is not necessary because the','line_number':677,'multiline':False]['text':' callback is not called directly from the signal handlers.','line_number':678,'multiline':False]['text':' set to true when interrupt signal occurred','line_number':679,'multiline':False]['text':' set to true with ! command','line_number':680,'multiline':False]['text':' length of previous search cmd','line_number':681,'multiline':False]['text':' Used when compiling regexp:','line_number':682,'multiline':False]['text':' REX_SET to allow \z\(...\),','line_number':683,'multiline':False]['text':' REX_USE to allow \z\1 et al.','line_number':684,'multiline':False]['text':' Used by vim_regexec(): strings for \z\1...\z\9','line_number':685,'multiline':False]['text':' Set by vim_regexec() to store \z\(...\) matches','line_number':687,'multiline':False]['text':'/< set after out of memory msg','line_number':690,'multiline':False]['text':'/< set after swap write error msg','line_number':691,'multiline':False]['text':'/< set when :global is executing','line_number':692,'multiline':False]['text':'/< set when :argdo, :windo or :bufdo is executing','line_number':693,'multiline':False]['text':'/< start insert mode soon','line_number':694,'multiline':False]['text':' max mode length returned in get_mode(),','line_number':696,'multiline':False]['text':' including the terminating NUL','line_number':697,'multiline':False]['text':' last command line (for ":)','line_number':700,'multiline':False]['text':' command line for "."','line_number':701,'multiline':False]['text':' new value for last_cmdline','line_number':702,'multiline':False]['text':' for CTRL-W CTRL-] command','line_number':704,'multiline':False]['text':' args for win_split()','line_number':705,'multiline':False]['text':' cmdmod.cmod_tab','line_number':706,'multiline':False]['text':' for tag preview commands:','line_number':707,'multiline':False]['text':' height of preview window','line_number':708,'multiline':False]['text':' whether the tag command comes','line_number':709,'multiline':False]['text':' from the command line (0) or was','line_number':710,'multiline':False]['text':' invoked as a normal command (1)','line_number':711,'multiline':False]['text':' offset for replace_push()','line_number':713,'multiline':False]['text':' need backslash in cmd line','line_number':715,'multiline':False]['text':' doing :ta from help file','line_number':717,'multiline':False]['text':' When a string option is NULL (which only happens in out-of-memory situations), it is set to','line_number':719,'multiline':False]['text':' empty_string_option, to avoid having to check for NULL everywhere.','line_number':720,'multiline':False]['text':'','line_number':721,'multiline':False]['text':' TODO(famiu): Remove this when refcounted strings are used for string options.','line_number':722,'multiline':False]['text':' no redirection for a moment','line_number':725,'multiline':False]['text':' message redirection file','line_number':726,'multiline':False]['text':' message redirection register','line_number':727,'multiline':False]['text':' message redirection variable','line_number':728,'multiline':False]['text':' captured output for execute()','line_number':729,'multiline':False]['text':' mapping for language keys','line_number':731,'multiline':False]['text':' Save 'laststatus' setting','line_number':733,'multiline':False]['text':' Save 'winminheight' setting','line_number':734,'multiline':False]['text':'/< wildmenu showing','line_number':737,'multiline':False]['text':'/< wildmenu showing with scroll','line_number':738,'multiline':False]['text':'/< cmdline CTRL-D','line_number':739,'multiline':False]['text':' When a window has a local directory, the absolute path of the global','line_number':742,'multiline':False]['text':' current directory is stored here (in allocated memory).  If the current','line_number':743,'multiline':False]['text':' directory is not a local directory, globaldir is NULL.','line_number':744,'multiline':False]['text':' Whether 'keymodel' contains "stopsel" and "startsel".','line_number':749,'multiline':False]['text':'/< type of cmdline window or 0','line_number':753,'multiline':False]['text':'/< result of cmdline window or 0','line_number':754,'multiline':False]['text':'/< cmdline recursion level','line_number':755,'multiline':False]['text':'/< curwin before opening cmdline window or NULL','line_number':756,'multiline':False]['text':' When ":global" is used to number of substitutions and changed lines is','line_number':760,'multiline':False]['text':' accumulated until it's finished.','line_number':761,'multiline':False]['text':' Also used for ":spellrepall".','line_number':762,'multiline':False]['text':' total number of substitutions','line_number':763,'multiline':False]['text':' total number of lines changed','line_number':764,'multiline':False]['text':' table to store parsed 'wildmode'','line_number':766,'multiline':False]['text':' whether titlestring and iconstring contains statusline syntax','line_number':769,'multiline':False]['text':' don't use 'hlsearch' temporarily','line_number':774,'multiline':False]['text':' received text from client','line_number':777,'multiline':False]['text':' or from feedkeys()','line_number':778,'multiline':False]['text':' normal path separator character','line_number':781,'multiline':False]['text':' abnormal path separator character','line_number':782,'multiline':False]['text':' normal path separator string','line_number':783,'multiline':False]['text':' Set to kTrue when an operator is being executed with virtual editing','line_number':786,'multiline':False]['text':' kNone when no operator is being executed, kFalse otherwise.','line_number':787,'multiline':False]['text':' Display tick, incremented for each call to update_screen()','line_number':790,'multiline':False]['text':' Line in which spell checking wasn't highlighted because it touched the','line_number':793,'multiline':False]['text':' cursor position in Insert mode.','line_number':794,'multiline':False]['text':' uncrustify:off','line_number':797,'multiline':False]['text':' The error messages that can be shared are included here.','line_number':799,'multiline':False]['text':' Excluded are errors that are only used once and debugging messages.','line_number':800,'multiline':False]['text':' where to write startup timing','line_number':978,'multiline':False]['text':' Some compilers warn for not using a return value, but in some situations we','line_number':980,'multiline':False]['text':' can't do anything useful with the value.  Assign to this variable to avoid','line_number':981,'multiline':False]['text':' the warning.','line_number':982,'multiline':False]['text':' stdio is an RPC channel (--embed).','line_number':985,'multiline':False]['text':' Do not start UI (--headless, -l) nor read/write to stdio (unless embedding).','line_number':987,'multiline':False]['text':' uncrustify:on','line_number':990,'multiline':False]['text':'/ Only filled for Win32.','line_number':992,'multiline':False]['text':'/ While executing a regexp and set to OPTION_MAGIC_ON or OPTION_MAGIC_OFF this','line_number':995,'multiline':False]['text':'/ overrules p_magic.  Otherwise set to OPTION_MAGIC_NOT_SET.','line_number':996,'multiline':False]['text':'/ Skip win_fix_cursor() call for 'splitkeep' when cmdwin is closed.','line_number':999,'multiline':False]['text':'/ Skip win_fix_scroll() call for 'splitkeep' when closing tab page.','line_number':1001,'multiline':False]['text':'/ Skip update_topline() call while executing win_fix_scroll().','line_number':1003,'multiline':False]