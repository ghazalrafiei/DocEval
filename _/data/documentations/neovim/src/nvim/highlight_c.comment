['text':' highlight.c: low level code for UI and syntax highlighting','line_number':1,'multiline':False]['text':'/ highlight entries private to a namespace','line_number':46,'multiline':False]['text':' index 0 is no attribute, add dummy entry:','line_number':53,'multiline':False]['text':'/ @return true if hl table was reset','line_number':58,'multiline':False]['text':' hl tables must now be rebuilt.','line_number':65,'multiline':False]['text':'/ Return the attr number for a set of colors and font, and optionally','line_number':70,'multiline':False]['text':'/ a semantic description (see ext_hlstate documentation).','line_number':71,'multiline':False]['text':'/ Add a new entry to the attr_entries array if the combination is new.','line_number':72,'multiline':False]['text':'/ @return 0 for error.','line_number':73,'multiline':False]['text':' This information will not be used, erase it and reduce the table size.','line_number':78,'multiline':False]['text':' Running out of attribute entries!  remove all attributes, and','line_number':93,'multiline':False]['text':' compute new ones for all groups.','line_number':94,'multiline':False]['text':' When called recursively, we are really out of numbers.','line_number':95,'multiline':False]['text':' This entry is now invalid, don't put it','line_number':106,'multiline':False]['text':' new attr id, send event to remote ui:s','line_number':113,'multiline':False]['text':' Note: internally we don't distinguish between cterm and rgb attributes,','line_number':118,'multiline':False]['text':' remote_ui_hl_attr_define will however.','line_number':119,'multiline':False]['text':'/ When a UI connects, we need to send it the table of highlights used so far.','line_number':125,'multiline':False]['text':'/ Get attribute code for a syntax group.','line_number':140,'multiline':False]['text':' TODO(bfredl): should we do this unconditionally','line_number':143,'multiline':False]['text':' If all the fields are cleared, clear the attr field back to default value','line_number':151,'multiline':False]['text':' set in global (':highlight') namespace','line_number':159,'multiline':False]['text':' ns=0 (the default namespace) does not have a provider so stop here','line_number':183,'multiline':False]['text':' TODO(bfredl): map_ref true even this?','line_number':198,'multiline':False]['text':' TODO(bfredl): preload the "global" attr dict?','line_number':206,'multiline':False]['text':' TODO(bfredl): or "inherit", combine with global value?','line_number':213,'multiline':False]['text':' or false','line_number':224,'multiline':False]['text':'/ prepare for drawing window `wp` or global elements if NULL','line_number':283,'multiline':False]['text':'/','line_number':284,'multiline':False]['text':'/ Note: pum should be drawn in the context of the current window!','line_number':285,'multiline':False]['text':'/ Get attribute code for a builtin highlight group.','line_number':292,'multiline':False]['text':'/','line_number':293,'multiline':False]['text':'/ The final syntax group could be modified by hi-link or 'winhighlight'.','line_number':294,'multiline':False]['text':'/ Apply 'winblend' to highlight attributes.','line_number':324,'multiline':False]['text':'/','line_number':325,'multiline':False]['text':'/ @param wp    The window to get 'winblend' value from.','line_number':326,'multiline':False]['text':'/ @param attr  The original attribute code.','line_number':327,'multiline':False]['text':'/','line_number':328,'multiline':False]['text':'/ @return      The attribute code with 'winblend' applied.','line_number':329,'multiline':False]['text':' if blend= attribute is not set, 'winblend' value overrides it.','line_number':333,'multiline':False]['text':' No specific highlights, use the defaults.','line_number':351,'multiline':False]['text':' If a floating window is blending it always have a named','line_number':363,'multiline':False]['text':' wp->w_hl_attr_normal group. HL_ATTR(HLF_NFLOAT) is always named.','line_number':364,'multiline':False]['text':' determine window specific background set in 'winhighlight'','line_number':366,'multiline':False]['text':' shadow might cause blending','line_number':396,'multiline':False]['text':' TODO(bfredl): this a bit ad-hoc. move it from highlight ns logic to 'winhl'','line_number':399,'multiline':False]['text':' implementation?','line_number':400,'multiline':False]['text':' NOOOO! You cannot just pretend that "Normal" is just like any other','line_number':435,'multiline':False]['text':' syntax group! It needs at least 10 layers of special casing! Noooooo!','line_number':436,'multiline':False]['text':'','line_number':437,'multiline':False]['text':' haha, tema engine go brrr','line_number':438,'multiline':False]['text':' hl_get_ui_attr might have invalidated the decor provider','line_number':442,'multiline':False]['text':'/ Gets HL_UNDERLINE highlight.','line_number':463,'multiline':False]['text':'/ Get attribute code for forwarded :terminal highlights.','line_number':483,'multiline':False]['text':'/ Clear all highlight tables.','line_number':490,'multiline':False]['text':'/ Combine HlAttrFlags.','line_number':520,'multiline':False]['text':'/ The underline attribute in "prim_ae" overrules the one in "char_ae" if both are present.','line_number':521,'multiline':False]['text':' Combine special attributes (e.g., for spelling) with other attributes','line_number':530,'multiline':False]['text':' (e.g., for syntax highlighting).','line_number':531,'multiline':False]['text':' "prim_attr" overrules "char_attr".','line_number':532,'multiline':False]['text':' This creates a new group when required.','line_number':533,'multiline':False]['text':' Since we expect there to be a lot of spelling mistakes we cache the result.','line_number':534,'multiline':False]['text':' Return the resulting attributes.','line_number':535,'multiline':False]['text':' TODO(bfredl): could use a struct for clearer intent.','line_number':544,'multiline':False]['text':' start with low-priority attribute, and override colors if present below.','line_number':554,'multiline':False]['text':'/ Get the used rgb colors for an attr group.','line_number':609,'multiline':False]['text':'/','line_number':610,'multiline':False]['text':'/ If colors are unset, use builtin default colors. Never returns -1','line_number':611,'multiline':False]['text':'/ Cterm colors are unchanged.','line_number':612,'multiline':False]['text':'/ Blend overlay attributes (for popupmenu) with other attributes','line_number':638,'multiline':False]['text':'/','line_number':639,'multiline':False]['text':'/ This creates a new group when required.','line_number':640,'multiline':False]['text':'/ This is called per-cell, so cache the result.','line_number':641,'multiline':False]['text':'/','line_number':642,'multiline':False]['text':'/ @return the resulting attributes.','line_number':643,'multiline':False]['text':' blend property was consumed','line_number':703,'multiline':False]['text':' 1. Convert cterm color numbers to RGB.','line_number':731,'multiline':False]['text':' 2. Blend the RGB colors.','line_number':732,'multiline':False]['text':' 3. Convert the RGB result to a cterm color.','line_number':733,'multiline':False]['text':'/ Converts RGB color to 8-bit color (0-255).','line_number':740,'multiline':False]['text':'/ Converts 8-bit color (0-255) to RGB color.','line_number':750,'multiline':False]['text':'/ This is compatible with xterm.','line_number':751,'multiline':False]['text':'  R    G    B   idx','line_number':762,'multiline':False]['text':' black','line_number':763,'multiline':False]['text':' dark red','line_number':764,'multiline':False]['text':' dark green','line_number':765,'multiline':False]['text':' dark yellow / brown','line_number':766,'multiline':False]['text':' dark blue','line_number':767,'multiline':False]['text':' dark magenta','line_number':768,'multiline':False]['text':' dark cyan','line_number':769,'multiline':False]['text':' light grey','line_number':770,'multiline':False]['text':' dark grey','line_number':772,'multiline':False]['text':' light red','line_number':773,'multiline':False]['text':' light green','line_number':774,'multiline':False]['text':' yellow','line_number':775,'multiline':False]['text':' light blue','line_number':776,'multiline':False]['text':' light magenta','line_number':777,'multiline':False]['text':' light cyan','line_number':778,'multiline':False]['text':' white','line_number':779,'multiline':False]['text':' *ansi_idx = 0;','line_number':786,'multiline':False]['text':' *ansi_idx = ansi_table[nr][3];','line_number':792,'multiline':False]['text':' 216 color-cube','line_number':793,'multiline':False]['text':' *ansi_idx = -1;','line_number':798,'multiline':False]['text':' 24 greyscale ramp','line_number':799,'multiline':False]['text':' *ansi_idx = -1;','line_number':804,'multiline':False]['text':'/ Get highlight attributes for a attribute code','line_number':809,'multiline':False]['text':' invalid attribute code, or the tables were cleared','line_number':813,'multiline':False]['text':'/ Gets highlight description for id `attr_id` as a map.','line_number':819,'multiline':False]['text':'/ Converts an HlAttrs into Dictionary','line_number':838,'multiline':False]['text':'/','line_number':839,'multiline':False]['text':'/ @param[in/out] hl Dictionary with pre-allocated space for HLATTRS_DICT_SIZE elements','line_number':840,'multiline':False]['text':'/ @param[in] aep data to convert','line_number':841,'multiline':False]['text':'/ @param use_rgb use 'gui*' settings if true, else resorts to 'cterm*'','line_number':842,'multiline':False]['text':'/ @param short_keys change (foreground, background, special) to (fg, bg, sp) for 'gui*' settings','line_number':843,'multiline':False]['text':'/                          (foreground, background) to (ctermfg, ctermbg) for 'cterm*' settings','line_number':844,'multiline':False]['text':' at most 16 items','line_number':848,'multiline':False]['text':' at most 16 items','line_number':849,'multiline':False]['text':' Handle cterm attrs','line_number':1028,'multiline':False]['text':' empty list from Lua API should clear all cterm attributes','line_number':1047,'multiline':False]['text':' TODO(clason): handle via gen_api_dispatch','line_number':1048,'multiline':False]['text':' apply gui mask as default for cterm mask','line_number':1072,'multiline':False]['text':' TODO(bfredl): be more fancy with "bg", "fg" etc','line_number':1100,'multiline':False]['text':' TODO(bfredl): use arena allocation','line_number':1124,'multiline':False]['text':' attribute combination is associative, so flatten to an array','line_number':1162,'multiline':False]