['text':' ex_cmds.c: some functions for command line commands','line_number':1,'multiline':False]['text':'/ Case matching style to use for :substitute','line_number':91,'multiline':False]['text':'/< Honor the user's 'ignorecase'/'smartcase' options','line_number':93,'multiline':False]['text':'/< Ignore case of the search','line_number':94,'multiline':False]['text':'/< Match case of the search','line_number':95,'multiline':False]['text':'/ Flags kept between calls to :substitute.','line_number':98,'multiline':False]['text':'/< do multiple substitutions per line','line_number':100,'multiline':False]['text':'/< ask for confirmation','line_number':101,'multiline':False]['text':'/< count only','line_number':102,'multiline':False]['text':'/< if false, ignore errors','line_number':103,'multiline':False]['text':'/< print last line with subs','line_number':104,'multiline':False]['text':'/< list last line with subs','line_number':105,'multiline':False]['text':'/< list last line with line nr','line_number':106,'multiline':False]['text':'/< ignore case flag','line_number':107,'multiline':False]['text':'/ Partial result of a substitution during :substitute.','line_number':110,'multiline':False]['text':'/ Numbers refer to the buffer _after_ substitution','line_number':111,'multiline':False]['text':' start of the match','line_number':113,'multiline':False]['text':' end of the match','line_number':114,'multiline':False]['text':' where to begin showing lines before the match','line_number':115,'multiline':False]['text':' Collected results of a substitution for showing them in','line_number':118,'multiline':False]['text':' the preview window','line_number':119,'multiline':False]['text':' lines needed in the preview window','line_number':122,'multiline':False]['text':'/ ":ascii" and "ga" implementation','line_number':132,'multiline':False]['text':' TODO(bfredl): merge this with the main loop','line_number':150,'multiline':False]['text':' NUL is stored as NL.','line_number':152,'multiline':False]['text':' NL is stored as CR.','line_number':156,'multiline':False]['text':' needed for overlong ascii?','line_number':182,'multiline':False]['text':' Repeat for combining characters, also handle multiby here.','line_number':185,'multiline':False]['text':' This assumes every multi-byte char is printable...','line_number':190,'multiline':False]['text':' Draw composing char on top of a space.','line_number':196,'multiline':False]['text':' needed for overlong ascii?','line_number':217,'multiline':False]['text':'/ ":left", ":center" and ":right": align text.','line_number':226,'multiline':False]['text':' switch left and right aligning','line_number':233,'multiline':False]['text':' width is used for new indent','line_number':243,'multiline':False]['text':' if 'textwidth' set, use it','line_number':248,'multiline':False]['text':' else if 'wrapmargin' set, use it','line_number':249,'multiline':False]['text':' if invalid value, use 80','line_number':250,'multiline':False]['text':' left align','line_number':268,'multiline':False]['text':' avoid uninit warnings','line_number':271,'multiline':False]['text':' skip blank lines','line_number':274,'multiline':False]['text':' right align','line_number':281,'multiline':False]['text':' Make sure that embedded TABs don't make the text go too far','line_number':283,'multiline':False]['text':' to the right.','line_number':284,'multiline':False]['text':' Now try to move the line as much as possible to','line_number':289,'multiline':False]['text':' the right.  Stop when it moves too far.','line_number':290,'multiline':False]['text':' set indent','line_number':305,'multiline':False]['text':'/ @return  the length of the current line, excluding trailing white space.','line_number':312,'multiline':False]['text':' Get the line.  If it's empty bail out early (could be the empty string','line_number':317,'multiline':False]['text':' for an unloaded buffer).','line_number':318,'multiline':False]['text':' find the first non-blank character','line_number':323,'multiline':False]['text':' find the character after the last non-blank character','line_number':326,'multiline':False]['text':' Get line length.','line_number':331,'multiline':False]['text':' Check for embedded TAB.','line_number':332,'multiline':False]['text':' Buffer for two lines used during sorting.  They are allocated to','line_number':340,'multiline':False]['text':' contain the longest line being sorted.','line_number':341,'multiline':False]['text':'/< sort using locale','line_number':345,'multiline':False]['text':'/< ignore case','line_number':346,'multiline':False]['text':'/< sort on number','line_number':347,'multiline':False]['text':'/< sort on regex instead of skipping it','line_number':348,'multiline':False]['text':'/< sort on floating number','line_number':349,'multiline':False]['text':'/< flag to indicate if sorting has been interrupted','line_number':351,'multiline':False]['text':'/ Struct to store info to be sorted.','line_number':353,'multiline':False]['text':'/< line number','line_number':355,'multiline':False]['text':'/< starting column number','line_number':358,'multiline':False]['text':'/< ending column number','line_number':359,'multiline':False]['text':'/< value if sorting by integer','line_number':362,'multiline':False]['text':'/< true when line contains a number','line_number':363,'multiline':False]['text':'/< value if sorting by float','line_number':365,'multiline':False]['text':' If the user interrupts, there's no way to stop qsort() immediately, but','line_number':383,'multiline':False]['text':' if we return 0 every time, qsort will assume it's done sorting and','line_number':384,'multiline':False]['text':' exit.','line_number':385,'multiline':False]['text':' When sorting numbers "start_col_nr" is the number, not the column','line_number':394,'multiline':False]['text':' number.','line_number':395,'multiline':False]['text':' We need to copy one line into "sortbuf1", because there is no','line_number':411,'multiline':False]['text':' guarantee that the first pointer becomes invalid when obtaining the','line_number':412,'multiline':False]['text':' second one.','line_number':413,'multiline':False]['text':' If two lines have the same value, preserve the original line order.','line_number':424,'multiline':False]['text':'/ ":sort".','line_number':431,'multiline':False]['text':' Sorting one line is really quick!','line_number':441,'multiline':False]['text':' Buffer contents changed.','line_number':456,'multiline':False]['text':' Skip','line_number':460,'multiline':False]['text':' comment start','line_number':485,'multiline':False]['text':' Use last search pattern if sort pattern is empty.','line_number':496,'multiline':False]['text':' continue after the regexp','line_number':509,'multiline':False]['text':' Can only have one of 'n', 'b', 'o' and 'x'.','line_number':517,'multiline':False]['text':' From here on "sort_nr" is used as a flag for any integer number','line_number':523,'multiline':False]['text':' sorting.','line_number':524,'multiline':False]['text':' Make an array with all line numbers.  This avoids having to copy all','line_number':527,'multiline':False]['text':' the lines into allocated memory.','line_number':528,'multiline':False]['text':' When sorting on strings "start_col_nr" is the offset in the line, for','line_number':529,'multiline':False]['text':' numbers sorting it's the number to sort on.  This means the pattern','line_number':530,'multiline':False]['text':' matching and number conversion only has to be done once per line.','line_number':531,'multiline':False]['text':' Also get the longest line length for allocating "sortbuf".','line_number':532,'multiline':False]['text':' Make sure vim_str2nr() doesn't read any digits past the end','line_number':554,'multiline':False]['text':' of the match, by temporarily terminating the string there','line_number':555,'multiline':False]['text':' temporary character storage','line_number':557,'multiline':False]['text':' Sorting on number: Store the number itself.','line_number':559,'multiline':False]['text':' include preceding negative sign','line_number':570,'multiline':False]['text':' line without number should sort before any number','line_number':573,'multiline':False]['text':' empty line should sort before any number','line_number':588,'multiline':False]['text':' Store the column to sort at.','line_number':596,'multiline':False]['text':' Allocate a buffer that can hold the longest line.','line_number':611,'multiline':False]['text':' Sort the array of line numbers.  Note: can't be interrupted!','line_number':615,'multiline':False]['text':' Insert the lines in the sorted order below the last one.','line_number':624,'multiline':False]['text':' If the original line number of the line being placed is not the same','line_number':629,'multiline':False]['text':' as "lnum" (accounting for offset), we know that the buffer changed.','line_number':630,'multiline':False]['text':' include EOL in bytelen','line_number':636,'multiline':False]['text':' Copy the line into a buffer, it may become invalid in','line_number':639,'multiline':False]['text':' ml_append(). And it's needed for "unique".','line_number':640,'multiline':False]['text':' delete the original lines if appending worked','line_number':653,'multiline':False]['text':' Adjust marks for deleted (or added) lines and prepare for displaying.','line_number':662,'multiline':False]['text':'/ :move command - move lines line1-line2 to line dest','line_number':692,'multiline':False]['text':'/','line_number':693,'multiline':False]['text':'/ @return  FAIL for failure, OK otherwise','line_number':694,'multiline':False]['text':' Num lines added before line1','line_number':698,'multiline':False]['text':' Num lines moved','line_number':699,'multiline':False]['text':' Last line in file after adding new text','line_number':700,'multiline':False]['text':' Do nothing if we are not actually moving any lines.  This will prevent','line_number':707,'multiline':False]['text':' the 'modified' flag from being set without cause.','line_number':708,'multiline':False]['text':' Move the cursor as if lines were moved (see below) to be backwards','line_number':710,'multiline':False]['text':' compatible.','line_number':711,'multiline':False]['text':' First we copy the old text to its new location -- webb','line_number':727,'multiline':False]['text':' Also copy the flag that ":global" command uses.','line_number':728,'multiline':False]['text':' Now we must be careful adjusting our marks so that we don't overlap our','line_number':741,'multiline':False]['text':' mark_adjust() calls.','line_number':742,'multiline':False]['text':'','line_number':743,'multiline':False]['text':' We adjust the marks within the old text so that they refer to the','line_number':744,'multiline':False]['text':' last lines of the file (temporarily), because we know no other marks','line_number':745,'multiline':False]['text':' will be set there since these line numbers did not exist until we added','line_number':746,'multiline':False]['text':' our new lines.','line_number':747,'multiline':False]['text':'','line_number':748,'multiline':False]['text':' Then we adjust the marks on lines between the old and new text positions','line_number':749,'multiline':False]['text':' (either forwards or backwards).','line_number':750,'multiline':False]['text':'','line_number':751,'multiline':False]['text':' And Finally we adjust the marks we put at the end of the file back to','line_number':752,'multiline':False]['text':' their final destination at the new text position -- webb','line_number':753,'multiline':False]['text':' send update regarding the new lines that were added','line_number':798,'multiline':False]['text':' Now we delete the original text -- webb','line_number':801,'multiline':False]['text':' Leave the cursor on the last of the moved lines.','line_number':820,'multiline':False]['text':' send nvim_buf_lines_event regarding lines that were deleted','line_number':838,'multiline':False]['text':'/ ":copy"','line_number':844,'multiline':False]['text':' there are three situations:','line_number':854,'multiline':False]['text':' 1. destination is above line1','line_number':855,'multiline':False]['text':' 2. destination is between line1 and line2','line_number':856,'multiline':False]['text':' 3. destination is below line2','line_number':857,'multiline':False]['text':'','line_number':858,'multiline':False]['text':' n = destination (when starting)','line_number':859,'multiline':False]['text':' curwin->w_cursor.lnum = destination (while copying)','line_number':860,'multiline':False]['text':' line1 = start of source (while copying)','line_number':861,'multiline':False]['text':' line2 = end of source (while copying)','line_number':862,'multiline':False]['text':' need to use xstrdup() because the line will be unlocked within','line_number':869,'multiline':False]['text':' ml_append()','line_number':870,'multiline':False]['text':' situation 2: skip already copied lines','line_number':875,'multiline':False]['text':' the previous command','line_number':897,'multiline':False]['text':'/ Check that "prevcmd" is not NULL.  If it is NULL then give an error message','line_number':907,'multiline':False]['text':'/ and return false.','line_number':908,'multiline':False]['text':'/ Handle the ":!cmd" command.  Also for ":r !cmd" and ":w !cmd"','line_number':918,'multiline':False]['text':'/ Bangs in the argument are replaced with the previously entered command.','line_number':919,'multiline':False]['text':'/ Remember the argument.','line_number':920,'multiline':False]['text':' command','line_number':924,'multiline':False]['text':' start of range','line_number':925,'multiline':False]['text':' end of range','line_number':926,'multiline':False]['text':' the new command','line_number':927,'multiline':False]['text':' need to free() newcmd','line_number':928,'multiline':False]['text':' Disallow shell commands in secure mode','line_number':931,'multiline':False]['text':' :!','line_number':936,'multiline':False]['text':' don't scroll here','line_number':937,'multiline':False]['text':' Try to find an embedded bang, like in ":!<cmd> ! [args]"','line_number':942,'multiline':False]['text':' ":!!" is indicated by the 'forceit' variable.','line_number':943,'multiline':False]['text':' Skip leading white space to avoid a strange error with some shells.','line_number':946,'multiline':False]['text':' Scan the rest of the argument for '!', which is replaced by the','line_number':973,'multiline':False]['text':' previous command.  "\!" is replaced by "!" (this is vi compatible).','line_number':974,'multiline':False]['text':' Only set "prevcmd" if there is a command to run, otherwise keep te one','line_number':991,'multiline':False]['text':' we have.','line_number':992,'multiline':False]['text':' put cmd in redo buffer for ! command','line_number':1000,'multiline':False]['text':' If % or # appears in the command, it must have been escaped.','line_number':1005,'multiline':False]['text':' Reescape them, so that redoing them does not substitute them by the','line_number':1006,'multiline':False]['text':' buffername.','line_number':1007,'multiline':False]['text':' Add quotes around the command, for shells that need them.','line_number':1015,'multiline':False]['text':' :!','line_number':1026,'multiline':False]['text':' echo the command','line_number':1027,'multiline':False]['text':' :range!','line_number':1036,'multiline':False]['text':' Careful: This may recursively call do_bang() again! (because of','line_number':1037,'multiline':False]['text':' autocommands)','line_number':1038,'multiline':False]['text':'/ do_filter: filter lines through a command given by the user','line_number':1049,'multiline':False]['text':'/','line_number':1050,'multiline':False]['text':'/ We mostly use temp files and the call_shell() routine here. This would','line_number':1051,'multiline':False]['text':'/ normally be done using pipes on a Unix system, but this is more portable','line_number':1052,'multiline':False]['text':'/ to non-Unix systems. The call_shell() routine needs to be able','line_number':1053,'multiline':False]['text':'/ to deal with redirection somehow, and should handle things like looking','line_number':1054,'multiline':False]['text':'/ at the PATH env. variable, and adding reasonable extensions to the','line_number':1055,'multiline':False]['text':'/ command name given by the user. All reasonable versions of call_shell()','line_number':1056,'multiline':False]['text':'/ do this.','line_number':1057,'multiline':False]['text':'/ Alternatively, if on Unix and redirecting input or output, but not both,','line_number':1058,'multiline':False]['text':'/ and the 'shelltemp' option isn't set, use pipes.','line_number':1059,'multiline':False]['text':'/ We use input redirection if do_in is true.','line_number':1060,'multiline':False]['text':'/ We use output redirection if do_out is true.','line_number':1061,'multiline':False]['text':'/','line_number':1062,'multiline':False]['text':'/ @param eap  for forced 'ff' and 'fenc'','line_number':1063,'multiline':False]['text':' no filter command','line_number':1075,'multiline':False]['text':' Temporarily disable lockmarks since that's needed to propagate changed','line_number':1080,'multiline':False]['text':' regions of the buffer for foldUpdate(), linecount, etc.','line_number':1081,'multiline':False]['text':' When using temp files:','line_number':1091,'multiline':False]['text':' 1. * Form temp file names','line_number':1092,'multiline':False]['text':' 2. * Write the lines to a temp file','line_number':1093,'multiline':False]['text':' 3.   Run the filter command on the temp file','line_number':1094,'multiline':False]['text':' 4. * Read the output of the command into the buffer','line_number':1095,'multiline':False]['text':' 5. * Delete the original lines to be filtered','line_number':1096,'multiline':False]['text':' 6. * Remove the temp files','line_number':1097,'multiline':False]['text':'','line_number':1098,'multiline':False]['text':' When writing the input with a pipe or when catching the output with a','line_number':1099,'multiline':False]['text':' pipe only need to do 3.','line_number':1100,'multiline':False]['text':' Use a pipe to fetch stdout of the command, do not use a temp file.','line_number':1107,'multiline':False]['text':' Use a pipe to write stdin of the command, do not use a temp file.','line_number':1111,'multiline':False]['text':' Use a pipe to write stdin and fetch stdout of the command, do not','line_number':1116,'multiline':False]['text':' use a temp file.','line_number':1117,'multiline':False]['text':' The writing and reading of temp files will not be shown.','line_number':1128,'multiline':False]['text':' Vi also doesn't do this and the messages are not very informative.','line_number':1129,'multiline':False]['text':' don't call wait_return() while busy','line_number':1130,'multiline':False]['text':' Keep message from buf_write().','line_number':1133,'multiline':False]['text':' will call wait_return()','line_number':1136,'multiline':False]['text':' Create the shell command in allocated memory.','line_number':1149,'multiline':False]['text':' Pass on the kShellOptDoOut flag when the output is being redirected.','line_number':1162,'multiline':False]['text':' When interrupting the shell command, it may still have produced some','line_number':1169,'multiline':False]['text':' useful output.  Reset got_int here, so that readfile() won't cancel','line_number':1170,'multiline':False]['text':' reading.','line_number':1171,'multiline':False]['text':' TODO(bfredl): Currently not active for extmarks. What would we','line_number':1201,'multiline':False]['text':' do if columns don't match, assume added/deleted bytes at the','line_number':1202,'multiline':False]['text':' end of each line?','line_number':1203,'multiline':False]['text':' move all marks from old lines to new lines','line_number':1205,'multiline':False]['text':' move marks from old lines to new lines, delete marks','line_number':1208,'multiline':False]['text':' that are in deleted lines','line_number':1209,'multiline':False]['text':' Put cursor on first filtered line for ":range!cmd".','line_number':1217,'multiline':False]['text':' Adjust '[ and '] (set by buf_write()).','line_number':1218,'multiline':False]['text':' adjust '[','line_number':1221,'multiline':False]['text':' adjust ']','line_number':1222,'multiline':False]['text':' adjust last line','line_number':1223,'multiline':False]['text':' for next write','line_number':1224,'multiline':False]['text':' Put cursor on last new line for ":r !cmd".','line_number':1227,'multiline':False]['text':' cursor on first non-blank','line_number':1232,'multiline':False]['text':' save message to display it after redraw','line_number':1240,'multiline':False]['text':' put cursor back in same position for ":w !cmd"','line_number':1249,'multiline':False]['text':'/ Call a shell to execute a command.','line_number':1276,'multiline':False]['text':'/ When "cmd" is NULL start an interactive shell.','line_number':1277,'multiline':False]['text':'/','line_number':1278,'multiline':False]['text':'/ @param flags  may be SHELL_DOOUT when output is redirected','line_number':1279,'multiline':False]['text':' Disallow shell commands in secure mode','line_number':1282,'multiline':False]['text':' For autocommands we want to get the output on the current screen, to','line_number':1288,'multiline':False]['text':' avoid having to type return below.','line_number':1289,'multiline':False]['text':' put cursor at start of line','line_number':1290,'multiline':False]['text':' may shift screen one line up','line_number':1291,'multiline':False]['text':' warning message before calling the shell','line_number':1293,'multiline':False]['text':' This ui_cursor_goto is required for when the '\n' resulted in a "delete line','line_number':1305,'multiline':False]['text':' 1" command to the terminal.','line_number':1306,'multiline':False]['text':' put the message cursor at the end of the screen, avoids wait_return()','line_number':1315,'multiline':False]['text':' to overwrite the text that the external command showed','line_number':1316,'multiline':False]['text':'/ Create a shell command from a command string, input redirection file and','line_number':1342,'multiline':False]['text':'/ output redirection file.','line_number':1343,'multiline':False]['text':'/','line_number':1344,'multiline':False]['text':'/ @param cmd  Command to execute.','line_number':1345,'multiline':False]['text':'/ @param itmp NULL or the input file.','line_number':1346,'multiline':False]['text':'/ @param otmp NULL or the output file.','line_number':1347,'multiline':False]['text':'/ @returns an allocated string with the shell command.','line_number':1348,'multiline':False]['text':' At least enough space for cmd + NULL.','line_number':1361,'multiline':False]['text':' +6: #20530','line_number':1368,'multiline':False]['text':' two extra spaces ("  "),','line_number':1372,'multiline':False]['text':' FIXME: should we add "-Encoding utf8"?','line_number':1379,'multiline':False]['text':' FIXME: add `&` ourself or leave to user?','line_number':1381,'multiline':False]['text':' Put delimiters around the command (for concatenated commands) when','line_number':1389,'multiline':False]['text':' redirecting input and/or output.','line_number':1390,'multiline':False]['text':' For shells that don't understand braces around commands, at least allow','line_number':1404,'multiline':False]['text':' the use of commands in a pipe.','line_number':1405,'multiline':False]['text':' If there is a pipe, we have to put the '<' in front of it.','line_number':1408,'multiline':False]['text':' Don't do this when 'shellquote' is not empty, otherwise the','line_number':1409,'multiline':False]['text':' redirection would be inside the quotes.','line_number':1410,'multiline':False]['text':' Insert a space before the '|' for DOS','line_number':1422,'multiline':False]['text':'/ Append output redirection for the given file to the end of the buffer','line_number':1435,'multiline':False]['text':'/','line_number':1436,'multiline':False]['text':'/ @param[out]  buf  Buffer to append to.','line_number':1437,'multiline':False]['text':'/ @param[in]  buflen  Buffer length.','line_number':1438,'multiline':False]['text':'/ @param[in]  opt  Separator or format string to append: will append','line_number':1439,'multiline':False]['text':'/                  `printf(' ' . opt, fname)` if `%s` is found in `opt` or','line_number':1440,'multiline':False]['text':'/                  a space, opt, a space and then fname if `%s` is not found','line_number':1441,'multiline':False]['text':'/                  there.','line_number':1442,'multiline':False]['text':'/ @param[in]  fname  File name to append.','line_number':1443,'multiline':False]['text':' find "%s"','line_number':1448,'multiline':False]['text':' found %s','line_number':1451,'multiline':False]['text':' skip %%','line_number':1453,'multiline':False]['text':' not really needed? Not with sh, ksh or bash','line_number':1458,'multiline':False]['text':' Highlight line nrs.','line_number':1472,'multiline':False]['text':'/ Print a text line.  Also in silent mode ("ex -s").','line_number':1477,'multiline':False]['text':' apply :filter /pat/','line_number':1482,'multiline':False]['text':' use os_msg(), not os_errmsg()','line_number':1489,'multiline':False]['text':' buffer changed, don't change name now','line_number':1502,'multiline':False]['text':' autocmds may abort script processing','line_number':1506,'multiline':False]['text':' The name of the current buffer will be changed.','line_number':1509,'multiline':False]['text':' A new (unlisted) buffer entry needs to be made to hold the old file','line_number':1510,'multiline':False]['text':' name, which will become the alternate file name.','line_number':1511,'multiline':False]['text':' But don't set the alternate file name if the buffer didn't have a','line_number':1512,'multiline':False]['text':' name.','line_number':1513,'multiline':False]['text':' Change directories when the 'acd' option is set.','line_number':1534,'multiline':False]['text':'/ ":file[!] [fname]".','line_number':1539,'multiline':False]['text':' ":0file" removes the file name.  Check for illegal uses ":3file",','line_number':1542,'multiline':False]['text':' "0file name", etc.','line_number':1543,'multiline':False]['text':' print file name if no argument or 'F' is not in 'shortmess'','line_number':1559,'multiline':False]['text':'/ ":update".','line_number':1565,'multiline':False]['text':'/ ":write" and ":saveas".','line_number':1573,'multiline':False]['text':' :saveas does not take a range, uses all lines.','line_number':1577,'multiline':False]['text':' input lines to shell command','line_number':1582,'multiline':False]['text':'/ Write current buffer to file "eap->arg".','line_number':1600,'multiline':False]['text':'/ If "eap->append" is true, append to the file.','line_number':1601,'multiline':False]['text':'/','line_number':1602,'multiline':False]['text':'/ If "*eap->arg == NUL" write to current file.','line_number':1603,'multiline':False]['text':'/','line_number':1604,'multiline':False]['text':'/ @return  FAIL for failure, OK otherwise.','line_number':1605,'multiline':False]['text':' init to shut up gcc','line_number':1609,'multiline':False]['text':' check 'write' option','line_number':1614,'multiline':False]['text':' When out-of-memory, keep unexpanded file name, because we MUST be','line_number':1628,'multiline':False]['text':' able to write the file in this situation.','line_number':1629,'multiline':False]['text':' If we have a new file, put its name in the list of alternate file names.','line_number':1636,'multiline':False]['text':' Overwriting a file that is loaded in another buffer is not a','line_number':1645,'multiline':False]['text':' good idea.','line_number':1646,'multiline':False]['text':' Writing to the current file is not allowed in readonly mode','line_number':1652,'multiline':False]['text':' and a file name is required.','line_number':1653,'multiline':False]['text':' "nofile" and "nowrite" buffers cannot be written implicitly either.','line_number':1654,'multiline':False]['text':' Not writing the whole file is only allowed with '!'.','line_number':1667,'multiline':False]['text':' buffer changed, don't change name now','line_number':1693,'multiline':False]['text':' Exchange the file names for the current and the alternate','line_number':1697,'multiline':False]['text':' buffer.  This makes it look like we are now editing the buffer','line_number':1698,'multiline':False]['text':' under the new name.  Must be done before buf_write(), because','line_number':1699,'multiline':False]['text':' if there is no file name and 'cpo' contains 'F', it will set','line_number':1700,'multiline':False]['text':' the file name.','line_number':1701,'multiline':False]['text':' buffer changed, don't write the file','line_number':1719,'multiline':False]['text':' If 'filetype' was empty try detecting it now.','line_number':1724,'multiline':False]['text':' Autocommands may have changed buffer names, esp. when','line_number':1732,'multiline':False]['text':' 'autochdir' is set.','line_number':1733,'multiline':False]['text':' After ":saveas fname" reset 'readonly'.','line_number':1748,'multiline':False]['text':' Change directories when the 'acd' option is set and the file name','line_number':1756,'multiline':False]['text':' got changed or set.','line_number':1757,'multiline':False]['text':'/ Check if it is allowed to overwrite a file.  If b_flags has BF_NOTEDITED,','line_number':1768,'multiline':False]['text':'/ BF_NEW or BF_READERR, check for overwriting current file.','line_number':1769,'multiline':False]['text':'/ May set eap->forceit if a dialog says it's OK to overwrite.','line_number':1770,'multiline':False]['text':'/','line_number':1771,'multiline':False]['text':'/ @param fname   file name to be used (can differ from buf->ffname)','line_number':1772,'multiline':False]['text':'/ @param ffname  full path version of fname','line_number':1773,'multiline':False]['text':'/ @param other   writing under other name','line_number':1774,'multiline':False]['text':'/','line_number':1775,'multiline':False]['text':'/ @return  OK if it's OK, FAIL if it is not.','line_number':1776,'multiline':False]['text':' Write to another file or b_flags set or not writing the whole file:','line_number':1779,'multiline':False]['text':' overwriting only allowed with '!'','line_number':1780,'multiline':False]['text':' If "other" is false and bt_nofilename(buf) is true, this must be','line_number':1781,'multiline':False]['text':' writing an "acwrite" buffer to the same file as its b_ffname, and','line_number':1782,'multiline':False]['text':' buf_write() will only allow writing with BufWriteCmd autocommands,','line_number':1783,'multiline':False]['text':' so there is no need for an overwrite check.','line_number':1784,'multiline':False]['text':' It is possible to open a directory on Unix.','line_number':1795,'multiline':False]['text':' For ":w! filename" check that no swap file exists for "filename".','line_number':1815,'multiline':False]['text':' We only try the first entry in 'directory', without checking if','line_number':1821,'multiline':False]['text':' it's writable.  If the "." directory is not writable the write','line_number':1822,'multiline':False]['text':' will probably fail anyway.','line_number':1823,'multiline':False]['text':' Use 'shortname' of the current buffer, since there is no buffer','line_number':1824,'multiline':False]['text':' for the written file.','line_number':1825,'multiline':False]['text':'/ Handle ":wnext", ":wNext" and ":wprevious" commands.','line_number':1862,'multiline':False]['text':'/ ":wall", ":wqall" and ":xall": Write all changed files (and exit).','line_number':1879,'multiline':False]['text':' Check if there is a reason the buffer cannot be written:','line_number':1901,'multiline':False]['text':' 1. if the 'write' option is set','line_number':1902,'multiline':False]['text':' 2. if there is no file name (even after browsing)','line_number':1903,'multiline':False]['text':' 3. if the 'readonly' is set (even after a dialog)','line_number':1904,'multiline':False]['text':' 4. if overwriting is allowed (even after a dialog)','line_number':1905,'multiline':False]['text':' An autocommand may have deleted the buffer.','line_number':1922,'multiline':False]['text':' check_overwrite() may set it','line_number':1927,'multiline':False]['text':' exit Vim','line_number':1931,'multiline':False]['text':'/ Check the 'write' option.','line_number':1937,'multiline':False]['text':'/','line_number':1938,'multiline':False]['text':'/ @return  true and give a message when it's not st.','line_number':1939,'multiline':False]['text':'/ Check if a buffer is read-only (either 'readonly' option is set or file is','line_number':1949,'multiline':False]['text':'/ read-only). Ask for overruling in a dialog. Return true and give an error','line_number':1950,'multiline':False]['text':'/ message when the buffer is readonly.','line_number':1951,'multiline':False]['text':' Handle a file being readonly when the 'readonly' option is set or when','line_number':1954,'multiline':False]['text':' the file exists and permissions are read-only.','line_number':1955,'multiline':False]['text':' Set forceit, to force the writing of a readonly file','line_number':1974,'multiline':False]['text':'/ Try to abandon the current file and edit a new or existing file.','line_number':1991,'multiline':False]['text':'/','line_number':1992,'multiline':False]['text':'/ @param fnum  the number of the file, if zero use "ffname_arg"/"sfname_arg".','line_number':1993,'multiline':False]['text':'/ @param lnum  the line number for the cursor in the new file (if non-zero).','line_number':1994,'multiline':False]['text':'/','line_number':1995,'multiline':False]['text':'/ @return:','line_number':1996,'multiline':False]['text':'/           GETFILE_ERROR for "normal" error,','line_number':1997,'multiline':False]['text':'/           GETFILE_NOT_WRITTEN for "not written" error,','line_number':1998,'multiline':False]['text':'/           GETFILE_SAME_FILE for success','line_number':1999,'multiline':False]['text':'/           GETFILE_OPEN_OTHER for successfully opening another file.','line_number':2000,'multiline':False]['text':' make ffname full path, set sfname','line_number':2017,'multiline':False]['text':' has been allocated, free() later','line_number':2020,'multiline':False]['text':' don't wait for autowrite message','line_number':2026,'multiline':False]['text':' File has been changed.','line_number':2036,'multiline':False]['text':' it's in the same file','line_number':2052,'multiline':False]['text':' opened another file','line_number':2056,'multiline':False]['text':' error encountered','line_number':2058,'multiline':False]['text':'/ start editing a new file','line_number':2066,'multiline':False]['text':'/','line_number':2067,'multiline':False]['text':'/ @param fnum     file number; if zero use ffname/sfname','line_number':2068,'multiline':False]['text':'/ @param ffname   the file name','line_number':2069,'multiline':False]['text':'/                 - full path if sfname used,','line_number':2070,'multiline':False]['text':'/                 - any file name if sfname is NULL','line_number':2071,'multiline':False]['text':'/                 - empty string to re-edit with the same file name (but may','line_number':2072,'multiline':False]['text':'/                   be in a different directory)','line_number':2073,'multiline':False]['text':'/                 - NULL to start an empty buffer','line_number':2074,'multiline':False]['text':'/ @param sfname   the short file name (or NULL)','line_number':2075,'multiline':False]['text':'/ @param eap      contains the command to be executed after loading the file','line_number':2076,'multiline':False]['text':'/                 and forced 'ff' and 'fenc'. Can be NULL!','line_number':2077,'multiline':False]['text':'/ @param newlnum  if > 0: put cursor on this line number (if possible)','line_number':2078,'multiline':False]['text':'/                 ECMD_LASTL: use last position in loaded file','line_number':2079,'multiline':False]['text':'/                 ECMD_LAST: use last position in all files','line_number':2080,'multiline':False]['text':'/                 ECMD_ONE: use first line','line_number':2081,'multiline':False]['text':'/ @param flags    ECMD_HIDE: if true don't free the current buffer','line_number':2082,'multiline':False]['text':'/                 ECMD_SET_HELP: set b_help flag of (new) buffer before','line_number':2083,'multiline':False]['text':'/                 opening file','line_number':2084,'multiline':False]['text':'/                 ECMD_OLDBUF: use existing buffer if it exists','line_number':2085,'multiline':False]['text':'/                 ECMD_FORCEIT: ! used for Ex command','line_number':2086,'multiline':False]['text':'/                 ECMD_ADDBUF: don't edit, just add to buffer list','line_number':2087,'multiline':False]['text':'/                 ECMD_ALTBUF: like ECMD_ADDBUF and also set the alternate','line_number':2088,'multiline':False]['text':'/                 file','line_number':2089,'multiline':False]['text':'/                 ECMD_NOWINENTER: Do not trigger BufWinEnter','line_number':2090,'multiline':False]['text':'/ @param oldwin   Should be "curwin" when editing a new buffer in the current','line_number':2091,'multiline':False]['text':'/                 window, NULL when splitting the window first.  When not NULL','line_number':2092,'multiline':False]['text':'/                 info of the previous buffer for "oldwin" is stored.','line_number':2093,'multiline':False]['text':'/','line_number':2094,'multiline':False]['text':'/ @return FAIL for failure, OK otherwise','line_number':2095,'multiline':False]['text':' true if editing another file','line_number':2099,'multiline':False]['text':' true if using existing buffer','line_number':2100,'multiline':False]['text':' true if autocommands brought us','line_number':2101,'multiline':False]['text':' into the buffer unexpectedly','line_number':2102,'multiline':False]['text':' file is already being edited','line_number':2126,'multiline':False]['text':' nothing to do','line_number':2127,'multiline':False]['text':' if no short name given, use ffname for short name','line_number':2131,'multiline':False]['text':' set correct case for sfname','line_number':2137,'multiline':False]['text':' there is no file name','line_number':2148,'multiline':False]['text':' re-edit with same file name','line_number':2151,'multiline':False]['text':' may expand to full path name','line_number':2155,'multiline':False]['text':' Re-editing a terminal buffer: skip most buffer re-initialization.','line_number':2163,'multiline':False]['text':' Needed when called from do_argfile().','line_number':2165,'multiline':False]['text':' Title may show the arg index, e.g. "(2 of 5)".','line_number':2166,'multiline':False]['text':' If the file was changed we may not be allowed to abandon it:','line_number':2171,'multiline':False]['text':' - if we are going to re-edit the same file','line_number':2172,'multiline':False]['text':' - or if we are the only window on this file and if ECMD_HIDE is false','line_number':2173,'multiline':False]['text':' End Visual mode before switching to another buffer, so the text can be','line_number':2187,'multiline':False]['text':' copied into the GUI selection buffer.','line_number':2188,'multiline':False]['text':' Careful: may trigger ModeChanged() autocommand','line_number':2189,'multiline':False]['text':' Should we block autocommands here?','line_number':2191,'multiline':False]['text':' autocommands freed window :(','line_number':2194,'multiline':False]['text':' Set v:swapcommand for the SwapExists autocommands.','line_number':2201,'multiline':False]['text':' If we are starting to edit another file, open a (new) buffer.','line_number':2214,'multiline':False]['text':' Otherwise we re-use the current buffer.','line_number':2215,'multiline':False]['text':' Default the line number to zero to avoid that a wininfo item','line_number':2232,'multiline':False]['text':' is added for the current window.','line_number':2233,'multiline':False]['text':' Add BLN_NOCURWIN to avoid a new wininfo items are associated','line_number':2242,'multiline':False]['text':' with the current window.','line_number':2243,'multiline':False]['text':' Autocmds may change curwin and curbuf.','line_number':2253,'multiline':False]['text':' reusing the buffer, keep the old alternate file','line_number':2263,'multiline':False]['text':' No memfile yet.','line_number':2267,'multiline':False]['text':' Existing memfile.','line_number':2270,'multiline':False]['text':' Check if autocommands made buffer invalid or changed the current','line_number':2274,'multiline':False]['text':' buffer.','line_number':2275,'multiline':False]['text':' Autocmds may abort script processing.','line_number':2280,'multiline':False]['text':' May jump to last used line number for a loaded buffer or when asked','line_number':2285,'multiline':False]['text':' for explicitly','line_number':2286,'multiline':False]['text':' Make the (new) buffer the one used by the current window.','line_number':2293,'multiline':False]['text':' If the old buffer becomes unused, free it if ECMD_HIDE is false.','line_number':2294,'multiline':False]['text':' If the current buffer was empty and has no file name, curbuf','line_number':2295,'multiline':False]['text':' is returned by buflist_new(), nothing to do here.','line_number':2296,'multiline':False]['text':' BufLeave applies to the old buffer.','line_number':2300,'multiline':False]['text':' Be careful: The autocommands may delete any buffer and change','line_number':2303,'multiline':False]['text':' the current buffer.','line_number':2304,'multiline':False]['text':' - If the buffer we are going to edit is deleted, give up.','line_number':2305,'multiline':False]['text':' - If the current buffer is deleted, prefer to load the new','line_number':2306,'multiline':False]['text':'   buffer when loading a buffer is required.  This avoids','line_number':2307,'multiline':False]['text':'   loading another buffer which then must be closed again.','line_number':2308,'multiline':False]['text':' - If we ended up in the new buffer already, need to skip a few','line_number':2309,'multiline':False]['text':'         things, set auto_buf.','line_number':2310,'multiline':False]['text':' New buffer has been deleted.','line_number':2319,'multiline':False]['text':' Frees new_name.','line_number':2320,'multiline':False]['text':' autocmds may abort script processing','line_number':2324,'multiline':False]['text':' already in new buffer','line_number':2329,'multiline':False]['text':' Set w_closing to avoid that autocommands close the window.','line_number':2335,'multiline':False]['text':' Set b_locked for the same reason.','line_number':2336,'multiline':False]['text':' Close the link to the current buffer. This will set','line_number':2344,'multiline':False]['text':' oldwin->w_buffer to NULL.','line_number':2345,'multiline':False]['text':' Autocommands may have closed the window.','line_number':2351,'multiline':False]['text':' autocmds may abort script processing','line_number':2357,'multiline':False]['text':' Be careful again, like above.','line_number':2363,'multiline':False]['text':' New buffer has been deleted.','line_number':2365,'multiline':False]['text':' Frees new_name.','line_number':2366,'multiline':False]['text':' already in new buffer','line_number':2370,'multiline':False]['text':' close_buffer() has decremented the window count,','line_number':2371,'multiline':False]['text':' increment it again here and restore w_buffer.','line_number':2372,'multiline':False]['text':' <VN> We could instead free the synblock','line_number':2381,'multiline':False]['text':' and re-attach to buffer, perhaps.','line_number':2382,'multiline':False]['text':' Set 'fileformat', 'binary' and 'fenc' when forced.','line_number':2392,'multiline':False]['text':' May get the window options from the last time this buffer','line_number':2399,'multiline':False]['text':' was in this window (or another window).  If not used','line_number':2400,'multiline':False]['text':' before, reset the local window options to the global','line_number':2401,'multiline':False]['text':' values.  Also restores old folding stuff.','line_number':2402,'multiline':False]['text':' !other_file','line_number':2412,'multiline':False]['text':' Don't redraw until the cursor is in the right line, otherwise','line_number':2419,'multiline':False]['text':' autocommands may cause ml_get errors.','line_number':2420,'multiline':False]['text':' Don't make a buffer listed if it's a help buffer.  Useful when using','line_number':2428,'multiline':False]['text':' CTRL-O to go back to a help file.','line_number':2429,'multiline':False]['text':' If autocommands change buffers under our fingers, forget about','line_number':2433,'multiline':False]['text':' editing the file.','line_number':2434,'multiline':False]['text':' autocmds may abort script processing','line_number':2438,'multiline':False]['text':' Since we are starting to edit a file, consider the filetype to be','line_number':2442,'multiline':False]['text':' unset.  Helps for when an autocommand changes files and expects syntax','line_number':2443,'multiline':False]['text':' highlighting to work in the other file.','line_number':2444,'multiline':False]['text':' other_file oldbuf','line_number':2447,'multiline':False]['text':'  false     false       re-edit same file, buffer is re-used','line_number':2448,'multiline':False]['text':'  false     true        re-edit same file, nothing changes','line_number':2449,'multiline':False]['text':'  true      false       start editing new file, new buffer','line_number':2450,'multiline':False]['text':'  true      true        start editing in existing buffer (nothing to do)','line_number':2451,'multiline':False]['text':' re-use the buffer','line_number':2452,'multiline':False]['text':' may set b_last_cursor','line_number':2453,'multiline':False]['text':' If the buffer was used before, store the current contents so that','line_number':2466,'multiline':False]['text':' the reload can be undone.  Do not do this if the (empty) buffer is','line_number':2467,'multiline':False]['text':' being re-used for another file.','line_number':2468,'multiline':False]['text':' Sync first so that this is a separate undo-able action.','line_number':2471,'multiline':False]['text':' Tell readfile() not to clear or reload undo info.','line_number':2482,'multiline':False]['text':' Free all things for buffer.','line_number':2486,'multiline':False]['text':' If autocommands deleted the buffer we were going to re-edit, give','line_number':2488,'multiline':False]['text':' up and jump to the end.','line_number':2489,'multiline':False]['text':' Frees new_name.','line_number':2491,'multiline':False]['text':' If autocommands change buffers under our fingers, forget about','line_number':2496,'multiline':False]['text':' re-editing the file.  Should do the buf_clear_file(), but perhaps','line_number':2497,'multiline':False]['text':' the autocommands changed the buffer...','line_number':2498,'multiline':False]['text':' autocmds may abort script processing','line_number':2502,'multiline':False]['text':' clear '[ and '] marks','line_number':2506,'multiline':False]['text':' If we get here we are sure to start editing','line_number':2510,'multiline':False]['text':' Assume success now','line_number':2512,'multiline':False]['text':' If the file name was changed, reset the not-edit flag so that ":write"','line_number':2515,'multiline':False]['text':' works.','line_number':2516,'multiline':False]['text':' Check if we are editing the w_arg_idx file in the argument list.','line_number':2521,'multiline':False]['text':' Set cursor and init window before reading the file and executing','line_number':2525,'multiline':False]['text':' autocommands.  This allows for the autocommands to position the','line_number':2526,'multiline':False]['text':' cursor.','line_number':2527,'multiline':False]['text':' It's possible that all lines in the buffer changed.  Need to update','line_number':2530,'multiline':False]['text':' automatic folding for all windows where it's used.','line_number':2531,'multiline':False]['text':' Change directories when the 'acd' option is set.','line_number':2538,'multiline':False]['text':' Careful: open_buffer() and apply_autocmds() may change the current','line_number':2541,'multiline':False]['text':' buffer and window.','line_number':2542,'multiline':False]['text':' need to read the file','line_number':2545,'multiline':False]['text':' set/reset 'ro' flag','line_number':2547,'multiline':False]['text':' Open the buffer and read the file.','line_number':2549,'multiline':False]['text':' Read the modelines, but only to set window-local options.  Any','line_number':2562,'multiline':False]['text':' buffer-local options have already been set and may have been','line_number':2563,'multiline':False]['text':' changed by the user.','line_number':2564,'multiline':False]['text':' If autocommands change the cursor position or topline, we should','line_number':2576,'multiline':False]['text':' keep it.  Also when it moves within a line. But not when it moves','line_number':2577,'multiline':False]['text':' to the first non-blank.','line_number':2578,'multiline':False]['text':' Even when cursor didn't move we need to recompute topline.','line_number':2592,'multiline':False]['text':' Tell the diff stuff that this buffer is new and/or needs updating.','line_number':2598,'multiline':False]['text':' Also needed when re-editing the same buffer, because unloading will','line_number':2599,'multiline':False]['text':' have removed it as a diff buffer.','line_number':2600,'multiline':False]['text':' If the window options were changed may need to set the spell language.','line_number':2606,'multiline':False]['text':' Can only do this after the buffer has been properly setup.','line_number':2607,'multiline':False]['text':' position set by autocommands','line_number':2613,'multiline':False]['text':' line number from caller or old position','line_number':2617,'multiline':False]['text':' 'sol' is off: Use last known column.','line_number':2621,'multiline':False]['text':' no line number, go to last line in Ex mode','line_number':2629,'multiline':False]['text':' Check if cursors in other windows on the same buffer are still valid','line_number':2637,'multiline':False]['text':' Did not read the file, need to show some info about the file.','line_number':2640,'multiline':False]['text':' Do this after setting the cursor.','line_number':2641,'multiline':False]['text':' Obey the 'O' flag in 'cpoptions': overwrite any previous file','line_number':2646,'multiline':False]['text':' message.','line_number':2647,'multiline':False]['text':' wait a bit when overwriting an error msg','line_number':2651,'multiline':False]['text':' force cursor to be vertically centered in the window','line_number':2680,'multiline':False]['text':' redraw this buffer later','line_number':2685,'multiline':False]['text':' Change directories when the 'acd' option is set.','line_number':2688,'multiline':False]['text':' autoindent for first line','line_number':2715,'multiline':False]['text':'/ ":insert" and ":append", also used by ":change"','line_number':2717,'multiline':False]['text':' the ! flag toggles autoindent','line_number':2727,'multiline':False]['text':' First autoindent comes from the line we start on','line_number':2732,'multiline':False]['text':' when the buffer is empty need to delete the dummy line','line_number':2741,'multiline':False]['text':' behave like in Insert mode','line_number':2746,'multiline':False]['text':' No getline() function, use the lines that follow. This ends','line_number':2763,'multiline':False]['text':' when there is no more.','line_number':2764,'multiline':False]['text':' Set State to avoid the cursor shape to be set to MODE_INSERT','line_number':2779,'multiline':False]['text':' state when getline() returns.','line_number':2780,'multiline':False]['text':' Look for the "." after automatic indent.','line_number':2790,'multiline':False]['text':' don't use autoindent if nothing was typed.','line_number':2808,'multiline':False]['text':' there are no marks below the inserted lines','line_number':2816,'multiline':False]['text':' "start" is set to eap->line2+1 unless that position is invalid (when','line_number':2836,'multiline':False]['text':' eap->line2 pointed to the end of the buffer and nothing was appended)','line_number':2837,'multiline':False]['text':' "end" is set to lnum when something has been appended, otherwise','line_number':2838,'multiline':False]['text':' it is the same as "start"  -- Acevedo','line_number':2839,'multiline':False]['text':' don't use wait_return() now','line_number':2853,'multiline':False]['text':'/ ":change"','line_number':2857,'multiline':False]['text':' the ! flag toggles autoindent','line_number':2867,'multiline':False]['text':' nothing to delete','line_number':2873,'multiline':False]['text':' make sure the cursor is not beyond the end of the file now','line_number':2879,'multiline':False]['text':' ":append" on the line above the deleted lines.','line_number':2883,'multiline':False]['text':' Vi compatible: ":z!" uses display height, without a count uses','line_number':2895,'multiline':False]['text':' 'scroll'','line_number':2896,'multiline':False]['text':' bigness could be < 0 if atol(x) overflows.','line_number':2925,'multiline':False]['text':' the number of '-' and '+' multiplies the distance','line_number':2936,'multiline':False]['text':' '+'','line_number':2967,'multiline':False]['text':'/ @return  true if the secure flag is set and also give an error message.','line_number':3020,'multiline':False]['text':'/          Otherwise, return false.','line_number':3021,'multiline':False]['text':' In the sandbox more things are not allowed, including the things','line_number':3030,'multiline':False]['text':' disallowed in secure mode.','line_number':3031,'multiline':False]['text':'/ Previous substitute replacement string','line_number':3039,'multiline':False]['text':' call beginline() after ":g"','line_number':3042,'multiline':False]['text':'/ Get old substitute replacement string','line_number':3044,'multiline':False]['text':'/','line_number':3045,'multiline':False]['text':'/ @param[out]  ret_sub    Location where old string will be saved.','line_number':3046,'multiline':False]['text':'/ Set substitute string and timestamp','line_number':3053,'multiline':False]['text':'/','line_number':3054,'multiline':False]['text':'/ @warning `sub` must be in allocated memory. It is not copied.','line_number':3055,'multiline':False]['text':'/','line_number':3056,'multiline':False]['text':'/ @param[in]  sub  New replacement string.','line_number':3057,'multiline':False]['text':'/ Recognize ":%s/\n//" and turn it into a join command, which is much','line_number':3067,'multiline':False]['text':'/ more efficient.','line_number':3068,'multiline':False]['text':'/','line_number':3069,'multiline':False]['text':'/ @param[in]  eap  Ex arguments','line_number':3070,'multiline':False]['text':'/ @param[in]  pat  Search pattern','line_number':3071,'multiline':False]['text':'/ @param[in]  sub  Replacement string','line_number':3072,'multiline':False]['text':'/ @param[in]  cmd  Command from :s_flags','line_number':3073,'multiline':False]['text':'/ @param[in]  save Save pattern to options, history','line_number':3074,'multiline':False]['text':'/','line_number':3075,'multiline':False]['text':'/ @returns true if :substitute can be replaced with a join command','line_number':3076,'multiline':False]['text':' TODO(vim): find a generic solution to make line-joining operations more','line_number':3080,'multiline':False]['text':' efficient, avoid allocating a string that grows in size.','line_number':3081,'multiline':False]['text':' The number of lines joined is the number of lines in the range','line_number':3102,'multiline':False]['text':' plus one extra line if not at the end of file.','line_number':3104,'multiline':False]['text':' put pattern in history','line_number':3118,'multiline':False]['text':'/ Allocate memory to store the replacement text for :substitute.','line_number':3128,'multiline':False]['text':'/','line_number':3129,'multiline':False]['text':'/ Slightly more memory that is strictly necessary is allocated to reduce the','line_number':3130,'multiline':False]['text':'/ frequency of memory (re)allocation.','line_number':3131,'multiline':False]['text':'/','line_number':3132,'multiline':False]['text':'/ @param[in,out]  new_start      pointer to the memory for the replacement text','line_number':3133,'multiline':False]['text':'/ @param[in,out]  new_start_len  pointer to length of new_start','line_number':3134,'multiline':False]['text':'/ @param[in]      needed_len     amount of memory needed','line_number':3135,'multiline':False]['text':'/','line_number':3136,'multiline':False]['text':'/ @returns pointer to the end of the allocated memory','line_number':3137,'multiline':False]['text':' Get some space for a temporary buffer to do the','line_number':3143,'multiline':False]['text':' substitution into (and some extra space to avoid','line_number':3144,'multiline':False]['text':' too many calls to xmalloc()/free()).','line_number':3145,'multiline':False]['text':' Check if the temporary buffer is long enough to do the','line_number':3151,'multiline':False]['text':' substitution into.  If not, make it larger (with a bit','line_number':3152,'multiline':False]['text':' extra to avoid too many calls to xmalloc()/free()).','line_number':3153,'multiline':False]['text':'/ Parse cmd string for :substitute's {flags} and update subflags accordingly','line_number':3169,'multiline':False]['text':'/','line_number':3170,'multiline':False]['text':'/ @param[in]      cmd  command string','line_number':3171,'multiline':False]['text':'/ @param[in,out]  subflags  current flags defined for the :substitute command','line_number':3172,'multiline':False]['text':'/ @param[in,out]  which_pat  pattern type from which to get default search','line_number':3173,'multiline':False]['text':'/','line_number':3174,'multiline':False]['text':'/ @returns pointer to the end of the flags, which may be the end of the string','line_number':3175,'multiline':False]['text':' Find trailing options.  When '&' is used, keep old options.','line_number':3179,'multiline':False]['text':' Note that 'g' and 'c' are always inverted.','line_number':3193,'multiline':False]['text':' 'r' is never inverted.','line_number':3194,'multiline':False]['text':' use last used regexp','line_number':3203,'multiline':False]['text':' ignore case','line_number':3213,'multiline':False]['text':' don't ignore case','line_number':3215,'multiline':False]['text':'/ Skip over the "sub" part in :s/pat/sub/ where "delimiter" is the separating','line_number':3229,'multiline':False]['text':'/ character.','line_number':3230,'multiline':False]['text':' end delimiter found','line_number':3236,'multiline':False]['text':' replace it with a NUL','line_number':3237,'multiline':False]['text':' skip escaped characters','line_number':3240,'multiline':False]['text':'/ Perform a substitution from line eap->line1 to line eap->line2 using the','line_number':3258,'multiline':False]['text':'/ command pointed to by eap->arg which should be of the form:','line_number':3259,'multiline':False]['text':'/','line_number':3260,'multiline':False]['text':'/ /pattern/substitution/{flags}','line_number':3261,'multiline':False]['text':'/','line_number':3262,'multiline':False]['text':'/ The usual escapes are supported as described in the regexp docs.','line_number':3263,'multiline':False]['text':'/','line_number':3264,'multiline':False]['text':'/ @param cmdpreview_ns  The namespace to show 'inccommand' preview highlights.','line_number':3265,'multiline':False]['text':'/                       If <= 0, preview shouldn't be shown.','line_number':3266,'multiline':False]['text':'/ @return 0, 1 or 2. See show_cmdpreview() for more information on what the return value means.','line_number':3267,'multiline':False]['text':' For a multi-line match, make a copy of the last matched ','line_number':3273,'multiline':True]['text':' line and continue in that one. ','line_number':3274,'multiline':True]['text':' When going beyond the last line, stop substituting. ','line_number':3279,'multiline':True]['text':' Already hit end of the buffer, sub_firstlnum is one ','line_number':3287,'multiline':True]['text':' less than what it ought to be. ','line_number':3288,'multiline':True]['text':' init for GCC','line_number':3307,'multiline':False]['text':' first changed line','line_number':3315,'multiline':False]['text':' below last changed line AFTER the change','line_number':3316,'multiline':False]['text':' allocated copy of first sub line','line_number':3318,'multiline':False]['text':' cursor in last column when done','line_number':3319,'multiline':False]['text':' use last used regexp','line_number':3334,'multiline':False]['text':' use last substitute regexp','line_number':3336,'multiline':False]['text':' new pattern and substitution','line_number':3338,'multiline':False]['text':' don't accept alphanumeric for separator','line_number':3341,'multiline':False]['text':' undocumented vi feature:','line_number':3346,'multiline':False]['text':'  "\/sub/" and "\?sub?" use last used search pattern (almost like','line_number':3347,'multiline':False]['text':'  //sub/r).  "\&sub&" use last substitute pattern (like //sub/).','line_number':3348,'multiline':False]['text':' use last '/' pattern','line_number':3356,'multiline':False]['text':' empty search pattern','line_number':3358,'multiline':False]['text':' remember delimiter character','line_number':3359,'multiline':False]['text':' find the end of the regexp','line_number':3361,'multiline':False]['text':' use last used regexp','line_number':3362,'multiline':False]['text':' remember delimiter character','line_number':3363,'multiline':False]['text':' remember start of search pat','line_number':3364,'multiline':False]['text':' end delimiter found','line_number':3366,'multiline':False]['text':' replace it with a NUL','line_number':3367,'multiline':False]['text':' Small incompatibility: vi sees '\n' as end of the command, but in','line_number':3372,'multiline':False]['text':' Vim we want to use '\n' to find/substitute a NUL.','line_number':3373,'multiline':False]['text':' remember the start of the substitution','line_number':3374,'multiline':False]['text':' use previous pattern and substitution','line_number':3385,'multiline':False]['text':' there is no previous command','line_number':3386,'multiline':False]['text':' search_regcomp() will use previous pattern','line_number':3390,'multiline':False]['text':' Vi compatibility quirk: repeating with ":s" keeps the cursor in the','line_number':3393,'multiline':False]['text':' last column after using "$".','line_number':3394,'multiline':False]['text':' remember user specified 'g' flag','line_number':3405,'multiline':False]['text':' remember user specified 'c' flag','line_number':3406,'multiline':False]['text':' check for a trailing count','line_number':3408,'multiline':False]['text':' check for trailing command or garbage','line_number':3430,'multiline':False]['text':' if not end-of-line or comment','line_number':3432,'multiline':False]['text':' not executing commands, only parsing','line_number':3441,'multiline':False]['text':' Substitution is not allowed in non-'modifiable' buffer','line_number':3447,'multiline':False]['text':' the 'i' or 'I' flag overrules 'ignorecase' and 'smartcase'','line_number':3462,'multiline':False]['text':' If the substitute pattern starts with "\=" then it's an expression.','line_number':3473,'multiline':False]['text':' Make a copy, a recursive function may free it.','line_number':3474,'multiline':False]['text':' Otherwise, '~' in the substitute pattern is replaced with the old','line_number':3475,'multiline':False]['text':' pattern.  We do it here once to avoid it to be replaced over and over','line_number':3476,'multiline':False]['text':' again.','line_number':3477,'multiline':False]['text':' Check for a match on each line.','line_number':3490,'multiline':False]['text':' If preview: limit to max('cmdwinheight', viewport).','line_number':3491,'multiline':False]['text':' nr of lines matched below lnum','line_number':3510,'multiline':False]['text':' do it again after joining lines','line_number':3511,'multiline':False]['text':' nr of first sub line','line_number':3513,'multiline':False]['text':' The new text is build up step by step, to avoid too much','line_number':3515,'multiline':False]['text':' copying.  There are these pieces:','line_number':3516,'multiline':False]['text':' sub_firstline  The old text, unmodified.','line_number':3517,'multiline':False]['text':' copycol                Column in the old text where we started','line_number':3518,'multiline':False]['text':'                        looking for a match; from here old text still','line_number':3519,'multiline':False]['text':'                        needs to be copied to the new text.','line_number':3520,'multiline':False]['text':' matchcol               Column number of the old text where to look','line_number':3521,'multiline':False]['text':'                        for the next match.  It's just after the','line_number':3522,'multiline':False]['text':'                        previous match or one further.','line_number':3523,'multiline':False]['text':' prev_matchcol  Column just after the previous match (if any).','line_number':3524,'multiline':False]['text':'                        Mostly equal to matchcol, except for the first','line_number':3525,'multiline':False]['text':'                        match and after skipping an empty match.','line_number':3526,'multiline':False]['text':' regmatch.*pos  Where the pattern matched in the old text.','line_number':3527,'multiline':False]['text':' new_start      The new text, all that has been produced so','line_number':3528,'multiline':False]['text':'                        far.','line_number':3529,'multiline':False]['text':' new_end                The new text, where to append new text.','line_number':3530,'multiline':False]['text':'','line_number':3531,'multiline':False]['text':' lnum           The line number where we found the start of','line_number':3532,'multiline':False]['text':'                        the match.  Can be below the line we searched','line_number':3533,'multiline':False]['text':'                        when there is a \n before a \zs in the','line_number':3534,'multiline':False]['text':'                        pattern.','line_number':3535,'multiline':False]['text':' sub_firstlnum  The line number in the buffer where to look','line_number':3536,'multiline':False]['text':'                        for a match.  Can be different from "lnum"','line_number':3537,'multiline':False]['text':'                        when the pattern or substitute string contains','line_number':3538,'multiline':False]['text':'                        line breaks.','line_number':3539,'multiline':False]['text':'','line_number':3540,'multiline':False]['text':' Special situations:','line_number':3541,'multiline':False]['text':' - When the substitute string contains a line break, the part up','line_number':3542,'multiline':False]['text':'   to the line break is inserted in the text, but the copy of','line_number':3543,'multiline':False]['text':'   the original line is kept.  "sub_firstlnum" is adjusted for','line_number':3544,'multiline':False]['text':'   the inserted lines.','line_number':3545,'multiline':False]['text':' - When the matched pattern contains a line break, the old line','line_number':3546,'multiline':False]['text':'   is taken from the line at the end of the pattern.  The lines','line_number':3547,'multiline':False]['text':'   in the match are deleted later, "sub_firstlnum" is adjusted','line_number':3548,'multiline':False]['text':'   accordingly.','line_number':3549,'multiline':False]['text':'','line_number':3550,'multiline':False]['text':' The new text is built up in new_start[].  It has some extra','line_number':3551,'multiline':False]['text':' room to avoid using xmalloc()/free() too often.  new_start_len is','line_number':3552,'multiline':False]['text':' the length of the allocated memory at new_start.','line_number':3553,'multiline':False]['text':'','line_number':3554,'multiline':False]['text':' Make a copy of the old line, so it won't be taken away when','line_number':3555,'multiline':False]['text':' updating the screen or handling a multi-line match.  The "old_"','line_number':3556,'multiline':False]['text':' pointers point into this copy.','line_number':3557,'multiline':False]['text':' At first match, remember current cursor position.','line_number':3562,'multiline':False]['text':' Loop until nothing more to replace in this line.','line_number':3568,'multiline':False]['text':' 1. Handle match with empty string.','line_number':3569,'multiline':False]['text':' 2. If subflags.do_ask is set, ask for confirmation.','line_number':3570,'multiline':False]['text':' 3. substitute the string.','line_number':3571,'multiline':False]['text':' 4. if subflags.do_all is set, find next match','line_number':3572,'multiline':False]['text':' 5. break if there isn't another match in this line','line_number':3573,'multiline':False]['text':' lnum is where the match start, but maybe not the pattern match,','line_number':3580,'multiline':False]['text':' since we can have \n before \zs in the pattern','line_number':3581,'multiline':False]['text':' Advance "lnum" to the line where the match starts.  The','line_number':3583,'multiline':False]['text':' match does not start in the first line when there is a line','line_number':3584,'multiline':False]['text':' break before \zs.','line_number':3585,'multiline':False]['text':' Now we're at the line where the pattern match starts','line_number':3594,'multiline':False]['text':' Note: If not first match on a line, column can't be known here','line_number':3595,'multiline':False]['text':' Match might be after the last line for "\n\zs" matching at','line_number':3598,'multiline':False]['text':' the end of the last line.','line_number':3599,'multiline':False]['text':' Save the line number of the last change for the final','line_number':3607,'multiline':False]['text':' cursor position (just like Vi).','line_number':3608,'multiline':False]['text':' 1. Match empty string does not count, except for first','line_number':3612,'multiline':False]['text':' match.  This reproduces the strange vi behaviour.','line_number':3613,'multiline':False]['text':' This also catches endless loops.','line_number':3614,'multiline':False]['text':' We already were at the end of the line.  Don't look','line_number':3619,'multiline':False]['text':' for a match in this line again.','line_number':3620,'multiline':False]['text':' search for a match at next column','line_number':3623,'multiline':False]['text':' match will be pushed to preview_lines, bring it into a proper state','line_number':3626,'multiline':False]['text':' Normally we continue searching for a match just after the','line_number':3633,'multiline':False]['text':' previous match.','line_number':3634,'multiline':False]['text':' 2. If subflags.do_count is set only increase the counter.','line_number':3638,'multiline':False]['text':'    If do_ask is set, ask for confirmation.','line_number':3639,'multiline':False]['text':' For a multi-line match, put matchcol at the NUL at','line_number':3641,'multiline':False]['text':' the end of the line and set nmatch to one, so that','line_number':3642,'multiline':False]['text':' we continue looking for a match on the next line.','line_number':3643,'multiline':False]['text':' Avoids that ":s/\nB\@=//gc" get stuck.','line_number':3644,'multiline':False]['text':' Skip the substitution, unless an expression is used,','line_number':3652,'multiline':False]['text':' then it is evaluated in the sandbox.','line_number':3653,'multiline':False]['text':' change State to MODE_CONFIRM, so that the mouse works','line_number':3662,'multiline':False]['text':' properly','line_number':3663,'multiline':False]['text':' disable mouse in xterm','line_number':3666,'multiline':False]['text':' When 'cpoptions' contains "u" don't sync undo when','line_number':3673,'multiline':False]['text':' asking for confirmation.','line_number':3674,'multiline':False]['text':' Loop until 'y', 'n', 'q', CTRL-E or CTRL-Y typed.','line_number':3679,'multiline':False]['text':' getcmdline_prompt() returns NULL if there is no command line to return.','line_number':3711,'multiline':False]['text':' When ":normal" runs out of characters we get','line_number':3714,'multiline':False]['text':' an empty line.  Use "q" to get out of the','line_number':3715,'multiline':False]['text':' loop.','line_number':3716,'multiline':False]['text':' Invert the matched string.','line_number':3727,'multiline':False]['text':' Remove the inversion afterwards.','line_number':3728,'multiline':False]['text':' avoid calling update_screen() in vgetorpeek()','line_number':3732,'multiline':False]['text':' There already was a substitution, we would','line_number':3736,'multiline':False]['text':' like to show this to the user.  We cannot','line_number':3737,'multiline':False]['text':' really update the line, it would change','line_number':3738,'multiline':False]['text':' what matches.  Temporarily replace the line','line_number':3739,'multiline':False]['text':' and change it back afterwards.','line_number':3740,'multiline':False]['text':' Position the cursor relative to the end of the line, the','line_number':3744,'multiline':False]['text':' previous substitute may have inserted or deleted characters','line_number':3745,'multiline':False]['text':' before the cursor.','line_number':3746,'multiline':False]['text':' highlight at least one character for /^/','line_number':3757,'multiline':False]['text':' avoid a scroll-up','line_number':3772,'multiline':False]['text':' truncate msg when','line_number':3776,'multiline':False]['text':' needed','line_number':3777,'multiline':False]['text':' Same highlight as wait_return().','line_number':3780,'multiline':False]['text':' don't map this key','line_number':3789,'multiline':False]['text':' allow special keys','line_number':3790,'multiline':False]['text':' clear the question','line_number':3795,'multiline':False]['text':' don't scroll up','line_number':3796,'multiline':False]['text':' restore the line','line_number':3801,'multiline':False]['text':' no hit-return prompt','line_number':3807,'multiline':False]['text':' last: replace and then stop','line_number':3819,'multiline':False]['text':' For a multi-line match, put matchcol at the NUL at','line_number':3841,'multiline':False]['text':' the end of the line and set nmatch to one, so that','line_number':3842,'multiline':False]['text':' we continue looking for a match on the next line.','line_number':3843,'multiline':False]['text':' Avoids that ":%s/\nB\@=//gc" and ":%s/\n/,\r/gc"','line_number':3844,'multiline':False]['text':' get stuck when pressing 'n'.','line_number':3845,'multiline':False]['text':' Move the cursor to the start of the match, so that we can','line_number':3857,'multiline':False]['text':' use "\=col(".").','line_number':3858,'multiline':False]['text':' When the match included the "$" of the last line it may','line_number':3861,'multiline':False]['text':' go beyond the last line of the buffer.','line_number':3862,'multiline':False]['text':' safety check','line_number':3867,'multiline':False]['text':' Save the line numbers for the preview buffer','line_number':3873,'multiline':False]['text':' NOTE: If the pattern matches a final newline, the next line will','line_number':3874,'multiline':False]['text':' be shown also, but should not be highlighted. Intentional for now.','line_number':3875,'multiline':False]['text':' 3. Substitute the string. During 'inccommand' preview only do this if','line_number':3889,'multiline':False]['text':'    there is a replace pattern.','line_number':3890,'multiline':False]['text':' save the start lnum','line_number':3892,'multiline':False]['text':' prevent accidentally changing the buffer by a function','line_number':3896,'multiline':False]['text':' Save flags for recursion.  They can change for e.g.','line_number':3900,'multiline':False]['text':' :s/^/\=execute("s#^##gn")','line_number':3901,'multiline':False]['text':' Disallow changing text or switching window in an expression.','line_number':3904,'multiline':False]['text':' Get length of substitution part, including the NUL.','line_number':3906,'multiline':False]['text':' When it fails sublen is zero.','line_number':3907,'multiline':False]['text':' If getting the substitute string caused an error, don't do','line_number':3915,'multiline':False]['text':' the replacement.','line_number':3916,'multiline':False]['text':' Don't keep flags set by a recursive call','line_number':3917,'multiline':False]['text':' Need room for:','line_number':3925,'multiline':False]['text':' - result so far in new_start (not for first sub in line)','line_number':3926,'multiline':False]['text':' - original text up to match','line_number':3927,'multiline':False]['text':' - length of substituted part','line_number':3928,'multiline':False]['text':' - original text after match','line_number':3929,'multiline':False]['text':' copy the text up to the part that matched','line_number':3941,'multiline':False]['text':' Finally, at this point we can know where the match actually will','line_number':3949,'multiline':False]['text':' start in the new text','line_number':3950,'multiline':False]['text':' Move the cursor to the start of the line, to avoid that it','line_number':3964,'multiline':False]['text':' is beyond the end of the line after the substitution.','line_number':3965,'multiline':False]['text':' Remember next character to be copied.','line_number':3968,'multiline':False]['text':' TODO(bfredl): this has some robustness issues, look into later.','line_number':3973,'multiline':False]['text':' Now the trick is to replace CTRL-M chars with a real line','line_number':3981,'multiline':False]['text':' break.  This would make it impossible to insert a CTRL-M in','line_number':3982,'multiline':False]['text':' the text.  The line break can be avoided by preceding the','line_number':3983,'multiline':False]['text':' CTRL-M with a backslash.  To be able to insert a backslash,','line_number':3984,'multiline':False]['text':' they must be doubled in the string and are halved here.','line_number':3985,'multiline':False]['text':' That is Vi compatible.','line_number':3986,'multiline':False]['text':' remove backslash','line_number':3988,'multiline':False]['text':' correct the byte counts for extmark_splice()','line_number':3989,'multiline':False]['text':' prepare for undo','line_number':3992,'multiline':False]['text':' truncate up to the CR','line_number':3993,'multiline':False]['text':' All line numbers increase.','line_number':4006,'multiline':False]['text':' move the cursor to the new line, like Vi','line_number':4010,'multiline':False]['text':' copy the rest','line_number':4012,'multiline':False]['text':' Required for Undo to work for extmarks.','line_number':4028,'multiline':False]['text':' 4. If subflags.do_all is set, find next match.','line_number':4037,'multiline':False]['text':' Prevent endless loop with patterns that match empty','line_number':4038,'multiline':False]['text':' strings, e.g. :s/$/pat/g or :s/[a-z]* /(&)/g.','line_number':4039,'multiline':False]['text':' But ":s/\n/#/" is OK.','line_number':4040,'multiline':False]['text':' We already know that we did the last subst when we are at','line_number':4042,'multiline':False]['text':' the end of the line, except that a pattern like','line_number':4043,'multiline':False]['text':' "bar\|\nfoo" may match at the NUL.  "lnum" can be below','line_number':4044,'multiline':False]['text':' "line2" when there is a \zs in the pattern after a line','line_number':4045,'multiline':False]['text':' break.','line_number':4046,'multiline':False]['text':' Replace the line in the buffer when needed.  This is','line_number':4056,'multiline':False]['text':' skipped when there are more matches.','line_number':4057,'multiline':False]['text':' The check for nmatch_tl is needed for when multi-line','line_number':4058,'multiline':False]['text':' matching must replace the lines before trying to do another','line_number':4059,'multiline':False]['text':' match, otherwise "\@<=" won't work.','line_number':4060,'multiline':False]['text':' When the match starts below where we start searching also','line_number':4061,'multiline':False]['text':' need to replace the line first (using \zs after \n).','line_number':4062,'multiline':False]['text':' Copy the rest of the line, that didn't match.','line_number':4070,'multiline':False]['text':' "matchcol" has to be adjusted, we use the end of','line_number':4071,'multiline':False]['text':' the line as reference, because the substitute may','line_number':4072,'multiline':False]['text':' have changed the number of characters.  Same for','line_number':4073,'multiline':False]['text':' "prev_matchcol".','line_number':4074,'multiline':False]['text':' Matched lines have now been substituted and are','line_number':4086,'multiline':False]['text':' useless, delete them.  The part after the match','line_number':4087,'multiline':False]['text':' has been appended to new_start, we don't need','line_number':4088,'multiline':False]['text':' it in the buffer.','line_number':4089,'multiline':False]['text':' nr of lines decreases','line_number':4102,'multiline':False]['text':' When asking, undo is saved each time, must also set','line_number':4106,'multiline':False]['text':' changed flag each time.','line_number':4107,'multiline':False]['text':' free the temp buffer','line_number':4118,'multiline':False]['text':' 5. break if there isn't another match in this line','line_number':4131,'multiline':False]['text':' If the match found didn't start where we were','line_number':4133,'multiline':False]['text':' searching, do the next search in the line where we','line_number':4134,'multiline':False]['text':' found the match.','line_number':4135,'multiline':False]['text':' uncrustify:off','line_number':4140,'multiline':False]['text':' uncrustify:on','line_number':4161,'multiline':False]['text':' Push the match to preview_lines.','line_number':4163,'multiline':False]['text':' Push the match to preview_lines.','line_number':4169,'multiline':False]['text':' for when substitute was cancelled','line_number':4178,'multiline':False]['text':' free the copy of the original line','line_number':4179,'multiline':False]['text':' Need to subtract the number of added lines from "last_line" to get','line_number':4192,'multiline':False]['text':' the line number before the change (same as adding the number of','line_number':4193,'multiline':False]['text':' deleted lines).','line_number':4194,'multiline':False]['text':' may have to free allocated copy of the line','line_number':4203,'multiline':False]['text':' ":s/pat//n" doesn't move the cursor','line_number':4205,'multiline':False]['text':' Set the '[ and '] marks.','line_number':4212,'multiline':False]['text':' when interactive leave cursor on the match','line_number':4219,'multiline':False]['text':' interrupted','line_number':4238,'multiline':False]['text':' did find something but nothing substituted','line_number':4241,'multiline':False]['text':' nothing found','line_number':4246,'multiline':False]['text':' Cursor position may require updating','line_number':4252,'multiline':False]['text':' Restore the flag values, they can be used for ":&&".','line_number':4259,'multiline':False]['text':' Show 'inccommand' preview if there are matched lines.','line_number':4265,'multiline':False]['text':' Too slow, disable.','line_number':4267,'multiline':False]['text':'/ Give message for number of substitutions.','line_number':4283,'multiline':False]['text':'/ Can also be used after a ":global" command.','line_number':4284,'multiline':False]['text':'/','line_number':4285,'multiline':False]['text':'/ @param count_only  used 'n' flag for ":s"','line_number':4286,'multiline':False]['text':'/','line_number':4287,'multiline':False]['text':'/ @return            true if a message was given.','line_number':4288,'multiline':False]['text':' Only report substitutions when:','line_number':4291,'multiline':False]['text':' - more than 'report' substitutions','line_number':4292,'multiline':False]['text':' - command was typed by user, or number of changed lines > 'report'','line_number':4293,'multiline':False]['text':' - giving messages is not disabled by 'lazyredraw'','line_number':4294,'multiline':False]['text':' save message to display it after redraw','line_number':4318,'multiline':False]['text':'/ Execute a global command of the form:','line_number':4341,'multiline':False]['text':'/','line_number':4342,'multiline':False]['text':'/ g/pattern/X : execute X on all lines where pattern matches','line_number':4343,'multiline':False]['text':'/ v/pattern/X : execute X on all lines where pattern does not match','line_number':4344,'multiline':False]['text':'/','line_number':4345,'multiline':False]['text':'/ where 'X' is an EX command','line_number':4346,'multiline':False]['text':'/','line_number':4347,'multiline':False]['text':'/ The command character (as well as the trailing slash) is optional, and','line_number':4348,'multiline':False]['text':'/ is assumed to be 'p' if missing.','line_number':4349,'multiline':False]['text':'/','line_number':4350,'multiline':False]['text':'/ This is implemented in two passes: first we scan the file for the pattern and','line_number':4351,'multiline':False]['text':'/ set a mark for each line that (not) matches. Secondly we execute the command','line_number':4352,'multiline':False]['text':'/ for each line that has a mark. This is required because after deleting','line_number':4353,'multiline':False]['text':'/ lines we do not know where to search for the next match.','line_number':4354,'multiline':False]['text':' line number according to old situation','line_number':4357,'multiline':False]['text':' first char of cmd: 'v' or 'g'','line_number':4358,'multiline':False]['text':' command argument','line_number':4359,'multiline':False]['text':' delimiter, normally '/'','line_number':4361,'multiline':False]['text':' When nesting the command works on one line.  This allows for','line_number':4365,'multiline':False]['text':' ":g/found/v/notfound/command".','line_number':4366,'multiline':False]['text':' will increment global_busy to break out of the loop','line_number':4369,'multiline':False]['text':' ":global!" is like ":vglobal"','line_number':4374,'multiline':False]['text':' default: use last used regexp','line_number':4380,'multiline':False]['text':' undocumented vi feature:','line_number':4382,'multiline':False]['text':'    "\/" and "\?": use previous search pattern.','line_number':4383,'multiline':False]['text':'             "\&": use previous substitute pattern.','line_number':4384,'multiline':False]['text':' use previous substitute pattern','line_number':4392,'multiline':False]['text':' use previous search pattern','line_number':4394,'multiline':False]['text':' get the delimiter','line_number':4404,'multiline':False]['text':' skip delimiter if there is one','line_number':4405,'multiline':False]['text':' remember start of pattern','line_number':4406,'multiline':False]['text':' end delimiter found','line_number':4408,'multiline':False]['text':' replace it with a NUL','line_number':4409,'multiline':False]['text':' pass 1: set marks for each (not) matching line','line_number':4428,'multiline':False]['text':' a match on this line?','line_number':4430,'multiline':False]['text':' re-compiling regprog failed','line_number':4433,'multiline':False]['text':' pass 2: execute the command for each line that has been marked','line_number':4442,'multiline':False]['text':' clear rest of the marks','line_number':4454,'multiline':False]['text':'/ Execute `cmd` on lines marked with ml_setmarked().','line_number':4459,'multiline':False]['text':' b_ml.ml_line_count before the command','line_number':4462,'multiline':False]['text':' remember what buffer we started in','line_number':4463,'multiline':False]['text':' line number according to old situation','line_number':4464,'multiline':False]['text':' Set current position only once for a global command.','line_number':4466,'multiline':False]['text':' If global_busy is set, setpcmark() will not do anything.','line_number':4467,'multiline':False]['text':' If there is an error, global_busy will be incremented.','line_number':4468,'multiline':False]['text':' When the command writes a message, don't overwrite the command.','line_number':4471,'multiline':False]['text':' cursor may be beyond the end of the line','line_number':4489,'multiline':False]['text':' the cursor may not have moved in the text but a change in a previous','line_number':4492,'multiline':False]['text':' line may move it on the screen','line_number':4493,'multiline':False]['text':' If it looks like no message was written, allow overwriting the','line_number':4496,'multiline':False]['text':' command with the report for number of changes.','line_number':4497,'multiline':False]['text':' If substitutes done, report number of substitutes, otherwise report','line_number':4502,'multiline':False]['text':' number of extra or deleted lines.','line_number':4503,'multiline':False]['text':' Don't report extra or deleted lines in the edge case where the buffer','line_number':4504,'multiline':False]['text':' we are in after execution is different from the buffer we started in.','line_number':4505,'multiline':False]['text':'/ Set up for a tagpreview.','line_number':4519,'multiline':False]['text':'/','line_number':4520,'multiline':False]['text':'/ @param undo_sync  sync undo when leaving the window','line_number':4521,'multiline':False]['text':'/','line_number':4522,'multiline':False]['text':'/ @return           true when it was created.','line_number':4523,'multiline':False]['text':' If there is already a preview window open, use that one.','line_number':4530,'multiline':False]['text':' There is no preview window open yet.  Create one.','line_number':4538,'multiline':False]['text':' don't take over 'scrollbind' and 'cursorbind'','line_number':4545,'multiline':False]['text':' no 'diff'','line_number':4546,'multiline':False]['text':' no 'foldcolumn'','line_number':4548,'multiline':False]['text':'/ Shows the effects of the :substitute command being typed ('inccommand').','line_number':4552,'multiline':False]['text':'/ If inccommand=split, shows a preview window and later restores the layout.','line_number':4553,'multiline':False]['text':'/','line_number':4554,'multiline':False]['text':'/ @return 1 if preview window isn't needed, 2 if preview window is needed.','line_number':4555,'multiline':False]['text':' We keep a special-purpose buffer around, but don't assume it exists.','line_number':4563,'multiline':False]['text':' disable file info message','line_number':4566,'multiline':False]['text':' Update the topline to ensure that main window is on the correct line','line_number':4569,'multiline':False]['text':' Place cursor on nearest matching line, to undo do_sub() cursor placement.','line_number':4572,'multiline':False]['text':' Else: All matches are above, do_sub() already placed cursor.','line_number':4579,'multiline':False]['text':' Width of the "| lnum|..." column which displays the line numbers.','line_number':4582,'multiline':False]['text':' Use preview window only when inccommand=split and range is not just the current line','line_number':4584,'multiline':False]['text':' `last_match.end.lnum` may be 0 when using 'n' flag.','line_number':4593,'multiline':False]['text':' construct the line to show in here','line_number':4600,'multiline':False]['text':' last line added to preview buffer','line_number':4603,'multiline':False]['text':' last line added to original buffer','line_number':4604,'multiline':False]['text':' next line to show for the match','line_number':4605,'multiline':False]['text':' match starts here in preview','line_number':4611,'multiline':False]['text':' ... and ends here','line_number':4612,'multiline':False]['text':' You Might Gonna Need It','line_number':4614,'multiline':False]['text':' Don't add a line twice','line_number':4622,'multiline':False]['text':' might be redefined below','line_number':4625,'multiline':False]['text':' might be redefined below','line_number':4626,'multiline':False]['text':' Reallocate if line not long enough','line_number':4643,'multiline':False]['text':' Put "|lnum| line" into `str` and append it to the preview buffer.','line_number':4649,'multiline':False]['text':'/ :substitute command.','line_number':4674,'multiline':False]['text':'/ :substitute command preview callback.','line_number':4680,'multiline':False]['text':' Only preview once the pattern delimiter has been typed','line_number':4683,'multiline':False]['text':'/ Skip over the pattern argument of ":vimgrep /pat/[g][j]".','line_number':4694,'multiline':False]['text':'/ Put the start of the pattern in "*s", unless "s" is NULL.','line_number':4695,'multiline':False]['text':'/','line_number':4696,'multiline':False]['text':'/ @param flags  if not NULL, put the flags in it: VGR_GLOBAL, VGR_NOJUMP.','line_number':4697,'multiline':False]['text':'/ @param s      if not NULL, terminate the pattern with a NUL.','line_number':4698,'multiline':False]['text':'/','line_number':4699,'multiline':False]['text':'/ @return  a pointer to the char just past the pattern plus flags.','line_number':4700,'multiline':False]['text':' ":vimgrep pattern fname"','line_number':4704,'multiline':False]['text':' ":vimgrep /pattern/[g][j] fname"','line_number':4713,'multiline':False]['text':' Truncate the pattern.','line_number':4723,'multiline':False]['text':' Find the flags','line_number':4729,'multiline':False]['text':'/ List v:oldfiles in a nice way.','line_number':4746,'multiline':False]['text':' Assume "got_int" was set to truncate the listing.','line_number':4775,'multiline':False]['text':' File selection prompt on ":browse oldfiles"','line_number':4778,'multiline':False]