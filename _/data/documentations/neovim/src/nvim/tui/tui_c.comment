['text':' Terminal UI functions. Invoked (by ui_client.c) on the UI process.','line_number':1,'multiline':False]['text':'/< value of $TERM','line_number':77,'multiline':False]['text':' smglr','line_number':91,'multiline':False]['text':' TODO(bfredl): zero hl is empty, send this explicitly?','line_number':160,'multiline':False]['text':'/ Request the terminal's mode (DECRQM).','line_number':210,'multiline':False]['text':'/','line_number':211,'multiline':False]['text':'/ @see handle_modereport','line_number':212,'multiline':False]['text':' 5 bytes for \x1b[?$p, 1 byte for null terminator, 6 bytes for mode digits (more than enough)','line_number':216,'multiline':False]['text':'/ Handle a mode report (DECRPM) from the terminal.','line_number':223,'multiline':False]['text':' If the mode is not recognized, or if the terminal emulator does not allow it to be changed,','line_number':231,'multiline':False]['text':' then there is nothing to do','line_number':232,'multiline':False]['text':' The terminal supports changing the given mode','line_number':236,'multiline':False]['text':' Ref: https://gist.github.com/christianparpart/d8a62cc1ab659194337d73e399004036','line_number':239,'multiline':False]['text':'/ Query the terminal emulator to see if it supports Kitty's keyboard protocol.','line_number':246,'multiline':False]['text':'/','line_number':247,'multiline':False]['text':'/ Write CSI ? u followed by a primary device attributes request (CSI c). If','line_number':248,'multiline':False]['text':'/ a primary device attributes response is received without first receiving an','line_number':249,'multiline':False]['text':'/ answer to the progressive enhancement query (CSI u), then the terminal does','line_number':250,'multiline':False]['text':'/ not support the Kitty keyboard protocol.','line_number':251,'multiline':False]['text':'/','line_number':252,'multiline':False]['text':'/ See https://sw.kovidgoyal.net/kitty/keyboard-protocol/#detection-of-support-for-this-protocol','line_number':253,'multiline':False]['text':' Old os_getenv() pointer is invalid after os_setenv(), fetch it again.','line_number':303,'multiline':False]['text':' Set up unibilium/terminfo.','line_number':307,'multiline':False]['text':' None of the following work over SSH; see :help TERM .','line_number':320,'multiline':False]['text':' truecolor support must be checked before patching/augmenting terminfo','line_number':335,'multiline':False]['text':' Set 't_Co' from the result of unibilium & fix_terminfo.','line_number':359,'multiline':False]['text':' Enter alternate screen, save title, and clear.','line_number':361,'multiline':False]['text':' NOTE: Do this *before* changing terminal settings. #6433','line_number':362,'multiline':False]['text':' Enable bracketed paste','line_number':367,'multiline':False]['text':' Query support for mode 2026 (Synchronized Output). Some terminals also','line_number':370,'multiline':False]['text':' support an older DCS sequence for synchronized output, but we will only use','line_number':371,'multiline':False]['text':' mode 2026','line_number':372,'multiline':False]['text':' Query the terminal to see if it supports Kitty's keyboard protocol','line_number':375,'multiline':False]['text':' A signal may cause uv_tty_set_mode() to fail (e.g., SIGCONT). Retry a','line_number':387,'multiline':False]['text':' few times. #12322','line_number':388,'multiline':False]['text':' Destroy output stuff','line_number':412,'multiline':False]['text':' Reset cursor to normal before exiting alternate screen.','line_number':416,'multiline':False]['text':' Reset the key encoding','line_number':420,'multiline':False]['text':' May restore old title before exiting alternate screen.','line_number':423,'multiline':False]['text':' if nvim exited with nonzero status, without indicated this was an','line_number':428,'multiline':False]['text':' intentional exit (like `:1cquit`), it likely was an internal failure.','line_number':429,'multiline':False]['text':' Don't clobber the stderr error message in this case.','line_number':430,'multiline':False]['text':' Exit alternate screen.','line_number':432,'multiline':False]['text':' Disable bracketed paste','line_number':438,'multiline':False]['text':' Disable focus reporting','line_number':440,'multiline':False]['text':' Disable synchronized output','line_number':443,'multiline':False]['text':' Emit this after Nvim startup, not during.  This works around a tmux','line_number':475,'multiline':False]['text':' 2.3 bug(?) which caused slow drawing during startup.  #7649','line_number':476,'multiline':False]['text':'/ stop the terminal but allow it to restart later (like after suspend)','line_number':481,'multiline':False]['text':' Race between SIGCONT (tui.c) and SIGHUP (os/signal.c)? #8075','line_number':485,'multiline':False]['text':' Position the cursor on the last screen line, below all the text','line_number':492,'multiline':False]['text':' normalize stream (#2598)','line_number':505,'multiline':False]['text':'/ Returns true if UI `ui` is stopped.','line_number':512,'multiline':False]['text':' blink','line_number':610,'multiline':False]['text':' dim','line_number':611,'multiline':False]['text':' blank','line_number':613,'multiline':False]['text':' protect','line_number':614,'multiline':False]['text':' alternate character set','line_number':615,'multiline':False]['text':' red','line_number':666,'multiline':False]['text':' green','line_number':667,'multiline':False]['text':' blue','line_number':668,'multiline':False]['text':' red','line_number':678,'multiline':False]['text':' green','line_number':679,'multiline':False]['text':' blue','line_number':680,'multiline':False]['text':' red','line_number':696,'multiline':False]['text':' green','line_number':697,'multiline':False]['text':' blue','line_number':698,'multiline':False]['text':' Non-BCE terminals can't clear with non-default background color. Some BCE','line_number':714,'multiline':False]['text':' terminals don't support attributes either, so don't rely on it. But assume','line_number':715,'multiline':False]['text':' italic and bold has no effect if there is no text.','line_number':716,'multiline':False]['text':'/ It is undocumented, but in the majority of terminals and terminal emulators','line_number':732,'multiline':False]['text':'/ printing at the right margin does not cause an automatic wrap until the','line_number':733,'multiline':False]['text':'/ next character is printed, holding the cursor in place until then.','line_number':734,'multiline':False]['text':' Printing the next character finally advances the cursor.','line_number':739,'multiline':False]['text':' Printing at the right margin immediately advances the cursor.','line_number':746,'multiline':False]['text':' not ascii','line_number':764,'multiline':False]['text':'/ This optimizes several cases where it is cheaper to do something other','line_number':771,'multiline':False]['text':'/ than send a full cursor positioning control sequence.  However, there are','line_number':772,'multiline':False]['text':'/ some further optimizations that may seem obvious but that will not work.','line_number':773,'multiline':False]['text':'/','line_number':774,'multiline':False]['text':'/ We cannot use VT (ASCII 0/11) for moving the cursor up, because VT means','line_number':775,'multiline':False]['text':'/ move the cursor down on a DEC terminal.  Similarly, on a DEC terminal FF','line_number':776,'multiline':False]['text':'/ (ASCII 0/12) means the same thing and does not mean home.  VT, CVT, and','line_number':777,'multiline':False]['text':'/ TAB also stop at software-defined tabulation stops, not at a fixed set','line_number':778,'multiline':False]['text':'/ of row/column positions.','line_number':779,'multiline':False]['text':' Motion to left margin from anywhere else, or CR + printing chars is','line_number':803,'multiline':False]['text':' even less expensive than using BSes or CUB.','line_number':804,'multiline':False]['text':' Deferred right margin wrap terminals have inconsistent ideas about','line_number':810,'multiline':False]['text':' where the cursor actually is during a deferred wrap.  Relative','line_number':811,'multiline':False]['text':' motion calculations have OBOEs that cannot be compensated for,','line_number':812,'multiline':False]['text':' because two terminals that claim to be the same will implement','line_number':813,'multiline':False]['text':' different cursor positioning rules.','line_number':814,'multiline':False]['text':' This might be just BS, so it is considered really cheap.','line_number':817,'multiline':False]['text':' This might be just LF, so it is considered really cheap.','line_number':844,'multiline':False]['text':' Printing at the right margin immediately advances the cursor.','line_number':881,'multiline':False]['text':'/ Move cursor to the position given by `row` and `col` and print the character in `cell`.','line_number':886,'multiline':False]['text':'/ This allows the grid and the host terminal to assume different widths of ambiguous-width chars.','line_number':887,'multiline':False]['text':'/','line_number':888,'multiline':False]['text':'/ @param is_doublewidth  whether the character is double-width on the grid.','line_number':889,'multiline':False]['text':'/                        If true and the character is ambiguous-width, clear two cells.','line_number':890,'multiline':False]['text':' If cursor needs to repositioned and there is nothing to print, don't move cursor.','line_number':896,'multiline':False]['text':' Clear the two screen cells.','line_number':906,'multiline':False]['text':' If the character is single-width in the host terminal it won't change the second cell.','line_number':907,'multiline':False]['text':' Force repositioning cursor after printing an ambiguous-width character.','line_number':916,'multiline':False]['text':' Background is set to the default color and the right edge matches the','line_number':927,'multiline':False]['text':' screen end, try to use terminal codes for clearing the requested area.','line_number':928,'multiline':False]['text':' iterate through each line and clear','line_number':941,'multiline':False]['text':' resize might not always be followed by a clear before flush','line_number':1015,'multiline':False]['text':' so clip the invalid region','line_number':1016,'multiline':False]['text':' Resize the _host_ terminal.','line_number':1024,'multiline':False]['text':' DECSLPP does not reset the scroll region.','line_number':1028,'multiline':False]['text':' Already handled the SIGWINCH signal; avoid double-resize.','line_number':1032,'multiline':False]['text':' safe to clear cache at this point','line_number':1042,'multiline':False]['text':' cursor position is validated in tui_flush','line_number':1050,'multiline':False]['text':' Do not send cursor style control codes.','line_number':1096,'multiline':False]['text':' cursor style entries as defined by `shape_table`.','line_number':1101,'multiline':False]['text':' Do nothing; menus are for GUI only','line_number':1113,'multiline':False]['text':' We interpret "inverse" as "default" (no termcode for "inverse"...).','line_number':1160,'multiline':False]['text':' Hopefully the user's default cursor color is inverse.','line_number':1161,'multiline':False]['text':' No cursor color for this mode; reset to default.','line_number':1175,'multiline':False]['text':'/ @param mode editor mode','line_number':1193,'multiline':False]['text':' If stdin is not a TTY, the LHS of pipe may change the state of the TTY','line_number':1197,'multiline':False]['text':' after calling uv_tty_set_mode. So, set the mode of the TTY again here.','line_number':1198,'multiline':False]['text':' #13073','line_number':1199,'multiline':False]['text':' mode entered, no longer starting','line_number':1217,'multiline':False]['text':' Change terminal scroll region and move cursor to the top','line_number':1242,'multiline':False]['text':' Restore terminal scroll region and cursor','line_number':1265,'multiline':False]['text':' Mark the moved region as invalid for redrawing later','line_number':1270,'multiline':False]['text':' Back-pressure: UI events may accumulate much faster than the terminal','line_number':1318,'multiline':False]['text':' device can serve them. Even if SIGINT/CTRL-C is received, user must still','line_number':1319,'multiline':False]['text':' wait for the TUI event-queue to drain, and if there are ~millions of','line_number':1320,'multiline':False]['text':' events in the queue, it could take hours. Clearing the queue allows the','line_number':1321,'multiline':False]['text':' UI to recover. #1234 #5396','line_number':1322,'multiline':False]['text':' avoid hidden cursor','line_number':1324,'multiline':False]['text':'/ Dumps termcap info to the messages area, if 'verbose' >= 3.','line_number':1357,'multiline':False]['text':' history','line_number':1381,'multiline':False]['text':' on a non-UNIX system, this is a no-op','line_number':1391,'multiline':False]['text':' normalize stream (#2598)','line_number':1396,'multiline':False]['text':' libuv expects this','line_number':1405,'multiline':False]['text':' Save title/icon to the "stack". #4063','line_number':1418,'multiline':False]['text':' Restore title/icon from the "stack". #4063','line_number':1426,'multiline':False]['text':' Only do line wrapping if the grid width is equal to the terminal','line_number':1520,'multiline':False]['text':' width and the line continuation is within the grid.','line_number':1521,'multiline':False]['text':' Print the last char of the row, if we haven't already done so.','line_number':1524,'multiline':False]['text':' Wrap the cursor over to the next line. The next line will be','line_number':1530,'multiline':False]['text':' printed immediately without an intervening newline.','line_number':1531,'multiline':False]['text':' adjacent regions are treated as overlapping','line_number':1542,'multiline':False]['text':' If top/bot/left/right intersects with a invalid rect, we replace it','line_number':1551,'multiline':False]['text':' by the union','line_number':1552,'multiline':False]['text':' Else just add a new entry;','line_number':1558,'multiline':False]['text':'/ Tries to get the user's wanted dimensions (columns and rows) for the entire','line_number':1563,'multiline':False]['text':'/ application (i.e., the host terminal).','line_number':1564,'multiline':False]['text':' 1 - try from a system call(ioctl/TIOCGWINSZ on unix)','line_number':1569,'multiline':False]['text':' 2 - use $LINES/$COLUMNS if available','line_number':1575,'multiline':False]['text':' 3 - read from terminfo if available','line_number':1585,'multiline':False]['text':' use the defaults','line_number':1591,'multiline':False]['text':' Redraw on SIGWINCH event if size didn't change. #23411','line_number':1599,'multiline':False]['text':' Called by unibi_format(): avoid flush_buf() halfway an escape sequence.','line_number':1654,'multiline':False]['text':'/ Called by unibi_format() for padding instructions.','line_number':1665,'multiline':False]['text':'/ The following parameter descriptions are extracted from unibi_format(3) and terminfo(5).','line_number':1666,'multiline':False]['text':'/','line_number':1667,'multiline':False]['text':'/ @param ctx    the same as `ctx2` passed to unibi_format()','line_number':1668,'multiline':False]['text':'/ @param delay  the delay in tenths of milliseconds','line_number':1669,'multiline':False]['text':'/ @param scale  padding is proportional to the number of lines affected','line_number':1670,'multiline':False]['text':'/ @param force  padding is mandatory','line_number':1671,'multiline':False]['text':'/ Determine if the terminal supports truecolor or not:','line_number':1719,'multiline':False]['text':'/','line_number':1720,'multiline':False]['text':'/ 1. If $COLORTERM is "24bit" or "truecolor", return true','line_number':1721,'multiline':False]['text':'/ 2. Else, check terminfo for Tc, RGB, setrgbf, or setrgbb capabilities. If','line_number':1722,'multiline':False]['text':'/    found, return true','line_number':1723,'multiline':False]['text':'/ 3. Else, return false','line_number':1724,'multiline':False]['text':' Check $COLORTERM','line_number':1727,'multiline':False]['text':' Check for Tc and RGB','line_number':1732,'multiline':False]['text':' Check for setrgbf and setrgbb','line_number':1740,'multiline':False]['text':'/ Patches the terminfo records after loading from system or built-in db.','line_number':1757,'multiline':False]['text':'/ Several entries in terminfo are known to be deficient or outright wrong;','line_number':1758,'multiline':False]['text':'/ and several terminal emulators falsely announce incorrect terminal types.','line_number':1759,'multiline':False]['text':' Treat Terminal.app as generic xterm-like, for now.','line_number':1766,'multiline':False]['text':' None of the following work over SSH; see :help TERM .','line_number':1785,'multiline':False]['text':' terminfo typically includes DECRST 12 as part of setting up the','line_number':1797,'multiline':False]['text':' normal cursor, which interferes with the user's control via','line_number':1798,'multiline':False]['text':' set_cursor_style.  When DECRST 12 is present, skip over it, but honor','line_number':1799,'multiline':False]['text':' the rest of the cnorm setting.','line_number':1800,'multiline':False]['text':' The Linux terminfo entry similarly includes a Linux-idiosyncractic','line_number':1808,'multiline':False]['text':' cursor shape reset in cnorm, which similarly interferes with','line_number':1809,'multiline':False]['text':' set_cursor_style.','line_number':1810,'multiline':False]['text':' The Linux terminfo entry similarly includes a Linux-idiosyncractic','line_number':1820,'multiline':False]['text':' cursor shape reset in cinvis, which similarly interferes with','line_number':1821,'multiline':False]['text':' set_cursor_style.','line_number':1822,'multiline':False]['text':' Disable BCE in some cases we know it is not working. #8806','line_number':1828,'multiline':False]['text':' Termit, LXTerminal, GTKTerm2, GNOME Terminal, MATE Terminal, roxterm,','line_number':1833,'multiline':False]['text':' and EvilVTE falsely claim to be xterm and do not support important xterm','line_number':1834,'multiline':False]['text':' control sequences that we use.  In an ideal world, these would have','line_number':1835,'multiline':False]['text':' their own terminal types and terminfo entries, like PuTTY does, and not','line_number':1836,'multiline':False]['text':' claim to be xterm.  Or they would mimic xterm properly enough to be','line_number':1837,'multiline':False]['text':' treatable as xterm.','line_number':1838,'multiline':False]['text':' 2017-04 terminfo.src lacks these.  Xterm-likes have them.','line_number':1840,'multiline':False]['text':' hterm doesn't have a status line.','line_number':1842,'multiline':False]['text':' TODO(aktau): patch this in when DECSTBM is fixed (https://crbug.com/1298796)','line_number':1845,'multiline':False]['text':' 2017-04 terminfo.src lacks these.  genuine Xterm has them.','line_number':1852,'multiline':False]['text':' Fix things advertised via TERM=xterm, for non-xterm.','line_number':1857,'multiline':False]['text':'','line_number':1858,'multiline':False]['text':' TODO(aktau): stop patching this out for hterm when it gains support','line_number':1859,'multiline':False]['text':' (https://crbug.com/1175065).','line_number':1860,'multiline':False]['text':' XXX: workaround libuv implicit LF => CRLF conversion. #10558','line_number':1876,'multiline':False]['text':' 2017-04 terminfo.src lacks these.  Unicode rxvt has them.','line_number':1880,'multiline':False]['text':' 2017-04 terminfo.src has older control sequences.','line_number':1885,'multiline':False]['text':' per the screen manual; 2017-04 terminfo.src lacks these.','line_number':1889,'multiline':False]['text':' Fix an issue where smglr is inherited by TERM=screen.xterm.','line_number':1892,'multiline':False]['text':' 2017-04 terminfo.src lacks this.','line_number':1911,'multiline':False]['text':' No bugs in the vanilla terminfo for our purposes.','line_number':1919,'multiline':False]['text':' 2017-04 terminfo.src has older control sequences.','line_number':1921,'multiline':False]['text':' 2017-04 terminfo.src lacks these.','line_number':1924,'multiline':False]['text':' No bugs in the vanilla terminfo for our purposes.','line_number':1933,'multiline':False]['text':' At this time (2017-07-12) it seems like all terminals that support 256','line_number':1936,'multiline':False]['text':' color codes can use semicolons in the terminal code and be fine.','line_number':1937,'multiline':False]['text':' However, this is not correct according to the spec. So to reward those','line_number':1938,'multiline':False]['text':' terminals that also support colons, we output the code that way on these','line_number':1939,'multiline':False]['text':' specific ones.','line_number':1940,'multiline':False]['text':' using colons like ISO 8613-6:1994/ITU T.416:1993 says.','line_number':1942,'multiline':False]['text':' Terminals with 256-colour SGR support despite what terminfo says.','line_number':1957,'multiline':False]['text':' See http://fedoraproject.org/wiki/Features/256_Color_Terminals','line_number':1959,'multiline':False]['text':' Linux 4.8+ supports 256-colour SGR.','line_number':1965,'multiline':False]['text':' Terminals with 16-colour SGR support despite what terminfo says.','line_number':1975,'multiline':False]['text':' Blacklist of terminals that cannot be trusted to report DECSCUSR support.','line_number':1984,'multiline':False]['text':' Dickey ncurses terminfo includes Ss/Se capabilities since 2011-07-14. So','line_number':1990,'multiline':False]['text':' adding them to terminal types, that have such control sequences but lack','line_number':1991,'multiline':False]['text':' the correct terminfo entries, is a fixup, not an augmentation.','line_number':1992,'multiline':False]['text':' DECSCUSR (cursor shape) is widely supported.','line_number':1994,'multiline':False]['text':' https://github.com/gnachman/iTerm2/pull/92','line_number':1995,'multiline':False]['text':' anything claiming xterm compat','line_number':1997,'multiline':False]['text':' per MinTTY 0.4.3-1 release notes from 2009','line_number':1998,'multiline':False]['text':' per https://chromium.googlesource.com/apps/libapps/+/a5fb83c190aa9d74f4a9bca233dac6be2664e9e9/hterm/doc/ControlSequences.md','line_number':2000,'multiline':False]['text':' per https://bugzilla.gnome.org/show_bug.cgi?id=720821','line_number':2002,'multiline':False]['text':' #9364','line_number':2004,'multiline':False]['text':' per tmux manual page','line_number':2005,'multiline':False]['text':' https://lists.gnu.org/archive/html/screen-devel/2013-03/msg00000.html','line_number':2006,'multiline':False]['text':' #7641','line_number':2008,'multiline':False]['text':' per command.C','line_number':2009,'multiline':False]['text':' per analysis of VT100Terminal.m','line_number':2010,'multiline':False]['text':' per TeraTerm "Supported Control Functions" doco','line_number':2012,'multiline':False]['text':' https://github.com/jwilm/alacritty/pull/608','line_number':2013,'multiline':False]['text':' Some linux-type terminals implement the xterm extension.','line_number':2015,'multiline':False]['text':' Example: console-terminal-emulator from the nosh toolset.','line_number':2016,'multiline':False]['text':' Linux uses an idiosyncratic escape code to set the cursor shape and','line_number':2028,'multiline':False]['text':' does not support DECSCUSR.','line_number':2029,'multiline':False]['text':' See http://linuxgazette.net/137/anonymous.html for more info','line_number':2030,'multiline':False]['text':' The parameter passed to Ss is the DECSCUSR parameter, so the','line_number':2034,'multiline':False]['text':' terminal capability has to translate into the Linux idiosyncratic','line_number':2035,'multiline':False]['text':' parameter.','line_number':2036,'multiline':False]['text':'','line_number':2037,'multiline':False]['text':' linuxvt only supports block and underline. It is also only','line_number':2038,'multiline':False]['text':' possible to have a steady block (no steady underline)','line_number':2039,'multiline':False]['text':' blink block','line_number':2040,'multiline':False]['text':' steady block','line_number':2041,'multiline':False]['text':' blink underline (set to half block)','line_number':2042,'multiline':False]['text':' steady underline','line_number':2043,'multiline':False]['text':' blink bar (set to underline)','line_number':2044,'multiline':False]['text':' steady bar','line_number':2045,'multiline':False]['text':' anything else','line_number':2046,'multiline':False]['text':' Konsole before version 18.07.70: set up a nonce profile. This has','line_number':2055,'multiline':False]['text':' side effects on temporary font resizing. #6798','line_number':2056,'multiline':False]['text':' block','line_number':2060,'multiline':False]['text':' underline','line_number':2061,'multiline':False]['text':' everything else is bar','line_number':2062,'multiline':False]['text':' Fortunately if we exclude zero as special,','line_number':2064,'multiline':False]['text':' in all other cases we can treat bit #0 as a flag.','line_number':2065,'multiline':False]['text':'/ This adds stuff that is not in standard terminfo as extended unibilium','line_number':2077,'multiline':False]['text':'/ capabilities.','line_number':2078,'multiline':False]['text':' Treat Terminal.app as generic xterm-like, for now.','line_number':2084,'multiline':False]['text':' None of the following work over SSH; see :help TERM .','line_number':2100,'multiline':False]['text':' Only define this capability for terminal types that we know understand it.','line_number':2106,'multiline':False]['text':' originated this extension','line_number':2107,'multiline':False]['text':' per xterm ctlseqs doco','line_number':2108,'multiline':False]['text':' per commentary in VT102Emulation.cpp','line_number':2109,'multiline':False]['text':' per TeraTerm "Supported Control Functions" doco','line_number':2110,'multiline':False]['text':' per command.C','line_number':2111,'multiline':False]['text':' terminfo describes strikethrough modes as rmxx/smxx with respect','line_number':2122,'multiline':False]['text':' to the ECMA-48 strikeout/crossed-out attributes.','line_number':2123,'multiline':False]['text':' It should be pretty safe to always enable this, as terminals will ignore','line_number':2126,'multiline':False]['text':' unrecognised SGR numbers.','line_number':2127,'multiline':False]['text':' Dickey ncurses terminfo does not include the setrgbf and setrgbb','line_number':2131,'multiline':False]['text':' capabilities, proposed by Rüdiger Sonderfeld on 2013-10-15.  Adding','line_number':2132,'multiline':False]['text':' them here when terminfo lacks them is an augmentation, not a fixup.','line_number':2133,'multiline':False]['text':' https://github.com/termstandard/colors','line_number':2134,'multiline':False]['text':' At this time (2017-07-12) it seems like all terminals that support rgb','line_number':2136,'multiline':False]['text':' color codes can use semicolons in the terminal code and be fine.','line_number':2137,'multiline':False]['text':' However, this is not correct according to the spec. So to reward those','line_number':2138,'multiline':False]['text':' terminals that also support colons, we output the code that way on these','line_number':2139,'multiline':False]['text':' specific ones.','line_number':2140,'multiline':False]['text':' can use colons like ISO 8613-6:1994/ITU T.416:1993 says.','line_number':2142,'multiline':False]['text':' VTE colon-support has a big memory leak. #7573','line_number':2144,'multiline':False]['text':' per VT100Terminal.m','line_number':2145,'multiline':False]['text':' per http://invisible-island.net/xterm/xterm.log.html#xterm_282','line_number':2146,'multiline':False]['text':' FIXME: Bypassing tmux like this affects the cursor colour globally, in','line_number':2173,'multiline':False]['text':' all panes, which is not particularly desirable.  A better approach','line_number':2174,'multiline':False]['text':' would use a tmux control sequence and an extra if(screen) test.','line_number':2175,'multiline':False]['text':' Supported in urxvt, newer VTE.','line_number':2180,'multiline':False]['text':' Some terminals supporting cursor color changing specify their Cs','line_number':2186,'multiline':False]['text':' capability to take a string parameter. Others take a numeric parameter.','line_number':2187,'multiline':False]['text':' If and only if the format string contains `%s` we assume a string','line_number':2188,'multiline':False]['text':' parameter. #20628','line_number':2189,'multiline':False]['text':'/ Terminals usually ignore unrecognized private modes, and there is no','line_number':2206,'multiline':False]['text':'/ known ambiguity with these. So we just set them unconditionally.','line_number':2207,'multiline':False]['text':' For urxvt send BOTH xterm and old urxvt sequences. #8695','line_number':2216,'multiline':False]['text':' Extended underline.','line_number':2233,'multiline':False]['text':' terminfo will have Smulx for this (but no support for colors yet).','line_number':2234,'multiline':False]['text':' used by kitty','line_number':2237,'multiline':False]['text':' Only support colon syntax. #9270','line_number':2246,'multiline':False]['text':' Fallback to Xterm's modifyOtherKeys if terminal does not support the','line_number':2252,'multiline':False]['text':' Kitty keyboard protocol','line_number':2253,'multiline':False]['text':'/ Write the sequence to begin flushing output to `buf`.','line_number':2263,'multiline':False]['text':'/ If 'termsync' is set and the terminal supports synchronized output, begin synchronized update.','line_number':2264,'multiline':False]['text':'/ Otherwise, hide the cursor to avoid cursor jumping.','line_number':2265,'multiline':False]['text':'/','line_number':2266,'multiline':False]['text':'/ @param buf  the buffer to write the sequence to','line_number':2267,'multiline':False]['text':'/ @param len  the length of `buf`','line_number':2268,'multiline':False]['text':' Don't use tui->params[] as they may already be in use.','line_number':2272,'multiline':False]['text':'/ Write the sequence to end flushing output to `buf`.','line_number':2290,'multiline':False]['text':'/ If 'termsync' is set and the terminal supports synchronized output, end synchronized update.','line_number':2291,'multiline':False]['text':'/ Otherwise, make the cursor visible again.','line_number':2292,'multiline':False]['text':'/','line_number':2293,'multiline':False]['text':'/ @param buf  the buffer to write the sequence to','line_number':2294,'multiline':False]['text':'/ @param len  the length of `buf`','line_number':2295,'multiline':False]['text':' Don't use tui->params[] as they may already be in use.','line_number':2299,'multiline':False]['text':'/ Try to get "kbs" code from stty because "the terminfo kbs entry is extremely','line_number':2361,'multiline':False]['text':'/ unreliable." (Vim, Bash, and tmux also do this.)','line_number':2362,'multiline':False]['text':'/','line_number':2363,'multiline':False]['text':'/ @see tmux/tty-keys.c fe4e9470bb504357d073320f5d305b22663ee3fd','line_number':2364,'multiline':False]['text':'/ @see https://bugzilla.redhat.com/show_bug.cgi?id=142659','line_number':2365,'multiline':False]['text':'/ libtermkey hook to override terminfo entries.','line_number':2380,'multiline':False]['text':'/ @see TermInput.tk_ti_hook_fn','line_number':2381,'multiline':False]['text':' Vim: "If <BS> and <DEL> are now the same, redefine <DEL>."','line_number':2397,'multiline':False]['text':' If key_mouse is found, libtermkey uses its terminfo driver (driver-ti.c)','line_number':2403,'multiline':False]['text':' for mouse input, which by accident only supports X10 protocol.','line_number':2404,'multiline':False]['text':' Force libtermkey to fallback to its CSI driver (driver-csi.c). #7948','line_number':2405,'multiline':False]