['text':' NOLINT(bugprone-reserved-identifier)','line_number':57,'multiline':False]['text':' NOLINT(bugprone-reserved-identifier)','line_number':58,'multiline':False]['text':' Error messages formerly used by viminfo code:','line_number':83,'multiline':False]['text':'   E136: viminfo: Too many errors, skipping rest of file','line_number':84,'multiline':False]['text':'   E137: Viminfo file is not writable: %s','line_number':85,'multiline':False]['text':'   E138: Can't write viminfo file %s!','line_number':86,'multiline':False]['text':'   E195: Cannot open ShaDa file for reading','line_number':87,'multiline':False]['text':'   E574: Unknown register type %d','line_number':88,'multiline':False]['text':'   E575: Illegal starting char','line_number':89,'multiline':False]['text':'   E576: Missing '>'','line_number':90,'multiline':False]['text':'   E577: Illegal register name','line_number':91,'multiline':False]['text':'   E886: Can't rename viminfo file to %s!','line_number':92,'multiline':False]['text':'   E929: Too many viminfo temp files, like %s!','line_number':93,'multiline':False]['text':' Now only six of them are used:','line_number':94,'multiline':False]['text':'   E137: ShaDa file is not writeable (for pre-open checks)','line_number':95,'multiline':False]['text':'   E929: All %s.tmp.X files exist, cannot write ShaDa file!','line_number':96,'multiline':False]['text':'   RCERR (E576) for critical read errors.','line_number':97,'multiline':False]['text':'   RNERR (E136) for various errors when renaming.','line_number':98,'multiline':False]['text':'   RERR (E575) for various errors inside read ShaDa file.','line_number':99,'multiline':False]['text':'   SERR (E886) for various “system” errors (always contains output of','line_number':100,'multiline':False]['text':'   strerror)','line_number':101,'multiline':False]['text':'   WERR (E574) for various ignorable write errors','line_number':102,'multiline':False]['text':'/ Common prefix for all errors inside ShaDa file','line_number':104,'multiline':False]['text':'/','line_number':105,'multiline':False]['text':'/ I.e. errors occurred while parsing, but not system errors occurred while','line_number':106,'multiline':False]['text':'/ reading.','line_number':107,'multiline':False]['text':'/ Common prefix for critical read errors','line_number':110,'multiline':False]['text':'/','line_number':111,'multiline':False]['text':'/ I.e. errors that make shada_read_next_item return kSDReadStatusNotShaDa.','line_number':112,'multiline':False]['text':'/ Common prefix for all “system” errors','line_number':115,'multiline':False]['text':'/ Common prefix for all “rename” errors','line_number':118,'multiline':False]['text':'/ Common prefix for all ignorable “write” errors','line_number':121,'multiline':False]['text':'/ Callback function for add_search_pattern','line_number':124,'multiline':False]['text':'/ Possible ShaDa entry types','line_number':127,'multiline':False]['text':'/','line_number':128,'multiline':False]['text':'/ @warning Enum values are part of the API and must not be altered.','line_number':129,'multiline':False]['text':'/','line_number':130,'multiline':False]['text':'/ All values that are not in enum are ignored.','line_number':131,'multiline':False]['text':'/< Unknown item.','line_number':133,'multiline':False]['text':'/< Missing value. Should never appear in a file.','line_number':134,'multiline':False]['text':'/< Header. Present for debugging purposes.','line_number':135,'multiline':False]['text':'/< Last search pattern (*not* history item).','line_number':136,'multiline':False]['text':'/< Comes from user searches (e.g. when typing','line_number':137,'multiline':False]['text':'/< "/pat") or :substitute command calls.','line_number':138,'multiline':False]['text':'/< Last substitute replacement string.','line_number':139,'multiline':False]['text':'/< History item.','line_number':140,'multiline':False]['text':'/< Register.','line_number':141,'multiline':False]['text':'/< Global variable.','line_number':142,'multiline':False]['text':'/< Global mark definition.','line_number':143,'multiline':False]['text':'/< Item from jump list.','line_number':144,'multiline':False]['text':'/< Buffer list.','line_number':145,'multiline':False]['text':'/< Buffer-local mark.','line_number':146,'multiline':False]['text':'/< Item from buffer change list.','line_number':147,'multiline':False]['text':'/ Possible results when reading ShaDa file','line_number':151,'multiline':False]['text':'/< Reading was successful.','line_number':153,'multiline':False]['text':'/< Nothing more to read.','line_number':154,'multiline':False]['text':'/< Failed to read from file.','line_number':155,'multiline':False]['text':'/< Input is most likely not a ShaDa file.','line_number':156,'multiline':False]['text':'/< Error in the currently read item.','line_number':157,'multiline':False]['text':'/ Possible results of shada_write function.','line_number':160,'multiline':False]['text':'/< Writing was successful.','line_number':162,'multiline':False]['text':'/< Writing was successful, but when reading it','line_number':163,'multiline':False]['text':'/< attempted to read file that did not look like','line_number':164,'multiline':False]['text':'/< a ShaDa file.','line_number':165,'multiline':False]['text':'/< Writing was not successful (e.g. because there','line_number':166,'multiline':False]['text':'/< was no space left on device).','line_number':167,'multiline':False]['text':'/< Writing resulted in a error which can be ignored','line_number':168,'multiline':False]['text':'/< (e.g. when trying to dump a function reference or','line_number':169,'multiline':False]['text':'/< self-referencing container in a variable).','line_number':170,'multiline':False]['text':'/ Flags for shada_read_next_item','line_number':173,'multiline':False]['text':'/< Determines whether header should','line_number':175,'multiline':False]['text':'/< be read (it is usually ignored).','line_number':176,'multiline':False]['text':'/< Data reading which cannot be disabled by','line_number':180,'multiline':False]['text':'/< &shada or other options except for disabling','line_number':181,'multiline':False]['text':'/< reading ShaDa as a whole.','line_number':182,'multiline':False]['text':'/< Determines whether registers','line_number':183,'multiline':False]['text':'/< should be read (may only be','line_number':184,'multiline':False]['text':'/< disabled when writing, but','line_number':185,'multiline':False]['text':'/< not when reading).','line_number':186,'multiline':False]['text':'/< Determines whether history','line_number':187,'multiline':False]['text':'/< should be read (can only be','line_number':188,'multiline':False]['text':'/< disabled by &history).','line_number':189,'multiline':False]['text':'/< Determines whether variables','line_number':190,'multiline':False]['text':'/< should be read (disabled by','line_number':191,'multiline':False]['text':'/< removing ! from &shada).','line_number':192,'multiline':False]['text':'/< Determines whether buffer','line_number':193,'multiline':False]['text':'/< list should be read','line_number':194,'multiline':False]['text':'/< (disabled by removing','line_number':195,'multiline':False]['text':'/< % entry from &shada).','line_number':196,'multiline':False]['text':'/< Determines whether','line_number':197,'multiline':False]['text':'/< unknown items should be','line_number':198,'multiline':False]['text':'/< read (usually disabled).','line_number':199,'multiline':False]['text':'/< Determines whether global','line_number':200,'multiline':False]['text':'/< marks should be read. Can','line_number':201,'multiline':False]['text':'/< only be disabled by','line_number':202,'multiline':False]['text':'/< having f0 in &shada when','line_number':203,'multiline':False]['text':'/< writing.','line_number':204,'multiline':False]['text':'/< Determines whether local','line_number':205,'multiline':False]['text':'/< marks should be read. Can','line_number':206,'multiline':False]['text':'/< only be disabled by','line_number':207,'multiline':False]['text':'/< disabling &shada or putting','line_number':208,'multiline':False]['text':'/< '0 there. Is also used for','line_number':209,'multiline':False]['text':'/< v:oldfiles.','line_number':210,'multiline':False]['text':'/< Determines whether change list','line_number':211,'multiline':False]['text':'/< should be read. Can only be','line_number':212,'multiline':False]['text':'/< disabled by disabling &shada or','line_number':213,'multiline':False]['text':'/< putting '0 there.','line_number':214,'multiline':False]['text':' Note: SRNIFlags enum name was created only to make it possible to reference','line_number':216,'multiline':False]['text':' it. This name is not actually used anywhere outside of the documentation.','line_number':217,'multiline':False]['text':'/ Structure defining a single ShaDa file entry','line_number':219,'multiline':False]['text':' yankreg_T','line_number':250,'multiline':False]['text':'/ One entry in sized linked list','line_number':284,'multiline':False]['text':'/< Entry data.','line_number':286,'multiline':False]['text':'/< True if data can be freed.','line_number':287,'multiline':False]['text':'/< Pointer to next entry or NULL.','line_number':288,'multiline':False]['text':'/< Pointer to previous entry or NULL.','line_number':289,'multiline':False]['text':'/ Sized linked list structure for history merger','line_number':292,'multiline':False]['text':'/< Pointer to the start of the allocated array of','line_number':294,'multiline':False]['text':'/< entries.','line_number':295,'multiline':False]['text':'/< First entry in the list (is not necessary start','line_number':296,'multiline':False]['text':'/< of the array) or NULL.','line_number':297,'multiline':False]['text':'/< Last entry in the list or NULL.','line_number':298,'multiline':False]['text':'/< Last free entry removed by hmll_remove.','line_number':299,'multiline':False]['text':'/< Last unused element in entries array.','line_number':300,'multiline':False]['text':'/< Number of allocated entries.','line_number':301,'multiline':False]['text':'/< Number of entries already used.','line_number':302,'multiline':False]['text':'/< Map all history entry strings to','line_number':303,'multiline':False]['text':'/< corresponding entry pointers.','line_number':304,'multiline':False]['text':'/ ShadaEntry structure that knows whether it should be freed','line_number':316,'multiline':False]['text':'/< ShadaEntry data.','line_number':318,'multiline':False]['text':'/< True if entry can be freed.','line_number':319,'multiline':False]['text':'/ Structure that holds one file marks.','line_number':322,'multiline':False]['text':'/< All file marks.','line_number':324,'multiline':False]['text':'/< All file changes.','line_number':325,'multiline':False]['text':'/< Number of changes occupied.','line_number':326,'multiline':False]['text':'/< All marks with unknown names.','line_number':327,'multiline':False]['text':'/< Size of the additional_marks array.','line_number':328,'multiline':False]['text':'/< Greatest timestamp among marks.','line_number':329,'multiline':False]['text':'/ State structure used by shada_write','line_number':332,'multiline':False]['text':'/','line_number':333,'multiline':False]['text':'/ Before actually writing most of the data is read to this structure.','line_number':334,'multiline':False]['text':'/< Structures for history merging.','line_number':336,'multiline':False]['text':'/< Named global marks.','line_number':337,'multiline':False]['text':'/< Numbered marks.','line_number':338,'multiline':False]['text':'/< All registers.','line_number':339,'multiline':False]['text':'/< All dumped jumps.','line_number':340,'multiline':False]['text':'/< Number of jumps occupied.','line_number':341,'multiline':False]['text':'/< Last search pattern.','line_number':342,'multiline':False]['text':'/< Last s/ search pattern.','line_number':343,'multiline':False]['text':'/< Last s// replacement string.','line_number':344,'multiline':False]['text':'/< Names of already dumped variables.','line_number':345,'multiline':False]['text':'/< All file marks.','line_number':346,'multiline':False]['text':'/ Function used to close files defined by ShaDaReadDef','line_number':351,'multiline':False]['text':'/ Function used to read ShaDa files','line_number':355,'multiline':False]['text':'/ Function used to skip in ShaDa files','line_number':361,'multiline':False]['text':'/ Structure containing necessary pointers for reading ShaDa files','line_number':366,'multiline':False]['text':'/< Reader function.','line_number':368,'multiline':False]['text':'/< Close function.','line_number':369,'multiline':False]['text':'/< Function used to skip some bytes.','line_number':370,'multiline':False]['text':'/< Data describing object read from.','line_number':371,'multiline':False]['text':'/< True if reader reached end of file.','line_number':372,'multiline':False]['text':'/< Error message in case of error.','line_number':373,'multiline':False]['text':'/< Current position (amount of bytes read since','line_number':374,'multiline':False]['text':'/< reader structure initialization). May overflow.','line_number':375,'multiline':False]['text':'/ Function used to close files defined by ShaDaWriteDef','line_number':380,'multiline':False]['text':'/ Function used to write ShaDa files','line_number':384,'multiline':False]['text':'/ Structure containing necessary pointers for writing ShaDa files','line_number':390,'multiline':False]['text':'/< Writer function.','line_number':392,'multiline':False]['text':'/< Close function.','line_number':393,'multiline':False]['text':'/< Data describing object written to.','line_number':394,'multiline':False]['text':'/< Error message in case of error.','line_number':395,'multiline':False]['text':'/ Initialize new linked list','line_number':472,'multiline':False]['text':'/','line_number':473,'multiline':False]['text':'/ @param[out]  hmll       List to initialize.','line_number':474,'multiline':False]['text':'/ @param[in]   size       Maximum size of the list.','line_number':475,'multiline':False]['text':'/ Iterate over HMLList in forward direction','line_number':491,'multiline':False]['text':'/','line_number':492,'multiline':False]['text':'/ @param  hmll       Pointer to the list.','line_number':493,'multiline':False]['text':'/ @param  cur_entry  Name of the variable to iterate over.','line_number':494,'multiline':False]['text':'/ @param  code       Code to execute on each iteration.','line_number':495,'multiline':False]['text':'/','line_number':496,'multiline':False]['text':'/ @return `for` cycle header (use `HMLL_FORALL(hmll, cur_entry) {body}`).','line_number':497,'multiline':False]['text':'/ Remove entry from the linked list','line_number':504,'multiline':False]['text':'/','line_number':505,'multiline':False]['text':'/ @param  hmll        List to remove from.','line_number':506,'multiline':False]['text':'/ @param  hmll_entry  Entry to remove.','line_number':507,'multiline':False]['text':'/ Insert entry to the linked list','line_number':537,'multiline':False]['text':'/','line_number':538,'multiline':False]['text':'/ @param[out]  hmll            List to insert to.','line_number':539,'multiline':False]['text':'/ @param[in]   hmll_entry      Entry to insert after or NULL if it is needed','line_number':540,'multiline':False]['text':'/                              to insert at the first entry.','line_number':541,'multiline':False]['text':'/ @param[in]   data            Data to insert.','line_number':542,'multiline':False]['text':'/ @param[in]   can_free_entry  True if data can be freed.','line_number':543,'multiline':False]['text':'/ Free linked list','line_number':590,'multiline':False]['text':'/','line_number':591,'multiline':False]['text':'/ @param[in]  hmll  List to free.','line_number':592,'multiline':False]['text':'/ Wrapper for reading from file descriptors','line_number':600,'multiline':False]['text':'/','line_number':601,'multiline':False]['text':'/ @return -1 or number of bytes read.','line_number':602,'multiline':False]['text':'/ Read one character','line_number':616,'multiline':False]['text':'/ Wrapper for writing to file descriptors','line_number':628,'multiline':False]['text':'/','line_number':629,'multiline':False]['text':'/ @return -1 or number of bytes written.','line_number':630,'multiline':False]['text':'/ Wrapper for closing file descriptors opened for reading','line_number':643,'multiline':False]['text':'/ Wrapper for closing file descriptors opened for writing','line_number':650,'multiline':False]['text':'/ Wrapper for read that reads to IObuff and ignores bytes read','line_number':657,'multiline':False]['text':'/','line_number':658,'multiline':False]['text':'/ Used for skipping.','line_number':659,'multiline':False]['text':'/','line_number':660,'multiline':False]['text':'/ @param[in,out]  sd_reader  File read.','line_number':661,'multiline':False]['text':'/ @param[in]      offset     Amount of bytes to skip.','line_number':662,'multiline':False]['text':'/','line_number':663,'multiline':False]['text':'/ @return FAIL in case of failure, OK in case of success. May set','line_number':664,'multiline':False]['text':'/         sd_reader->eof or sd_reader->error.','line_number':665,'multiline':False]['text':'/ Wrapper for read that can be used when lseek cannot be used','line_number':685,'multiline':False]['text':'/','line_number':686,'multiline':False]['text':'/ E.g. when trying to read from a pipe.','line_number':687,'multiline':False]['text':'/','line_number':688,'multiline':False]['text':'/ @param[in,out]  sd_reader  File read.','line_number':689,'multiline':False]['text':'/ @param[in]      offset     Amount of bytes to skip.','line_number':690,'multiline':False]['text':'/','line_number':691,'multiline':False]['text':'/ @return kSDReadStatusReadError, kSDReadStatusNotShaDa or','line_number':692,'multiline':False]['text':'/         kSDReadStatusSuccess.','line_number':693,'multiline':False]['text':'/ Open ShaDa file for reading','line_number':714,'multiline':False]['text':'/','line_number':715,'multiline':False]['text':'/ @param[in]   fname      File name to open.','line_number':716,'multiline':False]['text':'/ @param[out]  sd_reader  Location where reader structure will be saved.','line_number':717,'multiline':False]['text':'/','line_number':718,'multiline':False]['text':'/ @return libuv error in case of error, 0 otherwise.','line_number':719,'multiline':False]['text':'/ Wrapper for closing file descriptors','line_number':743,'multiline':False]['text':'/ Msgpack callback for writing to ShaDaWriteDef*','line_number':753,'multiline':False]['text':'/ Check whether writing to shada file was disabled ("-i NONE" or "--clean").','line_number':766,'multiline':False]['text':'/','line_number':767,'multiline':False]['text':'/ @return true if it was disabled, false otherwise.','line_number':768,'multiline':False]['text':'/ Read ShaDa file','line_number':775,'multiline':False]['text':'/','line_number':776,'multiline':False]['text':'/ @param[in]  file   File to read or NULL to use default name.','line_number':777,'multiline':False]['text':'/ @param[in]  flags  Flags, see ShaDaReadFileFlags enum.','line_number':778,'multiline':False]['text':'/','line_number':779,'multiline':False]['text':'/ @return FAIL if reading failed for some reason and OK otherwise.','line_number':780,'multiline':False]['text':'/ Wrapper for hist_iter() function which produces ShadaEntry values','line_number':820,'multiline':False]['text':'/','line_number':821,'multiline':False]['text':'/ @param[in]   iter          Current iteration state.','line_number':822,'multiline':False]['text':'/ @param[in]   history_type  Type of the history (HIST_*).','line_number':823,'multiline':False]['text':'/ @param[in]   zero          If true, then item is removed from instance','line_number':824,'multiline':False]['text':'/                            memory upon reading.','line_number':825,'multiline':False]['text':'/ @param[out]  hist          Location where iteration results should be saved.','line_number':826,'multiline':False]['text':'/','line_number':827,'multiline':False]['text':'/ @return Next iteration state.','line_number':828,'multiline':False]['text':'/ Insert history entry','line_number':856,'multiline':False]['text':'/','line_number':857,'multiline':False]['text':'/ Inserts history entry at the end of the ring buffer (may insert earlier','line_number':858,'multiline':False]['text':'/ according to the timestamp). If entry was already in the ring buffer','line_number':859,'multiline':False]['text':'/ existing entry will be removed unless it has greater timestamp.','line_number':860,'multiline':False]['text':'/','line_number':861,'multiline':False]['text':'/ Before the new entry entries from the current Neovim history will be','line_number':862,'multiline':False]['text':'/ inserted unless `do_iter` argument is false.','line_number':863,'multiline':False]['text':'/','line_number':864,'multiline':False]['text':'/ @param[in,out]  hms_p           Ring buffer and associated structures.','line_number':865,'multiline':False]['text':'/ @param[in]      entry           Inserted entry.','line_number':866,'multiline':False]['text':'/ @param[in]      do_iter         Determines whether Neovim own history should','line_number':867,'multiline':False]['text':'/                                 be used. Must be true only if inserting','line_number':868,'multiline':False]['text':'/                                 entry from current Neovim history.','line_number':869,'multiline':False]['text':'/ @param[in]      can_free_entry  True if entry can be freed.','line_number':870,'multiline':False]['text':' Prefer entry from the current Neovim instance.','line_number':896,'multiline':False]['text':' Previous key was freed above, as part of freeing the ShaDa entry.','line_number':902,'multiline':False]['text':' Iterate over HMLList in backward direction','line_number':910,'multiline':False]['text':'/ Initialize the history merger','line_number':919,'multiline':False]['text':'/','line_number':920,'multiline':False]['text':'/ @param[out]  hms_p         Structure to be initialized.','line_number':921,'multiline':False]['text':'/ @param[in]   history_type  History type (one of HIST_\* values).','line_number':922,'multiline':False]['text':'/ @param[in]   num_elements  Number of elements in the result.','line_number':923,'multiline':False]['text':'/ @param[in]   do_merge      Prepare structure for merging elements.','line_number':924,'multiline':False]['text':'/ @param[in]   reading       If true, then merger is reading history for use','line_number':925,'multiline':False]['text':'/                            in Neovim.','line_number':926,'multiline':False]['text':'/ Merge in all remaining Neovim own history entries','line_number':939,'multiline':False]['text':'/','line_number':940,'multiline':False]['text':'/ @param[in,out]  hms_p  Merger structure into which history should be','line_number':941,'multiline':False]['text':'/                        inserted.','line_number':942,'multiline':False]['text':'/ Convert merger structure to Neovim internal structure for history','line_number':956,'multiline':False]['text':'/','line_number':957,'multiline':False]['text':'/ @param[in]   hms_p       Converted merger structure.','line_number':958,'multiline':False]['text':'/ @param[out]  hist_array  Array with the results.','line_number':959,'multiline':False]['text':'/ @param[out]  new_hisidx  New last history entry index.','line_number':960,'multiline':False]['text':'/ @param[out]  new_hisnum  Amount of history items in merger structure.','line_number':961,'multiline':False]['text':'/ Free history merger structure','line_number':980,'multiline':False]['text':'/','line_number':981,'multiline':False]['text':'/ @param[in]  hms_p  Structure to be freed.','line_number':982,'multiline':False]['text':'/ Iterate over all history entries in history merger, in order','line_number':989,'multiline':False]['text':'/','line_number':990,'multiline':False]['text':'/ @param[in]   hms_p      Merger structure to iterate over.','line_number':991,'multiline':False]['text':'/ @param[out]  cur_entry  Name of the iterator variable.','line_number':992,'multiline':False]['text':'/ @param       code       Code to execute on each iteration.','line_number':993,'multiline':False]['text':'/','line_number':994,'multiline':False]['text':'/ @return for cycle header. Use `HMS_ITER(hms_p, cur_entry) {body}`.','line_number':995,'multiline':False]['text':'/ Find buffer for given buffer name (cached)','line_number':999,'multiline':False]['text':'/','line_number':1000,'multiline':False]['text':'/ @param[in,out]  fname_bufs  Cache containing fname to buffer mapping.','line_number':1001,'multiline':False]['text':'/ @param[in]      fname       File name to find.','line_number':1002,'multiline':False]['text':'/','line_number':1003,'multiline':False]['text':'/ @return Pointer to the buffer or NULL.','line_number':1004,'multiline':False]['text':' item already existed (can be a NULL value)','line_number':1014,'multiline':False]['text':'/ Compare two marks','line_number':1029,'multiline':False]['text':'/ Read data from ShaDa file','line_number':1081,'multiline':False]['text':'/','line_number':1082,'multiline':False]['text':'/ @param[in]  sd_reader  Structure containing file reader definition.','line_number':1083,'multiline':False]['text':'/ @param[in]  flags      What to read, see ShaDaReadFileFlags enum.','line_number':1084,'multiline':False]['text':' Nothing to do.','line_number':1115,'multiline':False]['text':' Should be handled by the while condition.','line_number':1139,'multiline':False]['text':' Do not free shada entry: its allocated memory was saved above.','line_number':1193,'multiline':False]['text':' Without using regtilde and without / &cpo flag previous substitute','line_number':1209,'multiline':False]['text':' string is close to useless: you can only use it with :& or :~ and','line_number':1210,'multiline':False]['text':' that’s all because s//~ is not available until the first call to','line_number':1211,'multiline':False]['text':' regtilde. Vim was not calling this for some reason.','line_number':1212,'multiline':False]['text':' Do not free shada entry: its allocated memory was saved above.','line_number':1214,'multiline':False]['text':' Do not free shada entry: its allocated memory was saved above.','line_number':1223,'multiline':False]['text':' Do not free shada entry: its allocated memory was saved above.','line_number':1249,'multiline':False]['text':' Do not free shada entry: its allocated memory was saved above.','line_number':1297,'multiline':False]['text':' Do not bother with allocating memory for the string if already','line_number':1324,'multiline':False]['text':' allocated string from cur_entry can be used. It cannot be used if','line_number':1325,'multiline':False]['text':' want_marks is set because this way it may be used for a mark.','line_number':1326,'multiline':False]['text':' Avoid free because this string was already used.','line_number':1332,'multiline':False]['text':' Do not free shada entry: except for fname, its allocated memory (i.e.','line_number':1369,'multiline':False]['text':' additional_data attribute contents if non-NULL) was saved above.','line_number':1370,'multiline':False]['text':' Warning: shada_hist_iter returns ShadaEntry elements which use strings from','line_number':1377,'multiline':False]['text':'          original history list. This means that once such entry is removed','line_number':1378,'multiline':False]['text':'          from the history Neovim array will no longer be valid. To reduce','line_number':1379,'multiline':False]['text':'          amount of memory allocations ShaDa file reader allocates enough','line_number':1380,'multiline':False]['text':'          memory for the history string itself and separator character which','line_number':1381,'multiline':False]['text':'          may be assigned right away.','line_number':1382,'multiline':False]['text':'/ Default shada file location: cached path','line_number':1413,'multiline':False]['text':'/ Get the default ShaDa file','line_number':1416,'multiline':False]['text':'/ Get the ShaDa file name to use','line_number':1427,'multiline':False]['text':'/','line_number':1428,'multiline':False]['text':'/ If "file" is given and not empty, use it (has already been expanded by','line_number':1429,'multiline':False]['text':'/ cmdline functions). Otherwise use "-i file_name", value from 'shada' or the','line_number':1430,'multiline':False]['text':'/ default, and expand environment variables.','line_number':1431,'multiline':False]['text':'/','line_number':1432,'multiline':False]['text':'/ @param[in]  file  Forced file name or NULL.','line_number':1433,'multiline':False]['text':'/','line_number':1434,'multiline':False]['text':'/ @return An allocated string containing shada file name.','line_number':1435,'multiline':False]['text':' XXX It used to be one level lower, so that whatever is in','line_number':1446,'multiline':False]['text':'     `p_shadafile` was expanded. I intentionally moved it here','line_number':1447,'multiline':False]['text':'     because various expansions must have already be done by the shell.','line_number':1448,'multiline':False]['text':'     If shell is not performing them then they should be done in main.c','line_number':1449,'multiline':False]['text':'     where arguments are parsed, *not here*.','line_number':1450,'multiline':False]['text':'/ Write single ShaDa entry','line_number':1472,'multiline':False]['text':'/','line_number':1473,'multiline':False]['text':'/ @param[in]  packer     Packer used to write entry.','line_number':1474,'multiline':False]['text':'/ @param[in]  entry      Entry written.','line_number':1475,'multiline':False]['text':'/ @param[in]  max_kbyte  Maximum size of an item in KiB. Zero means no','line_number':1476,'multiline':False]['text':'/                        restrictions.','line_number':1477,'multiline':False]['text':'/','line_number':1478,'multiline':False]['text':'/ @return kSDWriteSuccessful, kSDWriteFailed or kSDWriteIgnError.','line_number':1479,'multiline':False]['text':' Strings and Blobs both pack as msgpack BINs; differentiate them by','line_number':1565,'multiline':False]['text':' storing an additional VAR_TYPE_BLOB element alongside Blobs','line_number':1566,'multiline':False]['text':' Search pattern is always present','line_number':1600,'multiline':False]['text':' finally, additional data:','line_number':1611,'multiline':False]['text':' File name','line_number':1641,'multiline':False]['text':' Additional entries, if any:','line_number':1645,'multiline':False]['text':' Register contents and name','line_number':1673,'multiline':False]['text':' Additional entries, if any:','line_number':1677,'multiline':False]['text':' Buffer name','line_number':1712,'multiline':False]['text':' Additional entries, if any:','line_number':1717,'multiline':False]['text':'/ Write single ShaDa entry and free it afterwards','line_number':1793,'multiline':False]['text':'/','line_number':1794,'multiline':False]['text':'/ Will not free if entry could not be freed.','line_number':1795,'multiline':False]['text':'/','line_number':1796,'multiline':False]['text':'/ @param[in]  packer     Packer used to write entry.','line_number':1797,'multiline':False]['text':'/ @param[in]  entry      Entry written.','line_number':1798,'multiline':False]['text':'/ @param[in]  max_kbyte  Maximum size of an item in KiB. Zero means no','line_number':1799,'multiline':False]['text':'/                        restrictions.','line_number':1800,'multiline':False]['text':'/ Compare two FileMarks structure to order them by greatest_timestamp','line_number':1814,'multiline':False]['text':'/','line_number':1815,'multiline':False]['text':'/ Order is reversed: structure with greatest greatest_timestamp comes first.','line_number':1816,'multiline':False]['text':'/ Function signature is compatible with qsort.','line_number':1817,'multiline':False]['text':'/ Parse msgpack object that has given length','line_number':1830,'multiline':False]['text':'/','line_number':1831,'multiline':False]['text':'/ @param[in]   sd_reader     Structure containing file reader definition.','line_number':1832,'multiline':False]['text':'/ @param[in]   length        Object length.','line_number':1833,'multiline':False]['text':'/ @param[out]  ret_unpacked  Location where read result should be saved. If','line_number':1834,'multiline':False]['text':'/                            NULL then unpacked data will be freed. Must be','line_number':1835,'multiline':False]['text':'/                            NULL if `ret_buf` is NULL.','line_number':1836,'multiline':False]['text':'/ @param[out]  ret_buf       Buffer containing parsed string.','line_number':1837,'multiline':False]['text':'/','line_number':1838,'multiline':False]['text':'/ @return kSDReadStatusNotShaDa, kSDReadStatusReadError or','line_number':1839,'multiline':False]['text':'/         kSDReadStatusSuccess.','line_number':1840,'multiline':False]['text':'/ Format shada entry for debugging purposes','line_number':1913,'multiline':False]['text':'/','line_number':1914,'multiline':False]['text':'/ @param[in]  entry  ShaDa entry to format.','line_number':1915,'multiline':False]['text':'/','line_number':1916,'multiline':False]['text':'/ @return string representing ShaDa entry in a static buffer.','line_number':1917,'multiline':False]['text':'                         ^ Space for `can_free_entry`','line_number':1924,'multiline':False]['text':'/ Format possibly freed shada entry for debugging purposes','line_number':1992,'multiline':False]['text':'/','line_number':1993,'multiline':False]['text':'/ @param[in]  entry  ShaDa entry to format.','line_number':1994,'multiline':False]['text':'/','line_number':1995,'multiline':False]['text':'/ @return string representing ShaDa entry in a static buffer.','line_number':1996,'multiline':False]['text':'/ Read and merge in ShaDa file, used when writing','line_number':2005,'multiline':False]['text':'/','line_number':2006,'multiline':False]['text':'/ @param[in]      sd_reader   Structure containing file reader definition.','line_number':2007,'multiline':False]['text':'/ @param[in]      srni_flags  Flags determining what to read.','line_number':2008,'multiline':False]['text':'/ @param[in]      max_kbyte   Maximum size of one element.','line_number':2009,'multiline':False]['text':'/ @param[in,out]  ret_wms     Location where results are saved.','line_number':2010,'multiline':False]['text':'/ @param[out]     packer      MessagePack packer for entries which are not','line_number':2011,'multiline':False]['text':'/                             merged.','line_number':2012,'multiline':False]['text':' Should be handled by the while condition.','line_number':2056,'multiline':False]['text':' Completely ignore numbered mark names, make a list sorted by','line_number':2120,'multiline':False]['text':' timestamp.','line_number':2121,'multiline':False]['text':' Ignore duplicates.','line_number':2127,'multiline':False]['text':'/ Check whether buffer should be ignored','line_number':2253,'multiline':False]['text':'/','line_number':2254,'multiline':False]['text':'/ @param[in]  buf  buf_T* to check.','line_number':2255,'multiline':False]['text':'/ @param[in]  removable_bufs  Cache of buffers ignored due to their location.','line_number':2256,'multiline':False]['text':'/','line_number':2257,'multiline':False]['text':'/ @return true or false.','line_number':2258,'multiline':False]['text':'/ Get list of buffers to write to the shada file','line_number':2266,'multiline':False]['text':'/','line_number':2267,'multiline':False]['text':'/ @param[in]  removable_bufs  Buffers which are ignored','line_number':2268,'multiline':False]['text':'/','line_number':2269,'multiline':False]['text':'/ @return  ShadaEntry  List of buffers to save, kSDItemBufferList entry.','line_number':2270,'multiline':False]['text':'/ Save search pattern to PossiblyFreedShadaEntry','line_number':2313,'multiline':False]['text':'/','line_number':2314,'multiline':False]['text':'/ @param[out]  ret_pse  Location where result will be saved.','line_number':2315,'multiline':False]['text':'/ @param[in]  get_pattern  Function used to get pattern.','line_number':2316,'multiline':False]['text':'/ @param[in]  is_substitute_pattern  True if pattern in question is substitute','line_number':2317,'multiline':False]['text':'/                                    pattern. Also controls whether some','line_number':2318,'multiline':False]['text':'/                                    fields should be initialized to default','line_number':2319,'multiline':False]['text':'/                                    or values from get_pattern.','line_number':2320,'multiline':False]['text':'/ @param[in]  search_last_used  Result of search_was_last_used().','line_number':2321,'multiline':False]['text':'/ @param[in]  search_highlighted  True if search pattern was highlighted by','line_number':2322,'multiline':False]['text':'/                                 &hlsearch and this information should be','line_number':2323,'multiline':False]['text':'/                                 saved.','line_number':2324,'multiline':False]['text':'/ Initialize registers for writing to the ShaDa file','line_number':2368,'multiline':False]['text':'/','line_number':2369,'multiline':False]['text':'/ @param[in]  wms  The WriteMergerState used when writing.','line_number':2370,'multiline':False]['text':'/ @param[in]  max_reg_lines  The maximum number of register lines.','line_number':2371,'multiline':False]['text':'/ Replace numbered mark in WriteMergerState','line_number':2409,'multiline':False]['text':'/','line_number':2410,'multiline':False]['text':'/ Frees the last mark, moves (including adjusting mark names) marks from idx','line_number':2411,'multiline':False]['text':'/ to the last-but-one one and saves the new mark at given index.','line_number':2412,'multiline':False]['text':'/','line_number':2413,'multiline':False]['text':'/ @param[out]  wms  Merger state to adjust.','line_number':2414,'multiline':False]['text':'/ @param[in]  idx  Index at which new mark should be placed.','line_number':2415,'multiline':False]['text':'/ @param[in]  entry  New mark.','line_number':2416,'multiline':False]['text':'/ Find buffers ignored due to their location.','line_number':2436,'multiline':False]['text':'/','line_number':2437,'multiline':False]['text':'/ @param[out]  removable_bufs  Cache of buffers ignored due to their location.','line_number':2438,'multiline':False]['text':'/ Translate a history type number to the associated character','line_number':2448,'multiline':False]['text':'/ Write ShaDa file','line_number':2469,'multiline':False]['text':'/','line_number':2470,'multiline':False]['text':'/ @param[in]  sd_writer  Structure containing file writer definition.','line_number':2471,'multiline':False]['text':'/ @param[in]  sd_reader  Structure containing file reader definition. If it is','line_number':2472,'multiline':False]['text':'/                        not NULL then contents of this file will be merged','line_number':2473,'multiline':False]['text':'/                        with current Neovim runtime.','line_number':2474,'multiline':False]['text':' Initialize history merger','line_number':2501,'multiline':False]['text':' Set b_last_cursor for all the buffers that have a window.','line_number':2529,'multiline':False]['text':'','line_number':2530,'multiline':False]['text':' It is needed to correctly save '"' mark on exit. Has a side effect of','line_number':2531,'multiline':False]['text':' setting '"' mark in all windows on :wshada to the current cursor','line_number':2532,'multiline':False]['text':' position (basically what :wviminfo used to do).','line_number':2533,'multiline':False]['text':' Write header','line_number':2540,'multiline':False]['text':' Write buffer list','line_number':2567,'multiline':False]['text':' Write some of the variables','line_number':2578,'multiline':False]['text':' Initialize jump list','line_number':2644,'multiline':False]['text':' Initialize search pattern','line_number':2651,'multiline':False]['text':' Initialize substitute search pattern','line_number':2655,'multiline':False]['text':' Initialize substitute replacement string','line_number':2659,'multiline':False]['text':' Initialize global marks','line_number':2678,'multiline':False]['text':' Initialize registers','line_number':2727,'multiline':False]['text':' Initialize buffers','line_number':2732,'multiline':False]['text':' Update numbered marks: '0' should be replaced with the current position,','line_number':2803,'multiline':False]['text':' '9' should be removed and all other marks shifted.','line_number':2804,'multiline':False]['text':' Write the rest','line_number':2823,'multiline':False]['text':'/ Write ShaDa file to a given location','line_number':2934,'multiline':False]['text':'/','line_number':2935,'multiline':False]['text':'/ @param[in]  fname    File to write to. If it is NULL or empty then default','line_number':2936,'multiline':False]['text':'/                      location is used.','line_number':2937,'multiline':False]['text':'/ @param[in]  nomerge  If true then old file is ignored.','line_number':2938,'multiline':False]['text':'/','line_number':2939,'multiline':False]['text':'/ @return OK if writing was successful, FAIL otherwise.','line_number':2940,'multiline':False]['text':' Try writing the file even if opening it emerged any issues besides','line_number':2963,'multiline':False]['text':' file not existing: maybe writing will succeed nevertheless.','line_number':2964,'multiline':False]['text':' Save permissions from the original file, with modifications:','line_number':2975,'multiline':False]['text':'                 ^3         ^1       ^2      ^2,3','line_number':2978,'multiline':False]['text':' 1: Strip SUID bit if any.','line_number':2979,'multiline':False]['text':' 2: Make sure that user can always read and write the result.','line_number':2980,'multiline':False]['text':' 3: If somebody happened to delete the file after it was opened for','line_number':2981,'multiline':False]['text':'    reading use u=rw permissions.','line_number':2982,'multiline':False]['text':' File already exists, try another name','line_number':2987,'multiline':False]['text':' Tried names from .tmp.a to .tmp.z, all failed. Something must be','line_number':2990,'multiline':False]['text':' wrong then.','line_number':2991,'multiline':False]['text':' For Unix we check the owner of the file.  It's not very nice','line_number':3064,'multiline':False]['text':' to overwrite a user's viminfo file after a "su root", with a','line_number':3065,'multiline':False]['text':' viminfo file that the user can't read.','line_number':3066,'multiline':False]['text':'/ Read marks information from ShaDa file','line_number':3123,'multiline':False]['text':'/','line_number':3124,'multiline':False]['text':'/ @return OK in case of success, FAIL otherwise.','line_number':3125,'multiline':False]['text':'/ Read all information from ShaDa file','line_number':3131,'multiline':False]['text':'/','line_number':3132,'multiline':False]['text':'/ @param[in]  fname    File to write to. If it is NULL or empty then default','line_number':3133,'multiline':False]['text':'/ @param[in]  forceit  If true, use forced reading (prioritize file contents','line_number':3134,'multiline':False]['text':'/                      over current Neovim state).','line_number':3135,'multiline':False]['text':'/ @param[in]  missing_ok  If true, do not error out when file is missing.','line_number':3136,'multiline':False]['text':'/','line_number':3137,'multiline':False]['text':'/ @return OK in case of success, FAIL otherwise.','line_number':3138,'multiline':False]['text':' It may appear that when !defined(ORDER_BIG_ENDIAN) actual order is big','line_number':3208,'multiline':False]['text':' endian. This variant is suboptimal, but it works regardless of actual','line_number':3209,'multiline':False]['text':' order.','line_number':3210,'multiline':False]['text':'/ Read given number of bytes into given buffer, display error if needed','line_number':3221,'multiline':False]['text':'/','line_number':3222,'multiline':False]['text':'/ @param[in]   sd_reader  Structure containing file reader definition.','line_number':3223,'multiline':False]['text':'/ @param[out]  buffer     Where to save the results.','line_number':3224,'multiline':False]['text':'/ @param[in]   length     How many bytes should be read.','line_number':3225,'multiline':False]['text':'/','line_number':3226,'multiline':False]['text':'/ @return kSDReadStatusSuccess if everything was OK, kSDReadStatusNotShaDa if','line_number':3227,'multiline':False]['text':'/         there were not enough bytes to read or kSDReadStatusReadError if','line_number':3228,'multiline':False]['text':'/         there was some error while reading.','line_number':3229,'multiline':False]['text':'/ Read next unsigned integer from file','line_number':3251,'multiline':False]['text':'/','line_number':3252,'multiline':False]['text':'/ Errors out if the result is not an unsigned integer.','line_number':3253,'multiline':False]['text':'/','line_number':3254,'multiline':False]['text':'/ Unlike msgpack own function this one works with `FILE *` and reads *exactly*','line_number':3255,'multiline':False]['text':'/ as much bytes as needed, making it possible to avoid both maintaining own','line_number':3256,'multiline':False]['text':'/ buffer and calling `fseek`.','line_number':3257,'multiline':False]['text':'/','line_number':3258,'multiline':False]['text':'/ One byte from file stream is always consumed, even if it is not correct.','line_number':3259,'multiline':False]['text':'/','line_number':3260,'multiline':False]['text':'/ @param[in]   sd_reader  Structure containing file reader definition.','line_number':3261,'multiline':False]['text':'/ @param[out]  result     Location where result is saved.','line_number':3262,'multiline':False]['text':'/','line_number':3263,'multiline':False]['text':'/ @return kSDReadStatusSuccess if reading was successful,','line_number':3264,'multiline':False]['text':'/         kSDReadStatusNotShaDa if there were not enough bytes to read or','line_number':3265,'multiline':False]['text':'/         kSDReadStatusReadError if reading failed for whatever reason.','line_number':3266,'multiline':False]['text':' Positive fixnum','line_number':3288,'multiline':False]['text':' uint8','line_number':3293,'multiline':False]['text':' uint16','line_number':3296,'multiline':False]['text':' uint32','line_number':3299,'multiline':False]['text':' uint64','line_number':3302,'multiline':False]['text':' NOLINT(readability/braces) ','line_number':3360,'multiline':True]['text':' NOLINT(readability/braces) ','line_number':3391,'multiline':True]['text':'/ Iterate over shada file contents','line_number':3450,'multiline':False]['text':'/','line_number':3451,'multiline':False]['text':'/ @param[in]   sd_reader  Structure containing file reader definition.','line_number':3452,'multiline':False]['text':'/ @param[out]  entry      Address where next entry contents will be saved.','line_number':3453,'multiline':False]['text':'/ @param[in]   flags      Flags, determining whether and which items should be','line_number':3454,'multiline':False]['text':'/                         skipped (see SRNIFlags enum).','line_number':3455,'multiline':False]['text':'/ @param[in]   max_kbyte  If non-zero, skip reading entries which have length','line_number':3456,'multiline':False]['text':'/                         greater then given.','line_number':3457,'multiline':False]['text':'/','line_number':3458,'multiline':False]['text':'/ @return Any value from ShaDaReadResult enum.','line_number':3459,'multiline':False]['text':' Set entry type to kSDItemMissing and also make sure that all pointers in','line_number':3466,'multiline':False]['text':' data union are NULL so they are safe to xfree(). This is needed in case','line_number':3467,'multiline':False]['text':' somebody calls goto shada_read_next_item_error before anything is set in','line_number':3468,'multiline':False]['text':' the switch.','line_number':3469,'multiline':False]['text':' First: manually unpack type, timestamp and length.','line_number':3475,'multiline':False]['text':' This is needed to avoid both seeking and having to maintain a buffer.','line_number':3476,'multiline':False]['text':' kSDItemUnknown cannot possibly pass that far because it is -1 and that','line_number':3511,'multiline':False]['text':' will fail in msgpack_read_uint64. But kSDItemMissing may and it will','line_number':3512,'multiline':False]['text':' otherwise be skipped because (1 << 0) will never appear in flags.','line_number':3513,'multiline':False]['text':' First entry is unknown or equal to "\n" (10)? Most likely this means that','line_number':3526,'multiline':False]['text':' current file is not a ShaDa file because first item should normally be','line_number':3527,'multiline':False]['text':' a header (excluding tests where first item is tested item). Check this by','line_number':3528,'multiline':False]['text':' parsing entry contents: in non-ShaDa files this will most likely result','line_number':3529,'multiline':False]['text':' in incomplete MessagePack string.','line_number':3530,'multiline':False]['text':' Zero byte','line_number':3778,'multiline':False]['text':' Separator character','line_number':3779,'multiline':False]['text':' A msgpack BIN could be a String or Blob; an additional VAR_TYPE_BLOB','line_number':3814,'multiline':False]['text':' element is stored with Blobs which can be used to differentiate them','line_number':3815,'multiline':False]['text':' XXX: Temporarily reassign `i` because the macros depend on it.','line_number':3893,'multiline':False]['text':' XXX: Restore `i`.','line_number':3907,'multiline':False]['text':'/ Check whether "name" is on removable media (according to 'shada')','line_number':3972,'multiline':False]['text':'/','line_number':3973,'multiline':False]['text':'/ @param[in]  name  Checked name.','line_number':3974,'multiline':False]['text':'/','line_number':3975,'multiline':False]['text':'/ @return True if it is, false otherwise.','line_number':3976,'multiline':False]['text':'/ Initialize ShaDa jumplist entries.','line_number':3999,'multiline':False]['text':'/','line_number':4000,'multiline':False]['text':'/ @param[in,out]  jumps           Array of ShaDa entries to set.','line_number':4001,'multiline':False]['text':'/ @param[in]      removable_bufs  Cache of buffers ignored due to their','line_number':4002,'multiline':False]['text':'/                                 location.','line_number':4003,'multiline':False]['text':'/','line_number':4004,'multiline':False]['text':'/ @return number of jumplist entries','line_number':4005,'multiline':False]['text':' Initialize jump list','line_number':4009,'multiline':False]['text':'/ Write registers ShaDa entries in given msgpack_sbuffer.','line_number':4056,'multiline':False]['text':'/','line_number':4057,'multiline':False]['text':'/ @param[in]  sbuf  target msgpack_sbuffer to write to.','line_number':4058,'multiline':False]['text':'/ Write jumplist ShaDa entries in given msgpack_sbuffer.','line_number':4077,'multiline':False]['text':'/','line_number':4078,'multiline':False]['text':'/ @param[in]  sbuf            target msgpack_sbuffer to write to.','line_number':4079,'multiline':False]['text':'/ Write buffer list ShaDa entry in given msgpack_sbuffer.','line_number':4096,'multiline':False]['text':'/','line_number':4097,'multiline':False]['text':'/ @param[in]  sbuf            target msgpack_sbuffer to write to.','line_number':4098,'multiline':False]['text':'/ Write global variables ShaDa entries in given msgpack_sbuffer.','line_number':4113,'multiline':False]['text':'/','line_number':4114,'multiline':False]['text':'/ @param[in]  sbuf            target msgpack_sbuffer to write to.','line_number':4115,'multiline':False]['text':'/ Wrapper for reading from msgpack_sbuffer.','line_number':4154,'multiline':False]['text':'/','line_number':4155,'multiline':False]['text':'/ @return number of bytes read.','line_number':4156,'multiline':False]['text':'/ Wrapper for read that ignores bytes read from msgpack_sbuffer.','line_number':4170,'multiline':False]['text':'/','line_number':4171,'multiline':False]['text':'/ Used for skipping.','line_number':4172,'multiline':False]['text':'/','line_number':4173,'multiline':False]['text':'/ @param[in,out]  sd_reader  ShaDaReadDef with msgpack_sbuffer.','line_number':4174,'multiline':False]['text':'/ @param[in]      offset     Amount of bytes to skip.','line_number':4175,'multiline':False]['text':'/','line_number':4176,'multiline':False]['text':'/ @return FAIL in case of failure, OK in case of success. May set','line_number':4177,'multiline':False]['text':'/         sd_reader->eof.','line_number':4178,'multiline':False]['text':'/ Prepare ShaDaReadDef with msgpack_sbuffer for reading.','line_number':4193,'multiline':False]['text':'/','line_number':4194,'multiline':False]['text':'/ @param[in]   sbuf       msgpack_sbuffer to read from.','line_number':4195,'multiline':False]['text':'/ @param[out]  sd_reader  Location where reader structure will be saved.','line_number':4196,'multiline':False]['text':'/ Read ShaDa from msgpack_sbuffer.','line_number':4211,'multiline':False]['text':'/','line_number':4212,'multiline':False]['text':'/ @param[in]  file   msgpack_sbuffer to read from.','line_number':4213,'multiline':False]['text':'/ @param[in]  flags  Flags, see ShaDaReadFileFlags enum.','line_number':4214,'multiline':False]