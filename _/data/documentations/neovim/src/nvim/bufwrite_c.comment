['text':' bufwrite.c: functions for writing a buffer','line_number':1,'multiline':False]['text':' size of emergency write buffer','line_number':69,'multiline':False]['text':' Structure to pass arguments from buf_write() to buf_write_bytes().','line_number':71,'multiline':False]['text':' file descriptor','line_number':73,'multiline':False]['text':' buffer with data to be written','line_number':74,'multiline':False]['text':' length of data','line_number':75,'multiline':False]['text':' FIO_ flags','line_number':76,'multiline':False]['text':' not converted bytes','line_number':77,'multiline':False]['text':' nr of bytes in bw_rest[]','line_number':78,'multiline':False]['text':' first write call','line_number':79,'multiline':False]['text':' buffer for writing converted chars','line_number':80,'multiline':False]['text':' size of bw_conv_buf','line_number':81,'multiline':False]['text':' set for conversion error','line_number':82,'multiline':False]['text':' first line with error or zero','line_number':83,'multiline':False]['text':' line number at start of buffer','line_number':84,'multiline':False]['text':' descriptor for iconv() or -1','line_number':85,'multiline':False]['text':'/ Convert a Unicode character to bytes.','line_number':92,'multiline':False]['text':'/','line_number':93,'multiline':False]['text':'/ @param c character to convert','line_number':94,'multiline':False]['text':'/ @param[in,out] pp pointer to store the result at','line_number':95,'multiline':False]['text':'/ @param flags FIO_ flags that specify which encoding to use','line_number':96,'multiline':False]['text':'/','line_number':97,'multiline':False]['text':'/ @return true for an error, false when it's OK.','line_number':98,'multiline':False]['text':' Make two words, ten bits of the character in each.  First','line_number':120,'multiline':False]['text':' word is 0xd800 - 0xdbff, second one 0xdc00 - 0xdfff','line_number':121,'multiline':False]['text':' Latin1','line_number':146,'multiline':False]['text':' Convert with iconv().','line_number':167,'multiline':False]['text':' Need to concatenate the remainder of the previous call and','line_number':169,'multiline':False]['text':' the bytes of the current call.  Use the end of the','line_number':170,'multiline':False]['text':' conversion buffer for this.','line_number':171,'multiline':False]['text':' output the initial shift state sequence','line_number':188,'multiline':False]['text':' There is a bug in iconv() on Linux (which appears to be','line_number':191,'multiline':False]['text':' wide-spread) which sets "to" to NULL and messes up "tolen".','line_number':192,'multiline':False]['text':' If iconv() has an error or there is not enough room, fail.','line_number':200,'multiline':False]['text':' copy remainder to ip->bw_rest[] to be used for the next call.','line_number':208,'multiline':False]['text':' extra flags','line_number':222,'multiline':False]['text':' Convert latin1 in the buffer to UTF-8 in the file.','line_number':225,'multiline':False]['text':' translate to buffer','line_number':226,'multiline':False]['text':' Convert UTF-8 bytes in the buffer to UCS-2, UCS-4, UTF-16 or','line_number':235,'multiline':False]['text':' Latin1 chars in the file.','line_number':236,'multiline':False]['text':' translate in-place (can only get shorter) or to buffer','line_number':237,'multiline':False]['text':' Use remainder of previous call.  Append the start of','line_number':241,'multiline':False]['text':' buf[] to get a full sequence.  Might still be too','line_number':242,'multiline':False]['text':' short!','line_number':243,'multiline':False]['text':' We have an incomplete byte sequence at the end to','line_number':248,'multiline':False]['text':' be written.  We can't convert it without the','line_number':249,'multiline':False]['text':' remaining bytes.  Keep them for the next call.','line_number':250,'multiline':False]['text':' We have an incomplete byte sequence at the end to','line_number':274,'multiline':False]['text':' be written.  We can't convert it without the','line_number':275,'multiline':False]['text':' remaining bytes.  Keep them for the next call.','line_number':276,'multiline':False]['text':'/ Call write() to write a number of bytes to the file.','line_number':317,'multiline':False]['text':'/ Handles 'encoding' conversion.','line_number':318,'multiline':False]['text':'/','line_number':319,'multiline':False]['text':'/ @return  FAIL for failure, OK otherwise.','line_number':320,'multiline':False]['text':' data to write','line_number':323,'multiline':False]['text':' length of data','line_number':324,'multiline':False]['text':' extra flags','line_number':325,'multiline':False]['text':' Skip conversion when writing the BOM.','line_number':327,'multiline':False]['text':' Only checking conversion, which is OK if we get here.','line_number':335,'multiline':False]['text':'/ Check modification time of file, before writing to it.','line_number':342,'multiline':False]['text':'/ The size isn't checked, because using a tool like "gzip" takes care of','line_number':343,'multiline':False]['text':'/ using the same timestamp but can't set the size.','line_number':344,'multiline':False]['text':' Don't overwrite messages here.','line_number':349,'multiline':False]['text':' Must give this prompt.','line_number':350,'multiline':False]['text':' Don't use emsg() here, don't want to flush the buffers.','line_number':351,'multiline':False]['text':' Always overwrite the file message now.','line_number':356,'multiline':False]['text':'/ Generate a BOM in "buf[4]" for encoding "name".','line_number':361,'multiline':False]['text':'/','line_number':362,'multiline':False]['text':'/ @return  the length of the BOM (zero when no BOM).','line_number':363,'multiline':False]['text':' Can't put a BOM in a non-Unicode file.','line_number':369,'multiline':False]['text':' UTF-8','line_number':374,'multiline':False]['text':' Apply PRE autocommands.','line_number':401,'multiline':False]['text':' Set curbuf to the buffer to be written.','line_number':402,'multiline':False]['text':' Careful: The autocommands may call buf_write() recursively!','line_number':403,'multiline':False]['text':' Set curwin/curbuf to buf and save a few things.','line_number':409,'multiline':False]['text':' Written everything correctly and BufWriteCmd has reset','line_number':432,'multiline':False]['text':' 'modified': Correct the undo information so that an','line_number':433,'multiline':False]['text':' undo now sets 'modified'.','line_number':434,'multiline':False]['text':' restore curwin/curbuf and a few other things','line_number':458,'multiline':False]['text':' In three situations we return here and don't write the file:','line_number':461,'multiline':False]['text':' 1. the autocommands deleted or unloaded the buffer.','line_number':462,'multiline':False]['text':' 2. The autocommands abort script processing.','line_number':463,'multiline':False]['text':' 3. If one of the "Cmd" autocommands was executed.','line_number':464,'multiline':False]['text':' restore the original '[ and '] positions','line_number':472,'multiline':False]['text':' An aborting error, interrupt or exception in the','line_number':485,'multiline':False]['text':' autocommands.','line_number':486,'multiline':False]['text':' The buffer was deleted.  We assume it was written','line_number':491,'multiline':False]['text':' (can't retry anyway).','line_number':492,'multiline':False]['text':' Assume the buffer was written, update the timestamp.','line_number':496,'multiline':False]['text':' Buffer still changed, the autocommands didn't work properly.','line_number':506,'multiline':False]['text':' The autocommands may have changed the number of lines in the file.','line_number':517,'multiline':False]['text':' When writing the whole file, adjust the end.','line_number':518,'multiline':False]['text':' When writing part of the file, assume that the autocommands only','line_number':519,'multiline':False]['text':' changed the number of lines that are to be written (tricky!).','line_number':520,'multiline':False]['text':' write all','line_number':522,'multiline':False]['text':' more lines','line_number':524,'multiline':False]['text':' less lines','line_number':526,'multiline':False]['text':' The autocommands may have changed the name of the buffer, which may','line_number':537,'multiline':False]['text':' be kept in fname, ffname and sfname.','line_number':538,'multiline':False]['text':' in case it was set by the previous read','line_number':559,'multiline':False]['text':' Apply POST autocommands.','line_number':561,'multiline':False]['text':' Careful: The autocommands may call buf_write() recursively!','line_number':562,'multiline':False]['text':' restore curwin/curbuf and a few other things','line_number':579,'multiline':False]['text':' not a file','line_number':626,'multiline':False]['text':' It's a device of some kind (or a fifo) which we can write to','line_number':635,'multiline':False]['text':' but for which we can't make a backup.','line_number':636,'multiline':False]['text':' Check for a writable device name.','line_number':650,'multiline':False]['text':'/ @param buf','line_number':677,'multiline':False]['text':'/ @param fname          File name','line_number':678,'multiline':False]['text':'/ @param overwriting','line_number':679,'multiline':False]['text':'/ @param forceit','line_number':680,'multiline':False]['text':'/ @param[out] file_info_old','line_number':681,'multiline':False]['text':'/ @param[out] perm','line_number':682,'multiline':False]['text':'/ @param[out] device','line_number':683,'multiline':False]['text':'/ @param[out] newfile','line_number':684,'multiline':False]['text':'/ @param[out] readonly','line_number':685,'multiline':False]['text':' overwritten file is read-only','line_number':694,'multiline':False]['text':' Check if the file is really writable (when renaming the file to','line_number':697,'multiline':False]['text':' make a backup we won't discover it later).','line_number':698,'multiline':False]['text':' If 'forceit' is false, check if the timestamp hasn't changed since reading the file.','line_number':710,'multiline':False]['text':' "yes"','line_number':728,'multiline':False]['text':' "auto"','line_number':730,'multiline':False]['text':' Don't rename the file when:','line_number':731,'multiline':False]['text':' - it's a hard link','line_number':732,'multiline':False]['text':' - it's a symbolic link','line_number':733,'multiline':False]['text':' - we don't have write permission in the directory','line_number':734,'multiline':False]['text':' Check if we can create a file and set the owner/group to','line_number':740,'multiline':False]['text':' the ones from the original file.','line_number':741,'multiline':False]['text':' First find a file name that doesn't exist yet (use some','line_number':742,'multiline':False]['text':' arbitrary numbers).','line_number':743,'multiline':False]['text':' can't write in directory','line_number':755,'multiline':False]['text':' Close the file before removing it, on MS-Windows we','line_number':767,'multiline':False]['text':' can't delete an open file.','line_number':768,'multiline':False]['text':' Break symlinks and/or hardlinks if we've been asked to.','line_number':775,'multiline':False]['text':' Symlinks.','line_number':780,'multiline':False]['text':' Hardlinks.','line_number':787,'multiline':False]['text':' make sure we have a valid backup extension to use','line_number':797,'multiline':False]['text':' Try to make the backup in each directory in the 'bdir' option.','line_number':803,'multiline':False]['text':'','line_number':804,'multiline':False]['text':' Unix semantics has it, that we may have a writable file,','line_number':805,'multiline':False]['text':' that cannot be recreated with a simple open(..., O_CREAT, ) e.g:','line_number':806,'multiline':False]['text':'  - the directory is not writable,','line_number':807,'multiline':False]['text':'  - the file may be a symbolic link,','line_number':808,'multiline':False]['text':'  - the file may belong to another user/group, etc.','line_number':809,'multiline':False]['text':'','line_number':810,'multiline':False]['text':' For these reasons, the existing writable file must be truncated','line_number':811,'multiline':False]['text':' and reused. Creation of a backup COPY will be attempted.','line_number':812,'multiline':False]['text':' Isolate one directory name, using an entry in 'bdir'.','line_number':815,'multiline':False]['text':' Ends with '//', Use Full path','line_number':832,'multiline':False]['text':' out of memory','line_number':842,'multiline':False]['text':'','line_number':848,'multiline':False]['text':' Make the backup file name.','line_number':849,'multiline':False]['text':'','line_number':850,'multiline':False]['text':' out of memory','line_number':857,'multiline':False]['text':' Check if backup file already exists.','line_number':861,'multiline':False]['text':'','line_number':864,'multiline':False]['text':' Backup file is same as original file.','line_number':865,'multiline':False]['text':' May happen when modname() gave the same file back (e.g. silly','line_number':866,'multiline':False]['text':' link). If we don't check here, we either ruin the file when','line_number':867,'multiline':False]['text':' copying or erase it after writing.','line_number':868,'multiline':False]['text':'','line_number':869,'multiline':False]['text':' no backup file to delete','line_number':870,'multiline':False]['text':' We are not going to keep the backup file, so don't','line_number':872,'multiline':False]['text':' delete an existing one, and try to use another name instead.','line_number':873,'multiline':False]['text':' Change one character, just before the extension.','line_number':874,'multiline':False]['text':'','line_number':875,'multiline':False]['text':' empty file name ???','line_number':877,'multiline':False]['text':' They all exist??? Must be something wrong.','line_number':884,'multiline':False]['text':' Try to create the backup file','line_number':893,'multiline':False]['text':' remove old backup, if present','line_number':895,'multiline':False]['text':' set file protection same as original file, but','line_number':898,'multiline':False]['text':' strip s-bit.','line_number':899,'multiline':False]['text':'','line_number':903,'multiline':False]['text':' Try to set the group of the backup same as the original file. If','line_number':904,'multiline':False]['text':' this fails, set the protection bits for the group same as the','line_number':905,'multiline':False]['text':' protection bits for others.','line_number':906,'multiline':False]['text':'','line_number':907,'multiline':False]['text':' copy the file','line_number':917,'multiline':False]['text':' Ignore errors when forceit is true.','line_number':943,'multiline':False]['text':' Make a backup by renaming the original file.','line_number':949,'multiline':False]['text':' If 'cpoptions' includes the "W" flag, we don't want to','line_number':951,'multiline':False]['text':' overwrite a read-only file.  But rename may be possible','line_number':952,'multiline':False]['text':' anyway, thus we need an extra check here.','line_number':953,'multiline':False]['text':' Form the backup file name - change path/fo.o.h to','line_number':959,'multiline':False]['text':' path/fo.o.h.bak Try all directories in 'backupdir', first one','line_number':960,'multiline':False]['text':' that works is used.','line_number':961,'multiline':False]['text':' Isolate one directory name and make the backup file name.','line_number':964,'multiline':False]['text':' path ends with '//', use full path','line_number':981,'multiline':False]['text':' If we are not going to keep the backup file, don't','line_number':1000,'multiline':False]['text':' delete an existing one, try to use another name.','line_number':1001,'multiline':False]['text':' Change one character, just before the extension.','line_number':1002,'multiline':False]['text':' empty file name ???','line_number':1005,'multiline':False]['text':' They all exist??? Must be something wrong!','line_number':1012,'multiline':False]['text':' Delete any existing backup and move the current version','line_number':1019,'multiline':False]['text':' to the backup. For safety, we don't remove the backup','line_number':1020,'multiline':False]['text':' until the write has finished successfully. And if the','line_number':1021,'multiline':False]['text':' 'backup' option is set, leave it around.','line_number':1022,'multiline':False]['text':' If the renaming of the original file to the backup file','line_number':1024,'multiline':False]['text':' works, quit here.','line_number':1025,'multiline':False]['text':'/','line_number':1026,'multiline':False]['text':' don't do the rename below','line_number':1031,'multiline':False]['text':'/ buf_write() - write to file "fname" lines "start" through "end"','line_number':1042,'multiline':False]['text':'/','line_number':1043,'multiline':False]['text':'/ We do our own buffering here because fwrite() is so slow.','line_number':1044,'multiline':False]['text':'/','line_number':1045,'multiline':False]['text':'/ If "forceit" is true, we don't care for errors when attempting backups.','line_number':1046,'multiline':False]['text':'/ In case of an error everything possible is done to restore the original','line_number':1047,'multiline':False]['text':'/ file.  But when "forceit" is true, we risk losing it.','line_number':1048,'multiline':False]['text':'/','line_number':1049,'multiline':False]['text':'/ When "reset_changed" is true and "append" == false and "start" == 1 and','line_number':1050,'multiline':False]['text':'/ "end" == curbuf->b_ml.ml_line_count, reset curbuf->b_changed.','line_number':1051,'multiline':False]['text':'/','line_number':1052,'multiline':False]['text':'/ This function must NOT use NameBuff (because it's called by autowrite()).','line_number':1053,'multiline':False]['text':'/','line_number':1054,'multiline':False]['text':'/','line_number':1055,'multiline':False]['text':'/ @param eap     for forced 'ff' and 'fenc', can be NULL!','line_number':1056,'multiline':False]['text':'/ @param append  append to the file','line_number':1057,'multiline':False]['text':'/','line_number':1058,'multiline':False]['text':'/ @return        FAIL for failure, OK otherwise','line_number':1059,'multiline':False]['text':' writing everything','line_number':1066,'multiline':False]['text':' safety check','line_number':1072,'multiline':False]['text':' This can happen during startup when there is a stray "w" in the','line_number':1076,'multiline':False]['text':' vimrc file.','line_number':1077,'multiline':False]['text':' Disallow writing in secure mode.','line_number':1082,'multiline':False]['text':' Avoid a crash for a long name.','line_number':1087,'multiline':False]['text':' must init bw_conv_buf and bw_iconv_fd before jumping to "fail"','line_number':1093,'multiline':False]['text':' info for buf_write_bytes()','line_number':1094,'multiline':False]['text':' After writing a file changedtick changes but we don't want to display','line_number':1101,'multiline':False]['text':' the line.','line_number':1102,'multiline':False]['text':' If there is no file name yet, use the one for the written file.','line_number':1105,'multiline':False]['text':' BF_NOTEDITED is set to reflect this (in case the write fails).','line_number':1106,'multiline':False]['text':' Don't do this when the write is for a filter command.','line_number':1107,'multiline':False]['text':' Don't do this when appending.','line_number':1108,'multiline':False]['text':' Only do this when 'cpoptions' contains the 'F' flag.','line_number':1109,'multiline':False]['text':' just in case autocmds made "buf" invalid','line_number':1121,'multiline':False]['text':' For Unix: Use the short file name whenever possible.','line_number':1128,'multiline':False]['text':' Avoids problems with networks and when directory names are changed.','line_number':1129,'multiline':False]['text':' Don't do this for Windows, a "cd" in a sub-shell may have moved us to','line_number':1130,'multiline':False]['text':' another directory, which we don't detect.','line_number':1131,'multiline':False]['text':' remember full fname','line_number':1132,'multiline':False]['text':' true if writing over original','line_number':1137,'multiline':False]['text':' don't wait for return yet','line_number':1140,'multiline':False]['text':' Set '[ and '] marks to the lines to be written.','line_number':1145,'multiline':False]['text':' restore the original '[ and '] positions','line_number':1159,'multiline':False]['text':' overwrite previous file message','line_number':1165,'multiline':False]['text':' don't overwrite previous file message','line_number':1167,'multiline':False]['text':' show that we are busy','line_number':1170,'multiline':False]['text':' always overwrite the file message now','line_number':1177,'multiline':False]['text':' can't allocate big buffer, use small one (to be able to write when out of','line_number':1182,'multiline':False]['text':' memory)','line_number':1183,'multiline':False]['text':' file permissions','line_number':1192,'multiline':False]['text':' true if file doesn't exist yet','line_number':1193,'multiline':False]['text':' writing to a device','line_number':1194,'multiline':False]['text':' overwritten file is read-only','line_number':1195,'multiline':False]['text':' allocated "fenc"','line_number':1197,'multiline':False]['text':' Get information about original file (if there is one).','line_number':1199,'multiline':False]['text':' ACL copied from original file to','line_number':1202,'multiline':False]['text':' backup or new file','line_number':1203,'multiline':False]['text':' For systems that support ACL: get the ACL from the original file.','line_number':1210,'multiline':False]['text':' If 'backupskip' is not empty, don't make a backup for some files.','line_number':1215,'multiline':False]['text':' copy the original file?','line_number':1221,'multiline':False]['text':' Save the value of got_int and reset it.  We don't want a previous','line_number':1223,'multiline':False]['text':' interruption cancel writing, only hitting CTRL-C while writing should','line_number':1224,'multiline':False]['text':' abort it.','line_number':1225,'multiline':False]['text':' Mark the buffer as 'being saved' to prevent changed buffer warnings','line_number':1229,'multiline':False]['text':' If we are not appending or filtering, the file exists, and the','line_number':1232,'multiline':False]['text':' 'writebackup', 'backup' or 'patchmode' option is set, need a backup.','line_number':1233,'multiline':False]['text':' When 'patchmode' is set also make a backup when appending.','line_number':1234,'multiline':False]['text':'','line_number':1235,'multiline':False]['text':' Do not make any backup, if 'writebackup' and 'backup' are both switched','line_number':1236,'multiline':False]['text':' off.  This helps when editing large files on almost-full disks.','line_number':1237,'multiline':False]['text':' 'w' bit has been set','line_number':1247,'multiline':False]['text':' When using ":w!" and the file was read-only: make it writable','line_number':1249,'multiline':False]['text':' When using ":w!" and writing to the current file, 'readonly' makes no','line_number':1259,'multiline':False]['text':' sense, reset it, unless 'Z' appears in 'cpoptions'.','line_number':1260,'multiline':False]['text':' set window title later','line_number':1263,'multiline':False]['text':' redraw status lines later','line_number':1264,'multiline':False]['text':' name of file to write to','line_number':1274,'multiline':False]['text':' If the original file is being overwritten, there is a small chance that','line_number':1276,'multiline':False]['text':' we crash in the middle of writing. Therefore the file is preserved now.','line_number':1277,'multiline':False]['text':' This makes all block numbers positive so that recovery does not need','line_number':1278,'multiline':False]['text':' the original file.','line_number':1279,'multiline':False]['text':' Don't do this if there is a backup file and we are exiting.','line_number':1280,'multiline':False]['text':' Default: write the file directly.  May write to a temp file for','line_number':1290,'multiline':False]['text':' multi-byte conversion.','line_number':1291,'multiline':False]['text':' effective 'fileencoding'','line_number':1294,'multiline':False]['text':' Check for forced 'fileencoding' from "++opt=val" argument.','line_number':1296,'multiline':False]['text':' Check if the file needs to be converted.','line_number':1305,'multiline':False]['text':' Check if UTF-8 to UCS-2/4 or Latin1 conversion needs to be done.  Or','line_number':1309,'multiline':False]['text':' Latin1 to Unicode conversion.  This is handled in buf_write_bytes().','line_number':1310,'multiline':False]['text':' Prepare the flags for it and allocate bw_conv_buf when needed.','line_number':1311,'multiline':False]['text':' Need to allocate a buffer to translate into.','line_number':1315,'multiline':False]['text':' FIO_UCS4','line_number':1318,'multiline':False]['text':' Use iconv() conversion when conversion is needed and it's not done','line_number':1329,'multiline':False]['text':' internally.','line_number':1330,'multiline':False]['text':' We're going to use iconv(), allocate a buffer to convert in.','line_number':1333,'multiline':False]['text':' When the file needs to be converted with 'charconvert' after','line_number':1341,'multiline':False]['text':' writing, write to a temp file instead and let the conversion','line_number':1342,'multiline':False]['text':' overwrite the original file.','line_number':1343,'multiline':False]['text':' Can't write without a tempfile!','line_number':1346,'multiline':False]['text':' no end-of-line written','line_number':1366,'multiline':False]['text':' If conversion is taking place, we may first pretend to write and check','line_number':1374,'multiline':False]['text':' for conversion errors.  Then loop again to write for real.','line_number':1375,'multiline':False]['text':' When not doing conversion this writes for real right away.','line_number':1376,'multiline':False]['text':' There is no need to check conversion when:','line_number':1378,'multiline':False]['text':' - there is no conversion','line_number':1379,'multiline':False]['text':' - we make a backup file, that can be restored in case of conversion','line_number':1380,'multiline':False]['text':' failure.','line_number':1381,'multiline':False]['text':' Make sure we don't write anything.','line_number':1387,'multiline':False]['text':' Open the file "wfname" for writing.','line_number':1391,'multiline':False]['text':' We may try to open the file twice: If we can't write to the file','line_number':1392,'multiline':False]['text':' and forceit is true we delete the existing file and try to','line_number':1393,'multiline':False]['text':' create a new one. If this still fails we may have lost the','line_number':1394,'multiline':False]['text':' original file!  (this may happen when the user reached his','line_number':1395,'multiline':False]['text':' quotum for number of files).','line_number':1396,'multiline':False]['text':' Appending will fail if the file does not exist and forceit is','line_number':1397,'multiline':False]['text':' false.','line_number':1398,'multiline':False]['text':' A forced write will try to create a new file if the old one','line_number':1405,'multiline':False]['text':' is still readonly. This may also happen when the directory','line_number':1406,'multiline':False]['text':' is read-only. In that case the os_remove() will fail.','line_number':1407,'multiline':False]['text':' Don't delete the file when it's a hard or symbolic link.','line_number':1412,'multiline':False]['text':' we write to the file, thus it should be marked','line_number':1420,'multiline':False]['text':' writable after all','line_number':1421,'multiline':False]['text':' don't remove when appending','line_number':1430,'multiline':False]['text':' don't remove when appending','line_number':1439,'multiline':False]['text':' If we failed to open the file, we don't need a backup. Throw it','line_number':1449,'multiline':False]['text':' away.  If we moved or removed the original file try to put the','line_number':1450,'multiline':False]['text':' backup in its place.','line_number':1451,'multiline':False]['text':' There is a small chance that we removed the original,','line_number':1454,'multiline':False]['text':' try to move the copy in its place.','line_number':1455,'multiline':False]['text':' This may not work if the vim_rename() fails.','line_number':1456,'multiline':False]['text':' In that case we leave the copy around.','line_number':1457,'multiline':False]['text':' If file does not exist, put the copy in its place','line_number':1458,'multiline':False]['text':' if original file does exist throw away the copy','line_number':1462,'multiline':False]['text':' try to put the original file back','line_number':1467,'multiline':False]['text':' if original file no longer exists give an extra warning','line_number':1472,'multiline':False]['text':' use "++bin", "++nobin" or 'binary'','line_number':1490,'multiline':False]['text':' Skip the BOM when appending and the file already existed, the BOM','line_number':1498,'multiline':False]['text':' only makes sense at the start of the file.','line_number':1499,'multiline':False]['text':' don't convert','line_number':1503,'multiline':False]['text':' Prepare for computing the hash value of the text.','line_number':1517,'multiline':False]['text':' The next while loop is done once for each character written.','line_number':1527,'multiline':False]['text':' Keep it fast!','line_number':1528,'multiline':False]['text':' replace newlines with NULs','line_number':1536,'multiline':False]['text':' Mac: replace CRs with NLs','line_number':1538,'multiline':False]['text':' write error: break loop','line_number':1547,'multiline':False]['text':' write failed or last line has no EOL: stop here','line_number':1555,'multiline':False]['text':' written the line, count it','line_number':1561,'multiline':False]['text':' EOL_MAC or EOL_DOS: write CR','line_number':1568,'multiline':False]['text':' write CR-NL','line_number':1569,'multiline':False]['text':' write error: break loop','line_number':1572,'multiline':False]['text':' Write error: break loop.','line_number':1584,'multiline':False]['text':' Interrupted, break loop.','line_number':1593,'multiline':False]['text':' write error','line_number':1601,'multiline':False]['text':' write trailing CTRL-Z','line_number':1607,'multiline':False]['text':' Stop when writing done or an error was encountered.','line_number':1611,'multiline':False]['text':' If no error happened until now, writing should be ok, so loop to','line_number':1616,'multiline':False]['text':' really write the buffer.','line_number':1617,'multiline':False]['text':' If we started writing, finish writing. Also when an error was','line_number':1620,'multiline':False]['text':' encountered.','line_number':1621,'multiline':False]['text':' On many journalling file systems there is a bug that causes both the','line_number':1623,'multiline':False]['text':' original and the backup file to be lost when halting the system right','line_number':1624,'multiline':False]['text':' after writing the file.  That's because only the meta-data is','line_number':1625,'multiline':False]['text':' journalled.  Syncing the file slows down the system, but assures it has','line_number':1626,'multiline':False]['text':' been written to disk and we don't lose it.','line_number':1627,'multiline':False]['text':' For a device do try the fsync() but don't complain if it does not work','line_number':1628,'multiline':False]['text':' (could be a pipe).','line_number':1629,'multiline':False]['text':' If the 'fsync' option is false, don't fsync().  Useful for laptops.','line_number':1630,'multiline':False]['text':' fsync not supported on this storage.','line_number':1633,'multiline':False]['text':' When creating a new file, set its owner/group to that of the original','line_number':1646,'multiline':False]['text':' file.  Get the new device and inode number.','line_number':1647,'multiline':False]['text':' don't change the owner when it's already OK, some systems remove','line_number':1649,'multiline':False]['text':' permission or ACL stuff','line_number':1650,'multiline':False]['text':' Set permission again, may have changed.','line_number':1656,'multiline':False]['text':' Set the file_id when creating a new file.','line_number':1662,'multiline':False]['text':' reset 'w' bit for security reasons','line_number':1674,'multiline':False]['text':' Set perm. of new file same as old file.','line_number':1677,'multiline':False]['text':' Probably need to set the ACL before changing the user (can't set the','line_number':1680,'multiline':False]['text':' ACL on a file the user doesn't own).','line_number':1681,'multiline':False]['text':' The file was written to a temp file, now it needs to be converted','line_number':1687,'multiline':False]['text':' with 'charconvert' to (overwrite) the output file.','line_number':1688,'multiline':False]['text':' Error encountered.','line_number':1701,'multiline':False]['text':' NOLINT(runtime/printf)','line_number':1709,'multiline':False]['text':' If we have a backup file, try to put it in place of the new file,','line_number':1720,'multiline':False]['text':' because the new file is probably corrupt.  This avoids losing the','line_number':1721,'multiline':False]['text':' original file when trying to make a backup when writing the file a','line_number':1722,'multiline':False]['text':' second time.','line_number':1723,'multiline':False]['text':' When "backup_copy" is set we need to copy the backup over the new','line_number':1724,'multiline':False]['text':' file.  Otherwise rename the backup file.','line_number':1725,'multiline':False]['text':' If this is OK, don't give the extra warning message.','line_number':1726,'multiline':False]['text':' This may take a while, if we were interrupted let the user','line_number':1729,'multiline':False]['text':' know we got the message.','line_number':1730,'multiline':False]['text':' copy the file.','line_number':1736,'multiline':False]['text':' success','line_number':1739,'multiline':False]['text':' compute number of written lines','line_number':1750,'multiline':False]['text':' may wait for return now','line_number':1751,'multiline':False]['text':' use shortname now, for the messages','line_number':1754,'multiline':False]['text':' may add [unix/dos/mac]','line_number':1784,'multiline':False]['text':' add line/char count','line_number':1788,'multiline':False]['text':' When written everything correctly: reset 'modified'.  Unless not','line_number':1800,'multiline':False]['text':' writing to the original file and '+' is not in 'cpoptions'.','line_number':1801,'multiline':False]['text':' b:changedtick may be incremented in unchanged() but that should not','line_number':1808,'multiline':False]['text':' trigger a TextChanged event.','line_number':1809,'multiline':False]['text':' If written to the current file, update the timestamp of the swap file','line_number':1816,'multiline':False]['text':' and reset the BF_WRITE_MASK flags. Also sets buf->b_mtime.','line_number':1817,'multiline':False]['text':' If we kept a backup until now, and we are in patch mode, then we make','line_number':1827,'multiline':False]['text':' the backup file our 'original' file.','line_number':1828,'multiline':False]['text':' If the original file does not exist yet','line_number':1833,'multiline':False]['text':' the current backup file becomes the original file','line_number':1834,'multiline':False]['text':' don't delete the file','line_number':1839,'multiline':False]['text':' If there is no backup file, remember that a (new) file was','line_number':1847,'multiline':False]['text':' created.','line_number':1848,'multiline':False]['text':' Remove the backup unless 'backup' option is set','line_number':1866,'multiline':False]['text':' Finish up.  We get here either after failure or success.','line_number':1875,'multiline':False]['text':' may wait for return now','line_number':1877,'multiline':False]['text':' Done saving, we accept changed buffer warnings again','line_number':1880,'multiline':False]['text':' - 100 to save some space for further error message','line_number':1896,'multiline':False]['text':' Set highlight for error messages.','line_number':1906,'multiline':False]['text':' Update the timestamp to avoid an "overwrite changed file"','line_number':1912,'multiline':False]['text':' prompt when writing again.','line_number':1913,'multiline':False]['text':' When writing the whole file and 'undofile' is set, also write the undo','line_number':1923,'multiline':False]['text':' file.','line_number':1924,'multiline':False]['text':' autocmds may abort script processing','line_number':1934,'multiline':False]