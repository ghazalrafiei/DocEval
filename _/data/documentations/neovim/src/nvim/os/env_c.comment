['text':' Environment inspection','line_number':1,'multiline':False]['text':' Because `uv_os_getenv` requires allocating, we must manage a map to maintain','line_number':52,'multiline':False]['text':' the behavior of `os_getenv`.','line_number':53,'multiline':False]['text':'/ Like getenv(), but returns NULL if the variable is empty.','line_number':56,'multiline':False]['text':'/ @see os_env_exists','line_number':57,'multiline':False]['text':' Found non-empty cached env var.','line_number':70,'multiline':False]['text':' NOTE: This risks incoherence if an in-process library changes the','line_number':71,'multiline':False]['text':'       environment without going through our os_setenv() wrapper.  If','line_number':72,'multiline':False]['text':'       that turns out to be a problem, we can just remove this codepath.','line_number':73,'multiline':False]['text':'/ Returns true if environment variable `name` is defined (even if empty).','line_number':97,'multiline':False]['text':'/ Returns false if not found (UV_ENOENT) or other failure.','line_number':98,'multiline':False]['text':' Use a tiny buffer because we don't care about the value: if uv_os_getenv()','line_number':105,'multiline':False]['text':' returns UV_ENOBUFS, the env var was found.','line_number':106,'multiline':False]['text':'/ Sets an environment variable.','line_number':117,'multiline':False]['text':'/','line_number':118,'multiline':False]['text':'/ Windows (Vim-compat): Empty string (:let $FOO="") undefines the env var.','line_number':119,'multiline':False]['text':'/','line_number':120,'multiline':False]['text':'/ @warning Existing pointers to the result of os_getenv("foo") are','line_number':121,'multiline':False]['text':'/          INVALID after os_setenv("foo", â€¦).','line_number':122,'multiline':False]['text':' Windows (Vim-compat): Empty string undefines the env var.','line_number':134,'multiline':False]['text':' libintl uses getenv() for LC_ALL/LANG/etc., so we must use _putenv_s().','line_number':144,'multiline':False]['text':' NOLINT','line_number':147,'multiline':False]['text':' Destroy the old map item. Do this AFTER uv_os_setenv(), because `value`','line_number':153,'multiline':False]['text':' could be a previous os_getenv() result.','line_number':154,'multiline':False]['text':'/ Unset environment variable','line_number':162,'multiline':False]['text':'/ Returns number of variables in the current environment variables block','line_number':177,'multiline':False]['text':' GetEnvironmentStringsW() result has this format:','line_number':188,'multiline':False]['text':'    var1=value1\0var2=value2\0...varN=valueN\0\0','line_number':189,'multiline':False]['text':'/ Copies the current environment variables into the given array, `env`.  Each','line_number':222,'multiline':False]['text':'/ array element is of the form "NAME=VALUE".','line_number':223,'multiline':False]['text':'/ Result must be freed by the caller.','line_number':224,'multiline':False]['text':'/','line_number':225,'multiline':False]['text':'/ @param[out]  env  array to populate with environment variables','line_number':226,'multiline':False]['text':'/ @param  env_size  size of `env`, @see os_fullenv_size','line_number':227,'multiline':False]['text':' GetEnvironmentStringsW() result has this format:','line_number':238,'multiline':False]['text':'    var1=value1\0var2=value2\0...varN=valueN\0\0','line_number':239,'multiline':False]['text':'/ Copy value of the environment variable at `index` in the current','line_number':267,'multiline':False]['text':'/ environment variables block.','line_number':268,'multiline':False]['text':'/ Result must be freed by the caller.','line_number':269,'multiline':False]['text':'/','line_number':270,'multiline':False]['text':'/ @param index nth item in environment variables block','line_number':271,'multiline':False]['text':'/ @return [allocated] environment variable's value, or NULL','line_number':272,'multiline':False]['text':' GetEnvironmentStringsW() result has this format:','line_number':284,'multiline':False]['text':'    var1=value1\0var2=value2\0...varN=valueN\0\0','line_number':285,'multiline':False]['text':' Some Windows env vars start with =, so skip over that to find the','line_number':295,'multiline':False]['text':' separator between name/value','line_number':296,'multiline':False]['text':' Advance past the name and NUL','line_number':306,'multiline':False]['text':' check if index is inside the environ array','line_number':320,'multiline':False]['text':'/ Get the process ID of the Neovim process.','line_number':336,'multiline':False]['text':'/','line_number':337,'multiline':False]['text':'/ @return the process ID.','line_number':338,'multiline':False]['text':'/ Gets the hostname of the current machine.','line_number':348,'multiline':False]['text':'/','line_number':349,'multiline':False]['text':'/ @param hostname   Buffer to store the hostname.','line_number':350,'multiline':False]['text':'/ @param size       Size of `hostname`.','line_number':351,'multiline':False]['text':'/ To get the "real" home directory:','line_number':387,'multiline':False]['text':'/   1. get value of $HOME','line_number':388,'multiline':False]['text':'/   2. if $HOME is not set, try the following','line_number':389,'multiline':False]['text':'/ For Windows:','line_number':390,'multiline':False]['text':'/   1. assemble homedir using HOMEDRIVE and HOMEPATH','line_number':391,'multiline':False]['text':'/   2. try os_homedir()','line_number':392,'multiline':False]['text':'/   3. resolve a direct reference to another system variable','line_number':393,'multiline':False]['text':'/   4. guess C drive','line_number':394,'multiline':False]['text':'/ For Unix:','line_number':395,'multiline':False]['text':'/   1. try os_homedir()','line_number':396,'multiline':False]['text':'/   2. go to that directory','line_number':397,'multiline':False]['text':'/     This also works with mounts and links.','line_number':398,'multiline':False]['text':'/     Don't do this for Windows, it will change the "current dir" for a drive.','line_number':399,'multiline':False]['text':'/   3. fall back to current working directory as a last resort','line_number':400,'multiline':False]['text':' In case we are called a second time.','line_number':406,'multiline':False]['text':' Typically, $HOME is not defined on Windows, unless the user has','line_number':413,'multiline':False]['text':' specifically defined it for Vim's sake. However, on Windows NT','line_number':414,'multiline':False]['text':' platforms, $HOMEDRIVE and $HOMEPATH are automatically defined for','line_number':415,'multiline':False]['text':' each user. Try constructing $HOME from these.','line_number':416,'multiline':False]['text':' Weird but true: $HOME may contain an indirect reference to another','line_number':435,'multiline':False]['text':' variable, esp. "%USERPROFILE%".  Happens when $USERPROFILE isn't set','line_number':436,'multiline':False]['text':' when $HOME is being set.','line_number':437,'multiline':False]['text':' Default home dir is C:/','line_number':452,'multiline':False]['text':' Best assumption we can make in such a situation.','line_number':453,'multiline':False]['text':' Empty means "undefined"','line_number':455,'multiline':False]['text':' Change to the directory and get the actual path.  This resolves','line_number':467,'multiline':False]['text':' links.  Don't do it when we can't return.','line_number':468,'multiline':False]['text':' Fall back to current working directory if home is not found','line_number':479,'multiline':False]['text':' http://docs.libuv.org/en/v1.x/misc.html#c.uv_os_homedir','line_number':496,'multiline':False]['text':'/ Call expand_env() and store the result in an allocated string.','line_number':526,'multiline':False]['text':'/ This is not very memory efficient, this expects the result to be freed','line_number':527,'multiline':False]['text':'/ again soon.','line_number':528,'multiline':False]['text':'/ @param src String containing environment variables to expand','line_number':529,'multiline':False]['text':'/ @see {expand_env}','line_number':530,'multiline':False]['text':'/ Similar to expand_env_save() but when "one" is `true` handle the string as','line_number':536,'multiline':False]['text':'/ one file name, i.e. only expand "~" at the start.','line_number':537,'multiline':False]['text':'/ @param src String containing environment variables to expand','line_number':538,'multiline':False]['text':'/ @param one Should treat as only one file name','line_number':539,'multiline':False]['text':'/ @see {expand_env}','line_number':540,'multiline':False]['text':'/ Expand environment variable with path name.','line_number':548,'multiline':False]['text':'/ "~/" is also expanded, using $HOME. For Unix "~user/" is expanded.','line_number':549,'multiline':False]['text':'/ Skips over "\ ", "\~" and "\$" (not for Win32 though).','line_number':550,'multiline':False]['text':'/ If anything fails no expansion is done and dst equals src.','line_number':551,'multiline':False]['text':'/','line_number':552,'multiline':False]['text':'/ @param src        Input string e.g. "$HOME/vim.hlp"','line_number':553,'multiline':False]['text':'/ @param dst[out]   Where to put the result','line_number':554,'multiline':False]['text':'/ @param dstlen     Maximum length of the result','line_number':555,'multiline':False]['text':'/ Expand environment variable with path name and escaping.','line_number':561,'multiline':False]['text':'/ @see expand_env','line_number':562,'multiline':False]['text':'/','line_number':563,'multiline':False]['text':'/ @param srcp       Input string e.g. "$HOME/vim.hlp"','line_number':564,'multiline':False]['text':'/ @param dst[out]   Where to put the result','line_number':565,'multiline':False]['text':'/ @param dstlen     Maximum length of the result','line_number':566,'multiline':False]['text':'/ @param esc        Escape spaces in expanded variables','line_number':567,'multiline':False]['text':'/ @param one        `srcp` is a single filename','line_number':568,'multiline':False]['text':'/ @param prefix     Start again after this (can be NULL)','line_number':569,'multiline':False]['text':' var was allocated, need to free it later','line_number':577,'multiline':False]['text':' at start of a name','line_number':578,'multiline':False]['text':' leave one char space for "\,"','line_number':583,'multiline':False]['text':' Skip over `=expr`.','line_number':585,'multiline':False]['text':' The variable name is copied into dst temporarily, because it may','line_number':607,'multiline':False]['text':' be a string in read-only memory and a NUL needs to be appended.','line_number':608,'multiline':False]['text':' environment var','line_number':609,'multiline':False]['text':' Unix has ${var-name} type environment vars','line_number':615,'multiline':False]['text':' ignore '{'','line_number':617,'multiline':False]['text':' NOLINT','line_number':621,'multiline':False]['text':' Verify that we have found the end of a Unix ${VAR} style variable','line_number':630,'multiline':False]['text':' home directory','line_number':644,'multiline':False]['text':' user directory','line_number':649,'multiline':False]['text':' Copy ~user to dst[], so we can put a NUL after it.','line_number':651,'multiline':False]['text':' Get the user directory. If this fails the shell is used to expand','line_number':662,'multiline':False]['text':' ~user, which is slower and may fail on old versions of /bin/sh.','line_number':663,'multiline':False]['text':' cannot expand user's home directory, so don't try','line_number':677,'multiline':False]['text':' for gcc','line_number':679,'multiline':False]['text':' UNIX','line_number':680,'multiline':False]['text':' If 'shellslash' is set change backslashes to forward slashes.','line_number':684,'multiline':False]['text':' Can't use slash_adjust(), p_ssl may be set temporarily.','line_number':685,'multiline':False]['text':' If "var" contains white space, escape it with a backslash.','line_number':698,'multiline':False]['text':' Required for ":e ~/tt" when $HOME includes a space.','line_number':699,'multiline':False]['text':' if var[] ends in a path separator and tail[] starts','line_number':715,'multiline':False]['text':' with it, skip a character','line_number':716,'multiline':False]['text':' copy at least one char','line_number':733,'multiline':False]['text':' Recognize the start of a new name, for '~'.','line_number':734,'multiline':False]['text':' Don't do this when "one" is true, to avoid expanding "~" in','line_number':735,'multiline':False]['text':' ":edit foo ~ foo".','line_number':736,'multiline':False]['text':'/ Check if the directory "vimdir/<version>" or "vimdir/runtime" exists.','line_number':759,'multiline':False]['text':'/ Return NULL if not, return its name in allocated memory otherwise.','line_number':760,'multiline':False]['text':'/ @param vimdir directory to test','line_number':761,'multiline':False]['text':'/ If `dirname + "/"` precedes `pend` in the path, return the pointer to','line_number':780,'multiline':False]['text':'/ `dirname + "/" + pend`.  Otherwise return `pend`.','line_number':781,'multiline':False]['text':'/','line_number':782,'multiline':False]['text':'/ Examples (path = /usr/local/share/nvim/runtime/doc/help.txt):','line_number':783,'multiline':False]['text':'/','line_number':784,'multiline':False]['text':'/   pend    = help.txt','line_number':785,'multiline':False]['text':'/   dirname = doc','line_number':786,'multiline':False]['text':'/   -> doc/help.txt','line_number':787,'multiline':False]['text':'/','line_number':788,'multiline':False]['text':'/   pend    = doc/help.txt','line_number':789,'multiline':False]['text':'/   dirname = runtime','line_number':790,'multiline':False]['text':'/   -> runtime/doc/help.txt','line_number':791,'multiline':False]['text':'/','line_number':792,'multiline':False]['text':'/   pend    = runtime/doc/help.txt','line_number':793,'multiline':False]['text':'/   dirname = vim74','line_number':794,'multiline':False]['text':'/   -> runtime/doc/help.txt','line_number':795,'multiline':False]['text':'/','line_number':796,'multiline':False]['text':'/ @param path    Path to a file','line_number':797,'multiline':False]['text':'/ @param pend    A suffix of the path','line_number':798,'multiline':False]['text':'/ @param dirname The immediate path fragment before the pend','line_number':799,'multiline':False]['text':'/ @return The new pend including dirname or just pend','line_number':800,'multiline':False]['text':'/ Iterates $PATH-like delimited list `val`.','line_number':814,'multiline':False]['text':'/','line_number':815,'multiline':False]['text':'/ @note Environment variables must not be modified during iteration.','line_number':816,'multiline':False]['text':'/','line_number':817,'multiline':False]['text':'/ @param[in]   delim Delimiter character.','line_number':818,'multiline':False]['text':'/ @param[in]   val   Value of the environment variable to iterate over.','line_number':819,'multiline':False]['text':'/ @param[in]   iter  Pointer used for iteration. Must be NULL on first','line_number':820,'multiline':False]['text':'/                    iteration.','line_number':821,'multiline':False]['text':'/ @param[out]  dir   Location where pointer to the start of the current','line_number':822,'multiline':False]['text':'/                    directory name should be saved. May be set to NULL.','line_number':823,'multiline':False]['text':'/ @param[out]  len   Location where current directory length should be saved.','line_number':824,'multiline':False]['text':'/','line_number':825,'multiline':False]['text':'/ @return Next iter argument value or NULL when iteration should stop.','line_number':826,'multiline':False]['text':'/ Iterates $PATH-like delimited list `val` in reverse order.','line_number':845,'multiline':False]['text':'/','line_number':846,'multiline':False]['text':'/ @note Environment variables must not be modified during iteration.','line_number':847,'multiline':False]['text':'/','line_number':848,'multiline':False]['text':'/ @param[in]   delim Delimiter character.','line_number':849,'multiline':False]['text':'/ @param[in]   val   Value of the environment variable to iterate over.','line_number':850,'multiline':False]['text':'/ @param[in]   iter  Pointer used for iteration. Must be NULL on first','line_number':851,'multiline':False]['text':'/                    iteration.','line_number':852,'multiline':False]['text':'/ @param[out]  dir   Location where pointer to the start of the current','line_number':853,'multiline':False]['text':'/                    directory name should be saved. May be set to NULL.','line_number':854,'multiline':False]['text':'/ @param[out]  len   Location where current directory length should be saved.','line_number':855,'multiline':False]['text':'/','line_number':856,'multiline':False]['text':'/ @return Next iter argument value or NULL when iteration should stop.','line_number':857,'multiline':False]['text':'/ @param[out] exe_name should be at least MAXPATHL in size','line_number':878,'multiline':False]['text':' TODO(bfredl): param could have been written as "char exe_name[MAXPATHL]"','line_number':881,'multiline':False]['text':' but c_grammar.lua does not recognize it (yet).','line_number':882,'multiline':False]['text':' remove the trailing "nvim.exe"','line_number':885,'multiline':False]['text':' remove the trailing "bin/"','line_number':887,'multiline':False]['text':'/ Vim getenv() wrapper with special handling of $HOME, $VIM, $VIMRUNTIME,','line_number':890,'multiline':False]['text':'/ allowing the user to override the Nvim runtime directory at runtime.','line_number':891,'multiline':False]['text':'/ Result must be freed by the caller.','line_number':892,'multiline':False]['text':'/','line_number':893,'multiline':False]['text':'/ @param name Environment variable to expand','line_number':894,'multiline':False]['text':'/ @return [allocated] Expanded environment variable, or NULL','line_number':895,'multiline':False]['text':' init_path() should have been called before now.','line_number':898,'multiline':False]['text':' When expanding $VIMRUNTIME fails, try using $VIM/vim<version> or $VIM.','line_number':917,'multiline':False]['text':' Don't do this when default_vimruntime_dir is non-empty.','line_number':918,'multiline':False]['text':' When expanding $VIM or $VIMRUNTIME fails, try using:','line_number':934,'multiline':False]['text':' - the directory name from 'helpfile' (unless it contains '$')','line_number':935,'multiline':False]['text':' - the executable name from argv[0]','line_number':936,'multiline':False]['text':' Find runtime path relative to the nvim binary: ../share/nvim/runtime','line_number':943,'multiline':False]['text':' remove the file name','line_number':952,'multiline':False]['text':' remove "doc/" from 'helpfile', if present','line_number':955,'multiline':False]['text':' for $VIM, remove "runtime/" or "vim54/", if present','line_number':960,'multiline':False]['text':' remove trailing path separator','line_number':966,'multiline':False]['text':' check that the result is a directory name','line_number':971,'multiline':False]['text':' When there is a pathdef.c file we can use default_vim_dir and','line_number':984,'multiline':False]['text':' default_vimruntime_dir','line_number':985,'multiline':False]['text':' Only use default_vimruntime_dir when it is not empty','line_number':987,'multiline':False]['text':' Set the environment variable, so that the new value can be found fast','line_number':999,'multiline':False]['text':' next time, and others can also use it (e.g. Perl).','line_number':1000,'multiline':False]['text':'/ Replace home directory by "~" in each space or comma separated file name in','line_number':1013,'multiline':False]['text':'/ 'src'.','line_number':1014,'multiline':False]['text':'/','line_number':1015,'multiline':False]['text':'/ Replace home directory with tilde in each file name','line_number':1016,'multiline':False]['text':'/','line_number':1017,'multiline':False]['text':'/ If anything fails (except when out of space) dst equals src.','line_number':1018,'multiline':False]['text':'/','line_number':1019,'multiline':False]['text':'/ @param[in]  buf  When not NULL, uses this buffer to check whether it is','line_number':1020,'multiline':False]['text':'/                  a help file. If it is then path to file is removed','line_number':1021,'multiline':False]['text':'/                  completely, `one` is ignored and assumed to be true.','line_number':1022,'multiline':False]['text':'/ @param[in]  src  Input file names. Assumed to be a space/comma separated','line_number':1023,'multiline':False]['text':'/                  list unless `one` is true.','line_number':1024,'multiline':False]['text':'/ @param[out]  dst  Where to put the result.','line_number':1025,'multiline':False]['text':'/ @param[in]  dstlen  Destination length.','line_number':1026,'multiline':False]['text':'/ @param[in]  one  If true, assumes source is a single file name and not','line_number':1027,'multiline':False]['text':'/                  a list of them.','line_number':1028,'multiline':False]['text':'/','line_number':1029,'multiline':False]['text':'/ @return length of the string put into dst, does not include NUL byte.','line_number':1030,'multiline':False]['text':' We check both the value of the $HOME environment variable and the','line_number':1048,'multiline':False]['text':' "real" home directory.','line_number':1049,'multiline':False]['text':' Remove the trailing / that is added to a directory.','line_number':1072,'multiline':False]['text':' Here we are at the beginning of a file name.','line_number':1086,'multiline':False]['text':' First, check to see if the beginning of the file name matches','line_number':1087,'multiline':False]['text':' $HOME or the "real" home directory. Check that there is a '/'','line_number':1088,'multiline':False]['text':' after the match (so that if e.g. the file is "/home/pieter/bla",','line_number':1089,'multiline':False]['text':' and the home directory is "/home/piet", the file does not end up','line_number':1090,'multiline':False]['text':' as "~er/bla" (which would seem to indicate the file "bla" in user','line_number':1091,'multiline':False]['text':' er's home directory)).','line_number':1092,'multiline':False]['text':' Do not add directory separator into dst, because dst is','line_number':1106,'multiline':False]['text':' expected to just return the directory name without the','line_number':1107,'multiline':False]['text':' directory separator '/'.','line_number':1108,'multiline':False]['text':' Avoid overflowing below.','line_number':1119,'multiline':False]['text':' if (!one) skip to separator: space or comma.','line_number':1121,'multiline':False]['text':' Avoid overflowing below.','line_number':1126,'multiline':False]['text':' Skip separator.','line_number':1128,'multiline':False]['text':' If (dstlen == 0) out of space, what to do???','line_number':1133,'multiline':False]['text':'/ Like home_replace, store the replaced string in allocated memory.','line_number':1143,'multiline':False]['text':'/ @param buf When not NULL, check for help files','line_number':1144,'multiline':False]['text':'/ @param src Input file name','line_number':1145,'multiline':False]['text':' space for "~/" and trailing NUL','line_number':1149,'multiline':False]['text':' just in case','line_number':1150,'multiline':False]['text':'/ Function given to ExpandGeneric() to obtain an environment variable name.','line_number':1158,'multiline':False]['text':'/ Appends the head of `fname` to $PATH and sets it in the environment.','line_number':1171,'multiline':False]['text':'/','line_number':1172,'multiline':False]['text':'/ @param fname  Full path whose parent directory will be appended to $PATH.','line_number':1173,'multiline':False]['text':'/','line_number':1174,'multiline':False]['text':'/ @return true if `path` was appended-to','line_number':1175,'multiline':False]['text':' 8191 (plus NUL) is considered the practical maximum.','line_number':1180,'multiline':False]['text':' No prescribed maximum on unix.','line_number':1183,'multiline':False]['text':'/ Returns true if `sh` looks like it resolves to "cmd.exe".','line_number':1215,'multiline':False]['text':'/ Removes environment variable "name" and take care of side effects.','line_number':1232,'multiline':False]['text':' "homedir" is not cleared, keep using the old value until $HOME is set.','line_number':1237,'multiline':False]['text':'/ Set environment variable "name" and take care of side effects.','line_number':1245,'multiline':False]