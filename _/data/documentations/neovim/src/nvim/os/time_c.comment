['text':'/ Gets a high-resolution (nanosecond), monotonically-increasing time relative','line_number':24,'multiline':False]['text':'/ to an arbitrary time in the past.','line_number':25,'multiline':False]['text':'/','line_number':26,'multiline':False]['text':'/ Not related to the time of day and therefore not subject to clock drift.','line_number':27,'multiline':False]['text':'/','line_number':28,'multiline':False]['text':'/ @return Relative time value with nanosecond precision.','line_number':29,'multiline':False]['text':'/ Gets a millisecond-resolution, monotonically-increasing time relative to an','line_number':36,'multiline':False]['text':'/ arbitrary time in the past.','line_number':37,'multiline':False]['text':'/','line_number':38,'multiline':False]['text':'/ Not related to the time of day and therefore not subject to clock drift.','line_number':39,'multiline':False]['text':'/ The value is cached by the loop, it will not change until the next','line_number':40,'multiline':False]['text':'/ loop-tick (unless uv_update_time is called).','line_number':41,'multiline':False]['text':'/','line_number':42,'multiline':False]['text':'/ @return Relative time value with millisecond precision.','line_number':43,'multiline':False]['text':'/ Sleeps for `ms` milliseconds.','line_number':50,'multiline':False]['text':'/','line_number':51,'multiline':False]['text':'/ @see uv_sleep() (libuv v1.34.0)','line_number':52,'multiline':False]['text':'/','line_number':53,'multiline':False]['text':'/ @param ms          Number of milliseconds to sleep','line_number':54,'multiline':False]['text':'/ @param ignoreinput If true, only SIGINT (CTRL-C) can interrupt.','line_number':55,'multiline':False]['text':'/ Sleeps for `ms` milliseconds without checking for events or interrupts.','line_number':66,'multiline':False]['text':'/','line_number':67,'multiline':False]['text':'/ This blocks even "fast" events which is quite disruptive. This should only','line_number':68,'multiline':False]['text':'/ be used in debug code. Prefer os_delay() and decide if the delay should be','line_number':69,'multiline':False]['text':'/ interrupted by input or only a CTRL-C.','line_number':70,'multiline':False]['text':'/','line_number':71,'multiline':False]['text':'/ @see uv_sleep() (libuv v1.34.0)','line_number':72,'multiline':False]['text':'/','line_number':73,'multiline':False]['text':'/ @param us          Number of microseconds to sleep.','line_number':74,'multiline':False]['text':' Cache of the current timezone name as retrieved from TZ, or an empty string','line_number':83,'multiline':False]['text':' where unset, up to 64 octets long including trailing null byte.','line_number':84,'multiline':False]['text':'/ Portable version of POSIX localtime_r()','line_number':87,'multiline':False]['text':'/','line_number':88,'multiline':False]['text':'/ @return NULL in case of error','line_number':89,'multiline':False]['text':' POSIX provides localtime_r() as a thread-safe version of localtime().','line_number':94,'multiline':False]['text':'','line_number':95,'multiline':False]['text':' Check to see if the environment variable TZ has changed since the last run.','line_number':96,'multiline':False]['text':' Call tzset(3) to update the global timezone variables if it has.','line_number':97,'multiline':False]['text':' POSIX standard doesn't require localtime_r() implementations to do that','line_number':98,'multiline':False]['text':' as it does with localtime(), and we don't want to call tzset() every time.','line_number':99,'multiline':False]['text':' NOLINT(runtime/threadsafe_fn)','line_number':108,'multiline':False]['text':' Windows version of localtime() is thread-safe.','line_number':110,'multiline':False]['text':' See http://msdn.microsoft.com/en-us/library/bf12f0hc%28VS.80%29.aspx','line_number':111,'multiline':False]['text':' NOLINT(runtime/threadsafe_fn)','line_number':112,'multiline':False]['text':'/ Gets the current Unix timestamp and adjusts it to local time.','line_number':121,'multiline':False]['text':'/','line_number':122,'multiline':False]['text':'/ @param result Pointer to a 'struct tm' where the result should be placed','line_number':123,'multiline':False]['text':'/ @return A pointer to a 'struct tm' in the current time zone (the 'result'','line_number':124,'multiline':False]['text':'/         argument) or NULL in case of error','line_number':125,'multiline':False]['text':'/ Portable version of POSIX ctime_r()','line_number':132,'multiline':False]['text':'/','line_number':133,'multiline':False]['text':'/ @param clock[in]','line_number':134,'multiline':False]['text':'/ @param result[out] Pointer to a 'char' where the result should be placed','line_number':135,'multiline':False]['text':'/ @param result_len length of result buffer','line_number':136,'multiline':False]['text':'/ @return human-readable string of current local time','line_number':137,'multiline':False]['text':' MSVC returns NULL for an invalid value of seconds.','line_number':144,'multiline':False]['text':' xgettext:no-c-format','line_number':148,'multiline':False]['text':' Quoting "man strftime":','line_number':150,'multiline':False]['text':' > If the length of the result string (including the terminating','line_number':151,'multiline':False]['text':' > null byte) would exceed max bytes, then strftime() returns 0,','line_number':152,'multiline':False]['text':' > and the contents of the array are undefined.','line_number':153,'multiline':False]['text':'/ Gets the current Unix timestamp and adjusts it to local time.','line_number':163,'multiline':False]['text':'/','line_number':164,'multiline':False]['text':'/ @param result[out] Pointer to a 'char' where the result should be placed','line_number':165,'multiline':False]['text':'/ @param result_len length of result buffer','line_number':166,'multiline':False]['text':'/ @return human-readable string of current local time','line_number':167,'multiline':False]['text':'/ Portable version of POSIX strptime()','line_number':175,'multiline':False]['text':'/','line_number':176,'multiline':False]['text':'/ @param str[in]  string to convert','line_number':177,'multiline':False]['text':'/ @param format[in]  format to parse "str"','line_number':178,'multiline':False]['text':'/ @param tm[out]  time representation of "str"','line_number':179,'multiline':False]['text':'/ @return Pointer to first unprocessed character or NULL','line_number':180,'multiline':False]['text':'/ Obtains the current Unix timestamp.','line_number':191,'multiline':False]['text':'/','line_number':192,'multiline':False]['text':'/ @return Seconds since epoch.','line_number':193,'multiline':False]