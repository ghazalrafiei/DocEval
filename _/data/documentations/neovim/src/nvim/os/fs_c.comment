['text':' fs.c -- filesystem access','line_number':1,'multiline':False]['text':' Many fs functions from libuv return that value on success.','line_number':78,'multiline':False]['text':'/ Changes the current directory to `path`.','line_number':81,'multiline':False]['text':'/','line_number':82,'multiline':False]['text':'/ @return 0 on success, or negative error code.','line_number':83,'multiline':False]['text':'/ Get the name of current directory.','line_number':95,'multiline':False]['text':'/','line_number':96,'multiline':False]['text':'/ @param buf Buffer to store the directory name.','line_number':97,'multiline':False]['text':'/ @param len Length of `buf`.','line_number':98,'multiline':False]['text':'/ @return `OK` for success, `FAIL` for failure.','line_number':99,'multiline':False]['text':'/ Check if the given path is a directory and not a symlink to a directory.','line_number':111,'multiline':False]['text':'/ @return `true` if `name` is a directory and NOT a symlink to a directory.','line_number':112,'multiline':False]['text':'/         `false` if `name` is not a directory or if an error occurred.','line_number':113,'multiline':False]['text':'/ Check if the given path exists and is a directory.','line_number':127,'multiline':False]['text':'/','line_number':128,'multiline':False]['text':'/ @return `true` if `name` is a directory.','line_number':129,'multiline':False]['text':'/ Check what `name` is:','line_number':141,'multiline':False]['text':'/ @return NODE_NORMAL: file or directory (or doesn't exist)','line_number':142,'multiline':False]['text':'/         NODE_WRITABLE: writable device, socket, fifo, etc.','line_number':143,'multiline':False]['text':'/         NODE_OTHER: non-writable things','line_number':144,'multiline':False]['text':' Unix','line_number':148,'multiline':False]['text':' File doesn't exist.','line_number':151,'multiline':False]['text':' uv_handle_type does not distinguish BLK and DIR.','line_number':153,'multiline':False]['text':'    Related: https://github.com/joyent/libuv/pull/1421','line_number':154,'multiline':False]['text':' block device isn't writable','line_number':158,'multiline':False]['text':' Everything else is writable?','line_number':161,'multiline':False]['text':' buf_write() expects NODE_WRITABLE for char device /dev/stderr.','line_number':162,'multiline':False]['text':' Windows','line_number':164,'multiline':False]['text':' Edge case from Vim os_win32.c:','line_number':165,'multiline':False]['text':' We can't open a file with a name "\\.\con" or "\\.\prn", trying to read','line_number':166,'multiline':False]['text':' from it later will cause Vim to hang. Thus return NODE_WRITABLE here.','line_number':167,'multiline':False]['text':' Vim os_win32.c:mch_nodetype does (since 7.4.015):','line_number':172,'multiline':False]['text':'    wn = enc_to_utf16(name, NULL);','line_number':173,'multiline':False]['text':'    hFile = CreatFile(wn, ...)','line_number':174,'multiline':False]['text':' to get a HANDLE. Whereas libuv just calls _get_osfhandle() on the fd we','line_number':175,'multiline':False]['text':' give it. But uv_fs_open later calls fs__capture_path which does a similar','line_number':176,'multiline':False]['text':' utf8-to-utf16 dance and saves us the hassle.','line_number':177,'multiline':False]['text':' macOS: os_open(/dev/stderr) would return UV_EACCES.','line_number':179,'multiline':False]['text':' open() failed.','line_number':185,'multiline':False]['text':' FILE_TYPE_CHAR','line_number':194,'multiline':False]['text':' FILE_TYPE_DISK','line_number':196,'multiline':False]['text':' not handled explicitly in Vim os_win32.c','line_number':198,'multiline':False]['text':' unix only','line_number':199,'multiline':False]['text':' unix only','line_number':200,'multiline':False]['text':' Vim os_win32.c default','line_number':203,'multiline':False]['text':'/ Gets the absolute path of the currently running executable.','line_number':208,'multiline':False]['text':'/ May fail if procfs is missing. #6734','line_number':209,'multiline':False]['text':'/ @see path_exepath','line_number':210,'multiline':False]['text':'/','line_number':211,'multiline':False]['text':'/ @param[out] buffer Full path to the executable.','line_number':212,'multiline':False]['text':'/ @param[in]  size   Size of `buffer`.','line_number':213,'multiline':False]['text':'/','line_number':214,'multiline':False]['text':'/ @return 0 on success, or libuv error code.','line_number':215,'multiline':False]['text':'/ Checks if the file `name` is executable.','line_number':222,'multiline':False]['text':'/','line_number':223,'multiline':False]['text':'/ @param[in]  name     Filename to check.','line_number':224,'multiline':False]['text':'/ @param[out,allocated] abspath  Returns resolved exe path, if not NULL.','line_number':225,'multiline':False]['text':'/ @param[in] use_path  Also search $PATH.','line_number':226,'multiline':False]['text':'/','line_number':227,'multiline':False]['text':'/ @return true if `name` is executable and','line_number':228,'multiline':False]['text':'/   - can be found in $PATH,','line_number':229,'multiline':False]['text':'/   - is relative to current dir or','line_number':230,'multiline':False]['text':'/   - is absolute.','line_number':231,'multiline':False]['text':'/','line_number':232,'multiline':False]['text':'/ @return `false` otherwise.','line_number':233,'multiline':False]['text':' Must have path separator, cannot execute files in the current directory.','line_number':241,'multiline':False]['text':'/ Returns true if `name` is an executable file.','line_number':253,'multiline':False]['text':'/','line_number':254,'multiline':False]['text':'/ @param[in]            name     Filename to check.','line_number':255,'multiline':False]['text':'/ @param[out,allocated] abspath  Returns full exe path, if not NULL.','line_number':256,'multiline':False]['text':' Windows does not have exec bit; just check if the file exists and is not','line_number':267,'multiline':False]['text':' a directory.','line_number':268,'multiline':False]['text':'/ Checks if file `name` is executable under any of these conditions:','line_number':284,'multiline':False]['text':'/ - extension is in $PATHEXT and `name` is executable','line_number':285,'multiline':False]['text':'/ - result of any $PATHEXT extension appended to `name` is executable','line_number':286,'multiline':False]['text':' If $PATHEXT itself contains dot:','line_number':303,'multiline':False]['text':' Skip it.','line_number':308,'multiline':False]['text':'/ Checks if a file is in `$PATH` and is executable.','line_number':335,'multiline':False]['text':'/','line_number':336,'multiline':False]['text':'/ @param[in]  name  Filename to check.','line_number':337,'multiline':False]['text':'/ @param[out] abspath  Returns resolved executable path, if not NULL.','line_number':338,'multiline':False]['text':'/','line_number':339,'multiline':False]['text':'/ @return `true` if `name` is an executable inside `$PATH`.','line_number':340,'multiline':False]['text':' Prepend ".;" to $PATH.','line_number':350,'multiline':False]['text':' Walk through all entries in $PATH to check if "name" exists there and','line_number':361,'multiline':False]['text':' is an executable file.','line_number':362,'multiline':False]['text':' Combine the $PATH segment with `name`.','line_number':368,'multiline':False]['text':' End of $PATH without finding any executable called name.','line_number':382,'multiline':False]['text':'/ Opens or creates a file and returns a non-negative integer representing','line_number':395,'multiline':False]['text':'/ the lowest-numbered unused file descriptor, for use in subsequent system','line_number':396,'multiline':False]['text':'/ calls (read, write, lseek, fcntl, etc.). If the operation fails, a libuv','line_number':397,'multiline':False]['text':'/ error code is returned, and no file is created or modified.','line_number':398,'multiline':False]['text':'/','line_number':399,'multiline':False]['text':'/ @param path Filename','line_number':400,'multiline':False]['text':'/ @param flags Bitwise OR of flags defined in <fcntl.h>','line_number':401,'multiline':False]['text':'/ @param mode Permissions for the newly-created file (IGNORED if 'flags' is','line_number':402,'multiline':False]['text':'/        not `O_CREAT` or `O_TMPFILE`), subject to the current umask','line_number':403,'multiline':False]['text':'/ @return file descriptor, or negative error code on failure','line_number':404,'multiline':False]['text':' uv_fs_open asserts on NULL. #7561','line_number':407,'multiline':False]['text':'/ Compatibility wrapper conforming to fopen(3).','line_number':415,'multiline':False]['text':'/','line_number':416,'multiline':False]['text':'/ Windows: works with UTF-16 filepaths by delegating to libuv (os_open).','line_number':417,'multiline':False]['text':'/','line_number':418,'multiline':False]['text':'/ Future: remove this, migrate callers to os/fileio.c ?','line_number':419,'multiline':False]['text':'/         But file_open_fd does not support O_RDWR yet.','line_number':420,'multiline':False]['text':'/','line_number':421,'multiline':False]['text':'/ @param path  Filename','line_number':422,'multiline':False]['text':'/ @param flags  String flags, one of { r w a r+ w+ a+ rb wb ab }','line_number':423,'multiline':False]['text':'/ @return FILE pointer, or NULL on error.','line_number':424,'multiline':False]['text':' Per table in fopen(3) manpage.','line_number':429,'multiline':False]['text':' char 0 must be one of ('r','w','a').','line_number':450,'multiline':False]['text':' char 1 is always '+' ('b' is handled above).','line_number':451,'multiline':False]['text':' Per fopen(3) manpage: default to 0666, it will be umask-adjusted.','line_number':467,'multiline':False]['text':'/ Sets file descriptor `fd` to close-on-exec.','line_number':475,'multiline':False]['text':'','line_number':476,'multiline':False]['text':' @return -1 if failed to set, 0 otherwise.','line_number':477,'multiline':False]['text':' No FD_CLOEXEC flag. On Windows, the file should have been opened with','line_number':499,'multiline':False]['text':' O_NOINHERIT anyway.','line_number':500,'multiline':False]['text':'/ Close a file','line_number':504,'multiline':False]['text':'/','line_number':505,'multiline':False]['text':'/ @return 0 or libuv error code on failure.','line_number':506,'multiline':False]['text':'/ Duplicate file descriptor','line_number':514,'multiline':False]['text':'/','line_number':515,'multiline':False]['text':'/ @param[in]  fd  File descriptor to duplicate.','line_number':516,'multiline':False]['text':'/','line_number':517,'multiline':False]['text':'/ @return New file descriptor or libuv error code (< 0).','line_number':518,'multiline':False]['text':'/ Read from a file','line_number':537,'multiline':False]['text':'/','line_number':538,'multiline':False]['text':'/ Handles EINTR and ENOMEM, but not other errors.','line_number':539,'multiline':False]['text':'/','line_number':540,'multiline':False]['text':'/ @param[in]  fd  File descriptor to read from.','line_number':541,'multiline':False]['text':'/ @param[out]  ret_eof  Is set to true if EOF was encountered, otherwise set','line_number':542,'multiline':False]['text':'/                       to false. Initial value is ignored.','line_number':543,'multiline':False]['text':'/ @param[out]  ret_buf  Buffer to write to. May be NULL if size is zero.','line_number':544,'multiline':False]['text':'/ @param[in]  size  Amount of bytes to read.','line_number':545,'multiline':False]['text':'/ @param[in]  non_blocking  Do not restart syscall if EAGAIN was encountered.','line_number':546,'multiline':False]['text':'/','line_number':547,'multiline':False]['text':'/ @return Number of bytes read or libuv error code (< 0).','line_number':548,'multiline':False]['text':'/ Read from a file to multiple buffers at once','line_number':586,'multiline':False]['text':'/','line_number':587,'multiline':False]['text':'/ Wrapper for readv().','line_number':588,'multiline':False]['text':'/','line_number':589,'multiline':False]['text':'/ @param[in]  fd  File descriptor to read from.','line_number':590,'multiline':False]['text':'/ @param[out]  ret_eof  Is set to true if EOF was encountered, otherwise set','line_number':591,'multiline':False]['text':'/                       to false. Initial value is ignored.','line_number':592,'multiline':False]['text':'/ @param[out]  iov  Description of buffers to write to. Note: this description','line_number':593,'multiline':False]['text':'/                   may change, it is incorrect to use data it points to after','line_number':594,'multiline':False]['text':'/                   os_readv().','line_number':595,'multiline':False]['text':'/ @param[in]  iov_size  Number of buffers in iov.','line_number':596,'multiline':False]['text':'/ @param[in]  non_blocking  Do not restart syscall if EAGAIN was encountered.','line_number':597,'multiline':False]['text':'/','line_number':598,'multiline':False]['text':'/ @return Number of bytes read or libuv error code (< 0).','line_number':599,'multiline':False]['text':' Overflow, trying to read too much data','line_number':608,'multiline':False]['text':' HAVE_READV','line_number':644,'multiline':False]['text':'/ Write to a file','line_number':646,'multiline':False]['text':'/','line_number':647,'multiline':False]['text':'/ @param[in]  fd  File descriptor to write to.','line_number':648,'multiline':False]['text':'/ @param[in]  buf  Data to write. May be NULL if size is zero.','line_number':649,'multiline':False]['text':'/ @param[in]  size  Amount of bytes to write.','line_number':650,'multiline':False]['text':'/ @param[in]  non_blocking  Do not restart syscall if EAGAIN was encountered.','line_number':651,'multiline':False]['text':'/','line_number':652,'multiline':False]['text':'/ @return Number of bytes written or libuv error code (< 0).','line_number':653,'multiline':False]['text':'/ Copies a file from `path` to `new_path`.','line_number':687,'multiline':False]['text':'/','line_number':688,'multiline':False]['text':'/ @see http://docs.libuv.org/en/v1.x/fs.html#c.uv_fs_copyfile','line_number':689,'multiline':False]['text':'/','line_number':690,'multiline':False]['text':'/ @param path Path of file to be copied','line_number':691,'multiline':False]['text':'/ @param path_new Path of new file','line_number':692,'multiline':False]['text':'/ @param flags Bitwise OR of flags defined in <uv.h>','line_number':693,'multiline':False]['text':'/ @return 0 on success, or libuv error code on failure.','line_number':694,'multiline':False]['text':'/ Flushes file modifications to disk.','line_number':702,'multiline':False]['text':'/','line_number':703,'multiline':False]['text':'/ @param fd the file descriptor of the file to flush to disk.','line_number':704,'multiline':False]['text':'/','line_number':705,'multiline':False]['text':'/ @return 0 on success, or libuv error code on failure.','line_number':706,'multiline':False]['text':'/ Get stat information for a file.','line_number':715,'multiline':False]['text':'/','line_number':716,'multiline':False]['text':'/ @return libuv return code, or -errno','line_number':717,'multiline':False]['text':'/ Get the file permissions for a given file.','line_number':733,'multiline':False]['text':'/','line_number':734,'multiline':False]['text':'/ @return libuv error code on error.','line_number':735,'multiline':False]['text':'/ Set the permission of a file.','line_number':746,'multiline':False]['text':'/','line_number':747,'multiline':False]['text':'/ @return `OK` for success, `FAIL` for failure.','line_number':748,'multiline':False]['text':'/ Copy extended attributes from_file to to_file','line_number':758,'multiline':False]['text':' get the length of the extended attributes','line_number':765,'multiline':False]['text':' not supported or no attributes to copy','line_number':767,'multiline':False]['text':' only set the attribute in the second round','line_number':789,'multiline':False]['text':'','line_number':792,'multiline':False]['text':' add one for terminating null','line_number':815,'multiline':False]['text':' Return a pointer to the ACL of file "fname" in allocated memory.','line_number':836,'multiline':False]['text':' Return NULL if the ACL is not available for whatever reason.','line_number':837,'multiline':False]['text':' Set the ACL of file "fname" to "acl" (unless it's NULL).','line_number':844,'multiline':False]['text':'/ Checks if the current user owns a file.','line_number':860,'multiline':False]['text':'/','line_number':861,'multiline':False]['text':'/ Uses both uv_fs_stat() and uv_fs_lstat() via os_fileinfo() and','line_number':862,'multiline':False]['text':'/ os_fileinfo_link() respectively for extra security.','line_number':863,'multiline':False]['text':' TODO(justinmk): Windows. #8244','line_number':876,'multiline':False]['text':'/ Changes the owner and group of a file, like chown(2).','line_number':880,'multiline':False]['text':'/','line_number':881,'multiline':False]['text':'/ @return 0 on success, or libuv error code on failure.','line_number':882,'multiline':False]['text':'/','line_number':883,'multiline':False]['text':'/ @note If `owner` or `group` is -1, then that ID is not changed.','line_number':884,'multiline':False]['text':'/ Changes the owner and group of the file referred to by the open file','line_number':892,'multiline':False]['text':'/ descriptor, like fchown(2).','line_number':893,'multiline':False]['text':'/','line_number':894,'multiline':False]['text':'/ @return 0 on success, or libuv error code on failure.','line_number':895,'multiline':False]['text':'/','line_number':896,'multiline':False]['text':'/ @note If `owner` or `group` is -1, then that ID is not changed.','line_number':897,'multiline':False]['text':'/ Check if a path exists.','line_number':905,'multiline':False]['text':'/','line_number':906,'multiline':False]['text':'/ @return `true` if `path` exists','line_number':907,'multiline':False]['text':'/ Sets file access and modification times.','line_number':914,'multiline':False]['text':'/','line_number':915,'multiline':False]['text':'/ @see POSIX utime(2)','line_number':916,'multiline':False]['text':'/','line_number':917,'multiline':False]['text':'/ @param path   File path.','line_number':918,'multiline':False]['text':'/ @param atime  Last access time.','line_number':919,'multiline':False]['text':'/ @param mtime  Last modification time.','line_number':920,'multiline':False]['text':'/','line_number':921,'multiline':False]['text':'/ @return 0 on success, or negative error code.','line_number':922,'multiline':False]['text':'/ Check if a file is readable.','line_number':930,'multiline':False]['text':'/','line_number':931,'multiline':False]['text':'/ @return true if `name` is readable, otherwise false.','line_number':932,'multiline':False]['text':'/ Check if a file is writable.','line_number':941,'multiline':False]['text':'/','line_number':942,'multiline':False]['text':'/ @return `0` if `name` is not writable,','line_number':943,'multiline':False]['text':'/ @return `1` if `name` is writable,','line_number':944,'multiline':False]['text':'/ @return `2` for a directory which we have rights to write into.','line_number':945,'multiline':False]['text':'/ Rename a file or directory.','line_number':957,'multiline':False]['text':'/','line_number':958,'multiline':False]['text':'/ @return `OK` for success, `FAIL` for failure.','line_number':959,'multiline':False]['text':'/ Make a directory.','line_number':968,'multiline':False]['text':'/','line_number':969,'multiline':False]['text':'/ @return `0` for success, libuv error code for failure.','line_number':970,'multiline':False]['text':'/ Make a directory, with higher levels when needed','line_number':979,'multiline':False]['text':'/','line_number':980,'multiline':False]['text':'/ @param[in]  dir  Directory to create.','line_number':981,'multiline':False]['text':'/ @param[in]  mode  Permissions for the newly-created directory.','line_number':982,'multiline':False]['text':'/ @param[out]  failed_dir  If it failed to create directory, then this','line_number':983,'multiline':False]['text':'/                          argument is set to an allocated string containing','line_number':984,'multiline':False]['text':'/                          the name of the directory which os_mkdir_recurse','line_number':985,'multiline':False]['text':'/                          failed to create. I.e. it will contain dir or any','line_number':986,'multiline':False]['text':'/                          of the higher level directories.','line_number':987,'multiline':False]['text':'/ @param[out]  created     Set to the full name of the first created directory.','line_number':988,'multiline':False]['text':'/                          It will be NULL until that happens.','line_number':989,'multiline':False]['text':'/','line_number':990,'multiline':False]['text':'/ @return `0` for success, libuv error code for failure.','line_number':991,'multiline':False]['text':' Get end of directory name in "dir".','line_number':996,'multiline':False]['text':' We're done when it's "/" or "c:/".','line_number':997,'multiline':False]['text':' Path ends with something like "////". Ignore this.','line_number':1022,'multiline':False]['text':'/ Create the parent directory of a file if it does not exist','line_number':1037,'multiline':False]['text':'/','line_number':1038,'multiline':False]['text':'/ @param[in] fname Full path of the file name whose parent directories','line_number':1039,'multiline':False]['text':'/                  we want to create','line_number':1040,'multiline':False]['text':'/ @param[in] mode  Permissions for the newly-created directory.','line_number':1041,'multiline':False]['text':'/','line_number':1042,'multiline':False]['text':'/ @return `0` for success, libuv error code for failure.','line_number':1043,'multiline':False]['text':'/ Create a unique temporary directory.','line_number':1068,'multiline':False]['text':'/','line_number':1069,'multiline':False]['text':'/ @param[in] templ Template of the path to the directory with XXXXXX','line_number':1070,'multiline':False]['text':'/                  which would be replaced by random chars.','line_number':1071,'multiline':False]['text':'/ @param[out] path Path to created directory for success, undefined for','line_number':1072,'multiline':False]['text':'/                  failure.','line_number':1073,'multiline':False]['text':'/ @return `0` for success, non-zero for failure.','line_number':1074,'multiline':False]['text':'/ Remove a directory.','line_number':1087,'multiline':False]['text':'/','line_number':1088,'multiline':False]['text':'/ @return `0` for success, non-zero for failure.','line_number':1089,'multiline':False]['text':'/ Opens a directory.','line_number':1098,'multiline':False]['text':'/ @param[out] dir   The Directory object.','line_number':1099,'multiline':False]['text':'/ @param      path  Path to the directory.','line_number':1100,'multiline':False]['text':'/ @returns true if dir contains one or more items, false if not or an error','line_number':1101,'multiline':False]['text':'/          occurred.','line_number':1102,'multiline':False]['text':'/ Increments the directory pointer.','line_number':1113,'multiline':False]['text':'/ @param dir  The Directory object.','line_number':1114,'multiline':False]['text':'/ @returns a pointer to the next path in `dir` or `NULL`.','line_number':1115,'multiline':False]['text':'/ Frees memory associated with `os_scandir()`.','line_number':1123,'multiline':False]['text':'/ @param dir  The directory.','line_number':1124,'multiline':False]['text':'/ Remove a file.','line_number':1131,'multiline':False]['text':'/','line_number':1132,'multiline':False]['text':'/ @return `0` for success, non-zero for failure.','line_number':1133,'multiline':False]['text':'/ Get the file information for a given path','line_number':1142,'multiline':False]['text':'/','line_number':1143,'multiline':False]['text':'/ @param path Path to the file.','line_number':1144,'multiline':False]['text':'/ @param[out] file_info Pointer to a FileInfo to put the information in.','line_number':1145,'multiline':False]['text':'/ @return `true` on success, `false` for failure.','line_number':1146,'multiline':False]['text':'/ Get the file information for a given path without following links','line_number':1154,'multiline':False]['text':'/','line_number':1155,'multiline':False]['text':'/ @param path Path to the file.','line_number':1156,'multiline':False]['text':'/ @param[out] file_info Pointer to a FileInfo to put the information in.','line_number':1157,'multiline':False]['text':'/ @return `true` on success, `false` for failure.','line_number':1158,'multiline':False]['text':'/ Get the file information for a given file descriptor','line_number':1175,'multiline':False]['text':'/','line_number':1176,'multiline':False]['text':'/ @param file_descriptor File descriptor of the file.','line_number':1177,'multiline':False]['text':'/ @param[out] file_info Pointer to a FileInfo to put the information in.','line_number':1178,'multiline':False]['text':'/ @return `true` on success, `false` for failure.','line_number':1179,'multiline':False]['text':'/ Compare the inodes of two FileInfos','line_number':1196,'multiline':False]['text':'/','line_number':1197,'multiline':False]['text':'/ @return `true` if the two FileInfos represent the same file.','line_number':1198,'multiline':False]['text':'/ Get the `FileID` of a `FileInfo`','line_number':1206,'multiline':False]['text':'/','line_number':1207,'multiline':False]['text':'/ @param file_info Pointer to the `FileInfo`','line_number':1208,'multiline':False]['text':'/ @param[out] file_id Pointer to a `FileID`','line_number':1209,'multiline':False]['text':'/ Get the inode of a `FileInfo`','line_number':1217,'multiline':False]['text':'/','line_number':1218,'multiline':False]['text':'/ @deprecated Use `FileID` instead, this function is only needed in memline.c','line_number':1219,'multiline':False]['text':'/ @param file_info Pointer to the `FileInfo`','line_number':1220,'multiline':False]['text':'/ @return the inode number','line_number':1221,'multiline':False]['text':'/ Get the size of a file from a `FileInfo`.','line_number':1228,'multiline':False]['text':'/','line_number':1229,'multiline':False]['text':'/ @return filesize in bytes.','line_number':1230,'multiline':False]['text':'/ Get the number of hardlinks from a `FileInfo`.','line_number':1237,'multiline':False]['text':'/','line_number':1238,'multiline':False]['text':'/ @return number of hardlinks.','line_number':1239,'multiline':False]['text':'/ Get the blocksize from a `FileInfo`.','line_number':1246,'multiline':False]['text':'/','line_number':1247,'multiline':False]['text':'/ @return blocksize in bytes.','line_number':1248,'multiline':False]['text':'/ Get the `FileID` for a given path','line_number':1255,'multiline':False]['text':'/','line_number':1256,'multiline':False]['text':'/ @param path Path to the file.','line_number':1257,'multiline':False]['text':'/ @param[out] file_info Pointer to a `FileID` to fill in.','line_number':1258,'multiline':False]['text':'/ @return `true` on success, `false` for failure.','line_number':1259,'multiline':False]['text':'/ Check if two `FileID`s are equal','line_number':1272,'multiline':False]['text':'/','line_number':1273,'multiline':False]['text':'/ @param file_id_1 Pointer to first `FileID`','line_number':1274,'multiline':False]['text':'/ @param file_id_2 Pointer to second `FileID`','line_number':1275,'multiline':False]['text':'/ @return `true` if the two `FileID`s represent te same file.','line_number':1276,'multiline':False]['text':'/ Check if a `FileID` is equal to a `FileInfo`','line_number':1284,'multiline':False]['text':'/','line_number':1285,'multiline':False]['text':'/ @param file_id Pointer to a `FileID`','line_number':1286,'multiline':False]['text':'/ @param file_info Pointer to a `FileInfo`','line_number':1287,'multiline':False]['text':'/ @return `true` if the `FileID` and the `FileInfo` represent te same file.','line_number':1288,'multiline':False]['text':'/ Return the canonicalized absolute pathname.','line_number':1296,'multiline':False]['text':'/','line_number':1297,'multiline':False]['text':'/ @param[in] name Filename to be canonicalized.','line_number':1298,'multiline':False]['text':'/ @param[out] buf Buffer to store the canonicalized values. A minimum length','line_number':1299,'multiline':False]['text':'                  of MAXPATHL+1 is required. If it is NULL, memory is','line_number':1300,'multiline':False]['text':'                  allocated. In that case, the caller should deallocate this','line_number':1301,'multiline':False]['text':'                  buffer.','line_number':1302,'multiline':False]['text':'/','line_number':1303,'multiline':False]['text':'/ @return pointer to the buf on success, or NULL.','line_number':1304,'multiline':False]['text':'/ When "fname" is the name of a shortcut (*.lnk) resolve the file it points','line_number':1321,'multiline':False]['text':'/ to and return that name in allocated memory.','line_number':1322,'multiline':False]['text':'/ Otherwise NULL is returned.','line_number':1323,'multiline':False]['text':' Check if the file name ends in ".lnk". Avoid calling CoCreateInstance(),','line_number':1334,'multiline':False]['text':' it's quite slow.','line_number':1335,'multiline':False]['text':' create a link manager object and request its interface','line_number':1346,'multiline':False]['text':' Get a pointer to the IPersistFile interface.','line_number':1355,'multiline':False]['text':' "load" the name and resolve the link','line_number':1361,'multiline':False]['text':' This makes Vim wait a long time if the target does not exist.','line_number':1367,'multiline':False]['text':' Get the path to the link target.','line_number':1374,'multiline':False]['text':' Release all interface pointers (both belong to the same object)','line_number':1391,'multiline':False]['text':'/ Returns true if the path contains a reparse point (junction or symbolic','line_number':1404,'multiline':False]['text':'/ link). Otherwise false in returned.','line_number':1405,'multiline':False]