['text':'/ Type used for Vimscript VAR_NUMBER values','line_number':12,'multiline':False]['text':'/ Refcount for dict or list that should not be freed','line_number':17,'multiline':False]['text':'/ Additional values for tv_list_alloc() len argument','line_number':21,'multiline':False]['text':'/ List length is not known in advance','line_number':23,'multiline':False]['text':'/','line_number':24,'multiline':False]['text':'/ To be used when there is neither a way to know how many elements will be','line_number':25,'multiline':False]['text':'/ needed nor are any educated guesses.','line_number':26,'multiline':False]['text':'/ List length *should* be known, but is actually not','line_number':28,'multiline':False]['text':'/','line_number':29,'multiline':False]['text':'/ All occurrences of this value should be eventually removed. This is for','line_number':30,'multiline':False]['text':'/ the case when the only reason why list length is not known is that it','line_number':31,'multiline':False]['text':'/ would be hard to code without refactoring, but refactoring is needed.','line_number':32,'multiline':False]['text':'/ List length may be known in advance, but it requires too much effort','line_number':34,'multiline':False]['text':'/','line_number':35,'multiline':False]['text':'/ To be used when it looks impractical to determine list length.','line_number':36,'multiline':False]['text':'/ Maximal possible value of varnumber_T variable','line_number':40,'multiline':False]['text':'/ Minimal possible value of varnumber_T variable','line_number':44,'multiline':False]['text':'/ %d printf format specifier for varnumber_T','line_number':47,'multiline':False]['text':'/ Structure holding dictionary watcher','line_number':76,'multiline':False]['text':' prevent recursion if the dict is changed in the callback','line_number':82,'multiline':False]['text':'/ Bool variable values','line_number':86,'multiline':False]['text':'/< v:false','line_number':88,'multiline':False]['text':'/< v:true','line_number':89,'multiline':False]['text':'/ Special variable values','line_number':92,'multiline':False]['text':'/< v:null','line_number':94,'multiline':False]['text':'/ Variable lock status for typval_T.v_lock','line_number':97,'multiline':False]['text':'/< Not locked.','line_number':99,'multiline':False]['text':'/< User lock, can be unlocked.','line_number':100,'multiline':False]['text':'/< Locked forever.','line_number':101,'multiline':False]['text':'/ Vimscript variable types, for use in typval_T.v_type','line_number':104,'multiline':False]['text':'/< Unknown (unspecified) value.','line_number':106,'multiline':False]['text':'/< Number, .v_number is used.','line_number':107,'multiline':False]['text':'/< String, .v_string is used.','line_number':108,'multiline':False]['text':'/< Function reference, .v_string is used as function name.','line_number':109,'multiline':False]['text':'/< List, .v_list is used.','line_number':110,'multiline':False]['text':'/< Dictionary, .v_dict is used.','line_number':111,'multiline':False]['text':'/< Floating-point value, .v_float is used.','line_number':112,'multiline':False]['text':'/< true, false','line_number':113,'multiline':False]['text':'/< Special value (null), .v_special is used.','line_number':114,'multiline':False]['text':'/< Partial, .v_partial is used.','line_number':115,'multiline':False]['text':'/< Blob, .v_blob is used.','line_number':116,'multiline':False]['text':'/ Type values for type().','line_number':119,'multiline':False]['text':'/ Structure that holds an internal variable value','line_number':132,'multiline':False]['text':'/< Variable type.','line_number':134,'multiline':False]['text':'/< Variable lock status.','line_number':135,'multiline':False]['text':'/< Number, for VAR_NUMBER.','line_number':137,'multiline':False]['text':'/< Bool value, for VAR_BOOL','line_number':138,'multiline':False]['text':'/< Special value, for VAR_SPECIAL.','line_number':139,'multiline':False]['text':'/< Floating-point number, for VAR_FLOAT.','line_number':140,'multiline':False]['text':'/< String, for VAR_STRING and VAR_FUNC, can be NULL.','line_number':141,'multiline':False]['text':'/< List for VAR_LIST, can be NULL.','line_number':142,'multiline':False]['text':'/< Dictionary for VAR_DICT, can be NULL.','line_number':143,'multiline':False]['text':'/< Closure: function with args.','line_number':144,'multiline':False]['text':'/< Blob for VAR_BLOB, can be NULL.','line_number':145,'multiline':False]['text':'/< Actual value.','line_number':146,'multiline':False]['text':'/ Values for (struct dictvar_S).dv_scope','line_number':155,'multiline':False]['text':'/< Not a scope dictionary.','line_number':157,'multiline':False]['text':'/< Scope dictionary which requires prefix (a:, v:, …).','line_number':158,'multiline':False]['text':'/< Scope dictionary which may be accessed without prefix','line_number':159,'multiline':False]['text':'/< (l:, g:).','line_number':160,'multiline':False]['text':'/ Structure to hold an item of a list','line_number':163,'multiline':False]['text':'/< Next item in list.','line_number':167,'multiline':False]['text':'/< Previous item in list.','line_number':168,'multiline':False]['text':'/< Item value.','line_number':169,'multiline':False]['text':'/ Structure used by those that are using an item in a list','line_number':172,'multiline':False]['text':'/< Item being watched.','line_number':176,'multiline':False]['text':'/< Next watcher.','line_number':177,'multiline':False]['text':'/ Structure to hold info about a list','line_number':180,'multiline':False]['text':'/ Order of members is optimized to reduce padding.','line_number':181,'multiline':False]['text':'/< First item, NULL if none.','line_number':183,'multiline':False]['text':'/< Last item, NULL if none.','line_number':184,'multiline':False]['text':'/< First watcher, NULL if none.','line_number':185,'multiline':False]['text':'/< When not NULL item at index "lv_idx".','line_number':186,'multiline':False]['text':'/< Copied list used by deepcopy().','line_number':187,'multiline':False]['text':'/< next list in used lists list.','line_number':188,'multiline':False]['text':'/< Previous list in used lists list.','line_number':189,'multiline':False]['text':'/< Reference count.','line_number':190,'multiline':False]['text':'/< Number of items.','line_number':191,'multiline':False]['text':'/< Index of a cached item, used for optimising repeated l[idx].','line_number':192,'multiline':False]['text':'/< ID used by deepcopy().','line_number':193,'multiline':False]['text':'/< Zero, VAR_LOCKED, VAR_FIXED.','line_number':194,'multiline':False]['text':'/ Static list with 10 items. Use tv_list_init_static10() to initialize.','line_number':199,'multiline':False]['text':' must be first','line_number':201,'multiline':False]['text':' Structure that holds scope dictionary itself. ','line_number':221,'multiline':True]['text':' Flags. ','line_number':222,'multiline':True]['text':' Key value. ','line_number':223,'multiline':True]['text':' NOLINT(runtime/arrays)','line_number':223,'multiline':True]['text':'/ Structure to hold a scope dictionary','line_number':226,'multiline':False]['text':'/','line_number':227,'multiline':False]['text':'/ @warning Must be compatible with dictitem_T.','line_number':228,'multiline':False]['text':'/','line_number':229,'multiline':False]['text':'/ For use in find_var_in_ht to pretend that it found dictionary item when it','line_number':230,'multiline':False]['text':'/ finds scope dictionary.','line_number':231,'multiline':False]['text':'/ Structure to hold an item of a Dictionary','line_number':234,'multiline':False]['text':'/','line_number':235,'multiline':False]['text':'/ @warning Must be compatible with ScopeDictDictItem.','line_number':236,'multiline':False]['text':'/','line_number':237,'multiline':False]['text':'/ Also used for a variable.','line_number':238,'multiline':False]['text':'/ Flags for dictitem_T.di_flags','line_number':241,'multiline':False]['text':'/< Read-only value','line_number':243,'multiline':False]['text':'/< Value, read-only in the sandbox','line_number':244,'multiline':False]['text':'/< Fixed value: cannot be :unlet or remove()d.','line_number':245,'multiline':False]['text':'/< Locked value.','line_number':246,'multiline':False]['text':'/< Separately allocated.','line_number':247,'multiline':False]['text':'/ Structure representing a Dictionary','line_number':250,'multiline':False]['text':'/< Whole dictionary lock status.','line_number':252,'multiline':False]['text':'/< Non-zero (#VAR_SCOPE, #VAR_DEF_SCOPE) if','line_number':253,'multiline':False]['text':'/< dictionary represents a scope (i.e. g:, l: …).','line_number':254,'multiline':False]['text':'/< Reference count.','line_number':255,'multiline':False]['text':'/< ID used when recursivery traversing a value.','line_number':256,'multiline':False]['text':'/< Hashtab containing all items.','line_number':257,'multiline':False]['text':'/< Copied dict used by deepcopy().','line_number':258,'multiline':False]['text':'/< Next dictionary in used dictionaries list.','line_number':259,'multiline':False]['text':'/< Previous dictionary in used dictionaries list.','line_number':260,'multiline':False]['text':'/< Dictionary key watchers set by user code.','line_number':261,'multiline':False]['text':'/ Structure to hold info about a Blob','line_number':266,'multiline':False]['text':'/< Growarray with the data.','line_number':268,'multiline':False]['text':'/< Reference count.','line_number':269,'multiline':False]['text':'/< VAR_UNLOCKED, VAR_LOCKED, VAR_FIXED.','line_number':270,'multiline':False]['text':'/ Type used for script ID','line_number':273,'multiline':False]['text':'/ Format argument for scid_T','line_number':275,'multiline':False]['text':'/ SCript ConteXt (SCTX): identifies a script line.','line_number':278,'multiline':False]['text':'/ When sourcing a script "sc_lnum" is zero, "sourcing_lnum" is the current','line_number':279,'multiline':False]['text':'/ line number. When executing a user function "sc_lnum" is the line where the','line_number':280,'multiline':False]['text':'/ function was defined, "sourcing_lnum" is the line number inside the','line_number':281,'multiline':False]['text':'/ function.  When stored with a function, mapping, option, etc. "sc_lnum" is','line_number':282,'multiline':False]['text':'/ the line number in the script "sc_sid".','line_number':283,'multiline':False]['text':'/< script ID','line_number':285,'multiline':False]['text':'/< sourcing sequence number','line_number':286,'multiline':False]['text':'/< line number','line_number':287,'multiline':False]['text':'/ Stores an identifier of a script or channel that last set an option.','line_number':290,'multiline':False]['text':'/ script context where the option was last set','line_number':292,'multiline':False]['text':'/ Only used when script_id is SID_API_CLIENT.','line_number':293,'multiline':False]['text':'/< Maximum number of function arguments','line_number':296,'multiline':False]['text':'/< Short variable name length','line_number':297,'multiline':False]['text':'/< Number of fixed variables used for arguments','line_number':298,'multiline':False]['text':'/ Structure to hold info for a function that is currently being executed.','line_number':300,'multiline':False]['text':'/< Function being called.','line_number':304,'multiline':False]['text':'/< Next line to be executed.','line_number':305,'multiline':False]['text':'/< ":return" used.','line_number':306,'multiline':False]['text':'/< Fixed variables for arguments.','line_number':307,'multiline':False]['text':'/< l: local function variables.','line_number':308,'multiline':False]['text':'/< Variable for l: scope.','line_number':309,'multiline':False]['text':'/< a: argument variables.','line_number':310,'multiline':False]['text':'/< Variable for a: scope.','line_number':311,'multiline':False]['text':'/< List for a:000.','line_number':312,'multiline':False]['text':'/< List items for a:000.','line_number':313,'multiline':False]['text':'/< Return value.','line_number':314,'multiline':False]['text':'/< Next line with breakpoint or zero.','line_number':315,'multiline':False]['text':'/< "debug_tick" when breakpoint was set.','line_number':316,'multiline':False]['text':'/< Top nesting level of executed function.','line_number':317,'multiline':False]['text':'/< Functions to be called on return.','line_number':318,'multiline':False]['text':'/< Time spent in a child.','line_number':319,'multiline':False]['text':'/< Calling function or NULL; or next funccal in','line_number':320,'multiline':False]['text':'/< list pointed to by previous_funccal.','line_number':321,'multiline':False]['text':'/< Number of user functions that reference this funccall.','line_number':322,'multiline':False]['text':'/< CopyID used for garbage collection.','line_number':323,'multiline':False]['text':'/< List of ufunc_T* which keep a reference to "fc_func".','line_number':324,'multiline':False]['text':'/ Structure to hold info for a user function.','line_number':327,'multiline':False]['text':'/< variable nr of arguments','line_number':329,'multiline':False]['text':'/< nr of active calls','line_number':331,'multiline':False]['text':'/< func_clear() was already called','line_number':332,'multiline':False]['text':'/< arguments','line_number':333,'multiline':False]['text':'/< default argument expressions','line_number':334,'multiline':False]['text':'/< function lines','line_number':335,'multiline':False]['text':'/< true when func is being profiled','line_number':336,'multiline':False]['text':'/< lua callback, used if (uf_flags & FC_LUAREF)','line_number':338,'multiline':False]['text':' Profiling the function as a whole.','line_number':339,'multiline':False]['text':'/< nr of calls','line_number':340,'multiline':False]['text':'/< time spent in function + children','line_number':341,'multiline':False]['text':'/< time spent in function itself','line_number':342,'multiline':False]['text':'/< time spent in children this call','line_number':343,'multiline':False]['text':' Profiling the function per line.','line_number':344,'multiline':False]['text':'/< nr of times line was executed','line_number':345,'multiline':False]['text':'/< time spent in a line + children','line_number':346,'multiline':False]['text':'/< time spent in a line itself','line_number':347,'multiline':False]['text':'/< start time for current line','line_number':348,'multiline':False]['text':'/< time spent in children for this line','line_number':349,'multiline':False]['text':'/< start wait time for current line','line_number':350,'multiline':False]['text':'/< index of line being timed; -1 if none','line_number':351,'multiline':False]['text':'/< line being timed was executed','line_number':352,'multiline':False]['text':'/< SCTX where function was defined,','line_number':353,'multiline':False]['text':'/< used for s: variables','line_number':354,'multiline':False]['text':'/< reference count, see func_name_refcount()','line_number':355,'multiline':False]['text':'/< l: local variables for closure','line_number':356,'multiline':False]['text':'/< if "uf_name[]" starts with SNR the name with','line_number':357,'multiline':False]['text':'/< "<SNR>" as a string, otherwise NULL','line_number':358,'multiline':False]['text':'/< Name of function (actual size equals name);','line_number':359,'multiline':False]['text':'/< can start with <SNR>123_','line_number':360,'multiline':False]['text':'/< (<SNR> is K_SPECIAL KS_EXTRA KE_SNR)','line_number':361,'multiline':False]['text':'/< Reference count.','line_number':365,'multiline':False]['text':'/< Function name; when NULL use pt_func->name.','line_number':366,'multiline':False]['text':'/< Function pointer; when NULL lookup function with pt_name.','line_number':367,'multiline':False]['text':'/< When true the partial was created by using dict.member','line_number':368,'multiline':False]['text':'/< in handle_subscript().','line_number':369,'multiline':False]['text':'/< Number of arguments.','line_number':370,'multiline':False]['text':'/< Arguments in allocated array.','line_number':371,'multiline':False]['text':'/< Dict for "self".','line_number':372,'multiline':False]['text':'/ Structure used for explicit stack while garbage collecting hash tables','line_number':375,'multiline':False]['text':'/ Structure used for explicit stack while garbage collecting lists','line_number':381,'multiline':False]