['text':' IWYU pragma: export','line_number':9,'multiline':False]['text':' In a hashtab item "hi_key" points to "di_key" in a dictitem.','line_number':20,'multiline':False]['text':' This avoids adding a pointer to the hashtab item.','line_number':21,'multiline':False]['text':'/ Convert a hashitem pointer to a dictitem pointer','line_number':23,'multiline':False]['text':'/ Increase reference count for a given list','line_number':30,'multiline':False]['text':'/','line_number':31,'multiline':False]['text':'/ Does nothing for NULL lists.','line_number':32,'multiline':False]['text':'/','line_number':33,'multiline':False]['text':'/ @param[in,out]  l  List to modify.','line_number':34,'multiline':False]['text':'/ Set a list as the return value.  Increments the reference count.','line_number':46,'multiline':False]['text':'/','line_number':47,'multiline':False]['text':'/ @param[out]  tv  Object to receive the list','line_number':48,'multiline':False]['text':'/ @param[in,out]  l  List to pass to the object','line_number':49,'multiline':False]['text':'/ Get list lock status','line_number':60,'multiline':False]['text':'/','line_number':61,'multiline':False]['text':'/ Returns VAR_FIXED for NULL lists.','line_number':62,'multiline':False]['text':'/','line_number':63,'multiline':False]['text':'/ @param[in]  l  List to check.','line_number':64,'multiline':False]['text':'/ Set list lock status','line_number':73,'multiline':False]['text':'/','line_number':74,'multiline':False]['text':'/ May only “set” VAR_FIXED for NULL lists.','line_number':75,'multiline':False]['text':'/','line_number':76,'multiline':False]['text':'/ @param[out]  l  List to modify.','line_number':77,'multiline':False]['text':'/ @param[in]  lock  New lock status.','line_number':78,'multiline':False]['text':'/ Set list copyID','line_number':91,'multiline':False]['text':'/','line_number':92,'multiline':False]['text':'/ Does not expect NULL list, be careful.','line_number':93,'multiline':False]['text':'/','line_number':94,'multiline':False]['text':'/ @param[out]  l  List to modify.','line_number':95,'multiline':False]['text':'/ @param[in]  copyid  New copyID.','line_number':96,'multiline':False]['text':'/ Get the number of items in a list','line_number':105,'multiline':False]['text':'/','line_number':106,'multiline':False]['text':'/ @param[in]  l  List to check.','line_number':107,'multiline':False]['text':'/ Get list copyID','line_number':119,'multiline':False]['text':'/','line_number':120,'multiline':False]['text':'/ Does not expect NULL list, be careful.','line_number':121,'multiline':False]['text':'/','line_number':122,'multiline':False]['text':'/ @param[in]  l  List to check.','line_number':123,'multiline':False]['text':'/ Get latest list copy','line_number':132,'multiline':False]['text':'/','line_number':133,'multiline':False]['text':'/ Gets lv_copylist field assigned by tv_list_copy() earlier.','line_number':134,'multiline':False]['text':'/','line_number':135,'multiline':False]['text':'/ Does not expect NULL list, be careful.','line_number':136,'multiline':False]['text':'/','line_number':137,'multiline':False]['text':'/ @param[in]  l  List to check.','line_number':138,'multiline':False]['text':'/ Normalize index: that is, return either -1 or non-negative index','line_number':147,'multiline':False]['text':'/','line_number':148,'multiline':False]['text':'/ @param[in]  l  List to index. Used to get length.','line_number':149,'multiline':False]['text':'/ @param[in]  n  List index, possibly negative.','line_number':150,'multiline':False]['text':'/','line_number':151,'multiline':False]['text':'/ @return -1 or list index in range [0, tv_list_len(l)).','line_number':152,'multiline':False]['text':' Negative index is relative to the end.','line_number':155,'multiline':False]['text':' Check for index out of range.','line_number':160,'multiline':False]['text':'/ Check whether list has watchers','line_number':170,'multiline':False]['text':'/','line_number':171,'multiline':False]['text':'/ E.g. is referenced by a :for loop.','line_number':172,'multiline':False]['text':'/','line_number':173,'multiline':False]['text':'/ @param[in]  l  List to check.','line_number':174,'multiline':False]['text':'/','line_number':175,'multiline':False]['text':'/ @return true if there are watchers, false otherwise.','line_number':176,'multiline':False]['text':'/ Get first list item','line_number':185,'multiline':False]['text':'/','line_number':186,'multiline':False]['text':'/ @param[in]  l  List to get item from.','line_number':187,'multiline':False]['text':'/','line_number':188,'multiline':False]['text':'/ @return List item or NULL in case of an empty list.','line_number':189,'multiline':False]['text':'/ Get last list item','line_number':201,'multiline':False]['text':'/','line_number':202,'multiline':False]['text':'/ @param[in]  l  List to get item from.','line_number':203,'multiline':False]['text':'/','line_number':204,'multiline':False]['text':'/ @return List item or NULL in case of an empty list.','line_number':205,'multiline':False]['text':'/ Set a dictionary as the return value','line_number':217,'multiline':False]['text':'/','line_number':218,'multiline':False]['text':'/ @param[out]  tv  Object to receive the dictionary','line_number':219,'multiline':False]['text':'/ @param[in,out]  d  Dictionary to pass to the object','line_number':220,'multiline':False]['text':'/ Get the number of items in a Dictionary','line_number':233,'multiline':False]['text':'/','line_number':234,'multiline':False]['text':'/ @param[in]  d  Dictionary to check.','line_number':235,'multiline':False]['text':'/ Check if dictionary is watched','line_number':247,'multiline':False]['text':'/','line_number':248,'multiline':False]['text':'/ @param[in]  d  Dictionary to check.','line_number':249,'multiline':False]['text':'/','line_number':250,'multiline':False]['text':'/ @return true if there is at least one watcher.','line_number':251,'multiline':False]['text':'/ Set a blob as the return value.','line_number':260,'multiline':False]['text':'/','line_number':261,'multiline':False]['text':'/ Increments the reference count.','line_number':262,'multiline':False]['text':'/','line_number':263,'multiline':False]['text':'/ @param[out]  tv  Object to receive the blob.','line_number':264,'multiline':False]['text':'/ @param[in,out]  b  Blob to pass to the object.','line_number':265,'multiline':False]['text':'/ Get the length of the data in the blob, in bytes.','line_number':278,'multiline':False]['text':'/','line_number':279,'multiline':False]['text':'/ @param[in]  b  Blob to check.','line_number':280,'multiline':False]['text':'/ Get the byte at index `idx` in the blob.','line_number':292,'multiline':False]['text':'/','line_number':293,'multiline':False]['text':'/ @param[in]  b  Blob to index. Cannot be NULL.','line_number':294,'multiline':False]['text':'/ @param[in]  idx  Index in a blob. Must be valid.','line_number':295,'multiline':False]['text':'/','line_number':296,'multiline':False]['text':'/ @return Byte value at the given index.','line_number':297,'multiline':False]['text':'/ Store the byte `c` at index `idx` in the blob.','line_number':306,'multiline':False]['text':'/','line_number':307,'multiline':False]['text':'/ @param[in]  b  Blob to index. Cannot be NULL.','line_number':308,'multiline':False]['text':'/ @param[in]  idx  Index in a blob. Must be valid.','line_number':309,'multiline':False]['text':'/ @param[in]  c  Value to store.','line_number':310,'multiline':False]['text':'/ Initialize Vimscript object','line_number':316,'multiline':False]['text':'/','line_number':317,'multiline':False]['text':'/ Initializes to unlocked VAR_UNKNOWN object.','line_number':318,'multiline':False]['text':'/','line_number':319,'multiline':False]['text':'/ @param[out]  tv  Object to initialize.','line_number':320,'multiline':False]['text':'/ Empty string','line_number':328,'multiline':False]['text':'/','line_number':329,'multiline':False]['text':'/ Needed for hack which allows not allocating empty string and still not','line_number':330,'multiline':False]['text':'/ crashing when freeing it.','line_number':331,'multiline':False]['text':'/ Specifies that free_unref_items() function has (not) been entered','line_number':334,'multiline':False]['text':'/ Iterate over a list','line_number':337,'multiline':False]['text':'/','line_number':338,'multiline':False]['text':'/ @param  modifier  Modifier: expected to be const or nothing, volatile should','line_number':339,'multiline':False]['text':'/                   also work if you have any uses for the volatile list.','line_number':340,'multiline':False]['text':'/ @param[in]  l  List to iterate over.','line_number':341,'multiline':False]['text':'/ @param  li  Name of the variable with current listitem_T entry.','line_number':342,'multiline':False]['text':'/ @param  code  Cycle body.','line_number':343,'multiline':False]['text':'/ Iterate over a list','line_number':355,'multiline':False]['text':'/','line_number':356,'multiline':False]['text':'/ To be used when you need to modify list or values you iterate over, use','line_number':357,'multiline':False]['text':'/ #TV_LIST_ITER_CONST if you don’t.','line_number':358,'multiline':False]['text':'/','line_number':359,'multiline':False]['text':'/ @param[in]  l  List to iterate over.','line_number':360,'multiline':False]['text':'/ @param  li  Name of the variable with current listitem_T entry.','line_number':361,'multiline':False]['text':'/ @param  code  Cycle body.','line_number':362,'multiline':False]['text':' NOLINT(whitespace/parens)','line_number':364,'multiline':False]['text':'/ Iterate over a list','line_number':366,'multiline':False]['text':'/','line_number':367,'multiline':False]['text':'/ To be used when you don’t need to modify list or values you iterate over,','line_number':368,'multiline':False]['text':'/ use #TV_LIST_ITER if you do.','line_number':369,'multiline':False]['text':'/','line_number':370,'multiline':False]['text':'/ @param[in]  l  List to iterate over.','line_number':371,'multiline':False]['text':'/ @param  li  Name of the variable with current listitem_T entry.','line_number':372,'multiline':False]['text':'/ @param  code  Cycle body.','line_number':373,'multiline':False]['text':' Below macros are macros to avoid duplicating code for functionally identical','line_number':377,'multiline':False]['text':' const and non-const function variants.','line_number':378,'multiline':False]['text':'/ Get typval_T out of list item','line_number':380,'multiline':False]['text':'/','line_number':381,'multiline':False]['text':'/ @param[in]  li  List item to get typval_T from, must not be NULL.','line_number':382,'multiline':False]['text':'/','line_number':383,'multiline':False]['text':'/ @return Pointer to typval_T.','line_number':384,'multiline':False]['text':'/ Get next list item given the current one','line_number':387,'multiline':False]['text':'/','line_number':388,'multiline':False]['text':'/ @param[in]  l  List to get item from.','line_number':389,'multiline':False]['text':'/ @param[in]  li  List item to get typval_T from.','line_number':390,'multiline':False]['text':'/','line_number':391,'multiline':False]['text':'/ @return Pointer to the next item or NULL.','line_number':392,'multiline':False]['text':'/ Get previous list item given the current one','line_number':395,'multiline':False]['text':'/','line_number':396,'multiline':False]['text':'/ @param[in]  l  List to get item from.','line_number':397,'multiline':False]['text':'/ @param[in]  li  List item to get typval_T from.','line_number':398,'multiline':False]['text':'/','line_number':399,'multiline':False]['text':'/ @return Pointer to the previous item or NULL.','line_number':400,'multiline':False]['text':' List argument is not used currently, but it is a must for lists implemented','line_number':402,'multiline':False]['text':' as a pair (size(in list), array) without terminator - basically for lists on','line_number':403,'multiline':False]['text':' top of kvec.','line_number':404,'multiline':False]['text':'/ Iterate over a dictionary','line_number':406,'multiline':False]['text':'/','line_number':407,'multiline':False]['text':'/ @param[in]  d  Dictionary to iterate over.','line_number':408,'multiline':False]['text':'/ @param  di  Name of the variable with current dictitem_T entry.','line_number':409,'multiline':False]['text':'/ @param  code  Cycle body.','line_number':410,'multiline':False]['text':'/ Get the float value','line_number':424,'multiline':False]['text':'/','line_number':425,'multiline':False]['text':'/ Raises an error if object is not number or floating-point.','line_number':426,'multiline':False]['text':'/','line_number':427,'multiline':False]['text':'/ @param[in]  tv  Vimscript object to get value from.','line_number':428,'multiline':False]['text':'/ @param[out]  ret_f  Location where resulting float is stored.','line_number':429,'multiline':False]['text':'/','line_number':430,'multiline':False]['text':'/ @return true in case of success, false if tv is not a number or float.','line_number':431,'multiline':False]['text':'/ Compute the `DictWatcher` address from a QUEUE node.','line_number':450,'multiline':False]['text':'/','line_number':451,'multiline':False]['text':'/ This only exists for .asan-blacklist (ASAN doesn't handle QUEUE_DATA pointer','line_number':452,'multiline':False]['text':'/ arithmetic).','line_number':453,'multiline':False]['text':'/ Check whether given typval_T contains a function','line_number':462,'multiline':False]['text':'/','line_number':463,'multiline':False]['text':'/ That is, whether it contains VAR_FUNC or VAR_PARTIAL.','line_number':464,'multiline':False]['text':'/','line_number':465,'multiline':False]['text':'/ @param[in]  tv  Typval to check.','line_number':466,'multiline':False]['text':'/','line_number':467,'multiline':False]['text':'/ @return True if it is a function or a partial, false otherwise.','line_number':468,'multiline':False]['text':'/ Specify that argument needs to be translated','line_number':474,'multiline':False]['text':'/','line_number':475,'multiline':False]['text':'/ Used for size_t length arguments to avoid calling gettext() and strlen()','line_number':476,'multiline':False]['text':'/ unless needed.','line_number':477,'multiline':False]['text':'/ Specify that argument is a NUL-terminated C string','line_number':480,'multiline':False]['text':'/','line_number':481,'multiline':False]['text':'/ Used for size_t length arguments to avoid calling strlen() unless needed.','line_number':482,'multiline':False]['text':' Do not use enum constants, see commit message.','line_number':486,'multiline':False]