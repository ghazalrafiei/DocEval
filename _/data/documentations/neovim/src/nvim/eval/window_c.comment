['text':' eval/window.c: Window related builtin functions','line_number':1,'multiline':False]['text':'/ Return the window and tab pointer of window "id".','line_number':96,'multiline':False]['text':'/ Returns NULL when not found.','line_number':97,'multiline':False]['text':'/ Find window specified by "vp" in tabpage "tp".','line_number':137,'multiline':False]['text':'/','line_number':138,'multiline':False]['text':'/ @param tp  NULL for current tab page','line_number':139,'multiline':False]['text':'/ @return  current window if "vp" is number zero.','line_number':140,'multiline':False]['text':'/          NULL if not found.','line_number':141,'multiline':False]['text':' This method accepts NULL as an alias for curtab.','line_number':154,'multiline':False]['text':'/ Find a window: When using a Window ID in any tab page, when using a number','line_number':171,'multiline':False]['text':'/ in the current tab page.','line_number':172,'multiline':False]['text':'/ Find window specified by "wvp" in tabpage "tvp".','line_number':184,'multiline':False]['text':'/ Get the layout of the given tab page for winlayout().','line_number':210,'multiline':False]['text':' outermost call from f_winlayout()','line_number':219,'multiline':False]['text':'/ Common code for tabpagewinnr() and winnr().','line_number':244,'multiline':False]['text':' Type error; errmsg already given.','line_number':254,'multiline':False]['text':' Extract the window count (if specified). e.g. winnr('3j')','line_number':263,'multiline':False]['text':' if count is not specified, default to 1','line_number':267,'multiline':False]['text':' didn't find it in this tabpage','line_number':300,'multiline':False]['text':'/ @return  information about a window as a dictionary.','line_number':309,'multiline':False]['text':' make sure w_botline is valid','line_number':314,'multiline':False]['text':' Add a reference to window variables','line_number':334,'multiline':False]['text':'/ @return  information (variables, options, etc.) about a tab page','line_number':340,'multiline':False]['text':'/          as a dictionary.','line_number':341,'multiline':False]['text':' Make a reference to tabpage variables','line_number':354,'multiline':False]['text':'/ "gettabinfo()" function','line_number':360,'multiline':False]['text':' Information about one tab page','line_number':370,'multiline':False]['text':' Get information about a specific tab page or all tab pages','line_number':377,'multiline':False]['text':'/ "getwininfo()" function','line_number':392,'multiline':False]['text':' Collect information about either all the windows across all the tab','line_number':406,'multiline':False]['text':' pages or one particular window.','line_number':407,'multiline':False]['text':' found information about a specific window','line_number':420,'multiline':False]['text':'/ "getwinpos({timeout})" function','line_number':427,'multiline':False]['text':'/ "getwinposx()" function','line_number':435,'multiline':False]['text':'/ "getwinposy()" function','line_number':441,'multiline':False]['text':'/ "tabpagenr()" function','line_number':447,'multiline':False]['text':'/ "tabpagewinnr()" function','line_number':470,'multiline':False]['text':'/ "win_execute(win_id, command)" function','line_number':483,'multiline':False]['text':' Return an empty string if something fails.','line_number':486,'multiline':False]['text':'/ "win_findbuf()" function','line_number':500,'multiline':False]['text':'/ "win_getid()" function','line_number':507,'multiline':False]['text':'/ "win_gotoid()" function','line_number':513,'multiline':False]['text':'/ "win_id2tabwin()" function','line_number':531,'multiline':False]['text':'/ "win_id2win()" function','line_number':537,'multiline':False]['text':'/ "win_move_separator()" function','line_number':543,'multiline':False]['text':'/ "win_move_statusline()" function','line_number':562,'multiline':False]['text':'/ "win_screenpos()" function','line_number':584,'multiline':False]['text':'/ Move the window wp into a new split of targetwin in a given direction','line_number':593,'multiline':False]['text':' Jump to the target window','line_number':603,'multiline':False]['text':' Remove the old window and frame from the tree of frames','line_number':608,'multiline':False]['text':' may need to remove last status line','line_number':612,'multiline':False]['text':' recompute window positions','line_number':613,'multiline':False]['text':' Split a window on the desired side and put the old window there','line_number':615,'multiline':False]['text':' If splitting horizontally, try to preserve height','line_number':618,'multiline':False]['text':'/ "win_splitmove()" function','line_number':631,'multiline':False]['text':'/ "win_gettype(nr)" function','line_number':668,'multiline':False]['text':'/ "getcmdwintype()" function','line_number':695,'multiline':False]['text':'/ "winbufnr(nr)" function','line_number':704,'multiline':False]['text':'/ "wincol()" function','line_number':715,'multiline':False]['text':'/ "winheight(nr)" function','line_number':722,'multiline':False]['text':'/ "winlayout()" function','line_number':733,'multiline':False]['text':'/ "winline()" function','line_number':752,'multiline':False]['text':'/ "winnr()" function','line_number':759,'multiline':False]['text':'/ "winrestcmd()" function','line_number':765,'multiline':False]['text':' Do this twice to handle some window layouts properly.','line_number':773,'multiline':False]['text':'/ "winrestview()" function','line_number':792,'multiline':False]['text':'/ "winsaveview()" function','line_number':841,'multiline':False]['text':'/ "winwidth(nr)" function','line_number':859,'multiline':False]['text':'/ Set "win" to be the curwin and "tp" to be the current tab page.','line_number':870,'multiline':False]['text':'/ restore_win() MUST be called to undo, also when FAIL is returned.','line_number':871,'multiline':False]['text':'/ No autocommands will be executed until restore_win() is called.','line_number':872,'multiline':False]['text':'/','line_number':873,'multiline':False]['text':'/ @param no_display  if true the display won't be affected, no redraw is','line_number':874,'multiline':False]['text':'/                    triggered, another tabpage access is limited.','line_number':875,'multiline':False]['text':'/','line_number':876,'multiline':False]['text':'/ @return FAIL if switching to "win" failed.','line_number':877,'multiline':False]['text':' As switch_win() but without blocking autocommands.','line_number':884,'multiline':False]['text':' Disable Visual selection, because redrawing may fail.','line_number':892,'multiline':False]['text':' Restore current tabpage and window saved by switch_win(), if still valid.','line_number':917,'multiline':False]['text':' When "no_display" is true the display won't be affected, no redraw is','line_number':918,'multiline':False]['text':' triggered.','line_number':919,'multiline':False]['text':' As restore_win() but without unblocking autocommands.','line_number':926,'multiline':False]