['text':' sign.c: functions for managing with signs','line_number':1,'multiline':False]['text':' Convert the supplied "group" to a namespace filter','line_number':72,'multiline':False]['text':' Global namespace','line_number':76,'multiline':False]['text':' All namespaces','line_number':78,'multiline':False]['text':' Specific or non-existing namespace','line_number':80,'multiline':False]['text':'/ Create or update a sign extmark.','line_number':91,'multiline':False]['text':'/','line_number':92,'multiline':False]['text':'/ @param buf  buffer to store sign in','line_number':93,'multiline':False]['text':'/ @param id  sign ID','line_number':94,'multiline':False]['text':'/ @param group  sign group','line_number':95,'multiline':False]['text':'/ @param prio  sign priority','line_number':96,'multiline':False]['text':'/ @param lnum  line number which gets the mark','line_number':97,'multiline':False]['text':'/ @param sp  sign properties','line_number':98,'multiline':False]['text':'/ For an existing, placed sign with "id", modify the sign, group or priority.','line_number':126,'multiline':False]['text':'/ Returns the line number of the sign, or zero if the sign is not found.','line_number':127,'multiline':False]['text':'/','line_number':128,'multiline':False]['text':'/ @param buf  buffer to store sign in','line_number':129,'multiline':False]['text':'/ @param id  sign ID','line_number':130,'multiline':False]['text':'/ @param group  sign group','line_number':131,'multiline':False]['text':'/ @param prio  sign priority','line_number':132,'multiline':False]['text':'/ @param sp  sign pointer','line_number':133,'multiline':False]['text':'/ Find the line number of the sign with the requested id in group 'group'. If','line_number':148,'multiline':False]['text':'/ the sign does not exist, return 0 as the line number. This will still let','line_number':149,'multiline':False]['text':'/ the correct file get loaded.','line_number':150,'multiline':False]['text':'/','line_number':151,'multiline':False]['text':'/ @param buf  buffer to store sign in','line_number':152,'multiline':False]['text':'/ @param id  sign ID','line_number':153,'multiline':False]['text':'/ @param group  sign group','line_number':154,'multiline':False]['text':'/ qsort() function to sort signs by line number, priority, id and recency.','line_number':164,'multiline':False]['text':'/ Delete the specified sign(s)','line_number':185,'multiline':False]['text':'/','line_number':186,'multiline':False]['text':'/ @param buf  buffer sign is stored in or NULL for all buffers','line_number':187,'multiline':False]['text':'/ @param group  sign group','line_number':188,'multiline':False]['text':'/ @param id  sign id','line_number':189,'multiline':False]['text':'/ @param atlnum  single sign at this line, specified signs at any line when -1','line_number':190,'multiline':False]['text':' Store signs at a specific line number to remove one later.','line_number':201,'multiline':False]['text':' Sort to remove the highest priority sign at a specific line number.','line_number':236,'multiline':False]['text':' When deleting the last sign need to redraw the windows to remove the','line_number':245,'multiline':False]['text':' sign column. Not when curwin is NULL (this means we're exiting).','line_number':246,'multiline':False]['text':'/ List placed signs for "rbuf".  If "rbuf" is NULL do it for all buffers.','line_number':254,'multiline':False]['text':'/ Find index of a ":sign" subcmd from its name.','line_number':318,'multiline':False]['text':'/ "*end_cmd" must be writable.','line_number':319,'multiline':False]['text':'/','line_number':320,'multiline':False]['text':'/ @param begin_cmd  begin of sign subcmd','line_number':321,'multiline':False]['text':'/ @param end_cmd  just after sign subcmd','line_number':322,'multiline':False]['text':'/ Initialize the "text" for a new sign and store in "sign_text".','line_number':338,'multiline':False]['text':'/ "sp" is NULL for signs added through nvim_buf_set_extmark().','line_number':339,'multiline':False]['text':' Remove a backslash, so that it is possible to use a space.','line_number':347,'multiline':False]['text':' Count cells and check for non-printable chars','line_number':352,'multiline':False]['text':' Currently must be empty, one or two display cells','line_number':360,'multiline':False]['text':' Allocate one byte more if we need to pad up with a space.','line_number':377,'multiline':False]['text':'/ Define a new sign or update an existing sign','line_number':388,'multiline':False]['text':' Signs may already exist, a redraw is needed in windows with a non-empty sign list.','line_number':400,'multiline':False]['text':' Set values for a defined sign.','line_number':408,'multiline':False]['text':'/ Initialize the icon information for a new sign','line_number':410,'multiline':False]['text':'/ Free the sign specified by 'name'.','line_number':431,'multiline':False]['text':'/ List one sign.','line_number':447,'multiline':False]['text':'/ List the signs matching 'name'','line_number':471,'multiline':False]['text':'/ Place a sign at the specified file location or update a sign.','line_number':493,'multiline':False]['text':' Check for reserved character '*' in group name','line_number':496,'multiline':False]['text':' ":sign place {id} line={lnum} name={name} file={fname}": place a sign','line_number':508,'multiline':False]['text':' ":sign place {id} file={fname}": change sign type and/or priority','line_number':511,'multiline':False]['text':' When displaying signs in the 'number' column, if the width of the','line_number':515,'multiline':False]['text':' number column is less than 2, then force recomputing the width.','line_number':516,'multiline':False]['text':' No signs in the buffer','line_number':528,'multiline':False]['text':' Delete multiple specified signs','line_number':533,'multiline':False]['text':' Delete only a single sign','line_number':538,'multiline':False]['text':' When all the signs in a buffer are removed, force recomputing the','line_number':545,'multiline':False]['text':' number column width (if enabled) in all the windows displaying the','line_number':546,'multiline':False]['text':' buffer if 'signcolumn' is set to 'number' in that window.','line_number':547,'multiline':False]['text':'/ Unplace the specified sign for a single or all buffers','line_number':555,'multiline':False]['text':'/ Jump to a sign.','line_number':571,'multiline':False]['text':' goto a sign ...','line_number':581,'multiline':False]['text':' ... in a current window','line_number':582,'multiline':False]['text':' ... not currently in a window','line_number':586,'multiline':False]['text':'/ ":sign define {name} ..." command','line_number':603,'multiline':False]['text':' set values for a defined sign.','line_number':613,'multiline':False]['text':'/ ":sign place" command','line_number':645,'multiline':False]['text':' List signs placed in a file/buffer','line_number':649,'multiline':False]['text':'   :sign place file={fname}','line_number':650,'multiline':False]['text':'   :sign place group={group} file={fname}','line_number':651,'multiline':False]['text':'   :sign place group=* file={fname}','line_number':652,'multiline':False]['text':'   :sign place buffer={nr}','line_number':653,'multiline':False]['text':'   :sign place group={group} buffer={nr}','line_number':654,'multiline':False]['text':'   :sign place group=* buffer={nr}','line_number':655,'multiline':False]['text':'   :sign place','line_number':656,'multiline':False]['text':'   :sign place group={group}','line_number':657,'multiline':False]['text':'   :sign place group=*','line_number':658,'multiline':False]['text':' Place a new sign','line_number':665,'multiline':False]['text':'/ ":sign unplace" command','line_number':675,'multiline':False]['text':'/ Jump to a placed sign commands:','line_number':693,'multiline':False]['text':'/   :sign jump {id} file={fname}','line_number':694,'multiline':False]['text':'/   :sign jump {id} buffer={nr}','line_number':695,'multiline':False]['text':'/   :sign jump {id} group={group} file={fname}','line_number':696,'multiline':False]['text':'/   :sign jump {id} group={group} buffer={nr}','line_number':697,'multiline':False]['text':' File or buffer is not specified or an empty group is used','line_number':706,'multiline':False]['text':' or a line number or a sign name is specified.','line_number':707,'multiline':False]['text':'/ Parse the command line arguments for the ":sign place", ":sign unplace" and','line_number':715,'multiline':False]['text':'/ ":sign jump" commands.','line_number':716,'multiline':False]['text':'/ The supported arguments are: line={lnum} name={name} group={group}','line_number':717,'multiline':False]['text':'/ priority={prio} and file={fname} or buffer={nr}.','line_number':718,'multiline':False]['text':' first arg could be placed sign id','line_number':726,'multiline':False]['text':' If the filename is not supplied for the sign place or the sign jump','line_number':797,'multiline':False]['text':' command, then use the current buffer.','line_number':798,'multiline':False]['text':'/ ":sign" command','line_number':805,'multiline':False]['text':' Parse the subcommand.','line_number':810,'multiline':False]['text':' Define, undefine or list signs.','line_number':820,'multiline':False]['text':' ":sign list": list all defined signs','line_number':822,'multiline':False]['text':' Isolate the sign name.  If it's a number skip leading zeroes,','line_number':830,'multiline':False]['text':' so that "099" and "99" are the same sign.  But keep "0".','line_number':831,'multiline':False]['text':' ":sign list {name}"','line_number':843,'multiline':False]['text':' ":sign undefine {name}"','line_number':846,'multiline':False]['text':' Parse command line arguments','line_number':860,'multiline':False]['text':'/ Get dictionary of information for a defined sign "sp"','line_number':875,'multiline':False]['text':'/ Get dictionary of information for placed sign "mark"','line_number':899,'multiline':False]['text':'/ Returns information about signs placed in a buffer as list of dicts.','line_number':914,'multiline':False]['text':'/ @return  information about all the signs placed in a buffer','line_number':933,'multiline':False]['text':'/ Get a list of signs placed in buffer 'buf'. If 'num' is non-zero, return the','line_number':981,'multiline':False]['text':'/ sign placed at the line number. If 'lnum' is zero, return all the signs','line_number':982,'multiline':False]['text':'/ placed in 'buf'. If 'buf' is NULL, return signs placed in all the buffers.','line_number':983,'multiline':False]['text':' expand :sign sub-commands','line_number':1006,'multiline':False]['text':' expand :sign define {name} args','line_number':1007,'multiline':False]['text':' expand :sign place {id} args','line_number':1008,'multiline':False]['text':' expand :sign place args','line_number':1009,'multiline':False]['text':' expand :sign unplace"','line_number':1010,'multiline':False]['text':' expand with name of placed signs','line_number':1011,'multiline':False]['text':' expand with name of placed sign groups','line_number':1012,'multiline':False]['text':'/ @return  the n'th sign name (used for command line completion)','line_number':1015,'multiline':False]['text':' Complete with name of signs already defined','line_number':1019,'multiline':False]['text':'/ @return  the n'th sign group name (used for command line completion)','line_number':1030,'multiline':False]['text':' Complete with name of sign groups already defined','line_number':1033,'multiline':False]['text':'/ Function given to ExpandGeneric() to obtain the sign command expansion.','line_number':1040,'multiline':False]['text':'/ Handle command line completion for :sign command.','line_number':1071,'multiline':False]['text':' Default: expand subcommands.','line_number':1074,'multiline':False]['text':' expand subcmd name','line_number':1081,'multiline':False]['text':' :sign {subcmd}<CTRL-D>','line_number':1082,'multiline':False]['text':' :sign {subcmd} {subcmd_args}','line_number':1088,'multiline':False]['text':'                |','line_number':1089,'multiline':False]['text':'                begin_subcmd_args','line_number':1090,'multiline':False]['text':' Expand last argument of subcmd.','line_number':1093,'multiline':False]['text':'','line_number':1094,'multiline':False]['text':' :sign define {name} {args}...','line_number':1095,'multiline':False]['text':'              |','line_number':1096,'multiline':False]['text':'              p','line_number':1097,'multiline':False]['text':' Loop until reaching last argument.','line_number':1099,'multiline':False]['text':' :sign define {name} {args}... {last}=','line_number':1110,'multiline':False]['text':'                               |     |','line_number':1111,'multiline':False]['text':'                            last     p','line_number':1112,'multiline':False]['text':' Expand last argument name (before equal sign).','line_number':1114,'multiline':False]['text':' List placed signs','line_number':1121,'multiline':False]['text':'   :sign place {id} {args}...','line_number':1123,'multiline':False]['text':'   :sign place {args}...','line_number':1126,'multiline':False]['text':' :sign list <CTRL-D>','line_number':1132,'multiline':False]['text':' :sign undefine <CTRL-D>','line_number':1133,'multiline':False]['text':' Expand last argument value (after equal sign).','line_number':1144,'multiline':False]['text':'/ Define a sign using the attributes in 'dict'. Returns 0 on success and -1 on','line_number':1186,'multiline':False]['text':'/ failure.','line_number':1187,'multiline':False]['text':'/ Define multiple signs using attributes from list 'l' and store the return','line_number':1216,'multiline':False]['text':'/ values in 'retlist'.','line_number':1217,'multiline':False]['text':'/ "sign_define()" function','line_number':1231,'multiline':False]['text':' Define multiple signs','line_number':1235,'multiline':False]['text':' Define a single sign','line_number':1242,'multiline':False]['text':'/ "sign_getdefined()" function','line_number':1258,'multiline':False]['text':'/ "sign_getplaced()" function','line_number':1276,'multiline':False]['text':' get signs placed in the specified buffer','line_number':1288,'multiline':False]['text':' get signs placed at this line','line_number':1301,'multiline':False]['text':' get sign placed with this identifier','line_number':1308,'multiline':False]['text':' empty string means global group','line_number':1319,'multiline':False]['text':'/ "sign_jump()" function','line_number':1329,'multiline':False]['text':' Sign identifier','line_number':1334,'multiline':False]['text':' Sign group','line_number':1345,'multiline':False]['text':' Buffer to place the sign','line_number':1354,'multiline':False]['text':'/ Place a new sign using the values specified in dict 'dict'. Returns the sign','line_number':1363,'multiline':False]['text':'/ identifier if successfully placed, otherwise returns -1.','line_number':1364,'multiline':False]['text':'/ "sign_place()" function','line_number':1462,'multiline':False]['text':'/ "sign_placelist()" function.  Place multiple signs.','line_number':1480,'multiline':False]['text':' Process the List of sign attributes','line_number':1490,'multiline':False]['text':'/ Undefine multiple signs','line_number':1502,'multiline':False]['text':'/ "sign_undefine()" function','line_number':1515,'multiline':False]['text':' Undefine multiple signs','line_number':1519,'multiline':False]['text':' Free all the signs','line_number':1529,'multiline':False]['text':' Free only the specified sign','line_number':1533,'multiline':False]['text':'/ Unplace the sign with attributes specified in 'dict'. Returns 0 on success','line_number':1545,'multiline':False]['text':'/ and -1 on failure.','line_number':1546,'multiline':False]['text':'/ "sign_unplace()" function','line_number':1577,'multiline':False]['text':'/ "sign_unplacelist()" function','line_number':1596,'multiline':False]