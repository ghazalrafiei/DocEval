['text':' mark.c: functions for setting marks and jumping to them','line_number':1,'multiline':False]['text':' This file contains routines to maintain and manipulate marks.','line_number':41,'multiline':False]['text':' If a named file mark's lnum is non-zero, it is valid.','line_number':43,'multiline':False]['text':' If a named file mark's fnum is non-zero, it is for an existing buffer,','line_number':44,'multiline':False]['text':' otherwise it is from .shada and namedfm[n].fname is the file name.','line_number':45,'multiline':False]['text':' There are marks 'A - 'Z (set by user) and '0 to '9 (set when writing','line_number':46,'multiline':False]['text':' shada).','line_number':47,'multiline':False]['text':' Set named mark "c" at current cursor position.','line_number':53,'multiline':False]['text':' Returns OK on success, FAIL if bad name given.','line_number':54,'multiline':False]['text':'/ Free fmark_T item','line_number':61,'multiline':False]['text':'/ Free xfmark_T item','line_number':67,'multiline':False]['text':'/ Free and clear fmark_T item','line_number':74,'multiline':False]['text':' Set named mark "c" to position "pos".','line_number':83,'multiline':False]['text':' When "c" is upper case use file "fnum".','line_number':84,'multiline':False]['text':' Returns OK on success, FAIL if bad name given.','line_number':85,'multiline':False]['text':' Check for a special key (may cause islower() to crash).','line_number':91,'multiline':False]['text':' keep it even when the cursor doesn't move','line_number':99,'multiline':False]['text':' Can't set a mark in a non-existent buffer.','line_number':107,'multiline':False]['text':' Allow setting '[ and '] for an autocommand that simulates reading a','line_number':118,'multiline':False]['text':' file.','line_number':119,'multiline':False]['text':' Visual_mode has not yet been set, use a sane default.','line_number':136,'multiline':False]['text':' Set the previous context mark to the current position and add it to the','line_number':159,'multiline':False]['text':' jump list.','line_number':160,'multiline':False]['text':' for :global the mark is set only once','line_number':165,'multiline':False]['text':' jumpoptions=stack: if we're somewhere in the middle of the jumplist','line_number':178,'multiline':False]['text':' discard everything after the current index.','line_number':179,'multiline':False]['text':' Discard the rest of the jumplist by cutting the length down to','line_number':181,'multiline':False]['text':' contain nothing beyond the current index.','line_number':182,'multiline':False]['text':' If jumplist is full: remove oldest entry','line_number':187,'multiline':False]['text':' To change context, call setpcmark(), then move the current position to','line_number':201,'multiline':False]['text':' where ever, then call checkpcmark().  This ensures that the previous','line_number':202,'multiline':False]['text':' context will only be changed if the cursor moved to a different line.','line_number':203,'multiline':False]['text':' If pcmark was deleted (with "dG") the previous mark is restored.','line_number':204,'multiline':False]['text':' it has been checked','line_number':212,'multiline':False]['text':'/ Get mark in "count" position in the |jumplist| relative to the current index.','line_number':215,'multiline':False]['text':'/','line_number':216,'multiline':False]['text':'/ If the mark is in a different buffer, it will be skipped unless the buffer exists.','line_number':217,'multiline':False]['text':'/','line_number':218,'multiline':False]['text':'/ @note cleanup_jumplist() is run, which removes duplicate marks, and','line_number':219,'multiline':False]['text':'/       changes win->w_jumplistidx.','line_number':220,'multiline':False]['text':'/ @param[in] win  window to get jumplist from.','line_number':221,'multiline':False]['text':'/ @param[in] count  count to move may be negative.','line_number':222,'multiline':False]['text':'/','line_number':223,'multiline':False]['text':'/ @return  mark, NULL if out of jumplist bounds.','line_number':224,'multiline':False]['text':' nothing to jump to','line_number':231,'multiline':False]['text':' if first CTRL-O or CTRL-I command after a jump, add cursor position','line_number':241,'multiline':False]['text':' to list.  Careful: If there are duplicates (CTRL-O immediately after','line_number':242,'multiline':False]['text':' starting Vim on a file), another entry may have been removed.','line_number':243,'multiline':False]['text':' skip the new entry','line_number':246,'multiline':False]['text':' Resolve the fnum (buff number) in the mark before returning it (shada)','line_number':256,'multiline':False]['text':' Needs to switch buffer, if it can't find it skip the mark','line_number':260,'multiline':False]['text':'/ Get mark in "count" position in the |changelist| relative to the current index.','line_number':271,'multiline':False]['text':'/','line_number':272,'multiline':False]['text':'/ @note  Changes the win->w_changelistidx.','line_number':273,'multiline':False]['text':'/ @param[in] win  window to get jumplist from.','line_number':274,'multiline':False]['text':'/ @param[in] count  count to move may be negative.','line_number':275,'multiline':False]['text':'/','line_number':276,'multiline':False]['text':'/ @return  mark, NULL if out of bounds.','line_number':277,'multiline':False]['text':' nothing to jump to','line_number':283,'multiline':False]['text':' Changelist marks are always buffer local, Shada does not set it when loading','line_number':303,'multiline':False]['text':'/ Get a named mark.','line_number':308,'multiline':False]['text':'/','line_number':309,'multiline':False]['text':'/ All types of marks, even those that are not technically a mark will be returned as such. Use','line_number':310,'multiline':False]['text':'/ mark_move_to() to move to the mark.','line_number':311,'multiline':False]['text':'/ @note Some of the pointers are statically allocated, if in doubt make a copy. For more','line_number':312,'multiline':False]['text':'/ information read mark_get_local().','line_number':313,'multiline':False]['text':'/ @param buf  Buffer to get the mark from.','line_number':314,'multiline':False]['text':'/ @param win  Window to get or calculate the mark from (motion type marks, context mark).','line_number':315,'multiline':False]['text':'/ @param fmp[out] Optional pointer to store the result in, as a workaround for the note above.','line_number':316,'multiline':False]['text':'/ @param flag MarkGet value','line_number':317,'multiline':False]['text':'/ @param name Name of the mark.','line_number':318,'multiline':False]['text':'/','line_number':319,'multiline':False]['text':'/ @return          Mark if found, otherwise NULL.  For @c kMarkBufLocal, NULL is returned','line_number':320,'multiline':False]['text':'/                  when no mark is found in @a buf.','line_number':321,'multiline':False]['text':' Global marks','line_number':326,'multiline':False]['text':' Only wanted marks belonging to the buffer','line_number':330,'multiline':False]['text':' Local Marks','line_number':334,'multiline':False]['text':'/ Get a global mark {A-Z0-9}.','line_number':344,'multiline':False]['text':'/','line_number':345,'multiline':False]['text':'/ @param name  the name of the mark.','line_number':346,'multiline':False]['text':'/ @param resolve  Whether to try resolving the mark fnum (i.e., load the buffer stored in','line_number':347,'multiline':False]['text':'/                 the mark fname and update the xfmark_T (expensive)).','line_number':348,'multiline':False]['text':'/','line_number':349,'multiline':False]['text':'/ @return  Mark','line_number':350,'multiline':False]['text':' Not a valid mark name','line_number':360,'multiline':False]['text':' Resolve filename to fnum (SHADA marks)','line_number':366,'multiline':False]['text':'/ Get a local mark (lowercase and symbols).','line_number':372,'multiline':False]['text':'/','line_number':373,'multiline':False]['text':'/ Some marks are not actually marks, but positions that are never adjusted or motions presented as','line_number':374,'multiline':False]['text':'/ marks. Search first for marks and fallback to finding motion type marks. If it's known','line_number':375,'multiline':False]['text':'/ ahead of time that the mark is actually a motion use the mark_get_motion() directly.','line_number':376,'multiline':False]['text':'/','line_number':377,'multiline':False]['text':'/ @note  Lowercase, last_cursor '"', last insert '^', last change '.' are not statically','line_number':378,'multiline':False]['text':'/ allocated, everything else is.','line_number':379,'multiline':False]['text':'/ @param name  the name of the mark.','line_number':380,'multiline':False]['text':'/ @param win  window to retrieve marks that belong to it (motions and context mark).','line_number':381,'multiline':False]['text':'/ @param buf  buf to retrieve marks that belong to it.','line_number':382,'multiline':False]['text':'/','line_number':383,'multiline':False]['text':'/ @return  Mark, NULL if not found.','line_number':384,'multiline':False]['text':' normal named mark','line_number':389,'multiline':False]['text':' to start of previous operator','line_number':391,'multiline':False]['text':' to end of previous operator','line_number':394,'multiline':False]['text':' visual marks','line_number':397,'multiline':False]['text':' previous context mark','line_number':400,'multiline':False]['text':' TODO(muniter): w_pcmark should be stored as a mark, but causes a nasty bug.','line_number':402,'multiline':False]['text':' to position when leaving buffer','line_number':404,'multiline':False]['text':' to where last Insert mode stopped','line_number':407,'multiline':False]['text':' to where last change was made','line_number':410,'multiline':False]['text':' Mark that are actually not marks but motions, e.g {, }, (, ), ...','line_number':413,'multiline':False]['text':'/ Get marks that are actually motions but return them as marks','line_number':425,'multiline':False]['text':'/','line_number':426,'multiline':False]['text':'/ Gets the following motions as marks: '{', '}', '(', ')'','line_number':427,'multiline':False]['text':'/ @param name  name of the mark','line_number':428,'multiline':False]['text':'/ @param win  window to retrieve the cursor to calculate the mark.','line_number':429,'multiline':False]['text':'/ @param buf  buf to wrap motion marks with it's buffer number (fm->fnum).','line_number':430,'multiline':False]['text':'/','line_number':431,'multiline':False]['text':'/ @return[static] Mark.','line_number':432,'multiline':False]['text':' avoid that '' is changed','line_number':438,'multiline':False]['text':' to previous/next paragraph','line_number':439,'multiline':False]['text':' to previous/next sentence','line_number':444,'multiline':False]['text':'/ Get visual marks '<', '>'','line_number':454,'multiline':False]['text':'/','line_number':455,'multiline':False]['text':'/ This marks are different to normal marks:','line_number':456,'multiline':False]['text':'/ 1. Never adjusted.','line_number':457,'multiline':False]['text':'/ 2. Different behavior depending on editor state (visual mode).','line_number':458,'multiline':False]['text':'/ 3. Not saved in shada.','line_number':459,'multiline':False]['text':'/ 4. Re-ordered when defined in reverse.','line_number':460,'multiline':False]['text':'/ @param buf  Buffer to get the mark from.','line_number':461,'multiline':False]['text':'/ @param name  Mark name '<' or '>'.','line_number':462,'multiline':False]['text':'/','line_number':463,'multiline':False]['text':'/ @return[static]  Mark','line_number':464,'multiline':False]['text':' start/end of visual area','line_number':469,'multiline':False]['text':'/ Wrap a pos_T into an fmark_T, used to abstract marks handling.','line_number':491,'multiline':False]['text':'/','line_number':492,'multiline':False]['text':'/ Pass an fmp if multiple c','line_number':493,'multiline':False]['text':'/ @note  view fields are set to 0.','line_number':494,'multiline':False]['text':'/ @param buf  for fmark->fnum.','line_number':495,'multiline':False]['text':'/ @param pos  for fmark->mark.','line_number':496,'multiline':False]['text':'/ @param fmp pointer to save the mark.','line_number':497,'multiline':False]['text':'/','line_number':498,'multiline':False]['text':'/ @return[static] Mark with the given information.','line_number':499,'multiline':False]['text':'/ Attempt to switch to the buffer of the given global mark','line_number':510,'multiline':False]['text':'/','line_number':511,'multiline':False]['text':'/ @param fm','line_number':512,'multiline':False]['text':'/ @param pcmark_on_switch  leave a context mark when switching buffer.','line_number':513,'multiline':False]['text':'/ @return whether the buffer was switched or not.','line_number':514,'multiline':False]['text':' Switch to another file.','line_number':518,'multiline':False]['text':'/ Move to the given file mark, changing the buffer and cursor position.','line_number':526,'multiline':False]['text':'/','line_number':527,'multiline':False]['text':'/ Validate the mark, switch to the buffer, and move the cursor.','line_number':528,'multiline':False]['text':'/ @param fm  Mark, can be NULL will raise E78: Unknown mark','line_number':529,'multiline':False]['text':'/ @param flags  MarkMove flags to configure the movement to the mark.','line_number':530,'multiline':False]['text':'/','line_number':531,'multiline':False]['text':'/ @return  MarkMovekRes flags representing the outcome','line_number':532,'multiline':False]['text':' Need to change buffer','line_number':547,'multiline':False]['text':' Copy, autocommand may change it','line_number':548,'multiline':False]['text':' Jump to the file with the mark','line_number':550,'multiline':False]['text':' Failed switching buffer','line_number':552,'multiline':False]['text':' Check line count now that the **destination buffer is loaded**.','line_number':556,'multiline':False]['text':' Doing it in this condition avoids double context mark when switching buffer.','line_number':565,'multiline':False]['text':' Move the cursor while keeping track of what changed for the caller','line_number':568,'multiline':False]['text':' Set lnum again, autocommands my have changed it','line_number':571,'multiline':False]['text':'/ Restore the mark view.','line_number':589,'multiline':False]['text':'/ By remembering the offset between topline and mark lnum at the time of','line_number':590,'multiline':False]['text':'/ definition, this function restores the "view".','line_number':591,'multiline':False]['text':'/ @note  Assumes the mark has been checked, is valid.','line_number':592,'multiline':False]['text':'/ @param  fm the named mark.','line_number':593,'multiline':False]['text':' If the mark does not have a view, topline_offset is MAXLNUM,','line_number':598,'multiline':False]['text':' and this check can prevent restoring mark view in that case.','line_number':599,'multiline':False]['text':'/ Search for the next named mark in the current file from a start position.','line_number':611,'multiline':False]['text':'/','line_number':612,'multiline':False]['text':'/ @param startpos  where to start.','line_number':613,'multiline':False]['text':'/ @param dir  direction for search.','line_number':614,'multiline':False]['text':'/','line_number':615,'multiline':False]['text':'/ @return  next mark or NULL if no mark is found.','line_number':616,'multiline':False]['text':' For an xtended filemark: set the fnum from the fname.','line_number':647,'multiline':False]['text':' This is used for marks obtained from the .shada file.  It's postponed','line_number':648,'multiline':False]['text':' until the mark is used to avoid a long startup delay.','line_number':649,'multiline':False]['text':' First expand "~/" in the file name to the home directory.','line_number':656,'multiline':False]['text':' Don't expand the whole name, it may contain other '~' chars.','line_number':657,'multiline':False]['text':' Try to shorten the file name.','line_number':671,'multiline':False]['text':' buflist_new() will call fmarks_check_names()','line_number':675,'multiline':False]['text':' Check all file marks for a name that matches the file name in buf.','line_number':679,'multiline':False]['text':' May replace the name with an fnum.','line_number':680,'multiline':False]['text':' Used for marks that come from the .shada file.','line_number':681,'multiline':False]['text':'/ Check the position in @a fm is valid.','line_number':711,'multiline':False]['text':'/','line_number':712,'multiline':False]['text':'/ Checks for:','line_number':713,'multiline':False]['text':'/ - NULL raising unknown mark error.','line_number':714,'multiline':False]['text':'/ - Line number <= 0 raising mark not set.','line_number':715,'multiline':False]['text':'/ - Line number > buffer line count, raising invalid mark.','line_number':716,'multiline':False]['text':'/','line_number':717,'multiline':False]['text':'/ @param fm[in]  File mark to check.','line_number':718,'multiline':False]['text':'/ @param errormsg[out]  Error message, if any.','line_number':719,'multiline':False]['text':'/','line_number':720,'multiline':False]['text':'/ @return  true if the mark passes all the above checks, else false.','line_number':721,'multiline':False]['text':' In both cases it's an error but only raise when equals to 0','line_number':728,'multiline':False]['text':' Only check for valid line number if the buffer is loaded.','line_number':734,'multiline':False]['text':'/ Check if a mark line number is greater than the buffer line count, and set e_markinval.','line_number':741,'multiline':False]['text':'/','line_number':742,'multiline':False]['text':'/ @note  Should be done after the buffer is loaded into memory.','line_number':743,'multiline':False]['text':'/ @param buf  Buffer where the mark is set.','line_number':744,'multiline':False]['text':'/ @param fm  Mark to check.','line_number':745,'multiline':False]['text':'/ @param errormsg[out]  Error message, if any.','line_number':746,'multiline':False]['text':'/ @return  true if below line count else false.','line_number':747,'multiline':False]['text':'/ Clear all marks and change list in the given buffer','line_number':757,'multiline':False]['text':'/','line_number':758,'multiline':False]['text':'/ Used mainly when trashing the entire buffer during ":e" type commands.','line_number':759,'multiline':False]['text':'/','line_number':760,'multiline':False]['text':'/ @param[out]  buf  Buffer to clear marks in.','line_number':761,'multiline':False]['text':' start/end op mark cleared','line_number':772,'multiline':False]['text':' Get name of file from a filemark.','line_number':780,'multiline':False]['text':' When it's in the current buffer, return the text at the mark.','line_number':781,'multiline':False]['text':' Returns an allocated string.','line_number':782,'multiline':False]['text':' current buffer','line_number':785,'multiline':False]['text':'/ Return the line at mark "mp".  Truncate to fit in window.','line_number':791,'multiline':False]['text':'/ The returned string has been allocated.','line_number':792,'multiline':False]['text':' Allow for up to 5 bytes per character.','line_number':801,'multiline':False]['text':' Truncate the line to fit it in the window','line_number':804,'multiline':False]['text':' print the marks','line_number':816,'multiline':False]['text':' Show the marks as where they will jump to.','line_number':852,'multiline':False]['text':'/ @param current  in current file','line_number':866,'multiline':False]['text':' finish up','line_number':873,'multiline':False]['text':' don't output anything if 'q' typed at --more-- prompt','line_number':886,'multiline':False]['text':' Highlight title','line_number':893,'multiline':False]['text':' ":delmarks[!] [marks]"','line_number':912,'multiline':False]['text':' clear all marks','line_number':919,'multiline':False]['text':' clear specified marks only','line_number':926,'multiline':False]['text':' clear range of marks','line_number':933,'multiline':False]['text':' clear one lower case mark','line_number':945,'multiline':False]['text':' print the jumplist','line_number':995,'multiline':False]['text':' Highlight title','line_number':999,'multiline':False]['text':' Make sure to output the current indicator, even when on an wiped','line_number':1005,'multiline':False]['text':' out buffer.  ":filter" may still skip it.','line_number':1006,'multiline':False]['text':' apply :filter /pat/ or file name not available','line_number':1010,'multiline':False]['text':' print the changelist','line_number':1044,'multiline':False]['text':' Highlight title','line_number':1047,'multiline':False]['text':' don't delete the line, just put at first deleted line','line_number':1088,'multiline':False]['text':' Adjust marks between "line1" and "line2" (inclusive) to move "amount" lines.','line_number':1103,'multiline':False]['text':' Must be called before changed_*(), appended_lines() or deleted_lines().','line_number':1104,'multiline':False]['text':' May be called before or after changing the text.','line_number':1105,'multiline':False]['text':' When deleting lines "line1" to "line2", use an "amount" of MAXLNUM: The','line_number':1106,'multiline':False]['text':' marks within this range are made invalid.','line_number':1107,'multiline':False]['text':' If "amount_after" is non-zero adjust marks after "line2".','line_number':1108,'multiline':False]['text':' Example: Delete lines 34 and 35: mark_adjust(34, 35, MAXLNUM, -2);','line_number':1109,'multiline':False]['text':' Example: Insert two lines below 55: mark_adjust(56, MAXLNUM, 2, 0);','line_number':1110,'multiline':False]['text':'                                 or: mark_adjust(56, 55, MAXLNUM, 2);','line_number':1111,'multiline':False]['text':' mark_adjust_nofold() does the same as mark_adjust() but without adjusting','line_number':1118,'multiline':False]['text':' folds in any way. Folds must be adjusted manually by the caller.','line_number':1119,'multiline':False]['text':' This is only useful when folds need to be moved in a way different to','line_number':1120,'multiline':False]['text':' calling foldMarkAdjust() with arguments line1, line2, amount, amount_after,','line_number':1121,'multiline':False]['text':' for an example of why this may be necessary, see do_move().','line_number':1122,'multiline':False]['text':' nothing to do','line_number':1136,'multiline':False]['text':' named marks, lower case and upper case','line_number':1141,'multiline':False]['text':' last Insert position','line_number':1154,'multiline':False]['text':' last change position','line_number':1157,'multiline':False]['text':' last cursor position, if it was set','line_number':1160,'multiline':False]['text':' list of change positions','line_number':1165,'multiline':False]['text':' Visual area','line_number':1170,'multiline':False]['text':' quickfix marks','line_number':1174,'multiline':False]['text':' location lists','line_number':1178,'multiline':False]['text':' previous context mark','line_number':1193,'multiline':False]['text':' previous pcpmark','line_number':1196,'multiline':False]['text':' saved cursor for formatting','line_number':1199,'multiline':False]['text':' Adjust items in all windows related to the current buffer.','line_number':1205,'multiline':False]['text':' Marks in the jumplist.  When deleting lines, this may create','line_number':1208,'multiline':False]['text':' duplicate marks in the jumplist, they will be removed later.','line_number':1209,'multiline':False]['text':' marks in the tag stack','line_number':1219,'multiline':False]['text':' the displayed Visual area','line_number':1227,'multiline':False]['text':' topline and cursor position for windows with the same buffer','line_number':1233,'multiline':False]['text':' other than the current window','line_number':1234,'multiline':False]['text':' topline is deleted','line_number':1237,'multiline':False]['text':' api: if the deleted region was replaced with new contents, display that','line_number':1241,'multiline':False]['text':' keep topline on the same line, unless inserting just','line_number':1245,'multiline':False]['text':' above it (we probably want to see that line then)','line_number':1246,'multiline':False]['text':' api: display new line if inserted right at topline','line_number':1250,'multiline':False]['text':' TODO(bfredl): maybe always?','line_number':1251,'multiline':False]['text':' line with cursor is deleted','line_number':1259,'multiline':False]['text':' keep cursor on the same line','line_number':1266,'multiline':False]['text':' adjust diffs','line_number':1280,'multiline':False]['text':' This code is used often, needs to be fast.','line_number':1284,'multiline':False]['text':' Adjust marks in line "lnum" at column "mincol" and further: add','line_number':1301,'multiline':False]['text':' "lnum_amount" to the line number and add "col_amount" to the column','line_number':1302,'multiline':False]['text':' position.','line_number':1303,'multiline':False]['text':' "spaces_removed" is the number of spaces that were removed, matters when the','line_number':1304,'multiline':False]['text':' cursor is inside them.','line_number':1305,'multiline':False]['text':' nothing to do','line_number':1313,'multiline':False]['text':' named marks, lower case and upper case','line_number':1315,'multiline':False]['text':' last Insert position','line_number':1328,'multiline':False]['text':' last change position','line_number':1331,'multiline':False]['text':' list of change positions','line_number':1334,'multiline':False]['text':' Visual area','line_number':1339,'multiline':False]['text':' previous context mark','line_number':1343,'multiline':False]['text':' previous pcmark','line_number':1346,'multiline':False]['text':' saved cursor for formatting','line_number':1349,'multiline':False]['text':' Adjust items in all windows related to the current buffer.','line_number':1352,'multiline':False]['text':' marks in the jumplist','line_number':1354,'multiline':False]['text':' marks in the tag stack','line_number':1362,'multiline':False]['text':' cursor position for other windows with the same buffer','line_number':1369,'multiline':False]['text':' When deleting lines, this may create duplicate marks in the','line_number':1377,'multiline':False]['text':' jumplist. They will be removed here for the specified window.','line_number':1378,'multiline':False]['text':' When "loadfiles" is true first ensure entries have the "fnum" field set','line_number':1379,'multiline':False]['text':' (this may be a bit slow).','line_number':1380,'multiline':False]['text':' If specified, load all the files from the jump list. This is','line_number':1386,'multiline':False]['text':' needed to properly clean up duplicate entries, but will take some','line_number':1387,'multiline':False]['text':' time.','line_number':1388,'multiline':False]['text':' not duplicate','line_number':1413,'multiline':False]['text':' non-adjacent duplicate','line_number':1415,'multiline':False]['text':' jumpoptions=stack: remove duplicates only when adjacent.','line_number':1416,'multiline':False]['text':' adjacent duplicate','line_number':1418,'multiline':False]['text':' Not using wp->w_jumplist[to++] = wp->w_jumplist[from] because','line_number':1426,'multiline':False]['text':' this way valgrind complains about overlapping source and destination','line_number':1427,'multiline':False]['text':' in memcpy() call. (clang-3.6.0, debug build with -DEXITFREE).','line_number':1428,'multiline':False]['text':' When pointer is below last jump, remove the jump if it matches the current','line_number':1439,'multiline':False]['text':' line.  This avoids useless/phantom jumps. #9805','line_number':1440,'multiline':False]['text':' otherwise (i.e.: Shada), last entry should be kept','line_number':1441,'multiline':False]['text':' Copy the jumplist from window "from" to window "to".','line_number':1453,'multiline':False]['text':'/ Iterate over jumplist items','line_number':1466,'multiline':False]['text':'/','line_number':1467,'multiline':False]['text':'/ @warning No jumplist-editing functions must be called while iteration is in','line_number':1468,'multiline':False]['text':'/          progress.','line_number':1469,'multiline':False]['text':'/','line_number':1470,'multiline':False]['text':'/ @param[in]   iter  Iterator. Pass NULL to start iteration.','line_number':1471,'multiline':False]['text':'/ @param[in]   win   Window for which jump list is processed.','line_number':1472,'multiline':False]['text':'/ @param[out]  fm    Item definition.','line_number':1473,'multiline':False]['text':'/','line_number':1474,'multiline':False]['text':'/ @return Pointer that needs to be passed to next `mark_jumplist_iter` call or','line_number':1475,'multiline':False]['text':'/         NULL if iteration is over.','line_number':1476,'multiline':False]['text':'/ Iterate over global marks','line_number':1493,'multiline':False]['text':'/','line_number':1494,'multiline':False]['text':'/ @warning No mark-editing functions must be called while iteration is in','line_number':1495,'multiline':False]['text':'/          progress.','line_number':1496,'multiline':False]['text':'/','line_number':1497,'multiline':False]['text':'/ @param[in]   iter  Iterator. Pass NULL to start iteration.','line_number':1498,'multiline':False]['text':'/ @param[out]  name  Mark name.','line_number':1499,'multiline':False]['text':'/ @param[out]  fm    Mark definition.','line_number':1500,'multiline':False]['text':'/','line_number':1501,'multiline':False]['text':'/ @return Pointer that needs to be passed to next `mark_global_iter` call or','line_number':1502,'multiline':False]['text':'/         NULL if iteration is over.','line_number':1503,'multiline':False]['text':'/ Get next mark and its name','line_number':1532,'multiline':False]['text':'/','line_number':1533,'multiline':False]['text':'/ @param[in]      buf        Buffer for which next mark is taken.','line_number':1534,'multiline':False]['text':'/ @param[in,out]  mark_name  Pointer to the current mark name. Next mark name','line_number':1535,'multiline':False]['text':'/                            will be saved at this address as well.','line_number':1536,'multiline':False]['text':'/','line_number':1537,'multiline':False]['text':'/                            Current mark name must either be NUL, '"', '^',','line_number':1538,'multiline':False]['text':'/                            '.' or 'a' .. 'z'. If it is neither of these','line_number':1539,'multiline':False]['text':'/                            behaviour is undefined.','line_number':1540,'multiline':False]['text':'/','line_number':1541,'multiline':False]['text':'/ @return Pointer to the next mark or NULL.','line_number':1542,'multiline':False]['text':'/ Iterate over buffer marks','line_number':1567,'multiline':False]['text':'/','line_number':1568,'multiline':False]['text':'/ @warning No mark-editing functions must be called while iteration is in','line_number':1569,'multiline':False]['text':'/          progress.','line_number':1570,'multiline':False]['text':'/','line_number':1571,'multiline':False]['text':'/ @param[in]   iter  Iterator. Pass NULL to start iteration.','line_number':1572,'multiline':False]['text':'/ @param[in]   buf   Buffer.','line_number':1573,'multiline':False]['text':'/ @param[out]  name  Mark name.','line_number':1574,'multiline':False]['text':'/ @param[out]  fm    Mark definition.','line_number':1575,'multiline':False]['text':'/','line_number':1576,'multiline':False]['text':'/ @return Pointer that needs to be passed to next `mark_buffer_iter` call or','line_number':1577,'multiline':False]['text':'/         NULL if iteration is over.','line_number':1578,'multiline':False]['text':'/ Set global mark','line_number':1610,'multiline':False]['text':'/','line_number':1611,'multiline':False]['text':'/ @param[in]  name    Mark name.','line_number':1612,'multiline':False]['text':'/ @param[in]  fm      Mark to be set.','line_number':1613,'multiline':False]['text':'/ @param[in]  update  If true then only set global mark if it was created','line_number':1614,'multiline':False]['text':'/                     later then existing one.','line_number':1615,'multiline':False]['text':'/','line_number':1616,'multiline':False]['text':'/ @return true on success, false on failure.','line_number':1617,'multiline':False]['text':'/ Set local mark','line_number':1635,'multiline':False]['text':'/','line_number':1636,'multiline':False]['text':'/ @param[in]  name    Mark name.','line_number':1637,'multiline':False]['text':'/ @param[in]  buf     Pointer to the buffer to set mark in.','line_number':1638,'multiline':False]['text':'/ @param[in]  fm      Mark to be set.','line_number':1639,'multiline':False]['text':'/ @param[in]  update  If true then only set global mark if it was created','line_number':1640,'multiline':False]['text':'/                     later then existing one.','line_number':1641,'multiline':False]['text':'/','line_number':1642,'multiline':False]['text':'/ @return true on success, false on failure.','line_number':1643,'multiline':False]['text':' Free items in the jumplist of window "wp".','line_number':1669,'multiline':False]['text':'/ Adjust position to point to the first byte of a multi-byte character','line_number':1699,'multiline':False]['text':'/','line_number':1700,'multiline':False]['text':'/ If it points to a tail byte it is move backwards to the head byte.','line_number':1701,'multiline':False]['text':'/','line_number':1702,'multiline':False]['text':'/ @param[in]  buf  Buffer to adjust position in.','line_number':1703,'multiline':False]['text':'/ @param[out]  lp  Position to adjust.','line_number':1704,'multiline':False]['text':' Reset "coladd" when the cursor would be on the right half of a','line_number':1715,'multiline':False]['text':' double-wide character.','line_number':1716,'multiline':False]['text':' Add information about mark 'mname' to list 'l'','line_number':1726,'multiline':False]['text':'/ Get information about marks local to a buffer.','line_number':1753,'multiline':False]['text':'/','line_number':1754,'multiline':False]['text':'/ @param[in] buf  Buffer to get the marks from','line_number':1755,'multiline':False]['text':'/ @param[out] l   List to store marks','line_number':1756,'multiline':False]['text':' Marks 'a' to 'z'','line_number':1762,'multiline':False]['text':' Mark '' is a window local mark and not a buffer local mark','line_number':1768,'multiline':False]['text':'/ Get a global mark','line_number':1780,'multiline':False]['text':'/','line_number':1781,'multiline':False]['text':'/ @note  Mark might not have it's fnum resolved.','line_number':1782,'multiline':False]['text':'/ @param[in]  Name of named mark','line_number':1783,'multiline':False]['text':'/ @param[out] Global/file mark','line_number':1784,'multiline':False]['text':'/ Get information about global marks ('A' to 'Z' and '0' to '9')','line_number':1790,'multiline':False]['text':'/','line_number':1791,'multiline':False]['text':'/ @param[out] l  List to store global marks','line_number':1792,'multiline':False]['text':' Marks 'A' to 'Z' and '0' to '9'','line_number':1799,'multiline':False]