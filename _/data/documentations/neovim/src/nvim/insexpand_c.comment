['text':' insexpand.c: functions for Insert mode completion','line_number':1,'multiline':False]['text':' Definitions used for CTRL-X submode.','line_number':67,'multiline':False]['text':' Note: If you change CTRL-X submode, you must also maintain ctrl_x_msgs[]','line_number':68,'multiline':False]['text':' and ctrl_x_mode_names[].','line_number':69,'multiline':False]['text':'/< CTRL-N CTRL-P completion, default','line_number':74,'multiline':False]['text':'/< only used in "ctrl_x_msgs"','line_number':89,'multiline':False]['text':'/< for builtin function complete()','line_number':90,'multiline':False]['text':'/< CTRL-X typed in CTRL_X_CMDLINE','line_number':91,'multiline':False]['text':'/ Message for CTRL-X mode, index is ctrl_x_mode.','line_number':97,'multiline':False]['text':' CTRL_X_NORMAL, ^P/^N compl.','line_number':99,'multiline':False]['text':' CTRL_X_SCROLL: depends on state','line_number':101,'multiline':False]['text':' CTRL_X_FINISHED','line_number':107,'multiline':False]['text':' CTRL_X_EVAL doesn't use msg.','line_number':115,'multiline':False]['text':' CTRL_X_FINISHED','line_number':128,'multiline':False]['text':' CTRL_X_LOCAL_MSG only used in "ctrl_x_msgs"','line_number':135,'multiline':False]['text':' Array indexes used for cp_text[].','line_number':140,'multiline':False]['text':'/< "abbr"','line_number':141,'multiline':False]['text':'/< "menu"','line_number':142,'multiline':False]['text':'/< "kind"','line_number':143,'multiline':False]['text':'/< "info"','line_number':144,'multiline':False]['text':'/< Number of entries','line_number':145,'multiline':False]['text':'/ Structure used to store one match for insert completion.','line_number':147,'multiline':False]['text':'/< matched text','line_number':152,'multiline':False]['text':'/< text for the menu','line_number':153,'multiline':False]['text':'/< file containing the match, allocated when','line_number':155,'multiline':False]['text':'/< cp_flags has CP_FREE_FNAME','line_number':156,'multiline':False]['text':'/< CP_ values','line_number':157,'multiline':False]['text':'/< sequence number','line_number':158,'multiline':False]['text':'/ state information used for getting the next set of insert completion','line_number':161,'multiline':False]['text':'/ matches.','line_number':162,'multiline':False]['text':'/< copy of 'complete'','line_number':164,'multiline':False]['text':'/< current entry in "e_cpt_copy"','line_number':165,'multiline':False]['text':'/< buffer being scanned','line_number':166,'multiline':False]['text':'/< current match position','line_number':167,'multiline':False]['text':'/< previous match position','line_number':168,'multiline':False]['text':'/< save first_match_pos/last_match_pos','line_number':169,'multiline':False]['text':'/< first match position','line_number':170,'multiline':False]['text':'/< last match position','line_number':171,'multiline':False]['text':'/< found all matches of a certain type.','line_number':172,'multiline':False]['text':'/< dictionary file to search','line_number':173,'multiline':False]['text':'/< "dict" is an exact file name or not','line_number':174,'multiline':False]['text':'/ values for cp_flags','line_number':181,'multiline':False]['text':'/< the original text when the expansion begun','line_number':183,'multiline':False]['text':'/< cp_fname is allocated','line_number':184,'multiline':False]['text':'/< use CONT_S_IPOS for compl_cont_status','line_number':185,'multiline':False]['text':'/< ins_compl_equal() always returns true','line_number':186,'multiline':False]['text':'/< ins_compl_equal ignores case','line_number':187,'multiline':False]['text':'/< use fast_breakcheck instead of os_breakcheck','line_number':188,'multiline':False]['text':' All the current matches are stored in a list.','line_number':194,'multiline':False]['text':' "compl_first_match" points to the start of the list.','line_number':195,'multiline':False]['text':' "compl_curr_match" points to the currently selected entry.','line_number':196,'multiline':False]['text':' "compl_shown_match" is different from compl_curr_match during','line_number':197,'multiline':False]['text':' ins_compl_get_exp().','line_number':198,'multiline':False]['text':' "compl_old_match" points to previous "compl_curr_match".','line_number':199,'multiline':False]['text':'/ After using a cursor key <Enter> selects a match in the popup menu,','line_number':206,'multiline':False]['text':'/ otherwise it inserts a line break.','line_number':207,'multiline':False]['text':'/ When "compl_leader" is not NULL only matches that start with this string','line_number':210,'multiline':False]['text':'/ are used.','line_number':211,'multiline':False]['text':'/< put longest common string in compl_leader','line_number':214,'multiline':False]['text':'/< false: select & insert','line_number':216,'multiline':False]['text':'/< true: noinsert','line_number':217,'multiline':False]['text':'/< false: select & insert','line_number':218,'multiline':False]['text':'/< true: noselect','line_number':219,'multiline':False]['text':'/< false: insert full match','line_number':220,'multiline':False]['text':'/< true: insert longest prefix','line_number':221,'multiline':False]['text':'/ Selected one of the matches. When false the match was edited or using the','line_number':223,'multiline':False]['text':'/ longest common string.','line_number':224,'multiline':False]['text':'/ didn't finish finding completions.','line_number':227,'multiline':False]['text':' Set when character typed while looking for matches and it means we should','line_number':230,'multiline':False]['text':' stop looking for matches.','line_number':231,'multiline':False]['text':'/< don't insert match','line_number':234,'multiline':False]['text':'/ When the first completion is done "compl_started" is set.  When it's','line_number':236,'multiline':False]['text':'/ false the word to be completed must be located.','line_number':237,'multiline':False]['text':'/ Which Ctrl-X mode are we in?','line_number':240,'multiline':False]['text':'/< number of completion matches','line_number':243,'multiline':False]['text':'/< > 1 for postponed CTRL-N','line_number':247,'multiline':False]['text':'/ Length in bytes of the text being completed (this is deleted to be replaced','line_number':249,'multiline':False]['text':'/ by the match.)','line_number':250,'multiline':False]['text':'/< column where the text starts','line_number':252,'multiline':False]['text':'/< that is being completed','line_number':253,'multiline':False]['text':'/< text as it was before','line_number':254,'multiline':False]['text':'/< completion started','line_number':255,'multiline':False]['text':'/ Undo information to restore extmarks for original text.','line_number':256,'multiline':False]['text':' List of flags for method of completion.','line_number':261,'multiline':False]['text':'/< "normal" or "adding" expansion','line_number':263,'multiline':False]['text':'/< a ^X interrupted the current expansion','line_number':264,'multiline':False]['text':'/< it's set only iff N_ADDS is set','line_number':265,'multiline':False]['text':'/< next ^X<> will add-new or expand-current','line_number':266,'multiline':False]['text':'/< next ^X<> will set initial_pos?','line_number':267,'multiline':False]['text':'/< if so, word-wise-expansion will set SOL','line_number':268,'multiline':False]['text':'/< pattern includes start of line, just for','line_number':269,'multiline':False]['text':'/< word-wise expansion, not set for ^X^L','line_number':270,'multiline':False]['text':'/< for ctrl_x_mode 0, ^X^P/^X^N do a local','line_number':271,'multiline':False]['text':'/< expansion, (eg use complete=.)','line_number':272,'multiline':False]['text':' length of located bad word','line_number':276,'multiline':False]['text':'/ CTRL-X pressed in Insert mode.','line_number':280,'multiline':False]['text':' if the next ^X<> won't ADD nothing, then reset compl_cont_status','line_number':284,'multiline':False]['text':' We're not sure which CTRL-X mode it will be yet','line_number':290,'multiline':False]['text':' CTRL-X in CTRL-X CTRL-V mode behaves differently to make CTRL-X','line_number':296,'multiline':False]['text':' CTRL-V look like CTRL-N','line_number':297,'multiline':False]['text':' Functions to check the current CTRL-X mode.','line_number':304,'multiline':False]['text':'/ Whether other than default completion has been selected.','line_number':402,'multiline':False]['text':'/ Whether CTRL-X was typed without a following character,','line_number':409,'multiline':False]['text':'/ not including when in CTRL-X CTRL-V mode.','line_number':410,'multiline':False]['text':'/ @return  true if currently in "normal" or "adding" insert completion matches state','line_number':417,'multiline':False]['text':'/ @return  true if the completion pattern includes start of line, just for','line_number':423,'multiline':False]['text':'/          word-wise expansion.','line_number':424,'multiline':False]['text':'/ @return  true if ^X^P/^X^N will do a local completion (i.e. use complete=.)','line_number':430,'multiline':False]['text':'/ Clear the completion status flags','line_number':436,'multiline':False]['text':'/ @return  true if completion is using the forward direction matches','line_number':442,'multiline':False]['text':'/ @return  true if currently showing forward completion matches','line_number':448,'multiline':False]['text':'/ @return  true if currently showing backward completion matches','line_number':454,'multiline':False]['text':'/ Check that the 'dictionary' or 'thesaurus' option can be used.','line_number':460,'multiline':False]['text':'/','line_number':461,'multiline':False]['text':'/ @param  dict_opt  check 'dictionary' when true, 'thesaurus' when false.','line_number':462,'multiline':False]['text':'/ Check that the character "c" a valid key to go to or keep us in CTRL-X mode?','line_number':484,'multiline':False]['text':'/ This depends on the current mode.','line_number':485,'multiline':False]['text':'/','line_number':486,'multiline':False]['text':'/ @param  c  character to check','line_number':487,'multiline':False]['text':' Always allow ^R - let its results then be checked','line_number':491,'multiline':False]['text':' Accept <PageUp> and <PageDown> if the popup menu is visible.','line_number':496,'multiline':False]['text':' Not in any CTRL-X mode','line_number':502,'multiline':False]['text':'/ @return  true if "match" is the original text when the completion began.','line_number':547,'multiline':False]['text':'/ @return  true if "match" is the first match in the completion list.','line_number':553,'multiline':False]['text':'/ Check that character "c" is part of the item currently being','line_number':559,'multiline':False]['text':'/ completed.  Used to decide whether to abandon complete mode when the menu','line_number':560,'multiline':False]['text':'/ is visible.','line_number':561,'multiline':False]['text':'/','line_number':562,'multiline':False]['text':'/ @param  c  character to check','line_number':563,'multiline':False]['text':' When expanding an identifier only accept identifier chars.','line_number':568,'multiline':False]['text':' When expanding file name only accept file name chars. But not','line_number':574,'multiline':False]['text':' path separators, so that "proto/<Tab>" expands files in','line_number':575,'multiline':False]['text':' "proto", not "proto/" as a whole','line_number':576,'multiline':False]['text':' Command line and Omni completion can work with just about any','line_number':582,'multiline':False]['text':' printable character, but do stop at white space.','line_number':583,'multiline':False]['text':' For while line completion a space can be part of the line.','line_number':587,'multiline':False]['text':'/ Get the completed text by inferring the case of the originally typed text.','line_number':593,'multiline':False]['text':'/ If the result is in allocated memory "tofree" is set to it.','line_number':594,'multiline':False]['text':' Allocate wide character array for the completion and fill it.','line_number':601,'multiline':False]['text':' Rule 1: Were any chars converted to lower?','line_number':610,'multiline':False]['text':' Rule 1 is satisfied.','line_number':618,'multiline':False]['text':' Rule 2: No lower case, 2nd consecutive letter converted to','line_number':628,'multiline':False]['text':' upper case.','line_number':629,'multiline':False]['text':' Rule 2 is satisfied.','line_number':635,'multiline':False]['text':' Copy the original case of the part we typed.','line_number':645,'multiline':False]['text':' Generate encoding specific output from wide character array.','line_number':658,'multiline':False]['text':' suppress clang "Dereference of NULL pointer"','line_number':666,'multiline':False]['text':' Multi-byte characters can occupy up to five bytes more than','line_number':670,'multiline':False]['text':' ASCII characters, and we also need one byte for NUL, so when','line_number':671,'multiline':False]['text':' getting to six bytes from the edge of IObuff switch to using a','line_number':672,'multiline':False]['text':' growarray.  Add the character in the next round.','line_number':673,'multiline':False]['text':'/ This is like ins_compl_add(), but if 'ic' and 'inf' are set, then the','line_number':693,'multiline':False]['text':'/ case of the originally typed text is used, and the case of the completed','line_number':694,'multiline':False]['text':'/ text is inferred, ie this tries to work out what case you probably wanted','line_number':695,'multiline':False]['text':'/ the rest of the word to be in -- webb','line_number':696,'multiline':False]['text':'/','line_number':697,'multiline':False]['text':'/ @param[in]  cont_s_ipos  next ^X<> will set initial_pos','line_number':698,'multiline':False]['text':' count multi-byte characters','line_number':704,'multiline':False]['text':' Infer case of completed part.','line_number':710,'multiline':False]['text':' Find actual length of completion.','line_number':712,'multiline':False]['text':' Find actual length of original text.','line_number':722,'multiline':False]['text':' "char_len" may be smaller than "compl_char_len" when using','line_number':732,'multiline':False]['text':' thesaurus, only use the minimum when comparing.','line_number':733,'multiline':False]['text':'/ free cptext','line_number':750,'multiline':False]['text':'/ Add a match to the list of matches','line_number':760,'multiline':False]['text':'/','line_number':761,'multiline':False]['text':'/ @param[in]  str     text of the match to add','line_number':762,'multiline':False]['text':'/ @param[in]  len     length of "str". If -1, then the length of "str" is computed.','line_number':763,'multiline':False]['text':'/ @param[in]  fname   file name to associate with this match. May be NULL.','line_number':764,'multiline':False]['text':'/ @param[in]  cptext  list of strings to use with this match (for abbr, menu, info','line_number':765,'multiline':False]['text':'/                     and kind). May be NULL.','line_number':766,'multiline':False]['text':'/                     If not NULL, must have exactly #CPT_COUNT items.','line_number':767,'multiline':False]['text':'/ @param[in]  cptext_allocated  If true, will not copy cptext strings.','line_number':768,'multiline':False]['text':'/','line_number':769,'multiline':False]['text':'/                               @note Will free strings in case of error.','line_number':770,'multiline':False]['text':'/                                     cptext itself will not be freed.','line_number':771,'multiline':False]['text':'/ @param[in]  user_data  user supplied data (any vim type) for this match','line_number':772,'multiline':False]['text':'/ @param[in]  cdir       match direction. If 0, use "compl_direction".','line_number':773,'multiline':False]['text':'/ @param[in]  flags_arg  match flags (cp_flags)','line_number':774,'multiline':False]['text':'/ @param[in]  adup       accept this match even if it is already present.','line_number':775,'multiline':False]['text':'/','line_number':776,'multiline':False]['text':'/ If "cdir" is FORWARD, then the match is added after the current match.','line_number':777,'multiline':False]['text':'/ Otherwise, it is added before the current match.','line_number':778,'multiline':False]['text':'/','line_number':779,'multiline':False]['text':'/ @return NOTDONE if the given string is already in the list of completions,','line_number':780,'multiline':False]['text':'/         otherwise it is added to the list and  OK is returned. FAIL will be','line_number':781,'multiline':False]['text':'/         returned in case of error.','line_number':782,'multiline':False]['text':' If the same match is already present, don't add it.','line_number':807,'multiline':False]['text':' Remove any popup menu before changing the list of matches.','line_number':823,'multiline':False]['text':' Allocate a new match structure.','line_number':826,'multiline':False]['text':' Copy the values to the new match structure.','line_number':827,'multiline':False]['text':' match-fname is:','line_number':835,'multiline':False]['text':' - compl_curr_match->cp_fname if it is a string equal to fname.','line_number':836,'multiline':False]['text':' - a copy of fname, CP_FREE_FNAME is set to free later THE allocated mem.','line_number':837,'multiline':False]['text':' - NULL otherwise.  --Acevedo','line_number':838,'multiline':False]['text':' Link the new match structure after (FORWARD) or before (BACKWARD) the','line_number':871,'multiline':False]['text':' current match in the list of matches .','line_number':872,'multiline':False]['text':' BACKWARD','line_number':878,'multiline':False]['text':' if there's nothing before, it is the first match','line_number':887,'multiline':False]['text':' Find the longest common string if still doing that.','line_number':892,'multiline':False]['text':'/ Check that "str[len]" matches with "match->cp_str", considering','line_number':900,'multiline':False]['text':'/ "match->cp_flags".','line_number':901,'multiline':False]['text':'/','line_number':902,'multiline':False]['text':'/ @param  match  completion match','line_number':903,'multiline':False]['text':'/ @param  str    character string to check','line_number':904,'multiline':False]['text':'/ @param  len    length of "str"','line_number':905,'multiline':False]['text':'/ Reduce the longest common string for match "match".','line_number':918,'multiline':False]['text':' First match, use it as a whole.','line_number':924,'multiline':False]['text':' When the match isn't there (to avoid matching itself) remove it','line_number':932,'multiline':False]['text':' again after redrawing.','line_number':933,'multiline':False]['text':' Reduce the text if this match differs from compl_leader.','line_number':942,'multiline':False]['text':' Leader was shortened, need to change the inserted text.','line_number':959,'multiline':False]['text':' When the match isn't there (to avoid matching itself) remove it','line_number':966,'multiline':False]['text':' again after redrawing.','line_number':967,'multiline':False]['text':'/ Add an array of matches to the list of matches.','line_number':976,'multiline':False]['text':'/ Frees matches[].','line_number':977,'multiline':False]['text':' If dir was BACKWARD then honor it just once.','line_number':987,'multiline':False]['text':'/ Make the completion list cyclic.','line_number':994,'multiline':False]['text':'/ Return the number of matches (excluding the original).','line_number':995,'multiline':False]['text':' Find the end of the list.','line_number':1002,'multiline':False]['text':' there's always an entry for the compl_orig_text, it doesn't count.','line_number':1005,'multiline':False]['text':'/ Return whether there currently is a shown match.','line_number':1016,'multiline':False]['text':'/ Return whether the shown match is long enough.','line_number':1022,'multiline':False]['text':'/ Set variables that store noselect and noinsert behavior from the','line_number':1029,'multiline':False]['text':'/ 'completeopt' value.','line_number':1030,'multiline':False]['text':'/ "compl_match_array" points the currently displayed list of entries in the','line_number':1047,'multiline':False]['text':'/ popup menu.  It is NULL when there is no popup menu.','line_number':1048,'multiline':False]['text':'/ Remove any popup menu.','line_number':1052,'multiline':False]['text':'/ Check if the popup menu should be displayed.','line_number':1063,'multiline':False]['text':' "completeopt" must contain "menu" or "menuone"','line_number':1067,'multiline':False]['text':'/ Check that there are two or more matches to be shown in the popup menu.','line_number':1071,'multiline':False]['text':'/ One if "completopt" contains "menuone".','line_number':1072,'multiline':False]['text':' Don't display the popup menu if there are no matches or there is only','line_number':1076,'multiline':False]['text':' one (ignoring the original text).','line_number':1077,'multiline':False]['text':'/ Convert to complete item dict','line_number':1093,'multiline':False]['text':' { word, abbr, menu, kind, info }','line_number':1096,'multiline':False]['text':'/ Trigger the CompleteChanged autocmd event. Invoked each time the Insert mode','line_number':1111,'multiline':False]['text':'/ completion menu is changed.','line_number':1112,'multiline':False]['text':'/ Build a popup menu to show the completion matches.','line_number':1141,'multiline':False]['text':'/','line_number':1142,'multiline':False]['text':'/ @return  the popup menu entry that should be selected,','line_number':1143,'multiline':False]['text':'/          -1 if nothing should be selected.','line_number':1144,'multiline':False]['text':' Need to build the popup menu list.','line_number':1147,'multiline':False]['text':' If it's user complete function and refresh_always,','line_number':1151,'multiline':False]['text':' do not use "compl_leader" as prefix filter.','line_number':1152,'multiline':False]['text':' If the current match is the original text don't find the first','line_number':1175,'multiline':False]['text':' match after it, don't highlight anything.','line_number':1176,'multiline':False]['text':' This item is the shown match or this is the','line_number':1190,'multiline':False]['text':' first displayed item after the shown match.','line_number':1191,'multiline':False]['text':' Remember this displayed match for when the','line_number':1196,'multiline':False]['text':' shown match is just below it.','line_number':1197,'multiline':False]['text':' When the original text is the shown match don't set','line_number':1220,'multiline':False]['text':' compl_shown_match.','line_number':1221,'multiline':False]['text':' The shown match isn't displayed, set it to the','line_number':1227,'multiline':False]['text':' previously displayed match.','line_number':1228,'multiline':False]['text':' no displayed match at all','line_number':1236,'multiline':False]['text':'/ Show the popup menu for the list of matches.','line_number':1243,'multiline':False]['text':'/ Also adjusts "compl_shown_match" to an entry that is actually displayed.','line_number':1244,'multiline':False]['text':' Update the screen before drawing the popup menu over it.','line_number':1251,'multiline':False]['text':' Need to build the popup menu list.','line_number':1259,'multiline':False]['text':' popup menu already exists, only need to find the current item.','line_number':1262,'multiline':False]['text':' In Replace mode when a $ is displayed at the end of the line only','line_number':1276,'multiline':False]['text':' part of the screen would be updated.  We do need to redraw here.','line_number':1277,'multiline':False]['text':' Compute the screen column of the start of the completed text.','line_number':1280,'multiline':False]['text':' Use the cursor to get all wrapping and other settings right.','line_number':1281,'multiline':False]['text':'/< use just first element in "dict"','line_number':1293,'multiline':False]['text':'/< "dict" is the exact name of a file','line_number':1294,'multiline':False]['text':'/ Add any identifiers that match the given pattern "pat" in the list of','line_number':1296,'multiline':False]['text':'/ dictionary files "dict_start" to the list of completions.','line_number':1297,'multiline':False]['text':'/','line_number':1298,'multiline':False]['text':'/ @param flags      DICT_FIRST and/or DICT_EXACT','line_number':1299,'multiline':False]['text':'/ @param thesaurus  Thesaurus completion','line_number':1300,'multiline':False]['text':' When 'dictionary' is empty and spell checking is enabled use','line_number':1311,'multiline':False]['text':' "spell".','line_number':1312,'multiline':False]['text':' so that we can goto theend','line_number':1321,'multiline':False]['text':' If 'infercase' is set, don't use 'smartcase' here','line_number':1323,'multiline':False]['text':' When invoked to match whole lines for CTRL-X CTRL-L adjust the pattern','line_number':1329,'multiline':False]['text':' to only match at the start of a line.  Otherwise just match the','line_number':1330,'multiline':False]['text':' pattern. Also need to double backslashes.','line_number':1331,'multiline':False]['text':' ignore case depends on 'ignorecase', 'smartcase' and "pat"','line_number':1348,'multiline':False]['text':' copy one dictionary file name into buf','line_number':1351,'multiline':False]['text':' Expand wildcards in the dictionary name, but do not allow','line_number':1356,'multiline':False]['text':' backticks (for security, the 'dict' option may have been set in','line_number':1357,'multiline':False]['text':' a modeline).','line_number':1358,'multiline':False]['text':' Complete from active spelling.  Skip "\<" in the pattern, we','line_number':1370,'multiline':False]['text':' don't use it as a RE.','line_number':1371,'multiline':False]['text':' avoid warning for using "files" uninit','line_number':1378,'multiline':False]['text':'/ Add all the words in the line "*buf_arg" from the thesaurus file "fname"','line_number':1396,'multiline':False]['text':'/ skipping the word at 'skip_word'.','line_number':1397,'multiline':False]['text':'/','line_number':1398,'multiline':False]['text':'/ @return  OK on success.','line_number':1399,'multiline':False]['text':' Add the other matches on the line','line_number':1404,'multiline':False]['text':' Find start of the next word.  Skip white','line_number':1407,'multiline':False]['text':' space and punctuation.','line_number':1408,'multiline':False]['text':' Find end of the word.','line_number':1415,'multiline':False]['text':' Japanese words may have characters in','line_number':1416,'multiline':False]['text':' different classes, only separate words','line_number':1417,'multiline':False]['text':' with single-byte non-word characters.','line_number':1418,'multiline':False]['text':' Add the word. Skip the regexp match.','line_number':1428,'multiline':False]['text':'/ Process "count" dictionary/thesaurus "files" and add the text matching','line_number':1442,'multiline':False]['text':'/ "regmatch".','line_number':1443,'multiline':False]['text':' open dictionary file','line_number':1449,'multiline':False]['text':' reset in msg_trunc()','line_number':1451,'multiline':False]['text':' Read dictionary file line by line.','line_number':1461,'multiline':False]['text':' Check each line for a match.','line_number':1462,'multiline':False]['text':' For a thesaurus, add all the words in the line','line_number':1476,'multiline':False]['text':' if dir was BACKWARD then honor it just once','line_number':1481,'multiline':False]['text':' avoid expensive call to vim_regexec() when at end','line_number':1486,'multiline':False]['text':' of line','line_number':1487,'multiline':False]['text':'/ Find the start of the next word.','line_number':1499,'multiline':False]['text':'/ Returns a pointer to the first char of the word.  Also stops at a NUL.','line_number':1500,'multiline':False]['text':'/ Find the end of the word.  Assumes it starts inside a word.','line_number':1510,'multiline':False]['text':'/ Returns a pointer to just after the word.','line_number':1511,'multiline':False]['text':'/ Find the end of the line, omitting CR and NL at the end.','line_number':1527,'multiline':False]['text':'/','line_number':1528,'multiline':False]['text':'/ @return  a pointer to just after the line.','line_number':1529,'multiline':False]['text':'/ Free the list of completions','line_number':1539,'multiline':False]['text':' several entries may use the same fname, free it just once.','line_number':1557,'multiline':False]['text':'/ Reset/clear the completion state.','line_number':1570,'multiline':False]['text':' clear v:completed_item','line_number':1582,'multiline':False]['text':'/ Check that Insert completion is active.','line_number':1586,'multiline':False]['text':'/ Selected one of the matches.  When false the match was edited or using the','line_number':1593,'multiline':False]['text':'/ longest common string.','line_number':1594,'multiline':False]['text':'/ Initialize get longest common string.','line_number':1600,'multiline':False]['text':'/ Returns true when insert completion is interrupted.','line_number':1606,'multiline':False]['text':'/ Returns true if the <Enter> key selects a match in the completion popup','line_number':1612,'multiline':False]['text':'/ menu.','line_number':1613,'multiline':False]['text':'/ Return the column where the text starts that is being completed','line_number':1619,'multiline':False]['text':'/ Return the length in bytes of the text being completed','line_number':1625,'multiline':False]['text':'/ Delete one character before the cursor and show the subset of the matches','line_number':1631,'multiline':False]['text':'/ that match the word that is now before the cursor.','line_number':1632,'multiline':False]['text':'/ Returns the character to be used, NUL if the work is done and another char','line_number':1633,'multiline':False]['text':'/ to be got from the user.','line_number':1634,'multiline':False]['text':' Stop completion when the whole word was deleted.  For Omni completion','line_number':1642,'multiline':False]['text':' allow the word to be deleted, we won't match everything.','line_number':1643,'multiline':False]['text':' Respect the 'backspace' option.','line_number':1644,'multiline':False]['text':' Deleted more than what was used to find matches or didn't finish','line_number':1653,'multiline':False]['text':' finding all matches: need to look for matches all over again.','line_number':1654,'multiline':False]['text':' ins_compl_restart() calls update_screen() which may invalidate the pointer','line_number':1660,'multiline':False]['text':' TODO(bfredl): get rid of random update_screen() calls deep inside completion logic','line_number':1661,'multiline':False]['text':' Make sure current match is not a hidden item.','line_number':1669,'multiline':False]['text':'/ Check that we need to find matches again, ins_compl_restart() is to','line_number':1675,'multiline':False]['text':'/ be called.','line_number':1676,'multiline':False]['text':' Return true if we didn't complete finding matches or when the','line_number':1680,'multiline':False]['text':' "completefunc" returned "always" in the "refresh" dictionary item.','line_number':1681,'multiline':False]['text':'/ Called after changing "compl_leader".','line_number':1687,'multiline':False]['text':'/ Show the popup menu with a different set of matches.','line_number':1688,'multiline':False]['text':'/ May also search for matches again if the previous search was interrupted.','line_number':1689,'multiline':False]['text':' need to redetect bad word','line_number':1700,'multiline':False]['text':' Matches were cleared, need to search for them now.','line_number':1701,'multiline':False]['text':' Set "compl_restarting" to avoid that the first match is inserted.','line_number':1702,'multiline':False]['text':' Show the popup menu with a different set of matches.','line_number':1712,'multiline':False]['text':' Don't let Enter select the original text when there is no popup menu.','line_number':1715,'multiline':False]['text':' Don't let Enter select when use user function and refresh_always is set','line_number':1716,'multiline':False]['text':'/ Return the length of the completion, from the completion start column to','line_number':1722,'multiline':False]['text':'/ the cursor column.  Making sure it never goes below zero.','line_number':1723,'multiline':False]['text':'/ Append one character to the match leader.  May reduce the number of','line_number':1734,'multiline':False]['text':'/ matches.','line_number':1735,'multiline':False]['text':' If we didn't complete finding matches we must search again.','line_number':1753,'multiline':False]['text':'/ Setup for finding completions again without leaving CTRL-X mode.  Used when','line_number':1764,'multiline':False]['text':'/ BS or a key was typed while still searching for matches.','line_number':1765,'multiline':False]['text':' update screen before restart.','line_number':1768,'multiline':False]['text':' so if complete is blocked,','line_number':1769,'multiline':False]['text':' will stay to the last popup menu and reduce flicker','line_number':1770,'multiline':False]['text':' TODO(bfredl): no.','line_number':1771,'multiline':False]['text':'/ Set the first match, the original text.','line_number':1779,'multiline':False]['text':' Replace the original text entry.','line_number':1783,'multiline':False]['text':' The CP_ORIGINAL_TEXT flag is either at the first item or might possibly','line_number':1784,'multiline':False]['text':' be at the last item for backward completion','line_number':1785,'multiline':False]['text':' safety check','line_number':1786,'multiline':False]['text':'/ Append one character to the match leader.  May reduce the number of','line_number':1796,'multiline':False]['text':'/ matches.','line_number':1797,'multiline':False]['text':' the match is too short','line_number':1803,'multiline':False]['text':' When still at the original match use the first entry that matches','line_number':1804,'multiline':False]['text':' the leader.','line_number':1805,'multiline':False]['text':'/ Set the CTRL-X completion mode based on the key "c" typed after a CTRL-X.','line_number':1828,'multiline':False]['text':'/ Uses the global variables: ctrl_x_mode, edit_submode, edit_submode_pre,','line_number':1829,'multiline':False]['text':'/ compl_cont_mode and compl_cont_status.','line_number':1830,'multiline':False]['text':'/','line_number':1831,'multiline':False]['text':'/ @return  true when the character is not to be inserted.','line_number':1832,'multiline':False]['text':' scroll the window one line up or down','line_number':1840,'multiline':False]['text':' complete whole line','line_number':1851,'multiline':False]['text':' complete filenames','line_number':1855,'multiline':False]['text':' complete words from a dictionary','line_number':1859,'multiline':False]['text':' Register insertion without exiting CTRL-X mode','line_number':1863,'multiline':False]['text':' Simply allow ^R to happen without affecting ^X mode','line_number':1864,'multiline':False]['text':' complete words from a thesaurus','line_number':1867,'multiline':False]['text':' user defined completion','line_number':1871,'multiline':False]['text':' omni completion','line_number':1875,'multiline':False]['text':' complete spelling suggestions','line_number':1880,'multiline':False]['text':' Avoid getting the E756 error twice.','line_number':1882,'multiline':False]['text':' complete tag names','line_number':1887,'multiline':False]['text':' complete keywords from included files','line_number':1892,'multiline':False]['text':' complete definitions from included files','line_number':1896,'multiline':False]['text':' complete vim commands','line_number':1901,'multiline':False]['text':' stop completion','line_number':1905,'multiline':False]['text':' ^X^P means LOCAL expansion if nothing interrupted (eg we','line_number':1913,'multiline':False]['text':' just started ^X mode, or there were enough ^X's to cancel','line_number':1914,'multiline':False]['text':' the previous mode, say ^X^F^X^X^P or ^P^X^X^X^P, see below)','line_number':1915,'multiline':False]['text':' do normal expansion when interrupting a different mode (say','line_number':1916,'multiline':False]['text':' ^X^F^X^P or ^P^X^X^P, see below)','line_number':1917,'multiline':False]['text':' nothing changes if interrupting mode 0, (eg, the flag','line_number':1918,'multiline':False]['text':' doesn't change when going to ADDING mode  -- Acevedo','line_number':1919,'multiline':False]['text':' If we have typed at least 2 ^X's... for modes != 0, we set','line_number':1927,'multiline':False]['text':' compl_cont_status = 0 (eg, as if we had just started ^X','line_number':1928,'multiline':False]['text':' mode).','line_number':1929,'multiline':False]['text':' For mode 0, we set "compl_cont_mode" to an impossible','line_number':1930,'multiline':False]['text':' value, in both cases ^X^X can be used to restart the same','line_number':1931,'multiline':False]['text':' mode (avoiding ADDING mode).','line_number':1932,'multiline':False]['text':' Undocumented feature: In a mode != 0 ^X^P and ^X^X^P start','line_number':1933,'multiline':False]['text':' 'complete' and local ^P expansions respectively.','line_number':1934,'multiline':False]['text':' In mode 0 an extra ^X is needed since ^X^P goes to ADDING','line_number':1935,'multiline':False]['text':' mode  -- Acevedo','line_number':1936,'multiline':False]['text':'/ Stop insert completion mode','line_number':1953,'multiline':False]['text':' Get here when we have finished typing a sequence of ^N and','line_number':1956,'multiline':False]['text':' ^P or other completion characters in CTRL-X mode.  Free up','line_number':1957,'multiline':False]['text':' memory that was used, and make sure we can redo the insert.','line_number':1958,'multiline':False]['text':' If any of the original typed text has been changed, eg when','line_number':1960,'multiline':False]['text':' ignorecase is set, we must add back-spaces to the redo','line_number':1961,'multiline':False]['text':' buffer.  We add as few as necessary to delete just the part','line_number':1962,'multiline':False]['text':' of the original text that has changed.','line_number':1963,'multiline':False]['text':' When using the longest match, edited the match or used','line_number':1964,'multiline':False]['text':' CTRL-E then don't use the current match.','line_number':1965,'multiline':False]['text':' When completing whole lines: fix indent for 'cindent'.','line_number':1977,'multiline':False]['text':' Otherwise, break line if it's too long.','line_number':1978,'multiline':False]['text':' re-indent the current line','line_number':1980,'multiline':False]['text':' don't do it again','line_number':1983,'multiline':False]['text':' put the cursor on the last char, for 'tw' formatting','line_number':1988,'multiline':False]['text':' only format when something was inserted','line_number':1993,'multiline':False]['text':' If the popup menu is displayed pressing CTRL-Y means accepting','line_number':2004,'multiline':False]['text':' the selection without inserting anything.  When','line_number':2005,'multiline':False]['text':' compl_enter_selects is set the Enter key does the same.','line_number':2006,'multiline':False]['text':' CTRL-E means completion is Ended, go back to the typed text.','line_number':2013,'multiline':False]['text':' but only do this, if the Popup is still visible','line_number':2014,'multiline':False]['text':' Trigger the CompleteDonePre event to give scripts a chance to','line_number':2036,'multiline':False]['text':' act upon the completion before clearing the info, and restore','line_number':2037,'multiline':False]['text':' ctrl_x_mode, so that complete_info() can be used.','line_number':2038,'multiline':False]['text':' necessary for "noshowmode"','line_number':2046,'multiline':False]['text':' Avoid the popup menu remains displayed when leaving the','line_number':2056,'multiline':False]['text':' command line window.','line_number':2057,'multiline':False]['text':' Indent now if a key was typed that is in 'cinkeys'.','line_number':2061,'multiline':False]['text':' Trigger the CompleteDone event to give scripts a chance to act','line_number':2065,'multiline':False]['text':' upon the end of completion.','line_number':2066,'multiline':False]['text':'/ Prepare for Insert mode completion, or stop it.','line_number':2072,'multiline':False]['text':'/ Called just after typing a character in Insert mode.','line_number':2073,'multiline':False]['text':'/','line_number':2074,'multiline':False]['text':'/ @param  c  character that was typed','line_number':2075,'multiline':False]['text':'/','line_number':2076,'multiline':False]['text':'/ @return true when the character is not to be inserted;','line_number':2077,'multiline':False]['text':' Forget any previous 'special' messages if this is actually','line_number':2083,'multiline':False]['text':' a ^X mode key - bar ^R, in which case we wait to see what it gives us.','line_number':2084,'multiline':False]['text':' Ignore end of Select mode mapping and mouse scroll/movement.','line_number':2089,'multiline':False]['text':' Not starting another completion mode.','line_number':2099,'multiline':False]['text':' CTRL-X CTRL-Z should stop completion without inserting anything','line_number':2102,'multiline':False]['text':' Other CTRL-X keys first stop completion, then start another','line_number':2109,'multiline':False]['text':' completion mode.','line_number':2110,'multiline':False]['text':' Set "compl_get_longest" when finding the first matches.','line_number':2116,'multiline':False]['text':' We have just typed CTRL-X and aren't quite sure which CTRL-X mode','line_number':2124,'multiline':False]['text':' it will be yet.  Now we decide.','line_number':2125,'multiline':False]['text':' We're already in CTRL-X mode, do we stay in it?','line_number':2128,'multiline':False]['text':' Show error message from attempted keyword completion (probably','line_number':2141,'multiline':False]['text':' 'Pattern not found') until another key is hit, then go back to','line_number':2142,'multiline':False]['text':' showing what mode we are in.','line_number':2143,'multiline':False]['text':' Trigger the CompleteDone event to give scripts a chance to act','line_number':2154,'multiline':False]['text':' upon the (possibly failed) completion.','line_number':2155,'multiline':False]['text':' reset continue_* if we left expansion-mode, if we stay they'll be','line_number':2161,'multiline':False]['text':' (re)set properly in ins_complete()','line_number':2162,'multiline':False]['text':'/ Fix the redo buffer for the completion leader replacing some of the typed','line_number':2171,'multiline':False]['text':'/ text.  This inserts backspaces and appends the changed text.','line_number':2172,'multiline':False]['text':'/ "ptr" is the known leader text or NUL.','line_number':2173,'multiline':False]['text':' nothing to do','line_number':2183,'multiline':False]['text':'/ Loops through the list of windows, loaded-buffers or non-loaded-buffers','line_number':2201,'multiline':False]['text':'/ (depending on flag) starting from buf and looking for a non-scanned','line_number':2202,'multiline':False]['text':'/ buffer (other than curbuf).  curbuf is special, if it is called with','line_number':2203,'multiline':False]['text':'/ buf=curbuf then it has to be the first call for a given flag/expansion.','line_number':2204,'multiline':False]['text':'/','line_number':2205,'multiline':False]['text':'/ Returns the buffer to scan, if any, otherwise returns curbuf -- Acevedo','line_number':2206,'multiline':False]['text':' just windows','line_number':2211,'multiline':False]['text':' first call for this flag/expansion or window was closed','line_number':2213,'multiline':False]['text':' 'b' (just loaded buffers), 'u' (just non-loaded buffers) or 'U'','line_number':2221,'multiline':False]['text':' (unlisted buffers)','line_number':2222,'multiline':False]['text':' When completing whole lines skip unloaded buffers.','line_number':2223,'multiline':False]['text':'/< 'completefunc' callback function','line_number':2234,'multiline':False]['text':'/< 'omnifunc' callback function','line_number':2235,'multiline':False]['text':'/< 'thesaurusfunc' callback function','line_number':2236,'multiline':False]['text':'/ Copy a global callback function to a buffer local callback.','line_number':2238,'multiline':False]['text':'/ Parse the 'completefunc' option value and set the callback function.','line_number':2247,'multiline':False]['text':'/ Invoked when the 'completefunc' option is set. The option value can be a','line_number':2248,'multiline':False]['text':'/ name of a function (string), or function(<name>) or funcref(<name>) or a','line_number':2249,'multiline':False]['text':'/ lambda expression.','line_number':2250,'multiline':False]['text':'/ Copy the global 'completefunc' callback function to the buffer-local','line_number':2261,'multiline':False]['text':'/ 'completefunc' callback for "buf".','line_number':2262,'multiline':False]['text':'/ Parse the 'omnifunc' option value and set the callback function.','line_number':2268,'multiline':False]['text':'/ Invoked when the 'omnifunc' option is set. The option value can be a','line_number':2269,'multiline':False]['text':'/ name of a function (string), or function(<name>) or funcref(<name>) or a','line_number':2270,'multiline':False]['text':'/ lambda expression.','line_number':2271,'multiline':False]['text':'/ Copy the global 'omnifunc' callback function to the buffer-local 'omnifunc'','line_number':2282,'multiline':False]['text':'/ callback for "buf".','line_number':2283,'multiline':False]['text':'/ Parse the 'thesaurusfunc' option value and set the callback function.','line_number':2289,'multiline':False]['text':'/ Invoked when the 'thesaurusfunc' option is set. The option value can be a','line_number':2290,'multiline':False]['text':'/ name of a function (string), or function(<name>) or funcref(<name>) or a','line_number':2291,'multiline':False]['text':'/ lambda expression.','line_number':2292,'multiline':False]['text':' buffer-local option set','line_number':2298,'multiline':False]['text':' global option set','line_number':2301,'multiline':False]['text':'/ Mark the global 'completefunc' 'omnifunc' and 'thesaurusfunc' callbacks with','line_number':2308,'multiline':False]['text':'/ "copyID" so that they are not garbage collected.','line_number':2309,'multiline':False]['text':'/ Get the user-defined completion function name for completion "type"','line_number':2319,'multiline':False]['text':'/ Get the callback to use for insert mode completion.','line_number':2334,'multiline':False]['text':' CTRL_X_THESAURUS','line_number':2343,'multiline':False]['text':'/ Execute user defined complete function 'completefunc', 'omnifunc' or','line_number':2347,'multiline':False]['text':'/ 'thesaurusfunc', and get matches in "matches".','line_number':2348,'multiline':False]['text':'/','line_number':2349,'multiline':False]['text':'/ @param type  either CTRL_X_OMNI or CTRL_X_FUNCTION or CTRL_X_THESAURUS','line_number':2350,'multiline':False]['text':' Call 'completefunc' to obtain the list of matches.','line_number':2364,'multiline':False]['text':' Lock the text to avoid weird things from happening.  Also disallow','line_number':2373,'multiline':False]['text':' switching to another window, it should not be needed and may end up in','line_number':2374,'multiline':False]['text':' Insert mode in another buffer.','line_number':2375,'multiline':False]['text':' Call a function, which returns a list or dict.','line_number':2380,'multiline':False]['text':' TODO(brammool): Give error message?','line_number':2392,'multiline':False]['text':' restore the cursor position','line_number':2399,'multiline':False]['text':' Restore State, it might have been changed.','line_number':2413,'multiline':False]['text':'/ Add a match to the list of matches from Vimscript object','line_number':2424,'multiline':False]['text':'/','line_number':2425,'multiline':False]['text':'/ @param[in]  tv  Object to get matches from.','line_number':2426,'multiline':False]['text':'/ @param[in]  dir  Completion direction.','line_number':2427,'multiline':False]['text':'/ @param[in]  fast  use fast_breakcheck() instead of os_breakcheck().','line_number':2428,'multiline':False]['text':'/','line_number':2429,'multiline':False]['text':'/ @return NOTDONE if the given string is already in the list of completions,','line_number':2430,'multiline':False]['text':'/         otherwise it is added to the list and  OK is returned. FAIL will be','line_number':2431,'multiline':False]['text':'/         returned in case of error.','line_number':2432,'multiline':False]['text':'/ Add completions from a list.','line_number':2478,'multiline':False]['text':' Go through the List with matches and add each of them.','line_number':2483,'multiline':False]['text':' If dir was BACKWARD then honor it just once.','line_number':2486,'multiline':False]['text':'/ Add completions from a dict.','line_number':2494,'multiline':False]['text':' Check for optional "refresh" item.','line_number':2497,'multiline':False]['text':' Add completions from a "words" list.','line_number':2508,'multiline':False]['text':'/ Save extmarks in "compl_orig_text" so that they may be restored when the','line_number':2515,'multiline':False]['text':'/ completion is cancelled, or the original text is completed.','line_number':2516,'multiline':False]['text':'/ Start completion for the complete() function.','line_number':2531,'multiline':False]['text':'/','line_number':2532,'multiline':False]['text':'/ @param startcol  where the matched text starts (1 is first column).','line_number':2533,'multiline':False]['text':'/ @param list      the list of matches.','line_number':2534,'multiline':False]['text':' If already doing completions stop it.','line_number':2539,'multiline':False]['text':' compl_pattern doesn't need to be set','line_number':2553,'multiline':False]['text':' Lazily show the popup menu, unless we got interrupted.','line_number':2586,'multiline':False]['text':'/ "complete()" function','line_number':2595,'multiline':False]['text':' Check for undo allowed here, because if something was already inserted','line_number':2603,'multiline':False]['text':' the line was already saved for undo and this check isn't done.','line_number':2604,'multiline':False]['text':'/ "complete_add()" function','line_number':2619,'multiline':False]['text':'/ "complete_check()" function','line_number':2625,'multiline':False]['text':'/ Return Insert completion mode name string','line_number':2636,'multiline':False]['text':'/ Assign the sequence number to all the completion matches which don't have','line_number':2645,'multiline':False]['text':'/ one assigned yet.','line_number':2646,'multiline':False]['text':' Search backwards for the first valid (!= -1) number.','line_number':2653,'multiline':False]['text':' This should normally succeed already at the first loop','line_number':2654,'multiline':False]['text':' cycle, so it's fast!','line_number':2655,'multiline':False]['text':' go up and assign all numbers which are not assigned yet','line_number':2664,'multiline':False]['text':' BACKWARD','line_number':2671,'multiline':False]['text':' Search forwards (upwards) for the first valid (!= -1)','line_number':2673,'multiline':False]['text':' number.  This should normally succeed already at the','line_number':2674,'multiline':False]['text':' first loop cycle, so it's fast!','line_number':2675,'multiline':False]['text':' go down and assign all numbers which are not assigned yet','line_number':2684,'multiline':False]['text':' There are four cases to consider here:','line_number':2702,'multiline':False]['text':' 1) when just going forward through the menu,','line_number':2703,'multiline':False]['text':'    compl_first_match should point to the initial entry with','line_number':2704,'multiline':False]['text':'    number zero and CP_ORIGINAL_TEXT flag set','line_number':2705,'multiline':False]['text':' 2) when just going backwards,','line_number':2706,'multiline':False]['text':'    compl-first_match should point to the last entry before','line_number':2707,'multiline':False]['text':'    the entry with the CP_ORIGINAL_TEXT flag set','line_number':2708,'multiline':False]['text':' 3) when first going forwards and then backwards, e.g.','line_number':2709,'multiline':False]['text':'    pressing C-N, C-P, compl_first_match points to the','line_number':2710,'multiline':False]['text':'    last entry before the entry with the CP_ORIGINAL_TEXT','line_number':2711,'multiline':False]['text':'    flag set and next-entry moves opposite through the list','line_number':2712,'multiline':False]['text':'    compared to case 2, so pretend the direction is forward again','line_number':2713,'multiline':False]['text':' 4) when first going backwards and then forwards, e.g.','line_number':2714,'multiline':False]['text':'    pressing C-P, C-N, compl_first_match points to the','line_number':2715,'multiline':False]['text':'    first entry with the CP_ORIGINAL_TEXT','line_number':2716,'multiline':False]['text':'    flag set and next-entry moves in opposite direction through the list','line_number':2717,'multiline':False]['text':'    compared to case 1, so pretend the direction is backwards again','line_number':2718,'multiline':False]['text':'','line_number':2719,'multiline':False]['text':' But only do this when the 'noselect' option is not active!','line_number':2720,'multiline':False]['text':' Skip the element with the CP_ORIGINAL_TEXT flag at the beginning, in case of','line_number':2730,'multiline':False]['text':' forward completion, or at the end, in case of backward completion.','line_number':2731,'multiline':False]['text':' Add an empty string for backwards compatibility','line_number':2746,'multiline':False]['text':'/ Get complete information','line_number':2758,'multiline':False]['text':' TODO(vim):','line_number':2819,'multiline':False]['text':' if (ret == OK && (what_flag & CI_WHAT_INSERTED))','line_number':2820,'multiline':False]['text':'/ "complete_info()" function','line_number':2823,'multiline':False]['text':'/ Returns true when using a user-defined function for thesaurus completion.','line_number':2840,'multiline':False]['text':'/ Return value of process_next_cpt_value()','line_number':2847,'multiline':False]['text':'/ Process the next 'complete' option value in st->e_cpt.','line_number':2854,'multiline':False]['text':'/','line_number':2855,'multiline':False]['text':'/ If successful, the arguments are set as below:','line_number':2856,'multiline':False]['text':'/   st->cpt - pointer to the next option value in "st->cpt"','line_number':2857,'multiline':False]['text':'/   compl_type_arg - type of insert mode completion to use','line_number':2858,'multiline':False]['text':'/   st->found_all - all matches of this type are found','line_number':2859,'multiline':False]['text':'/   st->ins_buf - search for completions in this buffer','line_number':2860,'multiline':False]['text':'/   st->first_match_pos - position of the first completion match','line_number':2861,'multiline':False]['text':'/   st->last_match_pos - position of the last completion match','line_number':2862,'multiline':False]['text':'/   st->set_match_pos - true if the first match position should be saved to','line_number':2863,'multiline':False]['text':'/                       avoid loops after the search wraps around.','line_number':2864,'multiline':False]['text':'/   st->dict - name of the dictionary or thesaurus file to search','line_number':2865,'multiline':False]['text':'/   st->dict_f - flag specifying whether "dict" is an exact file name or not','line_number':2866,'multiline':False]['text':'/','line_number':2867,'multiline':False]['text':'/ @return  INS_COMPL_CPT_OK if the next value is processed successfully.','line_number':2868,'multiline':False]['text':'/          INS_COMPL_CPT_CONT to skip the current completion source matching','line_number':2869,'multiline':False]['text':'/          the "st->e_cpt" option value and process the next matching source.','line_number':2870,'multiline':False]['text':'/          INS_COMPL_CPT_END if all the values in "st->e_cpt" are processed.','line_number':2871,'multiline':False]['text':' Move the cursor back one character so that ^N can match the','line_number':2887,'multiline':False]['text':' word immediately after the cursor.','line_number':2888,'multiline':False]['text':' Move the cursor to after the last character in the','line_number':2890,'multiline':False]['text':' buffer, so that word at start of buffer is found','line_number':2891,'multiline':False]['text':' correctly.','line_number':2892,'multiline':False]['text':' Remember the first match so that the loop stops when we','line_number':2899,'multiline':False]['text':' wrap and come back there a second time.','line_number':2900,'multiline':False]['text':' Scan a buffer, but not the current one.','line_number':2904,'multiline':False]['text':' loaded buffer','line_number':2905,'multiline':False]['text':' unloaded buffer, scan like dictionary','line_number':2911,'multiline':False]['text':' reset in msg_trunc()','line_number':2922,'multiline':False]['text':' compl_type = -1;','line_number':2935,'multiline':False]['text':' reset in msg_trunc()','line_number':2955,'multiline':False]['text':' in any case e_cpt is advanced to the next entry','line_number':2961,'multiline':False]['text':'/ Get the next set of identifiers or defines matching "compl_pattern" in','line_number':2975,'multiline':False]['text':'/ included files.','line_number':2976,'multiline':False]['text':'/ Get the next set of words matching "compl_pattern" in dictionary or','line_number':2987,'multiline':False]['text':'/ thesaurus files.','line_number':2988,'multiline':False]['text':'/ Get the next set of tag names matching "compl_pattern".','line_number':3005,'multiline':False]['text':' set p_ic according to p_ic, p_scs and pat for find_tags().','line_number':3008,'multiline':False]['text':' Find up to TAG_MANY matches.  Avoids that an enormous number','line_number':3012,'multiline':False]['text':' of matches is found when compl_pattern is empty','line_number':3013,'multiline':False]['text':'/ Get the next set of filename matching "compl_pattern".','line_number':3027,'multiline':False]['text':' May change home directory back to "~".','line_number':3037,'multiline':False]['text':'/ Get the next set of command-line completions matching "compl_pattern".','line_number':3057,'multiline':False]['text':'/ Get the next set of spell suggestions matching "compl_pattern".','line_number':3069,'multiline':False]['text':'/ Return the next word or line from buffer "ins_buf" at position','line_number':3081,'multiline':False]['text':'/ "cur_match_pos" for completion.  The length of the match is set in "len".','line_number':3082,'multiline':False]['text':'/ @param ins_buf        buffer being scanned','line_number':3083,'multiline':False]['text':'/ @param cur_match_pos  current match position','line_number':3084,'multiline':False]['text':'/ @param match_len','line_number':3085,'multiline':False]['text':'/ @param cont_s_ipos    next ^X<> will set initial_pos','line_number':3086,'multiline':False]['text':' Skip if already inside a word.','line_number':3109,'multiline':False]['text':' Find start of next word.','line_number':3113,'multiline':False]['text':' Find end of this word.','line_number':3116,'multiline':False]['text':' Try next line, if any. the new word will be "join" as if the','line_number':3122,'multiline':False]['text':' normal command "J" was used. IOSIZE is always greater than','line_number':3123,'multiline':False]['text':' compl_length, so the next strncpy always works -- Acevedo','line_number':3124,'multiline':False]['text':' NOLINT(runtime/printf)','line_number':3125,'multiline':False]['text':' Find start of next word.','line_number':3128,'multiline':False]['text':' Find end of next word.','line_number':3130,'multiline':False]['text':' IObuf =~ "\k.* ", thus len >= 2','line_number':3137,'multiline':False]['text':' copy as much as possible of the new word','line_number':3145,'multiline':False]['text':'/ Get the next set of words matching "compl_pattern" for default completion(s)','line_number':3166,'multiline':False]['text':'/ (normal ^P/^N and ^X^L).','line_number':3167,'multiline':False]['text':'/ Search for "compl_pattern" in the buffer "st->ins_buf" starting from the','line_number':3168,'multiline':False]['text':'/ position "st->start_pos" in the "compl_direction" direction. If','line_number':3169,'multiline':False]['text':'/ "st->set_match_pos" is true, then set the "st->first_match_pos" and','line_number':3170,'multiline':False]['text':'/ "st->last_match_pos".','line_number':3171,'multiline':False]['text':'/','line_number':3172,'multiline':False]['text':'/ @return  OK if a new next match is found, otherwise FAIL.','line_number':3173,'multiline':False]['text':' If 'infercase' is set, don't use 'smartcase' here','line_number':3176,'multiline':False]['text':' Buffers other than curbuf are scanned from the beginning or the','line_number':3183,'multiline':False]['text':' end but never from the middle, thus setting nowrapscan in this','line_number':3184,'multiline':False]['text':' buffers is a good idea, on the other hand, we always set','line_number':3185,'multiline':False]['text':' wrapscan for curbuf to avoid missing matches -- Acevedo,Webb','line_number':3186,'multiline':False]['text':' Don't want messages for wrapscan.','line_number':3198,'multiline':False]['text':' ctrl_x_mode_line_or_eval() || word-wise search that','line_number':3199,'multiline':False]['text':' has added a word that was at the beginning of the line.','line_number':3200,'multiline':False]['text':' set "compl_started" even on fail','line_number':3211,'multiline':False]['text':' when ADDING, the text before the cursor matches, skip it','line_number':3243,'multiline':False]['text':'/ get the next set of completion matches for "type".','line_number':3268,'multiline':False]['text':'/ @return  true if a new match is found, otherwise false.','line_number':3269,'multiline':False]['text':' normal ^P/^N and ^X^L','line_number':3313,'multiline':False]['text':' check if compl_curr_match has changed, (e.g. other type of','line_number':3320,'multiline':False]['text':' expansion added something)','line_number':3321,'multiline':False]['text':'/ Get the next expansion(s), using "compl_pattern".','line_number':3342,'multiline':False]['text':'/ The search starts at position "ini" in curbuf and in the direction','line_number':3343,'multiline':False]['text':'/ compl_direction.','line_number':3344,'multiline':False]['text':'/ When "compl_started" is false start at that position, otherwise continue','line_number':3345,'multiline':False]['text':'/ where we stopped searching before.','line_number':3346,'multiline':False]['text':'/ This may return before finding all the matches.','line_number':3347,'multiline':False]['text':'/ Return the total number of matches or -1 if still unknown -- Acevedo','line_number':3348,'multiline':False]['text':' Make a copy of 'complete', in case the buffer is wiped out.','line_number':3369,'multiline':False]['text':' In case the buffer was wiped out.','line_number':3374,'multiline':False]['text':' remember the last current match','line_number':3378,'multiline':False]['text':' For ^N/^P loop over all the flags/windows/buffers in 'complete'','line_number':3381,'multiline':False]['text':' For ^N/^P pick a new entry from e_cpt if compl_started is off,','line_number':3386,'multiline':False]['text':' or if found_all says this entry is done.  For ^X^L only use the','line_number':3387,'multiline':False]['text':' entries from 'complete' that look in loaded buffers.','line_number':3388,'multiline':False]['text':' If complete() was called then compl_pattern has been reset.','line_number':3400,'multiline':False]['text':' The following won't work then, bail out.','line_number':3401,'multiline':False]['text':' get the next set of completion matches','line_number':3406,'multiline':False]['text':' break the loop for specialized modes (use 'complete' just for the','line_number':3409,'multiline':False]['text':' generic ctrl_x_mode == CTRL_X_NORMAL) or when we've found a new match','line_number':3410,'multiline':False]['text':' Fill the popup menu as soon as possible.','line_number':3416,'multiline':False]['text':' Mark a buffer scanned when it has been scanned completely','line_number':3427,'multiline':False]['text':' Got to end of 'complete'','line_number':3439,'multiline':False]['text':' total of matches, unknown','line_number':3443,'multiline':False]['text':' If several matches were added (FORWARD) or the search failed and has','line_number':3450,'multiline':False]['text':' just been made cyclic then we have to move compl_curr_match to the','line_number':3451,'multiline':False]['text':' next or previous entry (if any) -- Acevedo','line_number':3452,'multiline':False]['text':'/ Update "compl_shown_match" to the actually shown match, it may differ when','line_number':3465,'multiline':False]['text':'/ "compl_leader" is used to omit some of the matches.','line_number':3466,'multiline':False]['text':' If we didn't find it searching forward, and compl_shows_dir is','line_number':3476,'multiline':False]['text':' backward, find the last match.','line_number':3477,'multiline':False]['text':'/ Delete the old text being completed.','line_number':3490,'multiline':False]['text':' In insert mode: Delete the typed part.','line_number':3493,'multiline':False]['text':' In replace mode: Put the old characters back, if any.','line_number':3494,'multiline':False]['text':' TODO(vim): is this sufficient for redrawing?  Redrawing everything','line_number':3503,'multiline':False]['text':' causes flicker, thus we can't do that.','line_number':3504,'multiline':False]['text':' clear v:completed_item','line_number':3506,'multiline':False]['text':'/ Insert the new text being completed.','line_number':3510,'multiline':False]['text':'/ "in_compl_func" is true when called from complete_check().','line_number':3511,'multiline':False]['text':'/ show the file name for the completion match (if any).  Truncate the file','line_number':3524,'multiline':False]['text':'/ name to avoid a wait for return.','line_number':3525,'multiline':False]['text':' We need the tail that fits.  With double-byte encoding going','line_number':3534,'multiline':False]['text':' back from the end is very slow, thus go from the start and keep','line_number':3535,'multiline':False]['text':' the text that fits in "space" between "s" and "e".','line_number':3536,'multiline':False]['text':' don't overwrite!','line_number':3551,'multiline':False]['text':'/ Find the next set of matches for completion. Repeat the completion "todo"','line_number':3554,'multiline':False]['text':'/ times.  The number of matches found is returned in 'num_matches'.','line_number':3555,'multiline':False]['text':'/','line_number':3556,'multiline':False]['text':'/ @param allow_get_expansion  If true, then ins_compl_get_exp() may be called to','line_number':3557,'multiline':False]['text':'/                             get more completions.','line_number':3558,'multiline':False]['text':'/                             If false, then do nothing when there are no more','line_number':3559,'multiline':False]['text':'/                             completions in the given direction.','line_number':3560,'multiline':False]['text':'/ @param todo  repeat completion this many times','line_number':3561,'multiline':False]['text':'/ @param advance  If true, then completion will move to the first match.','line_number':3562,'multiline':False]['text':'/                 Otherwise, the original text will be shown.','line_number':3563,'multiline':False]['text':'/','line_number':3564,'multiline':False]['text':'/ @return  OK on success and -1 if the number of matches are unknown.','line_number':3565,'multiline':False]['text':' Find matches.','line_number':3603,'multiline':False]['text':' handle any pending completions','line_number':3606,'multiline':False]['text':' Remember a matching item.','line_number':3628,'multiline':False]['text':' Stop at the end of the list when we found a usable match.','line_number':3632,'multiline':False]['text':' use first usable match after wrapping around','line_number':3638,'multiline':False]['text':'/ Fill in the next completion in the current direction.','line_number':3645,'multiline':False]['text':'/ If "allow_get_expansion" is true, then we may call ins_compl_get_exp() to','line_number':3646,'multiline':False]['text':'/ get more completions.  If it is false, then we just do nothing when there','line_number':3647,'multiline':False]['text':'/ are no more completions in a given direction.  The latter case is used when','line_number':3648,'multiline':False]['text':'/ we are still in the middle of finding completions, to allow browsing','line_number':3649,'multiline':False]['text':'/ through the ones found so far.','line_number':3650,'multiline':False]['text':'/ @return  the total number of matches, or -1 if still unknown -- webb.','line_number':3651,'multiline':False]['text':'/','line_number':3652,'multiline':False]['text':'/ compl_curr_match is currently being used by ins_compl_get_exp(), so we use','line_number':3653,'multiline':False]['text':'/ compl_shown_match here.','line_number':3654,'multiline':False]['text':'/','line_number':3655,'multiline':False]['text':'/ Note that this function may be called recursively once only.  First with','line_number':3656,'multiline':False]['text':'/ "allow_get_expansion" true, which calls ins_compl_get_exp(), which in turn','line_number':3657,'multiline':False]['text':'/ calls this function with "allow_get_expansion" false.','line_number':3658,'multiline':False]['text':'/','line_number':3659,'multiline':False]['text':'/ @param count          Repeat completion this many times; should be at least 1','line_number':3660,'multiline':False]['text':'/ @param insert_match   Insert the newly selected match','line_number':3661,'multiline':False]['text':'/ @param in_compl_func  Called from complete_check()','line_number':3662,'multiline':False]['text':' When user complete function return -1 for findstart which is next','line_number':3671,'multiline':False]['text':' time of 'always', compl_shown_match become NULL.','line_number':3672,'multiline':False]['text':' Update "compl_shown_match" to the actually shown match','line_number':3678,'multiline':False]['text':' Delete old text to be replaced','line_number':3684,'multiline':False]['text':' When finding the longest common text we stick at the original text,','line_number':3688,'multiline':False]['text':' don't let CTRL-N or CTRL-P move to the first match.','line_number':3689,'multiline':False]['text':' When restarting the search don't insert the first match either.','line_number':3692,'multiline':False]['text':' Repeat this for when <PageUp> or <PageDown> is typed.  But don't wrap','line_number':3698,'multiline':False]['text':' around.','line_number':3699,'multiline':False]['text':' In case some completion function switched buffer, don't want to','line_number':3706,'multiline':False]['text':' insert the completion elsewhere.','line_number':3707,'multiline':False]['text':' Insert the text of the new completion, or the compl_leader.','line_number':3711,'multiline':False]['text':' redraw to show the user what was inserted','line_number':3730,'multiline':False]['text':' TODO(bfredl): no!','line_number':3731,'multiline':False]['text':' display the updated popup menu','line_number':3733,'multiline':False]['text':' Delete old text to be replaced, since we're still searching and','line_number':3736,'multiline':False]['text':' don't want to match ourselves!','line_number':3737,'multiline':False]['text':' Enter will select a match when the match wasn't inserted and the popup','line_number':3741,'multiline':False]['text':' menu is visible.','line_number':3742,'multiline':False]['text':' Show the file name for the match (if any)','line_number':3749,'multiline':False]['text':'/ Call this while finding completions, to check whether the user has hit a key','line_number':3757,'multiline':False]['text':'/ that should change the currently displayed completion, or exit completion','line_number':3758,'multiline':False]['text':'/ mode.  Also, when compl_pending is not zero, show a completion as soon as','line_number':3759,'multiline':False]['text':'/ possible. -- webb','line_number':3760,'multiline':False]['text':'/','line_number':3761,'multiline':False]['text':'/ @param frequency      specifies out of how many calls we actually check.','line_number':3762,'multiline':False]['text':'/ @param in_compl_func  true when called from complete_check(), don't set','line_number':3763,'multiline':False]['text':'/                       compl_curr_match.','line_number':3764,'multiline':False]['text':' Don't check when reading keys from a script, :normal or feedkeys().','line_number':3769,'multiline':False]['text':' That would break the test scripts.  But do check for keys when called','line_number':3770,'multiline':False]['text':' from complete_check().','line_number':3771,'multiline':False]['text':' Only do this at regular intervals','line_number':3776,'multiline':False]['text':' Check for a typed key.  Do use mappings, otherwise vim_is_ctrl_x_key()','line_number':3782,'multiline':False]['text':' can't do its work correctly.','line_number':3783,'multiline':False]['text':' Eat the character','line_number':3787,'multiline':False]['text':' Need to get the character to have KeyTyped set.  We'll put it','line_number':3792,'multiline':False]['text':' back with vungetc() below.  But skip K_IGNORE.','line_number':3793,'multiline':False]['text':' Don't interrupt completion when the character wasn't typed,','line_number':3796,'multiline':False]['text':' e.g., when doing @q to replay keys.','line_number':3797,'multiline':False]['text':'/ Decide the direction of Insert mode complete from the key typed.','line_number':3814,'multiline':False]['text':'/ Returns BACKWARD or FORWARD.','line_number':3815,'multiline':False]['text':'/ Check that "c" is a valid completion key only while the popup menu is shown','line_number':3829,'multiline':False]['text':'/','line_number':3830,'multiline':False]['text':'/ @param  c  character to check','line_number':3831,'multiline':False]['text':'/ Decide the number of completions to move forward.','line_number':3840,'multiline':False]['text':'/ Returns 1 for most keys, height of the popup menu for page-up/down keys.','line_number':3841,'multiline':False]['text':' keep some context','line_number':3852,'multiline':False]['text':'/ Check that completion with "c" should insert the match, false if only','line_number':3859,'multiline':False]['text':'/ to change the currently selected completion.','line_number':3860,'multiline':False]['text':'/','line_number':3861,'multiline':False]['text':'/ @param  c  character to check','line_number':3862,'multiline':False]['text':'/ Get the pattern, column and length for normal completion (CTRL-N CTRL-P','line_number':3884,'multiline':False]['text':'/ completion)','line_number':3885,'multiline':False]['text':'/ Sets the global variables: compl_col, compl_length and compl_pattern.','line_number':3886,'multiline':False]['text':'/ Uses the global variables: compl_cont_status and ctrl_x_mode','line_number':3887,'multiline':False]['text':' we need up to 2 extra chars for the prefix','line_number':3904,'multiline':False]['text':' Match any word of at least two chars','line_number':3916,'multiline':False]['text':' Search the point of change class of multibyte character','line_number':3921,'multiline':False]['text':' or not a word single byte character backward.','line_number':3922,'multiline':False]['text':' Only match word with at least two chars -- webb','line_number':3935,'multiline':False]['text':' there's no need to call quote_meta,','line_number':3936,'multiline':False]['text':' xmalloc(7) is enough  -- Acevedo','line_number':3937,'multiline':False]['text':'/ Get the pattern, column and length for whole line completion or for the','line_number':3952,'multiline':False]['text':'/ complete() function.','line_number':3953,'multiline':False]['text':'/ Sets the global variables: compl_col, compl_length and compl_pattern.','line_number':3954,'multiline':False]['text':' cursor in indent: empty pattern','line_number':3959,'multiline':False]['text':'/ Get the pattern, column and length for filename completion.','line_number':3971,'multiline':False]['text':'/ Sets the global variables: compl_col, compl_length and compl_pattern.','line_number':3972,'multiline':False]['text':' Go back to just before the first filename character.','line_number':3975,'multiline':False]['text':'/ Get the pattern, column and length for command-line completion.','line_number':3997,'multiline':False]['text':'/ Sets the global variables: compl_col, compl_length and compl_pattern.','line_number':3998,'multiline':False]['text':' No completion possible, use an empty pattern to get a','line_number':4005,'multiline':False]['text':' "pattern not found" message.','line_number':4006,'multiline':False]['text':'/ Get the pattern, column and length for user defined completion ('omnifunc',','line_number':4016,'multiline':False]['text':'/ 'completefunc' and 'thesaurusfunc')','line_number':4017,'multiline':False]['text':'/ Sets the global variables: compl_col, compl_length and compl_pattern.','line_number':4018,'multiline':False]['text':'/ Uses the global variable: spell_bad_len','line_number':4019,'multiline':False]['text':' Call user defined function 'completefunc' with "a:findstart"','line_number':4022,'multiline':False]['text':' set to 1 to obtain the length of text to use for completion.','line_number':4023,'multiline':False]['text':' Call 'completefunc' or 'omnifunc' and get pattern length as a string','line_number':4026,'multiline':False]['text':' restore the cursor position','line_number':4047,'multiline':False]['text':' Return value -2 means the user complete function wants to cancel the','line_number':4054,'multiline':False]['text':' complete without an error, do the same if the function did not execute','line_number':4055,'multiline':False]['text':' successfully.','line_number':4056,'multiline':False]['text':' Return value -3 does the same as -2 and leaves CTRL-X mode.','line_number':4060,'multiline':False]['text':' Reset extended parameters of completion, when starting new','line_number':4070,'multiline':False]['text':' completion.','line_number':4071,'multiline':False]['text':' Setup variables for completion.  Need to obtain "line" again,','line_number':4082,'multiline':False]['text':' it may have become invalid.','line_number':4083,'multiline':False]['text':'/ Get the pattern, column and length for spell completion.','line_number':4091,'multiline':False]['text':'/ Sets the global variables: compl_col, compl_length and compl_pattern.','line_number':4092,'multiline':False]['text':'/ Uses the global variable: spell_bad_len','line_number':4093,'multiline':False]['text':' Need to obtain "line" again, it may have become invalid.','line_number':4109,'multiline':False]['text':'/ Get the completion pattern, column and length.','line_number':4116,'multiline':False]['text':'/','line_number':4117,'multiline':False]['text':'/ @param startcol  start column number of the completion pattern/text','line_number':4118,'multiline':False]['text':'/ @param cur_col   current cursor column','line_number':4119,'multiline':False]['text':'/','line_number':4120,'multiline':False]['text':'/ On return, "line_invalid" is set to true, if the current line may have','line_number':4121,'multiline':False]['text':'/ become invalid and needs to be fetched again.','line_number':4122,'multiline':False]['text':'/','line_number':4123,'multiline':False]['text':'/ @return  OK on success.','line_number':4124,'multiline':False]['text':' "line" may have become invalid','line_number':4142,'multiline':False]['text':' "line" may have become invalid','line_number':4147,'multiline':False]['text':'/ Continue an interrupted completion mode search in "line".','line_number':4156,'multiline':False]['text':'/','line_number':4157,'multiline':False]['text':'/ If this same ctrl_x_mode has been interrupted use the text from','line_number':4158,'multiline':False]['text':'/ "compl_startpos" to the cursor as a pattern to add a new word instead of','line_number':4159,'multiline':False]['text':'/ expand the one before the cursor, in word-wise if "compl_startpos" is not in','line_number':4160,'multiline':False]['text':'/ the same line as the cursor then fix it (the line has been split because it','line_number':4161,'multiline':False]['text':'/ was longer than 'tw').  if SOL is set then skip the previous pattern, a word','line_number':4162,'multiline':False]['text':'/ at the beginning of the line has been inserted, we'll look for that.','line_number':4163,'multiline':False]['text':' it is a continued search','line_number':4166,'multiline':False]['text':' remove INTRPT','line_number':4167,'multiline':False]['text':' line (probably) wrapped, set compl_startpos to the','line_number':4172,'multiline':False]['text':' first non_blank in the line, if it is not a wordchar','line_number':4173,'multiline':False]['text':' include it to get a better pattern, but then we don't','line_number':4174,'multiline':False]['text':' want the "\\<" prefix, check it below.','line_number':4175,'multiline':False]['text':' clear SOL if present','line_number':4179,'multiline':False]['text':' S_IPOS was set when we inserted a word that was at the','line_number':4181,'multiline':False]['text':' beginning of the line, which means that we'll go to SOL','line_number':4182,'multiline':False]['text':' mode but first we need to redefine compl_startpos','line_number':4183,'multiline':False]['text':' IObuff is used to add a "word from the next line" would we','line_number':4191,'multiline':False]['text':' have enough space?  just being paranoid','line_number':4192,'multiline':False]['text':'/ start insert mode completion','line_number':4210,'multiline':False]['text':' First time we hit ^N or ^P (in a row, I mean)','line_number':4215,'multiline':False]['text':' this same ctrl-x_mode was interrupted previously. Continue the','line_number':4231,'multiline':False]['text':' completion.','line_number':4232,'multiline':False]['text':' column where searched text starts','line_number':4238,'multiline':False]['text':' normal expansion','line_number':4239,'multiline':False]['text':' Remove LOCAL if ctrl_x_mode != CTRL_X_NORMAL','line_number':4242,'multiline':False]['text':' Work out completion pattern and original text -- webb','line_number':4251,'multiline':False]['text':' restore did_ai, so that adding comment leader works','line_number':4256,'multiline':False]['text':' If "line" was changed while getting completion info get it again.','line_number':4261,'multiline':False]['text':' Insert a new line, keep indentation but ignore 'comments'.','line_number':4269,'multiline':False]['text':' If any of the original typed text has been changed we need to fix','line_number':4291,'multiline':False]['text':' the redo buffer.','line_number':4292,'multiline':False]['text':' Always add completion for the original text.','line_number':4295,'multiline':False]['text':' showmode might reset the internal line pointers, so it must','line_number':4312,'multiline':False]['text':' be called before line = ml_get(), or when this address is no','line_number':4313,'multiline':False]['text':' longer needed.  -- Acevedo.','line_number':4314,'multiline':False]['text':'/ display the completion status message','line_number':4324,'multiline':False]['text':' we found no match if the list has only the "compl_orig_text"-entry','line_number':4327,'multiline':False]['text':' Update completion sequence number when needed.','line_number':4345,'multiline':False]['text':' The match should always have a sequence number now, this is','line_number':4350,'multiline':False]['text':' just a safety check.','line_number':4351,'multiline':False]['text':' Space for 10 text chars. + 2x10-digit no.s = 31.','line_number':4353,'multiline':False]['text':' Translations may need more than twice that.','line_number':4354,'multiline':False]['text':' Show a message about what (completion) mode we're in.','line_number':4375,'multiline':False]['text':' necessary for "noshowmode"','line_number':4386,'multiline':False]['text':'/ Do Insert mode completion.','line_number':4391,'multiline':False]['text':'/ Called when character "c" was typed, which has a meaning for completion.','line_number':4392,'multiline':False]['text':'/ Returns OK if completion was done, FAIL if something failed.','line_number':4393,'multiline':False]['text':' Find next match (and following matches).','line_number':4410,'multiline':False]['text':' all matches have been found','line_number':4415,'multiline':False]['text':' Eat the ESC that vgetc() returns after a CTRL-C to avoid leaving Insert','line_number':4421,'multiline':False]['text':' mode.','line_number':4422,'multiline':False]['text':' we found no match if the list has only the "compl_orig_text"-entry','line_number':4428,'multiline':False]['text':' remove N_ADDS flag, so next ^X<> won't try to go to ADDING mode,','line_number':4430,'multiline':False]['text':' because we couldn't expand anything at first place, but if we used','line_number':4431,'multiline':False]['text':' ^P, ^N, ^X^I or ^X^D we might want to add-expand a single-char-word','line_number':4432,'multiline':False]['text':' (such as M in M'exico) if not tried already.  -- Acevedo','line_number':4433,'multiline':False]['text':' Show the popup menu, unless we got interrupted.','line_number':4451,'multiline':False]['text':'/ Remove (if needed) and show the popup menu','line_number':4461,'multiline':False]['text':' RedrawingDisabled may be set when invoked through complete().','line_number':4464,'multiline':False]['text':' If the cursor moved or the display scrolled we need to remove the pum','line_number':4468,'multiline':False]['text':' first.','line_number':4469,'multiline':False]['text':' Looks in the first "len" chars. of "src" for search-metachars.','line_number':4480,'multiline':False]['text':' If dest is not NULL the chars. are copied there quoting (with','line_number':4481,'multiline':False]['text':' a backslash) the metachars, and dest would be NUL terminated.','line_number':4482,'multiline':False]['text':' Returns the length (needed) of dest','line_number':4483,'multiline':False]['text':' one extra for the NUL','line_number':4486,'multiline':False]['text':' quote these only if magic is set','line_number':4498,'multiline':False]['text':' currently it's not needed.','line_number':4507,'multiline':False]['text':' Copy remaining bytes of a multibyte character.','line_number':4518,'multiline':False]['text':'/ Called when starting CTRL_X_SPELL mode: Move backwards to a previous badly','line_number':4548,'multiline':False]['text':'/ spelled word, if there is one.','line_number':4549,'multiline':False]