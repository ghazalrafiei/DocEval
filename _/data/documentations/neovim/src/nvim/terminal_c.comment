['text':' VT220/xterm-like terminal emulator.','line_number':1,'multiline':False]['text':' Powered by libvterm http://www.leonerd.org.uk/code/libvterm','line_number':2,'multiline':False]['text':'','line_number':3,'multiline':False]['text':' libvterm is a pure C99 terminal emulation library with abstract input and','line_number':4,'multiline':False]['text':' display. This means that the library needs to read data from the master fd','line_number':5,'multiline':False]['text':' and feed VTerm instances, which will invoke user callbacks with screen','line_number':6,'multiline':False]['text':' update instructions that must be mirrored to the real display.','line_number':7,'multiline':False]['text':'','line_number':8,'multiline':False]['text':' Keys are sent to VTerm instances by calling','line_number':9,'multiline':False]['text':' vterm_keyboard_key/vterm_keyboard_unichar, which generates byte streams that','line_number':10,'multiline':False]['text':' must be fed back to the master fd.','line_number':11,'multiline':False]['text':'','line_number':12,'multiline':False]['text':' Nvim buffers are used as the display mechanism for both the visible screen','line_number':13,'multiline':False]['text':' and the scrollback buffer.','line_number':14,'multiline':False]['text':'','line_number':15,'multiline':False]['text':' When a line becomes invisible due to a decrease in screen height or because','line_number':16,'multiline':False]['text':' a line was pushed up during normal terminal output, we store the line','line_number':17,'multiline':False]['text':' information in the scrollback buffer, which is mirrored in the nvim buffer','line_number':18,'multiline':False]['text':' by appending lines just above the visible part of the buffer.','line_number':19,'multiline':False]['text':'','line_number':20,'multiline':False]['text':' When the screen height increases, libvterm will ask for a row in the','line_number':21,'multiline':False]['text':' scrollback buffer, which is mirrored in the nvim buffer displaying lines','line_number':22,'multiline':False]['text':' that were previously invisible.','line_number':23,'multiline':False]['text':'','line_number':24,'multiline':False]['text':' The vterm->nvim synchronization is performed in intervals of 10 milliseconds,','line_number':25,'multiline':False]['text':' to minimize screen updates when receiving large bursts of data.','line_number':26,'multiline':False]['text':'','line_number':27,'multiline':False]['text':' This module is decoupled from the processes that normally feed it data, so','line_number':28,'multiline':False]['text':' it's possible to use it as a general purpose console buffer (possibly as a','line_number':29,'multiline':False]['text':' log/display mechanism for nvim in the future)','line_number':30,'multiline':False]['text':'','line_number':31,'multiline':False]['text':' Inspired by: vimshell http://www.wana.at/vimshell','line_number':32,'multiline':False]['text':'              Conque https://code.google.com/p/conque','line_number':33,'multiline':False]['text':' Some code from pangoterm http://www.leonerd.org.uk/code/pangoterm','line_number':34,'multiline':False]['text':' saved value of RedrawingDisabled','line_number':93,'multiline':False]['text':' if the last input was <C-\>','line_number':95,'multiline':False]['text':' if left terminal mode with <c-\><c-o>','line_number':96,'multiline':False]['text':' Delay for refreshing the terminal buffer after receiving updates from','line_number':103,'multiline':False]['text':' libvterm. Improves performance when receiving large bursts of data.','line_number':104,'multiline':False]['text':' options passed to terminal_open','line_number':116,'multiline':False]['text':' buffer used to:','line_number':119,'multiline':False]['text':'  - convert VTermScreen cell arrays into utf8 strings','line_number':120,'multiline':False]['text':'  - receive data from libvterm as a result of key presses.','line_number':121,'multiline':False]['text':' Scrollback storage.','line_number':124,'multiline':False]['text':' Lines stored in sb_buffer.','line_number':125,'multiline':False]['text':' Capacity of sb_buffer.','line_number':126,'multiline':False]['text':' "virtual index" that points to the first sb_buffer row that we need to','line_number':127,'multiline':False]['text':' push to the terminal buffer when refreshing the scrollback. When negative,','line_number':128,'multiline':False]['text':' it actually points to entries that are no longer in sb_buffer (because the','line_number':129,'multiline':False]['text':' window height has increased) and must be deleted from the terminal buffer','line_number':130,'multiline':False]['text':' VTermStringFragment buffer','line_number':133,'multiline':False]['text':' number of rows pushed to sb_buffer','line_number':134,'multiline':False]['text':' sb_buffer size','line_number':135,'multiline':False]['text':' buf_T instance that acts as a "drawing surface" for libvterm','line_number':137,'multiline':False]['text':' we can't store a direct reference to the buffer because the','line_number':138,'multiline':False]['text':' refresh_timer_cb may be called after the buffer was freed, and there's','line_number':139,'multiline':False]['text':' no way to know if the memory was reused.','line_number':140,'multiline':False]['text':' program exited','line_number':142,'multiline':False]['text':' when true, the terminal's destruction is already enqueued.','line_number':144,'multiline':False]['text':' some vterm properties','line_number':147,'multiline':False]['text':' invalid rows in libvterm screen','line_number':149,'multiline':False]['text':' pending width/height','line_number':154,'multiline':False]['text':' reference count','line_number':158,'multiline':False]['text':' Called before a line goes offscreen.','line_number':167,'multiline':False]['text':' refresh_timer_cb will redraw the screen which can call vimscript','line_number':176,'multiline':False]['text':' terminal_destroy might be called after terminal_teardown is invoked','line_number':186,'multiline':False]['text':' make sure it is in an empty, valid state','line_number':187,'multiline':False]['text':' public API {{{','line_number':196,'multiline':False]['text':'/ Initializes terminal properties, and triggers TermOpen.','line_number':198,'multiline':False]['text':'/','line_number':199,'multiline':False]['text':'/ The PTY process (TerminalOptions.data) was already started by termopen(),','line_number':200,'multiline':False]['text':'/ via ex_terminal() or the term:// BufReadCmd.','line_number':201,'multiline':False]['text':'/','line_number':202,'multiline':False]['text':'/ @param buf Buffer used for presentation of the terminal.','line_number':203,'multiline':False]['text':'/ @param opts PTY process channel, various terminal properties and callbacks.','line_number':204,'multiline':False]['text':' Create a new terminal instance and configure it','line_number':208,'multiline':False]['text':' Associate the terminal instance with the new buffer','line_number':212,'multiline':False]['text':' Create VTerm','line_number':215,'multiline':False]['text':' Setup state','line_number':218,'multiline':False]['text':' Set up screen','line_number':220,'multiline':False]['text':' delete empty lines at the end of the buffer','line_number':224,'multiline':False]['text':' force a initial refresh of the screen to ensure the buffer will always','line_number':229,'multiline':False]['text':' have as many lines as screen rows when refresh_scrollback is called','line_number':230,'multiline':False]['text':' Default settings for terminal buffers','line_number':240,'multiline':False]['text':' 'nomodifiable'','line_number':241,'multiline':False]['text':' 'undolevels'','line_number':242,'multiline':False]['text':' 'scrollback' (initialize local from global)','line_number':243,'multiline':False]['text':' 'textwidth'','line_number':245,'multiline':False]['text':' Reset cursor in current window.','line_number':252,'multiline':False]['text':' Initialize to check if the scrollback buffer has been allocated in a TermOpen autocmd.','line_number':254,'multiline':False]['text':' Apply TermOpen autocmds _before_ configuring the scrollback buffer.','line_number':256,'multiline':False]['text':' Terminal has already been destroyed.','line_number':262,'multiline':False]['text':' Local 'scrollback' _after_ autocmds.','line_number':266,'multiline':False]['text':' Configure the scrollback buffer.','line_number':270,'multiline':False]['text':' Configure the color palette. Try to get the color from:','line_number':275,'multiline':False]['text':'','line_number':276,'multiline':False]['text':' - b:terminal_color_{NUM}','line_number':277,'multiline':False]['text':' - g:terminal_color_{NUM}','line_number':278,'multiline':False]['text':' - the VTerm instance','line_number':279,'multiline':False]['text':'/ Closes the Terminal buffer.','line_number':303,'multiline':False]['text':'/','line_number':304,'multiline':False]['text':'/ May call terminal_destroy, which sets caller storage to NULL.','line_number':305,'multiline':False]['text':' If called from close_buffer() inside free_all_mem(), the main loop has','line_number':316,'multiline':False]['text':' already been freed, so it is not safe to call the close callback here.','line_number':317,'multiline':False]['text':' If called from close_buffer() after the process has already exited, we','line_number':326,'multiline':False]['text':' only need to call the close callback to clean up the terminal object.','line_number':327,'multiline':False]['text':' flush any pending changes to the buffer','line_number':331,'multiline':False]['text':' If this was called by close_buffer() (status is -1), or if exiting, we','line_number':343,'multiline':False]['text':' must inform the buffer the terminal no longer exists so that','line_number':344,'multiline':False]['text':' close_buffer() won't call this again.','line_number':345,'multiline':False]['text':' If inside Terminal mode K_EVENT handling, setting buf_handle to 0 also','line_number':346,'multiline':False]['text':' informs terminal_enter() to call the close callback before returning.','line_number':347,'multiline':False]['text':' Not inside Terminal mode K_EVENT handling.','line_number':353,'multiline':False]['text':' We should not wait for the user to press a key.','line_number':354,'multiline':False]['text':' Associated channel has been closed and the editor is not exiting.','line_number':359,'multiline':False]['text':' Do not call the close callback now. Wait for the user to press a key.','line_number':360,'multiline':False]['text':' Check if there is a window that displays the terminal and find the maximum width and height.','line_number':394,'multiline':False]['text':' Skip the autocommand window which isn't actually displayed.','line_number':395,'multiline':False]['text':' if no window displays the terminal, or such all windows are zero-height,','line_number':408,'multiline':False]['text':' don't resize the terminal.','line_number':409,'multiline':False]['text':'/ Implements MODE_TERMINAL state. :help Terminal-mode','line_number':420,'multiline':False]['text':' Should only be called when curbuf has a terminal.','line_number':424,'multiline':False]['text':' Ensure the terminal is properly sized. Ideally window size management','line_number':429,'multiline':False]['text':' code should always have resized the terminal already, but check here to','line_number':430,'multiline':False]['text':' be sure.','line_number':431,'multiline':False]['text':' Always map CTRL-C to avoid interrupt.','line_number':437,'multiline':False]['text':' Disable these options in terminal-mode. They are nonsense because cursor is','line_number':440,'multiline':False]['text':' placed at end of buffer to "follow" output. #11072','line_number':441,'multiline':False]['text':' scroll to end','line_number':462,'multiline':False]['text':' erase the unfocused cursor','line_number':463,'multiline':False]['text':' For mode() in statusline. #8323','line_number':466,'multiline':False]['text':' Else: window was closed.','line_number':482,'multiline':False]['text':' draw the unfocused cursor','line_number':496,'multiline':False]['text':' Nudge cursor when returning to normal-mode.','line_number':526,'multiline':False]['text':' Function executed before each iteration of terminal mode.','line_number':531,'multiline':False]['text':' Return:','line_number':532,'multiline':False]['text':'   1 if the iteration should continue normally','line_number':533,'multiline':False]['text':'   0 if the main loop must exit','line_number':534,'multiline':False]['text':' Make sure an invoked autocmd doesn't delete the buffer (and the','line_number':547,'multiline':False]['text':' terminal) under our fingers.','line_number':548,'multiline':False]['text':' save and restore curwin and curbuf, in case the autocmd changes them','line_number':551,'multiline':False]['text':' Update title in terminal-mode. #7248','line_number':560,'multiline':False]['text':'/ Processes one char of terminal-mode input.','line_number':569,'multiline':False]['text':' We cannot let an event free the terminal yet. It is still needed.','line_number':595,'multiline':False]['text':'/ Frees the given Terminal structure and sets the caller storage to NULL (in the spirit of','line_number':654,'multiline':False]['text':'/ XFREE_CLEAR).','line_number':655,'multiline':False]['text':' flush any pending changes to the buffer','line_number':668,'multiline':False]['text':' coverity[dead-store]','line_number':681,'multiline':False]['text':' feed the lines to the terminal','line_number':734,'multiline':False]['text':' terminate the previous line','line_number':737,'multiline':False]['text':' Convert K_ZERO back to ASCII','line_number':771,'multiline':False]['text':' Terminal height was decreased but the change wasn't reflected into the','line_number':839,'multiline':False]['text':' buffer yet','line_number':840,'multiline':False]['text':' Get the rgb value set by libvterm.','line_number':851,'multiline':False]['text':' }}}','line_number':909,'multiline':False]['text':' libvterm callbacks {{{','line_number':910,'multiline':False]['text':'/ Scrollback push handler: called just before a line goes offscreen (and libvterm will forget it),','line_number':1008,'multiline':False]['text':'/ giving us a chance to store it.','line_number':1009,'multiline':False]['text':'/','line_number':1010,'multiline':False]['text':'/ Code adapted from pangoterm.','line_number':1011,'multiline':False]['text':' copy vterm cells into sb_buffer','line_number':1020,'multiline':False]['text':' Recycle old row if it's the right size','line_number':1025,'multiline':False]['text':' Make room at the start by shifting to the right.','line_number':1031,'multiline':False]['text':' Make room at the start by shifting to the right.','line_number':1035,'multiline':False]['text':' New row is added at the start of the storage buffer.','line_number':1045,'multiline':False]['text':'/ Scrollback pop handler (from pangoterm).','line_number':1061,'multiline':False]['text':'/','line_number':1062,'multiline':False]['text':'/ @param cols','line_number':1063,'multiline':False]['text':'/ @param cells  VTerm state to update.','line_number':1064,'multiline':False]['text':'/ @param data   Terminal','line_number':1065,'multiline':False]['text':' Forget the "popped" row by shifting the rest onto it.','line_number':1080,'multiline':False]['text':' copy to vterm state','line_number':1089,'multiline':False]['text':' }}}','line_number':1102,'multiline':False]['text':' input handling {{{','line_number':1103,'multiline':False]['text':' process a mouse event while the terminal is focused. return true if the','line_number':1428,'multiline':False]['text':' terminal should lose focus','line_number':1429,'multiline':False]['text':' event in the terminal window and mouse events was enabled by the','line_number':1441,'multiline':False]['text':' program. translate and forward the event','line_number':1442,'multiline':False]['text':' switch window/buffer to perform the scroll','line_number':1484,'multiline':False]['text':' Call the common mouse scroll function shared with other modes.','line_number':1511,'multiline':False]['text':' Only need to exit focus if the scrolled window is the terminal window','line_number':1519,'multiline':False]['text':' Ignore left release action if it was not forwarded to prevent','line_number':1524,'multiline':False]['text':' leaving Terminal mode after entering to it using a mouse.','line_number':1525,'multiline':False]['text':' }}}','line_number':1535,'multiline':False]['text':' terminal buffer refresh & misc {{{','line_number':1536,'multiline':False]['text':' end of line','line_number':1560,'multiline':False]['text':' fill the pointer with an empty cell','line_number':1571,'multiline':False]['text':' queue a terminal instance for refresh','line_number':1585,'multiline':False]['text':' Destroyed by `close_buffer`. Do not do anything else.','line_number':1605,'multiline':False]['text':' refresh_ functions assume the terminal buffer is current','line_number':1613,'multiline':False]['text':'/ Calls refresh_terminal() on all invalidated_terminals.','line_number':1625,'multiline':False]['text':' Cannot redraw (requires event loop) during teardown/exit.','line_number':1629,'multiline':False]['text':' don't process autocommands while updating terminal buffers','line_number':1634,'multiline':False]['text':' Scrollback buffer may not exist yet, e.g. if 'scrollback' is set in a TermOpen autocmd.','line_number':1659,'multiline':False]['text':'/ Adjusts scrollback storage and the terminal buffer scrollback lines','line_number':1665,'multiline':False]['text':' Local 'scrollback' was set to -1.','line_number':1668,'multiline':False]['text':' Pending rows must be processed first.','line_number':1673,'multiline':False]['text':' Delete lines exceeding the new 'scrollback' limit.','line_number':1677,'multiline':False]['text':' Resize the scrollback storage.','line_number':1688,'multiline':False]['text':' Refresh the scrollback of an invalidated terminal.','line_number':1697,'multiline':False]['text':' May still have pending scrollback after increase in terminal height if the','line_number':1703,'multiline':False]['text':' scrollback wasn't refreshed in time; append these to the top of the buffer.','line_number':1704,'multiline':False]['text':' This means that either the window height has decreased or the screen','line_number':1715,'multiline':False]['text':' became full and libvterm had to push all rows up. Convert the first','line_number':1716,'multiline':False]['text':' pending scrollback row into a string and append it just above the visible','line_number':1717,'multiline':False]['text':' section of the buffer','line_number':1718,'multiline':False]['text':' scrollback full, delete lines at the top','line_number':1720,'multiline':False]['text':' Remove extra lines at the bottom','line_number':1731,'multiline':False]['text':' Refresh the screen (visible part of the buffer when the terminal is','line_number':1741,'multiline':False]['text':' focused) of a invalidated terminal','line_number':1742,'multiline':False]['text':' TODO(bfredl): remove this condition','line_number':1745,'multiline':False]['text':' Terminal height may have decreased before `invalid_end` reflects it.','line_number':1751,'multiline':False]['text':' There are no invalid rows.','line_number':1754,'multiline':False]['text':' cursor at end?','line_number':1786,'multiline':False]['text':' "Follow" the terminal output','line_number':1789,'multiline':False]['text':' Ensure valid cursor for each window displaying this terminal.','line_number':1793,'multiline':False]['text':' Only called from terminal_open where curbuf->terminal is the context.','line_number':1819,'multiline':False]['text':' }}}','line_number':1833,'multiline':False]['text':' vim: foldmethod=marker','line_number':1835,'multiline':False]