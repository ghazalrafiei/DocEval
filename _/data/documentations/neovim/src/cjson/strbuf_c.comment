['text':' strbuf - String buffer routines
 *
 * Copyright (c) 2010-2012  Mark Pulford <mark@kyne.com.au>
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
 * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
 * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 ','line_number':1,'multiline':True]['text':' \0 terminator ','line_number':51,'multiline':True]['text':' Dynamic strbuf allocation / deallocation ','line_number':78,'multiline':True]['text':' Increment > 0:  Linear buffer growth rate
     * Increment < -1: Exponential buffer growth rate ','line_number':86,'multiline':True]['text':' If strbuf_t has not been dynamically allocated, strbuf_free() can
 * be called any number of times strbuf_init() ','line_number':102,'multiline':True]['text':' Ensure there is room for optional NULL termination ','line_number':141,'multiline':True]['text':' If the user has requested to shrink the buffer, do it exactly ','line_number':144,'multiline':True]['text':' Exponential sizing ','line_number':150,'multiline':True]['text':' Linear sizing ','line_number':154,'multiline':True]['text':' Ensure strbuf can handle a string length bytes long (ignoring NULL
 * optional termination). ','line_number':162,'multiline':True]['text':' strbuf_append_fmt() should only be used when an upper bound
 * is known for the output string. ','line_number':200,'multiline':True]['text':' This should never happen.. ','line_number':214,'multiline':True]['text':' strbuf_append_fmt_retry() can be used when the there is no known
 * upper bound for the output string. ','line_number':219,'multiline':True]['text':' If the first attempt to append fails, resize the buffer appropriately
     * and try again ','line_number':227,'multiline':True]['text':' Append the new formatted string ','line_number':231,'multiline':True]['text':' fmt_len is the length of the string required, excluding the
         * trailing NULL ','line_number':232,'multiline':True]['text':' Add 1 since there is also space to store the terminating NULL. ','line_number':235,'multiline':True]['text':' SUCCESS ','line_number':240,'multiline':True]['text':' vi:ai et sw=4 ts=4:
 ','line_number':250,'multiline':True]