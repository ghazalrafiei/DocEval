['text':' Happy','line_number':37,'multiline':False]['text':' Forwards for the "protected" methods','line_number':46,'multiline':False]['text':' static void eat_bytes(TermKey *tk, size_t count);','line_number':47,'multiline':False]['text':' Mouse event names','line_number':122,'multiline':False]['text':' Some internal debugging functions ','line_number':128,'multiline':True]['text':' Similar to snprintf(str, size, "%s", src) except it turns CamelCase into
 * space separated values
 ','line_number':214,'multiline':True]['text':' For consistency with snprintf, return the number of bytes that would have
   * been written, excluding '\0' ','line_number':232,'multiline':True]['text':' Similar to strcmp(str, strcamel, n) except that:
 *    it compares CamelCase in strcamel with space separated values in str;
 *    it takes char**s and updates them
 * n counts bytes of strcamel, not str
 ','line_number':244,'multiline':True]['text':' Default all the object fields but don't allocate anything ','line_number':284,'multiline':True]['text':' bytes ','line_number':293,'multiline':True]['text':' msec ','line_number':303,'multiline':True]['text':' Most OSes will set .UTF-8. Some will set .utf8. Try to be fairly
     * generous in parsing these
     ','line_number':411,'multiline':True]['text':' want no signal keys at all, so just disable ISIG ','line_number':516,'multiline':True]['text':' Disable Ctrl-\==VQUIT and Ctrl-D==VSUSP but leave Ctrl-C as SIGINT ','line_number':519,'multiline':True]['text':' Some OSes have Ctrl-Y==VDSUSP ','line_number':522,'multiline':True]['text':' Return the total number of free bytes in the buffer, because that's what
   * is available to the user. ','line_number':639,'multiline':True]['text':' This is easier done backwards','line_number':673,'multiline':False]['text':' Single byte ASCII','line_number':699,'multiline':False]['text':' Starts with a continuation byte - that's not right','line_number':705,'multiline':False]['text':' Check for overlong sequences','line_number':753,'multiline':False]['text':' Check for UTF-16 surrogates or invalid *cps','line_number':757,'multiline':False]['text':' ASCII NUL = Ctrl-Space','line_number':770,'multiline':False]['text':' C0 range','line_number':776,'multiline':False]['text':' Generically modified Unicode ought not report the SHIFT state, or else
       * we get into complications trying to report Shift-; vs : and so on...
       * In order to be able to represent Ctrl-Shift-A as CTRL modified
       * unicode A, we need to call Ctrl-A simply 'a', lowercase
       ','line_number':787,'multiline':True]['text':' it's a letter - use lowercase instead','line_number':793,'multiline':False]['text':' ASCII DEL','line_number':804,'multiline':False]['text':' ASCII lowbyte range','line_number':810,'multiline':False]['text':' UTF-8 never starts with a C1 byte. So we can be sure of these','line_number':816,'multiline':False]['text':' UTF-8 codepoint','line_number':822,'multiline':False]['text':' Slide the data down to stop it running away','line_number':894,'multiline':False]['text':' fallthrough ','line_number':904,'multiline':True]['text':' fallthrough ','line_number':913,'multiline':True]['text':' Escape-prefixed value? Might therefore be Alt+key','line_number':942,'multiline':False]['text':' This might be an <Esc> press, or it may want to be part of a longer','line_number':944,'multiline':False]['text':' sequence','line_number':945,'multiline':False]['text':' Try another key there','line_number':954,'multiline':False]['text':' Run the full driver','line_number':958,'multiline':False]['text':' Single byte C0, G0 or C1 - C1 is never UTF-8 initial byte','line_number':980,'multiline':False]['text':' Some UTF-8','line_number':986,'multiline':False]['text':' There weren't enough bytes for a complete UTF-8 sequence but caller
       * demands an answer. About the best thing we can do here is eat as many
       * bytes as we have, and emit a UTF8_INVALID. If the remaining bytes
       * arrive later, they'll be invalid too.
       ','line_number':991,'multiline':True]['text':' Non UTF-8 case - just report the raw byte','line_number':1007,'multiline':False]['text':' Call peekkey() again in force mode to obtain whatever it can ','line_number':1048,'multiline':True]['text':' Don't eat it yet though ','line_number':1050,'multiline':True]['text':' We're closed now. Never going to get more bytes so just go with','line_number':1092,'multiline':False]['text':' what we have','line_number':1093,'multiline':False]['text':' UNREACHABLE ','line_number':1124,'multiline':True]['text':' Not expecting it ever to be greater but doesn't hurt to handle that ','line_number':1142,'multiline':True]['text':' Not expecting it ever to be greater but doesn't hurt to handle that ','line_number':1176,'multiline':True]['text':' memcpy(), not strncpy() in case of null bytes in input','line_number':1185,'multiline':False]['text':' Fill in the hole','line_number':1204,'multiline':False]['text':' We store an array, so we can't do better than a linear search. Doesn't
   * matter because user won't be calling this too often ','line_number':1229,'multiline':True]['text':' Previous name for this function
 * No longer declared in termkey.h but it remains in the compiled library for
 * backward-compatibility reasons.
 ','line_number':1287,'multiline':True]['text':' 0','line_number':1300,'multiline':False]['text':' LONGMOD','line_number':1301,'multiline':False]['text':' ALTISMETA','line_number':1302,'multiline':False]['text':' ALTISMETA+LONGMOD','line_number':1303,'multiline':False]['text':' LOWERMOD','line_number':1304,'multiline':False]['text':' LOWERMOD+LONGMOD','line_number':1305,'multiline':False]['text':' LOWERMOD+ALTISMETA','line_number':1306,'multiline':False]['text':' LOWERMOD+ALTISMETA+LONGMOD','line_number':1307,'multiline':False]['text':' Handle some of the special cases first','line_number':1329,'multiline':False]['text':' In case of user-supplied key structures','line_number':1371,'multiline':False]['text':' Unicode must be last','line_number':1533,'multiline':False]['text':' Copy the key structs since we'll be modifying them ','line_number':1549,'multiline':True]