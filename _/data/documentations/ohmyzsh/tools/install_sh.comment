['text':'!/bin/sh','line_number':1,'multiline':False]['text':'','line_number':2,'multiline':False]['text':' This script should be run via curl:','line_number':3,'multiline':False]['text':'   sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"','line_number':4,'multiline':False]['text':' or via wget:','line_number':5,'multiline':False]['text':'   sh -c "$(wget -qO- https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"','line_number':6,'multiline':False]['text':' or via fetch:','line_number':7,'multiline':False]['text':'   sh -c "$(fetch -o - https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"','line_number':8,'multiline':False]['text':'','line_number':9,'multiline':False]['text':' As an alternative, you can first download the install script and run it afterwards:','line_number':10,'multiline':False]['text':'   wget https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh','line_number':11,'multiline':False]['text':'   sh install.sh','line_number':12,'multiline':False]['text':'','line_number':13,'multiline':False]['text':' You can tweak the install behavior by setting variables when running the script. For','line_number':14,'multiline':False]['text':' example, to change the path to the Oh My Zsh repository:','line_number':15,'multiline':False]['text':'   ZSH=~/.zsh sh install.sh','line_number':16,'multiline':False]['text':'','line_number':17,'multiline':False]['text':' Respects the following environment variables:','line_number':18,'multiline':False]['text':'   ZDOTDIR - path to Zsh dotfiles directory (default: unset). See [1][2]','line_number':19,'multiline':False]['text':'             [1] https://zsh.sourceforge.io/Doc/Release/Parameters.html#index-ZDOTDIR','line_number':20,'multiline':False]['text':'             [2] https://zsh.sourceforge.io/Doc/Release/Files.html#index-ZDOTDIR_002c-use-of','line_number':21,'multiline':False]['text':'   ZSH     - path to the Oh My Zsh repository folder (default: $HOME/.oh-my-zsh)','line_number':22,'multiline':False]['text':'   REPO    - name of the GitHub repo to install from (default: ohmyzsh/ohmyzsh)','line_number':23,'multiline':False]['text':'   REMOTE  - full remote URL of the git repo to install (default: GitHub via HTTPS)','line_number':24,'multiline':False]['text':'   BRANCH  - branch to check out immediately after install (default: master)','line_number':25,'multiline':False]['text':'','line_number':26,'multiline':False]['text':' Other options:','line_number':27,'multiline':False]['text':'   CHSH       - 'no' means the installer will not change the default shell (default: yes)','line_number':28,'multiline':False]['text':'   RUNZSH     - 'no' means the installer will not run zsh after the install (default: yes)','line_number':29,'multiline':False]['text':'   KEEP_ZSHRC - 'yes' means the installer will not replace an existing .zshrc (default: no)','line_number':30,'multiline':False]['text':'','line_number':31,'multiline':False]['text':' You can also pass some arguments to the install script to set some these options:','line_number':32,'multiline':False]['text':'   --skip-chsh: has the same behavior as setting CHSH to 'no'','line_number':33,'multiline':False]['text':'   --unattended: sets both CHSH and RUNZSH to 'no'','line_number':34,'multiline':False]['text':'   --keep-zshrc: sets KEEP_ZSHRC to 'yes'','line_number':35,'multiline':False]['text':' For example:','line_number':36,'multiline':False]['text':'   sh install.sh --unattended','line_number':37,'multiline':False]['text':' or:','line_number':38,'multiline':False]['text':'   sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" "" --unattended','line_number':39,'multiline':False]['text':'','line_number':40,'multiline':False]['text':' Make sure important variables exist if not already defined','line_number':43,'multiline':False]['text':'','line_number':44,'multiline':False]['text':' $USER is defined by login(1) which is not always executed (e.g. containers)','line_number':45,'multiline':False]['text':' POSIX: https://pubs.opengroup.org/onlinepubs/009695299/utilities/id.html','line_number':46,'multiline':False]['text':' $HOME is defined at the time of login, but it could be unset. If it is unset,','line_number':48,'multiline':False]['text':' a tilde by itself (~) will not be expanded to the current user's home directory.','line_number':49,'multiline':False]['text':' POSIX: https://pubs.opengroup.org/onlinepubs/009696899/basedefs/xbd_chap08.html#tag_08_03','line_number':50,'multiline':False]['text':' macOS does not have getent, but this works even if $HOME is unset','line_number':52,'multiline':False]['text':' Track if $ZSH was provided','line_number':56,'multiline':False]['text':' Use $zdot to keep track of where the directory is for zsh dotfiles','line_number':59,'multiline':False]['text':' To check if $ZDOTDIR was provided, explicitly check for $ZDOTDIR','line_number':60,'multiline':False]['text':' Default value for $ZSH','line_number':63,'multiline':False]['text':' a) if $ZDOTDIR is supplied and not $HOME: $ZDOTDIR/ohmyzsh','line_number':64,'multiline':False]['text':' b) otherwise, $HOME/.oh-my-zsh','line_number':65,'multiline':False]['text':' Default settings','line_number':71,'multiline':False]['text':' Other options','line_number':76,'multiline':False]['text':' Check if sudo is installed','line_number':87,'multiline':False]['text':' Termux can't run sudo, so we can detect it and exit the function early.','line_number':89,'multiline':False]['text':' The following command has 3 parts:','line_number':93,'multiline':False]['text':'','line_number':94,'multiline':False]['text':' 1. Run `sudo` with `-v`. Does the following:','line_number':95,'multiline':False]['text':'    • with privilege: asks for a password immediately.','line_number':96,'multiline':False]['text':'    • without privilege: exits with error code 1 and prints the message:','line_number':97,'multiline':False]['text':'      Sorry, user <username> may not run sudo on <hostname>','line_number':98,'multiline':False]['text':'','line_number':99,'multiline':False]['text':' 2. Pass `-n` to `sudo` to tell it to not ask for a password. If the','line_number':100,'multiline':False]['text':'    password is not required, the command will finish with exit code 0.','line_number':101,'multiline':False]['text':'    If one is required, sudo will exit with error code 1 and print the','line_number':102,'multiline':False]['text':'    message:','line_number':103,'multiline':False]['text':'    sudo: a password is required','line_number':104,'multiline':False]['text':'','line_number':105,'multiline':False]['text':' 3. Check for the words "may not run sudo" in the output to really tell','line_number':106,'multiline':False]['text':'    whether the user has privileges or not. For that we have to make sure','line_number':107,'multiline':False]['text':'    to run `sudo` in the default locale (with `LANG=`) so that the message','line_number':108,'multiline':False]['text':'    stays consistent regardless of the user's locale.','line_number':109,'multiline':False]['text':'','line_number':110,'multiline':False]['text':' The [ -t 1 ] check only works when the function is not called from','line_number':114,'multiline':False]['text':' a subshell (like in `$(...)` or `(...)`, so this hack redefines the','line_number':115,'multiline':False]['text':' function at the top level to always return false when stdout is not','line_number':116,'multiline':False]['text':' a tty.','line_number':117,'multiline':False]['text':' This function uses the logic from supports-hyperlinks[1][2], which is','line_number':128,'multiline':False]['text':' made by Kat Marchán (@zkat) and licensed under the Apache License 2.0.','line_number':129,'multiline':False]['text':' [1] https://github.com/zkat/supports-hyperlinks','line_number':130,'multiline':False]['text':' [2] https://crates.io/crates/supports-hyperlinks','line_number':131,'multiline':False]['text':'','line_number':132,'multiline':False]['text':' Copyright (c) 2021 Kat Marchán','line_number':133,'multiline':False]['text':'','line_number':134,'multiline':False]['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':135,'multiline':False]['text':' you may not use this file except in compliance with the License.','line_number':136,'multiline':False]['text':' You may obtain a copy of the License at','line_number':137,'multiline':False]['text':'','line_number':138,'multiline':False]['text':'     http://www.apache.org/licenses/LICENSE-2.0','line_number':139,'multiline':False]['text':'','line_number':140,'multiline':False]['text':' Unless required by applicable law or agreed to in writing, software','line_number':141,'multiline':False]['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':142,'multiline':False]['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':143,'multiline':False]['text':' See the License for the specific language governing permissions and','line_number':144,'multiline':False]['text':' limitations under the License.','line_number':145,'multiline':False]['text':' $FORCE_HYPERLINK must be set and be non-zero (this acts as a logic bypass)','line_number':147,'multiline':False]['text':' If stdout is not a tty, it doesn't support hyperlinks','line_number':153,'multiline':False]['text':' DomTerm terminal emulator (domterm.org)','line_number':156,'multiline':False]['text':' VTE-based terminals above v0.50 (Gnome Terminal, Guake, ROXTerm, etc)','line_number':161,'multiline':False]['text':' If $TERM_PROGRAM is set, these terminals support hyperlinks','line_number':167,'multiline':False]['text':' kitty supports hyperlinks','line_number':172,'multiline':False]['text':' Windows Terminal also supports hyperlinks','line_number':177,'multiline':False]['text':' Konsole supports hyperlinks, but it's an opt-in setting that can't be detected','line_number':182,'multiline':False]['text':' https://github.com/ohmyzsh/ohmyzsh/issues/10964','line_number':183,'multiline':False]['text':' if [ -n "$KONSOLE_VERSION" ]; then','line_number':184,'multiline':False]['text':'   return 0','line_number':185,'multiline':False]['text':' fi','line_number':186,'multiline':False]['text':' Adapted from code and information by Anton Kochkov (@XVilka)','line_number':191,'multiline':False]['text':' Source: https://gist.github.com/XVilka/8346728','line_number':192,'multiline':False]['text':' $1: text, $2: url, $3: fallback mode','line_number':210,'multiline':False]['text':' shellcheck disable=SC2016 # backtick in single-quote','line_number':226,'multiline':False]['text':' Only use colors if connected to a terminal','line_number':236,'multiline':False]['text':' Prevent the cloned repository from having insecure permissions. Failing to do','line_number':279,'multiline':False]['text':' so causes compinit() calls to fail with "command not found: compdef" errors','line_number':280,'multiline':False]['text':' for users with insecure umasks (e.g., "002", allowing group writability). Note','line_number':281,'multiline':False]['text':' that this will be ignored under Cygwin by default, as Windows ACLs take','line_number':282,'multiline':False]['text':' precedence over umasks except for filesystems mounted with option "noacl".','line_number':283,'multiline':False]['text':' Manual clone with git config options to support git < v1.7.2','line_number':300,'multiline':False]['text':' Exit installation directory','line_number':319,'multiline':False]['text':' Keep most recent old .zshrc at .zshrc.pre-oh-my-zsh, and older ones','line_number':326,'multiline':False]['text':' with datestamp of installation that moved them aside, so we never actually','line_number':327,'multiline':False]['text':' destroy a user's original zshrc','line_number':328,'multiline':False]['text':' Must use this exact name so uninstall.sh can find it','line_number':331,'multiline':False]['text':' Skip this if the user doesn't want to replace an existing .zshrc','line_number':334,'multiline':False]['text':' Modify $ZSH variable in .zshrc directory to use the literal $ZDOTDIR or $HOME','line_number':357,'multiline':False]['text':' Skip setup if the user wants or stdin is closed (not running interactively).','line_number':371,'multiline':False]['text':' If this user's login shell is already "zsh", do not attempt to switch.','line_number':376,'multiline':False]['text':' If this platform doesn't provide a "chsh" command, bail out.','line_number':381,'multiline':False]['text':' Test for the right location of the "shells" file','line_number':409,'multiline':False]['text':' Solus OS','line_number':412,'multiline':False]['text':' Get the path to the right zsh binary','line_number':419,'multiline':False]['text':' 1. Use the most preceding one based on $PATH, then check that it's in the shells file','line_number':420,'multiline':False]['text':' 2. If that fails, get a zsh path from the shells file, then check it actually exists','line_number':421,'multiline':False]['text':' We're going to change the default shell, so back up the current one','line_number':431,'multiline':False]['text':' Check if user has sudo privileges to run `chsh` with or without `sudo`','line_number':440,'multiline':False]['text':'','line_number':441,'multiline':False]['text':' This allows the call to succeed without password on systems where the','line_number':442,'multiline':False]['text':' user does not have a password but does have sudo privileges, like in','line_number':443,'multiline':False]['text':' Google Cloud Shell.','line_number':444,'multiline':False]['text':'','line_number':445,'multiline':False]['text':' On systems that don't have a user with passwordless sudo, the user will','line_number':446,'multiline':False]['text':' be prompted for the password either way, so this shouldn't cause any issues.','line_number':447,'multiline':False]['text':'','line_number':448,'multiline':False]['text':' -k forces the password prompt','line_number':450,'multiline':False]['text':' run chsh normally','line_number':452,'multiline':False]['text':' Check if the shell change was successful','line_number':455,'multiline':False]['text':' shellcheck disable=SC2183  # printf string has more %s than arguments ($FMT_RAINBOW expands to multiple arguments)','line_number':466,'multiline':False]['text':' Run as unattended if stdin is not a tty','line_number':487,'multiline':False]['text':' Parse arguments','line_number':493,'multiline':False]['text':' -gt 0 ]; do','line_number':494,'multiline':False]['text':' Create ZDOTDIR folder structure if it doesn't exist','line_number':532,'multiline':False]