['text':' skip system LTAR columns','line_number':149,'multiline':False]['text':' v1 logic? skip the current column','line_number':151,'multiline':False]['text':' set default suggestion list','line_number':168,'multiline':False]['text':' validate function name','line_number':195,'multiline':False]['text':' validate arguments','line_number':199,'multiline':False]['text':' validate data type','line_number':212,'multiline':False]['text':' parsedTree.arguments[0] = date','line_number':217,'multiline':False]['text':' parsedTree.arguments[1] = startDayOfWeek (optional)','line_number':228,'multiline':False]['text':' parsedTree.arguments[0] = date','line_number':247,'multiline':False]['text':' parsedTree.arguments[1] = numeric','line_number':258,'multiline':False]['text':' parsedTree.arguments[2] = ["day" | "week" | "month" | "year"]','line_number':269,'multiline':False]['text':' parsedTree.arguments[0] = date','line_number':281,'multiline':False]['text':' parsedTree.arguments[1] = date','line_number':292,'multiline':False]['text':' parsedTree.arguments[2] = ["milliseconds" | "ms" | "seconds" | "s" | "minutes" | "m" | "hours" | "h" | "days" | "d" | "weeks" | "w" | "months" | "M" | "quarters" | "Q" | "years" | "y"]','line_number':303,'multiline':False]['text':' check circular reference','line_number':349,'multiline':False]['text':' e.g. formula1 -> formula2 -> formula1 should return circular reference error','line_number':350,'multiline':False]['text':' get all formula columns excluding itself','line_number':352,'multiline':False]['text':' in `formula`, get all the (unique) target neighbours','line_number':356,'multiline':False]['text':' i.e. all column id (e.g. cl_xxxxxxxxxxxxxx) with formula type','line_number':357,'multiline':False]['text':' e.g. formula column 1 -> [formula column 2, formula column3]','line_number':367,'multiline':False]['text':' include target formula column (i.e. the one to be saved if applicable)','line_number':372,'multiline':False]['text':' perform kahn's algo for cycle detection','line_number':384,'multiline':False]['text':' init adjacency list & indegree','line_number':387,'multiline':False]['text':' put all vertices with in-degree = 0 (i.e. no incoming edges) to queue','line_number':399,'multiline':False]['text':' in-degree = 0 means we start traversing from this node','line_number':402,'multiline':False]['text':' init count of visited vertices','line_number':406,'multiline':False]['text':' BFS','line_number':408,'multiline':False]['text':' remove a vertex from the queue','line_number':410,'multiline':False]['text':' if this node has neighbours, increase visited by 1','line_number':412,'multiline':False]['text':' iterate each neighbouring nodes','line_number':417,'multiline':False]['text':' decrease in-degree of its neighbours by 1','line_number':419,'multiline':False]['text':' if in-degree becomes 0','line_number':421,'multiline':False]['text':' then put the neighboring node to the queue','line_number':423,'multiline':False]['text':' vertices not same as visited = cycle found','line_number':428,'multiline':False]['text':' do nothing','line_number':440,'multiline':False]['text':' string','line_number':488,'multiline':False]['text':' numeric','line_number':507,'multiline':False]['text':' date','line_number':526,'multiline':False]['text':' these functions produce a numeric value, which can be used in numeric functions','line_number':545,'multiline':False]['text':' the value is based on the foreign rollup column type','line_number':556,'multiline':False]['text':' not supported','line_number':589,'multiline':False]['text':' parsedTree.name won't be available here','line_number':609,'multiline':False]['text':' given a parse tree, return the data type of it','line_number':632,'multiline':False]['text':' string','line_number':641,'multiline':False]['text':' numeric','line_number':651,'multiline':False]['text':' date','line_number':660,'multiline':False]['text':' not supported','line_number':667,'multiline':False]['text':' count number of opening curly brackets and closing curly brackets','line_number':696,'multiline':False]['text':' if function / operator is chosen, display columns only','line_number':721,'multiline':False]['text':' show all options if column is chosen','line_number':724,'multiline':False]['text':' set default value','line_number':781,'multiline':False]['text':' set additional validations','line_number':791,'multiline':False]['text':' const predictFunction = async () => {','line_number':800,'multiline':False]['text':'   await _predictFunction(formState, meta, supportedColumns, suggestionsList, vModel)','line_number':801,'multiline':False]['text':' }','line_number':802,'multiline':False]['text':' As using {} in translation will be treated as placeholder, and this translation contain {} as part of th text','line_number':828,'multiline':False]