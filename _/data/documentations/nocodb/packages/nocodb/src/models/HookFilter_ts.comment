['text':' get from db ','line_number':101,'multiline':True]['text':' pushing calls for Promise.all','line_number':103,'multiline':False]['text':' store in redis ','line_number':105,'multiline':True]['text':' append key to relevant lists ','line_number':107,'multiline':True]['text':' get existing cache','line_number':150,'multiline':False]['text':' update alias','line_number':153,'multiline':False]['text':' set cache','line_number':156,'multiline':False]['text':' set meta','line_number':159,'multiline':False]['text':' public async getGroup(ncMeta = Noco.ncMeta): Promise<Filter> {','line_number':187,'multiline':False]['text':'   if (!this.fk_parent_id) return null;','line_number':188,'multiline':False]['text':'   let filterObj = await NocoCache.get(','line_number':189,'multiline':False]['text':'     `${CacheScope.FILTER_EXP}:${this.fk_parent_id}`,','line_number':190,'multiline':False]['text':'     2','line_number':191,'multiline':False]['text':'   );','line_number':192,'multiline':False]['text':'   if (!filterObj) {','line_number':193,'multiline':False]['text':'     filterObj = await ncMeta.metaGet2(null, null, MetaTable.FILTER_EXP, {','line_number':194,'multiline':False]['text':'       id: this.fk_parent_id','line_number':195,'multiline':False]['text':'     });','line_number':196,'multiline':False]['text':'     await NocoCache.set(','line_number':197,'multiline':False]['text':'       `${CacheScope.FILTER_EXP}:${this.fk_parent_id}`,','line_number':198,'multiline':False]['text':'       filterObj','line_number':199,'multiline':False]['text':'     );','line_number':200,'multiline':False]['text':'   }','line_number':201,'multiline':False]['text':'   return filterObj && new Filter(filterObj);','line_number':202,'multiline':False]['text':' }','line_number':203,'multiline':False]['text':'','line_number':204,'multiline':False]['text':' public static async getFilter({','line_number':224,'multiline':False]['text':'   viewId','line_number':225,'multiline':False]['text':' }: {','line_number':226,'multiline':False]['text':'   viewId: string;','line_number':227,'multiline':False]['text':' }): Promise<Filter> {','line_number':228,'multiline':False]['text':'   if (!viewId) return null;','line_number':229,'multiline':False]['text':'','line_number':230,'multiline':False]['text':'   const filterObj = await ncMeta.metaGet2(','line_number':231,'multiline':False]['text':'     null,','line_number':232,'multiline':False]['text':'     null,','line_number':233,'multiline':False]['text':'     MetaTable.FILTER_EXP,','line_number':234,'multiline':False]['text':'     { fk_view_id: viewId, fk_parent_id: null }','line_number':235,'multiline':False]['text':'   );','line_number':236,'multiline':False]['text':'   return filterObj && new Filter(filterObj);','line_number':237,'multiline':False]['text':' }','line_number':238,'multiline':False]['text':' if (!result) {','line_number':286,'multiline':False]['text':'   return (await Filter.insert({','line_number':287,'multiline':False]['text':'     fk_view_id: viewId,','line_number':288,'multiline':False]['text':'     is_group: true,','line_number':289,'multiline':False]['text':'     logical_op: 'AND'','line_number':290,'multiline':False]['text':'   })) as any;','line_number':291,'multiline':False]['text':' }','line_number':292,'multiline':False]['text':' static async deleteAll(viewId: string, ncMeta = Noco.ncMeta) {','line_number':296,'multiline':False]['text':'   const filter = await this.getFilterObject({ viewId }, ncMeta);','line_number':297,'multiline':False]['text':'','line_number':298,'multiline':False]['text':'   const deleteRecursively = async filter => {','line_number':299,'multiline':False]['text':'     if (!filter) return;','line_number':300,'multiline':False]['text':'     for (const f of filter?.children || []) await deleteRecursively(f);','line_number':301,'multiline':False]['text':'     if (filter.id) {','line_number':302,'multiline':False]['text':'       await ncMeta.metaDelete(null, null, MetaTable.FILTER_EXP, filter.id);','line_number':303,'multiline':False]['text':'       await NocoCache.deepDel(','line_number':304,'multiline':False]['text':'         CacheScope.FILTER_EXP,','line_number':305,'multiline':False]['text':'         `${CacheScope.FILTER_EXP}:${filter.id}`,','line_number':306,'multiline':False]['text':'         CacheDelDirection.CHILD_TO_PARENT','line_number':307,'multiline':False]['text':'       );','line_number':308,'multiline':False]['text':'     }','line_number':309,'multiline':False]['text':'   };','line_number':310,'multiline':False]['text':'   await deleteRecursively(filter);','line_number':311,'multiline':False]['text':' }','line_number':312,'multiline':False]['text':'','line_number':313,'multiline':False]['text':'','line_number':329,'multiline':False]['text':'','line_number':345,'multiline':False]['text':' static async parentFilterList(','line_number':346,'multiline':False]['text':'   {','line_number':347,'multiline':False]['text':'     viewId,','line_number':348,'multiline':False]['text':'     parentId','line_number':349,'multiline':False]['text':'   }: {','line_number':350,'multiline':False]['text':'     viewId: any;','line_number':351,'multiline':False]['text':'     parentId: any;','line_number':352,'multiline':False]['text':'   },','line_number':353,'multiline':False]['text':'   ncMeta = Noco.ncMeta','line_number':354,'multiline':False]['text':' ) {','line_number':355,'multiline':False]['text':'   let filterObjs = await NocoCache.getList(CacheScope.FILTER_EXP, [','line_number':356,'multiline':False]['text':'     viewId,','line_number':357,'multiline':False]['text':'     parentId','line_number':358,'multiline':False]['text':'   ]);','line_number':359,'multiline':False]['text':'   if (!filterObjs.length) {','line_number':360,'multiline':False]['text':'     filterObjs = await ncMeta.metaList2(null, null, MetaTable.FILTER_EXP, {','line_number':361,'multiline':False]['text':'       condition: {','line_number':362,'multiline':False]['text':'         fk_parent_id: parentId,','line_number':363,'multiline':False]['text':'         fk_view_id: viewId','line_number':364,'multiline':False]['text':'       }','line_number':365,'multiline':False]['text':'     });','line_number':366,'multiline':False]['text':'     await NocoCache.setList(','line_number':367,'multiline':False]['text':'       CacheScope.FILTER_EXP,','line_number':368,'multiline':False]['text':'       [viewId, parentId],','line_number':369,'multiline':False]['text':'       filterObjs','line_number':370,'multiline':False]['text':'     );','line_number':371,'multiline':False]['text':'   }','line_number':372,'multiline':False]['text':'   return filterObjs?.map(f => new Filter(f));','line_number':373,'multiline':False]['text':' }','line_number':374,'multiline':False]