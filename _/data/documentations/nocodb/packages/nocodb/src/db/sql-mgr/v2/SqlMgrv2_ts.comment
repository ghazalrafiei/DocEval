['text':' import debug from 'debug';','line_number':1,'multiline':False]['text':' import {XKnex} from "../sql-data-mapper";','line_number':3,'multiline':False]['text':' @ts-ignore','line_number':16,'multiline':False]['text':'*
   * Creates an instance of SqlMgr.
   * @param {*} args
   * @param {String} args.toolDbPath - path to sqlite file that sql mgr will use
   * @memberof SqlMgr
   ','line_number':19,'multiline':True]['text':' this.metaDb = args.metaDb;','line_number':28,'multiline':False]['text':' close connection','line_number':41,'multiline':False]['text':'*
   *
   *
   * @param {*} args
   * @param {String} args.env
   * @param {dbAlias} args.dbAlias
   * @param {String} op - sqlClient function to call
   * @param {*} opArgs - sqlClient function arguments
   * @memberof SqlMgr
   ','line_number':47,'multiline':True]['text':' create sql client for this operation','line_number':61,'multiline':False]['text':' do sql operation','line_number':64,'multiline':False]['text':'*
   *
   *
   * @param {*} base
   * @param {String} base.env
   * @param {dbAlias} base.dbAlias
   * @param {String} op - sqlClient function to call
   * @param {*} opArgs - sqlClient function arguments
   * @memberof SqlMgr
   ','line_number':70,'multiline':True]['text':' create sql client for this operation','line_number':91,'multiline':False]['text':'await this.baseGetSqlClient(args);','line_number':92,'multiline':False]['text':' do sql operation','line_number':94,'multiline':False]['text':' // create sql migration files
    const sqlMigrationFiles = await this.sql-migrator(base).migrationsCreate(base);
    console.log(`Sql Migration Files for '${op}'`, sqlMigrationFiles);

    // write sql statements to migration files
    console.log(
      `Write sql migration files for '${op}' with`,
      sqlMigrationStatements
    );
    await this.sql-migrator(base).migrationsWrite({
      base,
      ...sqlMigrationStatements.data.object,
      folder: this.currentProjectFolder,
      up: sqlMigrationFiles.up,
      down: sqlMigrationFiles.down
    });

    // mark as migration done in nc_evolutions table
    console.log(
      `TODO: write sql migration files for '${op}' with`,
      sqlMigrationStatements
    );
    const migrationArgs = {
      base: base,
      sqlContentMigrate: 0,
      migrationSteps: 9999,
      folder: this.currentProjectFolder,
      sqlClient
    };
    await this.sql-migrator(base).migrationsUp(migrationArgs);
','line_number':97,'multiline':True]