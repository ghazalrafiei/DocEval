['text':'*
   * Make a map and return a function for checking if a key
   * is in that map.
   * IMPORTANT: all calls of this function must be prefixed with
   * \/\*#\_\_PURE\_\_\*\/
   * So that rollup can tree-shake them if necessary.
   ','line_number':4,'multiline':True]['text':'*
   * dev only flag -> name mapping
   ','line_number':20,'multiline':True]['text':' PatchFlags.TEXT ','line_number':24,'multiline':True]['text':' PatchFlags.CLASS ','line_number':25,'multiline':True]['text':' PatchFlags.STYLE ','line_number':26,'multiline':True]['text':' PatchFlags.PROPS ','line_number':27,'multiline':True]['text':' PatchFlags.FULL_PROPS ','line_number':28,'multiline':True]['text':' PatchFlags.HYDRATE_EVENTS ','line_number':29,'multiline':True]['text':' PatchFlags.STABLE_FRAGMENT ','line_number':30,'multiline':True]['text':' PatchFlags.KEYED_FRAGMENT ','line_number':31,'multiline':True]['text':' PatchFlags.UNKEYED_FRAGMENT ','line_number':32,'multiline':True]['text':' PatchFlags.NEED_PATCH ','line_number':33,'multiline':True]['text':' PatchFlags.DYNAMIC_SLOTS ','line_number':34,'multiline':True]['text':' PatchFlags.DEV_ROOT_FRAGMENT ','line_number':35,'multiline':True]['text':' PatchFlags.HOISTED ','line_number':36,'multiline':True]['text':' PatchFlags.BAIL ','line_number':37,'multiline':True]['text':'*
   * Dev only
   ','line_number':40,'multiline':True]['text':' SlotFlags.STABLE ','line_number':44,'multiline':True]['text':' SlotFlags.DYNAMIC ','line_number':45,'multiline':True]['text':' SlotFlags.FORWARDED ','line_number':46,'multiline':True]['text':'#__PURE__','line_number':52,'multiline':True]['text':' Split the content into individual lines but capture the newline sequence','line_number':56,'multiline':False]['text':' that separated each line. This is important because the actual sequence is','line_number':57,'multiline':False]['text':' needed to properly take into account the full line length for offset','line_number':58,'multiline':False]['text':' comparison','line_number':59,'multiline':False]['text':' Separate the lines and newline sequences into separate arrays for easier referencing','line_number':61,'multiline':False]['text':' push underline','line_number':79,'multiline':False]['text':'gs;','line_number':123,'multiline':False]['text':' These tag configs are shared between compiler-dom and runtime-dom, so they','line_number':172,'multiline':False]['text':' https://developer.mozilla.org/en-US/docs/Web/HTML/Element','line_number':173,'multiline':False]['text':' https://developer.mozilla.org/en-US/docs/Web/SVG/Element','line_number':183,'multiline':False]['text':'*
   * Compiler only.
   * Do NOT use in runtime code paths unless behind `true` flag.
   ','line_number':195,'multiline':True]['text':'#__PURE__','line_number':199,'multiline':True]['text':'*
   * Compiler only.
   * Do NOT use in runtime code paths unless behind `true` flag.
   ','line_number':200,'multiline':True]['text':'#__PURE__','line_number':204,'multiline':True]['text':'*
   * Compiler only.
   * Do NOT use in runtime code paths unless behind `true` flag.
   ','line_number':205,'multiline':True]['text':'#__PURE__','line_number':209,'multiline':True]['text':'*
   * On the client we only need to offer special cases for boolean attributes that
   * have different names from their corresponding dom properties:
   * - itemscope -> N/A
   * - allowfullscreen -> allowFullscreen
   * - formnovalidate -> formNoValidate
   * - ismap -> isMap
   * - nomodule -> noModule
   * - novalidate -> noValidate
   * - readonly -> readOnly
   ','line_number':211,'multiline':True]['text':'#__PURE__','line_number':223,'multiline':True]['text':'*
   * Boolean attributes should be included if the value is truthy or ''.
   * e.g. `<select multiple>` compiles to `{ multiple: '' }`
   ','line_number':224,'multiline':True]['text':' istanbul ignore if: this if will probably never be called ','line_number':262,'multiline':True]['text':'*
   * For converting {{ interpolation }} values to displayed strings.
   * @private
   ','line_number':287,'multiline':True]['text':' can't use isRef here since @vue/shared has no deps','line_number':303,'multiline':False]['text':'*
   * Always return false.
   ','line_number':330,'multiline':True]['text':' extract "RawType" from strings like "[object RawType]"','line_number':361,'multiline':False]['text':'#__PURE__','line_number':369,'multiline':True]['text':' the leading comma is intentional so empty string "" is also included','line_number':370,'multiline':False]['text':'#__PURE__','line_number':375,'multiline':True]['text':'*
   * @private
   ','line_number':384,'multiline':True]['text':'*
   * @private
   ','line_number':391,'multiline':True]['text':'*
   * @private
   ','line_number':395,'multiline':True]['text':'*
   * @private
   ','line_number':399,'multiline':True]['text':' compare whether a value has changed, accounting for NaN.','line_number':403,'multiline':False]['text':'*
   * "123-foo" will be parsed to 123
   * This is used for the .number modifier in v-model
   ','line_number':417,'multiline':True]['text':'*
   * Only conerces number-like strings
   * "123-foo" will be returned as-is
   ','line_number':425,'multiline':True]['text':'*
           * @internal
           ','line_number':456,'multiline':True]['text':'*
           * @internal
           ','line_number':460,'multiline':True]['text':'*
           * @internal
           ','line_number':464,'multiline':True]['text':'*
       * This should only be called on non-detached scopes
       * @internal
       ','line_number':492,'multiline':True]['text':'*
       * This should only be called on non-detached scopes
       * @internal
       ','line_number':499,'multiline':True]['text':' nested scope, dereference from parent to avoid memory leaks','line_number':520,'multiline':False]['text':' optimized O(1) removal','line_number':522,'multiline':False]['text':' set was tracked','line_number':566,'multiline':False]['text':' clear bits','line_number':582,'multiline':False]['text':' The number of effects currently being tracked recursively.','line_number':591,'multiline':False]['text':'*
   * The bitwise track markers support at most 30 levels of recursion.
   * This value is chosen to enable modern JS engines to use a SMI on all platforms.
   * When recursion depth is greater, fall back to using a full cleanup.
   ','line_number':594,'multiline':True]['text':' stopped while running itself - defer the cleanup','line_number':651,'multiline':False]['text':' set newly tracked','line_number':722,'multiline':False]['text':' Full cleanup mode.','line_number':727,'multiline':False]['text':' never been tracked','line_number':741,'multiline':False]['text':' TriggerOpTypes.CLEAR ','line_number':745,'multiline':True]['text':' collection being cleared','line_number':746,'multiline':False]['text':' trigger all effects for target','line_number':747,'multiline':False]['text':' schedule runs for SET | ADD | DELETE','line_number':759,'multiline':False]['text':' also run for iteration key on ADD | DELETE | Map.SET','line_number':763,'multiline':False]['text':' TriggerOpTypes.ADD ','line_number':765,'multiline':True]['text':' new index added to array -> length changes','line_number':773,'multiline':False]['text':' TriggerOpTypes.DELETE ','line_number':777,'multiline':True]['text':' TriggerOpTypes.SET ','line_number':785,'multiline':True]['text':' spread into array for stabilization','line_number':814,'multiline':False]['text':'#__PURE__','line_number':845,'multiline':True]['text':'#__PURE__','line_number':847,'multiline':True]['text':' ios10.x Object.getOwnPropertyNames(Symbol) can enumerate 'arguments' and 'caller'','line_number':849,'multiline':False]['text':' but accessing them on Symbol leads to TypeError because Symbol is a strict mode','line_number':850,'multiline':False]['text':' function','line_number':851,'multiline':False]['text':'#__PURE__','line_number':855,'multiline':True]['text':'#__PURE__','line_number':856,'multiline':True]['text':'#__PURE__','line_number':857,'multiline':True]['text':'#__PURE__','line_number':858,'multiline':True]['text':'#__PURE__','line_number':859,'multiline':True]['text':' TrackOpTypes.GET ','line_number':866,'multiline':True]['text':' we run the method using the original args first (which may be reactive)','line_number':868,'multiline':False]['text':' if that didn't work, run it again using raw values.','line_number':871,'multiline':False]['text':' TrackOpTypes.HAS ','line_number':891,'multiline':True]['text':' ReactiveFlags.IS_REACTIVE ','line_number':896,'multiline':True]['text':' ReactiveFlags.IS_READONLY ','line_number':899,'multiline':True]['text':' ReactiveFlags.IS_SHALLOW ','line_number':902,'multiline':True]['text':' ReactiveFlags.RAW ','line_number':905,'multiline':True]['text':' TrackOpTypes.GET ','line_number':930,'multiline':True]['text':' ref unwrapping - skip unwrap for Array + integer key.','line_number':936,'multiline':False]['text':' Convert returned value into a proxy as well. we do the isObject check','line_number':940,'multiline':False]['text':' here to avoid invalid value warning. Also need to lazy access readonly','line_number':941,'multiline':False]['text':' and reactive here to avoid circular dependency.','line_number':942,'multiline':False]['text':'#__PURE__','line_number':948,'multiline':True]['text':'#__PURE__','line_number':949,'multiline':True]['text':' don't trigger if target is something up in the prototype chain of original','line_number':970,'multiline':False]['text':' TriggerOpTypes.ADD ','line_number':973,'multiline':True]['text':' TriggerOpTypes.SET ','line_number':976,'multiline':True]['text':' TriggerOpTypes.DELETE ','line_number':987,'multiline':True]['text':' TrackOpTypes.HAS ','line_number':994,'multiline':True]['text':' TrackOpTypes.ITERATE ','line_number':999,'multiline':True]['text':'#__PURE__','line_number':1024,'multiline':True]['text':' Props handlers are special in the sense that it should not unwrap top-level','line_number':1028,'multiline':False]['text':' refs (in order to allow refs to be explicitly passed down), but should','line_number':1029,'multiline':False]['text':' retain the reactivity of the normal readonly object.','line_number':1030,'multiline':False]['text':'#__PURE__','line_number':1031,'multiline':True]['text':' #1772: readonly(reactive(Map)) should return readonly + reactive version','line_number':1038,'multiline':False]['text':' of the value','line_number':1039,'multiline':False]['text':' ReactiveFlags.RAW ','line_number':1040,'multiline':True]['text':' TrackOpTypes.GET ','line_number':1045,'multiline':True]['text':' TrackOpTypes.GET ','line_number':1047,'multiline':True]['text':' #3602 readonly(reactive(Map))','line_number':1058,'multiline':False]['text':' ensure that the nested reactive `Map` can do tracking for itself','line_number':1059,'multiline':False]['text':' ReactiveFlags.RAW ','line_number':1064,'multiline':True]['text':' TrackOpTypes.HAS ','line_number':1069,'multiline':True]['text':' TrackOpTypes.HAS ','line_number':1071,'multiline':True]['text':' ReactiveFlags.RAW ','line_number':1078,'multiline':True]['text':' TrackOpTypes.ITERATE ','line_number':1079,'multiline':True]['text':' TriggerOpTypes.ADD ','line_number':1089,'multiline':True]['text':' TriggerOpTypes.ADD ','line_number':1108,'multiline':True]['text':' TriggerOpTypes.SET ','line_number':1111,'multiline':True]['text':' forward the operation before queueing reactions','line_number':1127,'multiline':False]['text':' TriggerOpTypes.DELETE ','line_number':1130,'multiline':True]['text':' forward the operation before queueing reactions','line_number':1141,'multiline':False]['text':' TriggerOpTypes.CLEAR ','line_number':1144,'multiline':True]['text':' ReactiveFlags.RAW ','line_number':1151,'multiline':True]['text':' TrackOpTypes.ITERATE ','line_number':1154,'multiline':True]['text':' important: make sure the callback is','line_number':1156,'multiline':False]['text':' 1. invoked with the reactive map as `this` and 3rd arg','line_number':1157,'multiline':False]['text':' 2. the value received should be a corresponding reactive/readonly.','line_number':1158,'multiline':False]['text':' ReactiveFlags.RAW ','line_number':1165,'multiline':True]['text':' TrackOpTypes.ITERATE ','line_number':1173,'multiline':True]['text':' return a wrapped iterator which returns observed versions of the','line_number':1174,'multiline':False]['text':' values emitted from the real iterator','line_number':1175,'multiline':False]['text':' iterator protocol','line_number':1177,'multiline':False]['text':' iterable protocol','line_number':1187,'multiline':False]['text':' TriggerOpTypes.DELETE ','line_number':1200,'multiline':True]['text':' TriggerOpTypes.ADD ','line_number':1242,'multiline':True]['text':' TriggerOpTypes.SET ','line_number':1243,'multiline':True]['text':' TriggerOpTypes.DELETE ','line_number':1244,'multiline':True]['text':' TriggerOpTypes.CLEAR ','line_number':1245,'multiline':True]['text':' TriggerOpTypes.ADD ','line_number':1258,'multiline':True]['text':' TriggerOpTypes.SET ','line_number':1259,'multiline':True]['text':' TriggerOpTypes.DELETE ','line_number':1260,'multiline':True]['text':' TriggerOpTypes.CLEAR ','line_number':1261,'multiline':True]['text':' #__PURE__','line_number':1278,'multiline':True]['text':' ReactiveFlags.IS_REACTIVE ','line_number':1288,'multiline':True]['text':' ReactiveFlags.IS_READONLY ','line_number':1291,'multiline':True]['text':' ReactiveFlags.RAW ','line_number':1294,'multiline':True]['text':'#__PURE__','line_number':1303,'multiline':True]['text':'#__PURE__','line_number':1306,'multiline':True]['text':'#__PURE__','line_number':1309,'multiline':True]['text':'#__PURE__','line_number':1312,'multiline':True]['text':' TargetType.COMMON ','line_number':1334,'multiline':True]['text':' TargetType.COLLECTION ','line_number':1339,'multiline':True]['text':' TargetType.INVALID ','line_number':1341,'multiline':True]['text':' ReactiveFlags.SKIP ','line_number':1345,'multiline':True]['text':' TargetType.INVALID ','line_number':1346,'multiline':True]['text':' if trying to observe a readonly proxy, return the readonly version.','line_number':1350,'multiline':False]['text':'*
   * Return a shallowly-reactive copy of the original object, where only the root
   * level properties are reactive. It also does not auto-unwrap refs (even at the
   * root level).
   ','line_number':1356,'multiline':True]['text':'*
   * Creates a readonly copy of the original object. Note the returned copy is not
   * made reactive, but `readonly` can be called on an already reactive object.
   ','line_number':1364,'multiline':True]['text':'*
   * Returns a reactive-copy of the original object, where only the root level
   * properties are readonly, and does NOT unwrap refs nor recursively convert
   * returned properties.
   * This is used for creating the props proxy object for stateful components.
   ','line_number':1371,'multiline':True]['text':' target is already a Proxy, return it.','line_number':1387,'multiline':False]['text':' exception: calling readonly() on a reactive object','line_number':1388,'multiline':False]['text':' ReactiveFlags.RAW ','line_number':1389,'multiline':True]['text':' ReactiveFlags.IS_REACTIVE ','line_number':1390,'multiline':True]['text':' target already has corresponding Proxy','line_number':1393,'multiline':False]['text':' only specific value types can be observed.','line_number':1398,'multiline':False]['text':' TargetType.INVALID ','line_number':1400,'multiline':True]['text':' TargetType.COLLECTION ','line_number':1403,'multiline':True]['text':' ReactiveFlags.RAW ','line_number':1409,'multiline':True]['text':' ReactiveFlags.IS_REACTIVE ','line_number':1411,'multiline':True]['text':' ReactiveFlags.IS_READONLY ','line_number':1414,'multiline':True]['text':' ReactiveFlags.IS_SHALLOW ','line_number':1417,'multiline':True]['text':' ReactiveFlags.RAW ','line_number':1423,'multiline':True]['text':' ReactiveFlags.SKIP ','line_number':1427,'multiline':True]['text':' TrackOpTypes.GET ','line_number':1439,'multiline':True]['text':' TriggerOpTypes.SET ','line_number':1452,'multiline':True]['text':' ReactiveFlags.IS_READONLY ','line_number':1589,'multiline':True]['text':' the computed ref may get wrapped by other proxies e.g. readonly() #3376','line_number':1592,'multiline':False]['text':' ReactiveFlags.IS_READONLY ','line_number':1605,'multiline':True]['text':' avoid props formatting or warn handler tracking deps that might be mutated','line_number':1637,'multiline':False]['text':' during patch, leading to infinite recursion.','line_number':1638,'multiline':False]['text':' ErrorCodes.APP_WARN_HANDLER ','line_number':1644,'multiline':True]['text':' istanbul ignore if ','line_number':1655,'multiline':True]['text':' avoid spamming console during tests','line_number':1657,'multiline':False]['text':' we can't just use the stack because it will be incomplete during updates','line_number':1670,'multiline':False]['text':' that did not start from the root. Re-construct the parent chain using','line_number':1671,'multiline':False]['text':' instance parent pointers.','line_number':1672,'multiline':False]['text':' istanbul ignore next ','line_number':1690,'multiline':True]['text':' istanbul ignore next ','line_number':1707,'multiline':True]['text':' istanbul ignore next ','line_number':1719,'multiline':True]['text':'*
   * @internal
   ','line_number':1742,'multiline':True]['text':' LifecycleHooks.SERVER_PREFETCH ','line_number':1758,'multiline':True]['text':' LifecycleHooks.BEFORE_CREATE ','line_number':1759,'multiline':True]['text':' LifecycleHooks.CREATED ','line_number':1760,'multiline':True]['text':' LifecycleHooks.BEFORE_MOUNT ','line_number':1761,'multiline':True]['text':' LifecycleHooks.MOUNTED ','line_number':1762,'multiline':True]['text':' LifecycleHooks.BEFORE_UPDATE ','line_number':1763,'multiline':True]['text':' LifecycleHooks.UPDATED ','line_number':1764,'multiline':True]['text':' LifecycleHooks.BEFORE_UNMOUNT ','line_number':1765,'multiline':True]['text':' LifecycleHooks.UNMOUNTED ','line_number':1766,'multiline':True]['text':' LifecycleHooks.ACTIVATED ','line_number':1767,'multiline':True]['text':' LifecycleHooks.DEACTIVATED ','line_number':1768,'multiline':True]['text':' LifecycleHooks.ERROR_CAPTURED ','line_number':1769,'multiline':True]['text':' LifecycleHooks.RENDER_TRACKED ','line_number':1770,'multiline':True]['text':' LifecycleHooks.RENDER_TRIGGERED ','line_number':1771,'multiline':True]['text':' ErrorCodes.SETUP_FUNCTION ','line_number':1772,'multiline':True]['text':' ErrorCodes.RENDER_FUNCTION ','line_number':1773,'multiline':True]['text':' ErrorCodes.WATCH_GETTER ','line_number':1774,'multiline':True]['text':' ErrorCodes.WATCH_CALLBACK ','line_number':1775,'multiline':True]['text':' ErrorCodes.WATCH_CLEANUP ','line_number':1776,'multiline':True]['text':' ErrorCodes.NATIVE_EVENT_HANDLER ','line_number':1777,'multiline':True]['text':' ErrorCodes.COMPONENT_EVENT_HANDLER ','line_number':1778,'multiline':True]['text':' ErrorCodes.VNODE_HOOK ','line_number':1779,'multiline':True]['text':' ErrorCodes.DIRECTIVE_HOOK ','line_number':1780,'multiline':True]['text':' ErrorCodes.TRANSITION_HOOK ','line_number':1781,'multiline':True]['text':' ErrorCodes.APP_ERROR_HANDLER ','line_number':1782,'multiline':True]['text':' ErrorCodes.APP_WARN_HANDLER ','line_number':1783,'multiline':True]['text':' ErrorCodes.FUNCTION_REF ','line_number':1784,'multiline':True]['text':' ErrorCodes.ASYNC_COMPONENT_LOADER ','line_number':1785,'multiline':True]['text':' ErrorCodes.SCHEDULER ','line_number':1786,'multiline':True]['text':' the exposed instance is the render proxy to keep it consistent with 2.x','line_number':1819,'multiline':False]['text':' in production the hook receives only the error code','line_number':1821,'multiline':False]['text':' app-level handling','line_number':1834,'multiline':False]['text':' ErrorCodes.APP_ERROR_HANDLER ','line_number':1837,'multiline':True]['text':' crash in dev by default so it's more noticeable','line_number':1853,'multiline':False]['text':'#__PURE__','line_number':1870,'multiline':True]['text':' #2768','line_number':1877,'multiline':False]['text':' Use binary-search to find a suitable position in the queue,','line_number':1878,'multiline':False]['text':' so that the queue maintains the increasing order of job's id,','line_number':1879,'multiline':False]['text':' which can prevent the job from being skipped and also can avoid repeated patching.','line_number':1880,'multiline':False]['text':' the start index should be `flushIndex + 1`','line_number':1882,'multiline':False]['text':' the dedupe search uses the startIndex argument of Array.includes()','line_number':1893,'multiline':False]['text':' by default the search index includes the current job that is being run','line_number':1894,'multiline':False]['text':' so it cannot recursively trigger itself again.','line_number':1895,'multiline':False]['text':' if the job is a watch() callback, the search will start with a +1 index to','line_number':1896,'multiline':False]['text':' allow it recursively trigger itself - it is the user's responsibility to','line_number':1897,'multiline':False]['text':' ensure it doesn't end up in an infinite loop.','line_number':1898,'multiline':False]['text':' if cb is an array, it is a component lifecycle hook which can only be','line_number':1930,'multiline':False]['text':' triggered by a job, which is already deduped in the main queue, so','line_number':1931,'multiline':False]['text':' we can skip duplicate check here to improve perf','line_number':1932,'multiline':False]['text':' if currently flushing, skip the current job itself','line_number':1938,'multiline':False]['text':' #1947 already has active queue, nested flushPostFlushCbs call','line_number':1959,'multiline':False]['text':' Sort queue before flush.','line_number':1996,'multiline':False]['text':' This ensures that:','line_number':1997,'multiline':False]['text':' 1. Components are updated from parent to child. (because parent is always','line_number':1998,'multiline':False]['text':'    created before the child so its render effect will have smaller','line_number':1999,'multiline':False]['text':'    priority number)','line_number':2000,'multiline':False]['text':' 2. If a component is unmounted during a parent component's update,','line_number':2001,'multiline':False]['text':'    its update can be skipped.','line_number':2002,'multiline':False]['text':' conditional usage of checkRecursiveUpdate must be determined out of','line_number':2004,'multiline':False]['text':' try ... catch block since Rollup by default de-optimizes treeshaking','line_number':2005,'multiline':False]['text':' inside try-catch. This can leave all warning code unshaked. Although','line_number':2006,'multiline':False]['text':' they would get eventually shaken by a minifier like terser, some minifiers','line_number':2007,'multiline':False]['text':' would fail to do that (e.g. https://github.com/evanw/esbuild/issues/1610)','line_number':2008,'multiline':False]['text':' console.log(`running:`, job.id)','line_number':2018,'multiline':False]['text':' ErrorCodes.SCHEDULER ','line_number':2019,'multiline':True]['text':' some postFlushCb queued jobs!','line_number':2029,'multiline':False]['text':' keep flushing until it drains.','line_number':2030,'multiline':False]['text':' eslint-disable no-restricted-globals ','line_number':2058,'multiline':True]['text':' Expose the HMR runtime on the global object','line_number':2061,'multiline':False]['text':' This makes it entirely tree-shakable without polluting the exports and makes','line_number':2062,'multiline':False]['text':' it easier to be used in toolings like vue-loader','line_number':2063,'multiline':False]['text':' Note: for a component to be eligible for HMR it also needs the __hmrId option','line_number':2064,'multiline':False]['text':' to be set so that its instances can be registered / removed.','line_number':2065,'multiline':False]['text':' update initial record (for not-yet-rendered component)','line_number':2104,'multiline':False]['text':' this flag forces child components with slot content to update','line_number':2112,'multiline':False]['text':' update initial def (for not-yet-rendered components)','line_number':2123,'multiline':False]['text':' create a snapshot which avoids the set being mutated during updates','line_number':2125,'multiline':False]['text':' 1. Update existing comp definition to match new one','line_number':2130,'multiline':False]['text':' 2. mark definition dirty. This forces the renderer to replace the','line_number':2134,'multiline':False]['text':' component on patch.','line_number':2135,'multiline':False]['text':' 3. invalidate options resolution cache','line_number':2138,'multiline':False]['text':' 4. actually update','line_number':2140,'multiline':False]['text':' custom element','line_number':2142,'multiline':False]['text':' 4. Force the parent instance to re-render. This will cause all updated','line_number':2148,'multiline':False]['text':' components to be unmounted and re-mounted. Queue the update so that we','line_number':2149,'multiline':False]['text':' don't end up forcing the same parent to re-render multiple times.','line_number':2150,'multiline':False]['text':' root instance mounted via createApp() has a reload method','line_number':2154,'multiline':False]['text':' root instance inside tree created via raw render(). Force reload.','line_number':2158,'multiline':False]['text':' 5. make sure to cleanup dirty hmr components after update','line_number':2165,'multiline':False]['text':' handle late devtools injection - only do this if we are in an actual','line_number':2213,'multiline':False]['text':' browser environment to avoid the timer handle stalling test runner exit','line_number':2214,'multiline':False]['text':' (#4815)','line_number':2215,'multiline':False]['text':' some envs mock window but not fully','line_number':2217,'multiline':False]['text':' also exclude jsdom','line_number':2219,'multiline':False]['text':' clear buffer after 3s - the user probably doesn't have devtools installed','line_number':2226,'multiline':False]['text':' at all, and keeping the buffer will cause memory leaks (#4738)','line_number':2227,'multiline':False]['text':' non-browser env, assume not installed','line_number':2237,'multiline':False]['text':' DevtoolsHooks.APP_INIT ','line_number':2243,'multiline':True]['text':' DevtoolsHooks.APP_UNMOUNT ','line_number':2251,'multiline':True]['text':'#__PURE__','line_number':2253,'multiline':True]['text':' DevtoolsHooks.COMPONENT_ADDED ','line_number':2253,'multiline':True]['text':'#__PURE__','line_number':2255,'multiline':True]['text':' DevtoolsHooks.COMPONENT_UPDATED ','line_number':2255,'multiline':True]['text':'#__PURE__','line_number':2256,'multiline':True]['text':' DevtoolsHooks.COMPONENT_REMOVED ','line_number':2256,'multiline':True]['text':' remove the component if it wasn't buffered','line_number':2260,'multiline':False]['text':'#__PURE__','line_number':2270,'multiline':True]['text':' DevtoolsHooks.PERFORMANCE_START ','line_number':2270,'multiline':True]['text':'#__PURE__','line_number':2271,'multiline':True]['text':' DevtoolsHooks.PERFORMANCE_END ','line_number':2271,'multiline':True]['text':' DevtoolsHooks.COMPONENT_EMIT ','line_number':2278,'multiline':True]['text':' for v-model update:xxx events, apply modifiers on args','line_number':2308,'multiline':False]['text':' also try camelCase event handler (#2249)','line_number':2335,'multiline':False]['text':' for v-model update:xxx events, also trigger kebab-case equivalent','line_number':2337,'multiline':False]['text':' for props passed via kebab-case','line_number':2338,'multiline':False]['text':' ErrorCodes.COMPONENT_EVENT_HANDLER ','line_number':2343,'multiline':True]['text':' ErrorCodes.COMPONENT_EVENT_HANDLER ','line_number':2354,'multiline':True]['text':' apply mixin/extends props','line_number':2365,'multiline':False]['text':' Check if an incoming prop key is a declared emit event listener.','line_number':2402,'multiline':False]['text':' e.g. With `emits: { click: null }`, props named `onClick` and `onclick` are','line_number':2403,'multiline':False]['text':' both considered matched listeners.','line_number':2404,'multiline':False]['text':'*
   * mark the current rendering instance for asset resolution (e.g.
   * resolveComponent, resolveDirective) during render
   ','line_number':2415,'multiline':True]['text':'*
   * Note: rendering calls maybe nested. The function returns the parent rendering
   * instance if present, which should be restored after the render is done:
   *
   * ```js
   * const prev = setCurrentRenderingInstance(i)
   * // ...render
   * setCurrentRenderingInstance(prev)
   * ```
   ','line_number':2421,'multiline':True]['text':'*
   * Set scope id when creating hoisted vnodes.
   * @private compiler helper
   ','line_number':2437,'multiline':True]['text':'*
   * Technically we no longer need this after 3.0.8 but we need to keep the same
   * API for backwards compat w/ code generated by compilers.
   * @private
   ','line_number':2444,'multiline':True]['text':'*
   * Only for backwards compat
   * @private
   ','line_number':2452,'multiline':True]['text':'*
   * Wrap a slot function to memoize current rendering instance
   * @private compiler helper
   ','line_number':2457,'multiline':True]['text':' false only','line_number':2461,'multiline':False]['text':' already normalized','line_number':2465,'multiline':False]['text':' If a user calls a compiled slot inside a template expression (#1745), it','line_number':2470,'multiline':False]['text':' can mess up block tracking, so by default we disable block tracking and','line_number':2471,'multiline':False]['text':' force bail out when invoking a compiled slot (indicated by the ._d flag).','line_number':2472,'multiline':False]['text':' This isn't necessary if rendering a compiled `<slot>`, so we flip the','line_number':2473,'multiline':False]['text':' ._d flag off when invoking the wrapped fn inside `renderSlot`.','line_number':2474,'multiline':False]['text':' mark normalized to avoid duplicated wrapping','line_number':2494,'multiline':False]['text':' mark this as compiled by default','line_number':2496,'multiline':False]['text':' this is used in vnode.ts -> normalizeChildren() to set the slot','line_number':2497,'multiline':False]['text':' rendering flag.','line_number':2498,'multiline':False]['text':' disable block tracking by default','line_number':2500,'multiline':False]['text':'*
   * dev only flag to track whether $attrs was used during render.
   * If $attrs was used during render then the warning for failed attrs
   * fallthrough can be suppressed.
   ','line_number':2505,'multiline':True]['text':' ShapeFlags.STATEFUL_COMPONENT ','line_number':2523,'multiline':True]['text':' withProxy is a proxy with a different `has` trap only for','line_number':2524,'multiline':False]['text':' runtime-compiled render functions using `with` block.','line_number':2525,'multiline':False]['text':' functional','line_number':2531,'multiline':False]['text':' in dev, mark attrs accessed if optional props (attrs === props)','line_number':2533,'multiline':False]['text':' we know it doesn't need it ','line_number':2548,'multiline':True]['text':' ErrorCodes.RENDER_FUNCTION ','line_number':2556,'multiline':True]['text':' attr merging','line_number':2559,'multiline':False]['text':' in dev mode, comments are preserved, and it's possible for a template','line_number':2560,'multiline':False]['text':' to have comments along side the root element which makes it a fragment','line_number':2561,'multiline':False]['text':' PatchFlags.DEV_ROOT_FRAGMENT ','line_number':2565,'multiline':True]['text':' ShapeFlags.ELEMENT ','line_number':2572,'multiline':True]['text':' ShapeFlags.COMPONENT ','line_number':2572,'multiline':True]['text':' If a v-model listener (onUpdate:xxx) has a corresponding declared','line_number':2574,'multiline':False]['text':' prop, it indicates this component expects to handle v-model and','line_number':2575,'multiline':False]['text':' it should not fallthrough.','line_number':2576,'multiline':False]['text':' related: #1543, #1643, #1989','line_number':2577,'multiline':False]['text':' ignore v-model handlers when they fail to fallthrough','line_number':2589,'multiline':False]['text':' remove `on`, lowercase first letter to reflect event casing','line_number':2591,'multiline':False]['text':' accurately','line_number':2592,'multiline':False]['text':' inherit directives','line_number':2617,'multiline':False]['text':' clone before mutating since the root may be a hoisted vnode','line_number':2623,'multiline':False]['text':' inherit transition data','line_number':2627,'multiline':False]['text':'*
   * dev only
   * In dev mode, template root level comments are rendered, which turns the
   * template into a fragment root, but we need to locate the single element
   * root for attrs and scope id processing.
   ','line_number':2644,'multiline':True]['text':' ignore user comment','line_number':2677,'multiline':False]['text':' has more than 1 non-comment child, return now','line_number':2680,'multiline':False]['text':' ShapeFlags.COMPONENT ','line_number':2713,'multiline':True]['text':' ShapeFlags.ELEMENT ','line_number':2713,'multiline':True]['text':' potential v-if branch switch','line_number':2714,'multiline':False]['text':' Parent component's render function was hot-updated. Since this may have','line_number':2721,'multiline':False]['text':' caused the child component's slots content to have changed, we need to','line_number':2722,'multiline':False]['text':' force the child to update as well.','line_number':2723,'multiline':False]['text':' force child update for runtime directive or transition on component vnode.','line_number':2727,'multiline':False]['text':' PatchFlags.DYNAMIC_SLOTS ','line_number':2732,'multiline':True]['text':' slot content that references values that might have changed,','line_number':2733,'multiline':False]['text':' e.g. in a v-for','line_number':2734,'multiline':False]['text':' PatchFlags.FULL_PROPS ','line_number':2737,'multiline':True]['text':' presence of this flag indicates props are always non-null','line_number':2741,'multiline':False]['text':' PatchFlags.PROPS ','line_number':2744,'multiline':True]['text':' this path is only taken by manually written render functions','line_number':2756,'multiline':False]['text':' so presence of any children leads to a forced update','line_number':2757,'multiline':False]['text':' HostNode','line_number':2790,'multiline':False]['text':' Suspense exposes a component-like API, and is treated like a component','line_number':2799,'multiline':False]['text':' in the compiler, but internally it's a special built-in type that hooks','line_number':2800,'multiline':False]['text':' directly into the renderer.','line_number':2801,'multiline':False]['text':' In order to make Suspense tree-shakable, we need to avoid importing it','line_number':2804,'multiline':False]['text':' directly in the renderer. The renderer checks for the __isSuspense flag','line_number':2805,'multiline':False]['text':' on a vnode's type and calls the `process` method, passing in renderer','line_number':2806,'multiline':False]['text':' internals.','line_number':2807,'multiline':False]['text':' platform-specific impl passed from renderer','line_number':2810,'multiline':False]['text':' Force-casted public typing for h and TSX props inference','line_number':2823,'multiline':False]['text':' start mounting the content subtree in an off-dom container','line_number':2836,'multiline':False]['text':' now check if we have encountered any async deps','line_number':2838,'multiline':False]['text':' has async','line_number':2840,'multiline':False]['text':' invoke @fallback event','line_number':2841,'multiline':False]['text':' mount the fallback tree','line_number':2844,'multiline':False]['text':' fallback tree will not have suspense context','line_number':2845,'multiline':False]['text':' Suspense has no async deps. Just resolve.','line_number':2850,'multiline':False]['text':' same root type but content may have changed.','line_number':2864,'multiline':False]['text':' fallback tree will not have suspense context','line_number':2870,'multiline':False]['text':' toggled before pending tree is resolved','line_number':2876,'multiline':False]['text':' if toggled before hydration is finished, the current DOM tree is','line_number':2879,'multiline':False]['text':' no longer valid. set it as the active branch so it will be unmounted','line_number':2880,'multiline':False]['text':' when resolved','line_number':2881,'multiline':False]['text':' increment pending ID. this is used to invalidate async callbacks','line_number':2888,'multiline':False]['text':' reset suspense state','line_number':2889,'multiline':False]['text':' discard effects from pending branch','line_number':2891,'multiline':False]['text':' discard previous container','line_number':2893,'multiline':False]['text':' already in fallback state','line_number':2896,'multiline':False]['text':' fallback tree will not have suspense context','line_number':2902,'multiline':False]['text':' toggled "back" to current active branch','line_number':2908,'multiline':False]['text':' force resolve','line_number':2910,'multiline':False]['text':' switched to a 3rd branch','line_number':2914,'multiline':False]['text':' root did not change, just normal patch','line_number':2924,'multiline':False]['text':' root node toggled','line_number':2929,'multiline':False]['text':' invoke @pending event','line_number':2930,'multiline':False]['text':' mount pending branch in off-dom container','line_number':2932,'multiline':False]['text':' incoming branch has no async deps, resolve now.','line_number':2937,'multiline':False]['text':' istanbul ignore if ','line_number':2958,'multiline':True]['text':' @ts-ignore `console.info` cannot be null error','line_number':2961,'multiline':False]['text':' MoveType.ENTER ','line_number':3006,'multiline':True]['text':' this is initial anchor on mount','line_number':3010,'multiline':False]['text':' unmount current active tree','line_number':3012,'multiline':False]['text':' if the fallback tree was mounted, it may have been moved','line_number':3014,'multiline':False]['text':' as part of a parent suspense. get the latest anchor for insertion','line_number':3015,'multiline':False]['text':' move content from off-dom container to actual container','line_number':3020,'multiline':False]['text':' MoveType.ENTER ','line_number':3021,'multiline':True]['text':' flush buffered effects','line_number':3027,'multiline':False]['text':' check if there is a pending parent suspense','line_number':3028,'multiline':False]['text':' found a pending parent suspense, merge buffered post jobs','line_number':3033,'multiline':False]['text':' into that parent','line_number':3034,'multiline':False]['text':' no pending parent suspense, flush all jobs','line_number':3041,'multiline':False]['text':' invoke @resolve event','line_number':3046,'multiline':False]['text':' invoke @fallback event','line_number':3054,'multiline':False]['text':' mount the fallback tree','line_number':3061,'multiline':False]['text':' fallback tree will not have suspense context','line_number':3062,'multiline':False]['text':' unmount current active branch','line_number':3071,'multiline':False]['text':' no suspense so unmount hooks fire now','line_number':3072,'multiline':False]['text':' shouldRemove','line_number':3073,'multiline':False]['text':' ErrorCodes.SETUP_FUNCTION ','line_number':3095,'multiline':True]['text':' retry when the setup() promise resolves.','line_number':3098,'multiline':False]['text':' component may have been unmounted before resolve.','line_number':3099,'multiline':False]['text':' retry from this component','line_number':3105,'multiline':False]['text':' vnode may have been replaced if an update happened before the','line_number':3113,'multiline':False]['text':' async dep is resolved.','line_number':3114,'multiline':False]['text':' component may have been moved before resolve.','line_number':3119,'multiline':False]['text':' if this is not a hydration, instance.subTree will be the comment','line_number':3120,'multiline':False]['text':' placeholder.','line_number':3121,'multiline':False]['text':' anchor will not be used if this is hydration, so only need to','line_number':3123,'multiline':False]['text':' consider the comment placeholder case.','line_number':3124,'multiline':False]['text':' only decrease deps count if suspense is not already resolved','line_number':3133,'multiline':False]['text':' eslint-disable no-restricted-globals ','line_number':3152,'multiline':True]['text':' hydrating ','line_number':3153,'multiline':True]['text':' there are two possible scenarios for server-rendered suspense:','line_number':3154,'multiline':False]['text':' - success: ssr content should be fully resolved','line_number':3155,'multiline':False]['text':' - failure: ssr content should be the fallback branch.','line_number':3156,'multiline':False]['text':' however, on the client we don't really know if it has failed or not','line_number':3157,'multiline':False]['text':' attempt to hydrate the DOM assuming it has succeeded, but we still','line_number':3158,'multiline':False]['text':' need to construct a suspense boundary first','line_number':3159,'multiline':False]['text':' eslint-enable no-restricted-globals ','line_number':3165,'multiline':True]['text':' ShapeFlags.SLOTS_CHILDREN ','line_number':3169,'multiline':True]['text':' disableTracking: false','line_number':3180,'multiline':False]['text':' allow block tracking for compiled slots','line_number':3181,'multiline':False]['text':' (see ./componentRenderContext.ts)','line_number':3182,'multiline':False]['text':' in case suspense is the root node of a component,','line_number':3223,'multiline':False]['text':' recursively update the HOC el','line_number':3224,'multiline':False]['text':' by default an instance inherits its parent's provides object','line_number':3239,'multiline':False]['text':' but when it needs to provide values of its own, it creates its','line_number':3240,'multiline':False]['text':' own provides object using parent provides object as prototype.','line_number':3241,'multiline':False]['text':' this way in `inject` we can simply look up injections from direct','line_number':3242,'multiline':False]['text':' parent and let the prototype chain do the work.','line_number':3243,'multiline':False]['text':' TS doesn't allow symbol as index type','line_number':3248,'multiline':False]['text':' fallback to `currentRenderingInstance` so that this can be called in','line_number':3253,'multiline':False]['text':' a functional component','line_number':3254,'multiline':False]['text':' #2400','line_number':3257,'multiline':False]['text':' to support `app.use` plugins,','line_number':3258,'multiline':False]['text':' fallback to appContext's `provides` if the instance is at root','line_number':3259,'multiline':False]['text':' TS doesn't allow symbol as index type','line_number':3264,'multiline':False]['text':' Simple effect.','line_number':3281,'multiline':False]['text':' initial value for watchers to trigger on undefined initial values','line_number':3291,'multiline':False]['text':' implementation','line_number':3293,'multiline':False]['text':' const instance = currentInstance','line_number':3318,'multiline':False]['text':' ErrorCodes.WATCH_GETTER ','line_number':3341,'multiline':True]['text':' getter with cb','line_number':3350,'multiline':False]['text':' ErrorCodes.WATCH_GETTER ','line_number':3351,'multiline':True]['text':' no cb -> simple effect','line_number':3354,'multiline':False]['text':' ErrorCodes.WATCH_CALLBACK ','line_number':3362,'multiline':True]['text':' ErrorCodes.WATCH_CLEANUP ','line_number':3377,'multiline':True]['text':' watch(source, cb)','line_number':3388,'multiline':False]['text':' cleanup before running cb again','line_number':3396,'multiline':False]['text':' ErrorCodes.WATCH_CALLBACK ','line_number':3400,'multiline':True]['text':' pass undefined as the old value when it's changed for the first time','line_number':3402,'multiline':False]['text':' watchEffect','line_number':3414,'multiline':False]['text':' important: mark the job as a watcher callback so that scheduler knows','line_number':3418,'multiline':False]['text':' it is allowed to self-trigger (#1727)','line_number':3419,'multiline':False]['text':' the scheduler function gets called directly','line_number':3423,'multiline':False]['text':' default: 'pre'','line_number':3429,'multiline':False]['text':' initial run','line_number':3440,'multiline':False]['text':' this.$watch','line_number':3463,'multiline':False]['text':' ReactiveFlags.SKIP ','line_number':3501,'multiline':True]['text':' enter','line_number':3552,'multiline':False]['text':' leave','line_number':3557,'multiline':False]['text':' appear','line_number':3562,'multiline':False]['text':' locate first non-comment child','line_number':3580,'multiline':False]['text':' warn more than one non-comment child','line_number':3584,'multiline':False]['text':' there's no need to track reactivity for these props so use the raw','line_number':3594,'multiline':False]['text':' props for a bit better perf','line_number':3595,'multiline':False]['text':' check mode','line_number':3598,'multiline':False]['text':' in the case of <transition><keep-alive/></transition>, we need to','line_number':3608,'multiline':False]['text':' compare the type of the kept-alive children.','line_number':3609,'multiline':False]['text':' handle mode','line_number':3630,'multiline':False]['text':' update old tree's hooks in case of dynamic transition','line_number':3635,'multiline':False]['text':' switching between different views','line_number':3637,'multiline':False]['text':' return placeholder node and queue update when leave finishes','line_number':3640,'multiline':False]['text':' #6835','line_number':3643,'multiline':False]['text':' it also needs to be updated when active is undefined','line_number':3644,'multiline':False]['text':' early removal callback','line_number':3655,'multiline':False]['text':' export the public type for h/tsx inference','line_number':3669,'multiline':False]['text':' also to avoid inline import() in generated d.ts files','line_number':3670,'multiline':False]['text':' The transition hooks are attached to the vnode as vnode.transition','line_number':3681,'multiline':False]['text':' and will be called at appropriate timing in the renderer.','line_number':3682,'multiline':False]['text':' ErrorCodes.TRANSITION_HOOK ','line_number':3689,'multiline':True]['text':' for same element (v-show)','line_number':3715,'multiline':False]['text':' cancelled ','line_number':3717,'multiline':True]['text':' for toggled element with same key (v-if)','line_number':3719,'multiline':False]['text':' force early removal (not cancelled)','line_number':3724,'multiline':False]['text':' cancelled ','line_number':3769,'multiline':True]['text':' the placeholder really only handles one special case: KeepAlive','line_number':3806,'multiline':False]['text':' in the case of a KeepAlive in a leave phase we need to return a KeepAlive','line_number':3807,'multiline':False]['text':' placeholder with empty content to avoid the KeepAlive instance from being','line_number':3808,'multiline':False]['text':' unmounted.','line_number':3809,'multiline':False]['text':' ShapeFlags.COMPONENT ','line_number':3825,'multiline':True]['text':' ShapeFlags.SUSPENSE ','line_number':3828,'multiline':True]['text':' #5360 inherit parent key in case of <template v-for>','line_number':3841,'multiline':False]['text':' handle fragment children case, e.g. v-for','line_number':3845,'multiline':False]['text':' PatchFlags.KEYED_FRAGMENT ','line_number':3847,'multiline':True]['text':' comment placeholders should be skipped, e.g. v-if','line_number':3851,'multiline':False]['text':' #1126 if a transition children list contains multiple sub fragments, these','line_number':3856,'multiline':False]['text':' fragments will be merged into a flat children array. Since each v-for','line_number':3857,'multiline':False]['text':' fragment may contain different static bindings inside, we need to de-op','line_number':3858,'multiline':False]['text':' these children to force full diffs to ensure correct behavior.','line_number':3859,'multiline':False]['text':' PatchFlags.BAIL ','line_number':3862,'multiline':True]['text':' implementation, close to no-op','line_number':3868,'multiline':False]['text':' undefined = never times out','line_number':3878,'multiline':False]['text':' interop module default','line_number':3914,'multiline':False]['text':' already resolved','line_number':3934,'multiline':False]['text':' ErrorCodes.ASYNC_COMPONENT_LOADER ','line_number':3940,'multiline':True]['text':' do not throw in dev if user provided error component ','line_number':3940,'multiline':True]['text':' suspense-controlled or SSR.','line_number':3942,'multiline':False]['text':' parent is keep-alive, force update so the loaded component's','line_number':3979,'multiline':False]['text':' name is taken into account','line_number':3980,'multiline':False]['text':' ensure inner component inherits the async wrapper's ref owner','line_number':4007,'multiline':False]['text':' pass the custom element callback on to the inner comp','line_number':4009,'multiline':False]['text':' and remove it from the async wrapper','line_number':4010,'multiline':False]['text':' Marker for special handling inside the renderer. We are not using a ===','line_number':4019,'multiline':False]['text':' check directly on KeepAlive in the renderer, because importing it directly','line_number':4020,'multiline':False]['text':' would prevent it from being tree-shaken.','line_number':4021,'multiline':False]['text':' KeepAlive communicates with the instantiated renderer via the','line_number':4030,'multiline':False]['text':' ctx where the renderer passes in its internals,','line_number':4031,'multiline':False]['text':' and the KeepAlive instance exposes activate/deactivate implementations.','line_number':4032,'multiline':False]['text':' The whole point of this is to avoid importing KeepAlive directly in the','line_number':4033,'multiline':False]['text':' renderer to facilitate tree-shaking.','line_number':4034,'multiline':False]['text':' MoveType.ENTER ','line_number':4047,'multiline':True]['text':' in case props have changed','line_number':4048,'multiline':False]['text':' Update components tree','line_number':4061,'multiline':False]['text':' MoveType.LEAVE ','line_number':4067,'multiline':True]['text':' Update components tree','line_number':4079,'multiline':False]['text':' reset the shapeFlag so it can be properly unmounted','line_number':4084,'multiline':False]['text':' current active instance should no longer be kept-alive.','line_number':4102,'multiline':False]['text':' we can't unmount it now but it might be later, so reset its flag now.','line_number':4103,'multiline':False]['text':' prune cache on include/exclude prop change','line_number':4109,'multiline':False]['text':' prune post-render after `current` has been updated','line_number':4114,'multiline':False]['text':' cache sub tree after render','line_number':4116,'multiline':False]['text':' fix #1621, the pendingCacheKey could be 0','line_number':4119,'multiline':False]['text':' current instance will be unmounted as part of keep-alive's unmount','line_number':4131,'multiline':False]['text':' but invoke its deactivated hook here','line_number':4133,'multiline':False]['text':' ShapeFlags.STATEFUL_COMPONENT ','line_number':4156,'multiline':True]['text':' ShapeFlags.SUSPENSE ','line_number':4157,'multiline':True]['text':' for async components, name check should be based in its loaded','line_number':4163,'multiline':False]['text':' inner component if available','line_number':4164,'multiline':False]['text':' clone vnode if it's reused because we are going to mutate it','line_number':4176,'multiline':False]['text':' ShapeFlags.SUSPENSE ','line_number':4179,'multiline':True]['text':' #1513 it's possible for the returned vnode to be cloned due to attr','line_number':4183,'multiline':False]['text':' fallthrough or scopeId, so the vnode here may not be the final vnode','line_number':4184,'multiline':False]['text':' that is mounted. Instead of caching it directly, we store the pending','line_number':4185,'multiline':False]['text':' key and cache `instance.subTree` (the normalized vnode) in','line_number':4186,'multiline':False]['text':' beforeMount/beforeUpdate hooks.','line_number':4187,'multiline':False]['text':' copy over mounted state','line_number':4190,'multiline':False]['text':' recursively update transition hooks on subTree','line_number':4194,'multiline':False]['text':' avoid vnode being mounted as fresh','line_number':4197,'multiline':False]['text':' ShapeFlags.COMPONENT_KEPT_ALIVE ','line_number':4198,'multiline':True]['text':' make this key the freshest','line_number':4199,'multiline':False]['text':' prune oldest entry','line_number':4205,'multiline':False]['text':' avoid vnode being unmounted','line_number':4210,'multiline':False]['text':' ShapeFlags.COMPONENT_SHOULD_KEEP_ALIVE ','line_number':4211,'multiline':True]['text':' export the public type for h/tsx inference','line_number':4217,'multiline':False]['text':' also to avoid inline import() in generated d.ts files','line_number':4218,'multiline':False]['text':' istanbul ignore next ','line_number':4230,'multiline':True]['text':' LifecycleHooks.ACTIVATED ','line_number':4234,'multiline':True]['text':' LifecycleHooks.DEACTIVATED ','line_number':4237,'multiline':True]['text':' cache the deactivate branch check wrapper for injected hooks so the same','line_number':4240,'multiline':False]['text':' hook can be properly deduped by the scheduler. "__wdc" stands for "with','line_number':4241,'multiline':False]['text':' deactivation check".','line_number':4242,'multiline':False]['text':' only fire the hook if the target instance is NOT in a deactivated branch.','line_number':4245,'multiline':False]['text':' In addition to registering it on the target instance, we walk up the parent','line_number':4256,'multiline':False]['text':' chain and register it on all ancestor instances that are keep-alive roots.','line_number':4257,'multiline':False]['text':' This avoids the need to walk the entire component tree when invoking these','line_number':4258,'multiline':False]['text':' hooks, and more importantly, avoids the need to track child components in','line_number':4259,'multiline':False]['text':' arrays.','line_number':4260,'multiline':False]['text':' injectHook wraps the original for error handling, so make sure to remove','line_number':4272,'multiline':False]['text':' the wrapped version.','line_number':4273,'multiline':False]['text':' prepend ','line_number':4274,'multiline':True]['text':' bitwise operations to remove keep alive flags','line_number':4280,'multiline':False]['text':' ShapeFlags.COMPONENT_SHOULD_KEEP_ALIVE ','line_number':4281,'multiline':True]['text':' ShapeFlags.COMPONENT_KEPT_ALIVE ','line_number':4282,'multiline':True]['text':' ShapeFlags.SUSPENSE ','line_number':4285,'multiline':True]['text':' cache the error handling wrapper for injected hooks so the same hook','line_number':4291,'multiline':False]['text':' can be properly deduped by the scheduler. "__weh" stands for "with error','line_number':4292,'multiline':False]['text':' handling".','line_number':4293,'multiline':False]['text':' disable tracking inside all lifecycle hooks','line_number':4299,'multiline':False]['text':' since they can potentially be called inside effects.','line_number':4300,'multiline':False]['text':' Set currentInstance during hook invocation.','line_number':4302,'multiline':False]['text':' This assumes the hook does not synchronously trigger other hooks, which','line_number':4303,'multiline':False]['text':' can only be false when the user does something really funky.','line_number':4304,'multiline':False]['text':' post-create lifecycle registrations are noops during SSR (except for serverPrefetch)','line_number':4330,'multiline':False]['text':' LifecycleHooks.SERVER_PREFETCH ','line_number':4331,'multiline':True]['text':' LifecycleHooks.BEFORE_MOUNT ','line_number':4333,'multiline':True]['text':' LifecycleHooks.MOUNTED ','line_number':4334,'multiline':True]['text':' LifecycleHooks.BEFORE_UPDATE ','line_number':4335,'multiline':True]['text':' LifecycleHooks.UPDATED ','line_number':4336,'multiline':True]['text':' LifecycleHooks.BEFORE_UNMOUNT ','line_number':4337,'multiline':True]['text':' LifecycleHooks.UNMOUNTED ','line_number':4338,'multiline':True]['text':' LifecycleHooks.SERVER_PREFETCH ','line_number':4339,'multiline':True]['text':' LifecycleHooks.RENDER_TRIGGERED ','line_number':4340,'multiline':True]['text':' LifecycleHooks.RENDER_TRACKED ','line_number':4341,'multiline':True]['text':' LifecycleHooks.ERROR_CAPTURED ','line_number':4343,'multiline':True]['text':'*
  Runtime helper for applying directives to a vnode. Example usage:

  const comp = resolveComponent('comp')
  const foo = resolveDirective('foo')
  const bar = resolveDirective('bar')

  return withDirectives(h(comp), [
    [foo, this.x],
    [bar, this.y]
  ])
  ','line_number':4346,'multiline':True]['text':'*
   * Adds directives to a VNode.
   ','line_number':4363,'multiline':True]['text':' disable tracking inside all lifecycle hooks','line_number':4409,'multiline':False]['text':' since they can potentially be called inside effects.','line_number':4410,'multiline':False]['text':' ErrorCodes.DIRECTIVE_HOOK ','line_number':4412,'multiline':True]['text':'*
   * @private
   ','line_number':4425,'multiline':True]['text':'*
   * @private
   ','line_number':4432,'multiline':True]['text':' invalid types will fallthrough to createVNode and raise warning','line_number':4440,'multiline':False]['text':'*
   * @private
   ','line_number':4444,'multiline':True]['text':' implementation','line_number':4450,'multiline':False]['text':' explicit self name has highest priority','line_number':4455,'multiline':False]['text':' do not include inferred name to avoid breaking existing code ','line_number':4457,'multiline':True]['text':' local registration','line_number':4466,'multiline':False]['text':' check instance[type] first which is resolved for options API','line_number':4467,'multiline':False]['text':' global registration','line_number':4469,'multiline':False]['text':' fallback to implicit self-reference','line_number':4472,'multiline':False]['text':'*
   * Actual implementation
   ','line_number':4496,'multiline':True]['text':'*
   * Compiler runtime helper for creating dynamic slots object
   * @private
   ','line_number':4539,'multiline':True]['text':' array of dynamic slot generated by <template v-for="..." #[...]>','line_number':4546,'multiline':False]['text':' conditional single slot generated by <template v-if="..." #foo>','line_number':4553,'multiline':False]['text':' attach branch key so each conditional branch is considered a','line_number':4557,'multiline':False]['text':' different fragment','line_number':4558,'multiline':False]['text':'*
   * Compiler runtime helper for rendering `<slot/>`
   * @private
   ','line_number':4569,'multiline':True]['text':' this is not a user-facing function, so the fallback is always generated by','line_number':4574,'multiline':False]['text':' the compiler and guaranteed to be a function returning an array','line_number':4575,'multiline':False]['text':' a compiled slot disables block tracking by default to avoid manual','line_number':4592,'multiline':False]['text':' invocation interfering with template-based block tracking, but in','line_number':4593,'multiline':False]['text':' `renderSlot` we can be sure that it's template-based so we can force','line_number':4594,'multiline':False]['text':' enable it.','line_number':4595,'multiline':False]['text':' slot content array of a dynamic conditional slot may have a branch','line_number':4603,'multiline':False]['text':' key attached in the `createSlots` helper, respect that','line_number':4604,'multiline':False]['text':' SlotFlags.STABLE ','line_number':4607,'multiline':True]['text':' PatchFlags.STABLE_FRAGMENT ','line_number':4608,'multiline':True]['text':' PatchFlags.BAIL ','line_number':4609,'multiline':True]['text':'*
   * For prefixing keys in v-on="obj" with "on"
   * @private
   ','line_number':4633,'multiline':True]['text':'*
   * #2437 In Vue 3, functional components do not have a public instance proxy but
   * they exist in the internal parent chain. For code that relies on traversing
   * public $parent chains, skip functional ones and go to the parent instead.
   ','line_number':4651,'multiline':True]['text':' Move PURE marker to new line to workaround compiler discarding it','line_number':4664,'multiline':False]['text':' due to type annotation','line_number':4665,'multiline':False]['text':'#__PURE__','line_number':4666,'multiline':True]['text':' for internal formatters to know that this is a Vue instance','line_number':4687,'multiline':False]['text':' data / props / ctx','line_number':4691,'multiline':False]['text':' This getter gets called for every property access on the render context','line_number':4692,'multiline':False]['text':' during render and is a major hotspot. The most expensive part of this','line_number':4693,'multiline':False]['text':' is the multiple hasOwn() calls. It's much faster to do a simple property','line_number':4694,'multiline':False]['text':' access on a plain object, so we use an accessCache object (with null','line_number':4695,'multiline':False]['text':' prototype) to memoize what access type a key corresponds to.','line_number':4696,'multiline':False]['text':' AccessTypes.SETUP ','line_number':4702,'multiline':True]['text':' AccessTypes.DATA ','line_number':4704,'multiline':True]['text':' AccessTypes.CONTEXT ','line_number':4706,'multiline':True]['text':' AccessTypes.PROPS ','line_number':4708,'multiline':True]['text':' default: just fallthrough','line_number':4710,'multiline':False]['text':' AccessTypes.SETUP ','line_number':4714,'multiline':True]['text':' AccessTypes.DATA ','line_number':4718,'multiline':True]['text':' only cache other properties when instance has declared (thus stable)','line_number':4722,'multiline':False]['text':' props','line_number':4723,'multiline':False]['text':' AccessTypes.PROPS ','line_number':4726,'multiline':True]['text':' AccessTypes.CONTEXT ','line_number':4730,'multiline':True]['text':' AccessTypes.OTHER ','line_number':4734,'multiline':True]['text':' public $xxx properties','line_number':4739,'multiline':False]['text':' TrackOpTypes.GET ','line_number':4742,'multiline':True]['text':' css module (injected by vue-loader)','line_number':4748,'multiline':False]['text':' user may set custom properties to `this` that start with `$`','line_number':4754,'multiline':False]['text':' AccessTypes.CONTEXT ','line_number':4755,'multiline':True]['text':' global properties','line_number':4759,'multiline':False]['text':' #1091 avoid internal isRef/isVNode checks on component instance leading','line_number':4768,'multiline':False]['text':' to infinite warning loop','line_number':4769,'multiline':False]['text':' invalidate key cache of a getter based property #5417','line_number':4831,'multiline':False]['text':'#__PURE__','line_number':4847,'multiline':True]['text':' fast path for unscopables when using `with` block','line_number':4849,'multiline':False]['text':' dev only','line_number':4863,'multiline':False]['text':' In dev mode, the proxy target exposes the same properties as seen on `this`','line_number':4864,'multiline':False]['text':' for easier console inspection. In prod mode it will be an empty object so','line_number':4865,'multiline':False]['text':' these properties definitions can be skipped.','line_number':4866,'multiline':False]['text':' expose internal instance for proxy handlers','line_number':4869,'multiline':False]['text':' expose public properties','line_number':4875,'multiline':False]['text':' intercepted by the proxy so no need for implementation,','line_number':4881,'multiline':False]['text':' but needed to prevent set errors','line_number':4882,'multiline':False]['text':' dev only','line_number':4888,'multiline':False]['text':' dev only','line_number':4902,'multiline':False]['text':' do not cache property access on public proxy during state initialization','line_number':4938,'multiline':False]['text':' call beforeCreate first before accessing other options since','line_number':4940,'multiline':False]['text':' the hook may mutate resolved options (#2791)','line_number':4941,'multiline':False]['text':' LifecycleHooks.BEFORE_CREATE ','line_number':4943,'multiline':True]['text':' state','line_number':4946,'multiline':False]['text':' lifecycle','line_number':4948,'multiline':False]['text':' public API','line_number':4950,'multiline':False]['text':' assets','line_number':4952,'multiline':False]['text':' OptionTypes.PROPS ','line_number':4959,'multiline':True]['text':' options initialization order (to be consistent with Vue 2):','line_number':4963,'multiline':False]['text':' - props (already done outside of this function)','line_number':4964,'multiline':False]['text':' - inject','line_number':4965,'multiline':False]['text':' - methods','line_number':4966,'multiline':False]['text':' - data (deferred since it relies on `this` access)','line_number':4967,'multiline':False]['text':' - computed','line_number':4968,'multiline':False]['text':' - watch (deferred since it relies on `this` access)','line_number':4969,'multiline':False]['text':' In dev mode, we use the `createRenderContext` function to define','line_number':4977,'multiline':False]['text':' methods to the proxy target, and those are read-only but','line_number':4978,'multiline':False]['text':' reconfigurable, so it needs to be redefined here','line_number':4979,'multiline':False]['text':' OptionTypes.METHODS ','line_number':4989,'multiline':True]['text':' OptionTypes.DATA ','line_number':5016,'multiline':True]['text':' expose data on ctx during dev','line_number':5017,'multiline':False]['text':' state initialization complete at this point - start caching access','line_number':5030,'multiline':False]['text':' OptionTypes.COMPUTED ','line_number':5060,'multiline':True]['text':' LifecycleHooks.CREATED ','line_number':5078,'multiline':True]['text':' options that are handled when creating the instance but also need to be','line_number':5114,'multiline':False]['text':' applied from mixins','line_number':5115,'multiline':False]['text':' asset options.','line_number':5122,'multiline':False]['text':' treat default function as factory ','line_number':5137,'multiline':True]['text':' TODO remove the check in 3.3','line_number':5147,'multiline':False]['text':' OptionTypes.INJECT ','line_number':5171,'multiline':True]['text':'*
   * Resolve merged options and cache it on the component.
   * This is done only once per-component since the merging does not involve
   * instances.
   ','line_number':5216,'multiline':True]['text':' objects','line_number':5271,'multiline':False]['text':' lifecycle','line_number':5274,'multiline':False]['text':' assets','line_number':5289,'multiline':False]['text':' watch','line_number':5292,'multiline':False]['text':' provide / inject','line_number':5294,'multiline':False]['text':' result of bitwise flag comparison','line_number':5340,'multiline':False]['text':' ensure all declared prop keys are present','line_number':5347,'multiline':False]['text':' validation','line_number':5353,'multiline':False]['text':' stateful','line_number':5358,'multiline':False]['text':' functional w/ optional props, props === attrs','line_number':5363,'multiline':False]['text':' functional w/ declared props','line_number':5367,'multiline':False]['text':' always force full diff in dev','line_number':5386,'multiline':False]['text':' - #1942 if hmr is enabled with sfc component','line_number':5387,'multiline':False]['text':' - vite#872 non-sfc component used by sfc component','line_number':5388,'multiline':False]['text':' PatchFlags.FULL_PROPS ','line_number':5391,'multiline':True]['text':' PatchFlags.PROPS ','line_number':5392,'multiline':True]['text':' Compiler-generated props & no keys change, just set the updated','line_number':5393,'multiline':False]['text':' the props.','line_number':5394,'multiline':False]['text':' skip if the prop key is a declared emit event listener','line_number':5398,'multiline':False]['text':' PROPS flag guarantees rawProps to be non-null','line_number':5402,'multiline':False]['text':' attr / props separation was done on init and will be consistent','line_number':5405,'multiline':False]['text':' in this code path, so just check if attrs have it.','line_number':5406,'multiline':False]['text':' isAbsent ','line_number':5415,'multiline':True]['text':' full props update.','line_number':5428,'multiline':False]['text':' in case of dynamic props, check if we need to delete keys from','line_number':5432,'multiline':False]['text':' the props object','line_number':5433,'multiline':False]['text':' for camelCase','line_number':5437,'multiline':False]['text':' it's possible the original props was passed in as kebab-case','line_number':5439,'multiline':False]['text':' and converted to camelCase (#955)','line_number':5440,'multiline':False]['text':' for camelCase','line_number':5444,'multiline':False]['text':' for kebab-case','line_number':5446,'multiline':False]['text':' isAbsent ','line_number':5448,'multiline':True]['text':' in the case of functional component w/o props declaration, props and','line_number':5456,'multiline':False]['text':' attrs point to the same object so it should already have been updated.','line_number':5457,'multiline':False]['text':' trigger updates for $attrs in case it's used in component slots','line_number':5469,'multiline':False]['text':' TriggerOpTypes.SET ','line_number':5471,'multiline':True]['text':' key, ref are reserved and never passed down','line_number':5483,'multiline':False]['text':' prop option names are camelized during normalization, so to support','line_number':5488,'multiline':False]['text':' kebab -> camel conversion here we need to camelize the key.','line_number':5489,'multiline':False]['text':' default values','line_number':5521,'multiline':False]['text':' boolean casting','line_number':5539,'multiline':False]['text':' BooleanFlags.shouldCast ','line_number':5540,'multiline':True]['text':' BooleanFlags.shouldCastTrue ','line_number':5544,'multiline':True]['text':' apply mixin/extends props','line_number':5561,'multiline':False]['text':' BooleanFlags.shouldCast ','line_number':5611,'multiline':True]['text':' BooleanFlags.shouldCastTrue ','line_number':5612,'multiline':True]['text':' if the prop needs boolean casting or default value','line_number':5614,'multiline':False]['text':' use function string name to check type constructors','line_number':5637,'multiline':False]['text':' so that it works across vms / iframes.','line_number':5638,'multiline':False]['text':'*
   * dev only
   ','line_number':5655,'multiline':True]['text':'*
   * dev only
   ','line_number':5668,'multiline':True]['text':' required!','line_number':5673,'multiline':False]['text':' missing but optional','line_number':5678,'multiline':False]['text':' type check','line_number':5682,'multiline':False]['text':' value is valid as long as one of the specified types match','line_number':5687,'multiline':False]['text':' custom validator','line_number':5698,'multiline':False]['text':'#__PURE__','line_number':5703,'multiline':True]['text':'*
   * dev only
   ','line_number':5704,'multiline':True]['text':' for primitive wrapper objects','line_number':5713,'multiline':False]['text':'*
   * dev only
   ','line_number':5735,'multiline':True]['text':' check if we need to specify expected value','line_number':5745,'multiline':False]['text':' check if we need to specify received value','line_number':5752,'multiline':False]['text':'*
   * dev only
   ','line_number':5758,'multiline':True]['text':'*
   * dev only
   ','line_number':5772,'multiline':True]['text':'*
   * dev only
   ','line_number':5779,'multiline':True]['text':' already normalized - #5353','line_number':5792,'multiline':False]['text':' ShapeFlags.SLOTS_CHILDREN ','line_number':5835,'multiline':True]['text':' users can get the shallow readonly version of the slots object through `this.$slots`,','line_number':5838,'multiline':False]['text':' we should avoid the proxy object polluting the slots of the internal instance','line_number':5839,'multiline':False]['text':' make compiler marker non-enumerable','line_number':5841,'multiline':False]['text':' ShapeFlags.SLOTS_CHILDREN ','line_number':5860,'multiline':True]['text':' compiled slots.','line_number':5863,'multiline':False]['text':' Parent was HMR updated so slot content may have changed.','line_number':5865,'multiline':False]['text':' force update slots and mark instance for hmr as well','line_number':5866,'multiline':False]['text':' SlotFlags.STABLE ','line_number':5869,'multiline':True]['text':' compiled AND stable.','line_number':5870,'multiline':False]['text':' no need to update, and skip stale slots removal.','line_number':5871,'multiline':False]['text':' compiled but dynamic (v-if/v-for on slots) - update slots, but skip','line_number':5875,'multiline':False]['text':' normalization.','line_number':5876,'multiline':False]['text':' #2893','line_number':5878,'multiline':False]['text':' when rendering the optimized slots by manually written render function,','line_number':5879,'multiline':False]['text':' we need to delete the `slots._` flag if necessary to make subsequent updates reliable,','line_number':5880,'multiline':False]['text':' i.e. let the `renderSlot` create the bailed Fragment','line_number':5881,'multiline':False]['text':' SlotFlags.STABLE ','line_number':5882,'multiline':True]['text':' non slot object children (direct value) passed to a component','line_number':5894,'multiline':False]['text':' delete stale slots','line_number':5898,'multiline':False]['text':' #5571','line_number':6016,'multiline':False]['text':' store app context on the root VNode.','line_number':6023,'multiline':False]['text':' this will be set on the root instance on initial mount.','line_number':6024,'multiline':False]['text':' HMR root reload','line_number':6026,'multiline':False]['text':'*
   * Function for handling a template ref
   ','line_number':6080,'multiline':True]['text':' when mounting async components, nothing needs to be done,','line_number':6089,'multiline':False]['text':' because the template ref is forwarded to inner component','line_number':6090,'multiline':False]['text':' ShapeFlags.STATEFUL_COMPONENT ','line_number':6093,'multiline':True]['text':' dynamic ref changed. unset old ref','line_number':6106,'multiline':False]['text':' ErrorCodes.FUNCTION_REF ','line_number':6119,'multiline':True]['text':' DOMNodeTypes.COMMENT ','line_number':6185,'multiline':True]['text':' Note: hydration is DOM-specific','line_number':6186,'multiline':False]['text':' But we have to place it in core due to tight coupling with core - splitting','line_number':6187,'multiline':False]['text':' it out creates a ton of unnecessary complexity.','line_number':6188,'multiline':False]['text':' Hydration also depends on some renderer internal logic which needs to be','line_number':6189,'multiline':False]['text':' passed in via arguments.','line_number':6190,'multiline':False]['text':' this error should show up in production','line_number':6207,'multiline':False]['text':' PatchFlags.BAIL ','line_number':6217,'multiline':True]['text':' DOMNodeTypes.TEXT ','line_number':6224,'multiline':True]['text':' #5728 empty text node inside a slot can cause hydration failure','line_number':6225,'multiline':False]['text':' because the server rendered HTML won't contain a text node','line_number':6226,'multiline':False]['text':' DOMNodeTypes.COMMENT ','line_number':6247,'multiline':True]['text':' entire template is static but SSRed as a fragment','line_number':6256,'multiline':False]['text':' DOMNodeTypes.ELEMENT ','line_number':6260,'multiline':True]['text':' DOMNodeTypes.TEXT ','line_number':6260,'multiline':True]['text':' determine anchor, adopt content','line_number':6261,'multiline':False]['text':' if the static vnode has its content stripped during build,','line_number':6263,'multiline':False]['text':' adopt it from the server-rendered HTML.','line_number':6264,'multiline':False]['text':' DOMNodeTypes.ELEMENT ','line_number':6269,'multiline':True]['text':' ShapeFlags.ELEMENT ','line_number':6292,'multiline':True]['text':' DOMNodeTypes.ELEMENT ','line_number':6293,'multiline':True]['text':' ShapeFlags.COMPONENT ','line_number':6302,'multiline':True]['text':' when setting up the render effect, if the initial vnode already','line_number':6303,'multiline':False]['text':' has .el set, the component will perform hydration instead of mount','line_number':6304,'multiline':False]['text':' on its sub-tree.','line_number':6305,'multiline':False]['text':' component may be async, so in the case of fragments we cannot rely','line_number':6309,'multiline':False]['text':' on component's rendered output to determine the end of the fragment','line_number':6310,'multiline':False]['text':' instead, we do a lookahead to find the end anchor node.','line_number':6311,'multiline':False]['text':' #4293 teleport as component root','line_number':6315,'multiline':False]['text':' #3787','line_number':6321,'multiline':False]['text':' if component is async, it may get moved / unmounted before its','line_number':6322,'multiline':False]['text':' inner component is loaded, so we need to give it a placeholder','line_number':6323,'multiline':False]['text':' vnode that matches its adopted DOM.','line_number':6324,'multiline':False]['text':' ShapeFlags.TELEPORT ','line_number':6341,'multiline':True]['text':' DOMNodeTypes.COMMENT ','line_number':6342,'multiline':True]['text':' ShapeFlags.SUSPENSE ','line_number':6349,'multiline':True]['text':' #4006 for form elements with non-string v-model value bindings','line_number':6364,'multiline':False]['text':' e.g. <option :value="obj">, <input type="checkbox" :true-value="1">','line_number':6365,'multiline':False]['text':' skip props & children if this is hoisted static nodes','line_number':6367,'multiline':False]['text':' #5405 in dev, always hydrate children for HMR','line_number':6368,'multiline':False]['text':' props','line_number':6373,'multiline':False]['text':' PatchFlags.FULL_PROPS ','line_number':6377,'multiline':True]['text':' PatchFlags.HYDRATE_EVENTS ','line_number':6377,'multiline':True]['text':' Fast path for click listeners (which is most often) to avoid','line_number':6386,'multiline':False]['text':' iterating through props.','line_number':6387,'multiline':False]['text':' vnode / directive hooks','line_number':6391,'multiline':False]['text':' children','line_number':6405,'multiline':False]['text':' ShapeFlags.ARRAY_CHILDREN ','line_number':6406,'multiline':True]['text':' skip if element has innerHTML / textContent','line_number':6407,'multiline':False]['text':' The SSRed DOM contains more nodes than it should. Remove them.','line_number':6418,'multiline':False]['text':' ShapeFlags.TEXT_CHILDREN ','line_number':6424,'multiline':True]['text':' the SSRed DOM didn't contain enough nodes. Mount the missing ones.','line_number':6458,'multiline':False]['text':' fragment didn't hydrate successfully, since we didn't get a end anchor','line_number':6477,'multiline':False]['text':' back. This should have led to node/children mismatch warnings.','line_number':6478,'multiline':False]['text':' since the anchor is missing, we need to create one and insert it','line_number':6480,'multiline':False]['text':' DOMNodeTypes.TEXT ','line_number':6487,'multiline':True]['text':' remove excessive fragment nodes','line_number':6494,'multiline':False]['text':' eslint-disable no-restricted-globals ','line_number':6534,'multiline':True]['text':'*
   * The createRenderer function accepts two generic arguments:
   * HostNode and HostElement, corresponding to Node and Element types in the
   * host environment. For example, for runtime-dom, HostNode would be the DOM
   * `Node` interface and HostElement would be the DOM `Element` interface.
   *
   * Custom renderers can pass in the platform specific types like this:
   *
   * ``` js
   * const { render, createApp } = createRenderer<Node, Element>({
   *   patchProp,
   *   ...nodeOps
   * })
   * ```
   ','line_number':6574,'multiline':True]['text':' Separate API for creating hydration-enabled renderer.','line_number':6592,'multiline':False]['text':' Hydration logic is only used when calling this function, making it','line_number':6593,'multiline':False]['text':' tree-shakable.','line_number':6594,'multiline':False]['text':' implementation','line_number':6598,'multiline':False]['text':' Note: functions inside this closure should use `const xxx = () => {}`','line_number':6606,'multiline':False]['text':' style in order to prevent being inlined by minifiers.','line_number':6607,'multiline':False]['text':' patching & not same type, unmount old tree','line_number':6612,'multiline':False]['text':' PatchFlags.BAIL ','line_number':6618,'multiline':True]['text':' ShapeFlags.ELEMENT ','line_number':6642,'multiline':True]['text':' ShapeFlags.COMPONENT ','line_number':6645,'multiline':True]['text':' ShapeFlags.TELEPORT ','line_number':6648,'multiline':True]['text':' ShapeFlags.SUSPENSE ','line_number':6651,'multiline':True]['text':' set ref','line_number':6658,'multiline':False]['text':' there's no support for dynamic comments','line_number':6679,'multiline':False]['text':'*
       * Dev / HMR only
       ','line_number':6686,'multiline':True]['text':' static nodes are only patched during dev for HMR','line_number':6690,'multiline':False]['text':' remove existing','line_number':6693,'multiline':False]['text':' mount children first, since some props may rely on child content','line_number':6734,'multiline':False]['text':' being already rendered, e.g. `<select value>`','line_number':6735,'multiline':False]['text':' ShapeFlags.TEXT_CHILDREN ','line_number':6736,'multiline':True]['text':' ShapeFlags.ARRAY_CHILDREN ','line_number':6739,'multiline':True]['text':' scopeId','line_number':6745,'multiline':False]['text':' props','line_number':6747,'multiline':False]['text':'*
               * Special case for setting value on DOM elements:
               * - it can be order-sensitive (e.g. should be set *after* min/max, #2325, #4024)
               * - it needs to be forced (#1471)
               * #2353 proposes adding another renderer option to configure this, but
               * the properties affects are so finite it is worth special casing it
               * here to reduce the complexity. (Special casing it also should not
               * affect non-DOM renderers)
               ','line_number':6754,'multiline':True]['text':' #1583 For inside suspense + suspense not resolved case, enter hook should call when suspense resolved','line_number':6783,'multiline':False]['text':' #1689 For inside suspense + suspense resolved case, just call it','line_number':6784,'multiline':False]['text':' PatchFlags.DEV_ROOT_FRAGMENT ','line_number':6814,'multiline':True]['text':' #1426 take the old vnode's patch flag into account since user may clone a','line_number':6835,'multiline':False]['text':' compiler-generated vnode, which de-opts to FULL_PROPS','line_number':6836,'multiline':False]['text':' PatchFlags.FULL_PROPS ','line_number':6837,'multiline':True]['text':' disable recurse in beforeUpdate hooks','line_number':6841,'multiline':False]['text':' HMR updated, force full diff','line_number':6851,'multiline':False]['text':' full diff','line_number':6864,'multiline':False]['text':' the presence of a patchFlag means this element's render code was','line_number':6868,'multiline':False]['text':' generated by the compiler and can take the fast path.','line_number':6869,'multiline':False]['text':' in this path old node and new node are guaranteed to have the same shape','line_number':6870,'multiline':False]['text':' (i.e. at the exact same position in the source template)','line_number':6871,'multiline':False]['text':' PatchFlags.FULL_PROPS ','line_number':6872,'multiline':True]['text':' element props contain dynamic keys, full diff needed','line_number':6873,'multiline':False]['text':' class','line_number':6877,'multiline':False]['text':' this flag is matched when the element has dynamic class bindings.','line_number':6878,'multiline':False]['text':' PatchFlags.CLASS ','line_number':6879,'multiline':True]['text':' style','line_number':6884,'multiline':False]['text':' this flag is matched when the element has dynamic style bindings','line_number':6885,'multiline':False]['text':' PatchFlags.STYLE ','line_number':6886,'multiline':True]['text':' props','line_number':6889,'multiline':False]['text':' This flag is matched when the element has dynamic prop/attr bindings','line_number':6890,'multiline':False]['text':' other than class and style. The keys of dynamic prop/attrs are saved for','line_number':6891,'multiline':False]['text':' faster iteration.','line_number':6892,'multiline':False]['text':' Note dynamic keys like :[foo]="bar" will cause this optimization to','line_number':6893,'multiline':False]['text':' bail out and go through a full diff because we need to unset the old key','line_number':6894,'multiline':False]['text':' PatchFlags.PROPS ','line_number':6895,'multiline':True]['text':' if the flag is present then dynamicProps must be non-null','line_number':6896,'multiline':False]['text':' #1471 force patch value','line_number':6902,'multiline':False]['text':' text','line_number':6909,'multiline':False]['text':' This flag is matched when the element has only dynamic text children.','line_number':6910,'multiline':False]['text':' PatchFlags.TEXT ','line_number':6911,'multiline':True]['text':' unoptimized, full diff','line_number':6918,'multiline':False]['text':' The fast path for blocks.','line_number':6928,'multiline':False]['text':' Determine the container (parent element) for the patch.','line_number':6933,'multiline':False]['text':' oldVNode may be an errored async setup() component inside Suspense','line_number':6935,'multiline':False]['text':' which will not have a mounted element','line_number':6936,'multiline':False]['text':' - In the case of a Fragment, we need to provide the actual parent','line_number':6938,'multiline':False]['text':' of the Fragment itself so it can move its children.','line_number':6939,'multiline':False]['text':' - In the case of different nodes, there is going to be a replacement','line_number':6941,'multiline':False]['text':' which also requires the correct parent container','line_number':6942,'multiline':False]['text':' - In the case of a component, it could contain anything.','line_number':6944,'multiline':False]['text':' ShapeFlags.COMPONENT ','line_number':6945,'multiline':True]['text':' ShapeFlags.TELEPORT ','line_number':6945,'multiline':True]['text':' In other cases, the parent container is not actually used so we','line_number':6947,'multiline':False]['text':' just pass the block element here to avoid a DOM parentNode call.','line_number':6948,'multiline':False]['text':' empty string is not valid prop','line_number':6963,'multiline':False]['text':' defer patching value','line_number':6968,'multiline':False]['text':' #5523 dev root fragment may inherit directives','line_number':6982,'multiline':False]['text':' PatchFlags.DEV_ROOT_FRAGMENT ','line_number':6983,'multiline':True]['text':' HMR updated / Dev root fragment (w/ comments), force full diff','line_number':6984,'multiline':False]['text':' check if this is a slot fragment with :slotted scope ids','line_number':6989,'multiline':False]['text':' a fragment can only have array children','line_number':6998,'multiline':False]['text':' since they are either generated by the compiler, or implicitly created','line_number':6999,'multiline':False]['text':' from arrays.','line_number':7000,'multiline':False]['text':' PatchFlags.STABLE_FRAGMENT ','line_number':7005,'multiline':True]['text':' #2715 the previous fragment could've been a BAILed one as a result','line_number':7007,'multiline':False]['text':' of renderSlot() with no valid children','line_number':7008,'multiline':False]['text':' a stable fragment (template root or <template v-for>) doesn't need to','line_number':7010,'multiline':False]['text':' patch children order, but it may contain dynamicChildren.','line_number':7011,'multiline':False]['text':' #2080 if the stable fragment has a key, it's a <template v-for> that may','line_number':7017,'multiline':False]['text':'  get moved around. Make sure all root level vnodes inherit el.','line_number':7018,'multiline':False]['text':' #2134 or if it's a component root, it may also get moved around','line_number':7019,'multiline':False]['text':' as the component is being moved.','line_number':7020,'multiline':False]['text':' shallow ','line_number':7023,'multiline':True]['text':' keyed / unkeyed, or manual fragments.','line_number':7027,'multiline':False]['text':' for keyed & unkeyed, since they are compiler generated from v-for,','line_number':7028,'multiline':False]['text':' each child is guaranteed to be a block so the fragment will never','line_number':7029,'multiline':False]['text':' have dynamicChildren.','line_number':7030,'multiline':False]['text':' ShapeFlags.COMPONENT_KEPT_ALIVE ','line_number':7038,'multiline':True]['text':' inject renderer internals for keepAlive','line_number':7058,'multiline':False]['text':' resolve props and slots for setup context','line_number':7062,'multiline':False]['text':' setup() is async. This component relies on async logic to be resolved','line_number':7072,'multiline':False]['text':' before proceeding','line_number':7073,'multiline':False]['text':' Give it a placeholder if this is not hydration','line_number':7076,'multiline':False]['text':' TODO handle self-defined fallback','line_number':7077,'multiline':False]['text':' async & still pending - just update props and slots','line_number':7095,'multiline':False]['text':' since the component's reactive effect for render isn't set-up yet','line_number':7096,'multiline':False]['text':' normal update','line_number':7107,'multiline':False]['text':' in case the child component is also queued, remove it to avoid','line_number':7109,'multiline':False]['text':' double updating the same child component in the same flush.','line_number':7110,'multiline':False]['text':' instance.update is the reactive effect.','line_number':7112,'multiline':False]['text':' no update needed. just copy over properties','line_number':7117,'multiline':False]['text':' beforeMount hook','line_number':7130,'multiline':False]['text':' onVnodeBeforeMount','line_number':7134,'multiline':False]['text':' vnode has adopted host node - perform hydration instead of mount.','line_number':7141,'multiline':False]['text':' note: we are moving the render call into an async callback,','line_number':7160,'multiline':False]['text':' which means it won't track dependencies - but it's ok because','line_number':7161,'multiline':False]['text':' a server-rendered async wrapper is already in resolved state','line_number':7162,'multiline':False]['text':' and it will never need to change.','line_number':7163,'multiline':False]['text':' mounted hook','line_number':7187,'multiline':False]['text':' onVnodeMounted','line_number':7191,'multiline':False]['text':' activated hook for keep-alive roots.','line_number':7197,'multiline':False]['text':' #1742 activated hook must be accessed after first render','line_number':7198,'multiline':False]['text':' since the hook may be injected by a child keep-alive','line_number':7199,'multiline':False]['text':' ShapeFlags.COMPONENT_SHOULD_KEEP_ALIVE ','line_number':7200,'multiline':True]['text':' ShapeFlags.COMPONENT_SHOULD_KEEP_ALIVE ','line_number':7203,'multiline':True]['text':' #2458: deference mount-only object parameters to prevent memleaks','line_number':7210,'multiline':False]['text':' updateComponent','line_number':7214,'multiline':False]['text':' This is triggered by mutation of component's own state (next: null)','line_number':7215,'multiline':False]['text':' OR parent calling processComponent (next: VNode)','line_number':7216,'multiline':False]['text':' Disallow component effect recursion during pre-lifecycle hooks.','line_number':7223,'multiline':False]['text':' beforeUpdate hook','line_number':7232,'multiline':False]['text':' onVnodeBeforeUpdate','line_number':7236,'multiline':False]['text':' render','line_number':7241,'multiline':False]['text':' parent may have changed if it's in a teleport','line_number':7255,'multiline':False]['text':' anchor may have changed if it's in a fragment','line_number':7257,'multiline':False]['text':' self-triggered update. In case of HOC, update parent component','line_number':7264,'multiline':False]['text':' vnode el. HOC is indicated by parent instance's subTree pointing','line_number':7265,'multiline':False]['text':' to child component's vnode','line_number':7266,'multiline':False]['text':' updated hook','line_number':7269,'multiline':False]['text':' onVnodeUpdated','line_number':7273,'multiline':False]['text':' create reactive effect for rendering','line_number':7285,'multiline':False]['text':' track it in component's effect scope','line_number':7286,'multiline':False]['text':' allowRecurse','line_number':7290,'multiline':False]['text':' #1801, #2043 component render effects should allow recursive updates','line_number':7291,'multiline':False]['text':' props update may have triggered pre-flush watchers.','line_number':7312,'multiline':False]['text':' flush them before the render update.','line_number':7313,'multiline':False]['text':' fast path','line_number':7322,'multiline':False]['text':' PatchFlags.KEYED_FRAGMENT ','line_number':7324,'multiline':True]['text':' this could be either fully-keyed or mixed (some keyed some not)','line_number':7325,'multiline':False]['text':' presence of patchFlag means children are guaranteed to be arrays','line_number':7326,'multiline':False]['text':' PatchFlags.UNKEYED_FRAGMENT ','line_number':7330,'multiline':True]['text':' unkeyed','line_number':7331,'multiline':False]['text':' children has 3 possibilities: text, array or no children.','line_number':7336,'multiline':False]['text':' ShapeFlags.TEXT_CHILDREN ','line_number':7337,'multiline':True]['text':' text children fast path','line_number':7338,'multiline':False]['text':' ShapeFlags.ARRAY_CHILDREN ','line_number':7339,'multiline':True]['text':' ShapeFlags.ARRAY_CHILDREN ','line_number':7347,'multiline':True]['text':' prev children was array','line_number':7348,'multiline':False]['text':' ShapeFlags.ARRAY_CHILDREN ','line_number':7349,'multiline':True]['text':' two arrays, cannot assume anything, do full diff','line_number':7350,'multiline':False]['text':' no new children, just unmount old','line_number':7354,'multiline':False]['text':' prev children was text OR null','line_number':7359,'multiline':False]['text':' new children is array OR null','line_number':7360,'multiline':False]['text':' ShapeFlags.TEXT_CHILDREN ','line_number':7361,'multiline':True]['text':' mount new if array','line_number':7364,'multiline':False]['text':' ShapeFlags.ARRAY_CHILDREN ','line_number':7365,'multiline':True]['text':' remove old','line_number':7385,'multiline':False]['text':' mount new','line_number':7389,'multiline':False]['text':' can be all-keyed or mixed','line_number':7393,'multiline':False]['text':' prev ending index','line_number':7397,'multiline':False]['text':' next ending index','line_number':7398,'multiline':False]['text':' 1. sync from start','line_number':7399,'multiline':False]['text':' (a b) c','line_number':7400,'multiline':False]['text':' (a b) d e','line_number':7401,'multiline':False]['text':' 2. sync from end','line_number':7415,'multiline':False]['text':' a (b c)','line_number':7416,'multiline':False]['text':' d e (b c)','line_number':7417,'multiline':False]['text':' 3. common sequence + mount','line_number':7432,'multiline':False]['text':' (a b)','line_number':7433,'multiline':False]['text':' (a b) c','line_number':7434,'multiline':False]['text':' i = 2, e1 = 1, e2 = 2','line_number':7435,'multiline':False]['text':' (a b)','line_number':7436,'multiline':False]['text':' c (a b)','line_number':7437,'multiline':False]['text':' i = 0, e1 = -1, e2 = 0','line_number':7438,'multiline':False]['text':' 4. common sequence + unmount','line_number':7451,'multiline':False]['text':' (a b) c','line_number':7452,'multiline':False]['text':' (a b)','line_number':7453,'multiline':False]['text':' i = 2, e1 = 2, e2 = 1','line_number':7454,'multiline':False]['text':' a (b c)','line_number':7455,'multiline':False]['text':' (b c)','line_number':7456,'multiline':False]['text':' i = 0, e1 = 0, e2 = -1','line_number':7457,'multiline':False]['text':' 5. unknown sequence','line_number':7464,'multiline':False]['text':' [i ... e1 + 1]: a b [c d e] f g','line_number':7465,'multiline':False]['text':' [i ... e2 + 1]: a b [e d c h] f g','line_number':7466,'multiline':False]['text':' i = 2, e1 = 4, e2 = 5','line_number':7467,'multiline':False]['text':' prev starting index','line_number':7469,'multiline':False]['text':' next starting index','line_number':7470,'multiline':False]['text':' 5.1 build key:index map for newChildren','line_number':7471,'multiline':False]['text':' 5.2 loop through old children left to be patched and try to patch','line_number':7484,'multiline':False]['text':' matching nodes & remove nodes that are no longer present','line_number':7485,'multiline':False]['text':' used to track whether any node has moved','line_number':7490,'multiline':False]['text':' works as Map<newIndex, oldIndex>','line_number':7492,'multiline':False]['text':' Note that oldIndex is offset by +1','line_number':7493,'multiline':False]['text':' and oldIndex = 0 is a special value indicating the new node has','line_number':7494,'multiline':False]['text':' no corresponding old node.','line_number':7495,'multiline':False]['text':' used for determining longest stable subsequence','line_number':7496,'multiline':False]['text':' all new children have been patched so this can only be a removal','line_number':7503,'multiline':False]['text':' key-less node, try to locate a key-less node of the same type','line_number':7512,'multiline':False]['text':' 5.3 move and mount','line_number':7536,'multiline':False]['text':' generate longest stable subsequence only when nodes have moved','line_number':7537,'multiline':False]['text':' looping backwards so that we can use last patched node as anchor','line_number':7542,'multiline':False]['text':' mount new','line_number':7548,'multiline':False]['text':' move if:','line_number':7552,'multiline':False]['text':' There is no stable subsequence (e.g. a reverse)','line_number':7553,'multiline':False]['text':' OR current node is not among the stable sequence','line_number':7554,'multiline':False]['text':' MoveType.REORDER ','line_number':7556,'multiline':True]['text':' ShapeFlags.COMPONENT ','line_number':7567,'multiline':True]['text':' ShapeFlags.SUSPENSE ','line_number':7571,'multiline':True]['text':' ShapeFlags.TELEPORT ','line_number':7575,'multiline':True]['text':' single nodes','line_number':7591,'multiline':False]['text':' MoveType.REORDER ','line_number':7592,'multiline':True]['text':' ShapeFlags.ELEMENT ','line_number':7593,'multiline':True]['text':' MoveType.ENTER ','line_number':7596,'multiline':True]['text':' unset ref','line_number':7624,'multiline':False]['text':' ShapeFlags.COMPONENT_SHOULD_KEEP_ALIVE ','line_number':7628,'multiline':True]['text':' ShapeFlags.ELEMENT ','line_number':7632,'multiline':True]['text':' ShapeFlags.COMPONENT ','line_number':7639,'multiline':True]['text':' ShapeFlags.SUSPENSE ','line_number':7643,'multiline':True]['text':' ShapeFlags.TELEPORT ','line_number':7650,'multiline':True]['text':' #1153: fast path should not be taken for non-stable (v-for) fragments','line_number':7654,'multiline':False]['text':' PatchFlags.STABLE_FRAGMENT ','line_number':7656,'multiline':True]['text':' fast path for block nodes: only need to unmount dynamic children.','line_number':7657,'multiline':False]['text':' PatchFlags.KEYED_FRAGMENT ','line_number':7662,'multiline':True]['text':' PatchFlags.UNKEYED_FRAGMENT ','line_number':7662,'multiline':True]['text':' ShapeFlags.ARRAY_CHILDREN ','line_number':7663,'multiline':True]['text':' PatchFlags.DEV_ROOT_FRAGMENT ','line_number':7684,'multiline':True]['text':' ShapeFlags.ELEMENT ','line_number':7711,'multiline':True]['text':' For fragments, directly remove all contained DOM nodes.','line_number':7728,'multiline':False]['text':' (fragment child nodes cannot have transition)','line_number':7729,'multiline':False]['text':' beforeUnmount hook','line_number':7743,'multiline':False]['text':' stop effects in component scope','line_number':7747,'multiline':False]['text':' update may be null if a component is unmounted before its async','line_number':7749,'multiline':False]['text':' setup has resolved.','line_number':7750,'multiline':False]['text':' so that scheduler will no longer invoke it','line_number':7752,'multiline':False]['text':' unmounted hook','line_number':7756,'multiline':False]['text':' A component with async dep inside a pending suspense is unmounted before','line_number':7763,'multiline':False]['text':' its async dep resolves. This should remove the dep from the suspense, and','line_number':7764,'multiline':False]['text':' cause the suspense to resolve immediately if that was the last dep.','line_number':7765,'multiline':False]['text':' ShapeFlags.COMPONENT ','line_number':7787,'multiline':True]['text':' ShapeFlags.SUSPENSE ','line_number':7790,'multiline':True]['text':'*
   * #1156
   * When a component is HMR-enabled, we need to make sure that all static nodes
   * inside a block also inherit the DOM element from the previous tree so that
   * HMR updates (which are full updates) can retrieve the element for patching.
   *
   * #2080
   * Inside keyed `template` fragment static children, if a fragment is moved,
   * the children will always be moved. Therefore, in order to ensure correct move
   * position, el should be inherited from previous nodes.
   ','line_number':7834,'multiline':True]['text':' this is only called in the optimized path so array children are','line_number':7850,'multiline':False]['text':' guaranteed to be vnodes','line_number':7851,'multiline':False]['text':' ShapeFlags.ELEMENT ','line_number':7854,'multiline':True]['text':' PatchFlags.HYDRATE_EVENTS ','line_number':7855,'multiline':True]['text':' #6852 also inherit for text nodes','line_number':7862,'multiline':False]['text':' also inherit for comment nodes, but not placeholders (e.g. v-if which','line_number':7866,'multiline':False]['text':' would have received .el during block patch)','line_number':7867,'multiline':False]['text':' https://en.wikipedia.org/wiki/Longest_increasing_subsequence','line_number':7874,'multiline':False]['text':' #3302','line_number':7952,'multiline':False]['text':' HMR updated, force full diff','line_number':7953,'multiline':False]['text':' insert anchors in the main view','line_number':7959,'multiline':False]['text':' #2652 we could be teleporting from a non-SVG tree into an SVG tree','line_number':7970,'multiline':False]['text':' Teleport *always* has Array children. This is enforced in both the','line_number':7977,'multiline':False]['text':' compiler and vnode children normalization.','line_number':7978,'multiline':False]['text':' ShapeFlags.ARRAY_CHILDREN ','line_number':7979,'multiline':True]['text':' update content','line_number':7991,'multiline':False]['text':' fast path when the teleport happens to be a block root','line_number':8001,'multiline':False]['text':' even in block tree mode we need to make sure all root-level nodes','line_number':8003,'multiline':False]['text':' in the teleport inherit previous DOM references so that they can','line_number':8004,'multiline':False]['text':' be moved in future patches.','line_number':8005,'multiline':False]['text':' enabled -> disabled','line_number':8013,'multiline':False]['text':' move into main container','line_number':8014,'multiline':False]['text':' TeleportMoveTypes.TOGGLE ','line_number':8015,'multiline':True]['text':' target changed','line_number':8019,'multiline':False]['text':' TeleportMoveTypes.TARGET_CHANGE ','line_number':8023,'multiline':True]['text':' disabled -> enabled','line_number':8030,'multiline':False]['text':' move into teleport target','line_number':8031,'multiline':False]['text':' TeleportMoveTypes.TOGGLE ','line_number':8032,'multiline':True]['text':' an unmounted teleport should always remove its children if not disabled','line_number':8043,'multiline':False]['text':' ShapeFlags.ARRAY_CHILDREN ','line_number':8046,'multiline':True]['text':' TeleportMoveTypes.REORDER ','line_number':8057,'multiline':True]['text':' move target anchor if this is a target change.','line_number':8058,'multiline':False]['text':' TeleportMoveTypes.TARGET_CHANGE ','line_number':8059,'multiline':True]['text':' TeleportMoveTypes.REORDER ','line_number':8063,'multiline':True]['text':' move main view anchor if this is a re-order.','line_number':8064,'multiline':False]['text':' if this is a re-order and teleport is enabled (content is in target)','line_number':8068,'multiline':False]['text':' do not move children. So the opposite is: only move children if this','line_number':8069,'multiline':False]['text':' is not a reorder, or the teleport is disabled','line_number':8070,'multiline':False]['text':' Teleport has either Array children or no children.','line_number':8072,'multiline':False]['text':' ShapeFlags.ARRAY_CHILDREN ','line_number':8073,'multiline':True]['text':' MoveType.REORDER ','line_number':8075,'multiline':True]['text':' move main view anchor if this is a re-order.','line_number':8079,'multiline':False]['text':' if multiple teleports rendered to the same target element, we need to','line_number':8087,'multiline':False]['text':' pick up from where the last teleport finished instead of the first node','line_number':8088,'multiline':False]['text':' ShapeFlags.ARRAY_CHILDREN ','line_number':8090,'multiline':True]['text':' lookahead until we find the target anchor','line_number':8097,'multiline':False]['text':' we cannot rely on return value of hydrateChildren() because there','line_number':8098,'multiline':False]['text':' could be nested teleports','line_number':8099,'multiline':False]['text':' Force-casted public typing for h and TSX props inference','line_number':8119,'multiline':False]['text':' presence of .ut method indicates owner component uses css vars.','line_number':8122,'multiline':False]['text':' code path here can assume browser environment.','line_number':8123,'multiline':False]['text':' Since v-if and v-for are the two possible ways node structure can dynamically','line_number':8140,'multiline':False]['text':' change, once we consider v-if branches and each v-for fragment a block, we','line_number':8141,'multiline':False]['text':' can divide a template into nested blocks, and within each block the node','line_number':8142,'multiline':False]['text':' structure would be stable. This allows us to skip most children diffing','line_number':8143,'multiline':False]['text':' and only worry about the dynamic nodes (indicated by patch flags).','line_number':8144,'multiline':False]['text':'*
   * Open a block.
   * This must be called before `createBlock`. It cannot be part of `createBlock`
   * because the children of the block are evaluated before `createBlock` itself
   * is called. The generated code typically looks like this:
   *
   * ```js
   * function render() {
   *   return (openBlock(),createBlock('div', null, [...]))
   * }
   * ```
   * disableTracking is true when creating a v-for fragment block, since a v-for
   * fragment always diffs its children.
   *
   * @private
   ','line_number':8147,'multiline':True]['text':' Whether we should be tracking dynamic child nodes inside a block.','line_number':8170,'multiline':False]['text':' Only tracks when this value is > 0','line_number':8171,'multiline':False]['text':' We are not using a simple boolean because this value may need to be','line_number':8172,'multiline':False]['text':' incremented/decremented by nested usage of v-once (see below)','line_number':8173,'multiline':False]['text':'*
   * Block tracking sometimes needs to be disabled, for example during the
   * creation of a tree that needs to be cached by v-once. The compiler generates
   * code like this:
   *
   * ``` js
   * _cache[1] || (
   *   setBlockTracking(-1),
   *   _cache[1] = createVNode(...),
   *   setBlockTracking(1),
   *   _cache[1]
   * )
   * ```
   *
   * @private
   ','line_number':8175,'multiline':True]['text':' save current block children on the block vnode','line_number':8195,'multiline':False]['text':' close block','line_number':8198,'multiline':False]['text':' a block is always going to be patched, so track it as a child of its','line_number':8200,'multiline':False]['text':' parent block','line_number':8201,'multiline':False]['text':'*
   * @private
   ','line_number':8207,'multiline':True]['text':' isBlock ','line_number':8211,'multiline':True]['text':'*
   * Create a block root vnode. Takes the same exact arguments as `createVNode`.
   * A block root keeps track of dynamic nodes within the block in the
   * `dynamicChildren` array.
   *
   * @private
   ','line_number':8213,'multiline':True]['text':' isBlock: prevent a block from tracking itself ','line_number':8221,'multiline':True]['text':' ShapeFlags.COMPONENT ','line_number':8227,'multiline':True]['text':' #7042, ensure the vnode being unmounted during HMR','line_number':8229,'multiline':False]['text':' bitwise operations to remove keep alive flags','line_number':8230,'multiline':False]['text':' ShapeFlags.COMPONENT_SHOULD_KEEP_ALIVE ','line_number':8231,'multiline':True]['text':' ShapeFlags.COMPONENT_KEPT_ALIVE ','line_number':8232,'multiline':True]['text':' HMR only: if the component has been hot-updated, force a reload.','line_number':8233,'multiline':False]['text':'*
   * Internal API for registering an arguments transform for createVNode
   * used for creating stubs in the test-utils
   * It is *internal* but needs to be exposed for test-utils to pick up proper
   * typings
   ','line_number':8239,'multiline':True]['text':' ShapeFlags.ELEMENT ','line_number':8262,'multiline':True]['text':' normalize suspense children','line_number':8293,'multiline':False]['text':' ShapeFlags.SUSPENSE ','line_number':8294,'multiline':True]['text':' compiled element vnode - if children is passed, only possible types are','line_number':8299,'multiline':False]['text':' string or Array.','line_number':8300,'multiline':False]['text':' ShapeFlags.TEXT_CHILDREN ','line_number':8302,'multiline':True]['text':' ShapeFlags.ARRAY_CHILDREN ','line_number':8303,'multiline':True]['text':' validate key','line_number':8305,'multiline':False]['text':' track vnode for block tree','line_number':8309,'multiline':False]['text':' avoid a block node from tracking itself','line_number':8311,'multiline':False]['text':' has current parent block','line_number':8313,'multiline':False]['text':' presence of a patch flag indicates this node needs patching on updates.','line_number':8315,'multiline':False]['text':' component nodes also should always be patched, because even if the','line_number':8316,'multiline':False]['text':' component doesn't need to update, it needs to persist the instance on to','line_number':8317,'multiline':False]['text':' the next vnode so that it can be properly unmounted later.','line_number':8318,'multiline':False]['text':' ShapeFlags.COMPONENT ','line_number':8319,'multiline':True]['text':' the EVENTS flag is only for hydration and if it is the only flag, the','line_number':8320,'multiline':False]['text':' vnode should not be considered dynamic due to handler caching.','line_number':8321,'multiline':False]['text':' PatchFlags.HYDRATE_EVENTS ','line_number':8322,'multiline':True]['text':' createVNode receiving an existing vnode. This happens in cases like','line_number':8336,'multiline':False]['text':' <component :is="vnode"/>','line_number':8337,'multiline':False]['text':' #2078 make sure to merge refs during the clone instead of overwriting it','line_number':8338,'multiline':False]['text':' mergeRef: true ','line_number':8339,'multiline':True]['text':' ShapeFlags.COMPONENT ','line_number':8344,'multiline':True]['text':' PatchFlags.BAIL ','line_number':8351,'multiline':True]['text':' class component normalization.','line_number':8354,'multiline':False]['text':' class & style normalization.','line_number':8358,'multiline':False]['text':' for reactive or proxy objects, we need to clone it to enable mutation.','line_number':8360,'multiline':False]['text':' reactive state objects need to be cloned since they are likely to be','line_number':8367,'multiline':False]['text':' mutated','line_number':8368,'multiline':False]['text':' encode the vnode type information into a bitmap','line_number':8375,'multiline':False]['text':' ShapeFlags.ELEMENT ','line_number':8377,'multiline':True]['text':' ShapeFlags.SUSPENSE ','line_number':8379,'multiline':True]['text':' ShapeFlags.TELEPORT ','line_number':8381,'multiline':True]['text':' ShapeFlags.STATEFUL_COMPONENT ','line_number':8383,'multiline':True]['text':' ShapeFlags.FUNCTIONAL_COMPONENT ','line_number':8385,'multiline':True]['text':' ShapeFlags.STATEFUL_COMPONENT ','line_number':8387,'multiline':True]['text':' This is intentionally NOT using spread or extend to avoid the runtime','line_number':8404,'multiline':False]['text':' key enumeration cost.','line_number':8405,'multiline':False]['text':' #2078 in the case of <component :is="vnode" ref="extra"/>','line_number':8415,'multiline':False]['text':' if the vnode itself already has a ref, cloneVNode will need to merge','line_number':8416,'multiline':False]['text':' the refs so the single vnode can be set on multiple refs','line_number':8417,'multiline':False]['text':' PatchFlags.HOISTED ','line_number':8426,'multiline':True]['text':' if the vnode is cloned with extra props, we can no longer assume its','line_number':8433,'multiline':False]['text':' existing patch flag to be reliable and need to add the FULL_PROPS flag.','line_number':8434,'multiline':False]['text':' note: preserve flag for fragments since they use the flag for children','line_number':8435,'multiline':False]['text':' fast paths only.','line_number':8436,'multiline':False]['text':' hoisted node','line_number':8438,'multiline':False]['text':' PatchFlags.FULL_PROPS ','line_number':8439,'multiline':True]['text':' PatchFlags.FULL_PROPS ','line_number':8440,'multiline':True]['text':' These should technically only be non-null on mounted VNodes. However,','line_number':8447,'multiline':False]['text':' they *should* be copied for kept-alive vnodes. So we just always copy','line_number':8448,'multiline':False]['text':' them since them being non-null during a mount doesn't affect the logic as','line_number':8449,'multiline':False]['text':' they will simply be overwritten.','line_number':8450,'multiline':False]['text':'*
   * Dev only, for HMR of hoisted vnodes reused in v-for
   * https://github.com/vitejs/vite/issues/2022
   ','line_number':8462,'multiline':True]['text':'*
   * @private
   ','line_number':8473,'multiline':True]['text':'*
   * @private
   ','line_number':8479,'multiline':True]['text':' A static vnode can contain multiple stringified elements, and the number','line_number':8483,'multiline':False]['text':' of elements is necessary for hydration.','line_number':8484,'multiline':False]['text':'*
   * @private
   ','line_number':8489,'multiline':True]['text':' when used as the v-else branch, the comment node must be created as a','line_number':8493,'multiline':False]['text':' block to ensure correct updates.','line_number':8494,'multiline':False]['text':' empty placeholder','line_number':8502,'multiline':False]['text':' fragment','line_number':8506,'multiline':False]['text':' #3666, avoid reference pollution when reusing vnode','line_number':8508,'multiline':False]['text':' already vnode, this should be the most common since compiled templates','line_number':8512,'multiline':False]['text':' always produce all-vnode children arrays','line_number':8513,'multiline':False]['text':' strings and numbers','line_number':8517,'multiline':False]['text':' optimized normalization for template-compiled render fns','line_number':8521,'multiline':False]['text':' PatchFlags.HOISTED ','line_number':8523,'multiline':True]['text':' ShapeFlags.ARRAY_CHILDREN ','line_number':8535,'multiline':True]['text':' ShapeFlags.ELEMENT ','line_number':8538,'multiline':True]['text':' ShapeFlags.TELEPORT ','line_number':8538,'multiline':True]['text':' Normalize slot to plain children for plain element and Teleport','line_number':8539,'multiline':False]['text':' _c marker is added by withCtx() indicating this is a compiled slot','line_number':8542,'multiline':False]['text':' ShapeFlags.SLOTS_CHILDREN ','line_number':8550,'multiline':True]['text':' SlotFlags.FORWARDED ','line_number':8555,'multiline':True]['text':' a child component receives forwarded slots from the parent.','line_number':8556,'multiline':False]['text':' its slot type is determined by its parent's slot type.','line_number':8557,'multiline':False]['text':' SlotFlags.STABLE ','line_number':8558,'multiline':True]['text':' SlotFlags.STABLE ','line_number':8559,'multiline':True]['text':' SlotFlags.DYNAMIC ','line_number':8562,'multiline':True]['text':' PatchFlags.DYNAMIC_SLOTS ','line_number':8563,'multiline':True]['text':' ShapeFlags.SLOTS_CHILDREN ','line_number':8570,'multiline':True]['text':' force teleport children to array so it can be moved around','line_number':8574,'multiline':False]['text':' ShapeFlags.TELEPORT ','line_number':8575,'multiline':True]['text':' ShapeFlags.ARRAY_CHILDREN ','line_number':8576,'multiline':True]['text':' ShapeFlags.TEXT_CHILDREN ','line_number':8580,'multiline':True]['text':' ErrorCodes.VNODE_HOOK ','line_number':8618,'multiline':True]['text':' inherit parent app context - or - if root, adopt from root vnode','line_number':8628,'multiline':False]['text':' detached ','line_number':8641,'multiline':True]['text':' local resolved assets','line_number':8650,'multiline':False]['text':' resolved props and emits options','line_number':8653,'multiline':False]['text':' emit','line_number':8656,'multiline':False]['text':' props default value','line_number':8659,'multiline':False]['text':' inheritAttrs','line_number':8661,'multiline':False]['text':' state','line_number':8663,'multiline':False]['text':' suspense related','line_number':8672,'multiline':False]['text':' lifecycle hooks','line_number':8677,'multiline':False]['text':' not using enums here because it results in computed properties','line_number':8678,'multiline':False]['text':' apply custom element special handling','line_number':8702,'multiline':False]['text':'#__PURE__','line_number':8718,'multiline':True]['text':' ShapeFlags.STATEFUL_COMPONENT ','line_number':8726,'multiline':True]['text':' 0. create render proxy property access cache','line_number':8766,'multiline':False]['text':' 1. create public instance / render proxy','line_number':8768,'multiline':False]['text':' also mark it raw so it's never observed','line_number':8769,'multiline':False]['text':' 2. call setup()','line_number':8774,'multiline':False]['text':' ErrorCodes.SETUP_FUNCTION ','line_number':8781,'multiline':True]['text':' return the promise so server-renderer can wait on it','line_number':8787,'multiline':False]['text':' ErrorCodes.SETUP_FUNCTION ','line_number':8793,'multiline':True]['text':' async setup returned Promise.','line_number':8797,'multiline':False]['text':' bail here and wait for re-entry.','line_number':8798,'multiline':False]['text':' setup returned an inline render function','line_number':8819,'multiline':False]['text':' setup returned bindings.','line_number':8829,'multiline':False]['text':' assuming a render function compiled from template is present.','line_number':8830,'multiline':False]['text':'*
   * For runtime-dom to register the compiler.
   * Note the exported method uses any to avoid d.ts relying on the compiler types.
   ','line_number':8846,'multiline':True]['text':' dev only','line_number':8858,'multiline':False]['text':' template / render function normalization','line_number':8862,'multiline':False]['text':' could be already set when returned from setup()','line_number':8863,'multiline':False]['text':' only do on-the-fly compile if not in SSR - SSR on-the-fly compilation','line_number':8865,'multiline':False]['text':' is done by server-renderer','line_number':8866,'multiline':False]['text':' for runtime-compiled render functions using `with` blocks, the render','line_number':8887,'multiline':False]['text':' proxy used needs a different `has` handler which is more performant and','line_number':8888,'multiline':False]['text':' also only allows a whitelist of globals to fallthrough.','line_number':8889,'multiline':False]['text':' support for 2.x options','line_number':8894,'multiline':False]['text':' warn missing template/render','line_number':8902,'multiline':False]['text':' the runtime compilation of template in SSR is done by server-render','line_number':8903,'multiline':False]['text':' istanbul ignore if ','line_number':8905,'multiline':True]['text':' should not happen ','line_number':8910,'multiline':True]['text':' TrackOpTypes.GET ','line_number':8921,'multiline':True]['text':' We use getters in dev in case libs like test-utils overwrite instance','line_number':8960,'multiline':False]['text':' properties (overwrites should not be done in prod)','line_number':8961,'multiline':False]['text':' istanbul ignore next ','line_number':9001,'multiline':True]['text':' try to infer the name based on reverse resolution','line_number':9011,'multiline':False]['text':' @ts-ignore','line_number':9030,'multiline':False]['text':' dev only','line_number':9034,'multiline':False]['text':' implementation','line_number':9038,'multiline':False]['text':' implementation','line_number':9045,'multiline':False]['text':'*
   * Vue `<script setup>` compiler macro for declaring a component's exposed
   * instance properties when it is accessed by a parent component via template
   * refs.
   *
   * `<script setup>` components are closed by default - i.e. variables inside
   * the `<script setup>` scope is not exposed to parent unless explicitly exposed
   * via `defineExpose`.
   *
   * This is only usable inside `<script setup>`, is compiled away in the
   * output and should **not** be actually called at runtime.
   ','line_number':9052,'multiline':True]['text':'*
   * Vue `<script setup>` compiler macro for providing props default values when
   * using type-based `defineProps` declaration.
   *
   * Example usage:
   * ```ts
   * withDefaults(defineProps<{
   *   size?: number
   *   labels?: string[]
   * }>(), {
   *   size: 3,
   *   labels: () => ['default label']
   * })
   * ```
   *
   * This is only usable inside `<script setup>`, is compiled away in the output
   * and should **not** be actually called at runtime.
   ','line_number':9069,'multiline':True]['text':'*
   * Runtime helper for merging default declarations. Imported by compiled code
   * only.
   * @internal
   ','line_number':9106,'multiline':True]['text':'*
   * Used to create a proxy for the rest element when destructuring props with
   * defineProps().
   * @internal
   ','line_number':9134,'multiline':True]['text':'*
   * `<script setup>` helper for persisting the current instance context over
   * async/await flows.
   *
   * `@vue/compiler-sfc` converts the following:
   *
   * ```ts
   * const x = await foo()
   * ```
   *
   * into:
   *
   * ```ts
   * let __temp, __restore
   * const x = (([__temp, __restore] = withAsyncContext(() => foo())),__temp=await __temp,__restore(),__temp)
   * ```
   * @internal
   ','line_number':9151,'multiline':True]['text':' Actual implementation','line_number':9186,'multiline':False]['text':' single vnode without props','line_number':9191,'multiline':False]['text':' props without children','line_number':9195,'multiline':False]['text':' omit props','line_number':9199,'multiline':False]['text':' eslint-disable no-restricted-globals ','line_number':9222,'multiline':True]['text':' custom formatter for Chrome','line_number':9230,'multiline':False]['text':' https://www.mattzeunert.com/2016/02/19/custom-chrome-devtools-object-formatters.html','line_number':9231,'multiline':False]['text':' TODO also format ComponentPublicInstance & ctx.slots/attrs in setup','line_number':9234,'multiline':False]['text':' shallow clone','line_number':9416,'multiline':False]['text':' make sure to let parent block track it when returning cached','line_number':9430,'multiline':False]['text':' Core API ------------------------------------------------------------------','line_number':9437,'multiline':False]['text':'*
   * SSR utils for \@vue/server-renderer. Only exposed in ssr-possible builds.
   * @internal
   ','line_number':9439,'multiline':True]['text':'*
   * @internal only exposed in compat builds
   ','line_number':9444,'multiline':True]['text':'*
   * @internal only exposed in compat builds.
   ','line_number':9448,'multiline':True]['text':'#__PURE__','line_number':9455,'multiline':True]['text':' __UNSAFE__','line_number':9489,'multiline':False]['text':' Reason: innerHTML.','line_number':9490,'multiline':False]['text':' Static content here can only come from compiled templates.','line_number':9491,'multiline':False]['text':' As long as the user only uses trusted templates, this is safe.','line_number':9492,'multiline':False]['text':' <parent> before | first ... last | anchor </parent>','line_number':9494,'multiline':False]['text':' #5308 can only take cached path if:','line_number':9496,'multiline':False]['text':' - has a single root node','line_number':9497,'multiline':False]['text':' - nextSibling info is still available','line_number':9498,'multiline':False]['text':' cached','line_number':9500,'multiline':False]['text':' fresh insert','line_number':9508,'multiline':False]['text':' remove outer svg wrapper','line_number':9512,'multiline':False]['text':' first','line_number':9522,'multiline':False]['text':' last','line_number':9524,'multiline':False]['text':' compiler should normalize class + :class bindings on the same element','line_number':9530,'multiline':False]['text':' into a single binding ['staticClass', dynamic]','line_number':9531,'multiline':False]['text':' directly setting className should be faster than setAttribute in theory','line_number':9533,'multiline':False]['text':' if this is an element during a transition, take the temporary transition','line_number':9534,'multiline':False]['text':' classes into account.','line_number':9535,'multiline':False]['text':' indicates that the `display` of the element is controlled by `v-show`,','line_number':9576,'multiline':False]['text':' so we always keep the current `display` value regardless of the `style`','line_number':9577,'multiline':False]['text':' value, thus handing over control to `v-show`.','line_number':9578,'multiline':False]['text':' custom property definition','line_number':9599,'multiline':False]['text':' !important','line_number':9605,'multiline':False]['text':' note we are only checking boolean attributes that don't have a','line_number':9646,'multiline':False]['text':' corresponding dom prop of the same name here.','line_number':9647,'multiline':False]['text':' __UNSAFE__','line_number':9658,'multiline':False]['text':' functions. The user is responsible for using them with only trusted content.','line_number':9659,'multiline':False]['text':' the following args are passed only due to potential innerHTML/textContent','line_number':9661,'multiline':False]['text':' overriding existing VNodes, in which case the old tree must be properly','line_number':9662,'multiline':False]['text':' unmounted.','line_number':9663,'multiline':False]['text':' custom elements may use _value internally','line_number':9674,'multiline':False]['text':' store value as _value as well since','line_number':9676,'multiline':False]['text':' non-string values will be stringified.','line_number':9677,'multiline':False]['text':' #4956: always set for OPTION elements because its value falls back to','line_number':9681,'multiline':False]['text':' textContent if no value attribute is present. And setting .value for','line_number':9682,'multiline':False]['text':' OPTION has no side effect','line_number':9683,'multiline':False]['text':' e.g. <select multiple> compiles to { multiple: '' }','line_number':9696,'multiline':False]['text':' e.g. <div :id="null">','line_number':9700,'multiline':False]['text':' e.g. <img :width="null">','line_number':9705,'multiline':False]['text':' some properties perform value validation and throw,','line_number':9710,'multiline':False]['text':' some properties has getter, no setter, will error in 'use strict'','line_number':9711,'multiline':False]['text':' eg. <select :type="null"></select> <select :willValidate="null"></select>','line_number':9712,'multiline':False]['text':' do not warn if value is auto-coerced from nullish values','line_number':9717,'multiline':False]['text':' vei = vue event invokers','line_number':9733,'multiline':False]['text':' patch','line_number':9737,'multiline':False]['text':' add','line_number':9743,'multiline':False]['text':' remove','line_number':9748,'multiline':False]['text':' To avoid the overhead of repeatedly calling Date.now(), we cache','line_number':9768,'multiline':False]['text':' and use the same timestamp for all event listeners attached in the same tick.','line_number':9769,'multiline':False]['text':'#__PURE__','line_number':9771,'multiline':True]['text':' async edge case vuejs/vue#6566','line_number':9775,'multiline':False]['text':' inner click event triggers patch, event handler','line_number':9776,'multiline':False]['text':' attached to outer element during patch, and triggered again. This','line_number':9777,'multiline':False]['text':' happens because browsers fire microtask ticks between event propagation.','line_number':9778,'multiline':False]['text':' this no longer happens for templates in Vue 3, but could still be','line_number':9779,'multiline':False]['text':' theoretically possible for hand-written render functions.','line_number':9780,'multiline':False]['text':' the solution: we save the timestamp when a handler is attached,','line_number':9781,'multiline':False]['text':' and also attach the timestamp to any event that was handled by vue','line_number':9782,'multiline':False]['text':' for the first time (to avoid inconsistent event timestamp implementations','line_number':9783,'multiline':False]['text':' or events fired from iframes, e.g. #2513)','line_number':9784,'multiline':False]['text':' The handler would only fire if the event passed to it was fired','line_number':9785,'multiline':False]['text':' AFTER it was attached.','line_number':9786,'multiline':False]['text':' ErrorCodes.NATIVE_EVENT_HANDLER ','line_number':9793,'multiline':True]['text':' ignore v-model listeners','line_number':9822,'multiline':False]['text':' special case for <input v-model type="checkbox"> with','line_number':9835,'multiline':False]['text':' :true-value & :false-value','line_number':9836,'multiline':False]['text':' store value as dom properties since non-string values will be','line_number':9837,'multiline':False]['text':' stringified.','line_number':9838,'multiline':False]['text':' most keys must be set as attribute on svg elements to work','line_number':9850,'multiline':False]['text':' ...except innerHTML & textContent','line_number':9851,'multiline':False]['text':' or native onclick with function values','line_number':9855,'multiline':False]['text':' these are enumerated attrs, however their corresponding DOM properties','line_number':9861,'multiline':False]['text':' are actually booleans - this leads to setting it with a string "false"','line_number':9862,'multiline':False]['text':' value leading it to be coerced to `true`, so we need to always treat','line_number':9863,'multiline':False]['text':' them as attributes.','line_number':9864,'multiline':False]['text':' Note that `contentEditable` doesn't have this problem: its DOM','line_number':9865,'multiline':False]['text':' property is also enumerated string values.','line_number':9866,'multiline':False]['text':' #1787, #2840 form property on form elements is readonly and must be set as','line_number':9870,'multiline':False]['text':' attribute.','line_number':9871,'multiline':False]['text':' #1526 <input list> must be set as attribute','line_number':9875,'multiline':False]['text':' #2766 <textarea type> must be set as attribute','line_number':9879,'multiline':False]['text':' native onclick with string value, must be set as attribute','line_number':9883,'multiline':False]['text':' @ts-ignore','line_number':9901,'multiline':False]['text':'*
           * @internal
           ','line_number':9911,'multiline':True]['text':' for sync component defs we can immediately resolve props','line_number':9928,'multiline':False]['text':'*
       * resolve inner component definition (handle possible async component)
       ','line_number':9953,'multiline':True]['text':' set initial attrs','line_number':9958,'multiline':False]['text':' watch future attr changes','line_number':9962,'multiline':False]['text':' cast Number-type props set before resolve','line_number':9970,'multiline':False]['text':' defining getter/setters on prototype','line_number':9985,'multiline':False]['text':' for sync defs, this already happened in the constructor','line_number':9986,'multiline':False]['text':' apply CSS','line_number':9989,'multiline':False]['text':' initial render','line_number':9991,'multiline':False]['text':' check if there are props set pre-upgrade or connect','line_number':10005,'multiline':False]['text':' defining getter/setters on prototype','line_number':10011,'multiline':False]['text':'*
       * @internal
       ','line_number':10031,'multiline':True]['text':'*
       * @internal
       ','line_number':10037,'multiline':True]['text':' reflect','line_number':10046,'multiline':False]['text':' HMR','line_number':10069,'multiline':False]['text':' always reset styles','line_number':10072,'multiline':False]['text':' intercept emit','line_number':10087,'multiline':False]['text':' dispatch both the raw and hyphenated versions of an event','line_number':10089,'multiline':False]['text':' to match Vue behavior','line_number':10090,'multiline':False]['text':' locate nearest Vue custom element parent for provide/inject','line_number':10096,'multiline':False]['text':' record for HMR','line_number':10116,'multiline':False]['text':' istanbul ignore else ','line_number':10126,'multiline':True]['text':'*
   * Runtime helper for SFC's CSS variable injection feature.
   * @private
   ','line_number':10135,'multiline':True]['text':' istanbul ignore next ','line_number':10141,'multiline':True]['text':' ShapeFlags.SUSPENSE ','line_number':10162,'multiline':True]['text':' drill down HOCs until it's a non-component vnode','line_number':10171,'multiline':False]['text':' ShapeFlags.ELEMENT ','line_number':10175,'multiline':True]['text':' DOM Transition is a higher-order-component based on the platform-agnostic','line_number':10202,'multiline':False]['text':' base Transition component, with DOM-specific logic.','line_number':10203,'multiline':False]['text':'#__PURE__','line_number':10225,'multiline':True]['text':'*
   * #3227 Incoming hooks may be merged into arrays when wrapping Transition
   * with custom HOCs.
   ','line_number':10226,'multiline':True]['text':'*
   * Check if a hook expects a callback (2nd arg), which means the user
   * intends to explicitly control the end of the transition.
   ','line_number':10238,'multiline':True]['text':' force reflow so *-leave-from classes immediately take effect (#2593)','line_number':10307,'multiline':False]['text':' cancelled','line_number':10312,'multiline':False]['text':' JSDOM may return undefined for transition properties','line_number':10411,'multiline':False]['text':' istanbul ignore if ','line_number':10422,'multiline':True]['text':' Old versions of Chromium (below 61.0.3163.100) formats floating pointer','line_number':10466,'multiline':False]['text':' numbers in a locale-dependent way, using a comma instead of a dot.','line_number':10467,'multiline':False]['text':' If comma is not replaced with a dot, the input will be rounded down','line_number':10468,'multiline':False]['text':' (i.e. acting as a floor function) causing unexpected behaviors','line_number':10469,'multiline':False]['text':' synchronously force layout to put elements into a certain state','line_number':10473,'multiline':False]['text':'#__PURE__','line_number':10482,'multiline':True]['text':' children is guaranteed to exist after initial render','line_number':10492,'multiline':False]['text':' we divide the work into three loops to avoid mixing DOM reads and writes','line_number':10500,'multiline':False]['text':' in each iteration - which helps prevent layout thrashing.','line_number':10501,'multiline':False]['text':' force reflow to put everything in position','line_number':10505,'multiline':False]['text':'*
   * TransitionGroup does not support "mode" so we need to remove it from the
   * props declarations, but direct delete operation is considered a side effect
   * and will make the entire transition feature non-tree-shakeable, so we do it
   * in a function and mark the function's invocation as pure.
   ','line_number':10551,'multiline':True]['text':'#__PURE__','line_number':10558,'multiline':True]['text':' Detect whether an element with the move class applied has','line_number':10585,'multiline':False]['text':' CSS transitions. Since the element may be inside an entering','line_number':10586,'multiline':False]['text':' transition at this very moment, we make a clone of it and remove','line_number':10587,'multiline':False]['text':' all other transition classes applied to ensure only the move class','line_number':10588,'multiline':False]['text':' is applied.','line_number':10589,'multiline':False]['text':' We are exporting the v-model runtime directly as vnode hooks so that it can','line_number':10620,'multiline':False]['text':' be tree-shaken in case v-model is never used.','line_number':10621,'multiline':False]['text':' Safari < 10.2 & UIWebView doesn't fire compositionend when','line_number':10646,'multiline':False]['text':' switching focus before confirming composition choice','line_number':10647,'multiline':False]['text':' this also fixes the issue where some browsers e.g. iOS Chrome','line_number':10648,'multiline':False]['text':' fires "change" instead of "input" on autocomplete.','line_number':10649,'multiline':False]['text':' set value on mounted so it's after min/max for type="range"','line_number':10653,'multiline':False]['text':' avoid clearing unresolved text. #2302','line_number':10659,'multiline':False]['text':' #4096 array checkboxes need to be deep traversed','line_number':10681,'multiline':False]['text':' set initial checked on mount to wait for true-value/false-value','line_number':10717,'multiline':False]['text':' <select multiple> value need to be deep traversed','line_number':10752,'multiline':False]['text':' set value in mounted & updated because <select> relies on its children','line_number':10768,'multiline':False]['text':' <option>s.','line_number':10769,'multiline':False]['text':' retrieve raw value set via :value bindings','line_number':10810,'multiline':False]['text':' retrieve raw value for true-value and false-value set via :true-value or :false-value bindings','line_number':10814,'multiline':False]['text':'*
   * @private
   ','line_number':10870,'multiline':True]['text':' Kept for 2.x compat.','line_number':10883,'multiline':False]['text':' Note: IE11 compat for `spacebar` and `del` is removed for now.','line_number':10884,'multiline':False]['text':'*
   * @private
   ','line_number':10894,'multiline':True]['text':'#__PURE__','line_number':10951,'multiline':True]['text':' lazy create the renderer - this makes core renderer logic tree-shakable','line_number':10952,'multiline':False]['text':' in case the user only imports reactivity utilities from Vue.','line_number':10953,'multiline':False]['text':' use explicit type casts here to avoid import() calls in rolled-up d.ts','line_number':10967,'multiline':False]['text':' __UNSAFE__','line_number':10987,'multiline':False]['text':' Reason: potential execution of JS expressions in in-DOM template.','line_number':10988,'multiline':False]['text':' The user must make sure the in-DOM template is trusted. If it's','line_number':10989,'multiline':False]['text':' rendered by the server, the template should not contain any user data.','line_number':10990,'multiline':False]['text':' clear content before mounting','line_number':10993,'multiline':False]['text':' Inject `isNativeTag`','line_number':11020,'multiline':False]['text':' this is used for component name validation (dev only)','line_number':11021,'multiline':False]['text':' dev only','line_number':11027,'multiline':False]['text':' ErrorCodes.UNEXPECTED_CHARACTER_IN_UNQUOTED_ATTRIBUTE_VALUE ','line_number':11124,'multiline':True]['text':' ErrorCodes.UNEXPECTED_EQUALS_SIGN_BEFORE_ATTRIBUTE_NAME ','line_number':11125,'multiline':True]['text':' ErrorCodes.UNEXPECTED_QUESTION_MARK_INSTEAD_OF_TAG_NAME ','line_number':11126,'multiline':True]['text':' ErrorCodes.UNEXPECTED_NULL_CHARACTER ','line_number':11127,'multiline':True]['text':' ErrorCodes.UNEXPECTED_SOLIDUS_IN_TAG ','line_number':11128,'multiline':True]['text':' Vue-specific parse errors','line_number':11129,'multiline':False]['text':' ErrorCodes.X_INVALID_END_TAG ','line_number':11130,'multiline':True]['text':' ErrorCodes.X_MISSING_END_TAG ','line_number':11131,'multiline':True]['text':' ErrorCodes.X_MISSING_INTERPOLATION_END ','line_number':11132,'multiline':True]['text':' ErrorCodes.X_MISSING_DYNAMIC_DIRECTIVE_ARGUMENT_END ','line_number':11133,'multiline':True]['text':' ErrorCodes.X_MISSING_DIRECTIVE_NAME ','line_number':11135,'multiline':True]['text':' transform errors','line_number':11136,'multiline':False]['text':' ErrorCodes.X_V_IF_NO_EXPRESSION ','line_number':11137,'multiline':True]['text':' ErrorCodes.X_V_IF_SAME_KEY ','line_number':11138,'multiline':True]['text':' ErrorCodes.X_V_ELSE_NO_ADJACENT_IF ','line_number':11139,'multiline':True]['text':' ErrorCodes.X_V_FOR_NO_EXPRESSION ','line_number':11140,'multiline':True]['text':' ErrorCodes.X_V_FOR_MALFORMED_EXPRESSION ','line_number':11141,'multiline':True]['text':' ErrorCodes.X_V_FOR_TEMPLATE_KEY_PLACEMENT ','line_number':11142,'multiline':True]['text':' ErrorCodes.X_V_BIND_NO_EXPRESSION ','line_number':11143,'multiline':True]['text':' ErrorCodes.X_V_ON_NO_EXPRESSION ','line_number':11144,'multiline':True]['text':' ErrorCodes.X_V_SLOT_UNEXPECTED_DIRECTIVE_ON_SLOT_OUTLET ','line_number':11145,'multiline':True]['text':' ErrorCodes.X_V_SLOT_MIXED_SLOT_USAGE ','line_number':11146,'multiline':True]['text':' ErrorCodes.X_V_SLOT_DUPLICATE_SLOT_NAMES ','line_number':11149,'multiline':True]['text':' ErrorCodes.X_V_SLOT_EXTRANEOUS_DEFAULT_SLOT_CHILDREN ','line_number':11150,'multiline':True]['text':' ErrorCodes.X_V_SLOT_MISPLACED ','line_number':11152,'multiline':True]['text':' ErrorCodes.X_V_MODEL_NO_EXPRESSION ','line_number':11153,'multiline':True]['text':' ErrorCodes.X_V_MODEL_MALFORMED_EXPRESSION ','line_number':11154,'multiline':True]['text':' ErrorCodes.X_V_MODEL_ON_SCOPE_VARIABLE ','line_number':11155,'multiline':True]['text':' ErrorCodes.X_V_MODEL_ON_PROPS ','line_number':11156,'multiline':True]['text':' ErrorCodes.X_INVALID_EXPRESSION ','line_number':11157,'multiline':True]['text':' ErrorCodes.X_KEEP_ALIVE_INVALID_CHILDREN ','line_number':11158,'multiline':True]['text':' generic errors','line_number':11159,'multiline':False]['text':' ErrorCodes.X_PREFIX_ID_NOT_SUPPORTED ','line_number':11160,'multiline':True]['text':' ErrorCodes.X_MODULE_MODE_NOT_SUPPORTED ','line_number':11161,'multiline':True]['text':' ErrorCodes.X_CACHE_HANDLER_NOT_SUPPORTED ','line_number':11162,'multiline':True]['text':' ErrorCodes.X_SCOPE_ID_NOT_SUPPORTED ','line_number':11163,'multiline':True]['text':' just to fulfill types','line_number':11164,'multiline':False]['text':' ErrorCodes.__EXTEND_POINT__ ','line_number':11165,'multiline':True]['text':' Name mapping for runtime helpers that need to be imported from 'vue' in','line_number':11207,'multiline':False]['text':' generated code. Make sure these are correctly exported in the runtime!','line_number':11208,'multiline':False]['text':' AST Utilities ---------------------------------------------------------------','line_number':11256,'multiline':False]['text':' Some expressions, e.g. sequence and conditional expressions, are never','line_number':11257,'multiline':False]['text':' associated with template nodes, so their source locations are just a stub.','line_number':11258,'multiline':False]['text':' Container types like CompoundExpression also don't need a real location.','line_number':11259,'multiline':False]['text':' NodeTypes.ROOT ','line_number':11267,'multiline':True]['text':' NodeTypes.VNODE_CALL ','line_number':11294,'multiline':True]['text':' NodeTypes.JS_ARRAY_EXPRESSION ','line_number':11309,'multiline':True]['text':' NodeTypes.JS_OBJECT_EXPRESSION ','line_number':11316,'multiline':True]['text':' NodeTypes.JS_PROPERTY ','line_number':11323,'multiline':True]['text':' ConstantTypes.NOT_CONSTANT ','line_number':11329,'multiline':True]['text':' NodeTypes.SIMPLE_EXPRESSION ','line_number':11331,'multiline':True]['text':' ConstantTypes.CAN_STRINGIFY ','line_number':11335,'multiline':True]['text':' NodeTypes.COMPOUND_EXPRESSION ','line_number':11340,'multiline':True]['text':' NodeTypes.JS_CALL_EXPRESSION ','line_number':11347,'multiline':True]['text':' NodeTypes.JS_FUNCTION_EXPRESSION ','line_number':11355,'multiline':True]['text':' NodeTypes.JS_CONDITIONAL_EXPRESSION ','line_number':11365,'multiline':True]['text':' NodeTypes.JS_CACHE_EXPRESSION ','line_number':11375,'multiline':True]['text':' NodeTypes.JS_BLOCK_STATEMENT ','line_number':11384,'multiline':True]['text':' NodeTypes.SIMPLE_EXPRESSION ','line_number':11390,'multiline':True]['text':'*
   * Simple lexer to check if an expression is a member expression. This is
   * lax and only checks validity at the root level (i.e. does not validate exps
   * inside square brackets), but it's ok since these are only used on template
   * expressions and false positives are invalid expressions in the first place.
   ','line_number':11411,'multiline':True]['text':' remove whitespaces around . or [ first','line_number':11418,'multiline':False]['text':' MemberExpLexState.inMemberExp ','line_number':11420,'multiline':True]['text':' MemberExpLexState.inMemberExp ','line_number':11428,'multiline':True]['text':' MemberExpLexState.inBrackets ','line_number':11431,'multiline':True]['text':' MemberExpLexState.inParens ','line_number':11436,'multiline':True]['text':' MemberExpLexState.inBrackets ','line_number':11443,'multiline':True]['text':' supports such usage so we are keeping it consistent with 2.x.','line_number':12339,'multiline':False]['text':' NodeTypes.SIMPLE_EXPRESSION ','line_number':12343,'multiline':True]['text':' ConstantTypes.CAN_STRINGIFY ','line_number':12347,'multiline':True]['text':' ConstantTypes.NOT_CONSTANT ','line_number':12348,'multiline':True]['text':' NodeTypes.DIRECTIVE ','line_number':12363,'multiline':True]['text':' NodeTypes.SIMPLE_EXPRESSION ','line_number':12366,'multiline':True]['text':' Treat as non-constant by default. This can be potentially set to','line_number':12369,'multiline':False]['text':' other values by `transformExpression` to make it eligible for hoisting.','line_number':12370,'multiline':False]['text':' ConstantTypes.NOT_CONSTANT ','line_number':12371,'multiline':True]['text':' missing directive name or illegal directive name','line_number':12379,'multiline':False]['text':' ErrorCodes.X_MISSING_DIRECTIVE_NAME ','line_number':12381,'multiline':True]['text':' NodeTypes.ATTRIBUTE ','line_number':12384,'multiline':True]['text':' NodeTypes.TEXT ','line_number':12387,'multiline':True]['text':' TODO: probably bad performance','line_number':12543,'multiline':False]['text':' TextModes.RCDATA ','line_number':12551,'multiline':True]['text':' TextModes.RAWTEXT ','line_number':12552,'multiline':True]['text':' TextModes.CDATA ','line_number':12559,'multiline':True]['text':' Root node is unfortunately non-hoistable due to potential parent','line_number':12575,'multiline':False]['text':' fallthrough attributes.','line_number':12576,'multiline':False]['text':' NodeTypes.ELEMENT ','line_number':12582,'multiline':True]['text':' only plain elements & text calls are eligible for hoisting.','line_number':12591,'multiline':False]['text':' NodeTypes.ELEMENT ','line_number':12592,'multiline':True]['text':' ElementTypes.ELEMENT ','line_number':12593,'multiline':True]['text':' ConstantTypes.NOT_CONSTANT ','line_number':12595,'multiline':True]['text':' ConstantTypes.NOT_CONSTANT ','line_number':12597,'multiline':True]['text':' ConstantTypes.CAN_HOIST ','line_number':12598,'multiline':True]['text':' PatchFlags.HOISTED ','line_number':12600,'multiline':True]['text':' HOISTED ','line_number':12600,'multiline':True]['text':' node may contain dynamic children, but its props may be eligible for','line_number':12607,'multiline':False]['text':' hoisting.','line_number':12608,'multiline':False]['text':' NodeTypes.VNODE_CALL ','line_number':12610,'multiline':True]['text':' PatchFlags.NEED_PATCH ','line_number':12613,'multiline':True]['text':' PatchFlags.TEXT ','line_number':12614,'multiline':True]['text':' ConstantTypes.CAN_HOIST ','line_number':12616,'multiline':True]['text':' walk further','line_number':12628,'multiline':False]['text':' NodeTypes.ELEMENT ','line_number':12629,'multiline':True]['text':' ElementTypes.COMPONENT ','line_number':12630,'multiline':True]['text':' NodeTypes.FOR ','line_number':12639,'multiline':True]['text':' Do not hoist v-for single child because it has to be a block','line_number':12640,'multiline':False]['text':' NodeTypes.IF ','line_number':12643,'multiline':True]['text':' Do not hoist v-if single child because it has to be a block','line_number':12645,'multiline':False]['text':' all children were hoisted - the entire children array is hoistable.','line_number':12653,'multiline':False]['text':' NodeTypes.ELEMENT ','line_number':12656,'multiline':True]['text':' ElementTypes.ELEMENT ','line_number':12657,'multiline':True]['text':' NodeTypes.VNODE_CALL ','line_number':12659,'multiline':True]['text':' NodeTypes.ELEMENT ','line_number':12667,'multiline':True]['text':' ElementTypes.ELEMENT ','line_number':12668,'multiline':True]['text':' ConstantTypes.NOT_CONSTANT ','line_number':12669,'multiline':True]['text':' NodeTypes.VNODE_CALL ','line_number':12676,'multiline':True]['text':' ConstantTypes.NOT_CONSTANT ','line_number':12677,'multiline':True]['text':' ConstantTypes.NOT_CONSTANT ','line_number':12682,'multiline':True]['text':' ConstantTypes.CAN_STRINGIFY ','line_number':12686,'multiline':True]['text':' Element itself has no patch flag. However we still need to check:','line_number':12687,'multiline':False]['text':' 1. Even for a node with no patch flag, it is possible for it to contain','line_number':12688,'multiline':False]['text':' non-hoistable expressions that refers to scope variables, e.g. compiler','line_number':12689,'multiline':False]['text':' injected keys or cached event handlers. Therefore we need to always','line_number':12690,'multiline':False]['text':' check the codegenNode's props to be sure.','line_number':12691,'multiline':False]['text':' ConstantTypes.NOT_CONSTANT ','line_number':12693,'multiline':True]['text':' ConstantTypes.NOT_CONSTANT ','line_number':12694,'multiline':True]['text':' ConstantTypes.NOT_CONSTANT ','line_number':12695,'multiline':True]['text':' 2. its children.','line_number':12700,'multiline':False]['text':' ConstantTypes.NOT_CONSTANT ','line_number':12703,'multiline':True]['text':' ConstantTypes.NOT_CONSTANT ','line_number':12704,'multiline':True]['text':' ConstantTypes.NOT_CONSTANT ','line_number':12705,'multiline':True]['text':' 3. if the type is not already CAN_SKIP_PATCH which is the lowest non-0','line_number':12711,'multiline':False]['text':' type, check if any of the props can cause the type to be lowered','line_number':12712,'multiline':False]['text':' we can skip can_patch because it's guaranteed by the absence of a','line_number':12713,'multiline':False]['text':' patchFlag.','line_number':12714,'multiline':False]['text':' ConstantTypes.CAN_SKIP_PATCH ','line_number':12715,'multiline':True]['text':' NodeTypes.DIRECTIVE ','line_number':12718,'multiline':True]['text':' ConstantTypes.NOT_CONSTANT ','line_number':12720,'multiline':True]['text':' ConstantTypes.NOT_CONSTANT ','line_number':12721,'multiline':True]['text':' ConstantTypes.NOT_CONSTANT ','line_number':12722,'multiline':True]['text':' only svg/foreignObject could be block here, however if they are','line_number':12730,'multiline':False]['text':' static then they don't need to be blocks since there will be no','line_number':12731,'multiline':False]['text':' nested updates.','line_number':12732,'multiline':False]['text':' except set custom directives.','line_number':12734,'multiline':False]['text':' NodeTypes.DIRECTIVE ','line_number':12737,'multiline':True]['text':' ConstantTypes.NOT_CONSTANT ','line_number':12738,'multiline':True]['text':' ConstantTypes.NOT_CONSTANT ','line_number':12739,'multiline':True]['text':' ConstantTypes.NOT_CONSTANT ','line_number':12751,'multiline':True]['text':' ConstantTypes.NOT_CONSTANT ','line_number':12752,'multiline':True]['text':' NodeTypes.TEXT ','line_number':12754,'multiline':True]['text':' NodeTypes.COMMENT ','line_number':12755,'multiline':True]['text':' ConstantTypes.CAN_STRINGIFY ','line_number':12756,'multiline':True]['text':' NodeTypes.IF ','line_number':12757,'multiline':True]['text':' NodeTypes.FOR ','line_number':12758,'multiline':True]['text':' NodeTypes.IF_BRANCH ','line_number':12759,'multiline':True]['text':' ConstantTypes.NOT_CONSTANT ','line_number':12760,'multiline':True]['text':' NodeTypes.INTERPOLATION ','line_number':12761,'multiline':True]['text':' NodeTypes.TEXT_CALL ','line_number':12762,'multiline':True]['text':' NodeTypes.SIMPLE_EXPRESSION ','line_number':12764,'multiline':True]['text':' NodeTypes.COMPOUND_EXPRESSION ','line_number':12766,'multiline':True]['text':' ConstantTypes.CAN_STRINGIFY ','line_number':12767,'multiline':True]['text':' ConstantTypes.NOT_CONSTANT ','line_number':12774,'multiline':True]['text':' ConstantTypes.NOT_CONSTANT ','line_number':12775,'multiline':True]['text':' ConstantTypes.NOT_CONSTANT ','line_number':12783,'multiline':True]['text':' NodeTypes.JS_CALL_EXPRESSION ','line_number':12793,'multiline':True]['text':' NodeTypes.SIMPLE_EXPRESSION ','line_number':12797,'multiline':True]['text':' NodeTypes.JS_CALL_EXPRESSION ','line_number':12800,'multiline':True]['text':' in the case of nested helper call, e.g. `normalizeProps(guardReactiveProps(exp))`','line_number':12801,'multiline':False]['text':' ConstantTypes.NOT_CONSTANT ','line_number':12805,'multiline':True]['text':' ConstantTypes.CAN_STRINGIFY ','line_number':12808,'multiline':True]['text':' NodeTypes.JS_OBJECT_EXPRESSION ','line_number':12810,'multiline':True]['text':' ConstantTypes.NOT_CONSTANT ','line_number':12815,'multiline':True]['text':' NodeTypes.SIMPLE_EXPRESSION ','line_number':12822,'multiline':True]['text':' NodeTypes.JS_CALL_EXPRESSION ','line_number':12825,'multiline':True]['text':' some helper calls can be hoisted,','line_number':12826,'multiline':False]['text':' such as the `normalizeProps` generated by the compiler for pre-normalize class,','line_number':12827,'multiline':False]['text':' in this case we need to respect the ConstantType of the helper's arguments','line_number':12828,'multiline':False]['text':' ConstantTypes.NOT_CONSTANT ','line_number':12832,'multiline':True]['text':' ConstantTypes.NOT_CONSTANT ','line_number':12834,'multiline':True]['text':' NodeTypes.VNODE_CALL ','line_number':12846,'multiline':True]['text':' options','line_number':12858,'multiline':False]['text':' state','line_number':12880,'multiline':False]['text':' methods','line_number':12901,'multiline':False]['text':' istanbul ignore if ','line_number':12923,'multiline':True]['text':' istanbul ignore if ','line_number':12944,'multiline':True]['text':' current node removed','line_number':12949,'multiline':False]['text':' sibling node removed','line_number':12954,'multiline':False]['text':' ConstantTypes.CAN_HOIST ','line_number':12971,'multiline':True]['text':' finalize meta information','line_number':12990,'multiline':False]['text':' if the single child is an element, turn it into a block.','line_number':13004,'multiline':False]['text':' single element root is never hoisted so codegenNode will never be','line_number':13006,'multiline':False]['text':' SimpleExpressionNode','line_number':13007,'multiline':False]['text':' NodeTypes.VNODE_CALL ','line_number':13009,'multiline':True]['text':' - single <slot/>, IfNode, ForNode: already blocks.','line_number':13015,'multiline':False]['text':' - single text node: always patched.','line_number':13016,'multiline':False]['text':' root codegen falls through via genNode()','line_number':13017,'multiline':False]['text':' root has multiple nodes - return a fragment block.','line_number':13022,'multiline':False]['text':' PatchFlags.STABLE_FRAGMENT ','line_number':13023,'multiline':True]['text':' PatchFlags.STABLE_FRAGMENT ','line_number':13024,'multiline':True]['text':' check if the fragment actually contains a single valid child with','line_number':13025,'multiline':False]['text':' the rest being comments','line_number':13026,'multiline':False]['text':' NodeTypes.COMMENT ','line_number':13027,'multiline':True]['text':' PatchFlags.DEV_ROOT_FRAGMENT ','line_number':13028,'multiline':True]['text':' PatchFlags.DEV_ROOT_FRAGMENT ','line_number':13029,'multiline':True]['text':' ${patchFlagText} ','line_number':13031,'multiline':True]['text':' isComponent ','line_number':13031,'multiline':True]['text':' apply transform plugins','line_number':13052,'multiline':False]['text':' node was removed','line_number':13066,'multiline':False]['text':' node may have been replaced','line_number':13070,'multiline':False]['text':' NodeTypes.COMMENT ','line_number':13075,'multiline':True]['text':' inject import for the Comment symbol, which is needed for creating','line_number':13077,'multiline':False]['text':' comment nodes with `createVNode`','line_number':13078,'multiline':False]['text':' NodeTypes.INTERPOLATION ','line_number':13082,'multiline':True]['text':' no need to traverse, but we need to inject toString helper','line_number':13083,'multiline':False]['text':' for container types, further traverse downwards','line_number':13088,'multiline':False]['text':' NodeTypes.IF ','line_number':13089,'multiline':True]['text':' NodeTypes.IF_BRANCH ','line_number':13094,'multiline':True]['text':' NodeTypes.FOR ','line_number':13095,'multiline':True]['text':' NodeTypes.ELEMENT ','line_number':13096,'multiline':True]['text':' NodeTypes.ROOT ','line_number':13097,'multiline':True]['text':' exit transforms','line_number':13101,'multiline':False]['text':' NodeTypes.ELEMENT ','line_number':13113,'multiline':True]['text':' structural directive transforms are not concerned with slots','line_number':13115,'multiline':False]['text':' as they are handled separately in vSlot.ts','line_number':13116,'multiline':False]['text':' ElementTypes.TEMPLATE ','line_number':13117,'multiline':True]['text':' NodeTypes.DIRECTIVE ','line_number':13123,'multiline':True]['text':' structural directives are removed to avoid infinite recursion','line_number':13124,'multiline':False]['text':' also we remove them *before* applying so that it can further','line_number':13125,'multiline':False]['text':' traverse itself in case it moves the node around','line_number':13126,'multiline':False]['text':'#__PURE__','line_number':13139,'multiline':True]['text':' preambles','line_number':13198,'multiline':False]['text':' in setup() inline mode, the preamble is generated in a sub context','line_number':13199,'multiline':False]['text':' and returned separately.','line_number':13200,'multiline':False]['text':' enter render function','line_number':13207,'multiline':False]['text':' function mode const declarations should be inside with block','line_number':13218,'multiline':False]['text':' also they should be renamed to avoid collision with user properties','line_number':13219,'multiline':False]['text':' generate asset resolution statements','line_number':13226,'multiline':False]['text':' generate the VNode tree expression','line_number':13249,'multiline':False]['text':' SourceMapGenerator does have toJSON() method but it's not in the types','line_number':13269,'multiline':False]['text':' Generate const declaration for helpers','line_number':13276,'multiline':False]['text':' In prefix mode, we place the const declaration at top so it's done','line_number':13277,'multiline':False]['text':' only once; But if we not prefixing, we place the declaration inside the','line_number':13278,'multiline':False]['text':' with block so it doesn't incur the `in` check cost for every helper access.','line_number':13279,'multiline':False]['text':' "with" mode.','line_number':13283,'multiline':False]['text':' save Vue in a separate variable to avoid collision','line_number':13284,'multiline':False]['text':' in "with" mode, helpers are declared inside the with block to avoid','line_number':13286,'multiline':False]['text':' has check cost, but hoists are lifted out of the function - we need','line_number':13287,'multiline':False]['text':' to provide the helper here.','line_number':13288,'multiline':False]['text':' potential component implicit self-reference inferred from SFC filename','line_number':13314,'multiline':False]['text':' NodeTypes.SIMPLE_EXPRESSION ','line_number':13344,'multiline':True]['text':' NodeTypes.TEXT ','line_number':13345,'multiline':True]['text':' NodeTypes.INTERPOLATION ','line_number':13346,'multiline':True]['text':' NodeTypes.COMPOUND_EXPRESSION ','line_number':13347,'multiline':True]['text':' NodeTypes.ELEMENT ','line_number':13392,'multiline':True]['text':' NodeTypes.IF ','line_number':13393,'multiline':True]['text':' NodeTypes.FOR ','line_number':13394,'multiline':True]['text':' NodeTypes.TEXT ','line_number':13399,'multiline':True]['text':' NodeTypes.SIMPLE_EXPRESSION ','line_number':13402,'multiline':True]['text':' NodeTypes.INTERPOLATION ','line_number':13405,'multiline':True]['text':' NodeTypes.TEXT_CALL ','line_number':13408,'multiline':True]['text':' NodeTypes.COMPOUND_EXPRESSION ','line_number':13411,'multiline':True]['text':' NodeTypes.COMMENT ','line_number':13414,'multiline':True]['text':' NodeTypes.VNODE_CALL ','line_number':13417,'multiline':True]['text':' NodeTypes.JS_CALL_EXPRESSION ','line_number':13420,'multiline':True]['text':' NodeTypes.JS_OBJECT_EXPRESSION ','line_number':13423,'multiline':True]['text':' NodeTypes.JS_ARRAY_EXPRESSION ','line_number':13426,'multiline':True]['text':' NodeTypes.JS_FUNCTION_EXPRESSION ','line_number':13429,'multiline':True]['text':' NodeTypes.JS_CONDITIONAL_EXPRESSION ','line_number':13432,'multiline':True]['text':' NodeTypes.JS_CACHE_EXPRESSION ','line_number':13435,'multiline':True]['text':' NodeTypes.JS_BLOCK_STATEMENT ','line_number':13438,'multiline':True]['text':' SSR only types','line_number':13441,'multiline':False]['text':' NodeTypes.JS_TEMPLATE_LITERAL ','line_number':13442,'multiline':True]['text':' NodeTypes.JS_IF_STATEMENT ','line_number':13444,'multiline':True]['text':' NodeTypes.JS_ASSIGNMENT_EXPRESSION ','line_number':13446,'multiline':True]['text':' NodeTypes.JS_SEQUENCE_EXPRESSION ','line_number':13448,'multiline':True]['text':' NodeTypes.JS_RETURN_STATEMENT ','line_number':13450,'multiline':True]['text':' istanbul ignore next ','line_number':13452,'multiline':True]['text':' NodeTypes.IF_BRANCH ','line_number':13453,'multiline':True]['text':' noop','line_number':13454,'multiline':False]['text':' make sure we exhaust all possible types','line_number':13459,'multiline':False]['text':' NodeTypes.COMPOUND_EXPRESSION ','line_number':13493,'multiline':True]['text':' only quote keys if necessary','line_number':13499,'multiline':False]['text':' JavaScript','line_number':13551,'multiline':False]['text':' NodeTypes.SIMPLE_EXPRESSION ','line_number':13570,'multiline':True]['text':' key','line_number':13575,'multiline':False]['text':' value','line_number':13578,'multiline':False]['text':' will only reach this if it's multilines','line_number':13581,'multiline':False]['text':' wrap slot functions with owner context','line_number':13596,'multiline':False]['text':' NodeTypes.SIMPLE_EXPRESSION ','line_number':13636,'multiline':True]['text':' NodeTypes.JS_CONDITIONAL_EXPRESSION ','line_number':13656,'multiline':True]['text':' without newline ','line_number':13664,'multiline':True]['text':' these keywords should not appear inside expressions, but operators like','line_number':13687,'multiline':False]['text':' 'typeof', 'instanceof', and 'in' are allowed','line_number':13688,'multiline':False]['text':' strip strings in expressions','line_number':13696,'multiline':False]