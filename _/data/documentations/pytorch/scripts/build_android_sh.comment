['text':'!/bin/bash','line_number':1,'multiline':False]['text':'#############################################################################','line_number':2,'multiline':False]['text':' Example command to build the android target.','line_number':3,'multiline':False]['text':'#############################################################################','line_number':4,'multiline':False]['text':'','line_number':5,'multiline':False]['text':' This script shows how one can build a Caffe2 binary for the Android platform','line_number':6,'multiline':False]['text':' using android-cmake. A few notes:','line_number':7,'multiline':False]['text':'','line_number':8,'multiline':False]['text':' (1) This build also does a host build for protobuf. You will need autoconf','line_number':9,'multiline':False]['text':'     to carry out this. If autoconf is not possible, you will need to provide','line_number':10,'multiline':False]['text':'     a pre-built protoc binary that is the same version as the protobuf','line_number':11,'multiline':False]['text':'     version under third_party.','line_number':12,'multiline':False]['text':'     If you are building on Mac, you might need to install autotool and','line_number':13,'multiline':False]['text':'     libtool. The easiest way is via homebrew:','line_number':14,'multiline':False]['text':'         brew install automake','line_number':15,'multiline':False]['text':'         brew install libtool','line_number':16,'multiline':False]['text':' (2) You will need to have android ndk installed. The current script assumes','line_number':17,'multiline':False]['text':'     that you set ANDROID_NDK to the location of ndk.','line_number':18,'multiline':False]['text':' (3) The toolchain and the build target platform can be specified with the','line_number':19,'multiline':False]['text':'     cmake arguments below. For more details, check out android-cmake's doc.','line_number':20,'multiline':False]['text':' Android specific flags','line_number':24,'multiline':False]['text':' Build PyTorch mobile','line_number':62,'multiline':False]['text':' custom build with selected ops','line_number':67,'multiline':False]['text':' If Ninja is installed, prefer it to Make','line_number':78,'multiline':False]['text':' Use android-cmake to build Android project from CMake.','line_number':83,'multiline':False]['text':' Don't build artifacts we don't need','line_number':93,'multiline':False]['text':' If there exists env variable and it equals to 0, build full jit interpreter.','line_number':97,'multiline':False]['text':' Default behavior is to build lite interpreter','line_number':98,'multiline':False]['text':' cmd:  BUILD_LITE_INTERPRETER=0 ./scripts/build_android.sh','line_number':99,'multiline':False]['text':' Disable unused dependencies','line_number':126,'multiline':False]['text':' Only toggle if VERBOSE=1','line_number':135,'multiline':False]['text':' Android specific flags','line_number':140,'multiline':False]['text':' Use-specified CMake arguments go last to allow overridding defaults','line_number':162,'multiline':False]['text':' Patch pocketfft (as Android does not have aligned_alloc even if compiled with c++17','line_number':165,'multiline':False]['text':' Now, actually build the Android target.','line_number':170,'multiline':False]['text':' Cross-platform parallel build','line_number':180,'multiline':False]