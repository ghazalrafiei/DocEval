['text':' namespace','line_number':9,'multiline':False]['text':' NOLINTNEXTLINE(cppcoreguidelines-init-variables)','line_number':15,'multiline':False]['text':' If allocation fails, try freeing cached available blocks.','line_number':20,'multiline':False]['text':' For now free all available cached blocks.','line_number':21,'multiline':False]['text':' Furthermore to consider: If we ever come here running out of memory','line_number':23,'multiline':False]['text':' perhaps it is best to disable caching, since this is likely to happen','line_number':24,'multiline':False]['text':' again.','line_number':25,'multiline':False]['text':' Try again.','line_number':26,'multiline':False]['text':' NB: since we are not really freeing the memory','line_number':43,'multiline':False]['text':' the cases such as quantization code freeing original weights','line_number':44,'multiline':False]['text':' on mobile, will not quite work, as we likely will hold','line_number':45,'multiline':False]['text':' onto that memory.','line_number':46,'multiline':False]['text':' NB: We can also enable max memory cached for better memory','line_number':47,'multiline':False]['text':' management such that free will actually free the memory if','line_number':48,'multiline':False]['text':' we are nearing or above the watermark.','line_number':49,'multiline':False]['text':' If this allocation was done before caching allocator was enabled','line_number':51,'multiline':False]['text':' then free regularly','line_number':52,'multiline':False]['text':' This function captures the case when the allocated memory','line_number':63,'multiline':False]['text':' is being freed outside the scope of this allocator.','line_number':64,'multiline':False]['text':' At the moment only way to capture this is to have the allocator,','line_number':65,'multiline':False]['text':' that uses this CachingAllocator as the backing allocator,','line_number':66,'multiline':False]['text':' call this function explicitly upon freeing memory while','line_number':67,'multiline':False]['text':' outside the scope of caching allocator.','line_number':68,'multiline':False]['text':' If the memory is freed in some other way, then we will likely','line_number':69,'multiline':False]['text':' have undefined behavior or page fault. But this can be','line_number':70,'multiline':False]['text':' the case without caching allocator as well.','line_number':71,'multiline':False]['text':' When cached memory is return to OS, it must be removed','line_number':83,'multiline':False]['text':' from allocation_map.','line_number':84,'multiline':False]['text':' namespace c10','line_number':109,'multiline':False]