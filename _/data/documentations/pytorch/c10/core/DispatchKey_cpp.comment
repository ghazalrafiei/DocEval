['text':' Note [Out-of-tree vmap+grad prototype]','line_number':174,'multiline':False]['text':' The following keys are used in the implementation of the out-of-tree','line_number':175,'multiline':False]['text':' composable functions transforms (vmap+grad) prototype that lives at','line_number':176,'multiline':False]['text':' https://github.com/zou3519/functorch','line_number':177,'multiline':False]['text':' We plan on eventually upstreaming the prototype into core, at which','line_number':178,'multiline':False]['text':' point it will have a different design that should use fewer keys.','line_number':179,'multiline':False]['text':' Aliases','line_number':195,'multiline':False]['text':' Per-backend dispatch keys','line_number':210,'multiline':False]['text':' We want this to return an autograd key. We're relying on the fact that','line_number':252,'multiline':False]['text':' getAutogradRelatedKeySetFromBackend returns an autograd key +','line_number':253,'multiline':False]['text':' ADInplaceOrView, and autograd has higher precedence. The core mapping from','line_number':254,'multiline':False]['text':' backend -> autograd key lives in `getAutogradRelatedKeySetFromBackend`','line_number':255,'multiline':False]['text':' instead of here for performance. `getAutogradRelatedKeySetFromBackend` is a','line_number':256,'multiline':False]['text':' hotpath function, and we want to make sure that it doesn't have to','line_number':257,'multiline':False]['text':' construct any DispatchKeySets at runtime.','line_number':258,'multiline':False]['text':' namespace c10','line_number':379,'multiline':False]