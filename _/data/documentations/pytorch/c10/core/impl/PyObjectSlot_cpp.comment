['text':'has_pyobj_slot','line_number':17,'multiline':True]['text':' NB: this destructor can only be entered when there are no','line_number':18,'multiline':False]['text':' references to this C++ object (obviously), NOR any references','line_number':19,'multiline':False]['text':' to the PyObject (if there are references to the PyObject,','line_number':20,'multiline':False]['text':' then the PyObject holds an owning reference to the tensor).','line_number':21,'multiline':False]['text':' So it is OK to clear pyobj_ here as it is impossible for it to','line_number':22,'multiline':False]['text':' be used again (modulo weak reference races)','line_number':23,'multiline':False]['text':' for safety','line_number':24,'multiline':False]['text':' NOLINTNEXTLINE(performance-no-int-to-ptr)','line_number':33,'multiline':False]['text':'ignore_hermetic_tls=','line_number':59,'multiline':True]['text':' NOLINTNEXTLINE(performance-no-int-to-ptr)','line_number':64,'multiline':False]['text':' NOLINTNEXTLINE(performance-no-int-to-ptr)','line_number':69,'multiline':False]['text':' namespace impl','line_number':74,'multiline':False]['text':' namespace c10','line_number':75,'multiline':False]