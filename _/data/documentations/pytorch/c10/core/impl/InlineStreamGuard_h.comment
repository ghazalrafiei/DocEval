['text':'*
 * A StreamGuard is an RAII class that changes the current device
 * to the device corresponding to some stream, and changes the
 * default stream on that device to be this stream.
 *
 * InlineStreamGuard is a helper class for implementing StreamGuards.
 * See InlineDeviceGuard for guidance on how to use this class.
 ','line_number':10,'multiline':True]['text':'/ No default constructor, see Note [Omitted default constructor from RAII]','line_number':21,'multiline':False]['text':'/ Set the current device to the device associated with the passed stream,','line_number':24,'multiline':False]['text':'/ and set the current stream on that device to the passed stream.','line_number':25,'multiline':False]['text':'/ This constructor exists purely for testing','line_number':33,'multiline':False]['text':'/ Copy is disallowed','line_number':48,'multiline':False]['text':'/ Move is disallowed, as StreamGuard does not have an uninitialized state,','line_number':52,'multiline':False]['text':'/ which is required for moves on types with nontrivial destructors.','line_number':53,'multiline':False]['text':'/ Resets the currently set stream to the original stream and','line_number':61,'multiline':False]['text':'/ the currently set device to the original device.  Then,','line_number':62,'multiline':False]['text':'/ set the current device to the device associated with the passed stream,','line_number':63,'multiline':False]['text':'/ and set the current stream on that device to the passed stream.','line_number':64,'multiline':False]['text':'/','line_number':65,'multiline':False]['text':'/ NOTE: this implementation may skip some stream/device setting if','line_number':66,'multiline':False]['text':'/ it can prove that it is unnecessary.','line_number':67,'multiline':False]['text':'/','line_number':68,'multiline':False]['text':'/ WARNING: reset_stream does NOT preserve previously set streams on','line_number':69,'multiline':False]['text':'/ different devices.  If you need to set streams on multiple devices','line_number':70,'multiline':False]['text':'/ use MultiStreamGuard instead.','line_number':71,'multiline':False]['text':' TODO: make a version that takes an impl argument.  Unfortunately,','line_number':73,'multiline':False]['text':' that will require SFINAE because impl is only valid for the','line_number':74,'multiline':False]['text':' VirtualGuardImpl specialization.','line_number':75,'multiline':False]['text':' Destruct and reconstruct the StreamGuard in-place','line_number':80,'multiline':False]['text':' It's not clear if set_device should also reset the current stream','line_number':88,'multiline':False]['text':' if the device is unchanged; therefore, we don't provide it.','line_number':89,'multiline':False]['text':' The situation is somewhat clearer with reset_device, but it's still','line_number':90,'multiline':False]['text':' a pretty weird thing to do, so haven't added this either.','line_number':91,'multiline':False]['text':'/ Returns the stream of the original device prior to this guard.  Subtly,','line_number':93,'multiline':False]['text':'/ the stream returned here is the original stream of the *original*','line_number':94,'multiline':False]['text':'/ device; i.e., it's the stream that your computation *would* have','line_number':95,'multiline':False]['text':'/ been put on, if it hadn't been for this meddling stream guard.','line_number':96,'multiline':False]['text':'/ This is usually what you want.','line_number':97,'multiline':False]['text':'/ Returns the most recent stream that was set using this device guard,','line_number':102,'multiline':False]['text':'/ either from construction, or via set_stream.','line_number':103,'multiline':False]['text':'/ Returns the most recent device that was set using this device guard,','line_number':108,'multiline':False]['text':'/ either from construction, or via set_device/reset_device/set_index.','line_number':109,'multiline':False]['text':'/ Returns the device that was set at the most recent reset_stream(),','line_number':114,'multiline':False]['text':'/ or otherwise the device at construction time.','line_number':115,'multiline':False]['text':' what the user probably cares about','line_number':122,'multiline':False]['text':' what we need to restore','line_number':123,'multiline':False]['text':'*
 * An OptionalStreamGuard is an RAII class that sets a device to some value on
 * initialization, and resets the device to its original value on destruction.
 * See InlineOptionalDeviceGuard for more guidance on how to use this class.
 ','line_number':127,'multiline':True]['text':'/ Creates an uninitialized stream guard.','line_number':135,'multiline':False]['text':' See Note [Explicit initialization of optional fields]','line_number':137,'multiline':False]['text':'/ Set the current device to the device associated with the passed stream,','line_number':140,'multiline':False]['text':'/ and set the current stream on that device to the passed stream,','line_number':141,'multiline':False]['text':'/ if the passed stream is not nullopt.','line_number':142,'multiline':False]['text':'/ All constructors of StreamGuard are valid for OptionalStreamGuard','line_number':149,'multiline':False]['text':' See Note [Move construction for RAII guards is tricky]','line_number':154,'multiline':False]['text':' See Note [Move assignment for RAII guards is tricky]','line_number':157,'multiline':False]['text':'/ Resets the currently set stream to the original stream and','line_number':161,'multiline':False]['text':'/ the currently set device to the original device.  Then,','line_number':162,'multiline':False]['text':'/ set the current device to the device associated with the passed stream,','line_number':163,'multiline':False]['text':'/ and set the current stream on that device to the passed stream.','line_number':164,'multiline':False]['text':'/ Initializes the OptionalStreamGuard if it was not previously initialized.','line_number':165,'multiline':False]['text':'/ Returns the stream that was set at the time the guard was most recently','line_number':174,'multiline':False]['text':'/ initialized, or nullopt if the guard is uninitialized.','line_number':175,'multiline':False]['text':'/ Returns the most recent stream that was set using this stream guard,','line_number':181,'multiline':False]['text':'/ either from construction, or via reset_stream, if the guard is','line_number':182,'multiline':False]['text':'/ initialized, or nullopt if the guard is uninitialized.','line_number':183,'multiline':False]['text':'/ Restore the original device and stream, resetting this guard to','line_number':189,'multiline':False]['text':'/ uninitialized state.','line_number':190,'multiline':False]['text':'/ Calls `set_stream` on each of the streams in the list.','line_number':202,'multiline':False]['text':'/ This may be useful if you need to set different streams','line_number':203,'multiline':False]['text':'/ for different devices.','line_number':204,'multiline':False]['text':'/ Copy is disallowed','line_number':215,'multiline':False]['text':'/ Move is disallowed, as StreamGuard does not have an uninitialized state,','line_number':219,'multiline':False]['text':'/ which is required for moves on types with nontrivial destructors.','line_number':220,'multiline':False]['text':'/ The original streams that were active on all devices.','line_number':236,'multiline':False]['text':' namespace impl','line_number':256,'multiline':False]['text':' namespace c10','line_number':257,'multiline':False]