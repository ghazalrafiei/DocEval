['text':' how much percent to grow the dataset when needed','line_number':25,'multiline':False]['text':' namespace','line_number':28,'multiline':False]['text':' populate field vector and split field names','line_number':31,'multiline':False]['text':' populate lengthFields','line_number':42,'multiline':False]['text':' find length-field with maximum prefix matching for each field','line_number':50,'multiline':False]['text':' by default, we are matching against the root domain','line_number':52,'multiline':False]['text':' a length field can't have itself as its length field','line_number':57,'multiline':False]['text':' check whether this lengthField is a prefix for this field name','line_number':63,'multiline':False]['text':' check that fields are topologically sorted','line_number':76,'multiline':False]['text':' (no length field depends on a length defined afterwards)','line_number':77,'multiline':False]['text':' first index, top level','line_number':106,'multiline':False]['text':' child indices','line_number':115,'multiline':False]['text':' NOLINTNEXTLINE(clang-diagnostic-sign-compare)','line_number':142,'multiline':False]['text':' The invariant we hold is that we are always one step ahead','line_number':151,'multiline':False]['text':' NOLINTNEXTLINE(clang-diagnostic-sign-compare)','line_number':175,'multiline':False]['text':' NOLINTNEXTLINE(clang-diagnostic-sign-compare)','line_number':188,'multiline':False]['text':' NOLINTNEXTLINE(modernize-make-unique)','line_number':207,'multiline':False]['text':' NOLINTNEXTLINE(clang-diagnostic-sign-compare)','line_number':260,'multiline':False]['text':' gather length data','line_number':267,'multiline':False]['text':' gather size limits','line_number':272,'multiline':False]['text':' advance to the end','line_number':296,'multiline':False]['text':' There should be one input per field','line_number':320,'multiline':False]['text':' src ','line_number':343,'multiline':True]['text':' dst ','line_number':344,'multiline':True]['text':' src ','line_number':361,'multiline':True]['text':' dst ','line_number':362,'multiline':True]['text':' NOLINTNEXTLINE(clang-diagnostic-sign-compare)','line_number':393,'multiline':False]['text':' input contains a single tensor','line_number':405,'multiline':False]['text':' Precomputer the output sizes to avoid resizing','line_number':414,'multiline':False]['text':' inputs contains a single shared_ptr of vector<vector<caffe2::TensorCPU>>','line_number':429,'multiline':False]['text':' NOLINTNEXTLINE(clang-diagnostic-sign-compare)','line_number':431,'multiline':False]['text':' NOLINTNEXTLINE(clang-diagnostic-sign-compare)','line_number':433,'multiline':False]['text':' Checks to ensure that dimensions/sizes match','line_number':437,'multiline':False]['text':' We look from first dimension, because we concat on the first.','line_number':440,'multiline':False]['text':' Resize to the final output size','line_number':449,'multiline':False]['text':' NOLINTNEXTLINE(clang-diagnostic-sign-compare)','line_number':456,'multiline':False]['text':' src ','line_number':464,'multiline':True]['text':' dst ','line_number':465,'multiline':True]['text':' NOLINTNEXTLINE(clang-diagnostic-sign-compare)','line_number':488,'multiline':False]['text':' NOLINTNEXTLINE(clang-diagnostic-sign-compare)','line_number':502,'multiline':False]['text':' NOLINTNEXTLINE(clang-diagnostic-sign-compare)','line_number':526,'multiline':False]['text':' gather length data','line_number':534,'multiline':False]['text':' NOLINTNEXTLINE(clang-diagnostic-sign-compare)','line_number':536,'multiline':False]['text':' gather size limits','line_number':545,'multiline':False]['text':' NOLINTNEXTLINE(clang-diagnostic-sign-compare)','line_number':547,'multiline':False]['text':' advance cursor','line_number':553,'multiline':False]['text':' if we enforce batch_size but don't have enough rows left to','line_number':562,'multiline':False]['text':' complete a full batch, return empty for all columns.','line_number':563,'multiline':False]['text':' This signals end of dataset to the caller.','line_number':564,'multiline':False]['text':' gather data','line_number':568,'multiline':False]['text':' NOLINTNEXTLINE(clang-diagnostic-sign-compare)','line_number':570,'multiline':False]['text':' create the tensor','line_number':583,'multiline':False]['text':' NOLINTNEXTLINE(clang-diagnostic-sign-compare)','line_number':603,'multiline':False]['text':' gather length data','line_number':612,'multiline':False]['text':' NOLINTNEXTLINE(clang-diagnostic-sign-compare)','line_number':614,'multiline':False]['text':' gather size limits','line_number':623,'multiline':False]['text':' NOLINTNEXTLINE(clang-diagnostic-sign-compare)','line_number':625,'multiline':False]['text':' advance cursor','line_number':634,'multiline':False]['text':' write output','line_number':638,'multiline':False]['text':' reSet after getting meta info','line_number':643,'multiline':False]['text':' NOLINTNEXTLINE(clang-diagnostic-sign-compare)','line_number':661,'multiline':False]['text':' NOLINTNEXTLINE(cppcoreguidelines-init-variables)','line_number':665,'multiline':False]['text':' adjust shuffle_size_ if it is too large','line_number':676,'multiline':False]['text':' must sort by a field at the root level','line_number':692,'multiline':False]['text':' NOLINTNEXTLINE(clang-diagnostic-sign-compare)','line_number':749,'multiline':False]['text':' gather data','line_number':753,'multiline':False]['text':' NOLINTNEXTLINE(cppcoreguidelines-init-variables)','line_number':755,'multiline':False]['text':' if we want to enforce batch size but we dont have a complete','line_number':761,'multiline':False]['text':' batch, skip the last rows.','line_number':762,'multiline':False]['text':' NOLINTNEXTLINE(clang-diagnostic-sign-compare)','line_number':773,'multiline':False]['text':' accumulate over the batch','line_number':791,'multiline':False]['text':' reSet','line_number':794,'multiline':False]['text':' NOLINTNEXTLINE(cppcoreguidelines-narrowing-conversions,bugprone-narrowing-conversions)','line_number':801,'multiline':False]['text':' copy data','line_number':817,'multiline':False]['text':' reSet','line_number':824,'multiline':False]['text':' 1: checks','line_number':880,'multiline':False]['text':' 2: copies','line_number':899,'multiline':False]['text':' 32-bit should be enough here','line_number':943,'multiline':False]['text':' NOLINTNEXTLINE(clang-diagnostic-sign-compare)','line_number':968,'multiline':False]['text':' the tensor shapes are the same except for the first dimension','line_number':970,'multiline':False]['text':' NOLINTNEXTLINE(cppcoreguidelines-pro-type-member-init)','line_number':997,'multiline':False]['text':' append','line_number':1013,'multiline':False]['text':' uniform between [0, numVisited_]','line_number':1016,'multiline':False]['text':' discard','line_number':1020,'multiline':False]['text':' TENSOR_VECTOR_IN is enforced inplace with TENSOR_VECTOR_OUT','line_number':1026,'multiline':False]['text':' NOLINTNEXTLINE(clang-diagnostic-sign-compare)','line_number':1031,'multiline':False]['text':' discard','line_number':1042,'multiline':False]['text':' NOLINTNEXTLINE(clang-diagnostic-sign-compare)','line_number':1044,'multiline':False]['text':' append','line_number':1046,'multiline':False]['text':' sync copy','line_number':1051,'multiline':False]['text':' replace','line_number':1053,'multiline':False]['text':' sync copy','line_number':1054,'multiline':False]['text':' number of tensors to collect','line_number':1063,'multiline':False]['text':' number of tensors visited','line_number':1065,'multiline':False]['text':' NOLINTNEXTLINE(cppcoreguidelines-narrowing-conversions,bugprone-narrowing-conversions)','line_number':1083,'multiline':False]['text':' we already satisfy the condition','line_number':1086,'multiline':False]['text':' advance desired number of records','line_number':1089,'multiline':False]['text':' trim each column to the offset','line_number':1093,'multiline':False]['text':' NOLINTNEXTLINE(clang-diagnostic-sign-compare)','line_number':1094,'multiline':False]['text':'github.com/pytorch/pytorch/blob/main/caffe2/operators/dataset_ops.cc','line_number':1330,'multiline':False]['text':' NOLINTNEXTLINE(modernize-use-equals-default)','line_number':1517,'multiline':False]['text':' NOLINTNEXTLINE(modernize-use-equals-default)','line_number':1519,'multiline':False]['text':' serialize offsets as a tensor','line_number':1532,'multiline':False]['text':' serialize field names in the content','line_number':1548,'multiline':False]['text':' Deserialize the field names','line_number':1562,'multiline':False]['text':' NOLINTNEXTLINE(modernize-make-unique)','line_number':1577,'multiline':False]['text':' Deserialize the offset vector when it is not empty. The proto.tensor()','line_number':1580,'multiline':False]['text':' function will return a TensorProto associated with offset vector. The','line_number':1581,'multiline':False]['text':' offset vector contains fields of type int64_t, and we verify it is not','line_number':1582,'multiline':False]['text':' empty before calling the deserializer.','line_number':1583,'multiline':False]['text':' namespace','line_number':1600,'multiline':False]['text':' This is dummy serialize that doesn't save anything. If saving the content
  is desired in future use case, you can change this serializer. Note: special
  care need to be taken for the parameter initialization of
  LastNWindowCollectorOp and ReservoirSamplingOp if this serializer actually
  saves the content.
  ','line_number':1607,'multiline':True]['text':' unused ','line_number':1622,'multiline':True]['text':' This is dummy deserialize which creates a nullptr
   ','line_number':1624,'multiline':True]['text':' namespace dataset_ops','line_number':1637,'multiline':False]['text':' namespace caffe2','line_number':1638,'multiline':False]