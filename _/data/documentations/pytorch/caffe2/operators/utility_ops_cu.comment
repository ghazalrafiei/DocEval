['text':' Note: we have no need to do early return, since only if this fails','line_number':48,'multiline':False]['text':' will we not need to inspect all elements. No need to optimize the','line_number':49,'multiline':False]['text':' case that will fail.','line_number':50,'multiline':False]['text':' Note: we must synchronize here so we can inspect the result','line_number':87,'multiline':False]['text':' Print out diagnostic info if we have a NaN or inf','line_number':90,'multiline':False]['text':' Hack to cause allocation happen here, so it won't happen','line_number':98,'multiline':False]['text':' when we do CopyFrom. We need the mutex then because host->gpu','line_number':99,'multiline':False]['text':' copies seem to possibly lock with NCCL.','line_number':100,'multiline':False]['text':' sync copy','line_number':105,'multiline':False]['text':' This op should act as an identity matrix if we don't find any NaNs/infs.','line_number':125,'multiline':False]['text':' Copy over the data if we are not doing this in-place.','line_number':126,'multiline':False]['text':'async','line_number':128,'multiline':True]['text':'*
 * @brief Update slices of Y in-place with a batch of weighted X's.
 * Y[idx] = alpha[b] * X[b][i] + Y[idx]
 * i=0,...,N-1
 * b=0,...,B-1
 * idx=Indices[i]
 ','line_number':135,'multiline':True]['text':' This implementation requires that the first weight is 1.0','line_number':153,'multiline':False]['text':' this kernel is a custom version of AxpySliceKernel','line_number':168,'multiline':False]['text':' to be used when there is only one weighted X to update','line_number':169,'multiline':False]['text':' slice of Y.','line_number':170,'multiline':False]['text':' This implementation requires that the first weight is 1.0','line_number':181,'multiline':False]['text':' In order to have all device pointers of x_i (and weight_i similarly)','line_number':223,'multiline':False]['text':' consecutively in device memory, copy pointers to a host vector and then','line_number':224,'multiline':False]['text':' copy back into a device array.','line_number':225,'multiline':False]['text':' when only one input exists to update data buffer,','line_number':262,'multiline':False]['text':' avoid copying pointers to device array to prevent','line_number':263,'multiline':False]['text':' copy overhead','line_number':264,'multiline':False]['text':' namespace','line_number':310,'multiline':False]['text':' namespace caffe2','line_number':359,'multiline':False]