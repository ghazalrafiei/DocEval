['text':'*
 * Copyright (c) 2016-present, Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ','line_number':1,'multiline':True]['text':' Maybe cuda 1D kernel?','line_number':42,'multiline':False]['text':' namespace','line_number':49,'multiline':False]['text':' use dim32 to enforce that it's fine to have remapping of type int','line_number':55,'multiline':False]['text':' if the input is empty, we have nothing to do, not even launch kernel.','line_number':67,'multiline':False]['text':' auto* uniqueTensor = ','line_number':68,'multiline':True]['text':' Create two vectors of {0, 1, ..., N-1} on CUDA device','line_number':77,'multiline':False]['text':' Sort the input along with order vector. So now we know where each element','line_number':88,'multiline':False]['text':' is permutated to. For example:','line_number':89,'multiline':False]['text':'    input1 = 1,3,5,1,5,7,9','line_number':90,'multiline':False]['text':'    order1 = 0,1,2,3,4,5,6','line_number':91,'multiline':False]['text':' Now we have:','line_number':92,'multiline':False]['text':'    output = 1,1,3,5,5,7,9','line_number':93,'multiline':False]['text':'    order1 = 0,3,1,2,4,5,6','line_number':94,'multiline':False]['text':' Use consequent unique op to get another order_buffer','line_number':101,'multiline':False]['text':'    input2 = 1,1,3,5,5,7,9','line_number':102,'multiline':False]['text':'    order2 = 0,1,2,3,4,5,6','line_number':103,'multiline':False]['text':' Now we have:','line_number':104,'multiline':False]['text':'    output = 1,3,5,7,9','line_number':105,'multiline':False]['text':'    order2 = 0,2,3,5,6','line_number':106,'multiline':False]['text':' Compute the remapping. For example, for the number 1, if we look at','line_number':118,'multiline':False]['text':' order2[0] and order2[1], we know that input2[0:2) are all 1. They are all','line_number':119,'multiline':False]['text':' remapped to 0 in final input. And from order1, we know where they come','line_number':120,'multiline':False]['text':' from. The rest is easy.','line_number':121,'multiline':False]['text':' record remap','line_number':123,'multiline':False]['text':' THRUST_VERSION >= 100800','line_number':137,'multiline':False]['text':' namespace caffe2','line_number':138,'multiline':False]