['text':' A sub tensor view','line_number':16,'multiline':False]['text':' TODO: Remove???','line_number':17,'multiline':False]['text':' Generate a list of bounding box shapes for each pixel based on predefined','line_number':47,'multiline':False]['text':'     bounding box shapes 'anchors'.','line_number':48,'multiline':False]['text':' anchors: predefined anchors, size(A, 4)','line_number':49,'multiline':False]['text':' Return: all_anchors_vec: (H * W, A * 4)','line_number':50,'multiline':False]['text':' Need to reshape to (H * W * A, 4) to match the format in python','line_number':51,'multiline':False]['text':' Like ComputeAllAnchors, but instead of computing anchors for every single','line_number':58,'multiline':False]['text':' spatial location, only computes anchors for the already sorted and filtered','line_number':59,'multiline':False]['text':' positions after NMS is applied to avoid unnecessary computation.','line_number':60,'multiline':False]['text':' `order` is a raveled array of sorted indices in (A, H, W) format.','line_number':61,'multiline':False]['text':' namespace utils','line_number':69,'multiline':False]['text':' C++ implementation of GenerateProposalsOp','line_number':71,'multiline':False]['text':' Generate bounding box proposals for Faster RCNN. The proposals are generated','line_number':72,'multiline':False]['text':'     for a list of images based on image score 'score', bounding box','line_number':73,'multiline':False]['text':'     regression result 'deltas' as well as predefined bounding box shapes','line_number':74,'multiline':False]['text':'     'anchors'. Greedy non-maximum suppression is applied to generate the','line_number':75,'multiline':False]['text':'     final bounding boxes.','line_number':76,'multiline':False]['text':' Reference: facebookresearch/Detectron/detectron/ops/generate_proposals.py','line_number':77,'multiline':False]['text':' Generate bounding box proposals for a given image','line_number':110,'multiline':False]['text':' im_info: [height, width, im_scale]','line_number':111,'multiline':False]['text':' all_anchors: (H * W * A, 4)','line_number':112,'multiline':False]['text':' bbox_deltas_tensor: (4 * A, H, W)','line_number':113,'multiline':False]['text':' scores_tensor: (A, H, W)','line_number':114,'multiline':False]['text':' out_boxes: (n, 5)','line_number':115,'multiline':False]['text':' out_probs: n','line_number':116,'multiline':False]['text':' spatial_scale_ must be declared before feat_stride_','line_number':126,'multiline':False]['text':' RPN_PRE_NMS_TOP_N','line_number':130,'multiline':False]['text':' RPN_POST_NMS_TOP_N','line_number':132,'multiline':False]['text':' RPN_NMS_THRESH','line_number':134,'multiline':False]['text':' RPN_MIN_SIZE','line_number':136,'multiline':False]['text':' If set, for rotated boxes in RRPN, output angles are normalized to be','line_number':138,'multiline':False]['text':' within [angle_bound_lo, angle_bound_hi].','line_number':139,'multiline':False]['text':' For RRPN, clip almost horizontal boxes within this threshold of','line_number':143,'multiline':False]['text':' tolerance for backward compatibility. Set to negative value for','line_number':144,'multiline':False]['text':' no clipping.','line_number':145,'multiline':False]['text':' The infamous "+ 1" for box width and height dating back to the DPM days','line_number':147,'multiline':False]['text':' Scratch space required by the CUDA version','line_number':150,'multiline':False]['text':' CUB buffers','line_number':151,'multiline':False]['text':' prenms proposals (raw proposals minus empty boxes)','line_number':161,'multiline':False]['text':' Tensors used by NMS','line_number':169,'multiline':False]['text':' Buffer for output','line_number':173,'multiline':False]['text':' namespace caffe2','line_number':178,'multiline':False]['text':' CAFFE2_OPERATORS_GENERATE_PROPOSALS_OP_H_','line_number':180,'multiline':False]