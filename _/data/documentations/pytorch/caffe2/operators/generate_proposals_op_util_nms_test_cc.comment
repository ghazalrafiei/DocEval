['text':' ground truth generated based on detection.caffe2/lib/nms/py_cpu_nms.py','line_number':16,'multiline':False]['text':' test utils::nms_cpu without indices input','line_number':20,'multiline':False]['text':' legacy_plus_one ','line_number':25,'multiline':True]['text':' test utils::nms_cpu with indices','line_number':29,'multiline':False]['text':' topN ','line_number':42,'multiline':True]['text':' legacy_plus_one ','line_number':43,'multiline':True]['text':' test utils::nms_cpu with topN','line_number':47,'multiline':False]['text':' legacy_plus_one ','line_number':57,'multiline':True]['text':' legacy_plus_one ','line_number':110,'multiline':True]['text':' Ground truth generated based on','line_number':134,'multiline':False]['text':'   detectron/lib/utils/cython_nms.pyx','line_number':135,'multiline':False]['text':' Explicitly use colmajor order to match scores','line_number':138,'multiline':False]['text':' Linear, overlap_thresh=0.1','line_number':140,'multiline':False]['text':' Linear, overlap_thresh=0.3','line_number':143,'multiline':False]['text':' Gaussian, overlap_thresh=0.1','line_number':146,'multiline':False]['text':' Gaussian, overlap_thresh=0.3','line_number':149,'multiline':False]['text':' topN ','line_number':167,'multiline':True]['text':' legacy_plus_one ','line_number':168,'multiline':True]['text':' Test with topN','line_number':175,'multiline':False]['text':' legacy_plus_one ','line_number':186,'multiline':True]['text':' Test with filtered indices','line_number':191,'multiline':False]['text':' topN ','line_number':202,'multiline':True]['text':' legacy_plus_one ','line_number':203,'multiline':True]['text':' Test with high score_thresh','line_number':212,'multiline':False]['text':' topN ','line_number':222,'multiline':True]['text':' legacy_plus_one ','line_number':223,'multiline':True]['text':' Same inputs as TestNMS, but in RRPN format with angle 0 for testing','line_number':238,'multiline':False]['text':' nms_cpu_rotated','line_number':239,'multiline':False]['text':' ground truth generated based on detection.caffe2/lib/nms/py_cpu_nms.py','line_number':245,'multiline':False]['text':' test utils::nms_cpu without indices input.','line_number':249,'multiline':False]['text':' Add additional dim for angle and convert from','line_number':250,'multiline':False]['text':' [x1, y1, x2, y1] to [ctr_x, ctr_y, w, h] format.','line_number':251,'multiline':False]['text':' ctr_x = (x1 + x2)/2','line_number':253,'multiline':False]['text':' ctr_y = (y1 + y2)/2','line_number':254,'multiline':False]['text':' w = x2 - x1 + 1','line_number':255,'multiline':False]['text':' h = y2 - y1 + 1','line_number':256,'multiline':False]['text':' legacy_plus_one ','line_number':261,'multiline':True]['text':' test utils::nms_cpu with indices','line_number':265,'multiline':False]['text':' topN ','line_number':278,'multiline':True]['text':' legacy_plus_one ','line_number':279,'multiline':True]['text':' test utils::nms_cpu with topN','line_number':283,'multiline':False]['text':' legacy_plus_one ','line_number':293,'multiline':True]['text':' Same inputs as TestSoftNMS, but in RRPN format with angle 0 for testing','line_number':300,'multiline':False]['text':' nms_cpu_rotated','line_number':301,'multiline':False]['text':' Add additional dim for angle and convert from','line_number':314,'multiline':False]['text':' [x1, y1, x2, y1] to [ctr_x, ctr_y, w, h] format.','line_number':315,'multiline':False]['text':' ctr_x = (x1 + x2)/2','line_number':317,'multiline':False]['text':' ctr_y = (y1 + y2)/2','line_number':318,'multiline':False]['text':' w = x2 - x1 + 1','line_number':319,'multiline':False]['text':' h = y2 - y1 + 1','line_number':320,'multiline':False]['text':' Ground truth generated based on','line_number':327,'multiline':False]['text':'   detectron/lib/utils/cython_nms.pyx','line_number':328,'multiline':False]['text':' Explicitly use colmajor order to match scores','line_number':331,'multiline':False]['text':' Linear, overlap_thresh=0.1','line_number':333,'multiline':False]['text':' Linear, overlap_thresh=0.3','line_number':336,'multiline':False]['text':' Gaussian, overlap_thresh=0.1','line_number':339,'multiline':False]['text':' Gaussian, overlap_thresh=0.3','line_number':342,'multiline':False]['text':' topN ','line_number':360,'multiline':True]['text':' legacy_plus_one ','line_number':361,'multiline':True]['text':' Test with topN','line_number':368,'multiline':False]['text':' legacy_plus_one ','line_number':379,'multiline':True]['text':' Test with filtered indices','line_number':384,'multiline':False]['text':' topN ','line_number':395,'multiline':True]['text':' legacy_plus_one ','line_number':396,'multiline':True]['text':' Test with high score_thresh','line_number':405,'multiline':False]['text':' topN ','line_number':415,'multiline':True]['text':' legacy_plus_one ','line_number':416,'multiline':True]['text':' One box is fully within another box, the angle is irrelavant','line_number':432,'multiline':False]['text':' 0.3 == (3 * 3) / (5 * 6)','line_number':445,'multiline':False]['text':' Angle 0','line_number':453,'multiline':False]['text':' Angle 0, very similar boxes that can produce 17 candidate 'intersections'','line_number':468,'multiline':False]['text':' Simple case with angle 0 (upright boxes)','line_number':483,'multiline':False]['text':' Angle 45','line_number':499,'multiline':False]['text':' namespace caffe2','line_number':531,'multiline':False]