['text':' Reduce sum to 1 value','line_number':20,'multiline':False]['text':' Reduce sum to 1 value','line_number':56,'multiline':False]['text':' Reduce sum to 1 value','line_number':94,'multiline':False]['text':' namespace internal','line_number':109,'multiline':False]['text':'*
 * Fused operator of
 * SparseLengthsIndicesInGradientSumGradient (gradient of SparseLengthsSum) +
 * RowWiseSparseAdagrad.
 *
 * BW saving analysis for numSegments B, L_avg = avg(lengths), block_size D,
 * assuming T = float and SIndex = int64_t:
 * Before fusion, SparseLengthsIndicesInGradientSumGradient reads B*D*4 and
 * writes B*L_avg*D*4. RowWiseSparseAdagrad reads B*2*L_avg*D*4 and writes
 * B*L_avg*D*4. So, the total memory traffic is B*(1+4*L_avg)*D*4 .
 * After fusion, we read B*(1+L_avg)*D*4 and write B*L_avg*D*4 with total
 * memory traffic B*(1+2*L_avg)*D*4.
 * Assuming L_avg >> 1, the memory BW is saving is about 2x .
 *
 * See https://fb.quip.com/ldG7A55Ur5wM for more details on BW saving analysis
 * and evaluation results.
 ','line_number':111,'multiline':True]['text':' embedding types','line_number':129,'multiline':False]['text':' everything else','line_number':130,'multiline':False]['text':' Enforce shapes','line_number':156,'multiline':False]['text':' Enforce:','line_number':202,'multiline':False]['text':' Input(embedding/momentum) == outputs(embedding/momentum)','line_number':203,'multiline':False]['text':' Enforce:','line_number':286,'multiline':False]['text':' access within range','line_number':287,'multiline':False]['text':' gradient access within range','line_number':288,'multiline':False]['text':' prefetching','line_number':310,'multiline':False]['text':'counter_halflife=','line_number':379,'multiline':True]['text':' embedding types','line_number':415,'multiline':False]['text':' everything else','line_number':416,'multiline':False]['text':' Enforce shapes','line_number':438,'multiline':False]['text':' Enforce:','line_number':492,'multiline':False]['text':' Input(embedding/momentum) == outputs(embedding/momentum)','line_number':493,'multiline':False]['text':' Cannot fuse this loop with the loop below because paramIn is updated','line_number':551,'multiline':False]['text':' by the second loop. Specifically, there could be dataIndex1 != dataIndex2','line_number':552,'multiline':False]['text':' s.t. indices[dataIndex1] == indices[dataIndex2], and fusing these two','line_number':553,'multiline':False]['text':' loops would violate dependencies w.r.t.','line_number':554,'multiline':False]['text':' paramIn[indices[dataIndex1]:block_size] The approximate version.','line_number':555,'multiline':False]['text':' (RowWiseSparseSimdAdagradFusedWithSparseLengthsWeightedSumGradientApproxOp)','line_number':556,'multiline':False]['text':' ignores this dependency and fuses these two loops.','line_number':557,'multiline':False]['text':' Enforce:','line_number':567,'multiline':False]['text':' access within range','line_number':568,'multiline':False]['text':' gradient access within range','line_number':569,'multiline':False]['text':' temp_aux_grad[dataIndex] = gradIn[offsetI] dot paramIn[offsetIdx]','line_number':582,'multiline':False]['text':' prefetching','line_number':622,'multiline':False]['text':'HAS_WEIGHT_DECAY=','line_number':683,'multiline':True]['text':'counter_halflife=','line_number':701,'multiline':True]['text':'HAS_WEIGHT_DECAY=','line_number':705,'multiline':True]['text':' embedding types','line_number':740,'multiline':False]['text':' everything else','line_number':741,'multiline':False]['text':' Enforce shapes','line_number':766,'multiline':False]['text':' Enforce:','line_number':828,'multiline':False]['text':' Input(embedding/momentum) == outputs(embedding/momentum)','line_number':829,'multiline':False]['text':' Enforce:','line_number':857,'multiline':False]['text':' access within range','line_number':858,'multiline':False]['text':' gradient access within range','line_number':859,'multiline':False]['text':' prefetching','line_number':927,'multiline':False]['text':' prefetch ptr','line_number':982,'multiline':False]['text':' prefetch ptr','line_number':986,'multiline':False]['text':' namespace caffe2','line_number':1028,'multiline':False]