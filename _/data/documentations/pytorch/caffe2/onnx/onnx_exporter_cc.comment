['text':' rewrite padding attributes','line_number':18,'multiline':False]['text':' Get all the "external" inputs and outputs of the subnet','line_number':137,'multiline':False]['text':' Since then_net and else_net has same external input/output, we only collect','line_number':138,'multiline':False]['text':' external input/output from one of its subnet And perform the rewrite to','line_number':139,'multiline':False]['text':' both then_net and else_net','line_number':140,'multiline':False]['text':' Add inputs/outputs of the sub_net to the inputs/outputs of the op','line_number':174,'multiline':False]['text':' Build oldname_to_newname map','line_number':187,'multiline':False]['text':' namespace','line_number':260,'multiline':False]['text':' clear external inputs and outputs since they're no longer valid','line_number':289,'multiline':False]['text':' No ssa rewrite is done for init net. The reason being that the output','line_number':314,'multiline':False]['text':' blobs of init net are what becomes the input blobs of pred_net. Since','line_number':315,'multiline':False]['text':' inputs of pred_net are not renamed we are not renaming the output of','line_number':316,'multiline':False]['text':' init_net. Furthermore, the assumption made is that init_net is simple net','line_number':317,'multiline':False]['text':' with each operator producing the one output and thus not renaming','line_number':318,'multiline':False]['text':' translates to not renaming the outputs of the init_net. Create identical','line_number':319,'multiline':False]['text':' mapping for now. This shall be removed eventually.','line_number':320,'multiline':False]['text':' Ssa rewriting modifies the net, check if the net passes schema check','line_number':329,'multiline':False]['text':' Create identical mapping for now. This shall be removed eventually.','line_number':334,'multiline':False]['text':' Special SSA Rewrite for subnet of If Operator','line_number':341,'multiline':False]['text':' This needs to happen first because the inputs/outputs of If/AsyncIf','line_number':342,'multiline':False]['text':' may get modified inside ssaRewriteForIfOp','line_number':343,'multiline':False]['text':' Input blob is not versioned yet.','line_number':353,'multiline':False]['text':' If it is not versioned yet, it is assumed to be primary input,','line_number':354,'multiline':False]['text':' Thus skip renaming it.','line_number':355,'multiline':False]['text':' restore in-place settings','line_number':363,'multiline':False]['text':' These filling ops are designed for a by-default value for the','line_number':392,'multiline':False]['text':' tensors generated by ops like If. For example, if an If op's','line_number':393,'multiline':False]['text':' condition is not satisfied, and it does not have else_net, then it','line_number':394,'multiline':False]['text':' will not generate any output blob, which may cause some error in','line_number':395,'multiline':False]['text':' the future. Here we would like to ensure these tensors only been','line_number':396,'multiline':False]['text':' ssa re-write once but not twice. (One in the filling operator, one','line_number':397,'multiline':False]['text':' in If op)','line_number':398,'multiline':False]['text':' For all the renamed blobs find if the blob is one of the external','line_number':411,'multiline':False]['text':' output. If so add a mapping from it's latest renamed version to its','line_number':412,'multiline':False]['text':' original name.','line_number':413,'multiline':False]['text':' Use the mapping to find if the input or output of an op was a renamed','line_number':422,'multiline':False]['text':' external output. If so replace it with its original name.','line_number':423,'multiline':False]['text':' If/AsyncIf needs special handling','line_number':425,'multiline':False]['text':' run schema check again','line_number':433,'multiline':False]['text':' NOLINTNEXTLINE(clang-analyzer-core.NonNullParamChecker)','line_number':434,'multiline':False]['text':' Per-op attribute renames override the global attribute renames','line_number':528,'multiline':False]['text':' The modified def without broadcast and axis','line_number':646,'multiline':False]['text':' Refer to the old def, later won't change it.','line_number':648,'multiline':False]['text':' The upper bound (excluded) of expanded y.','line_number':664,'multiline':False]['text':' Handle global pooling','line_number':846,'multiline':False]['text':' Fix legacy pad attr','line_number':863,'multiline':False]['text':' global pool does not care about legacy pad','line_number':874,'multiline':False]['text':' default behavior in Caffe2 is SAME_UPPER','line_number':885,'multiline':False]['text':' https://github.com/caffe2/caffe2/blob/master/caffe2/operators/conv_pool_op_base.h#L39','line_number':886,'multiline':False]['text':' The problem here is that, Pool op in Caffe may add an additional','line_number':891,'multiline':False]['text':' pixel, if the last part is smaller than stride. So we use the','line_number':892,'multiline':False]['text':' explicit padding to replace legacy_pad. pad[end] = output_size[start','line_number':893,'multiline':False]['text':' + 2] * stride[start] - pad[start] - 1 + kernel[start] - input[start +','line_number':894,'multiline':False]['text':' 2]; end = start + len(pad) / 2','line_number':895,'multiline':False]['text':' The modified def without add_axis','line_number':941,'multiline':False]['text':' In caffe2, we can optionally add an axis specified by `add_axis`','line_number':942,'multiline':False]['text':' If we have add_axis, we need to add a reshape node','line_number':970,'multiline':False]['text':' If we have two output, we need to output the split_info, which can be','line_number':994,'multiline':False]['text':' statically inferred from the input shapes','line_number':995,'multiline':False]['text':' NOLINTNEXTLINE(performance-inefficient-vector-operation)','line_number':1004,'multiline':False]['text':' axes','line_number':1121,'multiline':False]['text':' keepdims','line_number':1130,'multiline':False]['text':' num_reduce_dim','line_number':1136,'multiline':False]['text':'{H, W} => {1, 1, H, W}','line_number':1170,'multiline':False]['text':' NOLINTNEXTLINE(performance-unnecessary-copy-initialization)','line_number':1306,'multiline':False]['text':' we need to reshape only when dimension is higher than 2','line_number':1333,'multiline':False]['text':' we need to reshape only when dimension is higher than 2','line_number':1349,'multiline':False]['text':' capture the outer shape if needed.','line_number':1368,'multiline':False]['text':' Set name','line_number':1405,'multiline':False]['text':' Set dims','line_number':1421,'multiline':False]['text':' Set value','line_number':1426,'multiline':False]['text':' TODO: we might need to do two pass to avoid adverse memory allocations','line_number':1449,'multiline':False]['text':' namespace onnx','line_number':1459,'multiline':False]['text':' namespace caffe2','line_number':1460,'multiline':False]