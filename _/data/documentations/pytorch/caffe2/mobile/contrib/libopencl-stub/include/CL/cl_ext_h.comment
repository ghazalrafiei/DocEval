['text':'******************************************************************************
 * Copyright (c) 2008 - 2012 The Khronos Group Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and/or associated documentation files (the
 * "Materials"), to deal in the Materials without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Materials, and to
 * permit persons to whom the Materials are furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice shall be included
 * in all copies or substantial portions of the Materials.
 *
 * THE MATERIALS ARE PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
 * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
 * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 * MATERIALS OR THE USE OR OTHER DEALINGS IN THE MATERIALS.
 *****************************************************************************','line_number':1,'multiline':True]['text':' $Revision: 11928 $ on $Date: 2010-07-13 09:04:56 -0700 (Tue, 13 Jul 2010) $ ','line_number':24,'multiline':True]['text':' cl_ext.h contains OpenCL extensions which don't have external ','line_number':26,'multiline':True]['text':' (OpenGL, D3D) dependencies.                                   ','line_number':27,'multiline':True]['text':' cl_khr_fp16 extension - no extension #define since it has no functions  ','line_number':43,'multiline':True]['text':' Memory object destruction
 *
 * Apple extension for use to manage externally allocated buffers used with cl_mem objects with CL_MEM_USE_HOST_PTR
 *
 * Registers a user callback function that will be called when the memory object is deleted and its resources 
 * freed. Each call to clSetMemObjectCallbackFn registers the specified user callback function on a callback 
 * stack associated with memobj. The registered user callback functions are called in the reverse order in 
 * which they were registered. The user callback functions are called and then the memory object is deleted 
 * and its resources freed. This provides a mechanism for the application (and libraries) using memobj to be 
 * notified when the memory referenced by host_ptr, specified when the memory object is created and used as 
 * the storage bits for the memory object, can be reused or freed.
 *
 * The application may not call CL api's with the cl_mem object passed to the pfn_notify.
 *
 * Please check for the "cl_APPLE_SetMemObjectDestructor" extension using clGetDeviceInfo(CL_DEVICE_EXTENSIONS)
 * before using.
 ','line_number':46,'multiline':True]['text':' memobj ','line_number':64,'multiline':True]['text':'pfn_notify','line_number':65,'multiline':True]['text':' memobj ','line_number':65,'multiline':True]['text':'user_data','line_number':65,'multiline':True]['text':'user_data ','line_number':66,'multiline':True]['text':' Context Logging Functions
 *
 * The next three convenience functions are intended to be used as the pfn_notify parameter to clCreateContext().
 * Please check for the "cl_APPLE_ContextLoggingFunctions" extension using clGetDeviceInfo(CL_DEVICE_EXTENSIONS)
 * before using.
 *
 * clLogMessagesToSystemLog forwards on all log messages to the Apple System Logger
 ','line_number':69,'multiline':True]['text':' errstr ','line_number':78,'multiline':True]['text':' private_info ','line_number':79,'multiline':True]['text':' cb ','line_number':80,'multiline':True]['text':' user_data ','line_number':81,'multiline':True]['text':' clLogMessagesToStdout sends all log messages to the file descriptor stdout ','line_number':83,'multiline':True]['text':' errstr ','line_number':84,'multiline':True]['text':' private_info ','line_number':85,'multiline':True]['text':' cb ','line_number':86,'multiline':True]['text':' user_data ','line_number':87,'multiline':True]['text':' clLogMessagesToStderr sends all log messages to the file descriptor stderr ','line_number':89,'multiline':True]['text':' errstr ','line_number':90,'multiline':True]['text':' private_info ','line_number':91,'multiline':True]['text':' cb ','line_number':92,'multiline':True]['text':' user_data ','line_number':93,'multiline':True]['text':'*********************** 
* cl_khr_icd extension *                                                  
***********************','line_number':96,'multiline':True]['text':' cl_platform_info                                                        ','line_number':101,'multiline':True]['text':' Additional Error Codes                                                  ','line_number':104,'multiline':True]['text':' num_entries ','line_number':108,'multiline':True]['text':' platforms ','line_number':109,'multiline':True]['text':' num_platforms ','line_number':110,'multiline':True]['text':' num_entries ','line_number':113,'multiline':True]['text':' platforms ','line_number':114,'multiline':True]['text':' num_platforms ','line_number':115,'multiline':True]['text':' Extension: cl_khr_image2D_buffer
 *
 * This extension allows a 2D image to be created from a cl_mem buffer without a copy.
 * The type associated with a 2D image created from a buffer in an OpenCL program is image2d_t.
 * Both the sampler and sampler-less read_image built-in functions are supported for 2D images
 * and 2D images created from a buffer.  Similarly, the write_image built-ins are also supported
 * for 2D images created from a buffer.
 *
 * When the 2D image from buffer is created, the client must specify the width,
 * height, image format (i.e. channel order and channel data type) and optionally the row pitch
 *
 * The pitch specified must be a multiple of CL_DEVICE_IMAGE_PITCH_ALIGNMENT pixels.
 * The base address of the buffer must be aligned to CL_DEVICE_IMAGE_BASE_ADDRESS_ALIGNMENT pixels.
 ','line_number':118,'multiline':True]['text':'************************************
 * cl_khr_initalize_memory extension *
 ************************************','line_number':133,'multiline':True]['text':'*************************************
 * cl_khr_terminate_context extension *
 *************************************','line_number':140,'multiline':True]['text':' context ','line_number':148,'multiline':True]['text':' context ','line_number':150,'multiline':True]['text':'
 * Extension: cl_khr_spir
 *
 * This extension adds support to create an OpenCL program object from a 
 * Standard Portable Intermediate Representation (SPIR) instance
 ','line_number':153,'multiline':True]['text':'*****************************************
* cl_nv_device_attribute_query extension *
*****************************************','line_number':160,'multiline':True]['text':' cl_nv_device_attribute_query extension - no extension #define since it has no functions ','line_number':163,'multiline':True]['text':'********************************
* cl_amd_device_attribute_query *
********************************','line_number':173,'multiline':True]['text':'**********************************
    * cl_ext_device_fission extension *
    **********************************','line_number':179,'multiline':True]['text':'device','line_number':185,'multiline':True]['text':'device','line_number':188,'multiline':True]['text':'device','line_number':191,'multiline':True]['text':'device','line_number':194,'multiline':True]['text':'in_device','line_number':198,'multiline':True]['text':' properties ','line_number':199,'multiline':True]['text':'num_entries','line_number':200,'multiline':True]['text':'out_devices','line_number':201,'multiline':True]['text':'num_devices','line_number':202,'multiline':True]['text':'in_device','line_number':205,'multiline':True]['text':' properties ','line_number':206,'multiline':True]['text':'num_entries','line_number':207,'multiline':True]['text':'out_devices','line_number':208,'multiline':True]['text':'num_devices','line_number':209,'multiline':True]['text':' cl_device_partition_property_ext ','line_number':211,'multiline':True]['text':' clDeviceGetInfo selectors ','line_number':217,'multiline':True]['text':' error codes ','line_number':224,'multiline':True]['text':' CL_AFFINITY_DOMAINs ','line_number':229,'multiline':True]['text':' cl_device_partition_property_ext list terminators ','line_number':237,'multiline':True]['text':' CL_VERSION_1_1 ','line_number':244,'multiline':True]['text':' __CL_EXT_H ','line_number':251,'multiline':True]