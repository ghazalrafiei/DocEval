['text':'# @package workspace','line_number':1,'multiline':False]['text':' Module caffe2.python.workspace','line_number':2,'multiline':False]['text':' This is a duplicate of NumCudaDevices. Remove','line_number':55,'multiline':False]['text':' NumCudaDevices once replaced everywhere in the code','line_number':56,'multiline':False]['text':' pyre-fixme[9]: incompatible type assignment','line_number':67,'multiline':False]['text':' noqa','line_number':68,'multiline':False]['text':' pyre-fixme[9]: incompatible type assignment','line_number':69,'multiline':False]['text':' noqa','line_number':70,'multiline':False]['text':' pyre-fixme[9]: incompatible type assignment','line_number':71,'multiline':False]['text':' noqa','line_number':72,'multiline':False]['text':' pyre-fixme[9]: incompatible type assignment','line_number':76,'multiline':False]['text':' setting cuda as the default GpuDeviceType as some tests','line_number':86,'multiline':False]['text':' like core, scope tests use GpuDeviceType even without gpu support','line_number':87,'multiline':False]['text':' pyre-fixme[9]: incompatible type assignment','line_number':89,'multiline':False]['text':' noqa','line_number':90,'multiline':False]['text':' noqa','line_number':91,'multiline':False]['text':' noqa','line_number':92,'multiline':False]['text':' pyre-fixme[9]: incompatible type assignment','line_number':93,'multiline':False]['text':' noqa','line_number':94,'multiline':False]['text':' We will prefer to use 5000. If not, we will then pick a random port.','line_number':108,'multiline':False]['text':' Race condition: between the interval we close the socket and actually','line_number':118,'multiline':False]['text':' start a mint process, another process might have occupied the port. We','line_number':119,'multiline':False]['text':' don't do much here as this is mostly for convenience in research','line_number':120,'multiline':False]['text':' rather than 24x7 service.','line_number':121,'multiline':False]['text':' Get the root folder from the current workspace','line_number':133,'multiline':False]['text':' First, see if this object is a protocol buffer, which we can','line_number':163,'multiline':False]['text':' simply serialize with the SerializeToString() call.','line_number':164,'multiline':False]['text':' Reset the workspace, but keep the current root folder setting.','line_number':175,'multiline':False]['text':' TODO(jiayq): refactor core.py/workspace.py to avoid circular deps','line_number':271,'multiline':False]['text':' TODO(jiayq): refactor core.py/workspace.py to avoid circular deps','line_number':279,'multiline':False]['text':'###############################################################################','line_number':555,'multiline':False]['text':' Utilities for immediate mode','line_number':556,'multiline':False]['text':'','line_number':557,'multiline':False]['text':' Caffe2's immediate mode implements the following behavior: between the two','line_number':558,'multiline':False]['text':' function calls StartImmediate() and StopImmediate(), for any operator that is','line_number':559,'multiline':False]['text':' called through CreateOperator(), we will also run that operator in a workspace','line_number':560,'multiline':False]['text':' that is specific to the immediate mode. The user is explicitly expected to','line_number':561,'multiline':False]['text':' make sure that these ops have proper inputs and outputs, i.e. one should not','line_number':562,'multiline':False]['text':' run an op where an external input is not created or fed.','line_number':563,'multiline':False]['text':'','line_number':564,'multiline':False]['text':' Users can use FeedImmediate() and FetchImmediate() to interact with blobs','line_number':565,'multiline':False]['text':' in the immediate workspace.','line_number':566,'multiline':False]['text':'','line_number':567,'multiline':False]['text':' Once StopImmediate() is called, all contents in the immediate workspace is','line_number':568,'multiline':False]['text':' freed up so one can continue using normal runs.','line_number':569,'multiline':False]['text':'','line_number':570,'multiline':False]['text':' The immediate mode is solely for debugging purposes and support will be very','line_number':571,'multiline':False]['text':' sparse.','line_number':572,'multiline':False]['text':'###############################################################################','line_number':573,'multiline':False]['text':' already in immediate mode. We will kill the previous one','line_number':596,'multiline':False]['text':' and start from fresh.','line_number':597,'multiline':False]['text':' if the user doesn't want to see the warning message, sure...','line_number':604,'multiline':False]['text':' Phew, that was a dangerous ride.','line_number':644,'multiline':False]['text':' C.Workspace methods.','line_number':676,'multiline':False]['text':' return ws._run_net(obj.SerializeToString())','line_number':699,'multiline':False]['text':' Plain NumPy strings are weird, let's use objects instead','line_number':710,'multiline':False]['text':' C.Blob methods.','line_number':742,'multiline':False]['text':' conservative type check to avoid unnecessary import','line_number':746,'multiline':False]['text':' _feed() returns True for some reason','line_number':754,'multiline':False]['text':' avoiding circular dependency','line_number':770,'multiline':False]