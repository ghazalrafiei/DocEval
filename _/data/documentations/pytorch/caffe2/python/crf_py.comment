['text':'# @package crf','line_number':1,'multiline':False]['text':' Module caffe2.python.crf','line_number':2,'multiline':False]['text':' After adding BOS and EOS','line_number':20,'multiline':False]['text':' Since the transitions matrix is a shared parameter, need to','line_number':33,'multiline':False]['text':' take a snapshot of it at the beginning since it can be updated','line_number':34,'multiline':False]['text':' in between the operators that uses it when doing parallel updates','line_number':35,'multiline':False]['text':' Compute best path unary score from the logits','line_number':39,'multiline':False]['text':' Append BOS and EOS entries to the predictions and labels','line_number':43,'multiline':False]['text':' Compute best path binary scores from the transitions matrix','line_number':50,'multiline':False]['text':' Compute all paths score','line_number':58,'multiline':False]['text':' Due to a bug in RecurrentNetworkGradientOp, we need to copy the','line_number':71,'multiline':False]['text':' transitions blob before sending it to the recurrent network','line_number':72,'multiline':False]['text':' Since there is no multi-dimensional gather, I flatten the matrix to','line_number':91,'multiline':False]['text':' a 1-d vector and transform the ids to (row_ids * num_columns +','line_number':92,'multiline':False]['text':' column_ids) and do gather in 1-d','line_number':93,'multiline':False]['text':' Build the RNN net and get the last timestep output','line_number':120,'multiline':False]['text':' Compute the accumulated total score of all the paths','line_number':129,'multiline':False]['text':' We have to manually scope due to our internal/external blob','line_number':154,'multiline':False]['text':' relationships.','line_number':155,'multiline':False]['text':' A hack to bypass model cloning for test','line_number':172,'multiline':False]['text':' Do tile','line_number':175,'multiline':False]['text':' This operator will compute the best path of classes by performing','line_number':218,'multiline':False]['text':' Viterbi decoding and then updates the predictions to make the tag','line_number':219,'multiline':False]['text':' On the best path has the highest score among the others','line_number':220,'multiline':False]['text':' Get the current tag with the maximum score','line_number':244,'multiline':False]['text':' Swap the scores of the current best tag and the tag on the','line_number':248,'multiline':False]['text':' Viterbi path','line_number':249,'multiline':False]['text':' Remove the BOS and EOS entries from the predictions matrix','line_number':255,'multiline':False]['text':' This function will introduce two labels for beginning of sequence','line_number':281,'multiline':False]['text':' And end of sequence, it will make the necessary udpates to the','line_number':282,'multiline':False]['text':' the predictions blob','line_number':283,'multiline':False]['text':' An arbitray very low number','line_number':285,'multiline':False]