['text':'# @package sparse_lookup','line_number':1,'multiline':False]['text':' Module caffe2.python.layers.sparse_lookup','line_number':2,'multiline':False]['text':' TODO Add some asserts about input type','line_number':141,'multiline':False]['text':' TODO: create a new type of reducer with external weights to wrap','line_number':162,'multiline':False]['text':' this and the above two cases since essentially their input formats','line_number':163,'multiline':False]['text':' are the same.','line_number':164,'multiline':False]['text':' If fp16 is used, make sure fp16 init op is used','line_number':203,'multiline':False]['text':' if init op is UniformFill, we replace it directly','line_number':213,'multiline':False]['text':' Rowwise quantization makes sense only if shape it's 2D matrix with','line_number':270,'multiline':False]['text':' second dimension >= 8','line_number':271,'multiline':False]['text':' Gather can work on all kinds of input data types, and output','line_number':307,'multiline':False]['text':' data with the same type. Convert the output of Gather to float,','line_number':308,'multiline':False]['text':' because the follow-up Ops expect fp32.','line_number':309,'multiline':False]['text':' SparseLengths* Ops will accept either fp16 or fp32 embedding','line_number':355,'multiline':False]['text':' matrix and output fp32 pooled embedding','line_number':356,'multiline':False]['text':' A special case here is that we need FP16 engine for','line_number':357,'multiline':False]['text':' SparseLengthsWeightedSum when FP16 embeedings are used for','line_number':358,'multiline':False]['text':' correct backward updates','line_number':359,'multiline':False]['text':' deal with sparse features of id_list type','line_number':389,'multiline':False]['text':' For id list features, the behaviors of 'Sum' and','line_number':401,'multiline':False]['text':' 'WeightedSum' are identical, since we can regard the weight on each','line_number':402,'multiline':False]['text':' id as 1. Similarly, for 'Mean' and 'WeightedMean'.','line_number':403,'multiline':False]['text':' SparseLengths* Ops will accept either fp16 or fp32 embedding','line_number':411,'multiline':False]['text':' matrix and output fp32 pooled embedding','line_number':412,'multiline':False]['text':' Gather operator will gather the embedding for each id of','line_number':445,'multiline':False]['text':' each IdList.','line_number':446,'multiline':False]['text':' deal with sparse features of id_score_list type','line_number':462,'multiline':False]['text':' Gather operator will gather the embedding for each id of','line_number':509,'multiline':False]['text':' each IdList.','line_number':510,'multiline':False]['text':' TODO(amalevich): Layer should not be responsible for decision about','line_number':550,'multiline':False]['text':' quantization.','line_number':551,'multiline':False]