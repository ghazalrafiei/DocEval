['text':'# @package schema','line_number':1,'multiline':False]['text':' Module caffe2.python.schema','line_number':2,'multiline':False]['text':' pyre-fixme[16]: `FeatureSpec.__new__` has no attribute `__defaults__`','line_number':70,'multiline':False]['text':' pyre-fixme[16]: `Metadata.__new__` has no attribute `__defaults__`','line_number':94,'multiline':False]['text':' Disable setting attributes after initialization to prevent false','line_number':552,'multiline':False]['text':' impression of being able to overwrite a field.','line_number':553,'multiline':False]['text':' Allowing setting internal states mainly so that _parent can be set','line_number':554,'multiline':False]['text':' post initialization.','line_number':555,'multiline':False]['text':' Numpy will collapse a shape of 1 into an unindexed data array (shape = ()),','line_number':824,'multiline':False]['text':' which betrays the docstring of this class (which expects shape = (1,)).','line_number':825,'multiline':False]['text':' >>> import numpy as np','line_number':826,'multiline':False]['text':' >> np.dtype((np.int32, 1))','line_number':827,'multiline':False]['text':' dtype('int32')','line_number':828,'multiline':False]['text':' >>> np.dtype((np.int32, 5))','line_number':829,'multiline':False]['text':' dtype(('<i4', (5,)))','line_number':830,'multiline':False]['text':' If blob is not None and it is not a BlobReference, we assume that','line_number':842,'multiline':False]['text':' it is actual tensor data, so we will try to cast it to a numpy array.','line_number':843,'multiline':False]['text':' if array is empty we may need to reshape a little','line_number':848,'multiline':False]['text':' reshape scalars into 1D arrays','line_number':855,'multiline':False]['text':' TODO(azzolini): figure out better way of representing this','line_number':856,'multiline':False]['text':' infer inner shape from the blob given','line_number':860,'multiline':False]['text':' TODO(dzhulgakov): tweak this to make it work with PackedStruct','line_number':861,'multiline':False]['text':' if we were still unable to infer the dtype','line_number':865,'multiline':False]['text':' wrap into a ndtype','line_number':963,'multiline':False]['text':' concatenate shapes if necessary','line_number':967,'multiline':False]['text':' TODO: check schema','line_number':1180,'multiline':False]['text':' If data_type_for_dtype doesn't know how to resolve given numpy','line_number':1239,'multiline':False]['text':' type to core.DataType, that function can throw type error (for','line_number':1240,'multiline':False]['text':' example that would happen for cases of unknown types such as','line_number':1241,'multiline':False]['text':' np.void). This is not a problem for cases when the record if going','line_number':1242,'multiline':False]['text':' to be overwritten by some operator later, though it might be an','line_number':1243,'multiline':False]['text':' issue for type/shape inference.','line_number':1244,'multiline':False]['text':' If we don't enforce types for all items we'll create a blob with','line_number':1247,'multiline':False]['text':' the default ConstantFill (FLOAT, no shape)','line_number':1248,'multiline':False]['text':' TODO add more checks','line_number':1270,'multiline':False]