['text':' Handled below','line_number':11,'multiline':False]['text':' TODO: This test does not test scaling because','line_number':20,'multiline':False]['text':' the algorithms used by OpenCV in the C and Python','line_number':21,'multiline':False]['text':' version seem to differ slightly. It does test','line_number':22,'multiline':False]['text':' most other features','line_number':23,'multiline':False]['text':' Verification routines (applies transformations to image to','line_number':34,'multiline':False]['text':' verify if the operator produces same result)','line_number':35,'multiline':False]['text':' Box is ymin, xmin, bound_height, bound_width','line_number':41,'multiline':False]['text':' This function is called but not used. It will trip on assert False if','line_number':53,'multiline':False]['text':' the arguments are wrong (improper example)','line_number':54,'multiline':False]['text':' Here we use OpenCV transformation to match the C code','line_number':56,'multiline':False]['text':' Note the RGB/BGR inversion','line_number':99,'multiline':False]['text':' Operate on integers like the C version','line_number':100,'multiline':False]['text':' Printing function (for debugging)','line_number':108,'multiline':False]['text':' Convert RGB to BGR','line_number':110,'multiline':False]['text':' Convert HWC to CHW','line_number':112,'multiline':False]['text':' Bounding box is ymin, xmin, height, width','line_number':118,'multiline':False]['text':' Create images and the expected results','line_number':130,'multiline':False]['text':' Create a random bounding box for every other image','line_number':140,'multiline':False]['text':' ymin, xmin, bound_height, bound_width','line_number':141,'multiline':False]['text':' TODO: To ensure that we never need to scale, we','line_number':142,'multiline':False]['text':' ensure that the bounding-box is larger than the','line_number':143,'multiline':False]['text':' minsize parameter','line_number':144,'multiline':False]['text':' print("Bounding box is %s" % (str(bounding_box)))','line_number':155,'multiline':False]['text':' Create expected result','line_number':156,'multiline':False]['text':' print("Orig image: %s" % (str(caffe2_img(img_expected))))','line_number':158,'multiline':False]['text':' print("Bounded image: %s" % (str(caffe2_img(img_expected))))','line_number':162,'multiline':False]['text':' print("Crop image: %s" % (str(caffe2_img(img_expected))))','line_number':167,'multiline':False]['text':' print("Color image: %s" % (str(caffe2_img(img_expected))))','line_number':170,'multiline':False]['text':' string data','line_number':174,'multiline':False]['text':' int32 data','line_number':179,'multiline':False]['text':' float weights','line_number':197,'multiline':False]['text':' float data','line_number':208,'multiline':False]['text':' int32 data','line_number':214,'multiline':False]['text':' int32 data','line_number':225,'multiline':False]['text':' End while','line_number':233,'multiline':False]['text':' End with','line_number':234,'multiline':False]['text':' TODO: Does not test on GPU and does not test use_gpu_transform','line_number':241,'multiline':False]['text':' WARNING: Using ModelHelper automatically does NHWC to NCHW','line_number':242,'multiline':False]['text':' transformation if needed.','line_number':243,'multiline':False]['text':' One with bounding box and one without','line_number':248,'multiline':False]['text':' End for','line_number':311,'multiline':False]['text':' End with','line_number':312,'multiline':False]['text':' End for','line_number':313,'multiline':False]['text':' end run_test','line_number':315,'multiline':False]['text':' If we don't use_gpu_transform, the output is in NHWC','line_number':326,'multiline':False]['text':' Our reference output is CHW so we swap','line_number':327,'multiline':False]['text':' when traing data preparation is randomized (e.g. random cropping,','line_number':340,'multiline':False]['text':' Inception-style random sized cropping, color jittering,','line_number':341,'multiline':False]['text':' color lightin), we only compare blob shape','line_number':342,'multiline':False]['text':' End for','line_number':347,'multiline':False]['text':' end validate_image_and_label','line_number':348,'multiline':False]['text':' End validator','line_number':378,'multiline':False]['text':' End test_imageinput','line_number':382,'multiline':False]['text':' End for','line_number':422,'multiline':False]['text':' End validator','line_number':423,'multiline':False]['text':' End test_imageinput','line_number':428,'multiline':False]