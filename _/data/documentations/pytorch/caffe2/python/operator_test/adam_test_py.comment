['text':' Make up for lost minibatches.','line_number':51,'multiline':False]['text':' For catchup','line_number':56,'multiline':False]['text':' Iter lives on the CPU','line_number':105,'multiline':False]['text':' Iter lives on the CPU','line_number':139,'multiline':False]['text':' Create an indexing array containing values which index into grad','line_number':169,'multiline':False]['text':' Verify that the generated indices are unique','line_number':180,'multiline':False]['text':' Sparsify grad','line_number':186,'multiline':False]['text':' Iter lives on the CPU','line_number':207,'multiline':False]['text':' Keep the scalar types for reference','line_number':233,'multiline':False]['text':' Here we will define the last_seen tensor as being randomly from 0 to ITER','line_number':237,'multiline':False]['text':' (the value of t to be tested will be ITER+1)','line_number':238,'multiline':False]['text':' Create an indexing array containing values which index into grad','line_number':248,'multiline':False]['text':' Verify that the generated indices are unique','line_number':259,'multiline':False]['text':' Sparsify grad','line_number':265,'multiline':False]['text':' Iter lives on the CPU','line_number':287,'multiline':False]['text':' Create an indexing array containing values which index into grad','line_number':315,'multiline':False]['text':' Verify that the generated indices are unique','line_number':326,'multiline':False]['text':' Sparsify grad','line_number':332,'multiline':False]['text':' Iter lives on the CPU','line_number':355,'multiline':False]['text':' Create a 1D row-wise average 2nd moment tensor.','line_number':384,'multiline':False]['text':' Create an indexing array containing values which index into grad','line_number':391,'multiline':False]['text':' Note that unlike SparseAdam, RowWiseSparseAdam uses a moment','line_number':402,'multiline':False]['text':' tensor that is strictly 1-dimensional and equal in length to the','line_number':403,'multiline':False]['text':' first dimension of the parameters, so indices must also be','line_number':404,'multiline':False]['text':' 1-dimensional.','line_number':405,'multiline':False]['text':' Verify that the generated indices are unique','line_number':410,'multiline':False]['text':' Sparsify grad','line_number':413,'multiline':False]['text':' Iter lives on the CPU','line_number':433,'multiline':False]['text':' Create a 1D row-wise average 2nd moment tensor.','line_number':466,'multiline':False]['text':' Create an indexing array containing values which index into grad','line_number':473,'multiline':False]['text':' Note that unlike SparseAdam, RowWiseSparseAdam uses a moment','line_number':484,'multiline':False]['text':' tensor that is strictly 1-dimensional and equal in length to the','line_number':485,'multiline':False]['text':' first dimension of the parameters, so indices must also be','line_number':486,'multiline':False]['text':' 1-dimensional.','line_number':487,'multiline':False]['text':' Verify that the generated indices are unique','line_number':492,'multiline':False]['text':' Sparsify grad','line_number':495,'multiline':False]['text':' Iter lives on the CPU','line_number':518,'multiline':False]