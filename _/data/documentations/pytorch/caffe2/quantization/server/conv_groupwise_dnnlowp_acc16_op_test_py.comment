['text':' Increase this threshold to test acc16 with randomly generated data','line_number':22,'multiline':False]['text':' correctness test with no quantization error in inputs','line_number':29,'multiline':False]['text':' X and W have scale 1, so exactly represented after quantization','line_number':71,'multiline':False]['text':' This was made sure by having at least one 0 and one 255 for unsigned','line_number':72,'multiline':False]['text':' 8-bit tensors, and at least one -128 and one 127 for signed 8-bit','line_number':73,'multiline':False]['text':' tensors.','line_number':74,'multiline':False]['text':' Since fbgemm_acc16 accumulates to 16-bit, To avoid overflow, we use','line_number':75,'multiline':False]['text':' small numbers except for those 0, 255, -128, and 127, for this test','line_number':76,'multiline':False]['text':' We also make sure 255, -128, or 127 are not multiplied together by','line_number':77,'multiline':False]['text':' putting them in different input channels and the corresponding input','line_number':78,'multiline':False]['text':' channel in other matrix is 0.','line_number':79,'multiline':False]['text':' For example, we put 255 in input channel 1 in X, so we make the','line_number':80,'multiline':False]['text':' corresponding input channel in W all zeros.','line_number':81,'multiline':False]['text':' "zeros"','line_number':104,'multiline':False]['text':' No input quantization error in bias','line_number':117,'multiline':False]['text':' groupwise quantization only works with static quantization','line_number':164,'multiline':False]['text':' so we need to set quantization parameters','line_number':165,'multiline':False]['text':' "zeros"','line_number':241,'multiline':False]['text':' groupwise quantization only works with static quantization','line_number':320,'multiline':False]['text':' so we need to set quantization parameters','line_number':321,'multiline':False]