['text':' NOLINTNEXTLINE(bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions)','line_number':18,'multiline':False]['text':' NOLINTNEXTLINE(bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions)','line_number':20,'multiline':False]['text':' Look at mapping [start_bin, start_bin + nbins_selected) to','line_number':30,'multiline':False]['text':' [0, 1 << precision) for every (start_bin, nbins_selected) combination and','line_number':31,'multiline':False]['text':' pick the one with smallest KL divergence','line_number':32,'multiline':False]['text':' if (nbins_selected % dst_nbins != 0) continue;','line_number':37,'multiline':False]['text':' NOLINTNEXTLINE(cppcoreguidelines-init-variables)','line_number':52,'multiline':False]['text':' sum outliers','line_number':57,'multiline':False]['text':' NOLINTNEXTLINE(cppcoreguidelines-init-variables)','line_number':59,'multiline':False]['text':' each destination bin corresponds to a quantized value','line_number':70,'multiline':False]['text':' NOLINTNEXTLINE(bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions)','line_number':76,'multiline':False]['text':' src_bin','line_number':108,'multiline':False]['text':' src_bin','line_number':136,'multiline':False]['text':' dst_bin','line_number':137,'multiline':False]['text':' for each start_bin','line_number':144,'multiline':False]['text':' for each nbins_selected','line_number':147,'multiline':False]['text':' NOLINTNEXTLINE(cppcoreguidelines-avoid-magic-numbers,bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions)','line_number':172,'multiline':False]['text':' NOLINTNEXTLINE(cppcoreguidelines-avoid-magic-numbers,bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions)','line_number':174,'multiline':False]['text':' ChooseQuantizationParams','line_number':179,'multiline':False]['text':' namespace dnnlowp','line_number':181,'multiline':False]