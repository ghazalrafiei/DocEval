['text':' Enable compiler vectorized version only if numerical consistency is not','line_number':9,'multiline':False]['text':' required between dev and opt versions - disabled for now','line_number':10,'multiline':False]['text':' Implements the vectorized version of std::max() operation,','line_number':17,'multiline':False]['text':' which DOESNOT propagates NaN for second argument','line_number':18,'multiline':False]['text':' std::max(NaN, nonNan) -> NaN','line_number':24,'multiline':False]['text':' std::max(NaN, nonNan) -> NaN','line_number':30,'multiline':False]['text':' Implements recieprocal method based on newton-rapson method','line_number':34,'multiline':False]['text':' 1. user RCP approximiation','line_number':35,'multiline':False]['text':' 2. update with RCP = RCP * (2 - X * RCP)','line_number':36,'multiline':False]['text':' MKL VML function templates.','line_number':82,'multiline':False]['text':' Don't bother calling reserve; calls after the first will get a','line_number':262,'multiline':False]['text':' correctly-sized allocation anyway.','line_number':263,'multiline':False]['text':' Process K rows at a time for effective vectorization with small rows.','line_number':272,'multiline':False]['text':' ((x + lambda2)^lambda1 - 1)/lambda1, if lambda1 != 0','line_number':280,'multiline':False]['text':' ln(x + lambda2), if lambda1 == 0','line_number':302,'multiline':False]['text':' mix zeros and nonzeros','line_number':317,'multiline':False]['text':' Truncate to original size, and re-tile with offsets this time.','line_number':336,'multiline':False]['text':' Truncate to original size.','line_number':358,'multiline':False]['text':' namespace caffe2::detail','line_number':398,'multiline':False]