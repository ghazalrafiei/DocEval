['text':' Registry() is defined in .cpp file to make registration work across','line_number':14,'multiline':False]['text':' multiple shared libraries loaded with RTLD_LOCAL','line_number':15,'multiline':False]['text':' Disallow registration after GlobalInit of early init functions','line_number':27,'multiline':False]['text':' Run immediately, since GlobalInit already ran. This should be','line_number':32,'multiline':False]['text':' rare but we want to allow it in some cases.','line_number':33,'multiline':False]['text':' TODO(orionr): Consider removing argc and argv for non-early','line_number':36,'multiline':False]['text':' registration. Unfortunately that would require a new InitFunction','line_number':37,'multiline':False]['text':' typedef, so not making the change right now.','line_number':38,'multiline':False]['text':'','line_number':39,'multiline':False]['text':' Note that init doesn't receive argc and argv, so the function','line_number':40,'multiline':False]['text':' might fail and we want to raise an error in that case.','line_number':41,'multiline':False]['text':' Wait until GlobalInit to run','line_number':47,'multiline':False]['text':' Run all registered initialization functions. This has to be called AFTER','line_number':74,'multiline':False]['text':' all static initialization are finished and main() has started, since we are','line_number':75,'multiline':False]['text':' using logging.','line_number':76,'multiline':False]['text':' namespace internal','line_number':97,'multiline':False]['text':' namespace','line_number':120,'multiline':False]['text':' namespace','line_number':126,'multiline':False]['text':'*
 * @brief Determine whether GlobalInit has already been run
 ','line_number':128,'multiline':True]['text':'*
 * @brief Initialize the global environment of caffe2.
 *
 * Caffe2 uses a registration pattern for initialization functions. Custom
 * initialization functions should take the signature
 *     bool (*func)(int*, char***)
 * where the pointers to argc and argv are passed in. Caffe2 then runs the
 * initialization in three phases:
 * (1) Functions registered with REGISTER_CAFFE2_EARLY_INIT_FUNCTION. Note that
 *     since it is possible the logger is not initialized yet, any logging in
 *     such early init functions may not be printed correctly.
 * (2) Parses Caffe-specific commandline flags, and initializes caffe logging.
 * (3) Functions registered with REGISTER_CAFFE2_INIT_FUNCTION.
 * If there is something wrong at each stage, the function returns false. If
 * the global initialization has already been run, the function returns false
 * as well.
 *
 * GlobalInit is re-entrant safe; a re-entrant call will no-op and exit.
 *
 * GlobalInit is safe to call multiple times but not idempotent;
 * successive calls will parse flags and re-set caffe2 logging levels from
 * flags as needed, but NOT re-run early init and init functions.
 *
 * GlobalInit is also thread-safe and can be called concurrently.
 ','line_number':143,'multiline':True]['text':'*
 * @brief Initialize the global environment without command line arguments
 *
 * This is a version of the GlobalInit where no argument is passed in.
 * On mobile devices, use this global init, since we cannot pass the
 * command line options to caffe2, no arguments are passed.
 ','line_number':170,'multiline':True]['text':' namespace caffe2','line_number':178,'multiline':False]['text':' CAFFE2_CORE_INIT_H_','line_number':179,'multiline':False]