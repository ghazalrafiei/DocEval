['text':' namespace','line_number':41,'multiline':False]['text':' NOLINTNEXTLINE(modernize-use-equals-default)','line_number':49,'multiline':False]['text':' NOLINTNEXTLINE(modernize-use-equals-default)','line_number':51,'multiline':False]['text':'*
   * Serializes a Blob. Note that this blob has to contain Tensor,
   * otherwise this function produces a fatal error.
   ','line_number':53,'multiline':True]['text':' For simplicity we will just serialize the 4-byte content as a string.','line_number':67,'multiline':False]['text':' NOLINTNEXTLINE(hicpp-avoid-goto,cppcoreguidelines-avoid-goto)','line_number':110,'multiline':False]['text':' When not null, we should only call with the right type.','line_number':119,'multiline':False]['text':' NOLINTNEXTLINE(hicpp-avoid-goto,cppcoreguidelines-avoid-goto)','line_number':121,'multiline':False]['text':' Also test that Reset works.','line_number':129,'multiline':False]['text':' NOLINTNEXTLINE(bugprone-use-after-move,hicpp-avoid-goto,clang-analyzer-cplusplus.Move,cppcoreguidelines-avoid-goto)','line_number':140,'multiline':False]['text':' NOLINTNEXTLINE(hicpp-avoid-goto,cppcoreguidelines-avoid-goto)','line_number':149,'multiline':False]['text':' won't work because it's not default constructible','line_number':151,'multiline':False]['text':' blob.GetMutable<BlobTestNonDefaultConstructible>();','line_number':152,'multiline':False]['text':' NOLINTNEXTLINE(hicpp-avoid-goto,cppcoreguidelines-avoid-goto)','line_number':156,'multiline':False]['text':' Also test that Reset works.','line_number':170,'multiline':False]['text':' NOLINTNEXTLINE(cppcoreguidelines-pro-type-member-init)','line_number':176,'multiline':False]['text':' Also test that Reset works.','line_number':180,'multiline':False]['text':' int and float are same size, so should retain the pointer','line_number':210,'multiline':False]['text':' NB: this is only true when the use_count of the underlying Storage is 1, if','line_number':211,'multiline':False]['text':' the underlying Storage is shared between multiple Tensors We'll create a','line_number':212,'multiline':False]['text':' new Storage when the data type changes','line_number':213,'multiline':False]['text':' at::Half is smaller, so still should share buffer','line_number':218,'multiline':False]['text':' share the data with other tensor so that the pointer won't be reused','line_number':223,'multiline':False]['text':' when we reallocate','line_number':224,'multiline':False]['text':' but double is bigger, so it should allocate a new one','line_number':226,'multiline':False]['text':' this doesn't compile - good!','line_number':241,'multiline':False]['text':' auto* ptr = tensor.mutable_data<BlobTestNonDefaultConstructible>();','line_number':242,'multiline':False]['text':' NOLINTNEXTLINE(hicpp-avoid-goto,cppcoreguidelines-avoid-goto)','line_number':243,'multiline':False]['text':' output value can be arbitrary, but the call to data() shouldn't crash','line_number':338,'multiline':False]['text':' Set one value, check the other','line_number':363,'multiline':False]['text':' NOLINTNEXTLINE(modernize-avoid-c-arrays,cppcoreguidelines-avoid-magic-numbers,cppcoreguidelines-avoid-c-arrays)','line_number':375,'multiline':False]['text':' Set one value, check the other','line_number':381,'multiline':False]['text':' NOLINTNEXTLINE(modernize-avoid-c-arrays,cppcoreguidelines-avoid-magic-numbers,cppcoreguidelines-avoid-c-arrays)','line_number':393,'multiline':False]['text':' Set one value, check the other','line_number':400,'multiline':False]['text':' Set one value, check the other','line_number':423,'multiline':False]['text':' Set flags (defaults)','line_number':464,'multiline':False]['text':' Expanding - will reallocate','line_number':472,'multiline':False]['text':' This check can fail when malloc() returns the same recently freed address','line_number':477,'multiline':False]['text':' EXPECT_NE(ptr, larger_ptr);','line_number':478,'multiline':False]['text':' Shrinking - will not reallocate','line_number':480,'multiline':False]['text':' resize to 0 in the meantime;','line_number':485,'multiline':False]['text':' Expanding but still under capacity - will not reallocate','line_number':487,'multiline':False]['text':' Set flags','line_number':495,'multiline':False]['text':' Shrinking - will not reallocate','line_number':503,'multiline':False]['text':' Resize to more than maximum shrink, should reallocate','line_number':508,'multiline':False]['text':' This check can fail when malloc() returns the same recently freed address','line_number':513,'multiline':False]['text':' EXPECT_NE(ptr, new_ptr);','line_number':514,'multiline':False]['text':' Restore default flags','line_number':516,'multiline':False]['text':' NOLINTNEXTLINE(hicpp-avoid-goto,cppcoreguidelines-avoid-goto)','line_number':524,'multiline':False]['text':' NOLINTNEXTLINE(hicpp-avoid-goto,cppcoreguidelines-avoid-goto)','line_number':532,'multiline':False]['text':' Change the original tensor','line_number':558,'multiline':False]['text':' Confirm that the cloned tensor is not affect','line_number':563,'multiline':False]['text':' Initialize a large tensor.','line_number':570,'multiline':False]['text':' Try to go even larger, but this time we will not do mutable_data because we','line_number':593,'multiline':False]['text':' do not have a large enough memory.','line_number':594,'multiline':False]['text':' NOLINTNEXTLINE(performance-unnecessary-copy-initialization)','line_number':613,'multiline':False]['text':' NOLINTNEXTLINE(performance-unnecessary-copy-initialization)','line_number':615,'multiline':False]['text':' NOLINTNEXTLINE(hicpp-avoid-goto,cppcoreguidelines-avoid-goto)','line_number':627,'multiline':False]['text':' NOLINTNEXTLINE(cppcoreguidelines-avoid-non-const-global-variables,hicpp-avoid-goto,cppcoreguidelines-avoid-goto)','line_number':691,'multiline':False]['text':' NOLINTNEXTLINE(cppcoreguidelines-avoid-non-const-global-variables,hicpp-avoid-goto,cppcoreguidelines-avoid-goto)','line_number':693,'multiline':False]['text':' NOLINTNEXTLINE(cppcoreguidelines-avoid-non-const-global-variables,hicpp-avoid-goto,cppcoreguidelines-avoid-goto)','line_number':695,'multiline':False]['text':' NOLINTNEXTLINE(cppcoreguidelines-avoid-non-const-global-variables,hicpp-avoid-goto,cppcoreguidelines-avoid-goto)','line_number':697,'multiline':False]['text':' NOLINTNEXTLINE(cppcoreguidelines-avoid-non-const-global-variables,hicpp-avoid-goto,cppcoreguidelines-avoid-goto)','line_number':699,'multiline':False]['text':' NOLINTNEXTLINE(cppcoreguidelines-avoid-non-const-global-variables,hicpp-avoid-goto,cppcoreguidelines-avoid-goto)','line_number':701,'multiline':False]['text':' NOLINTNEXTLINE(cppcoreguidelines-avoid-non-const-global-variables,hicpp-avoid-goto,cppcoreguidelines-avoid-goto)','line_number':703,'multiline':False]['text':' NOLINTNEXTLINE(cppcoreguidelines-avoid-non-const-global-variables,hicpp-avoid-goto,cppcoreguidelines-avoid-goto)','line_number':705,'multiline':False]['text':' NOLINTNEXTLINE(cppcoreguidelines-avoid-non-const-global-variables,hicpp-avoid-goto,cppcoreguidelines-avoid-goto)','line_number':707,'multiline':False]['text':' NOLINTNEXTLINE(hicpp-avoid-goto,cppcoreguidelines-avoid-goto)','line_number':723,'multiline':False]['text':' NOLINTNEXTLINE(hicpp-avoid-goto,cppcoreguidelines-avoid-goto)','line_number':767,'multiline':False]['text':' "Randomly" set bits.','line_number':795,'multiline':False]['text':' NOLINTNEXTLINE(clang-analyzer-security.insecureAPI.rand)','line_number':799,'multiline':False]['text':' NOLINTNEXTLINE(modernize-use-equals-default)','line_number':838,'multiline':False]['text':' unused ','line_number':840,'multiline':True]['text':' This struct is used to test serialization and deserialization of huge
   * blobs, that are not tensors.
   ','line_number':970,'multiline':True]['text':' implicit ','line_number':974,'multiline':True]['text':' unused ','line_number':985,'multiline':True]['text':' NOLINTNEXTLINE(modernize-use-equals-default)','line_number':993,'multiline':False]['text':' NOLINTNEXTLINE(modernize-use-equals-default)','line_number':995,'multiline':False]['text':' namespace','line_number':1019,'multiline':False]['text':'key','line_number':1093,'multiline':True]['text':'value','line_number':1094,'multiline':True]['text':' This test preserves a legacy behavior that dtype-unitialized tensors can','line_number':1176,'multiline':False]['text':' go through serialization. We want to kill this behavior - when it's done,','line_number':1177,'multiline':False]['text':' remove this test','line_number':1178,'multiline':False]['text':'blobName','line_number':1186,'multiline':True]['text':' Deserializing an empty Tensor gives a {0}-dim, float CPU Tensor','line_number':1194,'multiline':False]['text':' NOLINTNEXTLINE(cppcoreguidelines-avoid-magic-numbers,clang-analyzer-security.insecureAPI.rand)','line_number':1226,'multiline':False]['text':' NOLINTNEXTLINE(clang-analyzer-security.insecureAPI.rand)','line_number':1230,'multiline':False]['text':' NOLINTNEXTLINE(cppcoreguidelines-avoid-magic-numbers,clang-analyzer-security.insecureAPI.rand)','line_number':1234,'multiline':False]['text':' NOLINTNEXTLINE(bugprone-signed-char-misuse,cppcoreguidelines-avoid-magic-numbers,clang-analyzer-security.insecureAPI.rand)','line_number':1238,'multiline':False]['text':' NOLINTNEXTLINE(cppcoreguidelines-avoid-magic-numbers,clang-analyzer-security.insecureAPI.rand)','line_number':1242,'multiline':False]['text':' NOLINTNEXTLINE(cppcoreguidelines-avoid-magic-numbers,clang-analyzer-security.insecureAPI.rand)','line_number':1246,'multiline':False]['text':' NOLINTNEXTLINE(cppcoreguidelines-avoid-magic-numbers,clang-analyzer-security.insecureAPI.rand)','line_number':1250,'multiline':False]['text':' Proto with int32','line_number':1268,'multiline':False]['text':' Proto with bytes','line_number':1274,'multiline':False]['text':' Proto with int32 from proto with bytes','line_number':1279,'multiline':False]['text':' namespace','line_number':1305,'multiline':False]['text':' namespace caffe2','line_number':1306,'multiline':False]