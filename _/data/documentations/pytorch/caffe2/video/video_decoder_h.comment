['text':' enum to specify 3 special fps sampling behaviors:','line_number':25,'multiline':False]['text':' 0: disable fps sampling, no frame sampled at all','line_number':26,'multiline':False]['text':' -1: unlimited fps sampling, will sample at native video fps','line_number':27,'multiline':False]['text':' -2: disable fps sampling, but will get the frame at specific timestamp','line_number':28,'multiline':False]['text':' three different types of resolution when decoding the video','line_number':35,'multiline':False]['text':' 0: resize to width x height and ignore the aspect ratio;','line_number':36,'multiline':False]['text':' 1: resize to short_edge and keep the aspect ratio;','line_number':37,'multiline':False]['text':' 2: using the original resolution of the video; if resolution','line_number':38,'multiline':False]['text':'    is smaller than crop_size x crop_size, resize to crop_size','line_number':39,'multiline':False]['text':'    and keep the aspect ratio;','line_number':40,'multiline':False]['text':' 3: for xray video service','line_number':41,'multiline':False]['text':' three different types of decoding behavior are supported','line_number':48,'multiline':False]['text':' 0: do temporal jittering to sample a random clip from the video','line_number':49,'multiline':False]['text':' 1: uniformly sample multiple clips from the video;','line_number':50,'multiline':False]['text':' 2: sample a clip from a given starting frame','line_number':51,'multiline':False]['text':' 3: for xray video service','line_number':52,'multiline':False]['text':' sampling interval for fps starting at specified timestamp','line_number':59,'multiline':False]['text':' use enum SpecialFps to set special fps decoding behavior','line_number':60,'multiline':False]['text':' note sampled fps will not always accurately follow the target fps,','line_number':61,'multiline':False]['text':' because sampled frame has to snap to actual frame timestamp,','line_number':62,'multiline':False]['text':' e.g. video fps = 25, sample fps = 4 will sample every 0.28s, not 0.25','line_number':63,'multiline':False]['text':' video fps = 25, sample fps = 5 will sample every 0.24s, not 0.2,','line_number':64,'multiline':False]['text':' because of floating-point division accuracy (1 / 5.0 is not exactly 0.2)','line_number':65,'multiline':False]['text':' return all key-frames regardless of specified fps','line_number':78,'multiline':False]['text':' return audio data while decoding the video','line_number':81,'multiline':False]['text':' for sampling audio data','line_number':84,'multiline':False]['text':' Output image pixel format','line_number':89,'multiline':False]['text':' Index of stream to decode.','line_number':92,'multiline':False]['text':' -1 will automatically decode the first video stream.','line_number':93,'multiline':False]['text':' How many frames to output at most from the video','line_number':96,'multiline':False]['text':' -1 no limit','line_number':97,'multiline':False]['text':' params for video resolution','line_number':100,'multiline':False]['text':' Output video size, -1 to preserve origianl dimension','line_number':105,'multiline':False]['text':' max output dimension, -1 to preserve original size','line_number':109,'multiline':False]['text':' the larger dimension of the video will be scaled to this size,','line_number':110,'multiline':False]['text':' and the second dimension will be scaled to preserve aspect ratio','line_number':111,'multiline':False]['text':' params for decoding behavior','line_number':114,'multiline':False]['text':' intervals_ control variable sampling fps between different timestamps','line_number':118,'multiline':False]['text':' intervals_ must be ordered strictly ascending by timestamps','line_number':119,'multiline':False]['text':' the first interval must have a timestamp of zero','line_number':120,'multiline':False]['text':' fps must be either the 3 special fps defined in SpecialFps, or > 0','line_number':121,'multiline':False]['text':'*
   * FPS of output frames
   * setting here will reset intervals_ and force decoding at target FPS
   * This can be used if user just want to decode at a steady fps
   ','line_number':126,'multiline':True]['text':'*
   * Sample output frames at a specified list of timestamps
   * Timestamps must be in increasing order, and timestamps past the end of the
   * video will be ignored
   * Setting here will reset intervals_
   ','line_number':137,'multiline':True]['text':' insert an interval per desired frame.','line_number':145,'multiline':False]['text':'*
   * Pixel format of output buffer, default PIX_FMT_RGB24
   ','line_number':152,'multiline':True]['text':'*
   * Return all key-frames
   ','line_number':160,'multiline':True]['text':'*
   * Index of video stream to process, defaults to the first video stream
   ','line_number':168,'multiline':True]['text':'*
   * Only output this many frames, default to no limit
   ','line_number':176,'multiline':True]['text':'*
   * Output frame width, default to video width
   ','line_number':184,'multiline':True]['text':'*
   * Output frame height, default to video height
   ','line_number':192,'multiline':True]['text':'*
   * Max dimension of either width or height, if any is bigger
   * it will be scaled down to this and econd dimension
   * will be scaled down to maintain aspect ratio.
   ','line_number':200,'multiline':True]['text':' data structure for storing decoded video frames','line_number':211,'multiline':False]['text':' decoded data buffer','line_number':221,'multiline':False]['text':' size in bytes','line_number':224,'multiline':False]['text':' frame dimensions','line_number':227,'multiline':False]['text':' timestamp in seconds since beginning of video','line_number':231,'multiline':False]['text':' true if this is a key frame.','line_number':234,'multiline':False]['text':' index of frame in video','line_number':237,'multiline':False]['text':' Sequential number of outputted frame','line_number':240,'multiline':False]['text':' data structure for storing decoded audio data','line_number':244,'multiline':False]['text':' no write function','line_number':278,'multiline':False]['text':' no write function','line_number':294,'multiline':False]['text':' from current position','line_number':342,'multiline':False]['text':' from eof','line_number':343,'multiline':False]['text':' from beginning of file','line_number':344,'multiline':False]['text':' from current position','line_number':378,'multiline':False]['text':' from eof','line_number':381,'multiline':False]['text':' from beginning of file','line_number':384,'multiline':False]['text':' for file mode','line_number':400,'multiline':False]['text':' for memory mode','line_number':403,'multiline':False]['text':'decoded audio data','line_number':429,'multiline':True]['text':'videoMeta','line_number':430,'multiline':True]['text':'lastFrameTimestamp','line_number':431,'multiline':True]['text':'videoMeta','line_number':518,'multiline':True]['text':' namespace caffe2','line_number':523,'multiline':False]['text':' CAFFE2_VIDEO_VIDEO_DECODER_H_','line_number':525,'multiline':False]