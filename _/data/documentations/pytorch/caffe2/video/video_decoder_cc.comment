['text':' from','line_number':34,'multiline':False]['text':' https://www.ffmpeg.org/doxygen/2.3/decoding_encoding_8c-example.html#a57','line_number':35,'multiline':False]['text':' This should not occur, checking just for paranoia','line_number':40,'multiline':False]['text':' from https://www.ffmpeg.org/doxygen/2.1/group__lswr.html#details','line_number':44,'multiline':False]['text':' resample the audio data','line_number':66,'multiline':False]['text':' dominant height','line_number':94,'multiline':False]['text':' use short_edge for rescale','line_number':96,'multiline':False]['text':' use long_edge for rescale','line_number':101,'multiline':False]['text':' dominant width','line_number':107,'multiline':False]['text':' use short_edge for rescale','line_number':109,'multiline':False]['text':' use long_edge for rescale','line_number':114,'multiline':False]['text':' init packet','line_number':137,'multiline':False]['text':' Determining the input format:','line_number':145,'multiline':False]['text':' seek back to start of stream','line_number':154,'multiline':False]['text':' Determine the input-format:','line_number':161,'multiline':False]['text':' this is to avoid the double-free error','line_number':163,'multiline':False]['text':' Decode the first video stream','line_number':182,'multiline':False]['text':' Initialize codec','line_number':208,'multiline':False]['text':' see e.g. ridge/decoder/StreamDecoder.cpp','line_number':228,'multiline':False]['text':' Calculate if we need to rescale the frames','line_number':262,'multiline':False]['text':' if the original resolution is too low,','line_number':269,'multiline':False]['text':' make it at least the same size as crop_size_','line_number':270,'multiline':False]['text':' resize the image to the predefined','line_number':276,'multiline':False]['text':' short_edge_ resolution while keep the aspect ratio','line_number':277,'multiline':False]['text':' resize the image to the predefined','line_number':281,'multiline':False]['text':' resolution and ignore the aspect ratio','line_number':282,'multiline':False]['text':' Make sure that we have a valid format','line_number':290,'multiline':False]['text':' Create a scale context','line_number':296,'multiline':False]['text':' Getting video meta data','line_number':309,'multiline':False]['text':' avoid division by zero, code adapted from','line_number':316,'multiline':False]['text':' https://www.ffmpeg.org/doxygen/0.6/rational_8h-source.html','line_number':317,'multiline':False]['text':' fps must be 0, -1, -2 or > 0','line_number':342,'multiline':False]['text':' Initialize frame and packet.','line_number':358,'multiline':False]['text':' These will be reused across calls.','line_number':359,'multiline':False]['text':' frame index in video stream','line_number':363,'multiline':False]['text':' frame index of outputed frames','line_number':365,'multiline':False]['text':' identify the starting point from where we must start decoding ','line_number':368,'multiline':True]['text':' we have a valid duration and nb_frames. We can safely
       * detect an intermediate timestamp to start decoding from. ','line_number':374,'multiline':True]['text':' leave a margin of 10 frames to take in to account the error','line_number':377,'multiline':False]['text':' from av_seek_frame','line_number':378,'multiline':False]['text':' if we need to do temporal jittering','line_number':381,'multiline':False]['text':' estimate the average duration for the required # of frames ','line_number':383,'multiline':True]['text':' pick a random timestamp between ts1 and ts2. ts2 is selected such','line_number':390,'multiline':False]['text':' that you have enough frames to satisfy the required # of frames.','line_number':391,'multiline':False]['text':' seek a frame at start_ts','line_number':393,'multiline':False]['text':' if we need to decode from the start_frm','line_number':400,'multiline':False]['text':' seek a frame at start_ts','line_number':408,'multiline':False]['text':' fall back to default decoding of all frames from start ','line_number':420,'multiline':True]['text':' There is a delay between reading packets from the','line_number':435,'multiline':False]['text':' transport and getting decoded frames back.','line_number':436,'multiline':False]['text':' Therefore, after EOF, continue going while','line_number':437,'multiline':False]['text':' the decoder is still giving us frames.','line_number':438,'multiline':False]['text':' either you must decode all frames or decode up to maxFrames
            * based on status of the mustDecodeAll flag ','line_number':441,'multiline':True]['text':' If on the last interval and not autodecoding keyframes and a
            * SpecialFps indicates no more frames are needed, stop decoding ','line_number':444,'multiline':True]['text':' stay in the while loop to flush frames','line_number':458,'multiline':False]['text':' Audio packets can have multiple audio frames in a single packet','line_number':471,'multiline':False]['text':' Nothing to do without a picture','line_number':498,'multiline':False]['text':' process current frame if:
             * 1) We are not doing selective decoding and mustDecodeAll
             *    OR
             * 2) We are doing selective decoding and current frame
             *   timestamp is >= start_ts from where we start selective
             *   decoding','line_number':509,'multiline':True]['text':' if reaching the next interval, update the current fps','line_number':515,'multiline':False]['text':' and reset lastFrameTimestamp so the current frame could be','line_number':516,'multiline':False]['text':' sampled (unless fps == SpecialFps::SAMPLE_NO_FRAME)','line_number':517,'multiline':False]['text':' keyFrame will bypass all checks on fps sampling settings','line_number':532,'multiline':False]['text':' if fps == SpecialFps::SAMPLE_NO_FRAME (0), don't sample at all','line_number':535,'multiline':False]['text':' fps is considered reached in the following cases:','line_number':541,'multiline':False]['text':' 1. lastFrameTimestamp < 0 - start of a new interval','line_number':542,'multiline':False]['text':'    (or first frame)','line_number':543,'multiline':False]['text':' 2. currFps == SpecialFps::SAMPLE_ALL_FRAMES (-1) - sample every','line_number':544,'multiline':False]['text':'    frame','line_number':545,'multiline':False]['text':' 3. timestamp - lastFrameTimestamp has reached target fps and','line_number':546,'multiline':False]['text':'    currFps > 0 (not special fps setting)','line_number':547,'multiline':False]['text':' different modes for fps:','line_number':548,'multiline':False]['text':' SpecialFps::SAMPLE_NO_FRAMES (0):','line_number':549,'multiline':False]['text':'     disable fps sampling, no frame sampled at all','line_number':550,'multiline':False]['text':' SpecialFps::SAMPLE_ALL_FRAMES (-1):','line_number':551,'multiline':False]['text':'     unlimited fps sampling, will sample at native video fps','line_number':552,'multiline':False]['text':' SpecialFps::SAMPLE_TIMESTAMP_ONLY (-2):','line_number':553,'multiline':False]['text':'     disable fps sampling, but will get the frame at specific','line_number':554,'multiline':False]['text':'     timestamp','line_number':555,'multiline':False]['text':' others (> 0): decoding at the specified fps','line_number':556,'multiline':False]['text':' enough frames','line_number':573,'multiline':False]['text':' Determine required buffer size and allocate buffer','line_number':585,'multiline':False]['text':' of while loop','line_number':635,'multiline':False]['text':' free all stuffs','line_number':638,'multiline':False]['text':' In case of decoding error','line_number':651,'multiline':False]['text':' free all stuffs','line_number':652,'multiline':False]['text':' free the sampledFrames and sampledAudio','line_number':694,'multiline':False]['text':' decoding from buffer or file','line_number':724,'multiline':False]['text':' get the RGB frames for each clip','line_number':771,'multiline':False]['text':' namespace caffe2','line_number':802,'multiline':False]