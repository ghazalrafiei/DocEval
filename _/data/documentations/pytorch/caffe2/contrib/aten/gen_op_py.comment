['text':'!/bin/env python3','line_number':1,'multiline':False]['text':' Copyright (c) 2016-present, Facebook, Inc.','line_number':3,'multiline':False]['text':'','line_number':4,'multiline':False]['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':5,'multiline':False]['text':' you may not use this file except in compliance with the License.','line_number':6,'multiline':False]['text':' You may obtain a copy of the License at','line_number':7,'multiline':False]['text':'','line_number':8,'multiline':False]['text':'     http://www.apache.org/licenses/LICENSE-2.0','line_number':9,'multiline':False]['text':'','line_number':10,'multiline':False]['text':' Unless required by applicable law or agreed to in writing, software','line_number':11,'multiline':False]['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':12,'multiline':False]['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':13,'multiline':False]['text':' See the License for the specific language governing permissions and','line_number':14,'multiline':False]['text':' limitations under the License.','line_number':15,'multiline':False]['text':'#############################################################################','line_number':16,'multiline':False]['text':' use faster C loader if available','line_number':49,'multiline':False]['text':' type: ignore[assignment, misc]','line_number':52,'multiline':False]['text':' Sparse shouldn't appear in public API, seems to be temporary bug','line_number':66,'multiline':False]['text':' for each aten type, how do we handle a return value of that type?','line_number':79,'multiline':False]['text':' for each non-Tensor aten argument, how to we read it from caffe2's','line_number':88,'multiline':False]['text':' attribute list. Most of these call runtime functions defined in the','line_number':89,'multiline':False]['text':' template class.','line_number':90,'multiline':False]['text':' for BC reasons we want to route some of the functions to different','line_number':102,'multiline':False]['text':' implementations','line_number':103,'multiline':False]['text':' last num_default values should be default','line_number':112,'multiline':False]['text':' filter the list of declarations removing things we cannot support','line_number':120,'multiline':False]['text':' Ignore all families (!) of functions that have TensorOptions (i.e. tensor factory methods).','line_number':122,'multiline':False]['text':' skip all in-place operators for now since aten cannot Resize','line_number':129,'multiline':False]['text':' caffe2 memory inside an operator','line_number':130,'multiline':False]['text':' _out variants also work in-place on arguments taken as destinations','line_number':134,'multiline':False]['text':' we also cannot handle these because aten cannot resize caffe2 Tensors','line_number':135,'multiline':False]['text':' skip if no return, previously it is 'void'','line_number':139,'multiline':False]['text':' skip return types we cannot handle','line_number':143,'multiline':False]['text':' skip arguments we cannot handle','line_number':150,'multiline':False]['text':' template for each potential operator.','line_number':159,'multiline':False]['text':' each operator has an integer 'key' associated with it, and','line_number':160,'multiline':False]['text':' a lambda that defines the operator','line_number':161,'multiline':False]['text':' non-tensor attributes are created in ${initialization}','line_number':162,'multiline':False]['text':' and then saved as arguments to the lambda','line_number':163,'multiline':False]['text':' Inputs/Outputs are read inside the lambda','line_number':164,'multiline':False]['text':'','line_number':165,'multiline':False]['text':' each implementation is defined in a separate method annotated with','line_number':166,'multiline':False]['text':' C10_NOINLINE to avoid inlining into the ATenOp constructor, which would','line_number':167,'multiline':False]['text':' trigger pathological compile times.','line_number':168,'multiline':False]['text':' [DESCRIPTORS]','line_number':252,'multiline':False]['text':' each option is associated with a descriptor string that is used','line_number':253,'multiline':False]['text':' to figure out which version of an op is being used:','line_number':254,'multiline':False]['text':' The format is:','line_number':255,'multiline':False]['text':'     opname-num_inputs-attribute_1-attribute2','line_number':256,'multiline':False]['text':' Example:','line_number':257,'multiline':False]['text':'  lerp-2-weight','line_number':258,'multiline':False]['text':'  the operator lerp takes 2 arguments and has the attribute weight','line_number':259,'multiline':False]['text':' map from descriptor string to the integer key in the switch statements','line_number':267,'multiline':False]['text':' that initializes the operators','line_number':268,'multiline':False]['text':' methods on type like 'ones' or 'zeros' always take a','line_number':280,'multiline':False]['text':' string attribute that is translated into the at::Type object','line_number':281,'multiline':False]['text':' e.g. "Float" is at::kFloat','line_number':282,'multiline':False]['text':' Pretend the flat argument list is a stack where the end is the top.','line_number':293,'multiline':False]['text':' NOTE: do not advance real_inputs here. After this we will','line_number':296,'multiline':False]['text':' switch to indexing the "stack" from the end','line_number':297,'multiline':False]['text':' NOTE: do not advance real_inputs here. After this we will','line_number':302,'multiline':False]['text':' switch to indexing the "stack" from the end','line_number':303,'multiline':False]['text':' load tensor inputs from Caffe2','line_number':308,'multiline':False]