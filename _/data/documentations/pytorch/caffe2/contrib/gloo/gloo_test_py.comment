['text':'!/usr/bin/env python3','line_number':1,'multiline':False]['text':' Queue for assertion errors on subprocesses','line_number':44,'multiline':False]['text':' Capture any exception thrown by the subprocess','line_number':47,'multiline':False]['text':' Start N processes in the background','line_number':57,'multiline':False]['text':' Test complete, join background processes','line_number':67,'multiline':False]['text':' Raise exception if we find any. Otherwise each worker','line_number':73,'multiline':False]['text':' should put a True into the queue','line_number':74,'multiline':False]['text':' Note that the following is executed ALSO after','line_number':75,'multiline':False]['text':' the last process was joined, so if ANY exception','line_number':76,'multiline':False]['text':' was raised, it will be re-raised here.','line_number':77,'multiline':False]['text':' If REDIS_HOST is set, use RedisStoreHandler for rendezvous.','line_number':99,'multiline':False]['text':' Run the net a few more times to check the operator','line_number':209,'multiline':False]['text':' works not just the first time it's called','line_number':210,'multiline':False]['text':' Run the net a few more times to check the operator','line_number':286,'multiline':False]['text':' works not just the first time it's called','line_number':287,'multiline':False]['text':' Specify distribution among ranks i.e. number of elements','line_number':388,'multiline':False]['text':' scattered/distributed to each process.','line_number':389,'multiline':False]['text':' Run the net a few more times to check the operator','line_number':414,'multiline':False]['text':' works not just the first time it's called','line_number':415,'multiline':False]['text':' create expected output','line_number':485,'multiline':False]['text':' Run the net a few more times to check the operator','line_number':495,'multiline':False]['text':' works not just the first time it's called','line_number':496,'multiline':False]['text':' Note: this test exercises the path where we fork a common world.','line_number':536,'multiline':False]['text':' We therefore don't need a comm size larger than 2. It used to be','line_number':537,'multiline':False]['text':' run with comm_size=8, which causes flaky results in a stress run.','line_number':538,'multiline':False]['text':' The flakiness was caused by too many listening sockets being','line_number':539,'multiline':False]['text':' created by Gloo context initialization (8 processes times','line_number':540,'multiline':False]['text':' 7 sockets times 20-way concurrency, plus TIME_WAIT).','line_number':541,'multiline':False]['text':' Run the net a few more times to check the operator','line_number':568,'multiline':False]['text':' works not just the first time it's called','line_number':569,'multiline':False]['text':' Caffe's for closers only:','line_number':600,'multiline':False]['text':' https://www.youtube.com/watch?v=QMFwFgG9NE8','line_number':601,'multiline':False]['text':' Sleep a bit to ensure others start the barrier','line_number':617,'multiline':False]['text':' Check that test finishes quickly because connections get closed.','line_number':642,'multiline':False]['text':' This assert used to check that the end to end runtime was less','line_number':643,'multiline':False]['text':' than 2 seconds, but this may not always be the case if there','line_number':644,'multiline':False]['text':' is significant overhead in starting processes. Ideally, this','line_number':645,'multiline':False]['text':' assert is replaced by one that doesn't depend on time but rather','line_number':646,'multiline':False]['text':' checks the success/failure status of the barrier that is run.','line_number':647,'multiline':False]