['text':' This file describes the translation of JIT schema to the structured functions API.','line_number':36,'multiline':False]['text':' This is similar to native API, but a number of historical problems with native','line_number':37,'multiline':False]['text':' API have been fixed.','line_number':38,'multiline':False]['text':' Translation of types occurring in JIT arguments to a C++ argument type.','line_number':41,'multiline':False]['text':' NB: For now, mutable doesn't do anything; but it could if we make','line_number':42,'multiline':False]['text':' some more nominal types','line_number':43,'multiline':False]['text':' If it's a value type, do the value type translation','line_number':45,'multiline':False]['text':' NB: structured kernels ALWAYS have symint off, since they involve actual','line_number':46,'multiline':False]['text':' kernels that require real ints.  The one exception is the','line_number':47,'multiline':False]['text':' CompositeExplicitAutograd and the meta function (which could','line_number':48,'multiline':False]['text':' hypothetically be SymInt), but for simplicity we plan for these to just','line_number':49,'multiline':False]['text':' be handled in Python','line_number':50,'multiline':False]['text':' TODO: delete these special cases; see torchgen.api.cpp--these','line_number':76,'multiline':False]['text':' must be changed in tandem, but there are problems; see','line_number':77,'multiline':False]['text':' https://github.com/pytorch/pytorch/pull/51485','line_number':78,'multiline':False]['text':' returns_type intentionally omitted, because structured kernels never "return";','line_number':93,'multiline':False]['text':' instead, they always indirectly report their outputs (in the case of a meta','line_number':94,'multiline':False]['text':' function, by calling set_output; in the case of an impl function, by writing','line_number':95,'multiline':False]['text':' directly into the provided out argument).','line_number':96,'multiline':False]['text':' Structured kernels are never defaulted','line_number':99,'multiline':False]['text':' A list of parameters for the impl function with','line_number':122,'multiline':False]['text':' certain parameters replaced with precomputed counterparts','line_number':123,'multiline':False]['text':' as specified in native_functions.yaml.','line_number':124,'multiline':False]['text':' If a is in precompute.replace, append the parameters','line_number':130,'multiline':False]['text':' that should replace it onto non_out_args_replaced.','line_number':131,'multiline':False]['text':' If not, push a as it is.','line_number':135,'multiline':False]['text':' g.out.precomputed.add is the list of parameters that are added','line_number':139,'multiline':False]['text':' without replacement after the non out args and just before the out args','line_number':140,'multiline':False]