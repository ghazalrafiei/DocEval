['text':' Owner(s): ["module: tests"]','line_number':1,'multiline':False]['text':' empty tensor indexing','line_number':31,'multiline':False]['text':' indexing with Ellipsis','line_number':42,'multiline':False]['text':' LongTensor indexing','line_number':62,'multiline':False]['text':' TODO: enable one indexing is implemented like in numpy','line_number':66,'multiline':False]['text':' self.assertEqual(reference[2, idx], torch.stack([reference[2, 2], reference[2, 4]]))','line_number':67,'multiline':False]['text':' self.assertEqual(reference[3, idx, 1], torch.stack([reference[3, 2], reference[3, 4]])[:, 1])','line_number':68,'multiline':False]['text':' None indexing','line_number':70,'multiline':False]['text':' indexing 0-length slice','line_number':77,'multiline':False]['text':' indexing with step','line_number':83,'multiline':False]['text':' Tests for Integer Array Indexing, Part I - Purely integer array','line_number':135,'multiline':False]['text':' indexing','line_number':136,'multiline':False]['text':' Creates the sequence in float since CPU half doesn't support the','line_number':139,'multiline':False]['text':' needed operations. Converts to dtype before returning.','line_number':140,'multiline':False]['text':' pick a random valid indexer type','line_number':146,'multiline':False]['text':' Only validates indexing and setting for halfs','line_number':176,'multiline':False]['text':' Case 1: Purely Integer Array Indexing','line_number':183,'multiline':False]['text':' setting values','line_number':187,'multiline':False]['text':' Tensor with stride != 1','line_number':190,'multiline':False]['text':' strided is [1, 3, 5, 7]','line_number':191,'multiline':False]['text':' stride is [4, 8]','line_number':205,'multiline':False]['text':' reference is 1 2','line_number':217,'multiline':False]['text':'              3 4','line_number':218,'multiline':False]['text':'              5 6','line_number':219,'multiline':False]['text':' setting values','line_number':249,'multiline':False]['text':' Verify still works with Transposed (i.e. non-contiguous) Tensors','line_number':259,'multiline':False]['text':' Transposed: [[0, 4, 8],','line_number':265,'multiline':False]['text':'              [1, 5, 9],','line_number':266,'multiline':False]['text':'              [2, 6, 10],','line_number':267,'multiline':False]['text':'              [3, 7, 11]]','line_number':268,'multiline':False]['text':' setting values','line_number':303,'multiline':False]['text':' stride != 1','line_number':314,'multiline':False]['text':' strided is [[1 3 5 7],','line_number':316,'multiline':False]['text':'             [9 11 13 15]]','line_number':317,'multiline':False]['text':' setting values','line_number':357,'multiline':False]['text':' strided is [[10, 11],','line_number':359,'multiline':False]['text':'             [17, 18]]','line_number':360,'multiline':False]['text':' Tests using less than the number of dims, and ellipsis','line_number':397,'multiline':False]['text':' reference is 1 2','line_number':399,'multiline':False]['text':'              3 4','line_number':400,'multiline':False]['text':'              5 6','line_number':401,'multiline':False]['text':' verify too many indices fails','line_number':410,'multiline':False]['text':' test invalid index fails','line_number':414,'multiline':False]['text':' can't test cuda because it is a device assert','line_number':416,'multiline':False]['text':' convert the Torch Tensor to a numpy array','line_number':427,'multiline':False]['text':' convert indices','line_number':431,'multiline':False]['text':' index and return as a Torch Tensor','line_number':440,'multiline':False]['text':' Tensor is  0  1  2  3  4','line_number':479,'multiline':False]['text':'            5  6  7  8  9','line_number':480,'multiline':False]['text':'           10 11 12 13 14','line_number':481,'multiline':False]['text':'           15 16 17 18 19','line_number':482,'multiline':False]['text':' grab the second, fourth columns','line_number':486,'multiline':False]['text':' first, third rows,','line_number':489,'multiline':False]['text':' weird shape','line_number':492,'multiline':False]['text':' negatives','line_number':495,'multiline':False]['text':' only test dupes on gets','line_number':501,'multiline':False]['text':' non-contiguous indexing subspace','line_number':535,'multiline':False]['text':' less dim, ellipsis','line_number':538,'multiline':False]['text':' ellipsis counts for nothing','line_number':551,'multiline':False]['text':' less dim, ellipsis','line_number':613,'multiline':False]['text':' note: these broadcast together and are transposed to the first dim','line_number':716,'multiline':False]['text':' This test is for tensors with number of elements >= INT_MAX (2^31 - 1).','line_number':743,'multiline':False]['text':' checks the issue with cuda: https://github.com/pytorch/pytorch/issues/39227','line_number':779,'multiline':False]['text':' and verifies consistency with CPU result','line_number':780,'multiline':False]['text':' TODO: replace with a better solution.','line_number':841,'multiline':False]['text':' Currently, here using torchscript to put None into indices.','line_number':842,'multiline':False]['text':' on C++ it gives indices as a list of 2 optional tensors: first is null and','line_number':843,'multiline':False]['text':' the second is a valid tensor.','line_number':844,'multiline':False]['text':' generate indices by random walk, this will create indices with','line_number':870,'multiline':False]['text':' lots of duplicates interleaved with each other','line_number':871,'multiline':False]['text':' no repeating indices for index_put','line_number':902,'multiline':False]['text':' Regression test for https://github.com/pytorch/pytorch/issues/94667','line_number':914,'multiline':False]['text':' note: these broadcast together and are transposed to the first dim','line_number':921,'multiline':False]['text':' test index','line_number':976,'multiline':False]['text':' test index_put, no accum','line_number':979,'multiline':False]['text':' From the NumPy indexing example','line_number':984,'multiline':False]['text':' From the NumPy indexing example','line_number':991,'multiline':False]['text':' empty assignment should have no effect but not throw an exception','line_number':1003,'multiline':False]['text':' this isn't technically necessary, but matches NumPy stride calculations.','line_number':1035,'multiline':False]['text':' prefix with a 1,1, to ensure we are compatible with numpy which cuts off prefix 1s','line_number':1060,'multiline':False]['text':' (some of these ops already prefix a 1 to the size)','line_number':1061,'multiline':False]['text':' check prefix with  non-1s doesn't work','line_number':1094,'multiline':False]['text':' NumPy: ValueError','line_number':1096,'multiline':False]['text':' non-scalar indexed with scalars','line_number':1106,'multiline':False]['text':' indexing by a scalar should slice (not copy)','line_number':1113,'multiline':False]['text':' scalar indexed with scalar','line_number':1118,'multiline':False]['text':' non-scalar indexed with scalars','line_number':1129,'multiline':False]['text':' scalar indexed with scalars','line_number':1141,'multiline':False]['text':' From the NumPy indexing example','line_number':1151,'multiline':False]['text':' Check that it is a copy','line_number':1156,'multiline':False]['text':' But assignment should modify the original','line_number':1161,'multiline':False]['text':' index_put_','line_number':1267,'multiline':False]['text':' index','line_number':1271,'multiline':False]['text':' test broadcasting','line_number':1294,'multiline':False]['text':' test empty indices','line_number':1300,'multiline':False]['text':' dim of `t` and `indices` does not match','line_number':1313,'multiline':False]['text':' invalid `indices` dtype','line_number':1318,'multiline':False]['text':' invalid axis','line_number':1328,'multiline':False]['text':' The tests below are from NumPy test_indexing.py with some modifications to','line_number':1399,'multiline':False]['text':' make them compatible with PyTorch. It's licensed under the BDS license below:','line_number':1400,'multiline':False]['text':'','line_number':1401,'multiline':False]['text':' Copyright (c) 2005-2017, NumPy Developers.','line_number':1402,'multiline':False]['text':' All rights reserved.','line_number':1403,'multiline':False]['text':'','line_number':1404,'multiline':False]['text':' Redistribution and use in source and binary forms, with or without','line_number':1405,'multiline':False]['text':' modification, are permitted provided that the following conditions are','line_number':1406,'multiline':False]['text':' met:','line_number':1407,'multiline':False]['text':'','line_number':1408,'multiline':False]['text':'     * Redistributions of source code must retain the above copyright','line_number':1409,'multiline':False]['text':'        notice, this list of conditions and the following disclaimer.','line_number':1410,'multiline':False]['text':'','line_number':1411,'multiline':False]['text':'     * Redistributions in binary form must reproduce the above','line_number':1412,'multiline':False]['text':'        copyright notice, this list of conditions and the following','line_number':1413,'multiline':False]['text':'        disclaimer in the documentation and/or other materials provided','line_number':1414,'multiline':False]['text':'        with the distribution.','line_number':1415,'multiline':False]['text':'','line_number':1416,'multiline':False]['text':'     * Neither the name of the NumPy Developers nor the names of any','line_number':1417,'multiline':False]['text':'        contributors may be used to endorse or promote products derived','line_number':1418,'multiline':False]['text':'        from this software without specific prior written permission.','line_number':1419,'multiline':False]['text':'','line_number':1420,'multiline':False]['text':' THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS','line_number':1421,'multiline':False]['text':' "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT','line_number':1422,'multiline':False]['text':' LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR','line_number':1423,'multiline':False]['text':' A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT','line_number':1424,'multiline':False]['text':' OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,','line_number':1425,'multiline':False]['text':' SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT','line_number':1426,'multiline':False]['text':' LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,','line_number':1427,'multiline':False]['text':' DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY','line_number':1428,'multiline':False]['text':' THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT','line_number':1429,'multiline':False]['text':' (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE','line_number':1430,'multiline':False]['text':' OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.','line_number':1431,'multiline':False]['text':' self.assertRaises(IndexError, lambda: a[0.0:, 0.0])','line_number':1457,'multiline':False]['text':' self.assertRaises(IndexError, lambda: a[0.0:, 0.0,:])','line_number':1458,'multiline':False]['text':' `None` index adds newaxis','line_number':1461,'multiline':False]['text':' Empty tuple index creates a view','line_number':1466,'multiline':False]['text':' Empty list index creates an empty array','line_number':1472,'multiline':False]['text':' `a[...]` was `a` in numpy <1.9.','line_number':1488,'multiline':False]['text':' Slicing with ellipsis can skip an','line_number':1491,'multiline':False]['text':' arbitrary number of dimensions','line_number':1492,'multiline':False]['text':' In NumPy, slicing with ellipsis results in a 0-dim array. In PyTorch','line_number':1497,'multiline':False]['text':' we don't have separate 0-dim arrays and scalars.','line_number':1498,'multiline':False]['text':' Assignment with `(Ellipsis,)` on 0-d arrays','line_number':1501,'multiline':False]['text':' Single integer index selects one row','line_number':1507,'multiline':False]['text':' Index out of bounds produces IndexError','line_number':1515,'multiline':False]['text':' Index overflow produces Exception  NB: different exception type','line_number':1517,'multiline':False]['text':' Single boolean index','line_number':1521,'multiline':False]['text':' Indexing a 2-dimensional array with','line_number':1543,'multiline':False]['text':' boolean array of length one','line_number':1544,'multiline':False]['text':' boolean assignment','line_number':1548,'multiline':False]['text':' A boolean assignment should fail when the shape of the values','line_number':1553,'multiline':False]['text':' cannot be broadcast to the subscription. (see also gh-3458)','line_number':1554,'multiline':False]['text':' Indexing a 2-dimensional array with','line_number':1565,'multiline':False]['text':' 2-dimensional boolean array','line_number':1566,'multiline':False]['text':' boolean assignment','line_number':1577,'multiline':False]['text':' Weird boolean indexing things','line_number':1584,'multiline':False]['text':' Weird boolean indexing things','line_number':1591,'multiline':False]['text':' Indexing a 2-dimensional array with','line_number':1606,'multiline':False]['text':' boolean lists','line_number':1607,'multiline':False]['text':' Before `...` would return a itself.','line_number':1619,'multiline':False]['text':' Simple case of fancy index broadcasting of the index.','line_number':1645,'multiline':False]['text':' [4, 4] tensor','line_number':1661,'multiline':False]['text':' Set the diagonal','line_number':1663,'multiline':False]