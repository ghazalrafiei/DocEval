['text':' Owner(s): ["module: meta tensors"]','line_number':1,'multiline':False]['text':' These tests are ported from cpython/Lib/test/test_weakref.py,','line_number':27,'multiline':False]['text':' but adapted to use tensor rather than object','line_number':28,'multiline':False]['text':'','line_number':87,'multiline':False]['text':'  This exercises d.update(), len(d), d.keys(), k in d,','line_number':88,'multiline':False]['text':'  d.get(), d[].','line_number':89,'multiline':False]['text':'','line_number':90,'multiline':False]['text':' Between two WeakKeyDictionaries','line_number':134,'multiline':False]['text':' Between WeakKeyDictionary and mapping','line_number':140,'multiline':False]['text':' Between WeakKeyDictionary and iterable key, value','line_number':146,'multiline':False]['text':' Testing .__ror__','line_number':151,'multiline':False]['text':' An attempt to delete an object that isn't there should raise','line_number':164,'multiline':False]['text':' KeyError.  It didn't before 2.3.','line_number':165,'multiline':False]['text':' If a key isn't of a weakly referencable type, __getitem__ and','line_number':169,'multiline':False]['text':' __setitem__ raise TypeError.  __delitem__ should too.','line_number':170,'multiline':False]['text':' `deepcopy` should be either True or False.','line_number':180,'multiline':False]['text':' Cannot give these slots as weakrefs weren't supported','line_number':183,'multiline':False]['text':' on these objects until later versions of Python','line_number':184,'multiline':False]['text':' noqa: B903','line_number':185,'multiline':False]['text':' noqa: B903','line_number':189,'multiline':False]['text':' just in case','line_number':209,'multiline':False]['text':' Initialize d with many entries','line_number':214,'multiline':False]['text':' Test exceptions','line_number':238,'multiline':False]['text':' Issue #35615: Weakref keys or values getting GC'ed during dict','line_number':243,'multiline':False]['text':' copying should not result in a crash.','line_number':244,'multiline':False]['text':' Issue #35615: Weakref keys or values getting GC'ed during dict','line_number':248,'multiline':False]['text':' copying should not result in a crash.','line_number':249,'multiline':False]['text':' Adapted from cpython/Lib/test/mapping_tests.py','line_number':253,'multiline':False]['text':' A (key, value) pair not in the mapping','line_number':277,'multiline':False]['text':' A (key, value) pair in the mapping','line_number':281,'multiline':False]['text':' Test for read only operations on mapping','line_number':287,'multiline':False]['text':' workaround for singleton objects','line_number':289,'multiline':False]['text':' Indexing','line_number':293,'multiline':False]['text':' len','line_number':298,'multiline':False]['text':' __contains__','line_number':301,'multiline':False]['text':' cmp','line_number':306,'multiline':False]['text':' NB: don't use assertEqual, that doesn't actually use ==','line_number':309,'multiline':False]['text':' bool','line_number':313,'multiline':False]['text':' keys(), items(), iterkeys() ...','line_number':319,'multiline':False]['text':' get','line_number':330,'multiline':False]['text':' Test for write operations on mapping','line_number':338,'multiline':False]['text':' Indexing','line_number':340,'multiline':False]['text':' update','line_number':348,'multiline':False]['text':' setdefault','line_number':356,'multiline':False]['text':' pop','line_number':363,'multiline':False]['text':' popitem','line_number':372,'multiline':False]['text':' mapping argument','line_number':421,'multiline':False]['text':' No argument','line_number':426,'multiline':False]['text':' item sequence','line_number':431,'multiline':False]['text':' Iterator','line_number':436,'multiline':False]['text':' FIXME: Doesn't work with UserDict','line_number':441,'multiline':False]['text':' self.assertRaises((TypeError, AttributeError), d.update, None)','line_number':442,'multiline':False]['text':' no test_fromkeys or test_copy as both os.environ and selves don't support it','line_number':534,'multiline':False]['text':' Adapted from cpython/Lib/test/mapping_tests.py','line_number':575,'multiline':False]['text':' don't load the library, just skip the tests in setUp','line_number':608,'multiline':False]['text':' A (key, value) pair not in the mapping','line_number':618,'multiline':False]['text':' A (key, value) pair in the mapping','line_number':622,'multiline':False]['text':' Test for read only operations on mapping','line_number':628,'multiline':False]['text':' workaround for singleton objects','line_number':630,'multiline':False]['text':' Indexing','line_number':634,'multiline':False]['text':' len','line_number':639,'multiline':False]['text':' __contains__','line_number':642,'multiline':False]['text':' cmp','line_number':647,'multiline':False]['text':' NB: don't use assertEqual, that doesn't actually use ==','line_number':650,'multiline':False]['text':' bool','line_number':654,'multiline':False]['text':' keys(), items(), iterkeys() ...','line_number':660,'multiline':False]['text':' get','line_number':671,'multiline':False]['text':' Test for write operations on mapping','line_number':679,'multiline':False]['text':' Indexing','line_number':681,'multiline':False]['text':' update','line_number':689,'multiline':False]['text':' setdefault','line_number':697,'multiline':False]['text':' pop','line_number':704,'multiline':False]['text':' popitem','line_number':713,'multiline':False]['text':' mapping argument','line_number':762,'multiline':False]['text':' No argument','line_number':767,'multiline':False]['text':' item sequence','line_number':772,'multiline':False]['text':' Iterator','line_number':777,'multiline':False]['text':' FIXME: Doesn't work with UserDict','line_number':782,'multiline':False]['text':' self.assertRaises((TypeError, AttributeError), d.update, None)','line_number':783,'multiline':False]['text':' no test_fromkeys or test_copy as both os.environ and selves don't support it','line_number':875,'multiline':False]