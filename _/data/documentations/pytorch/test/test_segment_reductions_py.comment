['text':' Owner(s): ["module: scatter & gather ops"]','line_number':1,'multiline':False]['text':' generate offsets from lengths','line_number':56,'multiline':False]['text':' Test backward','line_number':90,'multiline':False]['text':' gradcheck does not work well with bfloat16 or fp16 cpu types','line_number':97,'multiline':False]['text':' also there is small numerical difference with fp32','line_number':98,'multiline':False]['text':' gradcheck does not like "nan" input, setting to random 10','line_number':100,'multiline':False]['text':' [10 if v == float("nan") else v for v in data],','line_number':103,'multiline':False]['text':' some high number','line_number':144,'multiline':False]['text':' 0 initial_value will zero out everything for prod','line_number':153,'multiline':False]['text':' some high number','line_number':201,'multiline':False]['text':' 0 initial_value will zero out everything for prod','line_number':210,'multiline':False]['text':' some high number','line_number':284,'multiline':False]['text':' 0 initial_value will zero out everything for prod','line_number':317,'multiline':False]['text':' zero-length segments are filled with reduction inits contrary to pytorch_scatter.','line_number':372,'multiline':False]['text':' calculate lengths from indptr','line_number':442,'multiline':False]['text':' test offsets','line_number':455,'multiline':False]['text':' supply initial values to prevent gradcheck from failing for 0 length segments','line_number':468,'multiline':False]['text':' where nan/inf are reduction identities that produce nans when calculating the numerical jacobian','line_number':469,'multiline':False]['text':' TODO: calculate grad and check correctness','line_number':498,'multiline':False]['text':' some high number','line_number':518,'multiline':False]['text':' test for error on 1-D lenghts','line_number':561,'multiline':False]['text':' test for error on multi-D lengths','line_number':565,'multiline':False]