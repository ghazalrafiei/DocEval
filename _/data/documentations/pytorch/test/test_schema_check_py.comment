['text':' Owner(s): ["oncall: jit"]','line_number':1,'multiline':False]['text':' This TorchDispatchTensor Subclass is used to simulate an incorrect schema','line_number':44,'multiline':False]['text':' which is then used to test that SchemaCheckMode behaves as expected','line_number':45,'multiline':False]['text':' The wrapping tensor (IncorrectAliasTensor) shouldn't hold any','line_number':60,'multiline':False]['text':' memory for the class in question, but it should still','line_number':61,'multiline':False]['text':' advertise the same device as before','line_number':62,'multiline':False]['text':' type: ignore[attr-defined]','line_number':63,'multiline':False]['text':' TODO: clone storage aliasing','line_number':66,'multiline':False]['text':' ...the real tensor is held as an element on the tensor.','line_number':70,'multiline':False]['text':' Tests various schema checking functionalities.','line_number':97,'multiline':False]['text':' Tests that SchemaCheckMode records operator order with grad','line_number':99,'multiline':False]['text':' Tests that SchemaCheckMode records operator order without grad','line_number':106,'multiline':False]['text':' Tests that SchemaCheckMode records mutations and aliases with none expected','line_number':113,'multiline':False]['text':' NB: previously requires_grad=True, but this induces a detach for','line_number':115,'multiline':False]['text':' saved variable','line_number':116,'multiline':False]['text':' Tests that SchemaCheckMode records mutations and aliases with mutation expected','line_number':123,'multiline':False]['text':' Tests that SchemaCheckMode records mutations and aliases with resize_','line_number':131,'multiline':False]['text':' Tests that SchemaCheckMode records mutations and aliases with aliasing inputs','line_number':139,'multiline':False]['text':' Tests that SchemaCheckMode records mutations and alias with as_strided','line_number':160,'multiline':False]['text':' Tests that SchemaCheckMode records mutations and aliases with multiple outputs','line_number':178,'multiline':False]['text':' Tests that SchemaCheckMode records mutations and aliases with aliasing outputs','line_number':200,'multiline':False]['text':' Tests that SchemaCheckMode wraps torch.Tensor','line_number':223,'multiline':False]['text':' Tests that SchemaCheckMode wraps torch.Tensor when an argument's default is overriden','line_number':231,'multiline':False]['text':' Tests that SchemaCheckMode wraps torch.Tensor when there is a Tensor[] argument','line_number':239,'multiline':False]['text':' Tests that SchemaCheckMode wraps torch.Tensor with an op that has the (a -> *) notation','line_number':249,'multiline':False]['text':' Tests that SchemaCheckMode wraps torch.Tensor when there is a kwarg tensor input','line_number':257,'multiline':False]['text':' Tests that SchemaCheckMode wraps torch.Tensor with a mutable op','line_number':267,'multiline':False]['text':' Tests that SchemaCheckMode wraps Torch.tensor when inputs alias','line_number':276,'multiline':False]['text':' Tests that SchemaCheckMode wraps Torch.tensor with multiple tensor outputs','line_number':287,'multiline':False]['text':' Tests that SchemaCheckMode wraps Torch.tensor with aliasing ouputs due to aliasing inputs','line_number':298,'multiline':False]['text':' Tests that SchemaCheckMode wraps Torch.tensor in ops with real Device input','line_number':306,'multiline':False]['text':' Tests that SchemaCheckMode wraps Torch.tensor in special training op edge case','line_number':313,'multiline':False]['text':' Tests that SchemaCheckMode wraps Torch.tensor with nested training op edge case','line_number':322,'multiline':False]['text':' Tests that SchemaCheckMode wraps Torch.tensor with empty list input','line_number':339,'multiline':False]['text':' Tests that an exception is raised for a mismatching mutation','line_number':346,'multiline':False]['text':' # Tests that an exception is raised for a mismatching mutation over multiple ops','line_number':354,'multiline':False]['text':' Tests that an exception is raised for a mismatching alias','line_number':362,'multiline':False]['text':' Tests that an exception is raised for a mismatching alias over multiple ops','line_number':370,'multiline':False]['text':' Tests that an exception is raised for a centered mismatching alias over multiple ops','line_number':378,'multiline':False]['text':' Tests that an exception is raised for a centered mismatching alias over multiple ops','line_number':386,'multiline':False]['text':' When this file was written, python op registration didn't exist.','line_number':393,'multiline':False]['text':' It's probably worth re-writing the entire file to use it,','line_number':394,'multiline':False]['text':' but instead I just added extra tests.','line_number':395,'multiline':False]['text':' Tests that is_alias_of returns as expected','line_number':423,'multiline':False]['text':' Tests that is_alias_of returns as expected with empty containers','line_number':431,'multiline':False]['text':' Tests that overlaps returns as expected','line_number':438,'multiline':False]['text':' Tests that overlaps returns correctly with empty containers','line_number':448,'multiline':False]['text':' Empty containers return false','line_number':452,'multiline':False]['text':' Tests that SchemaInfo Bindings work as expected','line_number':456,'multiline':False]['text':' Currently torch.equal isn't supported with torch.complex32','line_number':496,'multiline':False]['text':' There's also errors with complex64 and complex128','line_number':497,'multiline':False]