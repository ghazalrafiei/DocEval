['text':' Copyright (c) Meta Platforms, Inc. and affiliates','line_number':1,'multiline':False]['text':' Owner(s): ["oncall: distributed"]','line_number':2,'multiline':False]['text':' Make a custom compiler that runs aot autograd but extracts the fw graph','line_number':65,'multiline':False]['text':' pass in DTensor as inputs/outputs to the function','line_number':104,'multiline':False]['text':' test passing in DTensor as inputs/outputs and run some tensor computation','line_number':118,'multiline':False]['text':' create DTensor inside fn and run some compute','line_number':132,'multiline':False]['text':' below is the op approach for reference','line_number':137,'multiline':False]['text':' from torch.distributed._tensor.api import _FromTorchTensor','line_number':138,'multiline':False]['text':' def from_local_tensor(x):','line_number':139,'multiline':False]['text':'     return _FromTorchTensor.apply(x, mesh, [Replicate()], False)','line_number':140,'multiline':False]['text':' _dt_lib_def = torch.library.Library("dtensor", "DEF")','line_number':142,'multiline':False]['text':' _dt_lib_def.define("from_local(Tensor self) -> Tensor")','line_number':143,'multiline':False]['text':' _dt_lib_impl = torch.library.Library("dtensor", "IMPL")','line_number':145,'multiline':False]['text':' _dt_lib_impl.impl("from_local", from_local_tensor, "Autograd")','line_number':146,'multiline':False]['text':' test if user calls from_local with mesh/placements as kwargs and that should still work','line_number':154,'multiline':False]['text':' pass in tensor as inputs/outputs, create DTensor and run redistribute','line_number':171,'multiline':False]['text':' (allgather collective) inside the fn','line_number':172,'multiline':False]['text':' TODO: somehow inductor bg compile threads are causing hangs at exit with distributed work dtor','line_number':200,'multiline':False]['text':' fake attention:','line_number':216,'multiline':False]['text':' apply sequence parallel','line_number':240,'multiline':False]['text':' Check that `buf2` is correctly waited on before first use.','line_number':262,'multiline':False]['text':' fmt: off','line_number':263,'multiline':False]['text':' use input preparation to test out the compile of it','line_number':296,'multiline':False]['text':' 2-D mesh is [dp, tp]','line_number':341,'multiline':False]['text':' TODO: once aot autograd support is ready we can just use default backend','line_number':377,'multiline':False]['text':' 2-D mesh is [dp, tp]','line_number':391,'multiline':False]['text':' TODO: once aot autograd support is ready we can just use default backend','line_number':418,'multiline':False]['text':' forward pass','line_number':421,'multiline':False]['text':' backward pass','line_number':426,'multiline':False]['text':' compare the gradients:','line_number':430,'multiline':False]['text':' Now run and assert the backward + gradients','line_number':458,'multiline':False]