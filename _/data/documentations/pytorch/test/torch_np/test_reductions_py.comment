['text':' Owner(s): ["module: dynamo"]','line_number':1,'multiline':False]['text':' If we are going to trace through these, we should use NumPy','line_number':20,'multiline':False]['text':' If testing on eager mode, we use torch._numpy','line_number':21,'multiline':False]['text':' for normalize_axis_tuple','line_number':24,'multiline':False]['text':' YYY: deduplicate','line_number':65,'multiline':False]['text':' XXX: numpy emits a warning on empty slice','line_number':100,'multiline':False]['text':' rmat = np.random.random((4, 5))','line_number':107,'multiline':False]['text':' This fail if the sum inside mean is done in float16 instead','line_number':127,'multiline':False]['text':' of float32.','line_number':128,'multiline':False]['text':' (reason="XXX: mean(..., where=...) not implemented")','line_number':131,'multiline':False]['text':' (reason="sum: does not warn on overflow")','line_number':198,'multiline':False]['text':' warning if sum overflows, which it does in float16','line_number':202,'multiline':False]['text':' sum with first reduction entry != 0','line_number':234,'multiline':False]['text':' sum with first reduction entry != 0','line_number':260,'multiline':False]['text':' (reason="initial=... need implementing")','line_number':265,'multiline':False]['text':' Integer, single axis','line_number':267,'multiline':False]['text':' Floating point','line_number':270,'multiline':False]['text':' Multiple non-adjacent axes','line_number':273,'multiline':False]['text':' (reason="where=... need implementing")','line_number':279,'multiline':False]['text':' More extensive tests done in test_reduction_with_where.','line_number':281,'multiline':False]['text':' Basic check of functionality','line_number':340,'multiline':False]['text':' TODO: add tests with np.int32(3) etc, when implemented','line_number':348,'multiline':False]['text':' Basic check of functionality','line_number':368,'multiline':False]['text':' out no axis: scalar','line_number':399,'multiline':False]['text':' out with axis','line_number':413,'multiline':False]['text':' TODO: what if result.dtype != out.dtype; does out typecast the result?','line_number':424,'multiline':False]['text':' out of wrong shape (any/out does not broadcast)','line_number':426,'multiline':False]['text':' np.any(m, out=np.empty_like(m)) raises a ValueError (wrong number','line_number':427,'multiline':False]['text':' of dimensions.)','line_number':428,'multiline':False]['text':' pytorch.any emits a warning and resizes the out array.','line_number':429,'multiline':False]['text':' Here we follow pytorch, since the result is a superset','line_number':430,'multiline':False]['text':' of the numpy functionality','line_number':431,'multiline':False]['text':' out with axis','line_number':438,'multiline':False]['text':' TODO: what if result.dtype != out.dtype; does out typecast the result?','line_number':456,'multiline':False]['text':' out of wrong shape (any/out does not broadcast)','line_number':458,'multiline':False]['text':' np.any(m, out=np.empty_like(m)) raises a ValueError (wrong number','line_number':459,'multiline':False]['text':' of dimensions.)','line_number':460,'multiline':False]['text':' pytorch.any emits a warning and resizes the out array.','line_number':461,'multiline':False]['text':' Here we follow pytorch, since the result is a superset','line_number':462,'multiline':False]['text':' of the numpy functionality','line_number':463,'multiline':False]['text':' Basic check of functionality','line_number':494,'multiline':False]['text':' TODO: add tests with np.int32(3) etc, when implemented','line_number':502,'multiline':False]['text':' Basic check of functionality','line_number':519,'multiline':False]