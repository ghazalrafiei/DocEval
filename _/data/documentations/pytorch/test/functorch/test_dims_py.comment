['text':' Owner(s): ["module: functorch"]','line_number':1,'multiline':False]['text':' Copyright (c) Facebook, Inc. and its affiliates.','line_number':3,'multiline':False]['text':' All rights reserved.','line_number':4,'multiline':False]['text':'','line_number':5,'multiline':False]['text':' This source code is licensed under the BSD-style license found in the','line_number':6,'multiline':False]['text':' LICENSE file in the root directory of this source tree.','line_number':7,'multiline':False]['text':' XXX - torch.where is janky...','line_number':49,'multiline':False]['text':' with magic_trace(name + ".fxt"):','line_number':55,'multiline':False]['text':' with torch.profiler.profile(schedule=torch.profiler.schedule(','line_number':64,'multiline':False]['text':'     wait=0,','line_number':65,'multiline':False]['text':'     warmup=1,','line_number':66,'multiline':False]['text':'     active=2), on_trace_ready=tensorboard_trace_handler(name), with_stack=True) as profiler:','line_number':67,'multiline':False]['text':'     for _ in range(3):','line_number':68,'multiline':False]['text':'         lmb()','line_number':69,'multiline':False]['text':'         profiler.step()','line_number':70,'multiline':False]['text':'  nolevels = _n_levels_in_use() == 0','line_number':97,'multiline':False]['text':' assert nolevels, f"cleanup failed? {_n_levels_in_use()}"','line_number':102,'multiline':False]['text':' why does a simple matmul not do the right thing?','line_number':138,'multiline':False]['text':' some embeddings table','line_number':184,'multiline':False]['text':' some sparse updates to the embeddings','line_number':187,'multiline':False]['text':' python 3.11 adapts bytecode after a number of iterations','line_number':198,'multiline':False]['text':' check that we still match names correctly','line_number':199,'multiline':False]['text':' size from the BERT paper, 90% pretraining of sequence length 128','line_number':205,'multiline':False]['text':' a, b = r.unbind(d)','line_number':213,'multiline':False]['text':' self.assertTrue(torch.allclose(a.order(i, j), i.expand(j).order(i, j)))','line_number':214,'multiline':False]['text':' self.assertTrue(torch.allclose(b.order(i, j), j.expand(i).order(i, j)))','line_number':215,'multiline':False]['text':' r = (a_*b_).sum(k).order(q, i, j)','line_number':232,'multiline':False]['text':' print(r)','line_number':233,'multiline':False]['text':' print(a @ b)','line_number':234,'multiline':False]['text':' r = A[i]*4','line_number':251,'multiline':False]['text':' XXX - chunk changes the size of a dimension, has to take a new dimension...','line_number':263,'multiline':False]['text':' assert torch.allclose(A.chunk(2,1)[0], A[i, k].chunk(2, k)[0].order(i, k))','line_number':264,'multiline':False]['text':' assert torch.allclose( torch.stack([A, A], 1), stack([A[i,k], A[i, k]], kk, k).order(i, kk, k))','line_number':267,'multiline':False]['text':' r = cat((A[i, k], A[i,k]), k, k2)','line_number':270,'multiline':False]['text':' assert torch.allclose(torch.cat([A, A], 1), r.order(i, k2))','line_number':271,'multiline':False]['text':' assert k2.size == 2*k.size','line_number':272,'multiline':False]['text':' test with ...','line_number':290,'multiline':False]['text':' test with dimlist','line_number':293,'multiline':False]['text':' test with one bound dimlist','line_number':296,'multiline':False]['text':' test with a dimlist that will end up empty','line_number':298,'multiline':False]['text':' test with too few things','line_number':300,'multiline':False]['text':' test with too many elements','line_number':303,'multiline':False]['text':' magic_trace_stop_indicator()','line_number':371,'multiline':False]['text':' magic_trace_stop_indicator()','line_number':385,'multiline':False]['text':' noqa: B015','line_number':394,'multiline':False]['text':' failures that came up from monkey patching some operators...','line_number':502,'multiline':False]['text':' self.assertEqual(x.new([z[2], z[0] + 3]).tolist(), [3, 4])','line_number':516,'multiline':False]['text':' slow but Pythonic','line_number':566,'multiline':False]['text':' with torchdim, single indexing kernel','line_number':572,'multiline':False]['text':' 3, 4, 2','line_number':585,'multiline':False]['text':' 3, 4, 2','line_number':586,'multiline':False]