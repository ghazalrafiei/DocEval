['text':' Use try..catch HACK to check TORCH_CHECK because we don't yet fail','line_number':24,'multiline':False]['text':' gracefully if the syscall were to fail','line_number':25,'multiline':False]['text':' Bail here if something bad happened during the profiling, we don't want','line_number':33,'multiline':False]['text':' to make the test fail','line_number':34,'multiline':False]['text':' something else went wrong - this should be reported','line_number':37,'multiline':False]['text':' Should have counted something if worked, so lets test that','line_number':41,'multiline':False]['text':' And if it not supported the counters should be zeros.','line_number':42,'multiline':False]['text':' __ANDROID__ || __linux__ ','line_number':47,'multiline':True]['text':' __ANDROID__ || __linux__ ','line_number':51,'multiline':True]['text':' Only monotonically increasing events will work','line_number':57,'multiline':False]['text':' Use try..catch HACK to check TORCH_CHECK because we don't yet fail','line_number':70,'multiline':False]['text':' gracefully if the syscall were to fail','line_number':71,'multiline':False]['text':' * = work kernel calc_pi()','line_number':75,'multiline':False]['text':'','line_number':76,'multiline':False]['text':' A --*---+              +--*-- A','line_number':77,'multiline':False]['text':'         |              |','line_number':78,'multiline':False]['text':'         |              |','line_number':79,'multiline':False]['text':'       B +-*--+    +--*-+ B','line_number':80,'multiline':False]['text':'              |    |','line_number':81,'multiline':False]['text':'              |    |','line_number':82,'multiline':False]['text':'            C +-*--+ C','line_number':83,'multiline':False]['text':'','line_number':84,'multiline':False]['text':' Bail here if something bad happened during the profiling, we don't want','line_number':102,'multiline':False]['text':' to make the test fail','line_number':103,'multiline':False]['text':' something else went wrong - this should be reported','line_number':106,'multiline':False]['text':' for each counter, assert A > B > C','line_number':110,'multiline':False]['text':' __ANDROID__ || __linux__ ','line_number':118,'multiline':True]['text':' __ANDROID__ || __linux__ ','line_number':124,'multiline':True]['text':' Only monotonically increasing events will work','line_number':130,'multiline':False]['text':' Use try..catch HACK to check TORCH_CHECK because we don't yet fail','line_number':143,'multiline':False]['text':' gracefully if the syscall were to fail','line_number':144,'multiline':False]['text':' * = work kernel calc_pi()','line_number':148,'multiline':False]['text':'','line_number':149,'multiline':False]['text':' A --*---+    +---*----+    +--*-- A','line_number':150,'multiline':False]['text':'         |    |        |    |','line_number':151,'multiline':False]['text':'         |    |        |    |','line_number':152,'multiline':False]['text':'      B  +-**-+ B    C +-*--+ C','line_number':153,'multiline':False]['text':' Bail here if something bad happened during the profiling, we don't want','line_number':172,'multiline':False]['text':' to make the test fail','line_number':173,'multiline':False]['text':' something else went wrong - this should be reported','line_number':176,'multiline':False]['text':' for each counter, assert A > B > C','line_number':180,'multiline':False]['text':' __ANDROID__ || __linux__ ','line_number':188,'multiline':True]['text':' __ANDROID__ || __linux__ ','line_number':194,'multiline':True]['text':' Only monotonically increasing events will work','line_number':200,'multiline':False]['text':' Use try..catch HACK to check TORCH_CHECK because we don't yet fail','line_number':213,'multiline':False]['text':' gracefully if the syscall were to fail','line_number':214,'multiline':False]['text':' Bail here if something bad happened during the profiling, we don't want','line_number':226,'multiline':False]['text':' to make the test fail','line_number':227,'multiline':False]['text':' something else went wrong - this should be reported','line_number':230,'multiline':False]['text':' for each counter, assert A > B > C','line_number':234,'multiline':False]['text':' __ANDROID__ || __linux__ ','line_number':241,'multiline':True]['text':' __ANDROID__ || __linux__ ','line_number':247,'multiline':True]