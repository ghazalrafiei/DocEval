['text':' namespace test','line_number':18,'multiline':False]['text':' NOLINTNEXTLINE(performance-unnecessary-copy-initialization)','line_number':39,'multiline':False]['text':' NOLINTNEXTLINE(performance-unnecessary-copy-initialization)','line_number':46,'multiline':False]['text':' set_to_none = false','line_number':68,'multiline':False]['text':'requires_grad=','line_number':155,'multiline':True]['text':' CHECK instead of REQUIRE because demangling may fail.','line_number':192,'multiline':False]['text':' Call it twice just to make sure there are no bugs in the lazy','line_number':194,'multiline':False]['text':' initialization semantics.','line_number':195,'multiline':False]['text':' Case 1: Undefined tensors as parameters','line_number':234,'multiline':False]['text':' Case 2: Undefined tensors as buffers','line_number':250,'multiline':False]['text':' NOLINTNEXTLINE(hicpp-avoid-goto,cppcoreguidelines-avoid-goto)','line_number':390,'multiline':False]['text':' NOLINTNEXTLINE(bugprone-exception-escape)','line_number':394,'multiline':False]['text':' NOLINTNEXTLINE(clang-analyzer-optin.cplusplus.VirtualCall)','line_number':398,'multiline':False]['text':' need to move the module back to d0 as allclose expects two tensors on','line_number':474,'multiline':False]['text':' the same device.','line_number':475,'multiline':False]['text':' NOLINTNEXTLINE(bugprone-exception-escape)','line_number':481,'multiline':False]['text':' NOLINTNEXTLINE(clang-analyzer-optin.cplusplus.VirtualCall)','line_number':484,'multiline':False]['text':' NOLINTNEXTLINE(bugprone-exception-escape)','line_number':513,'multiline':False]['text':' NOLINTNEXTLINE(clang-analyzer-optin.cplusplus.VirtualCall)','line_number':516,'multiline':False]['text':' NOLINTNEXTLINE(bugprone-exception-escape)','line_number':526,'multiline':False]['text':' NOLINTNEXTLINE(clang-analyzer-optin.cplusplus.VirtualCall)','line_number':529,'multiline':False]['text':' NOLINTNEXTLINE(bugprone-exception-escape)','line_number':557,'multiline':False]['text':' NOLINTNEXTLINE(clang-analyzer-optin.cplusplus.VirtualCall)','line_number':560,'multiline':False]['text':' NOLINTNEXTLINE(bugprone-exception-escape)','line_number':593,'multiline':False]['text':' NOLINTNEXTLINE(clang-analyzer-optin.cplusplus.VirtualCall)','line_number':596,'multiline':False]['text':' everything is on CPU here','line_number':612,'multiline':False]['text':' Assert pointer equality.','line_number':726,'multiline':False]['text':'include_self=','line_number':734,'multiline':True]['text':' Assert pointer equality.','line_number':739,'multiline':False]['text':' Assert pointer equality.','line_number':752,'multiline':False]['text':'name_prefix=','line_number':762,'multiline':True]['text':'include_self=','line_number':762,'multiline':True]['text':' Assert pointer equality.','line_number':767,'multiline':False]['text':' Assert pointer equality.','line_number':780,'multiline':False]['text':' For this flat model, this should be true.','line_number':784,'multiline':False]['text':'include_self=','line_number':785,'multiline':True]['text':' Assert pointer equality.','line_number':796,'multiline':False]['text':'name_prefix=','line_number':896,'multiline':True]['text':'name_prefix=','line_number':964,'multiline':True]['text':'name_prefix=','line_number':981,'multiline':True]['text':'name_prefix=','line_number':1005,'multiline':True]['text':' NOLINTNEXTLINE(hicpp-avoid-goto,cppcoreguidelines-avoid-goto)','line_number':1019,'multiline':False]['text':'include_self=','line_number':1020,'multiline':True]['text':' NOLINTNEXTLINE(hicpp-avoid-goto,cppcoreguidelines-avoid-goto)','line_number':1024,'multiline':False]