['text':' NOLINTNEXTLINE(cppcoreguidelines-pro-type-member-init)','line_number':45,'multiline':False]['text':' NOTE: The current implementation expects each module to be copied exactly','line_number':58,'multiline':False]['text':' once, which happens when the module is passed into `std::make_shared<T>()`.','line_number':59,'multiline':False]['text':' TODO: Find a way to avoid copying, and then delete the copy constructor of','line_number':60,'multiline':False]['text':' `M`.','line_number':61,'multiline':False]['text':' Test unnamed submodules','line_number':102,'multiline':False]['text':' Mix named and unnamed submodules','line_number':113,'multiline':False]['text':' named and unnamed AnyModule's','line_number':139,'multiline':False]['text':' returns the correct module for a given index','line_number':169,'multiline':False]['text':' throws for a bad index','line_number':174,'multiline':False]['text':' returns the correct module for a given index','line_number':198,'multiline':False]['text':' throws for a bad index','line_number':205,'multiline':False]['text':' The modules should be the same kind (type).','line_number':347,'multiline':False]['text':' But not pointer-equal (distinct objects).','line_number':349,'multiline':False]['text':' Verify that the clone is deep, i.e. parameters of modules are cloned too.','line_number':353,'multiline':False]['text':' NOLINTNEXTLINE(performance-unnecessary-copy-initialization)','line_number':508,'multiline':False]