['text':' Load check in model: sequence.ptl','line_number':18,'multiline':False]['text':'  sequence.ptl source code:','line_number':23,'multiline':False]['text':'  class A(torch.nn.Module):','line_number':24,'multiline':False]['text':'    def __init__(self):','line_number':25,'multiline':False]['text':'      super().__init__()','line_number':26,'multiline':False]['text':'','line_number':27,'multiline':False]['text':'    def forward(self, x):','line_number':28,'multiline':False]['text':'      return x + 1','line_number':29,'multiline':False]['text':'','line_number':30,'multiline':False]['text':'  class B(torch.nn.Module):','line_number':31,'multiline':False]['text':'    def __init__(self):','line_number':32,'multiline':False]['text':'      super().__init__()','line_number':33,'multiline':False]['text':'','line_number':34,'multiline':False]['text':'    def forward(self, x):','line_number':35,'multiline':False]['text':'      return x + 2','line_number':36,'multiline':False]['text':'','line_number':37,'multiline':False]['text':'  class C(torch.nn.Module):','line_number':38,'multiline':False]['text':'    def __init__(self):','line_number':39,'multiline':False]['text':'      super().__init__()','line_number':40,'multiline':False]['text':'      self.A0 = A()','line_number':41,'multiline':False]['text':'      self.B0 = B()','line_number':42,'multiline':False]['text':'','line_number':43,'multiline':False]['text':'    def forward(self, x):','line_number':44,'multiline':False]['text':'      return self.A0.forward(self.B0.forward(x))','line_number':45,'multiline':False]['text':' "delegate_test.ptl" is generated from test/cpp/jit/test_backend.cpp,','line_number':58,'multiline':False]['text':' BackendTest.TestCompiler. This test is on target runtime. It has','line_number':59,'multiline':False]['text':' model running capability, but no compilation and serialization.','line_number':60,'multiline':False]['text':' The mobile model delegated to the "backend_with_compiler_demo" backend','line_number':61,'multiline':False]['text':' The model is from the jit code:','line_number':62,'multiline':False]['text':'  Module m("m");','line_number':63,'multiline':False]['text':'  m.define(R"(','line_number':64,'multiline':False]['text':'    def forward(self, x, h):','line_number':65,'multiline':False]['text':'        return x + h','line_number':66,'multiline':False]['text':'  )");','line_number':67,'multiline':False]['text':'
   * Model: delegated_submodule_with_debug_info.ptl
   * Model structure:
   * def AA(..):
   *   def forward(self, x, y):
   *     return x + y
   *
   * def A(..):
   *   def __init__(..):
   *     self.AA0 = AA()
   *   def forward(self, x, y):
   *     return self.AA0.forward(x, y) + 3
   *
   * def B(..):
   *   def forward(self, x):
   *     return x + 2
   *
   * def C(..):
   *   def __init__(..):
   *     self.A0 = A()
   *     self.B0 = B()
   *   def forward(self, x, y):
   *     return self.A0.forward(x, y) + self.B0.forward(x)
   *
   * std::vector<IValue> inputs;
   * inputs.emplace_back(torch::rand({2, 4}));
   * inputs.emplace_back(torch::rand({13, 9}));
   * Run with inputs and expect exception
   * Erro stack trace will look like this:
   * Module hierarchy:top(C).A0(backend_with_compiler_demoLoweredModule).AA0(AA)
   * Traceback of TorchScript (most recent call last):
   *  File "<string>", line 3, in FunctionName_UNKNOWN
   *
   *    def forward(self, x, y):
   *      return self.A0.forward(x, y) + self.B0.forward(x)
   *             ~~~~~~~~~~~~~~~ <--- HERE
   *
   *  File "<string>", line 5, in FunctionName_UNKNOWN
   *                typed_inputs: List[Any] = [x, y, ]
   *                if self.__backend.is_available() :
   *                  _0, = self.__backend.execute(self.__handles["forward"],
   * typed_inputs)
   *                        ~~~~~~~~~~~~~~~~~~~~~~ <--- HERE
   *                  assert isinstance(_0, Tensor)
   *                  return _0
   *  File "<string>", line 3, in FunctionName_UNKNOWN
   *
   *    def forward(self, x, y):
   *      return self.AA0.forward(x, y) + 3
   *             ~~~~~~~~~~~~~~~~ <--- HERE
   *
   *  File "<string>", line 3, in FunctionName_UNKNOWN
   *
   *    def forward(self, x, y):
   *      return x + y
   *             ~~~~~ <--- HERE
   *
   *
   ','line_number':81,'multiline':True]['text':' namespace mobile','line_number':176,'multiline':False]['text':' namespace jit','line_number':177,'multiline':False]['text':' namespace torch','line_number':178,'multiline':False]