['text':' Owner(s): ["module: distributions"]','line_number':1,'multiline':False]['text':' load_tests from torch.testing._internal.common_utils is used to automatically filter tests for','line_number':72,'multiline':False]['text':' sharding on sandcastle. This line silences flake warnings','line_number':73,'multiline':False]['text':' Register all distributions for generic tests.','line_number':104,'multiline':False]['text':' performs gradient checks on log_prob','line_number':828,'multiline':False]['text':' checks that the log_prob matches a reference function','line_number':851,'multiline':False]['text':' Checks that the .sample() method matches a reference function.','line_number':861,'multiline':False]['text':' Project onto a random axis.','line_number':866,'multiline':False]['text':' necessary to prevent stable sort from making uneven bins for discrete','line_number':874,'multiline':False]['text':' Aggregate into bins filled with roughly zero-mean unit-variance RVs.','line_number':878,'multiline':False]['text':' renormalize to 1.0 for chisq test','line_number':898,'multiline':False]['text':' Add a remainder bucket that combines counts for all values','line_number':901,'multiline':False]['text':' below threshold, if such values exist (i.e. mask has False entries).','line_number':902,'multiline':False]['text':' check entropy computation','line_number':1076,'multiline':False]['text':' check entropy computation','line_number':1134,'multiline':False]['text':' see Note [Randomized statistical tests]','line_number':1140,'multiline':False]['text':' see Note [Randomized statistical tests]','line_number':1156,'multiline':False]['text':' make sure that the grad at logits=0, value=0 is 0.5','line_number':1190,'multiline':False]['text':' see Note [Randomized statistical tests]','line_number':1231,'multiline':False]['text':' vals should be roughly half zeroes, half ones','line_number':1287,'multiline':False]['text':' sample check for extreme value of probs','line_number':1336,'multiline':False]['text':' sample check for extreme value of probs','line_number':1367,'multiline':False]['text':' check entropy computation','line_number':1379,'multiline':False]['text':' issue gh-40553','line_number':1382,'multiline':False]['text':' We cannot check gradients automatically for zero rates because the finite difference','line_number':1457,'multiline':False]['text':' approximation enters the forbidden parameter space. We instead compare with the','line_number':1458,'multiline':False]['text':' theoretical results.','line_number':1459,'multiline':False]['text':' see Note [Randomized statistical tests]','line_number':1466,'multiline':False]['text':' test that rsample doesn't fail','line_number':1502,'multiline':False]['text':' see Note [Randomized statistical tests]','line_number':1508,'multiline':False]['text':' The lower the temperature, the more unstable the log_prob gradcheck is','line_number':1544,'multiline':False]['text':' w.r.t. the sample. Values below 0.25 empirically fail the default tol.','line_number':1545,'multiline':False]['text':' see Note [Randomized statistical tests]','line_number':1557,'multiline':False]['text':' Check log_prob computation when value outside range','line_number':1601,'multiline':False]['text':' check cdf computation when value outside range','line_number':1608,'multiline':False]['text':' sample check for extreme value of std','line_number':1713,'multiline':False]['text':' check .log_prob() can broadcast.','line_number':1722,'multiline':False]['text':' see Note [Randomized statistical tests]','line_number':1740,'multiline':False]['text':' see Note [Randomized statistical tests]','line_number':1767,'multiline':False]['text':' sample check for extreme value of mean, std','line_number':1788,'multiline':False]['text':' check .log_prob() can broadcast.','line_number':1798,'multiline':False]['text':' see Note [Randomized statistical tests]','line_number':1820,'multiline':False]['text':' see Note [Randomized statistical tests]','line_number':1828,'multiline':False]['text':' sample check for extreme value of mean, std','line_number':1842,'multiline':False]['text':' TODO: gradcheck seems to mutate the sample values so that the simplex','line_number':1850,'multiline':False]['text':' constraint fails by a very small margin.','line_number':1851,'multiline':False]['text':' Smoke test for now','line_number':1861,'multiline':False]['text':' TODO: Once _check_log_prob works with multidimensional distributions,','line_number':1862,'multiline':False]['text':'       add proper testing of the log probabilities.','line_number':1863,'multiline':False]['text':' see Note [Randomized statistical tests]','line_number':1882,'multiline':False]['text':' sample check for extreme value of mean, std','line_number':1997,'multiline':False]['text':' see Note [Randomized statistical tests]','line_number':2034,'multiline':False]['text':' construct PSD covariance','line_number':2046,'multiline':False]['text':' construct batch of PSD covariances','line_number':2050,'multiline':False]['text':' ensure that sample, batch, event shapes all handled correctly','line_number':2054,'multiline':False]['text':' check gradients','line_number':2080,'multiline':False]['text':' check that logprob values match scipy logpdf,','line_number':2095,'multiline':False]['text':' and that covariance and scale_tril parameters are equivalent','line_number':2096,'multiline':False]['text':' Double-check that batched versions behave the same as unbatched','line_number':2105,'multiline':False]['text':' see Note [Randomized statistical tests]','line_number':2123,'multiline':False]['text':' see Note [Randomized statistical tests]','line_number':2149,'multiline':False]['text':' construct PSD covariance','line_number':2166,'multiline':False]['text':' construct batch of PSD covariances','line_number':2172,'multiline':False]['text':' ensure that sample, batch, event shapes all handled correctly','line_number':2178,'multiline':False]['text':' check gradients','line_number':2196,'multiline':False]['text':' We write a custom gradcheck function to maintain the symmetry','line_number':2197,'multiline':False]['text':' of the perturbed covariances and their inverses (precision)','line_number':2198,'multiline':False]['text':' Ensure symmetry of covariance','line_number':2204,'multiline':False]['text':' Ensure symmetry of precision','line_number':2206,'multiline':False]['text':' RBF kernel','line_number':2223,'multiline':False]['text':' check that logprob values match scipy logpdf,','line_number':2234,'multiline':False]['text':' and that covariance and scale_tril parameters are equivalent','line_number':2235,'multiline':False]['text':' Double-check that batched versions behave the same as unbatched','line_number':2248,'multiline':False]['text':' see Note [Randomized statistical tests]','line_number':2265,'multiline':False]['text':' see Note [Randomized statistical tests]','line_number':2296,'multiline':False]['text':' We applied same tests in Multivariate Normal distribution for Wishart distribution','line_number':2306,'multiline':False]['text':' see Note [Randomized statistical tests]','line_number':2309,'multiline':False]['text':' construct PSD covariance','line_number':2316,'multiline':False]['text':' construct batch of PSD covariances','line_number':2322,'multiline':False]['text':' ensure that sample, batch, event shapes all handled correctly','line_number':2328,'multiline':False]['text':' check gradients','line_number':2346,'multiline':False]['text':' Modified and applied the same tests for multivariate_normal','line_number':2347,'multiline':False]['text':' Ensure symmetry of covariance','line_number':2353,'multiline':False]['text':' Ensure symmetry of precision','line_number':2355,'multiline':False]['text':' see Note [Randomized statistical tests]','line_number':2370,'multiline':False]['text':' RBF kernel','line_number':2373,'multiline':False]['text':' see Note [Randomized statistical tests]','line_number':2379,'multiline':False]['text':' SciPy allowed ndim -1 < df < ndim for Wishar distribution after version 1.7.0','line_number':2382,'multiline':False]['text':' check that logprob values match scipy logpdf,','line_number':2390,'multiline':False]['text':' and that covariance and scale_tril parameters are equivalent','line_number':2391,'multiline':False]['text':' Double-check that batched versions behave the same as unbatched','line_number':2404,'multiline':False]['text':' SciPy allowed ndim -1 < df < ndim for Wishar distribution after version 1.7.0','line_number':2406,'multiline':False]['text':' see Note [Randomized statistical tests]','line_number':2425,'multiline':False]['text':' SciPy allowed ndim -1 < df < ndim for Wishar distribution after version 1.7.0','line_number':2428,'multiline':False]['text':' see Note [Randomized statistical tests]','line_number':2452,'multiline':False]['text':' see Note [Randomized statistical tests]','line_number':2462,'multiline':False]['text':' see Note [Randomized statistical tests]','line_number':2516,'multiline':False]['text':' sample check for extreme value of mean, std','line_number':2537,'multiline':False]['text':' see Note [Randomized statistical tests]','line_number':2569,'multiline':False]['text':' see Note [Randomized statistical tests]','line_number':2620,'multiline':False]['text':' see Note [Randomized statistical tests]','line_number':2662,'multiline':False]['text':' see note [Randomized statistical tests]','line_number':2704,'multiline':False]['text':' Kumaraswamy distribution is not implemented in SciPy','line_number':2722,'multiline':False]['text':' Hence these tests are explicit','line_number':2723,'multiline':False]['text':' see note [Randomized statistical tests]','line_number':2771,'multiline':False]['text':' see Note [Randomized statistical tests]','line_number':2798,'multiline':False]['text':' see Note [Randomized statistical tests]','line_number':2829,'multiline':False]['text':' see Note [Randomized statistical tests]','line_number':2837,'multiline':False]['text':' Specifically test the special case where x=0 and α=1.  The PDF is','line_number':2869,'multiline':False]['text':' proportional to x**(α-1), which in this case works out to 0**0=1.','line_number':2870,'multiline':False]['text':' The log PDF of this term should therefore be 0.  However, it's easy','line_number':2871,'multiline':False]['text':' to accidentally introduce NaNs by calculating log(x) without regard','line_number':2872,'multiline':False]['text':' for the value of α-1.','line_number':2873,'multiline':False]['text':' see Note [Randomized statistical tests]','line_number':2883,'multiline':False]['text':' Test a few edge cases for the Dirichlet distribution mode. This also covers beta distributions.','line_number':2891,'multiline':False]['text':' see Note [Randomized statistical tests]','line_number':2928,'multiline':False]['text':' Check that small alphas do not cause NANs.','line_number':2933,'multiline':False]['text':' For low values of (alpha, beta), the gamma samples can underflow','line_number':2939,'multiline':False]['text':' with float32 and result in a spurious mode at 0.5. To prevent this,','line_number':2940,'multiline':False]['text':' torch._sample_dirichlet works with double precision for intermediate','line_number':2941,'multiline':False]['text':' calculations.','line_number':2942,'multiline':False]['text':' assert support is concentrated around 0 and 1','line_number':2950,'multiline':False]['text':' assert support is concentrated around 0 and 1','line_number':2964,'multiline':False]['text':' TODO: increase precision once imbalance on GPU is fixed.','line_number':2967,'multiline':False]['text':' using default value of lim here','line_number':2986,'multiline':False]['text':' check entropy computation','line_number':2996,'multiline':False]['text':' entropy below corresponds to the clamped value of prob when using float 64','line_number':2998,'multiline':False]['text':' the value for float32 should be -1.76898','line_number':2999,'multiline':False]['text':' for concentration=1., the density is uniform over the space of all','line_number':3026,'multiline':False]['text':' correlation matrices.','line_number':3027,'multiline':False]['text':' for dim=2, pdf = 0.5 (jacobian adjustment factor is 0.)','line_number':3029,'multiline':False]['text':' Tests the invertibility property on the distributions','line_number':3082,'multiline':False]['text':' Tests if the differentiation of the CDF gives the PDF at a given value','line_number':3110,'multiline':False]['text':' We do not need grads wrt params here, e.g. shape of gamma distribution.','line_number':3113,'multiline':False]['text':' this should not be wrapped in torch.abs()','line_number':3125,'multiline':False]['text':' Test correct broadcasting of parameter sizes for distributions that have multiple','line_number':3135,'multiline':False]['text':' parameters.','line_number':3136,'multiline':False]['text':' example type (distribution instance, expected sample shape)','line_number':3137,'multiline':False]['text':' invalid broadcasting cases; should throw error','line_number':3251,'multiline':False]['text':' example type (distribution class, distribution params)','line_number':3252,'multiline':False]['text':' We cannot easily check the mode for discrete distributions, but we can look left and right','line_number':3308,'multiline':False]['text':' to ensure the log probability is smaller than at the mode.','line_number':3309,'multiline':False]['text':' Add a dimension to the right if the event shape is not a scalar, e.g. OneHotCategorical.','line_number':3319,'multiline':False]['text':' Allow up to 1e-12 rounding error.','line_number':3323,'multiline':False]['text':' We perturb the mode in the unconstrained space and expect the log probability to decrease.','line_number':3326,'multiline':False]['text':' We pass the test with a small tolerance to allow for rounding and manually set the','line_number':3336,'multiline':False]['text':' difference to zero if both log probs are infinite with the same sign.','line_number':3337,'multiline':False]['text':' Check that either all or no elements in the event shape are nan: the mode cannot be','line_number':3361,'multiline':False]['text':' defined for part of an event.','line_number':3362,'multiline':False]['text':' We sanitize undefined modes by sampling from the distribution.','line_number':3367,'multiline':False]['text':' These tests are only needed for a few distributions that implement custom','line_number':3377,'multiline':False]['text':' reparameterized gradients. Most .rsample() implementations simply rely on','line_number':3378,'multiline':False]['text':' the reparameterization trick and do not need to be tested for accuracy.','line_number':3379,'multiline':False]['text':' Compare with expected gradient dx/dalpha along constant cdf(x,alpha).','line_number':3393,'multiline':False]['text':' Compare with expected gradient dx/ddf along constant cdf(x,df).','line_number':3421,'multiline':False]['text':' Compare with expected gradient dx/dalpha0 along constant cdf(x,alpha).','line_number':3449,'multiline':False]['text':' This reduces to a distribution Beta(alpha[0], alpha[1] + alpha[2]).','line_number':3450,'multiline':False]['text':' Compare with expected gradient dx/dcon1 along constant cdf(x,con1,con0).','line_number':3481,'multiline':False]['text':' Compare with expected gradient dx/dcon0 along constant cdf(x,con1,con0).','line_number':3511,'multiline':False]['text':' Compute expected gradient by hand.','line_number':3540,'multiline':False]['text':' v = dx/dalpha[0] is the reparameterized gradient aka tangent field.','line_number':3556,'multiline':False]['text':' Compute ramaining properties by finite difference.','line_number':3572,'multiline':False]['text':' dx is an arbitrary orthonormal basis tangent to the simplex.','line_number':3574,'multiline':False]['text':' avoid boundary','line_number':3577,'multiline':False]['text':' This is a modification of the standard continuity equation, using the product rule to allow','line_number':3581,'multiline':False]['text':' expression in terms of log_prob rather than the less numerically stable log_prob.exp().','line_number':3582,'multiline':False]['text':' unbatched','line_number':3700,'multiline':False]['text':' batched','line_number':3709,'multiline':False]['text':' unbatched','line_number':3720,'multiline':False]['text':' batched','line_number':3732,'multiline':False]['text':' These are pairs of distributions with 4 x 4 parameters as specified.','line_number':4059,'multiline':False]['text':' The first of the pair e.g. bernoulli[0] varies column-wise and the second','line_number':4060,'multiline':False]['text':' e.g. bernoulli[1] varies row-wise; that way we test all param pairs.','line_number':4061,'multiline':False]['text':' These tests should pass with precision = 0.01, but that makes tests very expensive.','line_number':4101,'multiline':False]['text':' Instead, we test with precision = 0.1 and only test with higher precision locally','line_number':4102,'multiline':False]['text':' when adding a new KL implementation.','line_number':4103,'multiline':False]['text':' The following pairs are not tested due to very high variance of the monte carlo','line_number':4104,'multiline':False]['text':' estimator; their implementations have been reviewed with extra care:','line_number':4105,'multiline':False]['text':' - (pareto, normal)','line_number':4106,'multiline':False]['text':' Set this to 0.01 when testing a new KL implementation.','line_number':4107,'multiline':False]['text':' Increase this when testing at smaller precision.','line_number':4108,'multiline':False]['text':' see Note [Randomized statistical tests]','line_number':4235,'multiline':False]['text':' Multivariate normal has a separate Monte Carlo based test due to the requirement of random generation of','line_number':4254,'multiline':False]['text':' positive (semi) definite matrices. n is set to 5, but can be increased during testing.','line_number':4255,'multiline':False]['text':' see Note [Randomized statistical tests]','line_number':4257,'multiline':False]['text':' Number of tests for multivariate_normal','line_number':4258,'multiline':False]['text':' Number of batches','line_number':4282,'multiline':False]['text':' Number of batches','line_number':4293,'multiline':False]['text':' see Note [Randomized statistical tests]','line_number':4305,'multiline':False]['text':' Number of tests for lowrank_multivariate_normal','line_number':4306,'multiline':False]['text':' Number of batches','line_number':4345,'multiline':False]['text':' Regression test for https://github.com/pytorch/pytorch/issues/34859','line_number':4395,'multiline':False]['text':' see Note [Randomized statistical tests]','line_number':4406,'multiline':False]['text':' These distributions accept positive probs, but elsewhere we','line_number':4465,'multiline':False]['text':' use a stricter constraint to the simplex.','line_number':4466,'multiline':False]['text':' ignore optional parameters','line_number':4471,'multiline':False]['text':' Check param shape is compatible with distribution shape.','line_number':4473,'multiline':False]['text':' Lower precision due to:','line_number':4550,'multiline':False]['text':' >>> 1 / (1 - torch.FloatTensor([0.9999]))','line_number':4551,'multiline':False]['text':' 9998.3408','line_number':4552,'multiline':False]['text':' [torch.FloatTensor of size 1]','line_number':4553,'multiline':False]['text':' using default values of lims here','line_number':4626,'multiline':False]['text':' using default values of lims here','line_number':4640,'multiline':False]['text':' TODO: make this a pytest parameterized test','line_number':4715,'multiline':False]['text':' ContinuousBernoulli is not tested because log_prob is not computed simply','line_number':4719,'multiline':False]['text':' from 'logits', but 'probs' is also needed','line_number':4720,'multiline':False]['text':' Create new instance to generate a valid sample','line_number':4732,'multiline':False]['text':' var for df2<=4 is undefined','line_number':4799,'multiline':False]['text':' Tests fail 1e-5 threshold if scale > 3','line_number':4831,'multiline':False]['text':' scipy var for Weibull only supports scalars','line_number':4880,'multiline':False]['text':' scipy var for Wishart only supports scalars','line_number':4884,'multiline':False]['text':' SciPy allowed ndim -1 < df < ndim for Wishar distribution after version 1.7.0','line_number':4885,'multiline':False]['text':' Cauchy, HalfCauchy distributions' mean is nan, skipping check','line_number':4900,'multiline':False]['text':' Cauchy, HalfCauchy distributions' standard deviation is nan, skipping check','line_number':4910,'multiline':False]['text':' VonMises variance is circular and scipy doesn't produce a correct result','line_number':4911,'multiline':False]['text':' Check that validation errors are indeed disabled,','line_number':5069,'multiline':False]['text':' but they might raise another error','line_number':5070,'multiline':False]['text':' TransformedDistribution has a distribution instance','line_number':5073,'multiline':False]['text':' as the argument, so we cannot do much about that','line_number':5074,'multiline':False]['text':' samples with incorrect shape must throw ValueError only','line_number':5080,'multiline':False]['text':' get sample of correct shape','line_number':5085,'multiline':False]['text':' check samples with incorrect support','line_number':5087,'multiline':False]['text':' check correct samples are ok','line_number':5097,'multiline':False]['text':' check invalid values raise ValueError','line_number':5100,'multiline':False]['text':' FIXME Schema not found for node','line_number':5203,'multiline':False]['text':' aten::cauchy(Double(2,1), float, float, Generator)','line_number':5205,'multiline':False]['text':' aten::cauchy(Double(2, 1), float, float, Generator)','line_number':5206,'multiline':False]['text':' Variance is not Euclidean','line_number':5207,'multiline':False]['text':' FIXME no nondeterministic nodes found in trace','line_number':5217,'multiline':False]['text':' FIXME Schema not found for node','line_number':5234,'multiline':False]['text':' aten::cauchy(Double(2,1), float, float, Generator)','line_number':5236,'multiline':False]['text':' aten::cauchy(Double(2, 1), float, float, Generator)','line_number':5237,'multiline':False]['text':' FIXME no nondeterministic nodes found in trace','line_number':5247,'multiline':False]['text':' FIXME traced functions produce incorrect results','line_number':5255,'multiline':False]['text':' check on different data','line_number':5267,'multiline':False]['text':' FIXME traced functions produce incorrect results','line_number':5276,'multiline':False]['text':' check on different data','line_number':5291,'multiline':False]['text':' check on different data','line_number':5311,'multiline':False]['text':' infinite variance','line_number':5323,'multiline':False]['text':' check on different data','line_number':5335,'multiline':False]['text':' FIXME traced functions produce incorrect results','line_number':5347,'multiline':False]['text':' check on different data','line_number':5362,'multiline':False]['text':' check on different data','line_number':5384,'multiline':False]