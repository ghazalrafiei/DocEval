['text':' Owner(s): ["module: dynamo"]','line_number':1,'multiline':False]['text':' TODO(future PR): handle more logic','line_number':359,'multiline':False]['text':' force graph break to ensure this was not inlined','line_number':565,'multiline':False]['text':' object attribute takes precedence unless it's a nn.Module','line_number':872,'multiline':False]['text':' Guard names should be valid python identifier as we use eval() to get','line_number':928,'multiline':False]['text':' corresponding guard value. Some guard names come from source(module path)','line_number':929,'multiline':False]['text':' where special symbols are valid. But they are not valid python identifier,','line_number':930,'multiline':False]['text':' we should identify these pattern and rewrite them with getattr.','line_number':931,'multiline':False]['text':' Sequential module(self.layer) contains three duplicated ReLU module.','line_number':944,'multiline':False]['text':' forced to be a UnspecializedNNModule','line_number':1013,'multiline':False]['text':' guarantee that we have installed','line_number':1145,'multiline':False]['text':' the generation tagging function','line_number':1146,'multiline':False]['text':' check that newly constructed instances','line_number':1159,'multiline':False]['text':' also have the same generation (even if copied from an old instance)','line_number':1160,'multiline':False]['text':' function call, twice to test wrapping','line_number':1166,'multiline':False]['text':' method call, twice to test wrapping','line_number':1169,'multiline':False]['text':' function call, twice to test wrapping','line_number':1199,'multiline':False]['text':' method call, twice to test wrapping','line_number':1202,'multiline':False]['text':' for now, only support reads from closure cells','line_number':1211,'multiline':False]['text':' TODO(future PR): support writes as well','line_number':1212,'multiline':False]['text':' RuntimeError: SymIntArrayRef expected to contain only concrete integers','line_number':1284,'multiline':False]['text':' test no graph break','line_number':1296,'multiline':False]['text':' test when mapped to UnspecializedNNModule','line_number':1308,'multiline':False]['text':' test with a static module in torch.*','line_number':1326,'multiline':False]['text':' fully materialized','line_number':1337,'multiline':False]['text':' test no graph break','line_number':1339,'multiline':False]['text':' RuntimeError: SymIntArrayRef expected to contain only concrete integers','line_number':1354,'multiline':False]['text':' Test FX graph 'call_module' works well if argument is lazy module','line_number':1357,'multiline':False]['text':' We should run compile mode firstly, otherwise the module','line_number':1361,'multiline':False]['text':' would be initialized when running eager mode.','line_number':1362,'multiline':False]['text':' RuntimeError: SymIntArrayRef expected to contain only concrete integers','line_number':1367,'multiline':False]['text':' first iteration','line_number':1375,'multiline':False]['text':' move to cuda and second iteration','line_number':1379,'multiline':False]['text':' RuntimeError: SymIntArrayRef expected to contain only concrete integers','line_number':1387,'multiline':False]['text':' first iteration','line_number':1394,'multiline':False]['text':' input shape changed and second iteration','line_number':1398,'multiline':False]['text':' RuntimeError: SymIntArrayRef expected to contain only concrete integers','line_number':1405,'multiline':False]['text':' Test lazy module works well with list/tuple input','line_number':1408,'multiline':False]['text':' RuntimeError: SymIntArrayRef expected to contain only concrete integers','line_number':1416,'multiline':False]['text':' Test new lazy submodule in lazy module's initialize_parameters','line_number':1419,'multiline':False]['text':' make sure super() works in the case where cls_to_become is None','line_number':1428,'multiline':False]['text':' Ensure that there is no recompilation','line_number':1519,'multiline':False]['text':' Ensure that there is a recompilation','line_number':1527,'multiline':False]['text':' Ensure that there is no recompilation','line_number':1530,'multiline':False]['text':' Check parameters and buffers','line_number':1551,'multiline':False]['text':' Check user-defined attributes, parameters and buffers','line_number':1583,'multiline':False]['text':' Check all attributes, parameters and buffers','line_number':1588,'multiline':False]['text':' Each submod is compiled separately and has a different nn module','line_number':1618,'multiline':False]['text':' guard. Ensure that recompilation logic is handle correctly.','line_number':1619,'multiline':False]['text':' For the third iteration, we would reach the cache size limit, and','line_number':1656,'multiline':False]['text':' therefore the total number of expected frame count is 2 *','line_number':1657,'multiline':False]['text':' num_submodules.','line_number':1658,'multiline':False]['text':' There will be a graph break for the inner mod being OptimizedModule','line_number':1737,'multiline':False]['text':' what if we remove our hook? we should recompile?','line_number':1784,'multiline':False]['text':' self.assertTrue(failure_reason == "hook")','line_number':1788,'multiline':False]['text':' We are compiling 1 big graph for all 3 functions including the hook.','line_number':1838,'multiline':False]['text':' If we remove the hook, we should recompile','line_number':1842,'multiline':False]['text':' what if instead of removing, we alter our hook?','line_number':1850,'multiline':False]['text':' if we remove the hook, dynamo shouldn't notice','line_number':1912,'multiline':False]['text':' second iteration is key, hooks would have fired during aot trace','line_number':1936,'multiline':False]['text':' on first iter','line_number':1937,'multiline':False]['text':' second iteration is key, hooks would have fired during aot trace','line_number':1946,'multiline':False]['text':' on first iter','line_number':1947,'multiline':False]['text':' this test shouldn't care whether hook guards are enabled or not','line_number':1961,'multiline':False]['text':' second iteration is key, hooks would have fired during aot trace','line_number':2000,'multiline':False]['text':' on first iter','line_number':2001,'multiline':False]['text':' Ndim change, recompile','line_number':2047,'multiline':False]['text':' Stable','line_number':2051,'multiline':False]['text':' hooks should be triggered if explicit calling `__call__`','line_number':2056,'multiline':False]['text':' this test shouldn't care whether hook guards are enabled or not','line_number':2069,'multiline':False]['text':' not an 'allowed module', so should not graph-break','line_number':2072,'multiline':False]['text':' second iteration is key, hooks would have fired during aot trace','line_number':2123,'multiline':False]['text':' on first iter','line_number':2124,'multiline':False]['text':' Eager','line_number':2147,'multiline':False]['text':' Compile','line_number':2150,'multiline':False]['text':' Eager','line_number':2169,'multiline':False]['text':' Compile','line_number':2172,'multiline':False]['text':' Eager','line_number':2201,'multiline':False]['text':' Compile','line_number':2204,'multiline':False]['text':' should be a no-op, but causes dynamo to lose the static input','line_number':2229,'multiline':False]['text':' causes two compilations, bc unimplemented custom setattr','line_number':2257,'multiline':False]['text':' https://github.com/pytorch/pytorch/issues/110048','line_number':2269,'multiline':False]['text':' Ensure that modification in user module causes recompile','line_number':2292,'multiline':False]['text':' The state-dict doesn't contain the `_orig_mod` prefix','line_number':2303,'multiline':False]['text':' Load the state-dict of an `OptimizedModule` into a regular `nn.Module`','line_number':2307,'multiline':False]['text':' Load the state-dict of a regular `nn.Module` into an `OptimizedModule`','line_number':2313,'multiline':False]['text':' For backward-compatibility, load a state-dict with keys prefixed with `_orig_mod`','line_number':2322,'multiline':False]['text':' When only a submodule is an `OptimizedModule`','line_number':2336,'multiline':False]