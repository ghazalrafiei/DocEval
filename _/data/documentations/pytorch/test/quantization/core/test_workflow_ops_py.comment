['text':' Owner(s): ["oncall: quantization"]','line_number':1,'multiline':False]['text':' Standard library','line_number':21,'multiline':False]['text':' Testing utils','line_number':27,'multiline':False]['text':' Reference method for fake quantize','line_number':35,'multiline':False]['text':' Note: because scale/zero_point are left as float in the actual kernel, this mimics how fake_quant works for float16/64','line_number':36,'multiline':False]['text':' Reference method for the gradient of the fake quantize operator','line_number':42,'multiline':False]['text':' Note: because scale/zero_point are left as float in the actual kernel, this mimics how fake_quant works for float16/64','line_number':43,'multiline':False]['text':' Reference method for the gradients of the fake quantize operator','line_number':52,'multiline':False]['text':' Reference method for quantization.','line_number':92,'multiline':False]['text':' Reference method for the per channel gradients of the learnable fake quantize operator','line_number':96,'multiline':False]['text':' noqa: C416','line_number':178,'multiline':False]['text':' min_vals, max_vals = torch.aminmax(y, dim=1)','line_number':184,'multiline':False]['text':' to force overflow','line_number':319,'multiline':False]['text':' to force underflow','line_number':327,'multiline':False]['text':' pick the scale + zp so that some values get clipped','line_number':339,'multiline':False]['text':' pick the scale + zp so that some values get clipped','line_number':371,'multiline':False]['text':' forward pass','line_number':380,'multiline':False]['text':' backward pass','line_number':387,'multiline':False]['text':' Test backward','line_number':538,'multiline':False]['text':' run fq module and make sure the quantization parameters does not change','line_number':554,'multiline':False]['text':' Output of fake quant is not identical to input','line_number':590,'multiline':False]['text':' Fake quant is disabled,output is identical to input','line_number':599,'multiline':False]['text':' Explicit copy at this point in time, because FakeQuant keeps internal','line_number':602,'multiline':False]['text':' state in mutable buffers.','line_number':603,'multiline':False]['text':' Observer is disabled, scale and zero-point do not change','line_number':616,'multiline':False]['text':' Observer is enabled, scale and zero-point are different','line_number':625,'multiline':False]['text':' pick the scale + zp so that some values get clipped','line_number':705,'multiline':False]['text':' TODO(future PR): fix the wrong dtype in obs.calculate_qparams and remove the cast','line_number':710,'multiline':False]['text':' to force overflow','line_number':741,'multiline':False]['text':' to force underflow','line_number':750,'multiline':False]['text':' Ensure that zero_point < quant_min.','line_number':768,'multiline':False]['text':' For non-float zero_point, fakequant requires zero_point between quant_min and quant_max.','line_number':771,'multiline':False]['text':' For float zero_point, fakequant can be outside quant_min and quant_max.','line_number':775,'multiline':False]['text':' pick the scale + zp so that some values get clipped','line_number':865,'multiline':False]['text':' TODO(future PR): fix the wrong dtype in obs.calculate_qparams and remove the cast','line_number':870,'multiline':False]['text':' enable observer after 2 iterations and fake_quant after 4 iterations','line_number':1035,'multiline':False]['text':' Test empty input works','line_number':1088,'multiline':False]['text':' enable observer after 2 iterations and fake_quant after 4 iterations','line_number':1131,'multiline':False]['text':' per_channel_enabled','line_number':1151,'multiline':False]['text':' verify the output matches','line_number':1220,'multiline':False]['text':' verify the gradient matches expectation of fake_quant op','line_number':1223,'multiline':False]['text':' verify the output matches','line_number':1266,'multiline':False]['text':' verify the gradient matches expectation of fake_quant op','line_number':1269,'multiline':False]