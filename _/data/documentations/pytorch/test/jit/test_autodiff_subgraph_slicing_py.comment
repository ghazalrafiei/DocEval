['text':' Owner(s): ["oncall: jit"]','line_number':1,'multiline':False]['text':' Make the helper files in test/ importable','line_number':11,'multiline':False]['text':' TODO: It is better if we can test directly on graphs instead of the current','line_number':27,'multiline':False]['text':' end-to-end fashion.','line_number':28,'multiline':False]['text':'  two nodes should be fused','line_number':65,'multiline':False]['text':'  see https://github.com/pytorch/pytorch/blob/master/torch/csrc/jit/runtime/graph_executor_impl.h#L49','line_number':66,'multiline':False]['text':'  two nodes should NOT be fused','line_number':71,'multiline':False]['text':' check_types requires last_graph on scripted to be set, so we just skip it','line_number':121,'multiline':False]['text':' check_types requires last_graph on scripted to be set, so we just skip it','line_number':134,'multiline':False]['text':' check_types requires last_graph on scripted to be set, so we just skip it','line_number':138,'multiline':False]['text':' output & var_list[0] should have requires_grad set to True','line_number':145,'multiline':False]['text':' validate the differentiableGraphOps are marking proper requires_grad','line_number':196,'multiline':False]['text':' one more runs to trigger fusion','line_number':200,'multiline':False]['text':' bias does NOT require grad','line_number':213,'multiline':False]['text':' 2 runs to reach backward + 1 to optimize it','line_number':216,'multiline':False]['text':' o --> o','line_number':227,'multiline':False]['text':' o: autodiff supported. x: not autodiff supported.','line_number':239,'multiline':False]['text':' o --> x','line_number':240,'multiline':False]['text':' o  o','line_number':252,'multiline':False]['text':' o --> o --> o','line_number':264,'multiline':False]['text':' |           ^','line_number':265,'multiline':False]['text':'  \_________/','line_number':266,'multiline':False]['text':'   o      o','line_number':279,'multiline':False]['text':'   |\    /|','line_number':280,'multiline':False]['text':'   | \  / |','line_number':281,'multiline':False]['text':'   |  /\  |','line_number':282,'multiline':False]['text':'   vv    vv','line_number':283,'multiline':False]['text':'   o      o','line_number':284,'multiline':False]['text':' o --> x --> o','line_number':296,'multiline':False]['text':' |           ^','line_number':297,'multiline':False]['text':'  \_________/','line_number':298,'multiline':False]['text':' o --> x     o','line_number':309,'multiline':False]['text':' |           ^','line_number':310,'multiline':False]['text':'  \_________/','line_number':311,'multiline':False]['text':' o     x --> o','line_number':324,'multiline':False]['text':' |           ^','line_number':325,'multiline':False]['text':'  \_________/','line_number':326,'multiline':False]['text':' add moved down','line_number':336,'multiline':False]['text':' We should not have combined the two multiplications into','line_number':351,'multiline':False]['text':' the same group; they should each be a separate DiffGraph','line_number':352,'multiline':False]['text':' z2 did did not get merged into the subgraph','line_number':370,'multiline':False]['text':' Case 1: aliasing between relu and t','line_number':380,'multiline':False]['text':' is within a DifferentiableGraph. It should be valid','line_number':381,'multiline':False]['text':' to merge both split_with_sizes in relu in one graph','line_number':382,'multiline':False]['text':' Case 2: aliasing between relu and split_with_sizes','line_number':396,'multiline':False]['text':' are both outputs of a Diff graph. It should be invalid','line_number':397,'multiline':False]['text':' to merge both split_with_sizes in relu in one graph','line_number':398,'multiline':False]['text':' i.e. relu and split_with_sizes should be in different','line_number':399,'multiline':False]['text':' differentiable graphs','line_number':400,'multiline':False]['text':' Case 3: two aliased nodes in a graph.','line_number':419,'multiline':False]['text':' Both `split_with_sizes` should be unfused','line_number':420,'multiline':False]['text':' Case 4: the aliased output has a descendant','line_number':441,'multiline':False]['text':' Both should be unfused. Note, %3 comes before %2','line_number':442,'multiline':False]['text':' to test that we unfuse in the reverse topo order','line_number':443,'multiline':False]['text':' Case 5: multiple aliased groups','line_number':463,'multiline':False]['text':' Both should be unfused. Note, %3 comes before %2','line_number':464,'multiline':False]['text':' to test that we unfuse in the reverse topo order','line_number':465,'multiline':False]['text':' The expectation is that CallFunction will prevent the final profile node from','line_number':488,'multiline':False]['text':' getting merged into the DifferentiableGraph, and that create_autodiff_subgraphs','line_number':489,'multiline':False]['text':' will instead add this to the type for %4.','line_number':490,'multiline':False]