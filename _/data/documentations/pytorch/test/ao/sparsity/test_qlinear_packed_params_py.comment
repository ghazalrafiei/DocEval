['text':'!/usr/bin/env python3','line_number':1,'multiline':False]['text':' Owner(s): ["oncall: mobile"]','line_number':2,'multiline':False]['text':' copied from https://pytorch.org/docs/stable/sparse.html#csr-tensor-operations,','line_number':20,'multiline':False]['text':' so row/col block indices match that example, but with blocks and','line_number':21,'multiline':False]['text':' scaled rows','line_number':22,'multiline':False]['text':' 4000 is tile width for Fbgemm','line_number':40,'multiline':False]['text':' axis = 0','line_number':65,'multiline':False]['text':' version','line_number':110,'multiline':False]['text':' Test Serialization','line_number':124,'multiline':False]['text':' weights are serialized as +128','line_number':133,'multiline':False]['text':' Test Unpacking','line_number':137,'multiline':False]['text':' Test Deserialization','line_number':144,'multiline':False]['text':' Serialize -> Deserialize -> Serialize should match Serialize','line_number':150,'multiline':False]['text':' Test that op output is preserved by serialize -> deserialize','line_number':153,'multiline':False]['text':' 7 and 8 are row and col block indices respectively','line_number':233,'multiline':False]['text':' Test Fbgemm -> Qnnpack','line_number':238,'multiline':False]['text':' Test Qnnpack -> Fbgemm','line_number':251,'multiline':False]