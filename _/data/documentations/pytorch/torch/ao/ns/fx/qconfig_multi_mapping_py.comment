['text':' initialize this with 1 QConfigMapping to avoid corner cases','line_number':70,'multiline':False]['text':' this method handles cases where the size of qconfig_list does not match','line_number':76,'multiline':False]['text':' the size of qconfig_mappings_list.','line_number':77,'multiline':False]['text':' Issue: Consider a user inserting global_qconfig A and B first, then inserting','line_number':78,'multiline':False]['text':' qconfig C as an object_type_qconfig for conv ops. If we internally store','line_number':79,'multiline':False]['text':' 1 QConfigMapping with A and C and another with just B, then the','line_number':80,'multiline':False]['text':' second QConfigMapping will match B to conv ops (which is not wanted), since B is global.','line_number':81,'multiline':False]['text':' we avoid this by maintaining the invariant that if any QConfigMapping','line_number':83,'multiline':False]['text':' has a qconfig style+key with a qconfig in it, all QConfigMappings must','line_number':84,'multiline':False]['text':' have either a qconfig or None for that same style+key. In the above','line_number':85,'multiline':False]['text':' example, a None qconfig would prevent the unwanted match in the','line_number':86,'multiline':False]['text':' second QConfigMapping','line_number':87,'multiline':False]['text':' Case: we have more qconfigs (in qconfig_list) than QConfigMappings','line_number':90,'multiline':False]['text':' Add new QConfigMappings (initialized so we maintain the `invariant`)','line_number':92,'multiline':False]['text':' searches other QConfigMappings for qconfig style+keys','line_number':95,'multiline':False]['text':' that need to be inserted as `None` into the new QConfigMapping','line_number':96,'multiline':False]['text':' global_qconfig has None by default','line_number':99,'multiline':False]['text':' insert copies of this new QConfigMapping until all entires','line_number':107,'multiline':False]['text':' in qconfig_list can fit among the QConfigMappings','line_number':108,'multiline':False]['text':' Case: we have fewer qconfigs in qconfig_list than QConfigMappings','line_number':112,'multiline':False]['text':' pad qconfig_list with `None` until length is same','line_number':114,'multiline':False]['text':' this function applies the insertion method across each QConfigMapping','line_number':118,'multiline':False]['text':' we remove duplicates and None to make the ordering of qconfigs','line_number':126,'multiline':False]['text':' deterministic upon insertion.','line_number':127,'multiline':False]['text':' uses QConfigMapping set method to insert qconfig','line_number':133,'multiline':False]['text':' we need to avoid the issue described in _handle_list_size_mismatch,','line_number':216,'multiline':False]['text':' so we reinsert all the qconfigs using the QConfigMultiMapping','line_number':217,'multiline':False]['text':' set methods','line_number':218,'multiline':False]['text':' go through all qconfig styles','line_number':220,'multiline':False]['text':' note: global can be ignored since it is None by default','line_number':221,'multiline':False]['text':' gather all key+qconfigs for current style','line_number':224,'multiline':False]['text':' into qconfig_dict_list','line_number':225,'multiline':False]['text':' reinsert all gathered key+qconfigs','line_number':234,'multiline':False]