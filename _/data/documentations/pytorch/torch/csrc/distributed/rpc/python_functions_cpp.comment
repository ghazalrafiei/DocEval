['text':' Need GIL to guard createPyObjectForStack() and its returned','line_number':35,'multiline':False]['text':' py::object','line_number':36,'multiline':False]['text':' TODO: Try to avoid a copy here.','line_number':43,'multiline':False]['text':' Need GIL to destruct the py::object returned by deserialize()','line_number':46,'multiline':False]['text':' Prefer C10 ops so that they go through C10 dispatch. We expect the','line_number':67,'multiline':False]['text':' total # of possible overloaded ops (i.e. size of below ops list) to be','line_number':68,'multiline':False]['text':' small (i.e. it is 10 for torch.add) so a worst-case linear search should','line_number':69,'multiline':False]['text':' not incur significant extra overhead.','line_number':70,'multiline':False]['text':' Don't throw on failures in this call, since we are not examining on all','line_number':83,'multiline':False]['text':' operators here, and the matched operator may indeed not be a c10 op.','line_number':84,'multiline':False]['text':' We should never hit this path, since if !matchedOperator, then the last','line_number':96,'multiline':False]['text':' call to getOpWithStack should have thrown.','line_number':97,'multiline':False]['text':' set forceGradRecording to true as even if the args does not contain any','line_number':122,'multiline':False]['text':' tensor, the return value might still contain tensors.','line_number':123,'multiline':False]['text':'forceGradRecording','line_number':129,'multiline':True]['text':' namespace','line_number':133,'multiline':False]['text':' toPyIValue might throw and we need to record the appropriate','line_number':149,'multiline':False]['text':' exception.','line_number':150,'multiline':False]['text':' FIXME: this is a temporary solution to add a special-case for','line_number':156,'multiline':False]['text':' ValueError and TypeError, as those are already used in our','line_number':157,'multiline':False]['text':' tests. We should have a more comprehensive coverage for other','line_number':158,'multiline':False]['text':' types of exceptions as well.','line_number':159,'multiline':False]['text':' py::error_already_set requires GIL to destruct, take special','line_number':167,'multiline':False]['text':' care.','line_number':168,'multiline':False]['text':' Release GIL since args and kwargs processing is done.','line_number':206,'multiline':False]['text':'forceGradRecording','line_number':235,'multiline':True]['text':' No need to catch exception here, if function can not be found,','line_number':246,'multiline':False]['text':' exception will be thrown in get_function() call; if args do not match','line_number':247,'multiline':False]['text':' with function schema, exception will be thrown in','line_number':248,'multiline':False]['text':' createStackForSchema() call.','line_number':249,'multiline':False]['text':' Acquire GIL for py::args and py::kwargs processing.','line_number':258,'multiline':False]['text':' Release GIL since args and kwargs processing is done.','line_number':286,'multiline':False]['text':'forceGradRecord ','line_number':303,'multiline':True]['text':' timeout ','line_number':304,'multiline':True]['text':' prevent this owner RRef being deleted due to other forks','line_number':315,'multiline':False]['text':' forceGradRecord ','line_number':324,'multiline':True]['text':' timeout ','line_number':325,'multiline':True]['text':' Builtin operators does not return py::object, and hence does not require','line_number':328,'multiline':False]['text':' GIL for destructing the potentially deleted OwerRRef.','line_number':329,'multiline':False]['text':' Sending remote message to self','line_number':367,'multiline':False]['text':' prevent this owner RRef being deleted due to other forks','line_number':369,'multiline':False]['text':' Acquire GIL for py::args and py::kwargs processing.','line_number':408,'multiline':False]['text':' namespace rpc','line_number':424,'multiline':False]['text':' namespace distributed','line_number':425,'multiline':False]['text':' namespace torch','line_number':426,'multiline':False]