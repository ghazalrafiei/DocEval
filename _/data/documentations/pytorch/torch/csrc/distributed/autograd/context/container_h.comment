['text':' Singleton class per worker which is responsible for storing the distributed','line_number':12,'multiline':False]['text':' autograd context for each autograd pass and also cleans up data for an','line_number':13,'multiline':False]['text':' autograd pass once its done.','line_number':14,'multiline':False]['text':'','line_number':15,'multiline':False]['text':' Each autograd pass is assigned a unique autograd_context_id and all data for','line_number':16,'multiline':False]['text':' that pass (DistAutogradContext) is stored in this container indexed by the','line_number':17,'multiline':False]['text':' autograd_context_id. The autograd_context_id itself is a 64 bit globally','line_number':18,'multiline':False]['text':' unique id. The first 16 bits is the worker_id and the next 48 bits is an','line_number':19,'multiline':False]['text':' auto-incrementing id for each worker.','line_number':20,'multiline':False]['text':'','line_number':21,'multiline':False]['text':' This container is also responsible for maintaining a globally unique message','line_number':22,'multiline':False]['text':' id, which is used to associate send/recv autograd function pairs. The format','line_number':23,'multiline':False]['text':' is similar to the autograd_context_id where we have a 64 bit integer with','line_number':24,'multiline':False]['text':' first 16 bits being the worker id and next 48 bits are auto-incrementing.','line_number':25,'multiline':False]['text':' One time initialization of the container.','line_number':30,'multiline':False]['text':' Retrieve the singleton instance of the container, ensures we have','line_number':33,'multiline':False]['text':' initialized the container.','line_number':34,'multiline':False]['text':' Create a new context for a distributed autograd pass.','line_number':37,'multiline':False]['text':' Clean up resources for a given context_id once the autograd pass is done.','line_number':40,'multiline':False]['text':' Sends RPC to other workers this worker knows about, telling them to clean','line_number':41,'multiline':False]['text':' up their context as well. Throws an exception if the context_id does not','line_number':42,'multiline':False]['text':' exist.','line_number':43,'multiline':False]['text':' Releases an autograd context if it is present on this node. Also sends RPC','line_number':46,'multiline':False]['text':' to other workers this worker knows about, telling them to clean up their','line_number':47,'multiline':False]['text':' context. Does nothing if it is not present.','line_number':48,'multiline':False]['text':' Checks if the passed in context_id is valid.','line_number':51,'multiline':False]['text':' Retrieve the autograd context for a given context_id.','line_number':54,'multiline':False]['text':' Retrieves the currently active autograd context for the current thread.','line_number':57,'multiline':False]['text':' Checks whether or not the current thread has a valid autograd context.','line_number':60,'multiline':False]['text':' Generate a new autograd_message_id for send/recv autograd functions.','line_number':63,'multiline':False]['text':' Creates a new autograd context with the provided context_id. If a context','line_number':66,'multiline':False]['text':' already exists with the provided context_id, we just return it.','line_number':67,'multiline':False]['text':' This does not set the current context for the current thread.','line_number':68,'multiline':False]['text':' Retrieves the maximum possible autograd_context_id/autograd_message_id that','line_number':71,'multiline':False]['text':' can be generated by this worker.','line_number':72,'multiline':False]['text':' Retrieves the worker ID for this node','line_number':75,'multiline':False]['text':' Can set current context id if there is no valid context yet','line_number':78,'multiline':False]['text':' Forcibly sets the thread local current context id. Should only be used in','line_number':81,'multiline':False]['text':' cases where you know what you're doing and need to override the thread','line_number':82,'multiline':False]['text':' local. Otherwise, use setCurrentContextId instead.','line_number':83,'multiline':False]['text':' Clear current context id','line_number':86,'multiline':False]['text':' Returns the number of autograd contexts in the container.','line_number':89,'multiline':False]['text':' Returns the current thread local context id for this thread.','line_number':92,'multiline':False]['text':' Number of shards for the map storing autograd contexts. We'd like this','line_number':101,'multiline':False]['text':' to be a power of 2 and we don't expect a value much higher than the','line_number':102,'multiline':False]['text':' number of cores would provide much benefit.','line_number':103,'multiline':False]['text':' Use cache line size for alignment.','line_number':106,'multiline':False]['text':' Structure holding one shard of the sharded autograd context map with its','line_number':109,'multiline':False]['text':' associated lock. Align to cache line size to avoid contention between','line_number':110,'multiline':False]['text':' adjacent entries.','line_number':111,'multiline':False]['text':' Lock for this shard.','line_number':113,'multiline':False]['text':' Map storing autograd contexts for this shard.','line_number':116,'multiline':False]['text':' Retrieve the shard for given context_id.','line_number':125,'multiline':False]['text':' Sends an RPC to the workers that have a context corresponding to passed in','line_number':128,'multiline':False]['text':' context_id. This function should be called with the lock.','line_number':129,'multiline':False]['text':' Erase context_id from the autograd context map, and reset the thread local','line_number':134,'multiline':False]['text':' current context id if it corresponds to the passed in context id. This','line_number':135,'multiline':False]['text':' function should be called with the lock.','line_number':136,'multiline':False]['text':' Compute the number of shards for the autograd_contexts_ map.','line_number':139,'multiline':False]['text':' Auto incrementing context id used to identify unique autograd passes.','line_number':142,'multiline':False]['text':' Initialized with the first 16 bits being the worker_id.','line_number':143,'multiline':False]['text':' Unique id to identify a worker in the distributed setting.','line_number':146,'multiline':False]['text':' Whether or not the container has been initialized appropriately.','line_number':149,'multiline':False]['text':' Sharded autograd context map.','line_number':152,'multiline':False]['text':' Number of shards for the sharded autograd_contexts_ map.','line_number':155,'multiline':False]['text':' Autograd message id to identify unique send/recv autograd function pairs.','line_number':158,'multiline':False]['text':' Maximum allowed value for autograd_context_id or autograd_message_id.','line_number':161,'multiline':False]['text':' namespace autograd','line_number':165,'multiline':False]['text':' namespace distributed','line_number':166,'multiline':False]['text':' namespace torch','line_number':167,'multiline':False]