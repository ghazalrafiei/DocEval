['text':' Retrieve tensor shapes from a given tensor.','line_number':36,'multiline':False]['text':' Use -2 to represent unset state of env vars','line_number':40,'multiline':False]['text':' Turns at::IntArrayRef into "(1, 2, 3, 4)".','line_number':43,'multiline':False]['text':' parse environment variable in reverse order, so the early
   * versions of a variable get higher priority than the latter
   * versions of the same variable ','line_number':98,'multiline':True]['text':' parse environment variable in reverse order, so the early
   * versions of a variable get higher priority than the latter
   * versions of the same variable ','line_number':125,'multiline':True]['text':' parse environment variable in reverse order, so the early
   * versions of a variable get higher priority than the latter
   * versions of the same variable ','line_number':156,'multiline':True]['text':' Ensure we have at least one tensor','line_number':204,'multiline':False]['text':' Ensure all tensors have identical type and shape','line_number':209,'multiline':False]['text':' Copied from ATen/core/functional.h.','line_number':396,'multiline':False]['text':' Copied from torch/csrc/utils/tensor_flatten.h.','line_number':408,'multiline':False]['text':' This method is only used in ProcessGroupGloo for now. Call sites must make','line_number':476,'multiline':False]['text':' sure that the input tensor is contiguous. It is OK if the tensor does not','line_number':477,'multiline':False]['text':' start from the beginning of the storage. For example, it could come from','line_number':478,'multiline':False]['text':' chunk(..., dim=0)[1]. Hence, we need to use data_ptr() instead of','line_number':479,'multiline':False]['text':' tensor.storage().data()','line_number':480,'multiline':False]['text':' NB: not using tensor.data<T>() because tensor is not aware of gloo::TYPE','line_number':481,'multiline':False]['text':' For alltoall split size sanity check','line_number':494,'multiline':False]['text':' Compute alltoall lengths and offsets, handling multi-dimension tensors','line_number':513,'multiline':False]['text':' TODO: see if we should add overflow protection for offset','line_number':535,'multiline':False]['text':' `errno` is only meaningful when it fails. E.g., a  successful `fork()` sets','line_number':560,'multiline':False]['text':' `errno` to `EINVAL` in child process on some macos','line_number':561,'multiline':False]['text':' (https://stackoverflow.com/a/20295079), and thus `errno` should really only','line_number':562,'multiline':False]['text':' be inspected if an error occurred.','line_number':563,'multiline':False]['text':'','line_number':564,'multiline':False]['text':' `success_cond` is an expression used to check if an error has happend. So for','line_number':565,'multiline':False]['text':' `fork()`, we can use `SYSCHECK(pid = fork(), pid != -1)`. The function output','line_number':566,'multiline':False]['text':' is stored in variable `__output` and may be used in `success_cond`.','line_number':567,'multiline':False]['text':' Most functions indicate error by returning `-1`. This is a helper macro for','line_number':606,'multiline':False]['text':' this common case with `SYSCHECK`.','line_number':607,'multiline':False]['text':' Since SOCKET_ERROR = -1 in MSVC, so also leverage SYSCHECK_ERR_RETURN_NEG1','line_number':608,'multiline':False]['text':' Send and receive','line_number':613,'multiline':False]['text':' there is more data to send','line_number':631,'multiline':False]['text':' Ignore SIGPIPE as the send() return value is always checked for error','line_number':636,'multiline':False]['text':' send a vector's length and data','line_number':678,'multiline':False]['text':' receive a vector as sent in sendVector','line_number':686,'multiline':False]['text':' this is only for convenience when sending rvalues','line_number':696,'multiline':False]['text':' send a string's length and data','line_number':709,'multiline':False]['text':' receive a string as sent in sendString','line_number':719,'multiline':False]['text':' namespace tcputil','line_number':728,'multiline':False]['text':' namespace c10d','line_number':729,'multiline':False]