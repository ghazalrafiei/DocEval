['text':' Converts OpType to human readable string.','line_number':36,'multiline':False]['text':' Whether or not an OP is an p2p op (SEND, RECV, RECVANYSOURCE)','line_number':39,'multiline':False]['text':' Please do not use Work API, it is going away, to be','line_number':42,'multiline':False]['text':' replaced by ivalue::Future.','line_number':43,'multiline':False]['text':' Python binding for this class might change, please do not assume','line_number':44,'multiline':False]['text':' this will be bound using pybind.','line_number':45,'multiline':False]['text':' Checks if request has completed. Non-blocking operation.','line_number':57,'multiline':False]['text':' Returns if the work completed successfully.','line_number':60,'multiline':False]['text':' If false, the exception function can be called to get details.','line_number':61,'multiline':False]['text':' Returns exception if isSuccess() returned false.','line_number':64,'multiline':False]['text':' Returns source rank if this objects represents a recv-from-any.','line_number':67,'multiline':False]['text':' Returns result tensors, if applicable.','line_number':70,'multiline':False]['text':' If work is not supposed to have result, we return empty list.','line_number':71,'multiline':False]['text':' Ensures that operations on the output tensors that are invoked','line_number':74,'multiline':False]['text':' after this function returns are correctly sequenced after the','line_number':75,'multiline':False]['text':' asynchronous completion of this work.','line_number':76,'multiline':False]['text':'','line_number':77,'multiline':False]['text':' For CUDA tensors, it inserts stream synchronization such that','line_number':78,'multiline':False]['text':' the streams of the caller wait for completion of the','line_number':79,'multiline':False]['text':' asynchronous operations on the destination tensors.','line_number':80,'multiline':False]['text':'','line_number':81,'multiline':False]['text':' For CPU tensors, it is currently a nop.','line_number':82,'multiline':False]['text':'','line_number':83,'multiline':False]['text':' This function should only be used if the caller polls for','line_number':84,'multiline':False]['text':' completion through the `isCompleted` function, it has returned','line_number':85,'multiline':False]['text':' true, and the `isSuccess` function also has returned true.','line_number':86,'multiline':False]['text':'','line_number':87,'multiline':False]['text':' Waits until request completes. Blocking operation.','line_number':90,'multiline':False]['text':' Throws if the work completed with an exception.','line_number':91,'multiline':False]['text':' Returns false if the work is aborted.','line_number':92,'multiline':False]['text':' Otherwise, it always returns true, indicating the work is completed.','line_number':93,'multiline':False]['text':'','line_number':94,'multiline':False]['text':' Functionally equivalent to:','line_number':95,'multiline':False]['text':'','line_number':96,'multiline':False]['text':'   while (!isCompleted()) { /* nop */ }','line_number':97,'multiline':False]['text':'   auto success = isSuccess();','line_number':98,'multiline':False]['text':'   if (!success) { std::rethrow_exception(exception()); }','line_number':99,'multiline':False]['text':'   return success;','line_number':100,'multiline':False]['text':'','line_number':101,'multiline':False]['text':' Returns a Future object that will be associated with the completion of','line_number':106,'multiline':False]['text':' work. Only NCCL backend is currently supported.','line_number':107,'multiline':False]['text':' Completes the work object and optionally sets the exception in a','line_number':120,'multiline':False]['text':' thread-safe manner. Notifies all waiting condition variables as well.','line_number':121,'multiline':False]['text':' Similar to finish, but throws an exception if one is already set or','line_number':124,'multiline':False]['text':' provided by the user.','line_number':125,'multiline':False]['text':' Current rank of the node.','line_number':133,'multiline':False]['text':' Operation type that this work object refers to.','line_number':136,'multiline':False]['text':' When profiling, the callback to record end of operation event. This','line_number':139,'multiline':False]['text':' callback needs to be called when collective operation is complete.','line_number':140,'multiline':False]['text':' namespace c10d','line_number':161,'multiline':False]