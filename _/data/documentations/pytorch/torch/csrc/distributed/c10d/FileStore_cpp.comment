['text':' For a comprehensive overview of file locking methods,','line_number':86,'multiline':False]['text':' see: https://gavv.github.io/blog/file-locks/.','line_number':87,'multiline':False]['text':' We stick to flock(2) here because we don't care about','line_number':88,'multiline':False]['text':' locking byte ranges and don't want locks to be process-wide.','line_number':89,'multiline':False]['text':' RAII wrapper around flock(2)','line_number':91,'multiline':False]['text':' Only retry when the file doesn't exist, since we are waiting for the','line_number':152,'multiline':False]['text':' file to be created in this case to address the following issue:','line_number':153,'multiline':False]['text':' https://github.com/pytorch/pytorch/issues/13750','line_number':154,'multiline':False]['text':' if the parent folder doesn't exist it will never be able to create the','line_number':159,'multiline':False]['text':' file so we can skip the retry','line_number':160,'multiline':False]['text':' namespace','line_number':284,'multiline':False]['text':' If the file does not exist - exit.','line_number':299,'multiline':False]['text':' This can happen when FileStore is invoked from python language which has','line_number':300,'multiline':False]['text':' GC. If python code has directory cleanup procedure, the race condition may','line_number':301,'multiline':False]['text':' occur between that code and this deconstructor. As a result, we check for','line_number':302,'multiline':False]['text':' file existense before cleanup','line_number':303,'multiline':False]['text':' cleanup key will be different from all rest keys since all rest keys will','line_number':314,'multiline':False]['text':' have a regular prefix.','line_number':315,'multiline':False]['text':' The last worker cleans up the file. If numWorkers was not initialized to','line_number':318,'multiline':False]['text':' a specific postive value (i.e. meaning that there was not a fixed number','line_number':319,'multiline':False]['text':' of workers), we don't attempt to clean.','line_number':320,'multiline':False]['text':' Clean up the file if number of references is 0.','line_number':321,'multiline':False]['text':' Best effort removal without checking the return','line_number':323,'multiline':False]['text':' Always refresh since even though the key exists in the cache,','line_number':346,'multiline':False]['text':' it might be outdated','line_number':347,'multiline':False]['text':' if the key does not exist and currentValue arg is empty or','line_number':351,'multiline':False]['text':' the key does exist and current value is what is expected, then set it','line_number':352,'multiline':False]['text':' if the key does not exist','line_number':358,'multiline':False]['text':' key exists but current value is not expected','line_number':361,'multiline':False]['text':' No new entries; release the shared lock and sleep for a bit','line_number':374,'multiline':False]['text':' Always refresh since even though the key exists in the cache,','line_number':391,'multiline':False]['text':' it might be outdated','line_number':392,'multiline':False]['text':' Always seek to the end to write','line_number':413,'multiline':False]['text':' File cursor is at the end of the file now, and we have an','line_number':415,'multiline':False]['text':' exclusive lock, so we can write the new value.','line_number':416,'multiline':False]['text':' Not using inotify because it doesn't work on many','line_number':469,'multiline':False]['text':' shared filesystems (such as NFS).','line_number':470,'multiline':False]['text':' sleep override ','line_number':479,'multiline':True]['text':' namespace c10d','line_number':484,'multiline':False]