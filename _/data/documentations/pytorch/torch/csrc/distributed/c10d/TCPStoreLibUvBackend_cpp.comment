['text':'

Exception safety:

It's ok to use exceptions during client processing.
Other callbacks don't provide exception safety so avoid there.

','line_number':23,'multiline':True]['text':' This controls the preferred size for buffers.','line_number':37,'multiline':False]['text':' Too small and we'll need multiple buffers for one request','line_number':38,'multiline':False]['text':' Too big and we might taxing malloc','line_number':39,'multiline':False]['text':'
    This method must be called once the handle is ready and registered with the
    loop.

    Do not call this in the ctor, make_intrusive reset refcounts to one after
    construction.
    ','line_number':60,'multiline':True]['text':' TODO use registerClient (and rename it to registerHandle) - this will','line_number':169,'multiline':False]['text':' significantly simplify things.','line_number':170,'multiline':False]['text':' This method returns a intrusive_ptr that does not increase the refcount.
     ','line_number':317,'multiline':True]['text':'
    This refcount increment must be matched by a reclaim call.
    Call this method after sucessfully scheduling this handle with a loop.
    ','line_number':324,'multiline':True]['text':' Since we're no longer actively used by the event loop, transfer ownership
     * to this frame. ','line_number':332,'multiline':True]['text':' This object was successfully registered with the event loop, so keep it
       * alive until it's unregistered. ','line_number':375,'multiline':True]['text':' must be stack allocated','line_number':386,'multiline':False]['text':' From key -> the list of UvClient waiting on the key','line_number':596,'multiline':False]['text':' From socket -> number of keys awaited','line_number':599,'multiline':False]['text':' bool tryListen(bool use_ipv6);','line_number':620,'multiline':False]['text':' Now we have received all the keys','line_number':797,'multiline':False]['text':' Suppress unused variable warning','line_number':883,'multiline':False]['text':' Suppress unused variable warning','line_number':909,'multiline':False]['text':'useIpv6=','line_number':980,'multiline':True]['text':'useIpv6=','line_number':985,'multiline':True]['text':' zero means use any port','line_number':993,'multiline':False]['text':' the daemon thread cleanup libuv','line_number':1015,'multiline':False]['text':' On "set", wake up all clients that have been waiting','line_number':1131,'multiline':False]['text':' TODO: This code path is not ideal as we are "lying" to the caller in','line_number':1146,'multiline':False]['text':' case the key does not exist. We should come up with a working solution.','line_number':1147,'multiline':False]['text':' It might make more sense to return ""','line_number':1148,'multiline':False]['text':' On "add", wake up all clients that have been waiting','line_number':1180,'multiline':False]['text':' Only count keys that have not already been set','line_number':1200,'multiline':False]['text':' we should not have clients waiting if we're appending, so it's all fine','line_number':1229,'multiline':False]['text':' namespace detail','line_number':1268,'multiline':False]['text':' namespace c10d','line_number':1269,'multiline':False]