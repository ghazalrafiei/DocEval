['text':'
   * For singletons, a string is returned. The string should be interpreted
   * as the name of a global variable.
   ','line_number':69,'multiline':True]['text':' NOLINTNEXTLINE(cppcoreguidelines-avoid-c-arrays,cppcoreguidelines-avoid-non-const-global-variables,modernize-avoid-c-arrays)','line_number':98,'multiline':False]['text':' NOLINTNEXTLINE(cppcoreguidelines-avoid-c-arrays,cppcoreguidelines-avoid-non-const-global-variables,modernize-avoid-c-arrays)','line_number':110,'multiline':False]['text':' Sentinel ','line_number':115,'multiline':True]['text':' tp_name ','line_number':123,'multiline':True]['text':' tp_basicsize ','line_number':124,'multiline':True]['text':' tp_itemsize ','line_number':125,'multiline':True]['text':' tp_dealloc ','line_number':126,'multiline':True]['text':' tp_vectorcall_offset ','line_number':127,'multiline':True]['text':' tp_getattr ','line_number':128,'multiline':True]['text':' tp_setattr ','line_number':129,'multiline':True]['text':' tp_reserved ','line_number':130,'multiline':True]['text':' tp_repr ','line_number':131,'multiline':True]['text':' tp_as_number ','line_number':132,'multiline':True]['text':' tp_as_sequence ','line_number':133,'multiline':True]['text':' tp_as_mapping ','line_number':134,'multiline':True]['text':' tp_hash  ','line_number':135,'multiline':True]['text':' tp_call ','line_number':136,'multiline':True]['text':' tp_str ','line_number':137,'multiline':True]['text':' tp_getattro ','line_number':138,'multiline':True]['text':' tp_setattro ','line_number':139,'multiline':True]['text':' tp_as_buffer ','line_number':140,'multiline':True]['text':' tp_flags ','line_number':141,'multiline':True]['text':' tp_doc ','line_number':142,'multiline':True]['text':' tp_traverse ','line_number':143,'multiline':True]['text':' tp_clear ','line_number':144,'multiline':True]['text':' tp_richcompare ','line_number':145,'multiline':True]['text':' tp_weaklistoffset ','line_number':146,'multiline':True]['text':' tp_iter ','line_number':147,'multiline':True]['text':' tp_iternext ','line_number':148,'multiline':True]['text':' tp_methods ','line_number':149,'multiline':True]['text':' tp_members ','line_number':150,'multiline':True]['text':' tp_getset ','line_number':151,'multiline':True]['text':' tp_base ','line_number':152,'multiline':True]['text':' tp_dict ','line_number':153,'multiline':True]['text':' tp_descr_get ','line_number':154,'multiline':True]['text':' tp_descr_set ','line_number':155,'multiline':True]['text':' tp_dictoffset ','line_number':156,'multiline':True]['text':' tp_init ','line_number':157,'multiline':True]['text':' tp_alloc ','line_number':158,'multiline':True]['text':' tp_new ','line_number':159,'multiline':True]['text':' Set a __dict__ with `__module__` = `torch`. This means','line_number':163,'multiline':False]['text':' `__module__` value will be inherited by instances','line_number':164,'multiline':False]['text':' (i.e. `torch.float32.__module__ == "torch"`). This will prevent','line_number':165,'multiline':False]['text':' Pickle from having to search all of sys.modules in order to find','line_number':166,'multiline':False]['text':' the module when pickling a dtype instance.','line_number':167,'multiline':False]['text':'','line_number':168,'multiline':False]['text':' We have to do this in C++ because extension types are not mutable','line_number':169,'multiline':False]['text':' from Python code.','line_number':170,'multiline':False]['text':'','line_number':171,'multiline':False]['text':' See https://github.com/pytorch/pytorch/issues/65077','line_number':172,'multiline':False]