['text':' Tracks the emission status of the nodes during the post-order generation.','line_number':13,'multiline':False]['text':' It helps tracking loops within the computation graphs.','line_number':14,'multiline':False]['text':' Computes the post order from the given node, without using recursion. The','line_number':23,'multiline':False]['text':' emission map can be used as saved state, for multiple separate calls to','line_number':24,'multiline':False]['text':' this API. The returned post-order can be empty if the node has already been','line_number':25,'multiline':False]['text':' emitted inside the emission map. An error is generated if a loop is','line_number':26,'multiline':False]['text':' detected.','line_number':27,'multiline':False]['text':' Same as above, but computes the post order on the set of nodes specified as','line_number':36,'multiline':False]['text':' argument.','line_number':37,'multiline':False]['text':' Retrieves the number of nodes within the graph whose sink are passed in the','line_number':41,'multiline':False]['text':' nodes argument.','line_number':42,'multiline':False]['text':' namespace lazy','line_number':46,'multiline':False]['text':' namespace torch','line_number':47,'multiline':False]