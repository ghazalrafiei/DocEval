['text':'*
 * This file is adapted from PyTorch/XLA
 * https://github.com/pytorch/xla/blob/master/third_party/xla_client/multi_wait.h
 ','line_number':1,'multiline':True]['text':' Support waiting for a number of tasks to complete.','line_number':19,'multiline':False]['text':' Signal the completion of a single task.','line_number':24,'multiline':False]['text':' Waits until at least count (passed as constructor value) completions','line_number':27,'multiline':False]['text':' happened.','line_number':28,'multiline':False]['text':' Same as above, but waits up to wait_seconds.','line_number':31,'multiline':False]['text':' Resets the threshold counter for the MultiWait object. The completed count','line_number':34,'multiline':False]['text':' is also reset to zero.','line_number':35,'multiline':False]['text':' Creates a completer functor which signals the mult wait object once func','line_number':38,'multiline':False]['text':' has completed. Handles exceptions by signaling the multi wait with the','line_number':39,'multiline':False]['text':' proper status value. This API returns a function which captures a MultiWait','line_number':40,'multiline':False]['text':' reference, so care must be taken such that the reference remains valid for','line_number':41,'multiline':False]['text':' the whole lifetime of the returned function.','line_number':42,'multiline':False]['text':' Similar as the above API, but with explicit capture of the MultiWait shared','line_number':45,'multiline':False]['text':' pointer.','line_number':46,'multiline':False]['text':' namespace lazy','line_number':61,'multiline':False]['text':' namespace torch','line_number':62,'multiline':False]