['text':' only warn when the scales have floating values since','line_number':52,'multiline':False]['text':' the result for ints is the same with/without recompute_scale_factor','line_number':53,'multiline':False]['text':' namespace detail','line_number':259,'multiline':False]['text':' DOXYGEN_SHOULD_SKIP_THIS ','line_number':260,'multiline':True]['text':'/ See','line_number':262,'multiline':False]['text':'/ https://pytorch.org/docs/master/nn.functional.html#torch.nn.functional.interpolate','line_number':263,'multiline':False]['text':'/ about the exact behavior of this functional.','line_number':264,'multiline':False]['text':'/','line_number':265,'multiline':False]['text':'/ See the documentation for `torch::nn::functional::InterpolateFuncOptions`','line_number':266,'multiline':False]['text':'/ class to learn what optional arguments are supported for this functional.','line_number':267,'multiline':False]['text':'/','line_number':268,'multiline':False]['text':'/ Example:','line_number':269,'multiline':False]['text':'/ ```','line_number':270,'multiline':False]['text':'/ namespace F = torch::nn::functional;','line_number':271,'multiline':False]['text':'/ F::interpolate(input,','line_number':272,'multiline':False]['text':'/ F::InterpolateFuncOptions().size({4}).mode(torch::kNearest));','line_number':273,'multiline':False]['text':'/ ```','line_number':274,'multiline':False]['text':' namespace functional','line_number':288,'multiline':False]['text':' namespace nn','line_number':289,'multiline':False]['text':' namespace torch','line_number':290,'multiline':False]