['text':' ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ LayerNorm ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~','line_number':16,'multiline':False]['text':'/ Applies Layer Normalization over a mini-batch of inputs as described in','line_number':18,'multiline':False]['text':'/ the paper `Layer Normalization`_ .','line_number':19,'multiline':False]['text':'/ See https://pytorch.org/docs/master/nn.html#torch.nn.LayerNorm to learn','line_number':20,'multiline':False]['text':'/ about the exact behavior of this module.','line_number':21,'multiline':False]['text':'/','line_number':22,'multiline':False]['text':'/ See the documentation for `torch::nn::LayerNormOptions` class to learn what','line_number':23,'multiline':False]['text':'/ constructor arguments are supported for this module.','line_number':24,'multiline':False]['text':'/','line_number':25,'multiline':False]['text':'/ Example:','line_number':26,'multiline':False]['text':'/ ```','line_number':27,'multiline':False]['text':'/ LayerNorm model(LayerNormOptions({2,','line_number':28,'multiline':False]['text':'/ 2}).elementwise_affine(false).eps(2e-5));','line_number':29,'multiline':False]['text':'/ ```','line_number':30,'multiline':False]['text':'/ Pretty prints the `LayerNorm` module into the given `stream`.','line_number':41,'multiline':False]['text':'/ Applies layer normalization over a mini-batch of inputs as described in','line_number':44,'multiline':False]['text':'/ the paper `Layer Normalization`_ .','line_number':45,'multiline':False]['text':'/','line_number':46,'multiline':False]['text':'/ The mean and standard-deviation are calculated separately over the last','line_number':47,'multiline':False]['text':'/ certain number dimensions which have to be of the shape specified by','line_number':48,'multiline':False]['text':'/ input `normalized_shape`.','line_number':49,'multiline':False]['text':'/','line_number':50,'multiline':False]['text':'/ `Layer Normalization`: https://arxiv.org/abs/1607.06450','line_number':51,'multiline':False]['text':'/ The options with which this module was constructed.','line_number':54,'multiline':False]['text':'/ The learned weight.','line_number':57,'multiline':False]['text':'/ Initialized to ones if the `elementwise_affine` option is set to `true`','line_number':58,'multiline':False]['text':'/ upon construction.','line_number':59,'multiline':False]['text':'/ The learned bias.','line_number':62,'multiline':False]['text':'/ Initialized to zeros `elementwise_affine` option is set to `true` upon','line_number':63,'multiline':False]['text':'/ construction.','line_number':64,'multiline':False]['text':'/ A `ModuleHolder` subclass for `LayerNormImpl`.','line_number':68,'multiline':False]['text':'/ See the documentation for `LayerNormImpl` class to learn what methods it','line_number':69,'multiline':False]['text':'/ provides, and examples of how to use `LayerNorm` with','line_number':70,'multiline':False]['text':'/ `torch::nn::LayerNormOptions`. See the documentation for `ModuleHolder` to','line_number':71,'multiline':False]['text':'/ learn about PyTorch's module storage semantics.','line_number':72,'multiline':False]['text':' ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ LocalResponseNorm','line_number':75,'multiline':False]['text':' ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~','line_number':76,'multiline':False]['text':'/ Applies local response normalization over an input signal composed','line_number':78,'multiline':False]['text':'/ of several input planes, where channels occupy the second dimension.','line_number':79,'multiline':False]['text':'/ Applies normalization across channels.','line_number':80,'multiline':False]['text':'/ See https://pytorch.org/docs/master/nn.html#torch.nn.LocalResponseNorm to','line_number':81,'multiline':False]['text':'/ learn about the exact behavior of this module.','line_number':82,'multiline':False]['text':'/','line_number':83,'multiline':False]['text':'/ See the documentation for `torch::nn::LocalResponseNormOptions` class to','line_number':84,'multiline':False]['text':'/ learn what constructor arguments are supported for this module.','line_number':85,'multiline':False]['text':'/','line_number':86,'multiline':False]['text':'/ Example:','line_number':87,'multiline':False]['text':'/ ```','line_number':88,'multiline':False]['text':'/ LocalResponseNorm','line_number':89,'multiline':False]['text':'/ model(LocalResponseNormOptions(2).alpha(0.0002).beta(0.85).k(2.));','line_number':90,'multiline':False]['text':'/ ```','line_number':91,'multiline':False]['text':'/ Pretty prints the `LocalResponseNormImpl` module into the given `stream`.','line_number':103,'multiline':False]['text':'/ The options with which this `Module` was constructed.','line_number':106,'multiline':False]['text':'/ A `ModuleHolder` subclass for `LocalResponseNormImpl`.','line_number':110,'multiline':False]['text':'/ See the documentation for `LocalResponseNormImpl` class to learn what','line_number':111,'multiline':False]['text':'/ methods it provides, and examples of how to use `LocalResponseNorm` with','line_number':112,'multiline':False]['text':'/ `torch::nn::LocalResponseNormOptions`. See the documentation for','line_number':113,'multiline':False]['text':'/ `ModuleHolder` to learn about PyTorch's module storage semantics.','line_number':114,'multiline':False]['text':' ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ CrossMapLRN2d ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~','line_number':117,'multiline':False]['text':'/ See the documentation for `torch::nn::CrossMapLRN2dOptions` class to learn','line_number':119,'multiline':False]['text':'/ what constructor arguments are supported for this module.','line_number':120,'multiline':False]['text':'/','line_number':121,'multiline':False]['text':'/ Example:','line_number':122,'multiline':False]['text':'/ ```','line_number':123,'multiline':False]['text':'/ CrossMapLRN2d model(CrossMapLRN2dOptions(3).alpha(1e-5).beta(0.1).k(10));','line_number':124,'multiline':False]['text':'/ ```','line_number':125,'multiline':False]['text':'/ Pretty prints the `CrossMapLRN2d` module into the given `stream`.','line_number':136,'multiline':False]['text':'/ A `ModuleHolder` subclass for `CrossMapLRN2dImpl`.','line_number':144,'multiline':False]['text':'/ See the documentation for `CrossMapLRN2dImpl` class to learn what methods it','line_number':145,'multiline':False]['text':'/ provides, and examples of how to use `CrossMapLRN2d` with','line_number':146,'multiline':False]['text':'/ `torch::nn::CrossMapLRN2dOptions`. See the documentation for `ModuleHolder`','line_number':147,'multiline':False]['text':'/ to learn about PyTorch's module storage semantics.','line_number':148,'multiline':False]['text':' ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ GroupNorm ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~','line_number':151,'multiline':False]['text':'/ Applies Group Normalization over a mini-batch of inputs as described in','line_number':153,'multiline':False]['text':'/ the paper `Group Normalization`_ .','line_number':154,'multiline':False]['text':'/ See https://pytorch.org/docs/master/nn.html#torch.nn.GroupNorm to learn','line_number':155,'multiline':False]['text':'/ about the exact behavior of this module.','line_number':156,'multiline':False]['text':'/','line_number':157,'multiline':False]['text':'/ See the documentation for `torch::nn::GroupNormOptions` class to learn what','line_number':158,'multiline':False]['text':'/ constructor arguments are supported for this module.','line_number':159,'multiline':False]['text':'/','line_number':160,'multiline':False]['text':'/ Example:','line_number':161,'multiline':False]['text':'/ ```','line_number':162,'multiline':False]['text':'/ GroupNorm model(GroupNormOptions(2, 2).eps(2e-5).affine(false));','line_number':163,'multiline':False]['text':'/ ```','line_number':164,'multiline':False]['text':'/ Pretty prints the `GroupNorm` module into the given `stream`.','line_number':175,'multiline':False]['text':'/ The options with which this module was constructed.','line_number':180,'multiline':False]['text':'/ The learned weight.','line_number':183,'multiline':False]['text':'/ The learned bias.','line_number':186,'multiline':False]['text':'/ A `ModuleHolder` subclass for `GroupNormImpl`.','line_number':190,'multiline':False]['text':'/ See the documentation for `GroupNormImpl` class to learn what methods it','line_number':191,'multiline':False]['text':'/ provides, and examples of how to use `GroupNorm` with','line_number':192,'multiline':False]['text':'/ `torch::nn::GroupNormOptions`. See the documentation for `ModuleHolder` to','line_number':193,'multiline':False]['text':'/ learn about PyTorch's module storage semantics.','line_number':194,'multiline':False]['text':' namespace nn','line_number':197,'multiline':False]['text':' namespace torch','line_number':198,'multiline':False]