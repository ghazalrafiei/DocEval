['text':'/ Constructs the `ParameterList` from a variadic list of ParameterList.','line_number':19,'multiline':False]['text':'/ `reset()` is empty for `ParameterList`, since it does not have parameters','line_number':32,'multiline':False]['text':'/ of its own.','line_number':33,'multiline':False]['text':'/ Pretty prints the `ParameterList` module into the given `stream`.','line_number':36,'multiline':False]['text':'/ push the a given parameter at the end of the list','line_number':49,'multiline':False]['text':'/ push the a given parameter at the end of the list','line_number':56,'multiline':False]['text':'/ push the a given parameter at the end of the list','line_number':63,'multiline':False]['text':'/ And the key of the pair will be discarded, only the value','line_number':64,'multiline':False]['text':'/ will be added into the `ParameterList`','line_number':65,'multiline':False]['text':'/ extend parameters from a container to the end of the list','line_number':73,'multiline':False]['text':'/ Returns an iterator to the start of the ParameterList','line_number':81,'multiline':False]['text':'/ the iterator returned will be type of `OrderedDict<std::string,','line_number':82,'multiline':False]['text':'/ torch::Tensor>::Item`','line_number':83,'multiline':False]['text':'/ Returns a const iterator to the start of the ParameterList','line_number':88,'multiline':False]['text':'/ the iterator returned will be type of `OrderedDict<std::string,','line_number':89,'multiline':False]['text':'/ torch::Tensor>::Item`','line_number':90,'multiline':False]['text':'/ Returns an iterator to the end of the ParameterList','line_number':95,'multiline':False]['text':'/ the iterator returned will be type of `OrderedDict<std::string,','line_number':96,'multiline':False]['text':'/ torch::Tensor>::Item`','line_number':97,'multiline':False]['text':'/ Returns a const iterator to the end of the ParameterList','line_number':102,'multiline':False]['text':'/ the iterator returned will be type of `OrderedDict<std::string,','line_number':103,'multiline':False]['text':'/ torch::Tensor>::Item`','line_number':104,'multiline':False]['text':'/ Returns the value associated with the given `key`. Throws an exception if','line_number':109,'multiline':False]['text':'/ no such key is stored in the `ParameterList`. Check contains(key) before','line_number':110,'multiline':False]['text':'/ for a non-throwing way of access','line_number':111,'multiline':False]['text':'/ Returns the value associated with the given `key`. Throws an exception if','line_number':117,'multiline':False]['text':'/ no such key is stored in the `ParameterList`. Check contains(key) before','line_number':118,'multiline':False]['text':'/ for a non-throwing way of access','line_number':119,'multiline':False]['text':'/ Returns the value associated with the given `key`. Throws an exception if','line_number':125,'multiline':False]['text':'/ no such key is stored in the `ParameterList`. Check contains(key) before','line_number':126,'multiline':False]['text':'/ for a non-throwing way of access','line_number':127,'multiline':False]['text':'/ Returns the value associated with the given `key`. Throws an exception if','line_number':132,'multiline':False]['text':'/ no such key is stored in the `ParameterList`. Check contains(key) before','line_number':133,'multiline':False]['text':'/ for a non-throwing way of access','line_number':134,'multiline':False]['text':'/ Return the size of the ParameterList','line_number':139,'multiline':False]['text':'/ True if the ParameterList is empty','line_number':143,'multiline':False]['text':'/ Overload the +=, so that two ParameterList could be incrementally added','line_number':148,'multiline':False]['text':' Recursively calls this method, until the parameter pack only thas this','line_number':159,'multiline':False]['text':' entry left. Then calls `push_back()` a final time (above).','line_number':160,'multiline':False]['text':'/ The base case, when the list of modules is empty.','line_number':164,'multiline':False]['text':' namespace nn','line_number':168,'multiline':False]['text':' namespace torch','line_number':169,'multiline':False]