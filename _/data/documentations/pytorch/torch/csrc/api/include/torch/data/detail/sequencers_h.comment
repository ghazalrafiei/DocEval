['text':' namespace detail','line_number':21,'multiline':False]['text':'/ A `Sequencer` accepts a function that yields the next result of a','line_number':23,'multiline':False]['text':'/ `DataLoader` and then has the opportunity to influence the order in which','line_number':24,'multiline':False]['text':'/ these results are returned. The `NoSequencer` does not enforce any','line_number':25,'multiline':False]['text':'/ sequencing and returns any result directly. The `OrderedSequencer` instead','line_number':26,'multiline':False]['text':'/ buffers results internally to return them in order of their sequence number.','line_number':27,'multiline':False]['text':'/ A `Sequencer` that does not enforce any ordering. It is effectively the','line_number':35,'multiline':False]['text':'/ identity function.','line_number':36,'multiline':False]['text':'/ A `Sequencer` that buffers results and returns them in order of their','line_number':45,'multiline':False]['text':'/ sequence number. The `OrderedSequencer` maintains an internal, monotonically','line_number':46,'multiline':False]['text':'/ incrementing counter for the next sequence number it expects. If it receives','line_number':47,'multiline':False]['text':'/ a result with a higher sequence number, it will buffer it for later (when','line_number':48,'multiline':False]['text':'/ the sequence number reaches that of this result). Otherwise, if the sequence','line_number':49,'multiline':False]['text':'/ numbers match, the result is returned.','line_number':50,'multiline':False]['text':'/','line_number':51,'multiline':False]['text':'/ Implementation note: The `OrderedSequencer` is implemented with a fixed-size','line_number':52,'multiline':False]['text':'/ buffer. Let `m` be the maximum number of jobs in the data loader's queue and','line_number':53,'multiline':False]['text':'/ `s` be the current sequence number. Assume `m` jobs are scheduled in the','line_number':54,'multiline':False]['text':'/ `DataLoader`. Any new result is stored at index `job.sqn mod m` in the','line_number':55,'multiline':False]['text':'/ `OrderedSequencer`. Why are we sure sequence numbers of new jobs will not','line_number':56,'multiline':False]['text':'/ collide with sequence numbers of buffered jobs? The `OrderedSequencer` will','line_number':57,'multiline':False]['text':'/ not return from `next()` until it receives the result with sqn `s`. This','line_number':58,'multiline':False]['text':'/ means no new jobs can be scheduled in the `DataLoader` in the meantime,','line_number':59,'multiline':False]['text':'/ which enforces that as long as sqn `s` has not been received, `s + m` (which','line_number':60,'multiline':False]['text':'/ would cause a collision in the fixed-size buffer) will not yet be scheduled.','line_number':61,'multiline':False]['text':'/ Constructs the `OrderedSequencer` with the maximum number of results it','line_number':66,'multiline':False]['text':'/ will ever hold at one point in time.','line_number':67,'multiline':False]['text':'/ Buffers results until the next one in the expected order is received.','line_number':70,'multiline':False]['text':' If we already have the result for the next sqn, return it.','line_number':72,'multiline':False]['text':' Otherwise wait for the next result.','line_number':78,'multiline':False]['text':' If it was not nullopt and the sequence numbers match, return it','line_number':85,'multiline':False]['text':' directly and bump the sequence number.','line_number':86,'multiline':False]['text':' Stash the result for later.','line_number':91,'multiline':False]['text':' The result was an empty optional, so we are done with this epoch.','line_number':95,'multiline':False]['text':'/ Accesses the buffer at the `index` modulo the buffer size.','line_number':99,'multiline':False]['text':'/ The monotonically increasing sequence number we expect.','line_number':104,'multiline':False]['text':'/ A fixed-size buffer (after construction).','line_number':107,'multiline':False]['text':' namespace sequencers','line_number':110,'multiline':False]['text':' namespace detail','line_number':111,'multiline':False]['text':' namespace data','line_number':112,'multiline':False]['text':' namespace torch','line_number':113,'multiline':False]