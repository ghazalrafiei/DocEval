['text':'/ Base class for all RNN implementations (intended for code sharing).','line_number':23,'multiline':False]['text':'/ Initializes the parameters of the RNN module.','line_number':29,'multiline':False]['text':'/ Overrides `nn::Module::to()` to call `flatten_parameters()` after the','line_number':34,'multiline':False]['text':'/ original operation.','line_number':35,'multiline':False]['text':'/ Pretty prints the RNN module into the given `stream`.','line_number':41,'multiline':False]['text':'/ Modifies the internal storage of weights for optimization purposes.','line_number':44,'multiline':False]['text':'/','line_number':45,'multiline':False]['text':'/ On CPU, this method should be called if any of the weight or bias vectors','line_number':46,'multiline':False]['text':'/ are changed (i.e. weights are added or removed). On GPU, it should be','line_number':47,'multiline':False]['text':'/ called __any time the storage of any parameter is modified__, e.g. any','line_number':48,'multiline':False]['text':'/ time a parameter is assigned a new value. This allows using the fast path','line_number':49,'multiline':False]['text':'/ in cuDNN implementations of respective RNN `forward()` methods. It is','line_number':50,'multiline':False]['text':'/ called once upon construction, inside `reset()`.','line_number':51,'multiline':False]['text':'/ The RNN's options.','line_number':56,'multiline':False]['text':' NOLINTNEXTLINE(cppcoreguidelines-non-private-member-variables-in-classes)','line_number':57,'multiline':False]['text':' Resets flat_weights_','line_number':61,'multiline':False]['text':' Note: be v. careful before removing this, as 3rd party device types','line_number':62,'multiline':False]['text':' likely rely on this behavior to properly .to() modules like LSTM.','line_number':63,'multiline':False]['text':' NOLINTNEXTLINE(cppcoreguidelines-non-private-member-variables-in-classes)','line_number':82,'multiline':False]['text':' NOLINTNEXTLINE(cppcoreguidelines-non-private-member-variables-in-classes)','line_number':84,'multiline':False]['text':' NOLINTNEXTLINE(cppcoreguidelines-non-private-member-variables-in-classes)','line_number':86,'multiline':False]['text':' namespace detail','line_number':89,'multiline':False]['text':' ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ RNN ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~','line_number':91,'multiline':False]['text':'/ A multi-layer Elman RNN module with Tanh or ReLU activation.','line_number':93,'multiline':False]['text':'/ See https://pytorch.org/docs/master/generated/torch.nn.RNN.html to learn','line_number':94,'multiline':False]['text':'/ about the exact behavior of this module.','line_number':95,'multiline':False]['text':'/','line_number':96,'multiline':False]['text':'/ See the documentation for `torch::nn::RNNOptions` class to learn what','line_number':97,'multiline':False]['text':'/ constructor arguments are supported for this module.','line_number':98,'multiline':False]['text':'/','line_number':99,'multiline':False]['text':'/ Example:','line_number':100,'multiline':False]['text':'/ ```','line_number':101,'multiline':False]['text':'/ RNN model(RNNOptions(128,','line_number':102,'multiline':False]['text':'/ 64).num_layers(3).dropout(0.2).nonlinearity(torch::kTanh));','line_number':103,'multiline':False]['text':'/ ```','line_number':104,'multiline':False]['text':'/ A `ModuleHolder` subclass for `RNNImpl`.','line_number':133,'multiline':False]['text':'/ See the documentation for `RNNImpl` class to learn what methods it','line_number':134,'multiline':False]['text':'/ provides, and examples of how to use `RNN` with `torch::nn::RNNOptions`.','line_number':135,'multiline':False]['text':'/ See the documentation for `ModuleHolder` to learn about PyTorch's','line_number':136,'multiline':False]['text':'/ module storage semantics.','line_number':137,'multiline':False]['text':' ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ LSTM ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~','line_number':140,'multiline':False]['text':'/ A multi-layer long-short-term-memory (LSTM) module.','line_number':142,'multiline':False]['text':'/ See https://pytorch.org/docs/master/generated/torch.nn.LSTM.html to learn','line_number':143,'multiline':False]['text':'/ about the exact behavior of this module.','line_number':144,'multiline':False]['text':'/','line_number':145,'multiline':False]['text':'/ See the documentation for `torch::nn::LSTMOptions` class to learn what','line_number':146,'multiline':False]['text':'/ constructor arguments are supported for this module.','line_number':147,'multiline':False]['text':'/','line_number':148,'multiline':False]['text':'/ Example:','line_number':149,'multiline':False]['text':'/ ```','line_number':150,'multiline':False]['text':'/ LSTM model(LSTMOptions(2,','line_number':151,'multiline':False]['text':'/ 4).num_layers(3).batch_first(false).bidirectional(true));','line_number':152,'multiline':False]['text':'/ ```','line_number':153,'multiline':False]['text':'/ A `ModuleHolder` subclass for `LSTMImpl`.','line_number':198,'multiline':False]['text':'/ See the documentation for `LSTMImpl` class to learn what methods it','line_number':199,'multiline':False]['text':'/ provides, and examples of how to use `LSTM` with `torch::nn::LSTMOptions`.','line_number':200,'multiline':False]['text':'/ See the documentation for `ModuleHolder` to learn about PyTorch's','line_number':201,'multiline':False]['text':'/ module storage semantics.','line_number':202,'multiline':False]['text':' ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ GRU ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~','line_number':205,'multiline':False]['text':'/ A multi-layer gated recurrent unit (GRU) module.','line_number':207,'multiline':False]['text':'/ See https://pytorch.org/docs/master/generated/torch.nn.GRU.html to learn','line_number':208,'multiline':False]['text':'/ about the exact behavior of this module.','line_number':209,'multiline':False]['text':'/','line_number':210,'multiline':False]['text':'/ See the documentation for `torch::nn::GRUOptions` class to learn what','line_number':211,'multiline':False]['text':'/ constructor arguments are supported for this module.','line_number':212,'multiline':False]['text':'/','line_number':213,'multiline':False]['text':'/ Example:','line_number':214,'multiline':False]['text':'/ ```','line_number':215,'multiline':False]['text':'/ GRU model(GRUOptions(2,','line_number':216,'multiline':False]['text':'/ 4).num_layers(3).batch_first(false).bidirectional(true));','line_number':217,'multiline':False]['text':'/ ```','line_number':218,'multiline':False]['text':'/ A `ModuleHolder` subclass for `GRUImpl`.','line_number':247,'multiline':False]['text':'/ See the documentation for `GRUImpl` class to learn what methods it','line_number':248,'multiline':False]['text':'/ provides, and examples of how to use `GRU` with `torch::nn::GRUOptions`.','line_number':249,'multiline':False]['text':'/ See the documentation for `ModuleHolder` to learn about PyTorch's','line_number':250,'multiline':False]['text':'/ module storage semantics.','line_number':251,'multiline':False]['text':' ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ RNNCellImplBase','line_number':254,'multiline':False]['text':' ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~','line_number':255,'multiline':False]['text':'/ Base class for all RNNCell implementations (intended for code sharing).','line_number':258,'multiline':False]['text':'/ Initializes the parameters of the RNNCell module.','line_number':264,'multiline':False]['text':'/ Pretty prints the RNN module into the given `stream`.','line_number':269,'multiline':False]['text':' namespace detail','line_number':283,'multiline':False]['text':' ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ RNNCell','line_number':285,'multiline':False]['text':' ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~','line_number':286,'multiline':False]['text':'/ An Elman RNN cell with tanh or ReLU non-linearity.','line_number':288,'multiline':False]['text':'/ See https://pytorch.org/docs/master/nn.html#torch.nn.RNNCell to learn','line_number':289,'multiline':False]['text':'/ about the exact behavior of this module.','line_number':290,'multiline':False]['text':'/','line_number':291,'multiline':False]['text':'/ See the documentation for `torch::nn::RNNCellOptions` class to learn what','line_number':292,'multiline':False]['text':'/ constructor arguments are supported for this module.','line_number':293,'multiline':False]['text':'/','line_number':294,'multiline':False]['text':'/ Example:','line_number':295,'multiline':False]['text':'/ ```','line_number':296,'multiline':False]['text':'/ RNNCell model(RNNCellOptions(20,','line_number':297,'multiline':False]['text':'/ 10).bias(false).nonlinearity(torch::kReLU));','line_number':298,'multiline':False]['text':'/ ```','line_number':299,'multiline':False]['text':'/ A `ModuleHolder` subclass for `RNNCellImpl`.','line_number':318,'multiline':False]['text':'/ See the documentation for `RNNCellImpl` class to learn what methods it','line_number':319,'multiline':False]['text':'/ provides, and examples of how to use `RNNCell` with','line_number':320,'multiline':False]['text':'/ `torch::nn::RNNCellOptions`. See the documentation for `ModuleHolder` to','line_number':321,'multiline':False]['text':'/ learn about PyTorch's module storage semantics.','line_number':322,'multiline':False]['text':' ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ LSTMCell','line_number':325,'multiline':False]['text':' ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~','line_number':326,'multiline':False]['text':'/ A long short-term memory (LSTM) cell.','line_number':328,'multiline':False]['text':'/ See https://pytorch.org/docs/master/nn.html#torch.nn.LSTMCell to learn','line_number':329,'multiline':False]['text':'/ about the exact behavior of this module.','line_number':330,'multiline':False]['text':'/','line_number':331,'multiline':False]['text':'/ See the documentation for `torch::nn::LSTMCellOptions` class to learn what','line_number':332,'multiline':False]['text':'/ constructor arguments are supported for this module.','line_number':333,'multiline':False]['text':'/','line_number':334,'multiline':False]['text':'/ Example:','line_number':335,'multiline':False]['text':'/ ```','line_number':336,'multiline':False]['text':'/ LSTMCell model(LSTMCellOptions(20, 10).bias(false));','line_number':337,'multiline':False]['text':'/ ```','line_number':338,'multiline':False]['text':'/ A `ModuleHolder` subclass for `LSTMCellImpl`.','line_number':357,'multiline':False]['text':'/ See the documentation for `LSTMCellImpl` class to learn what methods it','line_number':358,'multiline':False]['text':'/ provides, and examples of how to use `LSTMCell` with','line_number':359,'multiline':False]['text':'/ `torch::nn::LSTMCellOptions`. See the documentation for `ModuleHolder` to','line_number':360,'multiline':False]['text':'/ learn about PyTorch's module storage semantics.','line_number':361,'multiline':False]['text':' ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ GRUCell','line_number':364,'multiline':False]['text':' ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~','line_number':365,'multiline':False]['text':'/ A gated recurrent unit (GRU) cell.','line_number':367,'multiline':False]['text':'/ See https://pytorch.org/docs/master/nn.html#torch.nn.GRUCell to learn','line_number':368,'multiline':False]['text':'/ about the exact behavior of this module.','line_number':369,'multiline':False]['text':'/','line_number':370,'multiline':False]['text':'/ See the documentation for `torch::nn::GRUCellOptions` class to learn what','line_number':371,'multiline':False]['text':'/ constructor arguments are supported for this module.','line_number':372,'multiline':False]['text':'/','line_number':373,'multiline':False]['text':'/ Example:','line_number':374,'multiline':False]['text':'/ ```','line_number':375,'multiline':False]['text':'/ GRUCell model(GRUCellOptions(20, 10).bias(false));','line_number':376,'multiline':False]['text':'/ ```','line_number':377,'multiline':False]['text':'/ A `ModuleHolder` subclass for `GRUCellImpl`.','line_number':393,'multiline':False]['text':'/ See the documentation for `GRUCellImpl` class to learn what methods it','line_number':394,'multiline':False]['text':'/ provides, and examples of how to use `GRUCell` with','line_number':395,'multiline':False]['text':'/ `torch::nn::GRUCellOptions`. See the documentation for `ModuleHolder` to','line_number':396,'multiline':False]['text':'/ learn about PyTorch's module storage semantics.','line_number':397,'multiline':False]['text':' namespace nn','line_number':400,'multiline':False]['text':' namespace torch','line_number':401,'multiline':False]