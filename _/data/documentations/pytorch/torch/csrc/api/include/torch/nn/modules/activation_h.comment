['text':' ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ELU ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~','line_number':14,'multiline':False]['text':'/ Applies elu over a given input.','line_number':16,'multiline':False]['text':'/ See https://pytorch.org/docs/master/nn.html#torch.nn.ELU to learn','line_number':17,'multiline':False]['text':'/ about the exact behavior of this module.','line_number':18,'multiline':False]['text':'/','line_number':19,'multiline':False]['text':'/ See the documentation for `torch::nn::ELUOptions` class to learn what','line_number':20,'multiline':False]['text':'/ constructor arguments are supported for this module.','line_number':21,'multiline':False]['text':'/','line_number':22,'multiline':False]['text':'/ Example:','line_number':23,'multiline':False]['text':'/ ```','line_number':24,'multiline':False]['text':'/ ELU model(ELUOptions().alpha(42.42).inplace(true));','line_number':25,'multiline':False]['text':'/ ```','line_number':26,'multiline':False]['text':'/ Pretty prints the `ELU` module into the given `stream`.','line_number':35,'multiline':False]['text':'/ The options with which this `Module` was constructed.','line_number':38,'multiline':False]['text':'/ A `ModuleHolder` subclass for `ELUImpl`.','line_number':42,'multiline':False]['text':'/ See the documentation for `ELUImpl` class to learn what methods it','line_number':43,'multiline':False]['text':'/ provides, and examples of how to use `ELU` with `torch::nn::ELUOptions`.','line_number':44,'multiline':False]['text':'/ See the documentation for `ModuleHolder` to learn about PyTorch's','line_number':45,'multiline':False]['text':'/ module storage semantics.','line_number':46,'multiline':False]['text':' ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ SELU ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~','line_number':49,'multiline':False]['text':'/ Applies the selu function element-wise.','line_number':51,'multiline':False]['text':'/ See https://pytorch.org/docs/master/nn.html#torch.nn.SELU to learn','line_number':52,'multiline':False]['text':'/ about the exact behavior of this module.','line_number':53,'multiline':False]['text':'/','line_number':54,'multiline':False]['text':'/ See the documentation for `torch::nn::SELUOptions` class to learn what','line_number':55,'multiline':False]['text':'/ constructor arguments are supported for this module.','line_number':56,'multiline':False]['text':'/','line_number':57,'multiline':False]['text':'/ Example:','line_number':58,'multiline':False]['text':'/ ```','line_number':59,'multiline':False]['text':'/ SELU model(SELUOptions().inplace(true));','line_number':60,'multiline':False]['text':'/ ```','line_number':61,'multiline':False]['text':'/ Pretty prints the `SELU` module into the given `stream`.','line_number':70,'multiline':False]['text':'/ The options with which this `Module` was constructed.','line_number':73,'multiline':False]['text':'/ A `ModuleHolder` subclass for `SELUImpl`.','line_number':77,'multiline':False]['text':'/ See the documentation for `SELUImpl` class to learn what methods it','line_number':78,'multiline':False]['text':'/ provides, and examples of how to use `SELU` with `torch::nn::SELUOptions`.','line_number':79,'multiline':False]['text':'/ See the documentation for `ModuleHolder` to learn about PyTorch's','line_number':80,'multiline':False]['text':'/ module storage semantics.','line_number':81,'multiline':False]['text':' ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Hardshrink ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~','line_number':84,'multiline':False]['text':'/ Applies the hard shrinkage function element-wise.','line_number':86,'multiline':False]['text':'/ See https://pytorch.org/docs/master/nn.html#torch.nn.Hardshrink to learn','line_number':87,'multiline':False]['text':'/ about the exact behavior of this module.','line_number':88,'multiline':False]['text':'/','line_number':89,'multiline':False]['text':'/ See the documentation for `torch::nn::HardshrinkOptions` class to learn what','line_number':90,'multiline':False]['text':'/ constructor arguments are supported for this module.','line_number':91,'multiline':False]['text':'/','line_number':92,'multiline':False]['text':'/ Example:','line_number':93,'multiline':False]['text':'/ ```','line_number':94,'multiline':False]['text':'/ Hardshrink model(HardshrinkOptions().lambda(42.42));','line_number':95,'multiline':False]['text':'/ ```','line_number':96,'multiline':False]['text':'/ Pretty prints the `Hardshrink` module into the given `stream`.','line_number':105,'multiline':False]['text':'/ The options with which this `Module` was constructed.','line_number':108,'multiline':False]['text':'/ A `ModuleHolder` subclass for `HardshrinkImpl`.','line_number':112,'multiline':False]['text':'/ See the documentation for `HardshrinkImpl` class to learn what methods it','line_number':113,'multiline':False]['text':'/ provides, and examples of how to use `Hardshrink` with','line_number':114,'multiline':False]['text':'/ `torch::nn::HardshrinkOptions`. See the documentation for `ModuleHolder` to','line_number':115,'multiline':False]['text':'/ learn about PyTorch's module storage semantics.','line_number':116,'multiline':False]['text':' ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Hardtanh ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~','line_number':119,'multiline':False]['text':'/ Applies the HardTanh function element-wise.','line_number':121,'multiline':False]['text':'/ See https://pytorch.org/docs/master/nn.html#torch.nn.Hardtanh to learn','line_number':122,'multiline':False]['text':'/ about the exact behavior of this module.','line_number':123,'multiline':False]['text':'/','line_number':124,'multiline':False]['text':'/ See the documentation for `torch::nn::HardtanhOptions` class to learn what','line_number':125,'multiline':False]['text':'/ constructor arguments are supported for this module.','line_number':126,'multiline':False]['text':'/','line_number':127,'multiline':False]['text':'/ Example:','line_number':128,'multiline':False]['text':'/ ```','line_number':129,'multiline':False]['text':'/ Hardtanh','line_number':130,'multiline':False]['text':'/ model(HardtanhOptions().min_val(-42.42).max_val(0.42).inplace(true));','line_number':131,'multiline':False]['text':'/ ```','line_number':132,'multiline':False]['text':'/ Pretty prints the `Hardtanh` module into the given `stream`.','line_number':141,'multiline':False]['text':'/ The options with which this `Module` was constructed.','line_number':144,'multiline':False]['text':'/ A `ModuleHolder` subclass for `HardtanhImpl`.','line_number':148,'multiline':False]['text':'/ See the documentation for `HardtanhImpl` class to learn what methods it','line_number':149,'multiline':False]['text':'/ provides, and examples of how to use `Hardtanh` with','line_number':150,'multiline':False]['text':'/ `torch::nn::HardtanhOptions`. See the documentation for `ModuleHolder` to','line_number':151,'multiline':False]['text':'/ learn about PyTorch's module storage semantics.','line_number':152,'multiline':False]['text':' ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ LeakyReLU ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~','line_number':155,'multiline':False]['text':'/ Applies the LeakyReLU function element-wise.','line_number':157,'multiline':False]['text':'/ See https://pytorch.org/docs/master/nn.html#torch.nn.LeakyReLU to learn','line_number':158,'multiline':False]['text':'/ about the exact behavior of this module.','line_number':159,'multiline':False]['text':'/','line_number':160,'multiline':False]['text':'/ See the documentation for `torch::nn::LeakyReLUOptions` class to learn what','line_number':161,'multiline':False]['text':'/ constructor arguments are supported for this module.','line_number':162,'multiline':False]['text':'/','line_number':163,'multiline':False]['text':'/ Example:','line_number':164,'multiline':False]['text':'/ ```','line_number':165,'multiline':False]['text':'/ LeakyReLU model(LeakyReLUOptions().negative_slope(0.42).inplace(true));','line_number':166,'multiline':False]['text':'/ ```','line_number':167,'multiline':False]['text':'/ Pretty prints the `LeakyReLU` module into the given `stream`.','line_number':176,'multiline':False]['text':'/ The options with which this `Module` was constructed.','line_number':179,'multiline':False]['text':'/ A `ModuleHolder` subclass for `LeakyReLUImpl`.','line_number':183,'multiline':False]['text':'/ See the documentation for `LeakyReLUImpl` class to learn what methods it','line_number':184,'multiline':False]['text':'/ provides, and examples of how to use `LeakyReLU` with','line_number':185,'multiline':False]['text':'/ `torch::nn::LeakyReLUOptions`. See the documentation for `ModuleHolder` to','line_number':186,'multiline':False]['text':'/ learn about PyTorch's module storage semantics.','line_number':187,'multiline':False]['text':' ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ LogSigmoid ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~','line_number':190,'multiline':False]['text':'/ Applies the LogSigmoid function element-wise.','line_number':192,'multiline':False]['text':'/ See https://pytorch.org/docs/master/nn.html#torch.nn.LogSigmoid to learn','line_number':193,'multiline':False]['text':'/ about the exact behavior of this module.','line_number':194,'multiline':False]['text':'/ Pretty prints the `LogSigmoid` module into the given `stream`.','line_number':201,'multiline':False]['text':'/ A `ModuleHolder` subclass for `LogSigmoidImpl`.','line_number':205,'multiline':False]['text':'/ See the documentation for `LogSigmoidImpl` class to learn what methods it','line_number':206,'multiline':False]['text':'/ provides, or the documentation for `ModuleHolder` to learn about PyTorch's','line_number':207,'multiline':False]['text':'/ module storage semantics.','line_number':208,'multiline':False]['text':' ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Softmax ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~','line_number':211,'multiline':False]['text':'/ Applies the Softmax function.','line_number':213,'multiline':False]['text':'/ See https://pytorch.org/docs/master/nn.html#torch.nn.Softmax to learn','line_number':214,'multiline':False]['text':'/ about the exact behavior of this module.','line_number':215,'multiline':False]['text':'/','line_number':216,'multiline':False]['text':'/ See the documentation for `torch::nn::SoftmaxOptions` class to learn what','line_number':217,'multiline':False]['text':'/ constructor arguments are supported for this module.','line_number':218,'multiline':False]['text':'/','line_number':219,'multiline':False]['text':'/ Example:','line_number':220,'multiline':False]['text':'/ ```','line_number':221,'multiline':False]['text':'/ Softmax model(SoftmaxOptions(1));','line_number':222,'multiline':False]['text':'/ ```','line_number':223,'multiline':False]['text':'/ Pretty prints the `Softmax` module into the given `stream`.','line_number':233,'multiline':False]['text':'/ A `ModuleHolder` subclass for `SoftmaxImpl`.','line_number':239,'multiline':False]['text':'/ See the documentation for `SoftmaxImpl` class to learn what methods it','line_number':240,'multiline':False]['text':'/ provides, and examples of how to use `Softmax` with','line_number':241,'multiline':False]['text':'/ `torch::nn::SoftmaxOptions`. See the documentation for `ModuleHolder` to','line_number':242,'multiline':False]['text':'/ learn about PyTorch's module storage semantics.','line_number':243,'multiline':False]['text':' ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Softmin ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~','line_number':246,'multiline':False]['text':'/ Applies the Softmin function element-wise.','line_number':248,'multiline':False]['text':'/ See https://pytorch.org/docs/master/nn.html#torch.nn.Softmin to learn','line_number':249,'multiline':False]['text':'/ about the exact behavior of this module.','line_number':250,'multiline':False]['text':'/','line_number':251,'multiline':False]['text':'/ See the documentation for `torch::nn::SoftminOptions` class to learn what','line_number':252,'multiline':False]['text':'/ constructor arguments are supported for this module.','line_number':253,'multiline':False]['text':'/','line_number':254,'multiline':False]['text':'/ Example:','line_number':255,'multiline':False]['text':'/ ```','line_number':256,'multiline':False]['text':'/ Softmin model(SoftminOptions(1));','line_number':257,'multiline':False]['text':'/ ```','line_number':258,'multiline':False]['text':'/ Pretty prints the `Softmin` module into the given `stream`.','line_number':268,'multiline':False]['text':'/ A `ModuleHolder` subclass for `SoftminImpl`.','line_number':274,'multiline':False]['text':'/ See the documentation for `SoftminImpl` class to learn what methods it','line_number':275,'multiline':False]['text':'/ provides, and examples of how to use `Softmin` with','line_number':276,'multiline':False]['text':'/ `torch::nn::SoftminOptions`. See the documentation for `ModuleHolder` to','line_number':277,'multiline':False]['text':'/ learn about PyTorch's module storage semantics.','line_number':278,'multiline':False]['text':' ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ LogSoftmax ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~','line_number':281,'multiline':False]['text':'/ Applies the LogSoftmax function element-wise.','line_number':283,'multiline':False]['text':'/ See https://pytorch.org/docs/master/nn.html#torch.nn.LogSoftmax to learn','line_number':284,'multiline':False]['text':'/ about the exact behavior of this module.','line_number':285,'multiline':False]['text':'/','line_number':286,'multiline':False]['text':'/ See the documentation for `torch::nn::LogSoftmaxOptions` class to learn what','line_number':287,'multiline':False]['text':'/ constructor arguments are supported for this module.','line_number':288,'multiline':False]['text':'/','line_number':289,'multiline':False]['text':'/ Example:','line_number':290,'multiline':False]['text':'/ ```','line_number':291,'multiline':False]['text':'/ LogSoftmax model(LogSoftmaxOptions(1));','line_number':292,'multiline':False]['text':'/ ```','line_number':293,'multiline':False]['text':'/ Pretty prints the `LogSoftmax` module into the given `stream`.','line_number':304,'multiline':False]['text':'/ A `ModuleHolder` subclass for `LogSoftmaxImpl`.','line_number':310,'multiline':False]['text':'/ See the documentation for `LogSoftmaxImpl` class to learn what methods it','line_number':311,'multiline':False]['text':'/ provides, and examples of how to use `LogSoftmax` with','line_number':312,'multiline':False]['text':'/ `torch::nn::LogSoftmaxOptions`. See the documentation for `ModuleHolder` to','line_number':313,'multiline':False]['text':'/ learn about PyTorch's module storage semantics.','line_number':314,'multiline':False]['text':' ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Softmax2d ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~','line_number':317,'multiline':False]['text':'/ Applies the Softmax2d function element-wise.','line_number':319,'multiline':False]['text':'/ See https://pytorch.org/docs/master/nn.html#torch.nn.Softmax2d to learn','line_number':320,'multiline':False]['text':'/ about the exact behavior of this module.','line_number':321,'multiline':False]['text':'/ Pretty prints the `Softmax2d` module into the given `stream`.','line_number':328,'multiline':False]['text':'/ A `ModuleHolder` subclass for `Softmax2dImpl`.','line_number':332,'multiline':False]['text':'/ See the documentation for `Softmax2dImpl` class to learn what methods it','line_number':333,'multiline':False]['text':'/ provides, or the documentation for `ModuleHolder` to learn about PyTorch's','line_number':334,'multiline':False]['text':'/ module storage semantics.','line_number':335,'multiline':False]['text':' ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ PReLU ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~','line_number':338,'multiline':False]['text':'/ Applies the PReLU function element-wise.','line_number':340,'multiline':False]['text':'/ See https://pytorch.org/docs/master/nn.html#torch.nn.PReLU to learn','line_number':341,'multiline':False]['text':'/ about the exact behavior of this module.','line_number':342,'multiline':False]['text':'/','line_number':343,'multiline':False]['text':'/ See the documentation for `torch::nn::PReLUOptions` class to learn what','line_number':344,'multiline':False]['text':'/ constructor arguments are supported for this module.','line_number':345,'multiline':False]['text':'/','line_number':346,'multiline':False]['text':'/ Example:','line_number':347,'multiline':False]['text':'/ ```','line_number':348,'multiline':False]['text':'/ PReLU model(PReLUOptions().num_parameters(42));','line_number':349,'multiline':False]['text':'/ ```','line_number':350,'multiline':False]['text':'/ Pretty prints the `PReLU` module into the given `stream`.','line_number':359,'multiline':False]['text':'/ The options with which this `Module` was constructed.','line_number':362,'multiline':False]['text':'/ The learned weight.','line_number':365,'multiline':False]['text':'/ A `ModuleHolder` subclass for `PReLUImpl`.','line_number':369,'multiline':False]['text':'/ See the documentation for `PReLUImpl` class to learn what methods it','line_number':370,'multiline':False]['text':'/ provides, and examples of how to use `PReLU` with `torch::nn::PReLUOptions`.','line_number':371,'multiline':False]['text':'/ See the documentation for `ModuleHolder` to learn about PyTorch's','line_number':372,'multiline':False]['text':'/ module storage semantics.','line_number':373,'multiline':False]['text':' ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ReLU ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~','line_number':376,'multiline':False]['text':'/ Applies the ReLU function element-wise.','line_number':378,'multiline':False]['text':'/ See https://pytorch.org/docs/master/nn.html#torch.nn.ReLU to learn','line_number':379,'multiline':False]['text':'/ about the exact behavior of this module.','line_number':380,'multiline':False]['text':'/','line_number':381,'multiline':False]['text':'/ See the documentation for `torch::nn::ReLUOptions` class to learn what','line_number':382,'multiline':False]['text':'/ constructor arguments are supported for this module.','line_number':383,'multiline':False]['text':'/','line_number':384,'multiline':False]['text':'/ Example:','line_number':385,'multiline':False]['text':'/ ```','line_number':386,'multiline':False]['text':'/ ReLU model(ReLUOptions().inplace(true));','line_number':387,'multiline':False]['text':'/ ```','line_number':388,'multiline':False]['text':'/ Pretty prints the `ReLU` module into the given `stream`.','line_number':397,'multiline':False]['text':'/ The options with which this `Module` was constructed.','line_number':400,'multiline':False]['text':'/ A `ModuleHolder` subclass for `ReLUImpl`.','line_number':404,'multiline':False]['text':'/ See the documentation for `ReLUImpl` class to learn what methods it','line_number':405,'multiline':False]['text':'/ provides, and examples of how to use `ReLU` with `torch::nn::ReLUOptions`.','line_number':406,'multiline':False]['text':'/ See the documentation for `ModuleHolder` to learn about PyTorch's','line_number':407,'multiline':False]['text':'/ module storage semantics.','line_number':408,'multiline':False]['text':' ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ReLU6 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~','line_number':411,'multiline':False]['text':'/ Applies the ReLU6 function element-wise.','line_number':413,'multiline':False]['text':'/ See https://pytorch.org/docs/master/nn.html#torch.nn.ReLU6 to learn','line_number':414,'multiline':False]['text':'/ about the exact behavior of this module.','line_number':415,'multiline':False]['text':'/','line_number':416,'multiline':False]['text':'/ See the documentation for `torch::nn::ReLU6Options` class to learn what','line_number':417,'multiline':False]['text':'/ constructor arguments are supported for this module.','line_number':418,'multiline':False]['text':'/','line_number':419,'multiline':False]['text':'/ Example:','line_number':420,'multiline':False]['text':'/ ```','line_number':421,'multiline':False]['text':'/ ReLU6 model(ReLU6Options().inplace(true));','line_number':422,'multiline':False]['text':'/ ```','line_number':423,'multiline':False]['text':'/ Pretty prints the `ReLU6` module into the given `stream`.','line_number':432,'multiline':False]['text':'/ The options with which this `Module` was constructed.','line_number':435,'multiline':False]['text':'/ A `ModuleHolder` subclass for `ReLU6Impl`.','line_number':439,'multiline':False]['text':'/ See the documentation for `ReLU6Impl` class to learn what methods it','line_number':440,'multiline':False]['text':'/ provides, and examples of how to use `ReLU6` with `torch::nn::ReLU6Options`.','line_number':441,'multiline':False]['text':'/ See the documentation for `ModuleHolder` to learn about PyTorch's','line_number':442,'multiline':False]['text':'/ module storage semantics.','line_number':443,'multiline':False]['text':' ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ RReLU ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~','line_number':446,'multiline':False]['text':'/ Applies the RReLU function element-wise.','line_number':448,'multiline':False]['text':'/ See https://pytorch.org/docs/master/nn.html#torch.nn.RReLU to learn','line_number':449,'multiline':False]['text':'/ about the exact behavior of this module.','line_number':450,'multiline':False]['text':'/','line_number':451,'multiline':False]['text':'/ See the documentation for `torch::nn::RReLUOptions` class to learn what','line_number':452,'multiline':False]['text':'/ constructor arguments are supported for this module.','line_number':453,'multiline':False]['text':'/','line_number':454,'multiline':False]['text':'/ Example:','line_number':455,'multiline':False]['text':'/ ```','line_number':456,'multiline':False]['text':'/ RReLU model(RReLUOptions().lower(0.24).upper(0.42).inplace(true));','line_number':457,'multiline':False]['text':'/ ```','line_number':458,'multiline':False]['text':'/ Pretty prints the `RReLU` module into the given `stream`.','line_number':467,'multiline':False]['text':'/ The options with which this `Module` was constructed.','line_number':470,'multiline':False]['text':'/ A `ModuleHolder` subclass for `RReLUImpl`.','line_number':474,'multiline':False]['text':'/ See the documentation for `RReLUImpl` class to learn what methods it','line_number':475,'multiline':False]['text':'/ provides, and examples of how to use `RReLU` with `torch::nn::RReLUOptions`.','line_number':476,'multiline':False]['text':'/ See the documentation for `ModuleHolder` to learn about PyTorch's','line_number':477,'multiline':False]['text':'/ module storage semantics.','line_number':478,'multiline':False]['text':' ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ CELU ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~','line_number':481,'multiline':False]['text':'/ Applies celu over a given input.','line_number':483,'multiline':False]['text':'/ See https://pytorch.org/docs/master/nn.html#torch.nn.CELU to learn','line_number':484,'multiline':False]['text':'/ about the exact behavior of this module.','line_number':485,'multiline':False]['text':'/','line_number':486,'multiline':False]['text':'/ See the documentation for `torch::nn::CELUOptions` class to learn what','line_number':487,'multiline':False]['text':'/ constructor arguments are supported for this module.','line_number':488,'multiline':False]['text':'/','line_number':489,'multiline':False]['text':'/ Example:','line_number':490,'multiline':False]['text':'/ ```','line_number':491,'multiline':False]['text':'/ CELU model(CELUOptions().alpha(42.42).inplace(true));','line_number':492,'multiline':False]['text':'/ ```','line_number':493,'multiline':False]['text':'/ Pretty prints the `CELU` module into the given `stream`.','line_number':502,'multiline':False]['text':'/ The options with which this `Module` was constructed.','line_number':505,'multiline':False]['text':'/ A `ModuleHolder` subclass for `CELUImpl`.','line_number':509,'multiline':False]['text':'/ See the documentation for `CELUImpl` class to learn what methods it','line_number':510,'multiline':False]['text':'/ provides, and examples of how to use `CELU` with `torch::nn::CELUOptions`.','line_number':511,'multiline':False]['text':'/ See the documentation for `ModuleHolder` to learn about PyTorch's','line_number':512,'multiline':False]['text':'/ module storage semantics.','line_number':513,'multiline':False]['text':' ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ GLU ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~','line_number':516,'multiline':False]['text':'/ Applies glu over a given input.','line_number':518,'multiline':False]['text':'/ See https://pytorch.org/docs/master/nn.html#torch.nn.GLU to learn','line_number':519,'multiline':False]['text':'/ about the exact behavior of this module.','line_number':520,'multiline':False]['text':'/','line_number':521,'multiline':False]['text':'/ See the documentation for `torch::nn::GLUOptions` class to learn what','line_number':522,'multiline':False]['text':'/ constructor arguments are supported for this module.','line_number':523,'multiline':False]['text':'/','line_number':524,'multiline':False]['text':'/ Example:','line_number':525,'multiline':False]['text':'/ ```','line_number':526,'multiline':False]['text':'/ GLU model(GLUOptions(1));','line_number':527,'multiline':False]['text':'/ ```','line_number':528,'multiline':False]['text':'/ Pretty prints the `GLU` module into the given `stream`.','line_number':537,'multiline':False]['text':'/ The options with which this `Module` was constructed.','line_number':540,'multiline':False]['text':'/ A `ModuleHolder` subclass for `GLUImpl`.','line_number':544,'multiline':False]['text':'/ See the documentation for `GLUImpl` class to learn what methods it','line_number':545,'multiline':False]['text':'/ provides, and examples of how to use `GLU` with `torch::nn::GLUOptions`.','line_number':546,'multiline':False]['text':'/ See the documentation for `ModuleHolder` to learn about PyTorch's','line_number':547,'multiline':False]['text':'/ module storage semantics.','line_number':548,'multiline':False]['text':' ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ GELU ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~','line_number':551,'multiline':False]['text':'/ Applies gelu over a given input.','line_number':553,'multiline':False]['text':'/ See https://pytorch.org/docs/master/nn.html#torch.nn.GELU to learn','line_number':554,'multiline':False]['text':'/ about the exact behavior of this module.','line_number':555,'multiline':False]['text':'/ Pretty prints the `GELU` module into the given `stream`.','line_number':564,'multiline':False]['text':'/ The options with which this `Module` was constructed.','line_number':567,'multiline':False]['text':'/ A `ModuleHolder` subclass for `GELUImpl`.','line_number':571,'multiline':False]['text':'/ See the documentation for `GELUImpl` class to learn what methods it','line_number':572,'multiline':False]['text':'/ provides, or the documentation for `ModuleHolder` to learn about PyTorch's','line_number':573,'multiline':False]['text':'/ module storage semantics.','line_number':574,'multiline':False]['text':' ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ SiLU ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~','line_number':577,'multiline':False]['text':'/ Applies silu over a given input.','line_number':579,'multiline':False]['text':'/ See https://pytorch.org/docs/master/nn.html#torch.nn.SiLU to learn','line_number':580,'multiline':False]['text':'/ about the exact behavior of this module.','line_number':581,'multiline':False]['text':'/ Pretty prints the `SiLU` module into the given `stream`.','line_number':588,'multiline':False]['text':'/ A `ModuleHolder` subclass for `SiLUImpl`.','line_number':592,'multiline':False]['text':'/ See the documentation for `SiLUImpl` class to learn what methods it','line_number':593,'multiline':False]['text':'/ provides, or the documentation for `ModuleHolder` to learn about PyTorch's','line_number':594,'multiline':False]['text':'/ module storage semantics.','line_number':595,'multiline':False]['text':' ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Mish ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~','line_number':598,'multiline':False]['text':'/ Applies mish over a given input.','line_number':600,'multiline':False]['text':'/ See https://pytorch.org/docs/master/nn.html#torch.nn.Mish to learn','line_number':601,'multiline':False]['text':'/ about the exact behavior of this module.','line_number':602,'multiline':False]['text':'/ Pretty prints the `Mish` module into the given `stream`.','line_number':609,'multiline':False]['text':'/ A `ModuleHolder` subclass for `MishImpl`.','line_number':613,'multiline':False]['text':'/ See the documentation for `MishImpl` class to learn what methods it','line_number':614,'multiline':False]['text':'/ provides, or the documentation for `ModuleHolder` to learn about PyTorch's','line_number':615,'multiline':False]['text':'/ module storage semantics.','line_number':616,'multiline':False]['text':' ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Sigmoid ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~','line_number':619,'multiline':False]['text':'/ Applies sigmoid over a given input.','line_number':621,'multiline':False]['text':'/ See https://pytorch.org/docs/master/nn.html#torch.nn.Sigmoid to learn','line_number':622,'multiline':False]['text':'/ about the exact behavior of this module.','line_number':623,'multiline':False]['text':'/ Pretty prints the `Sigmoid` module into the given `stream`.','line_number':630,'multiline':False]['text':'/ A `ModuleHolder` subclass for `SigmoidImpl`.','line_number':634,'multiline':False]['text':'/ See the documentation for `SigmoidImpl` class to learn what methods it','line_number':635,'multiline':False]['text':'/ provides, or the documentation for `ModuleHolder` to learn about PyTorch's','line_number':636,'multiline':False]['text':'/ module storage semantics.','line_number':637,'multiline':False]['text':' ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Softplus ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~','line_number':640,'multiline':False]['text':'/ Applies softplus over a given input.','line_number':642,'multiline':False]['text':'/ See https://pytorch.org/docs/master/nn.html#torch.nn.Softplus to learn','line_number':643,'multiline':False]['text':'/ about the exact behavior of this module.','line_number':644,'multiline':False]['text':'/','line_number':645,'multiline':False]['text':'/ See the documentation for `torch::nn::SoftplusOptions` class to learn what','line_number':646,'multiline':False]['text':'/ constructor arguments are supported for this module.','line_number':647,'multiline':False]['text':'/','line_number':648,'multiline':False]['text':'/ Example:','line_number':649,'multiline':False]['text':'/ ```','line_number':650,'multiline':False]['text':'/ Softplus model(SoftplusOptions().beta(0.24).threshold(42.42));','line_number':651,'multiline':False]['text':'/ ```','line_number':652,'multiline':False]['text':'/ Pretty prints the `Softplus` module into the given `stream`.','line_number':661,'multiline':False]['text':'/ The options with which this `Module` was constructed.','line_number':664,'multiline':False]['text':'/ A `ModuleHolder` subclass for `SoftplusImpl`.','line_number':668,'multiline':False]['text':'/ See the documentation for `SoftplusImpl` class to learn what methods it','line_number':669,'multiline':False]['text':'/ provides, and examples of how to use `Softplus` with','line_number':670,'multiline':False]['text':'/ `torch::nn::SoftplusOptions`. See the documentation for `ModuleHolder` to','line_number':671,'multiline':False]['text':'/ learn about PyTorch's module storage semantics.','line_number':672,'multiline':False]['text':' ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Softshrink ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~','line_number':675,'multiline':False]['text':'/ Applies the soft shrinkage function element-wise.','line_number':677,'multiline':False]['text':'/ See https://pytorch.org/docs/master/nn.html#torch.nn.Softshrink to learn','line_number':678,'multiline':False]['text':'/ about the exact behavior of this module.','line_number':679,'multiline':False]['text':'/','line_number':680,'multiline':False]['text':'/ See the documentation for `torch::nn::SoftshrinkOptions` class to learn what','line_number':681,'multiline':False]['text':'/ constructor arguments are supported for this module.','line_number':682,'multiline':False]['text':'/','line_number':683,'multiline':False]['text':'/ Example:','line_number':684,'multiline':False]['text':'/ ```','line_number':685,'multiline':False]['text':'/ Softshrink model(SoftshrinkOptions(42.42));','line_number':686,'multiline':False]['text':'/ ```','line_number':687,'multiline':False]['text':'/ Pretty prints the `Softshrink` module into the given `stream`.','line_number':696,'multiline':False]['text':'/ The options with which this `Module` was constructed.','line_number':699,'multiline':False]['text':'/ A `ModuleHolder` subclass for `SoftshrinkImpl`.','line_number':703,'multiline':False]['text':'/ See the documentation for `SoftshrinkImpl` class to learn what methods it','line_number':704,'multiline':False]['text':'/ provides, and examples of how to use `Softshrink` with','line_number':705,'multiline':False]['text':'/ `torch::nn::SoftshrinkOptions`. See the documentation for `ModuleHolder` to','line_number':706,'multiline':False]['text':'/ learn about PyTorch's module storage semantics.','line_number':707,'multiline':False]['text':' ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Softsign ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~','line_number':710,'multiline':False]['text':'/ Applies Softsign over a given input.','line_number':712,'multiline':False]['text':'/ See https://pytorch.org/docs/master/nn.html#torch.nn.Softsign to learn','line_number':713,'multiline':False]['text':'/ about the exact behavior of this module.','line_number':714,'multiline':False]['text':'/ Pretty prints the `Softsign` module into the given `stream`.','line_number':721,'multiline':False]['text':'/ A `ModuleHolder` subclass for `SoftsignImpl`.','line_number':725,'multiline':False]['text':'/ See the documentation for `SoftsignImpl` class to learn what methods it','line_number':726,'multiline':False]['text':'/ provides, or the documentation for `ModuleHolder` to learn about PyTorch's','line_number':727,'multiline':False]['text':'/ module storage semantics.','line_number':728,'multiline':False]['text':' ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Tanh ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~','line_number':731,'multiline':False]['text':'/ Applies Tanh over a given input.','line_number':733,'multiline':False]['text':'/ See https://pytorch.org/docs/master/nn.html#torch.nn.Tanh to learn','line_number':734,'multiline':False]['text':'/ about the exact behavior of this module.','line_number':735,'multiline':False]['text':'/ Pretty prints the `Tanh` module into the given `stream`.','line_number':742,'multiline':False]['text':'/ A `ModuleHolder` subclass for `TanhImpl`.','line_number':746,'multiline':False]['text':'/ See the documentation for `TanhImpl` class to learn what methods it','line_number':747,'multiline':False]['text':'/ provides, or the documentation for `ModuleHolder` to learn about PyTorch's','line_number':748,'multiline':False]['text':'/ module storage semantics.','line_number':749,'multiline':False]['text':' ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Tanhshrink ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~','line_number':752,'multiline':False]['text':'/ Applies Tanhshrink over a given input.','line_number':754,'multiline':False]['text':'/ See https://pytorch.org/docs/master/nn.html#torch.nn.Tanhshrink to learn','line_number':755,'multiline':False]['text':'/ about the exact behavior of this module.','line_number':756,'multiline':False]['text':'/ Pretty prints the `Tanhshrink` module into the given `stream`.','line_number':763,'multiline':False]['text':'/ A `ModuleHolder` subclass for `TanhshrinkImpl`.','line_number':767,'multiline':False]['text':'/ See the documentation for `TanhshrinkImpl` class to learn what methods it','line_number':768,'multiline':False]['text':'/ provides, or the documentation for `ModuleHolder` to learn about PyTorch's','line_number':769,'multiline':False]['text':'/ module storage semantics.','line_number':770,'multiline':False]['text':' ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Threshold ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~','line_number':773,'multiline':False]['text':'/ Applies the Threshold function element-wise.','line_number':775,'multiline':False]['text':'/ See https://pytorch.org/docs/master/nn.html#torch.nn.Threshold to learn','line_number':776,'multiline':False]['text':'/ about the exact behavior of this module.','line_number':777,'multiline':False]['text':'/','line_number':778,'multiline':False]['text':'/ See the documentation for `torch::nn::ThresholdOptions` class to learn what','line_number':779,'multiline':False]['text':'/ constructor arguments are supported for this module.','line_number':780,'multiline':False]['text':'/','line_number':781,'multiline':False]['text':'/ Example:','line_number':782,'multiline':False]['text':'/ ```','line_number':783,'multiline':False]['text':'/ Threshold model(ThresholdOptions(42.42, 24.24).inplace(true));','line_number':784,'multiline':False]['text':'/ ```','line_number':785,'multiline':False]['text':'/ Pretty prints the `Threshold` module into the given `stream`.','line_number':796,'multiline':False]['text':'/ The options with which this `Module` was constructed.','line_number':799,'multiline':False]['text':'/ A `ModuleHolder` subclass for `ThresholdImpl`.','line_number':803,'multiline':False]['text':'/ See the documentation for `ThresholdImpl` class to learn what methods it','line_number':804,'multiline':False]['text':'/ provides, and examples of how to use `Threshold` with','line_number':805,'multiline':False]['text':'/ `torch::nn::ThresholdOptions`. See the documentation for `ModuleHolder` to','line_number':806,'multiline':False]['text':'/ learn about PyTorch's module storage semantics.','line_number':807,'multiline':False]['text':' ~~~~~~~~~~~~~~~~~~~~~~~~~~~~ MultiheadAttention ~~~~~~~~~~~~~~~~~~~~~~~~~~~~','line_number':810,'multiline':False]['text':'/ Applies the MultiheadAttention function element-wise.','line_number':812,'multiline':False]['text':'/ See https://pytorch.org/docs/master/nn.html#torch.nn.MultiheadAttention','line_number':813,'multiline':False]['text':'/ to learn about the exact behavior of this module.','line_number':814,'multiline':False]['text':'/','line_number':815,'multiline':False]['text':'/ See the documentation for `torch::nn::MultiheadAttentionOptions` class to','line_number':816,'multiline':False]['text':'/ learn what constructor arguments are supported for this module.','line_number':817,'multiline':False]['text':'/','line_number':818,'multiline':False]['text':'/ Example:','line_number':819,'multiline':False]['text':'/ ```','line_number':820,'multiline':False]['text':'/ MultiheadAttention model(MultiheadAttentionOptions(20, 10).bias(false));','line_number':821,'multiline':False]['text':'/ ```','line_number':822,'multiline':False]['text':'/ The options with which this `Module` was constructed.','line_number':852,'multiline':False]['text':'/ A `ModuleHolder` subclass for `MultiheadAttentionImpl`.','line_number':867,'multiline':False]['text':'/ See the documentation for `MultiheadAttentionImpl` class to learn what','line_number':868,'multiline':False]['text':'/ methods it provides, and examples of how to use `MultiheadAttention` with','line_number':869,'multiline':False]['text':'/ `torch::nn::MultiheadAttentionOptions`. See the documentation for','line_number':870,'multiline':False]['text':'/ `ModuleHolder` to learn about PyTorch's module storage semantics.','line_number':871,'multiline':False]['text':' namespace nn','line_number':874,'multiline':False]['text':' namespace torch','line_number':875,'multiline':False]