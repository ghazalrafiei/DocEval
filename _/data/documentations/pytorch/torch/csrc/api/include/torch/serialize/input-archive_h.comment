['text':' namespace at','line_number':16,'multiline':False]['text':' namespace jit','line_number':22,'multiline':False]['text':' namespace torch','line_number':23,'multiline':False]['text':'/ A recursive representation of tensors that can be deserialized from a file','line_number':28,'multiline':False]['text':'/ or stream. In most cases, users should not have to interact with this class,','line_number':29,'multiline':False]['text':'/ and should instead use `torch::load`.','line_number':30,'multiline':False]['text':'/ Default-constructs the `InputArchive`.','line_number':33,'multiline':False]['text':' Move is allowed.','line_number':36,'multiline':False]['text':' Copy is disallowed.','line_number':40,'multiline':False]['text':'/ Reads an `IValue` associated with a given `key`.','line_number':46,'multiline':False]['text':'/ Reads an `IValue` associated with a given `key`. If there is no `IValue`','line_number':49,'multiline':False]['text':'/ associated with the `key`, this returns false, otherwise it returns true.','line_number':50,'multiline':False]['text':'/ Reads a `tensor` associated with a given `key`. If there is no `tensor`','line_number':53,'multiline':False]['text':'/ associated with the `key`, this returns false, otherwise it returns true.','line_number':54,'multiline':False]['text':'/ If the tensor is expected to be a buffer (not differentiable), `is_buffer`','line_number':55,'multiline':False]['text':'/ must be `true`.','line_number':56,'multiline':False]['text':'/ Reads a `tensor` associated with a given `key`.','line_number':59,'multiline':False]['text':'/ If the tensor is expected to be a buffer (not differentiable), `is_buffer`','line_number':60,'multiline':False]['text':'/ must be `true`.','line_number':61,'multiline':False]['text':'/ Reads a `InputArchive` associated with a given `key`. If there is no','line_number':64,'multiline':False]['text':'/ `InputArchive` associated with the `key`, this returns false, otherwise','line_number':65,'multiline':False]['text':'/ it returns true.','line_number':66,'multiline':False]['text':'/ Reads an `InputArchive` associated with a given `key`.','line_number':69,'multiline':False]['text':'/ The archive can thereafter be used for further deserialization of the','line_number':70,'multiline':False]['text':'/ nested data.','line_number':71,'multiline':False]['text':'/ Loads the `InputArchive` from a serialized representation stored in the','line_number':74,'multiline':False]['text':'/ file at `filename`. Storage are remapped using device option. If device','line_number':75,'multiline':False]['text':'/ is not specified, the module is loaded to the original device.','line_number':76,'multiline':False]['text':'/ Loads the `InputArchive` from a serialized representation stored in the','line_number':81,'multiline':False]['text':'/ given `stream`. Storage are remapped using device option. If device','line_number':82,'multiline':False]['text':'/ is not specified, the module is loaded to the original device.','line_number':83,'multiline':False]['text':' Loads given the specified flat array.','line_number':88,'multiline':False]['text':' Loads given the specified read and size functions.','line_number':94,'multiline':False]['text':' Returns the vector of keys in the input archive.','line_number':101,'multiline':False]['text':'/ Forwards all arguments to `read()`.','line_number':104,'multiline':False]['text':'/ Useful for generic code that can be re-used for both `InputArchive` and','line_number':105,'multiline':False]['text':'/ `OutputArchive` (where `operator()` forwards to `write()`).','line_number':106,'multiline':False]['text':' namespace serialize','line_number':116,'multiline':False]['text':' namespace torch','line_number':117,'multiline':False]