['text':' assume we want to unpack one element tuples for now','line_number':67,'multiline':False]['text':' The fields traversed below are owned by the cpp grad_fn, which we own a','line_number':80,'multiline':False]['text':' reference to. We should only them traverse however if we are the only','line_number':81,'multiline':False]['text':' owner of the grad_fn, otherwise we risk prematurely gc'ing the grad_fn.','line_number':82,'multiline':False]['text':'','line_number':83,'multiline':False]['text':' See: https://github.com/pytorch/pytorch/issues/102174','line_number':84,'multiline':False]['text':' NOTE [retains_grad_hook PyObject traversal]','line_number':91,'multiline':False]['text':' In theory this shouldn't be necessary, because retains_grad_hooks should','line_number':92,'multiline':False]['text':' not contain any PyFunctionTensorPreHooks. The alternative is to have a','line_number':93,'multiline':False]['text':' check that actually guarantees this.','line_number':94,'multiline':False]['text':' Remove the weak ref of the c++ object if it exist','line_number':117,'multiline':False]['text':' namespace','line_number':132,'multiline':False]['text':' NOLINTNEXTLINE(cppcoreguidelines-avoid-c-arrays,cppcoreguidelines-avoid-non-const-global-variables,modernize-avoid-c-arrays)','line_number':215,'multiline':False]['text':' NOLINTNEXTLINE(cppcoreguidelines-avoid-c-arrays,cppcoreguidelines-avoid-non-const-global-variables,modernize-avoid-c-arrays)','line_number':220,'multiline':False]['text':' NOLINTNEXTLINE(misc-redundant-expression)','line_number':230,'multiline':False]['text':' NOLINTNEXTLINE(cppcoreguidelines-init-variables)','line_number':278,'multiline':False]['text':' No INCREF here as we only have a weak reference','line_number':292,'multiline':False]['text':' This is almost a copy of the function above except post -> pre','line_number':353,'multiline':False]['text':' namespace autograd','line_number':377,'multiline':False]['text':' namespace torch','line_number':378,'multiline':False]