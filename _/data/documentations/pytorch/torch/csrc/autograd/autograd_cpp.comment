['text':' NB: This code duplicates existing logic at torch/autograd/__init__.py and','line_number':20,'multiline':False]['text':' torch._C._EngineBase.run_backward in torch/csrc/autograd/python_engine.cpp','line_number':21,'multiline':False]['text':' This is a purely C++ API for Autograd without any dependencies on python','line_number':22,'multiline':False]['text':' it can be exposed in PyTorch C++ API and TorchScript. We will need to','line_number':23,'multiline':False]['text':' maintain the logic equality of this file and the python file together if one','line_number':24,'multiline':False]['text':' changes.','line_number':25,'multiline':False]['text':' TODO: Make the Python API above to just call this C++ API.','line_number':26,'multiline':False]['text':' grad output is defined, just append to the new_grads','line_number':84,'multiline':False]['text':' See NOTE [ Autograd Unreachable Input ] for details','line_number':131,'multiline':False]['text':' check if grad_inputs contains None or not base on the allow_unused flag','line_number':146,'multiline':False]['text':'allow_unused=','line_number':177,'multiline':True]['text':'accumulate_grad=','line_number':178,'multiline':True]['text':'accumulate_grad=','line_number':199,'multiline':True]['text':' namespace forward_ad','line_number':212,'multiline':False]['text':' namespace autograd','line_number':214,'multiline':False]['text':' namespace torch','line_number':215,'multiline':False]