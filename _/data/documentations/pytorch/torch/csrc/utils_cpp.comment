['text':' Avoid poking __index__ early as that will immediately cause a guard','line_number':37,'multiline':False]['text':' NOLINTNEXTLINE(bugprone-branch-clone)','line_number':54,'multiline':False]['text':' NOLINTNEXTLINE(cppcoreguidelines-avoid-c-arrays,modernize-avoid-c-arrays)','line_number':98,'multiline':False]['text':' remove nullptr terminator','line_number':112,'multiline':False]['text':' ~~~ misc debugging utilities ~~~
 *
 * torch::gdb::* functions are NOT meant to be called by general pytorch code,
 * but only from within a gdb session. As such, utils.h does not contain any
 * declaration for those.
 ','line_number':248,'multiline':True]['text':' This is a helper needed by the torch-tensor-repr gdb command.','line_number':255,'multiline':False]['text':' Return an human-readable representation of the given Tensor. The resulting','line_number':256,'multiline':False]['text':' string is stored into a malloc()ed buffer. The caller is responsible to','line_number':257,'multiline':False]['text':' free() it. We use malloc() instead of new[] because it's much easier to','line_number':258,'multiline':False]['text':' call free than delete[] from withing gdb.','line_number':259,'multiline':False]['text':' Currently the code for computing the repr of a tensor is written in Python,','line_number':260,'multiline':False]['text':' so we need to wrap the Tensor into a Python object first.','line_number':261,'multiline':False]['text':' NOLINTNEXTLINE(cppcoreguidelines-avoid-goto,hicpp-avoid-goto)','line_number':272,'multiline':False]['text':' NOLINTNEXTLINE(cppcoreguidelines-avoid-goto,hicpp-avoid-goto)','line_number':276,'multiline':False]['text':' NOLINTNEXTLINE(cppcoreguidelines-avoid-goto,hicpp-avoid-goto)','line_number':280,'multiline':False]['text':' account for the trailing \0','line_number':282,'multiline':False]['text':' NOLINTNEXTLINE(cppcoreguidelines-no-malloc)','line_number':283,'multiline':False]['text':' NOLINTNEXTLINE(cppcoreguidelines-avoid-goto,hicpp-avoid-goto)','line_number':287,'multiline':False]['text':' NOLINTNEXTLINE(cppcoreguidelines-no-malloc)','line_number':303,'multiline':False]['text':' namespace torch::gdb','line_number':321,'multiline':False]['text':' policy ','line_number':336,'multiline':True]['text':' parent ','line_number':337,'multiline':True]['text':' NOLINTNEXTLINE(bugprone-branch-clone)','line_number':345,'multiline':False]['text':' use THPUtils_unpackLong after it is safe to include','line_number':355,'multiline':False]['text':' python_numbers.h','line_number':356,'multiline':False]['text':' policy ','line_number':369,'multiline':True]['text':' parent ','line_number':370,'multiline':True]['text':' NOLINTNEXTLINE(bugprone-branch-clone)','line_number':379,'multiline':False]['text':' TODO: this is for consistency with IntArrayRef but arguably','line_number':388,'multiline':False]['text':' we shouldn't really allow this on pybind11 casters','line_number':389,'multiline':False]['text':' policy ','line_number':406,'multiline':True]['text':' parent ','line_number':407,'multiline':True]['text':' policy ','line_number':420,'multiline':True]['text':' parent ','line_number':421,'multiline':True]['text':' TODO: this is terrible but I don't know how to override when','line_number':424,'multiline':False]['text':' the SymNode is also explicitly cast by py::cast','line_number':425,'multiline':False]['text':' Return the Python directly (unwrap)','line_number':428,'multiline':False]['text':' namespace pybind11::detail','line_number':437,'multiline':False]