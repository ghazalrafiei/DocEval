['text':'ignore_hermetic_tls=','line_number':45,'multiline':True]['text':' Wraps the c10::Storage with a storage PyObject','line_number':89,'multiline':False]['text':' If the StorageImpl has a PyObject that is managed by a different','line_number':100,'multiline':False]['text':' interpreter than the current one, create a new StorageImpl that points to','line_number':101,'multiline':False]['text':' the same data and then create the Python storage from that.','line_number':102,'multiline':False]['text':' NOTE: This is only supposed to happen in MultiPy','line_number':103,'multiline':False]['text':'ignore_hermetic_tls=','line_number':112,'multiline':True]['text':'ignore_hermetic_tls=','line_number':155,'multiline':True]['text':'ignore_hermetic_tls=','line_number':175,'multiline':True]['text':' NOTE: It is possible to just set the PyObjectSlot here, but the point is','line_number':176,'multiline':False]['text':' that we should have already set PyObjectSlot when the storage PyObject was','line_number':177,'multiline':False]['text':' created.','line_number':178,'multiline':False]['text':' Some subclass of StorageBase could be GC-tracked objects even','line_number':210,'multiline':False]['text':' though the base class is not','line_number':211,'multiline':False]['text':' The finalizer has resurrected the PyObject and there is a new Python','line_number':222,'multiline':False]['text':' reference to it, so we can just stop deallocating. Read about','line_number':223,'multiline':False]['text':' resurrection from `__del__` here:','line_number':224,'multiline':False]['text':' https://docs.python.org/3/reference/datamodel.html#object.__del__','line_number':225,'multiline':False]['text':' base test is unnecessary as THPStorae does not set this','line_number':231,'multiline':False]['text':' Resurrected (see above comment about resurrection from `__del__`)','line_number':240,'multiline':False]['text':' New weakrefs could be created during the finalizer call.
       If this occurs, clear them out without calling their
       finalizers since they might rely on part of the object
       being finalized that has already been destroyed. ','line_number':247,'multiline':True]['text':' Modeled after GET_WEAKREFS_LISTPTR() ','line_number':252,'multiline':True]['text':' Clear slots','line_number':260,'multiline':False]['text':' Clear __dict__','line_number':272,'multiline':False]['text':' This will be non-nullptr only when there is a custom StorageImpl','line_number':301,'multiline':False]['text':' constructor for the given device','line_number':302,'multiline':False]['text':' For directly passing allocator scenarios, only c10::StorageImpl objects can','line_number':304,'multiline':False]['text':' be created. If you need to create a storageimpl object of a subclass, you','line_number':305,'multiline':False]['text':' need to pass in the device information.','line_number':306,'multiline':False]['text':' NOLINTNEXTLINE(performance-no-int-to-ptr)','line_number':308,'multiline':False]['text':' We only need to check this here as this is the only case where we can','line_number':312,'multiline':False]['text':' have a device that is not CPU (and thus for which the StorageImpl','line_number':313,'multiline':False]['text':' constructor can be overwritten).','line_number':314,'multiline':False]['text':' NOLINTBEGIN(bugprone-branch-clone)','line_number':327,'multiline':False]['text':' NOLINTEND(bugprone-branch-clone)','line_number':337,'multiline':False]['text':' Create a c10::StorageImpl object.','line_number':353,'multiline':False]['text':' torch.Storage(*, ...)','line_number':396,'multiline':False]['text':'resizable=','line_number':404,'multiline':True]['text':' torch.Storage(size, *, ...)','line_number':409,'multiline':False]['text':'resizable=','line_number':418,'multiline':True]['text':' torch.Storage(sequence, *, ...)','line_number':423,'multiline':False]['text':'resizable=','line_number':443,'multiline':True]['text':' TODO: this might be slow - consider batched updates?','line_number':456,'multiline':False]['text':' Integer index ','line_number':487,'multiline':True]['text':' Slice index ','line_number':501,'multiline':True]['text':' NOLINTNEXTLINE(cppcoreguidelines-init-variables)','line_number':503,'multiline':False]['text':' resizable ','line_number':537,'multiline':True]['text':' NOLINTNEXTLINE(cppcoreguidelines-init-variables)','line_number':572,'multiline':False]['text':' TODO: check the bounds only once','line_number':586,'multiline':False]['text':' TODO: fill?','line_number':587,'multiline':False]['text':' tp_name ','line_number':612,'multiline':True]['text':' tp_basicsize ','line_number':613,'multiline':True]['text':' tp_itemsize ','line_number':614,'multiline':True]['text':' tp_dealloc ','line_number':615,'multiline':True]['text':' tp_vectorcall_offset ','line_number':616,'multiline':True]['text':' tp_getattr ','line_number':617,'multiline':True]['text':' tp_setattr ','line_number':618,'multiline':True]['text':' tp_reserved ','line_number':619,'multiline':True]['text':' tp_repr ','line_number':620,'multiline':True]['text':' tp_as_number ','line_number':621,'multiline':True]['text':' tp_as_sequence ','line_number':622,'multiline':True]['text':' tp_as_mapping ','line_number':623,'multiline':True]['text':' tp_hash  ','line_number':624,'multiline':True]['text':' tp_call ','line_number':625,'multiline':True]['text':' tp_str ','line_number':626,'multiline':True]['text':' tp_getattro ','line_number':627,'multiline':True]['text':' tp_setattro ','line_number':628,'multiline':True]['text':' tp_as_buffer ','line_number':629,'multiline':True]['text':' NOLINTNEXTLINE(misc-redundant-expression)','line_number':630,'multiline':False]['text':' tp_flags ','line_number':631,'multiline':True]['text':' tp_doc ','line_number':632,'multiline':True]['text':' tp_traverse ','line_number':633,'multiline':True]['text':' tp_clear ','line_number':634,'multiline':True]['text':' tp_richcompare ','line_number':635,'multiline':True]['text':' tp_weaklistoffset ','line_number':636,'multiline':True]['text':' tp_iter ','line_number':637,'multiline':True]['text':' tp_iternext ','line_number':638,'multiline':True]['text':' tp_methods ','line_number':639,'multiline':True]['text':' tp_members ','line_number':640,'multiline':True]['text':' tp_getset ','line_number':641,'multiline':True]['text':' tp_base ','line_number':642,'multiline':True]['text':' tp_dict ','line_number':643,'multiline':True]['text':' tp_descr_get ','line_number':644,'multiline':True]['text':' tp_descr_set ','line_number':645,'multiline':True]['text':' tp_dictoffset ','line_number':646,'multiline':True]['text':' tp_init ','line_number':647,'multiline':True]['text':' tp_alloc ','line_number':648,'multiline':True]['text':' tp_new ','line_number':649,'multiline':True]['text':' TODO: implement equality','line_number':652,'multiline':False]['text':' tp_name ','line_number':656,'multiline':True]['text':' tp_basicsize ','line_number':657,'multiline':True]['text':' tp_itemsize ','line_number':658,'multiline':True]['text':' tp_dealloc ','line_number':659,'multiline':True]['text':' tp_vectorcall_offset ','line_number':660,'multiline':True]['text':' tp_getattr ','line_number':661,'multiline':True]['text':' tp_setattr ','line_number':662,'multiline':True]['text':' tp_reserved ','line_number':663,'multiline':True]['text':' tp_repr ','line_number':664,'multiline':True]['text':' tp_as_number ','line_number':665,'multiline':True]['text':' tp_as_sequence ','line_number':666,'multiline':True]['text':' tp_as_mapping ','line_number':667,'multiline':True]['text':' tp_hash  ','line_number':668,'multiline':True]['text':' tp_call ','line_number':669,'multiline':True]['text':' tp_str ','line_number':670,'multiline':True]['text':' tp_getattro ','line_number':671,'multiline':True]['text':' tp_setattro ','line_number':672,'multiline':True]['text':' tp_as_buffer ','line_number':673,'multiline':True]['text':' NOLINTNEXTLINE(misc-redundant-expression)','line_number':674,'multiline':False]['text':' tp_flags ','line_number':675,'multiline':True]['text':' tp_doc ','line_number':676,'multiline':True]['text':' tp_traverse ','line_number':677,'multiline':True]['text':' tp_clear ','line_number':678,'multiline':True]['text':' tp_richcompare ','line_number':679,'multiline':True]['text':' tp_weaklistoffset ','line_number':680,'multiline':True]['text':' tp_iter ','line_number':681,'multiline':True]['text':' tp_iternext ','line_number':682,'multiline':True]['text':' will be assigned in init ','line_number':684,'multiline':True]['text':' tp_methods ','line_number':684,'multiline':True]['text':' will be assigned in init ','line_number':686,'multiline':True]['text':' tp_members ','line_number':686,'multiline':True]['text':' tp_getset ','line_number':687,'multiline':True]['text':' tp_base ','line_number':688,'multiline':True]['text':' tp_dict ','line_number':689,'multiline':True]['text':' tp_descr_get ','line_number':690,'multiline':True]['text':' tp_descr_set ','line_number':691,'multiline':True]['text':' tp_dictoffset ','line_number':692,'multiline':True]['text':' tp_init ','line_number':693,'multiline':True]['text':' tp_alloc ','line_number':694,'multiline':True]['text':' tp_new ','line_number':695,'multiline':True]['text':' NOLINTNEXTLINE(cppcoreguidelines-avoid-c-arrays,modernize-avoid-c-arrays,cppcoreguidelines-avoid-non-const-global-variables)','line_number':721,'multiline':False]