['text':'
 * Maximum number of events supported
 * This stems from the hardware limitation on CPU performance counters, and the
 * fact that we don't support time multiplexing just yet.
 * Time multiplexing involves scaling the counter values proportional to
 * the enabled and running time or running the workload multiple times.
 ','line_number':21,'multiline':True]['text':' The value of the event ','line_number':31,'multiline':True]['text':' for TIME_ENABLED ','line_number':32,'multiline':True]['text':' for TIME_RUNNING ','line_number':33,'multiline':True]['text':'
 * Basic perf event handler for Android and Linux
 ','line_number':36,'multiline':True]['text':' Setup perf events with the Linux Kernel, attaches perf to this process
   * using perf_event_open(2) ','line_number':58,'multiline':True]['text':' Stop incrementing hardware counters for this event ','line_number':62,'multiline':True]['text':' Start counting hardware event from this point on ','line_number':65,'multiline':True]['text':' Zero out the counts for this event ','line_number':68,'multiline':True]['text':' Returns PerfCounter values for this event from kernel, on non supported
   * platforms this always returns zero ','line_number':71,'multiline':True]['text':' Name of the event ','line_number':76,'multiline':True]['text':' Configure all the events and track them as individual PerfEvent ','line_number':84,'multiline':True]['text':' Enable events counting from here ','line_number':87,'multiline':True]['text':' Disable counting and fill in the caller supplied container with delta
   * calculated from the start count values since last Enable() ','line_number':90,'multiline':True]['text':' namespace linux_perf','line_number':102,'multiline':False]['text':' namespace impl','line_number':103,'multiline':False]['text':' namespace profiler','line_number':104,'multiline':False]['text':' namespace torch','line_number':105,'multiline':False]