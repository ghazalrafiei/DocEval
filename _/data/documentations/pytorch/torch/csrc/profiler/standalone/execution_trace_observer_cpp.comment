['text':' _WIN32','line_number':10,'multiline':False]['text':'******************************************************************************','line_number':37,'multiline':False]['text':' JSON output utility functions. To be merged with PyTorch profiler.','line_number':38,'multiline':False]['text':'******************************************************************************','line_number':39,'multiline':False]['text':' Add tensor element data type.','line_number':57,'multiline':False]['text':'******************************************************************************','line_number':152,'multiline':False]['text':' Main ExecutionTraceObserver implementation.','line_number':153,'multiline':False]['text':'******************************************************************************','line_number':154,'multiline':False]['text':' ExecutionTraceObserver contains all the states of the observer. Some of them','line_number':156,'multiline':False]['text':' are shared between the enter and exit RecordFunction call backs, some data','line_number':157,'multiline':False]['text':' like the `op_stack` may be accessed across different threads. So we should be','line_number':158,'multiline':False]['text':' careful about data races. A global mutex `g_mutex` is used avoid these races','line_number':159,'multiline':False]['text':' at the cost of performance in large number of threads situations. We may','line_number':160,'multiline':False]['text':' optimize this further to thread local, fine-grained locking, or use thread','line_number':161,'multiline':False]['text':' safe containers.','line_number':162,'multiline':False]['text':' Mapping of each thread to its own operator stack','line_number':166,'multiline':False]['text':' Uses the underlying TensorImpl object pointer as the key and map to its','line_number':168,'multiline':False]['text':' unique id.','line_number':169,'multiline':False]['text':' Observer run state.','line_number':171,'multiline':False]['text':' Mutex for multithreaded access to the shared containers.','line_number':174,'multiline':False]['text':' Stream to write output JSON.','line_number':176,'multiline':False]['text':' Full path to the output file.','line_number':179,'multiline':False]['text':' RecordFunction callback handle for this observer.','line_number':182,'multiline':False]['text':' Process ID.','line_number':185,'multiline':False]['text':' Returns a new unique ID.','line_number':191,'multiline':False]['text':' Must use accessors to change this so that we can keep the','line_number':217,'multiline':False]['text':' RecordFunction callback in sync with the state.','line_number':218,'multiline':False]['text':' All tensors and operators have an unique id assigned. Increment id for each','line_number':221,'multiline':False]['text':' new tensor or operator node.','line_number':222,'multiline':False]['text':' 0 -> unintialized','line_number':223,'multiline':False]['text':' 1 -> root ID','line_number':224,'multiline':False]['text':' 2 ... -> regular node ID','line_number':225,'multiline':False]['text':' Using a singleton manager here to allow init and delete the observer object.','line_number':229,'multiline':False]['text':' Uninitialized node has id = 0','line_number':232,'multiline':False]['text':' Root node has id = 1','line_number':234,'multiline':False]['text':' Opens the json file to write the execution trace.','line_number':247,'multiline':False]['text':' If somehow the output stream failed to open, finish observer here.','line_number':311,'multiline':False]['text':' Wall clock time for the first op collection time.','line_number':317,'multiline':False]['text':' Start timestamp using steady_clock for measurement.','line_number':321,'multiline':False]['text':' Write out Execution Trace to file','line_number':337,'multiline':False]['text':' rf_id','line_number':343,'multiline':False]['text':' parent is self','line_number':344,'multiline':False]['text':' fw_parent','line_number':345,'multiline':False]['text':' seq_id','line_number':346,'multiline':False]['text':' tid','line_number':348,'multiline':False]['text':' fw_tid','line_number':349,'multiline':False]['text':' Finish timestamp using steady_clock for measurement.','line_number':351,'multiline':False]['text':' symbolic sizes/strides implies t->storage_offset() will fail','line_number':392,'multiline':False]['text':' if current thread stack is empty, push the root node to the stack first','line_number':454,'multiline':False]['text':' rf_id','line_number':462,'multiline':False]['text':' fw_parent','line_number':464,'multiline':False]['text':' seq_id','line_number':465,'multiline':False]['text':' fw_tid','line_number':469,'multiline':False]['text':' We have two cases: for unboxed kernel, we have num_inputs ==','line_number':477,'multiline':False]['text':' inputs.size() for boxed kernel using stack, there could be more elements','line_number':478,'multiline':False]['text':' on the stack from previous ops.','line_number':479,'multiline':False]['text':' TORCH_INTERNAL_ASSERT(num_inputs <= inputs.size());','line_number':480,'multiline':False]['text':' need to account for Stack mode where the inputs are at the end.','line_number':487,'multiline':False]['text':' get parent id from the forward stack, this can be different for','line_number':495,'multiline':False]['text':' autograd ops, which may execute on a different thread than the original','line_number':496,'multiline':False]['text':' thread (which should have the parent op on the stack).','line_number':497,'multiline':False]['text':' all input nodes should have id > op_id','line_number':502,'multiline':False]['text':' record op','line_number':516,'multiline':False]['text':' TORCH_INTERNAL_ASSERT(fc_ptr != nullptr);','line_number':559,'multiline':False]['text':' We have two cases: for unboxed kernel, we have num_outputs ==','line_number':568,'multiline':False]['text':' outputs.size() for boxed kernel using stack, there could be more elements','line_number':569,'multiline':False]['text':' on the stack from previous ops.','line_number':570,'multiline':False]['text':' TORCH_INTERNAL_ASSERT(num_outputs <= outputs.size());','line_number':572,'multiline':False]['text':' need to account for Stack mode where the outputs are at the end.','line_number':579,'multiline':False]['text':' remove current op id from stack','line_number':587,'multiline':False]['text':' Add execution trace observer callback functions to the RecordFunction global','line_number':627,'multiline':False]['text':' observers.','line_number':628,'multiline':False]['text':' Check if the observer is already initialized.','line_number':630,'multiline':False]['text':' Set output','line_number':635,'multiline':False]['text':' Default to disabled.','line_number':646,'multiline':False]['text':' Release the current ET observer object and reset.','line_number':668,'multiline':False]['text':' Make sure we are not already enabled.','line_number':684,'multiline':False]['text':' namespace impl','line_number':703,'multiline':False]['text':' namespace profiler','line_number':704,'multiline':False]['text':' namespace torch','line_number':705,'multiline':False]