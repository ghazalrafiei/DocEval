['text':' Uses a compressed index representation for faster comparisons','line_number':17,'multiline':False]['text':'*
 * Helper to build up the points-to graph.
 *
 * We separate the "building" into a different class because it allows us to
 * cache internally to MemoryDAG without worrying about how the DAG structure
 * is mutated.
 ','line_number':28,'multiline':True]['text':' Make `from` point at `to`.','line_number':41,'multiline':False]['text':' Make a fresh Element (i.e. an Element that doesn't point to anything) and','line_number':46,'multiline':False]['text':' return it.','line_number':47,'multiline':False]['text':' `MemoryDAGBuilder` builds up `indexToElementMap_`, then uses','line_number':53,'multiline':False]['text':' the map to construct the `MemoryDAG`','line_number':54,'multiline':False]['text':' class MemoryDAG','line_number':58,'multiline':False]['text':'','line_number':59,'multiline':False]['text':' This class tracks the "A points to B" graph for all values. It is used by','line_number':60,'multiline':False]['text':' AliasDb to provide a higher-level API.','line_number':61,'multiline':False]['text':'','line_number':62,'multiline':False]['text':' We maintain a DAG where:','line_number':63,'multiline':False]['text':'   - Vertices (called "Elements") represent Values and','line_number':64,'multiline':False]['text':'     other aliasing entities (e.g. the stuff inside a list)','line_number':65,'multiline':False]['text':'   - Edges represent a "points-to" relationship.','line_number':66,'multiline':False]['text':'','line_number':67,'multiline':False]['text':' Leaves in this DAG are entities that don't point to anything, and thus','line_number':68,'multiline':False]['text':' correspond to unique "memory locations".','line_number':69,'multiline':False]['text':'','line_number':70,'multiline':False]['text':' So, by traversing the "points-to" graph to the leaves, you can determine','line_number':71,'multiline':False]['text':' which memory locations an element may point to.','line_number':72,'multiline':False]['text':' explicitly delete copy constructor because otherwise windows build is','line_number':77,'multiline':False]['text':' confused for an exported class see','line_number':78,'multiline':False]['text':' https://stackoverflow.com/a/51033485/105137','line_number':79,'multiline':False]['text':' Return the unique memory locations that `Element` might represent.','line_number':83,'multiline':False]['text':' Do `a` and `b` potentially share a memory location?','line_number':86,'multiline':False]['text':' Does `a` hold reference to any memory that is stored in `b`, or vice versa?','line_number':89,'multiline':False]['text':' Converts from the compressed index representation','line_number':98,'multiline':False]['text':'*
   * The following methods are special cases where we need to mutate the
   * internals of MemoryDAG for efficiency reasons. Don't call them unless you
   * know what you're doing! In particular, don't add new mutating methods
   * without ensuring that you are maintaining cache consistency for memory
   * locations.
   ','line_number':105,'multiline':True]['text':' Adding wildcards can trigger extremely expensive cache invalidations. This','line_number':113,'multiline':False]['text':' method adds them in a more efficient cache-aware way.','line_number':114,'multiline':False]['text':' `Element` represents a vertex in the points-to graph. It represents','line_number':130,'multiline':False]['text':' anything that could have an aliasing relationship--mostly IR','line_number':131,'multiline':False]['text':' `Value`s, but also wildcards or the type inside a container (e.g. `T`','line_number':132,'multiline':False]['text':' in `List[T]`)','line_number':133,'multiline':False]['text':' wildcard constructor','line_number':136,'multiline':False]['text':' Index into the owning DAG's bit vector that represents this element.','line_number':139,'multiline':False]['text':' NOLINTNEXTLINE(cppcoreguidelines-non-private-member-variables-in-classes)','line_number':140,'multiline':False]['text':' All elements that this element *may* point to. It's possible to have','line_number':143,'multiline':False]['text':' multiple elements that you might point to due to control flow/complex ops','line_number':144,'multiline':False]['text':' NOLINTNEXTLINE(cppcoreguidelines-non-private-member-variables-in-classes)','line_number':145,'multiline':False]['text':' Backreference for points-to.','line_number':147,'multiline':False]['text':' NOLINTNEXTLINE(cppcoreguidelines-non-private-member-variables-in-classes)','line_number':148,'multiline':False]['text':' Elements can contain other elements (e.g. List[Tensor])','line_number':151,'multiline':False]['text':' NOLINTNEXTLINE(cppcoreguidelines-non-private-member-variables-in-classes)','line_number':152,'multiline':False]['text':' The values that this element corresponds to. May be empty if this element','line_number':155,'multiline':False]['text':' doesn't represent a first-class value.','line_number':156,'multiline':False]['text':' This is for debug information only.','line_number':157,'multiline':False]['text':' NOLINTNEXTLINE(cppcoreguidelines-non-private-member-variables-in-classes)','line_number':158,'multiline':False]['text':' Make `from` point at `to`.','line_number':162,'multiline':False]['text':' We memoize the results of `getMemoryLocations` to speed up queries.','line_number':166,'multiline':False]['text':' A nullopt means that this cache is not yet populated. Since `MemoryDAG` is','line_number':167,'multiline':False]['text':' immutable, this cache should never need to be invalidated.','line_number':168,'multiline':False]['text':' namespace jit','line_number':174,'multiline':False]['text':' namespace torch','line_number':175,'multiline':False]