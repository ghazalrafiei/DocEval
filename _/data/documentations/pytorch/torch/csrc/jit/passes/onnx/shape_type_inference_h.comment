['text':' Merges existing_type and inferred_type.','line_number':12,'multiline':False]['text':' Returns {merged type, whether or not inferred_type was used}.','line_number':13,'multiline':False]['text':'','line_number':14,'multiline':False]['text':' The inferred type will take higher precedence, since it is produced by ONNX','line_number':15,'multiline':False]['text':' shape inference, and is more compatible with ONNX. In cases where ONNX shape','line_number':16,'multiline':False]['text':' inference fails to produce an inferred type, or produces an inferred type','line_number':17,'multiline':False]['text':' that is incomplete, refer to existing type and fill in the gap that is','line_number':18,'multiline':False]['text':' missing. Currently the following cases are supported.','line_number':19,'multiline':False]['text':'  1. existing type: Tensor[], inferred type: Tensor[]','line_number':20,'multiline':False]['text':'    For list of tensors, existing type does not store datatype nor shape for','line_number':21,'multiline':False]['text':'    inner tensor. Thus inferred type always contain more information, and is','line_number':22,'multiline':False]['text':'    returned.','line_number':23,'multiline':False]['text':'  2. existing type: Tensor, inferred type: Tensor','line_number':24,'multiline':False]['text':'    Fill in missing info (shape, data type) for inferred type from existing','line_number':25,'multiline':False]['text':'    type.','line_number':26,'multiline':False]['text':'  3. existing type: Scalar[], inferred type: Tensor','line_number':27,'multiline':False]['text':'    ONNX represents list of scalars by 1-d Tensor. Return inferred type since','line_number':28,'multiline':False]['text':'    it is more compatible with ONNX.','line_number':29,'multiline':False]['text':' Update graph input types with dynamic axes info.','line_number':39,'multiline':False]['text':' Axes that are marked as dynamic will be assigned as dynamic ShapeSymbol.','line_number':40,'multiline':False]['text':' Note it is possible for multiple axes to share the same ShapeSymbol,','line_number':41,'multiline':False]['text':' if they are defined as such in dynamic_axes.','line_number':42,'multiline':False]['text':' Update graph output with types of output Tensors.','line_number':50,'multiline':False]['text':' If onnx_shape_inference is true, types of output Tensors will be compared and','line_number':51,'multiline':False]['text':' merged with inferred types. It is possible that inferred types contain','line_number':52,'multiline':False]['text':' dynamic axes, hence it takes precedence over types of output Tensors.','line_number':53,'multiline':False]['text':' Replace None in output with Optional node (opset > 15) if it's','line_number':62,'multiline':False]['text':' script model. This helps align the output format in ONNX internal tests','line_number':63,'multiline':False]['text':' when comparing pytorch results with ONNX results, as they have different','line_number':64,'multiline':False]['text':' process for None in output.','line_number':65,'multiline':False]['text':' Utilize ONNX Shape Inference for node.','line_number':71,'multiline':False]['text':' The node must have ONNX namespace, and is valid ONNX node according to spec.','line_number':72,'multiline':False]['text':' On successful ONNX shape inference runs, the function updates output types of','line_number':73,'multiline':False]['text':' n with inferred shape and type. Otherwise n is unchanged.','line_number':74,'multiline':False]['text':' Utilize ONNX Shape Inference for graph.','line_number':80,'multiline':False]['text':' Internally calls ONNXShapeTypeInference for each node, to achieve more','line_number':81,'multiline':False]['text':' coverage that skips only individual nodes if illegal, instead of skipping for','line_number':82,'multiline':False]['text':' the entire graph.','line_number':83,'multiline':False]['text':' namespace jit','line_number':98,'multiline':False]['text':' namespace torch','line_number':99,'multiline':False]