['text':' SHAPE CACHING CODE','line_number':7,'multiline':False]['text':' TODO: ignore arguments that are not used in shape function (not needed','line_number':50,'multiline':False]['text':' initially)','line_number':51,'multiline':False]['text':' IValue doesn't hash List (as Python doesn't), so we will do a custom','line_number':61,'multiline':False]['text':' list hash','line_number':62,'multiline':False]['text':' namespace','line_number':98,'multiline':False]['text':' TODO: compare perf using std::vector<std::tuple<int64_t, int64_t>>','line_number':104,'multiline':False]['text':' deep_copy ','line_number':106,'multiline':True]['text':' TODO: compare perf using std::vector<std::tuple<int64_t, int64_t>> for both','line_number':116,'multiline':False]['text':' ss_map and inverse_ss_map','line_number':117,'multiline':False]['text':' deep_copy ','line_number':120,'multiline':True]['text':' Decanonicalize the return values','line_number':125,'multiline':False]['text':' Function only to access the cache, used for testing','line_number':137,'multiline':False]['text':' Check for aliasing','line_number':160,'multiline':False]['text':' random value to prevent hash collisions','line_number':199,'multiline':False]['text':' namespace jit','line_number':209,'multiline':False]['text':' namespace torch','line_number':210,'multiline':False]