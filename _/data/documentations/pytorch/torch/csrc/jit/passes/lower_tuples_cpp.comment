['text':' operators where we expect to find tuples as inputs/outputs','line_number':17,'multiline':False]['text':' this is to assert we are only doing modifications when we know','line_number':18,'multiline':False]['text':' we can flatten tuples','line_number':19,'multiline':False]['text':' Flatten block inputs and insert a tuple construct in the block','line_number':35,'multiline':False]['text':' Flatten tuple outputs of the block node and append a TupleConstruct','line_number':60,'multiline':False]['text':' node after the block node if there is an outer block.','line_number':61,'multiline':False]['text':' 1- Add flattened tuple to block outputs','line_number':70,'multiline':False]['text':' 2- For uses of the block node in the outer block,','line_number':78,'multiline':False]['text':' flatten the blocknode outputs and insert a tuple construct','line_number':79,'multiline':False]['text':' to replace that.','line_number':80,'multiline':False]['text':' Loop block has an extra element (iter counter)','line_number':81,'multiline':False]['text':' When node has multiple blocks, do not flatten outputs on the second block','line_number':85,'multiline':False]['text':' again','line_number':86,'multiline':False]['text':' Replace the block node with the new TupleConstruct node','line_number':96,'multiline':False]['text':' tuple index has two inputs, tuple and index','line_number':108,'multiline':False]['text':' currently, we allow non-constant tuple index if the tuple is of one type.','line_number':134,'multiline':False]['text':' so we need to check bounds here','line_number':135,'multiline':False]['text':' anonymous namespace','line_number':154,'multiline':False]['text':' insert the tuple first before recursing on its elements, so that its','line_number':178,'multiline':False]['text':' elements will have a use','line_number':179,'multiline':False]['text':' flatten the input list  op(a, tup, b) --> op(a, t0, t1, b)','line_number':188,'multiline':False]['text':' This function supports all node types with blocks that take tuple','line_number':198,'multiline':False]['text':' inputs.','line_number':199,'multiline':False]['text':' note: no update to i','line_number':209,'multiline':False]['text':' since tuples might be nested we need to recursively scan','line_number':210,'multiline':False]['text':' the new flattened inputs','line_number':211,'multiline':False]['text':' flatten the outputs list','line_number':226,'multiline':False]['text':' (a, b, tup, c) -> (a, b, t0, t1, c)','line_number':235,'multiline':False]['text':' and:','line_number':236,'multiline':False]['text':'    tup = (t0, t1)','line_number':237,'multiline':False]['text':' is placed at the current insertion point','line_number':238,'multiline':False]['text':' note: no update to i to handle nested tuples','line_number':251,'multiline':False]['text':' tuple construction operators will become dead when the unpacks are replaced','line_number':266,'multiline':False]['text':' note: changing the second argument to false changes this pass from a','line_number':270,'multiline':False]['text':' complete lowering pass to one that removes tuples when possible. When','line_number':271,'multiline':False]['text':' tuples are first-class in the interpreter, we should still run this pass to','line_number':272,'multiline':False]['text':' remove extraneous uses','line_number':273,'multiline':False]['text':'must_remove_tuples','line_number':276,'multiline':True]['text':' tuples in parameter lists of a block behave exactly the same as','line_number':287,'multiline':False]['text':' _outputs_ of normal instructions, since the param_node represents the','line_number':288,'multiline':False]['text':' parameters as outputs, we can handle it by simply visiting the node','line_number':289,'multiline':False]['text':' tuples in return lists of blocks behave exactly the same as','line_number':297,'multiline':False]['text':' _inputs_ of normal instructions, so we can use VisitNode here as well','line_number':298,'multiline':False]['text':' insert_point is null because it will never be used since return nodes','line_number':299,'multiline':False]['text':' have no outputs','line_number':300,'multiline':False]['text':'must_remove_tuples','line_number':329,'multiline':True]['text':' namespace jit','line_number':341,'multiline':False]['text':' namespace torch','line_number':342,'multiline':False]