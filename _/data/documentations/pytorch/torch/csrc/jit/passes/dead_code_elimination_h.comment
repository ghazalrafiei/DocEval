['text':' If given a top-level graph, DCE will construct do alias analysis that allows','line_number':8,'multiline':False]['text':' for "smarter" dead code elimination (we will eliminate mutable ops if we can','line_number':9,'multiline':False]['text':' prove the mutated values are not used). Otherwise, we will not allow DCE to','line_number':10,'multiline':False]['text':' eliminate mutable ops.','line_number':11,'multiline':False]['text':'','line_number':12,'multiline':False]['text':' So, prefer to use the graph version if you can.','line_number':13,'multiline':False]['text':' default behavior: dead code elimination will check if a node has side','line_number':15,'multiline':False]['text':' effects','line_number':16,'multiline':False]['text':' and not delete it if it does.','line_number':17,'multiline':False]['text':' with this flag, dead code elimination will not check if a node has side','line_number':19,'multiline':False]['text':' effects and treat nodes with side effects like any other node,','line_number':20,'multiline':False]['text':' i.e. delete them if their outputs aren't used anywhere.','line_number':21,'multiline':False]['text':' Invoke the user-provided callback on all live values before deleting anything','line_number':35,'multiline':False]['text':' namespace jit','line_number':41,'multiline':False]['text':' namespace torch','line_number':42,'multiline':False]