['text':' NB: Be sure to run DCE before fusion, because dead instructions','line_number':11,'multiline':False]['text':' can prevent fusion opportunities from being exploited.','line_number':12,'multiline':False]['text':' On Windows will noop, NYI','line_number':13,'multiline':False]['text':' \brief Custom fusion pass using a node-level callback to','line_number':18,'multiline':False]['text':' determine the inclusion of nodes in a subgraph.','line_number':19,'multiline':False]['text':'','line_number':20,'multiline':False]['text':' This helper omits aliased inputs and fusion across control flow','line_number':21,'multiline':False]['text':' boundaries.','line_number':22,'multiline':False]['text':'','line_number':23,'multiline':False]['text':' \arg graph The graph to be modified in-place','line_number':24,'multiline':False]['text':' \arg is_fusable A callback run on each fusable node in the graph.','line_number':25,'multiline':False]['text':' \arg kind The label given to the resultant fused subgraph','line_number':26,'multiline':False]['text':' \arg arg_limit The maximum number of args the resultant fused subgraph','line_number':27,'multiline':False]['text':'                should have.  Note: This will likely develop into a general','line_number':28,'multiline':False]['text':'                post condition on the fused subgraph.','line_number':29,'multiline':False]['text':' namespace jit','line_number':36,'multiline':False]['text':' namespace torch','line_number':37,'multiline':False]