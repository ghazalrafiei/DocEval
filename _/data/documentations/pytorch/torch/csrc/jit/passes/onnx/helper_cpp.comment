['text':' namespace onnx','line_number':20,'multiline':False]['text':' namespace','line_number':154,'multiline':False]['text':' ONNX spec sets `axes` as input for opset >= 13.','line_number':170,'multiline':False]['text':' ONNX spec sets `axes` as attribute for opset < 13.','line_number':177,'multiline':False]['text':' ListConstruct Int[] output case, we need to transform to ONNX','line_number':202,'multiline':False]['text':' Concat to ensure the output is a single tensor(dynamic) type in','line_number':203,'multiline':False]['text':' order to be consumed as inputs','line_number':204,'multiline':False]['text':' This particular Concat operation concats along axis=0 and this requires','line_number':211,'multiline':False]['text':' inputs to the node to have the same shape along dim-0. To ensure this,','line_number':212,'multiline':False]['text':' unsqueeze nodes are added such that all shapes along dim-0 are 1.','line_number':213,'multiline':False]['text':' Certain inputs from ListConstruct Int[] could be combinations of scalars','line_number':214,'multiline':False]['text':' and 1-D tensors, For inputs that are already 1-D tensors, we skip the','line_number':215,'multiline':False]['text':' step of creating a corresponding unsqueeze node.','line_number':216,'multiline':False]['text':' Print nodes that do not have scope/source range covered.','line_number':261,'multiline':False]['text':' namespace jit','line_number':295,'multiline':False]['text':' namespace torch','line_number':296,'multiline':False]