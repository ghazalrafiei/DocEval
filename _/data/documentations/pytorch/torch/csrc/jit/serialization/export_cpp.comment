['text':' keep swapping ','line_number':58,'multiline':True]['text':' Based on OP_SET_ID_VERSION_MAP in','line_number':95,'multiline':False]['text':' https://github.com/onnx/onnx/blob/master/onnx/helper.py.','line_number':96,'multiline':False]['text':' opset 1','line_number':100,'multiline':False]['text':' opset 5','line_number':104,'multiline':False]['text':' opset 6','line_number':105,'multiline':False]['text':' opset 7','line_number':106,'multiline':False]['text':' opset 8','line_number':107,'multiline':False]['text':' opset 9','line_number':108,'multiline':False]['text':' opset 10','line_number':109,'multiline':False]['text':' opset 11','line_number':110,'multiline':False]['text':' opset 12','line_number':111,'multiline':False]['text':' opset 13','line_number':112,'multiline':False]['text':' opset 14','line_number':113,'multiline':False]['text':' opset 15','line_number':114,'multiline':False]['text':' opset 16','line_number':115,'multiline':False]['text':' opset 17','line_number':116,'multiline':False]['text':' opset 18','line_number':117,'multiline':False]['text':' opset 19','line_number':118,'multiline':False]['text':' Macro'ed so we get a marginally better line number on failed export','line_number':132,'multiline':False]['text':' Special error messages for certain types of operators','line_number':137,'multiline':False]['text':' Assuming this is a Caffe2 change as it only modifies an aten op','line_number':148,'multiline':False]['text':' for operator_export_type == ONNX_ATEN_FALLBACK, which is a common','line_number':149,'multiline':False]['text':' pattern for Caffe2-specific scenarios.','line_number':150,'multiline':False]['text':' First, making slash consistent.','line_number':198,'multiline':False]['text':' Second, remove trailing slashes, if any','line_number':200,'multiline':False]['text':' If no root folder specified, select cwd.','line_number':204,'multiline':False]['text':' fclose() called here through CloseFile(), if FILE* is not a null pointer.','line_number':241,'multiline':False]['text':' Using std::map instead of std::unordered_map for initializers','line_number':283,'multiline':False]['text':' in EncodeGraph constructor so that the order in which initializers','line_number':284,'multiline':False]['text':' get written to the ONNX graph is always the deterministic and','line_number':285,'multiline':False]['text':' predictable. While this is not a ONNX requirement, it is needed','line_number':286,'multiline':False]['text':' for testing purposes in tests that use _export_to_pretty_string()','line_number':287,'multiline':False]['text':' for validating ONNX graphs.','line_number':288,'multiline':False]['text':' For large models, the parameters can be stored in separate binary files.','line_number':432,'multiline':False]['text':' This parameter sets a threshold on the number of elements in the parameter','line_number':433,'multiline':False]['text':' tensor, beyond which the parameter is stored in a separate file (if','line_number':434,'multiline':False]['text':' use_external_data_format_ is True). This threshold is in place','line_number':435,'multiline':False]['text':' so as not to create too many external files.','line_number':436,'multiline':False]['text':' If graph proto size exceed maximum protobuf size of 2GB, set','line_number':558,'multiline':False]['text':' use_external_data_format to true.','line_number':559,'multiline':False]['text':' use_external_data_format_ is one of graph_encoder private variable set','line_number':571,'multiline':False]['text':' for return `use_external_data_format` value.','line_number':572,'multiline':False]['text':' This is the version of ONNX operator set we are targeting','line_number':585,'multiline':False]['text':'  Check if domain version is registered. If not, set to version 1','line_number':601,'multiline':False]['text':' Encode type if either shape or dtype exists.','line_number':671,'multiline':False]['text':' Do not assign dim_param for sequence tensor type.','line_number':674,'multiline':False]['text':' Sequence of tensors could differ in dimension size.','line_number':675,'multiline':False]['text':' Use a dimension with neither dim_value nor dim_param set','line_number':676,'multiline':False]['text':' to denote an unknown dimension.','line_number':677,'multiline':False]['text':' Create and assign dim_param for normal tensor type.','line_number':678,'multiline':False]['text':' Top level main graph.','line_number':784,'multiline':False]['text':' TODO: Set more meaningful name for sub-graphs.','line_number':787,'multiline':False]['text':' Since ONNX IR VERSION 4, initializers do not have to','line_number':796,'multiline':False]['text':' be a subset of graph inputs. We use keep_initializers_as_inputs','line_number':797,'multiline':False]['text':' argument to determine whether to add initializers','line_number':798,'multiline':False]['text':' as inputs or not. If keep_initializers_as_inputs=false,','line_number':799,'multiline':False]['text':' we only add non-parameter inputs as inputs to ONNX graph, and','line_number':800,'multiline':False]['text':' not the initializers (parameters). If keep_initializers_as_inputs','line_number':801,'multiline':False]['text':' =true, we add initializers as inputs too. Setting','line_number':802,'multiline':False]['text':' keep_initializers_as_inputs=false allows better','line_number':803,'multiline':False]['text':' optimizations, such as constant-folding, on ONNX graphs','line_number':804,'multiline':False]['text':' by backends/optimizers.','line_number':805,'multiline':False]['text':' None nodes are used to implement optional inputs. One','line_number':826,'multiline':False]['text':' way to "not provide" an optional input is to create an','line_number':827,'multiline':False]['text':' Undefined node, and pass its output as that input.','line_number':828,'multiline':False]['text':' Model size = sum(size(initializers)) + sum(size(onnx_constant_nodes))','line_number':889,'multiline':False]['text':' Add up all Initializers','line_number':891,'multiline':False]['text':' Don't actually copy the buffer into tensor_proto since that is expensive.','line_number':906,'multiline':False]['text':' All we actually need is its size.','line_number':907,'multiline':False]['text':' Add up all onnx::Constant nodes that are Tensors','line_number':912,'multiline':False]['text':' Don't actually copy the buffer into n_proto since that is expensive.','line_number':919,'multiline':False]['text':' All we actually need is its size.','line_number':920,'multiline':False]['text':' Calculate the size of the tensor in bytes','line_number':930,'multiline':False]['text':'  Custom namespace and domain','line_number':963,'multiline':False]['text':' TODO: set correct domain for function proto.','line_number':966,'multiline':False]['text':' Skip the node name attribute.','line_number':991,'multiline':False]['text':' NOLINTNEXTLINE(bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions)','line_number':1102,'multiline':False]['text':'  Custom namespace and domain','line_number':1200,'multiline':False]['text':'  Check if domain version is registered. If not, set to version 1','line_number':1210,'multiline':False]['text':' encode attributes names','line_number':1244,'multiline':False]['text':' This is the version of ONNX operator set we are targeting','line_number':1252,'multiline':False]['text':' add for custom domain as well.','line_number':1255,'multiline':False]['text':' None nodes are used to implement optional inputs. One','line_number':1263,'multiline':False]['text':' way to "not provide" an optional input is to create an','line_number':1264,'multiline':False]['text':' Undefined node, and pass its output as that input.','line_number':1265,'multiline':False]['text':' CPU's HalfTensor doesn't have contiguous(), so first calling contiguous()','line_number':1306,'multiline':False]['text':' TODO We don't call .cpu() on quantized tensors as it fails when calling','line_number':1307,'multiline':False]['text':' aten::empty() on quantized tensors beyond certain size. Issue #29435.','line_number':1308,'multiline':False]['text':' Either defer_weight_export should be true and external_ref must be present,','line_number':1315,'multiline':False]['text':' or use_external_data_format should be true, not both at the same time. They','line_number':1316,'multiline':False]['text':' can both be false at the same time (for ONNX export for regular model','line_number':1317,'multiline':False]['text':' size).','line_number':1318,'multiline':False]['text':' Add a buffer to the raw_data_export_map for the caller to dump into an','line_number':1321,'multiline':False]['text':' external data store. If external_ref is not specified, we instead dump','line_number':1322,'multiline':False]['text':' the contiguous data into the protobuf itself','line_number':1323,'multiline':False]['text':' For now, we use the name of the tensor as the external lookup name to','line_number':1325,'multiline':False]['text':' avoid ONNX protobuf changes.','line_number':1326,'multiline':False]['text':' According to ParseData function's comments in onnx, tensor data is','line_number':1348,'multiline':False]['text':' always little endian.','line_number':1349,'multiline':False]['text':' Motivation is to encode ValueInfo for onnx local function nodes.','line_number':1358,'multiline':False]['text':' Encode value info only for non-onnx or non-ATen nodes.','line_number':1361,'multiline':False]['text':' Encode value info only for node in main graph.','line_number':1365,'multiline':False]['text':' Do not encode value info for graph outputs.','line_number':1369,'multiline':False]['text':' namespace','line_number':1378,'multiline':False]['text':' 1. baseline check','line_number':1467,'multiline':False]['text':' These two checks prevent broken graph being generated','line_number':1468,'multiline':False]['text':' And errors out exporting if that happens.','line_number':1469,'multiline':False]['text':' 2. full check','line_number':1472,'multiline':False]['text':' apply strict mode shape type inference check which examines','line_number':1473,'multiline':False]['text':' whether it's a valid ONNX graph or not. As for some users, they','line_number':1474,'multiline':False]['text':' don't need a fully valid ONNX graph to run their model, we simply','line_number':1475,'multiline':False]['text':' add this information as warning message if it fails.','line_number':1476,'multiline':False]['text':'check_type=','line_number':1480,'multiline':True]['text':'error_mode=','line_number':1481,'multiline':True]['text':' namespace torch::jit','line_number':1494,'multiline':False]