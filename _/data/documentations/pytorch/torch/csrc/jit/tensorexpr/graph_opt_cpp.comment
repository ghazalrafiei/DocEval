['text':' Move the given user of `aten::cat` op to its inputs.','line_number':11,'multiline':False]['text':' Example IR:','line_number':16,'multiline':False]['text':'   %1 = ...','line_number':17,'multiline':False]['text':'   %2 = ...','line_number':18,'multiline':False]['text':'   %3 = prim::ListConstruct(%1, %2)','line_number':19,'multiline':False]['text':'   %4 = aten::cat(%3, ...)','line_number':20,'multiline':False]['text':'   %5 = aten::relu(%4)','line_number':21,'multiline':False]['text':'   return (%5)','line_number':22,'multiline':False]['text':'','line_number':23,'multiline':False]['text':' To be transformed to:','line_number':24,'multiline':False]['text':'   %1 = ...','line_number':25,'multiline':False]['text':'   %2 = ...','line_number':26,'multiline':False]['text':'   %5.1 = aten::relu(%1)','line_number':27,'multiline':False]['text':'   %5.2 = aten::relu(%2)','line_number':28,'multiline':False]['text':'   %3 = prim::ListConstruct(%5.1, %5.2)','line_number':29,'multiline':False]['text':'   %4 = aten::cat(%3, ...)','line_number':30,'multiline':False]['text':'   return (%4)','line_number':31,'multiline':False]['text':' Since we are cloning user, its result should be the same scalar type','line_number':52,'multiline':False]['text':' as the user. But the dims should correspond to that of the input.','line_number':53,'multiline':False]['text':' Returns true if the given `cat` node promotes types.','line_number':97,'multiline':False]['text':' If the inputs to `cat` are of different types, then the implementation','line_number':98,'multiline':False]['text':' of `cat` is expected to promote type.','line_number':99,'multiline':False]['text':' Move the users of the given `aten::cat` op to its inputs.','line_number':122,'multiline':False]['text':' The following constraints need to be satisfied on the cat op and its user.','line_number':123,'multiline':False]['text':'   * the cat op should have only one use.','line_number':124,'multiline':False]['text':'   * the user should be an element-wise op.','line_number':125,'multiline':False]['text':'   * the user should have only one tensor input.','line_number':126,'multiline':False]['text':'     - If the user has > 1 tensor inputs, that user op cannot be applied on','line_number':127,'multiline':False]['text':'       the inputs of cat because the other tensor inputs will not be split,','line_number':128,'multiline':False]['text':'       and hence the shape of those tensors would not match that of the','line_number':129,'multiline':False]['text':'       inputs of cat.','line_number':130,'multiline':False]['text':'       For example:','line_number':131,'multiline':False]['text':'           %1 = ...','line_number':132,'multiline':False]['text':'           %2 = ...','line_number':133,'multiline':False]['text':'           %3 = prim::ListConstruct([%1, %2])','line_number':134,'multiline':False]['text':'           %4 = aten::cat(%3, ...)','line_number':135,'multiline':False]['text':'           %5 = aten::add(%4, %0)','line_number':136,'multiline':False]['text':'       In this example, we cannot move `aten::add` to the inputs of','line_number':137,'multiline':False]['text':'       `aten::cat`, %1 and %2, because the shape of %0 will be different.','line_number':138,'multiline':False]['text':'    * the cat op does not promote types.','line_number':139,'multiline':False]['text':'      - When the cat op promote types, the type of inputs to cat after moving','line_number':140,'multiline':False]['text':'        it user needs to reflect the original type. This is currently not','line_number':141,'multiline':False]['text':'        handled. TODO','line_number':142,'multiline':False]['text':' Moves the users of `aten::cat` ops to its inputs whenever possible','line_number':163,'multiline':False]['text':' in the given subgraph.','line_number':164,'multiline':False]['text':' TODO: check if all nodes have lowerings','line_number':301,'multiline':False]['text':' Delete the graph output IDX and add all inputs of the node producing that','line_number':438,'multiline':False]['text':' value to the graph outputs','line_number':439,'multiline':False]['text':' Avoid letting quantized values to graph outputs.','line_number':484,'multiline':False]['text':' Ideally we should allow quantized outputs as well, but currently the main','line_number':485,'multiline':False]['text':' user of this pass - AOT NNC - does not support it.','line_number':486,'multiline':False]['text':' TODO: remove output dequantization once NNC supports quantized outputs.','line_number':487,'multiline':False]['text':' namespace torch::jit::tensorexpr','line_number':492,'multiline':False]