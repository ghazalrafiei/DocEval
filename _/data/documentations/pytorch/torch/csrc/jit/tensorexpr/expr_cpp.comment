['text':' NOLINTNEXTLINE','line_number':88,'multiline':False]['text':' The default tanh is quite slow, use the Eigen version from here:','line_number':146,'multiline':False]['text':' https://bitbucket.org/eigen/eigen/src/94875feeeeb9abe5509b314197da1991ba2070f5/Eigen/src/Core/MathFunctionsImpl.h#lines-26','line_number':147,'multiline':False]['text':' TODO: use a dedicated bind-var to make sure v is not evaluated multiple','line_number':149,'multiline':False]['text':' times. Clamp the input expression to [-9, 9]','line_number':150,'multiline':False]['text':' The coefficients for the numerator','line_number':156,'multiline':False]['text':' The coefficients for the denominator','line_number':165,'multiline':False]['text':' numerator','line_number':171,'multiline':False]['text':' denominator','line_number':181,'multiline':False]['text':' sigmoid(x) = (tanh(x / 2) + 1) / 2','line_number':191,'multiline':False]['text':' fast_tanh is not precise','line_number':198,'multiline':False]['text':' but clients rely on the sigmoid return values being probability-like','line_number':199,'multiline':False]['text':' so clamp them into (0, 1)','line_number':200,'multiline':False]['text':' propagate_nans= ','line_number':203,'multiline':True]['text':' propagate_nans= ','line_number':204,'multiline':True]['text':' this implementation is taken from sleef:','line_number':208,'multiline':False]['text':' https://github.com/shibatch/sleef/blob/master/src/libm/sleefsp.c#L1131','line_number':209,'multiline':False]['text':' to generate coefficients, this tool is provided','line_number':210,'multiline':False]['text':' https://github.com/shibatch/sleef/blob/master/src/gencoef/gencoef.txt','line_number':211,'multiline':False]['text':' NOLINTNEXTLINE','line_number':371,'multiline':False]['text':' NOLINTNEXTLINE','line_number':373,'multiline':False]['text':' dims:               n   c    h  w','line_number':389,'multiline':False]['text':' strides(nhwc):  w*c*h   1  w*c  c','line_number':390,'multiline':False]['text':' dims:              n   c    l','line_number':402,'multiline':False]['text':' strides(nlc):    c*l   1    c','line_number':403,'multiline':False]['text':' Scalar tensor','line_number':486,'multiline':False]['text':' Align with the isContiguous logic in the kernel.cpp','line_number':488,'multiline':False]['text':' Reverse','line_number':491,'multiline':False]['text':' For static shape','line_number':518,'multiline':False]['text':' For symbolic shape','line_number':525,'multiline':False]['text':' lhs and rhs could be other dim or stride','line_number':531,'multiline':False]['text':' lhs_ is dim while rhs_ is stride','line_number':538,'multiline':False]['text':' lhs_ is stride while rhs_ is dim','line_number':542,'multiline':False]['text':' namespace torch::jit::tensorexpr','line_number':566,'multiline':False]