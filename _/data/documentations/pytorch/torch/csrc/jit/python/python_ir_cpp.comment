['text':' Controls whether graph source ranges are printed by default','line_number':28,'multiline':False]['text':' NOLINTNEXTLINE(cppcoreguidelines-pro-type-const-cast)','line_number':37,'multiline':False]['text':' if this was a autograd.Function recover the name of the class','line_number':40,'multiline':False]['text':' NOLINTNEXTLINE(cppcoreguidelines-pro-type-const-cast)','line_number':46,'multiline':False]['text':' This special-case for printing tuples handles a problem where','line_number':49,'multiline':False]['text':' str((2L, 3L)) outputs "(2L, 3L)" in Python 2 but "(2, 3)"','line_number':50,'multiline':False]['text':' in Python 3.  In order to suppress the L-suffix, we must','line_number':51,'multiline':False]['text':' manually print the string ourselves, calling str() on the','line_number':52,'multiline':False]['text':' sub-elements.','line_number':53,'multiline':False]['text':'','line_number':54,'multiline':False]['text':' This is a fairly fragile fix (What if you have nested tuples','line_number':55,'multiline':False]['text':' in tuples? What if you have dictionaries?) but it seems to hit','line_number':56,'multiline':False]['text':' the cases that are triggered in practice in onnx-pytorch.  Revisit','line_number':57,'multiline':False]['text':' this code if this is not the case.','line_number':58,'multiline':False]['text':'','line_number':59,'multiline':False]['text':' By the way, one non-solution for this problem is to monkeypatch','line_number':60,'multiline':False]['text':' tuple.__str__; this doesn't work because Python doesn't allow','line_number':61,'multiline':False]['text':' monkeypatching methods of built-in types.','line_number':62,'multiline':False]['text':' NOLINTNEXTLINE(bugprone-parent-virtual-call)','line_number':119,'multiline':False]['text':' recover the autograd.Function instance, if this PythonOp's function','line_number':131,'multiline':False]['text':' was originally SomeFunction.apply','line_number':132,'multiline':False]['text':' used in ONNX for discovering symbolics','line_number':133,'multiline':False]['text':' NOLINTNEXTLINE(cppcoreguidelines-pro-type-const-cast)','line_number':136,'multiline':False]['text':' TODO: this is an unnecessary copy. In theory we can directly','line_number':292,'multiline':False]['text':' return the map from identifier to Tensor, but we need some API','line_number':293,'multiline':False]['text':' in Python to get raw `bytes` containing the raw tensor data.','line_number':294,'multiline':False]['text':' We keep the graph alive while the iterator lives. Destroying','line_number':360,'multiline':False]['text':' nodes might still be hazardous.','line_number':361,'multiline':False]['text':' NB: insert_point_guard defined over direct modification of insert point','line_number':449,'multiline':False]['text':' skip owningGraph because it returns a raw pointer to a otherwise','line_number':524,'multiline':False]['text':' std::shared_ptr stored graph object, and would cause a double free','line_number':525,'multiline':False]['text':' methods from Attributes','line_number':692,'multiline':False]['text':' The default method names take Symbol, but the string conversion for','line_number':697,'multiline':False]['text':' Symbol you to qualify with attr::. This is not very user friendly','line_number':698,'multiline':False]['text':' for attributes, so expose the string variants instead.','line_number':699,'multiline':False]['text':' Tensor (t_) -- manually written to unwrap the variable into a tensor.','line_number':722,'multiline':False]['text':' Tensors (ts_) -- manually written to unwrap variables into tensors.','line_number':732,'multiline':False]['text':' return toPyObject(device.value());','line_number':925,'multiline':False]['text':' auto scalar_type = dtype->scalar_type;','line_number':955,'multiline':False]['text':' TODO(antoniojkim): Add GeneratorType to the public API once its been added','line_number':1015,'multiline':False]['text':'                    to the public documentation','line_number':1016,'multiline':False]['text':' namespace torch::jit','line_number':1157,'multiline':False]