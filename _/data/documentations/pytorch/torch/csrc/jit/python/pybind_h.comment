['text':' This is a variant of shared_ptr that "sees through" a wrapper.','line_number':23,'multiline':False]['text':' We use it to convert Value, Node, Block and node to "wrapped" Python','line_number':24,'multiline':False]['text':' values. When we destruct the C++ object, the wrapper's pointer will','line_number':25,'multiline':False]['text':' be set to 0 and any future dereferencing will throw. We need this','line_number':26,'multiline':False]['text':' because the Python objects may hang around after the C++ object','line_number':27,'multiline':False]['text':' has already been destroyed.','line_number':28,'multiline':False]['text':' This also needs the magic type_caster below, which is from the','line_number':29,'multiline':False]['text':' workaround offered in https://github.com/pybind/pybind11/issues/2751','line_number':30,'multiline':False]['text':' we need to disable the overloaded & for PyBind11 < 2.3 due.','line_number':53,'multiline':False]['text':' see https://github.com/pybind/pybind11/pull/1435','line_number':54,'multiline':False]['text':' namespace torch::jit','line_number':66,'multiline':False]['text':' NOLINTNEXTLINE(cppcoreguidelines-non-private-member-variables-in-classes)','line_number':113,'multiline':False]['text':' policy ','line_number':127,'multiline':True]['text':' parent ','line_number':128,'multiline':True]['text':' NOLINTNEXTLINE(cppcoreguidelines-non-private-member-variables-in-classes)','line_number':136,'multiline':False]['text':' TODO: Is there a way to py::cast that doesn't raise an exception on','line_number':140,'multiline':False]['text':' failure?  Can we catch pybind11::cast_error here instead?','line_number':141,'multiline':False]['text':' policy ','line_number':154,'multiline':True]['text':' parent ','line_number':155,'multiline':True]['text':' NOLINTNEXTLINE(cppcoreguidelines-non-private-member-variables-in-classes)','line_number':164,'multiline':False]['text':' policy ','line_number':173,'multiline':True]['text':' parent ','line_number':174,'multiline':True]['text':' See https://github.com/pybind/pybind11/issues/637','line_number':182,'multiline':False]['text':' namespace pybind11::detail','line_number':201,'multiline':False]['text':' namespace torch::jit','line_number':213,'multiline':False]