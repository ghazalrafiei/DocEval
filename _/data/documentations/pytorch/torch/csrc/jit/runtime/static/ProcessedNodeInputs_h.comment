['text':'*
 * Packed representation of input indices for ProcessedNode.
 ','line_number':11,'multiline':True]['text':' This keeps the size usage for inputs + outputs down to 16 bytes;','line_number':16,'multiline':False]['text':' we use 12 bytes, and then two 2-byte integers are used to store','line_number':17,'multiline':False]['text':' the outputs.','line_number':18,'multiline':False]['text':' NOLINTNEXTLINE(modernize-avoid-c-arrays)','line_number':115,'multiline':False]['text':' NOLINTNEXTLINE(cppcoreguidelines-avoid-c-arrays)','line_number':116,'multiline':False]['text':' NOLINTNEXTLINE(cppcoreguidelines-avoid-c-arrays)','line_number':119,'multiline':False]['text':' NOLINTNEXTLINE(modernize-avoid-c-arrays)','line_number':120,'multiline':False]['text':' We want ProcessedNode to be able to pack two more `uint16_t`','line_number':132,'multiline':False]['text':' fields after its ProcessedNodeInputs, and we'll end up being','line_number':133,'multiline':False]['text':' aligned to an 8-byte boundary anyway. We could avoid this pragma','line_number':134,'multiline':False]['text':' at the cost of having to move ProcessedNode::outputs_offset_ and','line_number':135,'multiline':False]['text':' ProcessedNode::num_outputs_ into this class, which would be','line_number':136,'multiline':False]['text':' awkward.','line_number':137,'multiline':False]['text':' Use of reinterpret_cast to pointer to char or unsigned char','line_number':142,'multiline':False]['text':' is defined behavior; see','line_number':143,'multiline':False]['text':' https://en.cppreference.com/w/cpp/language/reinterpret_cast .','line_number':144,'multiline':False]['text':' HeapArrayPtr will be represented as a plain old pointer,','line_number':146,'multiline':False]['text':' which will have alignment to at least a 2-byte boundary','line_number':147,'multiline':False]['text':' (because it's uint16_t*) and more likely an 8- or 16-byte','line_number':148,'multiline':False]['text':' boundary because malloc will tend to just align everything to','line_number':149,'multiline':False]['text':' one of those. So, we just set tag to 1 when inline_repr_ is','line_number':150,'multiline':False]['text':' active so as to be able to differentiate the two.','line_number':151,'multiline':False]['text':' NOLINTNEXTLINE(modernize-use-equals-default)','line_number':155,'multiline':False]