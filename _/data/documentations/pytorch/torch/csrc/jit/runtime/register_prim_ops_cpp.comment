['text':' Suppress unused variable warning','line_number':49,'multiline':False]['text':' consecutive whitespace are regarded as a single separator,','line_number':57,'multiline':False]['text':' the result will contain no empty strings at the start or end','line_number':58,'multiline':False]['text':' if the string has leading or trailing whitespace.','line_number':59,'multiline':False]['text':' whitespaces includes tab, space and','line_number':62,'multiline':False]['text':' the delimiters defined in the implementation of splitlines','line_number':63,'multiline':False]['text':' skip the whitespaces as the Python split() method','line_number':71,'multiline':False]['text':' only used internally in range() translation','line_number':153,'multiline':False]['text':' NOLINTNEXTLINE(cppcoreguidelines-init-variables)','line_number':158,'multiline':False]['text':' error handling when step_val = 0 during runtime','line_number':161,'multiline':False]['text':' NOLINTNEXTLINE(cppcoreguidelines-init-variables)','line_number':178,'multiline':False]['text':'to int','line_number':197,'multiline':True]['text':'to int','line_number':206,'multiline':True]['text':'to int','line_number':215,'multiline':True]['text':'to int','line_number':224,'multiline':True]['text':' NOLINTNEXTLINE(cppcoreguidelines-init-variables)','line_number':235,'multiline':False]['text':' NOLINTNEXTLINE(cppcoreguidelines-init-variables)','line_number':244,'multiline':False]['text':' NOLINTNEXTLINE(cppcoreguidelines-init-variables)','line_number':261,'multiline':False]['text':' NOLINTNEXTLINE(cppcoreguidelines-init-variables)','line_number':270,'multiline':False]['text':' toScalar() needed to avoid strict type check in IValue::toInt.','line_number':284,'multiline':False]['text':' NOLINTNEXTLINE(cppcoreguidelines-init-variables)','line_number':293,'multiline':False]['text':' NOLINTNEXTLINE(cppcoreguidelines-init-variables)','line_number':331,'multiline':False]['text':' NOLINTNEXTLINE(cppcoreguidelines-init-variables)','line_number':340,'multiline':False]['text':' NOLINTNEXTLINE(cppcoreguidelines-init-variables)','line_number':350,'multiline':False]['text':' note the compiler knows to type TupleIndex more accurately than it','line_number':459,'multiline':False]['text':' is listed here.','line_number':460,'multiline':False]['text':' NB: intentionally suffixed with extra _format to prevent tests for','line_number':555,'multiline':False]['text':' "_like" suffix from triggering on this','line_number':556,'multiline':False]['text':' these ops are generic over the list element type.','line_number':573,'multiline':False]['text':' CREATING GENERIC_LIST_OPS','line_number':574,'multiline':False]['text':' This is an alternative to aten::cat op that takes variable number of','line_number':737,'multiline':False]['text':' parameters as input.','line_number':738,'multiline':False]['text':' Format:','line_number':739,'multiline':False]['text':'    prim::VarConcat(Tensors..., dim) -> Tensor','line_number':740,'multiline':False]['text':' We define aten::dequantize in both native_functions.yaml and here,','line_number':794,'multiline':False]['text':' however, aten::dequantize.any defined here overrides','line_number':795,'multiline':False]['text':' aten::dequantize.tensors in native_functions.yaml. The variants here','line_number':796,'multiline':False]['text':' are only for graph mode quantization, and they should be removed once','line_number':797,'multiline':False]['text':' we deprecate graph mode quantization, and use the variants in','line_number':798,'multiline':False]['text':' native_functions.yaml.','line_number':799,'multiline':False]['text':' Pass in two ops for handling int and float separately as % in C++ only','line_number':855,'multiline':False]['text':' works for int The modulus calculation is different between C++ and','line_number':856,'multiline':False]['text':' Python (on negative), we preserve the python behavior as it's more','line_number':857,'multiline':False]['text':' common and match python syntax, hence the conversion.','line_number':858,'multiline':False]['text':' NB: This is the python truediv operation','line_number':871,'multiline':False]['text':' int ** int produces a float, because negative exponents produce float','line_number':897,'multiline':False]['text':' results','line_number':898,'multiline':False]['text':' NOLINTNEXTLINE(cppcoreguidelines-init-variables)','line_number':920,'multiline':False]['text':' min and max are in prim:: because there is a difference between','line_number':926,'multiline':False]['text':' the python builtin 'min' and 'torch.min'','line_number':927,'multiline':False]['text':' lower_case=','line_number':935,'multiline':True]['text':' tensor length op (size of 1st dimension)','line_number':938,'multiline':False]['text':' NOLINT(bugprone-use-after-move) ','line_number':1017,'multiline':True]['text':' NOLINT(bugprone-use-after-move) ','line_number':1018,'multiline':True]['text':'','line_number':1041,'multiline':False]['text':' create a clone of these declarations with a _hacked_twin overload name','line_number':1042,'multiline':False]['text':' and nullability scrubbed from TensorList arg types','line_number':1043,'multiline':False]['text':' TOOD find out why this exists and how to do it without the hack','line_number':1044,'multiline':False]['text':'','line_number':1045,'multiline':False]['text':' reference function parse_to_conversion in python_arg_parsing.h','line_number':1149,'multiline':False]['text':' NOLINTNEXTLINE(cppcoreguidelines-init-variables)','line_number':1154,'multiline':False]['text':' NOLINTNEXTLINE(cppcoreguidelines-init-variables)','line_number':1156,'multiline':False]['text':' these ops are not defined for Tensor','line_number':1217,'multiline':False]['text':' python string is methods return false if empty','line_number':1244,'multiline':False]['text':' This operator has to be unschematized because the return type','line_number':1310,'multiline':False]['text':' depends on the type hint and input. The implementation of this','line_number':1311,'multiline':False]['text':' operator below is intended to be as close to the Python','line_number':1312,'multiline':False]['text':' implementation in torch/csrc/utils/tensor_list.cpp as possible.','line_number':1313,'multiline':False]['text':'node','line_number':1314,'multiline':True]['text':' If the key is in the dict, return it. Else set it to the default value and','line_number':1365,'multiline':False]['text':' return that.','line_number':1366,'multiline':False]['text':' note: before erase','line_number':1396,'multiline':False]['text':' pop pushes an item on the stack but delete does not, so get rid of it','line_number':1406,'multiline':False]['text':' NOLINTNEXTLINE(clang-diagnostic-unused-function)','line_number':1593,'multiline':False]['text':' Convert an python index (which may be negative) into an index usable for a','line_number':1598,'multiline':False]['text':' C++ container','line_number':1599,'multiline':False]['text':' NOLINTNEXTLINE(clang-diagnostic-unused-function)','line_number':1600,'multiline':False]['text':' Handle negative indexing','line_number':1603,'multiline':False]['text':' String Ops','line_number':1645,'multiline':False]['text':' Implementations located in torch/csrc/jit/runtime/register_prim_ops.cpp','line_number':1646,'multiline':False]['text':' if separator is not specified,','line_number':1692,'multiline':False]['text':' a different splitting algorithm is applied as Python','line_number':1693,'multiline':False]['text':' upper and lower require there to be at least one alpha character,','line_number':1751,'multiline':False]['text':' and ignore all other characters','line_number':1752,'multiline':False]['text':' TODO: this should be a TypeError','line_number':1827,'multiline':False]['text':' Adapted from','line_number':1855,'multiline':False]['text':' https://stackoverflow.com/questions/22489073/counting-the-number-of-occurrences-of-a-string-within-a-string','line_number':1856,'multiline':False]['text':' Only true if there exists at least one alpha','line_number':2058,'multiline':False]['text':' Can't reuse DEFINE_STRING_IS_OP because "" is printable','line_number':2072,'multiline':False]['text':' TODO: this should be a TypeError','line_number':2091,'multiline':False]['text':' Suppress unused variable warning','line_number':2101,'multiline':False]['text':' TODO: this should be a TypeError','line_number':2115,'multiline':False]['text':' Suppress unused variable warning','line_number':2124,'multiline':False]['text':' Suppress unused variable warning','line_number':2141,'multiline':False]['text':' NOLINTNEXTLINE(cppcoreguidelines-init-variables)','line_number':2302,'multiline':False]['text':' note: this op needs to share a name with the Scalar -> Tensor conversion','line_number':2313,'multiline':False]['text':' because all _to_tensor conversion have to have the same operator namet','line_number':2314,'multiline':False]['text':' NOLINTNEXTLINE(cppcoreguidelines-init-variables)','line_number':2342,'multiline':False]['text':' NOLINTNEXTLINE(cppcoreguidelines-init-variables)','line_number':2344,'multiline':False]['text':' TODO return generator object when torchscript supports RNG','line_number':2491,'multiline':False]['text':' first-class','line_number':2492,'multiline':False]['text':' move iter to the next axis','line_number':2562,'multiline':False]['text':' input iter points to axis and is updated to axis + 1','line_number':2565,'multiline':False]['text':' update current index for iter','line_number':2568,'multiline':False]['text':' NOLINTNEXTLINE(bugprone-branch-clone)','line_number':2703,'multiline':False]['text':' undef + undef == undef','line_number':2705,'multiline':False]['text':' registered as Any[] so that heterogenous tuples can be called with len()','line_number':2749,'multiline':False]['text':' these ops have a specialized implementation for the list element type','line_number':2755,'multiline':False]['text':' `listContains<T>` is not implemented for non-primitive types','line_number':2788,'multiline':False]['text':' TODO: Add List[bool] once .to<c10::List<bool>> doesn't throw an error','line_number':2789,'multiline':False]['text':' TODO: deprecate this in favor of aten::getelem','line_number':2919,'multiline':False]['text':' only used in loop unrolling, not exposed to end users','line_number':2946,'multiline':False]['text':' NOLINTNEXTLINE(cppcoreguidelines-init-variables)','line_number':2952,'multiline':False]['text':' NOLINTNEXTLINE(cppcoreguidelines-init-variables)','line_number':2955,'multiline':False]['text':' NOLINTNEXTLINE(cppcoreguidelines-init-variables)','line_number':2964,'multiline':False]['text':' NOLINTNEXTLINE(cppcoreguidelines-init-variables)','line_number':2967,'multiline':False]['text':' NOLINTNEXTLINE(cppcoreguidelines-init-variables)','line_number':2969,'multiline':False]['text':' NOLINTNEXTLINE(cppcoreguidelines-init-variables)','line_number':2978,'multiline':False]['text':' NOLINTNEXTLINE(cppcoreguidelines-init-variables)','line_number':2980,'multiline':False]['text':' TODO: move abs to aten namespace because it's schematized!','line_number':3067,'multiline':False]['text':' NOLINTNEXTLINE(cppcoreguidelines-init-variables)','line_number':3263,'multiline':False]['text':' NOLINTNEXTLINE(cppcoreguidelines-init-variables)','line_number':3286,'multiline':False]['text':' NOLINTNEXTLINE(cppcoreguidelines-narrowing-conversions,bugprone-narrowing-conversions)','line_number':3293,'multiline':False]['text':' This operator is generated inside the compiler for indexing into','line_number':3312,'multiline':False]['text':' ModuleList without a statically determinable key. Accordingly,','line_number':3313,'multiline':False]['text':' self must be a ModuleType and the output must be an InterfaceType.','line_number':3314,'multiline':False]['text':' namespace','line_number':3408,'multiline':False]['text':' namespace torch::jit','line_number':3409,'multiline':False]