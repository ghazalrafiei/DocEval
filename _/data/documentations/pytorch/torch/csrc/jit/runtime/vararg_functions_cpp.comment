['text':' IValue tags are intentionally private, so we need additional logic to cast','line_number':13,'multiline':False]['text':' the IValue type to the specified format.','line_number':14,'multiline':False]['text':' TODO: Implement precision-based formatting','line_number':20,'multiline':False]['text':' namespace','line_number':101,'multiline':False]['text':' static const std::regex unsupported_options("\\{(.*?)\\}");','line_number':114,'multiline':False]['text':' // Temporally comment out the warning message because of','line_number':116,'multiline':False]['text':' // "StdRegexIsAwful" internal Lint error, to prevent sev','line_number':117,'multiline':False]['text':' // of std::regex from PT mobile.','line_number':118,'multiline':False]['text':' if (std::regex_search(format, unsupported_options)) {','line_number':119,'multiline':False]['text':'   TORCH_WARN("Format options are not supported.");','line_number':120,'multiline':False]['text':' }','line_number':121,'multiline':False]['text':' Convert the subscript list format which is an interleaving of operand and','line_number':151,'multiline':False]['text':' its subscripts list with an optional output subscripts list at the end','line_number':152,'multiline':False]['text':' (see documentation for more details on this) to the equation string','line_number':153,'multiline':False]['text':' format by creating the equation string from the subscripts list and','line_number':154,'multiline':False]['text':' grouping the input operands into a tensorlist (List[Tensor]).','line_number':155,'multiline':False]['text':' Parse subscripts for input operands','line_number':176,'multiline':False]['text':' Parse optional output subscripts (provided if #args is odd)','line_number':190,'multiline':False]['text':' Parse input operands','line_number':205,'multiline':False]['text':' assumed size','line_number':224,'multiline':False]['text':' skip the `%` and the format specifier','line_number':243,'multiline':False]['text':' Structuring the implementation this way allows NRVO to avoid','line_number':331,'multiline':False]['text':' move-constructing vals on its way onto the stack. Moving a List','line_number':332,'multiline':False]['text':' isn't free.','line_number':333,'multiline':False]['text':' loop from the bottom of the stack to ensure the dictConstruct preserve','line_number':354,'multiline':False]['text':' the inputs order.','line_number':355,'multiline':False]['text':' namespace torch::jit','line_number':434,'multiline':False]