['text':' If outputs_are_immutable is set to false, don't replace the view ops that','line_number':13,'multiline':False]['text':' produce aliases of graph outputs with the copy version.','line_number':14,'multiline':False]['text':' c10::Symbol::fromQualString is a bit long to type everywhere, and','line_number':38,'multiline':False]['text':' we can't use a `using` statement since it's a static class function.','line_number':39,'multiline':False]['text':' [Create owned refs for special values]','line_number':44,'multiline':False]['text':' StaticRuntimeBlockRunner moves its outputs to the return value at the end of','line_number':45,'multiline':False]['text':' run_impl. However, there's a corner case where this can cause problems. If','line_number':46,'multiline':False]['text':' we return a constant, then the only reference in the constants_ array can','line_number':47,'multiline':False]['text':' be destroyed by this move.','line_number':48,'multiline':False]['text':' We could add special logic to handle this in run_impl. But since this is a','line_number':49,'multiline':False]['text':' relatively rare corner case, it's simpler to just add an op that does nothing','line_number':50,'multiline':False]['text':' but create an owned reference to its input. This owned reference can be','line_number':51,'multiline':False]['text':' safely moved out of StaticRuntimeBlockRunner. Note that for scalars,','line_number':52,'multiline':False]['text':' this actually does a copy.','line_number':53,'multiline':False]['text':' Note that we have to do the same thing if we are returning a value from an','line_number':54,'multiline':False]['text':' outer scope in a sub-block.','line_number':55,'multiline':False]['text':' [Force non-empty outputs]','line_number':58,'multiline':False]['text':' It is technically possible for sub-blocks to not return anything. This is','line_number':59,'multiline':False]['text':' problematic for StaticRuntimeBlockRunner because it assumes that at least one','line_number':60,'multiline':False]['text':' output is being returned. Rather than slowing down SR with special logic for','line_number':61,'multiline':False]['text':' this corner case, we simply force blocks that return nothing to return None.','line_number':62,'multiline':False]['text':' [Remove unnecessary outputs]]','line_number':73,'multiline':False]['text':' Removes outputs to reduce compute when it is not used later in the graph.','line_number':74,'multiline':False]['text':' Currently used to remove the max_indices output of embedding_bag, which','line_number':75,'multiline':False]['text':' isn't necessary to compute the main output.','line_number':76,'multiline':False]['text':' namespace torch::jit','line_number':89,'multiline':False]