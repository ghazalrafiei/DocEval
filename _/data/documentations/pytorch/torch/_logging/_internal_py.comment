['text':' shorthand name to log qualified name','line_number':20,'multiline':False]['text':' Note: this only contains loggers registered','line_number':21,'multiline':False]['text':' from register_log','line_number':22,'multiline':False]['text':' e.g. "dynamo" -> "torch._dynamo"','line_number':23,'multiline':False]['text':' artifact logger qualified names,','line_number':26,'multiline':False]['text':' this is populated lazily, as calls to getArtifactLogger','line_number':27,'multiline':False]['text':' currently formatted as <module>.__<artifact_name>','line_number':28,'multiline':False]['text':' e.g. "torch._dynamo.convert_frame.__guards"','line_number':29,'multiline':False]['text':' child logs of registered logs if specified via open','line_number':32,'multiline':False]['text':' registration by the user (ie placing "torch._dynamo.output_graph" in the env var)','line_number':33,'multiline':False]['text':' these need to be tracked so their levels can be reset properly','line_number':34,'multiline':False]['text':' e.g. "torch._dynamo.output_graph"','line_number':35,'multiline':False]['text':' artifact names, populated by register_artifact','line_number':38,'multiline':False]['text':' e.g. "guards"','line_number':39,'multiline':False]['text':' Artifacts that should be visible by default in the error message','line_number':42,'multiline':False]['text':' A short description of each artifact','line_number':45,'multiline':False]['text':' artifacts which are not displayed unless explicitly named in the','line_number':48,'multiline':False]['text':' settings. Ex. output_code is NOT displayed even if the inductor','line_number':49,'multiline':False]['text':' log level is set to DEBUG. It must be explicitly named in the settings','line_number':50,'multiline':False]['text':' logging format string for artifacts','line_number':53,'multiline':False]['text':' register a log with an alias','line_number':62,'multiline':False]['text':' register an artifact name','line_number':68,'multiline':False]['text':' if off by default, don't enable it','line_number':77,'multiline':False]['text':' when log_name's log_level is set to DEBUG','line_number':78,'multiline':False]['text':' register the qualified name of an artifact log','line_number':85,'multiline':False]['text':' this is needed to know which logs need to be reset','line_number':86,'multiline':False]['text':' whenever the log_state is changed','line_number':87,'multiline':False]['text':' flattens all the qnames together (TODO: consider memoizing?)','line_number':94,'multiline':False]['text':' qualified log names -> currently set log level','line_number':114,'multiline':False]['text':' the set of currently enabled artifacts','line_number':117,'multiline':False]['text':' sample usage: torch._logging.set_logs(**torch._logging.DEFAULT_LOGGING)','line_number':154,'multiline':False]['text':' ignore if env var is set','line_number':350,'multiline':False]['text':' type: ignore[union-attr]','line_number':362,'multiline':False]['text':' type: ignore[attr-defined]','line_number':464,'multiline':False]['text':' If the artifact is off by default, then it should only be logged when explicitly','line_number':480,'multiline':False]['text':' enabled; set propagate to False so that this artifact is not propagated','line_number':481,'multiline':False]['text':' to its ancestor logger','line_number':482,'multiline':False]['text':' enable artifact logging when explicitly enabled','line_number':486,'multiline':False]['text':' match a comma separated list of loggable names (whitespace allowed after commas)','line_number':492,'multiline':False]['text':' flake8: noqa: B950','line_number':546,'multiline':False]['text':' apply custom formats to artifacts when necessary','line_number':655,'multiline':False]['text':' exception handling - copied from logging.Formatter.format','line_number':669,'multiline':False]['text':' Cache the traceback text to avoid converting it multiple times','line_number':672,'multiline':False]['text':' (it's constant anyway)','line_number':673,'multiline':False]['text':' type: ignore[var-annotated]','line_number':716,'multiline':False]['text':' mark handlers that we've created','line_number':719,'multiline':False]['text':' so we don't modify user handlers','line_number':720,'multiline':False]['text':' clears all torch handlers on specified loggers','line_number':730,'multiline':False]['text':' reset all registered logs','line_number':738,'multiline':False]['text':' reset all artifact and child logs','line_number':745,'multiline':False]['text':' First, reset all known (registered) loggers to NOTSET, so that they','line_number':767,'multiline':False]['text':' respect their parent log level','line_number':768,'multiline':False]['text':' But not the top level torch level: this defaults to WARNING so','line_number':770,'multiline':False]['text':' that our log messages don't leak to the lower levels','line_number':771,'multiline':False]['text':' Now, for all loggers which the user requested to have non-standard','line_number':777,'multiline':False]['text':' logging behavior, modify their log levels','line_number':778,'multiline':False]['text':' Finally, setup handlers for all registered loggers','line_number':783,'multiline':False]['text':' configure artifact loggers, note: this must happen last','line_number':797,'multiline':False]['text':' since the levels of ancestor loggers are taken into account','line_number':798,'multiline':False]