['text':' lift kernels up','line_number':59,'multiline':False]['text':' Some events can be async (i.e. start and end on different threads),','line_number':82,'multiline':False]['text':' since it's generally undefined how to attribute children ranges to','line_number':83,'multiline':False]['text':' async ranges, we do not use them when calculating nested ranges and stats','line_number':84,'multiline':False]['text':' Group by both thread and node_id, so that events that happen to have','line_number':94,'multiline':False]['text':' the same thread_id but are from different nodes aren't incorrectly','line_number':95,'multiline':False]['text':' grouped together.','line_number':96,'multiline':False]['text':' For each thread we keep a stack of current nested parents.','line_number':101,'multiline':False]['text':' We maintain the invariant that each interval is a subset of all other','line_number':102,'multiline':False]['text':' intervals lower in the stack.','line_number':103,'multiline':False]['text':'','line_number':104,'multiline':False]['text':' First we sort the intervals by their start time. Then we iterate over them.','line_number':105,'multiline':False]['text':' Every time we see a new interval we remove several parents from','line_number':106,'multiline':False]['text':' the top until we restore the invariant. Then parent child relationship','line_number':107,'multiline':False]['text':' if recorded if the stack is not empty.','line_number':108,'multiline':False]['text':' Finally we add new interval to the list','line_number':109,'multiline':False]['text':'','line_number':110,'multiline':False]['text':' Algorithm has O(N * log(N)) complexity where N is number of','line_number':111,'multiline':False]['text':' intervals','line_number':112,'multiline':False]['text':' this can't be a parent','line_number':127,'multiline':False]['text':' BACKWARD_FUNCTION','line_number':143,'multiline':False]['text':' Use file IO over using json.dump since JSON dumping is very slow and','line_number':223,'multiline':False]['text':' this technique is proven to give a 4x speedup.','line_number':224,'multiline':False]['text':' 's' and 'f' draw Flow arrows from','line_number':246,'multiline':False]['text':' the CPU launch to the GPU kernel','line_number':247,'multiline':False]['text':' Note: use torch.profiler to get device kernel trace','line_number':258,'multiline':False]['text':' remove trailing whitespace and comma','line_number':261,'multiline':False]['text':' type: ignore[attr-defined]','line_number':409,'multiline':False]['text':' type: ignore[attr-defined]','line_number':413,'multiline':False]['text':' type: ignore[attr-defined]','line_number':417,'multiline':False]['text':' Note: async events don't have children, are not used when computing 'self'','line_number':515,'multiline':False]['text':' metrics of other events, have only total cpu time','line_number':516,'multiline':False]['text':' account for the kernels in the children ops','line_number':555,'multiline':False]['text':' each legacy cpu events has a single (fake) kernel','line_number':560,'multiline':False]['text':' account for the kernels in the children ops','line_number':603,'multiline':False]['text':' each legacy cpu events has a single (fake) kernel','line_number':608,'multiline':False]['text':' First function being recorded as part of FunctionEventAvg, propagate','line_number':689,'multiline':False]['text':' fields.','line_number':690,'multiline':False]['text':' manage cases like 't' (demangled to 'unsigned short') separately,','line_number':765,'multiline':False]['text':' for now simply check the length to avoid unexpected results for','line_number':766,'multiline':False]['text':' the short sequences','line_number':767,'multiline':False]['text':' type: ignore[assignment]','line_number':781,'multiline':False]['text':' ignoring the following utility ops','line_number':807,'multiline':False]['text':' used only for the top-level memory events','line_number':809,'multiline':False]['text':' Demangles and optionally rewrites the provided event name,','line_number':821,'multiline':False]['text':' with_wildcard - whether to replace certain numbered event names','line_number':822,'multiline':False]['text':' with a wildcard name to aggregate them together in the profiler table','line_number':823,'multiline':False]['text':' output','line_number':824,'multiline':False]['text':' Only append Node ID if any event has a valid (>= 0) Node ID','line_number':952,'multiline':False]['text':' Have to use a list because nonlocal is Py3 only...','line_number':957,'multiline':False]['text':' Auto-scaling of flops header','line_number':998,'multiline':False]['text':' can't find any valid flops','line_number':1008,'multiline':False]['text':' type: ignore[assignment]','line_number':1013,'multiline':False]['text':' Have to use a list because nonlocal is Py3 only...','line_number':1015,'multiline':False]['text':' Yes, newline after the end as well','line_number':1020,'multiline':False]['text':' in legacy profiler, kernel info is stored in cpu events','line_number':1027,'multiline':False]['text':' in kineto profiler, there're events with the correct device type (e.g. CUDA)','line_number':1034,'multiline':False]['text':' Actual printing','line_number':1039,'multiline':False]['text':' Self CPU total %, 0 for async events.','line_number':1072,'multiline':False]['text':' Self CPU total','line_number':1074,'multiline':False]['text':' CPU total %, 0 for async events.','line_number':1075,'multiline':False]['text':' CPU total','line_number':1079,'multiline':False]['text':' CPU time avg','line_number':1080,'multiline':False]['text':' CUDA time total %','line_number':1086,'multiline':False]['text':' Cuda time avg','line_number':1091,'multiline':False]['text':' PrivateUse1 time total %','line_number':1098,'multiline':False]['text':' PrivateUse1 time avg','line_number':1103,'multiline':False]['text':' CPU Mem Total','line_number':1109,'multiline':False]['text':' Self CPU Mem Total','line_number':1111,'multiline':False]['text':' CUDA Mem Total','line_number':1118,'multiline':False]['text':' Self CUDA Mem Total','line_number':1120,'multiline':False]['text':' PrivateUse1 Mem Total','line_number':1127,'multiline':False]['text':' Self PrivateUse1 Mem Total','line_number':1129,'multiline':False]['text':' Number of calls','line_number':1134,'multiline':False]