['text':' Sentinel indicating multiple quantities can be matched','line_number':58,'multiline':False]['text':' The input nodes that must be passed in to the result','line_number':70,'multiline':False]['text':' The nodes matched in this expression','line_number':73,'multiline':False]['text':' Mapping CallFunction to the node.target','line_number':75,'multiline':False]['text':' Wrap args in an extra list','line_number':96,'multiline':False]['text':' We want to construct error messages lazily instead of eagerly, as','line_number':142,'multiline':False]['text':' constructing them eagerly can significantly worsen compile times.','line_number':143,'multiline':False]['text':' already checked this node','line_number':187,'multiline':False]['text':' matches anything','line_number':238,'multiline':False]['text':' matches anything','line_number':247,'multiline':False]['text':' matches anything','line_number':269,'multiline':False]['text':' matches anything','line_number':289,'multiline':False]['text':' Propagating patterns with multiple users will ensure we don't revisit','line_number':558,'multiline':False]['text':' the same nodes','line_number':559,'multiline':False]['text':' revert any partial matches','line_number':622,'multiline':False]['text':' Check all anchor nodes match the pattern','line_number':654,'multiline':False]['text':' Preserve the recompute tags in the replacement graph. We','line_number':836,'multiline':False]['text':' look at the recompute tags of the original output node to','line_number':837,'multiline':False]['text':' propagate the tag from the output all the way to the input','line_number':838,'multiline':False]['text':' args in the replacement graph.','line_number':839,'multiline':False]['text':' Note that this is best effort. Since patterns are from','line_number':840,'multiline':False]['text':' many to many, there is no easy way to correctly map the','line_number':841,'multiline':False]['text':' recomputable tags. It is possible in some scenarios that we','line_number':842,'multiline':False]['text':' incorrectly tag some nodes as recomputables.','line_number':843,'multiline':False]['text':' trace the pattern using the shapes from the user program','line_number':939,'multiline':False]['text':' If inference mode is enabled during compilation, assume that we don't','line_number':956,'multiline':False]['text':' want to match on any training graph patterns','line_number':957,'multiline':False]['text':' TODO: Revisit the functionalize_rng_ops for lowmem dropout','line_number':961,'multiline':False]['text':' Positional arguments index','line_number':998,'multiline':False]['text':' first node in the graph','line_number':1056,'multiline':False]['text':' match: copy_, relu_, _set_grad_enabled, manual_seed, enter_functional_autocast, etc','line_number':1060,'multiline':False]['text':' conservatively not applying pattern for cpu input,','line_number':1128,'multiline':False]['text':' since some of the patterns induce codegen and split nodes.','line_number':1129,'multiline':False]['text':' Note: we will only skip cpu compute if disable_cpp_codegen=True','line_number':1130,'multiline':False]['text':' pattern match crosses mutation barrier - discard','line_number':1138,'multiline':False]['text':' scalar_workaround is a hack to capture dropout_p','line_number':1173,'multiline':False]['text':' see https://github.com/pytorch/pytorch/issues/97894','line_number':1174,'multiline':False]['text':' de-mangle arg name','line_number':1203,'multiline':False]['text':' Handle a burned in tensor size which are now [Ignored(), Ignored(), ...]','line_number':1213,'multiline':False]['text':' TODO - look into using aot autograd, asserting no mutating ops here','line_number':1237,'multiline':False]['text':' remove in/out specs','line_number':1279,'multiline':False]['text':' revisit this node when next input is ready','line_number':1300,'multiline':False]['text':' clear view matches encountered during tracing','line_number':1328,'multiline':False]