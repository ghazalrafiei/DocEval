['text':' Used to synchronize between parent and child processes','line_number':47,'multiline':False]['text':' None is a sentinel for the child to terminate','line_number':116,'multiline':False]['text':' cuda runtime does not work with "fork", use "spawn" to start processes.','line_number':149,'multiline':False]['text':' In case of a prior crash, ensure the subprocess is running','line_number':169,'multiline':False]['text':' child process is still running','line_number':186,'multiline':False]['text':' child process crashed','line_number':188,'multiline':False]['text':' Launch the child processes and push a msg to "warm up"','line_number':232,'multiline':False]['text':' Wait for the initialization to finish','line_number':240,'multiline':False]['text':' Use a thread pool to manage distributing work to the subprocesses.','line_number':244,'multiline':False]['text':' Threads block on an available process, so it makes sense to match','line_number':245,'multiline':False]['text':' the number of threads with the number of devices.','line_number':246,'multiline':False]['text':' Register the exit handler for the parent process so it will terminate','line_number':249,'multiline':False]['text':' the child processes.','line_number':250,'multiline':False]['text':' Don't use multiple devices','line_number':263,'multiline':False]['text':' If the user specified the visible devices in the env, use those.','line_number':268,'multiline':False]['text':' set to INF so this choice will be ignored','line_number':309,'multiline':False]['text':' Use a ThreadExecutorPool to spread the work across the subprocesses and','line_number':326,'multiline':False]['text':' to grab subprocesses as soon as they're free.','line_number':327,'multiline':False]['text':' the kernel name defined in the module','line_number':405,'multiline':False]['text':' create args and out tensor','line_number':436,'multiline':False]['text':' shake out any CUDA errors','line_number':453,'multiline':False]['text':' the path of the module defining the triton kernel','line_number':492,'multiline':False]['text':' Retrieve workspace_size and initialize workspace.','line_number':572,'multiline':False]['text':' input ptrs and output ptrs','line_number':575,'multiline':False]['text':' set workspace size ptr to retrieve workspace size','line_number':579,'multiline':False]['text':' null workspace ptr','line_number':580,'multiline':False]['text':' TODO: Support non-zero workspace_size.','line_number':584,'multiline':False]['text':' Generate partial function.','line_number':591,'multiline':False]['text':' null workspace size ptr','line_number':596,'multiline':False]['text':' set workspace ptr, TODO: update it to a real ptr if workspace_size > 0','line_number':597,'multiline':False]