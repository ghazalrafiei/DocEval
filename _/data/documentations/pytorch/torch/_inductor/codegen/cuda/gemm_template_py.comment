['text':' list both fuseable and non-fuseable ops, and treat them all as non-fuseable','line_number':200,'multiline':False]['text':' This will list only ops capable of EVT fusion','line_number':230,'multiline':False]['text':' type: ignore[name-defined]','line_number':267,'multiline':False]['text':' type: ignore[name-defined]','line_number':280,'multiline':False]['text':' type: ignore[name-defined]','line_number':281,'multiline':False]['text':' type: ignore[name-defined]','line_number':315,'multiline':False]['text':' type: ignore[name-defined]','line_number':348,'multiline':False]['text':' TODO(ipiszy): Check whether it's necessary to swap X/W.','line_number':400,'multiline':False]['text':' strides = bias.get_stride()','line_number':401,'multiline':False]['text':' if strides[-1] != 1:','line_number':402,'multiline':False]['text':'     return True','line_number':403,'multiline':False]['text':' for stride in strides[:-1]:','line_number':404,'multiline':False]['text':'     if stride != 0:','line_number':405,'multiline':False]['text':'         return True','line_number':406,'multiline':False]['text':' return False','line_number':407,'multiline':False]['text':' type: ignore[name-defined]','line_number':411,'multiline':False]['text':' type: ignore[name-defined]','line_number':412,'multiline':False]['text':' Swap X and W in GemmOperation.','line_number':413,'multiline':False]['text':' type: ignore[name-defined]','line_number':424,'multiline':False]['text':' type: ignore[name-defined]','line_number':425,'multiline':False]['text':' Skip simt kernels','line_number':429,'multiline':False]['text':' Only keep GemmUniversal kernels','line_number':436,'multiline':False]['text':' Filter ops by dtypes.','line_number':442,'multiline':False]['text':' Filter ops by input layouts.','line_number':460,'multiline':False]['text':' Update op.','line_number':467,'multiline':False]['text':' Set output layout.','line_number':470,'multiline':False]['text':' Filter ops by alignments and set alignments.','line_number':473,'multiline':False]['text':' Set epilogue.','line_number':481,'multiline':False]['text':' TODO: update epilogue functor according to epilogues.','line_number':482,'multiline':False]['text':' Set bias layout and alignment.','line_number':485,'multiline':False]['text':' For cutlass2, bias and output layout must match','line_number':491,'multiline':False]['text':' type: ignore[name-defined]','line_number':511,'multiline':False]['text':' Swap','line_number':581,'multiline':False]['text':' type: ignore[override]','line_number':619,'multiline':False]['text':' type: ignore[name-defined]','line_number':622,'multiline':False]['text':' This is the name of the output of the Matmul, before epilogues are applied.','line_number':640,'multiline':False]['text':' it is not necessarily materialized in global memory if we have an epilogue','line_number':641,'multiline':False]['text':' TMA epilogue requires bias vector in column major to get best perf.','line_number':670,'multiline':False]['text':' TODO: Support split_k.','line_number':682,'multiline':False]