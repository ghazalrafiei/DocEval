['text':' https://github.com/pytorch/pytorch/issues/86128 causes','line_number':57,'multiline':False]['text':' non-Tensor inputs even for ops with only Tensor inputs.','line_number':58,'multiline':False]['text':' TODO - decompose/type promote to avoid this','line_number':59,'multiline':False]['text':' TODO handle Tensor-Scalar adds, it's a different schema','line_number':85,'multiline':False]['text':' A dictionary mapping a tensor to all aliased views.','line_number':123,'multiline':False]['text':' Replace the view with the an existing view if available.','line_number':140,'multiline':False]['text':' Save the new alias but do not replace existing one.','line_number':153,'multiline':False]['text':' Clean up unused views.','line_number':157,'multiline':False]['text':' TODO - we could also Tensors which get replaced with arange here','line_number':182,'multiline':False]['text':' Constant folding can leak memory, especially with repeated compilation, so we are only going to','line_number':200,'multiline':False]['text':' remove constants which can be replaced with a constructor.','line_number':201,'multiline':False]['text':' Got failures in `test_is_set_to_cuda` if we change aliasing on constants,','line_number':212,'multiline':False]['text':' so just constant-ify if a Tensor is unaliased','line_number':213,'multiline':False]['text':' we dont have a functional way right now of instantiating a non-contiguous tensor with full/zeros/ones right now','line_number':220,'multiline':False]['text':' hasn't shown up to be important yet','line_number':221,'multiline':False]['text':' the conversion from tensor and back to value can be lossy, just use the original full ctor value','line_number':230,'multiline':False]['text':' zeros, and ones just get traced into full, so we insert those','line_number':238,'multiline':False]