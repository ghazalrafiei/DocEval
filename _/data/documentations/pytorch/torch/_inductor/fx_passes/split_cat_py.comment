['text':' noqa: W605','line_number':63,'multiline':False]['text':' ############The pattern to be optimized is#########','line_number':64,'multiline':False]['text':'         unbind (dim=0)','line_number':65,'multiline':False]['text':'       /   ...    \','line_number':66,'multiline':False]['text':' getitem      getitem   -> user=1','line_number':67,'multiline':False]['text':'    |            |','line_number':68,'multiline':False]['text':'  split         split  -> dim=1, user=1, split_section_size=1','line_number':69,'multiline':False]['text':'    |            |','line_number':70,'multiline':False]['text':'  getitem       getitem  -> user=1','line_number':71,'multiline':False]['text':'    \           /','line_number':72,'multiline':False]['text':'        cat (dim=1)  -> user=1','line_number':73,'multiline':False]['text':'          |','line_number':74,'multiline':False]['text':' ################After transformation#############','line_number':76,'multiline':False]['text':'          unbind (dim=0)','line_number':77,'multiline':False]['text':'        /    ...   \','line_number':78,'multiline':False]['text':'    getitem       getitem  -> user=1','line_number':79,'multiline':False]['text':'       \          /','line_number':80,'multiline':False]['text':'        cat (dim=1)  -> user=1','line_number':81,'multiline':False]['text':'         |','line_number':82,'multiline':False]['text':' find the grand children of the split_node','line_number':90,'multiline':False]['text':' replace the users of grand child node with the input node','line_number':93,'multiline':False]['text':' erase the split node and its child','line_number':96,'multiline':False]['text':' TODO dynamic_shapes with assume_static_by_default=False fails while AOT Autograd tracing.','line_number':126,'multiline':False]['text':' remove the dummy split whose split sections size is one','line_number':128,'multiline':False]['text':' Normalize split dim','line_number':132,'multiline':False]['text':' special case where torch.cat supports cat'ing with an empty tensor','line_number':188,'multiline':False]['text':' Normalize cat dim','line_number':196,'multiline':False]['text':' A bug in pytorch, some nodes miss the example_value metadata','line_number':226,'multiline':False]['text':' Normalize dim','line_number':233,'multiline':False]['text':' squeeze(Tensor)','line_number':270,'multiline':False]['text':' squeeze(Tensor self, int dim)','line_number':273,'multiline':False]['text':' squeeze(Tensor self, int[] dim)','line_number':274,'multiline':False]['text':' squeeze(Tensor self, int[] dim) (called with varargs)','line_number':277,'multiline':False]['text':' using KeywordArg("dim") for `dim` checks they all match','line_number':303,'multiline':False]['text':' check users are all unique getitems','line_number':315,'multiline':False]['text':' This should ideally never happen. Split user should always be a getitem','line_number':319,'multiline':False]['text':' This shouldn't ideally happen as dynamo normalizes indexes to positive','line_number':326,'multiline':False]['text':' Note: dim is implicitly passed by TorchSplit, as it internally uses a pattern with dim','line_number':352,'multiline':False]['text':' Add the new split node','line_number':368,'multiline':False]['text':' Find the next users (i.e. users after the getitem)','line_number':439,'multiline':False]['text':' Gather inputs of the next users. When inputs come from `split_node`, they are instead represented by','line_number':441,'multiline':False]['text':' a tuple indicating the split ranges. See `get_user_input_list` for more details','line_number':442,'multiline':False]['text':' Simplify the split_sections based on user_inputs_list. In simpler cases, len(simplified_split_ranges) == 1 and','line_number':444,'multiline':False]['text':' we can simply replace the split node. Otherwise, we simplify it.','line_number':445,'multiline':False]['text':' Simplification not possible','line_number':449,'multiline':False]['text':' Start actual replacement','line_number':457,'multiline':False]['text':' Add which "getitem" cat depends on','line_number':493,'multiline':False]['text':' This need not be a strict condition','line_number':560,'multiline':False]['text':' However, we keep it now for simplicity.','line_number':561,'multiline':False]['text':' Simplification not possible','line_number':564,'multiline':False]['text':' No transform needed','line_number':613,'multiline':False]['text':' Split being simplified','line_number':615,'multiline':False]['text':' Verify equal split','line_number':616,'multiline':False]['text':' All sections should be equal','line_number':620,'multiline':False]['text':' We need to unsqueeze inputs not coming through split','line_number':634,'multiline':False]['text':' Non-split inputs','line_number':636,'multiline':False]['text':' We can completely eliminate the split node','line_number':657,'multiline':False]['text':' Now assign the right getitem to the right input','line_number':676,'multiline':False]['text':' Find the correct new getitem (present in split_items)','line_number':683,'multiline':False]['text':' Change the args and kwargs of non-cat/stack nodes. Replace old getitems (belonging to','line_number':715,'multiline':False]['text':' the original split node) with the newer getitems','line_number':716,'multiline':False]['text':' Handle cat/stack user nodes','line_number':726,'multiline':False]['text':' For `unsqueeze` transform, we will combine consecutive inputs with the same unsqueeze params, and stack them','line_number':729,'multiline':False]['text':' Apply transforms','line_number':736,'multiline':False]['text':' User input is coming from unbind','line_number':891,'multiline':False]['text':' We need to unsqueeze inputs not coming through unbind into cat','line_number':903,'multiline':False]['text':' Non-unbind inputs','line_number':905,'multiline':False]['text':' We generally match GetItem with arg being an Arg(). So, we never return the anchor','line_number':916,'multiline':False]['text':' nodes as the stored node in ctx.pattern_to_node is returned. Here we override find_anchor_nodes','line_number':917,'multiline':False]['text':' to not use ctx.pattern_to_node','line_number':918,'multiline':False]['text':' Unnormalized split','line_number':1085,'multiline':False]['text':' noqa: W605','line_number':1091,'multiline':False]['text':' ############The pattern to be optimized is#########','line_number':1092,'multiline':False]['text':'                 split_node(dim=1)','line_number':1094,'multiline':False]['text':'       /     \         ...       /         \','line_number':1095,'multiline':False]['text':' getitem    getitem          getitem     getitem   -> user=1','line_number':1096,'multiline':False]['text':'    \       /                     \       /','line_number':1097,'multiline':False]['text':'      cat (user=mul, dim=1)           cat(user=mul, dim=1)','line_number':1098,'multiline':False]['text':'       |            \                   |          \','line_number':1099,'multiline':False]['text':' ################After transformation#############','line_number':1101,'multiline':False]['text':'                 split_node(dim=1)','line_number':1103,'multiline':False]['text':'       /              ...                  \','line_number':1104,'multiline':False]['text':'     getitem                             getitem','line_number':1105,'multiline':False]['text':'     |    \                              |     \','line_number':1106,'multiline':False]['text':' Unnormalized split','line_number':1153,'multiline':False]['text':' if the cat and split have different dims, return','line_number':1158,'multiline':False]['text':' Find the next users (i.e. users after the getitem)','line_number':1159,'multiline':False]['text':' 'immutable_list' object does not support mutation. Create a new copy of it','line_number':1161,'multiline':False]['text':' check the all getitems in the cat_user from the same node','line_number':1168,'multiline':False]['text':' find the index of getitems to be cated/stacked','line_number':1171,'multiline':False]['text':' indices may not be necessarily sorted, we sort them first','line_number':1175,'multiline':False]['text':' the gettitems to be merged must be consecutive, otherwise','line_number':1177,'multiline':False]['text':' returned sliced tensor could be wrong','line_number':1178,'multiline':False]['text':' update the arg of cat user, only keep the first getitem','line_number':1181,'multiline':False]['text':' calculate the fused tensor sizes in the indices','line_number':1183,'multiline':False]['text':' update the split sections','line_number':1188,'multiline':False]['text':' padding others with zeros to keep the same dict size','line_number':1190,'multiline':False]['text':' remove all unused indexes in the split_node','line_number':1193,'multiline':False]['text':' remove all unused getitem nodes','line_number':1203,'multiline':False]['text':' dictionary keys changed during iteration','line_number':1205,'multiline':False]['text':' update meta data of getitem','line_number':1210,'multiline':False]['text':' update getitem index for new split node','line_number':1215,'multiline':False]['text':' update the split sections of new split node','line_number':1220,'multiline':False]['text':' noqa: W605','line_number':1228,'multiline':False]['text':' ############The pattern to be optimized is#########','line_number':1229,'multiline':False]['text':'                            split_node (dim=1)','line_number':1230,'multiline':False]['text':'       /   ...    \             ...       /         \','line_number':1231,'multiline':False]['text':' getitem      getitem                 getitem     getitem -> user=1','line_number':1232,'multiline':False]['text':'    \           /','line_number':1233,'multiline':False]['text':'        stack (dim=0)  -> user=1, getitems to be consecutive','line_number':1234,'multiline':False]['text':'          |','line_number':1235,'multiline':False]['text':'         tahn  -> user=1','line_number':1236,'multiline':False]['text':'          |','line_number':1237,'multiline':False]['text':'         unbind (dim=0)','line_number':1238,'multiline':False]['text':'           |','line_number':1239,'multiline':False]['text':' ################After transformation#############','line_number':1241,'multiline':False]['text':'                  split_node (dim=1)','line_number':1242,'multiline':False]['text':'             /      ...       /         \','line_number':1243,'multiline':False]['text':'    getitem       getitem     getitem -> user=1','line_number':1244,'multiline':False]['text':'       |','line_number':1245,'multiline':False]['text':'     tahn','line_number':1246,'multiline':False]['text':'       |','line_number':1247,'multiline':False]['text':'     split','line_number':1248,'multiline':False]['text':'       |','line_number':1249,'multiline':False]['text':' Unnormalized split','line_number':1295,'multiline':False]['text':' Find the next users (i.e. users after the getitem)','line_number':1300,'multiline':False]['text':' 'immutable_list' object does not support mutation. Create a new copy of it','line_number':1302,'multiline':False]['text':' stack user only has one user','line_number':1305,'multiline':False]['text':' stack and unbind shouldhave the same dim','line_number':1314,'multiline':False]['text':' find the index of getitems to be stacked','line_number':1317,'multiline':False]['text':' indices may not be necessarily sorted, we sort them first','line_number':1323,'multiline':False]['text':' the gettitems to be merged must be consecutive, otherwise','line_number':1325,'multiline':False]['text':' returned sliced tensor could be wrong','line_number':1326,'multiline':False]['text':' update the arg of stack user, only keep the first getitem','line_number':1329,'multiline':False]['text':' calculate the fused tensor sizes in the indices','line_number':1331,'multiline':False]['text':' update the split sections','line_number':1336,'multiline':False]['text':' padding others with zeros to keep the same dict size','line_number':1338,'multiline':False]['text':' remove all unused indexes in the split_node','line_number':1341,'multiline':False]['text':' remove getitem and split, stack','line_number':1356,'multiline':False]['text':' remove all unused getitem nodes','line_number':1359,'multiline':False]['text':' dictionary keys changed during iteration','line_number':1361,'multiline':False]['text':' update meta data of getitem','line_number':1366,'multiline':False]['text':' update getitem index for new split node','line_number':1371,'multiline':False]['text':' update the split sections of new split node','line_number':1377,'multiline':False]