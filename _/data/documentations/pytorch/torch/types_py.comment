['text':' Convenience aliases for common composite types that we need','line_number':6,'multiline':False]['text':' to talk about in PyTorch','line_number':7,'multiline':False]['text':' In some cases, these basic types are shadowed by corresponding','line_number':15,'multiline':False]['text':' top-level values.  The underscore variants let us refer to these','line_number':16,'multiline':False]['text':' types.  See https://github.com/python/mypy/issues/4146 for why these','line_number':17,'multiline':False]['text':' workarounds is necessary','line_number':18,'multiline':False]['text':' Meta-type for "numeric" things; matches our docs','line_number':31,'multiline':False]['text':' Meta-type for "device-like" things.  Not to be confused with 'device' (a','line_number':34,'multiline':False]['text':' literal device object).  This nomenclature is consistent with PythonArgParser.','line_number':35,'multiline':False]['text':' None means use the default device (typically CPU)','line_number':36,'multiline':False]['text':' Storage protocol implemented by ${Type}StorageBase classes','line_number':40,'multiline':False]['text':' type: ignore[empty-body]','line_number':48,'multiline':False]['text':' type: ignore[empty-body]','line_number':51,'multiline':False]['text':' type: ignore[empty-body]','line_number':57,'multiline':False]['text':' type: ignore[empty-body]','line_number':60,'multiline':False]['text':' type: ignore[empty-body]','line_number':63,'multiline':False]['text':' type: ignore[empty-body]','line_number':66,'multiline':False]['text':' type: ignore[empty-body]','line_number':69,'multiline':False]['text':' type: ignore[empty-body]','line_number':72,'multiline':False]['text':' type: ignore[empty-body]','line_number':75,'multiline':False]['text':' type: ignore[empty-body]','line_number':78,'multiline':False]