['text':' Create an enum type, `BackendType`, with empty members.','line_number':34,'multiline':False]['text':' Can't handle Function Enum API (mypy bug #9079)','line_number':35,'multiline':False]['text':' type: ignore[misc]','line_number':36,'multiline':False]['text':' Unable to assign a function a method (mypy bug #2427)','line_number':37,'multiline':False]['text':' type: ignore[assignment]','line_number':38,'multiline':False]['text':' Create a new enum type, `BackendType`, with extended members.','line_number':73,'multiline':False]['text':' Can't handle Function Enum API (mypy bug #9079)','line_number':84,'multiline':False]['text':' type: ignore[misc]','line_number':85,'multiline':False]['text':' Unable to assign a function a method (mypy bug #2427)','line_number':86,'multiline':False]['text':' type: ignore[assignment]','line_number':87,'multiline':False]['text':' Initialize ProcessGroup.','line_number':107,'multiline':False]['text':' We're using a bunch of private APIs here since `new_group` requires the','line_number':110,'multiline':False]['text':' default group to be initialized.','line_number':111,'multiline':False]['text':' detect if any worker has invalid device_map configurations, and return','line_number':152,'multiline':False]['text':' reverse device maps','line_number':153,'multiline':False]['text':' passed all checked, construct reverse mapping and get list of devices handled by this agent','line_number':170,'multiline':False]['text':' For dynamic group (non-static) do not check the target node name since it may not have joined yet','line_number':191,'multiline':False]['text':' Group state is retrieved from local agent','line_number':273,'multiline':False]['text':' On initialization, tensorpipe agent retrieves information from all existing workers, so group state is valid','line_number':274,'multiline':False]['text':' One round to get device_maps of all workers and construct reverse device maps','line_number':278,'multiline':False]['text':' TODO: make async?','line_number':283,'multiline':False]['text':' Perform RPC call to all workers, including itself, to include newly joined worker information and device maps','line_number':296,'multiline':False]['text':' Set device list for each worker','line_number':298,'multiline':False]['text':' world_size is specified so this is a static group (ranks cannot join and leave)','line_number':319,'multiline':False]['text':' The agent's join method is required to behave like a barrier and perform','line_number':321,'multiline':False]['text':' collective operations, for which it relies on a process group, instead of','line_number':322,'multiline':False]['text':' re-implementing this on top of RPCs.','line_number':323,'multiline':False]['text':' It's necessary to initialize PyTorch CUDA states here (e.g.,','line_number':335,'multiline':False]['text':' CUDACachingAllocator). If this is missing, we could hit errors like','line_number':336,'multiline':False]['text':' "allocator not initialized", because other processes might send','line_number':337,'multiline':False]['text':' CUDA-related RPC request to this process before user code in this','line_number':338,'multiline':False]['text':' process initializes its PyTorch CUDA states.','line_number':339,'multiline':False]['text':' TODO: add try-except and destroy _agent in all processes if any fails.','line_number':342,'multiline':False]['text':' Run one dummy round of RPC to initialize channels/transports. Without','line_number':355,'multiline':False]['text':' this, it's easy to hit timeout in rpc.shutdown() if there is no other RPC','line_number':356,'multiline':False]['text':' on that process before rpc.shutdown(), as the agent initialization can','line_number':357,'multiline':False]['text':' take longer than 5s.','line_number':358,'multiline':False]['text':' Need a barrier here to make sure no peers leave before the rank0 finishes','line_number':360,'multiline':False]['text':' _all_gather','line_number':361,'multiline':False]['text':' initialization for dynamic rpc (ranks can join and leave)','line_number':365,'multiline':False]['text':' Construct TPAgent with empty reverse_device_map and devices','line_number':368,'multiline':False]['text':' these properties will be updated after initialization','line_number':369,'multiline':False]['text':' Notify all workers in group this rank has joined and set devices and reverse_device_map','line_number':382,'multiline':False]['text':' This is a synchronous operation that completes once all existing ranks are updated','line_number':383,'multiline':False]