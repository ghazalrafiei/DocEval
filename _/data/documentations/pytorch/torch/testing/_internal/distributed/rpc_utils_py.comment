['text':'!/usr/bin/env python3','line_number':1,'multiline':False]['text':' if we are running with TCP init, set main address and port','line_number':62,'multiline':False]['text':' before spawning subprocesses, since different processes could find','line_number':63,'multiline':False]['text':' different ports.','line_number':64,'multiline':False]['text':' The tests for the RPC module need to cover multiple possible combinations:','line_number':76,'multiline':False]['text':' - different aspects of the API, each one having its own suite of tests;','line_number':77,'multiline':False]['text':' - different agents (ProcessGroup, TensorPipe, ...);','line_number':78,'multiline':False]['text':' To avoid a combinatorial explosion in code size, and to prevent forgetting to','line_number':79,'multiline':False]['text':' add a combination, these are generated automatically by the code in this file.','line_number':80,'multiline':False]['text':' Here, we collect all the test suites that we need to cover.','line_number':81,'multiline':False]['text':' We then have one separate file for each agent, from which','line_number':82,'multiline':False]['text':' we call the generate_tests function of this file, passing to it a fixture for','line_number':83,'multiline':False]['text':' the agent, which then gets mixed-in with each test suite.','line_number':84,'multiline':False]['text':' This list contains test suites that are agent-agnostic and that only verify','line_number':100,'multiline':False]['text':' compliance with the generic RPC interface specification. These tests should','line_number':101,'multiline':False]['text':' *not* make use of implementation details of a specific agent (options,','line_number':102,'multiline':False]['text':' attributes, ...). These test suites will be instantiated multiple times, once','line_number':103,'multiline':False]['text':' for each agent (except the faulty agent, which is special).','line_number':104,'multiline':False]['text':' This list contains test suites that will only be run on the TensorPipeAgent.','line_number':127,'multiline':False]['text':' These suites should be standalone, and separate from the ones in the generic','line_number':128,'multiline':False]['text':' list (not subclasses of those!).','line_number':129,'multiline':False]['text':' This list contains test suites that will only be run on the faulty RPC agent.','line_number':140,'multiline':False]['text':' That agent is special as it's only used to perform fault injection in order to','line_number':141,'multiline':False]['text':' verify the error handling behavior. Thus the faulty agent will only run the','line_number':142,'multiline':False]['text':' suites in this list, which were designed to test such behaviors, and not the','line_number':143,'multiline':False]['text':' ones in the generic list.','line_number':144,'multiline':False]