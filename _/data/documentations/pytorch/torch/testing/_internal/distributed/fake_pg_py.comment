['text':' NOTE: in general it's not good form to try to make FakePG work with 'real data',','line_number':48,'multiline':False]['text':' but the reasoning here is that we want FakePG to work with DeviceMesh's init','line_number':49,'multiline':False]['text':' code that have the data validation, which makes it worth the tradeoff.','line_number':50,'multiline':False]['text':' In general user should use MTPG or normal PG for cases where they may care about','line_number':51,'multiline':False]['text':' real data from collectives','line_number':52,'multiline':False]['text':' assume each rank have the same input tensor so we just copy to the results','line_number':61,'multiline':False]['text':' since it's not a real allgather, we simply make this copying logic to let','line_number':62,'multiline':False]['text':' some simple validation works (i.e. calling allgather to see if each rank have','line_number':63,'multiline':False]['text':' the same tensor or not)','line_number':64,'multiline':False]['text':' NOTE: in general it's not good form to try to make FakePG work with 'real data',','line_number':65,'multiline':False]['text':' but the reasoning here is that we want FakePG to work with DeviceMesh's init','line_number':66,'multiline':False]['text':' code that have the data validation, which makes it worth the tradeoff.','line_number':67,'multiline':False]['text':' In general user should use MTPG or normal PG for cases where they may care about','line_number':68,'multiline':False]['text':' real data from collectives','line_number':69,'multiline':False]['text':' it should be no-op for fake pg','line_number':79,'multiline':False]