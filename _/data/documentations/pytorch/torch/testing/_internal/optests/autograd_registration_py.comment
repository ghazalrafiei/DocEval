['text':' Implementation details','line_number':47,'multiline':False]['text':' -----------------------------------------------','line_number':48,'multiline':False]['text':' If an operator doesn't have an autograd kernel at an autograd key,','line_number':49,'multiline':False]['text':' and the operator does not return inputs as-is, then all of','line_number':50,'multiline':False]['text':' the outputs should have requires_grad=False before we apply','line_number':51,'multiline':False]['text':' special behaviors of our default autograd fallback.','line_number':52,'multiline':False]['text':' (The default autograd fallback may set requires_grad=True on output','line_number':53,'multiline':False]['text':' tensors in certain modes so that when they are backpropped through,','line_number':54,'multiline':False]['text':' they raise an error).','line_number':55,'multiline':False]['text':'','line_number':56,'multiline':False]['text':' Our strategy for detecting if an operator doesn't have an autograd','line_number':57,'multiline':False]['text':' kernel at the autograd key is:','line_number':58,'multiline':False]['text':' - set the autograd fallback mode to "nothing" (so it does not change','line_number':59,'multiline':False]['text':'   the required-gradness of outputs)','line_number':60,'multiline':False]['text':' - run the operator','line_number':61,'multiline':False]['text':' - Check if any outputs of the operator (that are not inputs) require','line_number':62,'multiline':False]['text':'   grad. This would only happen if the user calls regular PyTorch','line_number':63,'multiline':False]['text':'   operations in their backend key (this op should instead be','line_number':64,'multiline':False]['text':'   CompositeImplicitAutograd or not an op) or if the user invokes','line_number':65,'multiline':False]['text':'   an autograd.Function in the backend key.','line_number':66,'multiline':False]['text':'','line_number':67,'multiline':False]['text':' Note that it's already likely a bug if the operator directly returns','line_number':68,'multiline':False]['text':' an input as output (because custom ops don't have a good way of','line_number':69,'multiline':False]['text':' constructing true in-place or out variants), but we defer that','line_number':70,'multiline':False]['text':' responsibility to a different test (schema_check).','line_number':71,'multiline':False]['text':' Determine which AutogradBACKEND key to check','line_number':82,'multiline':False]['text':' Don't want to support other keys yet','line_number':85,'multiline':False]['text':' At this point, we know the operator doesn't have a kernel registered to an','line_number':103,'multiline':False]['text':' autograd key. Let's proceed with our test.','line_number':104,'multiline':False]