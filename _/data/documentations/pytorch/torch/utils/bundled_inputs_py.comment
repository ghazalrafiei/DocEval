['text':'!/usr/bin/env python3','line_number':1,'multiline':False]['text':' type: ignore[attr-defined]','line_number':110,'multiline':False]['text':' The above cloning function returns a torch._C.scriptmodule and we need a torch.jit.scriptmodule.','line_number':116,'multiline':False]['text':' Fortunately theres a function in _recursive that does exactly that conversion.','line_number':117,'multiline':False]['text':' For debugging.','line_number':130,'multiline':False]['text':' Optional argument to provide info about forward or its inputs','line_number':131,'multiline':False]['text':' Sometimes forward won't have a name attached so just in case','line_number':169,'multiline':False]['text':' For debugging.','line_number':184,'multiline':False]['text':' Optional argument to provide info about the function or its inputs','line_number':185,'multiline':False]['text':' type: ignore[attr-defined]','line_number':258,'multiline':False]['text':' type: ignore[attr-defined]','line_number':267,'multiline':False]['text':' Model author already defined _generate_bundled_inputs_for_<function_name>.','line_number':278,'multiline':False]['text':' Iterate over the inputs and args in each input.','line_number':286,'multiline':False]['text':' Accumulate `deflated_inputs` as (possibly) compressed values','line_number':287,'multiline':False]['text':' and `parts` to be joined into the expression that unpacks them.','line_number':288,'multiline':False]['text':' type: ignore[arg-type]','line_number':292,'multiline':False]['text':' Back-channel return this expr for debugging.','line_number':315,'multiline':False]['text':' Define get_all_bundled_inputs_for_<function_name> that caches the generated inputs.','line_number':328,'multiline':False]['text':' Add to the high level helper methods','line_number':336,'multiline':False]['text':' To ensure backwards compatibility and a streamlined api for forward these wrappers are provided','line_number':347,'multiline':False]['text':' Define some high level helper methods that act on all bundled inputs','line_number':358,'multiline':False]['text':' Allow custom inflation expressions any object.','line_number':369,'multiline':False]['text':' For example, calling custom image-decoding ops.','line_number':370,'multiline':False]['text':' Or just use "{}" as the format string to ignore size limits.','line_number':371,'multiline':False]['text':' Small-storage tensors can just be saved directly.','line_number':391,'multiline':False]['text':' Small contiguous tensors can be cloned to have small storage.','line_number':394,'multiline':False]['text':' TODO: Should we do this even for non-contiguous tensors?','line_number':395,'multiline':False]['text':' Example inputs commonly come from torch.zeros, torch.ones, or torch.full.','line_number':398,'multiline':False]['text':' These can be represented compactly.','line_number':399,'multiline':False]['text':' Prevent big tensors from being bundled by default.','line_number':404,'multiline':False]['text':' TODO: Provide more useful diagnostics.','line_number':405,'multiline':False]['text':' Has bundled inputs for forward','line_number':418,'multiline':False]['text':' Check inflate helper functions for each function, argument and bundled input','line_number':438,'multiline':False]['text':' if the arg has an InflatableArg with fmt_fn, add the helper function name','line_number':447,'multiline':False]