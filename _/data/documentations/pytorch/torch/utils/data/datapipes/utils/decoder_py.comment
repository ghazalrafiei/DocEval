['text':' This file takes partial of the implementation from NVIDIA's webdataset at here:','line_number':1,'multiline':False]['text':' https://github.com/tmbdev/webdataset/blob/master/webdataset/autodecode.py','line_number':2,'multiline':False]['text':'###############################################################','line_number':28,'multiline':False]['text':' handle basic datatypes','line_number':29,'multiline':False]['text':'###############################################################','line_number':30,'multiline':False]['text':' if extension in "ten tb".split():','line_number':52,'multiline':False]['text':'     from . import tenbin','line_number':53,'multiline':False]['text':'     return tenbin.decode_buffer(data)','line_number':54,'multiline':False]['text':' if extension in "mp msgpack msg".split():','line_number':56,'multiline':False]['text':'     import msgpack','line_number':57,'multiline':False]['text':'     return msgpack.unpackb(data)','line_number':58,'multiline':False]['text':'###############################################################','line_number':63,'multiline':False]['text':' handle images','line_number':64,'multiline':False]['text':'###############################################################','line_number':65,'multiline':False]['text':'###############################################################','line_number':193,'multiline':False]['text':' torch video','line_number':194,'multiline':False]['text':'###############################################################','line_number':195,'multiline':False]['text':'###############################################################','line_number':214,'multiline':False]['text':' torchaudio','line_number':215,'multiline':False]['text':'###############################################################','line_number':216,'multiline':False]['text':' type: ignore[import]','line_number':222,'multiline':False]['text':'###############################################################','line_number':235,'multiline':False]['text':' mat','line_number':236,'multiline':False]['text':'###############################################################','line_number':237,'multiline':False]['text':'###############################################################','line_number':259,'multiline':False]['text':' a sample decoder','line_number':260,'multiline':False]['text':'###############################################################','line_number':261,'multiline':False]['text':' Extract extension from pathname','line_number':262,'multiline':False]['text':' Remove dot','line_number':265,'multiline':False]['text':' Insert new handler from the beginning of handlers list to make sure the new','line_number':283,'multiline':False]['text':' handler having the highest priority','line_number':284,'multiline':False]['text':' if data is a stream handle, we need to read all the content before decoding','line_number':299,'multiline':False]['text':' The behavior of .read can differ between streams (e.g. HTTPResponse), hence this is used instead','line_number':302,'multiline':False]['text':' single data tuple(pathname, data stream)','line_number':314,'multiline':False]['text':' TODO: xinyu, figure out why Nvidia do this?','line_number':320,'multiline':False]