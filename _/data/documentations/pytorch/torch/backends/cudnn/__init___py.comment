['text':' type: ignore[assignment]','line_number':12,'multiline':False]['text':' Write:','line_number':14,'multiline':False]['text':'','line_number':15,'multiline':False]['text':'   torch.backends.cudnn.enabled = False','line_number':16,'multiline':False]['text':'','line_number':17,'multiline':False]['text':' to globally disable CuDNN/MIOpen','line_number':18,'multiline':False]['text':' Different major versions are always incompatible','line_number':32,'multiline':False]['text':' Starting with cuDNN 7, minor versions are backwards-compatible','line_number':33,'multiline':False]['text':' Not sure about MIOpen (ROCm), so always do a strict check','line_number':34,'multiline':False]['text':' recover the previous values','line_number':164,'multiline':False]['text':' The magic here is to allow us to intercept code like this:','line_number':169,'multiline':False]['text':'','line_number':170,'multiline':False]['text':'   torch.backends.<cudnn|mkldnn>.enabled = True','line_number':171,'multiline':False]['text':' This is the sys.modules replacement trick, see','line_number':196,'multiline':False]['text':' https://stackoverflow.com/questions/2447353/getattr-on-a-module/7668273#7668273','line_number':197,'multiline':False]['text':' Add type annotation for the replaced module','line_number':200,'multiline':False]