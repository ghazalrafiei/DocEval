['text':' this arbitrary-looking assortment of functionality is provided here','line_number':12,'multiline':False]['text':' to have a central place for overrideable behavior. The motivating','line_number':13,'multiline':False]['text':' use is the FB build environment, where this source file is replaced','line_number':14,'multiline':False]['text':' by an equivalent.','line_number':15,'multiline':False]['text':' __file__ is meaningless in the context of frozen torch used in torch deploy.','line_number':18,'multiline':False]['text':' setting empty torch_parent should allow below functions to operate without crashing,','line_number':19,'multiline':False]['text':' but it's unclear if there is a valid use case for them in the context of deploy.','line_number':20,'multiline':False]['text':' Meta only, see','line_number':64,'multiline':False]['text':' https://www.internalfb.com/intern/wiki/ML_Workflow_Observability/User_Guides/Adding_instrumentation_to_your_code/','line_number':65,'multiline':False]['text':'','line_number':66,'multiline':False]['text':' This will cause an event to get logged to Scuba via the signposts API.  You','line_number':67,'multiline':False]['text':' can view samples on the API at https://fburl.com/scuba/workflow_signpost/zh9wmpqs','line_number':68,'multiline':False]['text':' we log to subsystem "torch", and the category and name you provide here.','line_number':69,'multiline':False]['text':' Each of the arguments translate into a Scuba column.  We're still figuring','line_number':70,'multiline':False]['text':' out local conventions in PyTorch, but category should be something like','line_number':71,'multiline':False]['text':' "dynamo" or "inductor", and name should be a specific string describing what','line_number':72,'multiline':False]['text':' kind of event happened.','line_number':73,'multiline':False]['text':'','line_number':74,'multiline':False]['text':' Killswitch is at','line_number':75,'multiline':False]['text':' https://www.internalfb.com/intern/justknobs/?name=pytorch%2Fsignpost#event','line_number':76,'multiline':False]['text':' USE_GLOBAL_DEPS controls whether __init__.py tries to load','line_number':91,'multiline':False]['text':' libtorch_global_deps, see Note [Global dependencies]','line_number':92,'multiline':False]['text':' USE_RTLD_GLOBAL_WITH_LIBTORCH controls whether __init__.py tries to load','line_number':94,'multiline':False]['text':' _C.so with RTLD_GLOBAL during the call to dlopen.','line_number':95,'multiline':False]