['text':' If the event being profiled is not a Python function','line_number':22,'multiline':False]['text':' call, there is nothing to do.','line_number':23,'multiline':False]['text':' This is the name of the function that was called.','line_number':27,'multiline':False]['text':' Try to determine the name of the module that the function','line_number':31,'multiline':False]['text':' is in:','line_number':32,'multiline':False]['text':'   1) Check the global namespace of the frame.','line_number':33,'multiline':False]['text':'   2) Check the local namespace of the frame.','line_number':34,'multiline':False]['text':'   3) To handle class instance method calls, check','line_number':35,'multiline':False]['text':'       the attribute named 'name' of the object','line_number':36,'multiline':False]['text':'       in the local namespace corresponding to "self".','line_number':37,'multiline':False]['text':' If a module was found, add it to the set of used modules.','line_number':46,'multiline':False]['text':' Attach record_used_modules as the profiler function.','line_number':51,'multiline':False]['text':' Execute the callable with all inputs.','line_number':54,'multiline':False]['text':' Detach the profiler function.','line_number':59,'multiline':False]