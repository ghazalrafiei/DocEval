['text':' assumptions: nodes in candidate list is sorted in topological order','line_number':59,'multiline':False]['text':' mapping from node to partition_id','line_number':60,'multiline':False]['text':' mapping from partition_id to partition','line_number':61,'multiline':False]['text':' try to merge partition other_id into partition self_id','line_number':64,'multiline':False]['text':' merge only happens if the end graph doesn't contain cyclic dependency','line_number':65,'multiline':False]['text':' returns `True` when merge happens, `False` otherwise.','line_number':66,'multiline':False]['text':' merged_nodes is the union of nodes in two partition to-be-merged','line_number':68,'multiline':False]['text':' Note it's ok to use `set` here, since we are only query if a node','line_number':72,'multiline':False]['text':' has been visited. We are NEVER going to iterate on nodes inside','line_number':73,'multiline':False]['text':' the set.','line_number':74,'multiline':False]['text':' found cycle, return','line_number':87,'multiline':False]['text':' branching on hitting partition or not','line_number':89,'multiline':False]['text':' Since partition is not merged in the graph yet, when we','line_number':91,'multiline':False]['text':' hit a node in a partition through DFS, we need to','line_number':92,'multiline':False]['text':' traverse all nodes in the partition to properly reflect','line_number':93,'multiline':False]['text':' dependencies after the fusion','line_number':94,'multiline':False]['text':' check if merge would create cyclic dependency.','line_number':107,'multiline':False]['text':' return false indicating cyclic dependency found and','line_number':111,'multiline':False]['text':' merge is aborted','line_number':112,'multiline':False]['text':' no cyclic dependency found, move forward with the merge','line_number':115,'multiline':False]['text':' updating partition nodes','line_number':116,'multiline':False]['text':' updating assignment map','line_number':118,'multiline':False]['text':' delete other partition','line_number':121,'multiline':False]['text':' use Dict as an ordered set to ensure deterministic partitioning result, don't care value','line_number':142,'multiline':False]['text':' Note a limited horizontal fusion is enabled:','line_number':145,'multiline':False]['text':'   when `node` is not supported, the code below attempts to fuse consumer of `node`.','line_number':146,'multiline':False]['text':'','line_number':147,'multiline':False]['text':' I don't see a need to add a knob to disable horizontal fusion yet, we can short-cut','line_number':148,'multiline':False]['text':' the fusion by adding an `else` block here to skip horizontal fusion.','line_number':149,'multiline':False]['text':' merge all possible partitions','line_number':155,'multiline':False]['text':' note: merge partition `other_id` into partition `self_id` if','line_number':163,'multiline':False]['text':' it doesn't create cyclic dependency in the graph, otherwise,','line_number':164,'multiline':False]['text':' this is a no-op','line_number':165,'multiline':False]['text':' post processing to re-assign "getitem" nodes into upstream partition','line_number':168,'multiline':False]['text':' type: ignore[arg-type]','line_number':175,'multiline':False]['text':' node has tuple outputs, re-assign all following getitem node into node's partition','line_number':179,'multiline':False]['text':' type: ignore[arg-type]','line_number':181,'multiline':False]['text':' type: ignore[arg-type]','line_number':183,'multiline':False]['text':' type: ignore[assignment]','line_number':184,'multiline':False]['text':' filter out single node partitions','line_number':188,'multiline':False]['text':' fuse_by_partitions expects partitions in List[List[Node]]: [ [node0, node1], [node2, node3] ]','line_number':216,'multiline':False]['text':' remove non-compute-ops that sits at the boundary of a partition.','line_number':219,'multiline':False]['text':' type: ignore[arg-type]','line_number':225,'multiline':False]['text':' cache transparent nodes','line_number':227,'multiline':False]['text':' Note it's ok to use `set` here, since we are only query if a node','line_number':262,'multiline':False]['text':' has been removed. We are NEVER going to iterate on nodes inside','line_number':263,'multiline':False]['text':' the set.','line_number':264,'multiline':False]