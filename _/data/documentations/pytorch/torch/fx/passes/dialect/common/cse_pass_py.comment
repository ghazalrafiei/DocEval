['text':' stateful ops are banned from CSE','line_number':13,'multiline':False]['text':' noqa: E501,B950','line_number':14,'multiline':False]['text':' noqa: E501','line_number':16,'multiline':False]['text':' map from node in the old graph to node in the new graph','line_number':67,'multiline':False]['text':' map from hash to a node in the new graph','line_number':68,'multiline':False]['text':' map from hash to token','line_number':69,'multiline':False]['text':' The placeholder, output, and get_attr nodes are copied to the new graph without change','line_number':71,'multiline':False]['text':' do not CSE away random operations','line_number':72,'multiline':False]['text':' n.op == 'call_function', should never see n.op == 'call_module' or 'call_method'','line_number':76,'multiline':False]['text':' substitute args and kwargs members to their mapping in env if exists','line_number':77,'multiline':False]['text':' specs can be used to reconstruct nested list/dictionaries','line_number':78,'multiline':False]['text':' each token corresponds to a unique node','line_number':89,'multiline':False]['text':' nodes with the same token can be substituted','line_number':90,'multiline':False]['text':' hash substituted args to a number, do not hash specs because specs are not hashable','line_number':94,'multiline':False]['text':' check if a node has a substitute and can be eliminated','line_number':98,'multiline':False]['text':' substitution happens and the graph is modified','line_number':101,'multiline':False]