['text':' Normalize the source lines','line_number':26,'multiline':False]['text':' Rewrite the original AST','line_number':32,'multiline':False]['text':' Pull out the compiled function from the newly-created Module','line_number':36,'multiline':False]['text':' return the compiled function with the original globals','line_number':45,'multiline':False]['text':' __globals__ is a private member of the function class','line_number':48,'multiline':False]['text':' so we have to copy the function, f, all of its member, except f.__globals__','line_number':49,'multiline':False]['text':' Return the correct FunctionType object','line_number':60,'multiline':False]['text':' Create the Call node','line_number':68,'multiline':False]['text':' Ensure that the new node conforms to the Python AST grammar','line_number':76,'multiline':False]['text':' Return the new Call node to signify that we want to use it as','line_number':79,'multiline':False]['text':' a replacement for the original _assert node','line_number':80,'multiline':False]['text':' Rewrite this module's `forward` as well as the `forward`s of','line_number':104,'multiline':False]['text':' all of this module's recursive descendents. Return the new,','line_number':105,'multiline':False]['text':' rewritten module hierarchy.','line_number':106,'multiline':False]['text':' Rewrite this single free function','line_number':120,'multiline':False]