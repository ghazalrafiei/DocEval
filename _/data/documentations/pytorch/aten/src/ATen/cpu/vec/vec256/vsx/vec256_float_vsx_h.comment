['text':' See Note [CPU_CAPABILITY namespace]','line_number':9,'multiline':False]['text':' generated masks','line_number':105,'multiline':False]['text':' generated masks','line_number':113,'multiline':False]['text':' the mask used here returned by comparision of vec256','line_number':131,'multiline':False]['text':' assuming this we can use the same mask directly with vec_sel','line_number':132,'multiline':False]['text':' returns an integer mask where all zero elements are translated to 1-bit','line_number':243,'multiline':False]['text':' and others are translated to 0-bit','line_number':244,'multiline':False]['text':'__m256 cmp = _mm256_cmp_ps(values, _mm256_set1_ps(0.0f), _CMP_EQ_OQ);','line_number':245,'multiline':False]['text':' return _mm256_movemask_ps(cmp);','line_number':247,'multiline':False]['text':' possible simulation  //mask= lvsl ( 0 ) vbpermq( vec, mask <<5)','line_number':248,'multiline':False]['text':' namespace','line_number':450,'multiline':False]['text':' namespace vec','line_number':451,'multiline':False]['text':' namespace at','line_number':452,'multiline':False]