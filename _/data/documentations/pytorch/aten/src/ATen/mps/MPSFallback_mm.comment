['text':'  Copyright Â© 2022 Apple Inc.','line_number':1,'multiline':False]['text':' only do profiling if CPU Fallback op execution tracing or logging is enabled','line_number':18,'multiline':False]['text':' we create a Tensors list to compute the size of copies required to convert','line_number':20,'multiline':False]['text':' the input MPS tensors to CPU, and the CPU results back to MPS','line_number':21,'multiline':False]['text':' TODO: check if any returns exist at this stage','line_number':28,'multiline':False]['text':' This dispatch should never be called for tensor on MPS but is frequently called','line_number':57,'multiline':False]['text':' If one of them are on CPU','line_number':58,'multiline':False]['text':' These ops are not supported via MPS backend currently, and we fallback to run on CPU.','line_number':85,'multiline':False]['text':' For the rest of unsupported ops the user needs to pass 'PYTORCH_ENABLE_MPS_FALLBACK=1'','line_number':86,'multiline':False]['text':' to fallback on CPU, otherwise we will error out.','line_number':87,'multiline':False]['text':' Used in  preprocessing by nn.Unfold','line_number':93,'multiline':False]['text':' namespace at','line_number':99,'multiline':False]