['text':'  Copyright Â© 2022 Apple Inc.','line_number':1,'multiline':False]['text':' these need to be literal strings when passed to os_signpost*()','line_number':7,'multiline':False]['text':' function macros; so no LUTs could be used','line_number':8,'multiline':False]['text':' the gpuTime will be non-zero mainly for event-based signposts.','line_number':25,'multiline':False]['text':' The interval-based signposts will have "duration" as well as accumulated','line_number':26,'multiline':False]['text':' total GPU time, up to the point of execution.','line_number':27,'multiline':False]['text':' Copies could be using Blit Encoder, or using regular','line_number':53,'multiline':False]['text':' memcpy() on Unified memory','line_number':54,'multiline':False]['text':' CopySync indicates COMMIT_AND_WAIT was used to synchronize','line_number':56,'multiline':False]['text':' the GPU stream with CPU after the blocking copy','line_number':57,'multiline':False]['text':' if tensor is not defined (e.g., copy_blit_mps()), then use buffer','line_number':69,'multiline':False]['text':' pointer to build the string.','line_number':70,'multiline':False]['text':' see enum LogOptions for the description.','line_number':76,'multiline':False]['text':' see enums profilerOptions and SignpostTypes for the description.','line_number':79,'multiline':False]['text':' lower 16 bits used for options (see enum ProfileOptions)','line_number':88,'multiline':False]['text':' upper 16 bits used for signpost types (see enum SignpostTypes)','line_number':95,'multiline':False]['text':' first make sure completion handlers are completed','line_number':109,'multiline':False]['text':' enable all signposts types','line_number':133,'multiline':False]['text':' if no signpost options passed, use interval mode by default','line_number':149,'multiline':False]['text':' technically, it's possible to trace both events and intervals at the same time','line_number':159,'multiline':False]['text':' include GPU time in metadata for event-based intervals by default, since','line_number':165,'multiline':False]['text':' events are marked in Metal Completion Handlers which outputs GPU time','line_number':166,'multiline':False]['text':' used to capture sigint signal to log profiling stats','line_number':185,'multiline':False]['text':' see comments in isProfileInfoLoggingEnabled()','line_number':228,'multiline':False]['text':'isExecutionEnded','line_number':229,'multiline':True]['text':' if scheduling part is included, we begin the interval early in here,','line_number':241,'multiline':False]['text':' otherwise we begin when the scheduledHandler callback is triggered.','line_number':242,'multiline':False]['text':' for graphs, we add the scheduleHandler in beginProfileGPUInterval()','line_number':246,'multiline':False]['text':' if Kernel time is not included in metadata separately, we add it to gpuTime in metadata','line_number':266,'multiline':False]['text':' see comments in isProfileInfoLoggingEnabled()','line_number':272,'multiline':False]['text':'isExecutionEnded','line_number':273,'multiline':True]['text':' it is possible to use both interval and event based signposts at the same time','line_number':276,'multiline':False]['text':' GPU time for signpost intervals is calculated based on its duration','line_number':280,'multiline':False]['text':' only do profiling if operation execution profiling or logging are enabled','line_number':288,'multiline':False]['text':' this function is only relevant for interval-based Signposts which exclude','line_number':315,'multiline':False]['text':' schedule time (only includes GPU run time)','line_number':316,'multiline':False]['text':' this begins the interval when scheduling the execution is','line_number':323,'multiline':False]['text':' completed already (i.e., scheduling excluded from interval)','line_number':324,'multiline':False]['text':' only do profiling if operation execution profiling or logging are enabled','line_number':329,'multiline':False]['text':' CPU time in ms','line_number':357,'multiline':False]['text':' for copies that don't use blitters, we measure CPU time','line_number':379,'multiline':False]['text':' don't generate signposts if the non-blocking copy is not using the blitter','line_number':382,'multiline':False]['text':' this should not happen since we erase the copy info after profiling/logging it.','line_number':386,'multiline':False]['text':' the copy info isn't retained in the list, so we erase the completed ones','line_number':388,'multiline':False]['text':' this is just an identifier, and not used to access memory','line_number':402,'multiline':False]['text':' NOTE: the following block isn't thread-safe','line_number':418,'multiline':False]['text':' begin the interval once scheduling has completed (if INCLUDE_SCHEDULE_INTERVAL flag is disabled)','line_number':420,'multiline':False]['text':' signpost ID is used only for interval-based signposts, and must be non-zero','line_number':447,'multiline':False]['text':' reset signpostIds for sanity check on next call','line_number':451,'multiline':False]['text':' NOTE: the following block isn't thread-safe','line_number':457,'multiline':False]['text':' this is not an error, but to let the user know that the','line_number':473,'multiline':False]['text':' LogOptions::KERNEL_STATS that they passed to EV is not yielding anything.','line_number':474,'multiline':False]['text':' dump the ops info into a vector to sort them','line_number':478,'multiline':False]['text':' sort based on "Mean GPU time" in descending order','line_number':484,'multiline':False]['text':' print the table of operation profiling stats','line_number':488,'multiline':False]['text':' this is not an error, but to let the user know that the','line_number':514,'multiline':False]['text':' LogOptions::KERNEL_STATS that they passed to EV is not yielding anything.','line_number':515,'multiline':False]['text':' dump the map's info into a vector to sort them','line_number':522,'multiline':False]['text':' sort based on "Mean CPU time" in descending order','line_number':533,'multiline':False]['text':' print the table of CPU Fallback profiling stats','line_number':538,'multiline':False]['text':' this is not an error, but to let the user know that the','line_number':577,'multiline':False]['text':' LogOptions::COPY_STATS that they passed to EV is not yielding anything.','line_number':578,'multiline':False]['text':' print the table of copy profiling stats','line_number':583,'multiline':False]['text':' logs kernel profiling stats when the process ends (if enabled).','line_number':627,'multiline':False]['text':' logs CPU Fallback profiling stats when the process ends (if enabled).','line_number':631,'multiline':False]['text':' logs copies profiling stats when the process ends (if enabled).','line_number':635,'multiline':False]['text':' logging the operations, copies, cpu fallbacks info during the execution','line_number':643,'multiline':False]['text':' is enabled via the env-var defined in kEVLogProfileInfoStr','line_number':644,'multiline':False]['text':' if GPU/Kernel times are included then log info when op execution ends','line_number':662,'multiline':False]['text':' need to use switch-case as the signpost names must be literal strings','line_number':676,'multiline':False]['text':' used to capture sigint signal to log profiling stats','line_number':764,'multiline':False]['text':' namespace Profiler','line_number':768,'multiline':False]['text':' namespace at::mps','line_number':778,'multiline':False]