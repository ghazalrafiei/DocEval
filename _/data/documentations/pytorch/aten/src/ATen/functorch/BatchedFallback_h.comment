['text':' Copyright (c) Facebook, Inc. and its affiliates.','line_number':1,'multiline':False]['text':' All rights reserved.','line_number':2,'multiline':False]['text':'','line_number':3,'multiline':False]['text':' This source code is licensed under the BSD-style license found in the','line_number':4,'multiline':False]['text':' LICENSE file in the root directory of this source tree.','line_number':5,'multiline':False]['text':' This file contains code for the vmap fallback (also known as the','line_number':14,'multiline':False]['text':' BatchedTensor fallback or the Batched fallback). This code runs','line_number':15,'multiline':False]['text':' when an operation doesn't have a batching rule implemented.','line_number':16,'multiline':False]['text':' If an operator doesn't have a batching rule implemented then we fallback','line_number':18,'multiline':False]['text':' to this implementation. The fallback doesn't work on out= variants or','line_number':19,'multiline':False]['text':' view operations; that is, it works for out-of-place operations and','line_number':20,'multiline':False]['text':' in-place non-view operations.','line_number':21,'multiline':False]['text':'','line_number':22,'multiline':False]['text':' For out-of-place operations, the fallback effectively takes all of the','line_number':23,'multiline':False]['text':' BatchedTensors in `stack`, slices them, and runs `op` on all of the','line_number':24,'multiline':False]['text':' corresponding slices to produce slices of the outputs. The output slices','line_number':25,'multiline':False]['text':' then get `torch.stack`ed to create the','line_number':26,'multiline':False]['text':' final returns.','line_number':27,'multiline':False]['text':'','line_number':28,'multiline':False]['text':' The performance of the fallback is not very good because it introduces an','line_number':29,'multiline':False]['text':' extra copy from stacking the sliced outputs. Because of this, we prefer to','line_number':30,'multiline':False]['text':' write batching rules for operators whenever possible.','line_number':31,'multiline':False]['text':' The vmap fallback emits a warning by default, but it may be disabled if','line_number':37,'multiline':False]['text':' the user finds it to be too annoying.','line_number':38,'multiline':False]['text':' Used for testing. The vmap fallback is enabled by default. When it is disabled,','line_number':42,'multiline':False]['text':' it raises an error.','line_number':43,'multiline':False]['text':' slow_fallback is a way to call the vmap fallback inside some boxed kernel.','line_number':57,'multiline':False]['text':' There is probably some better way to metaprogram this.','line_number':58,'multiline':False]['text':' namespace at::functorch','line_number':81,'multiline':False]