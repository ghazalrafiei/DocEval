['text':' TODO Undo all logic introduced for Note [Avoiding Include Cycles In Static Dispatch]','line_number':3,'multiline':False]['text':' Code introduced to avoid cyclic dependency in static dispatch is no longer','line_number':4,'multiline':False]['text':' needed as static dispatch logic is moved from TensorBody.h, which caused cycles in the first place,','line_number':5,'multiline':False]['text':' to Operators.cpp for supporting multiple backends with multiple kernels.','line_number':6,'multiline':False]['text':'','line_number':7,'multiline':False]['text':' Note [Avoiding Include Cycles In Static Dispatch]','line_number':8,'multiline':False]['text':' In order to avoid #include cycles in the static dispatch build, we've carefully split out','line_number':9,'multiline':False]['text':' the static function definition files into {DispatchKey}Functions.h and {DispatchKey}Functions_inl.h.','line_number':10,'multiline':False]['text':'','line_number':11,'multiline':False]['text':' Without this split, the include cycle looks like TensorBody.h -> CPUFunctions.h -> TensorBody.h.','line_number':12,'multiline':False]['text':' - TensorBody.h #includes CPUFunctions.h in the static dispatch build, because the tensor methods','line_number':13,'multiline':False]['text':'   all need to call into the fastpath C++ API defined in CPUFunctions.h. The methods are also all','line_number':14,'multiline':False]['text':'   directly inlined into TensorBody.h.','line_number':15,'multiline':False]['text':' - CPUFunctions.h #includes TensorBody.h because it contains function declarations for the entire C++ API,','line_number':16,'multiline':False]['text':'   which include functions that have defaultable optional<Tensor> arguments.','line_number':17,'multiline':False]['text':'   That requires knowing the full Tensor class definition.','line_number':18,'multiline':False]['text':'','line_number':19,'multiline':False]['text':' We break the cycle by doing the following:','line_number':20,'multiline':False]['text':' - Split out CPUFunction.h into two files: CPUFunctions.h and CPUFunctions_inl.h','line_number':21,'multiline':False]['text':' - CPUFunction.h is a dummy file that just includes the Tensor class and includes CPUFunctions_inl.,','line_number':22,'multiline':False]['text':' - CPUFunctions_inl.h includes everything else','line_number':23,'multiline':False]['text':' - (only in the static dispatch build) TensorBody.h makes sure to finish defining the Tensor class,','line_number':24,'multiline':False]['text':'   and then it includes CPUFunctions_inl.h.','line_number':25,'multiline':False]['text':' - All other files that want the cpu fastpath functions can include CPUFunctions.h directly.','line_number':26,'multiline':False]['text':' - This also means that static dispatch build, CPUFunctions.h only needs to','line_number':27,'multiline':False]['text':'   #include TensorBody.h, and it will automatically bring in CPUFunctions_inl.h.','line_number':28,'multiline':False]