['text':'*
 * Helper function that asserts call to uniform_ starts from the correct
 * philox offset.
 *   - Get 4 randoms with counter_offset for thread {0,1,2,3} from expected_uniforms
 *     kernel above.
 *   - Now get 4 more randoms from uniform_ (note thread {0,1,2,3} for this call should
 *     start from a counter_offset value)
 *   - the 4 randoms from expected_uniforms kernel and the 4 randoms from the previous call
 *     of uniform_ should match, signifying that the philox offset was
 *     incremented properly and no randoms are being reused from previous calls
 ','line_number':28,'multiline':True]['text':' allocate 4 float on host memory','line_number':40,'multiline':False]['text':' launch kernel to get expected randoms','line_number':44,'multiline':False]['text':' Wait for GPU to finish before accessing on host','line_number':48,'multiline':False]['text':' get 4 new float from uniform_()','line_number':51,'multiline':False]['text':' check randoms from expected_uniforms kernel are equal to the randoms from the second','line_number':55,'multiline':False]['text':' call of uniform_()','line_number':56,'multiline':False]['text':' Free memory','line_number':61,'multiline':False]['text':' Test Description:','line_number':66,'multiline':False]['text':'   In Distributions.cu we mentioned that philox increment','line_number':67,'multiline':False]['text':'   should be at least the number of curand() random numbers used in','line_number':68,'multiline':False]['text':'   each thread. In this test, we make sure that uniform_ correctly','line_number':69,'multiline':False]['text':'   increments philox and doesn't reuse randoms from previous calls','line_number':70,'multiline':False]['text':'   for a small tensor size of 4.','line_number':71,'multiline':False]['text':'    - We check that by first getting 4 randoms from uniform_.','line_number':72,'multiline':False]['text':'      Once we get these 4 randoms, that would mean that philox counter for','line_number':73,'multiline':False]['text':'      thread 0, 1, 2 and 3, was incremented by 4 (check calc_execution_policy','line_number':74,'multiline':False]['text':'      function for details).','line_number':75,'multiline':False]['text':'    - assert the call to uniform_ will start from counter_offset of 4','line_number':76,'multiline':False]['text':' if cuda not available, return','line_number':78,'multiline':False]['text':' manual seed to 123','line_number':81,'multiline':False]['text':' get 4 randoms from uniform_(), philox offset is now incremented to 4 by this call','line_number':84,'multiline':False]['text':' expected uniforms will start from counter offset of 4','line_number':87,'multiline':False]['text':' Test Description:','line_number':92,'multiline':False]['text':'   In Distributions.cu we mentioned that philox increment','line_number':93,'multiline':False]['text':'   should be at least the number of curand() random numbers used in','line_number':94,'multiline':False]['text':'   each thread. In this test, we make sure that uniform_ correctly','line_number':95,'multiline':False]['text':'   increments philox and doesn't reuse randoms from previous calls','line_number':96,'multiline':False]['text':'   for a big size tensor.','line_number':97,'multiline':False]['text':'    - First of all, we come up with what the size of the big tensor','line_number':98,'multiline':False]['text':'      should be for this test. Our goal is to show that when the uniform_','line_number':99,'multiline':False]['text':'      kernel runs at full occupancy (i.e. when the number of elements is','line_number':100,'multiline':False]['text':'      greater the number of threads launched), it hits the unroll loop in','line_number':101,'multiline':False]['text':'      the uniform_ kernel.','line_number':102,'multiline':False]['text':'    - Hence, we set the size of the tensor in this test to be 8 times the','line_number':103,'multiline':False]['text':'      maximum number of threads we can launch. This means that, each thread','line_number':104,'multiline':False]['text':'      will be yielding 8 elements, and as a result, curand_uniform4 will be','line_number':105,'multiline':False]['text':'      called twice and all the 8 elements in a thread will consume all the','line_number':106,'multiline':False]['text':'      float4 from the two calls of curand_uniform4 as a result of the unroll','line_number':107,'multiline':False]['text':'      loop. Therefore, after this call to the uniform_, counter_offset for','line_number':108,'multiline':False]['text':'      the next call to uniform_ will start from 8. This is what we test','line_number':109,'multiline':False]['text':'      next.','line_number':110,'multiline':False]['text':'    - assert that call to uniform_ will start from counter_offset of 8','line_number':111,'multiline':False]['text':' if cuda not available, return','line_number':113,'multiline':False]['text':' manual seed to 123','line_number':116,'multiline':False]['text':' calculate maximum number of threads that can be launched','line_number':119,'multiline':False]['text':' and set the numel to be 8 times that','line_number':120,'multiline':False]['text':' get numel randoms from uniform_(), philox offset is now incremented to 8 by this call','line_number':127,'multiline':False]['text':' expected uniforms will start from counter offset of 8','line_number':130,'multiline':False]['text':' Test Description:','line_number':135,'multiline':False]['text':'   Same concept as TestPhiloxIncrementSmallUniformTensor.','line_number':136,'multiline':False]['text':'   Multinomial increments offset by 4. Tests if uniform starts from the correct offset.','line_number':137,'multiline':False]['text':' if cuda not available, return','line_number':139,'multiline':False]['text':' manual seed to 123','line_number':142,'multiline':False]['text':' get some multinomial samples','line_number':145,'multiline':False]['text':' this will trigger torch.multinomial without replacement','line_number':146,'multiline':False]['text':' which utilizes uniform which increments counter by 4.','line_number':147,'multiline':False]['text':' num_samples in the following call is 4.','line_number':148,'multiline':False]['text':' expected uniforms will start from counter offset of 4','line_number':151,'multiline':False]