['text':' split: test method, namespace give same result','line_number':25,'multiline':False]['text':' test rebuilding with cat','line_number':31,'multiline':False]['text':' chunk: test method, namespace give same result','line_number':35,'multiline':False]['text':' test method, type, namespace give same result','line_number':37,'multiline':False]['text':' test rebuilding with cat','line_number':42,'multiline':False]['text':' helper function for TestStack','line_number':48,'multiline':False]['text':' at::stack','line_number':72,'multiline':False]['text':' at::native::_stack','line_number':83,'multiline':False]['text':' at::native::_stack_cpu','line_number':94,'multiline':False]['text':' size / stride','line_number':106,'multiline':False]['text':' Throw StartsWith("dimension specified as 0 but tensor has no dimensions")','line_number':109,'multiline':False]['text':' NOLINTNEXTLINE(hicpp-avoid-goto,cppcoreguidelines-avoid-goto)','line_number':110,'multiline':False]['text':' Throw StartsWith("dimension specified as -1 but tensor has no dimensions")','line_number':112,'multiline':False]['text':' NOLINTNEXTLINE(hicpp-avoid-goto,cppcoreguidelines-avoid-goto)','line_number':113,'multiline':False]['text':' Throw StartsWith("dimension specified as 0 but tensor has no dimensions")','line_number':115,'multiline':False]['text':' NOLINTNEXTLINE(hicpp-avoid-goto,cppcoreguidelines-avoid-goto)','line_number':116,'multiline':False]['text':' Throw StartsWith("dimension specified as -1 but tensor has no dimensions")','line_number':118,'multiline':False]['text':' NOLINTNEXTLINE(hicpp-avoid-goto,cppcoreguidelines-avoid-goto)','line_number':119,'multiline':False]['text':' 0-d','line_number':134,'multiline':False]['text':' Throw StartsWith("both arguments to matmul need to be at least 1D")','line_number':135,'multiline':False]['text':' NOLINTNEXTLINE(hicpp-avoid-goto,cppcoreguidelines-avoid-goto)','line_number':136,'multiline':False]['text':' Throw StartsWith("both arguments to matmul need to be at least 1D")','line_number':138,'multiline':False]['text':' NOLINTNEXTLINE(hicpp-avoid-goto,cppcoreguidelines-avoid-goto)','line_number':139,'multiline':False]['text':' 1-d','line_number':142,'multiline':False]['text':' 2-d','line_number':148,'multiline':False]['text':' > 2-d, 1-d','line_number':152,'multiline':False]['text':' > 2-d, 2-d','line_number':168,'multiline':False]['text':' we use a "folding" algorithm in this case of matmul, so the direct','line_number':169,'multiline':False]['text':' comparison to bmm doesn't work; instead, compare to the higher precision','line_number':170,'multiline':False]['text':' computation (technically, we should always do this). Tolerances are','line_number':171,'multiline':False]['text':' selected empirically.','line_number':172,'multiline':False]['text':' > 2-d, > 2-d','line_number':189,'multiline':False]['text':' non-expandable case','line_number':198,'multiline':False]['text':' Throw Contains("must match the size")','line_number':200,'multiline':False]['text':' NOLINTNEXTLINE(hicpp-avoid-goto,cppcoreguidelines-avoid-goto)','line_number':201,'multiline':False]['text':' check empty','line_number':206,'multiline':False]['text':' check scalar equals one element','line_number':210,'multiline':False]['text':' check mixing types','line_number':217,'multiline':False]['text':' Throw StartsWith("expected scalar type")','line_number':220,'multiline':False]['text':' NOLINTNEXTLINE(hicpp-avoid-goto,cppcoreguidelines-avoid-goto)','line_number':221,'multiline':False]['text':' empty','line_number':226,'multiline':False]['text':' check scalar equals one element','line_number':232,'multiline':False]