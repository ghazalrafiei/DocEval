['text':' Test IntegerDivider: this tests *all* 32-bit pairs (a, b) where a % b is 0 or','line_number':3,'multiline':False]['text':' (b-1), so it takes a few minutes to run.','line_number':4,'multiline':False]['text':' Number of test cases per each kernel invocation.','line_number':53,'multiline':False]['text':' Maximum number of steps per each test case.','line_number':56,'multiline':False]['text':' Test the magic division algorithm.','line_number':60,'multiline':False]['text':' Append a new IntDivider using 'divisor' if necessary.','line_number':87,'multiline':False]['text':' Append the test case.','line_number':91,'multiline':False]['text':' Launch the test kernel if the buffer is full.','line_number':94,'multiline':False]['text':' In order to save time, we only test when the remainder is zero or','line_number':154,'multiline':False]['text':' (divisor - 1).','line_number':155,'multiline':False]['text':' Check the boundary cases.','line_number':168,'multiline':False]['text':' uint64_t divider uses plain division, so we just check a few random cases.','line_number':178,'multiline':False]['text':' Test small divisor.','line_number':190,'multiline':False]['text':' Create pseudorandom numbers.','line_number':193,'multiline':False]