['text':' avoid mistakenly passing if els code throws exception','line_number':15,'multiline':True]['text':' single-tensor/size tests','line_number':51,'multiline':False]['text':' verify that the dim, sizes, strides, etc match what was requested.','line_number':53,'multiline':False]['text':' verify we can output','line_number':61,'multiline':False]['text':' NOLINTNEXTLINE(hicpp-avoid-goto,cppcoreguidelines-avoid-goto)','line_number':63,'multiline':False]['text':' set_','line_number':66,'multiline':False]['text':' unsqueeze','line_number':71,'multiline':False]['text':' unsqueeze_','line_number':74,'multiline':False]['text':' squeeze (with dimension argument)','line_number':81,'multiline':False]['text':' In PyTorch, it is a no-op to try to squeeze a dimension that has size','line_number':85,'multiline':False]['text':' != 1; in NumPy this is an error.','line_number':86,'multiline':False]['text':' squeeze (with no dimension argument)','line_number':90,'multiline':False]['text':' squeeze_ (with dimension argument)','line_number':103,'multiline':False]['text':' In PyTorch, it is a no-op to try to squeeze a dimension that has size','line_number':108,'multiline':False]['text':' != 1; in NumPy this is an error.','line_number':109,'multiline':False]['text':' squeeze_ (with no dimension argument)','line_number':114,'multiline':False]['text':' reduce (with dimension argument and with 1 return argument)','line_number':127,'multiline':False]['text':' reduce (with dimension argument and with 2 return arguments)','line_number':134,'multiline':False]['text':' NOLINTNEXTLINE(hicpp-avoid-goto,cppcoreguidelines-avoid-goto)','line_number':140,'multiline':False]['text':' simple indexing','line_number':144,'multiline':False]['text':' NOLINTNEXTLINE(hicpp-avoid-goto,cppcoreguidelines-avoid-goto)','line_number':148,'multiline':False]['text':' fill_ (argument to fill_ can only be a 0-dim tensor)','line_number':152,'multiline':False]['text':' NOLINTNEXTLINE(modernize-loop-convert)','line_number':158,'multiline':False]['text':' is_same_size should only match if they are the same shape','line_number':160,'multiline':False]['text':' forced size functions (resize_, resize_as, set_)','line_number':169,'multiline':False]['text':' resize_','line_number':170,'multiline':False]['text':' resize_as_','line_number':178,'multiline':False]['text':' set_','line_number':185,'multiline':False]['text':' with tensor','line_number':188,'multiline':False]['text':' with storage','line_number':195,'multiline':False]['text':' should not be dim 0 because an empty storage is dim 1; all other','line_number':199,'multiline':False]['text':' storages aren't scalars','line_number':200,'multiline':False]['text':' with storage, offset, sizes, strides','line_number':204,'multiline':False]['text':' view','line_number':213,'multiline':False]['text':' take','line_number':224,'multiline':False]['text':' put','line_number':233,'multiline':False]['text':' ger','line_number':243,'multiline':False]['text':' expand','line_number':259,'multiline':False]['text':' in-place functions (would be good if we can also do a non-broadcasting','line_number':271,'multiline':False]['text':' one, b/c broadcasting functions will always end up operating on tensors','line_number':272,'multiline':False]['text':' of same size; is there an example of this outside of assign_ ?)','line_number':273,'multiline':False]