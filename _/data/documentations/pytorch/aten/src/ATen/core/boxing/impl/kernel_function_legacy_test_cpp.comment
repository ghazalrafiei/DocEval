['text':' This intentionally tests a deprecated API','line_number':3,'multiline':False]['text':'*
 * This file tests the legacy function-based API for registering kernels.
 *
 * > namespace { Tensor kernel(Tensor a) {...} }
 * > static auto registry = c10::RegisterOperators()
 * >   .op("func(Tensor a) -> Tensor", &kernel);
 ','line_number':14,'multiline':True]['text':' this kernel should never be called','line_number':35,'multiline':False]['text':' assert that schema and cpu kernel are present','line_number':50,'multiline':False]['text':' assert that schema and cpu kernel are present','line_number':61,'multiline':False]['text':' now the registrar is destructed. Assert that the schema is gone.','line_number':99,'multiline':False]['text':' note: non-fallback kernels without tensor arguments don't work because there','line_number':778,'multiline':False]['text':' is no way to get the dispatch key. For operators that only have a fallback','line_number':779,'multiline':False]['text':' kernel, this must work for backwards compatibility.','line_number':780,'multiline':False]['text':' note: non-fallback kernels without tensor arguments don't work because there','line_number':797,'multiline':False]['text':' is no way to get the dispatch key. For operators that only have a fallback','line_number':798,'multiline':False]['text':' kernel, this must work for backwards compatibility.','line_number':799,'multiline':False]['text':' assert that schema and cpu kernel are present','line_number':916,'multiline':False]['text':' assert this does not fail because it matches','line_number':951,'multiline':False]['text':' and now a set of mismatching schemas','line_number':955,'multiline':False]['text':' assert this does not fail because it matches','line_number':962,'multiline':False]['text':' and now a set of mismatching schemas','line_number':966,'multiline':False]['text':' assert this does not fail because it matches','line_number':987,'multiline':False]['text':' and now a set of mismatching schemas','line_number':991,'multiline':False]['text':' assert this does not fail because it matches','line_number':1006,'multiline':False]['text':' and now a set of mismatching schemas','line_number':1010,'multiline':False]['text':' assert this does not fail because it matches','line_number':1023,'multiline':False]['text':' and now a set of mismatching schemas','line_number':1027,'multiline':False]['text':' assert this does not fail because it matches','line_number':1040,'multiline':False]['text':' and now a set of mismatching schemas','line_number':1044,'multiline':False]['text':' assert this does not fail because it matches','line_number':1065,'multiline':False]['text':' and now a set of mismatching schemas','line_number':1069,'multiline':False]['text':' assert this does not fail because it matches','line_number':1082,'multiline':False]['text':' and now a set of mismatching schemas','line_number':1086,'multiline':False]['text':' assert this does not fail because it matches','line_number':1093,'multiline':False]['text':' and now a set of mismatching schemas','line_number':1097,'multiline':False]