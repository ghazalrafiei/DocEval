['text':' Here we define a series of utils to create/manipulate ATen backed','line_number':11,'multiline':False]['text':' c10 storage implementations.','line_number':12,'multiline':False]['text':'*
 * Create a new shared memory storage impl managed by file descriptor
 *
 * @param size  size in bytes
 ','line_number':14,'multiline':True]['text':'*
 * Copy src to dst
 * Caller must guarantee the validness of the storage objects
 * during the entire copy process, esp. when it's async.
 *
 * This can probably live in c10 namespace later if needed,
 * but for now keep it in at to keep implementation simple.
 *
 * @param dst  dst tensor
 * @param src  src tensor
 * @param non_blocking  (default false) whether this operation blocks caller
 ','line_number':21,'multiline':True]['text':'*
 * In place change the storage to shm based.
 *
 * This is only applicable to CPU tensors not already shared.
 * Otherwise, it's a no op to mirror the THP tensor behavior:
 * https://pytorch.org/docs/stable/generated/torch.Tensor.share_memory_.html
 *
 * @param t  a tensor
 ','line_number':38,'multiline':True]['text':' namespace at','line_number':49,'multiline':False]