['text':' TODO: Remove duplicate declaration.','line_number':16,'multiline':False]['text':' Full input tensor size.','line_number':18,'multiline':False]['text':' namespace upsample','line_number':21,'multiline':False]['text':' TODO: Remove duplication with Upsample.h (CPU).','line_number':25,'multiline':False]['text':' namespace upsample_cuda','line_number':33,'multiline':False]['text':' TODO: move this to a common place ','line_number':36,'multiline':True]['text':' NOTE [ Nearest neighbor upsampling kernel implementation ]','line_number':47,'multiline':False]['text':'','line_number':48,'multiline':False]['text':' The nearest neighbor upsampling kernel implementation is symmetrical as','line_number':49,'multiline':False]['text':' expected. We launch kernels with threads mapping to destination tensors where','line_number':50,'multiline':False]['text':' kernels write data to, each thread reads data from the source tensor, this','line_number':51,'multiline':False]['text':' means:','line_number':52,'multiline':False]['text':' 1. In the forward kernel,','line_number':53,'multiline':False]['text':'      src_xxx refers to properties of input tensors;','line_number':54,'multiline':False]['text':'      dst_xxx refers to properties of output tensors;','line_number':55,'multiline':False]['text':'      scale_factor is the ratio of src_size to dst_size;','line_number':56,'multiline':False]['text':' 2. In the backward kernel,','line_number':57,'multiline':False]['text':'      src_xxx refers to properties of grad_output tensors;','line_number':58,'multiline':False]['text':'      dst_xxx refers to properties of grad_input tensors;','line_number':59,'multiline':False]['text':'      scale_factor is the ratio of src_size to dst_size;','line_number':60,'multiline':False]['text':'','line_number':61,'multiline':False]['text':' Because of this, we need to take the reciprocal of the scale defined by','line_number':62,'multiline':False]['text':' upsample layer during forward path. The motivation is to avoid slow','line_number':63,'multiline':False]['text':' division in the kernel code, so we can use faster multiplication instead.','line_number':64,'multiline':False]['text':' This is not necessary during backward path, since the scale_factor is already','line_number':65,'multiline':False]['text':' the reciprocal of corresponding scale_factor used in the forward path due to','line_number':66,'multiline':False]['text':' the swap of source and destination tensor.','line_number':67,'multiline':False]['text':'','line_number':68,'multiline':False]['text':' Similarly, since the mapping from grad_input to grad_output during backward','line_number':69,'multiline':False]['text':' is the reverse of the mapping of output to input, we need to have opposite','line_number':70,'multiline':False]['text':' mapping functions to compute the source index.','line_number':71,'multiline':False]['text':' see NOTE [ Nearest neighbor upsampling kernel implementation ]','line_number':73,'multiline':False]['text':' FIXME: remove magic > 0 after we ensure no models were serialized with -1 defaults.','line_number':79,'multiline':False]['text':' see NOTE [ Nearest neighbor upsampling kernel implementation ]','line_number':84,'multiline':False]['text':' FIXME: remove magic > 0 after we ensure no models were serialized with -1 defaults.','line_number':90,'multiline':False]['text':' See Note[Follow Opencv resize logic]','line_number':125,'multiline':False]['text':' see NOTE [ Nearest neighbor upsampling kernel implementation ]','line_number':132,'multiline':False]['text':' index_f32 = (output_index) * scale','line_number':137,'multiline':False]['text':' input_index = round(index_f32)','line_number':138,'multiline':False]['text':' Same as a buggy OpenCV INTER_NEAREST','line_number':139,'multiline':False]['text':' We keep this method for BC and consider as deprecated.','line_number':140,'multiline':False]['text':' See nearest_neighbor_exact_compute_source_index as replacement','line_number':141,'multiline':False]['text':' index_f32 = (output_index + 0.5) * scale - 0.5','line_number':151,'multiline':False]['text':' input_index = round(index_f32)','line_number':152,'multiline':False]['text':' Same as Pillow and Scikit-Image/Scipy ndi.zoom','line_number':153,'multiline':False]['text':' see NOTE [ Nearest neighbor upsampling kernel implementation ]','line_number':159,'multiline':False]['text':' Equivalent to buggy OpenCV INTER_NEAREST','line_number':164,'multiline':False]['text':' We keep this method for BC and consider as deprecated.','line_number':165,'multiline':False]['text':' See nearest_neighbor_exact_bw_compute_source_index as replacement','line_number':166,'multiline':False]['text':' see NOTE [ Nearest neighbor upsampling kernel implementation ]','line_number':172,'multiline':False]['text':' Equivalent to Pillow and Scikit-Image/Scipy ndi.zoom','line_number':177,'multiline':False]['text':' Used by UpSampleBicubic2d.cu ','line_number':183,'multiline':True]['text':' Used by UpSampleBicubic2d.cu ','line_number':198,'multiline':True]['text':' TODO: result here is truncated to scalar_t,
     check: https://github.com/pytorch/pytorch/pull/19630#discussion_r281426912
   ','line_number':211,'multiline':True]['text':' Based on','line_number':218,'multiline':False]['text':' https://en.wikipedia.org/wiki/Bicubic_interpolation#Bicubic_convolution_algorithm','line_number':219,'multiline':False]['text':' opposite coefficients','line_number':244,'multiline':False]['text':' taken from','line_number':265,'multiline':False]['text':' https://github.com/python-pillow/Pillow/blob/6812205f18ca4ef54372e87e1a13ce4a859434df/','line_number':266,'multiline':False]['text':' src/libImaging/Resample.c#L20-L29','line_number':267,'multiline':False]['text':' taken from','line_number':284,'multiline':False]['text':' https://github.com/python-pillow/Pillow/blob/6812205f18ca4ef54372e87e1a13ce4a859434df/','line_number':285,'multiline':False]['text':' src/libImaging/Resample.c#L46-L62','line_number':286,'multiline':False]['text':' https://en.wikipedia.org/wiki/Bicubic_interpolation#Bicubic_convolution_algorithm','line_number':291,'multiline':False]['text':' namespace native','line_number':369,'multiline':False]['text':' namespace at','line_number':370,'multiline':False]