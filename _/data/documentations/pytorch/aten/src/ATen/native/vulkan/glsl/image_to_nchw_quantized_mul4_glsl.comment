['text':'
 * Input Sampler
 ','line_number':6,'multiline':True]['text':'
 * Output Buffer
 ','line_number':11,'multiline':True]['text':'
 * Params Buffer
 ','line_number':19,'multiline':True]['text':' xyz contain the extents of the input texture, w contains HxW to help','line_number':23,'multiline':False]['text':' calculate buffer offsets','line_number':24,'multiline':False]['text':' x: number of texels spanned by one batch: ceil(c_info.y/4)','line_number':26,'multiline':False]['text':' y: number of channels','line_number':27,'multiline':False]['text':'
 * Local Work Group in_extents
 ','line_number':32,'multiline':True]['text':' each instance of the shader writes out four elements of the output','line_number':39,'multiline':False]['text':' by processing 4 consecutive texels at the same depth.','line_number':40,'multiline':False]['text':' global size = {HxW / 4, 1u, z_extent}.','line_number':41,'multiline':False]['text':' this shader requires HxW to be a multiple of 4, so that multiple','line_number':42,'multiline':False]['text':' planes can be processed in parallel','line_number':43,'multiline':False]['text':' each output element is a uint32 made up four consecutive uint8 from the','line_number':51,'multiline':False]['text':' input in nchw format. xy_pos contains the positions of these four','line_number':52,'multiline':False]['text':' elements from the input in the flatten out HxW plane.','line_number':53,'multiline':False]['text':' we divide this "flatten out position" by H, to find the positions along','line_number':57,'multiline':False]['text':' the y-axis (height) and we compute its reminder mod H, to find the','line_number':58,'multiline':False]['text':' position along the x-axis (width).','line_number':59,'multiline':False]['text':' when channel%4 != 0, the texture is not densely filled','line_number':71,'multiline':False]['text':' only copy valid texels as the 1D buffer is dense','line_number':72,'multiline':False]['text':' account for case when channel%4 != 0','line_number':78,'multiline':False]['text':' base: (pos.z / [C/4]) * C','line_number':79,'multiline':False]['text':' offset: (pos.z % [C/4]) * 4)','line_number':80,'multiline':False]['text':' when channel%4 == 0, this is equivalent to pos.z * 4','line_number':81,'multiline':False]