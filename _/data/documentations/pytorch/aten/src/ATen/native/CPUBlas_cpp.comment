['text':' BLAS_HAS_SBGEMM','line_number':27,'multiline':False]['text':' C10_IOS','line_number':37,'multiline':False]['text':' AT_BUILD_WITH_BLAS','line_number':38,'multiline':False]['text':' USE_FBGEMM','line_number':42,'multiline':False]['text':' namespace internal','line_number':73,'multiline':False]['text':' USE_FBGEMM','line_number':100,'multiline':False]['text':' namespace (anonymous)','line_number':113,'multiline':False]['text':' C matrix in OpenBLAS sbgemm are of type "float" so we have to convert, copy and copy back.','line_number':304,'multiline':False]['text':' for the fallback path, first compute gemm with beta = 0,','line_number':379,'multiline':False]['text':' and then add c in full precision.','line_number':380,'multiline':False]['text':' beta == 0 won't propagate NaN from C','line_number':389,'multiline':False]['text':' In FBGEMM, we assume row-major ordering; However, here we assume the','line_number':410,'multiline':False]['text':' column-major ordering following the FORTRAN tradition in BLAS interface','line_number':411,'multiline':False]['text':' in this function: we can configure the layout (row/column-major ordering)','line_number':412,'multiline':False]['text':' of A and B by changing transa_ and transb_, but we cannot change the','line_number':413,'multiline':False]['text':' layout of C with this FORTRAN-style BLAS interface.','line_number':414,'multiline':False]['text':'','line_number':415,'multiline':False]['text':' The workaround is that we compute','line_number':416,'multiline':False]['text':' C^T (n x m) = B^T (n x k) * A^T (k x m) instead.','line_number':417,'multiline':False]['text':'','line_number':418,'multiline':False]['text':' In this way we view C^T as the row-major ordering when passing to FBGEMM.','line_number':419,'multiline':False]['text':' namespace at::native::cpublas','line_number':785,'multiline':False]