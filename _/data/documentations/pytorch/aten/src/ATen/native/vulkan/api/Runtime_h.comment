['text':'','line_number':13,'multiline':False]['text':' A Vulkan Runtime initializes a Vulkan instance and decouples the concept of','line_number':14,'multiline':False]['text':' Vulkan instance initialization from intialization of, and subsequent','line_number':15,'multiline':False]['text':' interactions with,  Vulkan [physical and logical] devices as a precursor to','line_number':16,'multiline':False]['text':' multi-GPU support.  The Vulkan Runtime can be queried for available Adapters','line_number':17,'multiline':False]['text':' (i.e. physical devices) in the system which in turn can be used for creation','line_number':18,'multiline':False]['text':' of a Vulkan Context (i.e. logical devices).  All Vulkan tensors in PyTorch','line_number':19,'multiline':False]['text':' are associated with a Context to make tensor <-> device affinity explicit.','line_number':20,'multiline':False]['text':'','line_number':21,'multiline':False]['text':' Do not allow copying. There should be only one global instance of this','line_number':38,'multiline':False]['text':' class.','line_number':39,'multiline':False]['text':' The global runtime is retrieved using this function, where it is declared as','line_number':92,'multiline':False]['text':' a static local variable.','line_number':93,'multiline':False]['text':' namespace api','line_number':96,'multiline':False]['text':' namespace vulkan','line_number':97,'multiline':False]['text':' namespace native','line_number':98,'multiline':False]['text':' namespace at','line_number':99,'multiline':False]['text':' USE_VULKAN_API ','line_number':101,'multiline':True]