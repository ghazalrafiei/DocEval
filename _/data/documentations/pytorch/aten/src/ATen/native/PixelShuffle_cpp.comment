['text':' Format: (B1, ..., Bn), C, H, W','line_number':27,'multiline':False]['text':' Format: (B1, ..., Bn), C, H, W','line_number':55,'multiline':False]['text':' Format: (B1, ..., Bn), C, H, W','line_number':79,'multiline':False]['text':' First, reshape to split the channels dim from c into 3 separate dims: (oc,','line_number':91,'multiline':False]['text':' upscale_factor, upscale_factor). This allows shuffling to be done next by','line_number':92,'multiline':False]['text':' permuting dims.','line_number':93,'multiline':False]['text':' Next, shuffle by permuting the new upscale_factor dims alongside the height and width dims.','line_number':100,'multiline':False]['text':' std::iota is used to maintain the batch dims within the permutation.','line_number':102,'multiline':False]['text':' oc ','line_number':104,'multiline':True]['text':' h ','line_number':104,'multiline':True]['text':' 1st upscale_factor ','line_number':104,'multiline':True]['text':' w ','line_number':104,'multiline':True]['text':' 2nd upscale_factor ','line_number':105,'multiline':True]['text':' Finally, upscale by collapsing (h, upscale_factor) -> a single dim (oh)','line_number':108,'multiline':False]['text':' and (w, upscale_factor) -> a single dim (ow).','line_number':109,'multiline':False]['text':' pixel_shuffle expects to *never* return an alias of the input.','line_number':113,'multiline':False]['text':' Format: (B1, ..., Bn), C, H, W','line_number':120,'multiline':False]['text':' First, reshape to split height dim into (oh, downscale_factor) dims and','line_number':132,'multiline':False]['text':' width dim into (ow, downscale_factor) dims. This allows unshuffling to be','line_number':133,'multiline':False]['text':' done next by permuting dims.','line_number':134,'multiline':False]['text':' Next, unshuffle by permuting the downscale_factor dims alongside the channel dim.','line_number':141,'multiline':False]['text':' std::iota is used to maintain the batch dims within the permutation.','line_number':143,'multiline':False]['text':' c ','line_number':145,'multiline':True]['text':' 1st downscale_factor ','line_number':145,'multiline':True]['text':'2nd downscale_factor ','line_number':145,'multiline':True]['text':' oh ','line_number':146,'multiline':True]['text':' ow ','line_number':146,'multiline':True]['text':' Finally, downscale by collapsing (c, downscale_factor, downscale_factor) -> a single dim (oc),','line_number':149,'multiline':False]['text':' resulting in height=oh and width=ow.','line_number':150,'multiline':False]['text':' pixel_unshuffle expects to *never* return an alias of the input.','line_number':154,'multiline':False]['text':' namespace at::native','line_number':161,'multiline':False]