['text':' Copyright (c) Facebook, Inc. and its affiliates. All rights reserved.','line_number':1,'multiline':False]['text':'','line_number':2,'multiline':False]['text':' This source code is licensed under the BSD license found in the','line_number':3,'multiline':False]['text':' LICENSE file in the root directory of this source tree.','line_number':4,'multiline':False]['text':' Generates combination of kernels - implementations and registry','line_number':6,'multiline':False]['text':' Kernels are ordered (see `sort_index`), and when dispatching,','line_number':8,'multiline':False]['text':' we select the first kernel in the list that supports the inputs','line_number':9,'multiline':False]['text':' Sm80 kernels support up to Sm100','line_number':24,'multiline':False]['text':' Set kernel selection priority','line_number':62,'multiline':False]['text':' The lowest value that matches inputs','line_number':63,'multiline':False]['text':' will be selected','line_number':64,'multiline':False]['text':' First select aligned kernel','line_number':66,'multiline':False]['text':' Then keep output in RF','line_number':68,'multiline':False]['text':' Prefer kernels without dropout/bias if available','line_number':71,'multiline':False]['text':' Maps to file which will contain the implementation','line_number':103,'multiline':False]['text':' Remove some kernels we don't use','line_number':121,'multiline':False]['text':' We get better perf with 64x128 on A100','line_number':128,'multiline':False]['text':' Set kernel selection priority','line_number':160,'multiline':False]['text':' The lowest value that matches inputs','line_number':161,'multiline':False]['text':' will be selected','line_number':162,'multiline':False]['text':' First select aligned kernel','line_number':164,'multiline':False]['text':' Take a kernel without dropout if possible','line_number':166,'multiline':False]['text':' Then take the smallest maxK','line_number':168,'multiline':False]['text':' .. and the highest block_i','line_number':170,'multiline':False]['text':' and finally avoid bounds-checks if possible','line_number':172,'multiline':False]['text':' Maps to file which will contain the implementation','line_number':211,'multiline':False]['text':' Some architectures have more shmem and can use 128','line_number':241,'multiline':False]['text':' We still need fallback to 64 for GPUs with less shmem','line_number':242,'multiline':False]['text':' (Sm75, Sm86 ...)','line_number':243,'multiline':False]['text':' A few specialized kernels that are faster','line_number':263,'multiline':False]['text':' Add some specialized kernels for stable diffusion BW (K=80)','line_number':281,'multiline':False]['text':' This is the only kernel that can keep the outputs on RF on','line_number':282,'multiline':False]['text':' Sm86/Sm89, so it's much faster than the 64x64 one','line_number':283,'multiline':False]['text':' Sm80 has a faster kernel for this case','line_number':295,'multiline':False]['text':' declarations += f"#ifndef {disable_def}\n"','line_number':329,'multiline':False]['text':' Declaration of kernel functions','line_number':333,'multiline':False]['text':' declarations += f"#endif // {disable_def}\n"','line_number':364,'multiline':False]['text':' Write declarations to family header','line_number':366,'multiline':False]['text':' impl_cu += f"#ifndef {disable_def}\n"','line_number':371,'multiline':False]['text':' impl_cu += f"#endif // {disable_def}\n"','line_number':376,'multiline':False]['text':' Set an optional output directory','line_number':404,'multiline':False]