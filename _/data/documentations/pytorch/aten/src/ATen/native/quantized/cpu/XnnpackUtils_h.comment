['text':'
 * Return shape in the same order as the memory format
 * e.g. channels_last will return NHWC instead of NCHW
 ','line_number':15,'multiline':True]['text':'
 * Input is always int8_t, output can be [int8_t, uint8_t].
 * input  + offset = output
 * int8_t + 128    = uint8_t
 * int8_t + 0      = int8_t
 ','line_number':21,'multiline':True]['text':'
 * Series of create wrapper functions to call xnn_create_[de]conv* functions.
 ','line_number':36,'multiline':True]['text':' Symmetric quantization forces kzp = 0 ','line_number':70,'multiline':True]['text':' uint32_t output_padding_top          ','line_number':77,'multiline':True]['text':' uint32_t output_padding_right        ','line_number':78,'multiline':True]['text':' uint32_t output_padding_bottom       ','line_number':79,'multiline':True]['text':' uint32_t output_padding_left         ','line_number':80,'multiline':True]['text':' uint32_t kernel_height               ','line_number':81,'multiline':True]['text':' uint32_t kernel_width                ','line_number':82,'multiline':True]['text':' uint32_t stride_height               ','line_number':83,'multiline':True]['text':' uint32_t stride_width                ','line_number':84,'multiline':True]['text':' uint32_t dilation_height             ','line_number':85,'multiline':True]['text':' uint32_t dilation_width              ','line_number':86,'multiline':True]['text':' uint32_t groups                      ','line_number':87,'multiline':True]['text':' size_t group_input_channels   ','line_number':88,'multiline':True]['text':' size_t group_output_channels  ','line_number':89,'multiline':True]['text':' size_t input_pixel_stride            ','line_number':90,'multiline':True]['text':' size_t output_pixel_stride           ','line_number':91,'multiline':True]['text':' int8_t input_zero_point              ','line_number':92,'multiline':True]['text':' float input_scale                    ','line_number':93,'multiline':True]['text':' float kernel_scale                   ','line_number':94,'multiline':True]['text':' const int8_t* kernel                 ','line_number':95,'multiline':True]['text':' const int32_t* bias                  ','line_number':96,'multiline':True]['text':' int8_t output_zero_point             ','line_number':97,'multiline':True]['text':' float output_scale                   ','line_number':98,'multiline':True]['text':' int8_t output_min                    ','line_number':99,'multiline':True]['text':' int8_t output_max                    ','line_number':100,'multiline':True]['text':' uint32_t flags                       ','line_number':101,'multiline':True]['text':' xnn_caches_t caches                  ','line_number':102,'multiline':True]['text':' xnn_operator_t* deconvolution_op_out ','line_number':103,'multiline':True]['text':' uint32_t input_padding_top         ','line_number':109,'multiline':True]['text':' uint32_t input_padding_right       ','line_number':110,'multiline':True]['text':' uint32_t input_padding_bottom      ','line_number':111,'multiline':True]['text':' uint32_t input_padding_left        ','line_number':112,'multiline':True]['text':' uint32_t kernel_height             ','line_number':113,'multiline':True]['text':' uint32_t kernel_width              ','line_number':114,'multiline':True]['text':' uint32_t subsampling_height        ','line_number':115,'multiline':True]['text':' uint32_t subsampling_width         ','line_number':116,'multiline':True]['text':' uint32_t dilation_height           ','line_number':117,'multiline':True]['text':' uint32_t dilation_width            ','line_number':118,'multiline':True]['text':' uint32_t groups                    ','line_number':119,'multiline':True]['text':' size_t group_input_channels ','line_number':120,'multiline':True]['text':' size_t group_output_channels','line_number':121,'multiline':True]['text':' size_t input_channel_stride        ','line_number':122,'multiline':True]['text':' size_t output_channel_stride       ','line_number':123,'multiline':True]['text':' int8_t input_zero_point            ','line_number':124,'multiline':True]['text':' float input_scale                  ','line_number':125,'multiline':True]['text':' float kernel_scale                 ','line_number':126,'multiline':True]['text':' const int8_t* kernel               ','line_number':127,'multiline':True]['text':' const int32_t* bias                ','line_number':128,'multiline':True]['text':' int8_t output_zero_point           ','line_number':129,'multiline':True]['text':' float output_scale                 ','line_number':130,'multiline':True]['text':' int8_t output_min                  ','line_number':131,'multiline':True]['text':' int8_t output_max                  ','line_number':132,'multiline':True]['text':' uint32_t flags                     ','line_number':133,'multiline':True]['text':' xnn_caches_t caches                ','line_number':134,'multiline':True]['text':' xnn_operator_t* convolution_op_out ','line_number':135,'multiline':True]['text':' per_channel ','line_number':136,'multiline':True]['text':' uint32_t input_padding_top         ','line_number':138,'multiline':True]['text':' uint32_t input_padding_right       ','line_number':139,'multiline':True]['text':' uint32_t input_padding_bottom      ','line_number':140,'multiline':True]['text':' uint32_t input_padding_left        ','line_number':141,'multiline':True]['text':' uint32_t kernel_height             ','line_number':142,'multiline':True]['text':' uint32_t kernel_width              ','line_number':143,'multiline':True]['text':' uint32_t subsampling_height        ','line_number':144,'multiline':True]['text':' uint32_t subsampling_width         ','line_number':145,'multiline':True]['text':' uint32_t dilation_height           ','line_number':146,'multiline':True]['text':' uint32_t dilation_width            ','line_number':147,'multiline':True]['text':' uint32_t groups                    ','line_number':148,'multiline':True]['text':' size_t group_input_channels ','line_number':149,'multiline':True]['text':' size_t group_output_channels','line_number':150,'multiline':True]['text':' size_t input_channel_stride        ','line_number':151,'multiline':True]['text':' size_t output_channel_stride       ','line_number':152,'multiline':True]['text':' int8_t input_zero_point            ','line_number':153,'multiline':True]['text':' float input_scale                  ','line_number':154,'multiline':True]['text':' const float* kernel_scale          ','line_number':155,'multiline':True]['text':' const int8_t* kernel               ','line_number':156,'multiline':True]['text':' const int32_t* bias                ','line_number':157,'multiline':True]['text':' int8_t output_zero_point           ','line_number':158,'multiline':True]['text':' float output_scale                 ','line_number':159,'multiline':True]['text':' int8_t output_min                  ','line_number':160,'multiline':True]['text':' int8_t output_max                  ','line_number':161,'multiline':True]['text':' uint32_t flags                     ','line_number':162,'multiline':True]['text':' xnn_caches_t caches                ','line_number':163,'multiline':True]['text':' xnn_operator_t* convolution_op_out ','line_number':164,'multiline':True]['text':'
 * Series of setup wrapper functions to call xnn_setup_[de]conv* functions.
 ','line_number':168,'multiline':True]['text':' xnn_operator_t deconvolution_op ','line_number':187,'multiline':True]['text':' size_t batch_size               ','line_number':188,'multiline':True]['text':' size_t input_height             ','line_number':189,'multiline':True]['text':' size_t input_width              ','line_number':190,'multiline':True]['text':' uint32_t adjustment_height      ','line_number':191,'multiline':True]['text':' uint32_t adjustment_width       ','line_number':192,'multiline':True]['text':' const int8_t* input             ','line_number':193,'multiline':True]['text':' int8_t* output                  ','line_number':194,'multiline':True]['text':' pthreadpool_t threadpool        ','line_number':195,'multiline':True]['text':' xnn_operator_t convolution_op ','line_number':200,'multiline':True]['text':' size_t batch_size             ','line_number':201,'multiline':True]['text':' size_t input_height           ','line_number':202,'multiline':True]['text':' size_t input_width            ','line_number':203,'multiline':True]['text':' const int8_t* input           ','line_number':204,'multiline':True]['text':' int8_t* output                ','line_number':205,'multiline':True]['text':' pthreadpool_t threadpool      ','line_number':206,'multiline':True]['text':' per_channel ','line_number':207,'multiline':True]['text':' xnn_operator_t convolution_op ','line_number':209,'multiline':True]['text':' size_t batch_size             ','line_number':210,'multiline':True]['text':' size_t input_height           ','line_number':211,'multiline':True]['text':' size_t input_width            ','line_number':212,'multiline':True]['text':' const int8_t* input           ','line_number':213,'multiline':True]['text':' int8_t* output                ','line_number':214,'multiline':True]['text':' pthreadpool_t threadpool      ','line_number':215,'multiline':True]['text':'
 * Series of wrapper functions to call xnn_create* and xnn_setup*
 * functions for linear
 ','line_number':220,'multiline':True]['text':' Symmetric quantization forces kzp = 0 ','line_number':242,'multiline':True]['text':' size_t input_channels                  ','line_number':246,'multiline':True]['text':' size_t output_channels                 ','line_number':247,'multiline':True]['text':' size_t input_stride                    ','line_number':248,'multiline':True]['text':' size_t output_stride                   ','line_number':249,'multiline':True]['text':' int8_t input_zero_point                ','line_number':250,'multiline':True]['text':' float input_scale                      ','line_number':251,'multiline':True]['text':' float kernel_scale                     ','line_number':252,'multiline':True]['text':' const int8_t* kernel                   ','line_number':253,'multiline':True]['text':' const int32_t* bias                    ','line_number':254,'multiline':True]['text':' int8_t output_zero_point               ','line_number':255,'multiline':True]['text':' float output_scale                     ','line_number':256,'multiline':True]['text':' int8_t output_min                      ','line_number':257,'multiline':True]['text':' int8_t output_max                      ','line_number':258,'multiline':True]['text':' uint32_t flags                         ','line_number':259,'multiline':True]['text':' xnn_caches_t caches                    ','line_number':260,'multiline':True]['text':' xnn_operator_t* fully_connected_op_out ','line_number':261,'multiline':True]['text':' xnn_operator_t fully_connected_op ','line_number':272,'multiline':True]['text':' size_t batch_size                 ','line_number':273,'multiline':True]['text':' const int8_t* input               ','line_number':274,'multiline':True]['text':' int8_t* output                    ','line_number':275,'multiline':True]['text':' pthreadpool_t threadpool          ','line_number':276,'multiline':True]['text':' namespace xnnp_utils','line_number':279,'multiline':False]['text':' namespace native','line_number':280,'multiline':False]['text':' namespace at','line_number':281,'multiline':False]['text':' USE_XNNPACK','line_number':283,'multiline':False]