['text':'
 * Output Image
 ','line_number':7,'multiline':True]['text':'
 * Input Textures
 ','line_number':12,'multiline':True]['text':' This implementation optimize for simplicity (and partially performance) for a','line_number':26,'multiline':False]['text':' (1, C, L) where C == groups. Hence we only focus on calculating the rolling','line_number':27,'multiline':False]['text':' kernel of the L dimension.','line_number':28,'multiline':False]['text':' The global workgroup should have taken care of it. We only perform one','line_number':36,'multiline':False]['text':' work item for each 1d tensor on lengths','line_number':37,'multiline':False]['text':' Assume n = 1, do not handle n > 1 case for now.','line_number':47,'multiline':False]['text':' Note that we are reading weight in the inner loop, this could be','line_number':61,'multiline':False]['text':' improved by moving it before the outer loop. Since the weight vector is','line_number':62,'multiline':False]['text':' contant for the entire call.','line_number':63,'multiline':False]['text':' weight in input-space: (c, 0, k);','line_number':65,'multiline':False]['text':' notice that c is 4-packed. We need to mod 4 to get the actual weight.','line_number':66,'multiline':False]