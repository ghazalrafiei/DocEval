['text':' Unnormalizes a coordinate from the -1 to +1 scale to its pixel index value,','line_number':15,'multiline':False]['text':' where we view each pixel as an area between (idx - 0.5) and (idx + 0.5).','line_number':16,'multiline':False]['text':' if align_corners: -1 and +1 get sent to the centers of the corner pixels','line_number':17,'multiline':False]['text':'     -1 --> 0','line_number':18,'multiline':False]['text':'     +1 --> (size - 1)','line_number':19,'multiline':False]['text':'     scale_factor = (size - 1) / 2','line_number':20,'multiline':False]['text':' if not align_corners: -1 and +1 get sent to the image edges','line_number':21,'multiline':False]['text':'     -1 --> -0.5','line_number':22,'multiline':False]['text':'     +1 --> (size - 1) + 0.5 == size - 0.5','line_number':23,'multiline':False]['text':'     scale_factor = size / 2','line_number':24,'multiline':False]['text':' unnormalize coord from [-1, 1] to [0, size - 1]','line_number':29,'multiline':False]['text':' unnormalize coord from [-1, 1] to [-0.5, size - 0.5]','line_number':32,'multiline':False]['text':' grid_sampler_unnormalize_set_grad works the same as grid_sampler_unnormalize','line_number':37,'multiline':False]['text':' except that it also returns the `d output / d input` via pointer argument','line_number':38,'multiline':False]['text':' `grad_in`.','line_number':39,'multiline':False]['text':' This is useful in the backward pass of grid_sampler.','line_number':40,'multiline':False]['text':' unnormalize coord from [-1, 1] to [0, size - 1]','line_number':45,'multiline':False]['text':' unnormalize coord from [-1, 1] to [-0.5, size - 0.5]','line_number':49,'multiline':False]['text':' Clips coordinates to between 0 and clip_limit - 1','line_number':55,'multiline':False]['text':' clip_coordinates_set_grad works similarly to clip_coordinates except that','line_number':61,'multiline':False]['text':' it also returns the `d output / d input` via pointer argument `grad_in`.','line_number':62,'multiline':False]['text':' This is useful in the backward pass of grid_sampler.','line_number':63,'multiline':False]['text':' Note that it is important for the gradient calculation that borders','line_number':67,'multiline':False]['text':' are considered out of bounds.','line_number':68,'multiline':False]['text':' Reflects coordinates until they fall between low and high (inclusive).','line_number':84,'multiline':False]['text':' The bounds are passed as twice their value so that half-integer values','line_number':85,'multiline':False]['text':' can be represented as ints.','line_number':86,'multiline':False]['text':' `fmod` returns same sign as `in`, which is positive after the `fabs` above.','line_number':96,'multiline':False]['text':' reflect_coordinates_set_grad works similarly to reflect_coordinates except','line_number':106,'multiline':False]['text':' that it also returns the `d output / d input` via pointer argument','line_number':107,'multiline':False]['text':' `grad_in`.','line_number':108,'multiline':False]['text':' This is useful in the backward pass of grid_sampler.','line_number':109,'multiline':False]['text':' `fmod` returns same sign as `in`, which is positive after the `if` above.','line_number':127,'multiline':False]['text':' Mapping the out-of-boundary points back into boundary','line_number':139,'multiline':False]['text':' This would only affect padding_mode=border or reflection','line_number':140,'multiline':False]['text':' clip coordinates to image borders','line_number':146,'multiline':False]['text':' reflect coordinates by image borders','line_number':149,'multiline':False]['text':' clip coordinates to image borders','line_number':155,'multiline':False]['text':' Computes the pixel source index value for a grid coordinate','line_number':161,'multiline':False]['text':' grid_sampler_compute_source_index_set_grad works similarly to','line_number':173,'multiline':False]['text':' grid_sampler_compute_source_index except that it also returns the','line_number':174,'multiline':False]['text':' `d output / d input` via pointer argument `grad_in`.','line_number':175,'multiline':False]['text':' This is useful in the backward pass of grid_sampler.','line_number':176,'multiline':False]['text':' clip coordinates to image borders','line_number':187,'multiline':False]['text':' reflect coordinates by image borders','line_number':191,'multiline':False]['text':' clip coordinates to image borders','line_number':197,'multiline':False]['text':' Calculate the differential of the cubic convolution, i.e. `d coeff / d x`','line_number':277,'multiline':False]['text':' Must be the same as forward calculation in','line_number':283,'multiline':False]['text':' aten/src/ATen/native/UpSample.h:get_cubic_upsample_coefficients','line_number':284,'multiline':False]['text':' 1 < x = |-1 - tx| < 2','line_number':288,'multiline':False]['text':' x = |0 - tx| <= 1','line_number':290,'multiline':False]['text':' x = |1 - tx| <= 1','line_number':292,'multiline':False]['text':' 1 < x = |2 - tx| < 2','line_number':294,'multiline':False]['text':' namespace at::native','line_number':298,'multiline':False]