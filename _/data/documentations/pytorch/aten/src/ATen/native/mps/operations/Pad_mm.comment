['text':'  Copyright Â© 2022 Apple Inc.','line_number':1,'multiline':False]['text':' Pad operations (1D/2D/3D forward and backward)','line_number':27,'multiline':False]['text':' either 1D, 2D, or 3D','line_number':37,'multiline':False]['text':' number of input dims with ConstantPad could be less than 2','line_number':56,'multiline':False]['text':' this virtually inflates the padding with zeros if ndims > padding_dim + 2','line_number':76,'multiline':False]['text':' support arbitrary input dimensions for constant pad.','line_number':116,'multiline':False]['text':' these checks are only relevant for reflection padding (code taken from ReflectionPad.cpp)','line_number':130,'multiline':False]['text':' workaround for negative padding issue in backward pass','line_number':223,'multiline':False]['text':' workaround for the right padding bug in Monterey','line_number':235,'multiline':False]['text':' workaround for Bool type assert with Constant padding','line_number':248,'multiline':False]['text':' workaround for the right padding bug in Monterey','line_number':268,'multiline':False]['text':' workaround for negative padding issue with padGradientWithIncomingGradientTensor()','line_number':291,'multiline':False]['text':' namespace mps','line_number':326,'multiline':False]['text':' 1D Reflection and Replication Padding','line_number':328,'multiline':False]['text':' 2D Reflection and Replication Padding','line_number':375,'multiline':False]['text':' 3D Reflection and Replication Padding','line_number':422,'multiline':False]['text':' backward pass is exlicitly handled in autograd by negating the "pad" argument','line_number':470,'multiline':False]['text':' namespace at::native','line_number':482,'multiline':False]