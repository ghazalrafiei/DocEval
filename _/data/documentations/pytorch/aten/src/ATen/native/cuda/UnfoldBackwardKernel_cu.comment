['text':' Note on naming: it is unconventional.','line_number':11,'multiline':False]['text':' grad_in does not mean that it is a gradient wrt to input,','line_number':12,'multiline':False]['text':' grad_in/grad_out is just an input/output of unfold_backward kernel.','line_number':13,'multiline':False]['text':'','line_number':14,'multiline':False]['text':' unfold_backward, the algorithm is described in','line_number':15,'multiline':False]['text':' /native/cpu/UnfoldBackwardKernel.cpp','line_number':16,'multiline':False]['text':' The algorithm is: for each index in grad_out find','line_number':88,'multiline':False]['text':' the elements contributing to it and sum them up.','line_number':89,'multiline':False]['text':' Note: the algorithm does not require any synchronization.','line_number':90,'multiline':False]['text':' left_fold potentially intersecting with idx_dim','line_number':99,'multiline':False]['text':' is either (idx_dim - size) / step or the next integer.','line_number':100,'multiline':False]['text':' last dim stores the folds','line_number':129,'multiline':False]['text':' namespace at::native','line_number':162,'multiline':False]