['text':' this can't pass anyway because a 0-dimensional tensor has "size" 1, which','line_number':26,'multiline':False]['text':' can't be evenly halved, but give a nicer error message here.','line_number':27,'multiline':False]['text':' size output to half of input','line_number':34,'multiline':False]['text':' namespace meta','line_number':40,'multiline':False]['text':' NOLINTNEXTLINE(cppcoreguidelines-avoid-non-const-global-variables)','line_number':44,'multiline':False]['text':' NOLINTNEXTLINE(cppcoreguidelines-avoid-non-const-global-variables)','line_number':46,'multiline':False]['text':' NOLINTNEXTLINE(cppcoreguidelines-avoid-non-const-global-variables)','line_number':48,'multiline':False]['text':' half tensor','line_number':65,'multiline':False]['text':' for second gradinput half, can get a better performance by fusion','line_number':72,'multiline':False]['text':' grad_x_a = grad_glu * sigmoid(b)','line_number':126,'multiline':False]['text':' grad_x_b = grad_x_a * a * (1 - sigmoid(b))','line_number':128,'multiline':False]['text':' TODO: use glu from forward.','line_number':132,'multiline':False]['text':' TODO: fuse kernels.','line_number':133,'multiline':False]['text':' dgrad_x_a = d(grad_glu * sigmoid(b))','line_number':137,'multiline':False]['text':'           = dgrad_glu * sigmoid(b) + grad_glu * sigmoid(b) * (1 - sigmoid(b)) * db','line_number':138,'multiline':False]['text':'           = dgrad_glu * sig_b + grad_x_a * (db - db * sig_b)','line_number':139,'multiline':False]['text':'           = dgrad_glu * sig_b + grad_x_a * db_neg_sig_b','line_number':140,'multiline':False]['text':' dgrad_x_b = d(grad_glu * sigmoid(b) * a * (1 - sigmoid(b))','line_number':143,'multiline':False]['text':'           =  d(grad_glu * sigmoid(b)) * a * (1 - sigmoid(b))','line_number':144,'multiline':False]['text':'            + grad_glu * sigmoid(b) * da * (1 - sigmoid(b))','line_number':145,'multiline':False]['text':'            - grad_glu * sigmoid(b) * a * sigmoid(b) * (1 - sigmoid(b)) * db','line_number':146,'multiline':False]['text':'          =   dgrad_x_a * a * (1 - sigmoid(b))','line_number':147,'multiline':False]['text':'           + (grad_glu * sigmoid(b)) * (da * (1 - sigmoid(b)) - a * sigmoid(b) * (1 - sigmoid(b)) * db)','line_number':148,'multiline':False]['text':'          = dgrad_x_a * (a - glu) + grad_x_a * (da - da * sig_b - glu * db_neg_sig_b','line_number':149,'multiline':False]['text':' at::native','line_number':156,'multiline':False]['text':' at','line_number':157,'multiline':False]