['text':'','line_number':7,'multiline':False]['text':' This file is here so as to provide an implementation even in cases where','line_number':8,'multiline':False]['text':' PyTorch is compiled without XNNPACK support.  Under those scenarios, either','line_number':9,'multiline':False]['text':' all XNNPACK usage must be gated with #ifdefs at call-sites which would make','line_number':10,'multiline':False]['text':' for cluttered logic, or alternatively, all use can be routed to a central','line_number':11,'multiline':False]['text':' place, namely here, where available() calls return false preventing the','line_number':12,'multiline':False]['text':' XNNPACK related codepaths to be taken, and use of the actual operators','line_number':13,'multiline':False]['text':' trigger an error.','line_number':14,'multiline':False]['text':'','line_number':15,'multiline':False]['text':' namespace','line_number':24,'multiline':False]['text':' namespace internal','line_number':25,'multiline':False]['text':' namespace at::native::xnnpack','line_number':92,'multiline':False]['text':' USE_XNNPACK ','line_number':94,'multiline':True]