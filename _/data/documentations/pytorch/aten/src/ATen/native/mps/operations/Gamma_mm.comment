['text':'
 * The gamma function approximations follow John D Cook's
 * c++ implementation:  https://www.johndcook.com/Gamma.cpp.
 * (BSD License)
 *
 *
 * The digamma kernel and helper function is derived from the pytorch cpu
 * of this function, which is itself derived from the implementation
 * of the digamma function in the Cephes Math Library.
 * See note [3-Clause BSD License for the Cephes Math Library].
 ','line_number':15,'multiline':True]['text':' More accurate than metal's M_PI_F and tanpi()','line_number':34,'multiline':False]['text':' numerator coefficients for gamma approximation over the interval (1,2)','line_number':66,'multiline':False]['text':' denominator coefficients for gamma approximation over the interval (1,2)','line_number':79,'multiline':False]['text':' lgamma expansion coefficients','line_number':92,'multiline':False]['text':' For small x, 1/Gamma(x) has power series x + gamma x^2  - ...','line_number':109,'multiline':False]['text':' So in this range, 1/Gamma(x) = x + gamma x^2 with error on the order of x^3.','line_number':110,'multiline':False]['text':' The relative error over this interval is less than 6e-7.','line_number':111,'multiline':False]['text':' The algorithm directly approximates gamma over (1,2) and uses','line_number':118,'multiline':False]['text':' reduction identities to reduce other arguments to this interval.','line_number':119,'multiline':False]['text':' Add or subtract integers as necessary to bring y into (1,2)','line_number':125,'multiline':False]['text':' Apply correction if argument was not initially in (1,2)','line_number':148,'multiline':False]['text':' identity gamma(z) = gamma(z+1)/z','line_number':151,'multiline':False]['text':' identity gamma(z+n) = z*(z+1)* ... *(z+n-1)*gamma(z)','line_number':156,'multiline':False]['text':' Abramowitz and Stegun 6.1.41','line_number':188,'multiline':False]['text':' Asymptotic series should be good to at least 11 or 12 figures','line_number':189,'multiline':False]['text':' For error analysis, see Whittiker and Watson','line_number':190,'multiline':False]['text':' A Course in Modern Analysis (1927), page 252','line_number':191,'multiline':False]['text':' Reflection Formula','line_number':208,'multiline':False]['text':' Push x to be >= 10','line_number':217,'multiline':False]['text':' Compute asymptotic digamma','line_number':227,'multiline':False]['text':' for (int i = 6; i >= 0; i--) {{','line_number':235,'multiline':False]['text':'     y += DIGAMMA_COEF[i]','line_number':236,'multiline':False]['text':'     y *= z','line_number':237,'multiline':False]['text':' }}','line_number':238,'multiline':False]['text':'y = z * polevl(z, DIGAMMA_COEF, 6);','line_number':239,'multiline':False]['text':' As per C++ standard for gamma related functions and SciPy,','line_number':347,'multiline':False]['text':' If the argument is a negative integer, NaN is returned','line_number':348,'multiline':False]['text':' Extracts the fractional part of x as r, since tan(pi * r) is more numerically','line_number':352,'multiline':False]['text':' accurate than tan(pi * x). While these operations are mathematically equivalent','line_number':353,'multiline':False]['text':' since both x and r are in radians and tan() has a periodicity of pi, in practice','line_number':354,'multiline':False]['text':' the computation of pi * x is a source of error (when |x| > 1).','line_number':355,'multiline':False]['text':' As per C++ standard for gamma related functions and SciPy,','line_number':361,'multiline':False]['text':' If the argument is ±0, ±∞ is returned','line_number':362,'multiline':False]['text':' already blocked if n <= 1','line_number':384,'multiline':False]['text':' namespace mps','line_number':441,'multiline':False]['text':' namespace at::native','line_number':597,'multiline':False]