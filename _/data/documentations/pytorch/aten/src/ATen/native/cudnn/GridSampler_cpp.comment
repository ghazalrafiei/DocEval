['text':' See Note [ATen preprocessor philosophy]','line_number':20,'multiline':False]['text':' AT_CUDNN_ENABLED','line_number':35,'multiline':False]['text':' TODO: descriptor checking','line_number':45,'multiline':False]['text':' assert size of grid is n*h*w*2','line_number':63,'multiline':False]['text':' FYI: grid is between [-1, 1], where -1 left most pixel,','line_number':64,'multiline':False]['text':' 1 represents right most pixel (and hence 0 is the center pixel)','line_number':65,'multiline':False]['text':' if grid has values >1 or <-1, those values are ignored','line_number':66,'multiline':False]['text':' TODO: Maybe more user friendly to report where the expected size','line_number':69,'multiline':False]['text':' came from','line_number':70,'multiline':False]['text':' namespace','line_number':75,'multiline':False]['text':' See NOTE [ grid_sampler Native Functions ].','line_number':80,'multiline':False]['text':' Add checks here in case this is called instead of grid_sampler.','line_number':81,'multiline':False]['text':' input descriptor','line_number':100,'multiline':False]['text':' output descriptor','line_number':101,'multiline':False]['text':' sampler descriptor','line_number':102,'multiline':False]['text':' NB: CuDNN does not support output mask; you always get both','line_number':120,'multiline':False]['text':' gradients.','line_number':121,'multiline':False]['text':' See NOTE [ grid_sampler Native Functions ].','line_number':126,'multiline':False]['text':' Add checks here in case this is called instead of grid_sampler.','line_number':127,'multiline':False]['text':' input descriptor','line_number':150,'multiline':False]['text':' grad_output descriptor','line_number':151,'multiline':False]['text':' grad_input descriptor','line_number':152,'multiline':False]['text':' sampler descriptor','line_number':153,'multiline':False]['text':' intruigingly, the outputs don't need descriptors','line_number':166,'multiline':False]['text':' namespace at::cudnn','line_number':174,'multiline':False]