['text':' cusolverDn<T>potrfBatched may have numerical issue before cuda 11.3 release,','line_number':15,'multiline':False]['text':' (which is cusolver version 11101 in the header), so we only use cusolver potrf batched','line_number':16,'multiline':False]['text':' if cuda version is >= 11.3','line_number':17,'multiline':False]['text':' cusolverDn<T>syevjBatched may have numerical issue before cuda 11.3.1 release,','line_number':24,'multiline':False]['text':' (which is cusolver version 11102 in the header), so we only use cusolver syevj batched','line_number':25,'multiline':False]['text':' if cuda version is >= 11.3.1','line_number':26,'multiline':False]['text':' See https://github.com/pytorch/pytorch/pull/53040#issuecomment-793626268 and https://github.com/cupy/cupy/issues/4847','line_number':27,'multiline':False]['text':' From cuSOLVER doc: Jacobi method has quadratic convergence, so the accuracy is not proportional to number of sweeps.','line_number':34,'multiline':False]['text':'   To guarantee certain accuracy, the user should configure tolerance only.','line_number':35,'multiline':False]['text':' The current pytorch implementation sets gesvdj tolerance to epsilon of a C++ data type to target the best possible precision.','line_number':36,'multiline':False]['text':' entrance of calculations of `svd` using cusolver gesvdj and gesvdjBatched','line_number':62,'multiline':False]['text':' entrance of calculations of `cholesky` using cusolver potrf and potrfBatched','line_number':66,'multiline':False]['text':' USE_LINALG_SOLVER','line_number':80,'multiline':False]['text':' This is only used for an old-style dispatches','line_number':84,'multiline':False]['text':' Please do not add any new entires to it','line_number':85,'multiline':False]['text':' namespace cuda::detail','line_number':90,'multiline':False]['text':' namespace at::native','line_number':93,'multiline':False]