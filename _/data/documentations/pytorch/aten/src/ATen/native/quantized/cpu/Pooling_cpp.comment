['text':' Computes the spatial 2D max pooling with dilation.

Argument description in the argument list.
','line_number':39,'multiline':True]['text':' input/output channels','line_number':46,'multiline':False]['text':' input sizes','line_number':48,'multiline':False]['text':' output sizes','line_number':50,'multiline':False]['text':' kernel size','line_number':52,'multiline':False]['text':' strides','line_number':54,'multiline':False]['text':' padding','line_number':56,'multiline':False]['text':' dilation','line_number':58,'multiline':False]['text':' output arrays (data and max-index)','line_number':59,'multiline':False]['text':' NOLINTNEXTLINE(cppcoreguidelines-init-variables)','line_number':62,'multiline':False]['text':' local pointers','line_number':76,'multiline':False]['text':' local max','line_number':79,'multiline':False]['text':' center point','line_number':81,'multiline':False]['text':' NOLINTNEXTLINE(cppcoreguidelines-init-variables)','line_number':82,'multiline':False]['text':' Output.','line_number':93,'multiline':False]['text':' input/output channels','line_number':104,'multiline':False]['text':' input sizes','line_number':107,'multiline':False]['text':' output sizes','line_number':110,'multiline':False]['text':' kernel size','line_number':113,'multiline':False]['text':' strides','line_number':116,'multiline':False]['text':' padding','line_number':119,'multiline':False]['text':' dilation','line_number':122,'multiline':False]['text':' output arrays (data and max-index)','line_number':123,'multiline':False]['text':' TODO: Further optimize the performance suggested by @mingfeima. Parallel on NCTH and cache the output indices from W.','line_number':124,'multiline':False]['text':' Handle each bs','line_number':125,'multiline':False]['text':' Handle each Channel','line_number':137,'multiline':False]['text':' Handle each output element','line_number':143,'multiline':False]['text':' local pointers','line_number':158,'multiline':False]['text':' local max','line_number':161,'multiline':False]['text':' center point','line_number':163,'multiline':False]['text':' NOLINTNEXTLINE(cppcoreguidelines-init-variables)','line_number':164,'multiline':False]['text':' Output.','line_number':177,'multiline':False]['text':' Input Tensor (Quantized)','line_number':187,'multiline':False]['text':' kernel size','line_number':189,'multiline':False]['text':' strides','line_number':191,'multiline':False]['text':' padding','line_number':193,'multiline':False]['text':' dilation','line_number':196,'multiline':False]['text':' Check input dimensions.','line_number':197,'multiline':False]['text':' Includes batches','line_number':216,'multiline':False]['text':' Check if inputs are valid.','line_number':223,'multiline':False]['text':' Check output dimensions.','line_number':235,'multiline':False]['text':' Fast path case for channels-last case.','line_number':254,'multiline':False]['text':' In this case, we can preserve the data layout in memory','line_number':255,'multiline':False]['text':' as well as use a loop nest that is more amenable to','line_number':256,'multiline':False]['text':' vectorization.','line_number':257,'multiline':False]['text':' If qx is uint8 and contiguous memory format,','line_number':333,'multiline':False]['text':' Use the channels_last implementation and convert qy back to contiguous.','line_number':334,'multiline':False]['text':' Input Tensor (Quantized)','line_number':351,'multiline':False]['text':' kernel size','line_number':354,'multiline':False]['text':' strides','line_number':357,'multiline':False]['text':' padding','line_number':360,'multiline':False]['text':' dilation','line_number':364,'multiline':False]['text':' Check input dimensions.','line_number':365,'multiline':False]['text':' TODO leslie: Support non batch mode input when input is THWC which is 4-d tensor.','line_number':379,'multiline':False]['text':' act: n, c, t, h, w','line_number':382,'multiline':False]['text':' Check if inputs are valid.','line_number':388,'multiline':False]['text':' Check output dimensions.','line_number':398,'multiline':False]['text':' Fast path case for channels-last case.','line_number':413,'multiline':False]['text':' In this case, we can preserve the data layout in memory','line_number':414,'multiline':False]['text':' as well as use a loop nest that is more amenable to','line_number':415,'multiline':False]['text':' vectorization.','line_number':416,'multiline':False]['text':' namespace','line_number':464,'multiline':False]['text':' input_padding_height ','line_number':554,'multiline':True]['text':' input_padding_width ','line_number':555,'multiline':True]['text':' pooling height ','line_number':556,'multiline':True]['text':' pooling width ','line_number':557,'multiline':True]['text':' stride height ','line_number':558,'multiline':True]['text':' stride width ','line_number':559,'multiline':True]['text':' dilation height ','line_number':560,'multiline':True]['text':' dilation width ','line_number':561,'multiline':True]['text':' input channels ','line_number':562,'multiline':True]['text':' output min ','line_number':563,'multiline':True]['text':' output max ','line_number':564,'multiline':True]['text':' flags ','line_number':565,'multiline':True]['text':' NHWC output','line_number':584,'multiline':False]['text':' max pooling ','line_number':594,'multiline':True]['text':' batch size ','line_number':595,'multiline':True]['text':' input height ','line_number':596,'multiline':True]['text':' input width ','line_number':597,'multiline':True]['text':' input ','line_number':598,'multiline':True]['text':' input_pixel_stride ','line_number':599,'multiline':True]['text':' output data ','line_number':600,'multiline':True]['text':' output_pixel_stride ','line_number':601,'multiline':True]['text':' thread pool ','line_number':602,'multiline':True]['text':' namespace','line_number':616,'multiline':False]['text':' at::native functions for the native_functions.yaml','line_number':618,'multiline':False]['text':' Quantized max_pool1d is a special case of the max_pool2d, with one of the','line_number':696,'multiline':False]['text':' dimensions and kernels removed.','line_number':697,'multiline':False]['text':' (C, L) -> (C, 1, L) => kSqueezeDim = 1','line_number':705,'multiline':False]['text':' (N, C, L) -> (N, C, 1, L) => kSqueezeDim = 2','line_number':706,'multiline':False]['text':' Keep the registry in the anonymous namespace.','line_number':723,'multiline':False]['text':' namespace','line_number':759,'multiline':False]['text':' namespace native','line_number':760,'multiline':False]['text':' namespace at','line_number':761,'multiline':False]