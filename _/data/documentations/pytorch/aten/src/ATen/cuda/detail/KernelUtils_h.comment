['text':' CUDA: grid stride looping','line_number':8,'multiline':False]['text':'','line_number':9,'multiline':False]['text':' int64_t _i_n_d_e_x specifically prevents overflow in the loop increment.','line_number':10,'multiline':False]['text':' If input.numel() < INT_MAX, _i_n_d_e_x < INT_MAX, except after the final','line_number':11,'multiline':False]['text':' iteration of the loop where _i_n_d_e_x += blockDim.x * gridDim.x can be','line_number':12,'multiline':False]['text':' greater than INT_MAX.  But in that case _i_n_d_e_x >= n, so there are no','line_number':13,'multiline':False]['text':' further iterations and the overflowed value in i=_i_n_d_e_x is not used.','line_number':14,'multiline':False]['text':' Use 1024 threads per block, which requires cuda sm_2x or above','line_number':22,'multiline':False]['text':' CUDA: number of blocks for threads.','line_number':25,'multiline':False]['text':' Round up division for positive number that cannot cause integer overflow','line_number':30,'multiline':False]['text':' namespace at::cuda::detail','line_number':37,'multiline':False]