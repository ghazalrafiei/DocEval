['text':' In standalone tests of cuDevicePrimaryCtxGetState, I've seen the "active" argument end up with weird','line_number':64,'multiline':False]['text':' (garbage-looking nonzero) values when the context is not active, unless I initialize it to zero.','line_number':65,'multiline':False]['text':' Register hasPrimaryContext back to c10::cuda','line_number':71,'multiline':False]['text':' anonymous namespace','line_number':80,'multiline':False]['text':' Sets the CUDA_MODULE_LOADING environment variable','line_number':82,'multiline':False]['text':' if it's not set by the user.','line_number':83,'multiline':False]['text':' NB: deleter is dynamic, because we need it to live in a separate','line_number':96,'multiline':False]['text':' compilation unit (alt is to have another method in hooks, but','line_number':97,'multiline':False]['text':' let's not if we don't need to!)','line_number':98,'multiline':False]['text':' Force the update to enable unit testing. This code get executed before unit tests','line_number':101,'multiline':False]['text':' have a chance to enable vitals.','line_number':102,'multiline':False]['text':' force = ','line_number':103,'multiline':True]['text':' First check if driver is broken/missing, in which case PyTorch CPU','line_number':125,'multiline':False]['text':' functionalities should still work, we should report `false` here.','line_number':126,'multiline':False]['text':' cudaPointerGetAttributes grabs context on the current device, so we set','line_number':130,'multiline':False]['text':' device to one that already has context, if exists.','line_number':131,'multiline':False]['text':' We do not believe that CUDA needs mutable access to the data','line_number':138,'multiline':False]['text':' here.','line_number':139,'multiline':False]['text':' clear CUDA error','line_number':143,'multiline':False]['text':' HIP throws hipErrorUnknown here','line_number':148,'multiline':False]['text':' clear HIP error','line_number':150,'multiline':False]['text':' Currently, this is same as `compiledWithMIOpen`.','line_number':188,'multiline':False]['text':' But in future if there are ROCm builds without MIOpen,','line_number':189,'multiline':False]['text':' then `hasROCM` should return true while `compiledWithMIOpen`','line_number':190,'multiline':False]['text':' should return false','line_number':191,'multiline':False]['text':' must hold onto DynamicLibrary otherwise it will unload','line_number':220,'multiline':False]['text':' NOTE: extra parenthesis around numbers disable clang warnings about','line_number':264,'multiline':False]['text':' dead code','line_number':265,'multiline':False]['text':' Check for Volta cores','line_number':275,'multiline':False]['text':' Check for Volta cores','line_number':289,'multiline':False]['text':' HIP_VERSION value format was changed after ROCm v4.2 to include the patch number','line_number':334,'multiline':False]['text':' If major=xx, minor=yy then format -> xxyy','line_number':336,'multiline':False]['text':' If major=xx, minor=yy & patch=zzzzz then format -> xxyyzzzzz','line_number':340,'multiline':False]['text':' TODO: Make HIPIFY understand CUDART_VERSION macro','line_number':359,'multiline':False]['text':' TODO: Check if miopen has the functions above and unify','line_number':397,'multiline':False]['text':' Sigh, the registry doesn't support namespaces :(','line_number':442,'multiline':False]['text':' namespace at::cuda::detail','line_number':448,'multiline':False]