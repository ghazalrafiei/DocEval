['text':' This is copy-pasted (with modification) from the following llvm file:','line_number':1,'multiline':False]['text':' - https://github.com/llvm/llvm-project/blob/main/libcxx/include/complex','line_number':2,'multiline':False]['text':'','line_number':3,'multiline':False]['text':' -*- C++ -*-','line_number':4,'multiline':False]['text':'===----------------------------------------------------------------------===//','line_number':5,'multiline':False]['text':'','line_number':6,'multiline':False]['text':' Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.','line_number':7,'multiline':False]['text':' See https://llvm.org/LICENSE.txt for license information.','line_number':8,'multiline':False]['text':' SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception','line_number':9,'multiline':False]['text':'','line_number':10,'multiline':False]['text':'===----------------------------------------------------------------------===//','line_number':11,'multiline':False]['text':' 26.3.6 operators:','line_number':224,'multiline':False]['text':' 26.3.7 values:','line_number':515,'multiline':False]['text':' Integral Types','line_number':522,'multiline':False]['text':' Floating point types','line_number':530,'multiline':False]['text':' real','line_number':538,'multiline':False]['text':' imag','line_number':556,'multiline':False]['text':' abs','line_number':574,'multiline':False]['text':' arg','line_number':584,'multiline':False]['text':' Constructors','line_number':628,'multiline':False]['text':' implicit casting to and from `complex<float>`.','line_number':631,'multiline':False]['text':' NOTE: computation of `complex<Half>` will occur in `complex<float>`','line_number':632,'multiline':False]['text':' norm','line_number':660,'multiline':False]['text':' conj','line_number':683,'multiline':False]['text':' proj','line_number':704,'multiline':False]['text':' polar','line_number':744,'multiline':False]['text':' log','line_number':773,'multiline':False]['text':' log10','line_number':783,'multiline':False]['text':' log2','line_number':793,'multiline':False]['text':' sqrt','line_number':803,'multiline':False]['text':' exp','line_number':820,'multiline':False]['text':' pow','line_number':848,'multiline':False]['text':' __sqr, computes pow(x, 2)','line_number':893,'multiline':False]['text':' asinh','line_number':904,'multiline':False]['text':' acosh','line_number':933,'multiline':False]['text':' atanh','line_number':967,'multiline':False]['text':' sinh','line_number':1000,'multiline':False]['text':' cosh','line_number':1015,'multiline':False]['text':' tanh','line_number':1032,'multiline':False]['text':' asin','line_number':1056,'multiline':False]['text':' acos','line_number':1066,'multiline':False]['text':' atan','line_number':1103,'multiline':False]['text':' sin','line_number':1113,'multiline':False]['text':' cos','line_number':1123,'multiline':False]['text':' tan','line_number':1133,'multiline':False]['text':' Literal suffix for complex number literals [complex.literals]','line_number':1143,'multiline':False]['text':' namespace complex_literals','line_number':1168,'multiline':False]['text':' namespace literals','line_number':1169,'multiline':False]['text':' namespace std','line_number':1171,'multiline':False]['text':' namespace at::cuda','line_number':1179,'multiline':False]