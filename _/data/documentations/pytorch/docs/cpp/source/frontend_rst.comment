['text':' Define a new Module.','line_number':44,'multiline':False]['text':' Construct and register two Linear submodules.','line_number':47,'multiline':False]['text':' Implement the Net's algorithm.','line_number':53,'multiline':False]['text':' Use one of many tensor manipulation functions.','line_number':55,'multiline':False]['text':'p=','line_number':57,'multiline':True]['text':'train=','line_number':57,'multiline':True]['text':'dim=','line_number':59,'multiline':True]['text':' Use one of many "standard library" modules.','line_number':63,'multiline':False]['text':' Create a new Net.','line_number':68,'multiline':False]['text':' Create a multi-threaded data loader for the MNIST dataset.','line_number':71,'multiline':False]['text':'batch_size=','line_number':75,'multiline':True]['text':' Instantiate an SGD optimization algorithm to update our Net's parameters.','line_number':77,'multiline':False]['text':'lr=','line_number':78,'multiline':True]['text':' Iterate the data loader to yield batches from the dataset.','line_number':82,'multiline':False]['text':' Reset gradients.','line_number':84,'multiline':False]['text':' Execute the model on the input data.','line_number':86,'multiline':False]['text':' Compute a loss value to judge the prediction of our model.','line_number':88,'multiline':False]['text':' Compute gradients of the loss w.r.t. the parameters of our model.','line_number':90,'multiline':False]['text':' Update the parameters based on the calculated gradients.','line_number':92,'multiline':False]['text':' Output the loss and checkpoint every 100 batches.','line_number':94,'multiline':False]['text':' Serialize your model periodically as a checkpoint.','line_number':98,'multiline':False]['text':'github.com/pytorch/examples/tree/master/cpp>`_.','line_number':106,'multiline':False]['text':'pytorch.org/cppdocs/installing.html>`_ link.','line_number':153,'multiline':False]