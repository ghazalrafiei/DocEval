['text':'
This file is part of Telegram Desktop,
the official desktop application for the Telegram messaging service.

For license and copyright information please follow this link:
https://github.com/telegramdesktop/tdesktop/blob/master/LEGAL
','line_number':1,'multiline':True]['text':' namespace','line_number':40,'multiline':False]['text':' Writes the packets till EAGAIN is got from av_receive_packet()','line_number':58,'multiline':False]['text':' Returns number of packets written or -1 on error','line_number':59,'multiline':False]['text':' Send _inner to it's thread for destruction.','line_number':133,'multiline':False]['text':' And wait for it to finish.','line_number':138,'multiline':False]['text':' Special whence for determining filesize without any seek.','line_number':212,'multiline':False]['text':' Start OpenAL Capture','line_number':245,'multiline':False]['text':' Create encoding context','line_number':260,'multiline':False]['text':' Add audio stream','line_number':289,'multiline':False]['text':' DA_FFMPEG_NEW_CHANNEL_LAYOUT','line_number':317,'multiline':False]['text':' DA_FFMPEG_NEW_CHANNEL_LAYOUT','line_number':320,'multiline':False]['text':' Open audio stream','line_number':327,'multiline':False]['text':' Alloc source samples','line_number':334,'multiline':False]['text':'if ((res = av_samples_alloc_array_and_samples(&d->srcSamplesData, 0, d->codecContext->channels, d->srcSamples, d->codecContext->sample_fmt, 0)) < 0) {','line_number':337,'multiline':False]['text':'	LOG(("Audio Error: Unable to av_samples_alloc_array_and_samples for capture, error %1, %2").arg(res).arg(av_make_error_string(err, sizeof(err), res)));','line_number':338,'multiline':False]['text':'	onStop(false);','line_number':339,'multiline':False]['text':'	emit error();','line_number':340,'multiline':False]['text':'	return;','line_number':341,'multiline':False]['text':'}','line_number':342,'multiline':False]['text':' Using _captured directly','line_number':343,'multiline':False]['text':' Prepare resampling','line_number':345,'multiline':False]['text':' DA_FFMPEG_NEW_CHANNEL_LAYOUT','line_number':357,'multiline':False]['text':' DA_FFMPEG_NEW_CHANNEL_LAYOUT','line_number':369,'multiline':False]['text':' Write file header','line_number':394,'multiline':False]['text':' in stop() already','line_number':409,'multiline':False]['text':' stop in the middle of processing - error.','line_number':418,'multiline':False]['text':' get last data','line_number':420,'multiline':False]['text':' Write what is left','line_number':426,'multiline':False]['text':' Drain the codec.','line_number':456,'multiline':False]['text':' Finish stream','line_number':474,'multiline':False]['text':' Get samples from OpenAL','line_number':585,'multiline':False]['text':' Count new recording level and update view','line_number':598,'multiline':False]['text':' Write frames','line_number':619,'multiline':False]['text':' Collapse the buffer','line_number':628,'multiline':False]['text':' Prepare audio frame','line_number':640,'multiline':False]['text':' in the middle of a sample','line_number':642,'multiline':False]['text':'	memcpy(d->srcSamplesData[0], _captured.constData() + offset, framesize);','line_number':655,'multiline':False]['text':' Convert to final format','line_number':683,'multiline':False]['text':' Write audio frame','line_number':703,'multiline':False]['text':' DA_FFMPEG_NEW_CHANNEL_LAYOUT','line_number':710,'multiline':False]['text':' DA_FFMPEG_NEW_CHANNEL_LAYOUT','line_number':713,'multiline':False]['text':' drain','line_number':757,'multiline':False]['text':' namespace Capture','line_number':801,'multiline':False]['text':' namespace Media','line_number':802,'multiline':False]