['text':'
This file is part of Telegram Desktop,
the official desktop application for the Telegram messaging service.

For license and copyright information please follow this link:
https://github.com/telegramdesktop/tdesktop/blob/master/LEGAL
','line_number':1,'multiline':True]['text':' namespace','line_number':48,'multiline':False]['text':' Thread: Any.','line_number':56,'multiline':False]['text':' Thread: Any.','line_number':66,'multiline':False]['text':' Thread: Any. Must be locked: AudioMutex.','line_number':127,'multiline':False]['text':' Thread: Any. Must be locked: AudioMutex.','line_number':141,'multiline':False]['text':' Thread: Main. Must be locked: AudioMutex.','line_number':169,'multiline':False]['text':' namespace','line_number':183,'multiline':False]['text':' Thread: Main.','line_number':185,'multiline':False]['text':' Thread: Main.','line_number':207,'multiline':False]['text':' MixerInstance variable should be modified under AudioMutex protection.','line_number':211,'multiline':False]['text':' So it is modified in the ~Mixer() destructor after all tracks are cleared.','line_number':212,'multiline':False]['text':' No sync required already.','line_number':215,'multiline':False]['text':' Thread: Main. Locks: AudioMutex.','line_number':219,'multiline':False]['text':' Thread: Any. Must be locked: AudioMutex.','line_number':225,'multiline':False]['text':' namespace Audio','line_number':283,'multiline':False]['text':' preload next part if less than 2 seconds remains','line_number':289,'multiline':False]['text':' 100ms per check audio position','line_number':291,'multiline':False]['text':' update position called each 2400 samples','line_number':292,'multiline':False]['text':' 7ms','line_number':293,'multiline':False]['text':' namespace','line_number':297,'multiline':False]['text':' Thread: Any. Must be locked: AudioMutex.','line_number':303,'multiline':False]['text':' We must always start the source if we want the AL_SAMPLE_OFFSET to be applied.','line_number':380,'multiline':False]['text':' Otherwise it won't be read by alGetSource and we'll get a corrupt position.','line_number':381,'multiline':False]['text':' So in case of a paused source we start it and then immediately pause it.','line_number':382,'multiline':False]['text':' See if there are no free buffers right now.','line_number':431,'multiline':False]['text':' Try to unqueue some buffer.','line_number':433,'multiline':False]['text':' No processed buffers, wait.','line_number':436,'multiline':False]['text':' Unqueue some processed buffer.','line_number':440,'multiline':False]['text':' Find it in the list and clear it.','line_number':444,'multiline':False]['text':' Thread: Main. Locks: AudioMutex.','line_number':556,'multiline':False]['text':' We've replaced base::Observable with on_main, because','line_number':588,'multiline':False]['text':' base::Observable::notify is not syncronous by default.','line_number':589,'multiline':False]['text':' Clear all previous state.','line_number':766,'multiline':False]['text':' Thread: Main. Locks: AudioMutex.','line_number':798,'multiline':False]['text':' This calls Audio::AttachToDevice().','line_number':935,'multiline':False]['text':' When starting the video audio is in paused state and','line_number':943,'multiline':False]['text':' gets resumed before the stream is created with any data.','line_number':944,'multiline':False]['text':' Thread: Main. Must be locked: AudioMutex.','line_number':1082,'multiline':False]['text':' Thread: Main. Must be locked: AudioMutex.','line_number':1091,'multiline':False]['text':' Thread: Any. Must be locked: AudioMutex.','line_number':1114,'multiline':False]['text':' When stopped because of insufficient data while streaming,','line_number':1333,'multiline':False]['text':' inform the player about the last position we were at.','line_number':1334,'multiline':False]['text':' Thread: Any.','line_number':1399,'multiline':False]['text':' Thread: Any.','line_number':1404,'multiline':False]['text':' Thread: Any. Must be locked: AudioMutex.','line_number':1409,'multiline':False]['text':' always connected in the basic OpenAL, disconnect status is an extension','line_number':1414,'multiline':False]['text':' Thread: Any. Must be locked: AudioMutex.','line_number':1425,'multiline':False]['text':' Thread: Main. Locks: AudioMutex.','line_number':1434,'multiline':False]['text':' namespace internal','line_number':1443,'multiline':False]['text':' namespace Player','line_number':1445,'multiline':False]['text':'for (AVDictionaryEntry *tag = av_dict_get(dict, "", 0, AV_DICT_IGNORE_SUFFIX); tag; tag = av_dict_get(dict, "", tag, AV_DICT_IGNORE_SUFFIX)) {','line_number':1505,'multiline':False]['text':'	const char *key = tag->key;','line_number':1506,'multiline':False]['text':'	const char *value = tag->value;','line_number':1507,'multiline':False]['text':'	QString tmp = QString::fromUtf8(value);','line_number':1508,'multiline':False]['text':'}','line_number':1509,'multiline':False]['text':' namespace Player','line_number':1573,'multiline':False]['text':' Not a child loader.','line_number':1611,'multiline':False]['text':' namespace Media','line_number':1659,'multiline':False]