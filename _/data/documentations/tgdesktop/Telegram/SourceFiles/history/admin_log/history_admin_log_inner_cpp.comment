['text':'
This file is part of Telegram Desktop,
the official desktop application for the Telegram messaging service.

For license and copyright information please follow this link:
https://github.com/telegramdesktop/tdesktop/blob/master/LEGAL
','line_number':1,'multiline':True]['text':' If we require to support more admins we'll have to rewrite this anyway.','line_number':69,'multiline':False]['text':' namespace','line_number':76,'multiline':False]['text':' No displayed messages in this history.','line_number':82,'multiline':False]['text':' Binary search should've skipped all the items that are above / below the visible area.','line_number':111,'multiline':False]['text':' Skip all the items that are below / above the visible area.','line_number':122,'multiline':False]['text':' Find and remember the top of an attached messages pack','line_number':148,'multiline':False]['text':' -1 means we didn't find an attached to next message yet.','line_number':149,'multiline':False]['text':' Skip all service messages.','line_number':153,'multiline':False]['text':' Call method on a userpic for all messages that have it and for those who are not showing it','line_number':162,'multiline':False]['text':' because of their attachment to the next message if they are bottom-most visible.','line_number':163,'multiline':False]['text':' Attach userpic to the bottom of the visible area with the same margin as the last message.','line_number':168,'multiline':False]['text':' Do not let the userpic go above the attached messages pack top line.','line_number':172,'multiline':False]['text':' Call the template callback function that was passed','line_number':175,'multiline':False]['text':' and return if it finished everything it needed.','line_number':176,'multiline':False]['text':' Forget the found top of the pack, search for the next one from scratch.','line_number':182,'multiline':False]['text':' Find and remember the bottom of an single-day messages pack','line_number':195,'multiline':False]['text':' -1 means we didn't find a same-day with previous message yet.','line_number':196,'multiline':False]['text':' Call method on a date for all messages that have it and for those who are not showing it','line_number':205,'multiline':False]['text':' because they are in a one day together with the previous message if they are top-most visible.','line_number':206,'multiline':False]['text':' Attach date to the top of the visible area with the same margin as it has in service message.','line_number':211,'multiline':False]['text':' Do not let the date go below the single-day messages pack bottom line.','line_number':214,'multiline':False]['text':' Call the template callback function that was passed','line_number':218,'multiline':False]['text':' and return if it finished everything it needed.','line_number':219,'multiline':False]['text':' Forget the found bottom of the pack, search for the next one from scratch.','line_number':225,'multiline':False]['text':' Unload userpics.','line_number':350,'multiline':False]['text':' Show scroll date only if it is not the initial onScroll() event (with empty _scrollDateLastItem).','line_number':394,'multiline':False]['text':' Don't load or handle anything anymore.','line_number':691,'multiline':False]['text':' When loading items up we just add them to the back of the _items vector.','line_number':799,'multiline':False]['text':' When loading items down we add them to a new vector and copy _items after them.','line_number':800,'multiline':False]['text':' Reverse the inner order of the added messages, because we load events','line_number':842,'multiline':False]['text':' from bottom to top but inside one event they go from top to bottom.','line_number':843,'multiline':False]['text':' Should be ": 0", but zero is skipped anyway.','line_number':881,'multiline':False]['text':' stop the enumeration if the userpic is below the painted rect','line_number':988,'multiline':False]['text':' paint the userpic if it intersects the painted rect','line_number':993,'multiline':False]['text':' stop the enumeration if the date is above the painted rect','line_number':1010,'multiline':False]['text':'bool noFloatingDate = (item->date.date() == lastDate && displayDate);','line_number':1021,'multiline':False]['text':'if (noFloatingDate) {','line_number':1022,'multiline':False]['text':'	if (itemtop < showFloatingBefore) {','line_number':1023,'multiline':False]['text':'		noFloatingDate = false;','line_number':1024,'multiline':False]['text':'	}','line_number':1025,'multiline':False]['text':'}','line_number':1026,'multiline':False]['text':' paint the date if it intersects the painted rect','line_number':1028,'multiline':False]['text':' || noFloatingDate','line_number':1030,'multiline':True]['text':'noFloatingDate ? itemtop :','line_number':1033,'multiline':True]['text':' Q_OS_MAC','line_number':1105,'multiline':False]['text':' -1 - has selection, but no over, 0 - no selection, 1 - over text','line_number':1143,'multiline':False]['text':' suggest to block','line_number':1262,'multiline':False]['text':' maybe cursor on some text history item?','line_number':1266,'multiline':False]['text':' ignore mouse press, that was hiding context menu','line_number':1505,'multiline':False]['text':' start text drag','line_number':1601,'multiline':False]['text':'_widget->noSelectingScroll(); // TODO','line_number':1631,'multiline':False]['text':'_widget->noSelectingScroll(); // TODO','line_number':1676,'multiline':False]['text':' stop enumeration if the userpic is below our point','line_number':1743,'multiline':False]['text':' stop enumeration if we've found a userpic under the cursor','line_number':1748,'multiline':False]['text':'			cursor = style::cur_cross;','line_number':1777,'multiline':False]['text':' Voice message seek support.','line_number':1811,'multiline':False]['text':'if (_mouseAction == MouseAction::Selecting) {','line_number':1817,'multiline':False]['text':'	_widget->checkSelectingScroll(mousePos);','line_number':1818,'multiline':False]['text':'} else {','line_number':1819,'multiline':False]['text':'	_widget->noSelectingScroll();','line_number':1820,'multiline':False]['text':'} // TODO','line_number':1821,'multiline':False]['text':'auto uponSelected = false;','line_number':1831,'multiline':False]['text':'if (_mouseActionItem) {','line_number':1832,'multiline':False]['text':'	if (!_selected.isEmpty() && _selected.cbegin().value() == FullSelection) {','line_number':1833,'multiline':False]['text':'		uponSelected = _selected.contains(_mouseActionItem);','line_number':1834,'multiline':False]['text':'	} else {','line_number':1835,'multiline':False]['text':'		StateRequest request;','line_number':1836,'multiline':False]['text':'		request.flags |= Ui::Text::StateRequest::Flag::LookupSymbol;','line_number':1837,'multiline':False]['text':'		auto dragState = _mouseActionItem->textState(_dragStartPosition.x(), _dragStartPosition.y(), request);','line_number':1838,'multiline':False]['text':'		uponSelected = (dragState.cursor == CursorState::Text);','line_number':1839,'multiline':False]['text':'		if (uponSelected) {','line_number':1840,'multiline':False]['text':'			if (_selected.isEmpty() ||','line_number':1841,'multiline':False]['text':'				_selected.cbegin().value() == FullSelection ||','line_number':1842,'multiline':False]['text':'				_selected.cbegin().key() != _mouseActionItem','line_number':1843,'multiline':False]['text':'				) {','line_number':1844,'multiline':False]['text':'				uponSelected = false;','line_number':1845,'multiline':False]['text':'			} else {','line_number':1846,'multiline':False]['text':'				uint16 selFrom = _selected.cbegin().value().from, selTo = _selected.cbegin().value().to;','line_number':1847,'multiline':False]['text':'				if (dragState.symbol < selFrom || dragState.symbol >= selTo) {','line_number':1848,'multiline':False]['text':'					uponSelected = false;','line_number':1849,'multiline':False]['text':'				}','line_number':1850,'multiline':False]['text':'			}','line_number':1851,'multiline':False]['text':'		}','line_number':1852,'multiline':False]['text':'	}','line_number':1853,'multiline':False]['text':'}','line_number':1854,'multiline':False]['text':'auto pressedHandler = ClickHandler::getPressed();','line_number':1855,'multiline':False]['text':'if (dynamic_cast<VoiceSeekClickHandler*>(pressedHandler.data())) {','line_number':1857,'multiline':False]['text':'	return;','line_number':1858,'multiline':False]['text':'}','line_number':1859,'multiline':False]['text':'TextWithEntities sel;','line_number':1861,'multiline':False]['text':'QList<QUrl> urls;','line_number':1862,'multiline':False]['text':'if (uponSelected) {','line_number':1863,'multiline':False]['text':'	sel = getSelectedText();','line_number':1864,'multiline':False]['text':'} else if (pressedHandler) {','line_number':1865,'multiline':False]['text':'	sel = { pressedHandler->dragText(), EntitiesInText() };','line_number':1866,'multiline':False]['text':'	//if (!sel.isEmpty() && sel.at(0) != '/' && sel.at(0) != '@' && sel.at(0) != '#') {','line_number':1867,'multiline':False]['text':'	//	urls.push_back(QUrl::fromEncoded(sel.toUtf8())); // Google Chrome crashes in Mac OS X O_o','line_number':1868,'multiline':False]['text':'	//}','line_number':1869,'multiline':False]['text':'}','line_number':1870,'multiline':False]['text':'if (auto mimeData = mimeDataFromTextWithEntities(sel)) {','line_number':1871,'multiline':False]['text':'	updateDragSelection(0, 0, false);','line_number':1872,'multiline':False]['text':'	_widget->noSelectingScroll();','line_number':1873,'multiline':False]['text':'	if (!urls.isEmpty()) mimeData->setUrls(urls);','line_number':1875,'multiline':False]['text':'	if (uponSelected && !Adaptive::OneColumn()) {','line_number':1876,'multiline':False]['text':'		auto selectedState = getSelectionState();','line_number':1877,'multiline':False]['text':'		if (selectedState.count > 0 && selectedState.count == selectedState.canForwardCount) {','line_number':1878,'multiline':False]['text':'			session().data().setMimeForwardIds(getSelectedItems());','line_number':1879,'multiline':False]['text':'			mimeData->setData(u"application/x-td-forward"_q, "1");','line_number':1880,'multiline':False]['text':'		}','line_number':1881,'multiline':False]['text':'	}','line_number':1882,'multiline':False]['text':'	_controller->window()->launchDrag(std::move(mimeData));','line_number':1883,'multiline':False]['text':'	return;','line_number':1884,'multiline':False]['text':'} else {','line_number':1885,'multiline':False]['text':'	auto forwardMimeType = QString();','line_number':1886,'multiline':False]['text':'	auto pressedMedia = static_cast<HistoryView::Media*>(nullptr);','line_number':1887,'multiline':False]['text':'	if (auto pressedItem = Element::Pressed()) {','line_number':1888,'multiline':False]['text':'		pressedMedia = pressedItem->media();','line_number':1889,'multiline':False]['text':'		if (_mouseCursorState == CursorState::Date) {','line_number':1890,'multiline':False]['text':'			forwardMimeType = u"application/x-td-forward"_q;','line_number':1891,'multiline':False]['text':'			session().data().setMimeForwardIds(','line_number':1892,'multiline':False]['text':'				session().data().itemOrItsGroup(pressedItem->data()));','line_number':1893,'multiline':False]['text':'		}','line_number':1894,'multiline':False]['text':'	}','line_number':1895,'multiline':False]['text':'	if (auto pressedLnkItem = Element::PressedLink()) {','line_number':1896,'multiline':False]['text':'		if ((pressedMedia = pressedLnkItem->media())) {','line_number':1897,'multiline':False]['text':'			if (forwardMimeType.isEmpty()','line_number':1898,'multiline':False]['text':'				&& pressedMedia->dragItemByHandler(pressedHandler)) {','line_number':1899,'multiline':False]['text':'				forwardMimeType = u"application/x-td-forward"_q;','line_number':1900,'multiline':False]['text':'				session().data().setMimeForwardIds(','line_number':1901,'multiline':False]['text':'					{ 1, pressedLnkItem->fullId() });','line_number':1902,'multiline':False]['text':'			}','line_number':1903,'multiline':False]['text':'		}','line_number':1904,'multiline':False]['text':'	}','line_number':1905,'multiline':False]['text':'	if (!forwardMimeType.isEmpty()) {','line_number':1906,'multiline':False]['text':'		auto mimeData = std::make_unique<QMimeData>();','line_number':1907,'multiline':False]['text':'		mimeData->setData(forwardMimeType, "1");','line_number':1908,'multiline':False]['text':'		if (auto document = (pressedMedia ? pressedMedia->getDocument() : nullptr)) {','line_number':1909,'multiline':False]['text':'			auto filepath = document->filepath(true);','line_number':1910,'multiline':False]['text':'			if (!filepath.isEmpty()) {','line_number':1911,'multiline':False]['text':'				QList<QUrl> urls;','line_number':1912,'multiline':False]['text':'				urls.push_back(QUrl::fromLocalFile(filepath));','line_number':1913,'multiline':False]['text':'				mimeData->setUrls(urls);','line_number':1914,'multiline':False]['text':'			}','line_number':1915,'multiline':False]['text':'		}','line_number':1916,'multiline':False]['text':'		// This call enters event loop and can destroy any QObject.','line_number':1918,'multiline':False]['text':'		_controller->window()->launchDrag(std::move(mimeData));','line_number':1919,'multiline':False]['text':'		return;','line_number':1920,'multiline':False]['text':'	}','line_number':1921,'multiline':False]['text':'} // TODO','line_number':1922,'multiline':False]['text':' No need to refresh views in admin log.','line_number':1943,'multiline':False]['text':' namespace AdminLog','line_number':1955,'multiline':False]