['text':'
This file is part of Telegram Desktop,
the official desktop application for the Telegram messaging service.

For license and copyright information please follow this link:
https://github.com/telegramdesktop/tdesktop/blob/master/LEGAL
','line_number':1,'multiline':True]['text':' ClickHandlerContext.','line_number':56,'multiline':False]['text':' For Media::Clip::Finish().','line_number':70,'multiline':False]['text':' = LaunchState::Running','line_number':115,'multiline':True]['text':'case Ui::GL::ANGLE::OpenGL: return "OpenGL";','line_number':127,'multiline':False]['text':' Q_OS_WIN','line_number':131,'multiline':False]['text':' Q_OS_WIN','line_number':135,'multiline':False]['text':' namespace','line_number':138,'multiline':False]['text':' #TODO multi someSessionValue','line_number':191,'multiline':False]['text':' We must manually destroy all windows before going further.','line_number':211,'multiline':False]['text':' DestroyWindow on Windows (at least with an active WebView) enters','line_number':212,'multiline':False]['text':' event loop and invoke scheduled crl::on_main callbacks.','line_number':213,'multiline':False]['text':'','line_number':214,'multiline':False]['text':' For example Domain::removeRedundantAccounts() is called from','line_number':215,'multiline':False]['text':' Domain::finish() and there is a violation on Ensures(started()).','line_number':216,'multiline':False]['text':' Depends on OpenSSL on macOS, so on ThirdParty::start().','line_number':249,'multiline':False]['text':' Depends on notifications settings.','line_number':250,'multiline':False]['text':' Depends on app settings being read.','line_number':256,'multiline':False]['text':' Create mime database, so it won't be slow later.','line_number':310,'multiline':False]['text':' In case of non-legacy passcoded app all global settings are ready.','line_number':453,'multiline':False]['text':' On macOS we create some windows async, otherwise they're','line_number':510,'multiline':False]['text':' added to the Dock Menu as a visible window and are removed','line_number':511,'multiline':False]['text':' only after first show and then hide.','line_number':512,'multiline':False]['text':' Q_OS_MAC || Q_OS_WIN','line_number':516,'multiline':False]['text':' On Windows we needed such hack for the main window, otherwise','line_number':517,'multiline':False]['text':' somewhere inside the media viewer creating code its geometry','line_number':518,'multiline':False]['text':' was broken / lost to some invalid values.','line_number':519,'multiline':False]['text':' Q_OS_MAC || Q_OS_WIN','line_number':525,'multiline':False]['text':' On macOS we create some windows async, otherwise they're','line_number':530,'multiline':False]['text':' added to the Dock Menu as a visible window and are removed','line_number':531,'multiline':False]['text':' only after first show and then hide, tray icon being "Item-0".','line_number':532,'multiline':False]['text':' Q_OS_MAC','line_number':536,'multiline':False]['text':' Q_OS_MAC','line_number':538,'multiline':False]['text':' handle shortcuts ourselves','line_number':643,'multiline':False]['text':' macOS Qt bug workaround, sometimes no leaveEvent() gets to the nested widgets.','line_number':1612,'multiline':False]['text':' Q_OS_MAC','line_number':1642,'multiline':False]['text':' Q_OS_MAC','line_number':1658,'multiline':False]['text':' namespace Core','line_number':1830,'multiline':False]