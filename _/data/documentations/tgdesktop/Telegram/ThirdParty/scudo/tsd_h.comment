['text':'===-- tsd.h ---------------------------------------------------*- C++ -*-===//','line_number':1,'multiline':False]['text':'','line_number':2,'multiline':False]['text':' Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.','line_number':3,'multiline':False]['text':' See https://llvm.org/LICENSE.txt for license information.','line_number':4,'multiline':False]['text':' SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception','line_number':5,'multiline':False]['text':'','line_number':6,'multiline':False]['text':'===----------------------------------------------------------------------===//','line_number':7,'multiline':False]['text':' for PTHREAD_DESTRUCTOR_ITERATIONS','line_number':17,'multiline':False]['text':' With some build setups, this might still not be defined.','line_number':20,'multiline':False]['text':' Ideally, we may want to assert that all the operations on','line_number':60,'multiline':False]['text':' Cache/QuarantineCache always have the `Mutex` acquired. However, the','line_number':61,'multiline':False]['text':' current architecture of accessing TSD is not easy to cooperate with the','line_number':62,'multiline':False]['text':' thread-safety analysis because of pointer aliasing. So now we just add the','line_number':63,'multiline':False]['text':' assertion on the getters of Cache/QuarantineCache.','line_number':64,'multiline':False]['text':'','line_number':65,'multiline':False]['text':' TODO(chiahungduan): Ideally, we want to do `Mutex.assertHeld` but acquiring','line_number':66,'multiline':False]['text':' TSD doesn't always require holding the lock. Add this assertion while the','line_number':67,'multiline':False]['text':' lock is always acquired.','line_number':68,'multiline':False]['text':' namespace scudo','line_number':85,'multiline':False]['text':' SCUDO_TSD_H_','line_number':87,'multiline':False]