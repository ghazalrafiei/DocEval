['text':'===-- timing.h ------------------------------------------------*- C++ -*-===//','line_number':1,'multiline':False]['text':'','line_number':2,'multiline':False]['text':' Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.','line_number':3,'multiline':False]['text':' See https://llvm.org/LICENSE.txt for license information.','line_number':4,'multiline':False]['text':' SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception','line_number':5,'multiline':False]['text':'','line_number':6,'multiline':False]['text':'===----------------------------------------------------------------------===//','line_number':7,'multiline':False]['text':' A simple timer for evaluating execution time of code snippets. It can be used','line_number':24,'multiline':False]['text':' along with TimingManager or standalone.','line_number':25,'multiline':False]['text':' The use of Timer without binding to a TimingManager is supposed to do the','line_number':28,'multiline':False]['text':' timer logging manually. Otherwise, TimingManager will do the logging stuff','line_number':29,'multiline':False]['text':' for you.','line_number':30,'multiline':False]['text':' Unset the bound TimingManager so that we don't report the data back. This','line_number':52,'multiline':False]['text':' is useful if we only want to track subset of certain scope events.','line_number':53,'multiline':False]['text':' A RAII-style wrapper for easy scope execution measurement. Note that in order','line_number':71,'multiline':False]['text':' not to take additional space for the message like `Name`. It only works with','line_number':72,'multiline':False]['text':' TimingManager.','line_number':73,'multiline':False]['text':' In Scudo, the execution time of single run of code snippets may not be','line_number':81,'multiline':False]['text':' useful, we are more interested in the average time from several runs.','line_number':82,'multiline':False]['text':' TimingManager lets the registered timer report their data and reports the','line_number':83,'multiline':False]['text':' average execution time for each timer periodically.','line_number':84,'multiline':False]['text':' Add a sub-Timer associated with another Timer. This is used when we want to','line_number':110,'multiline':False]['text':' detail the execution time in the scope of a Timer.','line_number':111,'multiline':False]['text':' For example,','line_number':112,'multiline':False]['text':'   void Foo() {','line_number':113,'multiline':False]['text':'     // T1 records the time spent in both first and second tasks.','line_number':114,'multiline':False]['text':'     ScopedTimer T1(getTimingManager(), "Task1");','line_number':115,'multiline':False]['text':'     {','line_number':116,'multiline':False]['text':'       // T2 records the time spent in first task','line_number':117,'multiline':False]['text':'       ScopedTimer T2(getTimingManager, T1, "Task2");','line_number':118,'multiline':False]['text':'       // Do first task.','line_number':119,'multiline':False]['text':'     }','line_number':120,'multiline':False]['text':'     // Do second task.','line_number':121,'multiline':False]['text':'   }','line_number':122,'multiline':False]['text':'','line_number':123,'multiline':False]['text':' The report will show proper indents to indicate the nested relation like,','line_number':124,'multiline':False]['text':'   -- Average Operation Time -- -- Name (# of Calls) --','line_number':125,'multiline':False]['text':'             10.0(ns)            Task1 (1)','line_number':126,'multiline':False]['text':'              5.0(ns)              Task2 (1)','line_number':127,'multiline':False]['text':' Only keep single digit of fraction is enough and it enables easier layout','line_number':176,'multiline':False]['text':' maintenance.','line_number':177,'multiline':False]['text':' Instead of maintaining pages for timer registration, a static buffer is','line_number':193,'multiline':False]['text':' sufficient for most use cases in Scudo.','line_number':194,'multiline':False]['text':' The frequency of proactively dumping the timer statistics. For example, the','line_number':210,'multiline':False]['text':' default setting is to dump the statistics every 100 reported events.','line_number':211,'multiline':False]['text':' namespace scudo','line_number':219,'multiline':False]['text':' SCUDO_TIMING_H_','line_number':221,'multiline':False]