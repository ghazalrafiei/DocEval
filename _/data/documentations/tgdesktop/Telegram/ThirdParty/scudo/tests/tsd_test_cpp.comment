['text':'===-- tsd_test.cpp --------------------------------------------*- C++ -*-===//','line_number':1,'multiline':False]['text':'','line_number':2,'multiline':False]['text':' Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.','line_number':3,'multiline':False]['text':' See https://llvm.org/LICENSE.txt for license information.','line_number':4,'multiline':False]['text':' SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception','line_number':5,'multiline':False]['text':'','line_number':6,'multiline':False]['text':'===----------------------------------------------------------------------===//','line_number':7,'multiline':False]['text':' We mock out an allocator with a TSD registry, mostly using empty stubs. The','line_number':21,'multiline':False]['text':' cache contains a single volatile uptr, to be able to test that several','line_number':22,'multiline':False]['text':' concurrent threads will not access or modify the same cache at the same time.','line_number':23,'multiline':False]['text':' This should only be called once by the registry.','line_number':34,'multiline':False]['text':'MinimalInit=','line_number':99,'multiline':True]['text':'MinimalInit=','line_number':109,'multiline':True]['text':'MinimalInit=','line_number':137,'multiline':True]['text':' For an exclusive TSD, the cache should be empty. We cannot guarantee the','line_number':141,'multiline':False]['text':' same for a shared TSD.','line_number':142,'multiline':False]['text':' Transform the thread id to a uptr to use it as canary.','line_number':145,'multiline':False]['text':' Loop a few times to make sure that a concurrent thread isn't modifying it.','line_number':149,'multiline':False]['text':'MinimalInit=','line_number':194,'multiline':True]['text':' We attempt to use as many TSDs as the shared cache offers by creating a','line_number':219,'multiline':False]['text':' decent amount of threads that will be run concurrently and attempt to get','line_number':220,'multiline':False]['text':' and lock TSDs. We put them all in a set and count the number of entries','line_number':221,'multiline':False]['text':' after we are done.','line_number':222,'multiline':False]['text':' The initial number of TSDs we get will be the minimum of the default count','line_number':233,'multiline':False]['text':' and the number of CPUs.','line_number':234,'multiline':False]['text':' Increase the number of TSDs to 16.','line_number':238,'multiline':False]['text':' We should get 16 distinct TSDs back.','line_number':250,'multiline':False]