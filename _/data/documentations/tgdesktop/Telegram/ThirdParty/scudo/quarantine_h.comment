['text':'===-- quarantine.h --------------------------------------------*- C++ -*-===//','line_number':1,'multiline':False]['text':'','line_number':2,'multiline':False]['text':' Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.','line_number':3,'multiline':False]['text':' See https://llvm.org/LICENSE.txt for license information.','line_number':4,'multiline':False]['text':' SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception','line_number':5,'multiline':False]['text':'','line_number':6,'multiline':False]['text':'===----------------------------------------------------------------------===//','line_number':7,'multiline':False]['text':' With the following count, a batch (and the header that protects it) occupy','line_number':20,'multiline':False]['text':' 4096 bytes on 32-bit platforms, and 8192 bytes on 64-bit.','line_number':21,'multiline':False]['text':' Account for the Batch Size.','line_number':31,'multiline':False]['text':' The total size of quarantined nodes recorded in this batch.','line_number':34,'multiline':False]['text':' 8Kb.','line_number':63,'multiline':False]['text':' Per-thread cache of memory blocks.','line_number':65,'multiline':False]['text':' Total memory used, including internal accounting.','line_number':70,'multiline':False]['text':' Memory used for internal accounting.','line_number':72,'multiline':False]['text':' Move all the chunks into the current batch.','line_number':114,'multiline':False]['text':' Remove the next batch From the list and account for its Size.','line_number':118,'multiline':False]['text':' Add it to deallocation list.','line_number':121,'multiline':False]['text':' The callback interface is:','line_number':167,'multiline':False]['text':' void Callback::recycle(Node *Ptr);','line_number':168,'multiline':False]['text':' void *Callback::allocate(uptr Size);','line_number':169,'multiline':False]['text':' void Callback::deallocate(void *Ptr);','line_number':170,'multiline':False]['text':' Thread local quarantine size can be zero only when global quarantine size','line_number':181,'multiline':False]['text':' is zero (it allows us to perform just one atomic read per put() call).','line_number':182,'multiline':False]['text':' 90% of max size.','line_number':186,'multiline':False]['text':' This is supposed to be used in test only.','line_number':195,'multiline':False]['text':' It assumes that the world is stopped, just as the allocator's printStats.','line_number':230,'multiline':False]['text':' RecycleMutex must be locked 1st since we grab CacheMutex within recycle.','line_number':237,'multiline':False]['text':' Read-only data.','line_number':248,'multiline':False]['text':' Go over the batches and merge partially filled ones to','line_number':262,'multiline':False]['text':' save some memory, otherwise batches themselves (since the memory used','line_number':263,'multiline':False]['text':' by them is counted against quarantine limit) can overcome the actual','line_number':264,'multiline':False]['text':' user's quarantined chunks, which diminishes the purpose of the','line_number':265,'multiline':False]['text':' quarantine.','line_number':266,'multiline':False]['text':' Do the merge only when overhead exceeds this predefined limit (might','line_number':270,'multiline':False]['text':' require some tuning). It saves us merge attempt when the batch list','line_number':271,'multiline':False]['text':' quarantine is unlikely to contain batches suitable for merge.','line_number':272,'multiline':False]['text':' Extract enough chunks from the quarantine to get below the max','line_number':279,'multiline':False]['text':' quarantine size and leave some leeway for the newly quarantined chunks.','line_number':280,'multiline':False]['text':' namespace scudo','line_number':307,'multiline':False]['text':' SCUDO_QUARANTINE_H_','line_number':309,'multiline':False]