['text':'===-- stats.h -------------------------------------------------*- C++ -*-===//','line_number':1,'multiline':False]['text':'','line_number':2,'multiline':False]['text':' Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.','line_number':3,'multiline':False]['text':' See https://llvm.org/LICENSE.txt for license information.','line_number':4,'multiline':False]['text':' SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception','line_number':5,'multiline':False]['text':'','line_number':6,'multiline':False]['text':'===----------------------------------------------------------------------===//','line_number':7,'multiline':False]['text':' Memory allocator statistics','line_number':21,'multiline':False]['text':' Per-thread stats, live in per-thread cache. We use atomics so that the','line_number':26,'multiline':False]['text':' numbers themselves are consistent. But we don't use atomic_{add|sub} or a','line_number':27,'multiline':False]['text':' lock, because those are expensive operations , and we only care for the stats','line_number':28,'multiline':False]['text':' to be "somewhat" correct: eg. if we call GlobalStats::get while a thread is','line_number':29,'multiline':False]['text':' LocalStats::add'ing, this is OK, we will still get a meaningful number.','line_number':30,'multiline':False]['text':' Global stats, used for aggregation and querying.','line_number':59,'multiline':False]['text':' All stats must be non-negative.','line_number':84,'multiline':False]['text':' namespace scudo','line_number':100,'multiline':False]['text':' SCUDO_STATS_H_','line_number':102,'multiline':False]