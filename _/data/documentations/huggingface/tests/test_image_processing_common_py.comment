['text':' coding=utf-8','line_number':1,'multiline':False]['text':' Copyright 2023 HuggingFace Inc.','line_number':2,'multiline':False]['text':'','line_number':3,'multiline':False]['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':4,'multiline':False]['text':' you may not use this file except in compliance with the License.','line_number':5,'multiline':False]['text':' You may obtain a copy of the License at','line_number':6,'multiline':False]['text':'','line_number':7,'multiline':False]['text':'     http://www.apache.org/licenses/LICENSE-2.0','line_number':8,'multiline':False]['text':'','line_number':9,'multiline':False]['text':' Unless required by applicable law or agreed to in writing, software','line_number':10,'multiline':False]['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':11,'multiline':False]['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':12,'multiline':False]['text':' See the License for the specific language governing permissions and','line_number':13,'multiline':False]['text':' limitations under the License.','line_number':14,'multiline':False]['text':' To avoid getting image width/height 0','line_number':58,'multiline':False]['text':' If `size_divisor` is defined, the image needs to have width/size >= `size_divisor`','line_number':60,'multiline':False]['text':' PIL expects the channel dimension as last dimension','line_number':66,'multiline':False]['text':' PIL expects the channel dimension as last dimension','line_number':83,'multiline':False]['text':' Initialize image_processor','line_number':166,'multiline':False]['text':' create random PyTorch tensors','line_number':169,'multiline':False]['text':' for layoutLM compatiblity','line_number':173,'multiline':False]['text':' Try with text + image feature','line_number':188,'multiline':False]['text':' Initialize image_processing','line_number':198,'multiline':False]['text':' create random PIL images','line_number':200,'multiline':False]['text':' Test not batched input','line_number':205,'multiline':False]['text':' Test batched','line_number':210,'multiline':False]['text':' Initialize image_processing','line_number':218,'multiline':False]['text':' create random numpy tensors','line_number':220,'multiline':False]['text':' Test not batched input','line_number':225,'multiline':False]['text':' Test batched','line_number':230,'multiline':False]['text':' Initialize image_processing','line_number':238,'multiline':False]['text':' create random PyTorch tensors','line_number':240,'multiline':False]['text':' Test not batched input','line_number':246,'multiline':False]['text':' Test batched','line_number':251,'multiline':False]['text':' Test that can process images which have an arbitrary number of channels','line_number':260,'multiline':False]['text':' Initialize image_processing','line_number':261,'multiline':False]['text':' create random numpy tensors','line_number':264,'multiline':False]['text':' Test not batched input','line_number':268,'multiline':False]['text':' Test batched','line_number':279,'multiline':False]['text':' this mixin adds a test to assert that usages of the','line_number':294,'multiline':False]['text':' to-be-deprecated `AnnotionFormat` continue to be','line_number':295,'multiline':False]['text':' supported for the time being','line_number':296,'multiline':False]['text':' check the 'format' key exists and that the dicts of the','line_number':359,'multiline':False]['text':' first and second processors are equal','line_number':360,'multiline':False]['text':' perform encoding using both processors and compare','line_number':364,'multiline':False]['text':' the resulting BatchFeatures','line_number':365,'multiline':False]