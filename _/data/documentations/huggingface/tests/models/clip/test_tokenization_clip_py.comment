['text':' coding=utf-8','line_number':1,'multiline':False]['text':' Copyright 2021 The HuggingFace Team. All rights reserved.','line_number':2,'multiline':False]['text':'','line_number':3,'multiline':False]['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':4,'multiline':False]['text':' you may not use this file except in compliance with the License.','line_number':5,'multiline':False]['text':' You may obtain a copy of the License at','line_number':6,'multiline':False]['text':'','line_number':7,'multiline':False]['text':'     http://www.apache.org/licenses/LICENSE-2.0','line_number':8,'multiline':False]['text':'','line_number':9,'multiline':False]['text':' Unless required by applicable law or agreed to in writing, software','line_number':10,'multiline':False]['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':11,'multiline':False]['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':12,'multiline':False]['text':' See the License for the specific language governing permissions and','line_number':13,'multiline':False]['text':' limitations under the License.','line_number':14,'multiline':False]['text':' fmt: skip','line_number':39,'multiline':False]['text':' Test that the tokenization is identical on an example containing a character (Latin Small Letter A','line_number':88,'multiline':False]['text':' with Tilde) encoded in 2 different ways','line_number':89,'multiline':False]['text':' Test that the tokenization is identical on unicode of space type','line_number':96,'multiline':False]['text':' (horizontal tab, '\t')','line_number':98,'multiline':False]['text':' (vertical tab)','line_number':99,'multiline':False]['text':' (form feed)','line_number':100,'multiline':False]['text':' (space, ' ')','line_number':101,'multiline':False]['text':' (left-to-right mark):w','line_number':102,'multiline':False]['text':' (right-to-left mark)','line_number':103,'multiline':False]['text':' Test that the tokenization is identical on unicode of line break type','line_number':111,'multiline':False]['text':' (line feed, '\n')','line_number':113,'multiline':False]['text':' (carriage return and line feed, '\r\n')','line_number':114,'multiline':False]['text':' (carriage return, '\r')','line_number':115,'multiline':False]['text':' (carriage return, '\r')','line_number':116,'multiline':False]['text':' (carriage return, '\r')','line_number':117,'multiline':False]['text':' (line separator)','line_number':118,'multiline':False]['text':' (paragraph separator)','line_number':119,'multiline':False]['text':' "\u0085", # (next line)','line_number':120,'multiline':False]['text':' The tokenization is not identical for the character "\u0085" (next line). The slow version using ftfy transforms','line_number':123,'multiline':False]['text':' it into the Horizontal Ellipsis character "â€¦" ("\u2026") while the fast version transforms it into a','line_number':124,'multiline':False]['text':' space (and thus into an empty list).','line_number':125,'multiline':False]['text':' Test which aims to verify that the offsets are well adapted to the argument `add_prefix_space`','line_number':134,'multiline':False]['text':' `hello` is a token in the vocabulary of `pretrained_name`','line_number':137,'multiline':False]['text':' Test related to the breaking change introduced in transformers v4.17.0','line_number':165,'multiline':False]['text':' We need to check that an error in raised when the user try to load a previous version of the tokenizer.','line_number':166,'multiline':False]['text':' overwrite common test','line_number':180,'multiline':False]['text':' CLIP always lower cases letters','line_number':182,'multiline':False]