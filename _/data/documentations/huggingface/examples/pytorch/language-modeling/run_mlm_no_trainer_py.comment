['text':'!/usr/bin/env python','line_number':1,'multiline':False]['text':' coding=utf-8','line_number':2,'multiline':False]['text':' Copyright 2021 The HuggingFace Inc. team. All rights reserved.','line_number':3,'multiline':False]['text':'','line_number':4,'multiline':False]['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':5,'multiline':False]['text':' you may not use this file except in compliance with the License.','line_number':6,'multiline':False]['text':' You may obtain a copy of the License at','line_number':7,'multiline':False]['text':'','line_number':8,'multiline':False]['text':'     http://www.apache.org/licenses/LICENSE-2.0','line_number':9,'multiline':False]['text':'','line_number':10,'multiline':False]['text':' Unless required by applicable law or agreed to in writing, software','line_number':11,'multiline':False]['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':12,'multiline':False]['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':13,'multiline':False]['text':' See the License for the specific language governing permissions and','line_number':14,'multiline':False]['text':' limitations under the License.','line_number':15,'multiline':False]['text':' You can also adapt this script on your own mlm task. Pointers for this are left as comments.','line_number':23,'multiline':False]['text':' Will error if the minimal version of Transformers is not installed. Remove at your own risks.','line_number':59,'multiline':False]['text':' Sanity checks','line_number':250,'multiline':False]['text':' Sending telemetry. Tracking the example usage helps us better allocate resources to maintain them. The','line_number':273,'multiline':False]['text':' information sent is the one passed as arguments along with your Python/PyTorch versions.','line_number':274,'multiline':False]['text':' Initialize the accelerator. We will let the accelerator handle device placement for us in this example.','line_number':277,'multiline':False]['text':' If we're using tracking, we also need to initialize it here and it will by default pick up all supported trackers','line_number':278,'multiline':False]['text':' in the environment','line_number':279,'multiline':False]['text':' Make one log on every process with the configuration for debugging.','line_number':288,'multiline':False]['text':' If passed along, set the training seed now.','line_number':302,'multiline':False]['text':' Handle the repository creation','line_number':306,'multiline':False]['text':' Retrieve of infer repo_name','line_number':309,'multiline':False]['text':' Create repo and retrieve repo_id','line_number':313,'multiline':False]['text':' Clone repo locally','line_number':315,'multiline':False]['text':' Get the datasets: you can either provide your own CSV/JSON/TXT training and evaluation files (see below)','line_number':327,'multiline':False]['text':' or just provide the name of one of the public datasets available on the hub at https://huggingface.co/datasets/','line_number':328,'multiline':False]['text':' (the dataset will be downloaded automatically from the datasets Hub).','line_number':329,'multiline':False]['text':'','line_number':330,'multiline':False]['text':' For CSV/JSON files, this script will use the column called 'text' or the first column if no column called','line_number':331,'multiline':False]['text':' 'text' is found. You can easily tweak this behavior (see below).','line_number':332,'multiline':False]['text':'','line_number':333,'multiline':False]['text':' In distributed training, the load_dataset function guarantee that only one local process can concurrently','line_number':334,'multiline':False]['text':' download the dataset.','line_number':335,'multiline':False]['text':' Downloading and loading a dataset from the hub.','line_number':337,'multiline':False]['text':' If no validation data is there, validation_split_percentage will be used to divide the dataset.','line_number':360,'multiline':False]['text':' See more about loading any type of standard or custom dataset (from files, python dict, pandas DataFrame, etc) at','line_number':373,'multiline':False]['text':' https://huggingface.co/docs/datasets/loading_datasets.','line_number':374,'multiline':False]['text':' Load pretrained model and tokenizer','line_number':376,'multiline':False]['text':'','line_number':377,'multiline':False]['text':' In distributed training, the .from_pretrained methods guarantee that only one local process can concurrently','line_number':378,'multiline':False]['text':' download model & vocab.','line_number':379,'multiline':False]['text':' We resize the embeddings only when necessary to avoid index errors. If you are creating a model from scratch','line_number':414,'multiline':False]['text':' on a small vocab and want a smaller embedding size, remove this test.','line_number':415,'multiline':False]['text':' Preprocessing the datasets.','line_number':420,'multiline':False]['text':' First we tokenize all the texts.','line_number':421,'multiline':False]['text':' When using line_by_line, we just tokenize each nonempty line.','line_number':443,'multiline':False]['text':' Remove empty lines','line_number':447,'multiline':False]['text':' We use this option because DataCollatorForLanguageModeling (see below) is more efficient when it','line_number':456,'multiline':False]['text':' receives the `special_tokens_mask`.','line_number':457,'multiline':False]['text':' Otherwise, we tokenize every text, then concatenate them together before splitting them in smaller parts.','line_number':471,'multiline':False]['text':' We use `return_special_tokens_mask=True` because DataCollatorForLanguageModeling (see below) is more','line_number':472,'multiline':False]['text':' efficient when it receives the `special_tokens_mask`.','line_number':473,'multiline':False]['text':' Main data processing function that will concatenate all texts from our dataset and generate chunks of','line_number':487,'multiline':False]['text':' max_seq_length.','line_number':488,'multiline':False]['text':' Concatenate all texts.','line_number':490,'multiline':False]['text':' We drop the small remainder, and if the total_length < max_seq_length  we exclude this batch and return an empty dict.','line_number':493,'multiline':False]['text':' We could add padding if the model supported it instead of this drop, you can customize this part to your needs.','line_number':494,'multiline':False]['text':' Split by chunks of max_len.','line_number':496,'multiline':False]['text':' Note that with `batched=True`, this map processes 1,000 texts together, so group_texts throws away a','line_number':503,'multiline':False]['text':' remainder for each of those groups of 1,000 texts. You can adjust that batch_size here but a higher value','line_number':504,'multiline':False]['text':' might be slower to preprocess.','line_number':505,'multiline':False]['text':'','line_number':506,'multiline':False]['text':' To speed up this part, we use multiprocessing. See the documentation of the map method for more information:','line_number':507,'multiline':False]['text':' https://huggingface.co/docs/datasets/process#map','line_number':508,'multiline':False]['text':' Conditional for small test subsets','line_number':522,'multiline':False]['text':' Log a few random samples from the training set:','line_number':524,'multiline':False]['text':' Data collator','line_number':528,'multiline':False]['text':' This one will take care of randomly masking the tokens.','line_number':529,'multiline':False]['text':' DataLoaders creation:','line_number':532,'multiline':False]['text':' Optimizer','line_number':538,'multiline':False]['text':' Split weights in two groups, one with weight decay and the other not.','line_number':539,'multiline':False]['text':' Note -> the training dataloader needs to be prepared before we grab his length below (cause its length will be','line_number':553,'multiline':False]['text':' shorter in multiprocess)','line_number':554,'multiline':False]['text':' Scheduler and math around the number of training steps.','line_number':556,'multiline':False]['text':' Prepare everything with our `accelerator`.','line_number':570,'multiline':False]['text':' On TPU, the tie weights in our model have been disconnected, so we need to restore the ties.','line_number':575,'multiline':False]['text':' We need to recalculate our total training steps as the size of the training dataloader may have changed.','line_number':579,'multiline':False]['text':' Afterwards we recalculate our number of training epochs','line_number':583,'multiline':False]['text':' Figure out how many steps we should save the Accelerator states','line_number':586,'multiline':False]['text':' We need to initialize the trackers we use, and also store our configuration.','line_number':591,'multiline':False]['text':' The trackers initializes automatically on the main process.','line_number':592,'multiline':False]['text':' TensorBoard cannot log Enums, need the raw value','line_number':595,'multiline':False]['text':' Train!','line_number':599,'multiline':False]['text':' Only show the progress bar once on each machine.','line_number':609,'multiline':False]['text':' Potentially load in the weights and states from a previous save','line_number':614,'multiline':False]['text':' Get the most recent checkpoint','line_number':620,'multiline':False]['text':' Sorts folders by date modified, most recent checkpoint is the last','line_number':623,'multiline':False]['text':' Extract `epoch_{i}` or `step_{i}`','line_number':629,'multiline':False]['text':' need to multiply `gradient_accumulation_steps` to reflect real steps','line_number':637,'multiline':False]['text':' update the progress_bar if load from checkpoint','line_number':643,'multiline':False]['text':' We skip the first `n` batches in the dataloader when resuming from a checkpoint','line_number':651,'multiline':False]['text':' We keep track of the loss at each epoch','line_number':659,'multiline':False]['text':' Checks if the accelerator has performed an optimization step behind the scenes','line_number':667,'multiline':False]