['text':'!/usr/bin/env python','line_number':1,'multiline':False]['text':' coding=utf-8','line_number':2,'multiline':False]['text':' Copyright 2020 The HuggingFace Team All rights reserved.','line_number':3,'multiline':False]['text':'','line_number':4,'multiline':False]['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':5,'multiline':False]['text':' you may not use this file except in compliance with the License.','line_number':6,'multiline':False]['text':' You may obtain a copy of the License at','line_number':7,'multiline':False]['text':'','line_number':8,'multiline':False]['text':'     http://www.apache.org/licenses/LICENSE-2.0','line_number':9,'multiline':False]['text':'','line_number':10,'multiline':False]['text':' Unless required by applicable law or agreed to in writing, software','line_number':11,'multiline':False]['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':12,'multiline':False]['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':13,'multiline':False]['text':' See the License for the specific language governing permissions and','line_number':14,'multiline':False]['text':' limitations under the License.','line_number':15,'multiline':False]['text':' You can also adapt this script on your own question answering task. Pointers for this are left as comments.','line_number':19,'multiline':False]['text':' Will error if the minimal version of Transformers is not installed. Remove at your own risks.','line_number':51,'multiline':False]['text':' region Arguments','line_number':57,'multiline':False]['text':' endregion','line_number':232,'multiline':False]['text':' region Helper classes','line_number':235,'multiline':False]['text':' Hugging Face models have a save_pretrained() method that saves both the weights and the necessary','line_number':237,'multiline':False]['text':' metadata to allow them to be loaded as a pretrained model in future. This is a simple Keras callback','line_number':238,'multiline':False]['text':' that saves the model with this method after each epoch.','line_number':239,'multiline':False]['text':' endregion','line_number':248,'multiline':False]['text':' region Argument parsing','line_number':252,'multiline':False]['text':' See all possible arguments in src/transformers/training_args.py','line_number':253,'multiline':False]['text':' or by passing the --help flag to this script.','line_number':254,'multiline':False]['text':' We now keep distinct sets of args, for a cleaner separation of concerns.','line_number':255,'multiline':False]['text':' If we pass only one argument to the script and it's the path to a json file,','line_number':259,'multiline':False]['text':' let's parse it to get our arguments.','line_number':260,'multiline':False]['text':' Sending telemetry. Tracking the example usage helps us better allocate resources to maintain them. The','line_number':274,'multiline':False]['text':' information sent is the one passed as arguments along with your Python/PyTorch versions.','line_number':275,'multiline':False]['text':' endregion','line_number':280,'multiline':False]['text':' region Checkpoints','line_number':282,'multiline':False]['text':' endregion','line_number':296,'multiline':False]['text':' region Logging','line_number':298,'multiline':False]['text':' Set the verbosity to info of the Transformers logger (on main process only):','line_number':306,'multiline':False]['text':' endregion','line_number':312,'multiline':False]['text':' Set seed before initializing model.','line_number':314,'multiline':False]['text':' region Load Data','line_number':317,'multiline':False]['text':' Get the datasets: you can either provide your own CSV/JSON/TXT training and evaluation files (see below)','line_number':318,'multiline':False]['text':' or just provide the name of one of the public datasets available on the hub at https://huggingface.co/datasets/','line_number':319,'multiline':False]['text':' (the dataset will be downloaded automatically from the datasets Hub).','line_number':320,'multiline':False]['text':'','line_number':321,'multiline':False]['text':' For CSV/JSON files, this script will use the column called 'text' or the first column if no column called','line_number':322,'multiline':False]['text':' 'text' is found. You can easily tweak this behavior (see below).','line_number':323,'multiline':False]['text':'','line_number':324,'multiline':False]['text':' In distributed training, the load_dataset function guarantee that only one local process can concurrently','line_number':325,'multiline':False]['text':' download the dataset.','line_number':326,'multiline':False]['text':' Downloading and loading a dataset from the hub.','line_number':328,'multiline':False]['text':' See more about loading any type of standard or custom dataset (from files, python dict, pandas DataFrame, etc) at','line_number':354,'multiline':False]['text':' https://huggingface.co/docs/datasets/loading_datasets.','line_number':355,'multiline':False]['text':' endregion','line_number':356,'multiline':False]['text':' region Load pretrained model and tokenizer','line_number':358,'multiline':False]['text':'','line_number':359,'multiline':False]['text':' Distributed training:','line_number':360,'multiline':False]['text':' The .from_pretrained methods guarantee that only one local process can concurrently','line_number':361,'multiline':False]['text':' download model & vocab.','line_number':362,'multiline':False]['text':' endregion','line_number':378,'multiline':False]['text':' region Tokenizer check: this script requires a fast tokenizer.','line_number':380,'multiline':False]['text':' endregion','line_number':387,'multiline':False]['text':' region Preprocessing the datasets','line_number':389,'multiline':False]['text':' Preprocessing is slightly different for training and evaluation.','line_number':390,'multiline':False]['text':' Padding side determines if we do (question|context) or (context|question).','line_number':401,'multiline':False]['text':' Training preprocessing','line_number':417,'multiline':False]['text':' Some of the questions have lots of whitespace on the left, which is not useful and will make the','line_number':419,'multiline':False]['text':' truncation of the context fail (the tokenized question will take a lots of space). So we remove that','line_number':420,'multiline':False]['text':' left whitespace','line_number':421,'multiline':False]['text':' Tokenize our examples with truncation and maybe padding, but keep the overflows using a stride. This results','line_number':424,'multiline':False]['text':' in one example possible giving several features when a context is long, each of those features having a','line_number':425,'multiline':False]['text':' context that overlaps a bit the context of the previous feature.','line_number':426,'multiline':False]['text':' Since one example might give us several features if it has a long context, we need a map from a feature to','line_number':438,'multiline':False]['text':' its corresponding example. This key gives us just that.','line_number':439,'multiline':False]['text':' The offset mappings will give us a map from token to character position in the original context. This will','line_number':441,'multiline':False]['text':' help us compute the start_positions and end_positions.','line_number':442,'multiline':False]['text':' Let's label those examples!','line_number':445,'multiline':False]['text':' We will label impossible answers with the index of the CLS token.','line_number':450,'multiline':False]['text':' Grab the sequence corresponding to that example (to know what is the context and what is the question).','line_number':454,'multiline':False]['text':' One example can give several spans, this is the index of the example containing this span of text.','line_number':457,'multiline':False]['text':' If no answers are given, set the cls_index as answer.','line_number':460,'multiline':False]['text':' Start/end character index of the answer in the text.','line_number':465,'multiline':False]['text':' Start token index of the current span in the text.','line_number':469,'multiline':False]['text':' End token index of the current span in the text.','line_number':474,'multiline':False]['text':' Detect if the answer is out of the span (in which case this feature is labeled with the CLS index).','line_number':479,'multiline':False]['text':' Otherwise move the token_start_index and token_end_index to the two ends of the answer.','line_number':484,'multiline':False]['text':' Note: we could go after the last offset if the answer is the last word (edge case).','line_number':485,'multiline':False]['text':' We will select sample from whole data if agument is specified','line_number':501,'multiline':False]['text':' Create train feature from dataset','line_number':504,'multiline':False]['text':' Number of samples might increase during Feature Creation, We select only specified max samples','line_number':513,'multiline':False]['text':' Validation preprocessing','line_number':518,'multiline':False]['text':' Some of the questions have lots of whitespace on the left, which is not useful and will make the','line_number':520,'multiline':False]['text':' truncation of the context fail (the tokenized question will take a lots of space). So we remove that','line_number':521,'multiline':False]['text':' left whitespace','line_number':522,'multiline':False]['text':' Tokenize our examples with truncation and maybe padding, but keep the overflows using a stride. This results','line_number':525,'multiline':False]['text':' in one example possible giving several features when a context is long, each of those features having a','line_number':526,'multiline':False]['text':' context that overlaps a bit the context of the previous feature.','line_number':527,'multiline':False]['text':' Since one example might give us several features if it has a long context, we need a map from a feature to','line_number':539,'multiline':False]['text':' its corresponding example. This key gives us just that.','line_number':540,'multiline':False]['text':' For evaluation, we will need to convert our predictions to substrings of the context, so we keep the','line_number':543,'multiline':False]['text':' corresponding example_id and we will store the offset mappings.','line_number':544,'multiline':False]['text':' Grab the sequence corresponding to that example (to know what is the context and what is the question).','line_number':548,'multiline':False]['text':' One example can give several spans, this is the index of the example containing this span of text.','line_number':552,'multiline':False]['text':' Set to None the offset_mapping that are not part of the context so it's easy to determine if a token','line_number':556,'multiline':False]['text':' position is part of the context or not.','line_number':557,'multiline':False]['text':' We will select sample from whole data','line_number':570,'multiline':False]['text':' Validation Feature Creation','line_number':573,'multiline':False]['text':' During Feature creation dataset samples might increase, we will select required samples again','line_number':582,'multiline':False]['text':' We will select sample from whole data','line_number':592,'multiline':False]['text':' Predict Feature Creation','line_number':594,'multiline':False]['text':' During Feature creation dataset samples might increase, we will select required samples again','line_number':603,'multiline':False]['text':' endregion','line_number':607,'multiline':False]['text':' region Metrics and Post-processing:','line_number':609,'multiline':False]['text':' Post-processing: we match the start logits and end logits to answers in the original context.','line_number':611,'multiline':False]['text':' Format the result to the format the metric expects.','line_number':623,'multiline':False]['text':' endregion','line_number':639,'multiline':False]['text':' region Load model and prepare datasets','line_number':646,'multiline':False]['text':' Transformers models compute the right loss for their task by default when labels are passed, and will','line_number':688,'multiline':False]['text':' use this for training unless you specify your own loss function in compile().','line_number':689,'multiline':False]['text':' endregion','line_number':718,'multiline':False]['text':' region Preparing push_to_hub and model card','line_number':720,'multiline':False]['text':' endregion','line_number':750,'multiline':False]['text':' region Training and Evaluation','line_number':752,'multiline':False]['text':' Note that the validation and test datasets have been processed in a different way to the','line_number':755,'multiline':False]['text':' training datasets in this example, and so they don't have the same label structure.','line_number':756,'multiline':False]['text':' As such, we don't pass them directly to Keras, but instead get model predictions to evaluate','line_number':757,'multiline':False]['text':' after training.','line_number':758,'multiline':False]['text':' In this example, we compute advanced metrics at the end of training, but','line_number':764,'multiline':False]['text':' if you'd like to compute metrics every epoch that are too complex to be written as','line_number':765,'multiline':False]['text':' standard Keras metrics, you can use our KerasMetricCallback. See','line_number':766,'multiline':False]['text':' https://huggingface.co/docs/transformers/main/en/main_classes/keras_callbacks','line_number':767,'multiline':False]['text':' If predictions are RaggedTensor, we densify them. Since they are logits, padding with 0 is a bad idea!','line_number':771,'multiline':False]['text':' The reason is that a logit of 0 can often end up as quite a high probability value, sometimes even','line_number':772,'multiline':False]['text':' the highest probability in a sample. Instead, we use a large negative value, which ensures that the','line_number':773,'multiline':False]['text':' padding positions are correctly masked.','line_number':774,'multiline':False]['text':' endregion','line_number':794,'multiline':False]['text':' region Prediction','line_number':796,'multiline':False]['text':' If predictions are RaggedTensor, we densify them. Since they are logits, padding with 0 is a bad idea!','line_number':802,'multiline':False]['text':' The reason is that a logit of 0 can often end up as quite a high probability value, sometimes even','line_number':803,'multiline':False]['text':' the highest probability in a sample. Instead, we use a large negative value, which ensures that the','line_number':804,'multiline':False]['text':' padding positions are correctly masked.','line_number':805,'multiline':False]['text':' endregion','line_number':821,'multiline':False]['text':' If we're not pushing to hub, at least save a local copy when we're done','line_number':824,'multiline':False]