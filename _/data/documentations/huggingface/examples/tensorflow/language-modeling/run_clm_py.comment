['text':'!/usr/bin/env python','line_number':1,'multiline':False]['text':' coding=utf-8','line_number':2,'multiline':False]['text':' Copyright 2021 The HuggingFace Inc. team. All rights reserved.','line_number':3,'multiline':False]['text':'','line_number':4,'multiline':False]['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':5,'multiline':False]['text':' you may not use this file except in compliance with the License.','line_number':6,'multiline':False]['text':' You may obtain a copy of the License at','line_number':7,'multiline':False]['text':'','line_number':8,'multiline':False]['text':'     http://www.apache.org/licenses/LICENSE-2.0','line_number':9,'multiline':False]['text':'','line_number':10,'multiline':False]['text':' Unless required by applicable law or agreed to in writing, software','line_number':11,'multiline':False]['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':12,'multiline':False]['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':13,'multiline':False]['text':' See the License for the specific language governing permissions and','line_number':14,'multiline':False]['text':' limitations under the License.','line_number':15,'multiline':False]['text':' You can also adapt this script on your own clm task. Pointers for this are left as comments.','line_number':23,'multiline':False]['text':' region Imports','line_number':27,'multiline':False]['text':' endregion','line_number':67,'multiline':False]['text':' region Command-line arguments','line_number':70,'multiline':False]['text':' endregion','line_number':227,'multiline':False]['text':' region Argument Parsing','line_number':231,'multiline':False]['text':' If we pass only one argument to the script and it's the path to a json file,','line_number':234,'multiline':False]['text':' let's parse it to get our arguments.','line_number':235,'multiline':False]['text':' Sending telemetry. Tracking the example usage helps us better allocate resources to maintain them. The','line_number':249,'multiline':False]['text':' information sent is the one passed as arguments along with your Python/PyTorch versions.','line_number':250,'multiline':False]['text':' Sanity checks','line_number':253,'multiline':False]['text':' endregion','line_number':267,'multiline':False]['text':' region Checkpoints','line_number':269,'multiline':False]['text':' Detecting last checkpoint.','line_number':270,'multiline':False]['text':' endregion','line_number':287,'multiline':False]['text':' region Setup logging','line_number':289,'multiline':False]['text':' accelerator.is_local_main_process is only True for one process per machine.','line_number':290,'multiline':False]['text':' endregion','line_number':294,'multiline':False]['text':' If passed along, set the training seed now.','line_number':296,'multiline':False]['text':' region Load datasets','line_number':300,'multiline':False]['text':' Get the datasets: you can either provide your own CSV/JSON/TXT training and evaluation files (see below)','line_number':301,'multiline':False]['text':' or just provide the name of one of the public datasets available on the hub at https://huggingface.co/datasets/','line_number':302,'multiline':False]['text':' (the dataset will be downloaded automatically from the datasets Hub).','line_number':303,'multiline':False]['text':'','line_number':304,'multiline':False]['text':' For CSV/JSON files, this script will use the column called 'text' or the first column if no column called','line_number':305,'multiline':False]['text':' 'text' is found. You can easily tweak this behavior (see below).','line_number':306,'multiline':False]['text':'','line_number':307,'multiline':False]['text':' In distributed training, the load_dataset function guarantee that only one local process can concurrently','line_number':308,'multiline':False]['text':' download the dataset.','line_number':309,'multiline':False]['text':' Downloading and loading a dataset from the hub.','line_number':311,'multiline':False]['text':' If no validation data is there, validation_split_percentage will be used to divide the dataset.','line_number':355,'multiline':False]['text':' See more about loading any type of standard or custom dataset (from files, python dict, pandas DataFrame, etc) at','line_number':373,'multiline':False]['text':' https://huggingface.co/docs/datasets/loading_datasets.','line_number':374,'multiline':False]['text':' endregion','line_number':375,'multiline':False]['text':' region Load pretrained model and tokenizer','line_number':377,'multiline':False]['text':'','line_number':378,'multiline':False]['text':' In distributed training, the .from_pretrained methods guarantee that only one local process can concurrently','line_number':379,'multiline':False]['text':' download model & vocab.','line_number':380,'multiline':False]['text':' endregion','line_number':408,'multiline':False]['text':' region Dataset preprocessing','line_number':410,'multiline':False]['text':' First we tokenize all the texts.','line_number':411,'multiline':False]['text':' Main data processing function that will concatenate all texts from our dataset and generate chunks of block_size.','line_number':443,'multiline':False]['text':' Concatenate all texts.','line_number':445,'multiline':False]['text':' We drop the small remainder, we could add padding if the model supported it instead of this drop, you can','line_number':448,'multiline':False]['text':' customize this part to your needs.','line_number':449,'multiline':False]['text':' Split by chunks of max_len.','line_number':452,'multiline':False]['text':' Note that with `batched=True`, this map processes 1,000 texts together, so group_texts throws away a remainder','line_number':460,'multiline':False]['text':' for each of those groups of 1,000 texts. You can adjust that batch_size here but a higher value might be slower','line_number':461,'multiline':False]['text':' to preprocess.','line_number':462,'multiline':False]['text':'','line_number':463,'multiline':False]['text':' To speed up this part, we use multiprocessing. See the documentation of the map method for more information:','line_number':464,'multiline':False]['text':' https://huggingface.co/docs/datasets/process#map','line_number':465,'multiline':False]['text':' Log a few random samples from the training set:','line_number':497,'multiline':False]['text':' endregion','line_number':500,'multiline':False]['text':' region Prepare model','line_number':503,'multiline':False]['text':' We resize the embeddings only when necessary to avoid index errors. If you are creating a model from scratch','line_number':521,'multiline':False]['text':' on a small vocab and want a smaller embedding size, remove this test.','line_number':522,'multiline':False]['text':' Matt: This is a temporary workaround as we transition our models to exclusively using Keras embeddings.','line_number':525,'multiline':False]['text':'       As soon as the transition is complete, all embeddings should be keras.Embeddings layers, and','line_number':526,'multiline':False]['text':'       the weights will always be in embeddings.embeddings.','line_number':527,'multiline':False]['text':' endregion','line_number':534,'multiline':False]['text':' region TF Dataset preparation','line_number':536,'multiline':False]['text':' model.prepare_tf_dataset() wraps a Hugging Face dataset in a tf.data.Dataset which is ready to use in','line_number':541,'multiline':False]['text':' training. This is the recommended way to use a Hugging Face dataset when training with Keras. You can also','line_number':542,'multiline':False]['text':' use the lower-level dataset.to_tf_dataset() method, but you will have to specify things like column names','line_number':543,'multiline':False]['text':' yourself if you use this method, whereas they are automatically inferred from the model input names when','line_number':544,'multiline':False]['text':' using model.prepare_tf_dataset()','line_number':545,'multiline':False]['text':' For more info see the docs:','line_number':546,'multiline':False]['text':' https://huggingface.co/docs/transformers/main/en/main_classes/model#transformers.TFPreTrainedModel.prepare_tf_dataset','line_number':547,'multiline':False]['text':' https://huggingface.co/docs/datasets/main/en/package_reference/main_classes#datasets.Dataset.to_tf_dataset','line_number':548,'multiline':False]['text':' endregion','line_number':562,'multiline':False]['text':' region Optimizer and loss','line_number':564,'multiline':False]['text':' Bias and layernorm weights are automatically excluded from the decay','line_number':573,'multiline':False]['text':' Transformers models compute the right loss for their task by default when labels are passed, and will','line_number':585,'multiline':False]['text':' use this for training unless you specify your own loss function in compile().','line_number':586,'multiline':False]['text':' endregion','line_number':588,'multiline':False]['text':' region Preparing push_to_hub and model card','line_number':590,'multiline':False]['text':' endregion','line_number':620,'multiline':False]['text':' region Training and validation','line_number':622,'multiline':False]['text':' For long training runs, you may wish to use the PushToHub() callback here to save intermediate checkpoints','line_number':629,'multiline':False]['text':' to the Hugging Face Hub rather than just pushing the finished model.','line_number':630,'multiline':False]['text':' See https://huggingface.co/docs/transformers/main_classes/keras_callbacks#transformers.PushToHubCallback','line_number':631,'multiline':False]['text':' endregion','line_number':663,'multiline':False]['text':' If we're not pushing to hub, at least save a local copy when we're done','line_number':666,'multiline':False]