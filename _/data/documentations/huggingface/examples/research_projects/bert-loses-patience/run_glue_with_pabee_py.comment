['text':' coding=utf-8','line_number':1,'multiline':False]['text':' Copyright 2020 The Google AI Language Team Authors, The HuggingFace Inc. team and Microsoft Corporation.','line_number':2,'multiline':False]['text':' Copyright (c) 2018, NVIDIA CORPORATION.  All rights reserved.','line_number':3,'multiline':False]['text':'','line_number':4,'multiline':False]['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':5,'multiline':False]['text':' you may not use this file except in compliance with the License.','line_number':6,'multiline':False]['text':' You may obtain a copy of the License at','line_number':7,'multiline':False]['text':'','line_number':8,'multiline':False]['text':'     http://www.apache.org/licenses/LICENSE-2.0','line_number':9,'multiline':False]['text':'','line_number':10,'multiline':False]['text':' Unless required by applicable law or agreed to in writing, software','line_number':11,'multiline':False]['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':12,'multiline':False]['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':13,'multiline':False]['text':' See the License for the specific language governing permissions and','line_number':14,'multiline':False]['text':' limitations under the License.','line_number':15,'multiline':False]['text':' Prepare optimizer and schedule (linear warmup and decay)','line_number':89,'multiline':False]['text':' Check if saved optimizer or scheduler states exist','line_number':104,'multiline':False]['text':' Load in optimizer and scheduler states','line_number':108,'multiline':False]['text':' multi-gpu training (should be after apex fp16 initialization)','line_number':119,'multiline':False]['text':' Distributed training (should be after apex fp16 initialization)','line_number':123,'multiline':False]['text':' Train!','line_number':132,'multiline':False]['text':' Check if continuing training from a checkpoint','line_number':149,'multiline':False]['text':' set global_step to gobal_step of last saved checkpoint from model path','line_number':151,'multiline':False]['text':' Added here for reproductibility','line_number':172,'multiline':False]['text':' Skip past any already trained steps if resuming training','line_number':176,'multiline':False]['text':' model outputs are always tuple in transformers (see doc)','line_number':190,'multiline':False]['text':' mean() to average on multi-gpu parallel training','line_number':193,'multiline':False]['text':' Update learning rate schedule','line_number':211,'multiline':False]['text':' Only evaluate when single GPU otherwise metrics may not average well','line_number':219,'multiline':False]['text':' Save model checkpoint','line_number':236,'multiline':False]['text':' Take care of distributed/parallel training','line_number':240,'multiline':False]['text':' Loop to handle MNLI double evaluation (matched, mis-matched)','line_number':276,'multiline':False]['text':' Note that DistributedSampler samples randomly','line_number':288,'multiline':False]['text':' multi-gpu eval','line_number':292,'multiline':False]['text':' Eval!','line_number':296,'multiline':False]['text':' Make sure only the first process in distributed training process the dataset, and the others will use the cache','line_number':356,'multiline':False]['text':' Load data features from cache or dataset file','line_number':360,'multiline':False]['text':' HACK(label indices are swapped in RoBERTa pretrained model)','line_number':377,'multiline':False]['text':' Make sure only the first process in distributed training process the dataset, and the others will use the cache','line_number':394,'multiline':False]['text':' Convert to Tensors and build dataset','line_number':396,'multiline':False]['text':' Required parameters','line_number':412,'multiline':False]['text':' Other parameters','line_number':461,'multiline':False]['text':' Setup distant debugging if needed','line_number':604,'multiline':False]['text':' Distant debugging - see https://code.visualstudio.com/docs/python/debugging#_attach-to-a-local-script','line_number':606,'multiline':False]['text':' Setup CUDA, GPU & distributed training','line_number':613,'multiline':False]['text':' Initializes the distributed backend which will take care of sychronizing nodes/GPUs','line_number':617,'multiline':False]['text':' Setup logging','line_number':624,'multiline':False]['text':' Set the verbosity to info of the Transformers logger (on main process only):','line_number':638,'multiline':False]['text':' Set seed','line_number':643,'multiline':False]['text':' Prepare GLUE task','line_number':646,'multiline':False]['text':' Load pretrained model and tokenizer','line_number':658,'multiline':False]['text':' Make sure only the first process in distributed training will download model & vocab','line_number':660,'multiline':False]['text':' Make sure only the first process in distributed training will download model & vocab','line_number':683,'multiline':False]['text':' Training','line_number':698,'multiline':False]['text':' Saving best-practices: if you use defaults names for the model, you can reload it using from_pretrained()','line_number':704,'multiline':False]['text':' Save a trained model, configuration and tokenizer using `save_pretrained()`.','line_number':707,'multiline':False]['text':' They can then be reloaded using `from_pretrained()`','line_number':708,'multiline':False]['text':' Take care of distributed/parallel training','line_number':711,'multiline':False]['text':' Good practice: save your training arguments together with the trained model','line_number':715,'multiline':False]['text':' Load a trained model and vocabulary that you have fine-tuned','line_number':718,'multiline':False]['text':' Evaluation','line_number':723,'multiline':False]