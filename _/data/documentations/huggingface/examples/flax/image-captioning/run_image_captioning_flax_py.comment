['text':'!/usr/bin/env python','line_number':1,'multiline':False]['text':' coding=utf-8','line_number':2,'multiline':False]['text':' Copyright 2022 The HuggingFace Team All rights reserved.','line_number':3,'multiline':False]['text':'','line_number':4,'multiline':False]['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':5,'multiline':False]['text':' you may not use this file except in compliance with the License.','line_number':6,'multiline':False]['text':' You may obtain a copy of the License at','line_number':7,'multiline':False]['text':'','line_number':8,'multiline':False]['text':'     http://www.apache.org/licenses/LICENSE-2.0','line_number':9,'multiline':False]['text':'','line_number':10,'multiline':False]['text':' Unless required by applicable law or agreed to in writing, software','line_number':11,'multiline':False]['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':12,'multiline':False]['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':13,'multiline':False]['text':' See the License for the specific language governing permissions and','line_number':14,'multiline':False]['text':' limitations under the License.','line_number':15,'multiline':False]['text':' Here to have a nice missing dependency error message early on','line_number':36,'multiline':False]['text':' Copied from transformers.models.bart.modeling_flax_bart.shift_tokens_right','line_number':73,'multiline':False]['text':' Skip incomplete batch.','line_number':345,'multiline':False]['text':' We use `numpy.ndarray` to interact with `datasets.Dataset`, since using `jax.numpy.array` to index into a','line_number':347,'multiline':False]['text':' dataset is significantly slow. Using JAX array at the 1st place is only to keep JAX's PRNGs generation','line_number':348,'multiline':False]['text':' mechanism, which works differently from NumPy/SciPy.','line_number':349,'multiline':False]['text':' See all possible arguments in src/transformers/training_args.py','line_number':397,'multiline':False]['text':' or by passing the --help flag to this script.','line_number':398,'multiline':False]['text':' We now keep distinct sets of args, for a cleaner separation of concerns.','line_number':399,'multiline':False]['text':' If we pass only one argument to the script and it's the path to a json file,','line_number':403,'multiline':False]['text':' let's parse it to get our arguments.','line_number':404,'multiline':False]['text':' Sending telemetry. Tracking the example usage helps us better allocate resources to maintain them. The','line_number':418,'multiline':False]['text':' information sent is the one passed as arguments along with your Python/PyTorch versions.','line_number':419,'multiline':False]['text':' Make one log on every process with the configuration for debugging.','line_number':433,'multiline':False]['text':' Setup logging, we only want one process per machine to log things on the screen.','line_number':439,'multiline':False]['text':' Set the verbosity to info of the Transformers logger (on main process only):','line_number':448,'multiline':False]['text':' Handle the repository creation','line_number':451,'multiline':False]['text':' Retrieve of infer repo_name','line_number':453,'multiline':False]['text':' Create repo and retrieve repo_id','line_number':457,'multiline':False]['text':' Clone repo locally','line_number':459,'multiline':False]['text':' Get the datasets: you can either provide your own CSV/JSON training and evaluation files (see below)','line_number':462,'multiline':False]['text':' or just provide the name of one of the public datasets available on the hub at https://huggingface.co/datasets/','line_number':463,'multiline':False]['text':' (the dataset will be downloaded automatically from the datasets Hub).','line_number':464,'multiline':False]['text':'','line_number':465,'multiline':False]['text':' For CSV/JSON files this script will use the first column for the full image path and the second column for the','line_number':466,'multiline':False]['text':' captions (unless you specify column names for this with the `image_column` and `caption_column` arguments).','line_number':467,'multiline':False]['text':'','line_number':468,'multiline':False]['text':' Downloading and loading a dataset from the hub.','line_number':470,'multiline':False]['text':' See more about loading any type of standard or custom dataset (from files, python dict, pandas DataFrame, etc) at','line_number':496,'multiline':False]['text':' https://huggingface.co/docs/datasets/loading_datasets.','line_number':497,'multiline':False]['text':' Load pretrained model and tokenizer','line_number':499,'multiline':False]['text':' Preprocessing the datasets.','line_number':522,'multiline':False]['text':' We need to tokenize inputs and targets.','line_number':523,'multiline':False]['text':' Get the column names for input/target.','line_number':534,'multiline':False]['text':' In Flax, for seq2seq models we need to pass `decoder_input_ids`','line_number':565,'multiline':False]['text':' as the Flax models don't accept `labels`, we need to prepare the decoder_input_ids here','line_number':566,'multiline':False]['text':' for that dynamically import the `shift_tokens_right` function from the model file','line_number':567,'multiline':False]['text':' Setting padding="max_length" as we need fixed length inputs for jitted functions','line_number':585,'multiline':False]['text':' We need decoder_attention_mask so we can ignore pad tokens from loss','line_number':608,'multiline':False]['text':' This contains image path column','line_number':650,'multiline':False]['text':' Remove image path column','line_number':653,'multiline':False]['text':' If `block_size` is `0`, tokenization & image processing is done at the beginning','line_number':676,'multiline':False]['text':' Used in .map() below','line_number':678,'multiline':False]['text':' `features` is used only for the final preprocessed dataset (for the performance purpose).','line_number':680,'multiline':False]['text':' Keep `image_column` if the image processing is done during training','line_number':682,'multiline':False]['text':' Store some constant','line_number':686,'multiline':False]['text':' remove problematic examples','line_number':702,'multiline':False]['text':' (if image processing is performed at the beginning, the filtering is done during preprocessing below','line_number':703,'multiline':False]['text':' instead here.)','line_number':704,'multiline':False]['text':' kept image paths','line_number':711,'multiline':False]['text':' set format (for performance) since the dataset is ready to be used','line_number':719,'multiline':False]['text':' remove problematic examples','line_number':736,'multiline':False]['text':' (if image processing is performed at the beginning, the filtering is done during preprocessing below','line_number':737,'multiline':False]['text':' instead here.)','line_number':738,'multiline':False]['text':' kept image paths','line_number':745,'multiline':False]['text':' set format (for performance) since the dataset is ready to be used','line_number':753,'multiline':False]['text':' remove problematic examples','line_number':766,'multiline':False]['text':' (if image processing is performed at the beginning, the filtering is done during preprocessing below','line_number':767,'multiline':False]['text':' instead here.)','line_number':768,'multiline':False]['text':' kept image paths','line_number':777,'multiline':False]['text':' set format (for performance) since the dataset is ready to be used','line_number':785,'multiline':False]['text':' We use `numpy.ndarray` to interact with `datasets.Dataset`, since using `jax.numpy.array` to index into a','line_number':808,'multiline':False]['text':' dataset is significantly slow. Using JAX array at the 1st place is only to keep JAX's PRNGs generation','line_number':809,'multiline':False]['text':' mechanism, which works differently from NumPy/SciPy.','line_number':810,'multiline':False]['text':' The images are already checked either in `.filter()` or in `preprocess_fn()`','line_number':843,'multiline':False]['text':' No need to shuffle here','line_number':849,'multiline':False]['text':' Metric','line_number':855,'multiline':False]['text':' rougeLSum expects newline after each sentence','line_number':862,'multiline':False]['text':' Some simple post-processing','line_number':872,'multiline':False]['text':' Extract a few results from ROUGE','line_number':876,'multiline':False]['text':' Enable tensorboard only on the master node','line_number':885,'multiline':False]['text':' Initialize our training','line_number':903,'multiline':False]['text':' Create learning rate schedule','line_number':907,'multiline':False]['text':' We use Optax's "masking" functionality to not apply weight decay','line_number':916,'multiline':False]['text':' to bias and LayerNorm scale parameters. decay_mask_fn returns a','line_number':917,'multiline':False]['text':' mask boolean with the same structure as the parameters.','line_number':918,'multiline':False]['text':' The mask is True for parameters that should be decayed.','line_number':919,'multiline':False]['text':' find out all LayerNorm parameters','line_number':922,'multiline':False]['text':' create adam optimizer','line_number':933,'multiline':False]['text':' Setup train state','line_number':943,'multiline':False]['text':' label smoothed cross entropy','line_number':946,'multiline':False]['text':' ignore padded tokens from loss','line_number':963,'multiline':False]['text':' Define gradient update step fn','line_number':969,'multiline':False]['text':' true loss = total loss / total samples','line_number':983,'multiline':False]['text':' true grad = total grad / total samples','line_number':987,'multiline':False]['text':' Define eval fn','line_number':995,'multiline':False]['text':' true loss = total loss / total samples','line_number':1003,'multiline':False]['text':' Define generation function','line_number':1010,'multiline':False]['text':' Create parallel version of the train and eval step','line_number':1022,'multiline':False]['text':' Replicate the train state on each device','line_number':1029,'multiline':False]['text':' create output directory','line_number':1051,'multiline':False]['text':' save checkpoint after each epoch and push checkpoint to the hub','line_number':1058,'multiline':False]['text':' Model forward','line_number':1092,'multiline':False]['text':' generation','line_number':1102,'multiline':False]['text':' normalize metrics','line_number':1110,'multiline':False]['text':' compute ROUGE metrics','line_number':1114,'multiline':False]['text':' Some simple post-processing','line_number':1133,'multiline':False]['text':' rougeLSum expects newline after each sentence','line_number':1135,'multiline':False]['text':' Print metrics and update progress bar','line_number':1142,'multiline':False]['text':' Save metrics (only for the evaluation/prediction being done along with training)','line_number':1155,'multiline':False]['text':' save final metrics in json','line_number':1161,'multiline':False]['text':' Update report','line_number':1170,'multiline':False]['text':' Save generations','line_number':1174,'multiline':False]['text':' ======================== Training ================================','line_number':1194,'multiline':False]['text':' Create sampling rng','line_number':1195,'multiline':False]['text':' train','line_number':1209,'multiline':False]['text':' log and save info','line_number':1219,'multiline':False]['text':' Save metrics','line_number':1234,'multiline':False]['text':' ======================== Evaluating (inside an epoch) ==============================','line_number':1244,'multiline':False]['text':' ======================== Epoch End ==============================','line_number':1256,'multiline':False]['text':' log and save info','line_number':1258,'multiline':False]['text':' Save metrics','line_number':1265,'multiline':False]['text':' ======================== Evaluating (after each epoch) ==============================','line_number':1271,'multiline':False]['text':' ======================== Evaluating | Predicting ==============================','line_number':1279,'multiline':False]['text':' Create sampling rng','line_number':1281,'multiline':False]['text':' run evaluation without training','line_number':1285,'multiline':False]['text':' run prediction after (or without) training','line_number':1289,'multiline':False]