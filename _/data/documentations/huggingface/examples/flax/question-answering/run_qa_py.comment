['text':'!/usr/bin/env python','line_number':1,'multiline':False]['text':' coding=utf-8','line_number':2,'multiline':False]['text':' Copyright 2021 The HuggingFace Team All rights reserved.','line_number':3,'multiline':False]['text':'','line_number':4,'multiline':False]['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':5,'multiline':False]['text':' you may not use this file except in compliance with the License.','line_number':6,'multiline':False]['text':' You may obtain a copy of the License at','line_number':7,'multiline':False]['text':'','line_number':8,'multiline':False]['text':'     http://www.apache.org/licenses/LICENSE-2.0','line_number':9,'multiline':False]['text':'','line_number':10,'multiline':False]['text':' Unless required by applicable law or agreed to in writing, software','line_number':11,'multiline':False]['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':12,'multiline':False]['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':13,'multiline':False]['text':' See the License for the specific language governing permissions and','line_number':14,'multiline':False]['text':' limitations under the License.','line_number':15,'multiline':False]['text':' You can also adapt this script on your own question answering task. Pointers for this are left as comments.','line_number':19,'multiline':False]['text':' Will error if the minimal version of Transformers is not installed. Remove at your own risks.','line_number':64,'multiline':False]['text':' region Arguments','line_number':72,'multiline':False]['text':' endregion','line_number':319,'multiline':False]['text':' region Create a train state','line_number':322,'multiline':False]['text':' We use Optax's "masking" functionality to not apply weight decay','line_number':345,'multiline':False]['text':' to bias and LayerNorm scale parameters. decay_mask_fn returns a','line_number':346,'multiline':False]['text':' mask boolean with the same structure as the parameters.','line_number':347,'multiline':False]['text':' The mask is True for parameters that should be decayed.','line_number':348,'multiline':False]['text':' find out all LayerNorm parameters','line_number':351,'multiline':False]['text':' endregion','line_number':386,'multiline':False]['text':' region Create learning rate function','line_number':389,'multiline':False]['text':' endregion','line_number':404,'multiline':False]['text':' region train data iterator','line_number':407,'multiline':False]['text':' Skip incomplete batch.','line_number':412,'multiline':False]['text':' endregion','line_number':423,'multiline':False]['text':' region eval data iterator','line_number':426,'multiline':False]['text':' endregion','line_number':441,'multiline':False]['text':' region Argument parsing','line_number':445,'multiline':False]['text':' See all possible arguments in src/transformers/training_args.py','line_number':446,'multiline':False]['text':' or by passing the --help flag to this script.','line_number':447,'multiline':False]['text':' We now keep distinct sets of args, for a cleaner separation of concerns.','line_number':448,'multiline':False]['text':' If we pass only one argument to the script and it's the path to a json file,','line_number':452,'multiline':False]['text':' let's parse it to get our arguments.','line_number':453,'multiline':False]['text':' Sending telemetry. Tracking the example usage helps us better allocate resources to maintain them. The','line_number':467,'multiline':False]['text':' information sent is the one passed as arguments along with your Python/PyTorch versions.','line_number':468,'multiline':False]['text':' endregion','line_number':470,'multiline':False]['text':' region Logging','line_number':472,'multiline':False]['text':' Make one log on every process with the configuration for debugging.','line_number':473,'multiline':False]['text':' Setup logging, we only want one process per machine to log things on the screen.','line_number':479,'multiline':False]['text':' endregion','line_number':487,'multiline':False]['text':' Handle the repository creation','line_number':489,'multiline':False]['text':' Retrieve of infer repo_name','line_number':491,'multiline':False]['text':' Create repo and retrieve repo_id','line_number':495,'multiline':False]['text':' Clone repo locally','line_number':497,'multiline':False]['text':' region Load Data','line_number':500,'multiline':False]['text':' Get the datasets: you can either provide your own CSV/JSON/TXT training and evaluation files (see below)','line_number':501,'multiline':False]['text':' or just provide the name of one of the public datasets available on the hub at https://huggingface.co/datasets/','line_number':502,'multiline':False]['text':' (the dataset will be downloaded automatically from the datasets Hub).','line_number':503,'multiline':False]['text':'','line_number':504,'multiline':False]['text':' For CSV/JSON files, this script will use the column called 'text' or the first column if no column called','line_number':505,'multiline':False]['text':' 'text' is found. You can easily tweak this behavior (see below).','line_number':506,'multiline':False]['text':'','line_number':507,'multiline':False]['text':' In distributed training, the load_dataset function guarantee that only one local process can concurrently','line_number':508,'multiline':False]['text':' download the dataset.','line_number':509,'multiline':False]['text':' Downloading and loading a dataset from the hub.','line_number':511,'multiline':False]['text':' Loading the dataset from local csv or json file.','line_number':519,'multiline':False]['text':' See more about loading any type of standard or custom dataset (from files, python dict, pandas DataFrame, etc) at','line_number':538,'multiline':False]['text':' https://huggingface.co/docs/datasets/loading_datasets.','line_number':539,'multiline':False]['text':' endregion','line_number':540,'multiline':False]['text':' region Load pretrained model and tokenizer','line_number':542,'multiline':False]['text':'','line_number':543,'multiline':False]['text':' Load pretrained model and tokenizer','line_number':544,'multiline':False]['text':' endregion','line_number':560,'multiline':False]['text':' region Tokenizer check: this script requires a fast tokenizer.','line_number':562,'multiline':False]['text':' endregion','line_number':569,'multiline':False]['text':' region Preprocessing the datasets','line_number':571,'multiline':False]['text':' Preprocessing is slightly different for training and evaluation.','line_number':572,'multiline':False]['text':' Padding side determines if we do (question|context) or (context|question).','line_number':583,'multiline':False]['text':' Training preprocessing','line_number':593,'multiline':False]['text':' Some of the questions have lots of whitespace on the left, which is not useful and will make the','line_number':595,'multiline':False]['text':' truncation of the context fail (the tokenized question will take a lots of space). So we remove that','line_number':596,'multiline':False]['text':' left whitespace','line_number':597,'multiline':False]['text':' Tokenize our examples with truncation and maybe padding, but keep the overflows using a stride. This results','line_number':600,'multiline':False]['text':' in one example possible giving several features when a context is long, each of those features having a','line_number':601,'multiline':False]['text':' context that overlaps a bit the context of the previous feature.','line_number':602,'multiline':False]['text':' Since one example might give us several features if it has a long context, we need a map from a feature to','line_number':614,'multiline':False]['text':' its corresponding example. This key gives us just that.','line_number':615,'multiline':False]['text':' The offset mappings will give us a map from token to character position in the original context. This will','line_number':617,'multiline':False]['text':' help us compute the start_positions and end_positions.','line_number':618,'multiline':False]['text':' Let's label those examples!','line_number':621,'multiline':False]['text':' We will label impossible answers with the index of the CLS token.','line_number':626,'multiline':False]['text':' Grab the sequence corresponding to that example (to know what is the context and what is the question).','line_number':630,'multiline':False]['text':' One example can give several spans, this is the index of the example containing this span of text.','line_number':633,'multiline':False]['text':' If no answers are given, set the cls_index as answer.','line_number':636,'multiline':False]['text':' Start/end character index of the answer in the text.','line_number':641,'multiline':False]['text':' Start token index of the current span in the text.','line_number':645,'multiline':False]['text':' End token index of the current span in the text.','line_number':650,'multiline':False]['text':' Detect if the answer is out of the span (in which case this feature is labeled with the CLS index).','line_number':655,'multiline':False]['text':' Otherwise move the token_start_index and token_end_index to the two ends of the answer.','line_number':660,'multiline':False]['text':' Note: we could go after the last offset if the answer is the last word (edge case).','line_number':661,'multiline':False]['text':' We will select sample from whole data if agument is specified','line_number':677,'multiline':False]['text':' Create train feature from dataset','line_number':680,'multiline':False]['text':' Number of samples might increase during Feature Creation, We select only specified max samples','line_number':689,'multiline':False]['text':' Validation preprocessing','line_number':694,'multiline':False]['text':' Some of the questions have lots of whitespace on the left, which is not useful and will make the','line_number':696,'multiline':False]['text':' truncation of the context fail (the tokenized question will take a lots of space). So we remove that','line_number':697,'multiline':False]['text':' left whitespace','line_number':698,'multiline':False]['text':' Tokenize our examples with truncation and maybe padding, but keep the overflows using a stride. This results','line_number':701,'multiline':False]['text':' in one example possible giving several features when a context is long, each of those features having a','line_number':702,'multiline':False]['text':' context that overlaps a bit the context of the previous feature.','line_number':703,'multiline':False]['text':' Since one example might give us several features if it has a long context, we need a map from a feature to','line_number':715,'multiline':False]['text':' its corresponding example. This key gives us just that.','line_number':716,'multiline':False]['text':' For evaluation, we will need to convert our predictions to substrings of the context, so we keep the','line_number':719,'multiline':False]['text':' corresponding example_id and we will store the offset mappings.','line_number':720,'multiline':False]['text':' Grab the sequence corresponding to that example (to know what is the context and what is the question).','line_number':724,'multiline':False]['text':' One example can give several spans, this is the index of the example containing this span of text.','line_number':728,'multiline':False]['text':' Set to None the offset_mapping that are not part of the context so it's easy to determine if a token','line_number':732,'multiline':False]['text':' position is part of the context or not.','line_number':733,'multiline':False]['text':' We will select sample from whole data','line_number':746,'multiline':False]['text':' Validation Feature Creation','line_number':749,'multiline':False]['text':' During Feature creation dataset samples might increase, we will select required samples again','line_number':758,'multiline':False]['text':' We will select sample from whole data','line_number':768,'multiline':False]['text':' Predict Feature Creation','line_number':770,'multiline':False]['text':' During Feature creation dataset samples might increase, we will select required samples again','line_number':779,'multiline':False]['text':' endregion','line_number':783,'multiline':False]['text':' region Metrics and Post-processing:','line_number':785,'multiline':False]['text':' Post-processing: we match the start logits and end logits to answers in the original context.','line_number':787,'multiline':False]['text':' Format the result to the format the metric expects.','line_number':799,'multiline':False]['text':' Create and fill numpy array of size len_of_validation_data * max_length_of_output_tensor','line_number':815,'multiline':False]['text':' create a numpy array and fill it with -100.','line_number':829,'multiline':False]['text':' Now since we have create an array now we will populate it with the outputs of the model.','line_number':831,'multiline':False]['text':' populate columns','line_number':832,'multiline':False]['text':' We have to fill it such that we have to take the whole tensor and replace it on the newly created array','line_number':833,'multiline':False]['text':' And after every iteration we have to change the step','line_number':834,'multiline':False]['text':' endregion','line_number':848,'multiline':False]['text':' region Training steps and logging init','line_number':850,'multiline':False]['text':' Log a few random samples from the training set:','line_number':854,'multiline':False]['text':' Define a summary writer','line_number':858,'multiline':False]['text':' endregion','line_number':897,'multiline':False]['text':' region Load model','line_number':899,'multiline':False]['text':' endregion','line_number':920,'multiline':False]['text':' region Define train step functions','line_number':922,'multiline':False]['text':' endregion','line_number':945,'multiline':False]['text':' region Define eval step functions','line_number':947,'multiline':False]['text':' endregion','line_number':953,'multiline':False]['text':' region Define train and eval loop','line_number':955,'multiline':False]['text':' make sure weights are replicated on each device','line_number':959,'multiline':False]['text':' Create sampling rng','line_number':970,'multiline':False]['text':' train','line_number':973,'multiline':False]['text':' Save metrics','line_number':989,'multiline':False]['text':' evaluate','line_number':1010,'multiline':False]['text':' Get the max_length of the tensor','line_number':1027,'multiline':False]['text':' concatenate the numpy array','line_number':1029,'multiline':False]['text':' delete the list of numpy arrays','line_number':1033,'multiline':False]['text':' save checkpoint after each epoch and push checkpoint to the hub','line_number':1046,'multiline':False]['text':' endregion','line_number':1054,'multiline':False]['text':' Eval after training','line_number':1056,'multiline':False]['text':' Get the max_length of the tensor','line_number':1074,'multiline':False]['text':' concatenate the numpy array','line_number':1076,'multiline':False]['text':' delete the list of numpy arrays','line_number':1080,'multiline':False]