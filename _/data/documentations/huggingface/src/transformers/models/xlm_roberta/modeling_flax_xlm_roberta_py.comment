['text':' coding=utf-8','line_number':1,'multiline':False]['text':' Copyright 2022 Facebook AI Research and the HuggingFace Inc. team.','line_number':2,'multiline':False]['text':' Copyright (c) 2018, NVIDIA CORPORATION.  All rights reserved.','line_number':3,'multiline':False]['text':'','line_number':4,'multiline':False]['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':5,'multiline':False]['text':' you may not use this file except in compliance with the License.','line_number':6,'multiline':False]['text':' You may obtain a copy of the License at','line_number':7,'multiline':False]['text':'','line_number':8,'multiline':False]['text':'     http://www.apache.org/licenses/LICENSE-2.0','line_number':9,'multiline':False]['text':'','line_number':10,'multiline':False]['text':' Unless required by applicable law or agreed to in writing, software','line_number':11,'multiline':False]['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':12,'multiline':False]['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':13,'multiline':False]['text':' See the License for the specific language governing permissions and','line_number':14,'multiline':False]['text':' limitations under the License.','line_number':15,'multiline':False]['text':' See all XLM-RoBERTa models at https://huggingface.co/models?filter=xlm-roberta','line_number':57,'multiline':False]['text':' Copied from transformers.models.roberta.modeling_flax_roberta.create_position_ids_from_input_ids','line_number':61,'multiline':False]['text':' The series of casts and type-conversions here are carefully balanced to both work with ONNX export and XLA.','line_number':73,'multiline':False]['text':' Copied from transformers.models.bert.modeling_flax_bert.FlaxBertEmbeddings with Bert->XLMRoberta','line_number':147,'multiline':False]['text':' the dtype of the computation','line_number':152,'multiline':False]['text':' Embed','line_number':177,'multiline':False]['text':' Sum all embeddings','line_number':182,'multiline':False]['text':' Layer Norm','line_number':185,'multiline':False]['text':' Copied from transformers.models.bert.modeling_flax_bert.FlaxBertSelfAttention with Bert->XLMRoberta','line_number':191,'multiline':False]['text':' the dtype of the computation','line_number':195,'multiline':False]['text':' Copied from transformers.models.bart.modeling_flax_bart.FlaxBartAttention._concatenate_to_cache','line_number':233,'multiline':False]['text':' detect if we're initializing by absence of existing cache data.','line_number':240,'multiline':False]['text':' update key, value caches with our new 1d spatial slices','line_number':248,'multiline':False]['text':' causal mask for cached decoder self-attention: our single query position should only attend to those key positions that have already been generated and cached, not the remaining zero elements.','line_number':257,'multiline':False]['text':' if key_value_states are provided this layer is used as a cross-attention layer','line_number':275,'multiline':False]['text':' for the decoder','line_number':276,'multiline':False]['text':' get query proj','line_number':280,'multiline':False]['text':' get key, value proj','line_number':282,'multiline':False]['text':' cross_attentions','line_number':284,'multiline':False]['text':' self_attention','line_number':288,'multiline':False]['text':' handle cache prepare causal attention mask','line_number':296,'multiline':False]['text':' combine masks if needed','line_number':309,'multiline':False]['text':' During fast autoregressive decoding, we feed one position at a time,','line_number':318,'multiline':False]['text':' and cache the keys and values step by step.','line_number':319,'multiline':False]['text':' Convert the boolean attention mask to an attention bias.','line_number':325,'multiline':False]['text':' attention mask in the form of attention bias','line_number':327,'multiline':False]['text':' Mask heads if we want to','line_number':352,'multiline':False]['text':' Copied from transformers.models.bert.modeling_flax_bert.FlaxBertSelfOutput with Bert->XLMRoberta','line_number':363,'multiline':False]['text':' the dtype of the computation','line_number':366,'multiline':False]['text':' Copied from transformers.models.bert.modeling_flax_bert.FlaxBertAttention with Bert->XLMRoberta','line_number':384,'multiline':False]['text':' Attention mask comes in as attention_mask.shape == (*batch_sizes, kv_length)','line_number':404,'multiline':False]['text':' FLAX expects: attention_mask.shape == (*batch_sizes, 1, 1, kv_length) such that it is broadcastable','line_number':405,'multiline':False]['text':' with attn_weights.shape == (*batch_sizes, num_heads, q_length, kv_length)','line_number':406,'multiline':False]['text':' Copied from transformers.models.bert.modeling_flax_bert.FlaxBertIntermediate with Bert->XLMRoberta','line_number':427,'multiline':False]['text':' the dtype of the computation','line_number':430,'multiline':False]['text':' Copied from transformers.models.bert.modeling_flax_bert.FlaxBertOutput with Bert->XLMRoberta','line_number':446,'multiline':False]['text':' the dtype of the computation','line_number':449,'multiline':False]['text':' Copied from transformers.models.bert.modeling_flax_bert.FlaxBertLayer with Bert->XLMRoberta','line_number':467,'multiline':False]['text':' the dtype of the computation','line_number':470,'multiline':False]['text':' Self Attention','line_number':490,'multiline':False]['text':' Cross-Attention Block','line_number':501,'multiline':False]['text':' Copied from transformers.models.bert.modeling_flax_bert.FlaxBertLayerCollection with Bert->XLMRoberta','line_number':525,'multiline':False]['text':' the dtype of the computation','line_number':528,'multiline':False]['text':' Check if head_mask has a correct number of layers specified if desired','line_number':561,'multiline':False]['text':' Copied from transformers.models.bert.modeling_flax_bert.FlaxBertEncoder with Bert->XLMRoberta','line_number':608,'multiline':False]['text':' the dtype of the computation','line_number':611,'multiline':False]['text':' Copied from transformers.models.bert.modeling_flax_bert.FlaxBertPooler with Bert->XLMRoberta','line_number':648,'multiline':False]['text':' the dtype of the computation','line_number':651,'multiline':False]['text':' Copied from transformers.models.roberta.modeling_flax_roberta.FlaxRobertaLMHead with Roberta->XLMRoberta','line_number':666,'multiline':False]['text':' Copied from transformers.models.roberta.modeling_flax_roberta.FlaxRobertaClassificationHead with Roberta->XLMRoberta','line_number':702,'multiline':False]['text':' take <s> token (equiv. to [CLS])','line_number':726,'multiline':False]['text':' Copied from transformers.models.roberta.modeling_flax_roberta.FlaxRobertaPreTrainedModel with Roberta->XLMRoberta, roberta->xlm-roberta, ROBERTA->XLM_ROBERTA','line_number':735,'multiline':False]['text':' Copied from transformers.models.bert.modeling_flax_bert.FlaxBertPreTrainedModel.enable_gradient_checkpointing','line_number':760,'multiline':False]['text':' init input tensors','line_number':769,'multiline':False]['text':' Copied from transformers.models.bart.modeling_flax_bart.FlaxBartDecoderPreTrainedModel.init_cache','line_number':810,'multiline':False]['text':' init input variables to retrieve cache','line_number':820,'multiline':False]['text':' init input tensors if not passed','line_number':854,'multiline':False]['text':' Handle any PRNG if needed','line_number':867,'multiline':False]['text':' if past_key_values are passed then cache is already initialized a private flag init_cache has to be passed','line_number':875,'multiline':False]['text':' down to ensure cache is used. It has to be made sure that cache is marked as mutable so that it can be','line_number':876,'multiline':False]['text':' changed by FlaxXLMRobertaAttention module','line_number':877,'multiline':False]['text':' add updated cache to model output','line_number':901,'multiline':False]['text':' Copied from transformers.models.bert.modeling_flax_bert.FlaxBertModule with Bert->XLMRoberta','line_number':928,'multiline':False]['text':' the dtype of the computation','line_number':931,'multiline':False]['text':' make sure `token_type_ids` is correctly initialized when not passed','line_number':959,'multiline':False]['text':' make sure `position_ids` is correctly initialized when not passed','line_number':963,'multiline':False]['text':' if pooled is None, don't return it','line_number':986,'multiline':False]['text':' Copied from transformers.models.roberta.modeling_flax_roberta.FlaxRobertaForMaskedLMModule with Roberta->XLMRoberta','line_number':1011,'multiline':False]['text':' Model','line_number':1038,'multiline':False]['text':' Compute the prediction scores','line_number':1057,'multiline':False]['text':' Copied from transformers.models.roberta.modeling_flax_roberta.FlaxRobertaForSequenceClassificationModule with Roberta->XLMRoberta','line_number':1084,'multiline':False]['text':' Model','line_number':1111,'multiline':False]['text':' Copied from transformers.models.bert.modeling_flax_bert.FlaxBertForMultipleChoiceModule with Bert->XLMRoberta, with self.bert->self.roberta','line_number':1156,'multiline':False]['text':' Model','line_number':1189,'multiline':False]['text':' Copied from transformers.models.bert.modeling_flax_bert.FlaxBertForTokenClassificationModule with Bert->XLMRoberta, with self.bert->self.roberta','line_number':1240,'multiline':False]['text':' Model','line_number':1273,'multiline':False]['text':' Copied from transformers.models.bert.modeling_flax_bert.FlaxBertForQuestionAnsweringModule with Bert->XLMRoberta, with self.bert->self.roberta','line_number':1319,'multiline':False]['text':' Model','line_number':1346,'multiline':False]['text':' Copied from transformers.models.roberta.modeling_flax_roberta.FlaxRobertaForCausalLMModule with Roberta->XLMRoberta','line_number':1396,'multiline':False]['text':' Model','line_number':1426,'multiline':False]['text':' Compute the prediction scores','line_number':1448,'multiline':False]['text':' Copied from transformers.models.roberta.modeling_flax_roberta.FlaxRobertaForCausalLM with Roberta->XLMRoberta','line_number':1469,'multiline':False]['text':' initializing the cache','line_number':1474,'multiline':False]['text':' Note that usually one would have to put 0's in the attention_mask for x > input_ids.shape[-1] and x < cache_length.','line_number':1478,'multiline':False]['text':' But since the decoder uses a causal mask, those positions are masked anyway.','line_number':1479,'multiline':False]['text':' Thus, we can create a single static attention_mask here, which is more efficient for compilation','line_number':1480,'multiline':False]