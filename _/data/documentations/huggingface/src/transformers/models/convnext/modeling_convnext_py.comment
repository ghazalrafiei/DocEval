['text':' coding=utf-8','line_number':1,'multiline':False]['text':' Copyright 2022 Meta Platforms, Inc. and The HuggingFace Inc. team. All rights reserved.','line_number':2,'multiline':False]['text':'','line_number':3,'multiline':False]['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':4,'multiline':False]['text':' you may not use this file except in compliance with the License.','line_number':5,'multiline':False]['text':' You may obtain a copy of the License at','line_number':6,'multiline':False]['text':'','line_number':7,'multiline':False]['text':'     http://www.apache.org/licenses/LICENSE-2.0','line_number':8,'multiline':False]['text':'','line_number':9,'multiline':False]['text':' Unless required by applicable law or agreed to in writing, software','line_number':10,'multiline':False]['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':11,'multiline':False]['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':12,'multiline':False]['text':' See the License for the specific language governing permissions and','line_number':13,'multiline':False]['text':' limitations under the License.','line_number':14,'multiline':False]['text':' General docstring','line_number':46,'multiline':False]['text':' Base docstring','line_number':49,'multiline':False]['text':' Image classification docstring','line_number':53,'multiline':False]['text':' See all ConvNext models at https://huggingface.co/models?filter=convnext','line_number':59,'multiline':False]['text':' Copied from transformers.models.beit.modeling_beit.drop_path','line_number':63,'multiline':False]['text':' work with diff dim tensors, not just 2D ConvNets','line_number':77,'multiline':False]['text':' binarize','line_number':79,'multiline':False]['text':' Copied from transformers.models.beit.modeling_beit.BeitDropPath with Beit->ConvNext','line_number':84,'multiline':False]['text':' depthwise conv','line_number':169,'multiline':False]['text':' pointwise/1x1 convs, implemented with linear layers','line_number':171,'multiline':False]['text':' (N, C, H, W) -> (N, H, W, C)','line_number':184,'multiline':False]['text':' (N, H, W, C) -> (N, C, H, W)','line_number':191,'multiline':False]['text':' Slightly different from the TF version which uses truncated_normal for initialization','line_number':289,'multiline':False]['text':' cf https://github.com/pytorch/pytorch/pull/5617','line_number':290,'multiline':False]['text':' final layernorm layer','line_number':336,'multiline':False]['text':' Initialize weights and apply final processing','line_number':339,'multiline':False]['text':' global average pooling, (N, C, H, W) -> (N, C)','line_number':374,'multiline':False]['text':' Classifier head','line_number':401,'multiline':False]['text':' Initialize weights and apply final processing','line_number':406,'multiline':False]['text':' Add layer norms to hidden states of out_features','line_number':485,'multiline':False]['text':' initialize weights and apply final processing','line_number':491,'multiline':False]