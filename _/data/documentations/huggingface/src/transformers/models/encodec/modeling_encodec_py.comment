['text':' coding=utf-8','line_number':1,'multiline':False]['text':' Copyright 2023 Meta Platforms, Inc. and affiliates, and the HuggingFace Inc. team. All rights reserved.','line_number':2,'multiline':False]['text':'','line_number':3,'multiline':False]['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':4,'multiline':False]['text':' you may not use this file except in compliance with the License.','line_number':5,'multiline':False]['text':' You may obtain a copy of the License at','line_number':6,'multiline':False]['text':'','line_number':7,'multiline':False]['text':'     http://www.apache.org/licenses/LICENSE-2.0','line_number':8,'multiline':False]['text':'','line_number':9,'multiline':False]['text':' Unless required by applicable law or agreed to in writing, software','line_number':10,'multiline':False]['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':11,'multiline':False]['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':12,'multiline':False]['text':' See the License for the specific language governing permissions and','line_number':13,'multiline':False]['text':' limitations under the License.','line_number':14,'multiline':False]['text':' General docstring','line_number':39,'multiline':False]['text':' See all EnCodec models at https://huggingface.co/models?filter=encodec','line_number':46,'multiline':False]['text':' warn user on unusual setup between dilation and stride','line_number':105,'multiline':False]['text':' effective kernel size with dilations','line_number':151,'multiline':False]['text':' Left padding for causal','line_number':156,'multiline':False]['text':' Asymmetric padding required for odd strides','line_number':159,'multiline':False]['text':' We will only trim fixed padding. Extra padding from `pad_for_conv1d` would be','line_number':206,'multiline':False]['text':' removed at the very end, when keeping only the right length for the output,','line_number':207,'multiline':False]['text':' as removing it here would require also passing the length at the matching layer','line_number':208,'multiline':False]['text':' in the encoder.','line_number':209,'multiline':False]['text':' Trim the padding on the right according to the specified ratio','line_number':211,'multiline':False]['text':' if trim_right_ratio = 1.0, trim everything from right','line_number':212,'multiline':False]['text':' Asymmetric padding required for odd strides','line_number':215,'multiline':False]['text':' unpad','line_number':220,'multiline':False]['text':' Downsample to raw audio scale','line_number':283,'multiline':False]['text':' Add residual layers','line_number':286,'multiline':False]['text':' Add downsampling layers','line_number':289,'multiline':False]['text':' Upsample to raw audio scale','line_number':316,'multiline':False]['text':' Add upsampling layers','line_number':319,'multiline':False]['text':' Add residual layers','line_number':324,'multiline':False]['text':' Add final layers','line_number':329,'multiline':False]['text':' pre-process','line_number':363,'multiline':False]['text':' quantize','line_number':365,'multiline':False]['text':' post-process','line_number':367,'multiline':False]['text':' Initialize weights and apply final processing','line_number':544,'multiline':False]['text':' if the padding is non zero','line_number':568,'multiline':False]['text':' Generic overlap add, with linear fade-in/fade-out, supporting complex scenario','line_number':654,'multiline':False]['text':' e.g., more than 2 frames per position.','line_number':655,'multiline':False]['text':' The core idea is to use a weight function that is a triangle,','line_number':656,'multiline':False]['text':' with a maximum value at the middle of the chunk.','line_number':657,'multiline':False]['text':' We use this weighting when summing the frames, and divide by the sum of weights','line_number':658,'multiline':False]['text':' for each positions at the end. Thus:','line_number':659,'multiline':False]['text':'   - if a frame is the only one to cover a position, the weighting is a no-op.','line_number':660,'multiline':False]['text':'   - if 2 frames cover a position:','line_number':661,'multiline':False]['text':'          ...  ...','line_number':662,'multiline':False]['text':'         /   \/   \','line_number':663,'multiline':False]['text':'        /    /\    \','line_number':664,'multiline':False]['text':'            S  T       , i.e. S offset of second frame starts, T end of first frame.','line_number':665,'multiline':False]['text':' Then the weight function for each one is: (t - S), (T - t), with `t` a given offset.','line_number':666,'multiline':False]['text':' After the final normalization, the weight of the second frame at position `t` is','line_number':667,'multiline':False]['text':' (t - S) / (t - S + (T - t)) = (t - S) / (T - S), which is exactly what we want.','line_number':668,'multiline':False]['text':'','line_number':669,'multiline':False]['text':'   - if more than 2 frames overlap at a given point, we hope that by induction','line_number':670,'multiline':False]['text':'      something sensible happens.','line_number':671,'multiline':False]['text':' truncate based on padding mask','line_number':747,'multiline':False]