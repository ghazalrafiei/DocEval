['text':' coding=utf-8','line_number':1,'multiline':False]['text':' Copyright 2020 The SqueezeBert authors and The HuggingFace Inc. team.','line_number':2,'multiline':False]['text':'','line_number':3,'multiline':False]['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':4,'multiline':False]['text':' you may not use this file except in compliance with the License.','line_number':5,'multiline':False]['text':' You may obtain a copy of the License at','line_number':6,'multiline':False]['text':'','line_number':7,'multiline':False]['text':'     http://www.apache.org/licenses/LICENSE-2.0','line_number':8,'multiline':False]['text':'','line_number':9,'multiline':False]['text':' Unless required by applicable law or agreed to in writing, software','line_number':10,'multiline':False]['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':11,'multiline':False]['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':12,'multiline':False]['text':' See the License for the specific language governing permissions and','line_number':13,'multiline':False]['text':' limitations under the License.','line_number':14,'multiline':False]['text':' self.LayerNorm is not snake-cased to stick with TensorFlow model variable name and be able to load','line_number':61,'multiline':False]['text':' any TensorFlow checkpoint file','line_number':62,'multiline':False]['text':' position_ids (1, len position emb) is contiguous in memory and exported when serialized','line_number':66,'multiline':False]['text':' instantiates self.{weight, bias, eps}','line_number':124,'multiline':False]['text':' [N, C1, C2, W]','line_number':197,'multiline':False]['text':' [N, C1, C2, W] --> [N, C1, W, C2]','line_number':199,'multiline':False]['text':' [N, C1, C2, W]','line_number':206,'multiline':False]['text':' no `permute` needed','line_number':208,'multiline':False]['text':' [N, C1, C2, W]','line_number':216,'multiline':False]['text':' [N, C, W]','line_number':217,'multiline':False]['text':' Take the dot product between "query" and "key" to get the raw attention scores.','line_number':235,'multiline':False]['text':' Apply the attention mask is (precomputed for all layers in BertModel forward() function)','line_number':238,'multiline':False]['text':' Normalize the attention scores to probabilities.','line_number':241,'multiline':False]['text':' This is actually dropping out entire tokens to attend to, which might','line_number':244,'multiline':False]['text':' seem a bit unusual, but is taken from the original Transformer paper.','line_number':245,'multiline':False]['text':' [batch_size, sequence_length, hidden_size] --> [batch_size, hidden_size, sequence_length]','line_number':328,'multiline':False]['text':' [batch_size, hidden_size, sequence_length] --> [batch_size, sequence_length, hidden_size]','line_number':347,'multiline':False]['text':' We "pool" the model by simply taking the hidden state corresponding','line_number':367,'multiline':False]['text':' to the first token.','line_number':368,'multiline':False]['text':' The output weights are the same as the input embeddings, but there is','line_number':397,'multiline':False]['text':' an output-only bias for each token.','line_number':398,'multiline':False]['text':' Need a link between the two variables so that the bias is correctly resized with `resize_token_embeddings`','line_number':403,'multiline':False]['text':' Slightly different from the TF version which uses truncated_normal for initialization','line_number':434,'multiline':False]['text':' cf https://github.com/pytorch/pytorch/pull/5617','line_number':435,'multiline':False]['text':' Initialize weights and apply final processing','line_number':555,'multiline':False]['text':' Prepare head mask if needed','line_number':614,'multiline':False]['text':' 1.0 in head_mask indicate we keep the head','line_number':615,'multiline':False]['text':' attention_probs has shape bsz x n_heads x N x N','line_number':616,'multiline':False]['text':' input head_mask has shape [num_heads] or [num_hidden_layers x num_heads]','line_number':617,'multiline':False]['text':' and head_mask is converted to shape [num_hidden_layers x batch x num_heads x seq_length x seq_length]','line_number':618,'multiline':False]['text':' Initialize weights and apply final processing','line_number':656,'multiline':False]['text':' -100 index = padding token','line_number':709,'multiline':False]['text':' Initialize weights and apply final processing','line_number':741,'multiline':False]['text':' Initialize weights and apply final processing','line_number':838,'multiline':False]['text':' Initialize weights and apply final processing','line_number':932,'multiline':False]['text':' Initialize weights and apply final processing','line_number':1009,'multiline':False]['text':' If we are on multi-GPU, split add a dimension','line_number':1065,'multiline':False]['text':' sometimes the start/end positions are outside our model inputs, we ignore these terms','line_number':1070,'multiline':False]