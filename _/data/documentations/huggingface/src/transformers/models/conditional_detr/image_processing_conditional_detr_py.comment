['text':' coding=utf-8','line_number':1,'multiline':False]['text':' Copyright 2022 The HuggingFace Inc. team. All rights reserved.','line_number':2,'multiline':False]['text':'','line_number':3,'multiline':False]['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':4,'multiline':False]['text':' you may not use this file except in compliance with the License.','line_number':5,'multiline':False]['text':' You may obtain a copy of the License at','line_number':6,'multiline':False]['text':'','line_number':7,'multiline':False]['text':'     http://www.apache.org/licenses/LICENSE-2.0','line_number':8,'multiline':False]['text':'','line_number':9,'multiline':False]['text':' Unless required by applicable law or agreed to in writing, software','line_number':10,'multiline':False]['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':11,'multiline':False]['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':12,'multiline':False]['text':' See the License for the specific language governing permissions and','line_number':13,'multiline':False]['text':' limitations under the License.','line_number':14,'multiline':False]['text':' noqa: F401','line_number':42,'multiline':False]['text':' pylint: disable=invalid-name','line_number':82,'multiline':False]['text':' Copied from transformers.models.detr.image_processing_detr.get_size_with_aspect_ratio','line_number':88,'multiline':False]['text':' Copied from transformers.models.detr.image_processing_detr.get_resize_output_image_size','line_number':120,'multiline':False]['text':' Copied from transformers.models.detr.image_processing_detr.get_numpy_to_framework_fn','line_number':149,'multiline':False]['text':' Copied from transformers.models.detr.image_processing_detr.safe_squeeze','line_number':174,'multiline':False]['text':' Copied from transformers.models.detr.image_processing_detr.normalize_annotation','line_number':188,'multiline':False]['text':' Copied from transformers.models.detr.image_processing_detr.max_across_indices','line_number':203,'multiline':False]['text':' Copied from transformers.models.detr.image_processing_detr.get_max_height_width','line_number':211,'multiline':False]['text':' Copied from transformers.models.detr.image_processing_detr.make_pixel_mask','line_number':230,'multiline':False]['text':' Copied from transformers.models.detr.image_processing_detr.convert_coco_poly_to_mask','line_number':249,'multiline':False]['text':' Copied from transformers.models.detr.image_processing_detr.prepare_coco_detection_annotation with DETR->ConditionalDetr','line_number':284,'multiline':False]['text':' Get all COCO annotations for the given image.','line_number':299,'multiline':False]['text':' for conversion to coco api','line_number':306,'multiline':False]['text':' guard against no boxes via resizing','line_number':311,'multiline':False]['text':' Converting the filtered keypoints list to a numpy array','line_number':329,'multiline':False]['text':' Apply the keep mask here to filter the relevant annotations','line_number':331,'multiline':False]['text':' Copied from transformers.models.detr.image_processing_detr.masks_to_boxes','line_number':345,'multiline':False]['text':' see https://github.com/pytorch/pytorch/issues/50276','line_number':362,'multiline':False]['text':' Copied from transformers.models.detr.image_processing_detr.prepare_coco_panoptic_annotation with DETR->ConditionalDetr','line_number':380,'multiline':False]['text':' Copied from transformers.models.detr.image_processing_detr.get_segmentation_image','line_number':422,'multiline':False]['text':' We didn't detect any mask :(','line_number':432,'multiline':False]['text':' Merge the masks corresponding to the same stuff class','line_number':438,'multiline':False]['text':' Copied from transformers.models.detr.image_processing_detr.get_mask_area','line_number':448,'multiline':False]['text':' Copied from transformers.models.detr.image_processing_detr.score_labels_from_class_probabilities','line_number':458,'multiline':False]['text':' Copied from transformers.models.detr.image_processing_detr.post_process_panoptic_sample with DetrForSegmentation->ConditionalDetrForSegmentation','line_number':467,'multiline':False]['text':' we filter empty queries and detection below threshold','line_number':499,'multiline':False]['text':' It may be that we have several predicted masks for the same stuff class.','line_number':515,'multiline':False]['text':' In the following, we track the list of masks ids for each stuff class (they are merged later on)','line_number':516,'multiline':False]['text':' We filter out any mask that is too small','line_number':526,'multiline':False]['text':' We know filter empty masks as long as we find some','line_number':528,'multiline':False]['text':' Copied from transformers.models.detr.image_processing_detr.resize_annotation','line_number':553,'multiline':False]['text':' Copied from transformers.models.detr.image_processing_detr.binary_mask_to_rle','line_number':605,'multiline':False]['text':' Copied from transformers.models.detr.image_processing_detr.convert_segmentation_to_rle','line_number':628,'multiline':False]['text':' Copied from transformers.models.detr.image_processing_detr.remove_low_and_no_objects','line_number':650,'multiline':False]['text':' Copied from transformers.models.detr.image_processing_detr.check_segment_validity','line_number':679,'multiline':False]['text':' Get the mask associated with the k class','line_number':681,'multiline':False]['text':' Compute the area of all the stuff in query k','line_number':685,'multiline':False]['text':' Eliminate disconnected tiny segments','line_number':689,'multiline':False]['text':' Copied from transformers.models.detr.image_processing_detr.compute_segments','line_number':698,'multiline':False]['text':' Weigh each mask by its prediction score','line_number':721,'multiline':False]['text':' [height, width]','line_number':723,'multiline':False]['text':' Keep track of instances of each class','line_number':725,'multiline':False]['text':' Check if mask exists and large enough to be a segment','line_number':731,'multiline':False]['text':' Add current object segment to final segmentation map','line_number':742,'multiline':False]['text':' Copied from transformers.models.detr.image_processing_detr.DetrImageProcessor.__init__','line_number':796,'multiline':False]['text':' Copied from transformers.models.detr.image_processing_detr.DetrImageProcessor.from_dict with Detr->ConditionalDetr','line_number':839,'multiline':False]['text':' Copied from transformers.models.detr.image_processing_detr.DetrImageProcessor.prepare_annotation with DETR->ConditionalDetr','line_number':853,'multiline':False]['text':' Copied from transformers.models.detr.image_processing_detr.DetrImageProcessor.prepare','line_number':886,'multiline':False]['text':' Copied from transformers.models.detr.image_processing_detr.DetrImageProcessor.convert_coco_poly_to_mask','line_number':896,'multiline':False]['text':' Copied from transformers.models.detr.image_processing_detr.DetrImageProcessor.prepare_coco_detection with DETR->ConditionalDetr','line_number':901,'multiline':False]['text':' Copied from transformers.models.detr.image_processing_detr.DetrImageProcessor.prepare_coco_panoptic','line_number':906,'multiline':False]['text':' Copied from transformers.models.detr.image_processing_detr.DetrImageProcessor.resize','line_number':911,'multiline':False]['text':' Copied from transformers.models.detr.image_processing_detr.DetrImageProcessor.resize_annotation','line_number':964,'multiline':False]['text':' Copied from transformers.models.detr.image_processing_detr.DetrImageProcessor.rescale','line_number':978,'multiline':False]['text':' Copied from transformers.models.detr.image_processing_detr.DetrImageProcessor.normalize_annotation','line_number':1007,'multiline':False]['text':' Copied from transformers.models.detr.image_processing_detr.DetrImageProcessor._pad_image','line_number':1015,'multiline':False]['text':' Copied from transformers.models.detr.image_processing_detr.DetrImageProcessor.pad','line_number':1043,'multiline':False]['text':' Copied from transformers.models.detr.image_processing_detr.DetrImageProcessor.preprocess','line_number':1099,'multiline':False]['text':' PILImageResampling','line_number':1108,'multiline':False]['text':' All transformations expect numpy arrays','line_number':1242,'multiline':False]['text':' We assume that all images have the same channel dimension format.','line_number':1252,'multiline':False]['text':' prepare (COCO annotations as a list of Dict -> DETR target as a single Dict per image)','line_number':1255,'multiline':False]['text':' transformations','line_number':1274,'multiline':False]['text':' Pads images and returns their mask: {'pixel_values': ..., 'pixel_mask': ...}','line_number':1311,'multiline':False]['text':' POSTPROCESSING METHODS - TODO: add support for other frameworks','line_number':1330,'multiline':False]['text':' and from relative [0, 1] to absolute [0, height] coordinates','line_number':1367,'multiline':False]['text':' Copied from transformers.models.deformable_detr.image_processing_deformable_detr.DeformableDetrImageProcessor.post_process_object_detection with DeformableDetr->ConditionalDetr','line_number':1376,'multiline':False]['text':' and from relative [0, 1] to absolute [0, height] coordinates','line_number':1417,'multiline':False]['text':' Copied from transformers.models.detr.image_processing_detr.DetrImageProcessor.post_process_semantic_segmentation with Detr->ConditionalDetr','line_number':1435,'multiline':False]['text':' [batch_size, num_queries, num_classes+1]','line_number':1452,'multiline':False]['text':' [batch_size, num_queries, height, width]','line_number':1453,'multiline':False]['text':' Remove the null class `[..., :-1]`','line_number':1455,'multiline':False]['text':' [batch_size, num_queries, height, width]','line_number':1457,'multiline':False]['text':' Semantic segmentation logits of shape (batch_size, num_classes, height, width)','line_number':1459,'multiline':False]['text':' Resize logits and compute semantic segmentation maps','line_number':1463,'multiline':False]['text':' Copied from transformers.models.detr.image_processing_detr.DetrImageProcessor.post_process_instance_segmentation with Detr->ConditionalDetr','line_number':1483,'multiline':False]['text':' [batch_size, num_queries, num_classes+1]','line_number':1522,'multiline':False]['text':' [batch_size, num_queries, height, width]','line_number':1523,'multiline':False]['text':' [batch_size, num_queries, height, width]','line_number':1528,'multiline':False]['text':' Predicted label and score of each query (batch_size, num_queries)','line_number':1530,'multiline':False]['text':' Loop over items in batch size','line_number':1533,'multiline':False]['text':' No mask found','line_number':1541,'multiline':False]['text':' Get segmentation map and segment information of batch item','line_number':1548,'multiline':False]['text':' Return segmentation map in run-length encoding (RLE) format','line_number':1560,'multiline':False]['text':' Copied from transformers.models.detr.image_processing_detr.DetrImageProcessor.post_process_panoptic_segmentation with Detr->ConditionalDetr','line_number':1567,'multiline':False]['text':' [batch_size, num_queries, num_classes+1]','line_number':1615,'multiline':False]['text':' [batch_size, num_queries, height, width]','line_number':1616,'multiline':False]['text':' [batch_size, num_queries, height, width]','line_number':1621,'multiline':False]['text':' Predicted label and score of each query (batch_size, num_queries)','line_number':1623,'multiline':False]['text':' Loop over items in batch size','line_number':1626,'multiline':False]['text':' No mask found','line_number':1634,'multiline':False]['text':' Get segmentation map and segment information of batch item','line_number':1641,'multiline':False]