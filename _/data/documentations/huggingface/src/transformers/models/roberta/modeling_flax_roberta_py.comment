['text':' coding=utf-8','line_number':1,'multiline':False]['text':' Copyright 2021 The Google Flax Team Authors and The HuggingFace Inc. team.','line_number':2,'multiline':False]['text':'','line_number':3,'multiline':False]['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':4,'multiline':False]['text':' you may not use this file except in compliance with the License.','line_number':5,'multiline':False]['text':' You may obtain a copy of the License at','line_number':6,'multiline':False]['text':'','line_number':7,'multiline':False]['text':'     http://www.apache.org/licenses/LICENSE-2.0','line_number':8,'multiline':False]['text':'','line_number':9,'multiline':False]['text':' Unless required by applicable law or agreed to in writing, software','line_number':10,'multiline':False]['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':11,'multiline':False]['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':12,'multiline':False]['text':' See the License for the specific language governing permissions and','line_number':13,'multiline':False]['text':' limitations under the License.','line_number':14,'multiline':False]['text':' The series of casts and type-conversions here are carefully balanced to both work with ONNX export and XLA.','line_number':63,'multiline':False]['text':' Copied from transformers.models.bert.modeling_flax_bert.FlaxBertEmbeddings with Bert->Roberta','line_number':137,'multiline':False]['text':' the dtype of the computation','line_number':142,'multiline':False]['text':' Embed','line_number':167,'multiline':False]['text':' Sum all embeddings','line_number':172,'multiline':False]['text':' Layer Norm','line_number':175,'multiline':False]['text':' Copied from transformers.models.bert.modeling_flax_bert.FlaxBertSelfAttention with Bert->Roberta','line_number':181,'multiline':False]['text':' the dtype of the computation','line_number':185,'multiline':False]['text':' Copied from transformers.models.bart.modeling_flax_bart.FlaxBartAttention._concatenate_to_cache','line_number':223,'multiline':False]['text':' detect if we're initializing by absence of existing cache data.','line_number':230,'multiline':False]['text':' update key, value caches with our new 1d spatial slices','line_number':238,'multiline':False]['text':' causal mask for cached decoder self-attention: our single query position should only attend to those key positions that have already been generated and cached, not the remaining zero elements.','line_number':247,'multiline':False]['text':' if key_value_states are provided this layer is used as a cross-attention layer','line_number':265,'multiline':False]['text':' for the decoder','line_number':266,'multiline':False]['text':' get query proj','line_number':270,'multiline':False]['text':' get key, value proj','line_number':272,'multiline':False]['text':' cross_attentions','line_number':274,'multiline':False]['text':' self_attention','line_number':278,'multiline':False]['text':' handle cache prepare causal attention mask','line_number':286,'multiline':False]['text':' combine masks if needed','line_number':299,'multiline':False]['text':' During fast autoregressive decoding, we feed one position at a time,','line_number':308,'multiline':False]['text':' and cache the keys and values step by step.','line_number':309,'multiline':False]['text':' Convert the boolean attention mask to an attention bias.','line_number':315,'multiline':False]['text':' attention mask in the form of attention bias','line_number':317,'multiline':False]['text':' Mask heads if we want to','line_number':342,'multiline':False]['text':' Copied from transformers.models.bert.modeling_flax_bert.FlaxBertSelfOutput with Bert->Roberta','line_number':353,'multiline':False]['text':' the dtype of the computation','line_number':356,'multiline':False]['text':' Copied from transformers.models.bert.modeling_flax_bert.FlaxBertAttention with Bert->Roberta','line_number':374,'multiline':False]['text':' Attention mask comes in as attention_mask.shape == (*batch_sizes, kv_length)','line_number':394,'multiline':False]['text':' FLAX expects: attention_mask.shape == (*batch_sizes, 1, 1, kv_length) such that it is broadcastable','line_number':395,'multiline':False]['text':' with attn_weights.shape == (*batch_sizes, num_heads, q_length, kv_length)','line_number':396,'multiline':False]['text':' Copied from transformers.models.bert.modeling_flax_bert.FlaxBertIntermediate with Bert->Roberta','line_number':417,'multiline':False]['text':' the dtype of the computation','line_number':420,'multiline':False]['text':' Copied from transformers.models.bert.modeling_flax_bert.FlaxBertOutput with Bert->Roberta','line_number':436,'multiline':False]['text':' the dtype of the computation','line_number':439,'multiline':False]['text':' Copied from transformers.models.bert.modeling_flax_bert.FlaxBertLayer with Bert->Roberta','line_number':457,'multiline':False]['text':' the dtype of the computation','line_number':460,'multiline':False]['text':' Self Attention','line_number':480,'multiline':False]['text':' Cross-Attention Block','line_number':491,'multiline':False]['text':' Copied from transformers.models.bert.modeling_flax_bert.FlaxBertLayerCollection with Bert->Roberta','line_number':515,'multiline':False]['text':' the dtype of the computation','line_number':518,'multiline':False]['text':' Check if head_mask has a correct number of layers specified if desired','line_number':551,'multiline':False]['text':' Copied from transformers.models.bert.modeling_flax_bert.FlaxBertEncoder with Bert->Roberta','line_number':598,'multiline':False]['text':' the dtype of the computation','line_number':601,'multiline':False]['text':' Copied from transformers.models.bert.modeling_flax_bert.FlaxBertPooler with Bert->Roberta','line_number':638,'multiline':False]['text':' the dtype of the computation','line_number':641,'multiline':False]['text':' take <s> token (equiv. to [CLS])','line_number':714,'multiline':False]['text':' Copied from transformers.models.bert.modeling_flax_bert.FlaxBertPreTrainedModel.enable_gradient_checkpointing','line_number':747,'multiline':False]['text':' init input tensors','line_number':756,'multiline':False]['text':' Copied from transformers.models.bart.modeling_flax_bart.FlaxBartDecoderPreTrainedModel.init_cache','line_number':797,'multiline':False]['text':' init input variables to retrieve cache','line_number':807,'multiline':False]['text':' init input tensors if not passed','line_number':841,'multiline':False]['text':' Handle any PRNG if needed','line_number':854,'multiline':False]['text':' if past_key_values are passed then cache is already initialized a private flag init_cache has to be passed','line_number':862,'multiline':False]['text':' down to ensure cache is used. It has to be made sure that cache is marked as mutable so that it can be','line_number':863,'multiline':False]['text':' changed by FlaxRobertaAttention module','line_number':864,'multiline':False]['text':' add updated cache to model output','line_number':888,'multiline':False]['text':' Copied from transformers.models.bert.modeling_flax_bert.FlaxBertModule with Bert->Roberta','line_number':915,'multiline':False]['text':' the dtype of the computation','line_number':918,'multiline':False]['text':' make sure `token_type_ids` is correctly initialized when not passed','line_number':946,'multiline':False]['text':' make sure `position_ids` is correctly initialized when not passed','line_number':950,'multiline':False]['text':' if pooled is None, don't return it','line_number':973,'multiline':False]['text':' Model','line_number':1024,'multiline':False]['text':' Compute the prediction scores','line_number':1043,'multiline':False]['text':' Model','line_number':1096,'multiline':False]['text':' Copied from transformers.models.bert.modeling_flax_bert.FlaxBertForMultipleChoiceModule with Bert->Roberta, with self.bert->self.roberta','line_number':1141,'multiline':False]['text':' Model','line_number':1174,'multiline':False]['text':' Copied from transformers.models.bert.modeling_flax_bert.FlaxBertForTokenClassificationModule with Bert->Roberta, with self.bert->self.roberta','line_number':1225,'multiline':False]['text':' Model','line_number':1258,'multiline':False]['text':' Copied from transformers.models.bert.modeling_flax_bert.FlaxBertForQuestionAnsweringModule with Bert->Roberta, with self.bert->self.roberta','line_number':1304,'multiline':False]['text':' Model','line_number':1331,'multiline':False]['text':' Model','line_number':1410,'multiline':False]['text':' Compute the prediction scores','line_number':1432,'multiline':False]['text':' initializing the cache','line_number':1457,'multiline':False]['text':' Note that usually one would have to put 0's in the attention_mask for x > input_ids.shape[-1] and x < cache_length.','line_number':1461,'multiline':False]['text':' But since the decoder uses a causal mask, those positions are masked anyway.','line_number':1462,'multiline':False]['text':' Thus, we can create a single static attention_mask here, which is more efficient for compilation','line_number':1463,'multiline':False]