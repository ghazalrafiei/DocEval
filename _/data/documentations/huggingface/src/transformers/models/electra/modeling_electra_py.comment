['text':' coding=utf-8','line_number':1,'multiline':False]['text':' Copyright 2019 The Google AI Language Team Authors and The HuggingFace Inc. team.','line_number':2,'multiline':False]['text':'','line_number':3,'multiline':False]['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':4,'multiline':False]['text':' you may not use this file except in compliance with the License.','line_number':5,'multiline':False]['text':' You may obtain a copy of the License at','line_number':6,'multiline':False]['text':'','line_number':7,'multiline':False]['text':'     http://www.apache.org/licenses/LICENSE-2.0','line_number':8,'multiline':False]['text':'','line_number':9,'multiline':False]['text':' Unless required by applicable law or agreed to in writing, software','line_number':10,'multiline':False]['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':11,'multiline':False]['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':12,'multiline':False]['text':' See the License for the specific language governing permissions and','line_number':13,'multiline':False]['text':' limitations under the License.','line_number':14,'multiline':False]['text':' See all ELECTRA models at https://huggingface.co/models?filter=electra','line_number':63,'multiline':False]['text':' Load weights from TF model','line_number':82,'multiline':False]['text':' print(original_name, name)','line_number':106,'multiline':False]['text':' adam_v and adam_m are variables used in AdamWeightDecayOptimizer to calculated m and v','line_number':107,'multiline':False]['text':' which are not required for using pretrained model','line_number':108,'multiline':False]['text':' self.LayerNorm is not snake-cased to stick with TensorFlow model variable name and be able to load','line_number':158,'multiline':False]['text':' any TensorFlow checkpoint file','line_number':159,'multiline':False]['text':' position_ids (1, len position emb) is contiguous in memory and exported when serialized','line_number':163,'multiline':False]['text':' Copied from transformers.models.bert.modeling_bert.BertEmbeddings.forward','line_number':172,'multiline':False]['text':' Setting the token_type_ids to the registered buffer in constructor where it is all zeros, which usually occurs','line_number':191,'multiline':False]['text':' when its auto-generated, registered buffer helps users when tracing the model without passing token_type_ids, solves','line_number':192,'multiline':False]['text':' issue #5664','line_number':193,'multiline':False]['text':' Copied from transformers.models.bert.modeling_bert.BertSelfAttention with Bert->Electra','line_number':215,'multiline':False]['text':' If this is instantiated as a cross-attention module, the keys','line_number':260,'multiline':False]['text':' and values come from an encoder; the attention mask needs to be','line_number':261,'multiline':False]['text':' such that the encoder's padding tokens are not attended to.','line_number':262,'multiline':False]['text':' reuse k,v, cross_attentions','line_number':266,'multiline':False]['text':' if cross_attention save Tuple(torch.Tensor, torch.Tensor) of all cross attention key/value_states.','line_number':287,'multiline':False]['text':' Further calls to cross_attention layer can then reuse all cross-attention','line_number':288,'multiline':False]['text':' key/value_states (first "if" case)','line_number':289,'multiline':False]['text':' if uni-directional self-attention (decoder) save Tuple(torch.Tensor, torch.Tensor) of','line_number':290,'multiline':False]['text':' all previous decoder key/value_states. Further calls to uni-directional self-attention','line_number':291,'multiline':False]['text':' can concat previous decoder key/value_states to current projected key/value_states (third "elif" case)','line_number':292,'multiline':False]['text':' if encoder bi-directional self-attention `past_key_value` is always `None`','line_number':293,'multiline':False]['text':' Take the dot product between "query" and "key" to get the raw attention scores.','line_number':296,'multiline':False]['text':' fp16 compatibility','line_number':311,'multiline':False]['text':' Apply the attention mask is (precomputed for all layers in ElectraModel forward() function)','line_number':323,'multiline':False]['text':' Normalize the attention scores to probabilities.','line_number':326,'multiline':False]['text':' This is actually dropping out entire tokens to attend to, which might','line_number':329,'multiline':False]['text':' seem a bit unusual, but is taken from the original Transformer paper.','line_number':330,'multiline':False]['text':' Mask heads if we want to','line_number':333,'multiline':False]['text':' Copied from transformers.models.bert.modeling_bert.BertSelfOutput','line_number':350,'multiline':False]['text':' Copied from transformers.models.bert.modeling_bert.BertAttention with Bert->Electra','line_number':365,'multiline':False]['text':' Prune linear layers','line_number':380,'multiline':False]['text':' Update hyper params and store pruned heads','line_number':386,'multiline':False]['text':' add attentions if we output them','line_number':411,'multiline':False]['text':' Copied from transformers.models.bert.modeling_bert.BertIntermediate','line_number':415,'multiline':False]['text':' Copied from transformers.models.bert.modeling_bert.BertOutput','line_number':431,'multiline':False]['text':' Copied from transformers.models.bert.modeling_bert.BertLayer with Bert->Electra','line_number':446,'multiline':False]['text':' decoder uni-directional self-attention cached key/values tuple is at positions 1,2','line_number':472,'multiline':False]['text':' if decoder, the last output is tuple of self-attn cache','line_number':483,'multiline':False]['text':' add self attentions if we output attention weights','line_number':488,'multiline':False]['text':' cross_attn cached key/values tuple is at positions 3,4 of past_key_value tuple','line_number':498,'multiline':False]['text':' add cross attentions if we output attention weights','line_number':510,'multiline':False]['text':' add cross-attn cache to positions 3,4 of present_key_value tuple','line_number':512,'multiline':False]['text':' if decoder, return the attn key/values as the last output','line_number':521,'multiline':False]['text':' Copied from transformers.models.bert.modeling_bert.BertEncoder with Bert->Electra','line_number':533,'multiline':False]['text':' Copied from transformers.models.bert.modeling_bert.BertPreTrainedModel._init_weights','line_number':673,'multiline':False]['text':' Slightly different from the TF version which uses truncated_normal for initialization','line_number':677,'multiline':False]['text':' cf https://github.com/pytorch/pytorch/pull/5617','line_number':678,'multiline':False]['text':' Initialize weights and apply final processing','line_number':814,'multiline':False]['text':' past_key_values_length','line_number':872,'multiline':False]['text':' If a 2D or 3D attention mask is provided for the cross-attention','line_number':887,'multiline':False]['text':' we need to make broadcastable to [batch_size, num_heads, seq_length, seq_length]','line_number':888,'multiline':False]['text':' take <s> token (equiv. to [CLS])','line_number':940,'multiline':False]['text':' although BERT uses tanh here, it seems Electra authors used gelu here','line_number':943,'multiline':False]['text':' Initialize weights and apply final processing','line_number':964,'multiline':False]['text':' Initialize weights and apply final processing','line_number':1060,'multiline':False]['text':' Initialize weights and apply final processing','line_number':1170,'multiline':False]['text':' Masked language modeling softmax layer','line_number':1226,'multiline':False]['text':' -100 index = padding token','line_number':1228,'multiline':False]['text':' Initialize weights and apply final processing','line_number':1262,'multiline':False]['text':' Initialize weights and apply final processing','line_number':1343,'multiline':False]['text':' If we are on multi-GPU, split add a dimension','line_number':1402,'multiline':False]['text':' sometimes the start/end positions are outside our model inputs, we ignore these terms','line_number':1407,'multiline':False]['text':' Initialize weights and apply final processing','line_number':1448,'multiline':False]['text':' we are doing next-token prediction; shift prediction scores and input ids by one','line_number':1635,'multiline':False]['text':' Copied from transformers.models.roberta.modeling_roberta.RobertaForCausalLM.prepare_inputs_for_generation','line_number':1654,'multiline':False]['text':' if model is used as a decoder in encoder-decoder model, the decoder attention mask is created on the fly','line_number':1657,'multiline':False]['text':' cut decoder_input_ids if past_key_values is used','line_number':1661,'multiline':False]['text':' Some generation methods already pass only the last input ID','line_number':1665,'multiline':False]['text':' Default to old behavior: keep only final ID','line_number':1669,'multiline':False]['text':' Copied from transformers.models.roberta.modeling_roberta.RobertaForCausalLM._reorder_cache','line_number':1676,'multiline':False]