['text':' coding=utf-8','line_number':1,'multiline':False]['text':' Copyright 2021 The Fairseq Authors and The HuggingFace Inc. team. All rights reserved.','line_number':2,'multiline':False]['text':'','line_number':3,'multiline':False]['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':4,'multiline':False]['text':' you may not use this file except in compliance with the License.','line_number':5,'multiline':False]['text':' You may obtain a copy of the License at','line_number':6,'multiline':False]['text':'','line_number':7,'multiline':False]['text':'     http://www.apache.org/licenses/LICENSE-2.0','line_number':8,'multiline':False]['text':'','line_number':9,'multiline':False]['text':' Unless required by applicable law or agreed to in writing, software','line_number':10,'multiline':False]['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':11,'multiline':False]['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':12,'multiline':False]['text':' See the License for the specific language governing permissions and','line_number':13,'multiline':False]['text':' limitations under the License.','line_number':14,'multiline':False]['text':' See all Speech2Text2 models at https://huggingface.co/models?filter=speech2text2','line_number':42,'multiline':False]['text':' Copied from transformers.models.speech_to_text.modeling_speech_to_text.Speech2TextSinusoidalPositionalEmbedding with Speech2Text->Speech2Text2','line_number':46,'multiline':False]['text':' in forward put the weights on the correct dtype and device of the param','line_number':60,'multiline':False]['text':' zero pad','line_number':79,'multiline':False]['text':' Create the position ids from the input token ids. Any padded tokens remain padded.','line_number':88,'multiline':False]['text':' expand embeddings if needed','line_number':93,'multiline':False]['text':' The series of casts and type-conversions here are carefully balanced to both work with ONNX export and XLA.','line_number':111,'multiline':False]['text':' Copied from transformers.models.bart.modeling_bart.BartAttention with Bart->Speech2Text2','line_number':117,'multiline':False]['text':' if key_value_states are provided this layer is used as a cross-attention layer','line_number':166,'multiline':False]['text':' for the decoder','line_number':167,'multiline':False]['text':' get query proj','line_number':172,'multiline':False]['text':' get key, value proj','line_number':174,'multiline':False]['text':' `past_key_value[0].shape[2] == key_value_states.shape[1]`','line_number':175,'multiline':False]['text':' is checking that the `sequence_length` of the `past_key_value` is the same as','line_number':176,'multiline':False]['text':' the provided `key_value_states` to support prefix tuning','line_number':177,'multiline':False]['text':' reuse k,v, cross_attentions','line_number':183,'multiline':False]['text':' cross_attentions','line_number':187,'multiline':False]['text':' reuse k, v, self_attention','line_number':191,'multiline':False]['text':' self_attention','line_number':197,'multiline':False]['text':' if cross_attention save Tuple(torch.Tensor, torch.Tensor) of all cross attention key/value_states.','line_number':202,'multiline':False]['text':' Further calls to cross_attention layer can then reuse all cross-attention','line_number':203,'multiline':False]['text':' key/value_states (first "if" case)','line_number':204,'multiline':False]['text':' if uni-directional self-attention (decoder) save Tuple(torch.Tensor, torch.Tensor) of','line_number':205,'multiline':False]['text':' all previous decoder key/value_states. Further calls to uni-directional self-attention','line_number':206,'multiline':False]['text':' can concat previous decoder key/value_states to current projected key/value_states (third "elif" case)','line_number':207,'multiline':False]['text':' if encoder bi-directional self-attention `past_key_value` is always `None`','line_number':208,'multiline':False]['text':' this operation is a bit awkward, but it's required to','line_number':245,'multiline':False]['text':' make sure that attn_weights keeps its gradient.','line_number':246,'multiline':False]['text':' In order to do so, attn_weights have to be reshaped','line_number':247,'multiline':False]['text':' twice and have to be reused in the following','line_number':248,'multiline':False]['text':' Use the `embed_dim` from the config (stored in the class) rather than `hidden_state` because `attn_output` can be','line_number':267,'multiline':False]['text':' partitioned across GPUs when using tensor-parallelism.','line_number':268,'multiline':False]['text':' Self Attention','line_number':338,'multiline':False]['text':' decoder uni-directional self-attention cached key/values tuple is at positions 1,2','line_number':339,'multiline':False]['text':' add present self-attn cache to positions 1,2 of present_key_value tuple','line_number':341,'multiline':False]['text':' Cross-Attention Block','line_number':353,'multiline':False]['text':' cross_attn cached key/values tuple is at positions 3,4 of present_key_value tuple','line_number':359,'multiline':False]['text':' add cross-attn to positions 3,4 of present_key_value tuple','line_number':373,'multiline':False]['text':' Fully Connected','line_number':376,'multiline':False]['text':' Initialize weights and apply final processing','line_number':458,'multiline':False]['text':' retrieve input_ids and inputs_embeds','line_number':554,'multiline':False]['text':' past_key_values_length','line_number':565,'multiline':False]['text':' expand encoder attention mask','line_number':575,'multiline':False]['text':' [bsz, seq_len] -> [bsz, 1, tgt_seq_len, src_seq_len]','line_number':577,'multiline':False]['text':' embed positions','line_number':582,'multiline':False]['text':' decoder layers','line_number':595,'multiline':False]['text':' check if head_mask/cross_attn_head_mask has a correct number of layers specified if desired','line_number':601,'multiline':False]['text':' add LayerDrop (see https://arxiv.org/abs/1909.11556 for description)','line_number':610,'multiline':False]['text':' add hidden states from the last decoder layer','line_number':656,'multiline':False]['text':' Initialize weights and apply final processing','line_number':711,'multiline':False]['text':' decoder outputs consists of (dec_features, layer_state, dec_hidden, dec_attn)','line_number':863,'multiline':False]['text':' if model is used as a decoder in encoder-decoder model, the decoder attention mask is created on the fly','line_number':902,'multiline':False]['text':' Some generation methods already pass only the last input ID','line_number':909,'multiline':False]['text':' Default to old behavior: keep only final ID','line_number':913,'multiline':False]['text':' first step, decoder_cached_states are empty','line_number':917,'multiline':False]['text':' encoder_outputs is defined. input_ids not needed','line_number':919,'multiline':False]