['text':' coding=utf-8','line_number':1,'multiline':False]['text':' Copyright 2022 The OFA-Sys Team Authors and The HuggingFace Team. All rights reserved.','line_number':2,'multiline':False]['text':'','line_number':3,'multiline':False]['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':4,'multiline':False]['text':' you may not use this file except in compliance with the License.','line_number':5,'multiline':False]['text':' You may obtain a copy of the License at','line_number':6,'multiline':False]['text':'','line_number':7,'multiline':False]['text':'     http://www.apache.org/licenses/LICENSE-2.0','line_number':8,'multiline':False]['text':'','line_number':9,'multiline':False]['text':' Unless required by applicable law or agreed to in writing, software','line_number':10,'multiline':False]['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':11,'multiline':False]['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':12,'multiline':False]['text':' See the License for the specific language governing permissions and','line_number':13,'multiline':False]['text':' limitations under the License.','line_number':14,'multiline':False]['text':' See all Chinese-CLIP models at https://huggingface.co/models?filter=chinese_clip','line_number':53,'multiline':False]['text':' https://sachinruk.github.io/blog/pytorch/pytorch%20lightning/loss%20function/gpu/2021/03/07/CLIP.html','line_number':57,'multiline':False]['text':' Copied from transformers.models.clip.modeling_clip.contrastive_loss','line_number':58,'multiline':False]['text':' Copied from transformers.models.bert.modeling_bert.BertEmbeddings with Bert->ChineseCLIPText','line_number':108,'multiline':False]['text':' self.LayerNorm is not snake-cased to stick with TensorFlow model variable name and be able to load','line_number':118,'multiline':False]['text':' any TensorFlow checkpoint file','line_number':119,'multiline':False]['text':' position_ids (1, len position emb) is contiguous in memory and exported when serialized','line_number':122,'multiline':False]['text':' Setting the token_type_ids to the registered buffer in constructor where it is all zeros, which usually occurs','line_number':149,'multiline':False]['text':' when its auto-generated, registered buffer helps users when tracing the model without passing token_type_ids, solves','line_number':150,'multiline':False]['text':' issue #5664','line_number':151,'multiline':False]['text':' Copied from transformers.models.clip.modeling_clip.CLIPVisionEmbeddings with CLIP->ChineseCLIP','line_number':173,'multiline':False]['text':' shape = [*, width, grid, grid]','line_number':200,'multiline':False]['text':' Copied from transformers.models.bert.modeling_bert.BertSelfAttention with Bert->ChineseCLIPText','line_number':209,'multiline':False]['text':' If this is instantiated as a cross-attention module, the keys','line_number':254,'multiline':False]['text':' and values come from an encoder; the attention mask needs to be','line_number':255,'multiline':False]['text':' such that the encoder's padding tokens are not attended to.','line_number':256,'multiline':False]['text':' reuse k,v, cross_attentions','line_number':260,'multiline':False]['text':' if cross_attention save Tuple(torch.Tensor, torch.Tensor) of all cross attention key/value_states.','line_number':281,'multiline':False]['text':' Further calls to cross_attention layer can then reuse all cross-attention','line_number':282,'multiline':False]['text':' key/value_states (first "if" case)','line_number':283,'multiline':False]['text':' if uni-directional self-attention (decoder) save Tuple(torch.Tensor, torch.Tensor) of','line_number':284,'multiline':False]['text':' all previous decoder key/value_states. Further calls to uni-directional self-attention','line_number':285,'multiline':False]['text':' can concat previous decoder key/value_states to current projected key/value_states (third "elif" case)','line_number':286,'multiline':False]['text':' if encoder bi-directional self-attention `past_key_value` is always `None`','line_number':287,'multiline':False]['text':' Take the dot product between "query" and "key" to get the raw attention scores.','line_number':290,'multiline':False]['text':' fp16 compatibility','line_number':305,'multiline':False]['text':' Apply the attention mask is (precomputed for all layers in ChineseCLIPTextModel forward() function)','line_number':317,'multiline':False]['text':' Normalize the attention scores to probabilities.','line_number':320,'multiline':False]['text':' This is actually dropping out entire tokens to attend to, which might','line_number':323,'multiline':False]['text':' seem a bit unusual, but is taken from the original Transformer paper.','line_number':324,'multiline':False]['text':' Mask heads if we want to','line_number':327,'multiline':False]['text':' Copied from transformers.models.bert.modeling_bert.BertSelfOutput with Bert->ChineseCLIPText','line_number':344,'multiline':False]['text':' Copied from transformers.models.bert.modeling_bert.BertAttention with Bert->ChineseCLIPText','line_number':359,'multiline':False]['text':' Prune linear layers','line_number':374,'multiline':False]['text':' Update hyper params and store pruned heads','line_number':380,'multiline':False]['text':' add attentions if we output them','line_number':405,'multiline':False]['text':' get query proj','line_number':443,'multiline':False]['text':' this operation is a bit akward, but it's required to','line_number':465,'multiline':False]['text':' make sure that attn_weights keeps its gradient.','line_number':466,'multiline':False]['text':' In order to do so, attn_weights have to reshaped','line_number':467,'multiline':False]['text':' twice and have to be reused in the following','line_number':468,'multiline':False]['text':' Copied from transformers.models.bert.modeling_bert.BertIntermediate with Bert->ChineseCLIPText','line_number':493,'multiline':False]['text':' Copied from transformers.models.bert.modeling_bert.BertOutput with Bert->ChineseCLIPText','line_number':509,'multiline':False]['text':' Copied from transformers.models.clip.modeling_clip.CLIPMLP with CLIP->ChineseCLIPVision','line_number':524,'multiline':False]['text':' Copied from transformers.models.bert.modeling_bert.BertLayer with Bert->ChineseCLIPText','line_number':540,'multiline':False]['text':' decoder uni-directional self-attention cached key/values tuple is at positions 1,2','line_number':566,'multiline':False]['text':' if decoder, the last output is tuple of self-attn cache','line_number':577,'multiline':False]['text':' add self attentions if we output attention weights','line_number':582,'multiline':False]['text':' cross_attn cached key/values tuple is at positions 3,4 of past_key_value tuple','line_number':592,'multiline':False]['text':' add cross attentions if we output attention weights','line_number':604,'multiline':False]['text':' add cross-attn cache to positions 3,4 of present_key_value tuple','line_number':606,'multiline':False]['text':' if decoder, return the attn key/values as the last output','line_number':615,'multiline':False]['text':' Copied from transformers.models.bert.modeling_bert.BertPooler with Bert->ChineseCLIPText','line_number':670,'multiline':False]['text':' We "pool" the model by simply taking the hidden state corresponding','line_number':678,'multiline':False]['text':' to the first token.','line_number':679,'multiline':False]['text':' Copied from transformers.models.bert.modeling_bert.BertEncoder with Bert->ChineseCLIPText','line_number':865,'multiline':False]['text':' Initialize weights and apply final processing','line_number':1121,'multiline':False]['text':' past_key_values_length','line_number':1204,'multiline':False]['text':' We can provide a self-attention mask of dimensions [batch_size, from_seq_length, to_seq_length]','line_number':1218,'multiline':False]['text':' ourselves in which case we just need to make it broadcastable to all heads.','line_number':1219,'multiline':False]['text':' If a 2D or 3D attention mask is provided for the cross-attention','line_number':1222,'multiline':False]['text':' we need to make broadcastable to [batch_size, num_heads, seq_length, seq_length]','line_number':1223,'multiline':False]['text':' Prepare head mask if needed','line_number':1233,'multiline':False]['text':' 1.0 in head_mask indicate we keep the head','line_number':1234,'multiline':False]['text':' attention_probs has shape bsz x n_heads x N x N','line_number':1235,'multiline':False]['text':' input head_mask has shape [num_heads] or [num_hidden_layers x num_heads]','line_number':1236,'multiline':False]['text':' and head_mask is converted to shape [num_hidden_layers x batch x num_heads x seq_length x seq_length]','line_number':1237,'multiline':False]['text':' Initialize weights and apply final processing','line_number':1286,'multiline':False]['text':' Initialize weights and apply final processing','line_number':1366,'multiline':False]['text':' Use CHINESE_CLIP model's config for some fields (if specified) instead of those of vision & text components.','line_number':1397,'multiline':False]['text':' Use CHINESE_CLIP model's config for some fields (if specified) instead of those of vision & text components.','line_number':1450,'multiline':False]['text':' pooled_output','line_number':1464,'multiline':False]['text':' Use CHINESE_CLIP model's config for some fields (if specified) instead of those of vision & text components.','line_number':1505,'multiline':False]['text':' normalized features','line_number':1535,'multiline':False]['text':' cosine similarity as logits','line_number':1539,'multiline':False]['text':' fix the None pooled_output of text_outputs to conform with dict_output','line_number':1549,'multiline':False]