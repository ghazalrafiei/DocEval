['text':' coding=utf-8','line_number':1,'multiline':False]['text':' Copyright 2023 The HuggingFace Inc. team.','line_number':2,'multiline':False]['text':'','line_number':3,'multiline':False]['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':4,'multiline':False]['text':' you may not use this file except in compliance with the License.','line_number':5,'multiline':False]['text':' You may obtain a copy of the License at','line_number':6,'multiline':False]['text':'','line_number':7,'multiline':False]['text':'     http://www.apache.org/licenses/LICENSE-2.0','line_number':8,'multiline':False]['text':'','line_number':9,'multiline':False]['text':' Unless required by applicable law or agreed to in writing, software','line_number':10,'multiline':False]['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':11,'multiline':False]['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':12,'multiline':False]['text':' See the License for the specific language governing permissions and','line_number':13,'multiline':False]['text':' limitations under the License.','line_number':14,'multiline':False]['text':' <bbox>','line_number':44,'multiline':False]['text':' </bbox>','line_number':45,'multiline':False]['text':' <point>','line_number':46,'multiline':False]['text':' </point>','line_number':47,'multiline':False]['text':' <boa>','line_number':48,'multiline':False]['text':' Create padded tensors for the full batch.','line_number':66,'multiline':False]['text':' Place each batch entry into the batch tensor.','line_number':74,'multiline':False]['text':' First, construct full token stream (including image placeholder tokens) and loss mask for each subsequence','line_number':98,'multiline':False]['text':' and append to lists. We use lists rather than tensors because each subsequence is variable-sized.','line_number':99,'multiline':False]['text':' TODO Remove this logic in a subsequent release since subsequences are not supported.','line_number':100,'multiline':False]['text':' Wherever, we notice the [TOKEN_OPEN_STRING, TOKEN_CLOSE_STRING], we split the prompt','line_number':122,'multiline':False]['text':' Split by the regex pattern','line_number':127,'multiline':False]['text':' Make a namedtuple that stores "text" and "is_bbox"','line_number':154,'multiline':False]['text':' We want to do the following: Tokenize the code normally -> when we see a point or box, tokenize using the tokenize_within_tag function','line_number':156,'multiline':False]['text':' When point or box close tag, continue tokenizing normally','line_number':157,'multiline':False]['text':' First, we replace the point and box tags with their respective tokens','line_number':158,'multiline':False]['text':' Tokenize the prompt','line_number':160,'multiline':False]['text':' Convert prompt into a list split','line_number':161,'multiline':False]['text':' This is a location, we need to tokenize it','line_number':166,'multiline':False]['text':' Surround the text with the open and close tags','line_number':168,'multiline':False]['text':' Convert the text into a list of strings.','line_number':180,'multiline':False]['text':' If there are any open or close tags, remove them.','line_number':183,'multiline':False]['text':' Remove all spaces from num_ints','line_number':190,'multiline':False]['text':' scale to transformed image siz','line_number':192,'multiline':False]['text':' Tokenize the text, skipping the','line_number':205,'multiline':False]['text':' Same issue with types as above','line_number':216,'multiline':False]['text':' If not tool use, tranform the coordinates while tokenizing','line_number':226,'multiline':False]['text':' Only add bbox open token to the last subsequence since that is what will be completed','line_number':248,'multiline':False]['text':' Now we have a list of list of tokens which each list has a different','line_number':252,'multiline':False]['text':' size. We want to extend this list to:','line_number':253,'multiline':False]['text':'   - incorporate the tokens that need to be generated','line_number':254,'multiline':False]['text':'   - make all the sequences equal length.','line_number':255,'multiline':False]['text':' Get the prompts length.','line_number':256,'multiline':False]['text':' Get the max prompts length.','line_number':259,'multiline':False]['text':' Number of tokens in the each sample of the batch.','line_number':261,'multiline':False]['text':' Now update the list of list to be of the same size: samples_length.','line_number':268,'multiline':False]['text':' Now we are in a structured format, we can convert to tensors.','line_number':276,'multiline':False]['text':' Simplified assuming self.crop_top = self.padding_top = 0','line_number':283,'multiline':False]['text':' Simplified assuming self.crop_left = self.padding_left = 0','line_number':288,'multiline':False]['text':' TODO Can't derive this from model files: where to set it?','line_number':332,'multiline':False]['text':' For image_patches, we don't pad but just append them to the list.','line_number':362,'multiline':False]['text':' for image_patches_indices','line_number':365,'multiline':False]['text':' FIXME max_tokens_to_generate is embedded into this processor's call.','line_number':405,'multiline':False]['text':' Construct inputs for image patch indices.','line_number':422,'multiline':False]['text':' Use same packing logic for the image patch indices.','line_number':434,'multiline':False]['text':' --- Check input validity ---','line_number':499,'multiline':False]['text':' --- Preprocess images using self.image_processor ---','line_number':536,'multiline':False]['text':' FIXME - We hard code "pt" here because the rest of the processing assumes torch tensors','line_number':538,'multiline':False]['text':' Each batch contains only one sequence.','line_number':544,'multiline':False]['text':' --- Use self.tokenizer to get the ids of special tokens to insert into image ids ---','line_number':547,'multiline':False]['text':' --- Use self.image_processor again to obtain the full token ids and batch inputs ---','line_number':553,'multiline':False]['text':' Retrieve transformed coordinates from tokens','line_number':626,'multiline':False]['text':' Scale back to original image size and multiply by 2','line_number':629,'multiline':False]['text':' Replace the IDs so they get detokenized right','line_number':633,'multiline':False]['text':' Retrieve transformed coordinates from tokens','line_number':651,'multiline':False]['text':' Scale back to original image size and multiply by 2','line_number':654,'multiline':False]['text':' Replace the IDs so they get detokenized right','line_number':658,'multiline':False]