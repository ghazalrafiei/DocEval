['text':' coding=utf-8','line_number':1,'multiline':False]['text':' Copyright 2023 IBM and HuggingFace Inc. team. All Rights Reserved.','line_number':2,'multiline':False]['text':'','line_number':3,'multiline':False]['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':4,'multiline':False]['text':' you may not use this file except in compliance with the License.','line_number':5,'multiline':False]['text':' You may obtain a copy of the License at','line_number':6,'multiline':False]['text':'','line_number':7,'multiline':False]['text':'     http://www.apache.org/licenses/LICENSE-2.0','line_number':8,'multiline':False]['text':'','line_number':9,'multiline':False]['text':' Unless required by applicable law or agreed to in writing, software','line_number':10,'multiline':False]['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':11,'multiline':False]['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':12,'multiline':False]['text':' See the License for the specific language governing permissions and','line_number':13,'multiline':False]['text':' limitations under the License.','line_number':14,'multiline':False]['text':' See all PatchTSMixer models at https://huggingface.co/models?filter=patchtsmixer','line_number':44,'multiline':False]['text':' Copied from transformers.models.patchtst.modeling_patchtst.PatchTSTBatchNorm with PatchTST->PatchTSMixer','line_number':105,'multiline':False]['text':' output: (batch_size, d_model, sequence_length)','line_number':123,'multiline':False]['text':' positional encoding: [num_patches x d_model]','line_number':135,'multiline':False]['text':' Positional encoding','line_number':143,'multiline':False]['text':' hidden_state: [bs x num_channels x num_patches x d_model]','line_number':162,'multiline':False]['text':' reshape the data','line_number':194,'multiline':False]['text':' inputs_reshaped: [batch_size*num_channels, num_patches, d_model]','line_number':202,'multiline':False]['text':' inputs_reshaped: [batch_size*num_channels, num_patches, d_model]','line_number':204,'multiline':False]['text':' put back data to the original shape','line_number':207,'multiline':False]['text':' Copied from transformers.models.bart.modeling_bart.BartAttention with Bart->PatchTSMixer','line_number':287,'multiline':False]['text':' if key_value_states are provided this layer is used as a cross-attention layer','line_number':336,'multiline':False]['text':' for the decoder','line_number':337,'multiline':False]['text':' get query proj','line_number':342,'multiline':False]['text':' get key, value proj','line_number':344,'multiline':False]['text':' `past_key_value[0].shape[2] == key_value_states.shape[1]`','line_number':345,'multiline':False]['text':' is checking that the `sequence_length` of the `past_key_value` is the same as','line_number':346,'multiline':False]['text':' the provided `key_value_states` to support prefix tuning','line_number':347,'multiline':False]['text':' reuse k,v, cross_attentions','line_number':353,'multiline':False]['text':' cross_attentions','line_number':357,'multiline':False]['text':' reuse k, v, self_attention','line_number':361,'multiline':False]['text':' self_attention','line_number':367,'multiline':False]['text':' if cross_attention save Tuple(torch.Tensor, torch.Tensor) of all cross attention key/value_states.','line_number':372,'multiline':False]['text':' Further calls to cross_attention layer can then reuse all cross-attention','line_number':373,'multiline':False]['text':' key/value_states (first "if" case)','line_number':374,'multiline':False]['text':' if uni-directional self-attention (decoder) save Tuple(torch.Tensor, torch.Tensor) of','line_number':375,'multiline':False]['text':' all previous decoder key/value_states. Further calls to uni-directional self-attention','line_number':376,'multiline':False]['text':' can concat previous decoder key/value_states to current projected key/value_states (third "elif" case)','line_number':377,'multiline':False]['text':' if encoder bi-directional self-attention `past_key_value` is always `None`','line_number':378,'multiline':False]['text':' this operation is a bit awkward, but it's required to','line_number':415,'multiline':False]['text':' make sure that attn_weights keeps its gradient.','line_number':416,'multiline':False]['text':' In order to do so, attn_weights have to be reshaped','line_number':417,'multiline':False]['text':' twice and have to be reused in the following','line_number':418,'multiline':False]['text':' Use the `embed_dim` from the config (stored in the class) rather than `hidden_state` because `attn_output` can be','line_number':437,'multiline':False]['text':' partitioned across GPUs when using tensor-parallelism.','line_number':438,'multiline':False]['text':' Transpose so that num_patches is the last dimension','line_number':498,'multiline':False]['text':' Transpose back','line_number':505,'multiline':False]['text':' hidden: (batch_size x num_patches x d_model)','line_number':594,'multiline':False]['text':' [batch_size x n_vars x num_patch * d_model]','line_number':677,'multiline':False]['text':' [batch_size x n_vars x num_patch * d_model]','line_number':678,'multiline':False]['text':' [batch_size x n_vars x prediction_length]','line_number':679,'multiline':False]['text':' [batch_size x prediction_length x n_vars]','line_number':683,'multiline':False]['text':' [batch_size x prediction_length x n_vars]','line_number':689,'multiline':False]['text':' batch_size x d_model x num_patch or batch_size x n_vars x d_model x num_patch','line_number':741,'multiline':False]['text':' batch_size x d_model (flatten) or # batch_size x n_vars x d_model (common_channel)','line_number':744,'multiline':False]['text':' batch_size x n_vars x d_model or batch_size x d_model','line_number':747,'multiline':False]['text':' batch_size x n_vars x d_model or batch_size x d_model','line_number':750,'multiline':False]['text':' batch_size x num_targets','line_number':756,'multiline':False]['text':' Weight initialization','line_number':766,'multiline':False]['text':' initialize positional encoding','line_number':775,'multiline':False]['text':' [batch_size x n_vars x num_patch x patch_length]','line_number':816,'multiline':False]['text':' Copied from transformers.models.patchtst.modeling_patchtst.random_masking','line_number':820,'multiline':False]['text':' noise in [0, 1], bs x 1 x  L','line_number':856,'multiline':False]['text':' bs x num_channels x time','line_number':857,'multiline':False]['text':' noise in [0, 1], bs x num_channels x L','line_number':859,'multiline':False]['text':' mask: [bs x num_channels x num_patch]','line_number':862,'multiline':False]['text':' sort noise for each sample','line_number':866,'multiline':False]['text':' ascend: small is keep, large is remove','line_number':867,'multiline':False]['text':' ids_restore: [bs x num_channels x L]','line_number':868,'multiline':False]['text':' mask: [bs x num_channels x num_patches x patch_length]','line_number':871,'multiline':False]['text':' Copied from transformers.models.patchtst.modeling_patchtst.forecast_masking','line_number':879,'multiline':False]['text':' mask: [bs x num_channels x num_patch x patch_len]','line_number':940,'multiline':False]['text':' Copied from transformers.models.patchtst.modeling_patchtst.PatchTSTPatchify with PatchTST->PatchTSMixer','line_number':948,'multiline':False]['text':' get the number of patches','line_number':969,'multiline':False]['text':' output: [bs x new_sequence_length x num_channels]','line_number':988,'multiline':False]['text':' output: [bs x num_patches x num_input_channels x patch_length]','line_number':990,'multiline':False]['text':' output: [bs x num_input_channels x num_patches x patch_length]','line_number':992,'multiline':False]['text':' Copied from transformers.models.patchtst.modeling_patchtst.PatchTSTMasking with PatchTST->PatchTSMixer','line_number':997,'multiline':False]['text':' mask: [bs x num_input_channels x num_patch]','line_number':1053,'multiline':False]['text':' Copied from transformers.models.patchtst.modeling_patchtst.PatchTSTStdScaler with PatchTST->PatchTSMixer','line_number':1058,'multiline':False]['text':' Copied from transformers.models.patchtst.modeling_patchtst.PatchTSTMeanScaler with PatchTST->PatchTSMixer','line_number':1094,'multiline':False]['text':' If `default_scale` is provided, we use it, otherwise we use the scale','line_number':1127,'multiline':False]['text':' of the batch.','line_number':1128,'multiline':False]['text':' apply default scale where there are no observations','line_number':1136,'multiline':False]['text':' ensure the scale is at least `self.minimum_scale`','line_number':1139,'multiline':False]['text':' Copied from transformers.models.patchtst.modeling_patchtst.PatchTSTNOPScaler with PatchTST->PatchTSMixer','line_number':1149,'multiline':False]['text':' Initialize weights and apply final processing','line_number':1214,'multiline':False]['text':' flatten [bs x num_patch x d_model]. common_channel/mix_channel: [bs x n_vars x num_patch x d_model]','line_number':1248,'multiline':False]['text':' add positional encoder','line_number':1251,'multiline':False]['text':' Initialize weights and apply final processing','line_number':1323,'multiline':False]['text':' [batch_size x num_input_channels x num_patch x patch_length','line_number':1353,'multiline':False]['text':' enc_input: [batch_size x num_input_channels x num_patch x patch_length]','line_number':1358,'multiline':False]['text':' mask: [batch_size x num_input_channels x num_patch]','line_number':1359,'multiline':False]['text':' Initialize weights and apply final processing','line_number':1434,'multiline':False]['text':' past_values: tensor [batch_size x context_length x num_input_channels]','line_number':1467,'multiline':False]['text':' x.last_hidden_state: [batch_size x nvars x num_patch x d_model]','line_number':1473,'multiline':False]['text':' tensor [batch_size x nvars x num_patch x patch_length]','line_number':1477,'multiline':False]['text':' calculate masked_loss','line_number':1484,'multiline':False]['text':' tensor [batch_size x nvars x num_patch x patch_length]','line_number':1501,'multiline':False]['text':' x: [batch_size x nvars x num_patch x d_model]','line_number':1502,'multiline':False]['text':' Copied from transformers.models.time_series_transformer.modeling_time_series_transformer.nll','line_number':1564,'multiline':False]['text':' Copied from transformers.models.time_series_transformer.modeling_time_series_transformer.weighted_average','line_number':1572,'multiline':False]['text':' Initialize weights and apply final processing','line_number':1637,'multiline':False]['text':' past_values: tensor [batch_size x context_length x num_input_channels]','line_number':1683,'multiline':False]['text':' model_output: [batch_size x nvars x num_patch x d_model]','line_number':1689,'multiline':False]['text':' tensor [batch_size x prediction_length x num_input_channels]','line_number':1693,'multiline':False]['text':' take average of the loss','line_number':1709,'multiline':False]['text':' tensor [batch_size x prediction_length x num_input_channels]','line_number':1753,'multiline':False]['text':' x: [batch_size x nvars x num_patch x d_model]','line_number':1754,'multiline':False]['text':' get number of samples','line_number':1783,'multiline':False]['text':' get model output','line_number':1786,'multiline':False]['text':' get distribution','line_number':1794,'multiline':False]['text':' get samples: list of [batch_size x prediction_length x num_channels]','line_number':1800,'multiline':False]['text':' stack tensors','line_number':1803,'multiline':False]['text':' [batch_size x num_samples x prediction_length x num_channels]','line_number':1804,'multiline':False]['text':' Initialize weights and apply final processing','line_number':1855,'multiline':False]['text':' x: [batch_size x nvars x num_patch x d_model]','line_number':1902,'multiline':False]['text':' x: [batch_size x nvars x num_patch x d_model]','line_number':1911,'multiline':False]['text':' tensor [batch_size x n_labels]','line_number':1913,'multiline':False]['text':' tensor [batch_size x n_labels]','line_number':1933,'multiline':False]['text':' x: [batch_size x nvars x num_patch x d_model]','line_number':1934,'multiline':False]['text':' [batch_size x n_channels x 1 ]','line_number':1981,'multiline':False]['text':' [batch_size x n_channels x 1 x 1]','line_number':1982,'multiline':False]['text':' [batch_size x n_channels x num_patch x 1]','line_number':1983,'multiline':False]['text':' [batch_size x n_channels x 1 ]','line_number':1985,'multiline':False]['text':' [batch_size x n_channels x 1 x 1]','line_number':1986,'multiline':False]['text':' [batch_size x n_channels x num_patch x 1]','line_number':1987,'multiline':False]['text':' [batch_size x n_channels x num_patch x 2]','line_number':1989,'multiline':False]['text':' [batch_size x n_channels x num_patch x (2*expansion)]','line_number':1991,'multiline':False]['text':' [batch_size x n_channels x num_patch x 2]','line_number':1992,'multiline':False]['text':' [batch_size x channels x num_patch x d_model+2]','line_number':1994,'multiline':False]['text':' [batch_size x channels x num_patch x (expansion*d_model)]','line_number':1995,'multiline':False]['text':' [batch_size x channels x num_patch x d_model]','line_number':1996,'multiline':False]['text':' Initialize weights and apply final processing','line_number':2048,'multiline':False]['text':' model_output: [batch_size x nvars x num_patch x d_model]','line_number':2096,'multiline':False]['text':' x: [batch_size x nvars x num_patch x d_model]','line_number':2105,'multiline':False]['text':' [batch_size x num_targets]','line_number':2107,'multiline':False]['text':' take average of the loss','line_number':2115,'multiline':False]['text':' tensor [batch_size x num_targets]','line_number':2135,'multiline':False]['text':' [batch_size x nvars x num_patch x d_model]','line_number':2136,'multiline':False]['text':' get number of samples','line_number':2155,'multiline':False]['text':' get model output','line_number':2158,'multiline':False]['text':' get distribution','line_number':2165,'multiline':False]['text':' get samples','line_number':2168,'multiline':False]['text':' samples: list of [batch_size x num_targets]','line_number':2171,'multiline':False]['text':' stack tensors','line_number':2172,'multiline':False]['text':' [batch_size x num_samples x num_targets]','line_number':2173,'multiline':False]