['text':' coding=utf-8','line_number':1,'multiline':False]['text':' Copyright 2021 The Fairseq Authors and the HuggingFace Inc. team. All rights reserved.','line_number':2,'multiline':False]['text':'','line_number':3,'multiline':False]['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':4,'multiline':False]['text':' you may not use this file except in compliance with the License.','line_number':5,'multiline':False]['text':' You may obtain a copy of the License at','line_number':6,'multiline':False]['text':'','line_number':7,'multiline':False]['text':'     http://www.apache.org/licenses/LICENSE-2.0','line_number':8,'multiline':False]['text':'','line_number':9,'multiline':False]['text':' Unless required by applicable law or agreed to in writing, software','line_number':10,'multiline':False]['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':11,'multiline':False]['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':12,'multiline':False]['text':' See the License for the specific language governing permissions and','line_number':13,'multiline':False]['text':' limitations under the License.','line_number':14,'multiline':False]['text':' See all Wav2Vec2 models at https://huggingface.co/models?filter=wav2vec2','line_number':59,'multiline':False]['text':' broadcast batch dim to indices_shape','line_number':109,'multiline':False]['text':' transform batch_indices to pair_indices','line_number':113,'multiline':False]['text':' scatter values to pair indices','line_number':115,'multiline':False]['text':' compute number of masked spans in batch','line_number':156,'multiline':False]['text':' make sure num masked indices <= sequence_length','line_number':161,'multiline':False]['text':' SpecAugment mask to fill','line_number':165,'multiline':False]['text':' uniform distribution to sample from, make sure that offset samples are < sequence_length','line_number':168,'multiline':False]['text':' get random indices to mask','line_number':171,'multiline':False]['text':' expand masked indices to masked spans','line_number':174,'multiline':False]['text':' scatter indices to mask','line_number':185,'multiline':False]['text':' Copied from transformers.models.bart.modeling_tf_bart._expand_mask','line_number':193,'multiline':False]['text':' Copied from transformers.models.bart.modeling_tf_bart.TFBartAttention with TFBart->TFWav2Vec2','line_number':698,'multiline':False]['text':' if key_value_states are provided this layer is used as a cross-attention layer','line_number':744,'multiline':False]['text':' for the decoder','line_number':745,'multiline':False]['text':' get query proj','line_number':749,'multiline':False]['text':' get key, value proj','line_number':751,'multiline':False]['text':' reuse k,v, cross_attentions','line_number':753,'multiline':False]['text':' cross_attentions','line_number':757,'multiline':False]['text':' reuse k, v, self_attention','line_number':761,'multiline':False]['text':' self_attention','line_number':767,'multiline':False]['text':' if cross_attention save Tuple(tf.Tensor, tf.Tensor) of all cross attention key/value_states.','line_number':772,'multiline':False]['text':' Further calls to cross_attention layer can then reuse all cross-attention','line_number':773,'multiline':False]['text':' key/value_states (first "if" case)','line_number':774,'multiline':False]['text':' if uni-directional self-attention (decoder) save Tuple(tf.Tensor, tf.Tensor) of','line_number':775,'multiline':False]['text':' all previous decoder key/value_states. Further calls to uni-directional self-attention','line_number':776,'multiline':False]['text':' can concat previous decoder key/value_states to current projected key/value_states (third "elif" case)','line_number':777,'multiline':False]['text':' if encoder bi-directional self-attention `past_key_value` is always `None`','line_number':778,'multiline':False]['text':' add LayerDrop (see https://arxiv.org/abs/1909.11556 for description)','line_number':1069,'multiline':False]['text':' skip the layer','line_number':1071,'multiline':False]['text':' Add last layer','line_number':1085,'multiline':False]['text':' add LayerDrop (see https://arxiv.org/abs/1909.11556 for description)','line_number':1150,'multiline':False]['text':' skip the layer','line_number':1152,'multiline':False]['text':' 1D convolutional layer output length formula taken','line_number':1234,'multiline':False]['text':' from https://pytorch.org/docs/stable/generated/torch.nn.Conv1d.html','line_number':1235,'multiline':False]['text':' `config.apply_spec_augment` can set masking to False','line_number':1250,'multiline':False]['text':' apply SpecAugment along time axis with given mask_time_indices','line_number':1255,'multiline':False]['text':' generate indices & apply SpecAugment along time axis','line_number':1263,'multiline':False]['text':' apply SpecAugment along feature axis','line_number':1276,'multiline':False]['text':' extract_features = tf.transpose(extract_features, perm=(0, 2, 1))','line_number':1303,'multiline':False]['text':' compute real output lengths according to convolution formula','line_number':1306,'multiline':False]['text':' check device here','line_number':1395,'multiline':False]['text':' these two operations makes sure that all values before the output lengths idxs are attended to','line_number':1398,'multiline':False]['text':'# check device','line_number':1399,'multiline':False]['text':' assuming that padded tokens are filled with -100','line_number':1713,'multiline':False]['text':' when not being attended to','line_number':1714,'multiline':False]