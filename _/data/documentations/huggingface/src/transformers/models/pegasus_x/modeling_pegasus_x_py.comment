['text':' coding=utf-8','line_number':1,'multiline':False]['text':' Copyright 2022, Google and The HuggingFace Inc. team. All rights reserved.','line_number':2,'multiline':False]['text':'','line_number':3,'multiline':False]['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':4,'multiline':False]['text':' you may not use this file except in compliance with the License.','line_number':5,'multiline':False]['text':' You may obtain a copy of the License at','line_number':6,'multiline':False]['text':'','line_number':7,'multiline':False]['text':'     http://www.apache.org/licenses/LICENSE-2.0','line_number':8,'multiline':False]['text':'','line_number':9,'multiline':False]['text':' Unless required by applicable law or agreed to in writing, software','line_number':10,'multiline':False]['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':11,'multiline':False]['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':12,'multiline':False]['text':' See the License for the specific language governing permissions and','line_number':13,'multiline':False]['text':' limitations under the License.','line_number':14,'multiline':False]['text':' See all PEGASUS models at https://huggingface.co/models?filter=pegasus-x','line_number':55,'multiline':False]['text':' batch size','line_number':63,'multiline':False]['text':' token length','line_number':64,'multiline':False]['text':' block size','line_number':65,'multiline':False]['text':' num heads','line_number':66,'multiline':False]['text':' hidden dim','line_number':67,'multiline':False]['text':' dim per head','line_number':68,'multiline':False]['text':' num blocks','line_number':69,'multiline':False]['text':' global length','line_number':70,'multiline':False]['text':' padded token seq length','line_number':71,'multiline':False]['text':' Note: Compared to the original Flax implementation, we will pad the token representations to','line_number':73,'multiline':False]['text':'       a multiple of block size at the start of the encoder layers, so T=P always.','line_number':74,'multiline':False]['text':' Copied from transformers.models.bart.modeling_bart.shift_tokens_right','line_number':77,'multiline':False]['text':' replace possible -100 values in labels by `pad_token_id`','line_number':88,'multiline':False]['text':' Copied from transformers.models.bart.modeling_bart.BartAttention with Bart->PegasusX','line_number':120,'multiline':False]['text':' if key_value_states are provided this layer is used as a cross-attention layer','line_number':169,'multiline':False]['text':' for the decoder','line_number':170,'multiline':False]['text':' get query proj','line_number':175,'multiline':False]['text':' get key, value proj','line_number':177,'multiline':False]['text':' `past_key_value[0].shape[2] == key_value_states.shape[1]`','line_number':178,'multiline':False]['text':' is checking that the `sequence_length` of the `past_key_value` is the same as','line_number':179,'multiline':False]['text':' the provided `key_value_states` to support prefix tuning','line_number':180,'multiline':False]['text':' reuse k,v, cross_attentions','line_number':186,'multiline':False]['text':' cross_attentions','line_number':190,'multiline':False]['text':' reuse k, v, self_attention','line_number':194,'multiline':False]['text':' self_attention','line_number':200,'multiline':False]['text':' if cross_attention save Tuple(torch.Tensor, torch.Tensor) of all cross attention key/value_states.','line_number':205,'multiline':False]['text':' Further calls to cross_attention layer can then reuse all cross-attention','line_number':206,'multiline':False]['text':' key/value_states (first "if" case)','line_number':207,'multiline':False]['text':' if uni-directional self-attention (decoder) save Tuple(torch.Tensor, torch.Tensor) of','line_number':208,'multiline':False]['text':' all previous decoder key/value_states. Further calls to uni-directional self-attention','line_number':209,'multiline':False]['text':' can concat previous decoder key/value_states to current projected key/value_states (third "elif" case)','line_number':210,'multiline':False]['text':' if encoder bi-directional self-attention `past_key_value` is always `None`','line_number':211,'multiline':False]['text':' this operation is a bit awkward, but it's required to','line_number':248,'multiline':False]['text':' make sure that attn_weights keeps its gradient.','line_number':249,'multiline':False]['text':' In order to do so, attn_weights have to be reshaped','line_number':250,'multiline':False]['text':' twice and have to be reused in the following','line_number':251,'multiline':False]['text':' Use the `embed_dim` from the config (stored in the class) rather than `hidden_state` because `attn_output` can be','line_number':270,'multiline':False]['text':' partitioned across GPUs when using tensor-parallelism.','line_number':271,'multiline':False]['text':' [batch_size, num_heads, padded_seq_len, dim_per_head]','line_number':333,'multiline':False]['text':' [batch_size, num_heads, global_len, dim_per_head]','line_number':350,'multiline':False]['text':' [batch_size, global_len, hidden_dim]','line_number':386,'multiline':False]['text':' [batch_size, global_len, hidden_dim]','line_number':390,'multiline':False]['text':' [batch_size, num_heads, block_size, num_heads, dim_per_head]','line_number':392,'multiline':False]['text':' [batch_size, padded_seq_len, hidden_dim]','line_number':394,'multiline':False]['text':' [batch_size, padded_seq_len, hidden_dim]','line_number':396,'multiline':False]['text':' [batch_size, num_heads, global_len+padded_seq_len, dim_per_head]','line_number':431,'multiline':False]['text':' [batch_size, num_heads, global_len+padded_seq_len, dim_per_head]','line_number':433,'multiline':False]['text':' [batch_size, global_len+padded_seq_len]','line_number':436,'multiline':False]['text':' [batch_size, num_heads, global_len, global_len+padded_seq_len]','line_number':439,'multiline':False]['text':' [batch_size, num_heads, global_len, F]','line_number':445,'multiline':False]['text':' [batch_size, num_heads, num_blocks, block_size, dim_per_head]','line_number':474,'multiline':False]['text':' [batch_size, num_heads, num_blocks, block_size, dim_per_head]','line_number':476,'multiline':False]['text':' [batch_size, num_heads, num_blocks, block_size, dim_per_head]','line_number':478,'multiline':False]['text':' [batch_size, num_blocks, global_len+block_size]','line_number':481,'multiline':False]['text':' [batch_size, num_heads, num_blocks, block_size, global_len]','line_number':488,'multiline':False]['text':' [batch_size, num_heads, num_blocks, block_size, block_size]','line_number':490,'multiline':False]['text':' [batch_size, num_heads, num_blocks, block_size, global_len+block_size]','line_number':493,'multiline':False]['text':' [batch_size, num_heads, num_blocks, block_size, global_len]','line_number':499,'multiline':False]['text':' [batch_size, num_heads, num_blocks, block_size, block_size]','line_number':501,'multiline':False]['text':' [batch_size, num_heads, num_blocks, block_size, dim_per_head]','line_number':504,'multiline':False]['text':' [batch_size, num_heads, num_blocks, block_size, dim_per_head]','line_number':506,'multiline':False]['text':' [batch_size, num_heads, num_blocks, block_size, dim_per_head]','line_number':508,'multiline':False]['text':' Pad the blocks to simulate staggering','line_number':559,'multiline':False]['text':' Undo the padding','line_number':572,'multiline':False]['text':' hidden_states: [batch_size, seq_len, hidden_dim]','line_number':607,'multiline':False]['text':' padded_hidden_states: [batch_size, padded seq_len, hidden_dim]','line_number':623,'multiline':False]['text':' Self Attention','line_number':685,'multiline':False]['text':' decoder uni-directional self-attention cached key/values tuple is at positions 1,2','line_number':686,'multiline':False]['text':' add present self-attn cache to positions 1,2 of present_key_value tuple','line_number':688,'multiline':False]['text':' Cross-Attention Block','line_number':698,'multiline':False]['text':' cross_attn cached key/values tuple is at positions 3,4 of present_key_value tuple','line_number':705,'multiline':False]['text':' add cross-attn to positions 3,4 of present_key_value tuple','line_number':717,'multiline':False]['text':' Fully Connected','line_number':720,'multiline':False]['text':' Initialize weights and apply final processing','line_number':907,'multiline':False]['text':' retrieve input_ids and inputs_embeds','line_number':981,'multiline':False]['text':' Setup mask','line_number':1003,'multiline':False]['text':' padding to block_size','line_number':1014,'multiline':False]['text':' Global tokens','line_number':1020,'multiline':False]['text':' add LayerDrop (see https://arxiv.org/abs/1909.11556 for description)','line_number':1031,'multiline':False]['text':' skip the layer','line_number':1035,'multiline':False]['text':' Undo padding-to-block-size','line_number':1063,'multiline':False]['text':' Initialize weights and apply final processing','line_number':1104,'multiline':False]['text':' retrieve input_ids and inputs_embeds','line_number':1187,'multiline':False]['text':' past_key_values_length','line_number':1198,'multiline':False]['text':' expand encoder attention mask','line_number':1208,'multiline':False]['text':' [bsz, seq_len] -> [bsz, 1, tgt_seq_len, src_seq_len]','line_number':1210,'multiline':False]['text':' embed positions','line_number':1215,'multiline':False]['text':' decoder layers','line_number':1231,'multiline':False]['text':' add LayerDrop (see https://arxiv.org/abs/1909.11556 for description)','line_number':1238,'multiline':False]['text':' add hidden states from the last decoder layer','line_number':1282,'multiline':False]['text':' Initialize weights and apply final processing','line_number':1318,'multiline':False]['text':' If the user passed a tuple for encoder_outputs, we wrap it in a BaseModelOutput when return_dict=True','line_number':1411,'multiline':False]['text':' decoder outputs consists of (dec_features, past_key_value, dec_hidden, dec_attn)','line_number':1419,'multiline':False]['text':' Initialize weights and apply final processing','line_number':1458,'multiline':False]['text':' cut decoder_input_ids if past is used','line_number':1581,'multiline':False]['text':' Some generation methods already pass only the last input ID','line_number':1585,'multiline':False]['text':' Default to old behavior: keep only final ID','line_number':1589,'multiline':False]['text':' encoder_outputs is defined. input_ids not needed','line_number':1595,'multiline':False]['text':' change this to avoid caching (presumably for debugging)','line_number':1600,'multiline':False]['text':' cached cross_attention states don't have to be reordered -> they are always the same','line_number':1610,'multiline':False]['text':' Copied from transformers.models.bart.modeling_bart.BartDecoderWrapper with Bart->PegasusX','line_number':1618,'multiline':False]