['text':' coding=utf-8','line_number':1,'multiline':False]['text':' Copyright 2022 The Fairseq Authors and The HuggingFace Inc. team. All rights reserved.','line_number':2,'multiline':False]['text':'','line_number':3,'multiline':False]['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':4,'multiline':False]['text':' you may not use this file except in compliance with the License.','line_number':5,'multiline':False]['text':' You may obtain a copy of the License at','line_number':6,'multiline':False]['text':'','line_number':7,'multiline':False]['text':'     http://www.apache.org/licenses/LICENSE-2.0','line_number':8,'multiline':False]['text':'','line_number':9,'multiline':False]['text':' Unless required by applicable law or agreed to in writing, software','line_number':10,'multiline':False]['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':11,'multiline':False]['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':12,'multiline':False]['text':' See the License for the specific language governing permissions and','line_number':13,'multiline':False]['text':' limitations under the License.','line_number':14,'multiline':False]['text':' noqa','line_number':47,'multiline':False]['text':' Base model docstring','line_number':55,'multiline':False]['text':' SequenceClassification docstring','line_number':58,'multiline':False]['text':' See all OPT models at https://huggingface.co/models?filter=opt','line_number':71,'multiline':False]['text':' Copied from transformers.models.llama.modeling_llama._get_unpad_data','line_number':75,'multiline':False]['text':' OPT is set up so that if padding_idx is specified then offset the embedding ids by 2','line_number':94,'multiline':False]['text':' and adjust num_embeddings appropriately. Other models don't have this hack','line_number':95,'multiline':False]['text':' create positions depending on attention_mask','line_number':103,'multiline':False]['text':' cut positions if `past_key_values_length` is > 0','line_number':106,'multiline':False]['text':' if key_value_states are provided this layer is used as a cross-attention layer','line_number':175,'multiline':False]['text':' for the decoder','line_number':176,'multiline':False]['text':' get query proj','line_number':181,'multiline':False]['text':' get key, value proj','line_number':183,'multiline':False]['text':' reuse k,v, cross_attentions','line_number':185,'multiline':False]['text':' cross_attentions','line_number':189,'multiline':False]['text':' reuse k, v, self_attention','line_number':193,'multiline':False]['text':' self_attention','line_number':199,'multiline':False]['text':' if cross_attention save Tuple(torch.Tensor, torch.Tensor) of all cross attention key/value_states.','line_number':204,'multiline':False]['text':' Further calls to cross_attention layer can then reuse all cross-attention','line_number':205,'multiline':False]['text':' key/value_states (first "if" case)','line_number':206,'multiline':False]['text':' if uni-directional self-attention (decoder) save Tuple(torch.Tensor, torch.Tensor) of','line_number':207,'multiline':False]['text':' all previous decoder key/value_states. Further calls to uni-directional self-attention','line_number':208,'multiline':False]['text':' can concat previous decoder key/value_states to current projected key/value_states (third "elif" case)','line_number':209,'multiline':False]['text':' if encoder bi-directional self-attention `past_key_value` is always `None`','line_number':210,'multiline':False]['text':' upcast to fp32 if the weights are in fp16. Please see https://github.com/huggingface/transformers/pull/17437','line_number':238,'multiline':False]['text':' this operation is a bit awkward, but it's required to','line_number':254,'multiline':False]['text':' make sure that attn_weights keeps its gradient.','line_number':255,'multiline':False]['text':' In order to do so, attn_weights have to be reshaped','line_number':256,'multiline':False]['text':' twice and have to be reused in the following','line_number':257,'multiline':False]['text':' Use the `embed_dim` from the config (stored in the class) rather than `hidden_state` because `attn_output` can be','line_number':276,'multiline':False]['text':' partitioned aross GPUs when using tensor-parallelism.','line_number':277,'multiline':False]['text':' Copied from transformers.models.llama.modeling_llama.LlamaFlashAttention2.__init__','line_number':292,'multiline':False]['text':' TODO: Should be removed once Flash Attention for RoCm is bumped to 2.1.','line_number':296,'multiline':False]['text':' flash_attn<2.1 generates top-left aligned causal mask, while what is needed here is bottom-right alignement, that was made default for flash_attn>=2.1. This attribute is used to handle this difference. Reference: https://github.com/Dao-AILab/flash-attention/releases/tag/v2.1.0.','line_number':297,'multiline':False]['text':' Beware that with flash_attn<2.1, using q_seqlen != k_seqlen (except for the case q_seqlen == 1) produces a wrong mask (top-left).','line_number':298,'multiline':False]['text':' if key_value_states are provided this layer is used as a cross-attention layer','line_number':312,'multiline':False]['text':' for the decoder','line_number':313,'multiline':False]['text':' get query proj','line_number':318,'multiline':False]['text':' get key, value proj','line_number':320,'multiline':False]['text':' reuse k,v, cross_attentions','line_number':322,'multiline':False]['text':' cross_attentions','line_number':326,'multiline':False]['text':' reuse k, v, self_attention','line_number':330,'multiline':False]['text':' self_attention','line_number':336,'multiline':False]['text':' if cross_attention save Tuple(torch.Tensor, torch.Tensor) of all cross attention key/value_states.','line_number':341,'multiline':False]['text':' Further calls to cross_attention layer can then reuse all cross-attention','line_number':342,'multiline':False]['text':' key/value_states (first "if" case)','line_number':343,'multiline':False]['text':' if uni-directional self-attention (decoder) save Tuple(torch.Tensor, torch.Tensor) of','line_number':344,'multiline':False]['text':' all previous decoder key/value_states. Further calls to uni-directional self-attention','line_number':345,'multiline':False]['text':' can concat previous decoder key/value_states to current projected key/value_states (third "elif" case)','line_number':346,'multiline':False]['text':' if encoder bi-directional self-attention `past_key_value` is always `None`','line_number':347,'multiline':False]['text':' Flash attention requires the input to have the shape','line_number':353,'multiline':False]['text':' batch_size x seq_length x head_dim x hidden_dim','line_number':354,'multiline':False]['text':' In PEFT, usually we cast the layer norms in float32 for training stability reasons','line_number':361,'multiline':False]['text':' therefore the input hidden states gets silently casted in float32. Hence, we need','line_number':362,'multiline':False]['text':' cast them back in float16 just to be sure everything works as expected.','line_number':363,'multiline':False]['text':' Handle the case where the model is quantized','line_number':366,'multiline':False]['text':' Copied from transformers.models.llama.modeling_llama.LlamaFlashAttention2._flash_attention_forward','line_number':394,'multiline':False]['text':' TODO: Remove the `query_length != 1` check once Flash Attention for RoCm is bumped to 2.1. For details, please see the comment in LlamaFlashAttention2 __init__.','line_number':420,'multiline':False]['text':' Contains at least one padding token in the sequence','line_number':423,'multiline':False]['text':' Copied from transformers.models.llama.modeling_llama.LlamaFlashAttention2._upad_input','line_number':454,'multiline':False]['text':' There is a memcpy here, that is very bad.','line_number':476,'multiline':False]['text':' The -q_len: slice assumes left padding.','line_number':480,'multiline':False]['text':' 125m, 1.7B, ..., 175B applies layer norm BEFORE attention','line_number':545,'multiline':False]['text':' Self Attention','line_number':549,'multiline':False]['text':' 350m applies layer norm AFTER attention','line_number':560,'multiline':False]['text':' Fully Connected','line_number':564,'multiline':False]['text':' 125m, 1.7B, ..., 175B applies layer norm BEFORE attention','line_number':569,'multiline':False]['text':' 350m applies layer norm AFTER attention','line_number':581,'multiline':False]['text':' Note that the only purpose of `config._remove_final_layer_norm` is to keep backward compatibility','line_number':727,'multiline':False]['text':' with checkpoints that have been fine-tuned before transformers v4.20.1','line_number':728,'multiline':False]['text':' see https://github.com/facebookresearch/metaseq/pull/164','line_number':729,'multiline':False]['text':' Initialize weights and apply final processing','line_number':741,'multiline':False]['text':' retrieve input_ids and inputs_embeds','line_number':817,'multiline':False]['text':' required mask seq length can be calculated via length of past','line_number':833,'multiline':False]['text':' embed positions','line_number':836,'multiline':False]['text':' 2d mask is passed through the layers','line_number':838,'multiline':False]['text':' 4d mask is passed through the layers','line_number':846,'multiline':False]['text':' decoder layers','line_number':872,'multiline':False]['text':' check if head_mask has a correct number of layers specified if desired','line_number':877,'multiline':False]['text':' add LayerDrop (see https://arxiv.org/abs/1909.11556 for description)','line_number':887,'multiline':False]['text':' add hidden states from the last decoder layer','line_number':932,'multiline':False]['text':' Initialize weights and apply final processing','line_number':955,'multiline':False]['text':' decoder outputs consists of (dec_features, past_key_value, dec_hidden, dec_attn)','line_number':993,'multiline':False]['text':' the lm_head weight is automatically tied to the embed tokens weight','line_number':1024,'multiline':False]['text':' Initialize weights and apply final processing','line_number':1027,'multiline':False]['text':' decoder outputs consists of (dec_features, layer_state, dec_hidden, dec_attn)','line_number':1142,'multiline':False]['text':' move labels to correct device to enable model parallelism','line_number':1159,'multiline':False]['text':' Shift so that tokens < n predict n','line_number':1161,'multiline':False]['text':' Flatten the tokens','line_number':1164,'multiline':False]['text':' Some generation methods already pass only the last input ID','line_number':1186,'multiline':False]['text':' Default to old behavior: keep only final ID','line_number':1190,'multiline':False]['text':' if `inputs_embeds` are passed, we only want to use them in the 1st generation step','line_number':1195,'multiline':False]['text':' Initialize weights and apply final processing','line_number':1242,'multiline':False]['text':' Initialize weights and apply final processing','line_number':1363,'multiline':False]['text':' If we are on multi-GPU, split add a dimension','line_number':1447,'multiline':False]['text':' sometimes the start/end positions are outside our model inputs, we ignore these terms','line_number':1452,'multiline':False]