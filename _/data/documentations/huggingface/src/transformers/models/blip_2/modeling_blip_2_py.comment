['text':' coding=utf-8','line_number':1,'multiline':False]['text':' Copyright 2023 The Salesforce Authors and The HuggingFace Team. All rights reserved.','line_number':2,'multiline':False]['text':'','line_number':3,'multiline':False]['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':4,'multiline':False]['text':' you may not use this file except in compliance with the License.','line_number':5,'multiline':False]['text':' You may obtain a copy of the License at','line_number':6,'multiline':False]['text':'','line_number':7,'multiline':False]['text':'     http://www.apache.org/licenses/LICENSE-2.0','line_number':8,'multiline':False]['text':'','line_number':9,'multiline':False]['text':' Unless required by applicable law or agreed to in writing, software','line_number':10,'multiline':False]['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':11,'multiline':False]['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':12,'multiline':False]['text':' See the License for the specific language governing permissions and','line_number':13,'multiline':False]['text':' limitations under the License.','line_number':14,'multiline':False]['text':' See all BLIP-2 models at https://huggingface.co/models?filter=blip','line_number':52,'multiline':False]['text':' Copied from transformers.models.blip.modeling_blip.BlipVisionEmbeddings with Blip->Blip2','line_number':89,'multiline':False]['text':' shape = [*, width, grid, grid]','line_number':112,'multiline':False]['text':' small tweak here compared to CLIP, no bias here','line_number':138,'multiline':False]['text':' Take the dot product between "query" and "key" to get the raw attention scores.','line_number':174,'multiline':False]['text':' Normalize the attention scores to probabilities.','line_number':179,'multiline':False]['text':' This is actually dropping out entire tokens to attend to, which might','line_number':182,'multiline':False]['text':' seem a bit unusual, but is taken from the original Transformer paper.','line_number':183,'multiline':False]['text':' Mask heads if we want to','line_number':186,'multiline':False]['text':' Copied from transformers.models.blip.modeling_blip.BlipMLP','line_number':202,'multiline':False]['text':' Copied from transformers.models.blip.modeling_blip.BlipEncoderLayer with Blip->Blip2','line_number':218,'multiline':False]['text':' Copied from transformers.models.blip.modeling_blip.BlipEncoder with Blip->Blip2','line_number':413,'multiline':False]['text':' Copied from transformers.models.blip.modeling_blip.BlipVisionModel with Blip->Blip2, BLIP->BLIP_2','line_number':500,'multiline':False]['text':' If this is instantiated as a cross-attention module, the keys','line_number':623,'multiline':False]['text':' and values come from an encoder; the attention mask needs to be','line_number':624,'multiline':False]['text':' such that the encoder's padding tokens are not attended to.','line_number':625,'multiline':False]['text':' Take the dot product between "query" and "key" to get the raw attention scores.','line_number':647,'multiline':False]['text':' fp16 compatibility','line_number':656,'multiline':False]['text':' Apply the attention mask is (precomputed for all layers in BertModel forward() function)','line_number':669,'multiline':False]['text':' Normalize the attention scores to probabilities.','line_number':672,'multiline':False]['text':' This is actually dropping out entire tokens to attend to, which might','line_number':679,'multiline':False]['text':' seem a bit unusual, but is taken from the original Transformer paper.','line_number':680,'multiline':False]['text':' Mask heads if we want to','line_number':683,'multiline':False]['text':' Copied from transformers.models.bert.modeling_bert.BertSelfOutput with Bert->Blip2QFormer','line_number':699,'multiline':False]['text':' Prune linear layers','line_number':728,'multiline':False]['text':' Update hyper params and store pruned heads','line_number':734,'multiline':False]['text':' add attentions if we output them','line_number':759,'multiline':False]['text':' Copied from transformers.models.bert.modeling_bert.BertIntermediate with Bert->Blip2QFormer','line_number':763,'multiline':False]['text':' Copied from transformers.models.bert.modeling_bert.BertOutput with Bert->Blip2QFormer','line_number':779,'multiline':False]['text':' decoder uni-directional self-attention cached key/values tuple is at positions 1,2','line_number':823,'multiline':False]['text':' add cross attentions if we output attention weights','line_number':852,'multiline':False]['text':' We can provide a self-attention mask of dimensions [batch_size, from_seq_length, to_seq_length]','line_number':1040,'multiline':False]['text':' ourselves in which case we just need to make it broadcastable to all heads.','line_number':1041,'multiline':False]['text':' Provided a padding mask of dimensions [batch_size, seq_length]','line_number':1045,'multiline':False]['text':' - the model is an encoder, so make the mask broadcastable to [batch_size, num_heads, seq_length, seq_length]','line_number':1046,'multiline':False]['text':' Since attention_mask is 1.0 for positions we want to attend and 0.0 for','line_number':1055,'multiline':False]['text':' masked positions, this operation will create a tensor which is 0.0 for','line_number':1056,'multiline':False]['text':' positions we want to attend and -10000.0 for masked positions.','line_number':1057,'multiline':False]['text':' Since we are adding it to the raw scores before the softmax, this is','line_number':1058,'multiline':False]['text':' effectively the same as removing these entirely.','line_number':1059,'multiline':False]['text':' fp16 compatibility','line_number':1060,'multiline':False]['text':' past_key_values_length','line_number':1102,'multiline':False]['text':' We can provide a self-attention mask of dimensions [batch_size, from_seq_length, to_seq_length]','line_number':1119,'multiline':False]['text':' ourselves in which case we just need to make it broadcastable to all heads.','line_number':1120,'multiline':False]['text':' If a 2D or 3D attention mask is provided for the cross-attention','line_number':1123,'multiline':False]['text':' we need to make broadcastable to [batch_size, num_heads, seq_length, seq_length]','line_number':1124,'multiline':False]['text':' Prepare head mask if needed','line_number':1142,'multiline':False]['text':' 1.0 in head_mask indicate we keep the head','line_number':1143,'multiline':False]['text':' attention_probs has shape bsz x n_heads x N x N','line_number':1144,'multiline':False]['text':' input head_mask has shape [num_heads] or [num_hidden_layers x num_heads]','line_number':1145,'multiline':False]['text':' and head_mask is converted to shape [num_hidden_layers x batch x num_heads x seq_length x seq_length]','line_number':1146,'multiline':False]['text':' Update _tied_weights_keys using the base model used.','line_number':1203,'multiline':False]['text':' Initialize weights and apply final processing','line_number':1209,'multiline':False]['text':' step 2: forward the query tokens through the QFormer, using the image embeddings for cross-attention','line_number':1382,'multiline':False]['text':' step 1: forward the images through the vision encoder,','line_number':1438,'multiline':False]['text':' to get image embeddings of shape (batch_size, seq_len, hidden_size)','line_number':1439,'multiline':False]['text':' step 2: forward the query tokens through the QFormer, using the image embeddings for cross-attention','line_number':1448,'multiline':False]['text':' step 3: use the language model, conditioned on the query outputs and the prompt','line_number':1462,'multiline':False]['text':' we compute the loss here since we need to take into account the sequence length of the query embeds','line_number':1485,'multiline':False]['text':' Shift so that tokens < n predict n','line_number':1489,'multiline':False]['text':' Flatten the tokens','line_number':1493,'multiline':False]['text':' Update _tied_weights_keys using the base model used.','line_number':1558,'multiline':False]['text':' Initialize weights and apply final processing','line_number':1564,'multiline':False]['text':' warn users about unexpected behavior when using multi-GPU + BLIP-2 + `accelerate`.','line_number':1598,'multiline':False]['text':' For `generate` compatibility','line_number':1608,'multiline':False]['text':' step 1: forward the images through the vision encoder,','line_number':1688,'multiline':False]['text':' to get image embeddings of shape (batch_size, seq_len, hidden_size)','line_number':1689,'multiline':False]['text':' step 2: forward the query tokens through the QFormer, using the image embeddings for cross-attention','line_number':1698,'multiline':False]['text':' step 3: use the language model, conditioned on the query outputs and the prompt','line_number':1712,'multiline':False]['text':' we compute the loss here since we need to take into account the sequence length of the query embeds','line_number':1735,'multiline':False]['text':' Shift so that tokens < n predict n','line_number':1739,'multiline':False]['text':' Flatten the tokens','line_number':1743,'multiline':False]['text':' preprocess for `accelerate`','line_number':1796,'multiline':False]['text':' concatenate query embeddings with prompt embeddings','line_number':1826,'multiline':False]