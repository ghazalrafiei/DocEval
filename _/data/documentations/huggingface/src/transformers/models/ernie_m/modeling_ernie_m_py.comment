['text':' coding=utf-8','line_number':1,'multiline':False]['text':' Copyright 2023 Xuan Ouyang, Shuohuan Wang, Chao Pang, Yu Sun, Hao Tian, Hua Wu, Haifeng Wang The HuggingFace Inc. team. All rights reserved.','line_number':2,'multiline':False]['text':'','line_number':3,'multiline':False]['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':4,'multiline':False]['text':' you may not use this file except in compliance with the License.','line_number':5,'multiline':False]['text':' You may obtain a copy of the License at','line_number':6,'multiline':False]['text':'','line_number':7,'multiline':False]['text':'     http://www.apache.org/licenses/LICENSE-2.0','line_number':8,'multiline':False]['text':'','line_number':9,'multiline':False]['text':' Unless required by applicable law or agreed to in writing, software','line_number':10,'multiline':False]['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':11,'multiline':False]['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':12,'multiline':False]['text':' See the License for the specific language governing permissions and','line_number':13,'multiline':False]['text':' limitations under the License.','line_number':14,'multiline':False]['text':' See all ErnieM models at https://huggingface.co/models?filter=ernie_m','line_number':50,'multiline':False]['text':' Adapted from paddlenlp.transformers.ernie_m.modeling.ErnieEmbeddings','line_number':54,'multiline':False]['text':' to mimic paddlenlp implementation','line_number':86,'multiline':False]['text':' Copied from transformers.models.bert.modeling_bert.BertSelfAttention with Bert->ErnieM,self.value->self.v_proj,self.key->self.k_proj,self.query->self.q_proj','line_number':96,'multiline':False]['text':' If this is instantiated as a cross-attention module, the keys','line_number':141,'multiline':False]['text':' and values come from an encoder; the attention mask needs to be','line_number':142,'multiline':False]['text':' such that the encoder's padding tokens are not attended to.','line_number':143,'multiline':False]['text':' reuse k,v, cross_attentions','line_number':147,'multiline':False]['text':' if cross_attention save Tuple(torch.Tensor, torch.Tensor) of all cross attention key/value_states.','line_number':168,'multiline':False]['text':' Further calls to cross_attention layer can then reuse all cross-attention','line_number':169,'multiline':False]['text':' key/value_states (first "if" case)','line_number':170,'multiline':False]['text':' if uni-directional self-attention (decoder) save Tuple(torch.Tensor, torch.Tensor) of','line_number':171,'multiline':False]['text':' all previous decoder key/value_states. Further calls to uni-directional self-attention','line_number':172,'multiline':False]['text':' can concat previous decoder key/value_states to current projected key/value_states (third "elif" case)','line_number':173,'multiline':False]['text':' if encoder bi-directional self-attention `past_key_value` is always `None`','line_number':174,'multiline':False]['text':' Take the dot product between "query" and "key" to get the raw attention scores.','line_number':177,'multiline':False]['text':' fp16 compatibility','line_number':192,'multiline':False]['text':' Apply the attention mask is (precomputed for all layers in ErnieMModel forward() function)','line_number':204,'multiline':False]['text':' Normalize the attention scores to probabilities.','line_number':207,'multiline':False]['text':' This is actually dropping out entire tokens to attend to, which might','line_number':210,'multiline':False]['text':' seem a bit unusual, but is taken from the original Transformer paper.','line_number':211,'multiline':False]['text':' Mask heads if we want to','line_number':214,'multiline':False]['text':' Prune linear layers','line_number':245,'multiline':False]['text':' Update hyper params and store pruned heads','line_number':251,'multiline':False]['text':' add attentions if we output them','line_number':276,'multiline':False]['text':' to mimic paddlenlp implementation','line_number':283,'multiline':False]['text':' Copied from transformers.models.bert.modeling_bert.BertPooler with Bert->ErnieM','line_number':390,'multiline':False]['text':' We "pool" the model by simply taking the hidden state corresponding','line_number':398,'multiline':False]['text':' to the first token.','line_number':399,'multiline':False]['text':' Slightly different from the TF version which uses truncated_normal for initialization','line_number':418,'multiline':False]['text':' cf https://github.com/pytorch/pytorch/pull/5617','line_number':419,'multiline':False]['text':' init the default bool value','line_number':540,'multiline':False]['text':' Adapted from paddlenlp.transformers.ernie_m.ErnieMModel','line_number':553,'multiline':False]['text':' For 2D attention_mask from tokenizer','line_number':561,'multiline':False]['text':' Copied from transformers.models.bert.modeling_bert.BertForSequenceClassification.__init__ with Bert->ErnieM,bert->ernie_m','line_number':609,'multiline':False]['text':' Initialize weights and apply final processing','line_number':622,'multiline':False]['text':' Copied from transformers.models.bert.modeling_bert.BertForMultipleChoice.__init__ with Bert->ErnieM,bert->ernie_m','line_number':711,'multiline':False]['text':' Initialize weights and apply final processing','line_number':722,'multiline':False]['text':' Copied from transformers.models.bert.modeling_bert.BertForTokenClassification.__init__ with Bert->ErnieM,bert->ernie_m','line_number':801,'multiline':False]['text':' Initialize weights and apply final processing','line_number':813,'multiline':False]['text':' Copied from transformers.models.bert.modeling_bert.BertForQuestionAnswering.__init__ with Bert->ErnieM,bert->ernie_m','line_number':882,'multiline':False]['text':' Initialize weights and apply final processing','line_number':890,'multiline':False]['text':' If we are on multi-GPU, split add a dimension','line_number':945,'multiline':False]['text':' sometimes the start/end positions are outside our model inputs, we ignore these terms','line_number':950,'multiline':False]['text':' Copied from paddlenlp.transformers.ernie_m.modeling.UIEM','line_number':978,'multiline':False]['text':' If we are on multi-GPU, split add a dimension','line_number':1033,'multiline':False]['text':' sometimes the start/end positions are outside our model inputs, we ignore these terms','line_number':1038,'multiline':False]