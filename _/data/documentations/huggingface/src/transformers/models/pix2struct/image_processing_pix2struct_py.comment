['text':' coding=utf-8','line_number':1,'multiline':False]['text':' Copyright 2023 The HuggingFace Inc. team. All rights reserved.','line_number':2,'multiline':False]['text':'','line_number':3,'multiline':False]['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':4,'multiline':False]['text':' you may not use this file except in compliance with the License.','line_number':5,'multiline':False]['text':' You may obtain a copy of the License at','line_number':6,'multiline':False]['text':'','line_number':7,'multiline':False]['text':'     http://www.apache.org/licenses/LICENSE-2.0','line_number':8,'multiline':False]['text':'','line_number':9,'multiline':False]['text':' Unless required by applicable law or agreed to in writing, software','line_number':10,'multiline':False]['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':11,'multiline':False]['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':12,'multiline':False]['text':' See the License for the specific language governing permissions and','line_number':13,'multiline':False]['text':' limitations under the License.','line_number':14,'multiline':False]['text':' adapted from: https://discuss.pytorch.org/t/tf-image-extract-patches-in-pytorch/171409/2','line_number':63,'multiline':False]['text':' Adapted from https://github.com/google-research/pix2struct/blob/0e1779af0f4db4b652c1d92b3bbd2550a7399123/pix2struct/preprocessing/preprocessing_utils.py#L106','line_number':91,'multiline':False]['text':' Add new lines so that each line is no more than 80 characters.','line_number':131,'multiline':False]['text':' Use a temporary canvas to determine the width and height in pixels when','line_number':145,'multiline':False]['text':' rendering the text.','line_number':146,'multiline':False]['text':' Create the actual image with a bit of padding around the text.','line_number':150,'multiline':False]['text':' Adapted from https://github.com/google-research/pix2struct/blob/0e1779af0f4db4b652c1d92b3bbd2550a7399123/pix2struct/preprocessing/preprocessing_utils.py#L87','line_number':159,'multiline':False]['text':' Convert to PIL image if necessary','line_number':180,'multiline':False]['text':' Convert back to the original framework if necessary','line_number':193,'multiline':False]['text':' convert to torch','line_number':267,'multiline':False]['text':' maximize scale s.t.','line_number':274,'multiline':False]['text':' [1, rows, columns, patch_height * patch_width * image_channels]','line_number':289,'multiline':False]['text':' [rows * columns, patch_height * patch_width * image_channels]','line_number':297,'multiline':False]['text':' [rows * columns, 1]','line_number':300,'multiline':False]['text':' Offset by 1 so the ids do not contain zeros, which represent padding.','line_number':304,'multiline':False]['text':' Prepare additional patch features.','line_number':308,'multiline':False]['text':' [rows * columns, 1]','line_number':309,'multiline':False]['text':' [rows * columns, 2 + patch_height * patch_width * image_channels]','line_number':313,'multiline':False]['text':' [max_patches, 2 + patch_height * patch_width * image_channels]','line_number':316,'multiline':False]['text':' take mean across the whole `image`','line_number':348,'multiline':False]['text':' PIL RGBA images are converted to RGB','line_number':432,'multiline':False]['text':' All transformations expect numpy arrays.','line_number':436,'multiline':False]['text':' We assume that all images have the same channel dimension format.','line_number':440,'multiline':False]['text':' convert to torch tensor and permute','line_number':460,'multiline':False]['text':' create attention mask in numpy','line_number':468,'multiline':False]