['text':' coding=utf-8','line_number':1,'multiline':False]['text':' Copyright 2021 The Marian Team Authors and The HuggingFace Inc. team. All rights reserved.','line_number':2,'multiline':False]['text':'','line_number':3,'multiline':False]['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':4,'multiline':False]['text':' you may not use this file except in compliance with the License.','line_number':5,'multiline':False]['text':' You may obtain a copy of the License at','line_number':6,'multiline':False]['text':'','line_number':7,'multiline':False]['text':'     http://www.apache.org/licenses/LICENSE-2.0','line_number':8,'multiline':False]['text':'','line_number':9,'multiline':False]['text':' Unless required by applicable law or agreed to in writing, software','line_number':10,'multiline':False]['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':11,'multiline':False]['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':12,'multiline':False]['text':' See the License for the specific language governing permissions and','line_number':13,'multiline':False]['text':' limitations under the License.','line_number':14,'multiline':False]['text':' See all Marian models at https://huggingface.co/models?filter=marian','line_number':56,'multiline':False]['text':' Copied from transformers.models.bart.modeling_bart.shift_tokens_right','line_number':60,'multiline':False]['text':' replace possible -100 values in labels by `pad_token_id`','line_number':71,'multiline':False]['text':' set early to avoid an error in pytorch-1.8+','line_number':94,'multiline':False]['text':' Copied from transformers.models.bart.modeling_bart.BartAttention with Bart->Marian','line_number':111,'multiline':False]['text':' if key_value_states are provided this layer is used as a cross-attention layer','line_number':160,'multiline':False]['text':' for the decoder','line_number':161,'multiline':False]['text':' get query proj','line_number':166,'multiline':False]['text':' get key, value proj','line_number':168,'multiline':False]['text':' `past_key_value[0].shape[2] == key_value_states.shape[1]`','line_number':169,'multiline':False]['text':' is checking that the `sequence_length` of the `past_key_value` is the same as','line_number':170,'multiline':False]['text':' the provided `key_value_states` to support prefix tuning','line_number':171,'multiline':False]['text':' reuse k,v, cross_attentions','line_number':177,'multiline':False]['text':' cross_attentions','line_number':181,'multiline':False]['text':' reuse k, v, self_attention','line_number':185,'multiline':False]['text':' self_attention','line_number':191,'multiline':False]['text':' if cross_attention save Tuple(torch.Tensor, torch.Tensor) of all cross attention key/value_states.','line_number':196,'multiline':False]['text':' Further calls to cross_attention layer can then reuse all cross-attention','line_number':197,'multiline':False]['text':' key/value_states (first "if" case)','line_number':198,'multiline':False]['text':' if uni-directional self-attention (decoder) save Tuple(torch.Tensor, torch.Tensor) of','line_number':199,'multiline':False]['text':' all previous decoder key/value_states. Further calls to uni-directional self-attention','line_number':200,'multiline':False]['text':' can concat previous decoder key/value_states to current projected key/value_states (third "elif" case)','line_number':201,'multiline':False]['text':' if encoder bi-directional self-attention `past_key_value` is always `None`','line_number':202,'multiline':False]['text':' this operation is a bit awkward, but it's required to','line_number':239,'multiline':False]['text':' make sure that attn_weights keeps its gradient.','line_number':240,'multiline':False]['text':' In order to do so, attn_weights have to be reshaped','line_number':241,'multiline':False]['text':' twice and have to be reused in the following','line_number':242,'multiline':False]['text':' Use the `embed_dim` from the config (stored in the class) rather than `hidden_state` because `attn_output` can be','line_number':261,'multiline':False]['text':' partitioned across GPUs when using tensor-parallelism.','line_number':262,'multiline':False]['text':' Copied from transformers.models.bart.modeling_bart.BartEncoderLayer with Bart->Marian, BART->MARIAN','line_number':270,'multiline':False]['text':' Copied from transformers.models.bart.modeling_bart.BartDecoderLayer with Bart->Marian, BART->MARIAN','line_number':344,'multiline':False]['text':' Self Attention','line_number':407,'multiline':False]['text':' decoder uni-directional self-attention cached key/values tuple is at positions 1,2','line_number':408,'multiline':False]['text':' add present self-attn cache to positions 1,2 of present_key_value tuple','line_number':410,'multiline':False]['text':' Cross-Attention Block','line_number':422,'multiline':False]['text':' cross_attn cached key/values tuple is at positions 3,4 of present_key_value tuple','line_number':428,'multiline':False]['text':' add cross-attn to positions 3,4 of present_key_value tuple','line_number':442,'multiline':False]['text':' Fully Connected','line_number':445,'multiline':False]['text':' Initialize weights and apply final processing','line_number':659,'multiline':False]['text':' retrieve input_ids and inputs_embeds','line_number':720,'multiline':False]['text':' expand attention_mask','line_number':740,'multiline':False]['text':' [bsz, seq_len] -> [bsz, 1, tgt_seq_len, src_seq_len]','line_number':742,'multiline':False]['text':' check if head_mask has a correct number of layers specified if desired','line_number':748,'multiline':False]['text':' add LayerDrop (see https://arxiv.org/abs/1909.11556 for description)','line_number':756,'multiline':False]['text':' skip the layer','line_number':760,'multiline':False]['text':' Initialize weights and apply final processing','line_number':825,'multiline':False]['text':' retrieve input_ids and inputs_embeds','line_number':921,'multiline':False]['text':' past_key_values_length','line_number':932,'multiline':False]['text':' expand encoder attention mask','line_number':942,'multiline':False]['text':' [bsz, seq_len] -> [bsz, 1, tgt_seq_len, src_seq_len]','line_number':944,'multiline':False]['text':' embed positions','line_number':949,'multiline':False]['text':' decoder layers','line_number':963,'multiline':False]['text':' check if head_mask/cross_attn_head_mask has a correct number of layers specified if desired','line_number':969,'multiline':False]['text':' add LayerDrop (see https://arxiv.org/abs/1909.11556 for description)','line_number':977,'multiline':False]['text':' add hidden states from the last decoder layer','line_number':1025,'multiline':False]['text':' We always use self.shared for token embeddings to ensure compatibility with all marian models','line_number':1056,'multiline':False]['text':' Since the embeddings are not shared, deepcopy the embeddings here for encoder','line_number':1061,'multiline':False]['text':' and decoder to make sure they are not tied.','line_number':1062,'multiline':False]['text':' Initialize weights and apply final processing','line_number':1070,'multiline':False]['text':' This will return shared embeddings if they are shared else specific to encoder.','line_number':1074,'multiline':False]['text':' if not shared only set encoder embeedings','line_number':1082,'multiline':False]['text':' Update base model and current model config','line_number':1124,'multiline':False]['text':' Tie weights again if needed','line_number':1127,'multiline':False]['text':' If the user passed a tuple for encoder_outputs, we wrap it in a BaseModelOutput when return_dict=True','line_number':1192,'multiline':False]['text':' decoder outputs consists of (dec_features, past_key_value, dec_hidden, dec_attn)','line_number':1200,'multiline':False]['text':' Initialize weights and apply final processing','line_number':1252,'multiline':False]['text':' update config.decoder_vocab_size if embeddings are tied','line_number':1273,'multiline':False]['text':' if word embeddings are not tied, make sure that lm head is resized as well','line_number':1277,'multiline':False]['text':' if word embeddings are not tied, make sure that lm head is resized as well','line_number':1300,'multiline':False]['text':' Update base model and current model config','line_number':1311,'multiline':False]['text':' Tie weights again if needed','line_number':1314,'multiline':False]['text':' if embeddings are shared this will return shared embeddings otherwise decoder embed_tokens','line_number':1345,'multiline':False]['text':' cut decoder_input_ids if past is used','line_number':1452,'multiline':False]['text':' Some generation methods already pass only the last input ID','line_number':1456,'multiline':False]['text':' Default to old behavior: keep only final ID','line_number':1460,'multiline':False]['text':' encoder_outputs is defined. input_ids not needed','line_number':1466,'multiline':False]['text':' change this to avoid caching (presumably for debugging)','line_number':1474,'multiline':False]['text':' cached cross_attention states don't have to be reordered -> they are always the same','line_number':1484,'multiline':False]['text':' Copied from transformers.models.bart.modeling_bart.BartDecoderWrapper with Bart->Marian','line_number':1492,'multiline':False]['text':' Copied from transformers.models.bart.modeling_bart.BartForCausalLM with Bart->Marian, facebook/bart-base->Helsinki-NLP/opus-mt-fr-en','line_number':1507,'multiline':False]['text':' Initialize weights and apply final processing','line_number':1520,'multiline':False]['text':' decoder outputs consists of (dec_features, layer_state, dec_hidden, dec_attn)','line_number':1649,'multiline':False]['text':' if model is used as a decoder in encoder-decoder model, the decoder attention mask is created on the fly','line_number':1689,'multiline':False]['text':' Some generation methods already pass only the last input ID','line_number':1696,'multiline':False]['text':' Default to old behavior: keep only final ID','line_number':1700,'multiline':False]['text':' first step, decoder_cached_states are empty','line_number':1704,'multiline':False]['text':' encoder_outputs is defined. input_ids not needed','line_number':1706,'multiline':False]