['text':' coding=utf-8','line_number':1,'multiline':False]['text':' Copyright 2023 Apple Inc. and The HuggingFace Inc. team. All rights reserved.','line_number':2,'multiline':False]['text':'','line_number':3,'multiline':False]['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':4,'multiline':False]['text':' you may not use this file except in compliance with the License.','line_number':5,'multiline':False]['text':' You may obtain a copy of the License at','line_number':6,'multiline':False]['text':'','line_number':7,'multiline':False]['text':'     http://www.apache.org/licenses/LICENSE-2.0','line_number':8,'multiline':False]['text':'','line_number':9,'multiline':False]['text':' Unless required by applicable law or agreed to in writing, software','line_number':10,'multiline':False]['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':11,'multiline':False]['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':12,'multiline':False]['text':' See the License for the specific language governing permissions and','line_number':13,'multiline':False]['text':' limitations under the License.','line_number':14,'multiline':False]['text':'','line_number':15,'multiline':False]['text':' Original license: https://github.com/apple/ml-cvnets/blob/main/LICENSE','line_number':16,'multiline':False]['text':' General docstring','line_number':48,'multiline':False]['text':' Base docstring','line_number':51,'multiline':False]['text':' Image classification docstring','line_number':55,'multiline':False]['text':' See all MobileViTV2 models at https://huggingface.co/models?filter=mobilevitv2','line_number':62,'multiline':False]['text':' Copied from transformers.models.mobilevit.modeling_mobilevit.make_divisible','line_number':66,'multiline':False]['text':' Make sure that round down does not go down by more than 10%.','line_number':76,'multiline':False]['text':' Copied from transformers.models.mobilevit.modeling_mobilevit.MobileViTConvLayer with MobileViT->MobileViTV2','line_number':86,'multiline':False]['text':' Copied from transformers.models.mobilevit.modeling_mobilevit.MobileViTInvertedResidual with MobileViT->MobileViTV2','line_number':151,'multiline':False]['text':' Copied from transformers.models.mobilevit.modeling_mobilevit.MobileViTMobileNetLayer with MobileViT->MobileViTV2','line_number':200,'multiline':False]['text':' (batch_size, embed_dim, num_pixels_in_patch, num_patches) --> (batch_size, 1+2*embed_dim, num_pixels_in_patch, num_patches)','line_number':262,'multiline':False]['text':' Project hidden_states into query, key and value','line_number':265,'multiline':False]['text':' Query --> [batch_size, 1, num_pixels_in_patch, num_patches]','line_number':266,'multiline':False]['text':' value, key --> [batch_size, embed_dim, num_pixels_in_patch, num_patches]','line_number':267,'multiline':False]['text':' apply softmax along num_patches dimension','line_number':270,'multiline':False]['text':' Compute context vector','line_number':274,'multiline':False]['text':' [batch_size, embed_dim, num_pixels_in_patch, num_patches] x [batch_size, 1, num_pixels_in_patch, num_patches] -> [batch_size, embed_dim, num_pixels_in_patch, num_patches]','line_number':275,'multiline':False]['text':' [batch_size, embed_dim, num_pixels_in_patch, num_patches] --> [batch_size, embed_dim, num_pixels_in_patch, 1]','line_number':277,'multiline':False]['text':' combine context vector with values','line_number':280,'multiline':False]['text':' [batch_size, embed_dim, num_pixels_in_patch, num_patches] * [batch_size, embed_dim, num_pixels_in_patch, 1] --> [batch_size, embed_dim, num_pixels_in_patch, num_patches]','line_number':281,'multiline':False]['text':' ensure that dims are multiple of 16','line_number':363,'multiline':False]['text':' Local representations','line_number':412,'multiline':False]['text':' Global representations','line_number':429,'multiline':False]['text':' self.layernorm = MobileViTV2LayerNorm2D(attn_unit_dim, eps=config.layer_norm_eps)','line_number':432,'multiline':False]['text':' Fusion','line_number':435,'multiline':False]['text':' reduce spatial dimensions if needed','line_number':470,'multiline':False]['text':' local representation','line_number':474,'multiline':False]['text':' convert feature map to patches','line_number':478,'multiline':False]['text':' learn global representations','line_number':481,'multiline':False]['text':' convert patches back to feature maps','line_number':485,'multiline':False]['text':' [batch_size, patch_height, patch_width, input_dim] --> [batch_size, input_dim, patch_height, patch_width]','line_number':486,'multiline':False]['text':' segmentation architectures like DeepLab and PSPNet modify the strides','line_number':501,'multiline':False]['text':' of the classification backbones','line_number':502,'multiline':False]['text':' Copied from transformers.models.mobilevit.modeling_mobilevit.MobileViTPreTrainedModel with MobileViT->MobileViTV2,mobilevit->mobilevitv2','line_number':601,'multiline':False]['text':' Slightly different from the TF version which uses truncated_normal for initialization','line_number':616,'multiline':False]['text':' cf https://github.com/pytorch/pytorch/pull/5617','line_number':617,'multiline':False]['text':' Initialize weights and apply final processing','line_number':675,'multiline':False]['text':' global average pooling: (batch_size, channels, height, width) -> (batch_size, channels)','line_number':721,'multiline':False]['text':' layer 5 output dimension','line_number':752,'multiline':False]['text':' Classifier head','line_number':753,'multiline':False]['text':' Initialize weights and apply final processing','line_number':760,'multiline':False]['text':' Copied from transformers.models.mobilevit.modeling_mobilevit.MobileViTASPPPooling with MobileViT->MobileViTV2','line_number':825,'multiline':False]['text':' layer 5 output dimension','line_number':858,'multiline':False]['text':' Copied from transformers.models.mobilevit.modeling_mobilevit.MobileViTDeepLabV3 with MobileViT->MobileViTV2','line_number':910,'multiline':False]['text':' Initialize weights and apply final processing','line_number':953,'multiline':False]['text':' we need the intermediate hidden states','line_number':1001,'multiline':False]['text':' upsample logits to the images' original size','line_number':1014,'multiline':False]