['text':' coding=utf-8','line_number':1,'multiline':False]['text':' Copyright 2018 The HuggingFace Inc. team, Microsoft Corporation.','line_number':2,'multiline':False]['text':' Copyright (c) 2018, NVIDIA CORPORATION.  All rights reserved.','line_number':3,'multiline':False]['text':'','line_number':4,'multiline':False]['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':5,'multiline':False]['text':' you may not use this file except in compliance with the License.','line_number':6,'multiline':False]['text':' You may obtain a copy of the License at','line_number':7,'multiline':False]['text':'','line_number':8,'multiline':False]['text':'     http://www.apache.org/licenses/LICENSE-2.0','line_number':9,'multiline':False]['text':'','line_number':10,'multiline':False]['text':' Unless required by applicable law or agreed to in writing, software','line_number':11,'multiline':False]['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':12,'multiline':False]['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':13,'multiline':False]['text':' See the License for the specific language governing permissions and','line_number':14,'multiline':False]['text':' limitations under the License.','line_number':15,'multiline':False]['text':' Slightly different from the TF version which uses truncated_normal for initialization','line_number':61,'multiline':False]['text':' cf https://github.com/pytorch/pytorch/pull/5617','line_number':62,'multiline':False]['text':' Take the dot product between "query" and "key" to get the raw attention scores.','line_number':176,'multiline':False]['text':' Apply relative position embedding (precomputed in MPNetEncoder) if provided.','line_number':180,'multiline':False]['text':' Normalize the attention scores to probabilities.','line_number':187,'multiline':False]['text':' add attentions if we output them','line_number':249,'multiline':False]['text':' Copied from transformers.models.bert.modeling_bert.BertIntermediate','line_number':253,'multiline':False]['text':' Copied from transformers.models.bert.modeling_bert.BertOutput','line_number':269,'multiline':False]['text':' add self attentions if we output attention weights','line_number':308,'multiline':False]['text':' Add last layer','line_number':354,'multiline':False]['text':' Copied from transformers.models.bert.modeling_bert.BertPooler','line_number':405,'multiline':False]['text':' We "pool" the model by simply taking the hidden state corresponding','line_number':413,'multiline':False]['text':' to the first token.','line_number':414,'multiline':False]['text':' Initialize weights and apply final processing','line_number':492,'multiline':False]['text':' Initialize weights and apply final processing','line_number':582,'multiline':False]['text':' Need a link between the two variables so that the bias is correctly resized with `resize_token_embeddings`','line_number':659,'multiline':False]['text':' project back to size of vocabulary with bias','line_number':667,'multiline':False]['text':' Initialize weights and apply final processing','line_number':688,'multiline':False]['text':' Initialize weights and apply final processing','line_number':780,'multiline':False]['text':' Initialize weights and apply final processing','line_number':869,'multiline':False]['text':' take <s> token (equiv. to BERT's [CLS] token)','line_number':940,'multiline':False]['text':' Initialize weights and apply final processing','line_number':964,'multiline':False]['text':' If we are on multi-GPU, split add a dimension','line_number':1019,'multiline':False]['text':' sometimes the start/end positions are outside our model inputs, we ignore these terms','line_number':1024,'multiline':False]['text':' The series of casts and type-conversions here are carefully balanced to both work with ONNX export and XLA.','line_number':1052,'multiline':False]