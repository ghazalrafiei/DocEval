['text':' coding=utf-8','line_number':1,'multiline':False]['text':' Copyright 2022 The HuggingFace Inc. team.','line_number':2,'multiline':False]['text':'','line_number':3,'multiline':False]['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':4,'multiline':False]['text':' you may not use this file except in compliance with the License.','line_number':5,'multiline':False]['text':' You may obtain a copy of the License at','line_number':6,'multiline':False]['text':'','line_number':7,'multiline':False]['text':'     http://www.apache.org/licenses/LICENSE-2.0','line_number':8,'multiline':False]['text':'','line_number':9,'multiline':False]['text':' Unless required by applicable law or agreed to in writing, software','line_number':10,'multiline':False]['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':11,'multiline':False]['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':12,'multiline':False]['text':' See the License for the specific language governing permissions and','line_number':13,'multiline':False]['text':' limitations under the License.','line_number':14,'multiline':False]['text':' Mask token behave like a normal word, i.e. include the space before it','line_number':193,'multiline':False]['text':' Not implemented yet, because we need to chain two post processors which is not possible yet','line_number':219,'multiline':False]['text':' We need to wait for https://github.com/huggingface/tokenizers/pull/1005','line_number':220,'multiline':False]['text':' With `trim_offsets=False` we don't need to do add `processors.ByteLevel(trim_offsets=False)`','line_number':221,'multiline':False]['text':' because it's not doing anything','line_number':222,'multiline':False]['text':' The lists 'sep' and 'cls' must be cased in tuples for the object `post_processor_class`','line_number':242,'multiline':False]['text':' additional properties','line_number':259,'multiline':False]['text':' Input type checking for clearer error','line_number':336,'multiline':False]['text':' Strings are fine','line_number':339,'multiline':False]['text':' List are fine as long as they are...','line_number':342,'multiline':False]['text':' ... empty','line_number':344,'multiline':False]['text':' ... list of strings','line_number':347,'multiline':False]['text':' ... list with an empty list or with a list of strings','line_number':350,'multiline':False]['text':' in case text + text_pair are provided, text = questions, text_pair = nodes','line_number':358,'multiline':False]['text':' in case only text is provided => must be nodes','line_number':367,'multiline':False]['text':' Backward compatibility for 'truncation_strategy', 'pad_to_max_length'','line_number':467,'multiline':False]['text':' Backward compatibility for 'truncation_strategy', 'pad_to_max_length'','line_number':542,'multiline':False]['text':' Set the truncation and padding strategy and restore the initial configuration','line_number':602,'multiline':False]['text':' we set this to True as MarkupLM always expects pretokenized inputs','line_number':617,'multiline':False]['text':' Convert encoding to dict','line_number':620,'multiline':False]['text':' `Tokens` is a tuple of (List[Dict[str, List[List[int]]]] or List[Dict[str, 2D-Tensor]],','line_number':621,'multiline':False]['text':'  List[EncodingFast]) with nested dimensions corresponding to batch, overflows, sequence length','line_number':622,'multiline':False]['text':' we use offsets to create the labels','line_number':632,'multiline':False]['text':' Convert the output to have dict[list] from list[dict] and remove the additional overflows dimension','line_number':639,'multiline':False]['text':' From (variable) shape (batch, overflows, sequence length) to ~ (batch * overflows, sequence length)','line_number':640,'multiline':False]['text':' (we say ~ because the number of overflow varies with the example in the batch)','line_number':641,'multiline':False]['text':'','line_number':642,'multiline':False]['text':' To match each overflowing sample with the original sample in the batch','line_number':643,'multiline':False]['text':' we add an overflow_to_sample_mapping array (see below)','line_number':644,'multiline':False]['text':' If returning overflowing tokens, we need to return a mapping','line_number':651,'multiline':False]['text':' from the batch idx to the original sample','line_number':652,'multiline':False]['text':' create the token-level xpaths tags and subscripts','line_number':662,'multiline':False]['text':' optionally, create the labels','line_number':697,'multiline':False]['text':' Use the real label id for the first token of the word, and padding ids for the remaining tokens','line_number':714,'multiline':False]['text':' finally, remove offsets if the user didn't want them','line_number':725,'multiline':False]['text':' make it a batched input','line_number':753,'multiline':False]['text':' 2 options:','line_number':754,'multiline':False]['text':' 1) only text, in case text must be a list of str','line_number':755,'multiline':False]['text':' 2) text + text_pair, in which case text = str and text_pair a list of str','line_number':756,'multiline':False]['text':' Return tensor is None, then we can remove the leading batch axis','line_number':782,'multiline':False]['text':' Overflowing tokens are returned as a batch of output so we keep them in this case','line_number':783,'multiline':False]['text':' Load from model defaults','line_number':825,'multiline':False]['text':' Initialize attention mask if not present.','line_number':839,'multiline':False]