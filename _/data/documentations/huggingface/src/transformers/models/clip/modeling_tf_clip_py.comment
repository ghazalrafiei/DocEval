['text':' coding=utf-8','line_number':1,'multiline':False]['text':' Copyright 2021 The OpenAI Team Authors and The HuggingFace Team. All rights reserved.','line_number':2,'multiline':False]['text':'','line_number':3,'multiline':False]['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':4,'multiline':False]['text':' you may not use this file except in compliance with the License.','line_number':5,'multiline':False]['text':' You may obtain a copy of the License at','line_number':6,'multiline':False]['text':'','line_number':7,'multiline':False]['text':'     http://www.apache.org/licenses/LICENSE-2.0','line_number':8,'multiline':False]['text':'','line_number':9,'multiline':False]['text':' Unless required by applicable law or agreed to in writing, software','line_number':10,'multiline':False]['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':11,'multiline':False]['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':12,'multiline':False]['text':' See the License for the specific language governing permissions and','line_number':13,'multiline':False]['text':' limitations under the License.','line_number':14,'multiline':False]['text':' Public API','line_number':30,'multiline':False]['text':' See all CLIP models at https://huggingface.co/models?filter=clip','line_number':55,'multiline':False]['text':' Copied from transformers.models.bart.modeling_tf_bart._expand_mask','line_number':62,'multiline':False]['text':' contrastive loss function, adapted from','line_number':76,'multiline':False]['text':' https://sachinruk.github.io/blog/pytorch/pytorch%20lightning/loss%20function/gpu/2021/03/07/CLIP.html','line_number':77,'multiline':False]['text':' When running on CPU, `tf.nn.conv2d` doesn't support `NCHW` format.','line_number':184,'multiline':False]['text':' So change the input format from `NCHW` to `NHWC`.','line_number':185,'multiline':False]['text':' shape = (batch_size, in_height, in_width, in_channels=num_channels)','line_number':186,'multiline':False]['text':' Change the 2D spatial dimensions to a single temporal dimension.','line_number':191,'multiline':False]['text':' shape = (batch_size, num_patches, out_channels=embed_dim)','line_number':192,'multiline':False]['text':' add the [CLS] token to the embedded patch tokens','line_number':195,'multiline':False]['text':' copied from transformers.models.bert.modeling_tf_bert.TFBertSelfAttention.transpose_for_scores','line_number':299,'multiline':False]['text':' Reshape from [batch_size, seq_length, all_head_size] to [batch_size, seq_length, num_attention_heads, attention_head_size]','line_number':301,'multiline':False]['text':' Transpose the tensor from [batch_size, seq_length, num_attention_heads, attention_head_size] to [batch_size, num_attention_heads, seq_length, attention_head_size]','line_number':304,'multiline':False]['text':' Take the dot product between "query" and "key" to get the raw attention scores.','line_number':325,'multiline':False]['text':' (batch size, num_heads, seq_len_q, seq_len_k)','line_number':326,'multiline':False]['text':' apply the causal_attention_mask first','line_number':331,'multiline':False]['text':' Apply the causal attention mask (precomputed for all layers in TFCLIPModel call() function)','line_number':333,'multiline':False]['text':' Apply the attention mask (precomputed for all layers in TFCLIPModel call() function)','line_number':337,'multiline':False]['text':' Normalize the attention scores to probabilities.','line_number':340,'multiline':False]['text':' This is actually dropping out entire tokens to attend to, which might','line_number':343,'multiline':False]['text':' seem a bit unusual, but is taken from the original Transformer paper.','line_number':344,'multiline':False]['text':' (batch_size, seq_len_q, embed_dim)','line_number':350,'multiline':False]['text':' In TFBert, attention weights are returned after dropout.','line_number':354,'multiline':False]['text':' However, in CLIP, they are returned before dropout.','line_number':355,'multiline':False]['text':' add attentions if we output them','line_number':461,'multiline':False]['text':' Add last layer','line_number':526,'multiline':False]['text':' For `pooled_output` computation','line_number':557,'multiline':False]['text':' CLIP's text model uses causal mask, prepare it here.','line_number':576,'multiline':False]['text':' https://github.com/openai/CLIP/blob/cfcffb90e69f37bf2ff1e988237a0fbe41f33c04/clip/model.py#L324','line_number':577,'multiline':False]['text':' check attention mask and invert','line_number':580,'multiline':False]['text':' [bsz, seq_len] -> [bsz, 1, tgt_seq_len, src_seq_len]','line_number':581,'multiline':False]['text':' The `eos_token_id` was incorrect before PR #24773: Let's keep what have been done here.','line_number':598,'multiline':False]['text':' A CLIP model with such `eos_token_id` in the config can't work correctly with extra new tokens added','line_number':599,'multiline':False]['text':' ------------------------------------------------------------','line_number':600,'multiline':False]['text':' text_embeds.shape = [batch_size, n_ctx, transformer.width]','line_number':601,'multiline':False]['text':' take features from the eot embedding (eot_token is the highest number in each sequence)','line_number':602,'multiline':False]['text':' The config gets updated `eos_token_id` from PR #24773 (so the use of exta new tokens is possible)','line_number':610,'multiline':False]['text':' It is possible with an unspecified sequence length for seq_length to be','line_number':633,'multiline':False]['text':' a runtime value, which is unsupported by tf.constant. Per the TensorFlow','line_number':634,'multiline':False]['text':' docs, tf.fill can handle runtime dynamic shapes:','line_number':635,'multiline':False]['text':' https://www.tensorflow.org/api_docs/python/tf/fill','line_number':636,'multiline':False]['text':' set an additive 2D attention mask with all places being masked','line_number':639,'multiline':False]['text':' set diagonal & lower triangular parts to 0 (i.e. the places not to be masked)','line_number':642,'multiline':False]['text':' TIP: think the 2D matrix as the space of (query_seq, key_seq)','line_number':643,'multiline':False]['text':' to_mask = tf.linalg.band_part(to_mask, -1, 0)','line_number':645,'multiline':False]['text':' pooled_output','line_number':950,'multiline':False]['text':' normalized features','line_number':1002,'multiline':False]['text':' cosine similarity as logits','line_number':1006,'multiline':False]['text':' TODO: As is this currently fails with saved_model=True, because','line_number':1453,'multiline':False]['text':' TensorFlow cannot trace through nested dataclasses. Reference:','line_number':1454,'multiline':False]['text':' https://github.com/huggingface/transformers/pull/16886','line_number':1455,'multiline':False]