['text':' coding=utf-8','line_number':1,'multiline':False]['text':' Copyright 2018 The Google AI Language Team Authors and The HuggingFace Inc. team.','line_number':2,'multiline':False]['text':' Copyright (c) 2018, NVIDIA CORPORATION.  All rights reserved.','line_number':3,'multiline':False]['text':'','line_number':4,'multiline':False]['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':5,'multiline':False]['text':' you may not use this file except in compliance with the License.','line_number':6,'multiline':False]['text':' You may obtain a copy of the License at','line_number':7,'multiline':False]['text':'','line_number':8,'multiline':False]['text':'     http://www.apache.org/licenses/LICENSE-2.0','line_number':9,'multiline':False]['text':'','line_number':10,'multiline':False]['text':' Unless required by applicable law or agreed to in writing, software','line_number':11,'multiline':False]['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':12,'multiline':False]['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':13,'multiline':False]['text':' See the License for the specific language governing permissions and','line_number':14,'multiline':False]['text':' limitations under the License.','line_number':15,'multiline':False]['text':' device ids','line_number':67,'multiline':False]['text':' '$1___$2' is replaced by $2 (can be used to duplicate or remove layers in TF2.0 vs PyTorch)','line_number':70,'multiline':False]['text':' '_._' is replaced by a level separation (can be used to convert TF2.0 lists in PyTorch nn.ModulesList)','line_number':73,'multiline':False]['text':' Remove empty levels at the end','line_number':74,'multiline':False]['text':' Convert from TF2.0 '/' separators to PyTorch '.' separators','line_number':75,'multiline':False]['text':' Some weights have a single name without "/" such as final_logits_bias in BART','line_number':76,'multiline':False]['text':' Remove level zero','line_number':78,'multiline':False]['text':' When should we transpose the weights','line_number':82,'multiline':False]['text':' Convert standard TF2.0 names in PyTorch names','line_number':96,'multiline':False]['text':' The SeparableConv1D TF layer contains two weights that are translated to PyTorch Conv1D here','line_number':102,'multiline':False]['text':' Remove prefix if needed','line_number':106,'multiline':False]['text':' Conv2D weight:','line_number':120,'multiline':False]['text':'    PT: (num_out_channel, num_in_channel, kernel[0], kernel[1])','line_number':121,'multiline':False]['text':' -> TF: (kernel[0], kernel[1], num_in_channel, num_out_channel)','line_number':122,'multiline':False]['text':' Conv1D weight:','line_number':126,'multiline':False]['text':'    PT: (num_out_channel, num_in_channel, kernel)','line_number':127,'multiline':False]['text':' -> TF: (kernel, num_in_channel, num_out_channel)','line_number':128,'multiline':False]['text':'####################','line_number':151,'multiline':False]['text':' PyTorch => TF 2.0 #','line_number':152,'multiline':False]['text':'####################','line_number':153,'multiline':False]['text':' noqa: F401','line_number':167,'multiline':False]['text':' noqa: F401','line_number':168,'multiline':False]['text':' noqa: F401','line_number':169,'multiline':False]['text':' Treats a single file as a collection of shards with 1 shard.','line_number':177,'multiline':False]['text':' Loads all shards into a single state dictionary','line_number':181,'multiline':False]['text':' noqa: F401','line_number':226,'multiline':False]['text':' noqa: F401','line_number':227,'multiline':False]['text':' Make sure model is built','line_number':269,'multiline':False]['text':' Convert old format to new format if needed from a PyTorch state_dict','line_number':270,'multiline':False]['text':' New `weight_norm` from https://github.com/huggingface/transformers/pull/24030','line_number':283,'multiline':False]['text':' Matt: All TF models store the actual model stem in a MainLayer class, including the base model.','line_number':298,'multiline':False]['text':' In PT, the derived models (with heads) use the base model class as the stem instead,','line_number':299,'multiline':False]['text':' and there is no MainLayer class. This means that TF base classes have one','line_number':300,'multiline':False]['text':' extra layer in their weight names, corresponding to the MainLayer class. This code block compensates for that.','line_number':301,'multiline':False]['text':' Is a tuple to account for possible name aliasing','line_number':321,'multiline':False]['text':' The aliases are in priority order, take the first one that matches','line_number':322,'multiline':False]['text':' If none of the aliases match, just use the first one (it'll be reported as missing)','line_number':327,'multiline':False]['text':' Find associated numpy array in pytorch model state dict','line_number':330,'multiline':False]['text':' authorized missing keys don't have to be loaded','line_number':336,'multiline':False]['text':' Immediately free memory to keep peak usage as low as possible','line_number':361,'multiline':False]['text':'####################','line_number':425,'multiline':False]['text':' TF 2.0 => PyTorch #','line_number':426,'multiline':False]['text':'####################','line_number':427,'multiline':False]['text':' noqa: F401','line_number':438,'multiline':False]['text':' noqa: F401','line_number':439,'multiline':False]['text':' Instantiate and load the associated TF 2.0 model','line_number':453,'multiline':False]['text':' Add "TF" at the beginning','line_number':454,'multiline':False]['text':' Make sure model is built','line_number':462,'multiline':False]['text':' noqa: F401','line_number':483,'multiline':False]['text':' noqa: F401','line_number':484,'multiline':False]['text':' Make sure we are able to load PyTorch base models as well as derived models (with heads)','line_number':504,'multiline':False]['text':' TF models always have a prefix, some of PyTorch models (base ones) don't','line_number':505,'multiline':False]['text':' Build a map from potential PyTorch weight names to TF 2.0 Variables','line_number':510,'multiline':False]['text':' Handle PyTorch shared weight ()not duplicated in TF 2.0','line_number':522,'multiline':False]['text':' New `weight_norm` from https://github.com/huggingface/transformers/pull/24030','line_number':528,'multiline':False]['text':' Find associated numpy array in pytorch model state dict','line_number':539,'multiline':False]['text':' Convert to torch tensor','line_number':556,'multiline':False]['text':' Some models may have keys that are not in the state by design, removing them before needlessly warning','line_number':566,'multiline':False]['text':' the user.','line_number':567,'multiline':False]