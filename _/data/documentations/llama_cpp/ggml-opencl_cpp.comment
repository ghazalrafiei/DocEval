['text':' possible loss of data','line_number':17,'multiline':False]['text':' 0...31 or 0...15','line_number':343,'multiline':False]['text':' 0 or 0,1','line_number':344,'multiline':False]['text':' 0 or 1. 0 computes 0..., 1 computes 128...','line_number':348,'multiline':False]['text':' 0...15 or 0...7','line_number':349,'multiline':False]['text':' 0...15 or 0...14 in steps of 2','line_number':351,'multiline':False]['text':' sum up partial sums and write back result','line_number':394,'multiline':False]['text':' 0...31 or 0...16','line_number':418,'multiline':False]['text':' 0 or 0,1','line_number':419,'multiline':False]['text':' iterations in the inner loop','line_number':421,'multiline':False]['text':' 0 or 1. 0 computes 0..., 1 computes 128...','line_number':423,'multiline':False]['text':' 0....15 or 0...7','line_number':424,'multiline':False]['text':' 0...15 or 0...14 in steps of 2','line_number':428,'multiline':False]['text':' sum up partial sums and write back result','line_number':468,'multiline':False]['text':'to rename it later, just to test now','line_number':483,'multiline':False]['text':' 0...15','line_number':492,'multiline':False]['text':' 0...3','line_number':497,'multiline':False]['text':' 0...3','line_number':498,'multiline':False]['text':' 0 or 1. 0 computes 0,32 + 128,160, 1 computes 64,96 + 192,224','line_number':501,'multiline':False]['text':' sum up partial sums and write back result','line_number':542,'multiline':False]['text':' 0...15','line_number':565,'multiline':False]['text':' 0...3','line_number':568,'multiline':False]['text':' 0...3','line_number':569,'multiline':False]['text':' 0 or 1. 0 computes 0,32 + 128,160, 1 computes 64,96 + 192,224','line_number':572,'multiline':False]['text':' sum up partial sums and write back result','line_number':624,'multiline':False]['text':' 0...31 or 0...16','line_number':646,'multiline':False]['text':' 0 or 0, 1','line_number':647,'multiline':False]['text':' 16 or 8','line_number':649,'multiline':False]['text':' 0 or 1. 0 computes 0..., 1 computes 128...','line_number':651,'multiline':False]['text':' 0...15 or 0...7','line_number':652,'multiline':False]['text':' 0...15','line_number':655,'multiline':False]['text':' 0, 4, 8, ..., 28','line_number':660,'multiline':False]['text':' partial sum for thread in warp','line_number':670,'multiline':False]['text':' sum up partial sums and write back result','line_number':704,'multiline':False]['text':' block index','line_number':731,'multiline':False]['text':' quant index','line_number':732,'multiline':False]['text':' y block start index','line_number':733,'multiline':False]['text':' dequantize','line_number':736,'multiline':False]['text':' block index','line_number':761,'multiline':False]['text':' quant index','line_number':762,'multiline':False]['text':' y block start index','line_number':763,'multiline':False]['text':' dequantize','line_number':765,'multiline':False]['text':' matrix multiplication','line_number':769,'multiline':False]['text':' sum up partial sums and write back result','line_number':774,'multiline':False]['text':' ensure it is null terminated','line_number':1095,'multiline':False]['text':' Check if ext_buffer contains cl_khr_fp16','line_number':1096,'multiline':False]['text':' FP16 to FP32 kernel','line_number':1115,'multiline':False]['text':' Dequantize kernels','line_number':1118,'multiline':False]['text':' dequant mul mat kernel','line_number':1131,'multiline':False]['text':' mul kernel','line_number':1144,'multiline':False]['text':' buffer pool for cl','line_number':1250,'multiline':False]['text':' spin','line_number':1257,'multiline':False]['text':'smallest unused buffer that fits our needs','line_number':1280,'multiline':False]['text':'largest unused buffer seen so far','line_number':1282,'multiline':False]['text':'found the smallest buffer that fits our needs','line_number':1296,'multiline':False]['text':'no buffer that fits our needs, resize largest one to save memory','line_number':1304,'multiline':False]['text':' pretend the row is a matrix with cols=1','line_number':1367,'multiline':False]['text':' if an event is requested, make the last write wait for all previous writes to complete','line_number':1371,'multiline':False]['text':' src0','line_number':1405,'multiline':False]['text':' src1 is already on device, broadcasted.','line_number':1406,'multiline':False]['text':' dst','line_number':1407,'multiline':False]['text':' copy src0 to device','line_number':1414,'multiline':False]['text':' copy dst to host','line_number':1440,'multiline':False]['text':' NOLINT','line_number':1481,'multiline':False]['text':' TODO: copy src0 here when r3>1','line_number':1492,'multiline':False]['text':' copy src0 to device','line_number':1498,'multiline':False]['text':' copy src1 to device','line_number':1503,'multiline':False]['text':' compute','line_number':1508,'multiline':False]['text':' copy dst to host','line_number':1524,'multiline':False]['text':' NOLINT','line_number':1577,'multiline':False]['text':' TODO: copy src0 here when r3>1','line_number':1591,'multiline':False]['text':' copy src0 to device','line_number':1597,'multiline':False]['text':' convert src1 to fp16','line_number':1602,'multiline':False]['text':' TODO: use multiple threads','line_number':1603,'multiline':False]['text':' very slow due to no inlining','line_number':1618,'multiline':False]['text':' copy src1 to device','line_number':1624,'multiline':False]['text':' compute','line_number':1629,'multiline':False]['text':' copy dst to host, then convert to float','line_number':1645,'multiline':False]['text':' blocks per 2D slice','line_number':1687,'multiline':False]['text':' TODO: copy and dequantize src0 here when r3>1','line_number':1716,'multiline':False]['text':' copy src0 to device if necessary','line_number':1719,'multiline':False]['text':' convert src0 to fp32 on device','line_number':1730,'multiline':False]['text':' specialized dequantize_mul_mat_vec kernel','line_number':1739,'multiline':False]['text':' copy src1 to device','line_number':1740,'multiline':False]['text':' compute','line_number':1744,'multiline':False]['text':' CLBlast matrix matrix multiplication','line_number':1755,'multiline':False]['text':' copy src1 to device','line_number':1756,'multiline':False]['text':' wait for conversion','line_number':1759,'multiline':False]['text':' compute','line_number':1762,'multiline':False]['text':' copy dst to host','line_number':1779,'multiline':False]['text':' TODO: find the optimal values for these','line_number':1810,'multiline':False]['text':' dst ','line_number':1821,'multiline':True]['text':' If device doesn't support FP16','line_number':1822,'multiline':False]['text':' mul_mat_q: src0 is converted to fp32 on device','line_number':1830,'multiline':False]['text':' mul_mat_f16: src1 is converted to fp16 on cpu','line_number':1833,'multiline':False]['text':' choose the smaller one to transfer to the device','line_number':1836,'multiline':False]['text':' TODO: this is not always the best choice due to the overhead of converting to fp16','line_number':1837,'multiline':False]['text':' copy tensor to device','line_number':1884,'multiline':False]