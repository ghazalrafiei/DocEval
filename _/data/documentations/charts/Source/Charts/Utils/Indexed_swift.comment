['text':'===----------------------------------------------------------------------===//','line_number':1,'multiline':False]['text':'','line_number':2,'multiline':False]['text':' This source file is part of the Swift Algorithms open source project','line_number':3,'multiline':False]['text':'','line_number':4,'multiline':False]['text':' Copyright (c) 2020 Apple Inc. and the Swift project authors','line_number':5,'multiline':False]['text':' Licensed under Apache License v2.0 with Runtime Library Exception','line_number':6,'multiline':False]['text':'','line_number':7,'multiline':False]['text':' See https://swift.org/LICENSE.txt for license information','line_number':8,'multiline':False]['text':'','line_number':9,'multiline':False]['text':'===----------------------------------------------------------------------===//','line_number':10,'multiline':False]['text':'/ A collection wrapper that iterates over the indices and elements of a','line_number':12,'multiline':False]['text':'/ collection together.','line_number':13,'multiline':False]['text':'/ The base collection.','line_number':15,'multiline':False]['text':'/ The element type for an `IndexedCollection` collection.','line_number':24,'multiline':False]['text':'extension IndexedCollection: BidirectionalCollection','line_number':64,'multiline':False]['text':'  where Base: BidirectionalCollection','line_number':65,'multiline':False]['text':'{','line_number':66,'multiline':False]['text':'  func index(before i: Base.Index) -> Base.Index {','line_number':67,'multiline':False]['text':'    base.index(before: i)','line_number':68,'multiline':False]['text':'  }','line_number':69,'multiline':False]['text':'}','line_number':70,'multiline':False]['text':'','line_number':71,'multiline':False]['text':'extension IndexedCollection: RandomAccessCollection','line_number':72,'multiline':False]['text':'  where Base: RandomAccessCollection {}','line_number':73,'multiline':False]['text':'','line_number':74,'multiline':False]['text':'extension IndexedCollection: LazySequenceProtocol, LazyCollectionProtocol','line_number':75,'multiline':False]['text':'  where Base: LazySequenceProtocol {}','line_number':76,'multiline':False]['text':'===----------------------------------------------------------------------===//','line_number':78,'multiline':False]['text':' indexed()','line_number':79,'multiline':False]['text':'===----------------------------------------------------------------------===//','line_number':80,'multiline':False]['text':'/ Returns a collection of pairs *(i, x)*, where *i* represents an index of','line_number':83,'multiline':False]['text':'/ the collection, and *x* represents an element.','line_number':84,'multiline':False]['text':'/','line_number':85,'multiline':False]['text':'/ This example iterates over the indices and elements of a set, building an','line_number':86,'multiline':False]['text':'/ array consisting of indices of names with five or fewer letters.','line_number':87,'multiline':False]['text':'/','line_number':88,'multiline':False]['text':'/     let names: Set = ["Sofia", "Camilla", "Martina", "Mateo", "Nicol√°s"]','line_number':89,'multiline':False]['text':'/     var shorterIndices: [Set<String>.Index] = []','line_number':90,'multiline':False]['text':'/     for (i, name) in names.indexed() {','line_number':91,'multiline':False]['text':'/         if name.count <= 5 {','line_number':92,'multiline':False]['text':'/             shorterIndices.append(i)','line_number':93,'multiline':False]['text':'/         }','line_number':94,'multiline':False]['text':'/     }','line_number':95,'multiline':False]['text':'/','line_number':96,'multiline':False]['text':'/ Returns: A collection of paired indices and elements of this collection.','line_number':97,'multiline':False]