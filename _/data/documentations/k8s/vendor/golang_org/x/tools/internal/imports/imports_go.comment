['text':' Copyright 2013 The Go Authors. All rights reserved.','line_number':1,'multiline':False]['text':' Use of this source code is governed by a BSD-style','line_number':2,'multiline':False]['text':' license that can be found in the LICENSE file.','line_number':3,'multiline':False]['text':'go:generate go run mkstdlib.go','line_number':5,'multiline':False]['text':' Package imports implements a Go pretty-printer (like package "go/format")','line_number':7,'multiline':False]['text':' that also adds or removes import statements as necessary.','line_number':8,'multiline':False]['text':' Options is golang.org/x/tools/imports.Options with extra internal-only options.','line_number':30,'multiline':False]['text':' The environment to use. Note: this contains the cached module and filesystem state.','line_number':32,'multiline':False]['text':' LocalPrefix is a comma-separated string of import path prefixes, which, if','line_number':34,'multiline':False]['text':' set, instructs Process to sort the import paths with the given prefixes','line_number':35,'multiline':False]['text':' into another group after 3rd-party packages.','line_number':36,'multiline':False]['text':' Accept fragment of a source file (no package statement)','line_number':39,'multiline':False]['text':' Report all errors (not just the first 10 on different lines)','line_number':40,'multiline':False]['text':' Print comments (true if nil *Options provided)','line_number':42,'multiline':False]['text':' Use tabs for indent (true if nil *Options provided)','line_number':43,'multiline':False]['text':' Tab width (8 if nil *Options provided)','line_number':44,'multiline':False]['text':' Disable the insertion and deletion of imports','line_number':46,'multiline':False]['text':' Process implements golang.org/x/tools/imports.Process with explicit context in opt.Env.','line_number':49,'multiline':False]['text':' FixImports returns a list of fixes to the imports that, when applied,','line_number':65,'multiline':False]['text':' will leave the imports in the same state as Process. src and opt must','line_number':66,'multiline':False]['text':' be specified.','line_number':67,'multiline':False]['text':'','line_number':68,'multiline':False]['text':' Note that filename's directory influences which imports can be chosen,','line_number':69,'multiline':False]['text':' so it is important that filename be accurate.','line_number':70,'multiline':False]['text':' ApplyFixes applies all of the fixes to the file and formats it. extraMode','line_number':84,'multiline':False]['text':' is added in when parsing the file. src and opts must be specified, but no','line_number':85,'multiline':False]['text':' env is needed.','line_number':86,'multiline':False]['text':' Don't use parse() -- we don't care about fragments or statement lists','line_number':88,'multiline':False]['text':' here, and we need to work with unparseable files.','line_number':89,'multiline':False]['text':' Apply the fixes to the file.','line_number':105,'multiline':False]['text':' formatFile formats the file syntax tree.','line_number':111,'multiline':False]['text':' It may mutate the token.FileSet.','line_number':112,'multiline':False]['text':'','line_number':113,'multiline':False]['text':' If an adjust function is provided, it is called after formatting','line_number':114,'multiline':False]['text':' with the original source (formatFile's src parameter) and the','line_number':115,'multiline':False]['text':' formatted file, and returns the postpocessed result.','line_number':116,'multiline':False]['text':' import paths we need spaces before','line_number':120,'multiline':False]['text':' Within each block of contiguous imports, see if any','line_number':122,'multiline':False]['text':' import lines are in different group numbers. If so,','line_number':123,'multiline':False]['text':' we'll need to put a space between them so it's','line_number':124,'multiline':False]['text':' compatible with gofmt.','line_number':125,'multiline':False]['text':' parse parses src, which was read from filename,','line_number':167,'multiline':False]['text':' as a Go source file or statement list.','line_number':168,'multiline':False]['text':' Try as whole source file.','line_number':178,'multiline':False]['text':' If the error is that the source file didn't begin with a','line_number':183,'multiline':False]['text':' package line and we accept fragmented input, fall through to','line_number':184,'multiline':False]['text':' try as a source fragment.  Stop and return on any other error.','line_number':185,'multiline':False]['text':' If this is a declaration list, make it a source file','line_number':190,'multiline':False]['text':' by inserting a package clause.','line_number':191,'multiline':False]['text':' Insert using a ;, not a newline, so that parse errors are on','line_number':192,'multiline':False]['text':' the correct line.','line_number':193,'multiline':False]['text':' Gofmt will turn the ; into a \n.','line_number':198,'multiline':False]['text':' Do that ourselves now and update the file contents,','line_number':199,'multiline':False]['text':' so that positions and line numbers are correct going forward.','line_number':200,'multiline':False]['text':' If a main function exists, we will assume this is a main','line_number':204,'multiline':False]['text':' package and leave the file.','line_number':205,'multiline':False]['text':' Remove the package clause.','line_number':211,'multiline':False]['text':' If the error is that the source file didn't begin with a','line_number':217,'multiline':False]['text':' declaration, fall through to try as a statement list.','line_number':218,'multiline':False]['text':' Stop and return on any other error.','line_number':219,'multiline':False]['text':' If this is a statement list, make it a source file','line_number':224,'multiline':False]['text':' by inserting a package clause and turning the list','line_number':225,'multiline':False]['text':' into a function body.  This handles expressions too.','line_number':226,'multiline':False]['text':' Insert using a ;, not a newline, so that the line numbers','line_number':227,'multiline':False]['text':' in fsrc match the ones in src.','line_number':228,'multiline':False]['text':' Remove the wrapping.','line_number':233,'multiline':False]['text':' Gofmt has turned the ; into a \n\n.','line_number':234,'multiline':False]['text':' Gofmt has also indented the function body one level.','line_number':237,'multiline':False]['text':' Remove that indent.','line_number':238,'multiline':False]['text':' Failed, and out of options.','line_number':245,'multiline':False]['text':' containsMainFunc checks if a file contains a function declaration with the','line_number':249,'multiline':False]['text':' function signature 'func main()'','line_number':250,'multiline':False]['text':' matchSpace reformats src to use the same space context as orig.','line_number':288,'multiline':False]['text':'  1. If orig begins with blank lines, matchSpace inserts them at the beginning of src.','line_number':289,'multiline':False]['text':'  2. matchSpace copies the indentation of the first non-blank line in orig','line_number':290,'multiline':False]['text':'     to every non-blank line in src.','line_number':291,'multiline':False]['text':'  3. matchSpace copies the trailing space from orig and uses it in place','line_number':292,'multiline':False]['text':'     of src's trailing space.','line_number':293,'multiline':False]['text':' not blank','line_number':310,'multiline':False]