['text':'!/usr/bin/env bash','line_number':1,'multiline':False]['text':' Copyright 2009 The Go Authors. All rights reserved.','line_number':2,'multiline':False]['text':' Use of this source code is governed by a BSD-style','line_number':3,'multiline':False]['text':' license that can be found in the LICENSE file.','line_number':4,'multiline':False]['text':' The plan9 package provides access to the raw system call','line_number':6,'multiline':False]['text':' interface of the underlying operating system.  Porting Go to','line_number':7,'multiline':False]['text':' a new architecture/operating system combination requires','line_number':8,'multiline':False]['text':' some manual effort, though there are tools that automate','line_number':9,'multiline':False]['text':' much of the process.  The auto-generated files have names','line_number':10,'multiline':False]['text':' beginning with z.','line_number':11,'multiline':False]['text':'','line_number':12,'multiline':False]['text':' This script runs or (given -n) prints suggested commands to generate z files','line_number':13,'multiline':False]['text':' for the current system.  Running those commands is not automatic.','line_number':14,'multiline':False]['text':' This script is documentation more than anything else.','line_number':15,'multiline':False]['text':'','line_number':16,'multiline':False]['text':' * asm_${GOOS}_${GOARCH}.s','line_number':17,'multiline':False]['text':'','line_number':18,'multiline':False]['text':' This hand-written assembly file implements system call dispatch.','line_number':19,'multiline':False]['text':' There are three entry points:','line_number':20,'multiline':False]['text':'','line_number':21,'multiline':False]['text':' 	func Syscall(trap, a1, a2, a3 uintptr) (r1, r2, err uintptr);','line_number':22,'multiline':False]['text':' 	func Syscall6(trap, a1, a2, a3, a4, a5, a6 uintptr) (r1, r2, err uintptr);','line_number':23,'multiline':False]['text':' 	func RawSyscall(trap, a1, a2, a3 uintptr) (r1, r2, err uintptr);','line_number':24,'multiline':False]['text':'','line_number':25,'multiline':False]['text':' The first and second are the standard ones; they differ only in','line_number':26,'multiline':False]['text':' how many arguments can be passed to the kernel.','line_number':27,'multiline':False]['text':' The third is for low-level use by the ForkExec wrapper;','line_number':28,'multiline':False]['text':' unlike the first two, it does not call into the scheduler to','line_number':29,'multiline':False]['text':' let it know that a system call is running.','line_number':30,'multiline':False]['text':'','line_number':31,'multiline':False]['text':' * syscall_${GOOS}.go','line_number':32,'multiline':False]['text':'','line_number':33,'multiline':False]['text':' This hand-written Go file implements system calls that need','line_number':34,'multiline':False]['text':' special handling and lists "//sys" comments giving prototypes','line_number':35,'multiline':False]['text':' for ones that can be auto-generated.  Mksyscall reads those','line_number':36,'multiline':False]['text':' comments to generate the stubs.','line_number':37,'multiline':False]['text':'','line_number':38,'multiline':False]['text':' * syscall_${GOOS}_${GOARCH}.go','line_number':39,'multiline':False]['text':'','line_number':40,'multiline':False]['text':' Same as syscall_${GOOS}.go except that it contains code specific','line_number':41,'multiline':False]['text':' to ${GOOS} on one particular architecture.','line_number':42,'multiline':False]['text':'','line_number':43,'multiline':False]['text':' * types_${GOOS}.c','line_number':44,'multiline':False]['text':'','line_number':45,'multiline':False]['text':' This hand-written C file includes standard C headers and then','line_number':46,'multiline':False]['text':' creates typedef or enum names beginning with a dollar sign','line_number':47,'multiline':False]['text':' (use of $ in variable names is a gcc extension).  The hardest','line_number':48,'multiline':False]['text':' part about preparing this file is figuring out which headers to','line_number':49,'multiline':False]['text':' include and which symbols need to be #defined to get the','line_number':50,'multiline':False]['text':' actual data structures that pass through to the kernel system calls.','line_number':51,'multiline':False]['text':' Some C libraries present alternate versions for binary compatibility','line_number':52,'multiline':False]['text':' and translate them on the way in and out of system calls, but','line_number':53,'multiline':False]['text':' there is almost always a #define that can get the real ones.','line_number':54,'multiline':False]['text':' See types_darwin.c and types_linux.c for examples.','line_number':55,'multiline':False]['text':'','line_number':56,'multiline':False]['text':' * zerror_${GOOS}_${GOARCH}.go','line_number':57,'multiline':False]['text':'','line_number':58,'multiline':False]['text':' This machine-generated file defines the system's error numbers,','line_number':59,'multiline':False]['text':' error strings, and signal numbers.  The generator is "mkerrors.sh".','line_number':60,'multiline':False]['text':' Usually no arguments are needed, but mkerrors.sh will pass its','line_number':61,'multiline':False]['text':' arguments on to godefs.','line_number':62,'multiline':False]['text':'','line_number':63,'multiline':False]['text':' * zsyscall_${GOOS}_${GOARCH}.go','line_number':64,'multiline':False]['text':'','line_number':65,'multiline':False]['text':' Generated by mksyscall.pl; see syscall_${GOOS}.go above.','line_number':66,'multiline':False]['text':'','line_number':67,'multiline':False]['text':' * zsysnum_${GOOS}_${GOARCH}.go','line_number':68,'multiline':False]['text':'','line_number':69,'multiline':False]['text':' Generated by mksysnum_${GOOS}.','line_number':70,'multiline':False]['text':'','line_number':71,'multiline':False]['text':' * ztypes_${GOOS}_${GOARCH}.go','line_number':72,'multiline':False]['text':'','line_number':73,'multiline':False]['text':' Generated by godefs; see types_${GOOS}.c above.','line_number':74,'multiline':False]['text':' defaults','line_number':78,'multiline':False]