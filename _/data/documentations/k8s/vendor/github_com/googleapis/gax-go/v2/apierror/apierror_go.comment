['text':' Copyright 2021, Google Inc.','line_number':1,'multiline':False]['text':' All rights reserved.','line_number':2,'multiline':False]['text':'','line_number':3,'multiline':False]['text':' Redistribution and use in source and binary forms, with or without','line_number':4,'multiline':False]['text':' modification, are permitted provided that the following conditions are','line_number':5,'multiline':False]['text':' met:','line_number':6,'multiline':False]['text':'','line_number':7,'multiline':False]['text':'     * Redistributions of source code must retain the above copyright','line_number':8,'multiline':False]['text':' notice, this list of conditions and the following disclaimer.','line_number':9,'multiline':False]['text':'     * Redistributions in binary form must reproduce the above','line_number':10,'multiline':False]['text':' copyright notice, this list of conditions and the following disclaimer','line_number':11,'multiline':False]['text':' in the documentation and/or other materials provided with the','line_number':12,'multiline':False]['text':' distribution.','line_number':13,'multiline':False]['text':'     * Neither the name of Google Inc. nor the names of its','line_number':14,'multiline':False]['text':' contributors may be used to endorse or promote products derived from','line_number':15,'multiline':False]['text':' this software without specific prior written permission.','line_number':16,'multiline':False]['text':'','line_number':17,'multiline':False]['text':' THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS','line_number':18,'multiline':False]['text':' "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT','line_number':19,'multiline':False]['text':' LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR','line_number':20,'multiline':False]['text':' A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT','line_number':21,'multiline':False]['text':' OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,','line_number':22,'multiline':False]['text':' SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT','line_number':23,'multiline':False]['text':' LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,','line_number':24,'multiline':False]['text':' DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY','line_number':25,'multiline':False]['text':' THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT','line_number':26,'multiline':False]['text':' (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE','line_number':27,'multiline':False]['text':' OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.','line_number':28,'multiline':False]['text':' Package apierror implements a wrapper error for parsing error details from','line_number':30,'multiline':False]['text':' API calls. Both HTTP & gRPC status errors are supported.','line_number':31,'multiline':False]['text':'','line_number':32,'multiline':False]['text':' For examples of how to use [APIError] with client libraries please reference','line_number':33,'multiline':False]['text':' [Inspecting errors](https://pkg.go.dev/cloud.google.com/go#hdr-Inspecting_errors)','line_number':34,'multiline':False]['text':' in the client library documentation.','line_number':35,'multiline':False]['text':' ErrDetails holds the google/rpc/error_details.proto messages.','line_number':52,'multiline':False]['text':' Unknown stores unidentifiable error details.','line_number':65,'multiline':False]['text':' ErrMessageNotFound is used to signal ExtractProtoMessage found no matching messages.','line_number':69,'multiline':False]['text':' ExtractProtoMessage provides a mechanism for extracting protobuf messages from the','line_number':72,'multiline':False]['text':' Unknown error details. If ExtractProtoMessage finds an unknown message of the same type,','line_number':73,'multiline':False]['text':' the content of the message is copied to the provided message.','line_number':74,'multiline':False]['text':'','line_number':75,'multiline':False]['text':' ExtractProtoMessage will return ErrMessageNotFound if there are no message matching the','line_number':76,'multiline':False]['text':' protocol buffer type of the provided message.','line_number':77,'multiline':False]['text':' APIError wraps either a gRPC Status error or a HTTP googleapi.Error. It','line_number':183,'multiline':False]['text':' implements error and Status interfaces.','line_number':184,'multiline':False]['text':' Details presents the error details of the APIError.','line_number':192,'multiline':False]['text':' Unwrap extracts the original error.','line_number':197,'multiline':False]['text':' Error returns a readable representation of the APIError.','line_number':202,'multiline':False]['text':' Truncate the googleapi.Error message because it dumps the Details in','line_number':206,'multiline':False]['text':' an ugly way.','line_number':207,'multiline':False]['text':' GRPCStatus extracts the underlying gRPC Status error.','line_number':215,'multiline':False]['text':' This method is necessary to fulfill the interface','line_number':216,'multiline':False]['text':' described in https://pkg.go.dev/google.golang.org/grpc/status#FromError.','line_number':217,'multiline':False]['text':' Reason returns the reason in an ErrorInfo.','line_number':222,'multiline':False]['text':' If ErrorInfo is nil, it returns an empty string.','line_number':223,'multiline':False]['text':' Domain returns the domain in an ErrorInfo.','line_number':228,'multiline':False]['text':' If ErrorInfo is nil, it returns an empty string.','line_number':229,'multiline':False]['text':' Metadata returns the metadata in an ErrorInfo.','line_number':234,'multiline':False]['text':' If ErrorInfo is nil, it returns nil.','line_number':235,'multiline':False]['text':' setDetailsFromError parses a Status error or a googleapi.Error','line_number':241,'multiline':False]['text':' and sets status and details or httpErr and details, respectively.','line_number':242,'multiline':False]['text':' It returns false if neither Status nor googleapi.Error can be parsed.','line_number':243,'multiline':False]['text':' When err is a googleapi.Error, the status of the returned error will','line_number':244,'multiline':False]['text':' be set to an Unknown error, rather than nil, since a nil code is','line_number':245,'multiline':False]['text':' interpreted as OK in the gRPC status package.','line_number':246,'multiline':False]['text':' FromError parses a Status error or a googleapi.Error and builds an','line_number':266,'multiline':False]['text':' APIError, wrapping the provided error in the new APIError. It','line_number':267,'multiline':False]['text':' returns false if neither Status nor googleapi.Error can be parsed.','line_number':268,'multiline':False]['text':' ParseError parses a Status error or a googleapi.Error and builds an','line_number':273,'multiline':False]['text':' APIError. If wrap is true, it wraps the error in the new APIError.','line_number':274,'multiline':False]['text':' It returns false if neither Status nor googleapi.Error can be parsed.','line_number':275,'multiline':False]['text':' parseDetails accepts a slice of interface{} that should be backed by some','line_number':290,'multiline':False]['text':' sort of proto.Message that can be cast to the google/rpc/error_details.proto','line_number':291,'multiline':False]['text':' types.','line_number':292,'multiline':False]['text':'','line_number':293,'multiline':False]['text':' This is for internal use only.','line_number':294,'multiline':False]['text':' parseHTTPDetails will convert the given googleapi.Error into the protobuf','line_number':327,'multiline':False]['text':' representation then parse the Any values that contain the error details.','line_number':328,'multiline':False]['text':'','line_number':329,'multiline':False]['text':' This is for internal use only.','line_number':330,'multiline':False]['text':' If the error body does not conform to the error schema, ignore it','line_number':334,'multiline':False]['text':' altogther. See https://cloud.google.com/apis/design/errors#http_mapping.','line_number':335,'multiline':False]['text':' Coerce the Any messages into proto.Message then parse the details.','line_number':339,'multiline':False]['text':' Ignore malformed Any values.','line_number':344,'multiline':False]['text':' HTTPCode returns the underlying HTTP response status code. This method returns','line_number':353,'multiline':False]['text':' `-1` if the underlying error is a [google.golang.org/grpc/status.Status]. To','line_number':354,'multiline':False]['text':' check gRPC error codes use [google.golang.org/grpc/status.Code].','line_number':355,'multiline':False]