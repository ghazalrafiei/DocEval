['text':'
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
','line_number':1,'multiline':True]['text':' This file was autogenerated by go-to-protobuf. Do not edit it manually!','line_number':18,'multiline':False]['text':' Package-wide variables from generator "generated".','line_number':30,'multiline':False]['text':' HTTPIngressPath associates a path with a backend. Incoming urls matching the','line_number':33,'multiline':False]['text':' path are forwarded to the backend.','line_number':34,'multiline':False]['text':' path is matched against the path of an incoming request. Currently it can','line_number':36,'multiline':False]['text':' contain characters disallowed from the conventional "path" part of a URL','line_number':37,'multiline':False]['text':' as defined by RFC 3986. Paths must begin with a '/' and must be present','line_number':38,'multiline':False]['text':' when using PathType with value "Exact" or "Prefix".','line_number':39,'multiline':False]['text':' +optional','line_number':40,'multiline':False]['text':' pathType determines the interpretation of the path matching. PathType can','line_number':43,'multiline':False]['text':' be one of the following values:','line_number':44,'multiline':False]['text':' * Exact: Matches the URL path exactly.','line_number':45,'multiline':False]['text':' * Prefix: Matches based on a URL path prefix split by '/'. Matching is','line_number':46,'multiline':False]['text':'   done on a path element by element basis. A path element refers is the','line_number':47,'multiline':False]['text':'   list of labels in the path split by the '/' separator. A request is a','line_number':48,'multiline':False]['text':'   match for path p if every p is an element-wise prefix of p of the','line_number':49,'multiline':False]['text':'   request path. Note that if the last element of the path is a substring','line_number':50,'multiline':False]['text':'   of the last element in request path, it is not a match (e.g. /foo/bar','line_number':51,'multiline':False]['text':'   matches /foo/bar/baz, but does not match /foo/barbaz).','line_number':52,'multiline':False]['text':' * ImplementationSpecific: Interpretation of the Path matching is up to','line_number':53,'multiline':False]['text':'   the IngressClass. Implementations can treat this as a separate PathType','line_number':54,'multiline':False]['text':'   or treat it identically to Prefix or Exact path types.','line_number':55,'multiline':False]['text':' Implementations are required to support all path types.','line_number':56,'multiline':False]['text':' Defaults to ImplementationSpecific.','line_number':57,'multiline':False]['text':' backend defines the referenced service endpoint to which the traffic','line_number':60,'multiline':False]['text':' will be forwarded to.','line_number':61,'multiline':False]['text':' HTTPIngressRuleValue is a list of http selectors pointing to backends.','line_number':65,'multiline':False]['text':' In the example: http://<host>/<path>?<searchpart> -> backend where','line_number':66,'multiline':False]['text':' where parts of the url correspond to RFC 3986, this resource will be used','line_number':67,'multiline':False]['text':' to match against everything after the last '/' and before the first '?'','line_number':68,'multiline':False]['text':' or '#'.','line_number':69,'multiline':False]['text':' paths is a collection of paths that map requests to backends.','line_number':71,'multiline':False]['text':' Ingress is a collection of rules that allow inbound connections to reach the','line_number':75,'multiline':False]['text':' endpoints defined by a backend. An Ingress can be configured to give services','line_number':76,'multiline':False]['text':' externally-reachable urls, load balance traffic, terminate SSL, offer name','line_number':77,'multiline':False]['text':' based virtual hosting etc.','line_number':78,'multiline':False]['text':' Standard object's metadata.','line_number':80,'multiline':False]['text':' More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata','line_number':81,'multiline':False]['text':' +optional','line_number':82,'multiline':False]['text':' spec is the desired state of the Ingress.','line_number':85,'multiline':False]['text':' More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status','line_number':86,'multiline':False]['text':' +optional','line_number':87,'multiline':False]['text':' status is the current state of the Ingress.','line_number':90,'multiline':False]['text':' More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status','line_number':91,'multiline':False]['text':' +optional','line_number':92,'multiline':False]['text':' IngressBackend describes all endpoints for a given service and port.','line_number':96,'multiline':False]['text':' serviceName specifies the name of the referenced service.','line_number':98,'multiline':False]['text':' +optional','line_number':99,'multiline':False]['text':' servicePort Specifies the port of the referenced service.','line_number':102,'multiline':False]['text':' +optional','line_number':103,'multiline':False]['text':' resource is an ObjectRef to another Kubernetes resource in the namespace','line_number':106,'multiline':False]['text':' of the Ingress object. If resource is specified, serviceName and servicePort','line_number':107,'multiline':False]['text':' must not be specified.','line_number':108,'multiline':False]['text':' +optional','line_number':109,'multiline':False]['text':' IngressClass represents the class of the Ingress, referenced by the Ingress','line_number':113,'multiline':False]['text':' Spec. The `ingressclass.kubernetes.io/is-default-class` annotation can be','line_number':114,'multiline':False]['text':' used to indicate that an IngressClass should be considered default. When a','line_number':115,'multiline':False]['text':' single IngressClass resource has this annotation set to true, new Ingress','line_number':116,'multiline':False]['text':' resources without a class specified will be assigned this default class.','line_number':117,'multiline':False]['text':' Standard object's metadata.','line_number':119,'multiline':False]['text':' More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata','line_number':120,'multiline':False]['text':' +optional','line_number':121,'multiline':False]['text':' spec is the desired state of the IngressClass.','line_number':124,'multiline':False]['text':' More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status','line_number':125,'multiline':False]['text':' +optional','line_number':126,'multiline':False]['text':' IngressClassList is a collection of IngressClasses.','line_number':130,'multiline':False]['text':' Standard list metadata.','line_number':132,'multiline':False]['text':' +optional','line_number':133,'multiline':False]['text':' items is the list of IngressClasses.','line_number':136,'multiline':False]['text':' IngressClassParametersReference identifies an API object. This can be used','line_number':140,'multiline':False]['text':' to specify a cluster or namespace-scoped resource.','line_number':141,'multiline':False]['text':' apiGroup is the group for the resource being referenced. If APIGroup is','line_number':143,'multiline':False]['text':' not specified, the specified Kind must be in the core API group. For any','line_number':144,'multiline':False]['text':' other third-party types, APIGroup is required.','line_number':145,'multiline':False]['text':' +optional','line_number':146,'multiline':False]['text':' kind is the type of resource being referenced.','line_number':149,'multiline':False]['text':' name is the name of resource being referenced.','line_number':152,'multiline':False]['text':' scope represents if this refers to a cluster or namespace scoped resource.','line_number':155,'multiline':False]['text':' This may be set to "Cluster" (default) or "Namespace".','line_number':156,'multiline':False]['text':' namespace is the namespace of the resource being referenced. This field is','line_number':159,'multiline':False]['text':' required when scope is set to "Namespace" and must be unset when scope is set to','line_number':160,'multiline':False]['text':' "Cluster".','line_number':161,'multiline':False]['text':' +optional','line_number':162,'multiline':False]['text':' IngressClassSpec provides information about the class of an Ingress.','line_number':166,'multiline':False]['text':' controller refers to the name of the controller that should handle this','line_number':168,'multiline':False]['text':' class. This allows for different "flavors" that are controlled by the','line_number':169,'multiline':False]['text':' same controller. For example, you may have different parameters for the','line_number':170,'multiline':False]['text':' same implementing controller. This should be specified as a','line_number':171,'multiline':False]['text':' domain-prefixed path no more than 250 characters in length, e.g.','line_number':172,'multiline':False]['text':' "acme.io/ingress-controller". This field is immutable.','line_number':173,'multiline':False]['text':' parameters is a link to a custom resource containing additional','line_number':176,'multiline':False]['text':' configuration for the controller. This is optional if the controller does','line_number':177,'multiline':False]['text':' not require extra parameters.','line_number':178,'multiline':False]['text':' +optional','line_number':179,'multiline':False]['text':' IngressList is a collection of Ingress.','line_number':183,'multiline':False]['text':' Standard object's metadata.','line_number':185,'multiline':False]['text':' More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata','line_number':186,'multiline':False]['text':' +optional','line_number':187,'multiline':False]['text':' items is the list of Ingress.','line_number':190,'multiline':False]['text':' IngressLoadBalancerIngress represents the status of a load-balancer ingress point.','line_number':194,'multiline':False]['text':' ip is set for load-balancer ingress points that are IP based.','line_number':196,'multiline':False]['text':' +optional','line_number':197,'multiline':False]['text':' hostname is set for load-balancer ingress points that are DNS based.','line_number':200,'multiline':False]['text':' +optional','line_number':201,'multiline':False]['text':' ports provides information about the ports exposed by this LoadBalancer.','line_number':204,'multiline':False]['text':' +listType=atomic','line_number':205,'multiline':False]['text':' +optional','line_number':206,'multiline':False]['text':' LoadBalancerStatus represents the status of a load-balancer.','line_number':210,'multiline':False]['text':' ingress is a list containing ingress points for the load-balancer.','line_number':212,'multiline':False]['text':' +optional','line_number':213,'multiline':False]['text':' IngressPortStatus represents the error condition of a service port','line_number':217,'multiline':False]['text':' port is the port number of the ingress port.','line_number':219,'multiline':False]['text':' protocol is the protocol of the ingress port.','line_number':222,'multiline':False]['text':' The supported values are: "TCP", "UDP", "SCTP"','line_number':223,'multiline':False]['text':' error is to record the problem with the service port','line_number':226,'multiline':False]['text':' The format of the error shall comply with the following rules:','line_number':227,'multiline':False]['text':' - built-in error values shall be specified in this file and those shall use','line_number':228,'multiline':False]['text':'   CamelCase names','line_number':229,'multiline':False]['text':' - cloud provider specific error values must have names that comply with the','line_number':230,'multiline':False]['text':'   format foo.example.com/CamelCase.','line_number':231,'multiline':False]['text':' ---','line_number':232,'multiline':False]['text':' The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)','line_number':233,'multiline':False]['text':' +optional','line_number':234,'multiline':False]['text':' +kubebuilder:validation:Required','line_number':235,'multiline':False]['text':' +kubebuilder:validation:Pattern=`^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$`','line_number':236,'multiline':False]['text':' +kubebuilder:validation:MaxLength=316','line_number':237,'multiline':False]['text':' IngressRule represents the rules mapping the paths under a specified host to','line_number':241,'multiline':False]['text':' the related backend services. Incoming requests are first evaluated for a host','line_number':242,'multiline':False]['text':' match, then routed to the backend associated with the matching IngressRuleValue.','line_number':243,'multiline':False]['text':' host is the fully qualified domain name of a network host, as defined by RFC 3986.','line_number':245,'multiline':False]['text':' Note the following deviations from the "host" part of the','line_number':246,'multiline':False]['text':' URI as defined in RFC 3986:','line_number':247,'multiline':False]['text':' 1. IPs are not allowed. Currently an IngressRuleValue can only apply to','line_number':248,'multiline':False]['text':'    the IP in the Spec of the parent Ingress.','line_number':249,'multiline':False]['text':' 2. The `:` delimiter is not respected because ports are not allowed.','line_number':250,'multiline':False]['text':' 	  Currently the port of an Ingress is implicitly :80 for http and','line_number':251,'multiline':False]['text':' 	  :443 for https.','line_number':252,'multiline':False]['text':' Both these may change in the future.','line_number':253,'multiline':False]['text':' Incoming requests are matched against the host before the','line_number':254,'multiline':False]['text':' IngressRuleValue. If the host is unspecified, the Ingress routes all','line_number':255,'multiline':False]['text':' traffic based on the specified IngressRuleValue.','line_number':256,'multiline':False]['text':'','line_number':257,'multiline':False]['text':' host can be "precise" which is a domain name without the terminating dot of','line_number':258,'multiline':False]['text':' a network host (e.g. "foo.bar.com") or "wildcard", which is a domain name','line_number':259,'multiline':False]['text':' prefixed with a single wildcard label (e.g. "*.foo.com").','line_number':260,'multiline':False]['text':' The wildcard character '*' must appear by itself as the first DNS label and','line_number':261,'multiline':False]['text':' matches only a single label. You cannot have a wildcard label by itself (e.g. Host == "*").','line_number':262,'multiline':False]['text':' Requests will be matched against the Host field in the following way:','line_number':263,'multiline':False]['text':' 1. If Host is precise, the request matches this rule if the http host header is equal to Host.','line_number':264,'multiline':False]['text':' 2. If Host is a wildcard, then the request matches this rule if the http host header','line_number':265,'multiline':False]['text':' is to equal to the suffix (removing the first label) of the wildcard rule.','line_number':266,'multiline':False]['text':' +optional','line_number':267,'multiline':False]['text':' IngressRuleValue represents a rule to route requests for this IngressRule.','line_number':270,'multiline':False]['text':' If unspecified, the rule defaults to a http catch-all. Whether that sends','line_number':271,'multiline':False]['text':' just traffic matching the host to the default backend or all traffic to the','line_number':272,'multiline':False]['text':' default backend, is left to the controller fulfilling the Ingress. Http is','line_number':273,'multiline':False]['text':' currently the only supported IngressRuleValue.','line_number':274,'multiline':False]['text':' +optional','line_number':275,'multiline':False]['text':' IngressRuleValue represents a rule to apply against incoming requests. If the','line_number':279,'multiline':False]['text':' rule is satisfied, the request is routed to the specified backend. Currently','line_number':280,'multiline':False]['text':' mixing different types of rules in a single Ingress is disallowed, so exactly','line_number':281,'multiline':False]['text':' one of the following must be set.','line_number':282,'multiline':False]['text':' +optional','line_number':284,'multiline':False]['text':' IngressSpec describes the Ingress the user wishes to exist.','line_number':288,'multiline':False]['text':' ingressClassName is the name of the IngressClass cluster resource. The','line_number':290,'multiline':False]['text':' associated IngressClass defines which controller will implement the','line_number':291,'multiline':False]['text':' resource. This replaces the deprecated `kubernetes.io/ingress.class`','line_number':292,'multiline':False]['text':' annotation. For backwards compatibility, when that annotation is set, it','line_number':293,'multiline':False]['text':' must be given precedence over this field. The controller may emit a','line_number':294,'multiline':False]['text':' warning if the field and annotation have different values.','line_number':295,'multiline':False]['text':' Implementations of this API should ignore Ingresses without a class','line_number':296,'multiline':False]['text':' specified. An IngressClass resource may be marked as default, which can','line_number':297,'multiline':False]['text':' be used to set a default value for this field. For more information,','line_number':298,'multiline':False]['text':' refer to the IngressClass documentation.','line_number':299,'multiline':False]['text':' +optional','line_number':300,'multiline':False]['text':' backend is the default backend capable of servicing requests that don't match any','line_number':303,'multiline':False]['text':' rule. At least one of 'backend' or 'rules' must be specified. This field','line_number':304,'multiline':False]['text':' is optional to allow the loadbalancer controller or defaulting logic to','line_number':305,'multiline':False]['text':' specify a global default.','line_number':306,'multiline':False]['text':' +optional','line_number':307,'multiline':False]['text':' tls represents the TLS configuration. Currently the Ingress only supports a','line_number':310,'multiline':False]['text':' single TLS port, 443. If multiple members of this list specify different hosts,','line_number':311,'multiline':False]['text':' they will be multiplexed on the same port according to the hostname specified','line_number':312,'multiline':False]['text':' through the SNI TLS extension, if the ingress controller fulfilling the','line_number':313,'multiline':False]['text':' ingress supports SNI.','line_number':314,'multiline':False]['text':' +optional','line_number':315,'multiline':False]['text':' rules is a list of host rules used to configure the Ingress. If unspecified, or','line_number':318,'multiline':False]['text':' no rule matches, all traffic is sent to the default backend.','line_number':319,'multiline':False]['text':' +optional','line_number':320,'multiline':False]['text':' IngressStatus describes the current state of the Ingress.','line_number':324,'multiline':False]['text':' loadBalancer contains the current status of the load-balancer.','line_number':326,'multiline':False]['text':' +optional','line_number':327,'multiline':False]['text':' IngressTLS describes the transport layer security associated with an Ingress.','line_number':331,'multiline':False]['text':' hosts is a list of hosts included in the TLS certificate. The values in','line_number':333,'multiline':False]['text':' this list must match the name/s used in the tlsSecret. Defaults to the','line_number':334,'multiline':False]['text':' wildcard host setting for the loadbalancer controller fulfilling this','line_number':335,'multiline':False]['text':' Ingress, if left unspecified.','line_number':336,'multiline':False]['text':' +optional','line_number':337,'multiline':False]['text':' secretName is the name of the secret used to terminate TLS traffic on','line_number':340,'multiline':False]['text':' port 443. Field is left optional to allow TLS routing based on SNI','line_number':341,'multiline':False]['text':' hostname alone. If the SNI host in a listener conflicts with the "Host"','line_number':342,'multiline':False]['text':' header field used by an IngressRule, the SNI host is used for termination','line_number':343,'multiline':False]['text':' and value of the Host header is used for routing.','line_number':344,'multiline':False]['text':' +optional','line_number':345,'multiline':False]