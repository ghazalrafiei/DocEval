['text':'
Copyright 2019 The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
','line_number':1,'multiline':True]['text':' Should equal to final directory name of kubeMetricImportPath','line_number':36,'multiline':False]['text':' env configs','line_number':43,'multiline':False]['text':' Pass either only filename of existing file or src including source code in any format and a filename that it comes from','line_number':134,'multiline':False]['text':' parse directory path','line_number':206,'multiline':False]['text':' search k/k local checkout','line_number':209,'multiline':False]['text':' search k/k/staging local checkout','line_number':215,'multiline':False]['text':' not stdlib -> prefix with GOMODCACHE','line_number':218,'multiline':False]['text':' pathPrefix = strings.Join([]string{KUBE_ROOT, "vendor"}, string(os.PathSeparator))','line_number':219,'multiline':False]['text':'  this requires implementing SIV, skip for now','line_number':221,'multiline':False]['text':' stdlib -> prefix with GOROOT','line_number':224,'multiline':False]['text':' ToDo: support non go mod','line_number':226,'multiline':False]['text':' get imported label','line_number':236,'multiline':False]['text':' find local path on disk for listed import','line_number':245,'multiline':False]['text':' uncomment the below log line if you want to start using non k8s/non stl libs for resolving const/var in metric definitions','line_number':248,'multiline':False]['text':' fmt.Fprint(os.Stderr, err.Error() + "\n")','line_number':249,'multiline':False]['text':' do not grab constants from subpackages','line_number':261,'multiline':False]['text':' do not parse test files','line_number':266,'multiline':False]['text':' not a go code file, do not attempt to parse','line_number':271,'multiline':False]['text':' pass parsed filepath into globalVariableDeclarations','line_number':281,'multiline':False]['text':' add returned map into supplied map and prepend import label to all keys','line_number':284,'multiline':False]['text':' cross-platform file that gets included in the correct OS build via OS build tags','line_number':290,'multiline':False]['text':' use whatever matches GOOS','line_number':291,'multiline':False]['text':' assume at some point we will find the correct OS version of this file','line_number':294,'multiline':False]['text':' if we are running on an OS that does not have an OS specific file for something then we will include a constant we shouldn't','line_number':295,'multiline':False]['text':' TODO: should we include/exclude based on the build tags?','line_number':296,'multiline':False]