['text':'!/usr/bin/env bash','line_number':1,'multiline':False]['text':' Copyright 2018 The Kubernetes Authors.','line_number':3,'multiline':False]['text':'','line_number':4,'multiline':False]['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':5,'multiline':False]['text':' you may not use this file except in compliance with the License.','line_number':6,'multiline':False]['text':' You may obtain a copy of the License at','line_number':7,'multiline':False]['text':'','line_number':8,'multiline':False]['text':'     http://www.apache.org/licenses/LICENSE-2.0','line_number':9,'multiline':False]['text':'','line_number':10,'multiline':False]['text':' Unless required by applicable law or agreed to in writing, software','line_number':11,'multiline':False]['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':12,'multiline':False]['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':13,'multiline':False]['text':' See the License for the specific language governing permissions and','line_number':14,'multiline':False]['text':' limitations under the License.','line_number':15,'multiline':False]['text':'## Create a rolling update DaemonSet','line_number':28,'multiline':False]['text':' Pre-condition: no DaemonSet exists','line_number':29,'multiline':False]['text':' Command','line_number':31,'multiline':False]['text':' Template Generation should be 1','line_number':33,'multiline':False]['text':' Template Generation should stay 1','line_number':36,'multiline':False]['text':' Test set commands','line_number':38,'multiline':False]['text':' pod has field for kubectl set field manager','line_number':45,'multiline':False]['text':' Describe command should respect the chunk size parameter','line_number':48,'multiline':False]['text':' Rollout restart should change generation','line_number':51,'multiline':False]['text':' Clean up','line_number':55,'multiline':False]['text':'## Test rolling back a DaemonSet','line_number':69,'multiline':False]['text':' Pre-condition: no DaemonSet or its pods exists','line_number':70,'multiline':False]['text':' Command','line_number':72,'multiline':False]['text':' Create a DaemonSet (revision 1)','line_number':73,'multiline':False]['text':' Rollback to revision 1 - should be no-op','line_number':76,'multiline':False]['text':' Update the DaemonSet (revision 2)','line_number':80,'multiline':False]['text':' Get rollout history','line_number':86,'multiline':False]['text':' Get rollout history for a single revision','line_number':92,'multiline':False]['text':' Get rollout history for a different single revision','line_number':97,'multiline':False]['text':' Rollback to revision 1 with dry-run - should be no-op','line_number':103,'multiline':False]['text':' Rollback to revision 1','line_number':109,'multiline':False]['text':' Get rollout history','line_number':113,'multiline':False]['text':' Rollback to revision 1000000 - should fail','line_number':119,'multiline':False]['text':' Rollback to last revision','line_number':124,'multiline':False]['text':' Get rollout history','line_number':129,'multiline':False]['text':' Clean up','line_number':135,'multiline':False]['text':'# kubectl apply should propagate user defined null values','line_number':148,'multiline':False]['text':' Pre-Condition: no Deployments, ReplicaSets, Pods exist','line_number':149,'multiline':False]['text':' apply base deployment','line_number':153,'multiline':False]['text':' check right deployment exists','line_number':155,'multiline':False]['text':' check right labels exists','line_number':157,'multiline':False]['text':' apply new deployment with new template labels','line_number':162,'multiline':False]['text':' check right labels exists','line_number':164,'multiline':False]['text':' cleanup','line_number':169,'multiline':False]['text':' need to explicitly remove replicasets and pods because we changed the deployment selector and orphaned things','line_number':170,'multiline':False]['text':' Post-Condition: no Deployments, ReplicaSets, Pods exist','line_number':172,'multiline':False]['text':' kubectl apply deployment --overwrite=true --force=true','line_number':177,'multiline':False]['text':' Pre-Condition: no deployment exists','line_number':178,'multiline':False]['text':' apply deployment nginx','line_number':180,'multiline':False]['text':' check right deployment exists','line_number':182,'multiline':False]['text':' apply deployment with new labels and a conflicting resourceVersion','line_number':184,'multiline':False]['text':' apply deployment with --force and --overwrite will succeed','line_number':187,'multiline':False]['text':' check the changed deployment','line_number':189,'multiline':False]['text':' applying a resource (with --force) that is both conflicting and invalid will','line_number':192,'multiline':False]['text':' cause the server to only return a "Conflict" error when we attempt to patch.','line_number':193,'multiline':False]['text':' This means that we will delete the existing resource after receiving 5 conflict','line_number':194,'multiline':False]['text':' errors in a row from the server, and will attempt to create the modified','line_number':195,'multiline':False]['text':' resource that we are passing to "apply". Since the modified resource is also','line_number':196,'multiline':False]['text':' invalid, we will receive an invalid error when we attempt to create it, after','line_number':197,'multiline':False]['text':' having deleted the old resource. Ensure that when this case is reached, the','line_number':198,'multiline':False]['text':' old resource is restored once again, and the validation error is printed.','line_number':199,'multiline':False]['text':' Ensure that the old object has been restored','line_number':202,'multiline':False]['text':' cleanup','line_number':204,'multiline':False]['text':' Test kubectl create deployment (using default - old generator)','line_number':217,'multiline':False]['text':' Post-Condition: Deployment "nginx" is created.','line_number':219,'multiline':False]['text':' and old generator was used, iow. old defaults are applied','line_number':221,'multiline':False]['text':' Ensure we can interact with deployments through apps endpoints','line_number':224,'multiline':False]['text':' Clean up','line_number':227,'multiline':False]['text':' Test kubectl create deployment','line_number':230,'multiline':False]['text':' Post-Condition: Deployment "nginx" is created.','line_number':232,'multiline':False]['text':' and new generator was used, iow. new defaults are applied','line_number':234,'multiline':False]['text':' Ensure we can interact with deployments through apps endpoints','line_number':237,'multiline':False]['text':' Describe command (resource only) should print detailed information','line_number':240,'multiline':False]['text':' Describe command (resource only) should print detailed information','line_number':242,'multiline':False]['text':' Describe command should respect the chunk size parameter','line_number':244,'multiline':False]['text':' Clean up','line_number':246,'multiline':False]['text':'## Test kubectl create deployment with image and command','line_number':249,'multiline':False]['text':' Pre-Condition: No deployment exists.','line_number':250,'multiline':False]['text':' Dry-run command','line_number':252,'multiline':False]['text':' Command','line_number':256,'multiline':False]['text':' Post-Condition: Deployment "nginx" is created.','line_number':258,'multiline':False]['text':' Clean up','line_number':260,'multiline':False]['text':'## Test kubectl create deployment should not fail validation','line_number':263,'multiline':False]['text':' Pre-Condition: No deployment exists.','line_number':264,'multiline':False]['text':' Command','line_number':266,'multiline':False]['text':' Post-Condition: Deployment "deployment-with-unixuserid" is created.','line_number':268,'multiline':False]['text':' Clean up','line_number':270,'multiline':False]['text':'## Test cascading deletion','line_number':273,'multiline':False]['text':'# Test that rs is deleted when deployment is deleted.','line_number':274,'multiline':False]['text':' Pre-condition: no deployment exists','line_number':275,'multiline':False]['text':' Create deployment','line_number':277,'multiline':False]['text':' Wait for rs to come up.','line_number':279,'multiline':False]['text':' Deleting the deployment should delete the rs.','line_number':281,'multiline':False]['text':' using empty value in cascade flag to make sure the backward compatibility.','line_number':282,'multiline':False]['text':'# Test that rs is not deleted when deployment is deleted with cascading strategy set to orphan.','line_number':286,'multiline':False]['text':' Pre-condition: no deployment and rs exist','line_number':287,'multiline':False]['text':' Create deployment','line_number':290,'multiline':False]['text':' Wait for rs to come up.','line_number':292,'multiline':False]['text':' Delete the deployment with cascading strategy set to orphan.','line_number':294,'multiline':False]['text':' Wait for the deployment to be deleted and then verify that rs is not','line_number':296,'multiline':False]['text':' deleted.','line_number':297,'multiline':False]['text':' Cleanup','line_number':300,'multiline':False]['text':' Find the name of the rs to be deleted.','line_number':301,'multiline':False]['text':'## Auto scale deployment','line_number':305,'multiline':False]['text':' Pre-condition: no deployment exists','line_number':306,'multiline':False]['text':' Pre-condition: no hpa exists','line_number':308,'multiline':False]['text':' Command','line_number':310,'multiline':False]['text':' Dry-run autoscale','line_number':313,'multiline':False]['text':' autoscale 2~3 pods, no CPU utilization specified','line_number':317,'multiline':False]['text':' Describe command should respect the chunk size parameter','line_number':320,'multiline':False]['text':' Clean up','line_number':322,'multiline':False]['text':' Note that we should delete hpa first, otherwise it may fight with the deployment reaper.','line_number':323,'multiline':False]['text':'## Rollback a deployment','line_number':327,'multiline':False]['text':' Pre-condition: no deployment exists','line_number':328,'multiline':False]['text':' Command','line_number':330,'multiline':False]['text':' Create a deployment (revision 1)','line_number':331,'multiline':False]['text':' Rollback to revision 1 - should be no-op','line_number':335,'multiline':False]['text':' Update the deployment (revision 2)','line_number':338,'multiline':False]['text':' Rollback to revision 1 with dry-run - should be no-op','line_number':341,'multiline':False]['text':' Rollback to revision 1','line_number':345,'multiline':False]['text':' Rollback to revision 1000000 - should be no-op','line_number':349,'multiline':False]['text':' Rollback to last revision','line_number':352,'multiline':False]['text':' Pause the deployment','line_number':356,'multiline':False]['text':' A paused deployment cannot be rolled back','line_number':358,'multiline':False]['text':' A paused deployment cannot be restarted','line_number':360,'multiline':False]['text':' Resume the deployment','line_number':362,'multiline':False]['text':' The resumed deployment can now be rolled back','line_number':364,'multiline':False]['text':' Check that the new replica set has all old revisions stored in an annotation','line_number':366,'multiline':False]['text':' Check that trying to watch the status of a superseded revision returns an error','line_number':369,'multiline':False]['text':' Restarting the deployment creates a new replicaset','line_number':371,'multiline':False]['text':' Deployment has field for kubectl rollout field manager','line_number':377,'multiline':False]['text':' Create second deployment','line_number':380,'multiline':False]['text':' Deletion of both deployments should not be blocked','line_number':382,'multiline':False]['text':' Clean up','line_number':384,'multiline':False]['text':'## Set image of a deployment','line_number':387,'multiline':False]['text':' Pre-condition: no deployment exists','line_number':388,'multiline':False]['text':' Create a deployment','line_number':390,'multiline':False]['text':' Dry-run set the deployment's image','line_number':395,'multiline':False]['text':' Set the deployment's image','line_number':400,'multiline':False]['text':' Set non-existing container should fail','line_number':404,'multiline':False]['text':' Set image of deployments without specifying name','line_number':406,'multiline':False]['text':' Set image of a deployment specified by file','line_number':410,'multiline':False]['text':' Set image of a local file without talking to the server','line_number':414,'multiline':False]['text':' Set image of all containers of the deployment','line_number':418,'multiline':False]['text':' Set image of all containers of the deployment again when image not change','line_number':422,'multiline':False]['text':' Clean up','line_number':426,'multiline':False]['text':'## Set env of a deployment','line_number':429,'multiline':False]['text':' Pre-condition: no deployment exists','line_number':430,'multiline':False]['text':' Create a deployment','line_number':432,'multiline':False]['text':'configmap is special here due to controller will create kube-root-ca.crt for each namespace automatically','line_number':437,'multiline':False]['text':' Set env of deployments by configmap from keys','line_number':440,'multiline':False]['text':' Assert correct value in deployment env','line_number':442,'multiline':False]['text':' Assert single value in deployment env','line_number':444,'multiline':False]['text':' Dry-run set env','line_number':446,'multiline':False]['text':' Set env of deployments by configmap','line_number':450,'multiline':False]['text':' Assert all values in deployment env','line_number':452,'multiline':False]['text':' Set env of deployments for all container','line_number':454,'multiline':False]['text':' Set env of deployments for specific container','line_number':456,'multiline':False]['text':' Set env of deployments by secret from keys','line_number':458,'multiline':False]['text':' Set env of deployments by secret','line_number':460,'multiline':False]['text':' Remove specific env of deployment','line_number':462,'multiline':False]['text':' Assert that we cannot use standard input for both resource and environment variable','line_number':464,'multiline':False]['text':' Clean up','line_number':467,'multiline':False]['text':'## Get rollout history','line_number':472,'multiline':False]['text':' Pre-condition: no deployment exists','line_number':473,'multiline':False]['text':' Create a deployment','line_number':475,'multiline':False]['text':' Set the deployment's image','line_number':480,'multiline':False]['text':' Get rollout history','line_number':484,'multiline':False]['text':' Get rollout history for a single revision','line_number':491,'multiline':False]['text':' Get rollout history for a different single revision','line_number':497,'multiline':False]['text':' Clean up','line_number':503,'multiline':False]['text':'## Test rolling back a StatefulSet','line_number':517,'multiline':False]['text':' Pre-condition: no statefulset or its pods exists','line_number':518,'multiline':False]['text':' Command','line_number':520,'multiline':False]['text':' Create a StatefulSet (revision 1)','line_number':521,'multiline':False]['text':' Rollback to revision 1 - should be no-op','line_number':524,'multiline':False]['text':' Update the statefulset (revision 2)','line_number':528,'multiline':False]['text':' Get rollout history','line_number':534,'multiline':False]['text':' Get rollout history for a single revision','line_number':540,'multiline':False]['text':' Get rollout history for a different single revision','line_number':545,'multiline':False]['text':' Rollback to revision 1 with dry-run - should be no-op','line_number':551,'multiline':False]['text':' Rollback to revision 1','line_number':557,'multiline':False]['text':' Get rollout history','line_number':561,'multiline':False]['text':' Rollback to revision 1000000 - should fail','line_number':567,'multiline':False]['text':' Rollback to last revision','line_number':572,'multiline':False]['text':' Get rollout history','line_number':577,'multiline':False]['text':' Clean up - delete newest configuration','line_number':583,'multiline':False]['text':' Post-condition: no pods from statefulset controller','line_number':585,'multiline':False]['text':'## Create and stop statefulset, make sure it doesn't leak pods','line_number':599,'multiline':False]['text':' Pre-condition: no statefulset exists','line_number':600,'multiline':False]['text':' Command: create statefulset','line_number':602,'multiline':False]['text':' Describe command should respect the chunk size parameter','line_number':605,'multiline':False]['text':'## Scale statefulset test with current-replicas and replicas','line_number':608,'multiline':False]['text':' Pre-condition: 0 replicas','line_number':609,'multiline':False]['text':' Command: Scale up','line_number':612,'multiline':False]['text':' Post-condition: 1 replica, named nginx-0','line_number':614,'multiline':False]['text':' Typically we'd wait and confirm that N>1 replicas are up, but this framework','line_number':617,'multiline':False]['text':' doesn't start  the scheduler, so pet-0 will block all others.','line_number':618,'multiline':False]['text':' TODO: test robust scaling in an e2e.','line_number':619,'multiline':False]['text':' Rollout restart should change generation','line_number':622,'multiline':False]['text':'## Clean up','line_number':626,'multiline':False]['text':' Post-condition: no pods from statefulset controller','line_number':628,'multiline':False]['text':'## Create and stop a replica set, make sure it doesn't leak pods','line_number':643,'multiline':False]['text':' Pre-condition: no replica set exists','line_number':644,'multiline':False]['text':' Command','line_number':646,'multiline':False]['text':' Post-condition: no pods from frontend replica set','line_number':650,'multiline':False]['text':'## Create and then delete a replica set with cascading strategy set to orphan, make sure it doesn't delete pods.','line_number':653,'multiline':False]['text':' Pre-condition: no replica set exists','line_number':654,'multiline':False]['text':' Command','line_number':656,'multiline':False]['text':' wait for all 3 pods to be set up','line_number':658,'multiline':False]['text':' Wait for the rs to be deleted.','line_number':662,'multiline':False]['text':' Post-condition: All 3 pods still remain from frontend replica set','line_number':664,'multiline':False]['text':' Cleanup','line_number':666,'multiline':False]['text':'## Create replica set frontend from YAML','line_number':670,'multiline':False]['text':' Pre-condition: no replica set exists','line_number':671,'multiline':False]['text':' Command','line_number':673,'multiline':False]['text':' Post-condition: frontend replica set is created','line_number':675,'multiline':False]['text':' Describe command should print detailed information','line_number':677,'multiline':False]['text':' Describe command should print events information by default','line_number':679,'multiline':False]['text':' Describe command should not print events information when show-events=false','line_number':681,'multiline':False]['text':' Describe command should print events information when show-events=true','line_number':683,'multiline':False]['text':' Describe command (resource only) should print detailed information','line_number':685,'multiline':False]['text':' Describe command should print events information by default','line_number':687,'multiline':False]['text':' Describe command should not print events information when show-events=false','line_number':689,'multiline':False]['text':' Describe command should print events information when show-events=true','line_number':691,'multiline':False]['text':' Describe command (resource only) should print detailed information','line_number':693,'multiline':False]['text':' Describe command should respect the chunk size parameter','line_number':695,'multiline':False]['text':'## Scale replica set frontend with current-replicas and replicas','line_number':698,'multiline':False]['text':' Pre-condition: 3 replicas','line_number':699,'multiline':False]['text':' Dry-run Command','line_number':701,'multiline':False]['text':' Command','line_number':705,'multiline':False]['text':' Post-condition: 2 replicas','line_number':707,'multiline':False]['text':' Set up three deploy, two deploy have same label','line_number':710,'multiline':False]['text':' Test kubectl scale --all with dry run','line_number':717,'multiline':False]['text':' Test kubectl scale --selector','line_number':723,'multiline':False]['text':' Test kubectl scale --all','line_number':728,'multiline':False]['text':' Clean-up','line_number':733,'multiline':False]['text':'## Expose replica set as service','line_number':737,'multiline':False]['text':' Pre-condition: 3 replicas','line_number':739,'multiline':False]['text':' Command','line_number':741,'multiline':False]['text':' Post-condition: service exists and the port is unnamed','line_number':743,'multiline':False]['text':' Cleanup services','line_number':745,'multiline':False]['text':' Test set commands','line_number':748,'multiline':False]['text':' Pre-condition: frontend replica set exists at generation 1','line_number':749,'multiline':False]['text':' RS has field for kubectl set field manager','line_number':766,'multiline':False]['text':'## Delete replica set with id','line_number':770,'multiline':False]['text':' Pre-condition: frontend replica set exists','line_number':771,'multiline':False]['text':' Command','line_number':773,'multiline':False]['text':' Post-condition: no replica set exists','line_number':775,'multiline':False]['text':'## Create two replica sets','line_number':778,'multiline':False]['text':' Pre-condition: no replica set exists','line_number':779,'multiline':False]['text':' Command','line_number':781,'multiline':False]['text':' Post-condition: frontend and redis-slave','line_number':784,'multiline':False]['text':'## Delete multiple replica sets at once','line_number':787,'multiline':False]['text':' Pre-condition: frontend and redis-slave','line_number':788,'multiline':False]['text':' Command','line_number':790,'multiline':False]['text':' delete multiple replica sets at once','line_number':791,'multiline':False]['text':' Post-condition: no replica set exists','line_number':792,'multiline':False]['text':'## Auto scale replica set','line_number':796,'multiline':False]['text':' Pre-condition: no replica set exists','line_number':797,'multiline':False]['text':' Command','line_number':799,'multiline':False]['text':' autoscale 1~2 pods, CPU utilization 70%, replica set specified by file','line_number':802,'multiline':False]['text':' autoscale 2~3 pods, no CPU utilization specified, replica set specified by name','line_number':806,'multiline':False]['text':' HorizontalPodAutoscaler has field for kubectl autoscale field manager','line_number':809,'multiline':False]['text':' Clean up','line_number':812,'multiline':False]['text':' autoscale without specifying --max should fail','line_number':814,'multiline':False]['text':' Clean up','line_number':816,'multiline':False]