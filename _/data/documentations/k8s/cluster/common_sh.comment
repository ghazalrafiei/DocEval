['text':'!/usr/bin/env bash','line_number':1,'multiline':False]['text':' Copyright 2017 The Kubernetes Authors.','line_number':3,'multiline':False]['text':'','line_number':4,'multiline':False]['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':5,'multiline':False]['text':' you may not use this file except in compliance with the License.','line_number':6,'multiline':False]['text':' You may obtain a copy of the License at','line_number':7,'multiline':False]['text':'','line_number':8,'multiline':False]['text':'     http://www.apache.org/licenses/LICENSE-2.0','line_number':9,'multiline':False]['text':'','line_number':10,'multiline':False]['text':' Unless required by applicable law or agreed to in writing, software','line_number':11,'multiline':False]['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':12,'multiline':False]['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':13,'multiline':False]['text':' See the License for the specific language governing permissions and','line_number':14,'multiline':False]['text':' limitations under the License.','line_number':15,'multiline':False]['text':' Common utilities for kube-up/kube-down','line_number':17,'multiline':False]['text':' KUBE_RELEASE_VERSION_REGEX matches things like "v1.2.3" or "v1.2.3-alpha.4"','line_number':28,'multiline':False]['text':'','line_number':29,'multiline':False]['text':' NOTE This must match the version_regex in build/common.sh','line_number':30,'multiline':False]['text':' kube::release::parse_and_validate_release_version()','line_number':31,'multiline':False]['text':'','line_number':32,'multiline':False]['text':' KUBE_RELEASE_VERSION_REGEX is used in hack/get-build.sh and cluster/gce/util.sh and KUBE_RELEASE_VERSION_DASHED_REGEX is used in cluster/gce/util.sh,','line_number':33,'multiline':False]['text':' make sure to remove these vars when not used anymore','line_number':34,'multiline':False]['text':' KUBE_CI_VERSION_REGEX matches things like "v1.2.3-alpha.4.56+abcdefg" and "v1.2.3-56+abcdefg"','line_number':38,'multiline':False]['text':'','line_number':39,'multiline':False]['text':' NOTE This must match the version_regex in build/common.sh','line_number':40,'multiline':False]['text':'','line_number':41,'multiline':False]['text':' TODO: KUBE_CI_VERSION_REGEX is used in hack/get-build.sh and KUBE_CI_VERSION_DASHED_REGEX is used in cluster/gce/util.sh,','line_number':42,'multiline':False]['text':' make sure to remove these vars when not used anymore','line_number':43,'multiline':False]['text':'                              v1                .26               .0              -(rc            .0                .)?1              (  +014f      )?','line_number':44,'multiline':False]['text':' Generate kubeconfig data for the created cluster.','line_number':48,'multiline':False]['text':' Assumed vars:','line_number':49,'multiline':False]['text':'   KUBE_USER','line_number':50,'multiline':False]['text':'   KUBE_PASSWORD','line_number':51,'multiline':False]['text':'   KUBE_MASTER_IP','line_number':52,'multiline':False]['text':'   KUBECONFIG','line_number':53,'multiline':False]['text':'   CONTEXT','line_number':54,'multiline':False]['text':'','line_number':55,'multiline':False]['text':' If the apiserver supports bearer auth, also provide:','line_number':56,'multiline':False]['text':'   KUBE_BEARER_TOKEN','line_number':57,'multiline':False]['text':'','line_number':58,'multiline':False]['text':' If the kubeconfig context being created should NOT be set as the current context','line_number':59,'multiline':False]['text':' SECONDARY_KUBECONFIG=true','line_number':60,'multiline':False]['text':'','line_number':61,'multiline':False]['text':' To explicitly name the context being created, use OVERRIDE_CONTEXT','line_number':62,'multiline':False]['text':'','line_number':63,'multiline':False]['text':' The following can be omitted for --insecure-skip-tls-verify','line_number':64,'multiline':False]['text':'   KUBE_CERT','line_number':65,'multiline':False]['text':'   KUBE_KEY','line_number':66,'multiline':False]['text':'   CA_CERT','line_number':67,'multiline':False]['text':' KUBECONFIG determines the file we write to, but it may not exist yet','line_number':78,'multiline':False]['text':' If we have a bearer token, also create a credential entry with basic auth','line_number':130,'multiline':False]['text':' so that it is easy to discover the basic auth password for your cluster','line_number':131,'multiline':False]['text':' to use in a web browser.','line_number':132,'multiline':False]['text':' Clear kubeconfig data for a context','line_number':140,'multiline':False]['text':' Assumed vars:','line_number':141,'multiline':False]['text':'   KUBECONFIG','line_number':142,'multiline':False]['text':'   CONTEXT','line_number':143,'multiline':False]['text':'','line_number':144,'multiline':False]['text':' To explicitly name the context being removed, use OVERRIDE_CONTEXT','line_number':145,'multiline':False]['text':' Unset the current-context before we delete it, as otherwise kubectl errors.','line_number':155,'multiline':False]['text':' Gets username, password for the current-context in kubeconfig, if they exist.','line_number':169,'multiline':False]['text':' Assumed vars:','line_number':170,'multiline':False]['text':'   KUBECONFIG  # if unset, defaults to global','line_number':171,'multiline':False]['text':'   KUBE_CONTEXT  # if unset, defaults to current-context','line_number':172,'multiline':False]['text':'','line_number':173,'multiline':False]['text':' Vars set:','line_number':174,'multiline':False]['text':'   KUBE_USER','line_number':175,'multiline':False]['text':'   KUBE_PASSWORD','line_number':176,'multiline':False]['text':'','line_number':177,'multiline':False]['text':' KUBE_USER,KUBE_PASSWORD will be empty if no current-context is set, or','line_number':178,'multiline':False]['text':' the current-context user does not exist or contain basicauth entries.','line_number':179,'multiline':False]['text':' kube-up stores username/password in a an additional kubeconfig section','line_number':193,'multiline':False]['text':' suffixed with "-basic-auth". Cloudproviders like GKE store in directly','line_number':194,'multiline':False]['text':' in the top level section along with the other credential information.','line_number':195,'multiline':False]['text':' TODO: Handle this uniformly, either get rid of "basic-auth" or','line_number':196,'multiline':False]['text':' consolidate its usage into a function across scripts in cluster/','line_number':197,'multiline':False]['text':' Sets KUBE_USER and KUBE_PASSWORD to the username and password specified in','line_number':202,'multiline':False]['text':' the kubeconfig section corresponding to $1.','line_number':203,'multiline':False]['text':'','line_number':204,'multiline':False]['text':' Args:','line_number':205,'multiline':False]['text':'   $1 kubeconfig section to look for basic auth (eg: user or user-basic-auth).','line_number':206,'multiline':False]['text':' Assumed vars:','line_number':207,'multiline':False]['text':'   KUBE_ROOT','line_number':208,'multiline':False]['text':' Vars set:','line_number':209,'multiline':False]['text':'   KUBE_USER','line_number':210,'multiline':False]['text':'   KUBE_PASSWORD','line_number':211,'multiline':False]['text':' Generate basic auth user and password.','line_number':217,'multiline':False]['text':' Vars set:','line_number':219,'multiline':False]['text':'   KUBE_USER','line_number':220,'multiline':False]['text':'   KUBE_PASSWORD','line_number':221,'multiline':False]['text':' Get the bearer token for the current-context in kubeconfig if one exists.','line_number':227,'multiline':False]['text':' Assumed vars:','line_number':228,'multiline':False]['text':'   KUBECONFIG  # if unset, defaults to global','line_number':229,'multiline':False]['text':'   KUBE_CONTEXT  # if unset, defaults to current-context','line_number':230,'multiline':False]['text':'','line_number':231,'multiline':False]['text':' Vars set:','line_number':232,'multiline':False]['text':'   KUBE_BEARER_TOKEN','line_number':233,'multiline':False]['text':'','line_number':234,'multiline':False]['text':' KUBE_BEARER_TOKEN will be empty if no current-context is set, or the','line_number':235,'multiline':False]['text':' current-context user does not exist or contain a bearer token entry.','line_number':236,'multiline':False]['text':' Generate bearer token.','line_number':250,'multiline':False]['text':'','line_number':251,'multiline':False]['text':' Vars set:','line_number':252,'multiline':False]['text':'   KUBE_BEARER_TOKEN','line_number':253,'multiline':False]['text':' Make sure they don't contain any funny characters.','line_number':267,'multiline':False]['text':'%/a-zA-Z0-9]+$ ]]; then','line_number':272,'multiline':False]['text':' Sets KUBE_VERSION variable to the proper version number (e.g. "v1.0.6",','line_number':278,'multiline':False]['text':' "v1.2.0-alpha.1.881+376438b69c7612") or a version' publication of the form','line_number':279,'multiline':False]['text':' <path>/<version> (e.g. "release/stable",' "ci/latest-1").','line_number':280,'multiline':False]['text':'','line_number':281,'multiline':False]['text':' See the docs on getting builds for more information about version','line_number':282,'multiline':False]['text':' publication.','line_number':283,'multiline':False]['text':'','line_number':284,'multiline':False]['text':' Args:','line_number':285,'multiline':False]['text':'   $1 version string from command line','line_number':286,'multiline':False]['text':' Vars set and exported for external reference:','line_number':287,'multiline':False]['text':'   KUBE_VERSION','line_number':288,'multiline':False]['text':' Search for the specified tarball in the various known output locations,','line_number':298,'multiline':False]['text':' echoing the location if found.','line_number':299,'multiline':False]['text':'','line_number':300,'multiline':False]['text':' Assumed vars:','line_number':301,'multiline':False]['text':'   KUBE_ROOT','line_number':302,'multiline':False]['text':'','line_number':303,'multiline':False]['text':' Args:','line_number':304,'multiline':False]['text':'   $1 name of tarball to search for','line_number':305,'multiline':False]['text':' Verify and find the various tar files that we are going to use on the server.','line_number':322,'multiline':False]['text':'','line_number':323,'multiline':False]['text':' Assumed vars:','line_number':324,'multiline':False]['text':'   KUBE_ROOT','line_number':325,'multiline':False]['text':' Vars set and exported:','line_number':326,'multiline':False]['text':'   NODE_BINARY_TAR','line_number':327,'multiline':False]['text':'   SERVER_BINARY_TAR','line_number':328,'multiline':False]['text':'   KUBE_MANIFESTS_TAR','line_number':329,'multiline':False]['text':' Use first item in KUBE_BUILD_PLATFORMS as server platform','line_number':331,'multiline':False]['text':' This tarball is used by GCI, Ubuntu Trusty, and Container Linux.','line_number':352,'multiline':False]['text':' the function result is used in function `verify-release-tars`','line_number':364,'multiline':False]['text':' Run the cfssl command to generates certificate files for etcd service, the','line_number':372,'multiline':False]['text':' certificate files will save in $1 directory.','line_number':373,'multiline':False]['text':'','line_number':374,'multiline':False]['text':' Optional vars:','line_number':375,'multiline':False]['text':'   GEN_ETCD_CA_CERT (CA cert encode with base64 and ZIP compression)','line_number':376,'multiline':False]['text':'   GEN_ETCD_CA_KEY (CA key encode with base64)','line_number':377,'multiline':False]['text':'   ca_cert (require when GEN_ETCD_CA_CERT and GEN_ETCD_CA_KEY is set)','line_number':378,'multiline':False]['text':'   ca_key (require when GEN_ETCD_CA_CERT and GEN_ETCD_CA_KEY is set)','line_number':379,'multiline':False]['text':' If GEN_ETCD_CA_CERT or GEN_ETCD_CA_KEY is not specified, it will generates certs for CA.','line_number':380,'multiline':False]['text':'','line_number':381,'multiline':False]['text':' Args:','line_number':382,'multiline':False]['text':'   $1 (the directory that certificate files to save)','line_number':383,'multiline':False]['text':'   $2 (the ip of etcd member)','line_number':384,'multiline':False]['text':'   $3 (the type of etcd certificates, must be one of client, server, peer)','line_number':385,'multiline':False]['text':'   $4 (the prefix of the certificate filename, default is $3)','line_number':386,'multiline':False]['text':' ca_cert and ca_key are optional external vars supplied in cluster/gce/util.sh,','line_number':461,'multiline':False]['text':' so it's ok to disable shellcheck here','line_number':462,'multiline':False]['text':' shellcheck disable=SC2154','line_number':463,'multiline':False]['text':' shellcheck disable=SC2154','line_number':465,'multiline':False]['text':' the popd will access `directory stack`, no `real` parameters is actually needed','line_number':498,'multiline':False]['text':' shellcheck disable=SC2119','line_number':499,'multiline':False]['text':' Check whether required binaries exist, prompting to download','line_number':503,'multiline':False]['text':' if missing.','line_number':504,'multiline':False]['text':' If KUBERNETES_SKIP_CONFIRM is set to y, we'll automatically download binaries','line_number':505,'multiline':False]['text':' without prompting.','line_number':506,'multiline':False]['text':' Check whether required release artifacts exist, prompting to download','line_number':514,'multiline':False]['text':' if missing.','line_number':515,'multiline':False]['text':' If KUBERNETES_SKIP_CONFIRM is set to y, we'll automatically download binaries','line_number':516,'multiline':False]['text':' without prompting.','line_number':517,'multiline':False]['text':' Download release artifacts.','line_number':524,'multiline':False]['text':' Run pushd without stack output','line_number':541,'multiline':False]['text':' Run popd without stack output','line_number':546,'multiline':False]['text':' the popd will access `directory stack`, no `real` parameters is actually needed','line_number':547,'multiline':False]['text':' shellcheck disable=SC2120','line_number':548,'multiline':False]