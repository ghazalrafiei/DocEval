['text':'!/usr/bin/env bash','line_number':1,'multiline':False]['text':' Copyright 2019 The Kubernetes Authors.','line_number':3,'multiline':False]['text':'','line_number':4,'multiline':False]['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':5,'multiline':False]['text':' you may not use this file except in compliance with the License.','line_number':6,'multiline':False]['text':' You may obtain a copy of the License at','line_number':7,'multiline':False]['text':'','line_number':8,'multiline':False]['text':'     http://www.apache.org/licenses/LICENSE-2.0','line_number':9,'multiline':False]['text':'','line_number':10,'multiline':False]['text':' Unless required by applicable law or agreed to in writing, software','line_number':11,'multiline':False]['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':12,'multiline':False]['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':13,'multiline':False]['text':' See the License for the specific language governing permissions and','line_number':14,'multiline':False]['text':' limitations under the License.','line_number':15,'multiline':False]['text':' Go tools really don't like it if you have a symlink in `pwd`.','line_number':21,'multiline':False]['text':' Explicitly opt into go modules, even though we're inside a GOPATH directory','line_number':27,'multiline':False]['text':' Explicitly set GOFLAGS to ignore vendor, since GOFLAGS=-mod=vendor breaks dependency resolution while rebuilding vendor','line_number':29,'multiline':False]['text':' Ensure sort order doesn't depend on locale','line_number':31,'multiline':False]['text':' Detect problematic GOPROXY settings that prevent lookup of dependencies','line_number':34,'multiline':False]['text':' Set up some FDs for this script to use, while capturing everything else to','line_number':47,'multiline':False]['text':' the log. NOTHING ELSE should write to $LOG_FILE directly.','line_number':48,'multiline':False]['text':' Real stdout, use this explicitly','line_number':49,'multiline':False]['text':' Real stderr, use this explicitly','line_number':50,'multiline':False]['text':' Automatic stdout','line_number':51,'multiline':False]['text':' Automatic stderr','line_number':52,'multiline':False]['text':' Trace this script to stderr','line_number':53,'multiline':False]['text':' ensure_require_replace_directives_for_all_dependencies:','line_number':64,'multiline':False]['text':' - ensures all existing 'require' directives have an associated 'replace' directive pinning a version','line_number':65,'multiline':False]['text':' - adds explicit 'require' directives for all transitive dependencies','line_number':66,'multiline':False]['text':' - adds explicit 'replace' directives for all require directives (existing 'replace' directives take precedence)','line_number':67,'multiline':False]['text':' collect 'require' directives that actually specify a version','line_number':72,'multiline':False]['text':' collect 'replace' directives that unconditionally pin versions (old=new@version)','line_number':74,'multiline':False]['text':' Capture local require/replace directives before running any go commands that can modify the go.mod file','line_number':77,'multiline':False]['text':' Propagate root replace/require directives into staging modules, in case we are downgrading, so they don't bump the root required version back up','line_number':87,'multiline':False]['text':' tidy to ensure require directives are added for indirect dependencies','line_number':97,'multiline':False]['text':' separate replace and non-replace directives','line_number':119,'multiline':False]['text':' drop comments before the module directive','line_number':157,'multiline':False]['text':' Add the specified comments','line_number':165,'multiline':False]['text':' Format','line_number':173,'multiline':False]['text':' Phase 1: ensure go.mod files for staging modules and main module','line_number':178,'multiline':False]['text':' remove before initializing, staging Godeps are not authoritative','line_number':184,'multiline':False]['text':' remove after initializing','line_number':194,'multiline':False]['text':' Phase 2: ensure staging repo require/replace directives','line_number':198,'multiline':False]['text':' Prune','line_number':201,'multiline':False]['text':' Readd','line_number':208,'multiline':False]['text':' Phase 3: capture required (minimum) versions from all modules, and replaced (pinned) versions from the root module','line_number':217,'multiline':False]['text':' pin referenced versions','line_number':219,'multiline':False]['text':' resolves/expands references in the root go.mod (if needed)','line_number':221,'multiline':False]['text':' pin expanded versions','line_number':223,'multiline':False]['text':' group require/replace directives','line_number':225,'multiline':False]['text':' Phase 4: copy root go.mod to staging dirs and rewrite','line_number':228,'multiline':False]['text':' copy root go.mod, changing module name','line_number':234,'multiline':False]['text':' remove `require` directives for staging components (will get re-added as needed by `go list`)','line_number':238,'multiline':False]['text':' rewrite `replace` directives for staging components to point to peer directories','line_number':242,'multiline':False]['text':' Phase 5: sort and tidy staging components','line_number':250,'multiline':False]['text':' tidy staging repos in reverse dependency order.','line_number':253,'multiline':False]['text':' the content of dependencies' go.mod files affects what `go mod tidy` chooses to record in a go.mod file.','line_number':254,'multiline':False]['text':' SC2094 checks that you do not read and write to the same file in a pipeline.','line_number':259,'multiline':False]['text':' We do read from ${tidy_unordered} in the pipeline and mention it within the','line_number':260,'multiline':False]['text':' pipeline (but only ready it again) so we disable the lint to assure shellcheck','line_number':261,'multiline':False]['text':' that :this-is-fine:','line_number':262,'multiline':False]['text':' shellcheck disable=SC2094','line_number':263,'multiline':False]['text':' record existence of the repo to ensure modules with no peer relationships still get included in the order','line_number':265,'multiline':False]['text':' save the original go.mod, since go list doesn't just add missing entries, it also removes specific required versions from it','line_number':269,'multiline':False]['text':' 'go list' calculates direct imports and updates go.mod so that go list -m lists our module dependencies','line_number':276,'multiline':False]['text':' capture module dependencies','line_number':283,'multiline':False]['text':' restore the original go.mod file','line_number':286,'multiline':False]['text':' list all module dependencies','line_number':289,'multiline':False]['text':' record the relationship (put dep first, because we want to sort leaves first)','line_number':291,'multiline':False]['text':' switch the required version to an explicit v0.0.0 (rather than an unknown v0.0.0-00010101000000-000000000000)','line_number':293,'multiline':False]['text':' prune replace directives that pin to the naturally selected version.','line_number':304,'multiline':False]['text':' do this before tidying, since tidy removes unused modules that','line_number':305,'multiline':False]['text':' don't provide any relevant packages, which forgets which version of the','line_number':306,'multiline':False]['text':' unused transitive dependency we had a require directive for,','line_number':307,'multiline':False]['text':' and prevents pruning the matching replace directive after tidying.','line_number':308,'multiline':False]['text':' disallow transitive dependencies on k8s.io/kubernetes','line_number':318,'multiline':False]['text':' prune unused pinned replace directives','line_number':326,'multiline':False]['text':' prune replace directives that pin to the naturally selected version','line_number':333,'multiline':False]['text':' group require/replace directives','line_number':341,'multiline':False]['text':' prune unused pinned non-local replace directives','line_number':349,'multiline':False]['text':' disallow transitive dependencies on k8s.io/kubernetes','line_number':356,'multiline':False]['text':' Phase 6: add generated comments to go.mod files','line_number':365,'multiline':False]['text':' Phase 7: update internal modules','line_number':381,'multiline':False]['text':' Phase 8: rebuild vendor directory','line_number':386,'multiline':False]['text':' create a symlink in vendor directory pointing to the staging components.','line_number':390,'multiline':False]['text':' This lets other packages and tools use the local staging components as if they were vendored.','line_number':391,'multiline':False]['text':' See the OWNERS docs at https://go.k8s.io/owners','line_number':403,'multiline':False]['text':' make root approval non-recursive','line_number':406,'multiline':False]