['text':'!/usr/bin/env bash','line_number':1,'multiline':False]['text':' Copyright 2018 The Kubernetes Authors.','line_number':3,'multiline':False]['text':'','line_number':4,'multiline':False]['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':5,'multiline':False]['text':' you may not use this file except in compliance with the License.','line_number':6,'multiline':False]['text':' You may obtain a copy of the License at','line_number':7,'multiline':False]['text':'','line_number':8,'multiline':False]['text':'     http://www.apache.org/licenses/LICENSE-2.0','line_number':9,'multiline':False]['text':'','line_number':10,'multiline':False]['text':' Unless required by applicable law or agreed to in writing, software','line_number':11,'multiline':False]['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':12,'multiline':False]['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':13,'multiline':False]['text':' See the License for the specific language governing permissions and','line_number':14,'multiline':False]['text':' limitations under the License.','line_number':15,'multiline':False]['text':' This script lints each shell script by `shellcheck`.','line_number':17,'multiline':False]['text':' Usage: `hack/verify-shellcheck.sh`.','line_number':18,'multiline':False]['text':' allow overriding docker cli, which should work fine for this script','line_number':28,'multiline':False]['text':' required version for this script, if not installed on the host we will','line_number':31,'multiline':False]['text':' use the official docker image instead. keep this in sync with SHELLCHECK_IMAGE','line_number':32,'multiline':False]['text':' disabled lints','line_number':36,'multiline':False]['text':' this lint disallows non-constant source, which we use extensively without','line_number':38,'multiline':False]['text':' any known bugs','line_number':39,'multiline':False]['text':' this lint warns when shellcheck cannot find a sourced file','line_number':41,'multiline':False]['text':' this wouldn't be a bad idea to warn on, but it fails on lots of path','line_number':42,'multiline':False]['text':' dependent sourcing, so just disable enforcing it','line_number':43,'multiline':False]['text':' this lint prefers command -v to which, they are not the same','line_number':45,'multiline':False]['text':' comma separate for passing to shellcheck','line_number':48,'multiline':False]['text':' ensure we're linting the k8s source tree','line_number':57,'multiline':False]['text':' Find all shell scripts excluding:','line_number':60,'multiline':False]['text':' - Anything git-ignored - No need to lint untracked files.','line_number':61,'multiline':False]['text':' - ./_* - No need to lint output directories.','line_number':62,'multiline':False]['text':' - ./.git/* - Ignore anything in the git object store.','line_number':63,'multiline':False]['text':' - ./vendor* - Vendored code should be fixed upstream instead.','line_number':64,'multiline':False]['text':' - ./third_party/*, but re-include ./third_party/forked/*  - only code we','line_number':65,'multiline':False]['text':'    forked should be linted and fixed.','line_number':66,'multiline':False]['text':' detect if the host machine has the required shellcheck version installed','line_number':78,'multiline':False]['text':' if so, we will use that instead.','line_number':79,'multiline':False]['text':' if KUBE_JUNIT_REPORT_DIR is set, disable colorized output.','line_number':88,'multiline':False]['text':' Colorized output causes malformed XML in the JUNIT report.','line_number':89,'multiline':False]['text':' common arguments we'll pass to shellcheck','line_number':95,'multiline':False]['text':' allow following sourced files that are not specified in the command,','line_number':97,'multiline':False]['text':' we need this because we specify one file at a time in order to trivially','line_number':98,'multiline':False]['text':' detect which files are failing','line_number':99,'multiline':False]['text':' include our disabled lints','line_number':101,'multiline':False]['text':' set colorized output','line_number':103,'multiline':False]['text':' tell the user which we've selected and lint all scripts','line_number':107,'multiline':False]['text':' The shellcheck errors are printed to stdout by default, hence they need to be redirected','line_number':108,'multiline':False]['text':' to stderr in order to be well parsed for Junit representation by juLog function','line_number':109,'multiline':False]['text':' print a message based on the result','line_number':122,'multiline':False]['text':' preserve the result','line_number':139,'multiline':False]