['text':'!/usr/bin/env bash','line_number':1,'multiline':False]['text':' Copyright 2014 The Kubernetes Authors.','line_number':3,'multiline':False]['text':'','line_number':4,'multiline':False]['text':' Licensed under the Apache License, Version 2.0 (the "License");','line_number':5,'multiline':False]['text':' you may not use this file except in compliance with the License.','line_number':6,'multiline':False]['text':' You may obtain a copy of the License at','line_number':7,'multiline':False]['text':'','line_number':8,'multiline':False]['text':'     http://www.apache.org/licenses/LICENSE-2.0','line_number':9,'multiline':False]['text':'','line_number':10,'multiline':False]['text':' Unless required by applicable law or agreed to in writing, software','line_number':11,'multiline':False]['text':' distributed under the License is distributed on an "AS IS" BASIS,','line_number':12,'multiline':False]['text':' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.','line_number':13,'multiline':False]['text':' See the License for the specific language governing permissions and','line_number':14,'multiline':False]['text':' limitations under the License.','line_number':15,'multiline':False]['text':' If KUBE_JUNIT_REPORT_DIR is unset, and ARTIFACTS is set, then have them match.','line_number':24,'multiline':False]['text':' include shell2junit library','line_number':29,'multiline':False]['text':' Excluded check patterns are always skipped.','line_number':32,'multiline':False]['text':' this script calls the make rule and would cause a loop','line_number':34,'multiline':False]['text':' Don't run any scripts that intended to be run dockerized','line_number':35,'multiline':False]['text':' Runs in a separate job for PRs.','line_number':36,'multiline':False]['text':' Runs in a separate job for PRs.','line_number':37,'multiline':False]['text':' runs in a separate job to monitor availability of the dependencies periodically','line_number':38,'multiline':False]['text':' Spams docs URLs, don't run in CI.','line_number':39,'multiline':False]['text':' Exclude typecheck in certain cases, if they're running in a separate job.','line_number':42,'multiline':False]['text':' runs in separate typecheck job','line_number':45,'multiline':False]['text':' runs in separate typecheck job','line_number':46,'multiline':False]['text':' Exclude dependency checks in certain cases, if they're running in a separate job.','line_number':50,'multiline':False]['text':' From @cblecker: We can't change the variable name here, unless we update it throughout','line_number':51,'multiline':False]['text':'                 test-infra (and we would need to pick it backwards).','line_number':52,'multiline':False]['text':' runs in separate dependencies job','line_number':55,'multiline':False]['text':' runs in separate dependencies job','line_number':56,'multiline':False]['text':' runs in separate dependencies job','line_number':57,'multiline':False]['text':' Exclude readonly package check in certain cases, aka, in periodic jobs we don't care and a readonly package won't be touched','line_number':61,'multiline':False]['text':' skip in CI, if env is set','line_number':64,'multiline':False]['text':' Only run known fast checks in quick mode.','line_number':68,'multiline':False]['text':' These ideally run in less than 10s.','line_number':69,'multiline':False]['text':' Collect Failed tests in this Array , initialize it to nil','line_number':140,'multiline':False]['text':' Check invalid targets specified in "WHAT" and mark them as failure cases','line_number':190,'multiline':False]['text':' In case WHAT is not specified','line_number':192,'multiline':False]['text':'TARGET_LIST[@]} -eq 0 ]] && return','line_number':193,'multiline':False]['text':' ex: ts=2 sw=2 et filetype=sh','line_number':225,'multiline':False]