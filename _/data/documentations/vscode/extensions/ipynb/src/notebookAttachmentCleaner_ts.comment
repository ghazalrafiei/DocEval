['text':'---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------','line_number':1,'multiline':True]['text':'* mimetype ','line_number':17,'multiline':True]['text':'* b64-encoded ','line_number':17,'multiline':True]['text':'* uri ','line_number':31,'multiline':True]['text':'* cell fragment','line_number':31,'multiline':True]['text':'* attachment filename ','line_number':31,'multiline':True]['text':' transfer cache to new uri','line_number':126,'multiline':False]['text':'*
	 * take in a NotebookDocumentChangeEvent, and clean the attachment data for the cell(s) that have had their markdown source code changed
	 * @param e NotebookDocumentChangeEvent from the onDidChangeNotebookDocument listener
	 * @returns vscode.NotebookEdit, the metadata alteration performed on the json behind the ipynb
	 ','line_number':172,'multiline':True]['text':'* filename ','line_number':185,'multiline':True]['text':' no attachments used in this cell, cache all images from cell metadata','line_number':192,'multiline':False]['text':' the cell metadata contains attachments, check if any are used in the markdown source','line_number':197,'multiline':False]['text':' means markdown reference is present in the metadata, rendering will work properly','line_number':200,'multiline':False]['text':' therefore, we don't need to check it in the next loop either','line_number':201,'multiline':False]['text':' attachment reference is present in the markdown source, no need to cache it','line_number':203,'multiline':False]['text':' attachment reference is not present in the markdown source, cache it','line_number':207,'multiline':False]['text':' attachment reference is present in both the markdown source and the metadata, no op','line_number':215,'multiline':False]['text':' if image is referenced in markdown source but not in metadata -> check if we have image in the cache','line_number':219,'multiline':False]['text':' if image is not in the cache, show warning','line_number':225,'multiline':False]['text':' not notebook','line_number':247,'multiline':False]['text':' no attachment reference in the metadata','line_number':276,'multiline':False]['text':'*
	 * remove attachment from metadata and add it to the cache
	 * @param notebookUri uri of the notebook currently being edited
	 * @param cellFragment fragment of the cell currently being edited
	 * @param currFilename filename of the image being pulled into the cell
	 * @param metadata metadata of the cell currently being edited
	 ','line_number':298,'multiline':True]['text':' no cache for this notebook yet','line_number':308,'multiline':False]['text':' no cache for this cell yet','line_number':315,'multiline':False]['text':' cache for this cell already exists','line_number':320,'multiline':False]['text':' add to cell cache','line_number':321,'multiline':False]['text':'*
	 * get an attachment entry from the given metadata
	 * @param metadata metadata to extract image data from
	 * @param currFilename filename of image being extracted
	 * @returns
	 ','line_number':326,'multiline':True]['text':'*
	 * returns a boolean that represents if there are any images in the attachment field of a cell's metadata
	 * @param metadata metadata of cell
	 * @returns boolean representing the presence of any attachments
	 ','line_number':336,'multiline':True]['text':'*
	 * given metadata from a cell, cache every image (used in cases with no image links in markdown source)
	 * @param metadata metadata for a cell with no images in markdown source
	 * @param notebookUri uri for the notebook being edited
	 * @param cellFragment fragment of cell being edited
	 ','line_number':345,'multiline':True]['text':'*
	 * pass in all of the markdown source code, and get a dictionary of all images referenced in the markdown. keys are image filenames, values are render state
	 * @param document the text document for the cell, formatted as a string
	 ','line_number':364,'multiline':True]