['text':'---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------','line_number':1,'multiline':True]['text':'/ Log handle for the server','line_number':74,'multiline':False]['text':'/ Whether the server update during the handler session.','line_number':76,'multiline':False]['text':'/ Whether authentication is still required on the socket.','line_number':78,'multiline':False]['text':'/ A loopback channel to talk to the socket server task.','line_number':80,'multiline':False]['text':'/ Configured launcher paths.','line_number':82,'multiline':False]['text':'/ Connected VS Code Server','line_number':84,'multiline':False]['text':'/ Potentially many "websocket" connections to client','line_number':86,'multiline':False]['text':' the cli arguments used to start the code server','line_number':88,'multiline':False]['text':'/ port forwarding functionality','line_number':90,'multiline':False]['text':'/ install platform for the VS Code server','line_number':92,'multiline':False]['text':'/ http client to make download/update requests','line_number':94,'multiline':False]['text':'/ requests being served by the client','line_number':96,'multiline':False]['text':'/ Handler auth state.','line_number':100,'multiline':False]['text':'/ Auth is required, we're waiting for the client to send its challenge optionally bearing a token.','line_number':102,'multiline':False]['text':'/ A challenge has been issued. Waiting for a verification.','line_number':104,'multiline':False]['text':'/ Auth is no longer required.','line_number':106,'multiline':False]['text':' Gets a next incrementing number that can be used in logs','line_number':112,'multiline':False]['text':'/ Signalled when the server has been updated and we want to respawn.','line_number':125,'multiline':False]['text':'/ We'd generally need to stop and then restart the launcher, but the','line_number':126,'multiline':False]['text':'/ program might be managed by a supervisor like systemd. Instead, we','line_number':127,'multiline':False]['text':'/ will stop the TCP listener and spawn the launcher again as a subprocess','line_number':128,'multiline':False]['text':'/ with the same arguments we used.','line_number':129,'multiline':False]['text':'/ Whether the server should be respawned in a new binary (see ServerSignal.Respawn).','line_number':134,'multiline':False]['text':'/ Whether the tunnel should be restarted','line_number':136,'multiline':False]['text':'/ Whether the process should exit','line_number':138,'multiline':False]['text':' Runs the launcher server. Exits on a ctrl+c or when requested by a user.','line_number':147,'multiline':False]['text':' Note that client connections may not be closed when this returns; use','line_number':148,'multiline':False]['text':' `close_all_clients()` on the ServerTermination to make this happen.','line_number':149,'multiline':False]['text':' Currently the only server signal is respawn, that doesn't have much meaning','line_number':263,'multiline':False]['text':' when serving a stream, so make an ignored channel.','line_number':264,'multiline':False]['text':' necessary here','line_number':473,'multiline':False]['text':' The connection is now closed, asked to respawn if needed','line_number':530,'multiline':False]['text':' fill params.extensions into code_server_args.install_extensions','line_number':685,'multiline':False]['text':'/ Handle an incoming server message. This is synchronous and uses a 'write loop'','line_number':797,'multiline':False]['text':'/ to ensure message order is preserved exactly, which is necessary for compression.','line_number':798,'multiline':False]['text':' well, another thread did, but same difference...','line_number':852,'multiline':False]['text':' We use Hyper directly here since reqwest doesn't support sockets/pipes.','line_number':1058,'multiline':False]['text':' See https://github.com/seanmonstar/reqwest/issues/39','line_number':1059,'multiline':False]['text':' start the connection processing; it's shut down when the sender is dropped','line_number':1073,'multiline':False]['text':' CLI args to spawn a server; contracted with clients that they should _not_ provide these.','line_number':1209,'multiline':False]['text':' Start handling logs while doing the handshake in case there's some kind of error','line_number':1227,'multiline':False]['text':' note: intentionally do not wrap stdin in a bufreader, since we don't','line_number':1230,'multiline':False]['text':' want to read anything other than our handshake messages.','line_number':1231,'multiline':False]['text':'/ Wait for the process to exit and sends the spawn result. Waits until the','line_number':1258,'multiline':False]['text':'/ `block_futs` and the process have exited, and polls the `poll_futs` while','line_number':1259,'multiline':False]['text':'/ doing so.','line_number':1260,'multiline':False]['text':' means shutdown happened cleanly already, we're good','line_number':1318,'multiline':False]