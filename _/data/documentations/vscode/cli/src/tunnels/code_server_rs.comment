['text':'---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------','line_number':1,'multiline':True]['text':' common argument','line_number':53,'multiline':False]['text':' extension management','line_number':58,'multiline':False]['text':' connection tokens','line_number':67,'multiline':False]['text':'/ Base server params that can be `resolve()`d to a `ResolvedServerParams`.','line_number':148,'multiline':False]['text':'/ Doing so fetches additional information like a commit ID if previously','line_number':149,'multiline':False]['text':'/ unspecified.','line_number':150,'multiline':False]['text':'/ Server params that can be used to start a VS Code server.','line_number':159,'multiline':False]['text':'/ Code server listening on a port address.','line_number':223,'multiline':False]['text':'/ Code server listening on a socket address.','line_number':231,'multiline':False]['text':'/ A server listening on any address/location.','line_number':239,'multiline':False]['text':'/ A new code server, that opens the barrier when it exits.','line_number':246,'multiline':False]['text':'/ An existing code server with a PID.','line_number':248,'multiline':False]['text':'/ Ensures the given list of extensions are installed on the running server.','line_number':279,'multiline':False]['text':'/ Gets any already-running server from this directory.','line_number':336,'multiline':False]['text':'/ Ensures the server is set up in the configured directory.','line_number':383,'multiline':False]['text':' ignore any error if it doesn't exist','line_number':499,'multiline':False]['text':'/ Starts with a given opaque set of args. Does not set up any port or','line_number':534,'multiline':False]['text':'/ socket, but does return one if present, in the form of a channel.','line_number':535,'multiline':False]['text':' On Windows spawning a code-server binary will run cmd.exe /c C:\path\to\code-server.cmd...','line_number':558,'multiline':False]['text':' This spawns a cmd.exe window for the user, which if they close will kill the code-server process','line_number':559,'multiline':False]['text':' and disconnect the tunnel. To prevent this, pass the CREATE_NO_WINDOW flag to the Command','line_number':560,'multiline':False]['text':' only on Windows.','line_number':561,'multiline':False]['text':' Original issue: https://github.com/microsoft/vscode/issues/184058','line_number':562,'multiline':False]['text':' Partial fix: https://github.com/microsoft/vscode/pull/184621','line_number':563,'multiline':False]['text':' Handle stderr and stdout in a separate task. Initially scan lines looking','line_number':621,'multiline':False]['text':' for the listening port. Afterwards, just scan and write out to the file.','line_number':622,'multiline':False]['text':'/ A type that can be used to scan stdout from the VS Code server. Returns','line_number':690,'multiline':False]['text':'/ some other type that, in turn, is returned from starting the server.','line_number':691,'multiline':False]['text':'/ Parses a line like "Extension host agent listening on /tmp/foo.sock"','line_number':699,'multiline':False]['text':'/ Parses a line like "Extension host agent listening on 9000"','line_number':708,'multiline':False]['text':'/ Parses a line like "Web UI available at http://localhost:9000/?tkn=..."','line_number':717,'multiline':False]['text':'/ Does not do any parsing and just immediately returns an empty result.','line_number':729,'multiline':False]