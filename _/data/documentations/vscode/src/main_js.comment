['text':'---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------','line_number':1,'multiline':True]['text':'@ts-check','line_number':6,'multiline':False]['text':'*
 * @typedef {import('./vs/base/common/product').IProductConfiguration} IProductConfiguration
 * @typedef {import('./vs/base/node/languagePacks').NLSConfiguration} NLSConfiguration
 * @typedef {import('./vs/platform/environment/common/argv').NativeParsedArgs} NativeParsedArgs
 ','line_number':9,'multiline':True]['text':'* @type {Partial<IProductConfiguration>} ','line_number':26,'multiline':True]['text':' @ts-ignore','line_number':27,'multiline':False]['text':' Enable portable support','line_number':31,'multiline':False]['text':' Enable ASAR support','line_number':34,'multiline':False]['text':' Configure static command line arguments','line_number':38,'multiline':False]['text':' Enable sandbox globally unless','line_number':40,'multiline':False]['text':' 1) disabled via command line using either','line_number':41,'multiline':False]['text':'    `--no-sandbox` or `--disable-chromium-sandbox` argument.','line_number':42,'multiline':False]['text':' 2) argv.json contains `disable-chromium-sandbox: true`.','line_number':43,'multiline':False]['text':' Disable GPU sandbox whenever --no-sandbox is used.','line_number':50,'multiline':False]['text':' Set userData path before app 'ready' event','line_number':57,'multiline':False]['text':' enables to use UNC paths in userDataPath','line_number':62,'multiline':False]['text':' Resolve code cache path','line_number':67,'multiline':False]['text':' Disable default menu (https://github.com/electron/electron/issues/35512)','line_number':70,'multiline':False]['text':' Configure crash reporter','line_number':73,'multiline':False]['text':' If a crash-reporter-directory is specified we store the crash reports','line_number':75,'multiline':False]['text':' in the specified directory and don't upload them to the crash server.','line_number':76,'multiline':False]['text':'','line_number':77,'multiline':False]['text':' Appcenter crash reporting is enabled if','line_number':78,'multiline':False]['text':' * enable-crash-reporter runtime argument is set to 'true'','line_number':79,'multiline':False]['text':' * --disable-crash-reporter command line parameter is not set','line_number':80,'multiline':False]['text':'','line_number':81,'multiline':False]['text':' Disable crash reporting in all other cases.','line_number':82,'multiline':False]['text':' Set logs path before app 'ready' event if running portable','line_number':88,'multiline':False]['text':' to ensure that no 'logs' folder is created on disk at a','line_number':89,'multiline':False]['text':' location outside of the portable directory','line_number':90,'multiline':False]['text':' (https://github.com/microsoft/vscode/issues/56651)','line_number':91,'multiline':False]['text':' Register custom schemes with privileges','line_number':96,'multiline':False]['text':' Global app listeners','line_number':108,'multiline':False]['text':'*
 * Support user defined locale: load it early before app('ready')
 * to have more things running in parallel.
 *
 * @type {Promise<NLSConfiguration> | undefined}
 ','line_number':111,'multiline':True]['text':'*
 * @type {String}
 *','line_number':119,'multiline':True]['text':' Use the most preferred OS language for language recommendation.','line_number':122,'multiline':False]['text':' The API might return an empty array on Linux, such as when','line_number':123,'multiline':False]['text':' the 'C' locale is the user's only configured locale.','line_number':124,'multiline':False]['text':' No matter the OS, if the array is empty, default back to 'en'.','line_number':125,'multiline':False]['text':' Pass in the locale to Electron so that the','line_number':135,'multiline':False]['text':' Windows Control Overlay is rendered correctly on Windows.','line_number':136,'multiline':False]['text':' For now, don't pass in the locale on macOS due to','line_number':137,'multiline':False]['text':' https://github.com/microsoft/vscode/issues/167543.','line_number':138,'multiline':False]['text':' If the locale is `qps-ploc`, the Microsoft','line_number':139,'multiline':False]['text':' Pseudo Language Language Pack is being used.','line_number':140,'multiline':False]['text':' In that case, use `en` as the Electron locale.','line_number':141,'multiline':False]['text':' Load our code once ready','line_number':148,'multiline':False]['text':'*
 * Main startup routine
 *
 * @param {string | undefined} codeCachePath
 * @param {NLSConfiguration} nlsConfig
 ','line_number':164,'multiline':True]['text':' Load main in AMD','line_number':176,'multiline':False]['text':'*
 * @param {NativeParsedArgs} cliArgs
 ','line_number':195,'multiline':True]['text':' alias from us for --disable-gpu','line_number':201,'multiline':False]['text':' override for the color profile to use','line_number':204,'multiline':False]['text':' Force enable screen readers on Linux via this flag','line_number':209,'multiline':False]['text':' override which password-store is used on Linux','line_number':212,'multiline':False]['text':' Persistently enable proposed api via argv.json: https://github.com/microsoft/vscode/issues/99775','line_number':218,'multiline':False]['text':' Log level to use. Default is 'info'. Allowed values are 'error', 'warn', 'info', 'debug', 'trace', 'off'.','line_number':221,'multiline':False]['text':' Use an in-memory storage for secrets','line_number':224,'multiline':False]['text':' Read argv config','line_number':228,'multiline':False]['text':' Append Electron flags to Electron','line_number':234,'multiline':False]['text':' Color profile','line_number':238,'multiline':False]['text':' Password store','line_number':240,'multiline':False]['text':' Others','line_number':248,'multiline':False]['text':' needs to be called explicitly','line_number':251,'multiline':False]['text':' Append main process flags to process.argv','line_number':258,'multiline':False]['text':' Following features are disabled from the runtime:','line_number':288,'multiline':False]['text':' `CalculateNativeWinOcclusion` - Disable native window occlusion tracker (https://groups.google.com/a/chromium.org/g/embedder-dev/c/ZF3uHHyWLKw/m/VDN2hDXMAAAJ)','line_number':289,'multiline':False]['text':' Support JS Flags','line_number':294,'multiline':False]['text':' Read or create the argv.json config file sync before app('ready')','line_number':305,'multiline':False]['text':' Fallback to default','line_number':318,'multiline':False]['text':'*
 * @param {string} argvConfigPath
 ','line_number':326,'multiline':True]['text':' Ensure argv config parent exists','line_number':332,'multiline':False]['text':' Default argv content','line_number':338,'multiline':False]['text':' Create initial argv.json with default content','line_number':354,'multiline':False]['text':' @ts-ignore','line_number':372,'multiline':False]['text':' Crashes are stored in the crashDumps directory by default, so we','line_number':397,'multiline':False]['text':' need to change that directory to the provided one','line_number':398,'multiline':False]['text':' Otherwise we configure the crash reporter from product.json','line_number':403,'multiline':False]['text':' Send the id for child node process that are explicitly starting crash reporter.','line_number':439,'multiline':False]['text':' For vscode this is ExtensionHost process currently.','line_number':440,'multiline':False]['text':' if the we have an argument "--" (end of argument marker)','line_number':446,'multiline':False]['text':' we cannot add arguments at the end. rather, we add','line_number':447,'multiline':False]['text':' arguments before the "--" marker.','line_number':448,'multiline':False]['text':' Start crash reporter for all processes','line_number':455,'multiline':False]['text':'*
 * @param {NativeParsedArgs} cliArgs
 * @returns {string | null}
 ','line_number':468,'multiline':True]['text':' Add any existing JS flags we already got from the command line','line_number':475,'multiline':False]['text':'*
 * @returns {NativeParsedArgs}
 ','line_number':483,'multiline':True]['text':'*
	 * macOS: when someone drops a file to the not-yet running VSCode, the open-file event fires even before
	 * the app-ready event. We listen very early for open-file and remember this upon startup as path to open.
	 *
	 * @type {string[]}
	 ','line_number':510,'multiline':True]['text':' @ts-ignore','line_number':517,'multiline':False]['text':'*
	 * macOS: react to open-url requests.
	 *
	 * @type {string[]}
	 ','line_number':523,'multiline':True]['text':'*
		 * @param {{ preventDefault: () => void; }} event
		 * @param {string} url
		 ','line_number':530,'multiline':True]['text':' @ts-ignore','line_number':544,'multiline':False]['text':'*
 * @returns {string | undefined} the location to use for the code cache
 * or `undefined` if disabled.
 ','line_number':552,'multiline':True]['text':' explicitly disabled via CLI args','line_number':558,'multiline':False]['text':' running out of sources','line_number':563,'multiline':False]['text':' require commit id','line_number':568,'multiline':False]['text':'*
 * @param {string} dir
 * @returns {Promise<string>}
 ','line_number':577,'multiline':True]['text':'*
 * @param {string | undefined} dir
 * @returns {Promise<string | undefined>}
 ','line_number':587,'multiline':True]['text':' ignore','line_number':598,'multiline':False]['text':'#region NLS Support','line_number':605,'multiline':False]['text':'*
 * @param {string} appLocale
 * @returns string
 ','line_number':607,'multiline':True]['text':' On Windows and macOS, Chinese languages returned by','line_number':614,'multiline':False]['text':' app.getPreferredSystemLanguages() start with zh-hans','line_number':615,'multiline':False]['text':' for Simplified Chinese or zh-hant for Traditional Chinese,','line_number':616,'multiline':False]['text':' so we can easily determine whether to use Simplified or Traditional.','line_number':617,'multiline':False]['text':' However, on Linux, Chinese languages returned by that same API','line_number':618,'multiline':False]['text':' are of the form zh-XY, where XY is a country code.','line_number':619,'multiline':False]['text':' For China (CN), Singapore (SG), and Malaysia (MY)','line_number':620,'multiline':False]['text':' country codes, assume they use Simplified Chinese.','line_number':621,'multiline':False]['text':' For other cases, assume they use Traditional.','line_number':622,'multiline':False]['text':'*
 * Resolve the NLS configuration
 *
 * @return {Promise<NLSConfiguration>}
 ','line_number':631,'multiline':True]['text':' First, we need to test a user defined locale. If it fails we try the app locale.','line_number':638,'multiline':False]['text':' If that fails we fall back to English.','line_number':639,'multiline':False]['text':' Try to use the app locale. Please note that the app locale is only','line_number':645,'multiline':False]['text':' valid after we have received the app ready event. This is why the','line_number':646,'multiline':False]['text':' code is here.','line_number':647,'multiline':False]['text':'*
	 * @type string
	 ','line_number':649,'multiline':True]['text':' See above the comment about the loader and case sensitiveness','line_number':657,'multiline':False]['text':'*
 * Language tags are case insensitive however an amd loader is case sensitive
 * To make this work on case preserving & insensitive FS we do the following:
 * the language bundles have lower case language tags and we always lower case
 * the locale we receive from the user or OS.
 *
 * @param {{ locale: string | undefined; }} argvConfig
 * @returns {string | undefined}
 ','line_number':665,'multiline':True]['text':' a directly provided --locale always wins','line_number':677,'multiline':False]['text':'#endregion','line_number':683,'multiline':False]