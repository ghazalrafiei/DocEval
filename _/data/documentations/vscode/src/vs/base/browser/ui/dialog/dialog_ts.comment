['text':'---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------','line_number':1,'multiline':True]['text':' Handle button clicks','line_number':209,'multiline':False]['text':' Handle keyboard events globally: Tab, Arrow-Left/Right','line_number':230,'multiline':False]['text':' Enter in input field should OK the dialog','line_number':241,'multiline':False]['text':' leave default handling','line_number':252,'multiline':False]['text':' leave default handling','line_number':256,'multiline':False]['text':' Focus: Next / Previous','line_number':261,'multiline':False]['text':' Build a list of focusable elements in their visual order','line_number':264,'multiline':False]['text':' Focus next element (with wrapping)','line_number':301,'multiline':False]['text':' default to focus first element if none have focus','line_number':304,'multiline':False]['text':' Focus previous element (with wrapping)','line_number':311,'multiline':False]['text':' default to focus last element if none have focus','line_number':314,'multiline':False]['text':' Detect focus out','line_number':347,'multiline':False]['text':' Focus first element (input or button)','line_number':410,'multiline':False]['text':' TODO fix','line_number':439,'multiline':False]['text':' if (fgColor && bgColor) {','line_number':440,'multiline':False]['text':' 	const messageDetailColor = fgColor.transparent(.9);','line_number':441,'multiline':False]['text':' 	this.messageDetailElement.style.mixBlendMode = messageDetailColor.makeOpaque(bgColor).toString();','line_number':442,'multiline':False]['text':' }','line_number':443,'multiline':False]['text':' Maps each button to its current label and old index','line_number':484,'multiline':False]['text':' so that when we move them around it's not a problem','line_number':485,'multiline':False]['text':' only need to rearrange if there are 2+ buttons','line_number':489,'multiline':False]['text':' Linux: the GNOME HIG (https://developer.gnome.org/hig/patterns/feedback/dialogs.html?highlight=dialog)','line_number':494,'multiline':False]['text':' recommend the following:','line_number':495,'multiline':False]['text':' "Always ensure that the cancel button appears first, before the affirmative button. In left-to-right','line_number':496,'multiline':False]['text':'  locales, this is on the left. This button order ensures that users become aware of, and are reminded','line_number':497,'multiline':False]['text':'  of, the ability to cancel prior to encountering the affirmative button."','line_number':498,'multiline':False]['text':' macOS: the HIG (https://developer.apple.com/design/human-interface-guidelines/components/presentation/alerts)','line_number':500,'multiline':False]['text':' recommend the following:','line_number':501,'multiline':False]['text':' "Place buttons where people expect. In general, place the button people are most likely to choose on the trailing side in a','line_number':502,'multiline':False]['text':'  row of buttons or at the top in a stack of buttons. Always place the default button on the trailing side of a row or at the','line_number':503,'multiline':False]['text':'  top of a stack. Cancel buttons are typically on the leading side of a row or at the bottom of a stack."','line_number':504,'multiline':False]['text':' Windows: the HIG (https://learn.microsoft.com/en-us/windows/win32/uxguide/win-dialog-box)','line_number':514,'multiline':False]['text':' recommend the following:','line_number':515,'multiline':False]['text':' "One of the following sets of concise commands: Yes/No, Yes/No/Cancel, [Do it]/Cancel,','line_number':516,'multiline':False]['text':'  [Do it]/[Don't do it], [Do it]/[Don't do it]/Cancel."','line_number':517,'multiline':False]