['text':'---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------','line_number':1,'multiline':True]['text':'...','line_number':39,'multiline':False]['text':' snaphot only listen when `evens` is being listened on','line_number':86,'multiline':False]['text':' leaked is still there','line_number':95,'multiline':False]['text':' debounce only listens when `debounce` is being listened on','line_number':102,'multiline':False]['text':' leaked is still there','line_number':112,'multiline':False]['text':' unhook listener','line_number':133,'multiline':False]['text':' 1. Check that 2 is not delivered before 1 finishes','line_number':204,'multiline':False]['text':' 2. Check that 2 finishes getting delivered even if one emitter is disposed','line_number':205,'multiline':False]['text':' unhook listener','line_number':247,'multiline':False]['text':' noop','line_number':253,'multiline':False]['text':' unhook listener','line_number':269,'multiline':False]['text':' noop','line_number':273,'multiline':False]['text':' eslint-disable-next-line no-throw-literal','line_number':336,'multiline':False]['text':' eslint-disable-next-line no-throw-literal','line_number':359,'multiline':False]['text':' Should wait until the event loop ends and therefore be the last thing called','line_number':431,'multiline':False]['text':' assert that all events are delivered at this point','line_number':449,'multiline':False]['text':' assert that all events are delivered in order','line_number':458,'multiline':False]['text':' assert that all events are delivered at this point','line_number':468,'multiline':False]['text':' assert that all events are delivered at this point','line_number':475,'multiline':False]['text':' assert that all events are delivered in order','line_number':484,'multiline':False]['text':' assert that disposable can be called with this','line_number':491,'multiline':False]['text':' e1','line_number':557,'multiline':False]['text':' e2','line_number':568,'multiline':False]['text':' multiple `waitUntil` are supported and awaited on','line_number':598,'multiline':False]['text':' paused after first event','line_number':730,'multiline':False]['text':' remaing event delivered','line_number':733,'multiline':False]['text':' should not crash','line_number':1174,'multiline':False]['text':'leading=','line_number':1435,'multiline':True]['text':' If the source event is fired once, the debounced (on the leading edge) event should be fired only once','line_number':1442,'multiline':False]['text':'leading=','line_number':1451,'multiline':True]['text':' If the source event is fired multiple times, the debounced (on the leading edge) event should be fired twice','line_number':1458,'multiline':False]['text':'leading=','line_number':1468,'multiline':True]