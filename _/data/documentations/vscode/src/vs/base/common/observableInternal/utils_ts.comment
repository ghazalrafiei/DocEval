['text':'---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------','line_number':1,'multiline':True]['text':'*
 * Represents an efficient observable whose value never changes.
 ','line_number':13,'multiline':True]['text':' NO OP','line_number':33,'multiline':False]['text':' NO OP','line_number':36,'multiline':False]['text':'* @description waitForState ','line_number':61,'multiline':True]['text':' no cache, as there are no subscribers to keep it updated','line_number':163,'multiline':False]['text':' NO OP','line_number':227,'multiline':False]['text':'*
 * Creates a signal that can be triggered to invalidate observers.
 * Signals don't have a value - when they are triggered they indicate a change.
 * However, signals can carry a delta that is passed to observers.
 ','line_number':231,'multiline':True]['text':' NO OP','line_number':277,'multiline':False]['text':'* @description debounce ','line_number':287,'multiline':True]['text':'*
 * This makes sure the observable is being observed and keeps its cache alive.
 ','line_number':323,'multiline':True]['text':'*
 * This converts the given observable into an autorun.
 ','line_number':334,'multiline':True]['text':' NO OP','line_number':377,'multiline':False]['text':' NO OP','line_number':381,'multiline':False]