['text':'---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------','line_number':1,'multiline':True]['text':'#region IExtUri','line_number':18,'multiline':False]['text':' --- identity','line_number':22,'multiline':False]['text':'*
	 * Compares two uris.
	 *
	 * @param uri1 Uri
	 * @param uri2 Uri
	 * @param ignoreFragment Ignore the fragment (defaults to `false`)
	 ','line_number':24,'multiline':True]['text':'*
	 * Tests whether two uris are equal
	 *
	 * @param uri1 Uri
	 * @param uri2 Uri
	 * @param ignoreFragment Ignore the fragment (defaults to `false`)
	 ','line_number':33,'multiline':True]['text':'*
	 * Tests whether a `candidate` URI is a parent or equal of a given `base` URI.
	 *
	 * @param base A uri which is "longer" or at least same length as `parentCandidate`
	 * @param parentCandidate A uri which is "shorter" or up to same length as `base`
	 * @param ignoreFragment Ignore the fragment (defaults to `false`)
	 ','line_number':42,'multiline':True]['text':'*
	 * Creates a key from a resource URI to be used to resource comparison and for resource maps.
	 * @see {@link ResourceMap}
	 * @param uri Uri
	 * @param ignoreFragment Ignore the fragment (defaults to `false`)
	 ','line_number':51,'multiline':True]['text':'*
	 * Whether the casing of the path-component of the uri should be ignored.
	 ','line_number':59,'multiline':True]['text':' --- path math','line_number':64,'multiline':False]['text':'*
	 * Returns the basename of the path component of an uri.
	 * @param resource
	 ','line_number':68,'multiline':True]['text':'*
	 * Returns the extension of the path component of an uri.
	 * @param resource
	 ','line_number':74,'multiline':True]['text':'*
	 * Return a URI representing the directory of a URI path.
	 *
	 * @param resource The input URI.
	 * @returns The URI representing the directory of the input URI.
	 ','line_number':79,'multiline':True]['text':'*
	 * Join a URI path with path fragments and normalizes the resulting path.
	 *
	 * @param resource The input URI.
	 * @param pathFragment The path fragment to add to the URI path.
	 * @returns The resulting URI.
	 ','line_number':86,'multiline':True]['text':'*
	 * Normalizes the path part of a URI: Resolves `.` and `..` elements with directory names.
	 *
	 * @param resource The URI to normalize the path.
	 * @returns The URI with the normalized path.
	 ','line_number':94,'multiline':True]['text':'*
	 *
	 * @param from
	 * @param to
	 ','line_number':101,'multiline':True]['text':'*
	 * Resolves an absolute or relative path against a base URI.
	 * The path can be relative or absolute posix or a Windows path
	 ','line_number':107,'multiline':True]['text':' --- misc','line_number':113,'multiline':False]['text':'*
	 * Returns true if the URI path is absolute.
	 ','line_number':115,'multiline':True]['text':'*
	 * Tests whether the two authorities are the same
	 ','line_number':119,'multiline':True]['text':'*
	 * Returns true if the URI path has a trailing path separator
	 ','line_number':123,'multiline':True]['text':'*
	 * Removes a trailing path separator, if there's one.
	 * Important: Doesn't remove the first slash, it would make the URI invalid
	 ','line_number':127,'multiline':True]['text':'*
	 * Adds a trailing path separator to the URI if there isn't one already.
	 * For example, c:\ would be unchanged, but c:\users would become c:\users\
	 ','line_number':132,'multiline':True]['text':' --- path math','line_number':183,'multiline':False]['text':' make casing of fromPath match toPath','line_number':246,'multiline':False]['text':' we allow path to be a windows path','line_number':268,'multiline':False]['text':' --- misc','line_number':274,'multiline':False]['text':' ignore the slash at offset 0','line_number':290,'multiline':False]['text':' Make sure that the path isn't a drive letter. A trailing separator there is not removable.','line_number':295,'multiline':False]['text':'*
 * Unbiased utility that takes uris "as they are". This means it can be interchanged with
 * uri#toString() usages. The following is true
 * ```
 * assertEqual(aUri.toString() === bUri.toString(), exturi.isEqual(aUri, bUri))
 * ```
 ','line_number':320,'multiline':True]['text':'*
 * BIASED utility that _mostly_ ignored the case of urs paths. ONLY use this util if you
 * understand what you are doing.
 *
 * This utility is INCOMPATIBLE with `uri.toString()`-usages and both CANNOT be used interchanged.
 *
 * When dealing with uris from files or documents, `extUri` (the unbiased friend)is sufficient
 * because those uris come from a "trustworthy source". When creating unknown uris it's always
 * better to use `IUriIdentityService` which exposes an `IExtUri`-instance which knows when path
 * casing matters.
 ','line_number':329,'multiline':True]['text':' A file scheme resource is in the same platform as code, so ignore case for non linux platforms','line_number':341,'multiline':False]['text':' Resource can be from another platform. Lowering the case as an hack. Should come from File system provider','line_number':342,'multiline':False]['text':'*
 * BIASED utility that always ignores the casing of uris paths. ONLY use this util if you
 * understand what you are doing.
 *
 * This utility is INCOMPATIBLE with `uri.toString()`-usages and both CANNOT be used interchanged.
 *
 * When dealing with uris from files or documents, `extUri` (the unbiased friend)is sufficient
 * because those uris come from a "trustworthy source". When creating unknown uris it's always
 * better to use `IUriIdentityService` which exposes an `IExtUri`-instance which knows when path
 * casing matters.
 ','line_number':347,'multiline':True]['text':'#endregion','line_number':377,'multiline':False]['text':'*
 * Data URI related helpers.
 ','line_number':399,'multiline':True]['text':' Given a URI of:  data:image/png;size:2313;label:SomeLabel;description:SomeDescription;base64,77+9UE5...','line_number':412,'multiline':False]['text':' the metadata is: size:2313;label:SomeLabel;description:SomeDescription','line_number':413,'multiline':False]['text':' Given a URI of:  data:image/png;size:2313;label:SomeLabel;description:SomeDescription;base64,77+9UE5...','line_number':422,'multiline':False]['text':' the mime is: image/png','line_number':423,'multiline':False]