['text':'---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------','line_number':1,'multiline':True]['text':'*
	 * A flag signalling is cancellation has been requested.
	 ','line_number':11,'multiline':True]['text':'*
	 * An event which fires when cancellation is requested. This event
	 * only ever fires `once` as cancellation can only happen once. Listeners
	 * that are registered after cancellation will be called (next event loop run),
	 * but also only once.
	 *
	 * @event
	 ','line_number':16,'multiline':True]['text':' be lazy and create the token only when','line_number':108,'multiline':False]['text':' actually needed','line_number':109,'multiline':False]['text':' save an object by returning the default','line_number':117,'multiline':False]['text':' cancelled token when cancellation happens','line_number':118,'multiline':False]['text':' before someone asks for the token','line_number':119,'multiline':False]['text':' actually cancel','line_number':123,'multiline':False]['text':' ensure to initialize with an empty token if we had none','line_number':134,'multiline':False]['text':' actually dispose','line_number':138,'multiline':False]