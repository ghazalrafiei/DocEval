['text':'---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------','line_number':1,'multiline':True]['text':'*
	 * When running in a nodejs context, the backing store for the returned `VSBuffer` instance
	 * might use a nodejs Buffer allocated from node's Buffer pool, which is not transferrable.
	 ','line_number':19,'multiline':True]['text':'*
	 * When running in a nodejs context, if `actual` is not a nodejs Buffer, the backing store for
	 * the returned `VSBuffer` instance might use a nodejs Buffer allocated from node's Buffer pool,
	 * which is not transferrable.
	 ','line_number':31,'multiline':True]['text':' https://nodejs.org/dist/latest-v10.x/docs/api/buffer.html#buffer_class_method_buffer_from_arraybuffer_byteoffset_length','line_number':38,'multiline':False]['text':' Create a zero-copy Buffer wrapper around the ArrayBuffer pointed to by the Uint8Array','line_number':39,'multiline':False]['text':'*
	 * When running in a nodejs context, the backing store for the returned `VSBuffer` instance
	 * might use a nodejs Buffer allocated from node's Buffer pool, which is not transferrable.
	 ','line_number':45,'multiline':True]['text':'*
	 * When running in a nodejs context, the backing store for the returned `VSBuffer` instance
	 * might use a nodejs Buffer allocated from node's Buffer pool, which is not transferrable.
	 ','line_number':61,'multiline':True]['text':'*
	 * When running in a nodejs context, the backing store for the returned `VSBuffer` instance
	 * might use a nodejs Buffer allocated from node's Buffer pool, which is not transferrable.
	 ','line_number':73,'multiline':True]['text':'*
	 * When running in a nodejs context, the backing store for the returned `VSBuffer` instance
	 * might use a nodejs Buffer allocated from node's Buffer pool, which is not transferrable.
	 ','line_number':104,'multiline':True]['text':' IMPORTANT: use subarray instead of slice because TypedArray#slice','line_number':126,'multiline':False]['text':' creates shallow copy and NodeBuffer#slice doesn't. The use of subarray','line_number':127,'multiline':False]['text':' ensures the same, performance, behaviour.','line_number':128,'multiline':False]['text':'*
 * Like String.indexOf, but works on Uint8Arrays.
 * Uses the boyer-moore-horspool algorithm to be reasonably speedy.
 ','line_number':180,'multiline':True]['text':' find index of the subarray using boyer-moore-horspool algorithm','line_number':200,'multiline':False]['text':' Include already read chunks...','line_number':314,'multiline':False]['text':' ...and all additional chunks','line_number':317,'multiline':False]['text':'* Decodes base64 to a uint8 array. URL-encoded and unpadded base64 is allowed. ','line_number':342,'multiline':True]['text':' The simpler way to do this is `Uint8Array.from(atob(str), c => c.charCodeAt(0))`,','line_number':348,'multiline':False]['text':' but that's about 10-20x slower than this function in current Chromium versions.','line_number':349,'multiline':False]['text':' See https://datatracker.ietf.org/doc/html/rfc4648#section-4','line_number':376,'multiline':False]['text':' This branchy code is about 3x faster than an indexOf on a base64 char string.','line_number':377,'multiline':False]['text':' A-Z starts ranges from char code 65 to 90','line_number':379,'multiline':False]['text':' a-z starts ranges from char code 97 to 122, starting at byte 26','line_number':381,'multiline':False]['text':' 0-9 starts ranges from char code 48 to 58, starting at byte 52','line_number':383,'multiline':False]['text':' "+" or "-" for URLS','line_number':385,'multiline':False]['text':' "/" or "_" for URLS','line_number':387,'multiline':False]['text':' "="','line_number':389,'multiline':False]['text':' slice is needed to account for overestimation due to padding','line_number':400,'multiline':False]['text':'* Encodes a buffer to a base64 string. ','line_number':407,'multiline':True]