['text':'---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------','line_number':1,'multiline':True]['text':'*
 * Helper to produce a string with a variable number of arguments. Insert variable segments
 * into the string using the {n} notation where N is the index of the argument following the string.
 * @param value string to which formatting is applied
 * @param args replacements for {n}-entries
 ','line_number':20,'multiline':True]['text':'*
 * Helper to create a string from a template and a string record.
 * Similar to `format` but with objects instead of positional arguments.
 ','line_number':40,'multiline':True]['text':'*
 * Converts HTML characters inside the string to use entities instead. Makes the string safe from
 * being used e.g. in HTMLElement.innerHTML.
 ','line_number':51,'multiline':True]['text':'*
 * Escapes regular expression characters in a given string
 ','line_number':66,'multiline':True]['text':'*
 * Counts how often `character` occurs inside `value`.
 ','line_number':73,'multiline':True]['text':'*
 * Removes all occurrences of needle from the beginning and end of haystack.
 * @param haystack string to trim
 * @param needle the thing to trim (default is a blank)
 ','line_number':106,'multiline':True]['text':'*
 * Removes all occurrences of needle from the beginning of haystack.
 * @param haystack string to trim
 * @param needle the thing to trim
 ','line_number':116,'multiline':True]['text':'*
 * Removes all occurrences of needle from the end of haystack.
 * @param haystack string to trim
 * @param needle the thing to trim
 ','line_number':139,'multiline':True]['text':' Exit early if it's one of these special cases which are meant to match','line_number':222,'multiline':False]['text':' against an empty string','line_number':223,'multiline':False]['text':' We check against an empty string. If the regular expression doesn't advance','line_number':228,'multiline':False]['text':' (e.g. ends in an endless loop) it will match an empty string.','line_number':229,'multiline':False]['text':'*
 * Returns first index of the string that is not whitespace.
 * If string is empty or contains only whitespaces, returns -1
 ','line_number':238,'multiline':True]['text':'*
 * Returns the leading whitespace of the string.
 * If the string contains only whitespaces, returns entire string
 ','line_number':252,'multiline':True]['text':'*
 * Returns last index of the string that is not whitespace.
 * If string is empty or contains only whitespaces, returns -1
 ','line_number':266,'multiline':True]['text':'*
 * Function that works identically to String.prototype.replace, except, the
 * replace function is allowed to be async and return a Promise.
 ','line_number':280,'multiline':True]['text':' equal','line_number':345,'multiline':False]['text':' not ASCII letters -> fallback to lower-casing strings','line_number':350,'multiline':False]['text':' mapper lower-case ascii letter onto upper-case varinats','line_number':354,'multiline':False]['text':' [97-122] (lower ascii) --> [65-90] (upper ascii)','line_number':355,'multiline':False]['text':' compare both code points','line_number':363,'multiline':False]['text':'*
 * @returns the length of the common prefix of the two strings.
 ','line_number':409,'multiline':True]['text':'*
 * @returns the length of the common suffix of the two strings.
 ','line_number':426,'multiline':True]['text':'*
 * See http://en.wikipedia.org/wiki/Surrogate_pair
 ','line_number':446,'multiline':True]['text':'*
 * See http://en.wikipedia.org/wiki/Surrogate_pair
 ','line_number':453,'multiline':True]['text':'*
 * See http://en.wikipedia.org/wiki/Surrogate_pair
 ','line_number':460,'multiline':True]['text':'*
 * get the code point that begins at offset `offset`
 ','line_number':467,'multiline':True]['text':'*
 * get the code point that ends right before offset `offset`
 ','line_number':481,'multiline':True]['text':' move iterator back','line_number':554,'multiline':False]['text':' move iterator back','line_number':573,'multiline':False]['text':' Generated using https://github.com/alexdima/unicode-utils/blob/main/rtl-test.js','line_number':619,'multiline':False]['text':'*
 * Returns true if `str` contains any Unicode character that is classified as "R" or "AL".
 ','line_number':623,'multiline':True]['text':'*
 * Returns true if `str` contains only basic ASCII characters in the range 32 - 126 (including 32 and 126) or \n, \r, \t
 ','line_number':635,'multiline':True]['text':' LINE SEPARATOR (LS) or PARAGRAPH SEPARATOR (PS)','line_number':642,'multiline':False]['text':'*
 * Returns true if `str` contains unusual line terminators, like LS or PS
 ','line_number':643,'multiline':True]['text':' Do a cheap trick to better support wrapping of wide characters, treat them as 2 columns','line_number':651,'multiline':False]['text':' http://jrgraphix.net/research/unicode_blocks.php','line_number':652,'multiline':False]['text':'          2E80 - 2EFF   CJK Radicals Supplement','line_number':653,'multiline':False]['text':'          2F00 - 2FDF   Kangxi Radicals','line_number':654,'multiline':False]['text':'          2FF0 - 2FFF   Ideographic Description Characters','line_number':655,'multiline':False]['text':'          3000 - 303F   CJK Symbols and Punctuation','line_number':656,'multiline':False]['text':'          3040 - 309F   Hiragana','line_number':657,'multiline':False]['text':'          30A0 - 30FF   Katakana','line_number':658,'multiline':False]['text':'          3100 - 312F   Bopomofo','line_number':659,'multiline':False]['text':'          3130 - 318F   Hangul Compatibility Jamo','line_number':660,'multiline':False]['text':'          3190 - 319F   Kanbun','line_number':661,'multiline':False]['text':'          31A0 - 31BF   Bopomofo Extended','line_number':662,'multiline':False]['text':'          31F0 - 31FF   Katakana Phonetic Extensions','line_number':663,'multiline':False]['text':'          3200 - 32FF   Enclosed CJK Letters and Months','line_number':664,'multiline':False]['text':'          3300 - 33FF   CJK Compatibility','line_number':665,'multiline':False]['text':'          3400 - 4DBF   CJK Unified Ideographs Extension A','line_number':666,'multiline':False]['text':'          4DC0 - 4DFF   Yijing Hexagram Symbols','line_number':667,'multiline':False]['text':'          4E00 - 9FFF   CJK Unified Ideographs','line_number':668,'multiline':False]['text':'          A000 - A48F   Yi Syllables','line_number':669,'multiline':False]['text':'          A490 - A4CF   Yi Radicals','line_number':670,'multiline':False]['text':'          AC00 - D7AF   Hangul Syllables','line_number':671,'multiline':False]['text':' [IGNORE] D800 - DB7F   High Surrogates','line_number':672,'multiline':False]['text':' [IGNORE] DB80 - DBFF   High Private Use Surrogates','line_number':673,'multiline':False]['text':' [IGNORE] DC00 - DFFF   Low Surrogates','line_number':674,'multiline':False]['text':' [IGNORE] E000 - F8FF   Private Use Area','line_number':675,'multiline':False]['text':'          F900 - FAFF   CJK Compatibility Ideographs','line_number':676,'multiline':False]['text':' [IGNORE] FB00 - FB4F   Alphabetic Presentation Forms','line_number':677,'multiline':False]['text':' [IGNORE] FB50 - FDFF   Arabic Presentation Forms-A','line_number':678,'multiline':False]['text':' [IGNORE] FE00 - FE0F   Variation Selectors','line_number':679,'multiline':False]['text':' [IGNORE] FE20 - FE2F   Combining Half Marks','line_number':680,'multiline':False]['text':' [IGNORE] FE30 - FE4F   CJK Compatibility Forms','line_number':681,'multiline':False]['text':' [IGNORE] FE50 - FE6F   Small Form Variants','line_number':682,'multiline':False]['text':' [IGNORE] FE70 - FEFF   Arabic Presentation Forms-B','line_number':683,'multiline':False]['text':'          FF00 - FFEF   Halfwidth and Fullwidth Forms','line_number':684,'multiline':False]['text':'               [https://en.wikipedia.org/wiki/Halfwidth_and_fullwidth_forms]','line_number':685,'multiline':False]['text':'               of which FF01 - FF5E fullwidth ASCII of 21 to 7E','line_number':686,'multiline':False]['text':' [IGNORE]    and FF65 - FFDC halfwidth of Katakana and Hangul','line_number':687,'multiline':False]['text':' [IGNORE] FFF0 - FFFF   Specials','line_number':688,'multiline':False]['text':'*
 * A fast function (therefore imprecise) to check if code points are emojis.
 * Generated using https://github.com/alexdima/unicode-utils/blob/main/emoji-test.js
 ','line_number':696,'multiline':True]['text':'*
 * Given a string and a max length returns a shorted version. Shorting
 * happens at favorable positions - such as whitespace or punctuation characters.
 ','line_number':710,'multiline':True]['text':' Escape codes, compiled from https://invisible-island.net/xterm/ctlseqs/ctlseqs.html#h3-Functions-using-CSI-_-ordered-by-the-final-character_s_','line_number':733,'multiline':False]