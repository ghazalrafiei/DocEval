['text':'---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------','line_number':1,'multiline':True]['text':' FF3B and FF3D is the Unicode zenkaku representation for [ and ]','line_number':82,'multiline':False]['text':'*
 * Marks a string to be localized. Returns the localized string.
 *
 * @param info The {@linkcode ILocalizeInfo} which describes the id and comments associated with the localized string.
 * @param message The string to localize
 * @param args The arguments to the string
 *
 * @note `message` can contain `{n}` notation where it is replaced by the nth value in `...args`
 * @example `localize({ key: 'sayHello', comment: ['Welcomes user'] }, 'hello {0}', name)`
 *
 * @returns string The localized string.
 ','line_number':132,'multiline':True]['text':'*
 * Marks a string to be localized. Returns the localized string.
 *
 * @param key The key to use for localizing the string
 * @param message The string to localize
 * @param args The arguments to the string
 *
 * @note `message` can contain `{n}` notation where it is replaced by the nth value in `...args`
 * @example For example, `localize('sayHello', 'hello {0}', name)`
 *
 * @returns string The localized string.
 ','line_number':146,'multiline':True]['text':'*
 * @skipMangle
 ','line_number':160,'multiline':True]['text':'*
 * Marks a string to be localized. Returns an {@linkcode ILocalizedString}
 * which contains the localized string and the original string.
 *
 * @param info The {@linkcode ILocalizeInfo} which describes the id and comments associated with the localized string.
 * @param message The string to localize
 * @param args The arguments to the string
 *
 * @note `message` can contain `{n}` notation where it is replaced by the nth value in `...args`
 * @example `localize2({ key: 'sayHello', comment: ['Welcomes user'] }, 'hello {0}', name)`
 *
 * @returns ILocalizedString which contains the localized string and the original string.
 ','line_number':167,'multiline':True]['text':'*
 * Marks a string to be localized. Returns an {@linkcode ILocalizedString}
 * which contains the localized string and the original string.
 *
 * @param key The key to use for localizing the string
 * @param message The string to localize
 * @param args The arguments to the string
 *
 * @note `message` can contain `{n}` notation where it is replaced by the nth value in `...args`
 * @example `localize('sayHello', 'hello {0}', name)`
 *
 * @returns ILocalizedString which contains the localized string and the original string.
 ','line_number':182,'multiline':True]['text':'*
 * @skipMangle
 ','line_number':197,'multiline':True]['text':'*
 *
 * @param stringFromLocalizeCall You must pass in a string that was returned from a `nls.localize()` call
 * in order to ensure the loader plugin has been initialized before this function is called.
 ','line_number':208,'multiline':True]['text':'*
 * @skipMangle
 ','line_number':214,'multiline':True]['text':' This returns undefined because this implementation isn't used and is overwritten by the loader','line_number':218,'multiline':False]['text':' when loaded.','line_number':219,'multiline':False]['text':'*
 * @skipMangle
 ','line_number':223,'multiline':True]['text':'*
 * Invoked in a built product at run-time
 * @skipMangle
 ','line_number':230,'multiline':True]['text':'*
 * Invoked by the loader at run-time
 * @skipMangle
 ','line_number':242,'multiline':True]['text':' TODO: We need to give back the mangled names here','line_number':249,'multiline':False]['text':' We have an error. Load the English default strings to not fail','line_number':275,'multiline':False]['text':' Language is already as generic as it gets, so require default messages','line_number':288,'multiline':False]['text':' Since there is a dash, the language configured is a specific sub-language of the same generic language.','line_number':294,'multiline':False]['text':' Since we were unable to load the specific language, try to load the generic language. Ex. we failed to find a','line_number':295,'multiline':False]['text':' Swiss German (de-CH), so try to load the generic German (de) messages instead.','line_number':296,'multiline':False]['text':' We got some messages, so we configure the configuration to use the generic language for this session.','line_number':299,'multiline':False]