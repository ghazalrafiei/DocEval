['text':'---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------','line_number':1,'multiline':True]['text':'*
 * Represents a decoration that should be shown along the lines from `startLineNumber` to `endLineNumber`.
 * This can end up producing multiple `LineDecorationToRender`.
 ','line_number':18,'multiline':True]['text':'*
 * A decoration that should be shown along a line.
 ','line_number':38,'multiline':True]['text':'*
 * Decorations to render on a visible line.
 ','line_number':48,'multiline':True]['text':'*
	 * Returns an array with an element for each visible line number.
	 ','line_number':66,'multiline':True]['text':' Sort decorations by className, then by startLineNumber and then by endLineNumber','line_number':81,'multiline':False]['text':' Here we avoid rendering the same className multiple times on the same line','line_number':102,'multiline':False]['text':' --- begin event handlers','line_number':166,'multiline':False]['text':' --- end event handlers','line_number':200,'multiline':False]['text':' --- begin widget management','line_number':202,'multiline':False]['text':' --- end widget management','line_number':248,'multiline':False]['text':' The widget is not in the viewport','line_number':280,'multiline':False]['text':' The widget is in the viewport, find a good line for it','line_number':284,'multiline':False]['text':' sort requests by lineNumber ASC, lane  ASC, zIndex DESC, type DESC (widgets first), className ASC','line_number':298,'multiline':False]['text':' don't change this sort unless you understand `prepareRender` below.','line_number':299,'multiline':False]['text':'*
	 * Will store render information in each widget's renderInfo and in `_decorationGlyphsToRender`.
	 ','line_number':322,'multiline':True]['text':' not possible','line_number':340,'multiline':False]['text':' Requests are sorted by lineNumber and lane, so we read all requests for this particular location','line_number':344,'multiline':False]['text':' not possible','line_number':347,'multiline':False]['text':' combine all decorations with the same z-index','line_number':353,'multiline':False]['text':' requests are sorted by zIndex, type, and className so we can dedup className by looking at the previous one','line_number':356,'multiline':False]['text':' TODO@joyceerhl Implement overflow for remaining decorations','line_number':366,'multiline':False]['text':' widgets cannot be combined','line_number':368,'multiline':False]['text':' Render widgets','line_number':392,'multiline':False]['text':' this widget is not visible','line_number':395,'multiline':False]['text':' Render decorations, reusing previous dom nodes as possible','line_number':409,'multiline':False]['text':' remove extra dom nodes','line_number':432,'multiline':False]['text':'*
	 * it will contain the location where to render the widget
	 * or null if the widget is not visible
	 ','line_number':444,'multiline':True]['text':'*
 * A request to render a decoration in the glyph margin at a certain location.
 ','line_number':461,'multiline':True]['text':'*
 * A request to render a widget in the glyph margin at a certain location.
 ','line_number':479,'multiline':True]