['text':'---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------','line_number':1,'multiline':True]['text':'*
	 * When doing composition, the currently composed text might be split up into
	 * multiple tokens, then merged again into a single token, etc. Here we attempt
	 * to keep the presentation of the <textarea> stable by using the previous used
	 * style if multiple tokens come into play. This avoids flickering.
	 ','line_number':54,'multiline':True]['text':' TODO: what if the view positions are not on the same line?','line_number':82,'multiline':False]['text':' To avoid flickering, once set, always reuse a presentation throughout the entire IME session','line_number':90,'multiline':False]['text':'*
	 * Defined only when the text area is visible (composition case).
	 ','line_number':128,'multiline':True]['text':'*
	 * The position at which the textarea was rendered.
	 * This is useful for hit-testing and determining the mouse position.
	 ','line_number':135,'multiline':True]['text':' Text Area (The focus will always be in the textarea when the cursor is blinking)','line_number':176,'multiline':False]['text':' We know for a fact that a screen reader is not attached','line_number':246,'multiline':False]['text':' On OSX, we write the character before the cursor to allow for "long-press" composition','line_number':247,'multiline':False]['text':' Also on OSX, we write the word before the cursor to allow for the Accessibility Keyboard to give good hints','line_number':248,'multiline':False]['text':' on macOS, write current selection into textarea will allow system text services pick selected text,','line_number':262,'multiline':False]['text':' but we still want to limit the amount of text given Chromium handles very poorly text even of a few','line_number':263,'multiline':False]['text':' thousand chars','line_number':264,'multiline':False]['text':' (https://github.com/microsoft/vscode/issues/27799)','line_number':265,'multiline':False]['text':' on Safari, document.execCommand('cut') and document.execCommand('copy') will just not work','line_number':272,'multiline':False]['text':' if the textarea has no content selected. So if there is an editor selection, ensure something','line_number':273,'multiline':False]['text':' is selected in the textarea.','line_number':274,'multiline':False]['text':' when tapping in the editor on a word, Android enters composition mode.','line_number':284,'multiline':False]['text':' in the `compositionstart` event we cannot clear the textarea, because','line_number':285,'multiline':False]['text':' it then forgets to ever send a `compositionend`.','line_number':286,'multiline':False]['text':' we therefore only write the current word in the textarea','line_number':287,'multiline':False]['text':' must be handled through the new command','line_number':341,'multiline':False]['text':' The textarea might contain some content when composition starts.','line_number':360,'multiline':False]['text':'','line_number':361,'multiline':False]['text':' When we make the textarea visible, it always has a height of 1 line,','line_number':362,'multiline':False]['text':' so we don't need to worry too much about content on lines above or below','line_number':363,'multiline':False]['text':' the selection.','line_number':364,'multiline':False]['text':'','line_number':365,'multiline':False]['text':' However, the text on the current line needs to be made visible because','line_number':366,'multiline':False]['text':' some IME methods allow to move to other glyphs on the current line','line_number':367,'multiline':False]['text':' (by pressing arrow keys).','line_number':368,'multiline':False]['text':'','line_number':369,'multiline':False]['text':' (1) The textarea might contain only some parts of the current line,','line_number':370,'multiline':False]['text':' like the word before the selection. Also, the content inside the textarea','line_number':371,'multiline':False]['text':' can grow or shrink as composition occurs. We therefore anchor the textarea','line_number':372,'multiline':False]['text':' in terms of distance to a certain line start and line end.','line_number':373,'multiline':False]['text':'','line_number':374,'multiline':False]['text':' (2) Also, we should not make \t characters visible, because their rendering','line_number':375,'multiline':False]['text':' inside the <textarea> will not align nicely with our rendering. We therefore','line_number':376,'multiline':False]['text':' will hide (if necessary) some of the leading text on the current line.','line_number':377,'multiline':False]['text':' Find the text that is on the current line before the selection','line_number':383,'multiline':False]['text':' We now search to see if we should hide some part of it (if it contains \t)','line_number':388,'multiline':False]['text':' Find the text that is on the current line after the selection','line_number':402,'multiline':False]['text':' Scroll to reveal the location in the editor where composition occurs','line_number':416,'multiline':False]['text':' We turn off wrapping if the <textarea> becomes visible for composition','line_number':433,'multiline':False]['text':' Show the textarea','line_number':439,'multiline':False]['text':' We turn on wrapping as necessary if the <textarea> hides after composition','line_number':459,'multiline':False]['text':' SOS','line_number':575,'multiline':False]['text':' If a screen reader is attached and the default value is not set we should automatically increase the page size to 500 for a better experience','line_number':586,'multiline':False]['text':' When wrapping is enabled and a screen reader might be attached,','line_number':592,'multiline':False]['text':' we will size the textarea to match the width used for wrapping points computation (see `domLineBreaksComputer.ts`).','line_number':593,'multiline':False]['text':' This is because screen readers will read the text in the textarea and we'd like that the','line_number':594,'multiline':False]['text':' wrapping points in the textarea match the wrapping points in the editor.','line_number':595,'multiline':False]['text':' --- begin event handlers','line_number':608,'multiline':False]['text':' We must update the <textarea> synchronously, otherwise long press IME on macos breaks.','line_number':642,'multiline':False]['text':' See https://github.com/microsoft/vscode/issues/165821','line_number':643,'multiline':False]['text':' true for inline decorations that can end up relayouting text','line_number':648,'multiline':False]['text':' --- end event handlers','line_number':672,'multiline':False]['text':' --- begin view API','line_number':674,'multiline':False]['text':' --- end view API','line_number':707,'multiline':False]['text':' When someone requests to disable IME, we set the "readonly" attribute on the <textarea>.','line_number':711,'multiline':False]['text':' This will prevent composition.','line_number':712,'multiline':False]['text':' The text area is visible for composition reasons','line_number':737,'multiline':False]['text':' See https://github.com/microsoft/vscode/issues/141725#issuecomment-1050670841','line_number':749,'multiline':False]['text':' Here we are adding +1 to avoid flickering that might be caused by having a width that is too small.','line_number':750,'multiline':False]['text':' This could be caused by rounding errors that might only show up with certain font families.','line_number':751,'multiline':False]['text':' In other words, a pixel might be lost when doing something like','line_number':752,'multiline':False]['text':'      `Math.round(end) - Math.round(start)`','line_number':753,'multiline':False]['text':' vs','line_number':754,'multiline':False]['text':'      `Math.round(end - start)`','line_number':755,'multiline':False]['text':' the textarea would be rendered on top of the margin,','line_number':758,'multiline':False]['text':' so reduce its width. We use the same technique as','line_number':759,'multiline':False]['text':' for hiding text before','line_number':760,'multiline':False]['text':' the textarea would be wider than the content width,','line_number':767,'multiline':False]['text':' so reduce its width.','line_number':768,'multiline':False]['text':' Try to render the textarea with the color/font style to match the text under it','line_number':772,'multiline':False]['text':' The primary cursor is outside the viewport => place textarea to the top left','line_number':802,'multiline':False]['text':' cursor is outside the viewport','line_number':809,'multiline':False]['text':' cursor is outside the viewport','line_number':816,'multiline':False]['text':' The primary cursor is in the viewport (at least vertically) => place textarea on the cursor','line_number':821,'multiline':False]['text':' For the popup emoji input, we will make the text area as high as the line height','line_number':824,'multiline':False]['text':' We will also make the fontSize and lineHeight the correct dimensions to help with the placement of these pickers','line_number':825,'multiline':False]['text':' In case the textarea contains a word, we're going to try to align the textarea's cursor','line_number':834,'multiline':False]['text':' with our cursor by scrolling the textarea as much as possible','line_number':835,'multiline':False]['text':' (in WebKit the textarea is 1px by 1px because it cannot handle input to a 0x0 textarea)','line_number':866,'multiline':False]['text':' specifically, when doing Korean IME, setting the textarea to 0x0 breaks IME badly.','line_number':867,'multiline':False]['text':' fontWeight is also set by `applyFontInfo`, so only overwrite it if necessary','line_number':893,'multiline':False]['text':' just like the textarea','line_number':944,'multiline':False]['text':' just like the textarea','line_number':945,'multiline':False]