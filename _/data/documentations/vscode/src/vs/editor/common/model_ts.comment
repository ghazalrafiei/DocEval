['text':'---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------','line_number':1,'multiline':True]['text':'*
 * Vertical Lane in the overview ruler of the editor.
 ','line_number':27,'multiline':True]['text':'*
 * Vertical Lane in the glyph margin of the editor.
 ','line_number':37,'multiline':True]['text':'*
 * Position in the minimap to render the decoration.
 ','line_number':45,'multiline':True]['text':'*
	 * CSS color to render.
	 * e.g.: rgba(100, 100, 100, 0.5) or a color from the color registry
	 ','line_number':54,'multiline':True]['text':'*
	 * CSS color to render.
	 * e.g.: rgba(100, 100, 100, 0.5) or a color from the color registry
	 ','line_number':59,'multiline':True]['text':'*
	 * The position in the glyph margin.
	 ','line_number':67,'multiline':True]['text':'*
 * Options for rendering a model decoration in the overview ruler.
 ','line_number':73,'multiline':True]['text':'*
	 * The position in the overview ruler.
	 ','line_number':77,'multiline':True]['text':'*
 * Options for rendering a model decoration in the minimap.
 ','line_number':83,'multiline':True]['text':'*
	 * The position in the minimap.
	 ','line_number':87,'multiline':True]['text':'*
 * Options for a model decoration.
 ','line_number':93,'multiline':True]['text':'*
	 * A debug description that can be used for inspecting model decorations.
	 * @internal
	 ','line_number':97,'multiline':True]['text':'*
	 * Customize the growing behavior of the decoration when typing at the edges of the decoration.
	 * Defaults to TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges
	 ','line_number':102,'multiline':True]['text':'*
	 * CSS class name describing the decoration.
	 ','line_number':107,'multiline':True]['text':'*
	 * Indicates whether the decoration should span across the entire line when it continues onto the next line.
	 ','line_number':111,'multiline':True]['text':'*
	 * Indicates if this block should be rendered after the last line.
	 * In this case, the range must be empty and set to the last line.
	 ','line_number':116,'multiline':True]['text':'*
	 * Message to be rendered when hovering over the glyph margin decoration.
	 ','line_number':124,'multiline':True]['text':'*
	 * Array of MarkdownString to render as the decoration message.
	 ','line_number':128,'multiline':True]['text':'*
	 * Should the decoration expand to encompass a whole line.
	 ','line_number':132,'multiline':True]['text':'*
	 * Always render the decoration (even when the range it encompasses is collapsed).
	 ','line_number':136,'multiline':True]['text':'*
	 * Collapse the decoration if its entire range is being replaced via an edit.
	 * @internal
	 ','line_number':140,'multiline':True]['text':'*
	 * Specifies the stack order of a decoration.
	 * A decoration with greater stack order is always in front of a decoration with
	 * a lower stack order when the decorations are on the same line.
	 ','line_number':145,'multiline':True]['text':'*
	 * If set, render this decoration in the overview ruler.
	 ','line_number':151,'multiline':True]['text':'*
	 * If set, render this decoration in the minimap.
	 ','line_number':155,'multiline':True]['text':'*
	 * If set, the decoration will be rendered in the glyph margin with this CSS class name.
	 ','line_number':159,'multiline':True]['text':'*
	 * If set and the decoration has {@link glyphMarginClassName} set, render this decoration
	 * with the specified {@link IModelDecorationGlyphMarginOptions} in the glyph margin.
	 ','line_number':163,'multiline':True]['text':'*
	 * If set, the decoration will be rendered in the lines decorations with this CSS class name.
	 ','line_number':168,'multiline':True]['text':'*
	 * If set, the decoration will be rendered in the lines decorations with this CSS class name, but only for the first line in case of line wrapping.
	 ','line_number':172,'multiline':True]['text':'*
	 * If set, the decoration will be rendered in the margin (covering its full width) with this CSS class name.
	 ','line_number':176,'multiline':True]['text':'*
	 * If set, the decoration will be rendered inline with the text with this CSS class name.
	 * Please use this only for CSS rules that must impact the text. For example, use `className`
	 * to have a background color decoration.
	 ','line_number':180,'multiline':True]['text':'*
	 * If there is an `inlineClassName` which affects letter spacing.
	 ','line_number':186,'multiline':True]['text':'*
	 * If set, the decoration will be rendered before the text with this CSS class name.
	 ','line_number':190,'multiline':True]['text':'*
	 * If set, the decoration will be rendered after the text with this CSS class name.
	 ','line_number':194,'multiline':True]['text':'*
	 * If set, text will be injected in the view after the range.
	 ','line_number':198,'multiline':True]['text':'*
	 * If set, text will be injected in the view before the range.
	 ','line_number':203,'multiline':True]['text':'*
	 * If set, this decoration will not be rendered for comment tokens.
	 * @internal
	','line_number':208,'multiline':True]['text':'*
	 * If set, this decoration will not be rendered for string tokens.
	 * @internal
	','line_number':214,'multiline':True]['text':'*
 * Configures text that is injected into the view without changing the underlying document.
','line_number':221,'multiline':True]['text':'*
	 * Sets the text to inject. Must be a single line.
	 ','line_number':225,'multiline':True]['text':'*
	 * If set, the decoration will be rendered inline with the text with this CSS class name.
	 ','line_number':230,'multiline':True]['text':'*
	 * If there is an `inlineClassName` which affects letter spacing.
	 ','line_number':235,'multiline':True]['text':'*
	 * This field allows to attach data to this injected text.
	 * The data can be read when injected texts at a given position are queried.
	 ','line_number':240,'multiline':True]['text':'*
	 * Configures cursor stops around injected text.
	 * Defaults to {@link InjectedTextCursorStops.Both}.
	','line_number':246,'multiline':True]['text':'*
 * New model decorations.
 ','line_number':260,'multiline':True]['text':'*
	 * Range that this decoration covers.
	 ','line_number':264,'multiline':True]['text':'*
	 * Options associated with this decoration.
	 ','line_number':268,'multiline':True]['text':'*
 * A decoration in the model.
 ','line_number':274,'multiline':True]['text':'*
	 * Identifier for a decoration.
	 ','line_number':278,'multiline':True]['text':'*
	 * Identifier for a decoration's owner.
	 ','line_number':282,'multiline':True]['text':'*
	 * Range that this decoration covers.
	 ','line_number':286,'multiline':True]['text':'*
	 * Options associated with this decoration.
	 ','line_number':290,'multiline':True]['text':'*
 * An accessor that can add, change or remove model decorations.
 * @internal
 ','line_number':296,'multiline':True]['text':'*
	 * Add a new decoration.
	 * @param range Range that this decoration covers.
	 * @param options Options associated with this decoration.
	 * @return An unique identifier associated with this decoration.
	 ','line_number':301,'multiline':True]['text':'*
	 * Change the range that an existing decoration covers.
	 * @param id The unique identifier associated with the decoration.
	 * @param newRange The new range that this decoration covers.
	 ','line_number':308,'multiline':True]['text':'*
	 * Change the options associated with an existing decoration.
	 * @param id The unique identifier associated with the decoration.
	 * @param newOptions The new options associated with this decoration.
	 ','line_number':314,'multiline':True]['text':'*
	 * Remove an existing decoration.
	 * @param id The unique identifier associated with the decoration.
	 ','line_number':320,'multiline':True]['text':'*
	 * Perform a minimum amount of operations, in order to transform the decorations
	 * identified by `oldDecorations` to the decorations described by `newDecorations`
	 * and returns the new identifiers associated with the resulting decorations.
	 *
	 * @param oldDecorations Array containing previous decorations identifiers.
	 * @param newDecorations Array describing what decorations should result after the call.
	 * @return An array containing the new decorations identifiers.
	 ','line_number':325,'multiline':True]['text':'*
 * End of line character preference.
 ','line_number':337,'multiline':True]['text':'*
	 * Use the end of line character identified in the text buffer.
	 ','line_number':341,'multiline':True]['text':'*
	 * Use line feed (\n) as the end of line character.
	 ','line_number':345,'multiline':True]['text':'*
	 * Use carriage return and line feed (\r\n) as the end of line character.
	 ','line_number':349,'multiline':True]['text':'*
 * The default end of line to use when instantiating models.
 ','line_number':355,'multiline':True]['text':'*
	 * Use line feed (\n) as the end of line character.
	 ','line_number':359,'multiline':True]['text':'*
	 * Use carriage return and line feed (\r\n) as the end of line character.
	 ','line_number':363,'multiline':True]['text':'*
 * End of line character preference.
 ','line_number':369,'multiline':True]['text':'*
	 * Use line feed (\n) as the end of line character.
	 ','line_number':373,'multiline':True]['text':'*
	 * Use carriage return and line feed (\r\n) as the end of line character.
	 ','line_number':377,'multiline':True]['text':'*
 * An identifier for a single edit operation.
 * @internal
 ','line_number':383,'multiline':True]['text':'*
	 * Identifier major
	 ','line_number':388,'multiline':True]['text':'*
	 * Identifier minor
	 ','line_number':392,'multiline':True]['text':'*
 * A single edit operation, that has an identifier.
 ','line_number':398,'multiline':True]['text':'*
	 * An identifier associated with this single edit operation.
	 * @internal
	 ','line_number':402,'multiline':True]['text':'*
	 * This indicates that this operation is inserting automatic whitespace
	 * that can be removed on next model edit operation if `config.trimAutoWhitespace` is true.
	 * @internal
	 ','line_number':407,'multiline':True]['text':'*
	 * This indicates that this operation is in a set of operations that are tracked and should not be "simplified".
	 * @internal
	 ','line_number':413,'multiline':True]['text':'*
	 * An identifier associated with this single edit operation.
	 * @internal
	 ','line_number':421,'multiline':True]['text':'*
	 * The range to replace. This can be empty to emulate a simple insert.
	 ','line_number':426,'multiline':True]['text':'*
	 * The text to replace with. This can be empty to emulate a simple delete.
	 ','line_number':430,'multiline':True]['text':'*
	 * @internal
	 ','line_number':434,'multiline':True]['text':'*
 * A callback that can compute the cursor state after applying a series of edit operations.
 ','line_number':440,'multiline':True]['text':'*
	 * A callback that can compute the resulting cursors state after some edit operations have been executed.
	 ','line_number':444,'multiline':True]['text':'*
	 * @internal
	 ','line_number':465,'multiline':True]['text':'*
	 * @internal
	 ','line_number':490,'multiline':True]['text':'*
	 * @internal
	 ','line_number':505,'multiline':True]['text':'*
 * @internal
 ','line_number':518,'multiline':True]['text':'*
	 * @internal
	 ','line_number':552,'multiline':True]['text':'*
 * Describes the behavior of decorations when typing/editing near their edges.
 * Note: Please do not edit the values, as they very carefully match `DecorationRangeBehavior`
 ','line_number':561,'multiline':True]['text':'*
 * Text snapshot that works like an iterator.
 * Will try to return chunks of roughly ~64KB size.
 * Will return null when finished.
 ','line_number':572,'multiline':True]['text':'*
 * @internal
 ','line_number':581,'multiline':True]['text':'*
 * A model.
 ','line_number':588,'multiline':True]['text':'*
	 * Gets the resource associated with this editor model.
	 ','line_number':593,'multiline':True]['text':'*
	 * A unique identifier associated with this model.
	 ','line_number':598,'multiline':True]['text':'*
	 * This model is constructed for a simple widget code editor.
	 * @internal
	 ','line_number':603,'multiline':True]['text':'*
	 * If true, the text model might contain RTL.
	 * If false, the text model **contains only** contain LTR.
	 * @internal
	 ','line_number':609,'multiline':True]['text':'*
	 * If true, the text model might contain LINE SEPARATOR (LS), PARAGRAPH SEPARATOR (PS).
	 * If false, the text model definitely does not contain these.
	 * @internal
	 ','line_number':616,'multiline':True]['text':'*
	 * @internal
	 ','line_number':623,'multiline':True]['text':'*
	 * If true, the text model might contain non basic ASCII.
	 * If false, the text model **contains only** basic ASCII.
	 * @internal
	 ','line_number':628,'multiline':True]['text':'*
	 * Get the resolved options for this model.
	 ','line_number':635,'multiline':True]['text':'*
	 * Get the formatting options for this model.
	 * @internal
	 ','line_number':640,'multiline':True]['text':'*
	 * Get the current version id of the model.
	 * Anytime a change happens to the model (even undo/redo),
	 * the version id is incremented.
	 ','line_number':646,'multiline':True]['text':'*
	 * Get the alternative version id of the model.
	 * This alternative version id is not always incremented,
	 * it will return the same values in the case of undo-redo.
	 ','line_number':653,'multiline':True]['text':'*
	 * Replace the entire text buffer value contained in this model.
	 ','line_number':660,'multiline':True]['text':'*
	 * Get the text stored in this model.
	 * @param eol The end of line character preference. Defaults to `EndOfLinePreference.TextDefined`.
	 * @param preserverBOM Preserve a BOM character if it was detected when the model was constructed.
	 * @return The text.
	 ','line_number':665,'multiline':True]['text':'*
	 * Get the text stored in this model.
	 * @param preserverBOM Preserve a BOM character if it was detected when the model was constructed.
	 * @return The text snapshot (it is safe to consume it asynchronously).
	 ','line_number':673,'multiline':True]['text':'*
	 * Get the length of the text stored in this model.
	 ','line_number':680,'multiline':True]['text':'*
	 * Check if the raw text stored in this model equals another raw text.
	 * @internal
	 ','line_number':685,'multiline':True]['text':'*
	 * Get the underling text buffer.
	 * @internal
	 ','line_number':691,'multiline':True]['text':'*
	 * Get the text in a certain range.
	 * @param range The range describing what text to get.
	 * @param eol The end of line character preference. This will only be used for multiline ranges. Defaults to `EndOfLinePreference.TextDefined`.
	 * @return The text.
	 ','line_number':697,'multiline':True]['text':'*
	 * Get the length of text in a certain range.
	 * @param range The range describing what text length to get.
	 * @return The text length.
	 ','line_number':705,'multiline':True]['text':'*
	 * Get the character count of text in a certain range.
	 * @param range The range describing what text length to get.
	 ','line_number':712,'multiline':True]['text':'*
	 * Splits characters in two buckets. First bucket (A) is of characters that
	 * sit in lines with length < `LONG_LINE_BOUNDARY`. Second bucket (B) is of
	 * characters that sit in lines with length >= `LONG_LINE_BOUNDARY`.
	 * If count(B) > count(A) return true. Returns false otherwise.
	 * @internal
	 ','line_number':718,'multiline':True]['text':'*
	 * Get the number of lines in the model.
	 ','line_number':727,'multiline':True]['text':'*
	 * Get the text for a certain line.
	 ','line_number':732,'multiline':True]['text':'*
	 * Get the text length for a certain line.
	 ','line_number':737,'multiline':True]['text':'*
	 * Get the text for all lines.
	 ','line_number':742,'multiline':True]['text':'*
	 * Get the end of line sequence predominantly used in the text buffer.
	 * @return EOL char sequence (e.g.: '\n' or '\r\n').
	 ','line_number':747,'multiline':True]['text':'*
	 * Get the end of line sequence predominantly used in the text buffer.
	 ','line_number':753,'multiline':True]['text':'*
	 * Get the minimum legal column for line at `lineNumber`
	 ','line_number':758,'multiline':True]['text':'*
	 * Get the maximum legal column for line at `lineNumber`
	 ','line_number':763,'multiline':True]['text':'*
	 * Returns the column before the first non whitespace character for line at `lineNumber`.
	 * Returns 0 if line is empty or contains only whitespace.
	 ','line_number':768,'multiline':True]['text':'*
	 * Returns the column after the last non whitespace character for line at `lineNumber`.
	 * Returns 0 if line is empty or contains only whitespace.
	 ','line_number':774,'multiline':True]['text':'*
	 * Create a valid position.
	 ','line_number':780,'multiline':True]['text':'*
	 * Advances the given position by the given offset (negative offsets are also accepted)
	 * and returns it as a new valid position.
	 *
	 * If the offset and position are such that their combination goes beyond the beginning or
	 * end of the model, throws an exception.
	 *
	 * If the offset is such that the new position would be in the middle of a multi-byte
	 * line terminator, throws an exception.
	 ','line_number':785,'multiline':True]['text':'*
	 * Create a valid range.
	 ','line_number':797,'multiline':True]['text':'*
	 * Converts the position to a zero-based offset.
	 *
	 * The position will be [adjusted](#TextDocument.validatePosition).
	 *
	 * @param position A position.
	 * @return A valid zero-based offset.
	 ','line_number':802,'multiline':True]['text':'*
	 * Converts a zero-based offset to a position.
	 *
	 * @param offset A zero-based offset.
	 * @return A valid [position](#Position).
	 ','line_number':812,'multiline':True]['text':'*
	 * Get a range covering the entire model.
	 ','line_number':820,'multiline':True]['text':'*
	 * Returns if the model was disposed or not.
	 ','line_number':825,'multiline':True]['text':'*
	 * This model is so large that it would not be a good idea to sync it over
	 * to web workers or other places.
	 * @internal
	 ','line_number':830,'multiline':True]['text':'*
	 * The file is so large, that even tokenization is disabled.
	 * @internal
	 ','line_number':837,'multiline':True]['text':'*
	 * The file is so large, that operations on it might be too large for heap
	 * and can lead to OOM crashes so they should be disabled.
	 * @internal
	 ','line_number':843,'multiline':True]['text':'*
	 * Search the model.
	 * @param searchString The string used to search. If it is a regular expression, set `isRegex` to true.
	 * @param searchOnlyEditableRange Limit the searching to only search inside the editable range of the model.
	 * @param isRegex Used to indicate that `searchString` is a regular expression.
	 * @param matchCase Force the matching to match lower/upper case exactly.
	 * @param wordSeparators Force the matching to match entire words only. Pass null otherwise.
	 * @param captureMatches The result will contain the captured groups.
	 * @param limitResultCount Limit the number of results
	 * @return The ranges where the matches are. It is empty if not matches have been found.
	 ','line_number':850,'multiline':True]['text':'*
	 * Search the model.
	 * @param searchString The string used to search. If it is a regular expression, set `isRegex` to true.
	 * @param searchScope Limit the searching to only search inside these ranges.
	 * @param isRegex Used to indicate that `searchString` is a regular expression.
	 * @param matchCase Force the matching to match lower/upper case exactly.
	 * @param wordSeparators Force the matching to match entire words only. Pass null otherwise.
	 * @param captureMatches The result will contain the captured groups.
	 * @param limitResultCount Limit the number of results
	 * @return The ranges where the matches are. It is empty if no matches have been found.
	 ','line_number':862,'multiline':True]['text':'*
	 * Search the model for the next match. Loops to the beginning of the model if needed.
	 * @param searchString The string used to search. If it is a regular expression, set `isRegex` to true.
	 * @param searchStart Start the searching at the specified position.
	 * @param isRegex Used to indicate that `searchString` is a regular expression.
	 * @param matchCase Force the matching to match lower/upper case exactly.
	 * @param wordSeparators Force the matching to match entire words only. Pass null otherwise.
	 * @param captureMatches The result will contain the captured groups.
	 * @return The range where the next match is. It is null if no next match has been found.
	 ','line_number':874,'multiline':True]['text':'*
	 * Search the model for the previous match. Loops to the end of the model if needed.
	 * @param searchString The string used to search. If it is a regular expression, set `isRegex` to true.
	 * @param searchStart Start the searching at the specified position.
	 * @param isRegex Used to indicate that `searchString` is a regular expression.
	 * @param matchCase Force the matching to match lower/upper case exactly.
	 * @param wordSeparators Force the matching to match entire words only. Pass null otherwise.
	 * @param captureMatches The result will contain the captured groups.
	 * @return The range where the previous match is. It is null if no previous match has been found.
	 ','line_number':885,'multiline':True]['text':'*
	 * Get the language associated with this model.
	 ','line_number':898,'multiline':True]['text':'*
	 * Set the current language mode associated with the model.
	 * @param languageId The new language.
	 * @param source The source of the call that set the language.
	 * @internal
	 ','line_number':903,'multiline':True]['text':'*
	 * Set the current language mode associated with the model.
	 * @param languageSelection The new language selection.
	 * @param source The source of the call that set the language.
	 * @internal
	 ','line_number':911,'multiline':True]['text':'*
	 * Returns the real (inner-most) language mode at a given position.
	 * The result might be inaccurate. Use `forceTokenization` to ensure accurate tokens.
	 * @internal
	 ','line_number':919,'multiline':True]['text':'*
	 * Get the word under or besides `position`.
	 * @param position The position to look for a word.
	 * @return The word under or besides `position`. Might be null.
	 ','line_number':926,'multiline':True]['text':'*
	 * Get the word under or besides `position` trimmed to `position`.column
	 * @param position The position to look for a word.
	 * @return The word under or besides `position`. Will never be null.
	 ','line_number':933,'multiline':True]['text':'*
	 * Change the decorations. The callback will be called with a change accessor
	 * that becomes invalid as soon as the callback finishes executing.
	 * This allows for all events to be queued up until the change
	 * is completed. Returns whatever the callback returns.
	 * @param ownerId Identifies the editor id in which these decorations should appear. If no `ownerId` is provided, the decorations will appear in all editors that attach this model.
	 * @internal
	 ','line_number':940,'multiline':True]['text':'*
	 * Perform a minimum amount of operations, in order to transform the decorations
	 * identified by `oldDecorations` to the decorations described by `newDecorations`
	 * and returns the new identifiers associated with the resulting decorations.
	 *
	 * @param oldDecorations Array containing previous decorations identifiers.
	 * @param newDecorations Array describing what decorations should result after the call.
	 * @param ownerId Identifies the editor id in which these decorations should appear. If no `ownerId` is provided, the decorations will appear in all editors that attach this model.
	 * @return An array containing the new decorations identifiers.
	 ','line_number':950,'multiline':True]['text':'*
	 * Remove all decorations that have been added with this specific ownerId.
	 * @param ownerId The owner id to search for.
	 * @internal
	 ','line_number':962,'multiline':True]['text':'*
	 * Get the options associated with a decoration.
	 * @param id The decoration id.
	 * @return The decoration options or null if the decoration was not found.
	 ','line_number':969,'multiline':True]['text':'*
	 * Get the range associated with a decoration.
	 * @param id The decoration id.
	 * @return The decoration range or null if the decoration was not found.
	 ','line_number':976,'multiline':True]['text':'*
	 * Gets all the decorations for the line `lineNumber` as an array.
	 * @param lineNumber The line number
	 * @param ownerId If set, it will ignore decorations belonging to other owners.
	 * @param filterOutValidation If set, it will ignore decorations specific to validation (i.e. warnings, errors).
	 * @return An array with the decorations
	 ','line_number':983,'multiline':True]['text':'*
	 * Gets all the decorations for the lines between `startLineNumber` and `endLineNumber` as an array.
	 * @param startLineNumber The start line number
	 * @param endLineNumber The end line number
	 * @param ownerId If set, it will ignore decorations belonging to other owners.
	 * @param filterOutValidation If set, it will ignore decorations specific to validation (i.e. warnings, errors).
	 * @return An array with the decorations
	 ','line_number':992,'multiline':True]['text':'*
	 * Gets all the decorations in a range as an array. Only `startLineNumber` and `endLineNumber` from `range` are used for filtering.
	 * So for now it returns all the decorations on the same line as `range`.
	 * @param range The range to search in
	 * @param ownerId If set, it will ignore decorations belonging to other owners.
	 * @param filterOutValidation If set, it will ignore decorations specific to validation (i.e. warnings, errors).
	 * @param onlyMinimapDecorations If set, it will return only decorations that render in the minimap.
	 * @param onlyMarginDecorations If set, it will return only decorations that render in the glyph margin.
	 * @return An array with the decorations
	 ','line_number':1002,'multiline':True]['text':'*
	 * Gets all the decorations as an array.
	 * @param ownerId If set, it will ignore decorations belonging to other owners.
	 * @param filterOutValidation If set, it will ignore decorations specific to validation (i.e. warnings, errors).
	 ','line_number':1014,'multiline':True]['text':'*
	 * Gets all decorations that render in the glyph margin as an array.
	 * @param ownerId If set, it will ignore decorations belonging to other owners.
	 ','line_number':1021,'multiline':True]['text':'*
	 * Gets all the decorations that should be rendered in the overview ruler as an array.
	 * @param ownerId If set, it will ignore decorations belonging to other owners.
	 * @param filterOutValidation If set, it will ignore decorations specific to validation (i.e. warnings, errors).
	 ','line_number':1027,'multiline':True]['text':'*
	 * Gets all the decorations that contain injected text.
	 * @param ownerId If set, it will ignore decorations belonging to other owners.
	 ','line_number':1034,'multiline':True]['text':'*
	 * @internal
	 ','line_number':1040,'multiline':True]['text':'*
	 * @internal
	 ','line_number':1045,'multiline':True]['text':'*
	 * @internal
	 ','line_number':1049,'multiline':True]['text':'*
	 * Normalize a string containing whitespace according to indentation rules (converts to spaces or to tabs).
	 ','line_number':1054,'multiline':True]['text':'*
	 * Change the options of this model.
	 ','line_number':1059,'multiline':True]['text':'*
	 * Detect the indentation options for this model from its content.
	 ','line_number':1064,'multiline':True]['text':'*
	 * Close the current undo-redo element.
	 * This offers a way to create an undo/redo stop point.
	 ','line_number':1069,'multiline':True]['text':'*
	 * Open the current undo-redo element.
	 * This offers a way to remove the current undo/redo stop point.
	 ','line_number':1075,'multiline':True]['text':'*
	 * Push edit operations, basically editing the model. This is the preferred way
	 * of editing the model. The edit operations will land on the undo stack.
	 * @param beforeCursorState The cursor state before the edit operations. This cursor state will be returned when `undo` or `redo` are invoked.
	 * @param editOperations The edit operations.
	 * @param cursorStateComputer A callback that can compute the resulting cursors state after the edit operations have been executed.
	 * @return The cursor state returned by the `cursorStateComputer`.
	 ','line_number':1081,'multiline':True]['text':'*
	 * @internal
	 ','line_number':1090,'multiline':True]['text':'*
	 * Change the end of line sequence. This is the preferred way of
	 * changing the eol sequence. This will land on the undo stack.
	 ','line_number':1095,'multiline':True]['text':'*
	 * Edit the model without adding the edits to the undo stack.
	 * This can have dire consequences on the undo stack! See @pushEditOperations for the preferred way.
	 * @param operations The edit operations.
	 * @return If desired, the inverse edit operations, that, when applied, will bring the model back to the previous state.
	 ','line_number':1101,'multiline':True]['text':'*
	 * Change the end of line sequence without recording in the undo stack.
	 * This can have dire consequences on the undo stack! See @pushEOL for the preferred way.
	 ','line_number':1111,'multiline':True]['text':'*
	 * @internal
	 ','line_number':1117,'multiline':True]['text':'*
	 * @internal
	 ','line_number':1122,'multiline':True]['text':'*
	 * Undo edit operations until the previous undo/redo point.
	 * The inverse edit operations will be pushed on the redo stack.
	 * @internal
	 ','line_number':1127,'multiline':True]['text':'*
	 * Is there anything in the undo stack?
	 * @internal
	 ','line_number':1134,'multiline':True]['text':'*
	 * Redo edit operations until the next undo/redo point.
	 * The inverse edit operations will be pushed on the undo stack.
	 * @internal
	 ','line_number':1140,'multiline':True]['text':'*
	 * Is there anything in the redo stack?
	 * @internal
	 ','line_number':1147,'multiline':True]['text':'*
	 * @deprecated Please use `onDidChangeContent` instead.
	 * An event emitted when the contents of the model have changed.
	 * @internal
	 * @event
	 ','line_number':1153,'multiline':True]['text':'*
	 * An event emitted when the contents of the model have changed.
	 * @event
	 ','line_number':1160,'multiline':True]['text':'*
	 * An event emitted when decorations of the model have changed.
	 * @event
	 ','line_number':1165,'multiline':True]['text':'*
	 * An event emitted when the model options have changed.
	 * @event
	 ','line_number':1170,'multiline':True]['text':'*
	 * An event emitted when the language associated with the model has changed.
	 * @event
	 ','line_number':1175,'multiline':True]['text':'*
	 * An event emitted when the language configuration associated with the model has changed.
	 * @event
	 ','line_number':1180,'multiline':True]['text':'*
	 * An event emitted when the tokens associated with the model have changed.
	 * @event
	 * @internal
	 ','line_number':1185,'multiline':True]['text':'*
	 * An event emitted when the model has been attached to the first editor or detached from the last editor.
	 * @event
	 ','line_number':1191,'multiline':True]['text':'*
	 * An event emitted right before disposing the model.
	 * @event
	 ','line_number':1196,'multiline':True]['text':'*
	 * Destroy this model.
	 ','line_number':1202,'multiline':True]['text':'*
	 * @internal
	 ','line_number':1207,'multiline':True]['text':'*
	 * @internal
	 ','line_number':1212,'multiline':True]['text':'*
	 * Returns if this model is attached to an editor or not.
	 ','line_number':1217,'multiline':True]['text':'*
	 * Returns the count of editors this model is attached to.
	 * @internal
	 ','line_number':1222,'multiline':True]['text':'*
	 * Among all positions that are projected to the same position in the underlying text model as
	 * the given position, select a unique position as indicated by the affinity.
	 *
	 * PositionAffinity.Left:
	 * The normalized position must be equal or left to the requested position.
	 *
	 * PositionAffinity.Right:
	 * The normalized position must be equal or right to the requested position.
	 *
	 * @internal
	 ','line_number':1228,'multiline':True]['text':'*
	 * Gets the column at which indentation stops at a given line.
	 * @internal
	','line_number':1242,'multiline':True]['text':'*
	 * Returns an object that can be used to query brackets.
	 * @internal
	','line_number':1248,'multiline':True]['text':'*
	 * Returns an object that can be used to query indent guides.
	 * @internal
	','line_number':1254,'multiline':True]['text':'*
	 * @internal
	 ','line_number':1260,'multiline':True]['text':'*
 * @internal
 ','line_number':1266,'multiline':True]['text':'*
	 * @param stabilized Indicates if the visible lines are probably going to change soon or can be considered stable.
	 * Is true on reveal range and false on scroll.
	 * Tokenizers should tokenize synchronously if stabilized is true.
	 ','line_number':1270,'multiline':True]['text':'*
	 * Prefers the left most position.
	','line_number':1279,'multiline':True]['text':'*
	 * Prefers the right most position.
	','line_number':1284,'multiline':True]['text':'*
	 * No preference.
	','line_number':1289,'multiline':True]['text':'*
	 * If the given position is on injected text, prefers the position left of it.
	','line_number':1294,'multiline':True]['text':'*
	 * If the given position is on injected text, prefers the position right of it.
	','line_number':1299,'multiline':True]['text':'*
 * @internal
 ','line_number':1305,'multiline':True]['text':'*
 * @internal
 ','line_number':1313,'multiline':True]['text':'*
 * @internal
 ','line_number':1321,'multiline':True]['text':'*
 * @internal
 ','line_number':1328,'multiline':True]['text':'*
 * @internal
 *
 * `lineNumber` is 1 based.
 ','line_number':1342,'multiline':True]['text':'*
 * @internal
 ','line_number':1377,'multiline':True]['text':'*
	 * The regex to search for. Always defined.
	 ','line_number':1382,'multiline':True]['text':'*
	 * The word separator classifier.
	 ','line_number':1386,'multiline':True]['text':'*
	 * The simple string to search for (if possible).
	 ','line_number':1390,'multiline':True]['text':'*
 * @internal
 ','line_number':1402,'multiline':True]['text':'*
 * @internal
 ','line_number':1410,'multiline':True]['text':'*
 * @internal
 ','line_number':1423,'multiline':True]['text':'*
 * @internal
 ','line_number':1431,'multiline':True]