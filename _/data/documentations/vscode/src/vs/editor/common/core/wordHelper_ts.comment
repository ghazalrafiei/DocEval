['text':'---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------','line_number':1,'multiline':True]['text':'*
 * Word inside a model.
 ','line_number':12,'multiline':True]['text':'*
	 * The word.
	 ','line_number':16,'multiline':True]['text':'*
	 * The column where the word starts.
	 ','line_number':20,'multiline':True]['text':'*
	 * The column where the word ends.
	 ','line_number':24,'multiline':True]['text':'*
 * Create a word definition regular expression based on default word separators.
 * Optionally provide allowed separators that should be included in words.
 *
 * The default would look like this:
 * /(-?\d*\.\d\w*)|([^\`\~\!\@\#\$\%\^\&\*\(\)\-\=\+\[\{\]\}\\\|\;\:\'\"\,\.\<\>\/\?\s]+)/g
 ','line_number':30,'multiline':True]['text':' catches numbers (including floating numbers) in the first group, and alphanum in the second','line_number':49,'multiline':False]['text':' Ensure the regex has the 'g' flag, otherwise this will loop forever','line_number':99,'multiline':False]['text':' don't throw strings that long at the regexp','line_number':107,'multiline':False]['text':' but use a sub-string in which a word must occur','line_number':108,'multiline':False]['text':' check time budget','line_number':126,'multiline':False]['text':' reset the index at which the regexp should start matching, also know where it','line_number':131,'multiline':False]['text':' should stop so that subsequent search don't repeat previous searches','line_number':132,'multiline':False]['text':' stop: we have something','line_number':138,'multiline':False]['text':' stop: searched at start','line_number':144,'multiline':False]