['text':'---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------','line_number':1,'multiline':True]['text':'*
 * A builder and helper for edit operations for a command.
 ','line_number':20,'multiline':True]['text':'*
	 * Add a new edit operation (a replace operation).
	 * @param range The range to replace (delete). May be empty to represent a simple insert.
	 * @param text The text to replace with. May be null to represent a simple delete.
	 ','line_number':24,'multiline':True]['text':'*
	 * Add a new edit operation (a replace operation).
	 * The inverse edits will be accessible in `ICursorStateComputerData.getInverseEditOperations()`
	 * @param range The range to replace (delete). May be empty to represent a simple insert.
	 * @param text The text to replace with. May be null to represent a simple delete.
	 ','line_number':31,'multiline':True]['text':'*
	 * Track `selection` when applying edit operations.
	 * A best effort will be made to not grow/expand the selection.
	 * An empty selection will clamp to a nearby character.
	 * @param selection The selection to track.
	 * @param trackPreviousOnEmpty If set, and the selection is empty, indicates whether the selection
	 *           should clamp to the previous or the next character.
	 * @return A unique identifier.
	 ','line_number':39,'multiline':True]['text':'*
 * A helper for computing cursor state after a command.
 ','line_number':51,'multiline':True]['text':'*
	 * Get the inverse edit operations of the added edit operations.
	 ','line_number':55,'multiline':True]['text':'*
	 * Get a previously tracked selection.
	 * @param id The unique identifier returned by `trackSelection`.
	 * @return The selection.
	 ','line_number':59,'multiline':True]['text':'*
 * A command that modifies text / cursor state on a model.
 ','line_number':67,'multiline':True]['text':'*
	 * Signal that this command is inserting automatic whitespace that should be trimmed if possible.
	 * @internal
	 ','line_number':72,'multiline':True]['text':'*
	 * Get the edit operations needed to execute this command.
	 * @param model The model the command will execute on.
	 * @param builder A helper to collect the needed edit operations and to track selections.
	 ','line_number':78,'multiline':True]['text':'*
	 * Compute the cursor state after the edit operations were applied.
	 * @param model The model the command has executed on.
	 * @param helper A helper to get inverse edit operations and to get previously tracked selections.
	 * @return The cursor state after the command executed.
	 ','line_number':85,'multiline':True]['text':'*
 * A model for the diff editor.
 ','line_number':94,'multiline':True]['text':'*
	 * Original model.
	 ','line_number':98,'multiline':True]['text':'*
	 * Modified model.
	 ','line_number':102,'multiline':True]['text':'*
 * An event describing that an editor has had its model reset (i.e. `editor.setModel()`).
 ','line_number':114,'multiline':True]['text':'*
	 * The `uri` of the previous model or null.
	 ','line_number':118,'multiline':True]['text':'*
	 * The `uri` of the new model or null.
	 ','line_number':122,'multiline':True]['text':' --- view','line_number':128,'multiline':False]['text':'*
 * A (serializable) state of the cursors.
 ','line_number':166,'multiline':True]['text':'*
 * A (serializable) state of the view.
 ','line_number':174,'multiline':True]['text':'* written by previous versions ','line_number':178,'multiline':True]['text':'* written by previous versions ','line_number':180,'multiline':True]['text':'*
 * A (serializable) state of the code editor.
 ','line_number':186,'multiline':True]['text':'*
 * (Serializable) View state for the diff editor.
 ','line_number':194,'multiline':True]['text':'*
 * An editor view state.
 ','line_number':202,'multiline':True]['text':'*
 * An editor.
 ','line_number':212,'multiline':True]['text':'*
	 * An event emitted when the editor has been disposed.
	 * @event
	 ','line_number':216,'multiline':True]['text':'*
	 * Dispose the editor.
	 ','line_number':222,'multiline':True]['text':'*
	 * Get a unique id for this editor instance.
	 ','line_number':227,'multiline':True]['text':'*
	 * Get the editor type. Please see `EditorType`.
	 * This is to avoid an instanceof check
	 ','line_number':232,'multiline':True]['text':'*
	 * Update the editor's options after the editor has been created.
	 ','line_number':238,'multiline':True]['text':'*
	 * Indicates that the editor becomes visible.
	 * @internal
	 ','line_number':243,'multiline':True]['text':'*
	 * Indicates that the editor becomes hidden.
	 * @internal
	 ','line_number':249,'multiline':True]['text':'*
	 * Instructs the editor to remeasure its container. This method should
	 * be called when the container of the editor gets resized.
	 *
	 * If a dimension is passed in, the passed in value will be used.
	 *
	 * By default, this will also render the editor immediately.
	 * If you prefer to delay rendering to the next animation frame, use postponeRendering == true.
	 ','line_number':255,'multiline':True]['text':'*
	 * Brings browser focus to the editor text
	 ','line_number':266,'multiline':True]['text':'*
	 * Returns true if the text inside this editor is focused (i.e. cursor is blinking).
	 ','line_number':271,'multiline':True]['text':'*
	 * Returns all actions associated with this editor.
	 ','line_number':276,'multiline':True]['text':'*
	 * Saves current view state of the editor in a serializable object.
	 ','line_number':281,'multiline':True]['text':'*
	 * Restores the view state of the editor from a serializable object generated by `saveViewState`.
	 ','line_number':286,'multiline':True]['text':'*
	 * Given a position, returns a column number that takes tab-widths into account.
	 ','line_number':291,'multiline':True]['text':'*
	 * Given a position, returns a column number that takes tab-widths into account.
	 * @internal
	 ','line_number':296,'multiline':True]['text':'*
	 * Returns the primary position of the cursor.
	 ','line_number':302,'multiline':True]['text':'*
	 * Set the primary position of the cursor. This will remove any secondary cursors.
	 * @param position New primary cursor's position
	 * @param source Source of the call that caused the position
	 ','line_number':307,'multiline':True]['text':'*
	 * Scroll vertically as necessary and reveal a line.
	 ','line_number':314,'multiline':True]['text':'*
	 * Scroll vertically as necessary and reveal a line centered vertically.
	 ','line_number':319,'multiline':True]['text':'*
	 * Scroll vertically as necessary and reveal a line centered vertically only if it lies outside the viewport.
	 ','line_number':324,'multiline':True]['text':'*
	 * Scroll vertically as necessary and reveal a line close to the top of the viewport,
	 * optimized for viewing a code definition.
	 ','line_number':329,'multiline':True]['text':'*
	 * Scroll vertically or horizontally as necessary and reveal a position.
	 ','line_number':335,'multiline':True]['text':'*
	 * Scroll vertically or horizontally as necessary and reveal a position centered vertically.
	 ','line_number':340,'multiline':True]['text':'*
	 * Scroll vertically or horizontally as necessary and reveal a position centered vertically only if it lies outside the viewport.
	 ','line_number':345,'multiline':True]['text':'*
	 * Scroll vertically or horizontally as necessary and reveal a position close to the top of the viewport,
	 * optimized for viewing a code definition.
	 ','line_number':350,'multiline':True]['text':'*
	 * Returns the primary selection of the editor.
	 ','line_number':356,'multiline':True]['text':'*
	 * Returns all the selections of the editor.
	 ','line_number':361,'multiline':True]['text':'*
	 * Set the primary selection of the editor. This will remove any secondary cursors.
	 * @param selection The new selection
	 * @param source Source of the call that caused the selection
	 ','line_number':366,'multiline':True]['text':'*
	 * Set the primary selection of the editor. This will remove any secondary cursors.
	 * @param selection The new selection
	 * @param source Source of the call that caused the selection
	 ','line_number':372,'multiline':True]['text':'*
	 * Set the primary selection of the editor. This will remove any secondary cursors.
	 * @param selection The new selection
	 * @param source Source of the call that caused the selection
	 ','line_number':378,'multiline':True]['text':'*
	 * Set the primary selection of the editor. This will remove any secondary cursors.
	 * @param selection The new selection
	 * @param source Source of the call that caused the selection
	 ','line_number':384,'multiline':True]['text':'*
	 * Set the selections for all the cursors of the editor.
	 * Cursors will be removed or added, as necessary.
	 * @param selections The new selection
	 * @param source Source of the call that caused the selection
	 ','line_number':391,'multiline':True]['text':'*
	 * Scroll vertically as necessary and reveal lines.
	 ','line_number':399,'multiline':True]['text':'*
	 * Scroll vertically as necessary and reveal lines centered vertically.
	 ','line_number':404,'multiline':True]['text':'*
	 * Scroll vertically as necessary and reveal lines centered vertically only if it lies outside the viewport.
	 ','line_number':409,'multiline':True]['text':'*
	 * Scroll vertically as necessary and reveal lines close to the top of the viewport,
	 * optimized for viewing a code definition.
	 ','line_number':414,'multiline':True]['text':'*
	 * Scroll vertically or horizontally as necessary and reveal a range.
	 ','line_number':420,'multiline':True]['text':'*
	 * Scroll vertically or horizontally as necessary and reveal a range centered vertically.
	 ','line_number':425,'multiline':True]['text':'*
	 * Scroll vertically or horizontally as necessary and reveal a range at the top of the viewport.
	 ','line_number':430,'multiline':True]['text':'*
	 * Scroll vertically or horizontally as necessary and reveal a range centered vertically only if it lies outside the viewport.
	 ','line_number':435,'multiline':True]['text':'*
	 * Scroll vertically or horizontally as necessary and reveal a range close to the top of the viewport,
	 * optimized for viewing a code definition.
	 ','line_number':440,'multiline':True]['text':'*
	 * Scroll vertically or horizontally as necessary and reveal a range close to the top of the viewport,
	 * optimized for viewing a code definition. Only if it lies outside the viewport.
	 ','line_number':446,'multiline':True]['text':'*
	 * Directly trigger a handler or an editor action.
	 * @param source The source of the call.
	 * @param handlerId The id of the handler or the id of a contribution.
	 * @param payload Extra data to be sent to the handler.
	 ','line_number':452,'multiline':True]['text':'*
	 * Gets the current model attached to this editor.
	 ','line_number':460,'multiline':True]['text':'*
	 * Sets the current model attached to this editor.
	 * If the previous model was created by the editor via the value key in the options
	 * literal object, it will be destroyed. Otherwise, if the previous model was set
	 * via setModel, or the model key in the options literal object, the previous model
	 * will not be destroyed.
	 * It is safe to call setModel(null) to simply detach the current model from the editor.
	 ','line_number':465,'multiline':True]['text':'*
	 * Create a collection of decorations. All decorations added through this collection
	 * will get the ownerId of the editor (meaning they will not show up in other editors).
	 * These decorations will be automatically cleared when the editor's model changes.
	 ','line_number':475,'multiline':True]['text':'*
	 * Change the decorations. All decorations added through this changeAccessor
	 * will get the ownerId of the editor (meaning they will not show up in other
	 * editors).
	 * @see {@link ITextModel.changeDecorations}
	 * @internal
	 ','line_number':482,'multiline':True]['text':'*
 * A diff editor.
 *
 * @internal
 ','line_number':492,'multiline':True]['text':'*
	 * Type the getModel() of IEditor.
	 ','line_number':499,'multiline':True]['text':'*
	 * Get the `original` editor.
	 ','line_number':504,'multiline':True]['text':'*
	 * Get the `modified` editor.
	 ','line_number':509,'multiline':True]['text':'*
 * @internal
 ','line_number':515,'multiline':True]['text':'*
	 * An event that signals that the active editor has changed
	 ','line_number':520,'multiline':True]['text':'*
	 * The active code editor iff any
	 ','line_number':525,'multiline':True]['text':' readonly editors: readonly ICodeEditor[] maybe supported with uris','line_number':529,'multiline':False]['text':'*
 * A collection of decorations
 ','line_number':532,'multiline':True]['text':'*
	 * An event emitted when decorations change in the editor,
	 * but the change is not caused by us setting or clearing the collection.
	 ','line_number':536,'multiline':True]['text':'*
	 * Get the decorations count.
	 ','line_number':541,'multiline':True]['text':'*
	 * Get the range for a decoration.
	 ','line_number':545,'multiline':True]['text':'*
	 * Get all ranges for decorations.
	 ','line_number':549,'multiline':True]['text':'*
	 * Determine if a decoration is in this collection.
	 ','line_number':553,'multiline':True]['text':'*
	 * Replace all previous decorations with `newDecorations`.
	 ','line_number':557,'multiline':True]['text':'*
	 * Append `newDecorations` to this collection.
	 ','line_number':561,'multiline':True]['text':'*
	 * Remove all previous decorations.
	 ','line_number':565,'multiline':True]['text':'*
 * An editor contribution that gets created every time a new editor gets created and gets disposed when the editor gets disposed.
 ','line_number':571,'multiline':True]['text':'*
	 * Dispose this contribution.
	 ','line_number':575,'multiline':True]['text':'*
	 * Store view state.
	 ','line_number':579,'multiline':True]['text':'*
	 * Restore view state.
	 ','line_number':583,'multiline':True]['text':'*
 * A diff editor contribution that gets created every time a new  diffeditor gets created and gets disposed when the diff editor gets disposed.
 * @internal
 ','line_number':589,'multiline':True]['text':'*
	 * Dispose this contribution.
	 ','line_number':594,'multiline':True]['text':'*
 * @internal
 ','line_number':600,'multiline':True]['text':'*
 * @internal
 ','line_number':607,'multiline':True]['text':'*
	 * @deprecated
	 ','line_number':639,'multiline':True]['text':'*
	 * @deprecated
	 ','line_number':643,'multiline':True]['text':'*
	 * @deprecated
	 ','line_number':648,'multiline':True]['text':'*
	 * @deprecated
	 ','line_number':652,'multiline':True]['text':'*
 * @internal
 ','line_number':658,'multiline':True]['text':'*
 * @internal
 ','line_number':684,'multiline':True]['text':'*
 * @internal
 ','line_number':696,'multiline':True]['text':'*
	 * @deprecated
	 ','line_number':700,'multiline':True]['text':'*
	 * @deprecated
	 ','line_number':704,'multiline':True]['text':'*
 * @internal
 ','line_number':710,'multiline':True]['text':'*
 * @internal
 ','line_number':718,'multiline':True]['text':'*
 * The type of the `IEditor`.
 ','line_number':727,'multiline':True]['text':'*
 * Built-in commands.
 * @internal
 ','line_number':735,'multiline':True]['text':'*
 * @internal
 ','line_number':749,'multiline':True]['text':'*
 * @internal
 ','line_number':756,'multiline':True]['text':'*
 * @internal
 ','line_number':764,'multiline':True]['text':'*
 * @internal
 ','line_number':774,'multiline':True]