['text':'---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------','line_number':1,'multiline':True]['text':' for Han and Kana.','line_number':63,'multiline':False]['text':' Initialize CharacterClass.BREAK_IDEOGRAPHIC for these Unicode ranges:','line_number':84,'multiline':False]['text':' 1. CJK Unified Ideographs (0x4E00 -- 0x9FFF)','line_number':85,'multiline':False]['text':' 2. CJK Unified Ideographs Extension A (0x3400 -- 0x4DBF)','line_number':86,'multiline':False]['text':' 3. Hiragana and Katakana (0x3040 -- 0x30FF)','line_number':87,'multiline':False]['text':' Allow for prevIndex to be -1 (for the case where we hit a tab when walking backwards from the first break)','line_number':145,'multiline':False]['text':' initially, we search as much as possible to the right (if it fits)','line_number':159,'multiline':False]['text':' A surrogate pair must always be considered as a single unit, so it is never to be broken','line_number':172,'multiline':False]['text':' check if adding character at `i` will go over the breaking column','line_number':188,'multiline':False]['text':' We need to break at least before character at `i`:','line_number':190,'multiline':False]['text':' we need to advance at least by one character','line_number':195,'multiline':False]['text':' Cannot break at `breakOffset` => reset it if it was set','line_number':201,'multiline':False]['text':' there is no more need to break => stop the outer loop!','line_number':214,'multiline':False]['text':' Add last segment, no need to assign to `lastBreakingOffset` and `lastBreakingOffsetVisibleColumn`','line_number':216,'multiline':False]['text':' must search left','line_number':226,'multiline':False]['text':' cannot determine the width of a tab when going backwards, so we must go forwards','line_number':236,'multiline':False]['text':' A surrogate pair must always be considered as a single unit, so it is never to be broken','line_number':245,'multiline':False]['text':' went too far!','line_number':261,'multiline':False]['text':' A surrogate pair must always be considered as a single unit, so it is never to be broken','line_number':283,'multiline':False]['text':' it is not worth it to break at breakOffset, it just introduces an extra needless line!','line_number':289,'multiline':False]['text':' cannot determine the width of a tab when going backwards, so we must go forwards from the previous break','line_number':296,'multiline':False]['text':' Could not find a good breaking point','line_number':303,'multiline':False]['text':' Make sure that we are advancing (at least one character)','line_number':309,'multiline':False]['text':' A surrogate pair must always be considered as a single unit, so it is never to be broken','line_number':312,'multiline':False]['text':' Doing here some object reuse which ends up helping a huge deal with GC pauses!','line_number':347,'multiline':False]['text':' creating a `LineBreakData` with an invalid `breakOffsetsVisibleColumn` is OK','line_number':375,'multiline':False]['text':' because `breakOffsetsVisibleColumn` will never be used because it contains injected text','line_number':376,'multiline':False]['text':' creating a `LineBreakData` with an invalid `breakOffsetsVisibleColumn` is OK','line_number':385,'multiline':False]['text':' because `breakOffsetsVisibleColumn` will never be used because it contains injected text','line_number':386,'multiline':False]['text':' A surrogate pair must always be considered as a single unit, so it is never to be broken','line_number':407,'multiline':False]['text':' A surrogate pair must always be considered as a single unit, so it is never to be broken','line_number':421,'multiline':False]['text':' check if adding character at `i` will go over the breaking column','line_number':437,'multiline':False]['text':' We need to break at least before character at `i`:','line_number':439,'multiline':False]['text':' Cannot break at `breakOffset`, must break at `i`','line_number':442,'multiline':False]['text':' Add last segment','line_number':462,'multiline':False]['text':' when using `editor.renderControlCharacters`, the substitutions are often wide','line_number':477,'multiline':False]['text':'*
 * Kinsoku Shori : Don't break after a leading character, like an open bracket
 * Kinsoku Shori : Don't break before a trailing character, like a period
 ','line_number':487,'multiline':True]['text':' break at the end of multiple BREAK_AFTER','line_number':495,'multiline':False]['text':' break at the start of multiple BREAK_BEFORE','line_number':496,'multiline':False]['text':' Track existing indent','line_number':508,'multiline':False]['text':' Increase indent of continuation lines, if desired','line_number':515,'multiline':False]['text':' Force sticking to beginning of line if no character would fit except for the indentation','line_number':522,'multiline':False]